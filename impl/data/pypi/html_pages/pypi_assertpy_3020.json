{
  "libtype": "pypi",
  "libname": "assertpy",
  "url": "https://github.com/assertpy/assertpy",
  "html": "<!DOCTYPE html><html  lang=\"en\"    data-color-mode=\"auto\" data-light-theme=\"light\" data-dark-theme=\"dark\"  data-a11y-animated-images=\"system\" data-a11y-link-underlines=\"true\"  >  <head>    <meta charset=\"utf-8\">  <link rel=\"dns-prefetch\" href=\"https://github.githubassets.com\">  <link rel=\"dns-prefetch\" href=\"https://avatars.githubusercontent.com\">  <link rel=\"dns-prefetch\" href=\"https://github-cloud.s3.amazonaws.com\">  <link rel=\"dns-prefetch\" href=\"https://user-images.githubusercontent.com/\">  <link rel=\"preconnect\" href=\"https://github.githubassets.com\" crossorigin>  <link rel=\"preconnect\" href=\"https://avatars.githubusercontent.com\">    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/light-0eace2597ca3.css\" /><link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/dark-a167e256da9c.css\" /><link data-color-theme=\"dark_dimmed\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_dimmed-d11f2cf8009b.css\" /><link data-color-theme=\"dark_high_contrast\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_high_contrast-ea7373db06c8.css\" /><link data-color-theme=\"dark_colorblind\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_colorblind-afa99dcf40f7.css\" /><link data-color-theme=\"light_colorblind\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/light_colorblind-af6c685139ba.css\" /><link data-color-theme=\"light_high_contrast\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/light_high_contrast-578cdbc8a5a9.css\" /><link data-color-theme=\"light_tritanopia\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/light_tritanopia-5cb699a7e247.css\" /><link data-color-theme=\"dark_tritanopia\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_tritanopia-9b32204967c6.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/primer-primitives-2ef2a46b27ee.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/primer-711f412bb361.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/global-4803cd254267.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/github-f4d857cbc96a.css\" />  <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/repository-6247ca238fd4.css\" /><link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/code-6d7b4ef0ea51.css\" />    <script type=\"application/json\" id=\"client-env\">{\"locale\":\"en\",\"featureFlags\":[\"code_vulnerability_scanning\",\"copilot_conversational_ux_history_refs\",\"copilot_chat_attach_knowledge\",\"copilot_chat_knowledge_base_copy\",\"copilot_smell_icebreaker_ux\",\"copilot_implicit_context\",\"docset_management_ui\",\"copilot_chat_settings\",\"failbot_handle_non_errors\",\"geojson_azure_maps\",\"image_metric_tracking\",\"marketing_forms_api_integration_contact_request\",\"marketing_pages_search_explore_provider\",\"turbo_experiment_risky\",\"sample_network_conn_type\",\"no_character_key_shortcuts_in_inputs\",\"custom_inp\",\"remove_child_patch\"]}</script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/wp-runtime-47578fb192fd.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_dompurify_dist_purify_js-6890e890956f.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_stacktrace-parser_dist_stack-trace-parser_esm_js-node_modules_github_bro-a4c183-79f9611c275b.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_hydro-analytics-client_dist_analytics-client_js-node_modules_gith-6a10dd-e66ebda625fb.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_failbot_failbot_ts-479802999bcc.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/environment-fe7570f3bc38.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_selector-observer_dist_index_esm_js-9f960d9b217c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_behaviors_dist_esm_focus-zone_js-086f7a27bac0.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_relative-time-element_dist_index_js-c76945c5961a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_delegated-events_dist_index_js-node_modules_github_details-dialog-elemen-29dc30-a2a71f11a507.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_auto-complete-element_dist_index_js-12366198e7a5.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_text-expander-element_dist_index_js-8a621df59e80.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_filter-input-element_dist_index_js-node_modules_github_remote-inp-b7d8f4-654130b7cde5.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_file-attachment-element_dist_index_js-node_modules_primer_view-co-5dccdf-e5e2b9fa3c0c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/github-elements-e4eda4896b4e.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/element-registry-b99c9d8fad1d.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_catalyst_lib_index_js-node_modules_github_hydro-analytics-client_-978abc0-add939c751ce.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_lit-html_lit-html_js-5b376145beff.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_github_alive-client_dist-bf5aa2-1b562c29ab8e.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_morphdom_dist_morphdom-esm_js-5bff297a06de.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_turbo_dist_turbo_es2017-esm_js-c91f4ad18b62.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_color-convert_index_js-72c9fbde5ad4.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_scroll-anchoring_dist_scro-231ccf-aa129238d13b.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_behaviors_dist_esm_dimensions_js-node_modules_github_jtml_lib_index_js-95b84ee6bc34.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_session-resume_dist_index_js-node_modules_primer_behaviors_dist_e-da6ec6-3f39339c9d98.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_paste-markdown_dist_index_esm_js-node_modules_github_quote-select-67e0dc-1aa35af077a4.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_updatable-content_ts-ee3fc84d7fb0.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_behaviors_task-list_ts-app_assets_modules_github_onfocus_ts-app_ass-421cec-9de4213015af.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_sticky-scroll-into-view_ts-94209c43e6af.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_behaviors_ajax-error_ts-app_assets_modules_github_behaviors_include-467754-f9bd433e9591.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_behaviors_commenting_edit_ts-app_assets_modules_github_behaviors_ht-83c235-9285faa0e011.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_blob-anchor_ts-app_assets_modules_github_filter-sort_ts-app_assets_-c96432-da3733f430b8.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/behaviors-1fb9e5061509.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_delegated-events_dist_index_js-node_modules_github_catalyst_lib_index_js-d0256ebff5cd.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/notifications-global-352d84c6cc82.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_virtualized-list_es_index_js-node_modules_github_template-parts_lib_index_js-878844713bc9.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_delegated-events_dist_inde-c537341-c7f6a41a084c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_ref-selector_ts-b593b93f23f5.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/codespaces-1a8626dd714a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_filter-input-element_dist_index_js-node_modules_github_mini-throt-08ab15-3e0517baca99.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_file-attachment-element_dist_index_js-node_modules_github_mini-th-55cf52-e14cb4b719b4.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/repositories-69068e0899f9.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/code-menu-614feb194539.js\"></script>    <title>GitHub - assertpy/assertpy: Simple assertion library for unit testing in python with a fluent API</title>  <meta name=\"route-pattern\" content=\"/:user_id/:repository\" data-turbo-transient>  <meta name=\"route-controller\" content=\"files\" data-turbo-transient>  <meta name=\"route-action\" content=\"disambiguate\" data-turbo-transient>      <meta name=\"current-catalog-service-hash\" content=\"82c569b93da5c18ed649ebd4c2c79437db4611a6a1373e805a3cb001c64130b7\">  <meta name=\"request-id\" content=\"E880:4338:97C0BD:E07C46:65E77EA1\" data-pjax-transient=\"true\"/><meta name=\"html-safe-nonce\" content=\"fdd9a2d3ddf392ecf68f5a351695c5004f23e84d85c40ae77db30194d9eb93d1\" data-pjax-transient=\"true\"/><meta name=\"visitor-payload\" content=\"eyJyZWZlcnJlciI6IiIsInJlcXVlc3RfaWQiOiJFODgwOjQzMzg6OTdDMEJEOkUwN0M0Njo2NUU3N0VBMSIsInZpc2l0b3JfaWQiOiI1MDIyMTQzMDI5MDcyMDMyMzMiLCJyZWdpb25fZWRnZSI6ImlhZCIsInJlZ2lvbl9yZW5kZXIiOiJpYWQifQ==\" data-pjax-transient=\"true\"/><meta name=\"visitor-hmac\" content=\"82f5d5162514c02c5acb30d5c18529edfaf78d4eeb5fc006eff208ec81c64544\" data-pjax-transient=\"true\"/>    <meta name=\"hovercard-subject-tag\" content=\"repository:28056948\" data-turbo-transient>  <meta name=\"github-keyboard-shortcuts\" content=\"repository,copilot\" data-turbo-transient=\"true\" />    <meta name=\"selected-link\" value=\"repo_source\" data-turbo-transient>  <link rel=\"assets\" href=\"https://github.githubassets.com/\">    <meta name=\"google-site-verification\" content=\"c1kuD-K2HIVF635lypcsWPoD4kilo5-jA_wBFyT4uMY\">  <meta name=\"google-site-verification\" content=\"KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU\">  <meta name=\"google-site-verification\" content=\"ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA\">  <meta name=\"google-site-verification\" content=\"GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc\">  <meta name=\"google-site-verification\" content=\"Apib7-x98H0j5cPqHWwSMm6dNU4GmODRoqxLiDzdx9I\"><meta name=\"octolytics-url\" content=\"https://collector.github.com/github/collect\" />  <meta name=\"analytics-location\" content=\"/&lt;user-name&gt;/&lt;repo-name&gt;\" data-turbo-transient=\"true\" />        <meta name=\"user-login\" content=\"\">      <meta name=\"viewport\" content=\"width=device-width\">          <meta name=\"description\" content=\"Simple assertion library for unit testing in python with a fluent API - assertpy/assertpy\">      <link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/opensearch.xml\" title=\"GitHub\">    <link rel=\"fluid-icon\" href=\"https://github.com/fluidicon.png\" title=\"GitHub\">    <meta property=\"fb:app_id\" content=\"1401488693436528\">    <meta name=\"apple-itunes-app\" content=\"app-id=1477376905, app-argument=https://github.com/assertpy/assertpy\" />      <meta name=\"twitter:image:src\" content=\"https://repository-images.githubusercontent.com/28056948/0330d200-0892-11ea-9470-1cf561aa1157\" /><meta name=\"twitter:site\" content=\"@github\" /><meta name=\"twitter:card\" content=\"summary_large_image\" /><meta name=\"twitter:title\" content=\"GitHub - assertpy/assertpy: Simple assertion library for unit testing in python with a fluent API\" /><meta name=\"twitter:description\" content=\"Simple assertion library for unit testing in python with a fluent API - assertpy/assertpy\" />      <meta property=\"og:image\" content=\"https://repository-images.githubusercontent.com/28056948/0330d200-0892-11ea-9470-1cf561aa1157\" /><meta property=\"og:image:alt\" content=\"Simple assertion library for unit testing in python with a fluent API - assertpy/assertpy\" /><meta property=\"og:site_name\" content=\"GitHub\" /><meta property=\"og:type\" content=\"object\" /><meta property=\"og:title\" content=\"GitHub - assertpy/assertpy: Simple assertion library for unit testing in python with a fluent API\" /><meta property=\"og:url\" content=\"https://github.com/assertpy/assertpy\" /><meta property=\"og:description\" content=\"Simple assertion library for unit testing in python with a fluent API - assertpy/assertpy\" />              <meta name=\"hostname\" content=\"github.com\">        <meta name=\"expected-hostname\" content=\"github.com\">  <meta http-equiv=\"x-pjax-version\" content=\"b9fa4cafade57d606c6dcfafff1d08bd597980af7b9837ed473fdf0cdea8a3bc\" data-turbo-track=\"reload\">  <meta http-equiv=\"x-pjax-csp-version\" content=\"5dcfbec3488c5fd5a334e287ce6a17058b7d4beb91db2d4d184e4d55bbf1d7d7\" data-turbo-track=\"reload\">  <meta http-equiv=\"x-pjax-css-version\" content=\"d33c7c2fcff40783f3002896023f41e2c17ec62b12ddbe7434e2001d743fb853\" data-turbo-track=\"reload\">  <meta http-equiv=\"x-pjax-js-version\" content=\"4ba4a7cc07194c8d5f24291dea4fbc790ffd83ba40beacaf8d0117187b571b4d\" data-turbo-track=\"reload\">  <meta name=\"turbo-cache-control\" content=\"no-preview\" data-turbo-transient=\"\">      <meta data-hydrostats=\"publish\">  <meta name=\"go-import\" content=\"github.com/assertpy/assertpy git https://github.com/assertpy/assertpy.git\">  <meta name=\"octolytics-dimension-user_id\" content=\"57847747\" /><meta name=\"octolytics-dimension-user_login\" content=\"assertpy\" /><meta name=\"octolytics-dimension-repository_id\" content=\"28056948\" /><meta name=\"octolytics-dimension-repository_nwo\" content=\"assertpy/assertpy\" /><meta name=\"octolytics-dimension-repository_public\" content=\"true\" /><meta name=\"octolytics-dimension-repository_is_fork\" content=\"false\" /><meta name=\"octolytics-dimension-repository_network_root_id\" content=\"28056948\" /><meta name=\"octolytics-dimension-repository_network_root_nwo\" content=\"assertpy/assertpy\" />    <link rel=\"canonical\" href=\"https://github.com/assertpy/assertpy\" data-turbo-transient>  <meta name=\"turbo-body-classes\" content=\"logged-out env-production page-responsive\">  <meta name=\"browser-stats-url\" content=\"https://api.github.com/_private/browser/stats\">  <meta name=\"browser-errors-url\" content=\"https://api.github.com/_private/browser/errors\">  <link rel=\"mask-icon\" href=\"https://github.githubassets.com/assets/pinned-octocat-093da3e6fa40.svg\" color=\"#000000\">  <link rel=\"alternate icon\" class=\"js-site-favicon\" type=\"image/png\" href=\"https://github.githubassets.com/favicons/favicon.png\">  <link rel=\"icon\" class=\"js-site-favicon\" type=\"image/svg+xml\" href=\"https://github.githubassets.com/favicons/favicon.svg\"><meta name=\"theme-color\" content=\"#1e2327\"><meta name=\"color-scheme\" content=\"light dark\" />  <link rel=\"manifest\" href=\"/manifest.json\" crossOrigin=\"use-credentials\">  </head>  <body class=\"logged-out env-production page-responsive\" style=\"word-wrap: break-word;\">    <div data-turbo-body class=\"logged-out env-production page-responsive\" style=\"word-wrap: break-word;\">          <div class=\"position-relative js-header-wrapper \">      <a href=\"#start-of-content\" class=\"px-2 py-4 color-bg-accent-emphasis color-fg-on-emphasis show-on-focus js-skip-to-content\">Skip to content</a>      <span data-view-component=\"true\" class=\"progress-pjax-loader Progress position-fixed width-full\">    <span style=\"width: 0%;\" data-view-component=\"true\" class=\"Progress-item progress-pjax-loader-bar left-0 top-0 color-bg-accent-emphasis\"></span></span>              <script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Button_IconButton_js-node_modules_primer_react_lib--23bcad-a89698f38643.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/keyboard-shortcuts-dialog-a23eda2bcf8d.js\"></script><react-partial  partial-name=\"keyboard-shortcuts-dialog\"  data-ssr=\"false\">    <script type=\"application/json\" data-target=\"react-partial.embeddedData\">{\"props\":{}}</script>  <div data-target=\"react-partial.reactRoot\"></div></react-partial>                          <script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_delegated-events_dist_inde-94fd67-99519581d0f8.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/sessions-585a7232e50a.js\"></script><header class=\"Header-old header-logged-out js-details-container Details position-relative f4 py-3\" role=\"banner\" data-color-mode=light data-light-theme=light data-dark-theme=dark>  <button type=\"button\" class=\"Header-backdrop d-lg-none border-0 position-fixed top-0 left-0 width-full height-full js-details-target\" aria-label=\"Toggle navigation\">    <span class=\"d-none\">Toggle navigation</span>  </button>  <div class=\" d-flex flex-column flex-lg-row flex-items-center p-responsive height-full position-relative z-1\">    <div class=\"d-flex flex-justify-between flex-items-center width-full width-lg-auto\">      <a class=\"mr-lg-3 color-fg-inherit flex-order-2\" href=\"https://github.com/\" aria-label=\"Homepage\" data-ga-click=\"(Logged out) Header, go to homepage, icon:logo-wordmark\">        <svg height=\"32\" aria-hidden=\"true\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" data-view-component=\"true\" class=\"octicon octicon-mark-github\">    <path d=\"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z\"></path></svg>      </a>      <div class=\"flex-1\">        <a href=\"/login?return_to=https%3A%2F%2Fgithub.com%2Fassertpy%2Fassertpy\"          class=\"d-inline-block d-lg-none flex-order-1 f5 no-underline border color-border-default rounded-2 px-2 py-1 color-fg-inherit\"          data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/assertpy/assertpy&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"0e5589d7a553269da405effd21e962523b43a2b748e5a421f8a4a46238d1ca06\"          data-ga-click=\"(Logged out) Header, clicked Sign in, text:sign-in\">          Sign in        </a>      </div>      <div class=\"flex-1 flex-order-2 text-right\">        <button aria-label=\"Toggle navigation\" aria-expanded=\"false\" type=\"button\" data-view-component=\"true\" class=\"js-details-target Button--link Button--medium Button d-lg-none color-fg-inherit p-1\">  <span class=\"Button-content\">    <span class=\"Button-label\"><div class=\"HeaderMenu-toggle-bar rounded my-1\"></div>            <div class=\"HeaderMenu-toggle-bar rounded my-1\"></div>            <div class=\"HeaderMenu-toggle-bar rounded my-1\"></div></span>  </span></button>      </div>    </div>    <div class=\"HeaderMenu--logged-out p-responsive height-fit position-lg-relative d-lg-flex flex-column flex-auto pt-7 pb-4 top-0\">      <div class=\"header-menu-wrapper d-flex flex-column flex-self-end flex-lg-row flex-justify-between flex-auto p-3 p-lg-0 rounded rounded-lg-0 mt-3 mt-lg-0\">          <nav class=\"mt-0 px-3 px-lg-0 mb-3 mb-lg-0\" aria-label=\"Global\">            <ul class=\"d-lg-flex list-style-none\">                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">      <button type=\"button\" class=\"HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-3 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target\" aria-expanded=\"false\">        Product        <svg opacity=\"0.5\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-chevron-down HeaderMenu-icon ml-1\">    <path d=\"M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z\"></path></svg>      </button>      <div class=\"HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 py-2 py-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 d-lg-flex dropdown-menu-wide\">          <div class=\"px-lg-4 border-lg-right mb-4 mb-lg-0 pr-lg-7\">            <ul class=\"list-style-none f5\" >                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}\" href=\"/features/actions\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-workflow color-fg-subtle mr-3\">    <path d=\"M1 3a2 2 0 0 1 2-2h6.5a2 2 0 0 1 2 2v6.5a2 2 0 0 1-2 2H7v4.063C7 16.355 7.644 17 8.438 17H12.5v-2.5a2 2 0 0 1 2-2H21a2 2 0 0 1 2 2V21a2 2 0 0 1-2 2h-6.5a2 2 0 0 1-2-2v-2.5H8.437A2.939 2.939 0 0 1 5.5 15.562V11.5H3a2 2 0 0 1-2-2Zm2-.5a.5.5 0 0 0-.5.5v6.5a.5.5 0 0 0 .5.5h6.5a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5ZM14.5 14a.5.5 0 0 0-.5.5V21a.5.5 0 0 0 .5.5H21a.5.5 0 0 0 .5-.5v-6.5a.5.5 0 0 0-.5-.5Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Actions</div>        Automate any workflow      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}\" href=\"/features/packages\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-package color-fg-subtle mr-3\">    <path d=\"M12.876.64V.639l8.25 4.763c.541.313.875.89.875 1.515v9.525a1.75 1.75 0 0 1-.875 1.516l-8.25 4.762a1.748 1.748 0 0 1-1.75 0l-8.25-4.763a1.75 1.75 0 0 1-.875-1.515V6.917c0-.625.334-1.202.875-1.515L11.126.64a1.748 1.748 0 0 1 1.75 0Zm-1 1.298L4.251 6.34l7.75 4.474 7.75-4.474-7.625-4.402a.248.248 0 0 0-.25 0Zm.875 19.123 7.625-4.402a.25.25 0 0 0 .125-.216V7.639l-7.75 4.474ZM3.501 7.64v8.803c0 .09.048.172.125.216l7.625 4.402v-8.947Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Packages</div>        Host and manage packages      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}\" href=\"/features/security\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-shield-check color-fg-subtle mr-3\">    <path d=\"M16.53 9.78a.75.75 0 0 0-1.06-1.06L11 13.19l-1.97-1.97a.75.75 0 0 0-1.06 1.06l2.5 2.5a.75.75 0 0 0 1.06 0l5-5Z\"></path><path d=\"m12.54.637 8.25 2.675A1.75 1.75 0 0 1 22 4.976V10c0 6.19-3.771 10.704-9.401 12.83a1.704 1.704 0 0 1-1.198 0C5.77 20.705 2 16.19 2 10V4.976c0-.758.489-1.43 1.21-1.664L11.46.637a1.748 1.748 0 0 1 1.08 0Zm-.617 1.426-8.25 2.676a.249.249 0 0 0-.173.237V10c0 5.46 3.28 9.483 8.43 11.426a.199.199 0 0 0 .14 0C17.22 19.483 20.5 15.461 20.5 10V4.976a.25.25 0 0 0-.173-.237l-8.25-2.676a.253.253 0 0 0-.154 0Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Security</div>        Find and fix vulnerabilities      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}\" href=\"/features/codespaces\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-codespaces color-fg-subtle mr-3\">    <path d=\"M3.5 3.75C3.5 2.784 4.284 2 5.25 2h13.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 18.75 13H5.25a1.75 1.75 0 0 1-1.75-1.75Zm-2 12c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v4a1.75 1.75 0 0 1-1.75 1.75H3.25a1.75 1.75 0 0 1-1.75-1.75ZM5.25 3.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h13.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Zm-2 12a.25.25 0 0 0-.25.25v4c0 .138.112.25.25.25h17.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25Z\"></path><path d=\"M10 17.75a.75.75 0 0 1 .75-.75h6.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1-.75-.75Zm-4 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Codespaces</div>        Instant dev environments      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}\" href=\"/features/copilot\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-copilot color-fg-subtle mr-3\">    <path d=\"M23.922 16.992c-.861 1.495-5.859 5.023-11.922 5.023-6.063 0-11.061-3.528-11.922-5.023A.641.641 0 0 1 0 16.736v-2.869a.841.841 0 0 1 .053-.22c.372-.935 1.347-2.292 2.605-2.656.167-.429.414-1.055.644-1.517a10.195 10.195 0 0 1-.052-1.086c0-1.331.282-2.499 1.132-3.368.397-.406.89-.717 1.474-.952 1.399-1.136 3.392-2.093 6.122-2.093 2.731 0 4.767.957 6.166 2.093.584.235 1.077.546 1.474.952.85.869 1.132 2.037 1.132 3.368 0 .368-.014.733-.052 1.086.23.462.477 1.088.644 1.517 1.258.364 2.233 1.721 2.605 2.656a.832.832 0 0 1 .053.22v2.869a.641.641 0 0 1-.078.256ZM12.172 11h-.344a4.323 4.323 0 0 1-.355.508C10.703 12.455 9.555 13 7.965 13c-1.725 0-2.989-.359-3.782-1.259a2.005 2.005 0 0 1-.085-.104L4 11.741v6.585c1.435.779 4.514 2.179 8 2.179 3.486 0 6.565-1.4 8-2.179v-6.585l-.098-.104s-.033.045-.085.104c-.793.9-2.057 1.259-3.782 1.259-1.59 0-2.738-.545-3.508-1.492a4.323 4.323 0 0 1-.355-.508h-.016.016Zm.641-2.935c.136 1.057.403 1.913.878 2.497.442.544 1.134.938 2.344.938 1.573 0 2.292-.337 2.657-.751.384-.435.558-1.15.558-2.361 0-1.14-.243-1.847-.705-2.319-.477-.488-1.319-.862-2.824-1.025-1.487-.161-2.192.138-2.533.529-.269.307-.437.808-.438 1.578v.021c0 .265.021.562.063.893Zm-1.626 0c.042-.331.063-.628.063-.894v-.02c-.001-.77-.169-1.271-.438-1.578-.341-.391-1.046-.69-2.533-.529-1.505.163-2.347.537-2.824 1.025-.462.472-.705 1.179-.705 2.319 0 1.211.175 1.926.558 2.361.365.414 1.084.751 2.657.751 1.21 0 1.902-.394 2.344-.938.475-.584.742-1.44.878-2.497Z\"></path><path d=\"M14.5 14.25a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Zm-5 0a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Copilot</div>        Write better code with AI      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}\" href=\"/features/code-review\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-code-review color-fg-subtle mr-3\">    <path d=\"M10.3 6.74a.75.75 0 0 1-.04 1.06l-2.908 2.7 2.908 2.7a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 0 1 1.06.04Zm3.44 1.06a.75.75 0 1 1 1.02-1.1l3.5 3.25a.75.75 0 0 1 0 1.1l-3.5 3.25a.75.75 0 1 1-1.02-1.1l2.908-2.7-2.908-2.7Z\"></path><path d=\"M1.5 4.25c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v12.5a1.75 1.75 0 0 1-1.75 1.75h-9.69l-3.573 3.573A1.458 1.458 0 0 1 5 21.043V18.5H3.25a1.75 1.75 0 0 1-1.75-1.75ZM3.25 4a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h2.5a.75.75 0 0 1 .75.75v3.19l3.72-3.72a.749.749 0 0 1 .53-.22h10a.25.25 0 0 0 .25-.25V4.25a.25.25 0 0 0-.25-.25Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Code review</div>        Manage code changes      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}\" href=\"/features/issues\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-issue-opened color-fg-subtle mr-3\">    <path d=\"M12 1c6.075 0 11 4.925 11 11s-4.925 11-11 11S1 18.075 1 12 5.925 1 12 1ZM2.5 12a9.5 9.5 0 0 0 9.5 9.5 9.5 9.5 0 0 0 9.5-9.5A9.5 9.5 0 0 0 12 2.5 9.5 9.5 0 0 0 2.5 12Zm9.5 2a2 2 0 1 1-.001-3.999A2 2 0 0 1 12 14Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Issues</div>        Plan and track work      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}\" href=\"/features/discussions\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-comment-discussion color-fg-subtle mr-3\">    <path d=\"M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 14.25 14H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 15.543V14H1.75A1.75 1.75 0 0 1 0 12.25v-9.5C0 1.784.784 1 1.75 1ZM1.5 2.75v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Z\"></path><path d=\"M22.5 8.75a.25.25 0 0 0-.25-.25h-3.5a.75.75 0 0 1 0-1.5h3.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 22.25 20H21v1.543a1.457 1.457 0 0 1-2.487 1.03L15.939 20H10.75A1.75 1.75 0 0 1 9 18.25v-1.465a.75.75 0 0 1 1.5 0v1.465c0 .138.112.25.25.25h5.5a.75.75 0 0 1 .53.22l2.72 2.72v-2.19a.75.75 0 0 1 .75-.75h2a.25.25 0 0 0 .25-.25v-9.5Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Discussions</div>        Collaborate outside of code      </div>    </a></li>            </ul>          </div>          <div class=\"px-lg-4\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"product-explore-heading\">Explore</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"product-explore-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to All features&quot;,&quot;label&quot;:&quot;ref_cta:All features;&quot;}\" href=\"/features\">      All features    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Documentation&quot;,&quot;label&quot;:&quot;ref_cta:Documentation;&quot;}\" href=\"https://docs.github.com\">      Documentation    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to GitHub Skills&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Skills;&quot;}\" href=\"https://skills.github.com/\">      GitHub Skills    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Blog&quot;,&quot;label&quot;:&quot;ref_cta:Blog;&quot;}\" href=\"https://github.blog\">      Blog    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>      </div></li>                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">      <button type=\"button\" class=\"HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-3 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target\" aria-expanded=\"false\">        Solutions        <svg opacity=\"0.5\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-chevron-down HeaderMenu-icon ml-1\">    <path d=\"M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z\"></path></svg>      </button>      <div class=\"HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 py-2 py-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 px-lg-4\">          <div class=\"border-bottom pb-3 mb-3\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"solutions-for-heading\">For</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"solutions-for-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Enterprise&quot;,&quot;label&quot;:&quot;ref_cta:Enterprise;&quot;}\" href=\"/enterprise\">      Enterprise    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Teams&quot;,&quot;label&quot;:&quot;ref_cta:Teams;&quot;}\" href=\"/team\">      Teams    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Startups&quot;,&quot;label&quot;:&quot;ref_cta:Startups;&quot;}\" href=\"/enterprise/startups\">      Startups    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Education&quot;,&quot;label&quot;:&quot;ref_cta:Education;&quot;}\" href=\"https://education.github.com\">      Education    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>          <div class=\"border-bottom pb-3 mb-3\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"solutions-by-solution-heading\">By Solution</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"solutions-by-solution-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to CI/CD &amp;amp; Automation&quot;,&quot;label&quot;:&quot;ref_cta:CI/CD &amp;amp; Automation;&quot;}\" href=\"/solutions/ci-cd/\">      CI/CD &amp; Automation    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to DevOps&quot;,&quot;label&quot;:&quot;ref_cta:DevOps;&quot;}\" href=\"/solutions/devops/\">      DevOps    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to DevSecOps&quot;,&quot;label&quot;:&quot;ref_cta:DevSecOps;&quot;}\" href=\"https://resources.github.com/devops/fundamentals/devsecops/\">      DevSecOps    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>          <div class=\"\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"solutions-resources-heading\">Resources</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"solutions-resources-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Learning Pathways&quot;,&quot;label&quot;:&quot;ref_cta:Learning Pathways;&quot;}\" href=\"https://resources.github.com/learn/pathways/\">      Learning Pathways    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to White papers, Ebooks, Webinars&quot;,&quot;label&quot;:&quot;ref_cta:White papers, Ebooks, Webinars;&quot;}\" href=\"https://resources.github.com/\">      White papers, Ebooks, Webinars    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Customer Stories&quot;,&quot;label&quot;:&quot;ref_cta:Customer Stories;&quot;}\" href=\"/customer-stories\">      Customer Stories    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Partners&quot;,&quot;label&quot;:&quot;ref_cta:Partners;&quot;}\" href=\"https://partner.github.com/\">      Partners    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>      </div></li>                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">      <button type=\"button\" class=\"HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-3 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target\" aria-expanded=\"false\">        Open Source        <svg opacity=\"0.5\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-chevron-down HeaderMenu-icon ml-1\">    <path d=\"M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z\"></path></svg>      </button>      <div class=\"HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 py-2 py-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 px-lg-4\">          <div class=\"border-bottom pb-3 mb-3\">            <ul class=\"list-style-none f5\" >                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}\" href=\"/sponsors\">            <div>        <div class=\"color-fg-default h4\">GitHub Sponsors</div>        Fund open source developers      </div>    </a></li>            </ul>          </div>          <div class=\"border-bottom pb-3 mb-3\">            <ul class=\"list-style-none f5\" >                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}\" href=\"/readme\">            <div>        <div class=\"color-fg-default h4\">The ReadME Project</div>        GitHub community articles      </div>    </a></li>            </ul>          </div>          <div class=\"\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"open-source-repositories-heading\">Repositories</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"open-source-repositories-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Topics&quot;,&quot;label&quot;:&quot;ref_cta:Topics;&quot;}\" href=\"/topics\">      Topics    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Trending&quot;,&quot;label&quot;:&quot;ref_cta:Trending;&quot;}\" href=\"/trending\">      Trending    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Collections&quot;,&quot;label&quot;:&quot;ref_cta:Collections;&quot;}\" href=\"/collections\">      Collections    </a></li>            </ul>          </div>      </div></li>                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">    <a class=\"HeaderMenu-link no-underline px-0 px-lg-2 py-3 py-lg-2 d-block d-lg-inline-block\" data-analytics-event=\"{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}\" href=\"/pricing\">Pricing</a></li>            </ul>          </nav>        <div class=\"d-lg-flex flex-items-center mb-3 mb-lg-0 text-center text-lg-left ml-3\" style=\"\">                <qbsearch-input class=\"search-input\" data-scope=\"repo:assertpy/assertpy\" data-custom-scopes-path=\"/search/custom_scopes\" data-delete-custom-scopes-csrf=\"wnFwJTxh9ynwPtZzIrI6_LVNbHHs17DKS0-RDH5vHDr7A1-Gx-ZLL3LL2JV-qO6S8tx9J0FVIAdProzM2WWccQ\" data-max-custom-scopes=\"10\" data-header-redesign-enabled=\"false\" data-initial-value=\"\" data-blackbird-suggestions-path=\"/search/suggestions\" data-jump-to-suggestions-path=\"/_graphql/GetSuggestedNavigationDestinations\" data-current-repository=\"assertpy/assertpy\" data-current-org=\"assertpy\" data-current-owner=\"\" data-logged-in=\"false\" data-copilot-chat-enabled=\"false\" data-blackbird-indexed-repo-csrf=\"<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=A9edNkdE4rlBC4fBSMvcDdgLZsJuTZhccRHbejdVsGGVRJ7uHZSw%2FnxVvbk2De%2BDoxKhlPhhxos4QIZk6UfK176TrKqLPeC3JSiBhZ3hSCEDJMZlCJ9hzNpIXHgoofhrRpHzI%2FBKNPoIPMJvTEcK1g2A4ZzJZ2UhwgdVCDx%2B5RfpiHmNODm3hEHZb45WJqHw%2BEqrWQVRyvHC9pv5aZn3QvDUmpLhjOxiL2QK1SZ1%2FI07iLu%2BDY6G1%2FtuY97DLinT8H4jo7c50P0rc8b%2FgDKTi%2BC9RJ3IhAgMlC0dIhdaNFsTVtSTmKZanric1rEEIe9GSAkHqleqr8XFajxCbxsipeW9ZvVA7u0xUmUIK8tSzwPvxZMBf4kYW7st%2FJJCsT%2FFZ%2F3%2BK1dfeu3djUwU%2ByV%2BoDl18M8U8X7llj7bp%2Fe9yTA1Au876qDaT0Fq4HuLkU0f%2Fq3ppA%2BLI4velqS2T9Skgr9Kjai1SJh97Q3qvgidw7kuzGnH0j503c0y0XKhXC1SQanZepqdoe1WS1LdKN8%3D--2T2yPqS2vkQZEY8%2F--Qx7VhFdcCisGYnQF1RIi1A%3D%3D&quot; />\">  <div    class=\"search-input-container search-with-dialog position-relative d-flex flex-row flex-items-center mr-4 rounded\"    data-action=\"click:qbsearch-input#searchInputContainerClicked\"  >      <button        type=\"button\"        class=\"header-search-button placeholder  input-button form-control d-flex flex-1 flex-self-stretch flex-items-center no-wrap width-full py-0 pl-2 pr-0 text-left border-0 box-shadow-none\"        data-target=\"qbsearch-input.inputButton\"        placeholder=\"Search or jump to...\"        data-hotkey=s,/        autocapitalize=\"off\"        data-action=\"click:qbsearch-input#handleExpand\"      >        <div class=\"mr-2 color-fg-muted\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-search\">    <path d=\"M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z\"></path></svg>        </div>        <span class=\"flex-1\" data-target=\"qbsearch-input.inputButtonText\">Search or jump to...</span>          <div class=\"d-flex\" data-target=\"qbsearch-input.hotkeyIndicator\">            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"20\" aria-hidden=\"true\" class=\"mr-1\"><path fill=\"none\" stroke=\"#979A9C\" opacity=\".4\" d=\"M3.5.5h12c1.7 0 3 1.3 3 3v13c0 1.7-1.3 3-3 3h-12c-1.7 0-3-1.3-3-3v-13c0-1.7 1.3-3 3-3z\"></path><path fill=\"#979A9C\" d=\"M11.8 6L8 15.1h-.9L10.8 6h1z\"></path></svg>          </div>      </button>    <input type=\"hidden\" name=\"type\" class=\"js-site-search-type-field\">    <div class=\"Overlay--hidden \" data-modal-dialog-overlay>  <modal-dialog data-action=\"close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose\" data-target=\"qbsearch-input.searchSuggestionsDialog\" role=\"dialog\" id=\"search-suggestions-dialog\" aria-modal=\"true\" aria-labelledby=\"search-suggestions-dialog-header\" data-view-component=\"true\" class=\"Overlay Overlay--width-large Overlay--height-auto\">      <h1 id=\"search-suggestions-dialog-header\" class=\"sr-only\">Search code, repositories, users, issues, pull requests...</h1>    <div class=\"Overlay-body Overlay-body--paddingNone\">                <div data-view-component=\"true\">        <div class=\"search-suggestions position-fixed width-full color-shadow-large border color-fg-default color-bg-default overflow-hidden d-flex flex-column query-builder-container\"          style=\"border-radius: 12px;\"          data-target=\"qbsearch-input.queryBuilderContainer\"          hidden        >          <!-- '\"` --><!-- </textarea></xmp> --></option></form><form id=\"query-builder-test-form\" action=\"\" accept-charset=\"UTF-8\" method=\"get\">  <query-builder data-target=\"qbsearch-input.queryBuilder\" id=\"query-builder-query-builder-test\" data-filter-key=\":\" data-view-component=\"true\" class=\"QueryBuilder search-query-builder\">    <div class=\"FormControl FormControl--fullWidth\">      <label id=\"query-builder-test-label\" for=\"query-builder-test\" class=\"FormControl-label sr-only\">        Search      </label>      <div        class=\"QueryBuilder-StyledInput width-fit \"        data-target=\"query-builder.styledInput\"      >          <span id=\"query-builder-test-leadingvisual-wrap\" class=\"FormControl-input-leadingVisualWrap QueryBuilder-leadingVisualWrap\">            <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-search FormControl-input-leadingVisual\">    <path d=\"M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z\"></path></svg>          </span>        <div data-target=\"query-builder.styledInputContainer\" class=\"QueryBuilder-StyledInputContainer\">          <div            aria-hidden=\"true\"            class=\"QueryBuilder-StyledInputContent\"            data-target=\"query-builder.styledInputContent\"          ></div>          <div class=\"QueryBuilder-InputWrapper\">            <div aria-hidden=\"true\" class=\"QueryBuilder-Sizer\" data-target=\"query-builder.sizer\"></div>            <input id=\"query-builder-test\" name=\"query-builder-test\" value=\"\" autocomplete=\"off\" type=\"text\" role=\"combobox\" spellcheck=\"false\" aria-expanded=\"false\" aria-describedby=\"validation-356c28cc-41ed-43dc-af53-5ea7f0209f17\" data-target=\"query-builder.input\" data-action=\"          input:query-builder#inputChange          blur:query-builder#inputBlur          keydown:query-builder#inputKeydown          focus:query-builder#inputFocus        \" data-view-component=\"true\" class=\"FormControl-input QueryBuilder-Input FormControl-medium\" />          </div>        </div>          <span class=\"sr-only\" id=\"query-builder-test-clear\">Clear</span>          <button role=\"button\" id=\"query-builder-test-clear-button\" aria-labelledby=\"query-builder-test-clear query-builder-test-label\" data-target=\"query-builder.clearButton\" data-action=\"                click:query-builder#clear                focus:query-builder#clearButtonFocus                blur:query-builder#clearButtonBlur              \" variant=\"small\" hidden=\"hidden\" type=\"button\" data-view-component=\"true\" class=\"Button Button--iconOnly Button--invisible Button--medium mr-1 px-2 py-0 d-flex flex-items-center rounded-1 color-fg-muted\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x-circle-fill Button-visual\">    <path d=\"M2.343 13.657A8 8 0 1 1 13.658 2.343 8 8 0 0 1 2.343 13.657ZM6.03 4.97a.751.751 0 0 0-1.042.018.751.751 0 0 0-.018 1.042L6.94 8 4.97 9.97a.749.749 0 0 0 .326 1.275.749.749 0 0 0 .734-.215L8 9.06l1.97 1.97a.749.749 0 0 0 1.275-.326.749.749 0 0 0-.215-.734L9.06 8l1.97-1.97a.749.749 0 0 0-.326-1.275.749.749 0 0 0-.734.215L8 6.94Z\"></path></svg></button>      </div>      <template id=\"search-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-search\">    <path d=\"M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z\"></path></svg></template><template id=\"code-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code\">    <path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg></template><template id=\"file-code-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-file-code\">    <path d=\"M4 1.75C4 .784 4.784 0 5.75 0h5.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v8.586A1.75 1.75 0 0 1 14.25 15h-9a.75.75 0 0 1 0-1.5h9a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 10 4.25V1.5H5.75a.25.25 0 0 0-.25.25v2.5a.75.75 0 0 1-1.5 0Zm1.72 4.97a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734l1.47-1.47-1.47-1.47a.75.75 0 0 1 0-1.06ZM3.28 7.78 1.81 9.25l1.47 1.47a.751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018l-2-2a.75.75 0 0 1 0-1.06l2-2a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Zm8.22-6.218V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg></template><template id=\"history-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-history\">    <path d=\"m.427 1.927 1.215 1.215a8.002 8.002 0 1 1-1.6 5.685.75.75 0 1 1 1.493-.154 6.5 6.5 0 1 0 1.18-4.458l1.358 1.358A.25.25 0 0 1 3.896 6H.25A.25.25 0 0 1 0 5.75V2.104a.25.25 0 0 1 .427-.177ZM7.75 4a.75.75 0 0 1 .75.75v2.992l2.028.812a.75.75 0 0 1-.557 1.392l-2.5-1A.751.751 0 0 1 7 8.25v-3.5A.75.75 0 0 1 7.75 4Z\"></path></svg></template><template id=\"repo-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo\">    <path d=\"M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.495 2.495 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.486 2.486 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.249.249 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z\"></path></svg></template><template id=\"bookmark-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-bookmark\">    <path d=\"M3 2.75C3 1.784 3.784 1 4.75 1h6.5c.966 0 1.75.784 1.75 1.75v11.5a.75.75 0 0 1-1.227.579L8 11.722l-3.773 3.107A.751.751 0 0 1 3 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.91l3.023-2.489a.75.75 0 0 1 .954 0l3.023 2.49V2.75a.25.25 0 0 0-.25-.25Z\"></path></svg></template><template id=\"plus-circle-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-plus-circle\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm7.25-3.25v2.5h2.5a.75.75 0 0 1 0 1.5h-2.5v2.5a.75.75 0 0 1-1.5 0v-2.5h-2.5a.75.75 0 0 1 0-1.5h2.5v-2.5a.75.75 0 0 1 1.5 0Z\"></path></svg></template><template id=\"circle-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-dot-fill\">    <path d=\"M8 4a4 4 0 1 1 0 8 4 4 0 0 1 0-8Z\"></path></svg></template><template id=\"trash-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-trash\">    <path d=\"M11 1.75V3h2.25a.75.75 0 0 1 0 1.5H2.75a.75.75 0 0 1 0-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75ZM4.496 6.675l.66 6.6a.25.25 0 0 0 .249.225h5.19a.25.25 0 0 0 .249-.225l.66-6.6a.75.75 0 0 1 1.492.149l-.66 6.6A1.748 1.748 0 0 1 10.595 15h-5.19a1.75 1.75 0 0 1-1.741-1.575l-.66-6.6a.75.75 0 1 1 1.492-.15ZM6.5 1.75V3h3V1.75a.25.25 0 0 0-.25-.25h-2.5a.25.25 0 0 0-.25.25Z\"></path></svg></template><template id=\"team-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-people\">    <path d=\"M2 5.5a3.5 3.5 0 1 1 5.898 2.549 5.508 5.508 0 0 1 3.034 4.084.75.75 0 1 1-1.482.235 4 4 0 0 0-7.9 0 .75.75 0 0 1-1.482-.236A5.507 5.507 0 0 1 3.102 8.05 3.493 3.493 0 0 1 2 5.5ZM11 4a3.001 3.001 0 0 1 2.22 5.018 5.01 5.01 0 0 1 2.56 3.012.749.749 0 0 1-.885.954.752.752 0 0 1-.549-.514 3.507 3.507 0 0 0-2.522-2.372.75.75 0 0 1-.574-.73v-.352a.75.75 0 0 1 .416-.672A1.5 1.5 0 0 0 11 5.5.75.75 0 0 1 11 4Zm-5.5-.5a2 2 0 1 0-.001 3.999A2 2 0 0 0 5.5 3.5Z\"></path></svg></template><template id=\"project-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-project\">    <path d=\"M1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25V1.75C0 .784.784 0 1.75 0ZM1.5 1.75v12.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25ZM11.75 3a.75.75 0 0 1 .75.75v7.5a.75.75 0 0 1-1.5 0v-7.5a.75.75 0 0 1 .75-.75Zm-8.25.75a.75.75 0 0 1 1.5 0v5.5a.75.75 0 0 1-1.5 0ZM8 3a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5A.75.75 0 0 1 8 3Z\"></path></svg></template><template id=\"pencil-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-pencil\">    <path d=\"M11.013 1.427a1.75 1.75 0 0 1 2.474 0l1.086 1.086a1.75 1.75 0 0 1 0 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 0 1-.927-.928l.929-3.25c.081-.286.235-.547.445-.758l8.61-8.61Zm.176 4.823L9.75 4.81l-6.286 6.287a.253.253 0 0 0-.064.108l-.558 1.953 1.953-.558a.253.253 0 0 0 .108-.064Zm1.238-3.763a.25.25 0 0 0-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 0 0 0-.354Z\"></path></svg></template><template id=\"copilot-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-copilot\">    <path d=\"M7.998 15.035c-4.562 0-7.873-2.914-7.998-3.749V9.338c.085-.628.677-1.686 1.588-2.065.013-.07.024-.143.036-.218.029-.183.06-.384.126-.612-.201-.508-.254-1.084-.254-1.656 0-.87.128-1.769.693-2.484.579-.733 1.494-1.124 2.724-1.261 1.206-.134 2.262.034 2.944.765.05.053.096.108.139.165.044-.057.094-.112.143-.165.682-.731 1.738-.899 2.944-.765 1.23.137 2.145.528 2.724 1.261.566.715.693 1.614.693 2.484 0 .572-.053 1.148-.254 1.656.066.228.098.429.126.612.012.076.024.148.037.218.924.385 1.522 1.471 1.591 2.095v1.872c0 .766-3.351 3.795-8.002 3.795Zm0-1.485c2.28 0 4.584-1.11 5.002-1.433V7.862l-.023-.116c-.49.21-1.075.291-1.727.291-1.146 0-2.059-.327-2.71-.991A3.222 3.222 0 0 1 8 6.303a3.24 3.24 0 0 1-.544.743c-.65.664-1.563.991-2.71.991-.652 0-1.236-.081-1.727-.291l-.023.116v4.255c.419.323 2.722 1.433 5.002 1.433ZM6.762 2.83c-.193-.206-.637-.413-1.682-.297-1.019.113-1.479.404-1.713.7-.247.312-.369.789-.369 1.554 0 .793.129 1.171.308 1.371.162.181.519.379 1.442.379.853 0 1.339-.235 1.638-.54.315-.322.527-.827.617-1.553.117-.935-.037-1.395-.241-1.614Zm4.155-.297c-1.044-.116-1.488.091-1.681.297-.204.219-.359.679-.242 1.614.091.726.303 1.231.618 1.553.299.305.784.54 1.638.54.922 0 1.28-.198 1.442-.379.179-.2.308-.578.308-1.371 0-.765-.123-1.242-.37-1.554-.233-.296-.693-.587-1.713-.7Z\"></path><path d=\"M6.25 9.037a.75.75 0 0 1 .75.75v1.501a.75.75 0 0 1-1.5 0V9.787a.75.75 0 0 1 .75-.75Zm4.25.75v1.501a.75.75 0 0 1-1.5 0V9.787a.75.75 0 0 1 1.5 0Z\"></path></svg></template><template id=\"workflow-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-workflow\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h3.5C6.216 0 7 .784 7 1.75v3.5A1.75 1.75 0 0 1 5.25 7H4v4a1 1 0 0 0 1 1h4v-1.25C9 9.784 9.784 9 10.75 9h3.5c.966 0 1.75.784 1.75 1.75v3.5A1.75 1.75 0 0 1 14.25 16h-3.5A1.75 1.75 0 0 1 9 14.25v-.75H5A2.5 2.5 0 0 1 2.5 11V7h-.75A1.75 1.75 0 0 1 0 5.25Zm1.75-.25a.25.25 0 0 0-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 0 0 .25-.25v-3.5a.25.25 0 0 0-.25-.25Zm9 9a.25.25 0 0 0-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 0 0 .25-.25v-3.5a.25.25 0 0 0-.25-.25Z\"></path></svg></template><template id=\"book-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-book\">    <path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg></template><template id=\"code-review-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code-review\">    <path d=\"M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 13H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25v-8.5C0 1.784.784 1 1.75 1ZM1.5 2.75v8.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-8.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Zm5.28 1.72a.75.75 0 0 1 0 1.06L5.31 7l1.47 1.47a.751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018l-2-2a.75.75 0 0 1 0-1.06l2-2a.75.75 0 0 1 1.06 0Zm2.44 0a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.69 7 9.22 5.53a.75.75 0 0 1 0-1.06Z\"></path></svg></template><template id=\"codespaces-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-codespaces\">    <path d=\"M0 11.25c0-.966.784-1.75 1.75-1.75h12.5c.966 0 1.75.784 1.75 1.75v3A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25Zm2-9.5C2 .784 2.784 0 3.75 0h8.5C13.216 0 14 .784 14 1.75v5a1.75 1.75 0 0 1-1.75 1.75h-8.5A1.75 1.75 0 0 1 2 6.75Zm1.75-.25a.25.25 0 0 0-.25.25v5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-5a.25.25 0 0 0-.25-.25Zm-2 9.5a.25.25 0 0 0-.25.25v3c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-3a.25.25 0 0 0-.25-.25Z\"></path><path d=\"M7 12.75a.75.75 0 0 1 .75-.75h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1-.75-.75Zm-4 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75Z\"></path></svg></template><template id=\"comment-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-comment\">    <path d=\"M1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 13.25 12H9.06l-2.573 2.573A1.458 1.458 0 0 1 4 13.543V12H2.75A1.75 1.75 0 0 1 1 10.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h4.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path></svg></template><template id=\"comment-discussion-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-comment-discussion\">    <path d=\"M1.75 1h8.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 10.25 10H7.061l-2.574 2.573A1.458 1.458 0 0 1 2 11.543V10h-.25A1.75 1.75 0 0 1 0 8.25v-5.5C0 1.784.784 1 1.75 1ZM1.5 2.75v5.5c0 .138.112.25.25.25h1a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h3.5a.25.25 0 0 0 .25-.25v-5.5a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25Zm13 2a.25.25 0 0 0-.25-.25h-.5a.75.75 0 0 1 0-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 14.25 12H14v1.543a1.458 1.458 0 0 1-2.487 1.03L9.22 12.28a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l2.22 2.22v-2.19a.75.75 0 0 1 .75-.75h1a.25.25 0 0 0 .25-.25Z\"></path></svg></template><template id=\"organization-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-organization\">    <path d=\"M1.75 16A1.75 1.75 0 0 1 0 14.25V1.75C0 .784.784 0 1.75 0h8.5C11.216 0 12 .784 12 1.75v12.5c0 .085-.006.168-.018.25h2.268a.25.25 0 0 0 .25-.25V8.285a.25.25 0 0 0-.111-.208l-1.055-.703a.749.749 0 1 1 .832-1.248l1.055.703c.487.325.779.871.779 1.456v5.965A1.75 1.75 0 0 1 14.25 16h-3.5a.766.766 0 0 1-.197-.026c-.099.017-.2.026-.303.026h-3a.75.75 0 0 1-.75-.75V14h-1v1.25a.75.75 0 0 1-.75.75Zm-.25-1.75c0 .138.112.25.25.25H4v-1.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 .75.75v1.25h2.25a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25ZM3.75 6h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5ZM3 3.75A.75.75 0 0 1 3.75 3h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 3.75Zm4 3A.75.75 0 0 1 7.75 6h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 7 6.75ZM7.75 3h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5ZM3 9.75A.75.75 0 0 1 3.75 9h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 9.75ZM7.75 9h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5Z\"></path></svg></template><template id=\"rocket-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-rocket\">    <path d=\"M14.064 0h.186C15.216 0 16 .784 16 1.75v.186a8.752 8.752 0 0 1-2.564 6.186l-.458.459c-.314.314-.641.616-.979.904v3.207c0 .608-.315 1.172-.833 1.49l-2.774 1.707a.749.749 0 0 1-1.11-.418l-.954-3.102a1.214 1.214 0 0 1-.145-.125L3.754 9.816a1.218 1.218 0 0 1-.124-.145L.528 8.717a.749.749 0 0 1-.418-1.11l1.71-2.774A1.748 1.748 0 0 1 3.31 4h3.204c.288-.338.59-.665.904-.979l.459-.458A8.749 8.749 0 0 1 14.064 0ZM8.938 3.623h-.002l-.458.458c-.76.76-1.437 1.598-2.02 2.5l-1.5 2.317 2.143 2.143 2.317-1.5c.902-.583 1.74-1.26 2.499-2.02l.459-.458a7.25 7.25 0 0 0 2.123-5.127V1.75a.25.25 0 0 0-.25-.25h-.186a7.249 7.249 0 0 0-5.125 2.123ZM3.56 14.56c-.732.732-2.334 1.045-3.005 1.148a.234.234 0 0 1-.201-.064.234.234 0 0 1-.064-.201c.103-.671.416-2.273 1.15-3.003a1.502 1.502 0 1 1 2.12 2.12Zm6.94-3.935c-.088.06-.177.118-.266.175l-2.35 1.521.548 1.783 1.949-1.2a.25.25 0 0 0 .119-.213ZM3.678 8.116 5.2 5.766c.058-.09.117-.178.176-.266H3.309a.25.25 0 0 0-.213.119l-1.2 1.95ZM12 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg></template><template id=\"shield-check-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-shield-check\">    <path d=\"m8.533.133 5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667l5.25-1.68a1.748 1.748 0 0 1 1.066 0Zm-.61 1.429.001.001-5.25 1.68a.251.251 0 0 0-.174.237V7c0 1.36.275 2.666 1.057 3.859.784 1.194 2.121 2.342 4.366 3.298a.196.196 0 0 0 .154 0c2.245-.957 3.582-2.103 4.366-3.297C13.225 9.666 13.5 8.358 13.5 7V3.48a.25.25 0 0 0-.174-.238l-5.25-1.68a.25.25 0 0 0-.153 0ZM11.28 6.28l-3.5 3.5a.75.75 0 0 1-1.06 0l-1.5-1.5a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l.97.97 2.97-2.97a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg></template><template id=\"heart-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-heart\">    <path d=\"m8 14.25.345.666a.75.75 0 0 1-.69 0l-.008-.004-.018-.01a7.152 7.152 0 0 1-.31-.17 22.055 22.055 0 0 1-3.434-2.414C2.045 10.731 0 8.35 0 5.5 0 2.836 2.086 1 4.25 1 5.797 1 7.153 1.802 8 3.02 8.847 1.802 10.203 1 11.75 1 13.914 1 16 2.836 16 5.5c0 2.85-2.045 5.231-3.885 6.818a22.066 22.066 0 0 1-3.744 2.584l-.018.01-.006.003h-.002ZM4.25 2.5c-1.336 0-2.75 1.164-2.75 3 0 2.15 1.58 4.144 3.365 5.682A20.58 20.58 0 0 0 8 13.393a20.58 20.58 0 0 0 3.135-2.211C12.92 9.644 14.5 7.65 14.5 5.5c0-1.836-1.414-3-2.75-3-1.373 0-2.609.986-3.029 2.456a.749.749 0 0 1-1.442 0C6.859 3.486 5.623 2.5 4.25 2.5Z\"></path></svg></template><template id=\"server-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-server\">    <path d=\"M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v4c0 .372-.116.717-.314 1 .198.283.314.628.314 1v4a1.75 1.75 0 0 1-1.75 1.75H1.75A1.75 1.75 0 0 1 0 12.75v-4c0-.358.109-.707.314-1a1.739 1.739 0 0 1-.314-1v-4C0 1.784.784 1 1.75 1ZM1.5 2.75v4c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Zm.25 5.75a.25.25 0 0 0-.25.25v4c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25ZM7 4.75A.75.75 0 0 1 7.75 4h4.5a.75.75 0 0 1 0 1.5h-4.5A.75.75 0 0 1 7 4.75ZM7.75 10h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM3 4.75A.75.75 0 0 1 3.75 4h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 4.75ZM3.75 10h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5Z\"></path></svg></template><template id=\"globe-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-globe\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM5.78 8.75a9.64 9.64 0 0 0 1.363 4.177c.255.426.542.832.857 1.215.245-.296.551-.705.857-1.215A9.64 9.64 0 0 0 10.22 8.75Zm4.44-1.5a9.64 9.64 0 0 0-1.363-4.177c-.307-.51-.612-.919-.857-1.215a9.927 9.927 0 0 0-.857 1.215A9.64 9.64 0 0 0 5.78 7.25Zm-5.944 1.5H1.543a6.507 6.507 0 0 0 4.666 5.5c-.123-.181-.24-.365-.352-.552-.715-1.192-1.437-2.874-1.581-4.948Zm-2.733-1.5h2.733c.144-2.074.866-3.756 1.58-4.948.12-.197.237-.381.353-.552a6.507 6.507 0 0 0-4.666 5.5Zm10.181 1.5c-.144 2.074-.866 3.756-1.58 4.948-.12.197-.237.381-.353.552a6.507 6.507 0 0 0 4.666-5.5Zm2.733-1.5a6.507 6.507 0 0 0-4.666-5.5c.123.181.24.365.353.552.714 1.192 1.436 2.874 1.58 4.948Z\"></path></svg></template><template id=\"issue-opened-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-issue-opened\">    <path d=\"M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path><path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z\"></path></svg></template><template id=\"device-mobile-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-device-mobile\">    <path d=\"M3.75 0h8.5C13.216 0 14 .784 14 1.75v12.5A1.75 1.75 0 0 1 12.25 16h-8.5A1.75 1.75 0 0 1 2 14.25V1.75C2 .784 2.784 0 3.75 0ZM3.5 1.75v12.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25ZM8 13a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg></template><template id=\"package-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-package\">    <path d=\"m8.878.392 5.25 3.045c.54.314.872.89.872 1.514v6.098a1.75 1.75 0 0 1-.872 1.514l-5.25 3.045a1.75 1.75 0 0 1-1.756 0l-5.25-3.045A1.75 1.75 0 0 1 1 11.049V4.951c0-.624.332-1.201.872-1.514L7.122.392a1.75 1.75 0 0 1 1.756 0ZM7.875 1.69l-4.63 2.685L8 7.133l4.755-2.758-4.63-2.685a.248.248 0 0 0-.25 0ZM2.5 5.677v5.372c0 .09.047.171.125.216l4.625 2.683V8.432Zm6.25 8.271 4.625-2.683a.25.25 0 0 0 .125-.216V5.677L8.75 8.432Z\"></path></svg></template><template id=\"credit-card-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-credit-card\">    <path d=\"M10.75 9a.75.75 0 0 0 0 1.5h1.5a.75.75 0 0 0 0-1.5h-1.5Z\"></path><path d=\"M0 3.75C0 2.784.784 2 1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 14H1.75A1.75 1.75 0 0 1 0 12.25ZM14.5 6.5h-13v5.75c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25Zm0-2.75a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25V5h13Z\"></path></svg></template><template id=\"play-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-play\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z\"></path></svg></template><template id=\"gift-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-gift\">    <path d=\"M2 2.75A2.75 2.75 0 0 1 4.75 0c.983 0 1.873.42 2.57 1.232.268.318.497.668.68 1.042.183-.375.411-.725.68-1.044C9.376.42 10.266 0 11.25 0a2.75 2.75 0 0 1 2.45 4h.55c.966 0 1.75.784 1.75 1.75v2c0 .698-.409 1.301-1 1.582v4.918A1.75 1.75 0 0 1 13.25 16H2.75A1.75 1.75 0 0 1 1 14.25V9.332C.409 9.05 0 8.448 0 7.75v-2C0 4.784.784 4 1.75 4h.55c-.192-.375-.3-.8-.3-1.25ZM7.25 9.5H2.5v4.75c0 .138.112.25.25.25h4.5Zm1.5 0v5h4.5a.25.25 0 0 0 .25-.25V9.5Zm0-4V8h5.5a.25.25 0 0 0 .25-.25v-2a.25.25 0 0 0-.25-.25Zm-7 0a.25.25 0 0 0-.25.25v2c0 .138.112.25.25.25h5.5V5.5h-5.5Zm3-4a1.25 1.25 0 0 0 0 2.5h2.309c-.233-.818-.542-1.401-.878-1.793-.43-.502-.915-.707-1.431-.707ZM8.941 4h2.309a1.25 1.25 0 0 0 0-2.5c-.516 0-1 .205-1.43.707-.337.392-.646.975-.879 1.793Z\"></path></svg></template><template id=\"code-square-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code-square\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25Zm7.47 3.97a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L10.69 8 9.22 6.53a.75.75 0 0 1 0-1.06ZM6.78 6.53 5.31 8l1.47 1.47a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215l-2-2a.75.75 0 0 1 0-1.06l2-2a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg></template><template id=\"device-desktop-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-device-desktop\">    <path d=\"M14.25 1c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 14.25 12h-3.727c.099 1.041.52 1.872 1.292 2.757A.752.752 0 0 1 11.25 16h-6.5a.75.75 0 0 1-.565-1.243c.772-.885 1.192-1.716 1.292-2.757H1.75A1.75 1.75 0 0 1 0 10.25v-7.5C0 1.784.784 1 1.75 1ZM1.75 2.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25ZM9.018 12H6.982a5.72 5.72 0 0 1-.765 2.5h3.566a5.72 5.72 0 0 1-.765-2.5Z\"></path></svg></template>        <div class=\"position-relative\">                <ul                  role=\"listbox\"                  class=\"ActionListWrap QueryBuilder-ListWrap\"                  aria-label=\"Suggestions\"                  data-action=\"                    combobox-commit:query-builder#comboboxCommit                    mousedown:query-builder#resultsMousedown                  \"                  data-target=\"query-builder.resultsList\"                  data-persist-list=false                  id=\"query-builder-test-results\"                ></ul>        </div>      <div class=\"FormControl-inlineValidation\" id=\"validation-356c28cc-41ed-43dc-af53-5ea7f0209f17\" hidden=\"hidden\">        <span class=\"FormControl-inlineValidation--visual\">          <svg aria-hidden=\"true\" height=\"12\" viewBox=\"0 0 12 12\" version=\"1.1\" width=\"12\" data-view-component=\"true\" class=\"octicon octicon-alert-fill\">    <path d=\"M4.855.708c.5-.896 1.79-.896 2.29 0l4.675 8.351a1.312 1.312 0 0 1-1.146 1.954H1.33A1.313 1.313 0 0 1 .183 9.058ZM7 7V3H5v4Zm-1 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\"></path></svg>        </span>        <span></span></div>    </div>    <div data-target=\"query-builder.screenReaderFeedback\" aria-live=\"polite\" aria-atomic=\"true\" class=\"sr-only\"></div></query-builder></form>          <div class=\"d-flex flex-row color-fg-muted px-3 text-small color-bg-default search-feedback-prompt\">            <a target=\"_blank\" href=\"https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax\" data-view-component=\"true\" class=\"Link color-fg-accent text-normal ml-2\">              Search syntax tips</a>            <div class=\"d-flex flex-1\"></div>          </div>        </div></div>    </div></modal-dialog></div>  </div>  <div data-action=\"click:qbsearch-input#retract\" class=\"dark-backdrop position-fixed\" hidden data-target=\"qbsearch-input.darkBackdrop\"></div>  <div class=\"color-fg-default\">    <dialog-helper>  <dialog data-target=\"qbsearch-input.feedbackDialog\" data-action=\"close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose\" id=\"feedback-dialog\" aria-modal=\"true\" aria-labelledby=\"feedback-dialog-title\" aria-describedby=\"feedback-dialog-description\" data-view-component=\"true\" class=\"Overlay Overlay-whenNarrow Overlay--size-medium Overlay--motion-scaleFade\">    <div data-view-component=\"true\" class=\"Overlay-header\">  <div class=\"Overlay-headerContentWrap\">    <div class=\"Overlay-titleWrap\">      <h1 class=\"Overlay-title \" id=\"feedback-dialog-title\">        Provide feedback      </h1>    </div>    <div class=\"Overlay-actionWrap\">      <button data-close-dialog-id=\"feedback-dialog\" aria-label=\"Close\" type=\"button\" data-view-component=\"true\" class=\"close-button Overlay-closeButton\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg></button>    </div>  </div></div>      <scrollable-region data-labelled-by=\"feedback-dialog-title\">        <div data-view-component=\"true\" class=\"Overlay-body\">        <!-- '\"` --><!-- </textarea></xmp> --></option></form><form id=\"code-search-feedback-form\" data-turbo=\"false\" action=\"/search/feedback\" accept-charset=\"UTF-8\" method=\"post\"><input type=\"hidden\" data-csrf=\"true\" name=\"authenticity_token\" value=\"+yQuBlk4AZPldxuj/L6slp5XC68AVqQOr9NjdOsTxX49KEWFNSwE2RYq9g6t3j/epfToSnzz+/7EL780RQrD+g==\" />          <p>We read every piece of feedback, and take your input very seriously.</p>          <textarea name=\"feedback\" class=\"form-control width-full mb-2\" style=\"height: 120px\" id=\"feedback\"></textarea>          <input name=\"include_email\" id=\"include_email\" aria-label=\"Include my email address so I can be contacted\" class=\"form-control mr-2\" type=\"checkbox\">          <label for=\"include_email\" style=\"font-weight: normal\">Include my email address so I can be contacted</label></form></div>      </scrollable-region>      <div data-view-component=\"true\" class=\"Overlay-footer Overlay-footer--alignEnd\">          <button data-close-dialog-id=\"feedback-dialog\" type=\"button\" data-view-component=\"true\" class=\"btn\">    Cancel</button>          <button form=\"code-search-feedback-form\" data-action=\"click:qbsearch-input#submitFeedback\" type=\"submit\" data-view-component=\"true\" class=\"btn-primary btn\">    Submit feedback</button></div></dialog></dialog-helper>    <custom-scopes data-target=\"qbsearch-input.customScopesManager\">    <dialog-helper>  <dialog data-target=\"custom-scopes.customScopesModalDialog\" data-action=\"close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose\" id=\"custom-scopes-dialog\" aria-modal=\"true\" aria-labelledby=\"custom-scopes-dialog-title\" aria-describedby=\"custom-scopes-dialog-description\" data-view-component=\"true\" class=\"Overlay Overlay-whenNarrow Overlay--size-medium Overlay--motion-scaleFade\">    <div data-view-component=\"true\" class=\"Overlay-header Overlay-header--divided\">  <div class=\"Overlay-headerContentWrap\">    <div class=\"Overlay-titleWrap\">      <h1 class=\"Overlay-title \" id=\"custom-scopes-dialog-title\">        Saved searches      </h1>        <h2 id=\"custom-scopes-dialog-description\" class=\"Overlay-description\">Use saved searches to filter your results more quickly</h2>    </div>    <div class=\"Overlay-actionWrap\">      <button data-close-dialog-id=\"custom-scopes-dialog\" aria-label=\"Close\" type=\"button\" data-view-component=\"true\" class=\"close-button Overlay-closeButton\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg></button>    </div>  </div></div>      <scrollable-region data-labelled-by=\"custom-scopes-dialog-title\">        <div data-view-component=\"true\" class=\"Overlay-body\">        <div data-target=\"custom-scopes.customScopesModalDialogFlash\"></div>        <div hidden class=\"create-custom-scope-form\" data-target=\"custom-scopes.createCustomScopeForm\">        <!-- '\"` --><!-- </textarea></xmp> --></option></form><form id=\"custom-scopes-dialog-form\" data-turbo=\"false\" action=\"/search/custom_scopes\" accept-charset=\"UTF-8\" method=\"post\"><input type=\"hidden\" data-csrf=\"true\" name=\"authenticity_token\" value=\"FsFjJ6H+90LilgtIzLYQlZKdMSurZwkjy0m8/v4o5Ql11ONXwfDxztr+ug+uStrsFg8fSmfihAiJ0IGh5Ysfjg==\" />          <div data-target=\"custom-scopes.customScopesModalDialogFlash\"></div>          <input type=\"hidden\" id=\"custom_scope_id\" name=\"custom_scope_id\" data-target=\"custom-scopes.customScopesIdField\">          <div class=\"form-group\">            <label for=\"custom_scope_name\">Name</label>            <auto-check src=\"/search/custom_scopes/check_name\" required>              <input                type=\"text\"                name=\"custom_scope_name\"                id=\"custom_scope_name\"                data-target=\"custom-scopes.customScopesNameField\"                class=\"form-control\"                autocomplete=\"off\"                placeholder=\"github-ruby\"                required                maxlength=\"50\">              <input type=\"hidden\" data-csrf=\"true\" value=\"xwhA/e8GHNyhA1A/KpFRTeTQueCjefYSDfR7C2xsxCjnljS4PVnxHU9C/nVlbpfV0dxMHBLxprDB6fQEFyLsiQ==\" />            </auto-check>          </div>          <div class=\"form-group\">            <label for=\"custom_scope_query\">Query</label>            <input              type=\"text\"              name=\"custom_scope_query\"              id=\"custom_scope_query\"              data-target=\"custom-scopes.customScopesQueryField\"              class=\"form-control\"              autocomplete=\"off\"              placeholder=\"(repo:mona/a OR repo:mona/b) AND lang:python\"              required              maxlength=\"500\">          </div>          <p class=\"text-small color-fg-muted\">            To see all available qualifiers, see our <a class=\"Link--inTextBlock\" href=\"https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax\">documentation</a>.          </p></form>        </div>        <div data-target=\"custom-scopes.manageCustomScopesForm\">          <div data-target=\"custom-scopes.list\"></div>        </div></div>      </scrollable-region>      <div data-view-component=\"true\" class=\"Overlay-footer Overlay-footer--alignEnd Overlay-footer--divided\">          <button data-action=\"click:custom-scopes#customScopesCancel\" type=\"button\" data-view-component=\"true\" class=\"btn\">    Cancel</button>          <button form=\"custom-scopes-dialog-form\" data-action=\"click:custom-scopes#customScopesSubmit\" data-target=\"custom-scopes.customScopesSubmitButton\" type=\"submit\" data-view-component=\"true\" class=\"btn-primary btn\">    Create saved search</button></div></dialog></dialog-helper>    </custom-scopes>  </div></qbsearch-input><input type=\"hidden\" data-csrf=\"true\" class=\"js-data-jump-to-suggestions-path-csrf\" value=\"8PHE7+mlqzmSSiporphU/Y7uRqlatnK12/blN7m56Kr6Js+sSrVTSleWrv1Y4VzM2wnswhZNGT65WBR+lwFKjg==\" />          <div class=\"position-relative mr-lg-3 d-lg-inline-block\">            <a href=\"/login?return_to=https%3A%2F%2Fgithub.com%2Fassertpy%2Fassertpy\"              class=\"HeaderMenu-link HeaderMenu-link--sign-in flex-shrink-0 no-underline d-block d-lg-inline-block border border-lg-0 rounded rounded-lg-0 p-2 p-lg-0\"              data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/assertpy/assertpy&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"0e5589d7a553269da405effd21e962523b43a2b748e5a421f8a4a46238d1ca06\"              data-ga-click=\"(Logged out) Header, clicked Sign in, text:sign-in\">              Sign in            </a>          </div>            <a href=\"/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&amp;source=header-repo&amp;source_repo=assertpy%2Fassertpy\"              class=\"HeaderMenu-link HeaderMenu-link--sign-up flex-shrink-0 d-none d-lg-inline-block no-underline border color-border-default rounded px-2 py-1\"              data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/assertpy/assertpy&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"0e5589d7a553269da405effd21e962523b43a2b748e5a421f8a4a46238d1ca06\"              data-analytics-event=\"{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/&lt;user-name&gt;/&lt;repo-name&gt;;ref_cta:Sign up;ref_loc:header logged out&quot;}\"            >              Sign up            </a>        </div>      </div>    </div>  </div></header>      <div hidden=\"hidden\" data-view-component=\"true\" class=\"js-stale-session-flash stale-session-flash flash flash-warn flash-full mb-3\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-alert\">    <path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>        <span class=\"js-stale-session-flash-signed-in\" hidden>You signed in with another tab or window. <a class=\"Link--inTextBlock\" href=\"\">Reload</a> to refresh your session.</span>        <span class=\"js-stale-session-flash-signed-out\" hidden>You signed out in another tab or window. <a class=\"Link--inTextBlock\" href=\"\">Reload</a> to refresh your session.</span>        <span class=\"js-stale-session-flash-switched\" hidden>You switched accounts on another tab or window. <a class=\"Link--inTextBlock\" href=\"\">Reload</a> to refresh your session.</span>    <button id=\"icon-button-e598aa03-515d-4613-bbdf-283c0d06ff25\" aria-labelledby=\"tooltip-0127403f-c1c2-4a1d-a9a8-dc108a03e93d\" type=\"button\" data-view-component=\"true\" class=\"Button Button--iconOnly Button--invisible Button--medium flash-close js-flash-close\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x Button-visual\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg></button><tool-tip id=\"tooltip-0127403f-c1c2-4a1d-a9a8-dc108a03e93d\" for=\"icon-button-e598aa03-515d-4613-bbdf-283c0d06ff25\" popover=\"manual\" data-direction=\"s\" data-type=\"label\" data-view-component=\"true\" class=\"sr-only position-absolute\">Dismiss alert</tool-tip>  </div>    </div>  <div id=\"start-of-content\" class=\"show-on-focus\"></div>    <div id=\"js-flash-container\" data-turbo-replace>  <template class=\"js-flash-template\">    <div class=\"flash flash-full   {{ className }}\">  <div class=\"px-2\" >    <button autofocus class=\"flash-close js-flash-close\" type=\"button\" aria-label=\"Dismiss this message\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg>    </button>    <div aria-atomic=\"true\" role=\"alert\" class=\"js-flash-alert\">            <div>{{ message }}</div>    </div>  </div></div>  </template></div>        <include-fragment class=\"js-notification-shelf-include-fragment\" data-base-src=\"https://github.com/notifications/beta/shelf\"></include-fragment>  <div    class=\"application-main \"    data-commit-hovercards-enabled    data-discussion-hovercards-enabled    data-issue-and-pr-hovercards-enabled  >        <div itemscope itemtype=\"http://schema.org/SoftwareSourceCode\" class=\"\">    <main id=\"js-repo-pjax-container\" >                        <div id=\"repository-container-header\"  class=\"pt-3 hide-full-screen\" style=\"background-color: var(--page-header-bgColor, var(--color-page-header-bg));\" data-turbo-replace>      <div class=\"d-flex flex-wrap flex-justify-end mb-3  px-3 px-md-4 px-lg-5\" style=\"gap: 1rem;\">        <div class=\"flex-auto min-width-0 width-fit mr-3\">              <div class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo color-fg-muted mr-2\">    <path d=\"M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.495 2.495 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.486 2.486 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.249.249 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z\"></path></svg>        <span class=\"author flex-self-stretch\" itemprop=\"author\">      <a class=\"url fn\" rel=\"author\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/assertpy/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"/assertpy\">        assertpy</a>    </span>    <span class=\"mx-1 flex-self-stretch color-fg-muted\">/</span>    <strong itemprop=\"name\" class=\"mr-2 flex-self-stretch\">      <a data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" href=\"/assertpy/assertpy\">assertpy</a>    </strong>    <span></span><span class=\"Label Label--secondary v-align-middle mr-1\">Public</span>  </div>        </div>        <div id=\"repository-details-container\" data-turbo-replace>            <ul class=\"pagehead-actions flex-shrink-0 d-none d-md-inline\" style=\"padding: 2px 0;\">            <li>            <a href=\"/login?return_to=%2Fassertpy%2Fassertpy\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/assertpy/assertpy&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"f0b09a82b731df3dc4f33fe8a2b79c15daa714d56215d12bed8b765a7f3d2647\" aria-label=\"You must be signed in to change notification settings\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-bell mr-2\">    <path d=\"M8 16a2 2 0 0 0 1.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 0 0 8 16ZM3 5a5 5 0 0 1 10 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.519 1.519 0 0 1 13.482 13H2.518a1.516 1.516 0 0 1-1.263-2.36l1.703-2.554A.255.255 0 0 0 3 7.947Zm5-3.5A3.5 3.5 0 0 0 4.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.017.017 0 0 0-.003.01l.001.006c0 .002.002.004.004.006l.006.004.007.001h10.964l.007-.001.006-.004.004-.006.001-.007a.017.017 0 0 0-.003-.01l-1.703-2.554a1.745 1.745 0 0 1-.294-.97V5A3.5 3.5 0 0 0 8 1.5Z\"></path></svg>Notifications</a>  </li>  <li>          <a icon=\"repo-forked\" id=\"fork-button\" href=\"/login?return_to=%2Fassertpy%2Fassertpy\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;repo details fork button&quot;,&quot;repository_id&quot;:28056948,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/assertpy/assertpy&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"c5e256e51c7e570f787a6ef2d374c34df747127328ac5317d7de7b5efe0b0344\" data-view-component=\"true\" class=\"btn-sm btn\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo-forked mr-2\">    <path d=\"M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z\"></path></svg>Fork    <span id=\"repo-network-counter\" data-pjax-replace=\"true\" data-turbo-replace=\"true\" title=\"62\" data-view-component=\"true\" class=\"Counter\">62</span></a>  </li>  <li>        <div data-view-component=\"true\" class=\"BtnGroup d-flex\">        <a href=\"/login?return_to=%2Fassertpy%2Fassertpy\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:28056948,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/assertpy/assertpy&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"c12a010222db6609686b41a77745db3fdb82103cd2c426ce3fdce706e49f37ab\" aria-label=\"You must be signed in to star a repository\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn BtnGroup-item\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star v-align-text-bottom d-inline-block mr-2\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg><span data-view-component=\"true\" class=\"d-inline\">          Star</span>          <span id=\"repo-stars-counter-star\" aria-label=\"460 users starred this repository\" data-singular-suffix=\"user starred this repository\" data-plural-suffix=\"users starred this repository\" data-turbo-replace=\"true\" title=\"460\" data-view-component=\"true\" class=\"Counter js-social-count\">460</span></a>        <button aria-label=\"You must be signed in to add this repository to a list\" type=\"button\" disabled=\"disabled\" data-view-component=\"true\" class=\"btn-sm btn BtnGroup-item px-2\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-triangle-down\">    <path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></button></div>  </li>    <li>            </li></ul>        </div>      </div>        <div id=\"responsive-meta-container\" data-turbo-replace>      <div class=\"d-block d-md-none mb-2 px-3 px-md-4 px-lg-5\">      <p class=\"f4 mb-3 \">        Simple assertion library for unit testing in python with a fluent API      </p>      <div class=\"mb-2 d-flex flex-items-center Link--secondary\">        <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link flex-shrink-0 mr-2\">    <path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg>        <span class=\"flex-auto min-width-0 css-truncate css-truncate-target width-fit\">          <a title=\"https://assertpy.github.io\" role=\"link\" target=\"_blank\" class=\"text-bold\" rel=\"noopener noreferrer\" href=\"https://assertpy.github.io\">assertpy.github.io</a>        </span>      </div>          <h3 class=\"sr-only\">License</h3>  <div class=\"mb-2\">    <a href=\"/assertpy/assertpy/blob/main/LICENSE\"      class=\"Link--muted\"            data-analytics-event=\"{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:license&quot;}\"    >      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-law mr-2\">    <path d=\"M8.75.75V2h.985c.304 0 .603.08.867.231l1.29.736c.038.022.08.033.124.033h2.234a.75.75 0 0 1 0 1.5h-.427l2.111 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.006.005-.01.01-.045.04c-.21.176-.441.327-.686.45C14.556 10.78 13.88 11 13 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L12.178 4.5h-.162c-.305 0-.604-.079-.868-.231l-1.29-.736a.245.245 0 0 0-.124-.033H8.75V13h2.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1 0-1.5h2.5V3.5h-.984a.245.245 0 0 0-.124.033l-1.289.737c-.265.15-.564.23-.869.23h-.162l2.112 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.016.015-.045.04c-.21.176-.441.327-.686.45C4.556 10.78 3.88 11 3 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L2.178 4.5H1.75a.75.75 0 0 1 0-1.5h2.234a.249.249 0 0 0 .125-.033l1.288-.737c.265-.15.564-.23.869-.23h.984V.75a.75.75 0 0 1 1.5 0Zm2.945 8.477c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L13 6.327Zm-10 0c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L3 6.327Z\"></path></svg>     BSD-3-Clause license    </a>  </div>    <div class=\"mb-3\">        <a class=\"Link--secondary no-underline mr-3\" href=\"/assertpy/assertpy/stargazers\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star mr-1\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg>          <span class=\"text-bold\">460</span>          stars</a>        <a class=\"Link--secondary no-underline mr-3\" href=\"/assertpy/assertpy/forks\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo-forked mr-1\">    <path d=\"M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z\"></path></svg>          <span class=\"text-bold\">62</span>          forks</a>          <a class=\"Link--secondary no-underline mr-3 d-inline-block\" href=\"/assertpy/assertpy/branches\">            <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-git-branch mr-1\">    <path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg>            <span>Branches</span></a>          <a class=\"Link--secondary no-underline d-inline-block\" href=\"/assertpy/assertpy/tags\">            <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-tag mr-1\">    <path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg>            <span>Tags</span></a>        <a class=\"Link--secondary no-underline d-inline-block\" href=\"/assertpy/assertpy/activity\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-pulse mr-1\">    <path d=\"M6 2c.306 0 .582.187.696.471L10 10.731l1.304-3.26A.751.751 0 0 1 12 7h3.25a.75.75 0 0 1 0 1.5h-2.742l-1.812 4.528a.751.751 0 0 1-1.392 0L6 4.77 4.696 8.03A.75.75 0 0 1 4 8.5H.75a.75.75 0 0 1 0-1.5h2.742l1.812-4.529A.751.751 0 0 1 6 2Z\"></path></svg>          <span>Activity</span></a>    </div>      <div class=\"d-flex flex-wrap gap-2\">        <div class=\"flex-1\">            <div data-view-component=\"true\" class=\"BtnGroup d-flex\">        <a href=\"/login?return_to=%2Fassertpy%2Fassertpy\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:28056948,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/assertpy/assertpy&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"c12a010222db6609686b41a77745db3fdb82103cd2c426ce3fdce706e49f37ab\" aria-label=\"You must be signed in to star a repository\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn btn-block BtnGroup-item\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star v-align-text-bottom d-inline-block mr-2\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg><span data-view-component=\"true\" class=\"d-inline\">          Star</span></a>        <button aria-label=\"You must be signed in to add this repository to a list\" type=\"button\" disabled=\"disabled\" data-view-component=\"true\" class=\"btn-sm btn BtnGroup-item px-2\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-triangle-down\">    <path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></button></div>        </div>        <div class=\"flex-1\">                <a href=\"/login?return_to=%2Fassertpy%2Fassertpy\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/assertpy/assertpy&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"f0b09a82b731df3dc4f33fe8a2b79c15daa714d56215d12bed8b765a7f3d2647\" aria-label=\"You must be signed in to change notification settings\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn btn-block\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-bell mr-2\">    <path d=\"M8 16a2 2 0 0 0 1.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 0 0 8 16ZM3 5a5 5 0 0 1 10 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.519 1.519 0 0 1 13.482 13H2.518a1.516 1.516 0 0 1-1.263-2.36l1.703-2.554A.255.255 0 0 0 3 7.947Zm5-3.5A3.5 3.5 0 0 0 4.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.017.017 0 0 0-.003.01l.001.006c0 .002.002.004.004.006l.006.004.007.001h10.964l.007-.001.006-.004.004-.006.001-.007a.017.017 0 0 0-.003-.01l-1.703-2.554a1.745 1.745 0 0 1-.294-.97V5A3.5 3.5 0 0 0 8 1.5Z\"></path></svg>Notifications</a>        </div>          <span>                      </span>      </div>  </div></div>          <nav data-pjax=\"#js-repo-pjax-container\" aria-label=\"Repository\" data-view-component=\"true\" class=\"js-repo-nav js-sidenav-container-pjax js-responsive-underlinenav overflow-hidden UnderlineNav px-3 px-md-4 px-lg-5\">  <ul data-view-component=\"true\" class=\"UnderlineNav-body list-style-none\">      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"code-tab\" href=\"/assertpy/assertpy\" data-tab-item=\"i0code-tab\" data-selected-links=\"repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments repo_attestations /assertpy/assertpy\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g c\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Code&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" aria-current=\"page\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item selected\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg>        <span data-content=\"Code\">Code</span>          <span id=\"code-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"issues-tab\" href=\"/assertpy/assertpy/issues\" data-tab-item=\"i1issues-tab\" data-selected-links=\"repo_issues repo_labels repo_milestones /assertpy/assertpy/issues\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g i\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Issues&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-issue-opened UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path><path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z\"></path></svg>        <span data-content=\"Issues\">Issues</span>          <span id=\"issues-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"16\" data-view-component=\"true\" class=\"Counter\">16</span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"pull-requests-tab\" href=\"/assertpy/assertpy/pulls\" data-tab-item=\"i2pull-requests-tab\" data-selected-links=\"repo_pulls checks /assertpy/assertpy/pulls\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g p\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Pull requests&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-git-pull-request UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M1.5 3.25a2.25 2.25 0 1 1 3 2.122v5.256a2.251 2.251 0 1 1-1.5 0V5.372A2.25 2.25 0 0 1 1.5 3.25Zm5.677-.177L9.573.677A.25.25 0 0 1 10 .854V2.5h1A2.5 2.5 0 0 1 13.5 5v5.628a2.251 2.251 0 1 1-1.5 0V5a1 1 0 0 0-1-1h-1v1.646a.25.25 0 0 1-.427.177L7.177 3.427a.25.25 0 0 1 0-.354ZM3.75 2.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm0 9.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm8.25.75a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Z\"></path></svg>        <span data-content=\"Pull requests\">Pull requests</span>          <span id=\"pull-requests-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"2\" data-view-component=\"true\" class=\"Counter\">2</span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"actions-tab\" href=\"/assertpy/assertpy/actions\" data-tab-item=\"i3actions-tab\" data-selected-links=\"repo_actions /assertpy/assertpy/actions\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g a\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Actions&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-play UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z\"></path></svg>        <span data-content=\"Actions\">Actions</span>          <span id=\"actions-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"projects-tab\" href=\"/assertpy/assertpy/projects\" data-tab-item=\"i4projects-tab\" data-selected-links=\"repo_projects new_repo_project repo_project /assertpy/assertpy/projects\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g b\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Projects&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-table UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25ZM6.5 6.5v8h7.75a.25.25 0 0 0 .25-.25V6.5Zm8-1.5V1.75a.25.25 0 0 0-.25-.25H6.5V5Zm-13 1.5v7.75c0 .138.112.25.25.25H5v-8ZM5 5V1.5H1.75a.25.25 0 0 0-.25.25V5Z\"></path></svg>        <span data-content=\"Projects\">Projects</span>          <span id=\"projects-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"0\" hidden=\"hidden\" data-view-component=\"true\" class=\"Counter\">0</span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"wiki-tab\" href=\"/assertpy/assertpy/wiki\" data-tab-item=\"i5wiki-tab\" data-selected-links=\"repo_wiki /assertpy/assertpy/wiki\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g w\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Wiki&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-book UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg>        <span data-content=\"Wiki\">Wiki</span>          <span id=\"wiki-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"security-tab\" href=\"/assertpy/assertpy/security\" data-tab-item=\"i6security-tab\" data-selected-links=\"security overview alerts policy token_scanning code_scanning /assertpy/assertpy/security\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g s\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Security&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-shield UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M7.467.133a1.748 1.748 0 0 1 1.066 0l5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667Zm.61 1.429a.25.25 0 0 0-.153 0l-5.25 1.68a.25.25 0 0 0-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.196.196 0 0 0 .154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.251.251 0 0 0-.174-.237l-5.25-1.68ZM8.75 4.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 1.5 0ZM9 10.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>        <span data-content=\"Security\">Security</span>          <include-fragment src=\"/assertpy/assertpy/security/overall-count\" accept=\"text/fragment+html\"></include-fragment>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"insights-tab\" href=\"/assertpy/assertpy/pulse\" data-tab-item=\"i7insights-tab\" data-selected-links=\"repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /assertpy/assertpy/pulse\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Insights&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-graph UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M1.5 1.75V13.5h13.75a.75.75 0 0 1 0 1.5H.75a.75.75 0 0 1-.75-.75V1.75a.75.75 0 0 1 1.5 0Zm14.28 2.53-5.25 5.25a.75.75 0 0 1-1.06 0L7 7.06 4.28 9.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.25-3.25a.75.75 0 0 1 1.06 0L10 7.94l4.72-4.72a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg>        <span data-content=\"Insights\">Insights</span>          <span id=\"insights-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li></ul>    <div style=\"visibility:hidden;\" data-view-component=\"true\" class=\"UnderlineNav-actions js-responsive-underlinenav-overflow position-absolute pr-3 pr-md-4 pr-lg-5 right-0\">      <action-menu data-select-variant=\"none\" data-view-component=\"true\">  <focus-group direction=\"vertical\" mnemonics retain>    <button id=\"action-menu-b68cca65-0d8b-4255-9d25-9c77ac39d58a-button\" popovertarget=\"action-menu-b68cca65-0d8b-4255-9d25-9c77ac39d58a-overlay\" aria-controls=\"action-menu-b68cca65-0d8b-4255-9d25-9c77ac39d58a-list\" aria-haspopup=\"true\" aria-labelledby=\"tooltip-d696a8f5-423d-4f52-a693-67a6736f90ad\" type=\"button\" data-view-component=\"true\" class=\"Button Button--iconOnly Button--secondary Button--medium UnderlineNav-item\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-kebab-horizontal Button-visual\">    <path d=\"M8 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Zm13 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path></svg></button><tool-tip id=\"tooltip-d696a8f5-423d-4f52-a693-67a6736f90ad\" for=\"action-menu-b68cca65-0d8b-4255-9d25-9c77ac39d58a-button\" popover=\"manual\" data-direction=\"s\" data-type=\"label\" data-view-component=\"true\" class=\"sr-only position-absolute\">Additional navigation options</tool-tip><anchored-position id=\"action-menu-b68cca65-0d8b-4255-9d25-9c77ac39d58a-overlay\" anchor=\"action-menu-b68cca65-0d8b-4255-9d25-9c77ac39d58a-button\" align=\"start\" side=\"outside-bottom\" anchor-offset=\"normal\" popover=\"auto\" data-view-component=\"true\">  <div data-view-component=\"true\" class=\"Overlay Overlay--size-auto\">          <div data-view-component=\"true\" class=\"Overlay-body Overlay-body--paddingNone\">          <div data-view-component=\"true\">  <ul aria-labelledby=\"action-menu-b68cca65-0d8b-4255-9d25-9c77ac39d58a-button\" id=\"action-menu-b68cca65-0d8b-4255-9d25-9c77ac39d58a-list\" role=\"menu\" data-view-component=\"true\" class=\"ActionListWrap--inset ActionListWrap\">      <li hidden=\"hidden\" data-menu-item=\"i0code-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-7bfc0d3f-80ea-4cdc-8558-5416a5d28fd0\" href=\"/assertpy/assertpy\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code\">    <path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Code</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i1issues-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-bd40f12f-aae3-4ebb-b6d9-dbebe48c27fb\" href=\"/assertpy/assertpy/issues\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-issue-opened\">    <path d=\"M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path><path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Issues</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i2pull-requests-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-8def0d5e-4149-418a-829f-64937c383eca\" href=\"/assertpy/assertpy/pulls\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-git-pull-request\">    <path d=\"M1.5 3.25a2.25 2.25 0 1 1 3 2.122v5.256a2.251 2.251 0 1 1-1.5 0V5.372A2.25 2.25 0 0 1 1.5 3.25Zm5.677-.177L9.573.677A.25.25 0 0 1 10 .854V2.5h1A2.5 2.5 0 0 1 13.5 5v5.628a2.251 2.251 0 1 1-1.5 0V5a1 1 0 0 0-1-1h-1v1.646a.25.25 0 0 1-.427.177L7.177 3.427a.25.25 0 0 1 0-.354ZM3.75 2.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm0 9.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm8.25.75a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Pull requests</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i3actions-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-085590d9-ad95-48b8-b62d-3a4d00dc1c18\" href=\"/assertpy/assertpy/actions\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-play\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Actions</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i4projects-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-55f46ce8-825e-4183-bcaf-5f75c6038ad5\" href=\"/assertpy/assertpy/projects\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-table\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25ZM6.5 6.5v8h7.75a.25.25 0 0 0 .25-.25V6.5Zm8-1.5V1.75a.25.25 0 0 0-.25-.25H6.5V5Zm-13 1.5v7.75c0 .138.112.25.25.25H5v-8ZM5 5V1.5H1.75a.25.25 0 0 0-.25.25V5Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Projects</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i5wiki-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-bd816f9d-1ee8-40bf-9128-9e4e62d2fa02\" href=\"/assertpy/assertpy/wiki\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-book\">    <path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Wiki</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i6security-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-fd6d02d5-f792-4889-a094-e0cbf35db07b\" href=\"/assertpy/assertpy/security\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-shield\">    <path d=\"M7.467.133a1.748 1.748 0 0 1 1.066 0l5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667Zm.61 1.429a.25.25 0 0 0-.153 0l-5.25 1.68a.25.25 0 0 0-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.196.196 0 0 0 .154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.251.251 0 0 0-.174-.237l-5.25-1.68ZM8.75 4.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 1.5 0ZM9 10.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Security</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i7insights-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-d0bd1537-8cd6-4a74-a139-c0d1e3fda3b6\" href=\"/assertpy/assertpy/pulse\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-graph\">    <path d=\"M1.5 1.75V13.5h13.75a.75.75 0 0 1 0 1.5H.75a.75.75 0 0 1-.75-.75V1.75a.75.75 0 0 1 1.5 0Zm14.28 2.53-5.25 5.25a.75.75 0 0 1-1.06 0L7 7.06 4.28 9.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.25-3.25a.75.75 0 0 1 1.06 0L10 7.94l4.72-4.72a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Insights</span></a>    </li></ul>  </div></div>      </div></anchored-position>  </focus-group></action-menu></div></nav>  </div>  <turbo-frame id=\"repo-content-turbo-frame\" target=\"_top\" data-turbo-action=\"advance\" class=\"\">    <div id=\"repo-content-pjax-container\" class=\"repository-content \" >                <h1 class='sr-only'>assertpy/assertpy</h1>  <div class=\"clearfix container-xl px-md-4 px-lg-5 px-3\">    <div>  <div id=\"spoof-warning\" class=\"mt-0 pb-3\" hidden aria-hidden>  <div data-view-component=\"true\" class=\"flash flash-warn mt-0 clearfix\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-alert float-left mt-1\">    <path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>      <div class=\"overflow-hidden\">This commit does not belong to any branch on this repository, and may belong to a fork outside of the repository.</div>  </div></div>  <include-fragment src=\"/assertpy/assertpy/spoofed_commit_check/e0e96cfbb962913a47ef2262e03595ebfbc6e045\" data-test-selector=\"spoofed-commit-check\"></include-fragment>  <div style=\"max-width: 100%\" data-view-component=\"true\" class=\"Layout Layout--flowRow-until-md react-repos-overview-margin Layout--sidebarPosition-end Layout--sidebarPosition-flowRow-end\">  <div data-view-component=\"true\" class=\"Layout-main\">        <script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/react-lib-1fbfc5be2c18.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_octicons-react_dist_index_esm_js-node_modules_primer_react_lib-es-2e8e7c-adc8451a70cf.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Box_Box_js-8f8c5e2a2cbf.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Button_Button_js-67fe00b5266a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_ActionList_index_js-2dd4d13d3ae6.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Overlay_Overlay_js-node_modules_primer_react_lib-es-fa1130-829932cf63db.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Text_Text_js-node_modules_primer_react_lib-esm_Text-85a14b-236dc9716ad0.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_ActionMenu_ActionMenu_js-eaf74522e470.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_react-router-dom_dist_index_js-3b41341d50fe.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Dialog_js-node_modules_primer_react_lib-esm_Label_L-857e1c-77794958a54a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_UnderlineNav_index_js-89fa5806aa3c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_AvatarStack_AvatarStack_js-node_modules_primer_reac-e445e7-175b51e43dcc.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_react-core_create-browser-history_ts-ui_packages_react-core_AppContextProvider_ts-809ab9-bf008735d0bb.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_paths_index_ts-7137b25aa38b.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_ref-selector_RefSelector_tsx-dbbdef4348e2.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_commit-attribution_index_ts-ui_packages_commit-checks-status_index_ts-ui_packages-ffbe33-4c4ddf7d268d.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_react-code-view_components_directory_DirectoryContent_index_ts-app_assets_-1fd1f5-c96303590595.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/repos-overview-523b8f59ec33.js\"></script><react-partial  partial-name=\"repos-overview\"  data-ssr=\"true\">    <script type=\"application/json\" data-target=\"react-partial.embeddedData\">{\"props\":{\"initialPayload\":{\"allShortcutsEnabled\":false,\"path\":\"/\",\"repo\":{\"id\":28056948,\"defaultBranch\":\"main\",\"name\":\"assertpy\",\"ownerLogin\":\"assertpy\",\"currentUserCanPush\":false,\"isFork\":false,\"isEmpty\":false,\"createdAt\":\"2014-12-15T21:24:51.000Z\",\"ownerAvatar\":\"https://avatars.githubusercontent.com/u/57847747?v=4\",\"public\":true,\"private\":false,\"isOrgOwned\":true},\"currentUser\":null,\"refInfo\":{\"name\":\"main\",\"listCacheKey\":\"v0:1629643300.9289632\",\"canEdit\":false,\"refType\":\"branch\",\"currentOid\":\"e0e96cfbb962913a47ef2262e03595ebfbc6e045\"},\"tree\":{\"items\":[{\"name\":\"assertpy\",\"path\":\"assertpy\",\"contentType\":\"directory\"},{\"name\":\"docs\",\"path\":\"docs\",\"contentType\":\"directory\"},{\"name\":\"tests\",\"path\":\"tests\",\"contentType\":\"directory\"},{\"name\":\".coveragerc\",\"path\":\".coveragerc\",\"contentType\":\"file\"},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"contentType\":\"file\"},{\"name\":\".travis.yml\",\"path\":\".travis.yml\",\"contentType\":\"file\"},{\"name\":\"CONTRIBUTING.md\",\"path\":\"CONTRIBUTING.md\",\"contentType\":\"file\"},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"contentType\":\"file\"},{\"name\":\"MANIFEST.in\",\"path\":\"MANIFEST.in\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"README.md\",\"contentType\":\"file\"},{\"name\":\"setup.cfg\",\"path\":\"setup.cfg\",\"contentType\":\"file\"},{\"name\":\"setup.py\",\"path\":\"setup.py\",\"contentType\":\"file\"}],\"templateDirectorySuggestionUrl\":null,\"readme\":null,\"totalCount\":12,\"showBranchInfobar\":false},\"fileTree\":null,\"fileTreeProcessingTime\":null,\"foldersToFetch\":[],\"treeExpanded\":false,\"symbolsExpanded\":false,\"isOverview\":true,\"overview\":{\"banners\":{\"shouldRecommendReadme\":false,\"isPersonalRepo\":false,\"showUseActionBanner\":false,\"actionSlug\":null,\"actionId\":null,\"showProtectBranchBanner\":false,\"recentlyTouchedDataChannel\":null,\"publishBannersInfo\":{\"dismissActionNoticePath\":\"/settings/dismiss-notice/publish_action_from_repo\",\"releasePath\":\"/assertpy/assertpy/releases/new?marketplace=true\",\"showPublishActionBanner\":false},\"interactionLimitBanner\":null,\"showInvitationBanner\":false,\"inviterName\":null},\"codeButton\":{\"contactPath\":\"/contact\",\"isEnterprise\":false,\"local\":{\"protocolInfo\":{\"httpAvailable\":true,\"sshAvailable\":null,\"httpUrl\":\"https://github.com/assertpy/assertpy.git\",\"showCloneWarning\":null,\"sshUrl\":null,\"sshCertificatesRequired\":null,\"sshCertificatesAvailable\":null,\"ghCliUrl\":\"gh repo clone assertpy/assertpy\",\"defaultProtocol\":\"http\",\"newSshKeyUrl\":\"/settings/ssh/new\",\"setProtocolPath\":\"/users/set_protocol\"},\"platformInfo\":{\"cloneUrl\":\"https://desktop.github.com\",\"showVisualStudioCloneButton\":false,\"visualStudioCloneUrl\":\"https://windows.github.com\",\"showXcodeCloneButton\":false,\"xcodeCloneUrl\":\"https://developer.apple.com\",\"zipballUrl\":\"/assertpy/assertpy/archive/refs/heads/main.zip\"}},\"newCodespacePath\":\"/codespaces/new?hide_repo_select=true\\u0026repo=28056948\"},\"popovers\":{\"rename\":null,\"renamedParentRepo\":null},\"commitCount\":\"329\",\"overviewFiles\":[{\"displayName\":\"README.md\",\"repoName\":\"assertpy\",\"refName\":\"main\",\"path\":\"README.md\",\"preferredFileType\":\"readme\",\"tabName\":\"README\",\"richText\":\"\\u003carticle class=\\\"markdown-body entry-content container-lg\\\" itemprop=\\\"text\\\"\\u003e\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch1 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eassertpy\\u003c/h1\\u003e\\u003ca id=\\\"user-content-assertpy\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: assertpy\\\" href=\\\"#assertpy\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSimple assertions library for unit testing in Python with a nice fluent API.  Supports both Python 2 and 3.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ca href=\\\"https://travis-ci.org/assertpy/assertpy\\\" rel=\\\"nofollow\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/f03c8141f6b036a4316894be5419583d002a169a29b64d39d95fe4eb114f4506/68747470733a2f2f7472617669732d63692e6f72672f61737365727470792f61737365727470792e7376673f6272616e63683d6d61696e\\\" alt=\\\"Build Status\\\" data-canonical-src=\\\"https://travis-ci.org/assertpy/assertpy.svg?branch=main\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\n\\u003ca href=\\\"https://coveralls.io/github/assertpy/assertpy?branch=main\\\" rel=\\\"nofollow\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/7a84a5c3aaf4939025bc1612f2d50424d18e97a786b03f2971c63da92e1c5cca/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f61737365727470792f61737365727470792f62616467652e7376673f6272616e63683d6d61696e\\\" alt=\\\"Coverage Status\\\" data-canonical-src=\\\"https://coveralls.io/repos/github/assertpy/assertpy/badge.svg?branch=main\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eUsage\\u003c/h2\\u003e\\u003ca id=\\\"user-content-usage\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Usage\\\" href=\\\"#usage\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eJust import the \\u003ccode\\u003eassert_that\\u003c/code\\u003e function, and away you go...\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from assertpy import assert_that\\n\\ndef test_something():\\n    assert_that(1 + 2).is_equal_to(3)\\n    assert_that('foobar').is_length(6).starts_with('foo').ends_with('bar')\\n    assert_that(['a', 'b', 'c']).contains('a').does_not_contain('x')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassertpy\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassert_that\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003etest_something\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e+\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foobar'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e6\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003estarts_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eends_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'bar'\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eOf course, \\u003ccode\\u003eassertpy\\u003c/code\\u003e works best with a python test runner like \\u003ca href=\\\"http://pytest.org/\\\" rel=\\\"nofollow\\\"\\u003epytest\\u003c/a\\u003e (our favorite) or \\u003ca href=\\\"http://nose.readthedocs.org/\\\" rel=\\\"nofollow\\\"\\u003eNose\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eInstallation\\u003c/h2\\u003e\\u003ca id=\\\"user-content-installation\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Installation\\\" href=\\\"#installation\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eInstall via pip\\u003c/h3\\u003e\\u003ca id=\\\"user-content-install-via-pip\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Install via pip\\\" href=\\\"#install-via-pip\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ca href=\\\"https://pypi.org/project/assertpy/\\\" rel=\\\"nofollow\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/2fb8b389e6b417bd1f142a79436bee9bfac3805f95388f69cf36fd43032bacc5/68747470733a2f2f62616467652e667572792e696f2f70792f61737365727470792e737667\\\" alt=\\\"PyPI Badge\\\" data-canonical-src=\\\"https://badge.fury.io/py/assertpy.svg\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003eassertpy\\u003c/code\\u003e library is available via \\u003ca href=\\\"https://pypi.org/project/assertpy/\\\" rel=\\\"nofollow\\\"\\u003ePyPI\\u003c/a\\u003e.\\nJust install with:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"pip install assertpy\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003epip install assertpy\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eInstall via conda\\u003c/h3\\u003e\\u003ca id=\\\"user-content-install-via-conda\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Install via conda\\\" href=\\\"#install-via-conda\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ca href=\\\"https://anaconda.org/conda-forge/assertpy\\\" rel=\\\"nofollow\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/383c27642697aed9fd7cf5a3ffb35491312821e9d1f7302c9e3309e480b4ef63/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f61737365727470792e737667\\\" alt=\\\"Conda Version\\\" data-canonical-src=\\\"https://img.shields.io/conda/vn/conda-forge/assertpy.svg\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\n\\u003ca href=\\\"https://anaconda.org/conda-forge/assertpy\\\" rel=\\\"nofollow\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/7d61f802026486208b6a54d71d8997b572014cb9605c0c673426dcddcc9507eb/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f706e2f636f6e64612d666f7267652f61737365727470792e737667\\\" alt=\\\"Conda Platforms\\\" data-canonical-src=\\\"https://img.shields.io/conda/pn/conda-forge/assertpy.svg\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eOr, if you are a big fan of \\u003ca href=\\\"https://conda.io/\\\" rel=\\\"nofollow\\\"\\u003econda\\u003c/a\\u003e like we are, there is an \\u003ca href=\\\"https://github.com/conda-forge/assertpy-feedstock\\\"\\u003eassertpy-feedstock\\u003c/a\\u003e for \\u003ca href=\\\"https://conda-forge.org/\\\" rel=\\\"nofollow\\\"\\u003eConda-Forge\\u003c/a\\u003e that you can use:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"conda install assertpy --channel conda-forge\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003econda install assertpy --channel conda-forge\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eDocs\\u003c/h2\\u003e\\u003ca id=\\\"user-content-docs\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Docs\\\" href=\\\"#docs\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe fluent API of \\u003ccode\\u003eassertpy\\u003c/code\\u003e is designed to create compact, yet readable tests.\\nThe API has been modeled after other fluent testing APIs, especially the awesome\\n\\u003ca href=\\\"https://assertj.github.io/doc/\\\" rel=\\\"nofollow\\\"\\u003eAssertJ\\u003c/a\\u003e assertion library for Java.  Of course, in the \\u003ccode\\u003eassertpy\\u003c/code\\u003e library everything is fully pythonic and designed to take full advantage of the dynamism in the Python runtime.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAll assertions, with usage examples, are documented here:\\u003cbr\\u003e\\n\\u003ca href=\\\"https://assertpy.github.io/docs.html\\\" rel=\\\"nofollow\\\"\\u003ehttps://assertpy.github.io/docs.html\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAnd there are hundreds of examples below.  Read on...\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eStrings\\u003c/h3\\u003e\\u003ca id=\\\"user-content-strings\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Strings\\\" href=\\\"#strings\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching strings:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that('').is_not_none()\\nassert_that('').is_empty()\\nassert_that('').is_false()\\nassert_that('').is_type_of(str)\\nassert_that('').is_instance_of(str)\\n\\nassert_that('foo').is_length(3)\\nassert_that('foo').is_not_empty()\\nassert_that('foo').is_true()\\nassert_that('foo').is_alpha()\\nassert_that('123').is_digit()\\nassert_that('foo').is_lower()\\nassert_that('FOO').is_upper()\\nassert_that('foo').is_iterable()\\nassert_that('foo').is_equal_to('foo')\\nassert_that('foo').is_not_equal_to('bar')\\nassert_that('foo').is_equal_to_ignoring_case('FOO')\\n\\nassert_that(u'foo').is_unicode()  # on python 2\\nassert_that('foo').is_unicode()   # on python 3\\n\\nassert_that('foo').contains('f')\\nassert_that('foo').contains('f','oo')\\nassert_that('foo').contains_ignoring_case('F','oO')\\nassert_that('foo').does_not_contain('x')\\nassert_that('foo').contains_only('f','o')\\nassert_that('foo').contains_sequence('o','o')\\n\\nassert_that('foo').contains_duplicates()\\nassert_that('fox').does_not_contain_duplicates()\\n\\nassert_that('foo').is_in('foo','bar','baz')\\nassert_that('foo').is_not_in('boo','bar','baz')\\nassert_that('foo').is_subset_of('abcdefghijklmnopqrstuvwxyz')\\n\\nassert_that('foo').starts_with('f')\\nassert_that('foo').ends_with('oo')\\n\\nassert_that('foo').matches(r'\\\\w')\\nassert_that('123-456-7890').matches(r'\\\\d{3}-\\\\d{3}-\\\\d{4}')\\nassert_that('foo').does_not_match(r'\\\\d+')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e''\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_none\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e''\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_empty\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e''\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_false\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e''\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_type_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estr\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e''\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_instance_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estr\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_empty\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_true\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_alpha\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'123'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_digit\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_lower\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'FOO'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_upper\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_iterable\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'bar'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to_ignoring_case\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'FOO'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003eu'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_unicode\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# on python 2\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_unicode\\u003c/span\\u003e()   \\u003cspan class=\\\"pl-c\\\"\\u003e# on python 3\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'f'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'f'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'oo'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_ignoring_case\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'F'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'oO'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_only\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'f'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'o'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_sequence\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'o'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'o'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_duplicates\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'fox'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain_duplicates\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_in\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'bar'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'baz'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_in\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'boo'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'bar'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'baz'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_subset_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'abcdefghijklmnopqrstuvwxyz'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003estarts_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'f'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eends_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'oo'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ematches\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003er'\\\\w'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'123-456-7890'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ematches\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003er'\\\\d{3}-\\\\d{3}-\\\\d{4}'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_match\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003er'\\\\d+'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eRegular expressions can be tricky.  Be sure to use raw strings (prefix the pattern string with \\u003ccode\\u003er\\u003c/code\\u003e) for the regex pattern to be matched.  Also, note that the \\u003ccode\\u003ematches()\\u003c/code\\u003e function passes for partial matches (as does the \\u003ca href=\\\"https://docs.python.org/3/library/re.html#re.match\\\" rel=\\\"nofollow\\\"\\u003ere.match\\u003c/a\\u003e function that underlies it). If you want to match the entire string, just include anchors in the regex pattern.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# partial matches, these all pass\\nassert_that('foo').matches(r'\\\\w')\\nassert_that('foo').matches(r'oo')\\nassert_that('foo').matches(r'\\\\w{2}')\\n\\n# match the entire string with an anchored regex pattern, passes\\nassert_that('foo').matches(r'^\\\\w{3}$')\\n\\n# fails\\nassert_that('foo').matches(r'^\\\\w{2}$')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# partial matches, these all pass\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ematches\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003er'\\\\w'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ematches\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003er'oo'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ematches\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003er'\\\\w{2}'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# match the entire string with an anchored regex pattern, passes\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ematches\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003er'^\\\\w{3}$'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# fails\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ematches\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003er'^\\\\w{2}$'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAdditionally, while \\u003ccode\\u003eassertpy\\u003c/code\\u003e \\u003ccode\\u003ematches()\\u003c/code\\u003e assertion does not have support for \\u003ca href=\\\"https://docs.python.org/3/library/re.html#re.match\\\" rel=\\\"nofollow\\\"\\u003ere.match\\u003c/a\\u003e flags such as \\u003ccode\\u003ere.MULTILINE\\u003c/code\\u003e or \\u003ccode\\u003ere.DOTALL\\u003c/code\\u003e, it works as expected with \\u003cem\\u003einline flags\\u003c/em\\u003e in the pattern.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"s = \\u0026quot;\\u0026quot;\\u0026quot;bar\\nfoo\\nbaz\\u0026quot;\\u0026quot;\\u0026quot;\\n\\n# use multiline inline flag (?m)\\nassert_that(s).matches(r'(?m)^foo$')\\n\\n# use dotall inline flag (?s)\\nassert_that(s).matches(r'(?s)b(.*)z')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003es\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"\\\"\\\"bar\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s\\\"\\u003efoo\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s\\\"\\u003ebaz\\\"\\\"\\\"\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# use multiline inline flag (?m)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003es\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ematches\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003er'(?m)^foo$'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# use dotall inline flag (?s)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003es\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ematches\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003er'(?s)b(.*)z'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eNumbers\\u003c/h3\\u003e\\u003ca id=\\\"user-content-numbers\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Numbers\\\" href=\\\"#numbers\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching integers:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(0).is_not_none()\\nassert_that(0).is_false()\\nassert_that(0).is_type_of(int)\\nassert_that(0).is_instance_of(int)\\n\\nassert_that(0).is_zero()\\nassert_that(1).is_not_zero()\\nassert_that(1).is_positive()\\nassert_that(-1).is_negative()\\n\\nassert_that(123).is_equal_to(123)\\nassert_that(123).is_not_equal_to(456)\\n\\nassert_that(123).is_greater_than(100)\\nassert_that(123).is_greater_than_or_equal_to(123)\\nassert_that(123).is_less_than(200)\\nassert_that(123).is_less_than_or_equal_to(200)\\nassert_that(123).is_between(100, 200)\\nassert_that(123).is_close_to(100, 25)\\n\\nassert_that(1).is_in(0,1,2,3)\\nassert_that(1).is_not_in(-1,-2,-3)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_none\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_false\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_type_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eint\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_instance_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eint\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_zero\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_zero\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_positive\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_negative\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e456\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_greater_than\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e100\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_greater_than_or_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_less_than\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_less_than_or_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_between\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e100\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e200\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_close_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e100\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e25\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_in\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_in\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching floats:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(0.0).is_not_none()\\nassert_that(0.0).is_false()\\nassert_that(0.0).is_type_of(float)\\nassert_that(0.0).is_instance_of(float)\\n\\nassert_that(123.4).is_equal_to(123.4)\\nassert_that(123.4).is_not_equal_to(456.7)\\n\\nassert_that(123.4).is_greater_than(100.1)\\nassert_that(123.4).is_greater_than_or_equal_to(123.4)\\nassert_that(123.4).is_less_than(200.2)\\nassert_that(123.4).is_less_than_or_equal_to(123.4)\\nassert_that(123.4).is_between(100.1, 200.2)\\nassert_that(123.4).is_close_to(123, 0.5)\\n\\nassert_that(float('NaN')).is_nan()\\nassert_that(123.4).is_not_nan()\\nassert_that(float('Inf')).is_inf()\\nassert_that(123.4).is_not_inf()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0.0\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_none\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0.0\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_false\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0.0\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_type_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efloat\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0.0\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_instance_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efloat\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e456.7\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_greater_than\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e100.1\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_greater_than_or_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_less_than\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e200.2\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_less_than_or_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_between\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e100.1\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e200.2\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_close_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e0.5\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003efloat\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'NaN'\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003eis_nan\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_nan\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003efloat\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Inf'\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003eis_inf\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123.4\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_inf\\u003c/span\\u003e()\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eOf course, using \\u003ccode\\u003eis_equal_to()\\u003c/code\\u003e with a \\u003ccode\\u003efloat\\u003c/code\\u003e value is just asking for trouble. You'll always want to use the assertions methods like \\u003ccode\\u003eis_close_to()\\u003c/code\\u003e and \\u003ccode\\u003eis_between()\\u003c/code\\u003e.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eLists\\u003c/h3\\u003e\\u003ca id=\\\"user-content-lists\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Lists\\\" href=\\\"#lists\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching lists:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that([]).is_not_none()\\nassert_that([]).is_empty()\\nassert_that([]).is_false()\\nassert_that([]).is_type_of(list)\\nassert_that([]).is_instance_of(list)\\nassert_that([]).is_iterable()\\n\\nassert_that(['a','b']).is_length(2)\\nassert_that(['a','b']).is_not_empty()\\nassert_that(['a','b']).is_equal_to(['a','b'])\\nassert_that(['a','b']).is_not_equal_to(['b','a'])\\n\\nassert_that(['a','b']).contains('a')\\nassert_that(['a','b']).contains('b','a')\\nassert_that(['a','b']).does_not_contain('x','y')\\nassert_that(['a','b']).contains_only('a','b')\\nassert_that(['a','a']).contains_only('a')\\nassert_that(['a','b','c']).contains_sequence('b','c')\\nassert_that(['a','b']).is_subset_of(['a','b','c'])\\nassert_that(['a','b','c']).is_sorted()\\nassert_that(['c','b','a']).is_sorted(reverse=True)\\n\\nassert_that(['a','x','x']).contains_duplicates()\\nassert_that(['a','b','c']).does_not_contain_duplicates()\\n\\nassert_that(['a','b','c']).starts_with('a')\\nassert_that(['a','b','c']).ends_with('c')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_none\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_empty\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_false\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_type_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elist\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_instance_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elist\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_iterable\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_empty\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e])\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'y'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_only\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_only\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_sequence\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_subset_of\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e])\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_sorted\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_sorted\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ereverse\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_duplicates\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain_duplicates\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003estarts_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003eends_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eList Flattening\\u003c/h4\\u003e\\u003ca id=\\\"user-content-list-flattening\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: List Flattening\\\" href=\\\"#list-flattening\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eLists of lists can be flattened on any item (by index) using the \\u003ccode\\u003eextracting\\u003c/code\\u003e helper (see \\u003ca href=\\\"#dict-flattening\\\"\\u003edict flattening\\u003c/a\\u003e):\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"people = [['Fred', 'Smith'], ['Bob', 'Barr']]\\nassert_that(people).extracting(0).is_equal_to(['Fred','Bob'])\\nassert_that(people).extracting(-1).is_equal_to(['Smith','Barr'])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [[\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e], [\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'Barr'\\u003c/span\\u003e]]\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e])\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Barr'\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eTuples\\u003c/h3\\u003e\\u003ca id=\\\"user-content-tuples\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Tuples\\\" href=\\\"#tuples\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching tuples:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(()).is_not_none()\\nassert_that(()).is_empty()\\nassert_that(()).is_false()\\nassert_that(()).is_type_of(tuple)\\nassert_that(()).is_instance_of(tuple)\\nassert_that(()).is_iterable()\\n\\nassert_that((1,2,3)).is_length(3)\\nassert_that((1,2,3)).is_not_empty()\\nassert_that((1,2,3)).is_equal_to((1,2,3))\\nassert_that((1,2,3)).is_not_equal_to((1,2,4))\\n\\nassert_that((1,2,3)).contains(1)\\nassert_that((1,2,3)).contains(3,2,1)\\nassert_that((1,2,3)).does_not_contain(4,5,6)\\nassert_that((1,2,3)).contains_only(1,2,3)\\nassert_that((1,1,1)).contains_only(1)\\nassert_that((1,2,3)).contains_sequence(2,3)\\nassert_that((1,2,3)).is_subset_of((1,2,3,4))\\nassert_that((1,2,3)).is_sorted()\\nassert_that((3,2,1)).is_sorted(reverse=True)\\n\\nassert_that((1,2,2)).contains_duplicates()\\nassert_that((1,2,3)).does_not_contain_duplicates()\\n\\nassert_that((1,2,3)).starts_with(1)\\nassert_that((1,2,3)).ends_with(3)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(()).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_none\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(()).\\u003cspan class=\\\"pl-en\\\"\\u003eis_empty\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(()).\\u003cspan class=\\\"pl-en\\\"\\u003eis_false\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(()).\\u003cspan class=\\\"pl-en\\\"\\u003eis_type_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etuple\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(()).\\u003cspan class=\\\"pl-en\\\"\\u003eis_instance_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etuple\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(()).\\u003cspan class=\\\"pl-en\\\"\\u003eis_iterable\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_empty\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e))\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_equal_to\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e))\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e6\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_only\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_only\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_sequence\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003eis_subset_of\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e))\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003eis_sorted\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003eis_sorted\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ereverse\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_duplicates\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain_duplicates\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003estarts_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003eends_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eTuple Flattening\\u003c/h4\\u003e\\u003ca id=\\\"user-content-tuple-flattening\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Tuple Flattening\\\" href=\\\"#tuple-flattening\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTuples of tuples can be flattened on any item (by index) using the \\u003ccode\\u003eextracting\\u003c/code\\u003e helper (see \\u003ca href=\\\"#dict-flattening\\\"\\u003edict flattening\\u003c/a\\u003e):\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"points = ((1,2,3),(4,5,6))\\nassert_that(points).extracting(0).is_equal_to([1, 4])\\nassert_that(points).extracting(-1).is_equal_to([3, 6])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003epoints\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e ((\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e),(\\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e6\\u003c/span\\u003e))\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epoints\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e])\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epoints\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e6\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eDicts\\u003c/h3\\u003e\\u003ca id=\\\"user-content-dicts\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Dicts\\\" href=\\\"#dicts\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching dicts:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that({}).is_not_none()\\nassert_that({}).is_empty()\\nassert_that({}).is_false()\\nassert_that({}).is_type_of(dict)\\nassert_that({}).is_instance_of(dict)\\n\\nassert_that({'a':1,'b':2}).is_length(2)\\nassert_that({'a':1,'b':2}).is_not_empty()\\nassert_that({'a':1,'b':2}).is_equal_to({'a':1,'b':2})\\nassert_that({'a':1,'b':2}).is_equal_to({'b':2,'a':1})\\nassert_that({'a':1,'b':2}).is_not_equal_to({'a':1,'b':3})\\n\\nassert_that({'a':1,'b':2}).contains('a')\\nassert_that({'a':1,'b':2}).contains('b','a')\\nassert_that({'a':1,'b':2}).does_not_contain('x')\\nassert_that({'a':1,'b':2}).does_not_contain('x','y')\\nassert_that({'a':1,'b':2}).contains_only('a','b')\\nassert_that({'a':1,'b':2}).is_subset_of({'a':1,'b':2,'c':3})\\n\\n# contains_key() is just an alias for contains()\\nassert_that({'a':1,'b':2}).contains_key('a')\\nassert_that({'a':1,'b':2}).contains_key('b','a')\\n\\n# does_not_contain_key() is just an alias for does_not_contain()\\nassert_that({'a':1,'b':2}).does_not_contain_key('x')\\nassert_that({'a':1,'b':2}).does_not_contain_key('x','y')\\n\\nassert_that({'a':1,'b':2}).contains_value(1)\\nassert_that({'a':1,'b':2}).contains_value(2,1)\\nassert_that({'a':1,'b':2}).does_not_contain_value(3)\\nassert_that({'a':1,'b':2}).does_not_contain_value(3,4)\\n\\nassert_that({'a':1,'b':2}).contains_entry({'a':1})\\nassert_that({'a':1,'b':2}).contains_entry({'a':1},{'b':2})\\nassert_that({'a':1,'b':2}).does_not_contain_entry({'a':2})\\nassert_that({'a':1,'b':2}).does_not_contain_entry({'a':2},{'b':1})\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_none\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_empty\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_false\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_type_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003edict\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_instance_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003edict\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_empty\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e})\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e})\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_equal_to\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e})\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'y'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_only\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_subset_of\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e})\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# contains_key() is just an alias for contains()\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_key\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_key\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# does_not_contain_key() is just an alias for does_not_contain()\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain_key\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain_key\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'y'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_value\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_value\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain_value\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain_value\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_entry\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e})\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_entry\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e},{\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e})\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain_entry\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e})\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain_entry\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e},{\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e})\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eDict Comparison\\u003c/h4\\u003e\\u003ca id=\\\"user-content-dict-comparison\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Dict Comparison\\\" href=\\\"#dict-comparison\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eDict keys can optionally be ignored or included when using the \\u003ccode\\u003eis_equal_to()\\u003c/code\\u003e assertion.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIgnore dict keys with the \\u003ccode\\u003eignore\\u003c/code\\u003e keyword argument:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# ignore a single key\\nassert_that({'a':1,'b':2}).is_equal_to({'a':1}, ignore='b')\\n\\n# ignore multiple keys using a list\\nassert_that({'a':1,'b':2,'c':3}).is_equal_to({'a':1}, ignore=['b','c'])\\n\\n# ignore nested keys using a tuple\\nassert_that({'a':1,'b':{'c':2,'d':3}}).is_equal_to({'a':1,'b':{'c':2}}, ignore=('b','d'))\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# ignore a single key\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e}, \\u003cspan class=\\\"pl-s1\\\"\\u003eignore\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# ignore multiple keys using a list\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e}, \\u003cspan class=\\\"pl-s1\\\"\\u003eignore\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e])\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# ignore nested keys using a tuple\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:{\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'd'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e}}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:{\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}}, \\u003cspan class=\\\"pl-s1\\\"\\u003eignore\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'd'\\u003c/span\\u003e))\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eOr include dict keys with the \\u003ccode\\u003einclude\\u003c/code\\u003e keyword argument:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# include a single key\\nassert_that({'a':1,'b':2}).is_equal_to({'a':1}, include='a')\\n\\n# include multiple keys using a list\\nassert_that({'a':1,'b':2,'c':3}).is_equal_to({'a':1,'b':2}, include=['a','b'])\\n\\n# include nested keys using a tuple\\nassert_that({'a':1,'b':{'c':2,'d':3}}).is_equal_to({'b':{'d':3}}, include=('b','d'))\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# include a single key\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e}, \\u003cspan class=\\\"pl-s1\\\"\\u003einclude\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# include multiple keys using a list\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e}, \\u003cspan class=\\\"pl-s1\\\"\\u003einclude\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# include nested keys using a tuple\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:{\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'd'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e}}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:{\\u003cspan class=\\\"pl-s\\\"\\u003e'd'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e}}, \\u003cspan class=\\\"pl-s1\\\"\\u003einclude\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'd'\\u003c/span\\u003e))\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eOr do both:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that({'a':1,'b':{'c':2,'d':3,'e':4,'f':5}}).is_equal_to(\\n    {'b':{'d':3,'f':5}},\\n    ignore=[('b','c'),('b','e')],\\n    include='b'\\n)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:{\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'd'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'e'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'f'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e}}).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\n    {\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:{\\u003cspan class=\\\"pl-s\\\"\\u003e'd'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'f'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e}},\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003eignore\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[(\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e),(\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'e'\\u003c/span\\u003e)],\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003einclude\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e\\n)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eDict Flattening\\u003c/h4\\u003e\\u003ca id=\\\"user-content-dict-flattening\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Dict Flattening\\\" href=\\\"#dict-flattening\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eLists of dicts can be flattened on key using the \\u003ccode\\u003eextracting\\u003c/code\\u003e helper (see \\u003ca href=\\\"#extracting-attributes-from-objects\\\"\\u003eextracting attributes\\u003c/a\\u003e):\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fred = {'first_name': 'Fred', 'last_name': 'Smith'}\\nbob = {'first_name': 'Bob', 'last_name': 'Barr'}\\npeople = [fred, bob]\\n\\nassert_that(people).extracting('first_name').is_equal_to(['Fred','Bob'])\\nassert_that(people).extracting('first_name').contains('Fred','Bob')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e {\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'last_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e}\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ebob\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e {\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'last_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Barr'\\u003c/span\\u003e}\\n\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ebob\\u003c/span\\u003e]\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e])\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eDict Key Assertions\\u003c/h4\\u003e\\u003ca id=\\\"user-content-dict-key-assertions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Dict Key Assertions\\\" href=\\\"#dict-key-assertions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFluent assertions against the value of a given key can be done by prepending \\u003ccode\\u003ehas_\\u003c/code\\u003e to the key name (see \\u003ca href=\\\"#dynamic-assertions-on-objects\\\"\\u003edynamic assertions\\u003c/a\\u003e):\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fred = {'first_name': 'Fred', 'last_name': 'Smith', 'shoe_size': 12}\\n\\nassert_that(fred).has_first_name('Fred')\\nassert_that(fred).has_last_name('Smith')\\nassert_that(fred).has_shoe_size(12)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e {\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'last_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'shoe_size'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e12\\u003c/span\\u003e}\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_first_name\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_last_name\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_shoe_size\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e12\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eSets\\u003c/h3\\u003e\\u003ca id=\\\"user-content-sets\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Sets\\\" href=\\\"#sets\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching sets:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(set([])).is_not_none()\\nassert_that(set([])).is_empty()\\nassert_that(set([])).is_false()\\nassert_that(set([])).is_type_of(set)\\nassert_that(set([])).is_instance_of(set)\\n\\nassert_that(set(['a','b'])).is_length(2)\\nassert_that(set(['a','b'])).is_not_empty()\\nassert_that(set(['a','b'])).is_equal_to(set(['a','b']))\\nassert_that(set(['a','b'])).is_equal_to(set(['b','a']))\\nassert_that(set(['a','b'])).is_not_equal_to(set(['a','x']))\\n\\nassert_that(set(['a','b'])).contains('a')\\nassert_that(set(['a','b'])).contains('b','a')\\nassert_that(set(['a','b'])).does_not_contain('x','y')\\nassert_that(set(['a','b'])).contains_only('a','b')\\nassert_that(set(['a','b'])).is_subset_of(set(['a','b','c']))\\nassert_that(set(['a','b'])).is_subset_of(set(['a']), set(['b']))\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_none\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_empty\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_false\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_type_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eset\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_instance_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eset\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_empty\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]))\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e]))\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e]))\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'y'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003econtains_only\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_subset_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e]))\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003eis_subset_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e]), \\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]))\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eBooleans\\u003c/h3\\u003e\\u003ca id=\\\"user-content-booleans\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Booleans\\\" href=\\\"#booleans\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching booleans:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(True).is_true()\\nassert_that(False).is_false()\\nassert_that(True).is_type_of(bool)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_true\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_false\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_type_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ebool\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eNone\\u003c/h3\\u003e\\u003ca id=\\\"user-content-none\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: None\\\" href=\\\"#none\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching \\u003ccode\\u003eNone\\u003c/code\\u003e:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(None).is_none()\\nassert_that('').is_not_none()\\nassert_that(None).is_type_of(type(None))\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003eNone\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_none\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e''\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_none\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003eNone\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_type_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003etype\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003eNone\\u003c/span\\u003e))\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eDates\\u003c/h3\\u003e\\u003ca id=\\\"user-content-dates\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Dates\\\" href=\\\"#dates\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching dates:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import datetime\\n\\ntoday = datetime.datetime.today()\\nyesterday = today - datetime.timedelta(days=1)\\n\\nassert_that(yesterday).is_before(today)\\nassert_that(today).is_after(yesterday)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edatetime\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edatetime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003edatetime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003etoday\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003eyesterday\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edatetime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003etimedelta\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003edays\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eyesterday\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_before\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_after\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eyesterday\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou can also make assertions about date equality (ignoring various units of time) like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"today_0us = today - datetime.timedelta(microseconds=today.microsecond)\\ntoday_0s = today - datetime.timedelta(seconds=today.second)\\ntoday_0h = today - datetime.timedelta(hours=today.hour)\\n\\nassert_that(today).is_equal_to_ignoring_milliseconds(today_0us)\\nassert_that(today).is_equal_to_ignoring_seconds(today_0s)\\nassert_that(today).is_equal_to_ignoring_time(today_0h)\\nassert_that(today).is_equal_to(today)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etoday_0us\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edatetime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003etimedelta\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emicroseconds\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003emicrosecond\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etoday_0s\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edatetime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003etimedelta\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eseconds\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003esecond\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etoday_0h\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edatetime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003etimedelta\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ehours\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ehour\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to_ignoring_milliseconds\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday_0us\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to_ignoring_seconds\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday_0s\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to_ignoring_time\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday_0h\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou can use these numeric assertions on dates:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"middle = today - datetime.timedelta(hours=12)\\nhours_24 = datetime.timedelta(hours=24)\\n\\nassert_that(today).is_greater_than(yesterday)\\nassert_that(yesterday).is_less_than(today)\\nassert_that(middle).is_between(yesterday, today)\\n\\n#note that the tolerance must be a datetime.timedelta object\\nassert_that(yesterday).is_close_to(today, hours_24)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emiddle\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edatetime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003etimedelta\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ehours\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e12\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ehours_24\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edatetime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003etimedelta\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ehours\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e24\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_greater_than\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eyesterday\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eyesterday\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_less_than\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emiddle\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_between\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eyesterday\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#note that the tolerance must be a datetime.timedelta object\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eyesterday\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_close_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etoday\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ehours_24\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eLastly, because datetime is an object we can easily test the properties of a given date by prepending \\u003ccode\\u003ehas_\\u003c/code\\u003e to the property name (see \\u003ca href=\\\"#dynamic-assertions-on-objects\\\"\\u003edynamic assertions\\u003c/a\\u003e):\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# 1980-01-02 03:04:05.000006\\nx = datetime.datetime(1980, 1, 2, 3, 4, 5, 6)\\n\\nassert_that(x).has_year(1980)\\nassert_that(x).has_month(1)\\nassert_that(x).has_day(2)\\nassert_that(x).has_hour(3)\\nassert_that(x).has_minute(4)\\nassert_that(x).has_second(5)\\nassert_that(x).has_microsecond(6)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# 1980-01-02 03:04:05.000006\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edatetime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003edatetime\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1980\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e6\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_year\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1980\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_month\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_day\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_hour\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_minute\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_second\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_microsecond\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e6\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eCurrently, \\u003ccode\\u003eassertpy\\u003c/code\\u003e only supports dates via the \\u003ccode\\u003edatetime\\u003c/code\\u003e type.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eFiles\\u003c/h3\\u003e\\u003ca id=\\\"user-content-files\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Files\\\" href=\\\"#files\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching files:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that('foo.txt').exists()\\nassert_that('missing.txt').does_not_exist()\\nassert_that('foo.txt').is_file()\\n\\nassert_that('mydir').exists()\\nassert_that('missing_dir').does_not_exist()\\nassert_that('mydir').is_directory()\\n\\nassert_that('foo.txt').is_named('foo.txt')\\nassert_that('foo.txt').is_child_of('mydir')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo.txt'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eexists\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'missing.txt'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_exist\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo.txt'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_file\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'mydir'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eexists\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'missing_dir'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_exist\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'mydir'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_directory\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo.txt'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_named\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo.txt'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo.txt'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_child_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'mydir'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching file contents is done using the \\u003ccode\\u003econtents_of()\\u003c/code\\u003e helper to read the file into a string with the given encoding (if no encoding is given it defaults to \\u003ccode\\u003eutf-8\\u003c/code\\u003e).  Once the file is read into a string, you can make quick work of it using the \\u003ccode\\u003eassertpy\\u003c/code\\u003e string assertions like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from assertpy import assert_that, contents_of\\n\\ncontents = contents_of('foo.txt', 'ascii')\\nassert_that(contents).starts_with('foo').ends_with('bar').contains('oob')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassertpy\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassert_that\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003econtents_of\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003econtents\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003econtents_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo.txt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'ascii'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003econtents\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003estarts_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eends_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'bar'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'oob'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eObjects\\u003c/h3\\u003e\\u003ca id=\\\"user-content-objects\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Objects\\\" href=\\\"#objects\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching an object:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fred = Person('Fred','Smith')\\n\\nassert_that(fred).is_not_none()\\nassert_that(fred).is_true()\\nassert_that(fred).is_type_of(Person)\\nassert_that(fred).is_instance_of(object)\\nassert_that(fred).is_same_as(fred)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003ePerson\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_none\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_true\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_type_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003ePerson\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_instance_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_same_as\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMatching an attribute, a property, and a method:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(fred.first_name).is_equal_to('Fred')\\nassert_that(fred.name).is_equal_to('Fred Smith')\\nassert_that(fred.say_hello()).is_equal_to('Hello, Fred!')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003efirst_name\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred Smith'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003esay_hello\\u003c/span\\u003e()).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Hello, Fred!'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eGiven \\u003ccode\\u003efred\\u003c/code\\u003e is an instance of the following \\u003ccode\\u003ePerson\\u003c/code\\u003e class:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Person(object):\\n    def __init__(self, first_name, last_name):\\n        self.first_name = first_name\\n        self.last_name = last_name\\n\\n    @property\\n    def name(self):\\n        return '%s %s' % (self.first_name, self.last_name)\\n\\n    def say_hello(self):\\n        return 'Hello, %s!' % self.first_name\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003ePerson\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003e__init__\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003efirst_name\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003elast_name\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003efirst_name\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003efirst_name\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003elast_name\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elast_name\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-en\\\"\\u003e@\\u003cspan class=\\\"pl-s1\\\"\\u003eproperty\\u003c/span\\u003e\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003ename\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'%s %s'\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e%\\u003c/span\\u003e (\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003efirst_name\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003elast_name\\u003c/span\\u003e)\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esay_hello\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'Hello, %s!'\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e%\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003efirst_name\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eExtracting Attributes from Objects\\u003c/h4\\u003e\\u003ca id=\\\"user-content-extracting-attributes-from-objects\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Extracting Attributes from Objects\\\" href=\\\"#extracting-attributes-from-objects\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIt is frequently necessary to test collections of objects.  The \\u003ccode\\u003eassertpy\\u003c/code\\u003e library includes an \\u003ccode\\u003eextracting\\u003c/code\\u003e helper to flatten the collection on a given attribute, like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fred = Person('Fred','Smith')\\nbob = Person('Bob','Barr')\\npeople = [fred, bob]\\n\\nassert_that(people).extracting('first_name').is_equal_to(['Fred','Bob'])\\nassert_that(people).extracting('first_name').contains('Fred','Bob')\\nassert_that(people).extracting('first_name').does_not_contain('Charlie')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003ePerson\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ebob\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003ePerson\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Barr'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ebob\\u003c/span\\u003e]\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e])\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Charlie'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eOf course \\u003ccode\\u003eextracting\\u003c/code\\u003e works with subclasses too...suppose we create a simple class hierarchy by creating a \\u003ccode\\u003eDeveloper\\u003c/code\\u003e subclass of \\u003ccode\\u003ePerson\\u003c/code\\u003e, like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Developer(Person):\\n    def say_hello(self):\\n        return '%s writes code.' % self.first_name\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eDeveloper\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003ePerson\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esay_hello\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'%s writes code.'\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e%\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003efirst_name\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTesting a mixed collection of parent and child objects works as expected:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fred = Person('Fred','Smith')\\njoe = Developer('Joe','Coder')\\npeople = [fred, joe]\\n\\nassert_that(people).extracting('first_name').contains('Fred','Joe')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003ePerson\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ejoe\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eDeveloper\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Joe'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Coder'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ejoe\\u003c/span\\u003e]\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Joe'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAdditionally, the \\u003ccode\\u003eextracting\\u003c/code\\u003e helper can accept a list of attributes to be extracted, and will flatten them into a list of tuples:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(people).extracting('first_name', 'last_name').contains(('Fred','Smith'), ('Joe','Coder'))\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'last_name'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e((\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e), (\\u003cspan class=\\\"pl-s\\\"\\u003e'Joe'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Coder'\\u003c/span\\u003e))\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eLastly, \\u003ccode\\u003eextracting\\u003c/code\\u003e works on not just class attributes, but also properties, and even zero-argument methods:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(people).extracting('name').contains('Fred Smith', 'Joe Coder')\\nassert_that(people).extracting('say_hello').contains('Hello, Fred!', 'Joe writes code.')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred Smith'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'Joe Coder'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'say_hello'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Hello, Fred!'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'Joe writes code.'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAs noted above, the \\u003ccode\\u003eextracting\\u003c/code\\u003e helper also works on a collection of dicts:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fred = {'first_name': 'Fred', 'last_name': 'Smith'}\\nbob = {'first_name': 'Bob', 'last_name': 'Barr'}\\npeople = [fred, bob]\\n\\nassert_that(people).extracting('first_name').contains('Fred','Bob')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e {\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'last_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e}\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ebob\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e {\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'last_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Barr'\\u003c/span\\u003e}\\n\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ebob\\u003c/span\\u003e]\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch5 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eExtracting and Filtering\\u003c/h5\\u003e\\u003ca id=\\\"user-content-extracting-and-filtering\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Extracting and Filtering\\\" href=\\\"#extracting-and-filtering\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003eextracting\\u003c/code\\u003e helper can include a \\u003ccode\\u003efilter\\u003c/code\\u003e to keep only those items for which the given \\u003ccode\\u003efilter\\u003c/code\\u003e is truthy.  For example, suppose we have the following list of dicts we wish to test:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"users = [\\n    {'user': 'Fred', 'age': 36, 'active': True},\\n    {'user': 'Bob', 'age': 40, 'active': False},\\n    {'user': 'Johnny', 'age': 13, 'active': True}\\n]\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eusers\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n    {\\u003cspan class=\\\"pl-s\\\"\\u003e'user'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'age'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e36\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'active'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e},\\n    {\\u003cspan class=\\\"pl-s\\\"\\u003e'user'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'age'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e40\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'active'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e},\\n    {\\u003cspan class=\\\"pl-s\\\"\\u003e'user'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Johnny'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'age'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e13\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'active'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e}\\n]\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003efilter\\u003c/code\\u003e can be the name of a key (or attribute, or property, or zero-argument method) and the extracted items are kept if the corresponding value is truthy:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(users).extracting('user', filter='active')\\\\\\n    .is_equal_to(['Fred','Johnny'])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eusers\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'user'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003efilter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'active'\\u003c/span\\u003e)\\\\\\n    .\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Johnny'\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003efilter\\u003c/code\\u003e can be a \\u003ccode\\u003edict\\u003c/code\\u003e-like object and the extracted items are kept if \\u003cem\\u003eall\\u003c/em\\u003e corresponding key-value pairs are equal:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(users).extracting('user', filter={'active': False})\\\\\\n    .is_equal_to(['Bob'])\\nassert_that(users).extracting('user', filter={'age': 36, 'active': True})\\\\\\n    .is_equal_to(['Fred'])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eusers\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'user'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003efilter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e{\\u003cspan class=\\\"pl-s\\\"\\u003e'active'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e})\\\\\\n    .\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e])\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eusers\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'user'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003efilter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e{\\u003cspan class=\\\"pl-s\\\"\\u003e'age'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e36\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'active'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e})\\\\\\n    .\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003efilter\\u003c/code\\u003e can be any function (including an in-line \\u003ccode\\u003elambda\\u003c/code\\u003e) that accepts as its single argument each item in the collection and the extracted items are kept if the function evaluates to \\u003ccode\\u003eTrue\\u003c/code\\u003e:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(users).extracting('user', filter=lambda x: x['age'] \\u0026gt; 20)\\\\\\n    .is_equal_to(['Fred', 'Bob'])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eusers\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'user'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003efilter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003elambda\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'age'\\u003c/span\\u003e] \\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e20\\u003c/span\\u003e)\\\\\\n    .\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch5 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eExtracting and Sorting\\u003c/h5\\u003e\\u003ca id=\\\"user-content-extracting-and-sorting\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Extracting and Sorting\\\" href=\\\"#extracting-and-sorting\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003eextracting\\u003c/code\\u003e helper can include a \\u003ccode\\u003esort\\u003c/code\\u003e to enforce order on the extracted items.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003esort\\u003c/code\\u003e can be the name of a key (or attribute, or property, or zero-argument method) and the extracted items are ordered by the corresponding values:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(users).extracting('user', sort='age').is_equal_to(['Johnny','Fred','Bob'])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eusers\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'user'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esort\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'age'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'Johnny'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003esort\\u003c/code\\u003e can be an \\u003ccode\\u003eiterable\\u003c/code\\u003e of names and the extracted items are ordered by corresponding value of the first name, ties are broken by the corresponding values of the second name, and so on:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(users).extracting('user', sort=['active','age']).is_equal_to(['Bob','Johnny','Fred'])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eusers\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'user'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esort\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'active'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'age'\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Johnny'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003esort\\u003c/code\\u003e can be any function (including an in-line \\u003ccode\\u003elambda\\u003c/code\\u003e) that accepts as its single argument each item in the collection and the extracted items are ordered by the corresponding function return values:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(users).extracting('user', sort=lambda x: -x['age'])\\\\\\n    .is_equal_to(['Bob','Fred','Johnny'])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eusers\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'user'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esort\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003elambda\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ex\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'age'\\u003c/span\\u003e])\\\\\\n    .\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'Bob'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Johnny'\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eDynamic Assertions on Objects\\u003c/h4\\u003e\\u003ca id=\\\"user-content-dynamic-assertions-on-objects\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Dynamic Assertions on Objects\\\" href=\\\"#dynamic-assertions-on-objects\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eWhen testing attributes of an object, the basic \\u003ccode\\u003eassertpy\\u003c/code\\u003e assertions can get a little verbose like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fred = Person('Fred','Smith')\\n\\nassert_that(fred.first_name).is_equal_to('Fred')\\nassert_that(fred.name).is_equal_to('Fred Smith')\\nassert_that(fred.say_hello()).is_equal_to('Hello, Fred!')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003ePerson\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003efirst_name\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred Smith'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003esay_hello\\u003c/span\\u003e()).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Hello, Fred!'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSo, \\u003ccode\\u003eassertpy\\u003c/code\\u003e takes advantage of the awesome dyanmism in the Python runtime to provide dynamic assertions in the form of \\u003ccode\\u003ehas_\\u0026lt;name\\u0026gt;()\\u003c/code\\u003e where \\u003ccode\\u003e\\u0026lt;name\\u0026gt;\\u003c/code\\u003e is the name of any attribute, property, or zero-argument method on the given object.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eUsing dynamic assertions, we can rewrite the above assertions in a more compact and readable way like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(fred).has_first_name('Fred')\\nassert_that(fred).has_name('Fred Smith')\\nassert_that(fred).has_say_hello('Hello, Fred!')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_first_name\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_name\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred Smith'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_say_hello\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Hello, Fred!'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSince \\u003ccode\\u003efred\\u003c/code\\u003e has the attribute \\u003ccode\\u003efirst_name\\u003c/code\\u003e, the dynamic assertion method \\u003ccode\\u003ehas_first_name()\\u003c/code\\u003e is available.\\nSimilarly, the property \\u003ccode\\u003ename\\u003c/code\\u003e can be tested via \\u003ccode\\u003ehas_name()\\u003c/code\\u003e and the zero-argument method \\u003ccode\\u003esay_hello()\\u003c/code\\u003e via\\nthe \\u003ccode\\u003ehas_say_hello()\\u003c/code\\u003e assertion.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAs noted above, dynamic assertions also work on dicts:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"fred = {'first_name': 'Fred', 'last_name': 'Smith'}\\n\\nassert_that(fred).has_first_name('Fred')\\nassert_that(fred).has_last_name('Smith')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e {\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'last_name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e}\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_first_name\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_last_name\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eFailure\\u003c/h3\\u003e\\u003ca id=\\\"user-content-failure\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Failure\\\" href=\\\"#failure\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003eassertpy\\u003c/code\\u003e library includes a \\u003ccode\\u003efail()\\u003c/code\\u003e method to explicitly force a test failure.  It can be used like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from assertpy import assert_that,fail\\n\\ndef test_fail():\\n    fail('forced failure')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassertpy\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassert_that\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s1\\\"\\u003efail\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003etest_fail\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-en\\\"\\u003efail\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'forced failure'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eA very useful test pattern that requires the \\u003ccode\\u003efail()\\u003c/code\\u003e method is to verify the exact contents of an error message. For example:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from assertpy import assert_that,fail\\n\\ndef test_error_msg():\\n    try:\\n        some_func('foo')\\n        fail('should have raised error')\\n    except RuntimeError as e:\\n        assert_that(str(e)).is_equal_to('some err')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassertpy\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassert_that\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s1\\\"\\u003efail\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003etest_error_msg\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-k\\\"\\u003etry\\u003c/span\\u003e:\\n        \\u003cspan class=\\\"pl-en\\\"\\u003esome_func\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e)\\n        \\u003cspan class=\\\"pl-en\\\"\\u003efail\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'should have raised error'\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eexcept\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRuntimeError\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eas\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ee\\u003c/span\\u003e:\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003estr\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ee\\u003c/span\\u003e)).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'some err'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn the above code, we invoke \\u003ccode\\u003esome_func()\\u003c/code\\u003e with a bad argument which raises an exception.  The exception is then handled by the \\u003ccode\\u003etry..except\\u003c/code\\u003e block and the exact contents of the error message are verified.  Lastly, if an exception is \\u003cem\\u003enot\\u003c/em\\u003e thrown by \\u003ccode\\u003esome_func()\\u003c/code\\u003e as expected, we fail the test via \\u003ccode\\u003efail()\\u003c/code\\u003e.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThis pattern is only used when you need to verify the contents of the error message.  If you only wish to check for an expected exception (and don't need to verify the contents of the error message itself), you're much better off using a test runner that supports expected exceptions.  \\u003ca href=\\\"http://nose.readthedocs.org/\\\" rel=\\\"nofollow\\\"\\u003eNose\\u003c/a\\u003e provides a \\u003ca href=\\\"http://nose.readthedocs.org/en/latest/testing_tools.html#nose.tools.raises\\\" rel=\\\"nofollow\\\"\\u003e@raises\\u003c/a\\u003e decorator. \\u003ca href=\\\"http://pytest.org/latest/contents.html\\\" rel=\\\"nofollow\\\"\\u003ePytest\\u003c/a\\u003e has a \\u003ca href=\\\"http://pytest.org/latest/assert.html#assertions-about-expected-exceptions\\\" rel=\\\"nofollow\\\"\\u003epytest.raises\\u003c/a\\u003e method.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eExpected Exceptions\\u003c/h4\\u003e\\u003ca id=\\\"user-content-expected-exceptions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Expected Exceptions\\\" href=\\\"#expected-exceptions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eWe recommend you use your test runner to check for expected exceptions (Pytest's \\u003ca href=\\\"http://pytest.org/latest/assert.html#assertions-about-expected-exceptions\\\" rel=\\\"nofollow\\\"\\u003epytest.raises\\u003c/a\\u003e context or Nose's \\u003ca href=\\\"http://nose.readthedocs.org/en/latest/testing_tools.html#nose.tools.raises\\\" rel=\\\"nofollow\\\"\\u003e@raises\\u003c/a\\u003e decorator).  In the special case of invoking a function, \\u003ccode\\u003eassertpy\\u003c/code\\u003e provides its own expected exception handling via a simple fluent API.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eGiven a function \\u003ccode\\u003esome_func()\\u003c/code\\u003e:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"def some_func(arg):\\n    raise RuntimeError('some err')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esome_func\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003earg\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eraise\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRuntimeError\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'some err'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eWe can expect a \\u003ccode\\u003eRuntimeError\\u003c/code\\u003e with:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(some_func).raises(RuntimeError).when_called_with('foo')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003esome_func\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eraises\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eRuntimeError\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ewhen_called_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAdditionally, the error message contents are chained, and can be further verified:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(some_func).raises(RuntimeError).when_called_with('foo')\\\\\\n    .is_length(8).starts_with('some').is_equal_to('some err')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003esome_func\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eraises\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eRuntimeError\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ewhen_called_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e)\\\\\\n    .\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e8\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003estarts_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'some'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'some err'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eCustom Error Messages\\u003c/h4\\u003e\\u003ca id=\\\"user-content-custom-error-messages\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Custom Error Messages\\\" href=\\\"#custom-error-messages\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSometimes you need a little more information in your failures.  For this case, \\u003ccode\\u003eassertpy\\u003c/code\\u003e includes a \\u003ccode\\u003edescribed_as()\\u003c/code\\u003e helper that will add a custom message when a failure occurs.  For example, if we had these failing assertions:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(1+2).is_equal_to(2)\\nassert_that(1+2).described_as('adding stuff').is_equal_to(2)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e+\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e+\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003edescribed_as\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'adding stuff'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eWhen run (separately, of course), they would produce these errors:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"Expected \\u0026lt;3\\u0026gt; to be equal to \\u0026lt;2\\u0026gt;, but was not.\\n[adding stuff] Expected \\u0026lt;3\\u0026gt; to be equal to \\u0026lt;2\\u0026gt;, but was not.\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003eExpected \\u0026lt;3\\u0026gt; to be equal to \\u0026lt;2\\u0026gt;, but was not.\\n[adding stuff] Expected \\u0026lt;3\\u0026gt; to be equal to \\u0026lt;2\\u0026gt;, but was not.\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003edescribed_as()\\u003c/code\\u003e helper causes the custom message \\u003ccode\\u003eadding stuff\\u003c/code\\u003e to be prepended to the front of the second error.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eJust A Warning\\u003c/h4\\u003e\\u003ca id=\\\"user-content-just-a-warning\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Just A Warning\\\" href=\\\"#just-a-warning\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThere are times when you only want a warning message instead of a failing test. For example, if you are using \\u003ccode\\u003eassertpy\\u003c/code\\u003e\\nto write defensive assertions in the normal flow of your application (not in a test).  In this case, just replace\\n\\u003ccode\\u003eassert_that\\u003c/code\\u003e with \\u003ccode\\u003eassert_warn\\u003c/code\\u003e.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_warn('foo').is_length(4)\\nassert_warn('foo').is_empty()\\nassert_warn('foo').is_false()\\nassert_warn('foo').is_digit()\\nassert_warn('123').is_alpha()\\nassert_warn('foo').is_upper()\\nassert_warn('FOO').is_lower()\\nassert_warn('foo').is_equal_to('bar')\\nassert_warn('foo').is_not_equal_to('foo')\\nassert_warn('foo').is_equal_to_ignoring_case('BAR')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_empty\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_false\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_digit\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'123'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_alpha\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_upper\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'FOO'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_lower\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'bar'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to_ignoring_case\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'BAR'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eEven though all of the above assertions fail, an \\u003ccode\\u003eAssertionError\\u003c/code\\u003e is never raised and execution is\\nnot halted.  Instead, the failed assertions merely log the following warning messages to \\u003ccode\\u003estdout\\u003c/code\\u003e:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"2019-10-27 20:00:35 WARNING [test_readme.py:423]: Expected \\u0026lt;foo\\u0026gt; to be of length \\u0026lt;4\\u0026gt;, but was \\u0026lt;3\\u0026gt;.\\n2019-10-27 20:00:35 WARNING [test_readme.py:424]: Expected \\u0026lt;foo\\u0026gt; to be empty string, but was not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:425]: Expected \\u0026lt;False\\u0026gt;, but was not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:426]: Expected \\u0026lt;foo\\u0026gt; to contain only digits, but did not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:427]: Expected \\u0026lt;123\\u0026gt; to contain only alphabetic chars, but did not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:428]: Expected \\u0026lt;foo\\u0026gt; to contain only uppercase chars, but did not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:429]: Expected \\u0026lt;FOO\\u0026gt; to contain only lowercase chars, but did not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:430]: Expected \\u0026lt;foo\\u0026gt; to be equal to \\u0026lt;bar\\u0026gt;, but was not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:431]: Expected \\u0026lt;foo\\u0026gt; to be not equal to \\u0026lt;foo\\u0026gt;, but was.\\n2019-10-27 20:00:35 WARNING [test_readme.py:432]: Expected \\u0026lt;foo\\u0026gt; to be case-insensitive equal to \\u0026lt;BAR\\u0026gt;, but was not.\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003e2019-10-27 20:00:35 WARNING [test_readme.py:423]: Expected \\u0026lt;foo\\u0026gt; to be of length \\u0026lt;4\\u0026gt;, but was \\u0026lt;3\\u0026gt;.\\n2019-10-27 20:00:35 WARNING [test_readme.py:424]: Expected \\u0026lt;foo\\u0026gt; to be empty string, but was not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:425]: Expected \\u0026lt;False\\u0026gt;, but was not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:426]: Expected \\u0026lt;foo\\u0026gt; to contain only digits, but did not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:427]: Expected \\u0026lt;123\\u0026gt; to contain only alphabetic chars, but did not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:428]: Expected \\u0026lt;foo\\u0026gt; to contain only uppercase chars, but did not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:429]: Expected \\u0026lt;FOO\\u0026gt; to contain only lowercase chars, but did not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:430]: Expected \\u0026lt;foo\\u0026gt; to be equal to \\u0026lt;bar\\u0026gt;, but was not.\\n2019-10-27 20:00:35 WARNING [test_readme.py:431]: Expected \\u0026lt;foo\\u0026gt; to be not equal to \\u0026lt;foo\\u0026gt;, but was.\\n2019-10-27 20:00:35 WARNING [test_readme.py:432]: Expected \\u0026lt;foo\\u0026gt; to be case-insensitive equal to \\u0026lt;BAR\\u0026gt;, but was not.\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch5 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eCustom Warning Logger\\u003c/h5\\u003e\\u003ca id=\\\"user-content-custom-warning-logger\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Custom Warning Logger\\\" href=\\\"#custom-warning-logger\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eBy default, warnings are written to \\u003ccode\\u003estdout\\u003c/code\\u003e with a formatter that includes timestamp, log level \\u003ccode\\u003eWARNING\\u003c/code\\u003e, and message,\\nplus some stack frame magic to find the correct filename and line number where \\u003ccode\\u003eassert_warn()\\u003c/code\\u003e was called and failed.\\nFor more control or better log formatting, you can pass in your own customer logger when you call \\u003ccode\\u003eassert_warn()\\u003c/code\\u003e.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_warn('foo', logger=my_logger).is_length(4)\\nassert_warn('foo', logger=my_logger).is_equal_to_ignoring_case('BAR')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003elogger\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emy_logger\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_warn\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003elogger\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emy_logger\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to_ignoring_case\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'BAR'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eSoft Assertions\\u003c/h3\\u003e\\u003ca id=\\\"user-content-soft-assertions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Soft Assertions\\\" href=\\\"#soft-assertions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNormally, an assertion failure will halt test execution immediately by raising an error. Soft assertions are\\nway to collect assertion failures together, to be raise all at once at the end, without halting your test.  To use\\nsoft assertions in \\u003ccode\\u003eassertpy\\u003c/code\\u003e, just use the \\u003ccode\\u003ewith soft_assertions()\\u003c/code\\u003e context manager, like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from assertpy import assert_that, soft_assertions\\n\\nwith soft_assertions():\\n    assert_that('foo').is_length(4)\\n    assert_that('foo').is_empty()\\n    assert_that('foo').is_false()\\n    assert_that('foo').is_digit()\\n    assert_that('123').is_alpha()\\n    assert_that('foo').is_upper()\\n    assert_that('FOO').is_lower()\\n    assert_that('foo').is_equal_to('bar')\\n    assert_that('foo').is_not_equal_to('foo')\\n    assert_that('foo').is_equal_to_ignoring_case('BAR')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassertpy\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassert_that\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esoft_assertions\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003ewith\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esoft_assertions\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_empty\\u003c/span\\u003e()\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_false\\u003c/span\\u003e()\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_digit\\u003c/span\\u003e()\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'123'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_alpha\\u003c/span\\u003e()\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_upper\\u003c/span\\u003e()\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'FOO'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_lower\\u003c/span\\u003e()\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'bar'\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_not_equal_to\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_equal_to_ignoring_case\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'BAR'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAt the end of the block, all assertion failures are collected together and a single \\u003ccode\\u003eAssertionError\\u003c/code\\u003e is raised:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"AssertionError: soft assertion failures:\\n1. Expected \\u0026lt;foo\\u0026gt; to be of length \\u0026lt;4\\u0026gt;, but was \\u0026lt;3\\u0026gt;.\\n2. Expected \\u0026lt;foo\\u0026gt; to be empty string, but was not.\\n3. Expected \\u0026lt;False\\u0026gt;, but was not.\\n4. Expected \\u0026lt;foo\\u0026gt; to contain only digits, but did not.\\n5. Expected \\u0026lt;123\\u0026gt; to contain only alphabetic chars, but did not.\\n6. Expected \\u0026lt;foo\\u0026gt; to contain only uppercase chars, but did not.\\n7. Expected \\u0026lt;FOO\\u0026gt; to contain only lowercase chars, but did not.\\n8. Expected \\u0026lt;foo\\u0026gt; to be equal to \\u0026lt;bar\\u0026gt;, but was not.\\n9. Expected \\u0026lt;foo\\u0026gt; to be not equal to \\u0026lt;foo\\u0026gt;, but was.\\n10. Expected \\u0026lt;foo\\u0026gt; to be case-insensitive equal to \\u0026lt;BAR\\u0026gt;, but was not.\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003eAssertionError: soft assertion failures:\\n1. Expected \\u0026lt;foo\\u0026gt; to be of length \\u0026lt;4\\u0026gt;, but was \\u0026lt;3\\u0026gt;.\\n2. Expected \\u0026lt;foo\\u0026gt; to be empty string, but was not.\\n3. Expected \\u0026lt;False\\u0026gt;, but was not.\\n4. Expected \\u0026lt;foo\\u0026gt; to contain only digits, but did not.\\n5. Expected \\u0026lt;123\\u0026gt; to contain only alphabetic chars, but did not.\\n6. Expected \\u0026lt;foo\\u0026gt; to contain only uppercase chars, but did not.\\n7. Expected \\u0026lt;FOO\\u0026gt; to contain only lowercase chars, but did not.\\n8. Expected \\u0026lt;foo\\u0026gt; to be equal to \\u0026lt;bar\\u0026gt;, but was not.\\n9. Expected \\u0026lt;foo\\u0026gt; to be not equal to \\u0026lt;foo\\u0026gt;, but was.\\n10. Expected \\u0026lt;foo\\u0026gt; to be case-insensitive equal to \\u0026lt;BAR\\u0026gt;, but was not.\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAlso, note that \\u003cem\\u003eonly\\u003c/em\\u003e assertion failures are collected, errors such as \\u003ccode\\u003eTypeError\\u003c/code\\u003e or \\u003ccode\\u003eValueError\\u003c/code\\u003e are raised immediately.\\nTriggering an explicit test failure with \\u003ccode\\u003efail()\\u003c/code\\u003e will similarly halt execution immediately.  If you need more\\nforgiving behavior, you can use \\u003ccode\\u003esoft_fail()\\u003c/code\\u003e which is collected like any other failing assertion within a soft assertions block.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eSnapshot Testing\\u003c/h3\\u003e\\u003ca id=\\\"user-content-snapshot-testing\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Snapshot Testing\\\" href=\\\"#snapshot-testing\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTake a snapshot of a python data structure, store it on disk in JSON format, and automatically compare the latest data to the stored data on every test run.  The snapshot testing features of \\u003ccode\\u003eassertpy\\u003c/code\\u003e are borrowed from \\u003ca href=\\\"https://facebook.github.io/jest/\\\" rel=\\\"nofollow\\\"\\u003eJest\\u003c/a\\u003e, a well-known and powerful Javascript testing framework.  Snapshots require Python 3.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor example, snapshot the following dict:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that({'a':1,'b':2,'c':3}).snapshot()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e()\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eStored on disk as the following JSON:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"{\\n  \\u0026quot;a\\u0026quot;: 1,\\n  \\u0026quot;b\\u0026quot;: 2,\\n  \\u0026quot;c\\u0026quot;: 3\\n}\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003e{\\n  \\\"a\\\": 1,\\n  \\\"b\\\": 2,\\n  \\\"c\\\": 3\\n}\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAdditionally, the on-disk snapshot format supports most python data structures (dict, list, object, etc).  For example:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(None).snapshot()\\nassert_that(True).snapshot()\\nassert_that(123).snapshot()\\nassert_that(-987.654).snapshot()\\nassert_that('foo').snapshot()\\nassert_that([1,2,3]).snapshot()\\nassert_that(set(['a','b','c'])).snapshot()\\nassert_that({'a':1,'b':2,'c':3}).snapshot()\\nassert_that(1 + 2j).snapshot()\\nassert_that(someobj).snapshot()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003eNone\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e123\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e987.654\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-en\\\"\\u003eset\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e])).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e+\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e2j\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003esomeobj\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e()\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSnapshot artifacts (typically found in the \\u003ccode\\u003e__snapshots\\u003c/code\\u003e folder), should be committed to source control alongside any code changes.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eOn the first run (when the snapshot file doesn't yet exist), the snapshot is created, stored to disk, and the test is passed.  On all subsequent runs, the given data is compared to the on-disk snapshot, and the test fails if they don't match.  Failure means that some change occured, so either a bug or a known implementation changed.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eUpdating Snapshots\\u003c/h4\\u003e\\u003ca id=\\\"user-content-updating-snapshots\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Updating Snapshots\\\" href=\\\"#updating-snapshots\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIt's easy to update your snapshots...just delete them all and re-run the test suite to regenerate all snapshots.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eSnapshot Parameters\\u003c/h4\\u003e\\u003ca id=\\\"user-content-snapshot-parameters\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Snapshot Parameters\\\" href=\\\"#snapshot-parameters\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eBy default, snapshots are identified by test filename plus line number.  Alternately, you can specify a custom identifier using the \\u003ccode\\u003eid\\u003c/code\\u003e keyword:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that({'a':1,'b':2,'c':3}).snapshot(id='my-custom-id')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eid\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'my-custom-id'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eBy default, all snapshots (including those with custom identifiers) are stored in the \\u003ccode\\u003e__snapshots\\u003c/code\\u003e folder.  Alternately, you can specify a custom path using the \\u003ccode\\u003epath\\u003c/code\\u003e keyword:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that({'a':1,'b':2,'c':3}).snapshot(path='my-custom-folder')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e:\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e}).\\u003cspan class=\\\"pl-en\\\"\\u003esnapshot\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epath\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'my-custom-folder'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eSnapshot Blackbox\\u003c/h4\\u003e\\u003ca id=\\\"user-content-snapshot-blackbox\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Snapshot Blackbox\\\" href=\\\"#snapshot-blackbox\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFunctional testing (which snapshot testing falls under) is very much blackbox testing.  When something goes wrong, it's hard to pinpoint the issue, because functional tests provide little \\u003cem\\u003eisolation\\u003c/em\\u003e.  On the plus side, snapshots can provide enormous \\u003cem\\u003eleverage\\u003c/em\\u003e as a few well-placed snapshot tests can strongly verify an application is working that would otherwise require dozens if not hundreds of unit tests.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eExtension System - adding custom assertions\\u003c/h3\\u003e\\u003ca id=\\\"user-content-extension-system---adding-custom-assertions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Extension System - adding custom assertions\\\" href=\\\"#extension-system---adding-custom-assertions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSometimes you want to add your own custom assertions to \\u003ccode\\u003eassertpy\\u003c/code\\u003e.  This can be done using the \\u003ccode\\u003eadd_extension()\\u003c/code\\u003e helper.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor example, we can write a custom \\u003ccode\\u003eis_5()\\u003c/code\\u003e assertion like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from assertpy import add_extension\\n\\ndef is_5(self):\\n    if self.val != 5:\\n        return self.error(f'{self.val} is NOT 5!')\\n    return self\\n\\nadd_extension(is_5)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassertpy\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eadd_extension\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eis_5\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eif\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eval\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e!=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e:\\n        \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eerror\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003ef'\\u003cspan class=\\\"pl-s1\\\"\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eval\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003c/span\\u003e is NOT 5!'\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eadd_extension\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eis_5\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eOnce registered with \\u003ccode\\u003eassertpy\\u003c/code\\u003e, we can use our new assertion as expected:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that(5).is_5()\\nassert_that(6).is_5()  # fails!\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_5\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e6\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_5\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# fails!\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eOf course, \\u003ccode\\u003eis_5()\\u003c/code\\u003e is only available in the test file where \\u003ccode\\u003eadd_extension()\\u003c/code\\u003e is called.  If you want better control of scope of your custom extensions, such as writing extensions once and using them in any test file, you'll need to use the test setup functionality of your test runner.  With \\u003ca href=\\\"http://pytest.org/latest/contents.html\\\" rel=\\\"nofollow\\\"\\u003epytest\\u003c/a\\u003e, you can just use a \\u003ccode\\u003econftest.py\\u003c/code\\u003e file and a \\u003cem\\u003efixture\\u003c/em\\u003e.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor example, if your \\u003ccode\\u003econftest.py\\u003c/code\\u003e is:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import pytest\\nfrom assertpy import add_extension\\n\\ndef is_5(self):\\n    if self.val != 5:\\n        return self.error(f'{self.val} is NOT 5!')\\n    return self\\n\\n@pytest.fixture(scope='module')\\ndef my_extensions():\\n    add_extension(is_5)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003epytest\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassertpy\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eadd_extension\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eis_5\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eif\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eval\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e!=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e:\\n        \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eerror\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003ef'\\u003cspan class=\\\"pl-s1\\\"\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eval\\u003c/span\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003c/span\\u003e is NOT 5!'\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003e@\\u003cspan class=\\\"pl-s1\\\"\\u003epytest\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003efixture\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003escope\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'module'\\u003c/span\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003emy_extensions\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eadd_extension\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eis_5\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThen in any test method in any test file (like \\u003ccode\\u003etest_foo.py\\u003c/code\\u003e for example), you just pass in the fixture and all of your extensions are available, like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from assertpy import assert_that\\n\\ndef test_foo(my_extensions):\\n    assert_that(5).is_5()\\n    assert_that(6).is_5()  # fails!\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassertpy\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eassert_that\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003etest_foo\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emy_extensions\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_5\\u003c/span\\u003e()\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e6\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_5\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# fails!\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003ewhere the \\u003ccode\\u003emy_extensions\\u003c/code\\u003e parameter must be the name of your fixture function in \\u003ccode\\u003econftest.py\\u003c/code\\u003e.  See the \\u003ca href=\\\"https://docs.pytest.org/en/latest/fixture.html\\\" rel=\\\"nofollow\\\"\\u003efixture docs\\u003c/a\\u003e for details.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eWriting custom assertions\\u003c/h4\\u003e\\u003ca id=\\\"user-content-writing-custom-assertions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Writing custom assertions\\\" href=\\\"#writing-custom-assertions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eHere are some useful tips to help you write your own custom assertions:\\u003c/p\\u003e\\n\\u003col dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003eUse \\u003ccode\\u003eself\\u003c/code\\u003e as first param (as if your function was an instance method).\\u003c/li\\u003e\\n\\u003cli\\u003eUse \\u003ccode\\u003eself.val\\u003c/code\\u003e to get the \\u003cem\\u003eactual\\u003c/em\\u003e value to be tested.\\u003c/li\\u003e\\n\\u003cli\\u003eIt's better to test the negative, and then fail if true.\\u003c/li\\u003e\\n\\u003cli\\u003eFail by raising an \\u003ccode\\u003eAssertionError\\u003c/code\\u003e (the \\u003ccode\\u003eself.error()\\u003c/code\\u003e helper does this for you).\\u003c/li\\u003e\\n\\u003cli\\u003eAlways use the \\u003ccode\\u003eself.error()\\u003c/code\\u003e helper to fail (and print your failure message).\\u003c/li\\u003e\\n\\u003cli\\u003eAlways \\u003ccode\\u003ereturn self\\u003c/code\\u003e to allow for chaining.\\u003c/li\\u003e\\n\\u003c/ol\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003ePutting it all together, here is another custom assertion example, but annotated with comments:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"def is_multiple_of(self, other):\\n    # validate actual value - must be \\u0026quot;integer\\u0026quot; (aka int or long)\\n    if isinstance(self.val, numbers.Integral) is False or self.val \\u0026lt;= 0:\\n        # bad input is error, not an assertion fail, so raise error\\n        raise TypeError('val must be a positive integer')\\n\\n    # validate expected value\\n    if isinstance(other, numbers.Integral) is False or other \\u0026lt;= 0:\\n        raise TypeError('given arg must be a positive integer')\\n\\n    # calc remainder using divmod() built-in\\n    _, rem = divmod(self.val, other)\\n\\n    # test the negative (is remainder non-zero?)\\n    if rem \\u0026gt; 0:\\n        # non-zero remainder, so not multiple -\\u0026gt; we fail!\\n        return self.error('Expected \\u0026lt;%s\\u0026gt; to be multiple of \\u0026lt;%s\\u0026gt;, but was not.' % (self.val, other))\\n\\n    # success, and return self to allow chaining\\n    return self\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eis_multiple_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eother\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# validate actual value - must be \\\"integer\\\" (aka int or long)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eif\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eisinstance\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eval\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003enumbers\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eIntegral\\u003c/span\\u003e) \\u003cspan class=\\\"pl-c1\\\"\\u003eis\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eor\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eval\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026lt;=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e:\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# bad input is error, not an assertion fail, so raise error\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eraise\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eTypeError\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'val must be a positive integer'\\u003c/span\\u003e)\\n\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# validate expected value\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eif\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eisinstance\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eother\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003enumbers\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eIntegral\\u003c/span\\u003e) \\u003cspan class=\\\"pl-c1\\\"\\u003eis\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eor\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eother\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026lt;=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e:\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eraise\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eTypeError\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'given arg must be a positive integer'\\u003c/span\\u003e)\\n\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# calc remainder using divmod() built-in\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003e_\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003erem\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003edivmod\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eval\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eother\\u003c/span\\u003e)\\n\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# test the negative (is remainder non-zero?)\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eif\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003erem\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e:\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# non-zero remainder, so not multiple -\\u0026gt; we fail!\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eerror\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Expected \\u0026lt;%s\\u0026gt; to be multiple of \\u0026lt;%s\\u0026gt;, but was not.'\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e%\\u003c/span\\u003e (\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eval\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eother\\u003c/span\\u003e))\\n\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# success, and return self to allow chaining\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eChaining\\u003c/h3\\u003e\\u003ca id=\\\"user-content-chaining\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Chaining\\\" href=\\\"#chaining\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eOne of the nicest aspects of any fluent API is the ability to chain methods together.  In the case of \\u003ccode\\u003eassertpy\\u003c/code\\u003e, chaining\\nallows you to write assertions as single statement -- that reads like a sentence, and is easy to understand.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eHere are just a few examples:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"assert_that('foo').is_length(3).starts_with('f').ends_with('oo')\\n\\nassert_that([1,2,3]).is_type_of(list).contains(1,2).does_not_contain(4,5)\\n\\nassert_that(fred).has_first_name('Fred').has_last_name('Smith').has_shoe_size(12)\\n\\nassert_that(people).is_length(2).extracting('first_name').contains('Fred','Joe')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'foo'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003estarts_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'f'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eends_with\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'oo'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e([\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e]).\\u003cspan class=\\\"pl-en\\\"\\u003eis_type_of\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elist\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003edoes_not_contain\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e4\\u003c/span\\u003e,\\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efred\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_first_name\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_last_name\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Smith'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003ehas_shoe_size\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e12\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003eassert_that\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epeople\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eis_length\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eextracting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'first_name'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003econtains\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'Fred'\\u003c/span\\u003e,\\u003cspan class=\\\"pl-s\\\"\\u003e'Joe'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eFuture\\u003c/h2\\u003e\\u003ca id=\\\"user-content-future\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Future\\\" href=\\\"#future\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThere are always a few new features in the works...if you'd like to help, check out the \\u003ca href=\\\"https://github.com/assertpy/assertpy/issues\\\"\\u003eopen issues\\u003c/a\\u003e and see our \\u003ca href=\\\"/assertpy/assertpy/blob/main/CONTRIBUTING.md\\\"\\u003eContributing\\u003c/a\\u003e doc.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eLicense\\u003c/h2\\u003e\\u003ca id=\\\"user-content-license\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: License\\\" href=\\\"#license\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAll files are licensed under the BSD 3-Clause License as follows:\\u003c/p\\u003e\\n\\u003cblockquote\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eCopyright (c) 2015-2019, Activision Publishing, Inc.\\nAll rights reserved.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\\u003c/p\\u003e\\n\\u003col dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\\u003c/p\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ol\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\u003c/p\\u003e\\n\\u003c/blockquote\\u003e\\n\\u003c/article\\u003e\",\"loaded\":true,\"timedOut\":false,\"errorMessage\":null,\"headerInfo\":{\"toc\":[{\"level\":1,\"text\":\"assertpy\",\"anchor\":\"assertpy\",\"htmlText\":\"assertpy\"},{\"level\":2,\"text\":\"Usage\",\"anchor\":\"usage\",\"htmlText\":\"Usage\"},{\"level\":2,\"text\":\"Installation\",\"anchor\":\"installation\",\"htmlText\":\"Installation\"},{\"level\":3,\"text\":\"Install via pip\",\"anchor\":\"install-via-pip\",\"htmlText\":\"Install via pip\"},{\"level\":3,\"text\":\"Install via conda\",\"anchor\":\"install-via-conda\",\"htmlText\":\"Install via conda\"},{\"level\":2,\"text\":\"Docs\",\"anchor\":\"docs\",\"htmlText\":\"Docs\"},{\"level\":3,\"text\":\"Strings\",\"anchor\":\"strings\",\"htmlText\":\"Strings\"},{\"level\":3,\"text\":\"Numbers\",\"anchor\":\"numbers\",\"htmlText\":\"Numbers\"},{\"level\":3,\"text\":\"Lists\",\"anchor\":\"lists\",\"htmlText\":\"Lists\"},{\"level\":4,\"text\":\"List Flattening\",\"anchor\":\"list-flattening\",\"htmlText\":\"List Flattening\"},{\"level\":3,\"text\":\"Tuples\",\"anchor\":\"tuples\",\"htmlText\":\"Tuples\"},{\"level\":4,\"text\":\"Tuple Flattening\",\"anchor\":\"tuple-flattening\",\"htmlText\":\"Tuple Flattening\"},{\"level\":3,\"text\":\"Dicts\",\"anchor\":\"dicts\",\"htmlText\":\"Dicts\"},{\"level\":4,\"text\":\"Dict Comparison\",\"anchor\":\"dict-comparison\",\"htmlText\":\"Dict Comparison\"},{\"level\":4,\"text\":\"Dict Flattening\",\"anchor\":\"dict-flattening\",\"htmlText\":\"Dict Flattening\"},{\"level\":4,\"text\":\"Dict Key Assertions\",\"anchor\":\"dict-key-assertions\",\"htmlText\":\"Dict Key Assertions\"},{\"level\":3,\"text\":\"Sets\",\"anchor\":\"sets\",\"htmlText\":\"Sets\"},{\"level\":3,\"text\":\"Booleans\",\"anchor\":\"booleans\",\"htmlText\":\"Booleans\"},{\"level\":3,\"text\":\"None\",\"anchor\":\"none\",\"htmlText\":\"None\"},{\"level\":3,\"text\":\"Dates\",\"anchor\":\"dates\",\"htmlText\":\"Dates\"},{\"level\":3,\"text\":\"Files\",\"anchor\":\"files\",\"htmlText\":\"Files\"},{\"level\":3,\"text\":\"Objects\",\"anchor\":\"objects\",\"htmlText\":\"Objects\"},{\"level\":4,\"text\":\"Extracting Attributes from Objects\",\"anchor\":\"extracting-attributes-from-objects\",\"htmlText\":\"Extracting Attributes from Objects\"},{\"level\":5,\"text\":\"Extracting and Filtering\",\"anchor\":\"extracting-and-filtering\",\"htmlText\":\"Extracting and Filtering\"},{\"level\":5,\"text\":\"Extracting and Sorting\",\"anchor\":\"extracting-and-sorting\",\"htmlText\":\"Extracting and Sorting\"},{\"level\":4,\"text\":\"Dynamic Assertions on Objects\",\"anchor\":\"dynamic-assertions-on-objects\",\"htmlText\":\"Dynamic Assertions on Objects\"},{\"level\":3,\"text\":\"Failure\",\"anchor\":\"failure\",\"htmlText\":\"Failure\"},{\"level\":4,\"text\":\"Expected Exceptions\",\"anchor\":\"expected-exceptions\",\"htmlText\":\"Expected Exceptions\"},{\"level\":4,\"text\":\"Custom Error Messages\",\"anchor\":\"custom-error-messages\",\"htmlText\":\"Custom Error Messages\"},{\"level\":4,\"text\":\"Just A Warning\",\"anchor\":\"just-a-warning\",\"htmlText\":\"Just A Warning\"},{\"level\":5,\"text\":\"Custom Warning Logger\",\"anchor\":\"custom-warning-logger\",\"htmlText\":\"Custom Warning Logger\"},{\"level\":3,\"text\":\"Soft Assertions\",\"anchor\":\"soft-assertions\",\"htmlText\":\"Soft Assertions\"},{\"level\":3,\"text\":\"Snapshot Testing\",\"anchor\":\"snapshot-testing\",\"htmlText\":\"Snapshot Testing\"},{\"level\":4,\"text\":\"Updating Snapshots\",\"anchor\":\"updating-snapshots\",\"htmlText\":\"Updating Snapshots\"},{\"level\":4,\"text\":\"Snapshot Parameters\",\"anchor\":\"snapshot-parameters\",\"htmlText\":\"Snapshot Parameters\"},{\"level\":4,\"text\":\"Snapshot Blackbox\",\"anchor\":\"snapshot-blackbox\",\"htmlText\":\"Snapshot Blackbox\"},{\"level\":3,\"text\":\"Extension System - adding custom assertions\",\"anchor\":\"extension-system---adding-custom-assertions\",\"htmlText\":\"Extension System - adding custom assertions\"},{\"level\":4,\"text\":\"Writing custom assertions\",\"anchor\":\"writing-custom-assertions\",\"htmlText\":\"Writing custom assertions\"},{\"level\":3,\"text\":\"Chaining\",\"anchor\":\"chaining\",\"htmlText\":\"Chaining\"},{\"level\":2,\"text\":\"Future\",\"anchor\":\"future\",\"htmlText\":\"Future\"},{\"level\":2,\"text\":\"License\",\"anchor\":\"license\",\"htmlText\":\"License\"}],\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Fassertpy%2Fassertpy\"}},{\"displayName\":\"LICENSE\",\"repoName\":\"assertpy\",\"refName\":\"main\",\"path\":\"LICENSE\",\"preferredFileType\":\"license\",\"tabName\":\"BSD-3-Clause\",\"richText\":null,\"loaded\":false,\"timedOut\":false,\"errorMessage\":null,\"headerInfo\":{\"toc\":null,\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Fassertpy%2Fassertpy\"}}],\"overviewFilesProcessingTime\":42.764047}},\"appPayload\":{\"helpUrl\":\"https://docs.github.com\",\"findFileWorkerPath\":\"/assets-cdn/worker/find-file-worker-32bb159cc57c.js\",\"findInFileWorkerPath\":\"/assets-cdn/worker/find-in-file-worker-c6704d501c10.js\",\"githubDevUrl\":null,\"enabled_features\":{\"code_nav_ui_events\":false,\"copilot_conversational_ux\":false,\"copilot_conversational_ux_embedding_update\":false,\"copilot_popover_file_editor_header\":false,\"copilot_smell_icebreaker_ux\":true,\"copilot_workspace\":false,\"codeview_firefox_inert\":true}}}}</script>  <div data-target=\"react-partial.reactRoot\"><style data-styled=\"true\" data-styled-version=\"5.3.6\">.cgQnMS{font-weight:600;font-size:32px;margin:0;}/*!sc*/data-styled.g1[id=\"Heading__StyledHeading-sc-1c1dgg0-0\"]{content:\"cgQnMS,\"}/*!sc*/.izjvBm{margin-top:16px;margin-bottom:16px;}/*!sc*/.rPQgy{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}/*!sc*/.eUMEDg{margin-bottom:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;row-gap:16px;}/*!sc*/.eLcVee{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;padding-bottom:16px;padding-top:8px;}/*!sc*/.hsfLlq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;gap:8px;}/*!sc*/@media screen and (max-width:320px){.hsfLlq{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}}/*!sc*/.gpKoUz{position:relative;}/*!sc*/@media screen and (max-width:380px){.gpKoUz .ref-selector-button-text-container{max-width:80px;}}/*!sc*/@media screen and (max-width:320px){.gpKoUz{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}.gpKoUz .overview-ref-selector{width:100%;}.gpKoUz .overview-ref-selector > span{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}.gpKoUz .overview-ref-selector > span > span[data-component=\"text\"]{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}}/*!sc*/.kkrdEu{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}/*!sc*/.bKgizp{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;}/*!sc*/.iPGYsi{margin-right:4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.dKmYfk{font-size:14px;min-width:0;max-width:125px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}/*!sc*/.trpoQ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;pointer-events:none;}/*!sc*/.laYubZ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (max-width:1079px){.laYubZ{display:none;}}/*!sc*/.swnaL{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (min-width:1080px){.swnaL{display:none;}}/*!sc*/@media screen and (max-width:543px){.swnaL{display:none;}}/*!sc*/.bWpuBf{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding-left:8px;gap:8px;}/*!sc*/.grHjNb{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:8px;}/*!sc*/@media screen and (max-width:543px){.grHjNb{display:none;}}/*!sc*/.dXTsqj{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (max-width:1011px){.dXTsqj{display:none;}}/*!sc*/.dCOrmu{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (min-width:1012px){.dCOrmu{display:none;}}/*!sc*/@media screen and (max-width:544px){.bVvbgP{display:none;}}/*!sc*/.bNDvfp{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (min-width:544px){.bNDvfp{display:none;}}/*!sc*/.yfPnm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;gap:16px;}/*!sc*/.cAQuiW{width:100%;border-collapse:separate;border-spacing:0;border:1px solid;border-color:var(--borderColor-default,var(--color-border-default,#d0d7de));border-radius:6px;table-layout:fixed;overflow:unset;}/*!sc*/.iiUlLN{height:0px;line-height:0px;}/*!sc*/.iiUlLN tr{height:0px;font-size:0px;}/*!sc*/.jmggSN{padding:16px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));font-size:12px;text-align:left;height:40px;}/*!sc*/.jmggSN th{padding-left:16px;background-color:var(--bgColor-muted,var(--color-canvas-subtle,#f6f8fa));}/*!sc*/.kvYunM{width:100%;border-top-left-radius:6px;}/*!sc*/@media screen and (min-width:544px){.kvYunM{display:none;}}/*!sc*/.hrLuxA{width:40%;border-top-left-radius:6px;}/*!sc*/@media screen and (max-width:543px){.hrLuxA{display:none;}}/*!sc*/@media screen and (max-width:543px){.ePjhhA{display:none;}}/*!sc*/.cuEKae{text-align:right;padding-right:16px;width:136px;border-top-right-radius:6px;}/*!sc*/.jEbBOT{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));font-size:12px;height:40px;}/*!sc*/.bTxCvM{background-color:var(--bgColor-muted,var(--color-canvas-subtle,#f6f8fa));padding:4px;border-top-left-radius:6px;border-top-right-radius:6px;}/*!sc*/.eYedVD{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:8px;min-width:273px;padding-right:8px;padding-left:16px;padding-top:8px;padding-bottom:8px;}/*!sc*/.jGfYmh{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:8px;}/*!sc*/.lhFvfi{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/.bqgLjk{display:inherit;}/*!sc*/@media screen and (min-width:544px){.bqgLjk{display:none;}}/*!sc*/@media screen and (min-width:768px){.bqgLjk{display:none;}}/*!sc*/.epsqEd{text-align:center;vertical-align:center;height:40px;border-top:1px solid;border-color:var(--borderColor-default,var(--color-border-default,#d0d7de));}/*!sc*/.ldpruc{border-top:1px solid var(--borderColor-default,var(--color-border-default));cursor:pointer;}/*!sc*/.ehcSsh{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;gap:16px;}/*!sc*/.iGmlUb{border:1px solid;border-color:var(--borderColor-default,var(--color-border-default,#d0d7de));border-radius:6px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}/*!sc*/@media screen and (max-width:543px){.iGmlUb{margin-left:-16px;margin-right:-16px;max-width:calc(100% + 32px);}}/*!sc*/@media screen and (min-width:544px){.iGmlUb{max-width:100%;}}/*!sc*/.iRQGXA{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;border-bottom:1px solid;border-bottom-color:var(--borderColor-default,var(--color-border-default,#d0d7de));-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-right:8px;position:-webkit-sticky;position:sticky;top:0;background-color:var(--bgColor-default,var(--color-canvas-default,#ffffff));z-index:1;border-top-left-radius:6px;border-top-right-radius:6px;}/*!sc*/.dvTdPK{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding-left:8px;padding-right:8px;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;border-bottom:none;border-bottom-color:var(--borderColor-muted,var(--color-border-muted,hsla(210,18%,87%,1)));align:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:48px;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;}/*!sc*/.gwuIGu{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/.kOxwQs{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;margin-right:8px;}/*!sc*/.kOgeFj{font-weight:600;}/*!sc*/.bJMeLZ{padding:32px;overflow:auto;}/*!sc*/data-styled.g2[id=\"Box-sc-g0xbh4-0\"]{content:\"izjvBm,rPQgy,eUMEDg,eLcVee,hsfLlq,gpKoUz,kkrdEu,bKgizp,iPGYsi,dKmYfk,trpoQ,laYubZ,swnaL,bWpuBf,grHjNb,dXTsqj,dCOrmu,bVvbgP,bNDvfp,yfPnm,cAQuiW,iiUlLN,jmggSN,kvYunM,hrLuxA,ePjhhA,cuEKae,jEbBOT,bTxCvM,eYedVD,jGfYmh,lhFvfi,bqgLjk,epsqEd,ldpruc,ehcSsh,iGmlUb,iRQGXA,dvTdPK,gwuIGu,kOxwQs,kOgeFj,bJMeLZ,\"}/*!sc*/.bOMzPg{min-width:0;}/*!sc*/.eUGNHp{font-weight:600;}/*!sc*/.dALsKK{color:var(--fgColor-default,var(--color-fg-default,#1F2328));}/*!sc*/data-styled.g6[id=\"Text-sc-17v1xeu-0\"]{content:\"bOMzPg,eUGNHp,dALsKK,\"}/*!sc*/.dheQRw{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));-webkit-text-decoration:none;text-decoration:none;}/*!sc*/[data-a11y-link-underlines='true'] .Link__StyledLink-sc-14289xe-0[data-inline='true']{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.dheQRw:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.dheQRw:is(button){display:inline-block;padding:0;font-size:inherit;white-space:nowrap;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;}/*!sc*/.vLMkZ{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));-webkit-text-decoration:none;text-decoration:none;position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;color:var(--fgColor-default,var(--color-fg-default,#1F2328));text-align:center;-webkit-text-decoration:none;text-decoration:none;line-height:calc(20/14);border-radius:6px;font-size:14px;padding-left:8px;padding-right:8px;padding-top:calc((2rem - 1.25rem) / 2);padding-bottom:calc((2rem - 1.25rem) / 2);}/*!sc*/[data-a11y-link-underlines='true'] .Link__StyledLink-sc-14289xe-0[data-inline='true']{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.vLMkZ:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.vLMkZ:is(button){display:inline-block;padding:0;font-size:inherit;white-space:nowrap;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;}/*!sc*/.vLMkZ span[data-component=\"icon\"]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/@media (hover:hover){.vLMkZ:hover{background-color:var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));-webkit-transition:background .12s ease-out;transition:background .12s ease-out;-webkit-text-decoration:none;text-decoration:none;}}/*!sc*/.vLMkZ:focus{outline:2px solid transparent;}/*!sc*/.vLMkZ:focus{box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.vLMkZ:focus:not(:focus-visible){box-shadow:none;}/*!sc*/.vLMkZ:focus-visible{outline:2px solid transparent;box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.vLMkZ span[data-content]::before{content:attr(data-content);display:block;height:0;font-weight:600;visibility:hidden;white-space:nowrap;}/*!sc*/.vLMkZ::after{position:absolute;right:50%;bottom:calc(50% - 25px);width:100%;height:2px;content:\"\";background-color:var(--underlineNav-borderColor-active,var(--color-primer-border-active,#fd8c73));border-radius:0;-webkit-transform:translate(50%,-50%);-ms-transform:translate(50%,-50%);transform:translate(50%,-50%);}/*!sc*/@media (forced-colors:active){.vLMkZ::after{background-color:LinkText;}}/*!sc*/.bhqztV{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));-webkit-text-decoration:none;text-decoration:none;position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;color:var(--fgColor-default,var(--color-fg-default,#1F2328));text-align:center;-webkit-text-decoration:none;text-decoration:none;line-height:calc(20/14);border-radius:6px;font-size:14px;padding-left:8px;padding-right:8px;padding-top:calc((2rem - 1.25rem) / 2);padding-bottom:calc((2rem - 1.25rem) / 2);}/*!sc*/[data-a11y-link-underlines='true'] .Link__StyledLink-sc-14289xe-0[data-inline='true']{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.bhqztV:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.bhqztV:is(button){display:inline-block;padding:0;font-size:inherit;white-space:nowrap;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;}/*!sc*/.bhqztV span[data-component=\"icon\"]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/@media (hover:hover){.bhqztV:hover{background-color:var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));-webkit-transition:background .12s ease-out;transition:background .12s ease-out;-webkit-text-decoration:none;text-decoration:none;}}/*!sc*/.bhqztV:focus{outline:2px solid transparent;}/*!sc*/.bhqztV:focus{box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.bhqztV:focus:not(:focus-visible){box-shadow:none;}/*!sc*/.bhqztV:focus-visible{outline:2px solid transparent;box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.bhqztV span[data-content]::before{content:attr(data-content);display:block;height:0;font-weight:600;visibility:hidden;white-space:nowrap;}/*!sc*/.bhqztV::after{position:absolute;right:50%;bottom:calc(50% - 25px);width:100%;height:2px;content:\"\";background-color:transparent;border-radius:0;-webkit-transform:translate(50%,-50%);-ms-transform:translate(50%,-50%);transform:translate(50%,-50%);}/*!sc*/@media (forced-colors:active){.bhqztV::after{background-color:transparent;}}/*!sc*/data-styled.g8[id=\"Link__StyledLink-sc-14289xe-0\"]{content:\"dheQRw,vLMkZ,bhqztV,\"}/*!sc*/.izDscS{border-radius:6px;border:1px solid;border-color:var(--button-default-borderColor-rest,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:var(--button-default-bgColor-rest,var(--color-btn-bg,#f6f8fa));box-shadow:var(--button-default-shadow-resting,var(--color-btn-shadow,0 1px 0 rgba(31,35,40,0.04))),var(--button-default-shadow-inset,var(--color-btn-inset-shadow,inset 0 1px 0 rgba(255,255,255,0.25)));}/*!sc*/.izDscS:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.izDscS:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.izDscS:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.izDscS[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.izDscS[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.izDscS:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.izDscS:active{-webkit-transition:none;transition:none;}/*!sc*/.izDscS[data-inactive]{cursor:auto;}/*!sc*/.izDscS:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));border-color:var(--button-default-borderColor-disabled,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS:disabled [data-component=ButtonCounter]{color:inherit;}/*!sc*/@media (forced-colors:active){.izDscS:focus{outline:solid 1px transparent;}}/*!sc*/.izDscS [data-component=ButtonCounter]{font-size:12px;background-color:var(--buttonCounter-default-bgColor-rest,var(--color-btn-counter-bg,rgba(31,35,40,0.08)));}/*!sc*/.izDscS[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.izDscS[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.izDscS[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.izDscS[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.izDscS[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.izDscS[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.izDscS[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.izDscS[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.izDscS[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.izDscS[data-block=\"block\"]{width:100%;}/*!sc*/.izDscS[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.izDscS[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.izDscS [data-component=\"leadingVisual\"]{grid-area:leadingVisual;}/*!sc*/.izDscS [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.izDscS [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.izDscS [data-component=\"trailingAction\"]{margin-right:-4px;}/*!sc*/.izDscS [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.izDscS [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.izDscS:hover:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-hover,var(--color-btn-hover-bg,#f3f4f6));border-color:var(--button-default-borderColor-hover,var(--button-default-borderColor-hover,var(--color-btn-hover-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS:active:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS[aria-expanded=true]{background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS [data-component=\"leadingVisual\"],.izDscS [data-component=\"trailingVisual\"],.izDscS [data-component=\"trailingAction\"]{color:var(--button-color,var(--fgColor-muted,var(--color-fg-muted,#656d76)));}/*!sc*/.izDscS{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/.izDscS svg{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.izDscS > span{width:inherit;}/*!sc*/.cuOWTR{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:transparent;box-shadow:none;}/*!sc*/.cuOWTR:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.cuOWTR:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.cuOWTR:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.cuOWTR[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.cuOWTR[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.cuOWTR:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.cuOWTR:active{-webkit-transition:none;transition:none;}/*!sc*/.cuOWTR[data-inactive]{cursor:auto;}/*!sc*/.cuOWTR:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.cuOWTR:disabled [data-component=ButtonCounter],.cuOWTR:disabled [data-component=\"leadingVisual\"],.cuOWTR:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.cuOWTR:focus{outline:solid 1px transparent;}}/*!sc*/.cuOWTR [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.cuOWTR[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.cuOWTR[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.cuOWTR[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.cuOWTR[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.cuOWTR[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.cuOWTR[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.cuOWTR[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.cuOWTR[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.cuOWTR[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.cuOWTR[data-block=\"block\"]{width:100%;}/*!sc*/.cuOWTR[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.cuOWTR[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.cuOWTR [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.cuOWTR [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.cuOWTR [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.cuOWTR [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.cuOWTR [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.cuOWTR [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.cuOWTR:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));}/*!sc*/.cuOWTR:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));}/*!sc*/.cuOWTR[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.cuOWTR[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.cuOWTR[data-no-visuals]{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.cuOWTR:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.cuOWTR:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.cuOWTR:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.cuOWTR{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));padding-left:4px;padding-right:4px;}/*!sc*/.cuOWTR span[data-component=\"leadingVisual\"]{margin-right:4px !important;}/*!sc*/.tDSzd{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:transparent;box-shadow:none;}/*!sc*/.tDSzd:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.tDSzd:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.tDSzd:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.tDSzd[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.tDSzd[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.tDSzd:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.tDSzd:active{-webkit-transition:none;transition:none;}/*!sc*/.tDSzd[data-inactive]{cursor:auto;}/*!sc*/.tDSzd:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.tDSzd:disabled [data-component=ButtonCounter],.tDSzd:disabled [data-component=\"leadingVisual\"],.tDSzd:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.tDSzd:focus{outline:solid 1px transparent;}}/*!sc*/.tDSzd [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.tDSzd[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.tDSzd[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.tDSzd[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.tDSzd[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.tDSzd[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.tDSzd[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.tDSzd[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.tDSzd[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.tDSzd[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.tDSzd[data-block=\"block\"]{width:100%;}/*!sc*/.tDSzd[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.tDSzd[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.tDSzd [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.tDSzd [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.tDSzd [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.tDSzd [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.tDSzd:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));}/*!sc*/.tDSzd:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));}/*!sc*/.tDSzd[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.tDSzd[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd[data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.tDSzd:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.tDSzd:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.ftZGca{border-radius:6px;border:1px solid;border-color:var(--button-default-borderColor-rest,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:var(--button-default-bgColor-rest,var(--color-btn-bg,#f6f8fa));box-shadow:var(--button-default-shadow-resting,var(--color-btn-shadow,0 1px 0 rgba(31,35,40,0.04))),var(--button-default-shadow-inset,var(--color-btn-inset-shadow,inset 0 1px 0 rgba(255,255,255,0.25)));}/*!sc*/.ftZGca:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.ftZGca:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.ftZGca:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.ftZGca[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.ftZGca[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.ftZGca:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.ftZGca:active{-webkit-transition:none;transition:none;}/*!sc*/.ftZGca[data-inactive]{cursor:auto;}/*!sc*/.ftZGca:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));border-color:var(--button-default-borderColor-disabled,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca:disabled [data-component=ButtonCounter]{color:inherit;}/*!sc*/@media (forced-colors:active){.ftZGca:focus{outline:solid 1px transparent;}}/*!sc*/.ftZGca [data-component=ButtonCounter]{font-size:12px;background-color:var(--buttonCounter-default-bgColor-rest,var(--color-btn-counter-bg,rgba(31,35,40,0.08)));}/*!sc*/.ftZGca[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.ftZGca[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.ftZGca[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.ftZGca[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.ftZGca[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.ftZGca[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.ftZGca[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.ftZGca[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.ftZGca[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.ftZGca[data-block=\"block\"]{width:100%;}/*!sc*/.ftZGca[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.ftZGca[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.ftZGca [data-component=\"leadingVisual\"]{grid-area:leadingVisual;}/*!sc*/.ftZGca [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.ftZGca [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.ftZGca [data-component=\"trailingAction\"]{margin-right:-4px;}/*!sc*/.ftZGca [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.ftZGca [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.ftZGca:hover:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-hover,var(--color-btn-hover-bg,#f3f4f6));border-color:var(--button-default-borderColor-hover,var(--button-default-borderColor-hover,var(--color-btn-hover-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca:active:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca[aria-expanded=true]{background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca [data-component=\"leadingVisual\"],.ftZGca [data-component=\"trailingVisual\"],.ftZGca [data-component=\"trailingAction\"]{color:var(--button-color,var(--fgColor-muted,var(--color-fg-muted,#656d76)));}/*!sc*/.gYvpXq{border-radius:6px;border:1px solid;border-color:var(--button-primary-borderColor-rest,var(--color-btn-primary-border,rgba(31,35,40,0.15)));font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-primary-fgColor-rest,var(--color-btn-primary-text,#ffffff));background-color:var(--button-primary-bgColor-rest,var(--color-btn-primary-bg,#1f883d));box-shadow:var(--shadow-resting-small,var(--color-btn-primary-shadow,0 1px 0 rgba(31,35,40,0.1)));}/*!sc*/.gYvpXq:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.gYvpXq:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.gYvpXq:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.gYvpXq[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.gYvpXq[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.gYvpXq:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.gYvpXq:active{-webkit-transition:none;transition:none;}/*!sc*/.gYvpXq[data-inactive]{cursor:auto;}/*!sc*/.gYvpXq:disabled{cursor:not-allowed;box-shadow:none;color:var(--button-primary-fgColor-disabled,var(--color-btn-primary-disabled-text,rgba(255,255,255,0.8)));background-color:var(--button-primary-bgColor-disabled,var(--color-btn-primary-disabled-bg,#94d3a2));border-color:var(--button-primary-borderColor-disabled,var(--color-btn-primary-disabled-border,rgba(31,35,40,0.15)));}/*!sc*/.gYvpXq:disabled [data-component=ButtonCounter]{color:inherit;}/*!sc*/@media (forced-colors:active){.gYvpXq:focus{outline:solid 1px transparent;}}/*!sc*/.gYvpXq [data-component=ButtonCounter]{font-size:12px;background-color:var(--buttonCounter-primary-bgColor-rest,var(--color-btn-primary-counter-bg,rgba(0,45,17,0.2)));color:var(--button-primary-fgColor-rest,var(--color-btn-primary-text,#ffffff));}/*!sc*/.gYvpXq[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.gYvpXq[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.gYvpXq[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.gYvpXq[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.gYvpXq[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.gYvpXq[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.gYvpXq[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.gYvpXq[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.gYvpXq[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.gYvpXq[data-block=\"block\"]{width:100%;}/*!sc*/.gYvpXq[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.gYvpXq[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.gYvpXq [data-component=\"leadingVisual\"]{grid-area:leadingVisual;}/*!sc*/.gYvpXq [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.gYvpXq [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.gYvpXq [data-component=\"trailingAction\"]{margin-right:-4px;}/*!sc*/.gYvpXq [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.gYvpXq [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.gYvpXq:hover:not([disabled]):not([data-inactive]){color:btn.primary.hoverText;background-color:var(--button-primary-bgColor-hover,var(--color-btn-primary-hover-bg,#1a7f37));}/*!sc*/.gYvpXq:focus:not([disabled]){box-shadow:inset 0 0 0 3px;}/*!sc*/.gYvpXq:focus-visible:not([disabled]){box-shadow:inset 0 0 0 3px;}/*!sc*/.gYvpXq:active:not([disabled]):not([data-inactive]){background-color:var(--button-primary-bgColor-active,var(--color-btn-primary-selected-bg,hsla(137,66%,28%,1)));box-shadow:var(--button-primary-shadow-selected,var(--color-btn-primary-selected-shadow,inset 0 1px 0 rgba(0,45,17,0.2)));}/*!sc*/.gYvpXq[aria-expanded=true]{background-color:var(--button-primary-bgColor-active,var(--color-btn-primary-selected-bg,hsla(137,66%,28%,1)));box-shadow:var(--button-primary-shadow-selected,var(--color-btn-primary-selected-shadow,inset 0 1px 0 rgba(0,45,17,0.2)));}/*!sc*/.gYvpXq svg{color:fg.primary;}/*!sc*/.fAkXQN{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--fgColor-default,var(--color-fg-default,#1F2328));background-color:transparent;box-shadow:none;}/*!sc*/.fAkXQN:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.fAkXQN:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.fAkXQN:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.fAkXQN[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.fAkXQN[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.fAkXQN:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.fAkXQN:active{-webkit-transition:none;transition:none;}/*!sc*/.fAkXQN[data-inactive]{cursor:auto;}/*!sc*/.fAkXQN:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.fAkXQN:disabled [data-component=ButtonCounter],.fAkXQN:disabled [data-component=\"leadingVisual\"],.fAkXQN:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.fAkXQN:focus{outline:solid 1px transparent;}}/*!sc*/.fAkXQN [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.fAkXQN[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.fAkXQN[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.fAkXQN[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.fAkXQN[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.fAkXQN[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.fAkXQN[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.fAkXQN[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.fAkXQN[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.fAkXQN[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.fAkXQN[data-block=\"block\"]{width:100%;}/*!sc*/.fAkXQN[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.fAkXQN[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.fAkXQN [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.fAkXQN [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.fAkXQN [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.fAkXQN [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.fAkXQN [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.fAkXQN [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.fAkXQN:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.fAkXQN:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.fAkXQN[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.fAkXQN[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.fAkXQN[data-no-visuals]{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.fAkXQN:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.fAkXQN:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.fAkXQN:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.fAkXQN:focus:not([disabled]){-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.jPraEl{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:transparent;box-shadow:none;}/*!sc*/.jPraEl:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.jPraEl:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.jPraEl:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.jPraEl[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.jPraEl[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.jPraEl:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.jPraEl:active{-webkit-transition:none;transition:none;}/*!sc*/.jPraEl[data-inactive]{cursor:auto;}/*!sc*/.jPraEl:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.jPraEl:disabled [data-component=ButtonCounter],.jPraEl:disabled [data-component=\"leadingVisual\"],.jPraEl:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.jPraEl:focus{outline:solid 1px transparent;}}/*!sc*/.jPraEl [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.jPraEl[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.jPraEl[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.jPraEl[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.jPraEl[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.jPraEl[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.jPraEl[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.jPraEl[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.jPraEl[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.jPraEl[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.jPraEl[data-block=\"block\"]{width:100%;}/*!sc*/.jPraEl[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.jPraEl[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.jPraEl [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.jPraEl [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.jPraEl [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.jPraEl [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.jPraEl [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.jPraEl [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.jPraEl:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));}/*!sc*/.jPraEl:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));}/*!sc*/.jPraEl[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.jPraEl[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.jPraEl[data-no-visuals]{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.jPraEl:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.jPraEl:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.jPraEl:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.jPraEl{color:var(--fgColor-muted,var(--color-fg-subtle,#6e7781));padding-left:8px;padding-right:8px;}/*!sc*/data-styled.g9[id=\"types__StyledButton-sc-ws60qy-0\"]{content:\"izDscS,cuOWTR,tDSzd,ftZGca,gYvpXq,fAkXQN,jPraEl,\"}/*!sc*/.rTZSs{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;-webkit-clip:rect(0,0,0,0);clip:rect(0,0,0,0);white-space:nowrap;border-width:0;}/*!sc*/data-styled.g10[id=\"_VisuallyHidden__VisuallyHidden-sc-11jhm7a-0\"]{content:\"rTZSs,\"}/*!sc*/.fUpWeN{display:inline-block;overflow:hidden;text-overflow:ellipsis;vertical-align:top;white-space:nowrap;max-width:125px;max-width:100%;}/*!sc*/data-styled.g15[id=\"Truncate__StyledTruncate-sc-23o1d2-0\"]{content:\"fUpWeN,\"}/*!sc*/.dMjscx{position:relative;display:inline-block;}/*!sc*/.dMjscx::before{position:absolute;z-index:1000001;display:none;width:0px;height:0px;color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));pointer-events:none;content:'';border:6px solid transparent;opacity:0;}/*!sc*/.dMjscx::after{position:absolute;z-index:1000000;display:none;padding:0.5em 0.75em;font:normal normal 11px/1.5 -apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Noto Sans\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\";-webkit-font-smoothing:subpixel-antialiased;color:var(--fgColor-onEmphasis,var(--color-fg-on-emphasis,#ffffff));text-align:center;-webkit-text-decoration:none;text-decoration:none;text-shadow:none;text-transform:none;-webkit-letter-spacing:normal;-moz-letter-spacing:normal;-ms-letter-spacing:normal;letter-spacing:normal;word-wrap:break-word;white-space:pre;pointer-events:none;content:attr(aria-label);background:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));border-radius:6px;opacity:0;}/*!sc*/@-webkit-keyframes tooltip-appear{from{opacity:0;}to{opacity:1;}}/*!sc*/@keyframes tooltip-appear{from{opacity:0;}to{opacity:1;}}/*!sc*/.dMjscx:hover::before,.dMjscx:active::before,.dMjscx:focus::before,.dMjscx:focus-within::before,.dMjscx:hover::after,.dMjscx:active::after,.dMjscx:focus::after,.dMjscx:focus-within::after{display:inline-block;-webkit-text-decoration:none;text-decoration:none;-webkit-animation-name:tooltip-appear;animation-name:tooltip-appear;-webkit-animation-duration:0.1s;animation-duration:0.1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;-webkit-animation-delay:0.4s;animation-delay:0.4s;}/*!sc*/.dMjscx.tooltipped-no-delay:hover::before,.dMjscx.tooltipped-no-delay:active::before,.dMjscx.tooltipped-no-delay:focus::before,.dMjscx.tooltipped-no-delay:focus-within::before,.dMjscx.tooltipped-no-delay:hover::after,.dMjscx.tooltipped-no-delay:active::after,.dMjscx.tooltipped-no-delay:focus::after,.dMjscx.tooltipped-no-delay:focus-within::after{-webkit-animation-delay:0s;animation-delay:0s;}/*!sc*/.dMjscx.tooltipped-multiline:hover::after,.dMjscx.tooltipped-multiline:active::after,.dMjscx.tooltipped-multiline:focus::after,.dMjscx.tooltipped-multiline:focus-within::after{display:table-cell;}/*!sc*/.dMjscx.tooltipped-s::after,.dMjscx.tooltipped-se::after,.dMjscx.tooltipped-sw::after{top:100%;right:50%;margin-top:6px;}/*!sc*/.dMjscx.tooltipped-s::before,.dMjscx.tooltipped-se::before,.dMjscx.tooltipped-sw::before{top:auto;right:50%;bottom:-7px;margin-right:-6px;border-bottom-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-se::after{right:auto;left:50%;margin-left:-16px;}/*!sc*/.dMjscx.tooltipped-sw::after{margin-right:-16px;}/*!sc*/.dMjscx.tooltipped-n::after,.dMjscx.tooltipped-ne::after,.dMjscx.tooltipped-nw::after{right:50%;bottom:100%;margin-bottom:6px;}/*!sc*/.dMjscx.tooltipped-n::before,.dMjscx.tooltipped-ne::before,.dMjscx.tooltipped-nw::before{top:-7px;right:50%;bottom:auto;margin-right:-6px;border-top-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-ne::after{right:auto;left:50%;margin-left:-16px;}/*!sc*/.dMjscx.tooltipped-nw::after{margin-right:-16px;}/*!sc*/.dMjscx.tooltipped-s::after,.dMjscx.tooltipped-n::after{-webkit-transform:translateX(50%);-ms-transform:translateX(50%);transform:translateX(50%);}/*!sc*/.dMjscx.tooltipped-w::after{right:100%;bottom:50%;margin-right:6px;-webkit-transform:translateY(50%);-ms-transform:translateY(50%);transform:translateY(50%);}/*!sc*/.dMjscx.tooltipped-w::before{top:50%;bottom:50%;left:-7px;margin-top:-6px;border-left-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-e::after{bottom:50%;left:100%;margin-left:6px;-webkit-transform:translateY(50%);-ms-transform:translateY(50%);transform:translateY(50%);}/*!sc*/.dMjscx.tooltipped-e::before{top:50%;right:-7px;bottom:50%;margin-top:-6px;border-right-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-multiline::after{width:-webkit-max-content;width:-moz-max-content;width:max-content;max-width:250px;word-wrap:break-word;white-space:pre-line;border-collapse:separate;}/*!sc*/.dMjscx.tooltipped-multiline.tooltipped-s::after,.dMjscx.tooltipped-multiline.tooltipped-n::after{right:auto;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);}/*!sc*/.dMjscx.tooltipped-multiline.tooltipped-w::after,.dMjscx.tooltipped-multiline.tooltipped-e::after{right:100%;}/*!sc*/.dMjscx.tooltipped-align-right-2::after{right:0;margin-right:0;}/*!sc*/.dMjscx.tooltipped-align-right-2::before{right:15px;}/*!sc*/.dMjscx.tooltipped-align-left-2::after{left:0;margin-left:0;}/*!sc*/.dMjscx.tooltipped-align-left-2::before{left:10px;}/*!sc*/data-styled.g18[id=\"Tooltip__TooltipBase-sc-17tf59c-0\"]{content:\"dMjscx,\"}/*!sc*/.bPgibo{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;list-style:none;white-space:nowrap;padding-top:0;padding-bottom:0;padding-left:0;padding-right:0;margin:0;margin-bottom:-1px;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:8px;position:relative;}/*!sc*/data-styled.g103[id=\"UnderlineNav__NavigationList-sc-1jfr31k-0\"]{content:\"bPgibo,\"}/*!sc*/</style> <!-- --> <!-- --> <div class=\"Box-sc-g0xbh4-0 izjvBm\"><div class=\"Box-sc-g0xbh4-0 rPQgy\"><div class=\"Box-sc-g0xbh4-0 eUMEDg\"></div></div><div class=\"Box-sc-g0xbh4-0 eLcVee\"><div class=\"Box-sc-g0xbh4-0 hsfLlq\"><div class=\"Box-sc-g0xbh4-0 gpKoUz\"><button type=\"button\" id=\"branch-picker-repos-header-ref-selector\" aria-haspopup=\"true\" tabindex=\"0\" aria-label=\"main branch\" data-testid=\"anchor-button\" class=\"types__StyledButton-sc-ws60qy-0 izDscS overview-ref-selector\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"text\"><div class=\"Box-sc-g0xbh4-0 bKgizp\"><div class=\"Box-sc-g0xbh4-0 iPGYsi\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-git-branch\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg></div><div class=\"Box-sc-g0xbh4-0 dKmYfk ref-selector-button-text-container\"><span class=\"Text-sc-17v1xeu-0 bOMzPg\">\u00a0<!-- -->main</span></div></div></span><span data-component=\"trailingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-triangle-down\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></span></span></button><button hidden=\"\" data-hotkey-scope=\"read-only-cursor-text-area\"></button></div><div class=\"Box-sc-g0xbh4-0 laYubZ\"><a style=\"--button-color:fg.muted\" type=\"button\" href=\"/assertpy/assertpy/branches\" class=\"types__StyledButton-sc-ws60qy-0 cuOWTR\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-git-branch\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg></span><span data-component=\"text\">Branches</span></span></a><a style=\"--button-color:fg.muted\" type=\"button\" href=\"/assertpy/assertpy/tags\" class=\"types__StyledButton-sc-ws60qy-0 cuOWTR\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-tag\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg></span><span data-component=\"text\">Tags</span></span></a></div><div class=\"Box-sc-g0xbh4-0 swnaL\"><a style=\"--button-color:fg.muted\" type=\"button\" aria-label=\"Go to Branches page\" href=\"/assertpy/assertpy/branches\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 tDSzd\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-git-branch\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg></a><a style=\"--button-color:fg.muted\" type=\"button\" aria-label=\"Go to Tags page\" href=\"/assertpy/assertpy/tags\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 tDSzd\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-tag\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg></a></div></div><div class=\"Box-sc-g0xbh4-0 bWpuBf\"><div class=\"Box-sc-g0xbh4-0 grHjNb\"><div class=\"Box-sc-g0xbh4-0 dXTsqj\"><!--$!--><template></template><!--/$--></div><div class=\"Box-sc-g0xbh4-0 dCOrmu\"><button type=\"button\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 ftZGca\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"text\">Go to file</span></span></button></div><div class=\"react-directory-add-file-icon\"></div><div class=\"react-directory-remove-file-icon\"></div></div><button type=\"button\" id=\":R2il5:\" aria-haspopup=\"true\" tabindex=\"0\" class=\"types__StyledButton-sc-ws60qy-0 gYvpXq\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><div class=\"Box-sc-g0xbh4-0 bVvbgP\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-code\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg></div></span><span data-component=\"text\">Code</span></span><span data-component=\"trailingAction\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-triangle-down\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></span></button><div class=\"Box-sc-g0xbh4-0 bNDvfp\"><button data-component=\"IconButton\" type=\"button\" aria-label=\"Open more actions menu\" id=\":R3il5:\" aria-haspopup=\"true\" tabindex=\"0\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 ftZGca\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-kebab-horizontal\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M8 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Zm13 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path></svg></button></div></div></div><div class=\"Box-sc-g0xbh4-0 yfPnm\"><div data-hpc=\"true\" class=\"Box-sc-g0xbh4-0\"><button hidden=\"\" data-testid=\"focus-next-element-button\" data-hotkey=\"j\" data-hotkey-scope=\"read-only-cursor-text-area\"></button><button hidden=\"\" data-hotkey=\"j\"></button><button hidden=\"\" data-testid=\"focus-previous-element-button\" data-hotkey=\"k\" data-hotkey-scope=\"read-only-cursor-text-area\"></button><button hidden=\"\" data-hotkey=\"k\"></button><h2 class=\"Heading__StyledHeading-sc-1c1dgg0-0 cgQnMS sr-only\" data-testid=\"screen-reader-heading\" id=\"folders-and-files\">Folders and files</h2><table aria-labelledby=\"folders-and-files\" class=\"Box-sc-g0xbh4-0 cAQuiW\"><thead class=\"Box-sc-g0xbh4-0 iiUlLN\"><tr class=\"Box-sc-g0xbh4-0 jmggSN\"><th colSpan=\"2\" class=\"Box-sc-g0xbh4-0 kvYunM\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Name</span></th><th colSpan=\"1\" class=\"Box-sc-g0xbh4-0 hrLuxA\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Name</span></th><th class=\"Box-sc-g0xbh4-0 ePjhhA\"><div title=\"Last commit message\" class=\"Truncate__StyledTruncate-sc-23o1d2-0 fUpWeN\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Last commit message</span></div></th><th colSpan=\"1\" class=\"Box-sc-g0xbh4-0 cuEKae\"><div title=\"Last commit date\" class=\"Truncate__StyledTruncate-sc-23o1d2-0 fUpWeN\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Last commit date</span></div></th></tr></thead><tbody><tr class=\"Box-sc-g0xbh4-0 jEbBOT\"><td colSpan=\"3\" class=\"Box-sc-g0xbh4-0 bTxCvM\"><div class=\"Box-sc-g0xbh4-0 eYedVD\"><h2 class=\"Heading__StyledHeading-sc-1c1dgg0-0 cgQnMS sr-only\" data-testid=\"screen-reader-heading\">Latest commit</h2><div style=\"width:120px\" class=\"Skeleton Skeleton--text\" data-testid=\"loading\">\u00a0</div><div class=\"Box-sc-g0xbh4-0 jGfYmh\"><div data-testid=\"latest-commit-details\" class=\"Box-sc-g0xbh4-0 lhFvfi\"></div><h2 class=\"Heading__StyledHeading-sc-1c1dgg0-0 cgQnMS sr-only\" data-testid=\"screen-reader-heading\">History</h2><a class=\"types__StyledButton-sc-ws60qy-0 fAkXQN react-last-commit-history-group\" href=\"/assertpy/assertpy/commits/main/\" data-size=\"small\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-history\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m.427 1.927 1.215 1.215a8.002 8.002 0 1 1-1.6 5.685.75.75 0 1 1 1.493-.154 6.5 6.5 0 1 0 1.18-4.458l1.358 1.358A.25.25 0 0 1 3.896 6H.25A.25.25 0 0 1 0 5.75V2.104a.25.25 0 0 1 .427-.177ZM7.75 4a.75.75 0 0 1 .75.75v2.992l2.028.812a.75.75 0 0 1-.557 1.392l-2.5-1A.751.751 0 0 1 7 8.25v-3.5A.75.75 0 0 1 7.75 4Z\"></path></svg></span><span data-component=\"text\"><span class=\"Text-sc-17v1xeu-0 dALsKK\">329 Commits</span></span></span></a><div class=\"Box-sc-g0xbh4-0 bqgLjk\"></div><span role=\"tooltip\" aria-label=\"Commit history\" class=\"Tooltip__TooltipBase-sc-17tf59c-0 dMjscx tooltipped-n\"><a class=\"types__StyledButton-sc-ws60qy-0 fAkXQN react-last-commit-history-icon\" href=\"/assertpy/assertpy/commits/main/\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-history\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m.427 1.927 1.215 1.215a8.002 8.002 0 1 1-1.6 5.685.75.75 0 1 1 1.493-.154 6.5 6.5 0 1 0 1.18-4.458l1.358 1.358A.25.25 0 0 1 3.896 6H.25A.25.25 0 0 1 0 5.75V2.104a.25.25 0 0 1 .427-.177ZM7.75 4a.75.75 0 0 1 .75.75v2.992l2.028.812a.75.75 0 0 1-.557 1.392l-2.5-1A.751.751 0 0 1 7 8.25v-3.5A.75.75 0 0 1 7.75 4Z\"></path></svg></span></span></a></span></div></div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-0\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"assertpy\" aria-label=\"assertpy, (Directory)\" class=\"Link--primary\" href=\"/assertpy/assertpy/tree/main/assertpy\">assertpy</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"assertpy\" aria-label=\"assertpy, (Directory)\" class=\"Link--primary\" href=\"/assertpy/assertpy/tree/main/assertpy\">assertpy</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-1\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"docs\" aria-label=\"docs, (Directory)\" class=\"Link--primary\" href=\"/assertpy/assertpy/tree/main/docs\">docs</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"docs\" aria-label=\"docs, (Directory)\" class=\"Link--primary\" href=\"/assertpy/assertpy/tree/main/docs\">docs</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-2\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"tests\" aria-label=\"tests, (Directory)\" class=\"Link--primary\" href=\"/assertpy/assertpy/tree/main/tests\">tests</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"tests\" aria-label=\"tests, (Directory)\" class=\"Link--primary\" href=\"/assertpy/assertpy/tree/main/tests\">tests</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-3\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".coveragerc\" aria-label=\".coveragerc, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/.coveragerc\">.coveragerc</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".coveragerc\" aria-label=\".coveragerc, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/.coveragerc\">.coveragerc</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-4\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".gitignore\" aria-label=\".gitignore, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/.gitignore\">.gitignore</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".gitignore\" aria-label=\".gitignore, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/.gitignore\">.gitignore</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-5\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".travis.yml\" aria-label=\".travis.yml, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/.travis.yml\">.travis.yml</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".travis.yml\" aria-label=\".travis.yml, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/.travis.yml\">.travis.yml</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-6\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"CONTRIBUTING.md\" aria-label=\"CONTRIBUTING.md, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/CONTRIBUTING.md\">CONTRIBUTING.md</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"CONTRIBUTING.md\" aria-label=\"CONTRIBUTING.md, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/CONTRIBUTING.md\">CONTRIBUTING.md</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-7\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"LICENSE\" aria-label=\"LICENSE, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/LICENSE\">LICENSE</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"LICENSE\" aria-label=\"LICENSE, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/LICENSE\">LICENSE</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-8\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"MANIFEST.in\" aria-label=\"MANIFEST.in, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/MANIFEST.in\">MANIFEST.in</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"MANIFEST.in\" aria-label=\"MANIFEST.in, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/MANIFEST.in\">MANIFEST.in</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-9\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"README.md\" aria-label=\"README.md, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/README.md\">README.md</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"README.md\" aria-label=\"README.md, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/README.md\">README.md</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-10\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"setup.cfg\" aria-label=\"setup.cfg, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/setup.cfg\">setup.cfg</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"setup.cfg\" aria-label=\"setup.cfg, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/setup.cfg\">setup.cfg</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-11\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"setup.py\" aria-label=\"setup.py, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/setup.py\">setup.py</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"setup.py\" aria-label=\"setup.py, (File)\" class=\"Link--primary\" href=\"/assertpy/assertpy/blob/main/setup.py\">setup.py</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"Box-sc-g0xbh4-0 epsqEd show-for-mobile\" data-testid=\"view-all-files-row\"><td colSpan=\"3\" class=\"Box-sc-g0xbh4-0 ldpruc\"><div><button class=\"Link__StyledLink-sc-14289xe-0 dheQRw\">View all files</button></div></td></tr></tbody></table></div><div class=\"Box-sc-g0xbh4-0 ehcSsh\"><div class=\"Box-sc-g0xbh4-0 iGmlUb\"><div class=\"Box-sc-g0xbh4-0 iRQGXA\"><h2 class=\"_VisuallyHidden__VisuallyHidden-sc-11jhm7a-0 rTZSs\">Repository files navigation</h2><nav aria-label=\"Repository files\" class=\"Box-sc-g0xbh4-0 dvTdPK\"><ul role=\"list\" class=\"UnderlineNav__NavigationList-sc-1jfr31k-0 bPgibo\"><li class=\"Box-sc-g0xbh4-0 gwuIGu\"><a href=\"#\" aria-current=\"page\" class=\"Link__StyledLink-sc-14289xe-0 vLMkZ\"><span data-component=\"icon\" class=\"Box-sc-g0xbh4-0 kOxwQs\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-book\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg></span><span data-component=\"text\" data-content=\"README\" class=\"Box-sc-g0xbh4-0 kOgeFj\">README</span></a></li><li class=\"Box-sc-g0xbh4-0 gwuIGu\"><a href=\"#\" class=\"Link__StyledLink-sc-14289xe-0 bhqztV\"><span data-component=\"icon\" class=\"Box-sc-g0xbh4-0 kOxwQs\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-law\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M8.75.75V2h.985c.304 0 .603.08.867.231l1.29.736c.038.022.08.033.124.033h2.234a.75.75 0 0 1 0 1.5h-.427l2.111 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.006.005-.01.01-.045.04c-.21.176-.441.327-.686.45C14.556 10.78 13.88 11 13 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L12.178 4.5h-.162c-.305 0-.604-.079-.868-.231l-1.29-.736a.245.245 0 0 0-.124-.033H8.75V13h2.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1 0-1.5h2.5V3.5h-.984a.245.245 0 0 0-.124.033l-1.289.737c-.265.15-.564.23-.869.23h-.162l2.112 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.016.015-.045.04c-.21.176-.441.327-.686.45C4.556 10.78 3.88 11 3 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L2.178 4.5H1.75a.75.75 0 0 1 0-1.5h2.234a.249.249 0 0 0 .125-.033l1.288-.737c.265-.15.564-.23.869-.23h.984V.75a.75.75 0 0 1 1.5 0Zm2.945 8.477c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L13 6.327Zm-10 0c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L3 6.327Z\"></path></svg></span><span data-component=\"text\" data-content=\"BSD-3-Clause license\" class=\"Box-sc-g0xbh4-0\">BSD-3-Clause license</span></a></li></ul></nav><button style=\"--button-color:fg.subtle\" type=\"button\" aria-label=\"Outline\" id=\":Rdkl5:\" aria-haspopup=\"true\" tabindex=\"0\" class=\"types__StyledButton-sc-ws60qy-0 jPraEl\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-list-unordered\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M5.75 2.5h8.5a.75.75 0 0 1 0 1.5h-8.5a.75.75 0 0 1 0-1.5Zm0 5h8.5a.75.75 0 0 1 0 1.5h-8.5a.75.75 0 0 1 0-1.5Zm0 5h8.5a.75.75 0 0 1 0 1.5h-8.5a.75.75 0 0 1 0-1.5ZM2 14a1 1 0 1 1 0-2 1 1 0 0 1 0 2Zm1-6a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM2 4a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg></button></div><div class=\"Box-sc-g0xbh4-0 bJMeLZ js-snippet-clipboard-copy-unpositioned\" data-hpc=\"true\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div class=\"markdown-heading\" dir=\"auto\"><h1 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">assertpy</h1><a id=\"user-content-assertpy\" class=\"anchor-element\" aria-label=\"Permalink: assertpy\" href=\"#assertpy\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Simple assertions library for unit testing in Python with a nice fluent API.  Supports both Python 2 and 3.</p><p dir=\"auto\"><a href=\"https://travis-ci.org/assertpy/assertpy\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/f03c8141f6b036a4316894be5419583d002a169a29b64d39d95fe4eb114f4506/68747470733a2f2f7472617669732d63692e6f72672f61737365727470792f61737365727470792e7376673f6272616e63683d6d61696e\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.org/assertpy/assertpy.svg?branch=main\" style=\"max-width: 100%;\"></a><a href=\"https://coveralls.io/github/assertpy/assertpy?branch=main\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/7a84a5c3aaf4939025bc1612f2d50424d18e97a786b03f2971c63da92e1c5cca/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f61737365727470792f61737365727470792f62616467652e7376673f6272616e63683d6d61696e\" alt=\"Coverage Status\" data-canonical-src=\"https://coveralls.io/repos/github/assertpy/assertpy/badge.svg?branch=main\" style=\"max-width: 100%;\"></a></p><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Usage</h2><a id=\"user-content-usage\" class=\"anchor-element\" aria-label=\"Permalink: Usage\" href=\"#usage\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Just import the <code>assert_that</code> function, and away you go...</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from assertpy import assert_thatdef test_something():    assert_that(1 + 2).is_equal_to(3)    assert_that('foobar').is_length(6).starts_with('foo').ends_with('bar')    assert_that(['a', 'b', 'c']).contains('a').does_not_contain('x')\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">assertpy</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">assert_that</span><span class=\"pl-k\">def</span> <span class=\"pl-en\">test_something</span>():    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">1</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">2</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-c1\">3</span>)    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foobar'</span>).<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">6</span>).<span class=\"pl-en\">starts_with</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">ends_with</span>(<span class=\"pl-s\">'bar'</span>)    <span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>, <span class=\"pl-s\">'b'</span>, <span class=\"pl-s\">'c'</span>]).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'a'</span>).<span class=\"pl-en\">does_not_contain</span>(<span class=\"pl-s\">'x'</span>)</pre></div><p dir=\"auto\">Of course, <code>assertpy</code> works best with a python test runner like <a href=\"http://pytest.org/\" rel=\"nofollow\">pytest</a> (our favorite) or <a href=\"http://nose.readthedocs.org/\" rel=\"nofollow\">Nose</a>.</p><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Installation</h2><a id=\"user-content-installation\" class=\"anchor-element\" aria-label=\"Permalink: Installation\" href=\"#installation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Install via pip</h3><a id=\"user-content-install-via-pip\" class=\"anchor-element\" aria-label=\"Permalink: Install via pip\" href=\"#install-via-pip\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\"><a href=\"https://pypi.org/project/assertpy/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/2fb8b389e6b417bd1f142a79436bee9bfac3805f95388f69cf36fd43032bacc5/68747470733a2f2f62616467652e667572792e696f2f70792f61737365727470792e737667\" alt=\"PyPI Badge\" data-canonical-src=\"https://badge.fury.io/py/assertpy.svg\" style=\"max-width: 100%;\"></a></p><p dir=\"auto\">The <code>assertpy</code> library is available via <a href=\"https://pypi.org/project/assertpy/\" rel=\"nofollow\">PyPI</a>.Just install with:</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"pip install assertpy\"><pre class=\"notranslate\"><code>pip install assertpy</code></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Install via conda</h3><a id=\"user-content-install-via-conda\" class=\"anchor-element\" aria-label=\"Permalink: Install via conda\" href=\"#install-via-conda\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\"><a href=\"https://anaconda.org/conda-forge/assertpy\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/383c27642697aed9fd7cf5a3ffb35491312821e9d1f7302c9e3309e480b4ef63/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f61737365727470792e737667\" alt=\"Conda Version\" data-canonical-src=\"https://img.shields.io/conda/vn/conda-forge/assertpy.svg\" style=\"max-width: 100%;\"></a><a href=\"https://anaconda.org/conda-forge/assertpy\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/7d61f802026486208b6a54d71d8997b572014cb9605c0c673426dcddcc9507eb/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f706e2f636f6e64612d666f7267652f61737365727470792e737667\" alt=\"Conda Platforms\" data-canonical-src=\"https://img.shields.io/conda/pn/conda-forge/assertpy.svg\" style=\"max-width: 100%;\"></a></p><p dir=\"auto\">Or, if you are a big fan of <a href=\"https://conda.io/\" rel=\"nofollow\">conda</a> like we are, there is an <a href=\"https://github.com/conda-forge/assertpy-feedstock\">assertpy-feedstock</a> for <a href=\"https://conda-forge.org/\" rel=\"nofollow\">Conda-Forge</a> that you can use:</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"conda install assertpy --channel conda-forge\"><pre class=\"notranslate\"><code>conda install assertpy --channel conda-forge</code></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Docs</h2><a id=\"user-content-docs\" class=\"anchor-element\" aria-label=\"Permalink: Docs\" href=\"#docs\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">The fluent API of <code>assertpy</code> is designed to create compact, yet readable tests.The API has been modeled after other fluent testing APIs, especially the awesome<a href=\"https://assertj.github.io/doc/\" rel=\"nofollow\">AssertJ</a> assertion library for Java.  Of course, in the <code>assertpy</code> library everything is fully pythonic and designed to take full advantage of the dynamism in the Python runtime.</p><p dir=\"auto\">All assertions, with usage examples, are documented here:<br><a href=\"https://assertpy.github.io/docs.html\" rel=\"nofollow\">https://assertpy.github.io/docs.html</a></p><p dir=\"auto\">And there are hundreds of examples below.  Read on...</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Strings</h3><a id=\"user-content-strings\" class=\"anchor-element\" aria-label=\"Permalink: Strings\" href=\"#strings\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Matching strings:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that('').is_not_none()assert_that('').is_empty()assert_that('').is_false()assert_that('').is_type_of(str)assert_that('').is_instance_of(str)assert_that('foo').is_length(3)assert_that('foo').is_not_empty()assert_that('foo').is_true()assert_that('foo').is_alpha()assert_that('123').is_digit()assert_that('foo').is_lower()assert_that('FOO').is_upper()assert_that('foo').is_iterable()assert_that('foo').is_equal_to('foo')assert_that('foo').is_not_equal_to('bar')assert_that('foo').is_equal_to_ignoring_case('FOO')assert_that(u'foo').is_unicode()  # on python 2assert_that('foo').is_unicode()   # on python 3assert_that('foo').contains('f')assert_that('foo').contains('f','oo')assert_that('foo').contains_ignoring_case('F','oO')assert_that('foo').does_not_contain('x')assert_that('foo').contains_only('f','o')assert_that('foo').contains_sequence('o','o')assert_that('foo').contains_duplicates()assert_that('fox').does_not_contain_duplicates()assert_that('foo').is_in('foo','bar','baz')assert_that('foo').is_not_in('boo','bar','baz')assert_that('foo').is_subset_of('abcdefghijklmnopqrstuvwxyz')assert_that('foo').starts_with('f')assert_that('foo').ends_with('oo')assert_that('foo').matches(r'\\w')assert_that('123-456-7890').matches(r'\\d{3}-\\d{3}-\\d{4}')assert_that('foo').does_not_match(r'\\d+')\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">''</span>).<span class=\"pl-en\">is_not_none</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">''</span>).<span class=\"pl-en\">is_empty</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">''</span>).<span class=\"pl-en\">is_false</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">''</span>).<span class=\"pl-en\">is_type_of</span>(<span class=\"pl-s1\">str</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">''</span>).<span class=\"pl-en\">is_instance_of</span>(<span class=\"pl-s1\">str</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">3</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_not_empty</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_true</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_alpha</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'123'</span>).<span class=\"pl-en\">is_digit</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_lower</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'FOO'</span>).<span class=\"pl-en\">is_upper</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_iterable</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s\">'foo'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_not_equal_to</span>(<span class=\"pl-s\">'bar'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_equal_to_ignoring_case</span>(<span class=\"pl-s\">'FOO'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">u'foo'</span>).<span class=\"pl-en\">is_unicode</span>()  <span class=\"pl-c\"># on python 2</span><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_unicode</span>()   <span class=\"pl-c\"># on python 3</span><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'f'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'f'</span>,<span class=\"pl-s\">'oo'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">contains_ignoring_case</span>(<span class=\"pl-s\">'F'</span>,<span class=\"pl-s\">'oO'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">does_not_contain</span>(<span class=\"pl-s\">'x'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">contains_only</span>(<span class=\"pl-s\">'f'</span>,<span class=\"pl-s\">'o'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">contains_sequence</span>(<span class=\"pl-s\">'o'</span>,<span class=\"pl-s\">'o'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">contains_duplicates</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'fox'</span>).<span class=\"pl-en\">does_not_contain_duplicates</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_in</span>(<span class=\"pl-s\">'foo'</span>,<span class=\"pl-s\">'bar'</span>,<span class=\"pl-s\">'baz'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_not_in</span>(<span class=\"pl-s\">'boo'</span>,<span class=\"pl-s\">'bar'</span>,<span class=\"pl-s\">'baz'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_subset_of</span>(<span class=\"pl-s\">'abcdefghijklmnopqrstuvwxyz'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">starts_with</span>(<span class=\"pl-s\">'f'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">ends_with</span>(<span class=\"pl-s\">'oo'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">matches</span>(<span class=\"pl-s\">r'\\w'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'123-456-7890'</span>).<span class=\"pl-en\">matches</span>(<span class=\"pl-s\">r'\\d{3}-\\d{3}-\\d{4}'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">does_not_match</span>(<span class=\"pl-s\">r'\\d+'</span>)</pre></div><p dir=\"auto\">Regular expressions can be tricky.  Be sure to use raw strings (prefix the pattern string with <code>r</code>) for the regex pattern to be matched.  Also, note that the <code>matches()</code> function passes for partial matches (as does the <a href=\"https://docs.python.org/3/library/re.html#re.match\" rel=\"nofollow\">re.match</a> function that underlies it). If you want to match the entire string, just include anchors in the regex pattern.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# partial matches, these all passassert_that('foo').matches(r'\\w')assert_that('foo').matches(r'oo')assert_that('foo').matches(r'\\w{2}')# match the entire string with an anchored regex pattern, passesassert_that('foo').matches(r'^\\w{3}$')# failsassert_that('foo').matches(r'^\\w{2}$')\"><pre><span class=\"pl-c\"># partial matches, these all pass</span><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">matches</span>(<span class=\"pl-s\">r'\\w'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">matches</span>(<span class=\"pl-s\">r'oo'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">matches</span>(<span class=\"pl-s\">r'\\w{2}'</span>)<span class=\"pl-c\"># match the entire string with an anchored regex pattern, passes</span><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">matches</span>(<span class=\"pl-s\">r'^\\w{3}$'</span>)<span class=\"pl-c\"># fails</span><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">matches</span>(<span class=\"pl-s\">r'^\\w{2}$'</span>)</pre></div><p dir=\"auto\">Additionally, while <code>assertpy</code> <code>matches()</code> assertion does not have support for <a href=\"https://docs.python.org/3/library/re.html#re.match\" rel=\"nofollow\">re.match</a> flags such as <code>re.MULTILINE</code> or <code>re.DOTALL</code>, it works as expected with <em>inline flags</em> in the pattern.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"s = &quot;&quot;&quot;barfoobaz&quot;&quot;&quot;# use multiline inline flag (?m)assert_that(s).matches(r'(?m)^foo$')# use dotall inline flag (?s)assert_that(s).matches(r'(?s)b(.*)z')\"><pre><span class=\"pl-s1\">s</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"\"\"bar</span><span class=\"pl-s\">foo</span><span class=\"pl-s\">baz\"\"\"</span><span class=\"pl-c\"># use multiline inline flag (?m)</span><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">s</span>).<span class=\"pl-en\">matches</span>(<span class=\"pl-s\">r'(?m)^foo$'</span>)<span class=\"pl-c\"># use dotall inline flag (?s)</span><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">s</span>).<span class=\"pl-en\">matches</span>(<span class=\"pl-s\">r'(?s)b(.*)z'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Numbers</h3><a id=\"user-content-numbers\" class=\"anchor-element\" aria-label=\"Permalink: Numbers\" href=\"#numbers\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Matching integers:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(0).is_not_none()assert_that(0).is_false()assert_that(0).is_type_of(int)assert_that(0).is_instance_of(int)assert_that(0).is_zero()assert_that(1).is_not_zero()assert_that(1).is_positive()assert_that(-1).is_negative()assert_that(123).is_equal_to(123)assert_that(123).is_not_equal_to(456)assert_that(123).is_greater_than(100)assert_that(123).is_greater_than_or_equal_to(123)assert_that(123).is_less_than(200)assert_that(123).is_less_than_or_equal_to(200)assert_that(123).is_between(100, 200)assert_that(123).is_close_to(100, 25)assert_that(1).is_in(0,1,2,3)assert_that(1).is_not_in(-1,-2,-3)\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">0</span>).<span class=\"pl-en\">is_not_none</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">0</span>).<span class=\"pl-en\">is_false</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">0</span>).<span class=\"pl-en\">is_type_of</span>(<span class=\"pl-s1\">int</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">0</span>).<span class=\"pl-en\">is_instance_of</span>(<span class=\"pl-s1\">int</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">0</span>).<span class=\"pl-en\">is_zero</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">1</span>).<span class=\"pl-en\">is_not_zero</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">1</span>).<span class=\"pl-en\">is_positive</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span>).<span class=\"pl-en\">is_negative</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-c1\">123</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123</span>).<span class=\"pl-en\">is_not_equal_to</span>(<span class=\"pl-c1\">456</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123</span>).<span class=\"pl-en\">is_greater_than</span>(<span class=\"pl-c1\">100</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123</span>).<span class=\"pl-en\">is_greater_than_or_equal_to</span>(<span class=\"pl-c1\">123</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123</span>).<span class=\"pl-en\">is_less_than</span>(<span class=\"pl-c1\">200</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123</span>).<span class=\"pl-en\">is_less_than_or_equal_to</span>(<span class=\"pl-c1\">200</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123</span>).<span class=\"pl-en\">is_between</span>(<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">200</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123</span>).<span class=\"pl-en\">is_close_to</span>(<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">25</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">1</span>).<span class=\"pl-en\">is_in</span>(<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">1</span>).<span class=\"pl-en\">is_not_in</span>(<span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">-</span><span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">-</span><span class=\"pl-c1\">3</span>)</pre></div><p dir=\"auto\">Matching floats:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(0.0).is_not_none()assert_that(0.0).is_false()assert_that(0.0).is_type_of(float)assert_that(0.0).is_instance_of(float)assert_that(123.4).is_equal_to(123.4)assert_that(123.4).is_not_equal_to(456.7)assert_that(123.4).is_greater_than(100.1)assert_that(123.4).is_greater_than_or_equal_to(123.4)assert_that(123.4).is_less_than(200.2)assert_that(123.4).is_less_than_or_equal_to(123.4)assert_that(123.4).is_between(100.1, 200.2)assert_that(123.4).is_close_to(123, 0.5)assert_that(float('NaN')).is_nan()assert_that(123.4).is_not_nan()assert_that(float('Inf')).is_inf()assert_that(123.4).is_not_inf()\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">0.0</span>).<span class=\"pl-en\">is_not_none</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">0.0</span>).<span class=\"pl-en\">is_false</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">0.0</span>).<span class=\"pl-en\">is_type_of</span>(<span class=\"pl-s1\">float</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">0.0</span>).<span class=\"pl-en\">is_instance_of</span>(<span class=\"pl-s1\">float</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123.4</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-c1\">123.4</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123.4</span>).<span class=\"pl-en\">is_not_equal_to</span>(<span class=\"pl-c1\">456.7</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123.4</span>).<span class=\"pl-en\">is_greater_than</span>(<span class=\"pl-c1\">100.1</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123.4</span>).<span class=\"pl-en\">is_greater_than_or_equal_to</span>(<span class=\"pl-c1\">123.4</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123.4</span>).<span class=\"pl-en\">is_less_than</span>(<span class=\"pl-c1\">200.2</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123.4</span>).<span class=\"pl-en\">is_less_than_or_equal_to</span>(<span class=\"pl-c1\">123.4</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123.4</span>).<span class=\"pl-en\">is_between</span>(<span class=\"pl-c1\">100.1</span>, <span class=\"pl-c1\">200.2</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123.4</span>).<span class=\"pl-en\">is_close_to</span>(<span class=\"pl-c1\">123</span>, <span class=\"pl-c1\">0.5</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">float</span>(<span class=\"pl-s\">'NaN'</span>)).<span class=\"pl-en\">is_nan</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123.4</span>).<span class=\"pl-en\">is_not_nan</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">float</span>(<span class=\"pl-s\">'Inf'</span>)).<span class=\"pl-en\">is_inf</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123.4</span>).<span class=\"pl-en\">is_not_inf</span>()</pre></div><p dir=\"auto\">Of course, using <code>is_equal_to()</code> with a <code>float</code> value is just asking for trouble. You'll always want to use the assertions methods like <code>is_close_to()</code> and <code>is_between()</code>.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Lists</h3><a id=\"user-content-lists\" class=\"anchor-element\" aria-label=\"Permalink: Lists\" href=\"#lists\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Matching lists:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that([]).is_not_none()assert_that([]).is_empty()assert_that([]).is_false()assert_that([]).is_type_of(list)assert_that([]).is_instance_of(list)assert_that([]).is_iterable()assert_that(['a','b']).is_length(2)assert_that(['a','b']).is_not_empty()assert_that(['a','b']).is_equal_to(['a','b'])assert_that(['a','b']).is_not_equal_to(['b','a'])assert_that(['a','b']).contains('a')assert_that(['a','b']).contains('b','a')assert_that(['a','b']).does_not_contain('x','y')assert_that(['a','b']).contains_only('a','b')assert_that(['a','a']).contains_only('a')assert_that(['a','b','c']).contains_sequence('b','c')assert_that(['a','b']).is_subset_of(['a','b','c'])assert_that(['a','b','c']).is_sorted()assert_that(['c','b','a']).is_sorted(reverse=True)assert_that(['a','x','x']).contains_duplicates()assert_that(['a','b','c']).does_not_contain_duplicates()assert_that(['a','b','c']).starts_with('a')assert_that(['a','b','c']).ends_with('c')\"><pre><span class=\"pl-en\">assert_that</span>([]).<span class=\"pl-en\">is_not_none</span>()<span class=\"pl-en\">assert_that</span>([]).<span class=\"pl-en\">is_empty</span>()<span class=\"pl-en\">assert_that</span>([]).<span class=\"pl-en\">is_false</span>()<span class=\"pl-en\">assert_that</span>([]).<span class=\"pl-en\">is_type_of</span>(<span class=\"pl-s1\">list</span>)<span class=\"pl-en\">assert_that</span>([]).<span class=\"pl-en\">is_instance_of</span>(<span class=\"pl-s1\">list</span>)<span class=\"pl-en\">assert_that</span>([]).<span class=\"pl-en\">is_iterable</span>()<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>]).<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">2</span>)<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>]).<span class=\"pl-en\">is_not_empty</span>()<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>]).<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>]).<span class=\"pl-en\">is_not_equal_to</span>([<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'a'</span>])<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>]).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'a'</span>)<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>]).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'a'</span>)<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>]).<span class=\"pl-en\">does_not_contain</span>(<span class=\"pl-s\">'x'</span>,<span class=\"pl-s\">'y'</span>)<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>]).<span class=\"pl-en\">contains_only</span>(<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>)<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'a'</span>]).<span class=\"pl-en\">contains_only</span>(<span class=\"pl-s\">'a'</span>)<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'c'</span>]).<span class=\"pl-en\">contains_sequence</span>(<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'c'</span>)<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>]).<span class=\"pl-en\">is_subset_of</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'c'</span>])<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'c'</span>]).<span class=\"pl-en\">is_sorted</span>()<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'c'</span>,<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'a'</span>]).<span class=\"pl-en\">is_sorted</span>(<span class=\"pl-s1\">reverse</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'x'</span>,<span class=\"pl-s\">'x'</span>]).<span class=\"pl-en\">contains_duplicates</span>()<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'c'</span>]).<span class=\"pl-en\">does_not_contain_duplicates</span>()<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'c'</span>]).<span class=\"pl-en\">starts_with</span>(<span class=\"pl-s\">'a'</span>)<span class=\"pl-en\">assert_that</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'c'</span>]).<span class=\"pl-en\">ends_with</span>(<span class=\"pl-s\">'c'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">List Flattening</h4><a id=\"user-content-list-flattening\" class=\"anchor-element\" aria-label=\"Permalink: List Flattening\" href=\"#list-flattening\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Lists of lists can be flattened on any item (by index) using the <code>extracting</code> helper (see <a href=\"#dict-flattening\">dict flattening</a>):</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"people = [['Fred', 'Smith'], ['Bob', 'Barr']]assert_that(people).extracting(0).is_equal_to(['Fred','Bob'])assert_that(people).extracting(-1).is_equal_to(['Smith','Barr'])\"><pre><span class=\"pl-s1\">people</span> <span class=\"pl-c1\">=</span> [[<span class=\"pl-s\">'Fred'</span>, <span class=\"pl-s\">'Smith'</span>], [<span class=\"pl-s\">'Bob'</span>, <span class=\"pl-s\">'Barr'</span>]]<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-c1\">0</span>).<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Bob'</span>])<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span>).<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'Smith'</span>,<span class=\"pl-s\">'Barr'</span>])</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Tuples</h3><a id=\"user-content-tuples\" class=\"anchor-element\" aria-label=\"Permalink: Tuples\" href=\"#tuples\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Matching tuples:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(()).is_not_none()assert_that(()).is_empty()assert_that(()).is_false()assert_that(()).is_type_of(tuple)assert_that(()).is_instance_of(tuple)assert_that(()).is_iterable()assert_that((1,2,3)).is_length(3)assert_that((1,2,3)).is_not_empty()assert_that((1,2,3)).is_equal_to((1,2,3))assert_that((1,2,3)).is_not_equal_to((1,2,4))assert_that((1,2,3)).contains(1)assert_that((1,2,3)).contains(3,2,1)assert_that((1,2,3)).does_not_contain(4,5,6)assert_that((1,2,3)).contains_only(1,2,3)assert_that((1,1,1)).contains_only(1)assert_that((1,2,3)).contains_sequence(2,3)assert_that((1,2,3)).is_subset_of((1,2,3,4))assert_that((1,2,3)).is_sorted()assert_that((3,2,1)).is_sorted(reverse=True)assert_that((1,2,2)).contains_duplicates()assert_that((1,2,3)).does_not_contain_duplicates()assert_that((1,2,3)).starts_with(1)assert_that((1,2,3)).ends_with(3)\"><pre><span class=\"pl-en\">assert_that</span>(()).<span class=\"pl-en\">is_not_none</span>()<span class=\"pl-en\">assert_that</span>(()).<span class=\"pl-en\">is_empty</span>()<span class=\"pl-en\">assert_that</span>(()).<span class=\"pl-en\">is_false</span>()<span class=\"pl-en\">assert_that</span>(()).<span class=\"pl-en\">is_type_of</span>(<span class=\"pl-s1\">tuple</span>)<span class=\"pl-en\">assert_that</span>(()).<span class=\"pl-en\">is_instance_of</span>(<span class=\"pl-s1\">tuple</span>)<span class=\"pl-en\">assert_that</span>(()).<span class=\"pl-en\">is_iterable</span>()<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">3</span>)<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">is_not_empty</span>()<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">is_equal_to</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>))<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">is_not_equal_to</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">4</span>))<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">contains</span>(<span class=\"pl-c1\">1</span>)<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">contains</span>(<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">1</span>)<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">does_not_contain</span>(<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">6</span>)<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">contains_only</span>(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>)).<span class=\"pl-en\">contains_only</span>(<span class=\"pl-c1\">1</span>)<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">contains_sequence</span>(<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">is_subset_of</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">4</span>))<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">is_sorted</span>()<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">1</span>)).<span class=\"pl-en\">is_sorted</span>(<span class=\"pl-s1\">reverse</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">2</span>)).<span class=\"pl-en\">contains_duplicates</span>()<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">does_not_contain_duplicates</span>()<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">starts_with</span>(<span class=\"pl-c1\">1</span>)<span class=\"pl-en\">assert_that</span>((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>)).<span class=\"pl-en\">ends_with</span>(<span class=\"pl-c1\">3</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Tuple Flattening</h4><a id=\"user-content-tuple-flattening\" class=\"anchor-element\" aria-label=\"Permalink: Tuple Flattening\" href=\"#tuple-flattening\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Tuples of tuples can be flattened on any item (by index) using the <code>extracting</code> helper (see <a href=\"#dict-flattening\">dict flattening</a>):</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"points = ((1,2,3),(4,5,6))assert_that(points).extracting(0).is_equal_to([1, 4])assert_that(points).extracting(-1).is_equal_to([3, 6])\"><pre><span class=\"pl-s1\">points</span> <span class=\"pl-c1\">=</span> ((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>),(<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">6</span>))<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">points</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-c1\">0</span>).<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">4</span>])<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">points</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-c1\">-</span><span class=\"pl-c1\">1</span>).<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">6</span>])</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Dicts</h3><a id=\"user-content-dicts\" class=\"anchor-element\" aria-label=\"Permalink: Dicts\" href=\"#dicts\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Matching dicts:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that({}).is_not_none()assert_that({}).is_empty()assert_that({}).is_false()assert_that({}).is_type_of(dict)assert_that({}).is_instance_of(dict)assert_that({'a':1,'b':2}).is_length(2)assert_that({'a':1,'b':2}).is_not_empty()assert_that({'a':1,'b':2}).is_equal_to({'a':1,'b':2})assert_that({'a':1,'b':2}).is_equal_to({'b':2,'a':1})assert_that({'a':1,'b':2}).is_not_equal_to({'a':1,'b':3})assert_that({'a':1,'b':2}).contains('a')assert_that({'a':1,'b':2}).contains('b','a')assert_that({'a':1,'b':2}).does_not_contain('x')assert_that({'a':1,'b':2}).does_not_contain('x','y')assert_that({'a':1,'b':2}).contains_only('a','b')assert_that({'a':1,'b':2}).is_subset_of({'a':1,'b':2,'c':3})# contains_key() is just an alias for contains()assert_that({'a':1,'b':2}).contains_key('a')assert_that({'a':1,'b':2}).contains_key('b','a')# does_not_contain_key() is just an alias for does_not_contain()assert_that({'a':1,'b':2}).does_not_contain_key('x')assert_that({'a':1,'b':2}).does_not_contain_key('x','y')assert_that({'a':1,'b':2}).contains_value(1)assert_that({'a':1,'b':2}).contains_value(2,1)assert_that({'a':1,'b':2}).does_not_contain_value(3)assert_that({'a':1,'b':2}).does_not_contain_value(3,4)assert_that({'a':1,'b':2}).contains_entry({'a':1})assert_that({'a':1,'b':2}).contains_entry({'a':1},{'b':2})assert_that({'a':1,'b':2}).does_not_contain_entry({'a':2})assert_that({'a':1,'b':2}).does_not_contain_entry({'a':2},{'b':1})\"><pre><span class=\"pl-en\">assert_that</span>({}).<span class=\"pl-en\">is_not_none</span>()<span class=\"pl-en\">assert_that</span>({}).<span class=\"pl-en\">is_empty</span>()<span class=\"pl-en\">assert_that</span>({}).<span class=\"pl-en\">is_false</span>()<span class=\"pl-en\">assert_that</span>({}).<span class=\"pl-en\">is_type_of</span>(<span class=\"pl-s1\">dict</span>)<span class=\"pl-en\">assert_that</span>({}).<span class=\"pl-en\">is_instance_of</span>(<span class=\"pl-s1\">dict</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">2</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">is_not_empty</span>()<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">is_equal_to</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>})<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">is_equal_to</span>({<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>,<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>})<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">is_not_equal_to</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">3</span>})<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'a'</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'a'</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">does_not_contain</span>(<span class=\"pl-s\">'x'</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">does_not_contain</span>(<span class=\"pl-s\">'x'</span>,<span class=\"pl-s\">'y'</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">contains_only</span>(<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">is_subset_of</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>,<span class=\"pl-s\">'c'</span>:<span class=\"pl-c1\">3</span>})<span class=\"pl-c\"># contains_key() is just an alias for contains()</span><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">contains_key</span>(<span class=\"pl-s\">'a'</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">contains_key</span>(<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'a'</span>)<span class=\"pl-c\"># does_not_contain_key() is just an alias for does_not_contain()</span><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">does_not_contain_key</span>(<span class=\"pl-s\">'x'</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">does_not_contain_key</span>(<span class=\"pl-s\">'x'</span>,<span class=\"pl-s\">'y'</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">contains_value</span>(<span class=\"pl-c1\">1</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">contains_value</span>(<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">1</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">does_not_contain_value</span>(<span class=\"pl-c1\">3</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">does_not_contain_value</span>(<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">4</span>)<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">contains_entry</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>})<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">contains_entry</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>},{<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>})<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">does_not_contain_entry</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">2</span>})<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">does_not_contain_entry</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">2</span>},{<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">1</span>})</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Dict Comparison</h4><a id=\"user-content-dict-comparison\" class=\"anchor-element\" aria-label=\"Permalink: Dict Comparison\" href=\"#dict-comparison\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Dict keys can optionally be ignored or included when using the <code>is_equal_to()</code> assertion.</p><p dir=\"auto\">Ignore dict keys with the <code>ignore</code> keyword argument:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# ignore a single keyassert_that({'a':1,'b':2}).is_equal_to({'a':1}, ignore='b')# ignore multiple keys using a listassert_that({'a':1,'b':2,'c':3}).is_equal_to({'a':1}, ignore=['b','c'])# ignore nested keys using a tupleassert_that({'a':1,'b':{'c':2,'d':3}}).is_equal_to({'a':1,'b':{'c':2}}, ignore=('b','d'))\"><pre><span class=\"pl-c\"># ignore a single key</span><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">is_equal_to</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>}, <span class=\"pl-s1\">ignore</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'b'</span>)<span class=\"pl-c\"># ignore multiple keys using a list</span><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>,<span class=\"pl-s\">'c'</span>:<span class=\"pl-c1\">3</span>}).<span class=\"pl-en\">is_equal_to</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>}, <span class=\"pl-s1\">ignore</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'c'</span>])<span class=\"pl-c\"># ignore nested keys using a tuple</span><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:{<span class=\"pl-s\">'c'</span>:<span class=\"pl-c1\">2</span>,<span class=\"pl-s\">'d'</span>:<span class=\"pl-c1\">3</span>}}).<span class=\"pl-en\">is_equal_to</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:{<span class=\"pl-s\">'c'</span>:<span class=\"pl-c1\">2</span>}}, <span class=\"pl-s1\">ignore</span><span class=\"pl-c1\">=</span>(<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'d'</span>))</pre></div><p dir=\"auto\">Or include dict keys with the <code>include</code> keyword argument:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# include a single keyassert_that({'a':1,'b':2}).is_equal_to({'a':1}, include='a')# include multiple keys using a listassert_that({'a':1,'b':2,'c':3}).is_equal_to({'a':1,'b':2}, include=['a','b'])# include nested keys using a tupleassert_that({'a':1,'b':{'c':2,'d':3}}).is_equal_to({'b':{'d':3}}, include=('b','d'))\"><pre><span class=\"pl-c\"># include a single key</span><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}).<span class=\"pl-en\">is_equal_to</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>}, <span class=\"pl-s1\">include</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'a'</span>)<span class=\"pl-c\"># include multiple keys using a list</span><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>,<span class=\"pl-s\">'c'</span>:<span class=\"pl-c1\">3</span>}).<span class=\"pl-en\">is_equal_to</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>}, <span class=\"pl-s1\">include</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])<span class=\"pl-c\"># include nested keys using a tuple</span><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:{<span class=\"pl-s\">'c'</span>:<span class=\"pl-c1\">2</span>,<span class=\"pl-s\">'d'</span>:<span class=\"pl-c1\">3</span>}}).<span class=\"pl-en\">is_equal_to</span>({<span class=\"pl-s\">'b'</span>:{<span class=\"pl-s\">'d'</span>:<span class=\"pl-c1\">3</span>}}, <span class=\"pl-s1\">include</span><span class=\"pl-c1\">=</span>(<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'d'</span>))</pre></div><p dir=\"auto\">Or do both:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that({'a':1,'b':{'c':2,'d':3,'e':4,'f':5}}).is_equal_to(    {'b':{'d':3,'f':5}},    ignore=[('b','c'),('b','e')],    include='b')\"><pre><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:{<span class=\"pl-s\">'c'</span>:<span class=\"pl-c1\">2</span>,<span class=\"pl-s\">'d'</span>:<span class=\"pl-c1\">3</span>,<span class=\"pl-s\">'e'</span>:<span class=\"pl-c1\">4</span>,<span class=\"pl-s\">'f'</span>:<span class=\"pl-c1\">5</span>}}).<span class=\"pl-en\">is_equal_to</span>(    {<span class=\"pl-s\">'b'</span>:{<span class=\"pl-s\">'d'</span>:<span class=\"pl-c1\">3</span>,<span class=\"pl-s\">'f'</span>:<span class=\"pl-c1\">5</span>}},    <span class=\"pl-s1\">ignore</span><span class=\"pl-c1\">=</span>[(<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'c'</span>),(<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'e'</span>)],    <span class=\"pl-s1\">include</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'b'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Dict Flattening</h4><a id=\"user-content-dict-flattening\" class=\"anchor-element\" aria-label=\"Permalink: Dict Flattening\" href=\"#dict-flattening\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Lists of dicts can be flattened on key using the <code>extracting</code> helper (see <a href=\"#extracting-attributes-from-objects\">extracting attributes</a>):</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fred = {'first_name': 'Fred', 'last_name': 'Smith'}bob = {'first_name': 'Bob', 'last_name': 'Barr'}people = [fred, bob]assert_that(people).extracting('first_name').is_equal_to(['Fred','Bob'])assert_that(people).extracting('first_name').contains('Fred','Bob')\"><pre><span class=\"pl-s1\">fred</span> <span class=\"pl-c1\">=</span> {<span class=\"pl-s\">'first_name'</span>: <span class=\"pl-s\">'Fred'</span>, <span class=\"pl-s\">'last_name'</span>: <span class=\"pl-s\">'Smith'</span>}<span class=\"pl-s1\">bob</span> <span class=\"pl-c1\">=</span> {<span class=\"pl-s\">'first_name'</span>: <span class=\"pl-s\">'Bob'</span>, <span class=\"pl-s\">'last_name'</span>: <span class=\"pl-s\">'Barr'</span>}<span class=\"pl-s1\">people</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s1\">fred</span>, <span class=\"pl-s1\">bob</span>]<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'first_name'</span>).<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Bob'</span>])<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'first_name'</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Bob'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Dict Key Assertions</h4><a id=\"user-content-dict-key-assertions\" class=\"anchor-element\" aria-label=\"Permalink: Dict Key Assertions\" href=\"#dict-key-assertions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Fluent assertions against the value of a given key can be done by prepending <code>has_</code> to the key name (see <a href=\"#dynamic-assertions-on-objects\">dynamic assertions</a>):</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fred = {'first_name': 'Fred', 'last_name': 'Smith', 'shoe_size': 12}assert_that(fred).has_first_name('Fred')assert_that(fred).has_last_name('Smith')assert_that(fred).has_shoe_size(12)\"><pre><span class=\"pl-s1\">fred</span> <span class=\"pl-c1\">=</span> {<span class=\"pl-s\">'first_name'</span>: <span class=\"pl-s\">'Fred'</span>, <span class=\"pl-s\">'last_name'</span>: <span class=\"pl-s\">'Smith'</span>, <span class=\"pl-s\">'shoe_size'</span>: <span class=\"pl-c1\">12</span>}<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">has_first_name</span>(<span class=\"pl-s\">'Fred'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">has_last_name</span>(<span class=\"pl-s\">'Smith'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">has_shoe_size</span>(<span class=\"pl-c1\">12</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Sets</h3><a id=\"user-content-sets\" class=\"anchor-element\" aria-label=\"Permalink: Sets\" href=\"#sets\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Matching sets:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(set([])).is_not_none()assert_that(set([])).is_empty()assert_that(set([])).is_false()assert_that(set([])).is_type_of(set)assert_that(set([])).is_instance_of(set)assert_that(set(['a','b'])).is_length(2)assert_that(set(['a','b'])).is_not_empty()assert_that(set(['a','b'])).is_equal_to(set(['a','b']))assert_that(set(['a','b'])).is_equal_to(set(['b','a']))assert_that(set(['a','b'])).is_not_equal_to(set(['a','x']))assert_that(set(['a','b'])).contains('a')assert_that(set(['a','b'])).contains('b','a')assert_that(set(['a','b'])).does_not_contain('x','y')assert_that(set(['a','b'])).contains_only('a','b')assert_that(set(['a','b'])).is_subset_of(set(['a','b','c']))assert_that(set(['a','b'])).is_subset_of(set(['a']), set(['b']))\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([])).<span class=\"pl-en\">is_not_none</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([])).<span class=\"pl-en\">is_empty</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([])).<span class=\"pl-en\">is_false</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([])).<span class=\"pl-en\">is_type_of</span>(<span class=\"pl-s1\">set</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([])).<span class=\"pl-en\">is_instance_of</span>(<span class=\"pl-s1\">set</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])).<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">2</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])).<span class=\"pl-en\">is_not_empty</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>]))<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'a'</span>]))<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])).<span class=\"pl-en\">is_not_equal_to</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'x'</span>]))<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'a'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'a'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])).<span class=\"pl-en\">does_not_contain</span>(<span class=\"pl-s\">'x'</span>,<span class=\"pl-s\">'y'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])).<span class=\"pl-en\">contains_only</span>(<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])).<span class=\"pl-en\">is_subset_of</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'c'</span>]))<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>])).<span class=\"pl-en\">is_subset_of</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>]), <span class=\"pl-en\">set</span>([<span class=\"pl-s\">'b'</span>]))</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Booleans</h3><a id=\"user-content-booleans\" class=\"anchor-element\" aria-label=\"Permalink: Booleans\" href=\"#booleans\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Matching booleans:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(True).is_true()assert_that(False).is_false()assert_that(True).is_type_of(bool)\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">True</span>).<span class=\"pl-en\">is_true</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">False</span>).<span class=\"pl-en\">is_false</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">True</span>).<span class=\"pl-en\">is_type_of</span>(<span class=\"pl-s1\">bool</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">None</h3><a id=\"user-content-none\" class=\"anchor-element\" aria-label=\"Permalink: None\" href=\"#none\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Matching <code>None</code>:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(None).is_none()assert_that('').is_not_none()assert_that(None).is_type_of(type(None))\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">None</span>).<span class=\"pl-en\">is_none</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">''</span>).<span class=\"pl-en\">is_not_none</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">None</span>).<span class=\"pl-en\">is_type_of</span>(<span class=\"pl-en\">type</span>(<span class=\"pl-c1\">None</span>))</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Dates</h3><a id=\"user-content-dates\" class=\"anchor-element\" aria-label=\"Permalink: Dates\" href=\"#dates\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Matching dates:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import datetimetoday = datetime.datetime.today()yesterday = today - datetime.timedelta(days=1)assert_that(yesterday).is_before(today)assert_that(today).is_after(yesterday)\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">datetime</span><span class=\"pl-s1\">today</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">datetime</span>.<span class=\"pl-s1\">datetime</span>.<span class=\"pl-en\">today</span>()<span class=\"pl-s1\">yesterday</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">today</span> <span class=\"pl-c1\">-</span> <span class=\"pl-s1\">datetime</span>.<span class=\"pl-en\">timedelta</span>(<span class=\"pl-s1\">days</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">1</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">yesterday</span>).<span class=\"pl-en\">is_before</span>(<span class=\"pl-s1\">today</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">today</span>).<span class=\"pl-en\">is_after</span>(<span class=\"pl-s1\">yesterday</span>)</pre></div><p dir=\"auto\">You can also make assertions about date equality (ignoring various units of time) like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"today_0us = today - datetime.timedelta(microseconds=today.microsecond)today_0s = today - datetime.timedelta(seconds=today.second)today_0h = today - datetime.timedelta(hours=today.hour)assert_that(today).is_equal_to_ignoring_milliseconds(today_0us)assert_that(today).is_equal_to_ignoring_seconds(today_0s)assert_that(today).is_equal_to_ignoring_time(today_0h)assert_that(today).is_equal_to(today)\"><pre><span class=\"pl-s1\">today_0us</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">today</span> <span class=\"pl-c1\">-</span> <span class=\"pl-s1\">datetime</span>.<span class=\"pl-en\">timedelta</span>(<span class=\"pl-s1\">microseconds</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">today</span>.<span class=\"pl-s1\">microsecond</span>)<span class=\"pl-s1\">today_0s</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">today</span> <span class=\"pl-c1\">-</span> <span class=\"pl-s1\">datetime</span>.<span class=\"pl-en\">timedelta</span>(<span class=\"pl-s1\">seconds</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">today</span>.<span class=\"pl-s1\">second</span>)<span class=\"pl-s1\">today_0h</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">today</span> <span class=\"pl-c1\">-</span> <span class=\"pl-s1\">datetime</span>.<span class=\"pl-en\">timedelta</span>(<span class=\"pl-s1\">hours</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">today</span>.<span class=\"pl-s1\">hour</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">today</span>).<span class=\"pl-en\">is_equal_to_ignoring_milliseconds</span>(<span class=\"pl-s1\">today_0us</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">today</span>).<span class=\"pl-en\">is_equal_to_ignoring_seconds</span>(<span class=\"pl-s1\">today_0s</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">today</span>).<span class=\"pl-en\">is_equal_to_ignoring_time</span>(<span class=\"pl-s1\">today_0h</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">today</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s1\">today</span>)</pre></div><p dir=\"auto\">You can use these numeric assertions on dates:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"middle = today - datetime.timedelta(hours=12)hours_24 = datetime.timedelta(hours=24)assert_that(today).is_greater_than(yesterday)assert_that(yesterday).is_less_than(today)assert_that(middle).is_between(yesterday, today)#note that the tolerance must be a datetime.timedelta objectassert_that(yesterday).is_close_to(today, hours_24)\"><pre><span class=\"pl-s1\">middle</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">today</span> <span class=\"pl-c1\">-</span> <span class=\"pl-s1\">datetime</span>.<span class=\"pl-en\">timedelta</span>(<span class=\"pl-s1\">hours</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">12</span>)<span class=\"pl-s1\">hours_24</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">datetime</span>.<span class=\"pl-en\">timedelta</span>(<span class=\"pl-s1\">hours</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">24</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">today</span>).<span class=\"pl-en\">is_greater_than</span>(<span class=\"pl-s1\">yesterday</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">yesterday</span>).<span class=\"pl-en\">is_less_than</span>(<span class=\"pl-s1\">today</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">middle</span>).<span class=\"pl-en\">is_between</span>(<span class=\"pl-s1\">yesterday</span>, <span class=\"pl-s1\">today</span>)<span class=\"pl-c\">#note that the tolerance must be a datetime.timedelta object</span><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">yesterday</span>).<span class=\"pl-en\">is_close_to</span>(<span class=\"pl-s1\">today</span>, <span class=\"pl-s1\">hours_24</span>)</pre></div><p dir=\"auto\">Lastly, because datetime is an object we can easily test the properties of a given date by prepending <code>has_</code> to the property name (see <a href=\"#dynamic-assertions-on-objects\">dynamic assertions</a>):</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# 1980-01-02 03:04:05.000006x = datetime.datetime(1980, 1, 2, 3, 4, 5, 6)assert_that(x).has_year(1980)assert_that(x).has_month(1)assert_that(x).has_day(2)assert_that(x).has_hour(3)assert_that(x).has_minute(4)assert_that(x).has_second(5)assert_that(x).has_microsecond(6)\"><pre><span class=\"pl-c\"># 1980-01-02 03:04:05.000006</span><span class=\"pl-s1\">x</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">datetime</span>.<span class=\"pl-en\">datetime</span>(<span class=\"pl-c1\">1980</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">x</span>).<span class=\"pl-en\">has_year</span>(<span class=\"pl-c1\">1980</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">x</span>).<span class=\"pl-en\">has_month</span>(<span class=\"pl-c1\">1</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">x</span>).<span class=\"pl-en\">has_day</span>(<span class=\"pl-c1\">2</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">x</span>).<span class=\"pl-en\">has_hour</span>(<span class=\"pl-c1\">3</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">x</span>).<span class=\"pl-en\">has_minute</span>(<span class=\"pl-c1\">4</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">x</span>).<span class=\"pl-en\">has_second</span>(<span class=\"pl-c1\">5</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">x</span>).<span class=\"pl-en\">has_microsecond</span>(<span class=\"pl-c1\">6</span>)</pre></div><p dir=\"auto\">Currently, <code>assertpy</code> only supports dates via the <code>datetime</code> type.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Files</h3><a id=\"user-content-files\" class=\"anchor-element\" aria-label=\"Permalink: Files\" href=\"#files\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Matching files:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that('foo.txt').exists()assert_that('missing.txt').does_not_exist()assert_that('foo.txt').is_file()assert_that('mydir').exists()assert_that('missing_dir').does_not_exist()assert_that('mydir').is_directory()assert_that('foo.txt').is_named('foo.txt')assert_that('foo.txt').is_child_of('mydir')\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo.txt'</span>).<span class=\"pl-en\">exists</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'missing.txt'</span>).<span class=\"pl-en\">does_not_exist</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo.txt'</span>).<span class=\"pl-en\">is_file</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'mydir'</span>).<span class=\"pl-en\">exists</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'missing_dir'</span>).<span class=\"pl-en\">does_not_exist</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'mydir'</span>).<span class=\"pl-en\">is_directory</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo.txt'</span>).<span class=\"pl-en\">is_named</span>(<span class=\"pl-s\">'foo.txt'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo.txt'</span>).<span class=\"pl-en\">is_child_of</span>(<span class=\"pl-s\">'mydir'</span>)</pre></div><p dir=\"auto\">Matching file contents is done using the <code>contents_of()</code> helper to read the file into a string with the given encoding (if no encoding is given it defaults to <code>utf-8</code>).  Once the file is read into a string, you can make quick work of it using the <code>assertpy</code> string assertions like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from assertpy import assert_that, contents_ofcontents = contents_of('foo.txt', 'ascii')assert_that(contents).starts_with('foo').ends_with('bar').contains('oob')\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">assertpy</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">assert_that</span>, <span class=\"pl-s1\">contents_of</span><span class=\"pl-s1\">contents</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">contents_of</span>(<span class=\"pl-s\">'foo.txt'</span>, <span class=\"pl-s\">'ascii'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">contents</span>).<span class=\"pl-en\">starts_with</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">ends_with</span>(<span class=\"pl-s\">'bar'</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'oob'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Objects</h3><a id=\"user-content-objects\" class=\"anchor-element\" aria-label=\"Permalink: Objects\" href=\"#objects\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Matching an object:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fred = Person('Fred','Smith')assert_that(fred).is_not_none()assert_that(fred).is_true()assert_that(fred).is_type_of(Person)assert_that(fred).is_instance_of(object)assert_that(fred).is_same_as(fred)\"><pre><span class=\"pl-s1\">fred</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Person</span>(<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Smith'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">is_not_none</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">is_true</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">is_type_of</span>(<span class=\"pl-v\">Person</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">is_instance_of</span>(<span class=\"pl-s1\">object</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">is_same_as</span>(<span class=\"pl-s1\">fred</span>)</pre></div><p dir=\"auto\">Matching an attribute, a property, and a method:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(fred.first_name).is_equal_to('Fred')assert_that(fred.name).is_equal_to('Fred Smith')assert_that(fred.say_hello()).is_equal_to('Hello, Fred!')\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>.<span class=\"pl-s1\">first_name</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s\">'Fred'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>.<span class=\"pl-s1\">name</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s\">'Fred Smith'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>.<span class=\"pl-en\">say_hello</span>()).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s\">'Hello, Fred!'</span>)</pre></div><p dir=\"auto\">Given <code>fred</code> is an instance of the following <code>Person</code> class:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Person(object):    def __init__(self, first_name, last_name):        self.first_name = first_name        self.last_name = last_name    @property    def name(self):        return '%s %s' % (self.first_name, self.last_name)    def say_hello(self):        return 'Hello, %s!' % self.first_name\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Person</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">__init__</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">first_name</span>, <span class=\"pl-s1\">last_name</span>):        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">first_name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">first_name</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">last_name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">last_name</span>    <span class=\"pl-en\">@<span class=\"pl-s1\">property</span></span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">name</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-k\">return</span> <span class=\"pl-s\">'%s %s'</span> <span class=\"pl-c1\">%</span> (<span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">first_name</span>, <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">last_name</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">say_hello</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-k\">return</span> <span class=\"pl-s\">'Hello, %s!'</span> <span class=\"pl-c1\">%</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">first_name</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Extracting Attributes from Objects</h4><a id=\"user-content-extracting-attributes-from-objects\" class=\"anchor-element\" aria-label=\"Permalink: Extracting Attributes from Objects\" href=\"#extracting-attributes-from-objects\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">It is frequently necessary to test collections of objects.  The <code>assertpy</code> library includes an <code>extracting</code> helper to flatten the collection on a given attribute, like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fred = Person('Fred','Smith')bob = Person('Bob','Barr')people = [fred, bob]assert_that(people).extracting('first_name').is_equal_to(['Fred','Bob'])assert_that(people).extracting('first_name').contains('Fred','Bob')assert_that(people).extracting('first_name').does_not_contain('Charlie')\"><pre><span class=\"pl-s1\">fred</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Person</span>(<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Smith'</span>)<span class=\"pl-s1\">bob</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Person</span>(<span class=\"pl-s\">'Bob'</span>,<span class=\"pl-s\">'Barr'</span>)<span class=\"pl-s1\">people</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s1\">fred</span>, <span class=\"pl-s1\">bob</span>]<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'first_name'</span>).<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Bob'</span>])<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'first_name'</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Bob'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'first_name'</span>).<span class=\"pl-en\">does_not_contain</span>(<span class=\"pl-s\">'Charlie'</span>)</pre></div><p dir=\"auto\">Of course <code>extracting</code> works with subclasses too...suppose we create a simple class hierarchy by creating a <code>Developer</code> subclass of <code>Person</code>, like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Developer(Person):    def say_hello(self):        return '%s writes code.' % self.first_name\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Developer</span>(<span class=\"pl-v\">Person</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">say_hello</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-k\">return</span> <span class=\"pl-s\">'%s writes code.'</span> <span class=\"pl-c1\">%</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">first_name</span></pre></div><p dir=\"auto\">Testing a mixed collection of parent and child objects works as expected:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fred = Person('Fred','Smith')joe = Developer('Joe','Coder')people = [fred, joe]assert_that(people).extracting('first_name').contains('Fred','Joe')\"><pre><span class=\"pl-s1\">fred</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Person</span>(<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Smith'</span>)<span class=\"pl-s1\">joe</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Developer</span>(<span class=\"pl-s\">'Joe'</span>,<span class=\"pl-s\">'Coder'</span>)<span class=\"pl-s1\">people</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s1\">fred</span>, <span class=\"pl-s1\">joe</span>]<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'first_name'</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Joe'</span>)</pre></div><p dir=\"auto\">Additionally, the <code>extracting</code> helper can accept a list of attributes to be extracted, and will flatten them into a list of tuples:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(people).extracting('first_name', 'last_name').contains(('Fred','Smith'), ('Joe','Coder'))\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'first_name'</span>, <span class=\"pl-s\">'last_name'</span>).<span class=\"pl-en\">contains</span>((<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Smith'</span>), (<span class=\"pl-s\">'Joe'</span>,<span class=\"pl-s\">'Coder'</span>))</pre></div><p dir=\"auto\">Lastly, <code>extracting</code> works on not just class attributes, but also properties, and even zero-argument methods:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(people).extracting('name').contains('Fred Smith', 'Joe Coder')assert_that(people).extracting('say_hello').contains('Hello, Fred!', 'Joe writes code.')\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'name'</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'Fred Smith'</span>, <span class=\"pl-s\">'Joe Coder'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'say_hello'</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'Hello, Fred!'</span>, <span class=\"pl-s\">'Joe writes code.'</span>)</pre></div><p dir=\"auto\">As noted above, the <code>extracting</code> helper also works on a collection of dicts:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fred = {'first_name': 'Fred', 'last_name': 'Smith'}bob = {'first_name': 'Bob', 'last_name': 'Barr'}people = [fred, bob]assert_that(people).extracting('first_name').contains('Fred','Bob')\"><pre><span class=\"pl-s1\">fred</span> <span class=\"pl-c1\">=</span> {<span class=\"pl-s\">'first_name'</span>: <span class=\"pl-s\">'Fred'</span>, <span class=\"pl-s\">'last_name'</span>: <span class=\"pl-s\">'Smith'</span>}<span class=\"pl-s1\">bob</span> <span class=\"pl-c1\">=</span> {<span class=\"pl-s\">'first_name'</span>: <span class=\"pl-s\">'Bob'</span>, <span class=\"pl-s\">'last_name'</span>: <span class=\"pl-s\">'Barr'</span>}<span class=\"pl-s1\">people</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s1\">fred</span>, <span class=\"pl-s1\">bob</span>]<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'first_name'</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Bob'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h5 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Extracting and Filtering</h5><a id=\"user-content-extracting-and-filtering\" class=\"anchor-element\" aria-label=\"Permalink: Extracting and Filtering\" href=\"#extracting-and-filtering\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">The <code>extracting</code> helper can include a <code>filter</code> to keep only those items for which the given <code>filter</code> is truthy.  For example, suppose we have the following list of dicts we wish to test:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"users = [    {'user': 'Fred', 'age': 36, 'active': True},    {'user': 'Bob', 'age': 40, 'active': False},    {'user': 'Johnny', 'age': 13, 'active': True}]\"><pre><span class=\"pl-s1\">users</span> <span class=\"pl-c1\">=</span> [    {<span class=\"pl-s\">'user'</span>: <span class=\"pl-s\">'Fred'</span>, <span class=\"pl-s\">'age'</span>: <span class=\"pl-c1\">36</span>, <span class=\"pl-s\">'active'</span>: <span class=\"pl-c1\">True</span>},    {<span class=\"pl-s\">'user'</span>: <span class=\"pl-s\">'Bob'</span>, <span class=\"pl-s\">'age'</span>: <span class=\"pl-c1\">40</span>, <span class=\"pl-s\">'active'</span>: <span class=\"pl-c1\">False</span>},    {<span class=\"pl-s\">'user'</span>: <span class=\"pl-s\">'Johnny'</span>, <span class=\"pl-s\">'age'</span>: <span class=\"pl-c1\">13</span>, <span class=\"pl-s\">'active'</span>: <span class=\"pl-c1\">True</span>}]</pre></div><p dir=\"auto\">The <code>filter</code> can be the name of a key (or attribute, or property, or zero-argument method) and the extracted items are kept if the corresponding value is truthy:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(users).extracting('user', filter='active')\\    .is_equal_to(['Fred','Johnny'])\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">users</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'user'</span>, <span class=\"pl-s1\">filter</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'active'</span>)\\    .<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Johnny'</span>])</pre></div><p dir=\"auto\">The <code>filter</code> can be a <code>dict</code>-like object and the extracted items are kept if <em>all</em> corresponding key-value pairs are equal:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(users).extracting('user', filter={'active': False})\\    .is_equal_to(['Bob'])assert_that(users).extracting('user', filter={'age': 36, 'active': True})\\    .is_equal_to(['Fred'])\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">users</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'user'</span>, <span class=\"pl-s1\">filter</span><span class=\"pl-c1\">=</span>{<span class=\"pl-s\">'active'</span>: <span class=\"pl-c1\">False</span>})\\    .<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'Bob'</span>])<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">users</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'user'</span>, <span class=\"pl-s1\">filter</span><span class=\"pl-c1\">=</span>{<span class=\"pl-s\">'age'</span>: <span class=\"pl-c1\">36</span>, <span class=\"pl-s\">'active'</span>: <span class=\"pl-c1\">True</span>})\\    .<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'Fred'</span>])</pre></div><p dir=\"auto\">The <code>filter</code> can be any function (including an in-line <code>lambda</code>) that accepts as its single argument each item in the collection and the extracted items are kept if the function evaluates to <code>True</code>:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(users).extracting('user', filter=lambda x: x['age'] &gt; 20)\\    .is_equal_to(['Fred', 'Bob'])\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">users</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'user'</span>, <span class=\"pl-s1\">filter</span><span class=\"pl-c1\">=</span><span class=\"pl-k\">lambda</span> <span class=\"pl-s1\">x</span>: <span class=\"pl-s1\">x</span>[<span class=\"pl-s\">'age'</span>] <span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">20</span>)\\    .<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'Fred'</span>, <span class=\"pl-s\">'Bob'</span>])</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h5 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Extracting and Sorting</h5><a id=\"user-content-extracting-and-sorting\" class=\"anchor-element\" aria-label=\"Permalink: Extracting and Sorting\" href=\"#extracting-and-sorting\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">The <code>extracting</code> helper can include a <code>sort</code> to enforce order on the extracted items.</p><p dir=\"auto\">The <code>sort</code> can be the name of a key (or attribute, or property, or zero-argument method) and the extracted items are ordered by the corresponding values:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(users).extracting('user', sort='age').is_equal_to(['Johnny','Fred','Bob'])\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">users</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'user'</span>, <span class=\"pl-s1\">sort</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'age'</span>).<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'Johnny'</span>,<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Bob'</span>])</pre></div><p dir=\"auto\">The <code>sort</code> can be an <code>iterable</code> of names and the extracted items are ordered by corresponding value of the first name, ties are broken by the corresponding values of the second name, and so on:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(users).extracting('user', sort=['active','age']).is_equal_to(['Bob','Johnny','Fred'])\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">users</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'user'</span>, <span class=\"pl-s1\">sort</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'active'</span>,<span class=\"pl-s\">'age'</span>]).<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'Bob'</span>,<span class=\"pl-s\">'Johnny'</span>,<span class=\"pl-s\">'Fred'</span>])</pre></div><p dir=\"auto\">The <code>sort</code> can be any function (including an in-line <code>lambda</code>) that accepts as its single argument each item in the collection and the extracted items are ordered by the corresponding function return values:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(users).extracting('user', sort=lambda x: -x['age'])\\    .is_equal_to(['Bob','Fred','Johnny'])\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">users</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'user'</span>, <span class=\"pl-s1\">sort</span><span class=\"pl-c1\">=</span><span class=\"pl-k\">lambda</span> <span class=\"pl-s1\">x</span>: <span class=\"pl-c1\">-</span><span class=\"pl-s1\">x</span>[<span class=\"pl-s\">'age'</span>])\\    .<span class=\"pl-en\">is_equal_to</span>([<span class=\"pl-s\">'Bob'</span>,<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Johnny'</span>])</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Dynamic Assertions on Objects</h4><a id=\"user-content-dynamic-assertions-on-objects\" class=\"anchor-element\" aria-label=\"Permalink: Dynamic Assertions on Objects\" href=\"#dynamic-assertions-on-objects\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">When testing attributes of an object, the basic <code>assertpy</code> assertions can get a little verbose like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fred = Person('Fred','Smith')assert_that(fred.first_name).is_equal_to('Fred')assert_that(fred.name).is_equal_to('Fred Smith')assert_that(fred.say_hello()).is_equal_to('Hello, Fred!')\"><pre><span class=\"pl-s1\">fred</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Person</span>(<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Smith'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>.<span class=\"pl-s1\">first_name</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s\">'Fred'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>.<span class=\"pl-s1\">name</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s\">'Fred Smith'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>.<span class=\"pl-en\">say_hello</span>()).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s\">'Hello, Fred!'</span>)</pre></div><p dir=\"auto\">So, <code>assertpy</code> takes advantage of the awesome dyanmism in the Python runtime to provide dynamic assertions in the form of <code>has_&lt;name&gt;()</code> where <code>&lt;name&gt;</code> is the name of any attribute, property, or zero-argument method on the given object.</p><p dir=\"auto\">Using dynamic assertions, we can rewrite the above assertions in a more compact and readable way like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(fred).has_first_name('Fred')assert_that(fred).has_name('Fred Smith')assert_that(fred).has_say_hello('Hello, Fred!')\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">has_first_name</span>(<span class=\"pl-s\">'Fred'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">has_name</span>(<span class=\"pl-s\">'Fred Smith'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">has_say_hello</span>(<span class=\"pl-s\">'Hello, Fred!'</span>)</pre></div><p dir=\"auto\">Since <code>fred</code> has the attribute <code>first_name</code>, the dynamic assertion method <code>has_first_name()</code> is available.Similarly, the property <code>name</code> can be tested via <code>has_name()</code> and the zero-argument method <code>say_hello()</code> viathe <code>has_say_hello()</code> assertion.</p><p dir=\"auto\">As noted above, dynamic assertions also work on dicts:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fred = {'first_name': 'Fred', 'last_name': 'Smith'}assert_that(fred).has_first_name('Fred')assert_that(fred).has_last_name('Smith')\"><pre><span class=\"pl-s1\">fred</span> <span class=\"pl-c1\">=</span> {<span class=\"pl-s\">'first_name'</span>: <span class=\"pl-s\">'Fred'</span>, <span class=\"pl-s\">'last_name'</span>: <span class=\"pl-s\">'Smith'</span>}<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">has_first_name</span>(<span class=\"pl-s\">'Fred'</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">has_last_name</span>(<span class=\"pl-s\">'Smith'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Failure</h3><a id=\"user-content-failure\" class=\"anchor-element\" aria-label=\"Permalink: Failure\" href=\"#failure\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">The <code>assertpy</code> library includes a <code>fail()</code> method to explicitly force a test failure.  It can be used like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from assertpy import assert_that,faildef test_fail():    fail('forced failure')\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">assertpy</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">assert_that</span>,<span class=\"pl-s1\">fail</span><span class=\"pl-k\">def</span> <span class=\"pl-en\">test_fail</span>():    <span class=\"pl-en\">fail</span>(<span class=\"pl-s\">'forced failure'</span>)</pre></div><p dir=\"auto\">A very useful test pattern that requires the <code>fail()</code> method is to verify the exact contents of an error message. For example:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from assertpy import assert_that,faildef test_error_msg():    try:        some_func('foo')        fail('should have raised error')    except RuntimeError as e:        assert_that(str(e)).is_equal_to('some err')\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">assertpy</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">assert_that</span>,<span class=\"pl-s1\">fail</span><span class=\"pl-k\">def</span> <span class=\"pl-en\">test_error_msg</span>():    <span class=\"pl-k\">try</span>:        <span class=\"pl-en\">some_func</span>(<span class=\"pl-s\">'foo'</span>)        <span class=\"pl-en\">fail</span>(<span class=\"pl-s\">'should have raised error'</span>)    <span class=\"pl-k\">except</span> <span class=\"pl-v\">RuntimeError</span> <span class=\"pl-k\">as</span> <span class=\"pl-s1\">e</span>:        <span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">str</span>(<span class=\"pl-s1\">e</span>)).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s\">'some err'</span>)</pre></div><p dir=\"auto\">In the above code, we invoke <code>some_func()</code> with a bad argument which raises an exception.  The exception is then handled by the <code>try..except</code> block and the exact contents of the error message are verified.  Lastly, if an exception is <em>not</em> thrown by <code>some_func()</code> as expected, we fail the test via <code>fail()</code>.</p><p dir=\"auto\">This pattern is only used when you need to verify the contents of the error message.  If you only wish to check for an expected exception (and don't need to verify the contents of the error message itself), you're much better off using a test runner that supports expected exceptions.  <a href=\"http://nose.readthedocs.org/\" rel=\"nofollow\">Nose</a> provides a <a href=\"http://nose.readthedocs.org/en/latest/testing_tools.html#nose.tools.raises\" rel=\"nofollow\">@raises</a> decorator. <a href=\"http://pytest.org/latest/contents.html\" rel=\"nofollow\">Pytest</a> has a <a href=\"http://pytest.org/latest/assert.html#assertions-about-expected-exceptions\" rel=\"nofollow\">pytest.raises</a> method.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Expected Exceptions</h4><a id=\"user-content-expected-exceptions\" class=\"anchor-element\" aria-label=\"Permalink: Expected Exceptions\" href=\"#expected-exceptions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">We recommend you use your test runner to check for expected exceptions (Pytest's <a href=\"http://pytest.org/latest/assert.html#assertions-about-expected-exceptions\" rel=\"nofollow\">pytest.raises</a> context or Nose's <a href=\"http://nose.readthedocs.org/en/latest/testing_tools.html#nose.tools.raises\" rel=\"nofollow\">@raises</a> decorator).  In the special case of invoking a function, <code>assertpy</code> provides its own expected exception handling via a simple fluent API.</p><p dir=\"auto\">Given a function <code>some_func()</code>:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"def some_func(arg):    raise RuntimeError('some err')\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">some_func</span>(<span class=\"pl-s1\">arg</span>):    <span class=\"pl-k\">raise</span> <span class=\"pl-v\">RuntimeError</span>(<span class=\"pl-s\">'some err'</span>)</pre></div><p dir=\"auto\">We can expect a <code>RuntimeError</code> with:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(some_func).raises(RuntimeError).when_called_with('foo')\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">some_func</span>).<span class=\"pl-en\">raises</span>(<span class=\"pl-v\">RuntimeError</span>).<span class=\"pl-en\">when_called_with</span>(<span class=\"pl-s\">'foo'</span>)</pre></div><p dir=\"auto\">Additionally, the error message contents are chained, and can be further verified:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(some_func).raises(RuntimeError).when_called_with('foo')\\    .is_length(8).starts_with('some').is_equal_to('some err')\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">some_func</span>).<span class=\"pl-en\">raises</span>(<span class=\"pl-v\">RuntimeError</span>).<span class=\"pl-en\">when_called_with</span>(<span class=\"pl-s\">'foo'</span>)\\    .<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">8</span>).<span class=\"pl-en\">starts_with</span>(<span class=\"pl-s\">'some'</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s\">'some err'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Custom Error Messages</h4><a id=\"user-content-custom-error-messages\" class=\"anchor-element\" aria-label=\"Permalink: Custom Error Messages\" href=\"#custom-error-messages\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Sometimes you need a little more information in your failures.  For this case, <code>assertpy</code> includes a <code>described_as()</code> helper that will add a custom message when a failure occurs.  For example, if we had these failing assertions:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(1+2).is_equal_to(2)assert_that(1+2).described_as('adding stuff').is_equal_to(2)\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">1</span><span class=\"pl-c1\">+</span><span class=\"pl-c1\">2</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-c1\">2</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">1</span><span class=\"pl-c1\">+</span><span class=\"pl-c1\">2</span>).<span class=\"pl-en\">described_as</span>(<span class=\"pl-s\">'adding stuff'</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-c1\">2</span>)</pre></div><p dir=\"auto\">When run (separately, of course), they would produce these errors:</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Expected &lt;3&gt; to be equal to &lt;2&gt;, but was not.[adding stuff] Expected &lt;3&gt; to be equal to &lt;2&gt;, but was not.\"><pre class=\"notranslate\"><code>Expected &lt;3&gt; to be equal to &lt;2&gt;, but was not.[adding stuff] Expected &lt;3&gt; to be equal to &lt;2&gt;, but was not.</code></pre></div><p dir=\"auto\">The <code>described_as()</code> helper causes the custom message <code>adding stuff</code> to be prepended to the front of the second error.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Just A Warning</h4><a id=\"user-content-just-a-warning\" class=\"anchor-element\" aria-label=\"Permalink: Just A Warning\" href=\"#just-a-warning\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">There are times when you only want a warning message instead of a failing test. For example, if you are using <code>assertpy</code>to write defensive assertions in the normal flow of your application (not in a test).  In this case, just replace<code>assert_that</code> with <code>assert_warn</code>.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_warn('foo').is_length(4)assert_warn('foo').is_empty()assert_warn('foo').is_false()assert_warn('foo').is_digit()assert_warn('123').is_alpha()assert_warn('foo').is_upper()assert_warn('FOO').is_lower()assert_warn('foo').is_equal_to('bar')assert_warn('foo').is_not_equal_to('foo')assert_warn('foo').is_equal_to_ignoring_case('BAR')\"><pre><span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">4</span>)<span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_empty</span>()<span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_false</span>()<span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_digit</span>()<span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'123'</span>).<span class=\"pl-en\">is_alpha</span>()<span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_upper</span>()<span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'FOO'</span>).<span class=\"pl-en\">is_lower</span>()<span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s\">'bar'</span>)<span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_not_equal_to</span>(<span class=\"pl-s\">'foo'</span>)<span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_equal_to_ignoring_case</span>(<span class=\"pl-s\">'BAR'</span>)</pre></div><p dir=\"auto\">Even though all of the above assertions fail, an <code>AssertionError</code> is never raised and execution isnot halted.  Instead, the failed assertions merely log the following warning messages to <code>stdout</code>:</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"2019-10-27 20:00:35 WARNING [test_readme.py:423]: Expected &lt;foo&gt; to be of length &lt;4&gt;, but was &lt;3&gt;.2019-10-27 20:00:35 WARNING [test_readme.py:424]: Expected &lt;foo&gt; to be empty string, but was not.2019-10-27 20:00:35 WARNING [test_readme.py:425]: Expected &lt;False&gt;, but was not.2019-10-27 20:00:35 WARNING [test_readme.py:426]: Expected &lt;foo&gt; to contain only digits, but did not.2019-10-27 20:00:35 WARNING [test_readme.py:427]: Expected &lt;123&gt; to contain only alphabetic chars, but did not.2019-10-27 20:00:35 WARNING [test_readme.py:428]: Expected &lt;foo&gt; to contain only uppercase chars, but did not.2019-10-27 20:00:35 WARNING [test_readme.py:429]: Expected &lt;FOO&gt; to contain only lowercase chars, but did not.2019-10-27 20:00:35 WARNING [test_readme.py:430]: Expected &lt;foo&gt; to be equal to &lt;bar&gt;, but was not.2019-10-27 20:00:35 WARNING [test_readme.py:431]: Expected &lt;foo&gt; to be not equal to &lt;foo&gt;, but was.2019-10-27 20:00:35 WARNING [test_readme.py:432]: Expected &lt;foo&gt; to be case-insensitive equal to &lt;BAR&gt;, but was not.\"><pre class=\"notranslate\"><code>2019-10-27 20:00:35 WARNING [test_readme.py:423]: Expected &lt;foo&gt; to be of length &lt;4&gt;, but was &lt;3&gt;.2019-10-27 20:00:35 WARNING [test_readme.py:424]: Expected &lt;foo&gt; to be empty string, but was not.2019-10-27 20:00:35 WARNING [test_readme.py:425]: Expected &lt;False&gt;, but was not.2019-10-27 20:00:35 WARNING [test_readme.py:426]: Expected &lt;foo&gt; to contain only digits, but did not.2019-10-27 20:00:35 WARNING [test_readme.py:427]: Expected &lt;123&gt; to contain only alphabetic chars, but did not.2019-10-27 20:00:35 WARNING [test_readme.py:428]: Expected &lt;foo&gt; to contain only uppercase chars, but did not.2019-10-27 20:00:35 WARNING [test_readme.py:429]: Expected &lt;FOO&gt; to contain only lowercase chars, but did not.2019-10-27 20:00:35 WARNING [test_readme.py:430]: Expected &lt;foo&gt; to be equal to &lt;bar&gt;, but was not.2019-10-27 20:00:35 WARNING [test_readme.py:431]: Expected &lt;foo&gt; to be not equal to &lt;foo&gt;, but was.2019-10-27 20:00:35 WARNING [test_readme.py:432]: Expected &lt;foo&gt; to be case-insensitive equal to &lt;BAR&gt;, but was not.</code></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h5 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Custom Warning Logger</h5><a id=\"user-content-custom-warning-logger\" class=\"anchor-element\" aria-label=\"Permalink: Custom Warning Logger\" href=\"#custom-warning-logger\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">By default, warnings are written to <code>stdout</code> with a formatter that includes timestamp, log level <code>WARNING</code>, and message,plus some stack frame magic to find the correct filename and line number where <code>assert_warn()</code> was called and failed.For more control or better log formatting, you can pass in your own customer logger when you call <code>assert_warn()</code>.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_warn('foo', logger=my_logger).is_length(4)assert_warn('foo', logger=my_logger).is_equal_to_ignoring_case('BAR')\"><pre><span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'foo'</span>, <span class=\"pl-s1\">logger</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">my_logger</span>).<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">4</span>)<span class=\"pl-en\">assert_warn</span>(<span class=\"pl-s\">'foo'</span>, <span class=\"pl-s1\">logger</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">my_logger</span>).<span class=\"pl-en\">is_equal_to_ignoring_case</span>(<span class=\"pl-s\">'BAR'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Soft Assertions</h3><a id=\"user-content-soft-assertions\" class=\"anchor-element\" aria-label=\"Permalink: Soft Assertions\" href=\"#soft-assertions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Normally, an assertion failure will halt test execution immediately by raising an error. Soft assertions areway to collect assertion failures together, to be raise all at once at the end, without halting your test.  To usesoft assertions in <code>assertpy</code>, just use the <code>with soft_assertions()</code> context manager, like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from assertpy import assert_that, soft_assertionswith soft_assertions():    assert_that('foo').is_length(4)    assert_that('foo').is_empty()    assert_that('foo').is_false()    assert_that('foo').is_digit()    assert_that('123').is_alpha()    assert_that('foo').is_upper()    assert_that('FOO').is_lower()    assert_that('foo').is_equal_to('bar')    assert_that('foo').is_not_equal_to('foo')    assert_that('foo').is_equal_to_ignoring_case('BAR')\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">assertpy</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">assert_that</span>, <span class=\"pl-s1\">soft_assertions</span><span class=\"pl-k\">with</span> <span class=\"pl-en\">soft_assertions</span>():    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">4</span>)    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_empty</span>()    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_false</span>()    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_digit</span>()    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'123'</span>).<span class=\"pl-en\">is_alpha</span>()    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_upper</span>()    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'FOO'</span>).<span class=\"pl-en\">is_lower</span>()    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_equal_to</span>(<span class=\"pl-s\">'bar'</span>)    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_not_equal_to</span>(<span class=\"pl-s\">'foo'</span>)    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_equal_to_ignoring_case</span>(<span class=\"pl-s\">'BAR'</span>)</pre></div><p dir=\"auto\">At the end of the block, all assertion failures are collected together and a single <code>AssertionError</code> is raised:</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"AssertionError: soft assertion failures:1. Expected &lt;foo&gt; to be of length &lt;4&gt;, but was &lt;3&gt;.2. Expected &lt;foo&gt; to be empty string, but was not.3. Expected &lt;False&gt;, but was not.4. Expected &lt;foo&gt; to contain only digits, but did not.5. Expected &lt;123&gt; to contain only alphabetic chars, but did not.6. Expected &lt;foo&gt; to contain only uppercase chars, but did not.7. Expected &lt;FOO&gt; to contain only lowercase chars, but did not.8. Expected &lt;foo&gt; to be equal to &lt;bar&gt;, but was not.9. Expected &lt;foo&gt; to be not equal to &lt;foo&gt;, but was.10. Expected &lt;foo&gt; to be case-insensitive equal to &lt;BAR&gt;, but was not.\"><pre class=\"notranslate\"><code>AssertionError: soft assertion failures:1. Expected &lt;foo&gt; to be of length &lt;4&gt;, but was &lt;3&gt;.2. Expected &lt;foo&gt; to be empty string, but was not.3. Expected &lt;False&gt;, but was not.4. Expected &lt;foo&gt; to contain only digits, but did not.5. Expected &lt;123&gt; to contain only alphabetic chars, but did not.6. Expected &lt;foo&gt; to contain only uppercase chars, but did not.7. Expected &lt;FOO&gt; to contain only lowercase chars, but did not.8. Expected &lt;foo&gt; to be equal to &lt;bar&gt;, but was not.9. Expected &lt;foo&gt; to be not equal to &lt;foo&gt;, but was.10. Expected &lt;foo&gt; to be case-insensitive equal to &lt;BAR&gt;, but was not.</code></pre></div><p dir=\"auto\">Also, note that <em>only</em> assertion failures are collected, errors such as <code>TypeError</code> or <code>ValueError</code> are raised immediately.Triggering an explicit test failure with <code>fail()</code> will similarly halt execution immediately.  If you need moreforgiving behavior, you can use <code>soft_fail()</code> which is collected like any other failing assertion within a soft assertions block.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Snapshot Testing</h3><a id=\"user-content-snapshot-testing\" class=\"anchor-element\" aria-label=\"Permalink: Snapshot Testing\" href=\"#snapshot-testing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Take a snapshot of a python data structure, store it on disk in JSON format, and automatically compare the latest data to the stored data on every test run.  The snapshot testing features of <code>assertpy</code> are borrowed from <a href=\"https://facebook.github.io/jest/\" rel=\"nofollow\">Jest</a>, a well-known and powerful Javascript testing framework.  Snapshots require Python 3.</p><p dir=\"auto\">For example, snapshot the following dict:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that({'a':1,'b':2,'c':3}).snapshot()\"><pre><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>,<span class=\"pl-s\">'c'</span>:<span class=\"pl-c1\">3</span>}).<span class=\"pl-en\">snapshot</span>()</pre></div><p dir=\"auto\">Stored on disk as the following JSON:</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{  &quot;a&quot;: 1,  &quot;b&quot;: 2,  &quot;c&quot;: 3}\"><pre class=\"notranslate\"><code>{  \"a\": 1,  \"b\": 2,  \"c\": 3}</code></pre></div><p dir=\"auto\">Additionally, the on-disk snapshot format supports most python data structures (dict, list, object, etc).  For example:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(None).snapshot()assert_that(True).snapshot()assert_that(123).snapshot()assert_that(-987.654).snapshot()assert_that('foo').snapshot()assert_that([1,2,3]).snapshot()assert_that(set(['a','b','c'])).snapshot()assert_that({'a':1,'b':2,'c':3}).snapshot()assert_that(1 + 2j).snapshot()assert_that(someobj).snapshot()\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">None</span>).<span class=\"pl-en\">snapshot</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">True</span>).<span class=\"pl-en\">snapshot</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">123</span>).<span class=\"pl-en\">snapshot</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">-</span><span class=\"pl-c1\">987.654</span>).<span class=\"pl-en\">snapshot</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">snapshot</span>()<span class=\"pl-en\">assert_that</span>([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>]).<span class=\"pl-en\">snapshot</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-en\">set</span>([<span class=\"pl-s\">'a'</span>,<span class=\"pl-s\">'b'</span>,<span class=\"pl-s\">'c'</span>])).<span class=\"pl-en\">snapshot</span>()<span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>,<span class=\"pl-s\">'c'</span>:<span class=\"pl-c1\">3</span>}).<span class=\"pl-en\">snapshot</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">1</span> <span class=\"pl-c1\">+</span> <span class=\"pl-c1\">2j</span>).<span class=\"pl-en\">snapshot</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">someobj</span>).<span class=\"pl-en\">snapshot</span>()</pre></div><p dir=\"auto\">Snapshot artifacts (typically found in the <code>__snapshots</code> folder), should be committed to source control alongside any code changes.</p><p dir=\"auto\">On the first run (when the snapshot file doesn't yet exist), the snapshot is created, stored to disk, and the test is passed.  On all subsequent runs, the given data is compared to the on-disk snapshot, and the test fails if they don't match.  Failure means that some change occured, so either a bug or a known implementation changed.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Updating Snapshots</h4><a id=\"user-content-updating-snapshots\" class=\"anchor-element\" aria-label=\"Permalink: Updating Snapshots\" href=\"#updating-snapshots\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">It's easy to update your snapshots...just delete them all and re-run the test suite to regenerate all snapshots.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Snapshot Parameters</h4><a id=\"user-content-snapshot-parameters\" class=\"anchor-element\" aria-label=\"Permalink: Snapshot Parameters\" href=\"#snapshot-parameters\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">By default, snapshots are identified by test filename plus line number.  Alternately, you can specify a custom identifier using the <code>id</code> keyword:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that({'a':1,'b':2,'c':3}).snapshot(id='my-custom-id')\"><pre><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>,<span class=\"pl-s\">'c'</span>:<span class=\"pl-c1\">3</span>}).<span class=\"pl-en\">snapshot</span>(<span class=\"pl-s1\">id</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'my-custom-id'</span>)</pre></div><p dir=\"auto\">By default, all snapshots (including those with custom identifiers) are stored in the <code>__snapshots</code> folder.  Alternately, you can specify a custom path using the <code>path</code> keyword:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that({'a':1,'b':2,'c':3}).snapshot(path='my-custom-folder')\"><pre><span class=\"pl-en\">assert_that</span>({<span class=\"pl-s\">'a'</span>:<span class=\"pl-c1\">1</span>,<span class=\"pl-s\">'b'</span>:<span class=\"pl-c1\">2</span>,<span class=\"pl-s\">'c'</span>:<span class=\"pl-c1\">3</span>}).<span class=\"pl-en\">snapshot</span>(<span class=\"pl-s1\">path</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'my-custom-folder'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Snapshot Blackbox</h4><a id=\"user-content-snapshot-blackbox\" class=\"anchor-element\" aria-label=\"Permalink: Snapshot Blackbox\" href=\"#snapshot-blackbox\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Functional testing (which snapshot testing falls under) is very much blackbox testing.  When something goes wrong, it's hard to pinpoint the issue, because functional tests provide little <em>isolation</em>.  On the plus side, snapshots can provide enormous <em>leverage</em> as a few well-placed snapshot tests can strongly verify an application is working that would otherwise require dozens if not hundreds of unit tests.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Extension System - adding custom assertions</h3><a id=\"user-content-extension-system---adding-custom-assertions\" class=\"anchor-element\" aria-label=\"Permalink: Extension System - adding custom assertions\" href=\"#extension-system---adding-custom-assertions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Sometimes you want to add your own custom assertions to <code>assertpy</code>.  This can be done using the <code>add_extension()</code> helper.</p><p dir=\"auto\">For example, we can write a custom <code>is_5()</code> assertion like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from assertpy import add_extensiondef is_5(self):    if self.val != 5:        return self.error(f'{self.val} is NOT 5!')    return selfadd_extension(is_5)\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">assertpy</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">add_extension</span><span class=\"pl-k\">def</span> <span class=\"pl-en\">is_5</span>(<span class=\"pl-s1\">self</span>):    <span class=\"pl-k\">if</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">val</span> <span class=\"pl-c1\">!=</span> <span class=\"pl-c1\">5</span>:        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-en\">error</span>(<span class=\"pl-s\">f'<span class=\"pl-s1\"><span class=\"pl-kos\">{</span><span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">val</span><span class=\"pl-kos\">}</span></span> is NOT 5!'</span>)    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">self</span><span class=\"pl-en\">add_extension</span>(<span class=\"pl-s1\">is_5</span>)</pre></div><p dir=\"auto\">Once registered with <code>assertpy</code>, we can use our new assertion as expected:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that(5).is_5()assert_that(6).is_5()  # fails!\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">5</span>).<span class=\"pl-en\">is_5</span>()<span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">6</span>).<span class=\"pl-en\">is_5</span>()  <span class=\"pl-c\"># fails!</span></pre></div><p dir=\"auto\">Of course, <code>is_5()</code> is only available in the test file where <code>add_extension()</code> is called.  If you want better control of scope of your custom extensions, such as writing extensions once and using them in any test file, you'll need to use the test setup functionality of your test runner.  With <a href=\"http://pytest.org/latest/contents.html\" rel=\"nofollow\">pytest</a>, you can just use a <code>conftest.py</code> file and a <em>fixture</em>.</p><p dir=\"auto\">For example, if your <code>conftest.py</code> is:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import pytestfrom assertpy import add_extensiondef is_5(self):    if self.val != 5:        return self.error(f'{self.val} is NOT 5!')    return self@pytest.fixture(scope='module')def my_extensions():    add_extension(is_5)\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">pytest</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">assertpy</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">add_extension</span><span class=\"pl-k\">def</span> <span class=\"pl-en\">is_5</span>(<span class=\"pl-s1\">self</span>):    <span class=\"pl-k\">if</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">val</span> <span class=\"pl-c1\">!=</span> <span class=\"pl-c1\">5</span>:        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-en\">error</span>(<span class=\"pl-s\">f'<span class=\"pl-s1\"><span class=\"pl-kos\">{</span><span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">val</span><span class=\"pl-kos\">}</span></span> is NOT 5!'</span>)    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">self</span><span class=\"pl-en\">@<span class=\"pl-s1\">pytest</span>.<span class=\"pl-en\">fixture</span>(<span class=\"pl-s1\">scope</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'module'</span>)</span><span class=\"pl-k\">def</span> <span class=\"pl-en\">my_extensions</span>():    <span class=\"pl-en\">add_extension</span>(<span class=\"pl-s1\">is_5</span>)</pre></div><p dir=\"auto\">Then in any test method in any test file (like <code>test_foo.py</code> for example), you just pass in the fixture and all of your extensions are available, like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from assertpy import assert_thatdef test_foo(my_extensions):    assert_that(5).is_5()    assert_that(6).is_5()  # fails!\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">assertpy</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">assert_that</span><span class=\"pl-k\">def</span> <span class=\"pl-en\">test_foo</span>(<span class=\"pl-s1\">my_extensions</span>):    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">5</span>).<span class=\"pl-en\">is_5</span>()    <span class=\"pl-en\">assert_that</span>(<span class=\"pl-c1\">6</span>).<span class=\"pl-en\">is_5</span>()  <span class=\"pl-c\"># fails!</span></pre></div><p dir=\"auto\">where the <code>my_extensions</code> parameter must be the name of your fixture function in <code>conftest.py</code>.  See the <a href=\"https://docs.pytest.org/en/latest/fixture.html\" rel=\"nofollow\">fixture docs</a> for details.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Writing custom assertions</h4><a id=\"user-content-writing-custom-assertions\" class=\"anchor-element\" aria-label=\"Permalink: Writing custom assertions\" href=\"#writing-custom-assertions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Here are some useful tips to help you write your own custom assertions:</p><ol dir=\"auto\"><li>Use <code>self</code> as first param (as if your function was an instance method).</li><li>Use <code>self.val</code> to get the <em>actual</em> value to be tested.</li><li>It's better to test the negative, and then fail if true.</li><li>Fail by raising an <code>AssertionError</code> (the <code>self.error()</code> helper does this for you).</li><li>Always use the <code>self.error()</code> helper to fail (and print your failure message).</li><li>Always <code>return self</code> to allow for chaining.</li></ol><p dir=\"auto\">Putting it all together, here is another custom assertion example, but annotated with comments:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"def is_multiple_of(self, other):    # validate actual value - must be &quot;integer&quot; (aka int or long)    if isinstance(self.val, numbers.Integral) is False or self.val &lt;= 0:        # bad input is error, not an assertion fail, so raise error        raise TypeError('val must be a positive integer')    # validate expected value    if isinstance(other, numbers.Integral) is False or other &lt;= 0:        raise TypeError('given arg must be a positive integer')    # calc remainder using divmod() built-in    _, rem = divmod(self.val, other)    # test the negative (is remainder non-zero?)    if rem &gt; 0:        # non-zero remainder, so not multiple -&gt; we fail!        return self.error('Expected &lt;%s&gt; to be multiple of &lt;%s&gt;, but was not.' % (self.val, other))    # success, and return self to allow chaining    return self\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">is_multiple_of</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">other</span>):    <span class=\"pl-c\"># validate actual value - must be \"integer\" (aka int or long)</span>    <span class=\"pl-k\">if</span> <span class=\"pl-en\">isinstance</span>(<span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">val</span>, <span class=\"pl-s1\">numbers</span>.<span class=\"pl-v\">Integral</span>) <span class=\"pl-c1\">is</span> <span class=\"pl-c1\">False</span> <span class=\"pl-c1\">or</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">val</span> <span class=\"pl-c1\">&lt;=</span> <span class=\"pl-c1\">0</span>:        <span class=\"pl-c\"># bad input is error, not an assertion fail, so raise error</span>        <span class=\"pl-k\">raise</span> <span class=\"pl-v\">TypeError</span>(<span class=\"pl-s\">'val must be a positive integer'</span>)    <span class=\"pl-c\"># validate expected value</span>    <span class=\"pl-k\">if</span> <span class=\"pl-en\">isinstance</span>(<span class=\"pl-s1\">other</span>, <span class=\"pl-s1\">numbers</span>.<span class=\"pl-v\">Integral</span>) <span class=\"pl-c1\">is</span> <span class=\"pl-c1\">False</span> <span class=\"pl-c1\">or</span> <span class=\"pl-s1\">other</span> <span class=\"pl-c1\">&lt;=</span> <span class=\"pl-c1\">0</span>:        <span class=\"pl-k\">raise</span> <span class=\"pl-v\">TypeError</span>(<span class=\"pl-s\">'given arg must be a positive integer'</span>)    <span class=\"pl-c\"># calc remainder using divmod() built-in</span>    <span class=\"pl-s1\">_</span>, <span class=\"pl-s1\">rem</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">divmod</span>(<span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">val</span>, <span class=\"pl-s1\">other</span>)    <span class=\"pl-c\"># test the negative (is remainder non-zero?)</span>    <span class=\"pl-k\">if</span> <span class=\"pl-s1\">rem</span> <span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">0</span>:        <span class=\"pl-c\"># non-zero remainder, so not multiple -&gt; we fail!</span>        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-en\">error</span>(<span class=\"pl-s\">'Expected &lt;%s&gt; to be multiple of &lt;%s&gt;, but was not.'</span> <span class=\"pl-c1\">%</span> (<span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">val</span>, <span class=\"pl-s1\">other</span>))    <span class=\"pl-c\"># success, and return self to allow chaining</span>    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">self</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Chaining</h3><a id=\"user-content-chaining\" class=\"anchor-element\" aria-label=\"Permalink: Chaining\" href=\"#chaining\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">One of the nicest aspects of any fluent API is the ability to chain methods together.  In the case of <code>assertpy</code>, chainingallows you to write assertions as single statement -- that reads like a sentence, and is easy to understand.</p><p dir=\"auto\">Here are just a few examples:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert_that('foo').is_length(3).starts_with('f').ends_with('oo')assert_that([1,2,3]).is_type_of(list).contains(1,2).does_not_contain(4,5)assert_that(fred).has_first_name('Fred').has_last_name('Smith').has_shoe_size(12)assert_that(people).is_length(2).extracting('first_name').contains('Fred','Joe')\"><pre><span class=\"pl-en\">assert_that</span>(<span class=\"pl-s\">'foo'</span>).<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">3</span>).<span class=\"pl-en\">starts_with</span>(<span class=\"pl-s\">'f'</span>).<span class=\"pl-en\">ends_with</span>(<span class=\"pl-s\">'oo'</span>)<span class=\"pl-en\">assert_that</span>([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>]).<span class=\"pl-en\">is_type_of</span>(<span class=\"pl-s1\">list</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>).<span class=\"pl-en\">does_not_contain</span>(<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">5</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">fred</span>).<span class=\"pl-en\">has_first_name</span>(<span class=\"pl-s\">'Fred'</span>).<span class=\"pl-en\">has_last_name</span>(<span class=\"pl-s\">'Smith'</span>).<span class=\"pl-en\">has_shoe_size</span>(<span class=\"pl-c1\">12</span>)<span class=\"pl-en\">assert_that</span>(<span class=\"pl-s1\">people</span>).<span class=\"pl-en\">is_length</span>(<span class=\"pl-c1\">2</span>).<span class=\"pl-en\">extracting</span>(<span class=\"pl-s\">'first_name'</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-s\">'Fred'</span>,<span class=\"pl-s\">'Joe'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Future</h2><a id=\"user-content-future\" class=\"anchor-element\" aria-label=\"Permalink: Future\" href=\"#future\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">There are always a few new features in the works...if you'd like to help, check out the <a href=\"https://github.com/assertpy/assertpy/issues\">open issues</a> and see our <a href=\"/assertpy/assertpy/blob/main/CONTRIBUTING.md\">Contributing</a> doc.</p><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">License</h2><a id=\"user-content-license\" class=\"anchor-element\" aria-label=\"Permalink: License\" href=\"#license\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">All files are licensed under the BSD 3-Clause License as follows:</p><blockquote><p dir=\"auto\">Copyright (c) 2015-2019, Activision Publishing, Inc.All rights reserved.</p><p dir=\"auto\">Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p><ol dir=\"auto\"><li><p dir=\"auto\">Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</p></li><li><p dir=\"auto\">Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</p></li><li><p dir=\"auto\">Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p></li></ol><p dir=\"auto\">THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p></blockquote></article></div></div></div></div></div> <!-- --> <!-- --> <script type=\"application/json\" id=\"__PRIMER_DATA__\">{\"resolvedServerColorMode\":\"day\"}</script></div></react-partial>        <input type=\"hidden\" data-csrf=\"true\" value=\"9tlyEZIQ8BRIpF5rTVujlNDnl7Cu6izsflCL08uK/YQGlDen9BJV5qYbrT29oiEbAAChJO8sEl+u00OO5Xl8xQ==\" /></div>  <div data-view-component=\"true\" class=\"Layout-sidebar\">            <div class=\"BorderGrid about-margin\" data-pjax>        <div class=\"BorderGrid-row\">          <div class=\"BorderGrid-cell\">            <div class=\"hide-sm hide-md\">  <h2 class=\"mb-3 h4\">About</h2>      <p class=\"f4 my-3\">        Simple assertion library for unit testing in python with a fluent API      </p>      <div class=\"my-3 d-flex flex-items-center\">        <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link flex-shrink-0 mr-2\">    <path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg>        <span class=\"flex-auto min-width-0 css-truncate css-truncate-target width-fit\">          <a title=\"https://assertpy.github.io\" role=\"link\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" class=\"text-bold\" href=\"https://assertpy.github.io\">assertpy.github.io</a>        </span>      </div>    <h3 class=\"sr-only\">Resources</h3>    <div class=\"mt-2\">      <a class=\"Link--muted\" data-analytics-event=\"{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:readme&quot;}\" href=\"#readme-ov-file\">        <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-book mr-2\">    <path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg>        Readme</a>    </div>      <h3 class=\"sr-only\">License</h3>  <div class=\"mt-2\">    <a href=\"#BSD-3-Clause-1-ov-file\"      class=\"Link--muted\"            data-analytics-event=\"{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:license&quot;}\"    >      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-law mr-2\">    <path d=\"M8.75.75V2h.985c.304 0 .603.08.867.231l1.29.736c.038.022.08.033.124.033h2.234a.75.75 0 0 1 0 1.5h-.427l2.111 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.006.005-.01.01-.045.04c-.21.176-.441.327-.686.45C14.556 10.78 13.88 11 13 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L12.178 4.5h-.162c-.305 0-.604-.079-.868-.231l-1.29-.736a.245.245 0 0 0-.124-.033H8.75V13h2.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1 0-1.5h2.5V3.5h-.984a.245.245 0 0 0-.124.033l-1.289.737c-.265.15-.564.23-.869.23h-.162l2.112 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.016.015-.045.04c-.21.176-.441.327-.686.45C4.556 10.78 3.88 11 3 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L2.178 4.5H1.75a.75.75 0 0 1 0-1.5h2.234a.249.249 0 0 0 .125-.033l1.288-.737c.265-.15.564-.23.869-.23h.984V.75a.75.75 0 0 1 1.5 0Zm2.945 8.477c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L13 6.327Zm-10 0c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L3 6.327Z\"></path></svg>     BSD-3-Clause license    </a>  </div>  <include-fragment  src=\"/assertpy/assertpy/hovercards/citation/sidebar_partial?tree_name=main\">  </include-fragment>  <div class=\"mt-2\">    <a href=\"/assertpy/assertpy/activity\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg text=\"gray\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-pulse mr-2\">    <path d=\"M6 2c.306 0 .582.187.696.471L10 10.731l1.304-3.26A.751.751 0 0 1 12 7h3.25a.75.75 0 0 1 0 1.5h-2.742l-1.812 4.528a.751.751 0 0 1-1.392 0L6 4.77 4.696 8.03A.75.75 0 0 1 4 8.5H.75a.75.75 0 0 1 0-1.5h2.742l1.812-4.529A.751.751 0 0 1 6 2Z\"></path></svg>      <span class=\"color-fg-muted\">Activity</span></a>  </div>    <div class=\"mt-2\">      <a href=\"/assertpy/assertpy/custom-properties\" data-view-component=\"true\" class=\"Link Link--muted\">        <svg text=\"gray\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-note mr-2\">    <path d=\"M0 3.75C0 2.784.784 2 1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 14H1.75A1.75 1.75 0 0 1 0 12.25Zm1.75-.25a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-8.5a.25.25 0 0 0-.25-.25ZM3.5 6.25a.75.75 0 0 1 .75-.75h7a.75.75 0 0 1 0 1.5h-7a.75.75 0 0 1-.75-.75Zm.75 2.25h4a.75.75 0 0 1 0 1.5h-4a.75.75 0 0 1 0-1.5Z\"></path></svg>        <span class=\"color-fg-muted\">Custom properties</span></a>    </div>  <h3 class=\"sr-only\">Stars</h3>  <div class=\"mt-2\">    <a href=\"/assertpy/assertpy/stargazers\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star mr-2\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg>      <strong>460</strong>      stars</a>  </div>  <h3 class=\"sr-only\">Watchers</h3>  <div class=\"mt-2\">    <a href=\"/assertpy/assertpy/watchers\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-eye mr-2\">    <path d=\"M8 2c1.981 0 3.671.992 4.933 2.078 1.27 1.091 2.187 2.345 2.637 3.023a1.62 1.62 0 0 1 0 1.798c-.45.678-1.367 1.932-2.637 3.023C11.67 13.008 9.981 14 8 14c-1.981 0-3.671-.992-4.933-2.078C1.797 10.83.88 9.576.43 8.898a1.62 1.62 0 0 1 0-1.798c.45-.677 1.367-1.931 2.637-3.022C4.33 2.992 6.019 2 8 2ZM1.679 7.932a.12.12 0 0 0 0 .136c.411.622 1.241 1.75 2.366 2.717C5.176 11.758 6.527 12.5 8 12.5c1.473 0 2.825-.742 3.955-1.715 1.124-.967 1.954-2.096 2.366-2.717a.12.12 0 0 0 0-.136c-.412-.621-1.242-1.75-2.366-2.717C10.824 4.242 9.473 3.5 8 3.5c-1.473 0-2.825.742-3.955 1.715-1.124.967-1.954 2.096-2.366 2.717ZM8 10a2 2 0 1 1-.001-3.999A2 2 0 0 1 8 10Z\"></path></svg>      <strong>28</strong>      watching</a>  </div>  <h3 class=\"sr-only\">Forks</h3>  <div class=\"mt-2\">    <a href=\"/assertpy/assertpy/forks\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo-forked mr-2\">    <path d=\"M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z\"></path></svg>      <strong>62</strong>      forks</a>  </div>    <div class=\"mt-2\">      <a class=\"Link--muted\" href=\"/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fassertpy%2Fassertpy&amp;report=assertpy+%28user%29\">          Report repository</a>    </div></div>          </div>        </div>                    <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\">  <a href=\"/assertpy/assertpy/releases\" data-view-component=\"true\" class=\"Link--primary no-underline Link\">    Releases      <span title=\"13\" data-view-component=\"true\" class=\"Counter\">13</span></a></h2>  <a class=\"Link--primary d-flex no-underline\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" href=\"/assertpy/assertpy/releases/tag/1.1\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-tag flex-shrink-0 mt-1 color-fg-success\">    <path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg>    <div class=\"ml-2 min-width-0\">      <div class=\"d-flex\">        <span class=\"css-truncate css-truncate-target text-bold mr-2\" style=\"max-width: none;\">v1.1</span>        <span title=\"Label: Latest\" data-view-component=\"true\" class=\"Label Label--success flex-shrink-0\">          Latest</span>      </div>      <div class=\"text-small color-fg-muted\"><relative-time datetime=\"2020-07-19T14:14:22Z\" class=\"no-wrap\">Jul 19, 2020</relative-time></div>    </div></a>    <div data-view-component=\"true\" class=\"mt-3\">      <a text=\"small\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" href=\"/assertpy/assertpy/releases\" data-view-component=\"true\" class=\"Link\">        + 12 releases</a></div>              </div>            </div>                            <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\">  <a href=\"/orgs/assertpy/packages?repo_name=assertpy\" data-view-component=\"true\" class=\"Link--primary no-underline Link d-flex flex-items-center\">    Packages      <span title=\"0\" hidden=\"hidden\" data-view-component=\"true\" class=\"Counter ml-1\">0</span></a></h2>      <div class=\"text-small color-fg-muted\">        No packages published <br>      </div>              </div>            </div>                    <div class=\"BorderGrid-row\" hidden>              <div class=\"BorderGrid-cell\">                <include-fragment src=\"/assertpy/assertpy/used_by_list\" accept=\"text/fragment+html\"></include-fragment>              </div>            </div>                    <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\">  <a href=\"/assertpy/assertpy/graphs/contributors\" data-view-component=\"true\" class=\"Link--primary no-underline Link d-flex flex-items-center\">    Contributors      <span title=\"13\" data-view-component=\"true\" class=\"Counter ml-1\">13</span></a></h2>      <ul class=\"list-style-none d-flex flex-wrap mb-n2\">    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/saturnboy\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/saturnboy/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/62250?s=64&amp;v=4\" alt=\"@saturnboy\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/frodopwns\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/frodopwns/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/782143?s=64&amp;v=4\" alt=\"@frodopwns\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/RockBomber\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/RockBomber/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/865905?s=64&amp;v=4\" alt=\"@RockBomber\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/wuan\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/wuan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/563314?s=64&amp;v=4\" alt=\"@wuan\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/skippyprime\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/skippyprime/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/2363488?s=64&amp;v=4\" alt=\"@skippyprime\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/aarbouin\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/aarbouin/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/24298755?s=64&amp;v=4\" alt=\"@aarbouin\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/jakul\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/jakul/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/862794?s=64&amp;v=4\" alt=\"@jakul\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/dwyatte\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/dwyatte/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/2512762?s=64&amp;v=4\" alt=\"@dwyatte\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/rpcope1\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/rpcope1/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/5043922?s=64&amp;v=4\" alt=\"@rpcope1\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/starhel\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/starhel/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/8440636?s=64&amp;v=4\" alt=\"@starhel\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/scordio\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/scordio/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/26772046?s=64&amp;v=4\" alt=\"@scordio\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/kloczek\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/kloczek/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/31284574?s=64&amp;v=4\" alt=\"@kloczek\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/LiorElb\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/LiorElb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/37171466?s=64&amp;v=4\" alt=\"@LiorElb\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li></ul>              </div>            </div>                            <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\">Languages</h2><div class=\"mb-2\">  <span data-view-component=\"true\" class=\"Progress\">    <span style=\"background-color:#3572A5 !important;;width: 100.0%;\" itemprop=\"keywords\" aria-label=\"Python 100.0\" data-view-component=\"true\" class=\"Progress-item color-bg-success-emphasis\"></span></span></div><ul class=\"list-style-none\">    <li class=\"d-inline\">        <a class=\"d-inline-flex flex-items-center flex-nowrap Link--secondary no-underline text-small mr-3\" href=\"/assertpy/assertpy/search?l=python\"  data-ga-click=\"Repository, language stats search click, location:repo overview\">          <svg style=\"color:#3572A5;\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-dot-fill mr-2\">    <path d=\"M8 4a4 4 0 1 1 0 8 4 4 0 0 1 0-8Z\"></path></svg>          <span class=\"color-fg-default text-bold mr-1\">Python</span>          <span>100.0%</span>        </a>    </li></ul>              </div>            </div>              </div></div>  </div></div>  </div>  </div></turbo-frame>    </main>  </div>  </div>          <footer class=\"footer pt-8 pb-6 f6 color-fg-muted p-responsive\" role=\"contentinfo\" >  <h2 class='sr-only'>Footer</h2>    <div class=\"d-flex flex-justify-center flex-items-center flex-column-reverse flex-lg-row flex-wrap flex-lg-nowrap\">    <div class=\"d-flex flex-items-center flex-shrink-0 mx-2\">      <a aria-label=\"Homepage\" title=\"GitHub\" class=\"footer-octicon mr-2\" href=\"https://github.com\">        <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-mark-github\">    <path d=\"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z\"></path></svg></a>      <span>        &copy; 2024 GitHub,&nbsp;Inc.      </span>    </div>    <nav aria-label=\"Footer\">      <h3 class=\"sr-only\" id=\"sr-footer-heading\">Footer navigation</h3>      <ul class=\"list-style-none d-flex flex-justify-center flex-wrap mb-2 mb-lg-0\" aria-labelledby=\"sr-footer-heading\">          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to Terms&quot;,&quot;label&quot;:&quot;text:terms&quot;}\" href=\"https://docs.github.com/site-policy/github-terms/github-terms-of-service\" data-view-component=\"true\" class=\"Link--secondary Link\">Terms</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to privacy&quot;,&quot;label&quot;:&quot;text:privacy&quot;}\" href=\"https://docs.github.com/site-policy/privacy-policies/github-privacy-statement\" data-view-component=\"true\" class=\"Link--secondary Link\">Privacy</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to security&quot;,&quot;label&quot;:&quot;text:security&quot;}\" href=\"/security\" data-view-component=\"true\" class=\"Link--secondary Link\">Security</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to status&quot;,&quot;label&quot;:&quot;text:status&quot;}\" href=\"https://www.githubstatus.com/\" data-view-component=\"true\" class=\"Link--secondary Link\">Status</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to docs&quot;,&quot;label&quot;:&quot;text:docs&quot;}\" href=\"https://docs.github.com\" data-view-component=\"true\" class=\"Link--secondary Link\">Docs</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to contact&quot;,&quot;label&quot;:&quot;text:contact&quot;}\" href=\"https://support.github.com?tags=dotcom-footer\" data-view-component=\"true\" class=\"Link--secondary Link\">Contact</a>          </li>          <li class=\"mx-2\" >  <cookie-consent-link>    <button type=\"button\" class=\"Link--secondary underline-on-hover border-0 p-0 color-bg-transparent\" data-action=\"click:cookie-consent-link#showConsentManagement\">      Manage cookies    </button>  </cookie-consent-link></li><li class=\"mx-2\">  <cookie-consent-link>    <button type=\"button\" class=\"Link--secondary underline-on-hover border-0 p-0 color-bg-transparent\" data-action=\"click:cookie-consent-link#showConsentManagement\">      Do not share my personal information    </button>  </cookie-consent-link></li>      </ul>    </nav>  </div></footer>    <cookie-consent id=\"cookie-consent-banner\" class=\"position-fixed bottom-0 left-0\" style=\"z-index: 999999\" data-initial-cookie-consent-allowed=\"\" data-cookie-consent-required=\"false\"></cookie-consent>  <div id=\"ajax-error-message\" class=\"ajax-error-message flash flash-error\" hidden>    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-alert\">    <path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>    <button type=\"button\" class=\"flash-close js-ajax-error-dismiss\" aria-label=\"Dismiss error\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg>    </button>    You can\u2019t perform that action at this time.  </div>    <template id=\"site-details-dialog\">  <details class=\"details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm\" open>    <summary role=\"button\" aria-label=\"Close dialog\"></summary>    <details-dialog class=\"Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal\">      <button class=\"Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0\" type=\"button\" aria-label=\"Close dialog\" data-close-dialog>        <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg>      </button>      <div class=\"octocat-spinner my-6 js-details-dialog-spinner\"></div>    </details-dialog>  </details></template>    <div class=\"Popover js-hovercard-content position-absolute\" style=\"display: none; outline: none;\" tabindex=\"0\">  <div class=\"Popover-message Popover-message--bottom-left Popover-message--large Box color-shadow-large\" style=\"width:360px;\">  </div></div>    <template id=\"snippet-clipboard-copy-button\">  <div class=\"zeroclipboard-container position-absolute right-0 top-0\">    <clipboard-copy aria-label=\"Copy\" class=\"ClipboardButton btn js-clipboard-copy m-2 p-0 tooltipped-no-delay\" data-copy-feedback=\"Copied!\" data-tooltip-direction=\"w\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-copy js-clipboard-copy-icon m-2\">    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path></svg>      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2\">    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path></svg>    </clipboard-copy>  </div></template><template id=\"snippet-clipboard-copy-button-unpositioned\">  <div class=\"zeroclipboard-container\">    <clipboard-copy aria-label=\"Copy\" class=\"ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 tooltipped-no-delay d-flex flex-justify-center flex-items-center\" data-copy-feedback=\"Copied!\" data-tooltip-direction=\"w\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-copy js-clipboard-copy-icon\">    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path></svg>      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-check js-clipboard-check-icon color-fg-success d-none\">    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path></svg>    </clipboard-copy>  </div></template>    </div>    <div id=\"js-global-screen-reader-notice\" class=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\" ></div>    <div id=\"js-global-screen-reader-notice-assertive\" class=\"sr-only\" aria-live=\"assertive\" aria-atomic=\"true\"></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "pyannote.pipeline",
  "url": "http://pyannote.github.io/",
  "html": "<!DOCTYPE html><html>  <head>    <title>PyAnnote</title>    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/reset.css\">    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/grid.css\">    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/style.css\">    <link rel=\"shortcut icon\" href=\"assets/favicon.ico\">    <link rel=\"icon\" type=\"image/png\" href=\"assets/favicon-192x192.png\" sizes=\"192x192\">    <link rel=\"icon\" type=\"image/png\" href=\"assets/favicon-160x160.png\" sizes=\"160x160\">    <link rel=\"icon\" type=\"image/png\" href=\"assets/favicon-96x96.png\" sizes=\"96x96\">    <link rel=\"icon\" type=\"image/png\" href=\"assets/favicon-16x16.png\" sizes=\"16x16\">    <link rel=\"icon\" type=\"image/png\" href=\"assets/favicon-32x32.png\" sizes=\"32x32\">    <script type=\"text/javascript\">  var _gaq = _gaq || [];  _gaq.push(['_setAccount', 'UA-1104914-8']);  _gaq.push(['_trackPageview']);  (function() {    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);  })();    </script>    <script type=\"text/javascript\" src=\"assets/jquery-1.7.1.min.js\"></script>    <script type=\"text/javascript\" src=\"assets/strftime.js\"></script>    <script type=\"text/javascript\">    (function ($, undefined) {      // Put custom repo URL's in this object, keyed by repo name.      var repoUrls = {      //  \"bootstrap\": \"http://twitter.github.com/bootstrap/\",      //  \"finagle\": \"http://twitter.github.com/finagle/\",      //  \"hogan.js\": \"http://twitter.github.com/hogan.js/\"      };      function repoUrl(repo) {        return repoUrls[repo.name] || repo.html_url;      }      // Put custom repo descriptions in this object, keyed by repo name.      var repoDescriptions = {        \"pyannote.github.io\": \"Source code of this very page\",      };      function repoDescription(repo) {        return repoDescriptions[repo.name] || repo.description;      }      function addRecentlyUpdatedRepo(repo) {        var $item = $(\"<li>\");        var $name = $(\"<a>\").attr(\"href\", repo.html_url).text(repo.name);        $item.append($(\"<span>\").addClass(\"name\").append($name));        var $time = $(\"<a>\").attr(\"href\", repo.html_url + \"/commits\").text(strftime(\"%h %e, %Y\", repo.pushed_at));        $item.append($(\"<span>\").addClass(\"time\").append($time));        $item.append('<span class=\"bullet\">&sdot;</span>');        var $watchers = $(\"<a>\").attr(\"href\", repo.html_url + \"/watchers\").text(repo.watchers + \" stargazers\");        $item.append($(\"<span>\").addClass(\"watchers\").append($watchers));        $item.append('<span class=\"bullet\">&sdot;</span>');        var $forks = $(\"<a>\").attr(\"href\", repo.html_url + \"/network\").text(repo.forks + \" forks\");        $item.append($(\"<span>\").addClass(\"forks\").append($forks));        $item.appendTo(\"#recently-updated-repos\");      }      function addRepo(repo) {        var $item = $(\"<li>\").addClass(\"repo grid-1 \" + (repo.language || '').toLowerCase());        var $link = $(\"<a>\").attr(\"href\", repoUrl(repo)).appendTo($item);        $link.append($(\"<h2>\").text(repo.name));        $link.append($(\"<h3>\").text(repo.language));        var $build = $(\"<p>\").appendTo($link);        $build.append($(\"<img>\").attr(\"src\", \"https://travis-ci.org/pyannote/\" + repo.name + \".svg?branch=master\"));        $link.append($(\"<p>\").text(repoDescription(repo)));        $item.appendTo(\"#repos\");      }      function addRepos(repos, page) {        repos = repos || [];        page = page || 1;        var uri = \"https://api.github.com/orgs/pyannote/repos?callback=?\"                + \"&per_page=100\"                + \"&page=\"+page;        $.getJSON(uri, function (result) {          if (result.data && result.data.length > 0) {            repos = repos.concat(result.data);            addRepos(repos, page + 1);          }          else {            $(function () {              $(\"#num-repos\").text(repos.length);              // Convert pushed_at to Date.              $.each(repos, function (i, repo) {                repo.pushed_at = new Date(repo.pushed_at);                var weekHalfLife  = 1.146 * Math.pow(10, -9);                var pushDelta    = (new Date) - Date.parse(repo.pushed_at);                var createdDelta = (new Date) - Date.parse(repo.created_at);                var weightForPush = 1;                var weightForWatchers = 1.314 * Math.pow(10, 7);                repo.hotness = weightForPush * Math.pow(Math.E, -1 * weekHalfLife * pushDelta);                repo.hotness += weightForWatchers * repo.watchers / createdDelta;              });              // Sort by highest # of watchers.              repos.sort(function (a, b) {                if (a.hotness < b.hotness) return 1;                if (b.hotness < a.hotness) return -1;                return 0;              });              $.each(repos, function (i, repo) {                addRepo(repo);              });              // Sort by most-recently pushed to.              repos.sort(function (a, b) {                if (a.pushed_at < b.pushed_at) return 1;                if (b.pushed_at < a.pushed_at) return -1;                return 0;              });              $.each(repos.slice(0, 3), function (i, repo) {                addRecentlyUpdatedRepo(repo);              });            });          }        });      }      addRepos();      //get total number of PyAnnote members      function getNumMembers(page, numMembers) {        var page = page || 1;        var numMembers = numMembers || 0;        var membersUri = \"https://api.github.com/orgs/pyannote/members?callback=?\"          + \"&per_page=100\"          + \"&page=\"+page;        $.getJSON(membersUri, function (result) {          if (result.data && result.data.length > 0) {            numMembers += result.data.length;            getNumMembers(page+1, numMembers);          } else {            $(function () {              $(\"#num-members\").text(numMembers);            });          }        });      }      getNumMembers();    })(jQuery);    </script>  </head>  <body>    <div id=\"wrapper\" class=\"grid clearfix\">      <div id=\"main\" class=\"grid-1\">        <div id=\"logo\"><h1>pyannote</h1></div>        <h1>Multimedia processing</h1>        <h3><a href=\"https://github.com/pyannote\">development</a><h3>      </div>      <div class=\"grid grid-3\">        <div id=\"statistics\" class=\"grid-1 alpha header\">          <h1>Statistics</h1>          <p>            <a href=\"https://github.com/pyannote/repositories\"><span id=\"num-repos\"><img src=\"assets/spinner.gif\" /></span> public repos</a>            <br>            <a href=\"https://github.com/pyannote?tab=members\"><span id=\"num-members\"><img src=\"assets/spinner.gif\" /></span> members</a>          </p>          <p class=\"email\"><a href=\"mailto:herve.bredin@irit.fr\">herve.bredin@irit.fr</a></p>        </div>        <div id=\"recently-updated\" class=\"grid-2 omega header\">          <h1>Recently updated <a href=\"https://github.com/pyannote/repositories\">View All on GitHub</a></h1>          <ol id=\"recently-updated-repos\"></ol>        </div>      </div>      <ol id=\"repos\"></ol>    </div>  </body></html>",
  "embeddings": []
}
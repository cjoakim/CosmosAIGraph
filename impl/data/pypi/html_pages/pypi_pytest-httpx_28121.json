{
  "libtype": "pypi",
  "libname": "pytest-httpx",
  "url": "https://pypi.org/project/pytest-httpx/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>pytest-httpx \u00b7 PyPI</title>    <meta name=\"description\" content=\"Send responses to httpx.\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for pytest-httpx\" href=\"/rss/project/pytest-httpx/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/pytest-httpx/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/pytest-httpx/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"pytest-httpx\">    <meta property=\"og:description\" content=\"Send responses to httpx.\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/Colin-b/pytest_httpx\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:Colin-b/pytest_httpx+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        pytest-httpx 0.30.0      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install pytest-httpx</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/pytest-httpx/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2024-02-21T17:59:54+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 21, 2024</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/pytest-httpx\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Send responses to httpx.</p><div data-html-include=\"/_includes/edit-project-button/pytest-httpx\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for pytest-httpx\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/Colin-b/pytest_httpx/blob/master/CHANGELOG.md\" rel=\"nofollow\">        <i class=\"fas fa-scroll\" aria-hidden=\"true\"></i>changelog      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://colin-b.github.io/pytest_httpx/\" rel=\"nofollow\">        <i class=\"fas fa-book\" aria-hidden=\"true\"></i>documentation      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/Colin-b/pytest_httpx/issues\" rel=\"nofollow\">        <i class=\"fas fa-bug\" aria-hidden=\"true\"></i>issues      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/Colin-b/pytest_httpx\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>repository      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/pytest-httpx\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (MIT License  Copyright (c) 2024 Colin Bounouar  Permission is hereby granted, free of charge, to any...)</p>    <p><strong>Author:</strong> <a href=\"mailto:colin.bounouar.dev@gmail.com\">Colin Bounouar</a></p>    <p><strong>Maintainer:</strong> <a href=\"mailto:colin.bounouar.dev@gmail.com\">Colin Bounouar</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      httpx,    </span>    <span class=\"package-keyword\">      mock,    </span>    <span class=\"package-keyword\">      pytest,    </span>    <span class=\"package-keyword\">      testing    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=3.9  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/colin-b/\" aria-label=\"colin-b\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/9e381914659a96e59330f45a45351fbf7c2c6a88/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f38343131373961623339373635333439373366383037646534656235623464313f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for colin-b from gravatar.com\" title=\"Avatar for colin-b from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            colin-b          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Framework</strong>      <ul>        <li>          <a href=\"/search/?c=Framework+%3A%3A+Pytest\">            Pytest          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Natural Language</strong>      <ul>        <li>          <a href=\"/search/?c=Natural+Language+%3A%3A+English\">            English          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Internet+%3A%3A+WWW%2FHTTP\">            Internet :: WWW/HTTP          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Build+Tools\">            Software Development :: Build Tools          </a>        </li>      </ul>    </li>    <li>      <strong>Typing</strong>      <ul>        <li>          <a href=\"/search/?c=Typing+%3A%3A+Typed\">            Typed          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for pytest-httpx\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <h2 align=center>Send responses to HTTPX using pytest</h2><p align=center><a href=\"https://pypi.org/project/pytest-httpx/\" rel=nofollow><img alt=\"pypi version\" src=\"https://pypi-camo.freetls.fastly.net/d13ca2480e8429550b1f2f90e996fb794845700e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573745f6874747078\"></a><a href=\"https://github.com/Colin-b/pytest_httpx/actions\" rel=nofollow><img alt=\"Build status\" src=\"https://pypi-camo.freetls.fastly.net/16921bd666e22e75b58b6862a37dd3d33251e148/68747470733a2f2f6769746875622e636f6d2f436f6c696e2d622f7079746573745f68747470782f776f726b666c6f77732f52656c656173652f62616467652e737667\"></a><a href=\"https://github.com/Colin-b/pytest_httpx/actions\" rel=nofollow><img alt=Coverage src=\"https://pypi-camo.freetls.fastly.net/0280f255d36847e3743058a68bedfb93626e993f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f7665726167652d3130302532352d627269676874677265656e\"></a><a href=\"https://github.com/psf/black\" rel=nofollow><img alt=\"Code style: black\" src=\"https://pypi-camo.freetls.fastly.net/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a><a href=\"https://github.com/Colin-b/pytest_httpx/actions\" rel=nofollow><img alt=\"Number of tests\" src=\"https://pypi-camo.freetls.fastly.net/56198de82b593333f59589e8b406ac90a7658b5e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f74657374732d323038207061737365642d626c7565\"></a><a href=\"https://pypi.org/project/pytest-httpx/\" rel=nofollow><img alt=\"Number of downloads\" src=\"https://pypi-camo.freetls.fastly.net/2febfaede328c95fd6478daec52200e911c65353/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7079746573745f6874747078\"></a></p><blockquote><p>Version 1.0.0 will be released once httpx is considered as stable (release of 1.0.0).</p><p>However, current state can be considered as stable.</p></blockquote><p>Once installed, <code>httpx_mock</code> <a href=\"https://docs.pytest.org/en/latest/\" rel=nofollow><code>pytest</code></a> fixture will make sure every <a href=\"https://www.python-httpx.org\" rel=nofollow><code>httpx</code></a> request will be replied to with user provided responses.</p><ul><li><a href=#add-responses rel=nofollow>Add responses</a><ul><li><a href=#add-json-response rel=nofollow>JSON body</a></li><li><a href=#reply-with-custom-body rel=nofollow>Custom body</a></li><li><a href=#add-multipart-response rel=nofollow>Multipart body (files, ...)</a></li><li><a href=#add-non-200-response rel=nofollow>HTTP status code</a></li><li><a href=#reply-with-custom-headers rel=nofollow>HTTP headers</a></li><li><a href=\"#add-http/2.0-response\" rel=nofollow>HTTP/2.0</a></li></ul></li><li><a href=#dynamic-responses rel=nofollow>Add dynamic responses</a></li><li><a href=#raising-exceptions rel=nofollow>Raising exceptions</a></li><li><a href=#check-sent-requests rel=nofollow>Check requests</a></li><li><a href=#do-not-mock-some-requests rel=nofollow>Do not mock some requests</a></li><li><a href=#migrating-to-pytest-httpx rel=nofollow>Migrating</a><ul><li><a href=#from-responses rel=nofollow>responses</a></li><li><a href=#from-aioresponses rel=nofollow>aioresponses</a></li></ul></li></ul><h2>Add responses</h2><p>You can register responses for both sync and async <a href=\"https://www.python-httpx.org\" rel=nofollow><code>HTTPX</code></a> requests.</p><pre lang=python3><span class=kn>import</span> <span class=nn>pytest</span><span class=kn>import</span> <span class=nn>httpx</span><span class=k>def</span> <span class=nf>test_something</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>()</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=nd>@pytest</span><span class=o>.</span><span class=n>mark</span><span class=o>.</span><span class=n>asyncio</span><span class=k>async</span> <span class=k>def</span> <span class=nf>test_something_async</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>()</span>    <span class=k>async</span> <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>AsyncClient</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=k>await</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span></pre><p>If all registered responses are not sent back during test execution, the test case will fail at teardown.</p><p>This behavior can be disabled thanks to the <code>assert_all_responses_were_requested</code> fixture:</p><pre lang=python3><span class=kn>import</span> <span class=nn>pytest</span><span class=nd>@pytest</span><span class=o>.</span><span class=n>fixture</span><span class=k>def</span> <span class=nf>assert_all_responses_were_requested</span><span class=p>()</span> <span class=o>-&gt;</span> <span class=nb>bool</span><span class=p>:</span>    <span class=k>return</span> <span class=kc>False</span></pre><p>Default response is a HTTP/1.1 200 (OK) without any body.</p><h3>How response is selected</h3><p>In case more than one response match request, the first one not yet sent (according to the registration order) will be sent.</p><p>In case all matching responses have been sent, the last one (according to the registration order) will be sent.</p><p>You can add criteria so that response will be sent only in case of a more specific matching.</p><h4>Matching on URL</h4><p><code>url</code> parameter can either be a string, a python <a href=\"https://docs.python.org/3/library/re.html\" rel=nofollow>re.Pattern</a> instance or a <a href=\"https://www.python-httpx.org/api/#url\" rel=nofollow>httpx.URL</a> instance.</p><p>Matching is performed on the full URL, query parameters included.</p><p>Order of parameters in the query string does not matter, however order of values do matter if the same parameter is provided more than once.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_url</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>url</span><span class=o>=</span><span class=s2>\"https://test_url?a=1&amp;b=2\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response1</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>delete</span><span class=p>(</span><span class=s2>\"https://test_url?a=1&amp;b=2\"</span><span class=p>)</span>        <span class=n>response2</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url?b=2&amp;a=1\"</span><span class=p>)</span></pre><h4>Matching on HTTP method</h4><p>Use <code>method</code> parameter to specify the HTTP method (POST, PUT, DELETE, PATCH, HEAD) to reply to.</p><p><code>method</code> parameter must be a string. It will be upper-cased, so it can be provided lower cased.</p><p>Matching is performed on equality.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_post</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>method</span><span class=o>=</span><span class=s2>\"POST\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=k>def</span> <span class=nf>test_put</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>method</span><span class=o>=</span><span class=s2>\"PUT\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>put</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=k>def</span> <span class=nf>test_delete</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>method</span><span class=o>=</span><span class=s2>\"DELETE\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>delete</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=k>def</span> <span class=nf>test_patch</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>method</span><span class=o>=</span><span class=s2>\"PATCH\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=k>def</span> <span class=nf>test_head</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>method</span><span class=o>=</span><span class=s2>\"HEAD\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>head</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span>    </pre><h4>Matching on proxy URL</h4><p><code>proxy_url</code> parameter can either be a string, a python <a href=\"https://docs.python.org/3/library/re.html\" rel=nofollow>re.Pattern</a> instance or a <a href=\"https://www.python-httpx.org/api/#url\" rel=nofollow>httpx.URL</a> instance.</p><p>Matching is performed on the full proxy URL, query parameters included.</p><p>Order of parameters in the query string does not matter, however order of values do matter if the same parameter is provided more than once.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_proxy_url</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>proxy_url</span><span class=o>=</span><span class=s2>\"http://test_proxy_url?b=1&amp;a=2\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>(</span><span class=n>proxy</span><span class=o>=</span><span class=s2>\"http://test_proxy_url?a=2&amp;b=1\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span></pre><h4>Matching on HTTP headers</h4><p>Use <code>match_headers</code> parameter to specify the HTTP headers to reply to.</p><p>Matching is performed on equality for each provided header.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_headers_matching</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>match_headers</span><span class=o>=</span><span class=p>{</span><span class=s1>'User-Agent'</span><span class=p>:</span> <span class=s1>'python-httpx/0.25.0'</span><span class=p>})</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span></pre><h4>Matching on HTTP body</h4><p>Use <code>match_content</code> parameter to specify the full HTTP body to reply to.</p><p>Matching is performed on equality.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_content_matching</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>match_content</span><span class=o>=</span><span class=sa>b</span><span class=s2>\"This is the body\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>,</span> <span class=n>content</span><span class=o>=</span><span class=sa>b</span><span class=s2>\"This is the body\"</span><span class=p>)</span></pre><h5>Matching on HTTP JSON body</h5><p>Use <code>match_json</code> parameter to specify the JSON decoded HTTP body to reply to.</p><p>Matching is performed on equality. You can however use <code>unittest.mock.ANY</code> to do partial matching.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=kn>from</span> <span class=nn>unittest.mock</span> <span class=kn>import</span> <span class=n>ANY</span><span class=k>def</span> <span class=nf>test_json_matching</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>match_json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"a\"</span><span class=p>:</span> <span class=s2>\"json\"</span><span class=p>,</span> <span class=s2>\"b\"</span><span class=p>:</span> <span class=mi>2</span><span class=p>})</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>,</span> <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"a\"</span><span class=p>:</span> <span class=s2>\"json\"</span><span class=p>,</span> <span class=s2>\"b\"</span><span class=p>:</span> <span class=mi>2</span><span class=p>})</span>        <span class=k>def</span> <span class=nf>test_partial_json_matching</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>match_json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"a\"</span><span class=p>:</span> <span class=s2>\"json\"</span><span class=p>,</span> <span class=s2>\"b\"</span><span class=p>:</span> <span class=n>ANY</span><span class=p>})</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>post</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>,</span> <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"a\"</span><span class=p>:</span> <span class=s2>\"json\"</span><span class=p>,</span> <span class=s2>\"b\"</span><span class=p>:</span> <span class=mi>2</span><span class=p>})</span></pre><p>Note that <code>match_content</code> cannot be provided if <code>match_json</code> is also provided.</p><h3>Add JSON response</h3><p>Use <code>json</code> parameter to add a JSON response using python values.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_json</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>json</span><span class=o>=</span><span class=p>[{</span><span class=s2>\"key1\"</span><span class=p>:</span> <span class=s2>\"value1\"</span><span class=p>,</span> <span class=s2>\"key2\"</span><span class=p>:</span> <span class=s2>\"value2\"</span><span class=p>}])</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>assert</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=o>.</span><span class=n>json</span><span class=p>()</span> <span class=o>==</span> <span class=p>[{</span><span class=s2>\"key1\"</span><span class=p>:</span> <span class=s2>\"value1\"</span><span class=p>,</span> <span class=s2>\"key2\"</span><span class=p>:</span> <span class=s2>\"value2\"</span><span class=p>}]</span>    </pre><p>Note that the <code>content-type</code> header will be set to <code>application/json</code> by default in the response.</p><h3>Reply with custom body</h3><p>Use <code>text</code> parameter to reply with a custom body by providing UTF-8 encoded string.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_str_body</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>text</span><span class=o>=</span><span class=s2>\"This is my UTF-8 content\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>assert</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=o>.</span><span class=n>text</span> <span class=o>==</span> <span class=s2>\"This is my UTF-8 content\"</span></pre><p>Use <code>content</code> parameter to reply with a custom body by providing bytes.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_bytes_body</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>content</span><span class=o>=</span><span class=sa>b</span><span class=s2>\"This is my bytes content\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>assert</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=o>.</span><span class=n>content</span> <span class=o>==</span> <span class=sa>b</span><span class=s2>\"This is my bytes content\"</span>    </pre><p>Use <code>html</code> parameter to reply with a custom body by providing UTF-8 encoded string.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_html_body</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>html</span><span class=o>=</span><span class=s2>\"&lt;body&gt;This is &lt;p&gt; HTML content&lt;/body&gt;\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>assert</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=o>.</span><span class=n>text</span> <span class=o>==</span> <span class=s2>\"&lt;body&gt;This is &lt;p&gt; HTML content&lt;/body&gt;\"</span></pre><h3>Reply by streaming chunks</h3><p>Use <code>stream</code> parameter to stream chunks that you specify.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>import</span> <span class=nn>pytest</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=p>,</span> <span class=n>IteratorStream</span><span class=k>def</span> <span class=nf>test_sync_streaming</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>stream</span><span class=o>=</span><span class=n>IteratorStream</span><span class=p>([</span><span class=sa>b</span><span class=s2>\"part 1\"</span><span class=p>,</span> <span class=sa>b</span><span class=s2>\"part 2\"</span><span class=p>]))</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>with</span> <span class=n>client</span><span class=o>.</span><span class=n>stream</span><span class=p>(</span><span class=n>method</span><span class=o>=</span><span class=s2>\"GET\"</span><span class=p>,</span> <span class=n>url</span><span class=o>=</span><span class=s2>\"https://test_url\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>response</span><span class=p>:</span>            <span class=k>assert</span> <span class=nb>list</span><span class=p>(</span><span class=n>response</span><span class=o>.</span><span class=n>iter_raw</span><span class=p>())</span> <span class=o>==</span> <span class=p>[</span><span class=sa>b</span><span class=s2>\"part 1\"</span><span class=p>,</span> <span class=sa>b</span><span class=s2>\"part 2\"</span><span class=p>]</span><span class=nd>@pytest</span><span class=o>.</span><span class=n>mark</span><span class=o>.</span><span class=n>asyncio</span><span class=k>async</span> <span class=k>def</span> <span class=nf>test_async_streaming</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>stream</span><span class=o>=</span><span class=n>IteratorStream</span><span class=p>([</span><span class=sa>b</span><span class=s2>\"part 1\"</span><span class=p>,</span> <span class=sa>b</span><span class=s2>\"part 2\"</span><span class=p>]))</span>    <span class=k>async</span> <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>AsyncClient</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>async</span> <span class=k>with</span> <span class=n>client</span><span class=o>.</span><span class=n>stream</span><span class=p>(</span><span class=n>method</span><span class=o>=</span><span class=s2>\"GET\"</span><span class=p>,</span> <span class=n>url</span><span class=o>=</span><span class=s2>\"https://test_url\"</span><span class=p>)</span> <span class=k>as</span> <span class=n>response</span><span class=p>:</span>            <span class=k>assert</span> <span class=p>[</span><span class=n>part</span> <span class=k>async</span> <span class=k>for</span> <span class=n>part</span> <span class=ow>in</span> <span class=n>response</span><span class=o>.</span><span class=n>aiter_raw</span><span class=p>()]</span> <span class=o>==</span> <span class=p>[</span><span class=sa>b</span><span class=s2>\"part 1\"</span><span class=p>,</span> <span class=sa>b</span><span class=s2>\"part 2\"</span><span class=p>]</span>    </pre><h3>Add multipart response</h3><p>Use the httpx <code>MultipartStream</code> via the <code>stream</code> parameter to send a multipart response.</p><p>Reach out to <code>httpx</code> developers if you need this publicly exposed as <a href=\"https://github.com/encode/httpx/issues/872#issuecomment-633584819\" rel=nofollow>this is not a standard use case</a>.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>httpx._multipart</span> <span class=kn>import</span> <span class=n>MultipartStream</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_multipart_body</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>stream</span><span class=o>=</span><span class=n>MultipartStream</span><span class=p>(</span><span class=n>data</span><span class=o>=</span><span class=p>{</span><span class=s2>\"key1\"</span><span class=p>:</span> <span class=s2>\"value1\"</span><span class=p>},</span> <span class=n>files</span><span class=o>=</span><span class=p>{</span><span class=s2>\"file1\"</span><span class=p>:</span> <span class=sa>b</span><span class=s2>\"content of file 1\"</span><span class=p>},</span> <span class=n>boundary</span><span class=o>=</span><span class=sa>b</span><span class=s2>\"2256d3a36d2a61a1eba35a22bee5c74a\"</span><span class=p>))</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>assert</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=o>.</span><span class=n>text</span> <span class=o>==</span> <span class=s1>'''--2256d3a36d2a61a1eba35a22bee5c74a</span><span class=se>\\r</span><span class=s1>Content-Disposition: form-data; name=\"key1\"</span><span class=se>\\r</span><span class=se>\\r</span><span class=s1>value1</span><span class=se>\\r</span><span class=s1>--2256d3a36d2a61a1eba35a22bee5c74a</span><span class=se>\\r</span><span class=s1>Content-Disposition: form-data; name=\"file1\"; filename=\"upload\"</span><span class=se>\\r</span><span class=s1>Content-Type: application/octet-stream</span><span class=se>\\r</span><span class=se>\\r</span><span class=s1>content of file 1</span><span class=se>\\r</span><span class=s1>--2256d3a36d2a61a1eba35a22bee5c74a--</span><span class=se>\\r</span><span class=s1>'''</span>    </pre><h3>Add non 200 response</h3><p>Use <code>status_code</code> parameter to specify the HTTP status code of the response.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_status_code</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>status_code</span><span class=o>=</span><span class=mi>404</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>assert</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=o>.</span><span class=n>status_code</span> <span class=o>==</span> <span class=mi>404</span></pre><h3>Reply with custom headers</h3><p>Use <code>headers</code> parameter to specify the extra headers of the response.</p><p>Any valid httpx headers type is supported, you can submit headers as a dict (str or bytes), a list of 2-tuples (str or bytes) or a <code>httpx.Header</code> instance.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_headers_as_str_dict</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>headers</span><span class=o>=</span><span class=p>{</span><span class=s2>\"X-Header1\"</span><span class=p>:</span> <span class=s2>\"Test value\"</span><span class=p>})</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>assert</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=o>.</span><span class=n>headers</span><span class=p>[</span><span class=s2>\"x-header1\"</span><span class=p>]</span> <span class=o>==</span> <span class=s2>\"Test value\"</span><span class=k>def</span> <span class=nf>test_headers_as_str_tuple_list</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>headers</span><span class=o>=</span><span class=p>[(</span><span class=s2>\"X-Header1\"</span><span class=p>,</span> <span class=s2>\"Test value\"</span><span class=p>)])</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>assert</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=o>.</span><span class=n>headers</span><span class=p>[</span><span class=s2>\"x-header1\"</span><span class=p>]</span> <span class=o>==</span> <span class=s2>\"Test value\"</span><span class=k>def</span> <span class=nf>test_headers_as_httpx_headers</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>headers</span><span class=o>=</span><span class=n>httpx</span><span class=o>.</span><span class=n>Headers</span><span class=p>({</span><span class=sa>b</span><span class=s2>\"X-Header1\"</span><span class=p>:</span> <span class=sa>b</span><span class=s2>\"Test value\"</span><span class=p>}))</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>assert</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=o>.</span><span class=n>headers</span><span class=p>[</span><span class=s2>\"x-header1\"</span><span class=p>]</span> <span class=o>==</span> <span class=s2>\"Test value\"</span></pre><h4>Reply with cookies</h4><p>Cookies are sent in the <code>set-cookie</code> HTTP header.</p><p>You can then send cookies in the response by setting the <code>set-cookie</code> header with <a href=\"(https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)\" rel=nofollow>the value following key=value format</a>.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_cookie</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>headers</span><span class=o>=</span><span class=p>{</span><span class=s2>\"set-cookie\"</span><span class=p>:</span> <span class=s2>\"key=value\"</span><span class=p>})</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span>    <span class=k>assert</span> <span class=nb>dict</span><span class=p>(</span><span class=n>response</span><span class=o>.</span><span class=n>cookies</span><span class=p>)</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"key\"</span><span class=p>:</span> <span class=s2>\"value\"</span><span class=p>}</span><span class=k>def</span> <span class=nf>test_cookies</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>headers</span><span class=o>=</span><span class=p>[(</span><span class=s2>\"set-cookie\"</span><span class=p>,</span> <span class=s2>\"key=value\"</span><span class=p>),</span> <span class=p>(</span><span class=s2>\"set-cookie\"</span><span class=p>,</span> <span class=s2>\"key2=value2\"</span><span class=p>)])</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span>    <span class=k>assert</span> <span class=nb>dict</span><span class=p>(</span><span class=n>response</span><span class=o>.</span><span class=n>cookies</span><span class=p>)</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"key\"</span><span class=p>:</span> <span class=s2>\"value\"</span><span class=p>,</span> <span class=s2>\"key2\"</span><span class=p>:</span> <span class=s2>\"value2\"</span><span class=p>}</span></pre><h3>Add HTTP/2.0 response</h3><p>Use <code>http_version</code> parameter to specify the HTTP protocol version of the response.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_http_version</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span><span class=n>http_version</span><span class=o>=</span><span class=s2>\"HTTP/2.0\"</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>assert</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span><span class=o>.</span><span class=n>http_version</span> <span class=o>==</span> <span class=s2>\"HTTP/2.0\"</span></pre><h2>Add callbacks</h2><p>You can perform custom manipulation upon request reception by registering callbacks.</p><p>Callback should expect one parameter, the received <a href=\"https://www.python-httpx.org/api/#request\" rel=nofollow><code>httpx.Request</code></a>.</p><p>If all callbacks are not executed during test execution, the test case will fail at teardown.</p><p>This behavior can be disabled thanks to the <code>assert_all_responses_were_requested</code> fixture:</p><pre lang=python3><span class=kn>import</span> <span class=nn>pytest</span><span class=nd>@pytest</span><span class=o>.</span><span class=n>fixture</span><span class=k>def</span> <span class=nf>assert_all_responses_were_requested</span><span class=p>()</span> <span class=o>-&gt;</span> <span class=nb>bool</span><span class=p>:</span>    <span class=k>return</span> <span class=kc>False</span></pre><p>Note that callbacks are considered as responses, and thus are <a href=#how-response-is-selected rel=nofollow>selected the same way</a>.</p><h3>Dynamic responses</h3><p>Callback should return a <code>httpx.Response</code>.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_dynamic_response</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=k>def</span> <span class=nf>custom_response</span><span class=p>(</span><span class=n>request</span><span class=p>:</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Request</span><span class=p>):</span>        <span class=k>return</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Response</span><span class=p>(</span>            <span class=n>status_code</span><span class=o>=</span><span class=mi>200</span><span class=p>,</span> <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"url\"</span><span class=p>:</span> <span class=nb>str</span><span class=p>(</span><span class=n>request</span><span class=o>.</span><span class=n>url</span><span class=p>)},</span>        <span class=p>)</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_callback</span><span class=p>(</span><span class=n>custom_response</span><span class=p>)</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span>        <span class=k>assert</span> <span class=n>response</span><span class=o>.</span><span class=n>json</span><span class=p>()</span> <span class=o>==</span> <span class=p>{</span><span class=s2>\"url\"</span><span class=p>:</span> <span class=s2>\"https://test_url\"</span><span class=p>}</span></pre><p>Alternatively, callbacks can also be asynchronous.</p><p>As in the following sample simulating network latency on some responses only.</p><pre lang=python3><span class=kn>import</span> <span class=nn>asyncio</span><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>import</span> <span class=nn>pytest</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=nd>@pytest</span><span class=o>.</span><span class=n>mark</span><span class=o>.</span><span class=n>asyncio</span><span class=k>async</span> <span class=k>def</span> <span class=nf>test_dynamic_async_response</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=k>async</span> <span class=k>def</span> <span class=nf>simulate_network_latency</span><span class=p>(</span><span class=n>request</span><span class=p>:</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Request</span><span class=p>):</span>        <span class=k>await</span> <span class=n>asyncio</span><span class=o>.</span><span class=n>sleep</span><span class=p>(</span><span class=mi>1</span><span class=p>)</span>        <span class=k>return</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Response</span><span class=p>(</span>            <span class=n>status_code</span><span class=o>=</span><span class=mi>200</span><span class=p>,</span> <span class=n>json</span><span class=o>=</span><span class=p>{</span><span class=s2>\"url\"</span><span class=p>:</span> <span class=nb>str</span><span class=p>(</span><span class=n>request</span><span class=o>.</span><span class=n>url</span><span class=p>)},</span>        <span class=p>)</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_callback</span><span class=p>(</span><span class=n>simulate_network_latency</span><span class=p>)</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>()</span>    <span class=k>async</span> <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>AsyncClient</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>responses</span> <span class=o>=</span> <span class=k>await</span> <span class=n>asyncio</span><span class=o>.</span><span class=n>gather</span><span class=p>(</span>            <span class=c1># Response will be received after one second</span>            <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>),</span>            <span class=c1># Response will instantly be received (1 second before the first request)</span>            <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span>        <span class=p>)</span></pre><h3>Raising exceptions</h3><p>You can simulate HTTPX exception throwing by raising an exception in your callback or use <code>httpx_mock.add_exception</code> with the exception instance.</p><p>This can be useful if you want to assert that your code handles HTTPX exceptions properly.</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>import</span> <span class=nn>pytest</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_exception_raising</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_exception</span><span class=p>(</span><span class=n>httpx</span><span class=o>.</span><span class=n>ReadTimeout</span><span class=p>(</span><span class=s2>\"Unable to read within timeout\"</span><span class=p>))</span>        <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=n>httpx</span><span class=o>.</span><span class=n>ReadTimeout</span><span class=p>):</span>            <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span></pre><p>Note that default behavior is to send an <code>httpx.TimeoutException</code> in case no response can be found. You can then test this kind of exception this way:</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>import</span> <span class=nn>pytest</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_timeout</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=k>with</span> <span class=n>pytest</span><span class=o>.</span><span class=n>raises</span><span class=p>(</span><span class=n>httpx</span><span class=o>.</span><span class=n>TimeoutException</span><span class=p>):</span>            <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span></pre><h2>Check sent requests</h2><p>The best way to ensure the content of your requests is still to use the <code>match_headers</code> and / or <code>match_content</code> parameters when adding a response.In the same spirit, ensuring that no request was issued does not necessarily require any code.</p><p>In any case, you always have the ability to retrieve the requests that were issued.</p><p>As in the following samples:</p><pre lang=python3><span class=kn>import</span> <span class=nn>httpx</span><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_many_requests</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>()</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response1</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span>        <span class=n>response2</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span>    <span class=n>requests</span> <span class=o>=</span> <span class=n>httpx_mock</span><span class=o>.</span><span class=n>get_requests</span><span class=p>()</span><span class=k>def</span> <span class=nf>test_single_request</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>()</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=n>response</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span>    <span class=n>request</span> <span class=o>=</span> <span class=n>httpx_mock</span><span class=o>.</span><span class=n>get_request</span><span class=p>()</span><span class=k>def</span> <span class=nf>test_no_request</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=k>assert</span> <span class=ow>not</span> <span class=n>httpx_mock</span><span class=o>.</span><span class=n>get_request</span><span class=p>()</span></pre><h3>How requests are selected</h3><p>You can add criteria so that requests will be returned only in case of a more specific matching.</p><h4>Matching on URL</h4><p><code>url</code> parameter can either be a string, a python <a href=\"https://docs.python.org/3/library/re.html\" rel=nofollow>re.Pattern</a> instance or a <a href=\"https://www.python-httpx.org/api/#url\" rel=nofollow>httpx.URL</a> instance.</p><p>Matching is performed on the full URL, query parameters included.</p><p>Order of parameters in the query string does not matter, however order of values do matter if the same parameter is provided more than once.</p><h4>Matching on HTTP method</h4><p>Use <code>method</code> parameter to specify the HTTP method (POST, PUT, DELETE, PATCH, HEAD) of the requests to retrieve.</p><p><code>method</code> parameter must be a string. It will be upper-cased, so it can be provided lower cased.</p><p>Matching is performed on equality.</p><h4>Matching on proxy URL</h4><p><code>proxy_url</code> parameter can either be a string, a python <a href=\"https://docs.python.org/3/library/re.html\" rel=nofollow>re.Pattern</a> instance or a <a href=\"https://www.python-httpx.org/api/#url\" rel=nofollow>httpx.URL</a> instance.</p><p>Matching is performed on the full proxy URL, query parameters included.</p><p>Order of parameters in the query string does not matter, however order of values do matter if the same parameter is provided more than once.</p><h4>Matching on HTTP headers</h4><p>Use <code>match_headers</code> parameter to specify the HTTP headers executing the callback.</p><p>Matching is performed on equality for each provided header.</p><h4>Matching on HTTP body</h4><p>Use <code>match_content</code> parameter to specify the full HTTP body executing the callback.</p><p>Matching is performed on equality.</p><h5>Matching on HTTP JSON body</h5><p>Use <code>match_json</code> parameter to specify the JSON decoded HTTP body executing the callback.</p><p>Matching is performed on equality. You can however use <code>unittest.mock.ANY</code> to do partial matching.</p><p>Note that <code>match_content</code> cannot be provided if <code>match_json</code> is also provided.</p><h2>Do not mock some requests</h2><p>By default, <code>pytest-httpx</code> will mock every request.</p><p>But, for instance, in case you want to write integration tests with other servers, you might want to let some requests go through.</p><p>To do so, you can use the <code>non_mocked_hosts</code> fixture:</p><pre lang=python3><span class=kn>import</span> <span class=nn>pytest</span><span class=nd>@pytest</span><span class=o>.</span><span class=n>fixture</span><span class=k>def</span> <span class=nf>non_mocked_hosts</span><span class=p>()</span> <span class=o>-&gt;</span> <span class=nb>list</span><span class=p>:</span>    <span class=k>return</span> <span class=p>[</span><span class=s2>\"my_local_test_host\"</span><span class=p>,</span> <span class=s2>\"my_other_test_host\"</span><span class=p>]</span></pre><p>Every other requested hosts will be mocked as in the following example</p><pre lang=python3><span class=kn>import</span> <span class=nn>pytest</span><span class=kn>import</span> <span class=nn>httpx</span><span class=nd>@pytest</span><span class=o>.</span><span class=n>fixture</span><span class=k>def</span> <span class=nf>non_mocked_hosts</span><span class=p>()</span> <span class=o>-&gt;</span> <span class=nb>list</span><span class=p>:</span>    <span class=k>return</span> <span class=p>[</span><span class=s2>\"my_local_test_host\"</span><span class=p>]</span><span class=k>def</span> <span class=nf>test_partial_mock</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>()</span>    <span class=k>with</span> <span class=n>httpx</span><span class=o>.</span><span class=n>Client</span><span class=p>()</span> <span class=k>as</span> <span class=n>client</span><span class=p>:</span>        <span class=c1># This request will NOT be mocked</span>        <span class=n>response1</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://www.my_local_test_host/sub?param=value\"</span><span class=p>)</span>        <span class=c1># This request will be mocked</span>        <span class=n>response2</span> <span class=o>=</span> <span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"https://test_url\"</span><span class=p>)</span></pre><h2>Migrating to pytest-httpx</h2><p>Here is how to migrate from well-known testing libraries to <code>pytest-httpx</code>.</p><h3>From responses</h3><table><thead><tr><th align=left>Feature</th><th align=left>responses</th><th align=left>pytest-httpx</th></tr></thead><tbody><tr><td align=left>Add a response</td><td align=left><code>responses.add()</code></td><td align=left><code>httpx_mock.add_response()</code></td></tr><tr><td align=left>Add a callback</td><td align=left><code>responses.add_callback()</code></td><td align=left><code>httpx_mock.add_callback()</code></td></tr><tr><td align=left>Retrieve requests</td><td align=left><code>responses.calls</code></td><td align=left><code>httpx_mock.get_requests()</code></td></tr></tbody></table><h4>Add a response or a callback</h4><p>Undocumented parameters means that they are unchanged between <code>responses</code> and <code>pytest-httpx</code>.Below is a list of parameters that will require a change in your code.</p><table><thead><tr><th align=left>Parameter</th><th align=left>responses</th><th align=left>pytest-httpx</th></tr></thead><tbody><tr><td align=left>method</td><td align=left><code>method=responses.GET</code></td><td align=left><code>method=\"GET\"</code></td></tr><tr><td align=left>body (as bytes)</td><td align=left><code>body=b\"sample\"</code></td><td align=left><code>content=b\"sample\"</code></td></tr><tr><td align=left>body (as str)</td><td align=left><code>body=\"sample\"</code></td><td align=left><code>text=\"sample\"</code></td></tr><tr><td align=left>status code</td><td align=left><code>status=201</code></td><td align=left><code>status_code=201</code></td></tr><tr><td align=left>headers</td><td align=left><code>adding_headers={\"name\": \"value\"}</code></td><td align=left><code>headers={\"name\": \"value\"}</code></td></tr><tr><td align=left>content-type header</td><td align=left><code>content_type=\"application/custom\"</code></td><td align=left><code>headers={\"content-type\": \"application/custom\"}</code></td></tr><tr><td align=left>Match the full query</td><td align=left><code>match_querystring=True</code></td><td align=left>The full query is always matched when providing the <code>url</code> parameter.</td></tr></tbody></table><p>Sample adding a response with <code>responses</code>:</p><pre lang=python3><span class=kn>from</span> <span class=nn>responses</span> <span class=kn>import</span> <span class=n>RequestsMock</span><span class=k>def</span> <span class=nf>test_response</span><span class=p>(</span><span class=n>responses</span><span class=p>:</span> <span class=n>RequestsMock</span><span class=p>):</span>    <span class=n>responses</span><span class=o>.</span><span class=n>add</span><span class=p>(</span>        <span class=n>method</span><span class=o>=</span><span class=n>responses</span><span class=o>.</span><span class=n>GET</span><span class=p>,</span>        <span class=n>url</span><span class=o>=</span><span class=s2>\"https://test_url\"</span><span class=p>,</span>        <span class=n>body</span><span class=o>=</span><span class=sa>b</span><span class=s2>\"This is the response content\"</span><span class=p>,</span>        <span class=n>status</span><span class=o>=</span><span class=mi>400</span><span class=p>,</span>    <span class=p>)</span></pre><p>Sample adding the same response with <code>pytest-httpx</code>:</p><pre lang=python3><span class=kn>from</span> <span class=nn>pytest_httpx</span> <span class=kn>import</span> <span class=n>HTTPXMock</span><span class=k>def</span> <span class=nf>test_response</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>:</span> <span class=n>HTTPXMock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span>        <span class=n>method</span><span class=o>=</span><span class=s2>\"GET\"</span><span class=p>,</span>        <span class=n>url</span><span class=o>=</span><span class=s2>\"https://test_url\"</span><span class=p>,</span>        <span class=n>content</span><span class=o>=</span><span class=sa>b</span><span class=s2>\"This is the response content\"</span><span class=p>,</span>        <span class=n>status_code</span><span class=o>=</span><span class=mi>400</span><span class=p>,</span>    <span class=p>)</span></pre><h3>From aioresponses</h3><table><thead><tr><th align=left>Feature</th><th align=left>aioresponses</th><th align=left>pytest-httpx</th></tr></thead><tbody><tr><td align=left>Add a response</td><td align=left><code>aioresponses.method()</code></td><td align=left><code>httpx_mock.add_response(method=\"METHOD\")</code></td></tr><tr><td align=left>Add a callback</td><td align=left><code>aioresponses.method()</code></td><td align=left><code>httpx_mock.add_callback(method=\"METHOD\")</code></td></tr></tbody></table><h4>Add a response or a callback</h4><p>Undocumented parameters means that they are unchanged between <code>responses</code> and <code>pytest-httpx</code>.Below is a list of parameters that will require a change in your code.</p><table><thead><tr><th align=left>Parameter</th><th align=left>responses</th><th align=left>pytest-httpx</th></tr></thead><tbody><tr><td align=left>body (as bytes)</td><td align=left><code>body=b\"sample\"</code></td><td align=left><code>content=b\"sample\"</code></td></tr><tr><td align=left>body (as str)</td><td align=left><code>body=\"sample\"</code></td><td align=left><code>text=\"sample\"</code></td></tr><tr><td align=left>body (as JSON)</td><td align=left><code>payload=[\"sample\"]</code></td><td align=left><code>json=[\"sample\"]</code></td></tr><tr><td align=left>status code</td><td align=left><code>status=201</code></td><td align=left><code>status_code=201</code></td></tr></tbody></table><p>Sample adding a response with <code>aioresponses</code>:</p><pre lang=python3><span class=kn>import</span> <span class=nn>pytest</span><span class=kn>from</span> <span class=nn>aioresponses</span> <span class=kn>import</span> <span class=n>aioresponses</span><span class=nd>@pytest</span><span class=o>.</span><span class=n>fixture</span><span class=k>def</span> <span class=nf>mock_aioresponse</span><span class=p>():</span>    <span class=k>with</span> <span class=n>aioresponses</span><span class=p>()</span> <span class=k>as</span> <span class=n>m</span><span class=p>:</span>        <span class=k>yield</span> <span class=n>m</span><span class=k>def</span> <span class=nf>test_response</span><span class=p>(</span><span class=n>mock_aioresponse</span><span class=p>):</span>    <span class=n>mock_aioresponse</span><span class=o>.</span><span class=n>get</span><span class=p>(</span>        <span class=n>url</span><span class=o>=</span><span class=s2>\"https://test_url\"</span><span class=p>,</span>        <span class=n>body</span><span class=o>=</span><span class=sa>b</span><span class=s2>\"This is the response content\"</span><span class=p>,</span>        <span class=n>status</span><span class=o>=</span><span class=mi>400</span><span class=p>,</span>    <span class=p>)</span></pre><p>Sample adding the same response with <code>pytest-httpx</code>:</p><pre lang=python3><span class=k>def</span> <span class=nf>test_response</span><span class=p>(</span><span class=n>httpx_mock</span><span class=p>):</span>    <span class=n>httpx_mock</span><span class=o>.</span><span class=n>add_response</span><span class=p>(</span>        <span class=n>method</span><span class=o>=</span><span class=s2>\"GET\"</span><span class=p>,</span>        <span class=n>url</span><span class=o>=</span><span class=s2>\"https://test_url\"</span><span class=p>,</span>        <span class=n>content</span><span class=o>=</span><span class=sa>b</span><span class=s2>\"This is the response content\"</span><span class=p>,</span>        <span class=n>status_code</span><span class=o>=</span><span class=mi>400</span><span class=p>,</span>    <span class=p>)</span></pre>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/Colin-b/pytest_httpx/blob/master/CHANGELOG.md\" rel=\"nofollow\">        <i class=\"fas fa-scroll\" aria-hidden=\"true\"></i>changelog      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://colin-b.github.io/pytest_httpx/\" rel=\"nofollow\">        <i class=\"fas fa-book\" aria-hidden=\"true\"></i>documentation      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/Colin-b/pytest_httpx/issues\" rel=\"nofollow\">        <i class=\"fas fa-bug\" aria-hidden=\"true\"></i>issues      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/Colin-b/pytest_httpx\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>repository      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/pytest-httpx\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (MIT License  Copyright (c) 2024 Colin Bounouar  Permission is hereby granted, free of charge, to any...)</p>    <p><strong>Author:</strong> <a href=\"mailto:colin.bounouar.dev@gmail.com\">Colin Bounouar</a></p>    <p><strong>Maintainer:</strong> <a href=\"mailto:colin.bounouar.dev@gmail.com\">Colin Bounouar</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      httpx,    </span>    <span class=\"package-keyword\">      mock,    </span>    <span class=\"package-keyword\">      pytest,    </span>    <span class=\"package-keyword\">      testing    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=3.9  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/colin-b/\" aria-label=\"colin-b\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/9e381914659a96e59330f45a45351fbf7c2c6a88/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f38343131373961623339373635333439373366383037646534656235623464313f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for colin-b from gravatar.com\" title=\"Avatar for colin-b from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            colin-b          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Framework</strong>      <ul>        <li>          <a href=\"/search/?c=Framework+%3A%3A+Pytest\">            Pytest          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Natural Language</strong>      <ul>        <li>          <a href=\"/search/?c=Natural+Language+%3A%3A+English\">            English          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Internet+%3A%3A+WWW%2FHTTP\">            Internet :: WWW/HTTP          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Build+Tools\">            Software Development :: Build Tools          </a>        </li>      </ul>    </li>    <li>      <strong>Typing</strong>      <ul>        <li>          <a href=\"/search/?c=Typing+%3A%3A+Typed\">            Typed          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/pytest-httpx/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.30.0/\">                <p class=\"release__version\">                  0.30.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-02-21T17:59:54+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 21, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.29.0/\">                <p class=\"release__version\">                  0.29.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-01-29T20:10:31+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 29, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.28.0/\">                <p class=\"release__version\">                  0.28.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-12-21T09:18:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 21, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.27.0/\">                <p class=\"release__version\">                  0.27.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-11-13T19:27:30+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 13, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.26.0/\">                <p class=\"release__version\">                  0.26.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-09-18T17:24:30+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 18, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.25.0/\">                <p class=\"release__version\">                  0.25.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-09-11T18:04:34+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 11, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.24.0/\">                <p class=\"release__version\">                  0.24.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-09-04T18:44:32+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 4, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.23.1/\">                <p class=\"release__version\">                  0.23.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-08-02T08:24:32+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 2, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.23.0/\">                <p class=\"release__version\">                  0.23.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-08-01T22:15:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 1, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.22.0/\">                <p class=\"release__version\">                  0.22.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-12T17:05:12+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 12, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.21.3/\">                <p class=\"release__version\">                  0.21.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-01-20T08:58:20+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 20, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.21.2/\">                <p class=\"release__version\">                  0.21.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-11-03T21:03:38+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 3, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.21.1/\">                <p class=\"release__version\">                  0.21.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-20T21:33:39+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 20, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.21.0/\">                <p class=\"release__version\">                  0.21.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-05-24T16:29:57+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 24, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.20.0/\">                <p class=\"release__version\">                  0.20.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-02-05T16:44:23+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 5, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.19.0/\">                <p class=\"release__version\">                  0.19.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-01-26T17:20:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 26, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.18.0/\">                <p class=\"release__version\">                  0.18.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-01-17T13:14:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 17, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.17.3/\">                <p class=\"release__version\">                  0.17.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-12-27T21:22:07+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 27, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.17.2/\">                <p class=\"release__version\">                  0.17.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-12-23T12:31:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 23, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.17.1/\">                <p class=\"release__version\">                  0.17.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-12-20T16:01:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 20, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.17.0/\">                <p class=\"release__version\">                  0.17.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-12-20T15:26:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 20, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.16.0/\">                <p class=\"release__version\">                  0.16.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-12-20T13:50:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 20, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.15.0/\">                <p class=\"release__version\">                  0.15.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-16T01:50:51+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 16, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.14.0/\">                <p class=\"release__version\">                  0.14.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-22T17:29:32+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 22, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.13.0/\">                <p class=\"release__version\">                  0.13.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-19T13:35:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 19, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.12.1/\">                <p class=\"release__version\">                  0.12.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-11T12:37:22+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 11, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.12.0/\">                <p class=\"release__version\">                  0.12.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-04-27T19:43:32+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 27, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.11.0/\">                <p class=\"release__version\">                  0.11.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-03-01T01:42:25+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 1, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.10.1/\">                <p class=\"release__version\">                  0.10.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-11-25T14:45:35+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 25, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.10.0/\">                <p class=\"release__version\">                  0.10.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-10-06T20:14:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 6, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.9.0/\">                <p class=\"release__version\">                  0.9.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-09-22T14:01:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 22, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.8.0/\">                <p class=\"release__version\">                  0.8.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-08-26T12:10:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 26, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.7.0/\">                <p class=\"release__version\">                  0.7.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-08-13T12:21:06+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 13, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.6.0/\">                <p class=\"release__version\">                  0.6.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-08-07T15:56:56+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 7, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.5.0/\">                <p class=\"release__version\">                  0.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-07-31T17:03:54+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 31, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.4.0/\">                <p class=\"release__version\">                  0.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-06-04T23:05:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 4, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.3.0/\">                <p class=\"release__version\">                  0.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-05-24T14:17:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 24, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.2.1/\">                <p class=\"release__version\">                  0.2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-03-20T17:35:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 20, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.2.0/\">                <p class=\"release__version\">                  0.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-03-09T15:31:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 9, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.1.0/\">                <p class=\"release__version\">                  0.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-02-13T19:01:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 13, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.0.5/\">                <p class=\"release__version\">                  0.0.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-02-10T14:52:31+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 10, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.0.4/\">                <p class=\"release__version\">                  0.0.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-02-07T16:44:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 7, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.0.3/\">                <p class=\"release__version\">                  0.0.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-02-06T21:46:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 6, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.0.2/\">                <p class=\"release__version\">                  0.0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-02-06T00:04:56+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 6, 2020</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pytest-httpx/0.0.1/\">                <p class=\"release__version\">                  0.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-02-05T15:51:39+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 5, 2020</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/84/82/28ae814b16ac7c756d4a53797fbec98965b7d84dad3e50c3b4d56d3c0c77/pytest-httpx-0.30.0.tar.gz\">          pytest-httpx-0.30.0.tar.gz        </a>        (37.0 kB        <a href=\"#copy-hash-modal-1c756a90-bb38-4a0e-8ddd-67e1456fc722\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-02-21T17:59:56+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 21, 2024</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/14/60/ba9895a260e16c1115e40f8ae6f615c7e8ccdfa5d55418078391dd30b476/pytest_httpx-0.30.0-py3-none-any.whl\">          pytest_httpx-0.30.0-py3-none-any.whl        </a>        (15.4 kB        <a href=\"#copy-hash-modal-f2c1f17d-8a18-42ca-9403-e67f9154a33a\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-02-21T17:59:54+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 21, 2024</time>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-1c756a90-bb38-4a0e-8ddd-67e1456fc722\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for pytest-httpx-0.30.0.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for pytest-httpx-0.30.0.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">755b8edca87c974dd4f3605c374fda11db84631de3d163b99c0df5807023a19a</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">5b1babaabb8d8396a12894cf616d4ac5</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">848228ae814b16ac7c756d4a53797fbec98965b7d84dad3e50c3b4d56d3c0c77</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-f2c1f17d-8a18-42ca-9403-e67f9154a33a\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for pytest_httpx-0.30.0-py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for pytest_httpx-0.30.0-py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">6d47849691faf11d2532565d0c8e0e02b9f4ee730da31687feae315581d7520c</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">5c88b85a7df47784ef8cb8f157818644</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">1460ba9895a260e16c1115e40f8ae6f615c7e8ccdfa5d55418078391dd30b476</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
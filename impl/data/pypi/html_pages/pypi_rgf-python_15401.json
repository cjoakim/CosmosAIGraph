{
  "libtype": "pypi",
  "libname": "rgf-python",
  "url": "https://github.com/rgf-team/rgf/tree/master/python-package",
  "html": "{\"payload\":{\"allShortcutsEnabled\":false,\"path\":\"python-package\",\"repo\":{\"id\":60709988,\"defaultBranch\":\"master\",\"name\":\"rgf\",\"ownerLogin\":\"RGF-team\",\"currentUserCanPush\":false,\"isFork\":false,\"isEmpty\":false,\"createdAt\":\"2016-06-08T15:48:42.000Z\",\"ownerAvatar\":\"https://avatars.githubusercontent.com/u/36954652?v=4\",\"public\":true,\"private\":false,\"isOrgOwned\":true},\"currentUser\":null,\"refInfo\":{\"name\":\"master\",\"listCacheKey\":\"v0:1641649590.3239522\",\"canEdit\":false,\"refType\":\"branch\",\"currentOid\":\"272afb85b4c91571f576e5fc83ecfacce3672eb4\"},\"tree\":{\"items\":[{\"name\":\"docker\",\"path\":\"python-package/docker\",\"contentType\":\"directory\"},{\"name\":\"examples\",\"path\":\"python-package/examples\",\"contentType\":\"directory\"},{\"name\":\"rgf\",\"path\":\"python-package/rgf\",\"contentType\":\"directory\"},{\"name\":\"tests\",\"path\":\"python-package/tests\",\"contentType\":\"directory\"},{\"name\":\"LICENSE\",\"path\":\"python-package/LICENSE\",\"contentType\":\"file\"},{\"name\":\"MANIFEST.in\",\"path\":\"python-package/MANIFEST.in\",\"contentType\":\"file\"},{\"name\":\"Readme.rst\",\"path\":\"python-package/Readme.rst\",\"contentType\":\"file\"},{\"name\":\"setup.py\",\"path\":\"python-package/setup.py\",\"contentType\":\"file\"}],\"templateDirectorySuggestionUrl\":null,\"readme\":{\"displayName\":\"Readme.rst\",\"richText\":\"<article class=\\\"markdown-body entry-content container-lg\\\" itemprop=\\\"text\\\"><p dir=\\\"auto\\\"><a href=\\\"https://github.com/RGF-team/rgf/blob/master/python-package/LICENSE\\\"><img alt=\\\"License\\\" src=\\\"https://camo.githubusercontent.com/2bb6ac78e5a9f4f688a6a066cc71b62012101802fcdb478e6e4c6b6ec75dc694/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\\\" data-canonical-src=\\\"https://img.shields.io/badge/license-MIT-blue.svg\\\" style=\\\"max-width: 100%;\\\">\\n</a> <a href=\\\"https://pypi.org/project/rgf_python/\\\" rel=\\\"nofollow\\\"><img alt=\\\"Python Versions\\\" src=\\\"https://camo.githubusercontent.com/38e2873fae92cb149a8f04857e767e6ceb2d8531b0a00d38073fc737e076a812/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7267665f707974686f6e2e737667\\\" data-canonical-src=\\\"https://img.shields.io/pypi/pyversions/rgf_python.svg\\\" style=\\\"max-width: 100%;\\\">\\n</a> <a href=\\\"https://pypi.org/project/rgf_python\\\" rel=\\\"nofollow\\\"><img alt=\\\"PyPI Version\\\" src=\\\"https://camo.githubusercontent.com/323e33f32fa1c5c112b09730de723d6eebfeec04bab4543523f35510217b151e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7267665f707974686f6e2e737667\\\" data-canonical-src=\\\"https://img.shields.io/pypi/v/rgf_python.svg\\\" style=\\\"max-width: 100%;\\\">\\n</a> <a href=\\\"https://pepy.tech/project/rgf-python\\\" rel=\\\"nofollow\\\"><img alt=\\\"Downloads\\\" src=\\\"https://camo.githubusercontent.com/889be3021103f728ac5cec0128063261684e471346554e1704a8356b501fc15a/68747470733a2f2f706570792e746563682f62616467652f7267662d707974686f6e\\\" data-canonical-src=\\\"https://pepy.tech/badge/rgf-python\\\" style=\\\"max-width: 100%;\\\"></a></p>\\n<a name=\\\"user-content-rgf-python\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">rgf_python</h2><a id=\\\"user-content-rgf_python\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: rgf_python\\\" href=\\\"#rgf_python\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">The wrapper of machine learning algorithm <strong>Regularized Greedy Forest (RGF)</strong> <a href=\\\"#references\\\">[1]</a> for Python.</p>\\n<a name=\\\"user-content-features\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Features</h3><a id=\\\"user-content-features\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Features\\\" href=\\\"#features\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\"><strong>Scikit-learn interface and possibility of usage for multiclass classification problem.</strong></p>\\n<p dir=\\\"auto\\\"><strong>rgf_python</strong> contains both <a href=\\\"https://github.com/RGF-team/rgf/tree/master/RGF\\\">original RGF</a> from the paper <a href=\\\"#references\\\">[1]</a>  and <a href=\\\"https://github.com/RGF-team/rgf/tree/master/FastRGF\\\">FastRGF</a> implementations.</p>\\n<p dir=\\\"auto\\\">Note that FastRGF is developed to be used with large (and sparse) datasets, so on small datasets it often shows poorer performance compared to vanilla RGF.</p>\\n<p dir=\\\"auto\\\">Original RGF implementations are available only for regression and binary classification, but <strong>rgf_python</strong> is also available for <strong>multiclass classification</strong> by \\\"One-vs-Rest\\\" method.</p>\\n<a name=\\\"user-content-examples\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Examples</h3><a id=\\\"user-content-examples\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Examples\\\" href=\\\"#examples\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<div class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from sklearn import datasets\\nfrom sklearn.utils.validation import check_random_state\\nfrom sklearn.model_selection import StratifiedKFold, cross_val_score\\nfrom rgf.sklearn import RGFClassifier\\n\\niris = datasets.load_iris()\\nrng = check_random_state(0)\\nperm = rng.permutation(iris.target.size)\\niris.data = iris.data[perm]\\niris.target = iris.target[perm]\\n\\nrgf = RGFClassifier(max_leaf=400,\\n                    algorithm=&quot;RGF_Sib&quot;,\\n                    test_interval=100,\\n                    verbose=True)\\n\\nn_folds = 3\\n\\nrgf_scores = cross_val_score(rgf,\\n                             iris.data,\\n                             iris.target,\\n                             cv=StratifiedKFold(n_folds))\\n\\nrgf_score = sum(rgf_scores)/n_folds\\nprint('RGF Classifier score: {0:.5f}'.format(rgf_score))\\\"><pre><span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s1\\\">sklearn</span> <span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-s1\\\">datasets</span>\\n<span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s1\\\">sklearn</span>.<span class=\\\"pl-s1\\\">utils</span>.<span class=\\\"pl-s1\\\">validation</span> <span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-s1\\\">check_random_state</span>\\n<span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s1\\\">sklearn</span>.<span class=\\\"pl-s1\\\">model_selection</span> <span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-v\\\">StratifiedKFold</span>, <span class=\\\"pl-s1\\\">cross_val_score</span>\\n<span class=\\\"pl-k\\\">from</span> <span class=\\\"pl-s1\\\">rgf</span>.<span class=\\\"pl-s1\\\">sklearn</span> <span class=\\\"pl-k\\\">import</span> <span class=\\\"pl-v\\\">RGFClassifier</span>\\n\\n<span class=\\\"pl-s1\\\">iris</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">datasets</span>.<span class=\\\"pl-en\\\">load_iris</span>()\\n<span class=\\\"pl-s1\\\">rng</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">check_random_state</span>(<span class=\\\"pl-c1\\\">0</span>)\\n<span class=\\\"pl-s1\\\">perm</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">rng</span>.<span class=\\\"pl-en\\\">permutation</span>(<span class=\\\"pl-s1\\\">iris</span>.<span class=\\\"pl-s1\\\">target</span>.<span class=\\\"pl-s1\\\">size</span>)\\n<span class=\\\"pl-s1\\\">iris</span>.<span class=\\\"pl-s1\\\">data</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">iris</span>.<span class=\\\"pl-s1\\\">data</span>[<span class=\\\"pl-s1\\\">perm</span>]\\n<span class=\\\"pl-s1\\\">iris</span>.<span class=\\\"pl-s1\\\">target</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-s1\\\">iris</span>.<span class=\\\"pl-s1\\\">target</span>[<span class=\\\"pl-s1\\\">perm</span>]\\n\\n<span class=\\\"pl-s1\\\">rgf</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-v\\\">RGFClassifier</span>(<span class=\\\"pl-s1\\\">max_leaf</span><span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-c1\\\">400</span>,\\n                    <span class=\\\"pl-s1\\\">algorithm</span><span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-s\\\">\\\"RGF_Sib\\\"</span>,\\n                    <span class=\\\"pl-s1\\\">test_interval</span><span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-c1\\\">100</span>,\\n                    <span class=\\\"pl-s1\\\">verbose</span><span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-c1\\\">True</span>)\\n\\n<span class=\\\"pl-s1\\\">n_folds</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-c1\\\">3</span>\\n\\n<span class=\\\"pl-s1\\\">rgf_scores</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">cross_val_score</span>(<span class=\\\"pl-s1\\\">rgf</span>,\\n                             <span class=\\\"pl-s1\\\">iris</span>.<span class=\\\"pl-s1\\\">data</span>,\\n                             <span class=\\\"pl-s1\\\">iris</span>.<span class=\\\"pl-s1\\\">target</span>,\\n                             <span class=\\\"pl-s1\\\">cv</span><span class=\\\"pl-c1\\\">=</span><span class=\\\"pl-v\\\">StratifiedKFold</span>(<span class=\\\"pl-s1\\\">n_folds</span>))\\n\\n<span class=\\\"pl-s1\\\">rgf_score</span> <span class=\\\"pl-c1\\\">=</span> <span class=\\\"pl-en\\\">sum</span>(<span class=\\\"pl-s1\\\">rgf_scores</span>)<span class=\\\"pl-c1\\\">/</span><span class=\\\"pl-s1\\\">n_folds</span>\\n<span class=\\\"pl-en\\\">print</span>(<span class=\\\"pl-s\\\">'RGF Classifier score: {0:.5f}'</span>.<span class=\\\"pl-en\\\">format</span>(<span class=\\\"pl-s1\\\">rgf_score</span>))</pre></div>\\n<p dir=\\\"auto\\\">More examples of using RGF estimators could be found <a href=\\\"https://github.com/RGF-team/rgf/tree/master/python-package/examples/RGF\\\">here</a>.</p>\\n<p dir=\\\"auto\\\">Examples of using FastRGF estimators could be found <a href=\\\"https://github.com/RGF-team/rgf/tree/master/python-package/examples/FastRGF\\\">here</a>.</p>\\n<a name=\\\"user-content-software-requirements\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Software Requirements</h3><a id=\\\"user-content-software-requirements\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Software Requirements\\\" href=\\\"#software-requirements\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<ul dir=\\\"auto\\\">\\n<li>Python (&gt;= 3.7)</li>\\n<li>joblib</li>\\n<li>scikit-learn (&gt;= 0.18)</li>\\n</ul>\\n<a name=\\\"user-content-installation\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Installation</h3><a id=\\\"user-content-installation\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Installation\\\" href=\\\"#installation\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">From <a href=\\\"https://pypi.org/project/rgf_python\\\" rel=\\\"nofollow\\\">PyPI</a> using <code>pip</code>:</p>\\n<pre>pip install rgf_python\\n</pre>\\n<p dir=\\\"auto\\\">or from <a href=\\\"https://github.com/RGF-team/rgf/python-package\\\">GitHub</a>:</p>\\n<pre>git clone https://github.com/RGF-team/rgf.git\\ncd rgf/python-package\\npython setup.py install\\n</pre>\\n<p dir=\\\"auto\\\">MacOS users, <strong>rgf_python</strong> after the <code>3.10.0</code> version is built with <strong>g++-11</strong> and cannot be launched on systems with <strong>g++-10</strong> and earlier. You should update your <strong>g++</strong> compiler if you don't want to build from sources or install <strong>rgf_python</strong> <code>3.10.0</code> from PyPI which is the last version built with <strong>g++-10</strong>.</p>\\n<p dir=\\\"auto\\\">MacOS users, <strong>rgf_python</strong> after the <code>3.8.0</code> version is built with <strong>g++-10</strong> and cannot be launched on systems with <strong>g++-9</strong> and earlier. You should update your <strong>g++</strong> compiler if you don't want to build from sources or install <strong>rgf_python</strong> <code>3.8.0</code> from PyPI which is the last version built with <strong>g++-9</strong>.</p>\\n<p dir=\\\"auto\\\">MacOS users, <strong>rgf_python</strong> after the <code>3.5.0</code> version is built with <strong>g++-9</strong> and cannot be launched on systems with <strong>g++-8</strong> and earlier. You should update your <strong>g++</strong> compiler if you don't want to build from sources or install <strong>rgf_python</strong> <code>3.5.0</code> from PyPI which is the last version built with <strong>g++-8</strong>.</p>\\n<p dir=\\\"auto\\\">MacOS users, <strong>rgf_python</strong> after the <code>3.1.0</code> version is built with <strong>g++-8</strong> and cannot be launched on systems with <strong>g++-7</strong> and earlier. You should update your <strong>g++</strong> compiler if you don't want to build from sources or install <strong>rgf_python</strong> <code>3.1.0</code> from PyPI which is the last version built with <strong>g++-7</strong>.</p>\\n<p dir=\\\"auto\\\">If you have any problems while installing by methods listed above, you should <em>build RGF and FastRGF executable files from binaries on your own and place compiled executable files</em> into directory which is included in environmental variable <strong>'PATH'</strong> or into directory with installed package. Alternatively, you may specify actual locations of executable files and directory for placing temp files by corresponding flags in configuration file <code>.rgfrc</code>, which you should create into your home directory. The default values are the following: <code>rgf_location=$HOME/rgf</code> (<code>$HOME/rgf.exe</code> for Windows), <code>fastrgf_location=$HOME</code>, <code>temp_location=tempfile.gettempdir()</code> (here is more details about <a href=\\\"https://docs.python.org/3/library/tempfile.html#tempfile.gettempdir\\\" rel=\\\"nofollow\\\">tempfile.gettempdir()</a>). Please take a look at the example of the <code>.rgfrc</code> file:</p>\\n<pre>rgf_location=C:/Program Files/RGF/bin/rgf.exe\\nfastrgf_location=C:/Program Files/FastRGF/bin\\ntemp_location=C:/Program Files/RGF/temp\\n</pre>\\n<p dir=\\\"auto\\\">Note that while <code>rgf_location</code> should point to a concrete RGF executable <strong>file</strong>, <code>fastrgf_location</code> should point to a <strong>folder</strong> in which <code>forest_train.exe</code> and <code>forest_predict.exe</code> FastRGF executable files are located.</p>\\n<p dir=\\\"auto\\\">Also, you may directly specify installation without automatic compilation:</p>\\n<pre>pip install rgf_python --install-option=--nocompilation\\n</pre>\\n<p dir=\\\"auto\\\">or</p>\\n<pre>git clone https://github.com/RGF-team/rgf.git\\ncd rgf/python-package\\npython setup.py install --nocompilation\\n</pre>\\n<p dir=\\\"auto\\\"><code>sudo</code> (or administrator privileges in Windows) may be needed to perform installation commands.</p>\\n<p dir=\\\"auto\\\">Detailed guides how you can build executable files of RGF and FastRGF from source files could be found in their folders <a href=\\\"https://github.com/RGF-team/rgf/tree/master/RGF#3-creating-the-executable\\\">here</a> and <a href=\\\"https://github.com/RGF-team/rgf/tree/master/FastRGF#2-installation\\\">here</a> respectively.</p>\\n<a name=\\\"user-content-docker-image\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Docker image</h4><a id=\\\"user-content-docker-image\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Docker image\\\" href=\\\"#docker-image\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">We provide <a href=\\\"https://github.com/RGF-team/rgf/blob/master/python-package/docker/Dockerfile\\\">docker image</a> with installed <strong>rgf_python</strong>.</p>\\n<pre># Run docker image\\ndocker run -it rgfteam/rgf /bin/bash\\n# Run RGF example\\npython ./rgf/python-package/examples/RGF/comparison_RGF_and_RF_regressors_on_boston_dataset.py\\n# Run FastRGF example\\npython ./rgf/python-package/examples/FastRGF/FastRGF_classifier_on_iris_dataset.py\\n</pre>\\n<a name=\\\"user-content-tuning-hyperparameters\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Tuning Hyperparameters</h3><a id=\\\"user-content-tuning-hyperparameters\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Tuning Hyperparameters\\\" href=\\\"#tuning-hyperparameters\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<a name=\\\"user-content-rgf\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">RGF</h4><a id=\\\"user-content-rgf\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: RGF\\\" href=\\\"#rgf\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">You can tune hyperparameters as follows.</p>\\n<ul dir=\\\"auto\\\">\\n<li><em>max_leaf</em>: Appropriate values are data-dependent and usually varied from 1000 to 10000.</li>\\n<li><em>test_interval</em>: For efficiency, it must be either multiple or divisor of 100 (default value of the optimization interval).</li>\\n<li><em>algorithm</em>: You can select \\\"RGF\\\", \\\"RGF Opt\\\" or \\\"RGF Sib\\\".</li>\\n<li><em>loss</em>: You can select \\\"LS\\\", \\\"Log\\\", \\\"Expo\\\" or \\\"Abs\\\".</li>\\n<li><em>reg_depth</em>: Must be no smaller than 1. Meant for being used with <em>algorithm</em> = \\\"RGF Opt\\\" or \\\"RGF Sib\\\".</li>\\n<li><em>l2</em>: Either 1, 0.1, or 0.01 often produces good results though with exponential loss (<em>loss</em> = \\\"Expo\\\") and logistic loss (<em>loss</em> = \\\"Log\\\"), some data requires smaller values such as 1e-10 or 1e-20.</li>\\n<li><em>sl2</em>: Default value is equal to <em>l2</em>. On some data, <em>l2</em>/100 works well.</li>\\n<li><em>normalize</em>: If turned on, training targets are normalized so that the average becomes zero.</li>\\n<li><em>min_samples_leaf</em>: Smaller values may slow down training. Too large values may degrade model accuracy.</li>\\n<li><em>n_iter</em>: Number of iterations of coordinate descent to optimize weights.</li>\\n<li><em>n_tree_search</em>: Number of trees to be searched for the nodes to split. The most recently grown trees are searched first.</li>\\n<li><em>opt_interval</em>: Weight optimization interval in terms of the number of leaf nodes.</li>\\n<li><em>learning_rate</em>: Step size of Newton updates used in coordinate descent to optimize weights.</li>\\n</ul>\\n<p dir=\\\"auto\\\">Detailed instruction of tuning hyperparameters is <a href=\\\"https://github.com/RGF-team/rgf/blob/master/RGF/rgf-guide.rst#432-parameters-to-control-training\\\">here</a>.</p>\\n<a name=\\\"user-content-fastrgf\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">FastRGF</h4><a id=\\\"user-content-fastrgf\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: FastRGF\\\" href=\\\"#fastrgf\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<ul dir=\\\"auto\\\">\\n<li><em>n_estimators</em>: Typical range is [100, 10000], and a typical value is 1000.</li>\\n<li><em>max_depth</em>: Controls the tree depth.</li>\\n<li><em>max_leaf</em>: Controls the tree size.</li>\\n<li><em>tree_gain_ratio</em>: Controls when to start a new tree.</li>\\n<li><em>min_samples_leaf</em>: Controls the tree growth process.</li>\\n<li><em>loss</em>: You can select \\\"LS\\\", \\\"MODLS\\\" or \\\"LOGISTIC\\\".</li>\\n<li><em>l1</em>: Typical range is [0, 1000], and a large value induces sparsity.</li>\\n<li><em>l2</em>: Use a relatively large value such as 1000 or 10000. The larger value is, the larger <em>n_estimators</em> you need to use: the resulting accuracy is often better with a longer training time.</li>\\n<li><em>opt_algorithm</em>: You can select \\\"rgf\\\" or \\\"epsilon-greedy\\\".</li>\\n<li><em>learning_rate</em>: Step size of epsilon-greedy boosting. Meant for being used with <em>opt_algorithm</em> = \\\"epsilon-greedy\\\".</li>\\n<li><em>max_bin</em>: Typical range for dense data is [10, 65000] and for sparse data is [10, 250].</li>\\n<li><em>min_child_weight</em>: Controls the process of discretization (creating bins).</li>\\n<li><em>data_l2</em>: Controls the degree of L2 regularization for discretization (creating bins).</li>\\n<li><em>sparse_max_features</em>: Typical range is [1000, 10000000]. Meant for being used with sparse data.</li>\\n<li><em>sparse_min_occurences</em>: Controls which feature will be selected. Meant for being used with sparse data.</li>\\n</ul>\\n<a name=\\\"user-content-using-at-kaggle-kernels\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Using at Kaggle Kernels</h3><a id=\\\"user-content-using-at-kaggle-kernels\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Using at Kaggle Kernels\\\" href=\\\"#using-at-kaggle-kernels\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">Kaggle Kernels support <strong>rgf_python</strong>. Please see <a href=\\\"https://www.kaggle.com/fukatani/d/uciml/iris/classification-by-regularized-greedy-forest\\\" rel=\\\"nofollow\\\">this page</a>.</p>\\n<a name=\\\"user-content-troubleshooting\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Troubleshooting</h3><a id=\\\"user-content-troubleshooting\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Troubleshooting\\\" href=\\\"#troubleshooting\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">If you meet any error, please try to run <a href=\\\"https://github.com/RGF-team/rgf/blob/master/python-package/tests/test_rgf_python.py\\\">test_rgf_python.py</a> to confirm successful package installation.</p>\\n<p dir=\\\"auto\\\">Then feel free to <a href=\\\"https://github.com/RGF-team/rgf/issues/new\\\">open new issue</a>.</p>\\n<a name=\\\"user-content-known-issues\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Known Issues</h4><a id=\\\"user-content-known-issues\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Known Issues\\\" href=\\\"#known-issues\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<ul dir=\\\"auto\\\">\\n<li>FastRGF crashes if training dataset is too small (#data &lt; 28). (<a href=\\\"https://github.com/RGF-team/rgf/issues/92\\\" data-hovercard-type=\\\"issue\\\" data-hovercard-url=\\\"/RGF-team/rgf/issues/92/hovercard\\\">rgf#92</a>)</li>\\n<li><strong>FastRGFClassifier</strong> and <strong>FastRGFRegressor</strong> do not provide any built-in method to calculate feature importances. (<a href=\\\"https://github.com/RGF-team/rgf/issues/109\\\" data-hovercard-type=\\\"issue\\\" data-hovercard-url=\\\"/RGF-team/rgf/issues/109/hovercard\\\">rgf#109</a>)</li>\\n</ul>\\n<a name=\\\"user-content-faq\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">FAQ</h4><a id=\\\"user-content-faq\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: FAQ\\\" href=\\\"#faq\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<ul dir=\\\"auto\\\">\\n<li><p dir=\\\"auto\\\">Q: Temporary files use too much space on my hard drive (Kaggle Kernels disc space is exhausted while fitting <strong>rgf_python</strong> model).</p>\\n<p dir=\\\"auto\\\">A: Please see <a href=\\\"https://github.com/RGF-team/rgf/issues/75\\\" data-hovercard-type=\\\"issue\\\" data-hovercard-url=\\\"/RGF-team/rgf/issues/75/hovercard\\\">rgf#75</a>.</p>\\n</li>\\n<li><p dir=\\\"auto\\\">Q: GridSearchCV/RandomizedSearchCV/RFECV or other scikit-learn tool with <code>n_jobs</code> parameter hangs/freezes/crashes when runs with <strong>rgf_python</strong> estimator.</p>\\n<p dir=\\\"auto\\\">A: This is a known general problem of multiprocessing in Python. You should set <code>n_jobs=1</code> parameter of either estimator or scikit-learn tool.</p>\\n</li>\\n</ul>\\n<a name=\\\"user-content-license\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">License</h3><a id=\\\"user-content-license\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: License\\\" href=\\\"#license\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\"><strong>rgf_python</strong> is distributed under the <strong>MIT license</strong>. Please read file <a href=\\\"https://github.com/RGF-team/rgf/blob/master/python-package/LICENSE\\\">LICENSE</a> for more information.</p>\\n<p dir=\\\"auto\\\">Many thanks to Rie Johnson and Tong Zhang (the authors of RGF).</p>\\n<a name=\\\"user-content-other\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">Other</h3><a id=\\\"user-content-other\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Other\\\" href=\\\"#other\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">Shamelessly, some part of the implementation is based on the following <a href=\\\"https://github.com/MLWave/RGF-sklearn\\\">code</a>. Thanks!</p>\\n<a name=\\\"user-content-references\\\"></a>\\n<div class=\\\"markdown-heading\\\" dir=\\\"auto\\\"><h3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\">References</h3><a id=\\\"user-content-references\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: References\\\" href=\\\"#references\\\"><svg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"><path d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"></path></svg></a></div>\\n<p dir=\\\"auto\\\">[1] Rie Johnson and Tong Zhang. <a href=\\\"https://arxiv.org/abs/1109.0887\\\" rel=\\\"nofollow\\\">Learning Nonlinear Functions Using Regularized Greedy Forest.</a> IEEE Transactions on Pattern Analysis and Machine Intelligence, 36(5):942-954, May 2014</p>\\n\\n</article>\",\"errorMessage\":null,\"headerInfo\":{\"toc\":[{\"level\":2,\"text\":\"rgf_python\",\"anchor\":\"rgf_python\",\"htmlText\":\"rgf_python\"},{\"level\":3,\"text\":\"Features\",\"anchor\":\"features\",\"htmlText\":\"Features\"},{\"level\":3,\"text\":\"Examples\",\"anchor\":\"examples\",\"htmlText\":\"Examples\"},{\"level\":3,\"text\":\"Software Requirements\",\"anchor\":\"software-requirements\",\"htmlText\":\"Software Requirements\"},{\"level\":3,\"text\":\"Installation\",\"anchor\":\"installation\",\"htmlText\":\"Installation\"},{\"level\":4,\"text\":\"Docker image\",\"anchor\":\"docker-image\",\"htmlText\":\"Docker image\"},{\"level\":3,\"text\":\"Tuning Hyperparameters\",\"anchor\":\"tuning-hyperparameters\",\"htmlText\":\"Tuning Hyperparameters\"},{\"level\":4,\"text\":\"RGF\",\"anchor\":\"rgf\",\"htmlText\":\"RGF\"},{\"level\":4,\"text\":\"FastRGF\",\"anchor\":\"fastrgf\",\"htmlText\":\"FastRGF\"},{\"level\":3,\"text\":\"Using at Kaggle Kernels\",\"anchor\":\"using-at-kaggle-kernels\",\"htmlText\":\"Using at Kaggle Kernels\"},{\"level\":3,\"text\":\"Troubleshooting\",\"anchor\":\"troubleshooting\",\"htmlText\":\"Troubleshooting\"},{\"level\":4,\"text\":\"Known Issues\",\"anchor\":\"known-issues\",\"htmlText\":\"Known Issues\"},{\"level\":4,\"text\":\"FAQ\",\"anchor\":\"faq\",\"htmlText\":\"FAQ\"},{\"level\":3,\"text\":\"License\",\"anchor\":\"license\",\"htmlText\":\"License\"},{\"level\":3,\"text\":\"Other\",\"anchor\":\"other\",\"htmlText\":\"Other\"},{\"level\":3,\"text\":\"References\",\"anchor\":\"references\",\"htmlText\":\"References\"}],\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Frgf-team%2Frgf%2Ftree%2Fmaster%2Fpython-package\"}},\"totalCount\":8,\"showBranchInfobar\":false},\"fileTree\":{\"\":{\"items\":[{\"name\":\".ci\",\"path\":\".ci\",\"contentType\":\"directory\"},{\"name\":\".github\",\"path\":\".github\",\"contentType\":\"directory\"},{\"name\":\"FastRGF\",\"path\":\"FastRGF\",\"contentType\":\"directory\"},{\"name\":\"R-package\",\"path\":\"R-package\",\"contentType\":\"directory\"},{\"name\":\"RGF\",\"path\":\"RGF\",\"contentType\":\"directory\"},{\"name\":\"python-package\",\"path\":\"python-package\",\"contentType\":\"directory\"},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"contentType\":\"file\"},{\"name\":\"AWESOME_RGF.md\",\"path\":\"AWESOME_RGF.md\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"README.md\",\"contentType\":\"file\"},{\"name\":\"codecov.yml\",\"path\":\"codecov.yml\",\"contentType\":\"file\"}],\"totalCount\":10}},\"fileTreeProcessingTime\":2.1493100000000003,\"foldersToFetch\":[],\"treeExpanded\":true,\"symbolsExpanded\":false,\"csrf_tokens\":{\"/rgf-team/rgf/branches\":{\"post\":\"dQXlPhB5ZmDe8VJef90woLyVWqs-WjjLKO0Dav4J_o6dRbt1nF21KL3rMWc5Nk1SiKIo4eUHPQ4yPxVNvo9Chg\"},\"/RGF-team/rgf/branches/fetch_and_merge/master\":{\"post\":\"dlR9FzvLOSRrAUzECurJxPTwVUsfEAs2PJh5r6fOIBq1wPdseCo8pfVzftQ0wKnp-_GiIqC5elktZ1OyOsx0IA\"},\"/RGF-team/rgf/branches/fetch_and_merge/master?discard_changes=true\":{\"post\":\"TKaY4LewjKH_hLB-q4gEF0dnmZhi_4zh2DALATRgWDWPMhKb9FGJIGH2gm6VomQ6SGZu8d1W_Y7JzyEcqWIMDw\"}}},\"title\":\"rgf/python-package at master \u00b7 RGF-team/rgf\"}",
  "embeddings": []
}
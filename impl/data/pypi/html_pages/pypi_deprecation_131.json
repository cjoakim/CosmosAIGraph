{
  "libtype": "pypi",
  "libname": "deprecation",
  "url": "http://deprecation.readthedocs.io/",
  "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\">  <head>    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />    <title>deprecation &#8212; deprecation 2.0.6 documentation</title>    <link rel=\"stylesheet\" href=\"_static/nature.css\" type=\"text/css\" />    <link rel=\"stylesheet\" href=\"_static/pygments.css\" type=\"text/css\" />    <link rel=\"stylesheet\" href=\"https://media.readthedocs.org/css/badge_only.css\" type=\"text/css\" />    <script type=\"text/javascript\" id=\"documentation_options\" data-url_root=\"./\" src=\"_static/documentation_options.js\"></script>    <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/jquery/jquery-2.0.3.min.js\"></script>    <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/jquery/jquery-migrate-1.2.1.min.js\"></script>    <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/underscore.js\"></script>    <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/doctools.js\"></script>    <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/readthedocs-doc-embed.js\"></script>    <link rel=\"index\" title=\"Index\" href=\"genindex.html\" />    <link rel=\"search\" title=\"Search\" href=\"search.html\" />   <!-- RTD Extra Head --><!-- Always link to the latest version, as canonical.http://docs.readthedocs.org/en/latest/canonical.html--><link rel=\"canonical\" href=\"https://deprecation.readthedocs.io/en/latest/\" /><link rel=\"stylesheet\" href=\"https://media.readthedocs.org/css/readthedocs-doc-embed.css\" type=\"text/css\" /><script type=\"text/javascript\" src=\"_static/readthedocs-data.js\"></script><!-- Add page-specific data, which must exist in the page js, not global --><script type=\"text/javascript\">READTHEDOCS_DATA['page'] = 'index'READTHEDOCS_DATA['source_suffix'] = '.rst'</script><script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/readthedocs-analytics.js\"></script><!-- end RTD <extrahead> --></head><body>    <div class=\"related\" role=\"navigation\" aria-label=\"related navigation\">      <h3>Navigation</h3>      <ul>        <li class=\"right\" style=\"margin-right: 10px\">          <a href=\"genindex.html\" title=\"General Index\"             accesskey=\"I\">index</a></li>        <li class=\"right\" >          <a href=\"py-modindex.html\" title=\"Python Module Index\"             >modules</a> |</li>        <li class=\"nav-item nav-item-0\"><a href=\"#\">deprecation 2.0.6 documentation</a> &#187;</li>       </ul>    </div>      <div class=\"document\">      <div class=\"documentwrapper\">        <div class=\"bodywrapper\">          <div class=\"body\" role=\"main\">              <div class=\"section\" id=\"deprecation\"><h1><code class=\"docutils literal notranslate\"><span class=\"pre\">deprecation</span></code><a class=\"headerlink\" href=\"#deprecation\" title=\"Permalink to this headline\">\u00b6</a></h1><p><code class=\"docutils literal notranslate\"><span class=\"pre\">deprecation</span></code> is a library that enables automated deprecations. It offersthe <a class=\"reference internal\" href=\"#deprecation.deprecated\" title=\"deprecation.deprecated\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">deprecated()</span></code></a> decorator to wrap functions, providingproper warnings both in documentation and via Python\u2019s <a class=\"reference external\" href=\"https://docs.python.org/dev/library/warnings.html#module-warnings\" title=\"(in Python v3.8)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">warnings</span></code></a> system,as well as the <a class=\"reference internal\" href=\"#deprecation.fail_if_not_removed\" title=\"deprecation.fail_if_not_removed\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">deprecation.fail_if_not_removed()</span></code></a> decorator for testmethods to ensure that deprecated code is eventually removed.</p><p>See <a class=\"reference internal\" href=\"#api-documentation\">API Documentation</a> to jump straight into the options. See the<a class=\"reference internal\" href=\"sample.html\"><span class=\"doc\">sample module</span></a> page for an example of <code class=\"docutils literal notranslate\"><span class=\"pre\">deprecation</span></code>\u2019s effect on a module\u2019sSphinx <a class=\"reference external\" href=\"http://www.sphinx-doc.org/en/master/ext/autodoc.html\">autodoc</a>generated documentation.</p></div><div class=\"section\" id=\"installation\"><h1>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this headline\">\u00b6</a></h1><blockquote><div><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">deprecation</span></pre></div></div></div></blockquote></div><div class=\"section\" id=\"using-deprecated\"><h1>Using <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;deprecated</span></code><a class=\"headerlink\" href=\"#using-deprecated\" title=\"Permalink to this headline\">\u00b6</a></h1><p>To mark a function or method as deprecated, wrap it in the<a class=\"reference internal\" href=\"#deprecation.deprecated\" title=\"deprecation.deprecated\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">deprecated()</span></code></a> decorator. This does several things for you:</p><ol class=\"arabic simple\"><li>The docstring of the wrapped function will have details appendedto it from the arguments you set on <a class=\"reference internal\" href=\"#deprecation.deprecated\" title=\"deprecation.deprecated\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">deprecated()</span></code></a>.This takes care of telling your users not only that the functionis deprecated, but can also tell them when it\u2019s going away andwhat they can do in the meantime.</li><li>In conjunction with the <a class=\"reference internal\" href=\"#deprecation.fail_if_not_removed\" title=\"deprecation.fail_if_not_removed\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">fail_if_not_removed()</span></code></a>decorator it removes the need for any sort of manual tracking ofwhen a sufficiently deprecated piece of code should be removedfrom the codebase. It causes tests to fail when they containcode which should be removed.</li></ol><blockquote><div><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">deprecation</span><span class=\"nd\">@deprecation</span><span class=\"o\">.</span><span class=\"n\">deprecated</span><span class=\"p\">(</span><span class=\"n\">deprecated_in</span><span class=\"o\">=</span><span class=\"s2\">&quot;1.0&quot;</span><span class=\"p\">,</span> <span class=\"n\">removed_in</span><span class=\"o\">=</span><span class=\"s2\">&quot;2.0&quot;</span><span class=\"p\">,</span>                        <span class=\"n\">current_version</span><span class=\"o\">=</span><span class=\"n\">__version__</span><span class=\"p\">,</span>                        <span class=\"n\">details</span><span class=\"o\">=</span><span class=\"s2\">&quot;Use the bar function instead&quot;</span><span class=\"p\">)</span><span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">():</span>    <span class=\"sd\">&quot;&quot;&quot;Do some stuff&quot;&quot;&quot;</span>    <span class=\"k\">return</span> <span class=\"mi\">1</span></pre></div></div></div></blockquote><p>Now look at the docs. If you you generate API documentation from your sourcelike the <a class=\"reference internal\" href=\"sample.html\"><span class=\"doc\">sample module</span></a> does, you\u2019ll see that the a sentence has beenappended to a deprecated function\u2019s docstring to include information aboutwhen the function is deprecated, when it\u2019ll be removed, and what you can doinstead. For example, run <code class=\"docutils literal notranslate\"><span class=\"pre\">help(foo)</span></code> and this is what you\u2019ll get:</p><blockquote><div><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Help</span> <span class=\"n\">on</span> <span class=\"n\">function</span> <span class=\"n\">foo</span> <span class=\"ow\">in</span> <span class=\"n\">module</span> <span class=\"n\">example</span><span class=\"p\">:</span><span class=\"n\">foo</span><span class=\"p\">()</span>    <span class=\"n\">Do</span> <span class=\"n\">some</span> <span class=\"n\">stuff</span>    <span class=\"o\">*</span><span class=\"n\">Deprecated</span> <span class=\"ow\">in</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">to</span> <span class=\"n\">be</span> <span class=\"n\">removed</span> <span class=\"ow\">in</span> <span class=\"mf\">2.0</span><span class=\"o\">.</span> <span class=\"n\">Use</span> <span class=\"n\">the</span> <span class=\"n\">bar</span> <span class=\"n\">function</span> <span class=\"n\">instead</span><span class=\"o\">*</span></pre></div></div></div></blockquote><p>You can pass varying amounts of detail to this decorator, but note thatin most cases it removes the ability to use<a class=\"reference internal\" href=\"#deprecation.fail_if_not_removed\" title=\"deprecation.fail_if_not_removed\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">fail_if_not_removed()</span></code></a>. See the <a class=\"reference internal\" href=\"#api-documentation\">API Documentation</a>for full details.</p></div><div class=\"section\" id=\"using-fail-if-not-removed\"><h1>Using <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;fail_if_not_removed</span></code><a class=\"headerlink\" href=\"#using-fail-if-not-removed\" title=\"Permalink to this headline\">\u00b6</a></h1><p>Once you\u2019ve marked code for deprecation via <a class=\"reference internal\" href=\"#deprecation.deprecated\" title=\"deprecation.deprecated\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">deprecated()</span></code></a>,you can sit back and relax as most of the work has been done for you.Assuming you\u2019ve provided sufficient detail to the decorator, you now justwait for your tests to tell you it\u2019s time to delete the code in question.</p><p>If you wrap test methods which use your now deprecated code in<a class=\"reference internal\" href=\"#deprecation.fail_if_not_removed\" title=\"deprecation.fail_if_not_removed\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">fail_if_not_removed()</span></code></a>, the test will fail with a messagenotifying you that you should remove this code.</p><blockquote><div><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@deprecation</span><span class=\"o\">.</span><span class=\"n\">fail_if_not_removed</span><span class=\"k\">def</span> <span class=\"nf\">test_won</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">won</span><span class=\"p\">())</span></pre></div></div></div></blockquote><p>Looking at the <a class=\"reference internal\" href=\"sample.html\"><span class=\"doc\">sample module</span></a> docs, we can see that this function wouldfail the tests at version 2.0, when it should be removed. The followingshows what test output will look like for a failure.</p><blockquote><div><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>AssertionError: &lt;function Tests.test_won at 0x10af33268&gt; uses a functionthat should be removed: who is unsupported as of 2.0. Use the ``one``function instead</pre></div></div></div></blockquote></div><div class=\"section\" id=\"module-deprecation\"><span id=\"api-documentation\"></span><h1>API Documentation<a class=\"headerlink\" href=\"#module-deprecation\" title=\"Permalink to this headline\">\u00b6</a></h1><dl class=\"function\"><dt id=\"deprecation.deprecated\"><code class=\"descclassname\">deprecation.</code><code class=\"descname\">deprecated</code><span class=\"sig-paren\">(</span><em>deprecated_in=None</em>, <em>removed_in=None</em>, <em>current_version=None</em>, <em>details=''</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#deprecation.deprecated\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Decorate a function to signify its deprecation</p><dl class=\"docutils\"><dt>This function wraps a method that will soon be removed and does two things:</dt><dd><ul class=\"first last simple\"><li>The docstring of the method will be modified to include a noticeabout deprecation, e.g., \u201cDeprecated since 0.9.11. Use foo instead.\u201d</li><li>Raises a <a class=\"reference internal\" href=\"#deprecation.DeprecatedWarning\" title=\"deprecation.DeprecatedWarning\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DeprecatedWarning</span></code></a>via the <a class=\"reference external\" href=\"https://docs.python.org/dev/library/warnings.html#module-warnings\" title=\"(in Python v3.8)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">warnings</span></code></a> module, which is a subclass of the built-in<a class=\"reference external\" href=\"https://docs.python.org/dev/library/exceptions.html#DeprecationWarning\" title=\"(in Python v3.8)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DeprecationWarning</span></code></a>. Note that built-in<a class=\"reference external\" href=\"https://docs.python.org/dev/library/exceptions.html#DeprecationWarning\" title=\"(in Python v3.8)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DeprecationWarning</span></code></a>s are ignored by default, so for usersto be informed of said warnings they will need to enable them\u2013seethe <a class=\"reference external\" href=\"https://docs.python.org/dev/library/warnings.html#module-warnings\" title=\"(in Python v3.8)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">warnings</span></code></a> module documentation for more details.</li></ul></dd></dl><table class=\"docutils field-list\" frame=\"void\" rules=\"none\"><col class=\"field-name\" /><col class=\"field-body\" /><tbody valign=\"top\"><tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\"><li><strong>deprecated_in</strong> \u2013 The version at which the decorated method isconsidered deprecated. This will usually be thenext version to be released when the decorator isadded. The default is <strong>None</strong>, which effectivelymeans immediate deprecation. If this is notspecified, then the <cite>removed_in</cite> and<cite>current_version</cite> arguments are ignored.</li><li><strong>removed_in</strong> \u2013 The version when the decorated method will be removed.The default is <strong>None</strong>, specifying that the functionis not currently planned to be removed.Note: This cannot be set to a value if<cite>deprecated_in=None</cite>.</li><li><strong>current_version</strong> \u2013 The source of version information for thecurrently running code. This will usually bea <cite>__version__</cite> attribute on your library.The default is <cite>None</cite>.When <cite>current_version=None</cite> the automation todetermine if the wrapped function is actuallyin a period of deprecation or time for removaldoes not work, causing a<a class=\"reference internal\" href=\"#deprecation.DeprecatedWarning\" title=\"deprecation.DeprecatedWarning\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DeprecatedWarning</span></code></a>to be raised in all cases.</li><li><strong>details</strong> \u2013 Extra details to be added to the method docstring andwarning. For example, the details may point users toa replacement method, such as \u201cUse the foo_barmethod instead\u201d. By default there are no details.</li></ul></td></tr></tbody></table></dd></dl><dl class=\"function\"><dt id=\"deprecation.fail_if_not_removed\"><code class=\"descclassname\">deprecation.</code><code class=\"descname\">fail_if_not_removed</code><span class=\"sig-paren\">(</span><em>method</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#deprecation.fail_if_not_removed\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Decorate a test method to track removal of deprecated code</p><p>This decorator catches <a class=\"reference internal\" href=\"#deprecation.UnsupportedWarning\" title=\"deprecation.UnsupportedWarning\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UnsupportedWarning</span></code></a>warnings that occur during testing and causes unittests to fail,making it easier to keep track of when code should be removed.</p><table class=\"docutils field-list\" frame=\"void\" rules=\"none\"><col class=\"field-name\" /><col class=\"field-body\" /><tbody valign=\"top\"><tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/exceptions.html#AssertionError\" title=\"(in Python v3.8)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AssertionError</span></code></a> if an<a class=\"reference internal\" href=\"#deprecation.UnsupportedWarning\" title=\"deprecation.UnsupportedWarning\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UnsupportedWarning</span></code></a>is raised while running the test method.</td></tr></tbody></table></dd></dl><dl class=\"exception\"><dt id=\"deprecation.DeprecatedWarning\"><em class=\"property\">exception </em><code class=\"descclassname\">deprecation.</code><code class=\"descname\">DeprecatedWarning</code><span class=\"sig-paren\">(</span><em>function</em>, <em>deprecated_in</em>, <em>removed_in</em>, <em>details=''</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#deprecation.DeprecatedWarning\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>A warning class for deprecated methods</p><p>This is a specialization of the built-in <a class=\"reference external\" href=\"https://docs.python.org/dev/library/exceptions.html#DeprecationWarning\" title=\"(in Python v3.8)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DeprecationWarning</span></code></a>,adding parameters that allow us to get information into the __str__that ends up being sent through the <a class=\"reference external\" href=\"https://docs.python.org/dev/library/warnings.html#module-warnings\" title=\"(in Python v3.8)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">warnings</span></code></a> system.The attributes aren\u2019t able to be retrieved after the warning getsraised and passed through the system as only the class\u2013not theinstance\u2013and message are what gets preserved.</p><table class=\"docutils field-list\" frame=\"void\" rules=\"none\"><col class=\"field-name\" /><col class=\"field-body\" /><tbody valign=\"top\"><tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\"><li><strong>function</strong> \u2013 The function being deprecated.</li><li><strong>deprecated_in</strong> \u2013 The version that <code class=\"docutils literal notranslate\"><span class=\"pre\">function</span></code> is deprecated in</li><li><strong>removed_in</strong> \u2013 The version that <code class=\"docutils literal notranslate\"><span class=\"pre\">function</span></code> gets removed in</li><li><strong>details</strong> \u2013 Optional details about the deprecation. Most oftenthis will include directions on what to use insteadof the now deprecated code.</li></ul></td></tr></tbody></table></dd></dl><dl class=\"exception\"><dt id=\"deprecation.UnsupportedWarning\"><em class=\"property\">exception </em><code class=\"descclassname\">deprecation.</code><code class=\"descname\">UnsupportedWarning</code><span class=\"sig-paren\">(</span><em>function</em>, <em>deprecated_in</em>, <em>removed_in</em>, <em>details=''</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#deprecation.UnsupportedWarning\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>A warning class for methods to be removed</p><p>This is a subclass of <a class=\"reference internal\" href=\"#deprecation.DeprecatedWarning\" title=\"deprecation.DeprecatedWarning\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DeprecatedWarning</span></code></a> and is usedto output a proper message about a function being unsupported.Additionally, the <a class=\"reference internal\" href=\"#deprecation.fail_if_not_removed\" title=\"deprecation.fail_if_not_removed\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">fail_if_not_removed()</span></code></a> decoratorwill handle this warning and cause any tests to fail if the systemunder test uses code that raises this warning.</p></dd></dl></div>          </div>        </div>      </div>      <div class=\"sphinxsidebar\" role=\"navigation\" aria-label=\"main navigation\">        <div class=\"sphinxsidebarwrapper\">  <h3><a href=\"#\">Table Of Contents</a></h3>  <ul><li><a class=\"reference internal\" href=\"#\"><code class=\"docutils literal notranslate\"><span class=\"pre\">deprecation</span></code></a></li><li><a class=\"reference internal\" href=\"#installation\">Installation</a></li><li><a class=\"reference internal\" href=\"#using-deprecated\">Using <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;deprecated</span></code></a></li><li><a class=\"reference internal\" href=\"#using-fail-if-not-removed\">Using <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;fail_if_not_removed</span></code></a></li><li><a class=\"reference internal\" href=\"#module-deprecation\">API Documentation</a></li></ul>  <div role=\"note\" aria-label=\"source link\">    <h3>This Page</h3>    <ul class=\"this-page-menu\">      <li><a href=\"_sources/index.rst.txt\"            rel=\"nofollow\">Show Source</a></li>    </ul>   </div><div id=\"searchbox\" style=\"display: none\" role=\"search\">  <h3>Quick search</h3>    <div class=\"searchformwrapper\">    <form class=\"search\" action=\"search.html\" method=\"get\">      <input type=\"text\" name=\"q\" />      <input type=\"submit\" value=\"Go\" />      <input type=\"hidden\" name=\"check_keywords\" value=\"yes\" />      <input type=\"hidden\" name=\"area\" value=\"default\" />    </form>    </div></div><script type=\"text/javascript\">$('#searchbox').show(0);</script>        </div>      </div>      <div class=\"clearer\"></div>    </div>    <div class=\"related\" role=\"navigation\" aria-label=\"related navigation\">      <h3>Navigation</h3>      <ul>        <li class=\"right\" style=\"margin-right: 10px\">          <a href=\"genindex.html\" title=\"General Index\"             >index</a></li>        <li class=\"right\" >          <a href=\"py-modindex.html\" title=\"Python Module Index\"             >modules</a> |</li>        <li class=\"nav-item nav-item-0\"><a href=\"#\">deprecation 2.0.6 documentation</a> &#187;</li>       </ul>    </div>    <div class=\"footer\" role=\"contentinfo\">        &#169; Copyright 2017, Brian Curtin.      Created using <a href=\"http://sphinx-doc.org/\">Sphinx</a> 1.7.9.    </div>  </body></html>",
  "embeddings": []
}
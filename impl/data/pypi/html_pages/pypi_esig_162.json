{
  "libtype": "pypi",
  "libname": "esig",
  "url": "http://esig.readthedocs.io/en/latest/",
  "html": "<!DOCTYPE html><!--[if IE 8]><html class=\"no-js lt-ie9\" lang=\"en\" > <![endif]--><!--[if gt IE 8]><!--> <html class=\"no-js\" lang=\"en\" > <!--<![endif]--><head>  <meta charset=\"utf-8\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">    <title>The esig Python Package &mdash; esig 0.6 documentation</title>                                <link rel=\"stylesheet\" href=\"https://assets.readthedocs.org/static/css/sphinx_rtd_theme.css\" type=\"text/css\" />            <link rel=\"index\" title=\"Index\"              href=\"genindex.html\"/>        <link rel=\"search\" title=\"Search\" href=\"search.html\"/>    <link rel=\"top\" title=\"esig 0.6 documentation\" href=\"#\"/>        <link rel=\"next\" title=\"Prerequisites for the esig Package\" href=\"prerequisites.html\"/>     <script src=\"_static/js/modernizr.min.js\"></script><!-- RTD Extra Head --><!-- Always link to the latest version, as canonical.http://docs.readthedocs.org/en/latest/canonical.html--><link rel=\"canonical\" href=\"https://esig.readthedocs.io/en/latest/\" /><link rel=\"stylesheet\" href=\"https://assets.readthedocs.org/static/css/readthedocs-doc-embed.css\" type=\"text/css\" /><script type=\"text/javascript\" src=\"_static/readthedocs-data.js\"></script><!-- Add page-specific data, which must exist in the page js, not global --><script type=\"text/javascript\">READTHEDOCS_DATA['page'] = \"index\"READTHEDOCS_DATA['source_suffix'] = \".rst\"</script><script type=\"text/javascript\" src=\"https://assets.readthedocs.org/static/javascript/readthedocs-analytics.js\" async=\"async\"></script><!-- end RTD <extrahead> --></head><body class=\"wy-body-for-nav\" role=\"document\">     <div class=\"wy-grid-for-nav\">        <nav data-toggle=\"wy-nav-shift\" class=\"wy-nav-side\">      <div class=\"wy-side-scroll\">        <div class=\"wy-side-nav-search\">                                <a href=\"#\" class=\"icon icon-home\"> esig                              </a>                                                            <div class=\"version\">                latest              </div>                                <div role=\"search\">  <form id=\"rtd-search-form\" class=\"wy-form\" action=\"search.html\" method=\"get\">    <input type=\"text\" name=\"q\" placeholder=\"Search docs\" />    <input type=\"hidden\" name=\"check_keywords\" value=\"yes\" />    <input type=\"hidden\" name=\"area\" value=\"default\" />  </form></div>                  </div>        <div class=\"wy-menu wy-menu-vertical\" data-spy=\"affix\" role=\"navigation\" aria-label=\"main navigation\">                                                                                      <ul><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"prerequisites.html\">Prerequisites for the <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> Package</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"installing.html\">Installing <code class=\"docutils literal\"><span class=\"pre\">esig</span></code></a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"troubleshooting.html\">Troubleshooting the <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> Installation</a></li></ul>                              </div>      </div>    </nav>    <section data-toggle=\"wy-nav-shift\" class=\"wy-nav-content-wrap\">            <nav class=\"wy-nav-top\" role=\"navigation\" aria-label=\"top navigation\">                  <i data-toggle=\"wy-nav-top\" class=\"fa fa-bars\"></i>          <a href=\"#\">esig</a>              </nav>            <div class=\"wy-nav-content\">        <div class=\"rst-content\">          <div role=\"navigation\" aria-label=\"breadcrumbs navigation\">  <ul class=\"wy-breadcrumbs\">          <li><a href=\"#\">Docs</a> &raquo;</li>              <li>The <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> Python Package</li>              <li class=\"wy-breadcrumbs-aside\">                                              <a href=\"https://github.com/maxwelld90/esig_documentation/blob/master/documentation/index.rst\" class=\"fa fa-github\"> Edit on GitHub</a>                                    </li>      </ul>    <hr/></div>          <div role=\"main\" class=\"document\" itemscope=\"itemscope\" itemtype=\"http://schema.org/Article\">           <div itemprop=\"articleBody\">              <div class=\"section\" id=\"the-esig-python-package\"><span id=\"chap-index\"></span><h1>The <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> Python Package<a class=\"headerlink\" href=\"#the-esig-python-package\" title=\"Permalink to this headline\">\u00b6</a></h1><p>This is the online documentation for the Python <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> package up to version 0.7.1 - the package is currently undergoing revision to provide substantial additional functionality and speed. The version 0.7.3 only supports Python &gt;= 3.5 and 64bit. It does not support 32 bit installations. It has the same interface with a new functionality in \u201crecombine\u201d that can reduce clouds of paths to a small reweighted subcollection while retaining their expected signature. This code relies on MKL, OpenMP, and heavy parallel linear algebra. As a result the build process from the gz file has changed from this documentation. The wheel, with pip install esig will install on Linux (ManyLinux2014), Mac and Windows but requires a current version of pip (in particular the one shipped with Ubuntu 18.04 is too old - so update it first). If you have trouble please let us know and install 0.7.1. Below you\u2019ll find the table of contents for version 0.6.</p><div class=\"toctree-wrapper compound\"><ul><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"prerequisites.html\">Prerequisites for the <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> Package</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"prerequisites.html#getting-your-python-version\">Getting your Python Version</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"prerequisites.html#installing-and-configuring-boost\">Installing and Configuring Boost</a><ul><li class=\"toctree-l3\"><a class=\"reference internal\" href=\"prerequisites.html#windows\">Windows</a></li><li class=\"toctree-l3\"><a class=\"reference internal\" href=\"prerequisites.html#linux-and-macos\">Linux and macOS</a></li></ul></li></ul></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"installing.html\">Installing <code class=\"docutils literal\"><span class=\"pre\">esig</span></code></a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"installing.html#custom-library-and-include-paths\">Custom Library and Include Paths</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"installing.html#building-installing-fails\">Building/Installing Fails!</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"installing.html#running-tests\">Running Tests</a></li></ul></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"troubleshooting.html\">Troubleshooting the <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> Installation</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"troubleshooting.html#unknown-command-bdist-wheel\">Unknown Command <code class=\"docutils literal\"><span class=\"pre\">bdist_wheel</span></code></a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"troubleshooting.html#permission-denied-when-installing\">Permission Denied when Installing</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"troubleshooting.html#can-t-load-boost-libraries\">Can\u2019t Load Boost libraries</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"troubleshooting.html#numpy-error\"><code class=\"docutils literal\"><span class=\"pre\">numpy</span></code> error</a></li></ul></li></ul></div><div class=\"section\" id=\"esig-what-is-it\"><h2><code class=\"docutils literal\"><span class=\"pre\">esig</span></code>: What is it?<a class=\"headerlink\" href=\"#esig-what-is-it\" title=\"Permalink to this headline\">\u00b6</a></h2><p>The <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> package provides implementations of a series of mathematical tools for the handling of the <em>signature</em> of a <em>path</em>. Powered by the underlying <code class=\"docutils literal\"><span class=\"pre\">libalgebra</span></code> C++ package, developed by Terry Lyons et al. over a period of 15 years, the <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> package has been further developed and extended by three 2017 Summer interns at the <a class=\"reference external\" href=\"http://www.turing.ac.uk/\">Alan Turing Institute</a>, London, England. Below we provide an explanation of what a path and a signature are \u2013 it gets mathematical.</p><p>Consider a <em>path</em> as smooth mapping from a time interval into some multidimensional space; it is a special case of a continuous stream of data. A <em>signature</em> is a canonical transform of a data stream into a high dimensional space of features; <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> is a package for implementing this transform for paths \u2013 as a mathematical object, a signature is an infinite tensor series. <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> works with the truncated signatures having a certain <em>degree</em>.  Formally and for piecewize linear or smooth paths, each coordinate of the signature tensor is an iterated Riemann-Stieltjes integral; the ensemble of these values represents an element in the tensor algebra of Euclidean space. Precise definitions and an introduction to this particular research area can be found in <a class=\"reference external\" href=\"https://arxiv.org/abs/1405.4537\">this article</a> written by Terry Lyons, as well as <a class=\"reference external\" href=\"https://arxiv.org/abs/1602.03255\">this survey paper</a>.</p><p>In practice, paths are easy to visualize and summarise in the case where they are (well approximated) by piecewise linear functions. If the initial and end points, as well as the intermediate points where direction changes, are collected into an array then this discrete stream contains a full description of the path. The <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> package takes such an array as argument, and computes the signature (or logsignature) of the associated path truncated at a chosen degree.</p><p>The <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> package is a python package, and the function stream2sig requires an input array that is an np.array((l,n),dtype=float) of shape <code class=\"docutils literal\"><span class=\"pre\">(l,n)</span></code> where: <code class=\"docutils literal\"><span class=\"pre\">l</span></code> is the number of sample points in the path including both ends and <code class=\"docutils literal\"><span class=\"pre\">n</span></code> is the dimension of the target space where the points live. In the following example, the path is given as the list of coordinate vectors of points defining the piecewise linear path.</p><div class=\"code highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">--&gt;</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">--&gt;</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">--&gt;</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">)</span></pre></div></div><p>The signature is then computed by calling a degree, after formatting the data as a float based <code class=\"docutils literal\"><span class=\"pre\">numpy.array</span></code>. The degree is roughly defined as the number of iterations in the integration performed. In this example, degree 3 means that all of the possible combinations of the coordinate functions</p><div class=\"code highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">x_1</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">--&gt;</span> <span class=\"mi\">1</span> <span class=\"o\">--&gt;</span> <span class=\"mi\">2</span> <span class=\"o\">--&gt;</span> <span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"n\">x_2</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">--&gt;</span> <span class=\"mi\">1</span> <span class=\"o\">--&gt;</span> <span class=\"mi\">2</span> <span class=\"o\">--&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span></pre></div></div><p>of length 3 or lower are integrated over. There is 1 combination of length 0, 2 combinations of lenght 1, 4 combinations of length 2, 8 combinations of length 3, making the resulting vector have dimension 15.</p><p>The signature is a vectorisation of the path where the dimension of the feature set does not depend on the number of points along the path.</p><p>If you\u2019re interested in how the software was packaged up, you can look at the small reflection paper written by one of the Summer interns, David Maxwell. The paper is available on <a class=\"reference external\" href=\"https://arxiv.org/\">arXiv</a>.</p></div><div class=\"section\" id=\"esig-how-to-use-it\"><h2><code class=\"docutils literal\"><span class=\"pre\">esig</span></code>: How to use it?<a class=\"headerlink\" href=\"#esig-how-to-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2><p>Once installed the <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> package provides a very simple implementations for a limited series of core mathematical operations for the handling of the <em>signature</em> of a <em>path.</em></p><p>To get started import tosig from esig:</p><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">esig</span> <span class=\"k\">import</span> <span class=\"n\">tosig</span> <span class=\"k\">as</span> <span class=\"n\">ts</span></pre></div></div><p>Then get help on the functionality tosig provides</p><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">)</span></pre></div></div><dl class=\"docutils\"><dt>NAME</dt><dd>esig.tosig - This is the tosig module from ESIG</dd><dt>FUNCTIONS</dt><dd><dl class=\"first last docutils\"><dt>logsigdim(\u2026)</dt><dd>logsigdim(signal_dimension, signature_degree) returns a Py_ssize_t integer giving the dimension of the log signature vector returned by stream2logsig</dd><dt>logsigkeys(\u2026)</dt><dd>logsigkeys(signal_dimension, signature_degree) returns, in the order used by \u20262logsig, a space separated ascii string containing the keys associated the entries in the log signature returned by \u20262logsig</dd><dt>sigdim(\u2026)</dt><dd>sigdim(signal_dimension, signature_degree) returns a Py_ssize_t integer giving the length of the signature vector returned by stream2logsig</dd><dt>sigkeys(\u2026)</dt><dd>sigkeys(signal_dimension, signature_degree) returns, in the order used by \u20262sig, a space separated ascii string containing the keys associated the entries in the signature returned by \u20262sig</dd><dt>stream2logsig(\u2026)</dt><dd>stream2logsig(array(no_of_ticks x signal_dimension), signature_degree) reads a 2 dimensional numpy array of floats, \u201cthe data in stream space\u201d and returns a numpy vector containing the logsignature of the vector series up to given signature_degree</dd><dt>stream2sig(\u2026)</dt><dd>stream2logsig(array(no_of_ticks x signal_dimension), signature_degree) reads a 2 dimensional numpy array of floats, \u201cthe data in stream space\u201d and returns a numpy vector containing the signature of the vector series up to given signature_degree</dd></dl></dd></dl><p>To understand better, lets look at some of the helper functions</p><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">sigkeys</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"go\">&#39; () (1) (2) (1,1) (1,2) (2,1) (2,2) (1,1,1) (1,1,2) (1,2,1) (1,2,2) (2,1,1) (2,1,2) (2,2,1) (2,2,2) (1,1,1,1) (1,1,1,2) (1,1,2,1) (1,1,2,2) (1,2,1,1) (1,2,1,2) (1,2,2,1) (1,2,2,2) (2,1,1,1) (2,1,1,2) (2,1,2,1) (2,1,2,2) (2,2,1,1) (2,2,1,2) (2,2,2,1) (2,2,2,2)&#39;</span></pre></div></div><p>enumerates a basis for the tensor algebra on an alphabet of size 2 up to degree 4 as a text string. ts.sigkeys(2,4).strip().split(\u201d \u201c) provides the same basis as a list. The signature is then computed by calling stream2sig(path_data, truncation_degree), after formatting path_data as a <code class=\"docutils literal\"><span class=\"pre\">numpy.array</span></code>. The degree d is roughly defined as the maximal order to which iterated integration is performed. The signature can then be represented as a linear combination of words of length at most d. The logsignature has a more complicated but more compact representation.</p><p><code class=\"docutils literal\"><span class=\"pre\">esig</span></code> has other helper functions that can be used to access the data effectively.</p><div class=\"code highlight-default\"><div class=\"highlight\"><pre><span></span>    <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">sigkeys</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)[</span><span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">sigdim</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">):</span><span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">sigdim</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)]</span><span class=\"p\">[</span><span class=\"s1\">&#39;(1,1,1)&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(1,1,2)&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(1,2,1)&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(1,2,2)&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(2,1,1)&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(2,1,2)&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(2,2,1)&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(2,2,2)&#39;</span><span class=\"p\">]</span></pre></div></div><p>trims the full basis to only those elements that have degree three in the tensor basis.</p><p>Very similar code works for calculating, accessing and manipulating the basis for the lie elements used for log signatures and the log signature itself:</p><div class=\"code highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">logsigkeys</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)[</span><span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">logsigdim</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">):</span><span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">logsigdim</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)]</span><span class=\"go\">[&#39;[1,[1,2]]&#39;, &#39;[2,[1,2]]&#39;]</span></pre></div></div><p>Computing signatures and log signatures from the discrete sequences is achieved using stream2sig and stream2logsig.</p><p>Following the discussion above: The input stream is a numpy array of floats (not integers!); if one varies the first index and fixes the second index then the values are those along a coordinate path (not increments), the number of coordinate paths or channels in the path is determined by the second index, stream2sig deduces this from the width of the numpy array. The depth of the calculated signature is an argument to be chosen by the user. The ouput is a one dimensional array of numbers and is to be interpreted as the coefficients of the basis elements produced by sigkeys delivered in the same order.</p><p>The program as written will only do calculations that fit easily into 32 bit memory and will reject widths and depths that produce larger problems with an error message at the command line. This is to discourage exponentially large problems that hang your computer. The underlying C++ code is structured as a sparse tensor. It can handle much larger problems. The source code is available in the libalgebra folder in the PyPi source code file (the gz file).</p><p>The stream2\u2026 code is thread safe and parallelizing it can dramatically accelerate computations where many signatures need to be computed. All signature code works through massive memoisation so this thread safety should never be assumed without testing.</p></div><div class=\"section\" id=\"who-is-involved\"><h2>Who is Involved?<a class=\"headerlink\" href=\"#who-is-involved\" title=\"Permalink to this headline\">\u00b6</a></h2><p>Over the Summer of 2017, a team of interns worked on developing the <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> package to a point where it was ready to be shown to the world. The interns were working at the <a class=\"reference external\" href=\"http://www.turing.ac.uk/\">Alan Turing Institute</a>, London, England. They were supervised by Professor Terry Lyons of the Mathematical Institute, Oxford, and Dr Hao Ni of UCL.</p><p>We should note that the the underlying C++ libraries that allow <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> to exist have been developed by Professor Lyons and his colleagues and students over a number of years leading up to this internship. Without their hard work, this project would not exist as it is today. In a future revision of this documentation, we\u2019ll update this portion with the names of those who were involved.</p><p>For now though, here are the five people who have worked on developing <code class=\"docutils literal\"><span class=\"pre\">esig</span></code> in recent times.</p></div></div>           </div>           <div class=\"articleComments\">                       </div>          </div>          <footer>      <div class=\"rst-footer-buttons\" role=\"navigation\" aria-label=\"footer navigation\">              <a href=\"prerequisites.html\" class=\"btn btn-neutral float-right\" title=\"Prerequisites for the esig Package\" accesskey=\"n\" rel=\"next\">Next <span class=\"fa fa-arrow-circle-right\"></span></a>                </div>    <hr/>  <div role=\"contentinfo\">    <p>        &copy; Copyright 2017, David Maxwell and Terry Lyons.              <span class=\"commit\">          Revision <code>7654e868</code>.        </span>          </p>  </div>  Built with <a href=\"http://sphinx-doc.org/\">Sphinx</a> using a <a href=\"https://github.com/snide/sphinx_rtd_theme\">theme</a> provided by <a href=\"https://readthedocs.org\">Read the Docs</a>. </footer>        </div>      </div>    </section>  </div>    <div class=\"rst-versions\" data-toggle=\"rst-versions\" role=\"note\" aria-label=\"versions\">    <span class=\"rst-current-version\" data-toggle=\"rst-current-version\">      <span class=\"fa fa-book\"> Read the Docs</span>      v: latest      <span class=\"fa fa-caret-down\"></span>    </span>    <div class=\"rst-other-versions\">      <dl>        <dt>Versions</dt>                  <dd><a href=\"/en/latest/\">latest</a></dd>              </dl>      <dl>        <dt>Downloads</dt>                  <dd><a href=\"//esig.readthedocs.io/_/downloads/en/latest/pdf/\">pdf</a></dd>                  <dd><a href=\"//esig.readthedocs.io/_/downloads/en/latest/htmlzip/\">html</a></dd>                  <dd><a href=\"//esig.readthedocs.io/_/downloads/en/latest/epub/\">epub</a></dd>              </dl>      <dl>        <dt>On Read the Docs</dt>          <dd>            <a href=\"//readthedocs.org/projects/esig/?fromdocs=esig\">Project Home</a>          </dd>          <dd>            <a href=\"//readthedocs.org/builds/esig/?fromdocs=esig\">Builds</a>          </dd>      </dl>      <hr/>      Free document hosting provided by <a href=\"http://www.readthedocs.org\">Read the Docs</a>.    </div>  </div>      <script type=\"text/javascript\">        var DOCUMENTATION_OPTIONS = {            URL_ROOT:'./',            VERSION:'0.6',            COLLAPSE_INDEX:false,            FILE_SUFFIX:'.html',            HAS_SOURCE:  true,            SOURCELINK_SUFFIX: '.txt'        };    </script>      <script type=\"text/javascript\" src=\"_static/jquery.js\"></script>      <script type=\"text/javascript\" src=\"_static/underscore.js\"></script>      <script type=\"text/javascript\" src=\"_static/doctools.js\"></script>      <script type=\"text/javascript\" src=\"https://assets.readthedocs.org/static/javascript/readthedocs-doc-embed.js\"></script>      <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script>            <script type=\"text/javascript\">      jQuery(function () {          SphinxRtdTheme.StickyNav.enable();      });  </script>   </body></html>",
  "embeddings": []
}
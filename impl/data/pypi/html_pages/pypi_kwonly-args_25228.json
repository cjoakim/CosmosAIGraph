{
  "libtype": "pypi",
  "libname": "kwonly-args",
  "url": "https://pypi.org/project/kwonly-args/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>kwonly-args \u00b7 PyPI</title>    <meta name=\"description\" content=\"Python2 keyword-only argument emulation as a decorator. Python 3 compatible.\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for kwonly-args\" href=\"/rss/project/kwonly-args/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/kwonly-args/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/kwonly-args/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"kwonly-args\">    <meta property=\"og:description\" content=\"Python2 keyword-only argument emulation as a decorator. Python 3 compatible.\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/pasztorpisti/kwonly-args\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:pasztorpisti/kwonly-args+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        kwonly-args 1.0.10      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install kwonly-args</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/kwonly-args/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2016-04-12T00:40:23+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 12, 2016</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/kwonly-args\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Python2 keyword-only argument emulation as a decorator. Python 3 compatible.</p><div data-html-include=\"/_includes/edit-project-button/kwonly-args\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for kwonly-args\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/pasztorpisti/kwonly-args\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/kwonly-args\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (MIT)</p>    <p><strong>Author:</strong> <a href=\"mailto:pasztorpisti@gmail.com\">Istv\u00e1n P\u00e1sztor</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      kwonly,    </span>    <span class=\"package-keyword\">      keyword,    </span>    <span class=\"package-keyword\">      only,    </span>    <span class=\"package-keyword\">      arguments,    </span>    <span class=\"package-keyword\">      args,    </span>    <span class=\"package-keyword\">      decorator    </span>  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/pasztorpisti/\" aria-label=\"pasztorpisti\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/f11410c92402373438fa198023adf1e72ecf4de0/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f66386630373565343833373132306433356338663633393366323036636530313f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for pasztorpisti from gravatar.com\" title=\"Avatar for pasztorpisti from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            pasztorpisti          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2\">            Python :: 2          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+CPython\">            Python :: Implementation :: CPython          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+PyPy\">            Python :: Implementation :: PyPy          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries+%3A%3A+Python+Modules\">            Software Development :: Libraries :: Python Modules          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for kwonly-args\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <a href=\"https://travis-ci.org/pasztorpisti/kwonly-args\" rel=nofollow><img alt=build src=\"https://pypi-camo.freetls.fastly.net/d20929b0264a539d0bf2da4c7bc07a310d3832d0/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7061737a746f7270697374692f6b776f6e6c792d617267732e7376673f7374796c653d666c6174\"></a><a href=\"https://www.codacy.com/app/pasztorpisti/kwonly-args\" rel=nofollow><img alt=\"code quality\" src=\"https://pypi-camo.freetls.fastly.net/ac1e0ccc7a5bf2687c16731157510162af4c6f99/68747470733a2f2f696d672e736869656c64732e696f2f636f646163792f31613335393531323039343734366165396433396532383163646263353831612f6d61737465722e7376673f7374796c653d666c6174\"></a><a href=\"https://landscape.io/github/pasztorpisti/kwonly-args/master\" rel=nofollow><img alt=\"code health\" src=\"https://pypi-camo.freetls.fastly.net/4afd749b5688367020f60db069f935428a8ac9d4/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f7061737a746f7270697374692f6b776f6e6c792d617267732f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a><a href=\"https://coveralls.io/r/pasztorpisti/kwonly-args?branch=master\" rel=nofollow><img alt=coverage src=\"https://pypi-camo.freetls.fastly.net/d8bb8d1851902c0aa110a3ace6830423f2c2bff0/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f7061737a746f7270697374692f6b776f6e6c792d617267732f6d61737465722e7376673f7374796c653d666c6174\"></a><a href=\"https://pypi.python.org/pypi/kwonly-args\" rel=nofollow><img alt=pypi src=\"https://pypi-camo.freetls.fastly.net/040bdf26ef0e4844fc740f791057adc3cdd0dc4d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6b776f6e6c792d617267732e7376673f7374796c653d666c6174\"></a><a href=\"https://github.com/pasztorpisti/kwonly-args\" rel=nofollow><img alt=github src=\"https://pypi-camo.freetls.fastly.net/988ada7a7725f0252bdf7bc3dc64ea1559bb1f1f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f7061737a746f7270697374692f6b776f6e6c792d617267732e7376673f7374796c653d666c6174\"></a><a href=\"https://github.com/pasztorpisti/kwonly-args/blob/master/LICENSE.txt\" rel=nofollow><img alt=\"license: MIT\" src=\"https://pypi-camo.freetls.fastly.net/558a79520c03361af41e46a339fc61f33a4df07c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f7061737a746f7270697374692f6b776f6e6c792d617267732e7376673f7374796c653d666c6174\"></a><p>Providing keyword-only argument emulation for python2. The resulting code is python3 compatible.</p><p>You have to read only the short <a href=#usage rel=nofollow>Usage</a> section of the document to get started, the rest is optional for curious people andbored time billionaires.</p><nav class=contents id=contents><p class=topic-title>Contents</p><ul class=simple><li><p><a href=#usage id=toc-entry-1 rel=nofollow>Usage</a></p><ul><li><p><a href=#installation id=toc-entry-2 rel=nofollow>Installation</a></li><li><p><a href=#brief-how-to-with-code-examples id=toc-entry-3 rel=nofollow>Brief how-to with code examples</a></li></ul></li><li><p><a href=#code-style-design-why-use-keyword-only-arguments id=toc-entry-4 rel=nofollow>Code style/design: why use keyword-only arguments?</a></p><ul><li><p><a href=#code-readability id=toc-entry-5 rel=nofollow>Code readability</a></li><li><p><a href=#easier-maintenance-and-refactorization id=toc-entry-6 rel=nofollow>Easier maintenance and refactorization</a></li></ul></li><li><p><a href=#implementation-details id=toc-entry-7 rel=nofollow>Implementation details</a></p><ul><li><p><a href=#python-2-function-signature-anatomy id=toc-entry-8 rel=nofollow>Python 2 function signature anatomy</a></p><ul><li><p><a href=#emulated-keyword-only-args-vs-static-analyzers id=toc-entry-9 rel=nofollow>Emulated keyword-only args VS static analyzers</a></li></ul></li><li><p><a href=#poor-man-s-python2-keyword-only-arguments id=toc-entry-10 rel=nofollow>Poor man\u2019s python2 keyword-only arguments</a></li></ul></li><li><p><a href=#why-does-this-library-exist id=toc-entry-11 rel=nofollow>Why does this \u201clibrary\u201d exist?</a></li></ul></nav><section id=usage><h2><a href=#toc-entry-1 rel=nofollow>Usage</a></h2><section id=installation><h3><a href=#toc-entry-2 rel=nofollow>Installation</a></h3><pre><code>pip<span class=w> </span>install<span class=w> </span>kwonly-args</code></pre><p>Alternatively you can download the zipped library from <a href=\"https://pypi.python.org/pypi/kwonly-args\" rel=nofollow>https://pypi.python.org/pypi/kwonly-args</a></p></section><section id=brief-how-to-with-code-examples><h3><a href=#toc-entry-3 rel=nofollow>Brief how-to with code examples</a></h3><p>With this library you can turn some or all of the default arguments of your function into keyword-only arguments.</p><ul class=simple><li><p>Decorate your function with <span class=\"docutils literal\">kwonly_args.first_kwonly_arg</span> and select one of the default arguments of your functionwith the <span class=\"docutils literal\">name</span> parameter of the decorator. The selected argument along with all default arguments on its rightside will be treated as keyword-only arguments.</li><li><p>All keyword-only arguments have a default value and they aren\u2019t required args by default. You can make akeyword-only argument required by using <span class=\"docutils literal\">kwonly_args.KWONLY_REQUIRED</span> as its default value.</li></ul><p>Your new-born keyword-only args are no longer treated as positional arguments and varargs still work if your functionhas <span class=\"docutils literal\">*args</span> or something like that.</p><pre><code><span class=kn>from</span> <span class=nn>kwonly_args</span> <span class=kn>import</span> <span class=n>first_kwonly_arg</span><span class=p>,</span> <span class=n>KWONLY_REQUIRED</span><span class=w></span><span class=c1># This turns default1 and default2 into keyword-only arguments.</span><span class=w></span><span class=c1># They are no longer handled as positional arguments.</span><span class=w></span><span class=nd>@first_kwonly_arg</span><span class=p>(</span><span class=s1>'default1'</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>func</span><span class=p>(</span><span class=n>arg0</span><span class=p>,</span> <span class=n>arg1</span><span class=p>,</span> <span class=n>default0</span><span class=o>=</span><span class=s1>'d0'</span><span class=p>,</span> <span class=n>default1</span><span class=o>=</span><span class=s1>'d1'</span><span class=p>,</span> <span class=n>default2</span><span class=o>=</span><span class=s1>'d2'</span><span class=p>,</span> <span class=o>*</span><span class=n>args</span><span class=p>):</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=s1>'arg0=</span><span class=si>%s</span><span class=s1> arg1=</span><span class=si>%s</span><span class=s1> default0=</span><span class=si>%s</span><span class=s1> default1=</span><span class=si>%s</span><span class=s1> default2=</span><span class=si>%s</span><span class=s1> args=</span><span class=si>%s</span><span class=s1>'</span> <span class=o>%</span> <span class=p>(</span><span class=w></span>          <span class=n>arg0</span><span class=p>,</span> <span class=n>arg1</span><span class=p>,</span> <span class=n>default0</span><span class=p>,</span> <span class=n>default1</span><span class=p>,</span> <span class=n>default2</span><span class=p>,</span> <span class=n>args</span><span class=p>))</span><span class=w></span><span class=n>func</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>)</span><span class=w></span><span class=c1># Output:</span><span class=w></span><span class=c1># arg0=0 arg1=1 default0=2 default1=d1 default=d2 args=(3, 4)</span><span class=w></span><span class=c1># The default1 and default2 args can be passed only as keyword arguments:</span><span class=w></span><span class=n>func</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>,</span> <span class=n>default1</span><span class=o>=</span><span class=s1>'kwonly_param'</span><span class=p>)</span><span class=w></span><span class=c1># Output:</span><span class=w></span><span class=c1># arg0=0 arg1=1 default0=2 default1=kwonly_param default=d2 args=(3, 4)</span><span class=w></span><span class=c1># In this example all three args are keyword-only args and default1 is required.</span><span class=w></span><span class=nd>@first_kwonly_arg</span><span class=p>(</span><span class=s1>'default0'</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>func2</span><span class=p>(</span><span class=n>default0</span><span class=o>=</span><span class=s1>'d0'</span><span class=p>,</span> <span class=n>default1</span><span class=o>=</span><span class=n>KWONLY_REQUIRED</span><span class=p>,</span> <span class=n>default2</span><span class=o>=</span><span class=s1>'d2'</span><span class=p>):</span><span class=w></span>    <span class=o>...</span></code></pre><p>You can also decorate class methods (including both old and new style classes):</p><pre><code><span class=kn>from</span> <span class=nn>kwonly_args</span> <span class=kn>import</span> <span class=n>first_kwonly_arg</span><span class=w></span><span class=k>class</span> <span class=nc>MyClass</span><span class=p>:</span><span class=w></span>    <span class=c1># turning d1 and d2 into keyword-only arguments</span><span class=w></span>    <span class=nd>@first_kwonly_arg</span><span class=p>(</span><span class=s1>'d1'</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>my_instance_method</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>a0</span><span class=p>,</span> <span class=n>a1</span><span class=p>,</span> <span class=n>d0</span><span class=o>=</span><span class=s1>'d0'</span><span class=p>,</span> <span class=n>d1</span><span class=o>=</span><span class=s1>'d1'</span><span class=p>,</span> <span class=n>d2</span><span class=o>=</span><span class=s1>'d2'</span><span class=p>,</span> <span class=o>*</span><span class=n>args</span><span class=p>):</span><span class=w></span>        <span class=o>...</span><span class=w></span>    <span class=c1># You have to apply @first_kwonly_arg before @classmethod!</span><span class=w></span>    <span class=nd>@classmethod</span><span class=w></span>    <span class=nd>@first_kwonly_arg</span><span class=p>(</span><span class=s1>'d1'</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>my_class_method</span><span class=p>(</span><span class=bp>cls</span><span class=p>,</span> <span class=n>a0</span><span class=p>,</span> <span class=n>a1</span><span class=p>,</span> <span class=n>d0</span><span class=o>=</span><span class=s1>'d0'</span><span class=p>,</span> <span class=n>d1</span><span class=o>=</span><span class=s1>'d1'</span><span class=p>,</span> <span class=n>d2</span><span class=o>=</span><span class=s1>'d2'</span><span class=p>,</span> <span class=o>*</span><span class=n>args</span><span class=p>):</span><span class=w></span>        <span class=o>...</span><span class=w></span>    <span class=c1># You have to apply @first_kwonly_arg before @staticmethod!</span><span class=w></span>    <span class=nd>@staticmethod</span><span class=w></span>    <span class=nd>@first_kwonly_arg</span><span class=p>(</span><span class=s1>'d1'</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>my_static_method</span><span class=p>(</span><span class=n>a0</span><span class=p>,</span> <span class=n>a1</span><span class=p>,</span> <span class=n>d0</span><span class=o>=</span><span class=s1>'d0'</span><span class=p>,</span> <span class=n>d1</span><span class=o>=</span><span class=s1>'d1'</span><span class=p>,</span> <span class=n>d2</span><span class=o>=</span><span class=s1>'d2'</span><span class=p>,</span> <span class=o>*</span><span class=n>args</span><span class=p>):</span><span class=w></span>        <span class=o>...</span></code></pre><p>If you want to turn all default arguments into keyword-only arguments then the following convenience API may be useful:</p><pre><code><span class=kn>from</span> <span class=nn>kwonly_args</span> <span class=kn>import</span> <span class=n>first_kwonly_arg</span><span class=p>,</span> <span class=n>FIRST_DEFAULT_ARG</span><span class=p>,</span> <span class=n>kwonly_defaults</span><span class=w></span><span class=c1># The FIRST_DEFAULT_ARG constant automatically selects the first default</span><span class=w></span><span class=c1># argument (default0) so it turns all default arguments into keyword-only.</span><span class=w></span><span class=nd>@first_kwonly_arg</span><span class=p>(</span><span class=n>FIRST_DEFAULT_ARG</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>func</span><span class=p>(</span><span class=n>arg0</span><span class=p>,</span> <span class=n>arg1</span><span class=p>,</span> <span class=n>default0</span><span class=o>=</span><span class=s1>'d0'</span><span class=p>,</span> <span class=n>default1</span><span class=o>=</span><span class=s1>'d1'</span><span class=p>,</span> <span class=o>*</span><span class=n>args</span><span class=p>):</span><span class=w></span>    <span class=o>...</span><span class=w></span><span class=c1># As an equivalent shortcut you can use @kwonly_defaults.</span><span class=w></span><span class=nd>@kwonly_defaults</span><span class=w></span><span class=k>def</span> <span class=nf>func</span><span class=p>(</span><span class=n>arg0</span><span class=p>,</span> <span class=n>arg1</span><span class=p>,</span> <span class=n>default0</span><span class=o>=</span><span class=s1>'d0'</span><span class=p>,</span> <span class=n>default1</span><span class=o>=</span><span class=s1>'d1'</span><span class=p>,</span> <span class=o>*</span><span class=n>args</span><span class=p>):</span><span class=w></span>    <span class=o>...</span></code></pre></section></section><section id=code-style-design-why-use-keyword-only-arguments><h2><a href=#toc-entry-4 rel=nofollow>Code style/design: why use keyword-only arguments?</a></h2><p>You may have an understanding of this topic. If not then read along.Using keyword-only arguments provides the following benefits:</p><section id=code-readability><h3><a href=#toc-entry-5 rel=nofollow>Code readability</a></h3><p>It can make code that calls your function more readable. This is especially true if you have several functions withlong argument lists like some of the python standard library APIs. For example <span class=\"docutils literal\">subprocess.Popen()</span> has more than10 arguments. <span class=\"docutils literal\">subprocess.Popen()</span> is a legacy function from python2 (so it couldn\u2019t make use of keyword-onlyarguments despite being a very good candidate for that) but some newer python3 APIs make use of keyword-onlyarguments with a good reason. For example the python3 <span class=\"docutils literal\">subprocess.run()</span> has about 10 arguments but onlythe first <span class=\"docutils literal\">argv</span> argument can be passed as positional, the rest are keyword-only.</p><pre><code><span class=k>def</span> <span class=nf>draw_circle</span><span class=p>(</span><span class=n>x</span><span class=p>,</span> <span class=n>y</span><span class=p>,</span> <span class=n>radius</span><span class=p>,</span> <span class=n>filled</span><span class=o>=</span><span class=kc>False</span><span class=p>):</span><span class=w></span>    <span class=o>...</span><span class=w></span><span class=k>def</span> <span class=nf>draw_ellipse</span><span class=p>(</span><span class=n>x</span><span class=p>,</span> <span class=n>y</span><span class=p>,</span> <span class=n>radius_x</span><span class=p>,</span> <span class=n>radius_y</span><span class=p>,</span> <span class=n>filled</span><span class=o>=</span><span class=kc>False</span><span class=p>):</span><span class=w></span>    <span class=o>...</span><span class=w></span><span class=c1># 1. calling without using keyword arguments:</span><span class=w></span><span class=n>draw_circle</span><span class=p>(</span><span class=mi>100</span><span class=p>,</span> <span class=mi>200</span><span class=p>,</span> <span class=mi>50</span><span class=p>,</span> <span class=kc>True</span><span class=p>)</span><span class=w></span><span class=n>draw_ellipse</span><span class=p>(</span><span class=mi>200</span><span class=p>,</span> <span class=mi>100</span><span class=p>,</span> <span class=mi>100</span><span class=p>,</span> <span class=mi>50</span><span class=p>)</span><span class=w></span><span class=c1># 2. calling using keyword arguments:</span><span class=w></span><span class=n>draw_circle</span><span class=p>(</span><span class=n>x</span><span class=o>=</span><span class=mi>100</span><span class=p>,</span> <span class=n>y</span><span class=o>=</span><span class=mi>200</span><span class=p>,</span> <span class=n>radius</span><span class=o>=</span><span class=mi>50</span><span class=p>,</span> <span class=n>filled</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=w></span><span class=n>draw_ellipse</span><span class=p>(</span><span class=n>x</span><span class=o>=</span><span class=mi>200</span><span class=p>,</span> <span class=n>y</span><span class=o>=</span><span class=mi>100</span><span class=p>,</span> <span class=n>radius_x</span><span class=o>=</span><span class=mi>100</span><span class=p>,</span> <span class=n>radius_y</span><span class=o>=</span><span class=mi>50</span><span class=p>)</span></code></pre><p>Without keyword-only arguments users of your function will be able to use both of the above conventions. If youemploy keyword-only arguments then they can use only #2. In case of a simple function like my <span class=\"docutils literal\">draw_circle()</span> itmay not seem reasonable enough to force keyword-only arguments. But imagine what happens if you start having manysimilar functions like <span class=\"docutils literal\">draw_ellpise()</span>, <span class=\"docutils literal\">draw_rectangle()</span>, etc.. and you have to read code that calls thesewithout keyword arguments with a bunch of listed numbers and bools mixed together as their input\u2026 The aboveexample in section #1 is relatively lightweight compared to what it can look in real life.</p><p>When a function has more than 3-4 arguments (like <span class=\"docutils literal\">subprocess.Popen()</span>) I think it is a very good practice toallow at most the first few (or none of the) arguments to be passed as positional ones and make the rest kw-only(like the standard python3 <span class=\"docutils literal\">subprocess.run()</span>).It isn\u2019t a problem if a function has a lot of parameters (especially default ones) as long as the code that callsthe function remains readable by using keyword argument passing and you can enforce/guarantee that by making themost of the arguments keyword-only:</p><pre><code><span class=kn>import</span> <span class=nn>subprocess</span><span class=w></span><span class=n>argv</span> <span class=o>=</span> <span class=p>[</span><span class=s1>'ls'</span><span class=p>,</span> <span class=s1>'-l'</span><span class=p>]</span><span class=w></span><span class=c1># BAD! I think I don't really have to explain why...</span><span class=w></span><span class=n>p</span> <span class=o>=</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>Popen</span><span class=p>(</span><span class=n>argv</span><span class=p>,</span> <span class=o>-</span><span class=mi>1</span><span class=p>,</span> <span class=kc>None</span><span class=p>,</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>PIPE</span><span class=p>,</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>PIPE</span><span class=p>,</span><span class=w></span>                     <span class=n>subprocess</span><span class=o>.</span><span class=n>STDOUT</span><span class=p>,</span> <span class=kc>None</span><span class=p>,</span> <span class=kc>True</span><span class=p>,</span> <span class=kc>True</span><span class=p>)</span><span class=w></span><span class=c1># GOOD! And this has the same behavior as the previous call.</span><span class=w></span><span class=c1># I think it is well worth enforcing this form with keyword-only args.</span><span class=w></span><span class=n>p</span> <span class=o>=</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>Popen</span><span class=p>(</span><span class=n>argv</span><span class=p>,</span> <span class=n>stdin</span><span class=o>=</span><span class=n>subprocess</span><span class=o>.</span><span class=n>PIPE</span><span class=p>,</span> <span class=n>stdout</span><span class=o>=</span><span class=n>subprocess</span><span class=o>.</span><span class=n>PIPE</span><span class=p>,</span><span class=w></span>                     <span class=n>stderr</span><span class=o>=</span><span class=n>subprocess</span><span class=o>.</span><span class=n>STDOUT</span><span class=p>,</span> <span class=n>shell</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=w></span><span class=c1># If the number of passed arguments exceeds my threshold</span><span class=w></span><span class=c1># I switch to the following format for readability:</span><span class=w></span><span class=n>p</span> <span class=o>=</span> <span class=n>subprocess</span><span class=o>.</span><span class=n>Popen</span><span class=p>(</span><span class=w></span>    <span class=n>argv</span><span class=p>,</span><span class=w></span>    <span class=n>stdin</span><span class=o>=</span><span class=n>subprocess</span><span class=o>.</span><span class=n>PIPE</span><span class=p>,</span><span class=w></span>    <span class=n>stdout</span><span class=o>=</span><span class=n>subprocess</span><span class=o>.</span><span class=n>PIPE</span><span class=p>,</span><span class=w></span>    <span class=n>stderr</span><span class=o>=</span><span class=n>subprocess</span><span class=o>.</span><span class=n>STDOUT</span><span class=p>,</span><span class=w></span>    <span class=n>shell</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span><span class=w></span><span class=p>)</span></code></pre></section><section id=easier-maintenance-and-refactorization><h3><a href=#toc-entry-6 rel=nofollow>Easier maintenance and refactorization</a></h3><p>Keyword-only args have an extremely useful property: you can declare them in any order in your function signature andthe code that calls your function can also pass them in any order.Later you can change the order of declaration of your keyword-only arguments for cosmetic and readability reasonswithout affecting behavior and without having to refactor code that calls this function. This comes in handy not onlyin case of code cosmetics but also makes it easier to add new keyword-only args and to remove old ones if necessary.Let\u2019s review these scenarios with code examples.</p><p>Imagine a scenario where you have a <span class=\"docutils literal\">draw_circle(x, y, radius, outline_color=black, filled=False, fill_color=None)</span>function. It already looks bad enough without keyword-only args. Let\u2019s imagine that someone asks you to add an<cite>outline_width</cite> argument. Since all parameters can be passed as positional arguments you have to keep backwardcompatibility and you have to append this argument to the end of the current arg list with a default value. Thisintroduces another ugly thing: the arguments that belong to the outline aren\u2019t adjacent. There will be two unrelatedargs between <span class=\"docutils literal\">outline_color</span> and the newly added <span class=\"docutils literal\">outline_width</span>. If these args were keyword-only arguments thenthe arbitrary argument order would allow you to insert the new <span class=\"docutils literal\">outline_width</span> arg right after <span class=\"docutils literal\">outline_color</span>.</p><p>Another typical and similar scenario is having a function that makes use of 2 or more other functions. For this reasonit receives input args and passes them through to the two other functions. Let\u2019s say you start out with something likethis at the beginning of your project:</p><pre><code><span class=c1># lower level workhorse functions used by the higher level ``my_func()``</span><span class=w></span><span class=k>def</span> <span class=nf>workhorse1</span><span class=p>(</span><span class=n>wh1_1</span><span class=p>,</span> <span class=n>wh1_2</span><span class=p>):</span><span class=w></span>    <span class=o>...</span><span class=w></span><span class=k>def</span> <span class=nf>workhorse2</span><span class=p>(</span><span class=n>wh2_1</span><span class=p>,</span> <span class=n>wh2_2</span><span class=p>):</span><span class=w></span>    <span class=o>...</span><span class=w></span><span class=c1># And your function looks like this</span><span class=w></span><span class=k>def</span> <span class=nf>my_func</span><span class=p>(</span><span class=n>wh1_1</span><span class=p>,</span> <span class=n>wh2_1</span><span class=p>,</span> <span class=n>wh2_2</span><span class=p>):</span><span class=w></span>    <span class=c1># TODO: perhaps manipulate the input args...</span><span class=w></span>    <span class=n>workhorse1</span><span class=p>(</span><span class=n>wh1_1</span><span class=p>,</span> <span class=mi>8</span><span class=p>)</span><span class=w></span>    <span class=n>workhorse2</span><span class=p>(</span><span class=n>wh2_1</span><span class=p>,</span> <span class=n>wh2_2</span><span class=p>)</span></code></pre><p>Then for some reason someone introduces a new <span class=\"docutils literal\">wh1_3</span> parameter for <span class=\"docutils literal\">workhorse1()</span> and you have to pass it throughyour higher level <span class=\"docutils literal\">my_func()</span>. It will look like this:</p><pre><code><span class=c1># One arg for wh1, then two args for wh2 and then another arg for wh1... Nice.</span><span class=w></span><span class=k>def</span> <span class=nf>my_func</span><span class=p>(</span><span class=n>wh1_1</span><span class=p>,</span> <span class=n>wh2_1</span><span class=p>,</span> <span class=n>wh2_2</span><span class=p>,</span> <span class=n>wh1_3</span><span class=p>):</span><span class=w></span>    <span class=c1># TODO: perhaps manipulate the input args...</span><span class=w></span>    <span class=n>workhorse1</span><span class=p>(</span><span class=n>wh1_1</span><span class=p>,</span> <span class=mi>8</span><span class=p>)</span><span class=w></span>    <span class=n>workhorse2</span><span class=p>(</span><span class=n>wh2_1</span><span class=p>,</span> <span class=n>wh2_2</span><span class=p>)</span></code></pre><p>In python you can avoid such scenarios by passing such arguments in <span class=\"docutils literal\">**kwargs</span> or in separate dictionaries but itoften makes the code less explicit and readable:</p><pre><code><span class=c1># It is more difficult to find out what's going on with ``*args``</span><span class=w></span><span class=c1># and ``**kwargs`` then with explicitly named arguments.</span><span class=w></span><span class=k>def</span> <span class=nf>my_func</span><span class=p>(</span><span class=o>**</span><span class=n>kwargs</span><span class=p>):</span><span class=w></span>    <span class=c1># Let the workhorses to cherry pick the parameters they</span><span class=w></span>    <span class=c1># need and ignore the rest that they don't need.</span><span class=w></span>    <span class=n>workhorse1</span><span class=p>(</span><span class=o>**</span><span class=n>kwargs</span><span class=p>)</span><span class=w></span>    <span class=n>workhorse2</span><span class=p>(</span><span class=o>**</span><span class=n>kwargs</span><span class=p>)</span></code></pre><p>You can also use two separate dictionaries or data objects to pass the arguments to the workhorses. This techniqueis better than keyword only argument passing when the workhorses have a lot of parameters and/or you have to passthe arguments deeply through several calls but this solution is an an overkill in many simpler situations where thenumber of parameters isn\u2019t too high and there is no deep arg passing:</p><pre><code><span class=k>def</span> <span class=nf>my_func</span><span class=p>(</span><span class=n>wh1_args</span><span class=p>,</span> <span class=n>wh2_args</span><span class=p>):</span><span class=w></span>    <span class=c1># TODO: perhaps manipulate the input args...</span><span class=w></span>    <span class=n>workhorse1</span><span class=p>(</span><span class=n>wh1_args</span><span class=p>)</span><span class=w></span>    <span class=n>workhorse2</span><span class=p>(</span><span class=n>wh2_args</span><span class=p>)</span></code></pre><p>With keyword-only arguments the above problems don\u2019t exist. The new <cite>wh1_3</cite> argument can be placed anywhere in thekeyword-only argument part of the argument list (e.g.: after <span class=\"docutils literal\">wh1_1</span>) without affecting the rest of the code thatalready calls this functions with other keyword-only args (given that they don\u2019t want to use the newly added arg).</p></section></section><section id=implementation-details><h2><a href=#toc-entry-7 rel=nofollow>Implementation details</a></h2><section id=python-2-function-signature-anatomy><h3><a href=#toc-entry-8 rel=nofollow>Python 2 function signature anatomy</a></h3><p>A python2 function signature consists of the following optional parts. Any optional parts that are present ina function signature appear in the listed order:</p><ol><li><p>Positional arguments</p><ol><li><p>Required arguments (positional arguments without default value)</li><li><p>Default arguments (positional arguments with default value)</li><li><p><strong>Keyword-only arguments (non-standard, emulated/provided by this library)</strong></li></ol></li><li><p>VarArgs (<span class=\"docutils literal\">*args</span>)</li><li><p>VarKWArgs (<span class=\"docutils literal\">**kwargs</span>)</li></ol><p>As you see in standard python2 your positional argument list consists of zero or more required arguments followed byzero or more default arguments. This library can turn the last N default arguments (all/some of them) into keyword-onlyarguments. With the help of this library you can now split the positional argument list of your python2 functionsignatures into 3 parts instead of the standard 2.</p><p>In python3 the keyword-only arguments reside between VarArgs and VarKWArgs but in python2 you can\u2019t put anythingbetween those (it would be a syntax error) so your best bet to emulate keyword-only arguments is turning some of yourpositional arguments into keyword-only args.</p><section id=emulated-keyword-only-args-vs-static-analyzers><h4><a href=#toc-entry-9 rel=nofollow>Emulated keyword-only args VS static analyzers</a></h4><p>As discussed previously unfortunately we can declare our emulated python2 keyword-only arguments only before theVarArgs (<span class=\"docutils literal\">*args</span>) of the function. This means that our signature can have positional arguments not only before ourkeyword-only args, but also after them (because VarArgs are positional). This may lead to false-positivewarnings/errors with static analyzers in the following case:</p><p>If you have a function with both keyword-only arguments and VarArgs then static analyzers may treat someof the calls to this function suspicious (resulting in a false positive warning/error).</p><pre><code><span class=nd>@first_kwonly_arg</span><span class=p>(</span><span class=s1>'ko0'</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>func</span><span class=p>(</span><span class=n>a0</span><span class=p>,</span> <span class=n>d0</span><span class=o>=-</span><span class=mi>1</span><span class=p>,</span> <span class=n>ko0</span><span class=o>=-</span><span class=mi>1</span><span class=p>,</span> <span class=n>ko1</span><span class=o>=-</span><span class=mi>1</span><span class=p>,</span> <span class=o>*</span><span class=n>args</span><span class=p>):</span><span class=w></span>    <span class=o>...</span><span class=w></span><span class=c1># No problem: a0=0</span><span class=w></span><span class=n>func</span><span class=p>(</span><span class=mi>0</span><span class=p>)</span><span class=w></span><span class=c1># No problem: a0=0, d0=1</span><span class=w></span><span class=n>func</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=w></span><span class=c1># No problem: a0=0 d0=1 args=(2,)</span><span class=w></span><span class=n>func</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=w></span><span class=c1># The static analyzer will probably treat this as an error. It thinks that</span><span class=w></span><span class=c1># you pass both the positional argument 2 and ko0=3 to the ko0 arg of the</span><span class=w></span><span class=c1># function because it can't track down the magic done by the @first_kwonly_arg</span><span class=w></span><span class=c1># decorator and binds the passed parameters to the function args using standard</span><span class=w></span><span class=c1># python2 rules. If func() didn't have our @first_kwonly_arg decorator then</span><span class=w></span><span class=c1># this function call would probably cause an error like:</span><span class=w></span><span class=c1># TypeError: func() got multiple values for argument 'ko0'</span><span class=w></span><span class=c1>#</span><span class=w></span><span class=c1># However what actually happens as a result of the magic done by the</span><span class=w></span><span class=c1># decorator is: a0=0 d0=1 ko0=3 ko1=-1 args=(2,)</span><span class=w></span><span class=c1># The decorator ensures that positional parameters passed by function calls</span><span class=w></span><span class=c1># are bound only to positional non-keyword-only arguments and the VarArgs</span><span class=w></span><span class=c1># of the function.</span><span class=w></span><span class=n>func</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=n>ko0</span><span class=o>=</span><span class=mi>3</span><span class=p>)</span><span class=w></span><span class=c1># No problem despite the fact that the static analyzer probably assumes</span><span class=w></span><span class=c1># something different than what actually happens. According to standard</span><span class=w></span><span class=c1># python2 arg binding rules the static analyzer probably thinks that:</span><span class=w></span><span class=c1># a0=0 d0=1 ko0=2 ko1=3 args=()</span><span class=w></span><span class=c1>#</span><span class=w></span><span class=c1># However the actual outcome caused by our decorator is:</span><span class=w></span><span class=c1># a0=0 d0=1 ko0=-1 ko1=3 args=(2,)</span><span class=w></span><span class=n>func</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=n>ko1</span><span class=o>=</span><span class=mi>3</span><span class=p>)</span></code></pre><p>Despite the above issue a decorator like this can still be very useful. The reason for this is that for me it happensquite rarely that in a function I need both keyword-only arguments and VarArgs. I need VarArgs quite rarely in generalwhile keyword-only arguments come in handy quite often. If this is the same for you then go on using this decorator inyour python2 projects and in the rare cases where you need both keyword-only arguments and VarArgs use one of thefollowing workarounds to aid this issue:</p><ul class=simple><li><p>Static analyzers are stupid! Don\u2019t use them! (Well, this was only a joke. :-D)</li><li><p>In your static analyzer tool or service ignore the individual instances of these false positive warnings.</li><li><p>Use <a href=#poor-man-s-python2-keyword-only-arguments rel=nofollow>Poor man\u2019s python2 keyword-only arguments</a> with these problematic cases instead of decorating them and use thedecorator only with the rest (probably the majority) of the functions that don\u2019t have VarArgs.</li></ul></section></section><section id=poor-man-s-python2-keyword-only-arguments><h3><a href=#toc-entry-10 rel=nofollow>Poor man\u2019s python2 keyword-only arguments</a></h3><p>I really like the benefits brought by keyword-only arguments. Long ago before extensively working with python I\u2019vealready forged some coding-convention rules that have similar advantages (unordered arguments, specifying arg nameswhile calling the function for readability) in other languages (e.g.: C/C++). Before thinking about using a python2solution like the one provided by this library I\u2019ve used a \u201cmanually implemented poor man\u2019s python2 keyword-only args\u201dsolution like this:</p><pre><code><span class=k>def</span> <span class=nf>func</span><span class=p>(</span><span class=n>arg0</span><span class=p>,</span> <span class=n>arg1</span><span class=p>,</span> <span class=n>default0</span><span class=o>=</span><span class=s1>'d0'</span><span class=p>,</span> <span class=n>default1</span><span class=o>=</span><span class=s1>'d1'</span><span class=p>,</span> <span class=o>**</span><span class=n>kwargs</span><span class=p>):</span><span class=w></span>    <span class=c1># Keyword-only arg with a default value:</span><span class=w></span>    <span class=n>optional_kwonly0</span> <span class=o>=</span> <span class=n>kwargs</span><span class=o>.</span><span class=n>pop</span><span class=p>(</span><span class=s1>'kwonly0'</span><span class=p>,</span> <span class=s1>'ko0'</span><span class=p>)</span><span class=w></span>    <span class=c1># Required keyword-only arg:</span><span class=w></span>    <span class=n>required_kwonly1</span> <span class=o>=</span> <span class=n>kwargs</span><span class=o>.</span><span class=n>pop</span><span class=p>(</span><span class=s1>'kwonly1'</span><span class=p>)</span><span class=w></span>    <span class=c1># Checking whether the caller has passed an unexpected keyword argument.</span><span class=w></span>    <span class=c1># Sometimes passing an unexpected keyword argument is simply the result</span><span class=w></span>    <span class=c1># of a typo in the name of an expected arg. E.g.: kwnly0 instead of kwonly0</span><span class=w></span>    <span class=n>check_no_kwargs_left</span><span class=p>(</span><span class=n>func</span><span class=p>,</span> <span class=n>kwargs</span><span class=p>)</span><span class=w></span>    <span class=c1># ... the rest of the function body</span><span class=w></span><span class=c1># utility function far away somewhere in a central place...</span><span class=w></span><span class=k>def</span> <span class=nf>check_no_kwargs_left</span><span class=p>(</span><span class=n>func_or_func_name</span><span class=p>,</span> <span class=n>kwargs</span><span class=p>):</span><span class=w></span>    <span class=k>if</span> <span class=ow>not</span> <span class=n>kwargs</span><span class=p>:</span><span class=w></span>        <span class=k>return</span><span class=w></span>    <span class=n>func_name</span> <span class=o>=</span> <span class=n>func_or_func_name</span><span class=o>.</span><span class=vm>__name__</span> <span class=k>if</span> <span class=nb>callable</span><span class=p>(</span><span class=n>func_or_func_name</span><span class=p>)</span> <span class=k>else</span> <span class=n>func_or_func_name</span><span class=w></span>    <span class=n>arg_names</span> <span class=o>=</span> <span class=s1>', '</span><span class=o>.</span><span class=n>join</span><span class=p>(</span><span class=nb>repr</span><span class=p>(</span><span class=n>k</span><span class=p>)</span> <span class=k>for</span> <span class=n>k</span> <span class=ow>in</span> <span class=nb>sorted</span><span class=p>(</span><span class=n>kwargs</span><span class=o>.</span><span class=n>keys</span><span class=p>()))</span><span class=w></span>    <span class=k>raise</span> <span class=ne>TypeError</span><span class=p>(</span><span class=s1>'</span><span class=si>%s</span><span class=s1>() got unexpected keyword argument(s): </span><span class=si>%s</span><span class=s1>'</span> <span class=o>%</span> <span class=p>(</span><span class=n>func_name</span><span class=p>,</span> <span class=n>arg_names</span><span class=p>))</span></code></pre><p>While I think the above solution if fairly good it still requires checking the function body too in order to see thefull signature and sometimes people may forget to check for leftover kwargs after popping the kwonly args.</p></section></section><section id=why-does-this-library-exist><h2><a href=#toc-entry-11 rel=nofollow>Why does this \u201clibrary\u201d exist?</a></h2><p>I\u2019ve checked out some other python2 keyword-only argument emulator code snippets and decided to roll my own just forfun and also for the following reasons:</p><ul class=simple><li><p>Some of those implementations provide you with a decorator with which you have to specify your keyword-only argumentswith their (usually zero based) index in the arg list of the function. This is error prone, I never liked theidea of identifying arguments with indexes. The only minor disadvantage of using arg names instead of arg indexesis that using arg names requires direct access to the signature of the <em>original</em> wrapped function.If there are other decorators between our decorator and the original function then under python2 using names isn\u2019treally possible (because <span class=\"docutils literal\">functools.update_wrapper()</span> and decorators in general don\u2019t have/support the<span class=\"docutils literal\">__wrapped__</span> attribute to maintain a chain back to the originally wrapped function).</li><li><p>Some implementations allow you to pick an arbitrary set of positional arguments by specifying their indexes or names.I don\u2019t like the idea of promoting arbitrary positional arguments into keyword-only arguments by scatteringkeyword-only args through the remaining positional args. It degrades code readability a lot. This is why I decidedto keep positional arguments of the same type (required/default/kwonly) together in a well defined slice of thepositional argument list.</li><li><p><a href=\"https://github.com/pasztorpisti/kwonly-args/blob/7603c3a0f0c2d37d02c7220492de248f65ff0451/src/kwonly_args/__init__.py#L76-L118\" rel=nofollow>The implementation of this solution</a> is brief (~40 lines of logic), simple, and well tested.</li></ul></section>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/pasztorpisti/kwonly-args\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/kwonly-args\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (MIT)</p>    <p><strong>Author:</strong> <a href=\"mailto:pasztorpisti@gmail.com\">Istv\u00e1n P\u00e1sztor</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      kwonly,    </span>    <span class=\"package-keyword\">      keyword,    </span>    <span class=\"package-keyword\">      only,    </span>    <span class=\"package-keyword\">      arguments,    </span>    <span class=\"package-keyword\">      args,    </span>    <span class=\"package-keyword\">      decorator    </span>  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/pasztorpisti/\" aria-label=\"pasztorpisti\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/f11410c92402373438fa198023adf1e72ecf4de0/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f66386630373565343833373132306433356338663633393366323036636530313f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for pasztorpisti from gravatar.com\" title=\"Avatar for pasztorpisti from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            pasztorpisti          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2\">            Python :: 2          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+CPython\">            Python :: Implementation :: CPython          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+PyPy\">            Python :: Implementation :: PyPy          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries+%3A%3A+Python+Modules\">            Software Development :: Libraries :: Python Modules          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/kwonly-args/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/kwonly-args/1.0.10/\">                <p class=\"release__version\">                  1.0.10                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-12T00:40:23+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 12, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/kwonly-args/1.0.9/\">                <p class=\"release__version\">                  1.0.9                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-10T07:50:52+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 10, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/kwonly-args/1.0.8/\">                <p class=\"release__version\">                  1.0.8                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-09T15:24:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 9, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/kwonly-args/1.0.7/\">                <p class=\"release__version\">                  1.0.7                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-09T12:51:30+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 9, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/kwonly-args/1.0.6/\">                <p class=\"release__version\">                  1.0.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-08T21:08:39+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 8, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/kwonly-args/1.0.5/\">                <p class=\"release__version\">                  1.0.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-08T17:52:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 8, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/kwonly-args/1.0.4/\">                <p class=\"release__version\">                  1.0.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-08T12:52:45+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 8, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/kwonly-args/1.0.3/\">                <p class=\"release__version\">                  1.0.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-08T12:13:51+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 8, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/kwonly-args/1.0.2/\">                <p class=\"release__version\">                  1.0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-08T11:33:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 8, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/kwonly-args/1.0.1/\">                <p class=\"release__version\">                  1.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-08T03:36:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 8, 2016</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/kwonly-args/1.0.0/\">                <p class=\"release__version\">                  1.0.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-08T02:01:10+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 8, 2016</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/ee/da/a7ba4f2153a536a895a9d29a222ee0f138d617862f9b982bd4ae33714308/kwonly-args-1.0.10.tar.gz\">          kwonly-args-1.0.10.tar.gz        </a>        (19.9 kB        <a href=\"#copy-hash-modal-bd89adb7-78b1-4ffe-8f54-6055f909f0bb\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2016-04-12T00:40:33+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 12, 2016</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/00/37/3251dc1c11f5e9c4b8fb1b3f433da4b55ec52e3fe5c14b13a2a558990260/kwonly_args-1.0.10-py2.py3-none-any.whl\">          kwonly_args-1.0.10-py2.py3-none-any.whl        </a>        (17.9 kB        <a href=\"#copy-hash-modal-29502f88-c7d3-432a-a61b-8ec65f5f412d\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2016-04-14T00:22:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 14, 2016</time>          <code>py2</code>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-bd89adb7-78b1-4ffe-8f54-6055f909f0bb\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for kwonly-args-1.0.10.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for kwonly-args-1.0.10.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">59c85e1fa626c0ead5438b64f10b53dda2459e0042ea24258c9dc2115979a598</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">40cf6d064fec506d894eb3af238d174e</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">eedaa7ba4f2153a536a895a9d29a222ee0f138d617862f9b982bd4ae33714308</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-29502f88-c7d3-432a-a61b-8ec65f5f412d\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for kwonly_args-1.0.10-py2.py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for kwonly_args-1.0.10-py2.py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">3ece6ccf01113dc03fa72da3053b046fbe667d6a1277e16b1aa6397a4e72e1cb</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">8fa638e660ef786042227f2370ba9534</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">00373251dc1c11f5e9c4b8fb1b3f433da4b55ec52e3fe5c14b13a2a558990260</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "pyshp",
  "url": "https://pypi.org/project/pyshp/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>pyshp \u00b7 PyPI</title>    <meta name=\"description\" content=\"Pure Python read/write support for ESRI Shapefile format\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for pyshp\" href=\"/rss/project/pyshp/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/pyshp/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/pyshp/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"pyshp\">    <meta property=\"og:description\" content=\"Pure Python read/write support for ESRI Shapefile format\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/GeospatialPython/pyshp\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:GeospatialPython/pyshp+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        pyshp 2.3.1      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install pyshp</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/pyshp/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2022-07-27T19:51:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 27, 2022</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/pyshp\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Pure Python read/write support for ESRI Shapefile format</p><div data-html-include=\"/_includes/edit-project-button/pyshp\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for pyshp\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/GeospatialPython/pyshp\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://pypi.org/project/pyshp/\" rel=\"nofollow\">        <i class=\"fas fa-cloud-download-alt\" aria-hidden=\"true\"></i>Download      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/pyshp\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT</p>    <p><strong>Author:</strong> <a href=\"mailto:jlawhead@geospatialpython.com\">Joel Lawhead</a></p>    <p><strong>Maintainer:</strong> <a href=\"mailto:karim.bahgat.norway@gmail.com\">Karim Bahgat</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      gis,    </span>    <span class=\"package-keyword\">      geospatial,    </span>    <span class=\"package-keyword\">      geographic,    </span>    <span class=\"package-keyword\">      shapefile,    </span>    <span class=\"package-keyword\">      shapefiles    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=2.7  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/jlawhead/\" aria-label=\"jlawhead\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/6015983d3b3e324449791463820e839c81265ed2/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f39376534623537313236323730346134333630643462346331396461646435643f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for jlawhead from gravatar.com\" title=\"Avatar for jlawhead from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            jlawhead          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/kbahgat/\" aria-label=\"kbahgat\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/c4a99f750331e1411496beeae235e0ac36616950/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f35343834353262333963636163363137383161353861316537323030326166383f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for kbahgat from gravatar.com\" title=\"Avatar for kbahgat from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            kbahgat          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2.7\">            Python :: 2.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Scientific%2FEngineering+%3A%3A+GIS\">            Scientific/Engineering :: GIS          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries\">            Software Development :: Libraries          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries+%3A%3A+Python+Modules\">            Software Development :: Libraries :: Python Modules          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for pyshp\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <h1>PyShp</h1><p>The Python Shapefile Library (PyShp) reads and writes ESRI Shapefiles in pure Python.</p><p><img src=\"https://pypi-camo.freetls.fastly.net/137a4c72f0614cb78375ead3f8f94cdc5280ec9b/687474703a2f2f342e62702e626c6f6773706f742e636f6d2f5f53426933375145734376672f545051754f686c485178492f41414141414141414145302f516a466c57664d783074512f533335302f4753505f4c6f676f2e706e67\" alt=\"pyshp logo\"></p><p><img src=\"https://pypi-camo.freetls.fastly.net/efac5bab658772a1dfc8a2b73e0bee427ee8eb28/68747470733a2f2f6769746875622e636f6d2f47656f7370617469616c507974686f6e2f70797368702f616374696f6e732f776f726b666c6f77732f6275696c642e796d6c2f62616467652e737667\" alt=\"build status\"></p><ul><li><strong>Author</strong>: <a href=\"https://github.com/GeospatialPython\" rel=nofollow>Joel Lawhead</a></li><li><strong>Maintainers</strong>: <a href=\"https://github.com/karimbahgat\" rel=nofollow>Karim Bahgat</a></li><li><strong>Version</strong>: 2.3.0</li><li><strong>Date</strong>: 30 April, 2022</li><li><strong>License</strong>: <a href=\"https://github.com/GeospatialPython/pyshp/blob/master/LICENSE.TXT\" rel=nofollow>MIT</a></li></ul><h2>Contents</h2><ul><li><a href=#overview rel=nofollow>Overview</a></li><li><a href=#version-changes rel=nofollow>Version Changes</a></li><li><a href=#the-basics rel=nofollow>The Basics</a><ul><li><a href=#reading-shapefiles rel=nofollow>Reading Shapefiles</a><ul><li><a href=#the-reader-class rel=nofollow>The Reader Class</a><ul><li><a href=#reading-shapefiles-from-local-files rel=nofollow>Reading Shapefiles from Local Files</a></li><li><a href=#reading-shapefiles-from-zip-files rel=nofollow>Reading Shapefiles from Zip Files</a></li><li><a href=#reading-shapefiles-from-urls rel=nofollow>Reading Shapefiles from URLs</a></li><li><a href=#reading-shapefiles-from-file-like-objects rel=nofollow>Reading Shapefiles from File-Like Objects</a></li><li><a href=#reading-shapefiles-using-the-context-manager rel=nofollow>Reading Shapefiles Using the Context Manager</a></li><li><a href=#reading-shapefile-meta-data rel=nofollow>Reading Shapefile Meta-Data</a></li></ul></li><li><a href=#reading-geometry rel=nofollow>Reading Geometry</a></li><li><a href=#reading-records rel=nofollow>Reading Records</a></li><li><a href=#reading-geometry-and-records-simultaneously rel=nofollow>Reading Geometry and Records Simultaneously</a></li></ul></li><li><a href=#writing-shapefiles rel=nofollow>Writing Shapefiles</a><ul><li><a href=#the-writer-class rel=nofollow>The Writer Class</a><ul><li><a href=#writing-shapefiles-to-local-files rel=nofollow>Writing Shapefiles to Local Files</a></li><li><a href=#writing-shapefiles-to-file-like-objects rel=nofollow>Writing Shapefiles to File-Like Objects</a></li><li><a href=#writing-shapefiles-using-the-context-manager rel=nofollow>Writing Shapefiles Using the Context Manager</a></li><li><a href=#setting-the-shape-type rel=nofollow>Setting the Shape Type</a></li></ul></li><li><a href=#adding-records rel=nofollow>Adding Records</a></li><li><a href=#adding-geometry rel=nofollow>Adding Geometry</a></li><li><a href=#geometry-and-record-balancing rel=nofollow>Geometry and Record Balancing</a></li></ul></li></ul></li><li><a href=#advanced-use rel=nofollow>Advanced Use</a><ul><li><a href=#common-errors-and-fixes rel=nofollow>Common Errors and Fixes</a><ul><li><a href=#warnings-and-logging rel=nofollow>Warnings and Logging</a></li><li><a href=#shapefile-encoding-errors rel=nofollow>Shapefile Encoding Errors</a></li></ul></li><li><a href=#reading-large-shapefiles rel=nofollow>Reading Large Shapefiles</a><ul><li><a href=#iterating-through-a-shapefile rel=nofollow>Iterating through a shapefile</a></li><li><a href=#limiting-which-fields-to-read rel=nofollow>Limiting which fields to read</a></li><li><a href=#attribute-filtering rel=nofollow>Attribute filtering</a></li><li><a href=#spatial-filtering rel=nofollow>Spatial filtering</a></li></ul></li><li><a href=#writing-large-shapefiles rel=nofollow>Writing large shapefiles</a><ul><li><a href=#merging-multiple-shapefiles rel=nofollow>Merging multiple shapefiles</a></li><li><a href=#editing-shapefiles rel=nofollow>Editing shapefiles</a></li></ul></li><li><a href=#3d-and-other-geometry-types rel=nofollow>3D and Other Geometry Types</a><ul><li><a href=#shapefiles-with-measurement-m-values rel=nofollow>Shapefiles with measurement (M) values</a></li><li><a href=#shapefiles-with-elevation-z-values rel=nofollow>Shapefiles with elevation (Z) values</a></li><li><a href=#3d-multipatch-shapefiles rel=nofollow>3D MultiPatch Shapefiles</a></li></ul></li></ul></li><li><a href=#testing rel=nofollow>Testing</a></li><li><a href=#contributors rel=nofollow>Contributors</a></li></ul><h1>Overview</h1><p>The Python Shapefile Library (PyShp) provides read and write support for theEsri Shapefile format. The Shapefile format is a popular GeographicInformation System vector data format created by Esri. For more informationabout this format please read the well-written \"ESRI Shapefile TechnicalDescription - July 1998\" located at <a href=\"http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf\" rel=nofollow>http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf</a>. The Esri document describes the shp and shx file formats. However a thirdfile format called dbf is also required. This format is documented on the webas the \"XBase File Format Description\" and is a simple file-based databaseformat created in the 1960's. For more on this specification see: <a href=\"http://www.clicketyclick.dk/databases/xbase/format/index.html\" rel=nofollow>http://www.clicketyclick.dk/databases/xbase/format/index.html</a></p><p>Both the Esri and XBase file-formats are very simple in design and memoryefficient which is part of the reason the shapefile format remains populardespite the numerous ways to store and exchange GIS data available today.</p><p>Pyshp is compatible with Python 2.7-3.x.</p><p>This document provides examples for using PyShp to read and write shapefiles. Howevermany more examples are continually added to the blog <a href=\"http://GeospatialPython.com\" rel=nofollow>http://GeospatialPython.com</a>,and by searching for PyShp on <a href=\"https://gis.stackexchange.com\" rel=nofollow>https://gis.stackexchange.com</a>.</p><p>Currently the sample census blockgroup shapefile referenced in the examples is available on the GitHub project site at<a href=\"https://github.com/GeospatialPython/pyshp\" rel=nofollow>https://github.com/GeospatialPython/pyshp</a>. Theseexamples are straight-forward and you can also easily run them against yourown shapefiles with minimal modification.</p><p>Important: If you are new to GIS you should read about map projections.Please visit: <a href=\"https://github.com/GeospatialPython/pyshp/wiki/Map-Projections\" rel=nofollow>https://github.com/GeospatialPython/pyshp/wiki/Map-Projections</a></p><p>I sincerely hope this library eliminates the mundane distraction of simplyreading and writing data, and allows you to focus on the challenging and FUNpart of your geospatial project.</p><h1>Version Changes</h1><h2>2.3.1</h2><h3>Bug fixes:</h3><ul><li>Fix recently introduced issue where Reader/Writer closes file-like objects provided by user (#244)</li></ul><h2>2.3.0</h2><h3>New Features:</h3><ul><li>Added support for pathlib and path-like shapefile filepaths (@mwtoews).</li><li>Allow reading individual file extensions via filepaths.</li></ul><h3>Improvements:</h3><ul><li>Simplified setup and deployment (@mwtoews)</li><li>Faster shape access when missing shx file</li><li>Switch to named logger (see #240)</li></ul><h3>Bug fixes:</h3><ul><li>More robust handling of corrupt shapefiles (fixes #235)</li><li>Fix errors when writing to individual file-handles (fixes #237)</li><li>Revert previous decision to enforce geojson output ring orientation (detailed explanation at <a href=\"https://github.com/SciTools/cartopy/issues/2012\" rel=nofollow>https://github.com/SciTools/cartopy/issues/2012</a>)</li><li>Fix test issues in environments without network access (@sebastic, @musicinmybrain).</li></ul><h2>2.2.0</h2><h3>New Features:</h3><ul><li>Read shapefiles directly from zipfiles.</li><li>Read shapefiles directly from urls.</li><li>Allow fast extraction of only a subset of dbf fields through a <code>fields</code> arg.</li><li>Allow fast filtering which shapes to read from the file through a <code>bbox</code> arg.</li></ul><h3>Improvements:</h3><ul><li>More examples and restructuring of README.</li><li>More informative Shape to geojson warnings (see #219).</li><li>Add shapefile.VERBOSE flag to control warnings verbosity (default True).</li><li>Shape object information when calling repr().</li><li>Faster ring orientation checks, enforce geojson output ring orientation.</li></ul><h3>Bug fixes:</h3><ul><li>Remove null-padding at end of some record character fields.</li><li>Fix dbf writing error when the number of record list or dict entries didn't match the number of fields.</li><li>Handle rare garbage collection issue after deepcopy (<a href=\"https://github.com/mattijn/topojson/issues/120\" rel=nofollow>https://github.com/mattijn/topojson/issues/120</a>)</li><li>Fix bug where records and shapes would be assigned incorrect record number (@karanrn)</li><li>Fix typos in docs (@timgates)</li></ul><h2>2.1.3</h2><h3>Bug fixes:</h3><ul><li>Fix recent bug in geojson hole-in-polygon checking (see #205)</li><li>Misc fixes to allow geo interface dump to json (eg dates as strings)</li><li>Handle additional dbf date null values, and return faulty dates as unicode (see #187)</li><li>Add writer target typecheck</li><li>Fix bugs to allow reading shp/shx/dbf separately</li><li>Allow delayed shapefile loading by passing no args</li><li>Fix error with writing empty z/m shapefile (@mcuprjak)</li><li>Fix signed_area() so ignores z/m coords</li><li>Enforce writing the 11th field name character as null-terminator (only first 10 are used)</li><li>Minor README fixes</li><li>Added more tests</li></ul><h2>2.1.2</h2><h3>Bug fixes:</h3><ul><li>Fix issue where warnings.simplefilter('always') changes global warning behavior [see #203]</li></ul><h2>2.1.1</h2><h3>Improvements:</h3><ul><li>Handle shapes with no coords and represent as geojson with no coords (GeoJSON null-equivalent)</li><li>Expand testing to Python 3.6, 3.7, 3.8 and PyPy; drop 3.3 and 3.4 [@mwtoews]</li><li>Added pytest testing [@jmoujaes]</li></ul><h3>Bug fixes:</h3><ul><li>Fix incorrect geo interface handling of multipolygons with complex exterior-hole relations [see #202]</li><li>Enforce shapefile requirement of at least one field, to avoid writing invalid shapefiles [@Jonty]</li><li>Fix Reader geo interface including DeletionFlag field in feature properties [@nnseva]</li><li>Fix polygons not being auto closed, which was accidentally dropped</li><li>Fix error for null geometries in feature geojson</li><li>Misc docstring cleanup [@fiveham]</li></ul><h2>2.1.0</h2><h3>New Features:</h3><ul><li>Added back read/write support for unicode field names.</li><li>Improved Record representation</li><li>More support for geojson on Reader, ShapeRecord, ShapeRecords, and shapes()</li></ul><h3>Bug fixes:</h3><ul><li>Fixed error when reading optional m-values</li><li>Fixed Record attribute autocomplete in Python 3</li><li>Misc readme cleanup</li></ul><h2>2.0.0</h2><p>The newest version of PyShp, version 2.0 introduced some major new improvements.A great thanks to all who have contributed code and raised issues, and for everyone'spatience and understanding during the transition period.Some of the new changes are incompatible with previous versions.Users of the previous version 1.x should therefore take note of the following changes(Note: Some contributor attributions may be missing):</p><h3>Major Changes:</h3><ul><li>Full support for unicode text, with custom encoding, and exception handling.<ul><li>Means that the Reader returns unicode, and the Writer accepts unicode.</li></ul></li><li>PyShp has been simplified to a pure input-output library using the Reader and Writer classes, dropping the Editor class.</li><li>Switched to a new streaming approach when writing files, keeping memory-usage at a minimum:<ul><li>Specify filepath/destination and text encoding when creating the Writer.</li><li>The file is written incrementally with each call to shape/record.</li><li>Adding shapes is now done using dedicated methods for each shapetype.</li></ul></li><li>Reading shapefiles is now more convenient:<ul><li>Shapefiles can be opened using the context manager, and files are properly closed.</li><li>Shapefiles can be iterated, have a length, and supports the geo interface.</li><li>New ways of inspecting shapefile metadata by printing. [@megies]</li><li>More convenient accessing of Record values as attributes. [@philippkraft]</li><li>More convenient shape type name checking. [@megies]</li></ul></li><li>Add more support and documentation for MultiPatch 3D shapes.</li><li>The Reader \"elevation\" and \"measure\" attributes now renamed \"zbox\" and \"mbox\", to make it clear they refer to the min/max values.</li><li>Better documentation of previously unclear aspects, such as field types.</li></ul><h3>Important Fixes:</h3><ul><li>More reliable/robust:<ul><li>Fixed shapefile bbox error for empty or point type shapefiles. [@mcuprjak]</li><li>Reading and writing Z and M type shapes is now more robust, fixing many errors, and has been added to the documentation. [@ShinNoNoir]</li><li>Improved parsing of field value types, fixed errors and made more flexible.</li><li>Fixed bug when writing shapefiles with datefield and date values earlier than 1900 [@megies]</li></ul></li><li>Fix some geo interface errors, including checking polygon directions.</li><li>Bug fixes for reading from case sensitive file names, individual files separately, and from file-like objects. [@gastoneb, @kb003308, @erickskb]</li><li>Enforce maximum field limit. [@mwtoews]</li></ul><h1>The Basics</h1><p>Before doing anything you must import the library.</p><pre><code>&gt;&gt;&gt; import shapefile</code></pre><p>The examples below will use a shapefile created from the U.S. Census BureauBlockgroups data set near San Francisco, CA and available in the gitrepository of the PyShp GitHub site.</p><h2>Reading Shapefiles</h2><h3>The Reader Class</h3><h4>Reading Shapefiles from Local Files</h4><p>To read a shapefile create a new \"Reader\" object and pass it the name of anexisting shapefile. The shapefile format is actually a collection of threefiles. You specify the base filename of the shapefile or the complete filenameof any of the shapefile component files.</p><pre><code>&gt;&gt;&gt; sf = shapefile.Reader(\"shapefiles/blockgroups\")</code></pre><p>OR</p><pre><code>&gt;&gt;&gt; sf = shapefile.Reader(\"shapefiles/blockgroups.shp\")</code></pre><p>OR</p><pre><code>&gt;&gt;&gt; sf = shapefile.Reader(\"shapefiles/blockgroups.dbf\")</code></pre><p>OR any of the other 5+ formats which are potentially part of a shapefile. Thelibrary does not care about file extensions. You can also specify that you onlywant to read some of the file extensions through the use of keyword arguments:</p><pre><code>&gt;&gt;&gt; sf = shapefile.Reader(dbf=\"shapefiles/blockgroups.dbf\")</code></pre><h4>Reading Shapefiles from Zip Files</h4><p>If your shapefile is wrapped inside a zip file, the library is able to handle that too, meaning you don't have to worry about unzipping the contents:</p><pre><code>&gt;&gt;&gt; sf = shapefile.Reader(\"shapefiles/blockgroups.zip\")</code></pre><p>If the zip file contains multiple shapefiles, just specify which shapefile to read by additionally specifying the relative path after the \".zip\" part:</p><pre><code>&gt;&gt;&gt; sf = shapefile.Reader(\"shapefiles/blockgroups_multishapefile.zip/blockgroups2.shp\")</code></pre><h4>Reading Shapefiles from URLs</h4><p>Finally, you can use all of the above methods to read shapefiles directly from the internet, by giving a url instead of a local path, e.g.:</p><pre><code>&gt;&gt;&gt; # from a zipped shapefile on website&gt;&gt;&gt; sf = shapefile.Reader(\"https://biogeo.ucdavis.edu/data/diva/rrd/NIC_rrd.zip\")&gt;&gt;&gt; # from a shapefile collection of files in a github repository&gt;&gt;&gt; sf = shapefile.Reader(\"https://github.com/nvkelso/natural-earth-vector/blob/master/110m_cultural/ne_110m_admin_0_tiny_countries.shp?raw=true\")</code></pre><p>This will automatically download the file(s) to a temporary location before reading, saving you a lot of time and repetitive boilerplate code when you just want quick access to some external data.</p><h4>Reading Shapefiles from File-Like Objects</h4><p>You can also load shapefiles from any Python file-like object using keywordarguments to specify any of the three files. This feature is very powerful andallows you to custom load shapefiles from arbitrary storage formats, such as a protected url or zip file, a serialized object, or in some cases a database.</p><pre><code>&gt;&gt;&gt; myshp = open(\"shapefiles/blockgroups.shp\", \"rb\")&gt;&gt;&gt; mydbf = open(\"shapefiles/blockgroups.dbf\", \"rb\")&gt;&gt;&gt; r = shapefile.Reader(shp=myshp, dbf=mydbf)</code></pre><p>Notice in the examples above the shx file is never used. The shx file is avery simple fixed-record index for the variable-length records in the shpfile. This file is optional for reading. If it's available PyShp will use theshx file to access shape records a little faster but will do just fine withoutit.</p><h4>Reading Shapefiles Using the Context Manager</h4><p>The \"Reader\" class can be used as a context manager, to ensure open fileobjects are properly closed when done reading the data:</p><pre><code>&gt;&gt;&gt; with shapefile.Reader(\"shapefiles/blockgroups.shp\") as shp:...     print(shp)shapefile Reader    663 shapes (type 'POLYGON')    663 records (44 fields)</code></pre><h4>Reading Shapefile Meta-Data</h4><p>Shapefiles have a number of attributes for inspecting the file contents.A shapefile is a container for a specific type of geometry, and this can be checked using theshapeType attribute.</p><pre><code>&gt;&gt;&gt; sf = shapefile.Reader(\"shapefiles/blockgroups.dbf\")&gt;&gt;&gt; sf.shapeType5</code></pre><p>Shape types are represented by numbers between 0 and 31 as defined by theshapefile specification and listed below. It is important to note that the numbering system hasseveral reserved numbers that have not been used yet, therefore the numbers ofthe existing shape types are not sequential:</p><ul><li>NULL = 0</li><li>POINT = 1</li><li>POLYLINE = 3</li><li>POLYGON = 5</li><li>MULTIPOINT = 8</li><li>POINTZ = 11</li><li>POLYLINEZ = 13</li><li>POLYGONZ = 15</li><li>MULTIPOINTZ = 18</li><li>POINTM = 21</li><li>POLYLINEM = 23</li><li>POLYGONM = 25</li><li>MULTIPOINTM = 28</li><li>MULTIPATCH = 31</li></ul><p>Based on this we can see that our blockgroups shapefile containsPolygon type shapes. The shape types are also defined as constants inthe shapefile module, so that we can compare types more intuitively:</p><pre><code>&gt;&gt;&gt; sf.shapeType == shapefile.POLYGONTrue</code></pre><p>For convenience, you can also get the name of the shape type as a string:</p><pre><code>&gt;&gt;&gt; sf.shapeTypeName == 'POLYGON'True</code></pre><p>Other pieces of meta-data that we can check include the number of featuresand the bounding box area the shapefile covers:</p><pre><code>&gt;&gt;&gt; len(sf)663&gt;&gt;&gt; sf.bbox[-122.515048, 37.652916, -122.327622, 37.863433]</code></pre><p>Finally, if you would prefer to work with the entire shapefile in a differentformat, you can convert all of it to a GeoJSON dictionary, although you may losesome information in the process, such as z- and m-values:</p><pre><code>&gt;&gt;&gt; sf.__geo_interface__['type']'FeatureCollection'</code></pre><h3>Reading Geometry</h3><p>A shapefile's geometry is the collection of points or shapes made fromvertices and implied arcs representing physical locations. All types ofshapefiles just store points. The metadata about the points determine how theyare handled by software.</p><p>You can get a list of the shapefile's geometry by calling the shapes()method.</p><pre><code>&gt;&gt;&gt; shapes = sf.shapes()</code></pre><p>The shapes method returns a list of Shape objects describing the geometry ofeach shape record.</p><pre><code>&gt;&gt;&gt; len(shapes)663</code></pre><p>To read a single shape by calling its index use the shape() method. The indexis the shape's count from 0. So to read the 8th shape record you would use itsindex which is 7.</p><pre><code>&gt;&gt;&gt; s = sf.shape(7)&gt;&gt;&gt; sShape #7: POLYGON&gt;&gt;&gt; # Read the bbox of the 8th shape to verify&gt;&gt;&gt; # Round coordinates to 3 decimal places&gt;&gt;&gt; ['%.3f' % coord for coord in s.bbox]['-122.450', '37.801', '-122.442', '37.808']</code></pre><p>Each shape record (except Points) contains the following attributes. Records ofshapeType Point do not have a bounding box 'bbox'.</p><pre><code>&gt;&gt;&gt; for name in dir(shapes[3]):...     if not name.startswith('_'):...         name'bbox''oid''parts''points''shapeType''shapeTypeName'</code></pre><ul><li><p><code>oid</code>: The shape's index position in the original shapefile.</p><pre><code>&gt;&gt;&gt; shapes[3].oid3</code></pre></li><li><p><code>shapeType</code>: an integer representing the type of shape as defined by theshapefile specification.</p><pre><code>&gt;&gt;&gt; shapes[3].shapeType5</code></pre></li><li><p><code>shapeTypeName</code>: a string representation of the type of shape as defined by shapeType. Read-only.</p><pre><code>&gt;&gt;&gt; shapes[3].shapeTypeName'POLYGON'</code></pre></li><li><p><code>bbox</code>: If the shape type contains multiple points this tuple describes thelower left (x,y) coordinate and upper right corner coordinate creating acomplete box around the points. If the shapeType is aNull (shapeType == 0) then an AttributeError is raised.</p><pre><code>&gt;&gt;&gt; # Get the bounding box of the 4th shape.&gt;&gt;&gt; # Round coordinates to 3 decimal places&gt;&gt;&gt; bbox = shapes[3].bbox&gt;&gt;&gt; ['%.3f' % coord for coord in bbox]['-122.486', '37.787', '-122.446', '37.811']</code></pre></li><li><p><code>parts</code>: Parts simply group collections of points into shapes. If the shaperecord has multiple parts this attribute contains the index of the firstpoint of each part. If there is only one part then a list containing 0 isreturned.</p><pre><code>&gt;&gt;&gt; shapes[3].parts[0]</code></pre></li><li><p><code>points</code>: The points attribute contains a list of tuples containing an(x,y) coordinate for each point in the shape.</p><pre><code>&gt;&gt;&gt; len(shapes[3].points)173&gt;&gt;&gt; # Get the 8th point of the fourth shape&gt;&gt;&gt; # Truncate coordinates to 3 decimal places&gt;&gt;&gt; shape = shapes[3].points[7]&gt;&gt;&gt; ['%.3f' % coord for coord in shape]['-122.471', '37.787']</code></pre></li></ul><p>In most cases, however, if you need to do more than just type or bounds checking, you may wantto convert the geometry to the more human-readable <a href=\"http://geojson.org\" rel=nofollow>GeoJSON format</a>,where lines and polygons are grouped for you:</p><pre><code>&gt;&gt;&gt; s = sf.shape(0)&gt;&gt;&gt; geoj = s.__geo_interface__&gt;&gt;&gt; geoj[\"type\"]'MultiPolygon'</code></pre><p>The results from the shapes() method similarly supports converting to GeoJSON:</p><pre><code>&gt;&gt;&gt; shapes.__geo_interface__['type']'GeometryCollection'</code></pre><p>Note: In some cases, if the conversion from shapefile geometry to GeoJSON encountered any problemsor potential issues, a warning message will be displayed with information about the affectedgeometry. To ignore or suppress these warnings, you can disable this behavior by setting themodule constant VERBOSE to False:</p><pre><code>&gt;&gt;&gt; shapefile.VERBOSE = False</code></pre><h3>Reading Records</h3><p>A record in a shapefile contains the attributes for each shape in thecollection of geometries. Records are stored in the dbf file. The link betweengeometry and attributes is the foundation of all geographic information systems.This critical link is implied by the order of shapes and corresponding recordsin the shp geometry file and the dbf attribute file.</p><p>The field names of a shapefile are available as soon as you read a shapefile.You can call the \"fields\" attribute of the shapefile as a Python list. Eachfield is a Python list with the following information:</p><ul><li>Field name: the name describing the data at this column index.</li><li>Field type: the type of data at this column index. Types can be:<ul><li>\"C\": Characters, text.</li><li>\"N\": Numbers, with or without decimals.</li><li>\"F\": Floats (same as \"N\").</li><li>\"L\": Logical, for boolean True/False values.</li><li>\"D\": Dates.</li><li>\"M\": Memo, has no meaning within a GIS and is part of the xbase spec instead.</li></ul></li><li>Field length: the length of the data found at this column index. Older GISsoftware may truncate this length to 8 or 11 characters for \"Character\"fields.</li><li>Decimal length: the number of decimal places found in \"Number\" fields.</li></ul><p>To see the fields for the Reader object above (sf) call the \"fields\"attribute:</p><pre><code>&gt;&gt;&gt; fields = sf.fields&gt;&gt;&gt; assert fields == [(\"DeletionFlag\", \"C\", 1, 0), [\"AREA\", \"N\", 18, 5],... [\"BKG_KEY\", \"C\", 12, 0], [\"POP1990\", \"N\", 9, 0], [\"POP90_SQMI\", \"N\", 10, 1],... [\"HOUSEHOLDS\", \"N\", 9, 0],... [\"MALES\", \"N\", 9, 0], [\"FEMALES\", \"N\", 9, 0], [\"WHITE\", \"N\", 9, 0],... [\"BLACK\", \"N\", 8, 0], [\"AMERI_ES\", \"N\", 7, 0], [\"ASIAN_PI\", \"N\", 8, 0],... [\"OTHER\", \"N\", 8, 0], [\"HISPANIC\", \"N\", 8, 0], [\"AGE_UNDER5\", \"N\", 8, 0],... [\"AGE_5_17\", \"N\", 8, 0], [\"AGE_18_29\", \"N\", 8, 0], [\"AGE_30_49\", \"N\", 8, 0],... [\"AGE_50_64\", \"N\", 8, 0], [\"AGE_65_UP\", \"N\", 8, 0],... [\"NEVERMARRY\", \"N\", 8, 0], [\"MARRIED\", \"N\", 9, 0], [\"SEPARATED\", \"N\", 7, 0],... [\"WIDOWED\", \"N\", 8, 0], [\"DIVORCED\", \"N\", 8, 0], [\"HSEHLD_1_M\", \"N\", 8, 0],... [\"HSEHLD_1_F\", \"N\", 8, 0], [\"MARHH_CHD\", \"N\", 8, 0],... [\"MARHH_NO_C\", \"N\", 8, 0], [\"MHH_CHILD\", \"N\", 7, 0],... [\"FHH_CHILD\", \"N\", 7, 0], [\"HSE_UNITS\", \"N\", 9, 0], [\"VACANT\", \"N\", 7, 0],... [\"OWNER_OCC\", \"N\", 8, 0], [\"RENTER_OCC\", \"N\", 8, 0],... [\"MEDIAN_VAL\", \"N\", 7, 0], [\"MEDIANRENT\", \"N\", 4, 0],... [\"UNITS_1DET\", \"N\", 8, 0], [\"UNITS_1ATT\", \"N\", 7, 0], [\"UNITS2\", \"N\", 7, 0],... [\"UNITS3_9\", \"N\", 8, 0], [\"UNITS10_49\", \"N\", 8, 0],... [\"UNITS50_UP\", \"N\", 8, 0], [\"MOBILEHOME\", \"N\", 7, 0]]</code></pre><p>The first field of a dbf file is always a 1-byte field called \"DeletionFlag\",which indicates records that have been deleted but not removed. However,since this flag is very rarely used, PyShp currently will return all records<br>regardless of their deletion flag, and the flag is also not included in the list ofrecord values. In other words, the DeletionFlag field has no real purpose, andshould in most cases be ignored. For instance, to get a list of all fieldnames:</p><pre><code>&gt;&gt;&gt; fieldnames = [f[0] for f in sf.fields[1:]]</code></pre><p>You can get a list of the shapefile's records by calling the records() method:</p><pre><code>&gt;&gt;&gt; records = sf.records()&gt;&gt;&gt; len(records)663</code></pre><p>To read a single record call the record() method with the record's index:</p><pre><code>&gt;&gt;&gt; rec = sf.record(3)</code></pre><p>Each record is a list-like Record object containing the values corresponding to each field inthe field list (except the DeletionFlag). A record's values can be accessed by positional indexing or slicing.For example in the blockgroups shapefile the 2nd and 3rd fields are the blockgroup idand the 1990 population count of that San Francisco blockgroup:</p><pre><code>&gt;&gt;&gt; rec[1:3]['060750601001', 4715]</code></pre><p>For simpler access, the fields of a record can also accessed via the name of the field,either as a key or as an attribute name. The blockgroup id (BKG_KEY) of the blockgroups shapefilecan also be retrieved as:</p><pre><code>&gt;&gt;&gt; rec['BKG_KEY']'060750601001'&gt;&gt;&gt; rec.BKG_KEY'060750601001'</code></pre><p>The record values can be easily integrated with other programs by converting it to a field-value dictionary:</p><pre><code>&gt;&gt;&gt; dct = rec.as_dict()&gt;&gt;&gt; sorted(dct.items())[('AGE_18_29', 1467), ('AGE_30_49', 1681), ('AGE_50_64', 92), ('AGE_5_17', 848), ('AGE_65_UP', 30), ('AGE_UNDER5', 597), ('AMERI_ES', 6), ('AREA', 2.34385), ('ASIAN_PI', 452), ('BKG_KEY', '060750601001'), ('BLACK', 1007), ('DIVORCED', 149), ('FEMALES', 2095), ('FHH_CHILD', 16), ('HISPANIC', 416), ('HOUSEHOLDS', 1195), ('HSEHLD_1_F', 40), ('HSEHLD_1_M', 22), ('HSE_UNITS', 1258), ('MALES', 2620), ('MARHH_CHD', 79), ('MARHH_NO_C', 958), ('MARRIED', 2021), ('MEDIANRENT', 739), ('MEDIAN_VAL', 337500), ('MHH_CHILD', 0), ('MOBILEHOME', 0), ('NEVERMARRY', 703), ('OTHER', 288), ('OWNER_OCC', 66), ('POP1990', 4715), ('POP90_SQMI', 2011.6), ('RENTER_OCC', 3733), ('SEPARATED', 49), ('UNITS10_49', 49), ('UNITS2', 160), ('UNITS3_9', 672), ('UNITS50_UP', 0), ('UNITS_1ATT', 302), ('UNITS_1DET', 43), ('VACANT', 93), ('WHITE', 2962), ('WIDOWED', 37)]</code></pre><p>If at a later point you need to check the record's index position in the originalshapefile, you can do this through the \"oid\" attribute:</p><pre><code>&gt;&gt;&gt; rec.oid3</code></pre><h3>Reading Geometry and Records Simultaneously</h3><p>You may want to examine both the geometry and the attributes for a record atthe same time. The shapeRecord() and shapeRecords() method let you do justthat.</p><p>Calling the shapeRecords() method will return the geometry and attributes forall shapes as a list of ShapeRecord objects. Each ShapeRecord instance has a\"shape\" and \"record\" attribute. The shape attribute is a Shape object asdiscussed in the first section \"Reading Geometry\". The record attribute is alist-like object containing field values as demonstrated in the \"Reading Records\" section.</p><pre><code>&gt;&gt;&gt; shapeRecs = sf.shapeRecords()</code></pre><p>Let's read the blockgroup key and the population for the 4th blockgroup:</p><pre><code>&gt;&gt;&gt; shapeRecs[3].record[1:3]['060750601001', 4715]</code></pre><p>The results from the shapeRecords() method is a list-like object that can be easily convertedto GeoJSON through the __geo_interface__:</p><pre><code>&gt;&gt;&gt; shapeRecs.__geo_interface__['type']'FeatureCollection'</code></pre><p>The shapeRecord() method reads a single shape/record pair at the specified index.To get the 4th shape record from the blockgroups shapefile use the third index:</p><pre><code>&gt;&gt;&gt; shapeRec = sf.shapeRecord(3)&gt;&gt;&gt; shapeRec.record[1:3]['060750601001', 4715]</code></pre><p>Each individual shape record also supports the __geo_interface__ to convert it to a GeoJSON feature:</p><pre><code>&gt;&gt;&gt; shapeRec.__geo_interface__['type']'Feature'</code></pre><h2>Writing Shapefiles</h2><h3>The Writer Class</h3><p>PyShp tries to be as flexible as possible when writing shapefiles whilemaintaining some degree of automatic validation to make sure you don'taccidentally write an invalid file.</p><p>PyShp can write just one of the component files such as the shp or dbf filewithout writing the others. So in addition to being a complete shapefilelibrary, it can also be used as a basic dbf (xbase) library. Dbf files are acommon database format which are often useful as a standalone simple databaseformat. And even shp files occasionally have uses as a standalone format. Someweb-based GIS systems use an user-uploaded shp file to specify an area ofinterest. Many precision agriculture chemical field sprayers also use the shpformat as a control file for the sprayer system (usually in combination withcustom database file formats).</p><h4>Writing Shapefiles to Local Files</h4><p>To create a shapefile you begin by initiating a new Writer instance, passing itthe file path and name to save to:</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/testfile')&gt;&gt;&gt; w.field('field1', 'C')</code></pre><p>File extensions are optional when reading or writing shapefiles. If you specifythem PyShp ignores them anyway. When you save files you can specify a basefile name that is used for all three file types. Or you can specify a name forone or more file types:</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer(dbf='shapefiles/test/onlydbf.dbf')&gt;&gt;&gt; w.field('field1', 'C')</code></pre><p>In that case, any file types not assigned will notsave and only file types with file names will be saved.</p><h4>Writing Shapefiles to File-Like Objects</h4><p>Just as you can read shapefiles from python file-like objects you can alsowrite to them:</p><pre><code>&gt;&gt;&gt; try:...     from StringIO import StringIO... except ImportError:...     from io import BytesIO as StringIO&gt;&gt;&gt; shp = StringIO()&gt;&gt;&gt; shx = StringIO()&gt;&gt;&gt; dbf = StringIO()&gt;&gt;&gt; w = shapefile.Writer(shp=shp, shx=shx, dbf=dbf)&gt;&gt;&gt; w.field('field1', 'C')&gt;&gt;&gt; w.record()&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.close()&gt;&gt;&gt; # To read back the files you could call the \"StringIO.getvalue()\" method later.&gt;&gt;&gt; assert shp.getvalue()&gt;&gt;&gt; assert shx.getvalue()&gt;&gt;&gt; assert dbf.getvalue()&gt;&gt;&gt; # In fact, you can read directly from them using the Reader&gt;&gt;&gt; r = shapefile.Reader(shp=shp, shx=shx, dbf=dbf)&gt;&gt;&gt; len(r)1</code></pre><h4>Writing Shapefiles Using the Context Manager</h4><p>The \"Writer\" class automatically closes the open files and writes the final headers once it is garbage collected.In case of a crash and to make the code more readable, it is nevertheless recommendedyou do this manually by calling the \"close()\" method:</p><pre><code>&gt;&gt;&gt; w.close()</code></pre><p>Alternatively, you can also use the \"Writer\" class as a context manager, to ensure open fileobjects are properly closed and final headers written once you exit the with-clause:</p><pre><code>&gt;&gt;&gt; with shapefile.Writer(\"shapefiles/test/contextwriter\") as w:... w.field('field1', 'C')... pass</code></pre><h4>Setting the Shape Type</h4><p>The shape type defines the type of geometry contained in the shapefile. All ofthe shapes must match the shape type setting.</p><p>There are three ways to set the shape type:</p><ul><li>Set it when creating the class instance.</li><li>Set it by assigning a value to an existing class instance.</li><li>Set it automatically to the type of the first non-null shape by saving the shapefile.</li></ul><p>To manually set the shape type for a Writer object when creating the Writer:</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/shapetype', shapeType=3)&gt;&gt;&gt; w.field('field1', 'C')&gt;&gt;&gt; w.shapeType3</code></pre><p>OR you can set it after the Writer is created:</p><pre><code>&gt;&gt;&gt; w.shapeType = 1&gt;&gt;&gt; w.shapeType1</code></pre><h3>Adding Records</h3><p>Before you can add records you must first create the fields that define what types ofvalues will go into each attribute.</p><p>There are several different field types, all of which support storing None values as NULL.</p><p>Text fields are created using the 'C' type, and the third 'size' argument can be customized to the expectedlength of text values to save space:</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/dtype')&gt;&gt;&gt; w.field('TEXT', 'C')&gt;&gt;&gt; w.field('SHORT_TEXT', 'C', size=5)&gt;&gt;&gt; w.field('LONG_TEXT', 'C', size=250)&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.record('Hello', 'World', 'World'*50)&gt;&gt;&gt; w.close()&gt;&gt;&gt; r = shapefile.Reader('shapefiles/test/dtype')&gt;&gt;&gt; assert r.record(0) == ['Hello', 'World', 'World'*50]</code></pre><p>Date fields are created using the 'D' type, and can be created using eitherdate objects, lists, or a YYYYMMDD formatted string.Field length or decimal have no impact on this type:</p><pre><code>&gt;&gt;&gt; from datetime import date&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/dtype')&gt;&gt;&gt; w.field('DATE', 'D')&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.record(date(1898,1,30))&gt;&gt;&gt; w.record([1998,1,30])&gt;&gt;&gt; w.record('19980130')&gt;&gt;&gt; w.record(None)&gt;&gt;&gt; w.close()&gt;&gt;&gt; r = shapefile.Reader('shapefiles/test/dtype')&gt;&gt;&gt; assert r.record(0) == [date(1898,1,30)]&gt;&gt;&gt; assert r.record(1) == [date(1998,1,30)]&gt;&gt;&gt; assert r.record(2) == [date(1998,1,30)]&gt;&gt;&gt; assert r.record(3) == [None]</code></pre><p>Numeric fields are created using the 'N' type (or the 'F' type, which is exactly the same).By default the fourth decimal argument is set to zero, essentially creating an integer field.To store floats you must set the decimal argument to the precision of your choice.To store very large numbers you must increase the field length size to the total number of digits(including comma and minus).</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/dtype')&gt;&gt;&gt; w.field('INT', 'N')&gt;&gt;&gt; w.field('LOWPREC', 'N', decimal=2)&gt;&gt;&gt; w.field('MEDPREC', 'N', decimal=10)&gt;&gt;&gt; w.field('HIGHPREC', 'N', decimal=30)&gt;&gt;&gt; w.field('FTYPE', 'F', decimal=10)&gt;&gt;&gt; w.field('LARGENR', 'N', 101)&gt;&gt;&gt; nr = 1.3217328&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.record(INT=nr, LOWPREC=nr, MEDPREC=nr, HIGHPREC=-3.2302e-25, FTYPE=nr, LARGENR=int(nr)*10**100)&gt;&gt;&gt; w.record(None, None, None, None, None, None)&gt;&gt;&gt; w.close()&gt;&gt;&gt; r = shapefile.Reader('shapefiles/test/dtype')&gt;&gt;&gt; assert r.record(0) == [1, 1.32, 1.3217328, -3.2302e-25, 1.3217328, 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]&gt;&gt;&gt; assert r.record(1) == [None, None, None, None, None, None]</code></pre><p>Finally, we can create boolean fields by setting the type to 'L'.This field can take True or False values, or 1 (True) or 0 (False).None is interpreted as missing.</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/dtype')&gt;&gt;&gt; w.field('BOOLEAN', 'L')&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.record(True)&gt;&gt;&gt; w.record(1)&gt;&gt;&gt; w.record(False)&gt;&gt;&gt; w.record(0)&gt;&gt;&gt; w.record(None)&gt;&gt;&gt; w.record(\"Nonesense\")&gt;&gt;&gt; w.close()&gt;&gt;&gt; r = shapefile.Reader('shapefiles/test/dtype')&gt;&gt;&gt; r.record(0)Record #0: [True]&gt;&gt;&gt; r.record(1)Record #1: [True]&gt;&gt;&gt; r.record(2)Record #2: [False]&gt;&gt;&gt; r.record(3)Record #3: [False]&gt;&gt;&gt; r.record(4)Record #4: [None]&gt;&gt;&gt; r.record(5)Record #5: [None]</code></pre><p>You can also add attributes using keyword arguments where the keys are field names.</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/dtype')&gt;&gt;&gt; w.field('FIRST_FLD','C','40')&gt;&gt;&gt; w.field('SECOND_FLD','C','40')&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.record('First', 'Line')&gt;&gt;&gt; w.record(FIRST_FLD='First', SECOND_FLD='Line')&gt;&gt;&gt; w.close()</code></pre><h3>Adding Geometry</h3><p>Geometry is added using one of several convenience methods. The \"null\" method is usedfor null shapes, \"point\" is used for point shapes, \"multipoint\" is used for multipoint shapes, \"line\" for lines,\"poly\" for polygons.</p><p><strong>Adding a Null shape</strong></p><p>A shapefile may contain some records for which geometry is not available, and may be set using the \"null\" method.Because Null shape types (shape type 0) have no geometry the \"null\" method is called without any arguments.</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/null')&gt;&gt;&gt; w.field('name', 'C')&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.record('nullgeom')&gt;&gt;&gt; w.close()</code></pre><p><strong>Adding a Point shape</strong></p><p>Point shapes are added using the \"point\" method. A point is specified by an x andy value.</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/point')&gt;&gt;&gt; w.field('name', 'C')&gt;&gt;&gt; w.point(122, 37) &gt;&gt;&gt; w.record('point1')&gt;&gt;&gt; w.close()</code></pre><p><strong>Adding a MultiPoint shape</strong></p><p>If your point data allows for the possibility of multiple points per feature, use \"multipoint\" instead.These are specified as a list of xy point coordinates.</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/multipoint')&gt;&gt;&gt; w.field('name', 'C')&gt;&gt;&gt; w.multipoint([[122,37], [124,32]]) &gt;&gt;&gt; w.record('multipoint1')&gt;&gt;&gt; w.close()</code></pre><p><strong>Adding a LineString shape</strong></p><p>For LineString shapefiles, each shape is given as a list of one or more linear features.Each of the linear features must have at least two points.</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/line')&gt;&gt;&gt; w.field('name', 'C')&gt;&gt;&gt; w.line([...[[1,5],[5,5],[5,1],[3,3],[1,1]], # line 1...[[3,2],[2,6]] # line 2...])&gt;&gt;&gt; w.record('linestring1')&gt;&gt;&gt; w.close()</code></pre><p><strong>Adding a Polygon shape</strong></p><p>Similarly to LineString, Polygon shapes consist of multiple polygons, and must be given as a list of polygons.The main difference is that polygons must have at least 4 points and the last point must be the same as the first.It's also okay if you forget to repeat the first point at the end; PyShp automatically checks and closes the polygonsif you don't.</p><p>It's important to note that for Polygon shapefiles, your polygon coordinates must be ordered in a clockwise direction.If any of the polygons have holes, then the hole polygon coordinates must be ordered in a counterclockwise direction.The direction of your polygons determines how shapefile readers will distinguish between polygon outlines and holes.</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/polygon')&gt;&gt;&gt; w.field('name', 'C')&gt;&gt;&gt; w.poly([...        [[113,24], [112,32], [117,36], [122,37], [118,20]], # poly 1...        [[116,29],[116,26],[119,29],[119,32]], # hole 1...         [[15,2], [17,6], [22,7]]  # poly 2...        ])&gt;&gt;&gt; w.record('polygon1')&gt;&gt;&gt; w.close()</code></pre><p><strong>Adding from an existing Shape object</strong></p><p>Finally, geometry can be added by passing an existing \"Shape\" object to the \"shape\" method.You can also pass it any GeoJSON dictionary or __geo_interface__ compatible object.This can be particularly useful for copying from one file to another:</p><pre><code>&gt;&gt;&gt; r = shapefile.Reader('shapefiles/test/polygon')&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/copy')&gt;&gt;&gt; w.fields = r.fields[1:] # skip first deletion field&gt;&gt;&gt; # adding existing Shape objects&gt;&gt;&gt; for shaperec in r.iterShapeRecords():...     w.record(*shaperec.record)...     w.shape(shaperec.shape)&gt;&gt;&gt; # or GeoJSON dicts&gt;&gt;&gt; for shaperec in r.iterShapeRecords():...     w.record(*shaperec.record)...     w.shape(shaperec.shape.__geo_interface__)&gt;&gt;&gt; w.close()</code></pre><h3>Geometry and Record Balancing</h3><p>Because every shape must have a corresponding record it is critical that thenumber of records equals the number of shapes to create a valid shapefile. Youmust take care to add records and shapes in the same order so that the recorddata lines up with the geometry data. For example:</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/balancing', shapeType=shapefile.POINT)&gt;&gt;&gt; w.field(\"field1\", \"C\")&gt;&gt;&gt; w.field(\"field2\", \"C\")&gt;&gt;&gt; w.record(\"row\", \"one\")&gt;&gt;&gt; w.point(1, 1)&gt;&gt;&gt; w.record(\"row\", \"two\")&gt;&gt;&gt; w.point(2, 2)</code></pre><p>To help prevent accidental misalignment PyShp has an \"auto balance\" feature tomake sure when you add either a shape or a record the two sides of theequation line up. This way if you forget to update an entry theshapefile will still be valid and handled correctly by most shapefilesoftware. Autobalancing is NOT turned on by default. To activate it setthe attribute autoBalance to 1 or True:</p><pre><code>&gt;&gt;&gt; w.autoBalance = 1&gt;&gt;&gt; w.record(\"row\", \"three\")&gt;&gt;&gt; w.record(\"row\", \"four\")&gt;&gt;&gt; w.point(4, 4)&gt;&gt;&gt; w.recNum == w.shpNumTrue</code></pre><p>You also have the option of manually calling the balance() method at any timeto ensure the other side is up to date. When balancing is usednull shapes are created on the geometry side or recordswith a value of \"NULL\" for each field is created on the attribute side.This gives you flexibility in how you build the shapefile.You can create all of the shapes and then create all of the records or vice versa.</p><pre><code>&gt;&gt;&gt; w.autoBalance = 0&gt;&gt;&gt; w.record(\"row\", \"five\")&gt;&gt;&gt; w.record(\"row\", \"six\")&gt;&gt;&gt; w.record(\"row\", \"seven\")&gt;&gt;&gt; w.point(5, 5)&gt;&gt;&gt; w.point(6, 6)&gt;&gt;&gt; w.balance()&gt;&gt;&gt; w.recNum == w.shpNumTrue</code></pre><p>If you do not use the autoBalance() or balance() method and forget to manuallybalance the geometry and attributes the shapefile will be viewed as corrupt bymost shapefile software.</p><h1>Advanced Use</h1><h2>Common Errors and Fixes</h2><p>Below we list some commonly encountered errors and ways to fix them.</p><h3>Warnings and Logging</h3><p>By default, PyShp chooses to be transparent and provide the user with logging information and warnings about non-critical issues when reading or writing shapefiles. This behavior is controlled by the module constant <code>VERBOSE</code> (which defaults to True). If you would rather suppress this information, you can simply set this to False:</p><pre><code>&gt;&gt;&gt; shapefile.VERBOSE = False</code></pre><p>All logging happens under the namespace <code>shapefile</code>. So another way to suppress all PyShp warnings would be to alter the logging behavior for that namespace:</p><pre><code>&gt;&gt;&gt; import logging&gt;&gt;&gt; logging.getLogger('shapefile').setLevel(logging.ERROR)</code></pre><h3>Shapefile Encoding Errors</h3><p>PyShp supports reading and writing shapefiles in any language or character encoding, and provides several options for decoding and encoding text.Most shapefiles are written in UTF-8 encoding, PyShp's default encoding, so in most cases you don't have to specify the encoding.If you encounter an encoding error when reading a shapefile, this means the shapefile was likely written in a non-utf8 encoding.For instance, when working with English language shapefiles, a common reason for encoding errors is that the shapefile was written in Latin-1 encoding.For reading shapefiles in any non-utf8 encoding, such as Latin-1, justsupply the encoding option when creating the Reader class.</p><pre><code>&gt;&gt;&gt; r = shapefile.Reader(\"shapefiles/test/latin1.shp\", encoding=\"latin1\")&gt;&gt;&gt; r.record(0) == [2, u'\u00d1and\u00fa']True</code></pre><p>Once you have loaded the shapefile, you may choose to save it using another more supportive encoding suchas UTF-8. Assuming the new encoding supports the characters you are trying to write, reading it back inshould give you the same unicode string you started with.</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer(\"shapefiles/test/latin_as_utf8.shp\", encoding=\"utf8\")&gt;&gt;&gt; w.fields = r.fields[1:]&gt;&gt;&gt; w.record(*r.record(0))&gt;&gt;&gt; w.null()&gt;&gt;&gt; w.close()&gt;&gt;&gt; r = shapefile.Reader(\"shapefiles/test/latin_as_utf8.shp\", encoding=\"utf8\")&gt;&gt;&gt; r.record(0) == [2, u'\u00d1and\u00fa']True</code></pre><p>If you supply the wrong encoding and the string is unable to be decoded, PyShp will by default raise anexception. If however, on rare occasion, you are unable to find the correct encoding and want to ignoreor replace encoding errors, you can specify the \"encodingErrors\" to be used by the decode method. Thisapplies to both reading and writing.</p><pre><code>&gt;&gt;&gt; r = shapefile.Reader(\"shapefiles/test/latin1.shp\", encoding=\"ascii\", encodingErrors=\"replace\")&gt;&gt;&gt; r.record(0) == [2, u'\ufffdand\ufffd']True</code></pre><h2>Reading Large Shapefiles</h2><p>Despite being a lightweight library, PyShp is designed to be able to read shapefiles of any size, allowing you to work with hundreds of thousands or even millionsof records and complex geometries.</p><h3>Iterating through a shapefile</h3><p>As an example, let's load this Natural Earth shapefile of more than 4000 global administrative boundary polygons:</p><pre><code>&gt;&gt;&gt; sf = shapefile.Reader(\"https://github.com/nvkelso/natural-earth-vector/blob/master/10m_cultural/ne_10m_admin_1_states_provinces?raw=true\")</code></pre><p>When first creating the Reader class, the library only reads the header informationand leaves the rest of the file contents alone. Once you call the records() and shapes()methods however, it will attempt to read the entire file into memory at once.For very large files this can result in MemoryError. So when working with large filesit is recommended to use instead the iterShapes(), iterRecords(), or iterShapeRecords()methods instead. These iterate through the file contents one at a time, enabling you to loopthrough them while keeping memory usage at a minimum.</p><pre><code>&gt;&gt;&gt; for shape in sf.iterShapes():...     # do something here...     pass&gt;&gt;&gt; for rec in sf.iterRecords():...     # do something here...     pass&gt;&gt;&gt; for shapeRec in sf.iterShapeRecords():...     # do something here...     pass&gt;&gt;&gt; for shapeRec in sf: # same as iterShapeRecords()...     # do something here...     pass</code></pre><h3>Limiting which fields to read</h3><p>By default when reading the attribute records of a shapefile, pyshp unpacks and returns the data for all of the dbf fields, regardless of whether you actually need that data or not. To limit which field data is unpacked when reading each record and speed up processing time, you can specify the <code>fields</code> argument to any of the methods involving record data. Note that the order of the specified fields does not matter, the resulting records will list the specified field values in the order that they appear in the original dbf file. For instance, if we are only interested in the country and name of each admin unit, the following is a more efficient way of iterating through the file:</p><pre><code>&gt;&gt;&gt; fields = [\"geonunit\", \"name\"]&gt;&gt;&gt; for rec in sf.iterRecords(fields=fields):... # do something... pass&gt;&gt;&gt; recRecord #4595: ['Birgu', 'Malta']</code></pre><h3>Attribute filtering</h3><p>In many cases, we aren't interested in all entries of a shapefile, but rather only want to retrieve a small subset of records by filtering on some attribute. To avoid wasting time reading records and shapes that we don't need, we can start by iterating only the records and fields of interest, check if the record matches some condition as a way to filter the data, and finally load the full record and shape geometry for those that meet the condition:</p><pre><code>&gt;&gt;&gt; filter_field = \"geonunit\"&gt;&gt;&gt; filter_value = \"Eritrea\"&gt;&gt;&gt; for rec in sf.iterRecords(fields=[filter_field]):...     if rec[filter_field] == filter_value:... # load full record and shape... shapeRec = sf.shapeRecord(rec.oid)... shapeRec.record[\"name\"]'Debubawi Keyih Bahri''Debub''Semenawi Keyih Bahri''Gash Barka''Maekel''Anseba'</code></pre><p>Selectively reading only the necessary data in this way is particularly useful for efficiently processing a limited subset of data from very large files or when looping through a large number of files, especially if they contain large attribute tables or complex shape geometries.</p><h3>Spatial filtering</h3><p>Another common use-case is that we only want to read those records that are located in some region of interest. Because the shapefile stores the bounding box of each shape separately from the geometry data, it's possible to quickly retrieve all shapes that might overlap a given bounding box region without having to load the full shape geometry data for every shape. This can be done by specifying the <code>bbox</code> argument to any of the record or shape methods:</p><pre><code>&gt;&gt;&gt; bbox = [36.423, 12.360, 43.123, 18.004] # ca bbox of Eritrea&gt;&gt;&gt; fields = [\"geonunit\",\"name\"]&gt;&gt;&gt; for shapeRec in sf.iterShapeRecords(bbox=bbox, fields=fields):... shapeRec.recordRecord #368: ['Afar', 'Ethiopia']Record #369: ['Tadjourah', 'Djibouti']Record #375: ['Obock', 'Djibouti']Record #376: ['Debubawi Keyih Bahri', 'Eritrea']Record #1106: ['Amhara', 'Ethiopia']Record #1107: ['Gedarif', 'Sudan']Record #1108: ['Tigray', 'Ethiopia']Record #1414: ['Sa`dah', 'Yemen']Record #1415: ['`Asir', 'Saudi Arabia']Record #1416: ['Hajjah', 'Yemen']Record #1417: ['Jizan', 'Saudi Arabia']Record #1598: ['Debub', 'Eritrea']Record #1599: ['Red Sea', 'Sudan']Record #1600: ['Semenawi Keyih Bahri', 'Eritrea']Record #1601: ['Gash Barka', 'Eritrea']Record #1602: ['Kassala', 'Sudan']Record #1603: ['Maekel', 'Eritrea']Record #2037: ['Al Hudaydah', 'Yemen']Record #3741: ['Anseba', 'Eritrea']</code></pre><p>This functionality means that shapefiles can be used as a bare-bones spatially indexed database, with very fast bounding box queries for even the largest of shapefiles. Note that, as with all spatial indexing, this method does not guarantee that the <em>geometries</em> of the resulting matches overlap the queried region, only that their <em>bounding boxes</em> overlap.</p><h2>Writing large shapefiles</h2><p>Similar to the Reader class, the shapefile Writer class uses a streaming approach to keep memoryusage at a minimum and allow writing shapefiles of arbitrarily large sizes. The library takes care of this under-the-hood by immediatelywriting each geometry and record to disk the moment theyare added using shape() or record(). Once the writer is closed, exited, or garbagecollected, the final header information is calculated and written to the beginning ofthe file.</p><h3>Merging multiple shapefiles</h3><p>This means that it's possible to merge hundreds or thousands of shapefiles, aslong as you iterate through the source files to avoid loading everything intomemory. The following example copies the contents of a shapefile to a new file 10 times:</p><pre><code>&gt;&gt;&gt; # create writer&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/merge')&gt;&gt;&gt; # copy over fields from the reader&gt;&gt;&gt; r = shapefile.Reader(\"shapefiles/blockgroups\")&gt;&gt;&gt; for field in r.fields[1:]:...     w.field(*field)&gt;&gt;&gt; # copy the shapefile to writer 10 times&gt;&gt;&gt; repeat = 10&gt;&gt;&gt; for i in range(repeat):...     r = shapefile.Reader(\"shapefiles/blockgroups\")...     for shapeRec in r.iterShapeRecords():...         w.record(*shapeRec.record)...         w.shape(shapeRec.shape)&gt;&gt;&gt; # check that the written file is 10 times longer&gt;&gt;&gt; len(w) == len(r) * 10True&gt;&gt;&gt; # close the writer&gt;&gt;&gt; w.close()</code></pre><p>In this trivial example, we knew that all files had the exact same field names, ordering, and types. In other scenarios, you will have to additionally make sure that all shapefiles have the exact same fields in the same order, and that they all contain the same geometry type.</p><h3>Editing shapefiles</h3><p>If you need to edit a shapefile you would have to read thefile one record at a time, modify or filter the contents, and write it back out. For instance, to create a copy of a shapefile that only keeps a subset of relevant fields:</p><pre><code>&gt;&gt;&gt; # create writer&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/edit')&gt;&gt;&gt; # define which fields to keep&gt;&gt;&gt; keep_fields = ['BKG_KEY', 'MEDIANRENT']&gt;&gt;&gt; # copy over the relevant fields from the reader&gt;&gt;&gt; r = shapefile.Reader(\"shapefiles/blockgroups\")&gt;&gt;&gt; for field in r.fields[1:]:...     if field[0] in keep_fields:...         w.field(*field)&gt;&gt;&gt; # write only the relevant attribute values&gt;&gt;&gt; for shapeRec in r.iterShapeRecords(fields=keep_fields):...     w.record(*shapeRec.record)...     w.shape(shapeRec.shape)&gt;&gt;&gt; # close writer&gt;&gt;&gt; w.close()</code></pre><h2>3D and Other Geometry Types</h2><p>Most shapefiles store conventional 2D points, lines, or polygons. But the shapefile format is also capableof storing various other types of geometries as well, including complex 3D surfaces and objects.</p><h3>Shapefiles with measurement (M) values</h3><p>Measured shape types are shapes that include a measurement value at each vertex, for instancespeed measurements from a GPS device. Shapes with measurement (M) values are added with the followingmethods: \"pointm\", \"multipointm\", \"linem\", and \"polygonm\". The M-values are specified by adding athird M value to each XY coordinate. Missing or unobserved M-values are specified with a None value,or by simply omitting the third M-coordinate.</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/linem')&gt;&gt;&gt; w.field('name', 'C')&gt;&gt;&gt; w.linem([...[[1,5,0],[5,5],[5,1,3],[3,3,None],[1,1,0]], # line with one omitted and one missing M-value...[[3,2],[2,6]] # line without any M-values...])&gt;&gt;&gt; w.record('linem1')&gt;&gt;&gt; w.close()</code></pre><p>Shapefiles containing M-values can be examined in several ways:</p><pre><code>&gt;&gt;&gt; r = shapefile.Reader('shapefiles/test/linem')&gt;&gt;&gt; r.mbox # the lower and upper bound of M-values in the shapefile[0.0, 3.0]&gt;&gt;&gt; r.shape(0).m # flat list of M-values[0.0, None, 3.0, None, 0.0, None, None]</code></pre><h3>Shapefiles with elevation (Z) values</h3><p>Elevation shape types are shapes that include an elevation value at each vertex, for instance elevation from a GPS device.Shapes with elevation (Z) values are added with the following methods: \"pointz\", \"multipointz\", \"linez\", and \"polyz\".The Z-values are specified by adding a third Z value to each XY coordinate. Z-values do not support the concept of missing data,but if you omit the third Z-coordinate it will default to 0. Note that Z-type shapes also support measurement (M) values addedas a fourth M-coordinate. This too is optional.</p><pre><code>&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/linez')&gt;&gt;&gt; w.field('name', 'C')&gt;&gt;&gt; w.linez([...[[1,5,18],[5,5,20],[5,1,22],[3,3],[1,1]], # line with some omitted Z-values...[[3,2],[2,6]], # line without any Z-values...[[3,2,15,0],[2,6,13,3],[1,9,14,2]] # line with both Z- and M-values...])&gt;&gt;&gt; w.record('linez1')&gt;&gt;&gt; w.close()</code></pre><p>To examine a Z-type shapefile you can do:</p><pre><code>&gt;&gt;&gt; r = shapefile.Reader('shapefiles/test/linez')&gt;&gt;&gt; r.zbox # the lower and upper bound of Z-values in the shapefile[0.0, 22.0]&gt;&gt;&gt; r.shape(0).z # flat list of Z-values[18.0, 20.0, 22.0, 0.0, 0.0, 0.0, 0.0, 15.0, 13.0, 14.0]</code></pre><h3>3D MultiPatch Shapefiles</h3><p>Multipatch shapes are useful for storing composite 3-Dimensional objects.A MultiPatch shape represents a 3D object made up of one or more surface parts.Each surface in \"parts\" is defined by a list of XYZM values (Z and M values optional), and its corresponding type isgiven in the \"partTypes\" argument. The part type decides how the coordinate sequence is to be interpreted, and can be oneof the following module constants: TRIANGLE_STRIP, TRIANGLE_FAN, OUTER_RING, INNER_RING, FIRST_RING, or RING.For instance, a TRIANGLE_STRIP may be used to represent the walls of a building, combined with a TRIANGLE_FAN to representits roof:</p><pre><code>&gt;&gt;&gt; from shapefile import TRIANGLE_STRIP, TRIANGLE_FAN&gt;&gt;&gt; w = shapefile.Writer('shapefiles/test/multipatch')&gt;&gt;&gt; w.field('name', 'C')&gt;&gt;&gt; w.multipatch([... [[0,0,0],[0,0,3],[5,0,0],[5,0,3],[5,5,0],[5,5,3],[0,5,0],[0,5,3],[0,0,0],[0,0,3]], # TRIANGLE_STRIP for house walls... [[2.5,2.5,5],[0,0,3],[5,0,3],[5,5,3],[0,5,3],[0,0,3]], # TRIANGLE_FAN for pointed house roof... ],... partTypes=[TRIANGLE_STRIP, TRIANGLE_FAN]) # one type for each part&gt;&gt;&gt; w.record('house1')&gt;&gt;&gt; w.close()</code></pre><p>For an introduction to the various multipatch part types and examples of how to create 3D MultiPatch objects see <a href=\"http://downloads.esri.com/support/whitepapers/ao_/J9749_MultiPatch_Geometry_Type.pdf\" rel=nofollow>thisESRI White Paper</a>.</p><h1>Testing</h1><p>The testing framework is pytest, and the tests are located in test_shapefile.py.This includes an extensive set of unit tests of the various pyshp features,and tests against various input data. Some of the tests that requireinternet connectivity will be skipped in offline testing environments.In the same folder as README.md and shapefile.py, from the command line run</p><pre><code>$ python -m pytest</code></pre><p>Additionally, all the code and examples located in this file, README.md,is tested and verified with the builtin doctest framework.A special routine for invoking the doctest is run when calling directly on shapefile.py.In the same folder as README.md and shapefile.py, from the command line run</p><pre><code>$ python shapefile.py</code></pre><p>Linux/Mac and similar platforms will need to run <code>$ dos2unix README.md</code> in orderto correct line endings in README.md.</p><h1>Contributors</h1><pre><code>Atle Frenvik SveenBas CouwenbergBen BeasleyCasey MeisenzahlCharles ArnoldDavid A. Riggsdavidh-ssecEvan HeidtmannezcitronfivehamgeospatialpythonHannesIgnacio Martinez VazquezJason MoujaesJonty WareingKarim BahgatkaranrnKyle KelleyLouis TiaoMarcin CuprjakmcuprjakMicah CochranMichael DavisMichal \u010ciha\u0159Mike ToewsMiroslav \u0160ediv\u00fdNilopakounPaulo ErnestoRaynor VliegendhartRazzi AbuissaRosBer97Ross RogersRyan BrideauTim GatesTobias MegiesTommi PenttinenUli K\u00f6hlerVsevolod NovikovZac Miller</code></pre>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/GeospatialPython/pyshp\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://pypi.org/project/pyshp/\" rel=\"nofollow\">        <i class=\"fas fa-cloud-download-alt\" aria-hidden=\"true\"></i>Download      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/pyshp\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT</p>    <p><strong>Author:</strong> <a href=\"mailto:jlawhead@geospatialpython.com\">Joel Lawhead</a></p>    <p><strong>Maintainer:</strong> <a href=\"mailto:karim.bahgat.norway@gmail.com\">Karim Bahgat</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      gis,    </span>    <span class=\"package-keyword\">      geospatial,    </span>    <span class=\"package-keyword\">      geographic,    </span>    <span class=\"package-keyword\">      shapefile,    </span>    <span class=\"package-keyword\">      shapefiles    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=2.7  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/jlawhead/\" aria-label=\"jlawhead\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/6015983d3b3e324449791463820e839c81265ed2/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f39376534623537313236323730346134333630643462346331396461646435643f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for jlawhead from gravatar.com\" title=\"Avatar for jlawhead from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            jlawhead          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/kbahgat/\" aria-label=\"kbahgat\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/c4a99f750331e1411496beeae235e0ac36616950/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f35343834353262333963636163363137383161353861316537323030326166383f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for kbahgat from gravatar.com\" title=\"Avatar for kbahgat from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            kbahgat          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2.7\">            Python :: 2.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Scientific%2FEngineering+%3A%3A+GIS\">            Scientific/Engineering :: GIS          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries\">            Software Development :: Libraries          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries+%3A%3A+Python+Modules\">            Software Development :: Libraries :: Python Modules          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/pyshp/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/2.3.1/\">                <p class=\"release__version\">                  2.3.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-07-27T19:51:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 27, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/2.3.0/\">                <p class=\"release__version\">                  2.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-04-30T08:56:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 30, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/2.2.0/\">                <p class=\"release__version\">                  2.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-02-02T17:11:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 2, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/2.1.3/\">                <p class=\"release__version\">                  2.1.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-01-14T14:12:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 14, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/2.1.2/\">                <p class=\"release__version\">                  2.1.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-09-10T22:02:06+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 10, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/2.1.1/\">                <p class=\"release__version\">                  2.1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-09-09T20:25:15+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 9, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/2.1.0/\">                <p class=\"release__version\">                  2.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-02-15T20:12:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 15, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/2.0.1/\">                <p class=\"release__version\">                  2.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-11-07T05:59:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 7, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/2.0.0/\">                <p class=\"release__version\">                  2.0.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-11-05T04:18:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 5, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.2.12/\">                <p class=\"release__version\">                  1.2.12                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-08-24T14:58:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 24, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.2.11/\">                <p class=\"release__version\">                  1.2.11                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-04-29T21:14:40+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 29, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.2.10/\">                <p class=\"release__version\">                  1.2.10                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-09-24T19:44:38+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 24, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.2.9/\">                <p class=\"release__version\">                  1.2.9                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-09-22T21:04:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 22, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.2.3/\">                <p class=\"release__version\">                  1.2.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-06-22T04:11:08+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 22, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.2.2/\">                <p class=\"release__version\">                  1.2.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-06-22T03:03:58+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 22, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.2.1/\">                <p class=\"release__version\">                  1.2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2014-05-12T03:02:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 12, 2014</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.2.0/\">                <p class=\"release__version\">                  1.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-09-06T02:09:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 6, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.1.9/\">                <p class=\"release__version\">                  1.1.9                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-07-27T21:09:35+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 27, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.1.8/\">                <p class=\"release__version\">                  1.1.8                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-07-02T16:35:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 2, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.1.7/\">                <p class=\"release__version\">                  1.1.7                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-06-23T19:21:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 23, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.1.4/\">                <p class=\"release__version\">                  1.1.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2011-10-03T04:43:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 3, 2011</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.1.3/\">                <p class=\"release__version\">                  1.1.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2011-09-27T02:58:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 27, 2011</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.1.0/\">                <p class=\"release__version\">                  1.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2011-09-22T03:23:52+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 22, 2011</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.0.6/\">                <p class=\"release__version\">                  1.0.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2011-09-05T04:22:10+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 5, 2011</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/pyshp/1.0.5/\">                <p class=\"release__version\">                  1.0.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2011-09-02T19:06:57+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 2, 2011</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/63/9f/0dd21250c60375a532c35e89fad8d5e8a3f1a2e3f7c389ccc5a60b05263e/pyshp-2.3.1.tar.gz\">          pyshp-2.3.1.tar.gz        </a>        (1.7 MB        <a href=\"#copy-hash-modal-c9bd134c-5e3e-4401-9658-8534d4af39a7\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2022-07-27T19:51:28+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 27, 2022</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/98/2f/68116db5b36b895c0450e3072b8cb6c2fac0359279b182ea97014d3c8ac0/pyshp-2.3.1-py2.py3-none-any.whl\">          pyshp-2.3.1-py2.py3-none-any.whl        </a>        (46.5 kB        <a href=\"#copy-hash-modal-92427574-cd19-450e-b3da-e288fd861088\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2022-07-27T19:51:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 27, 2022</time>          <code>py2</code>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-c9bd134c-5e3e-4401-9658-8534d4af39a7\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for pyshp-2.3.1.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for pyshp-2.3.1.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">4caec82fd8dd096feba8217858068bacb2a3b5950f43c048c6dc32a3489d5af1</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">ebc36b72d1122e03ab105eabdd113964</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">639f0dd21250c60375a532c35e89fad8d5e8a3f1a2e3f7c389ccc5a60b05263e</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-92427574-cd19-450e-b3da-e288fd861088\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for pyshp-2.3.1-py2.py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for pyshp-2.3.1-py2.py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">67024c0ccdc352ba5db777c4e968483782dfa78f8e200672a90d2d30fd8b7b49</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">b503177e3e4e06725960ef15e7f3ae17</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">982f68116db5b36b895c0450e3072b8cb6c2fac0359279b182ea97014d3c8ac0</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
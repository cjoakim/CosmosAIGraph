{
  "libtype": "pypi",
  "libname": "parameterized",
  "url": "https://pypi.org/project/parameterized/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>parameterized \u00b7 PyPI</title>    <meta name=\"description\" content=\"Parameterized testing with any Python test framework\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for parameterized\" href=\"/rss/project/parameterized/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/parameterized/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/parameterized/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"parameterized\">    <meta property=\"og:description\" content=\"Parameterized testing with any Python test framework\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/wolever/parameterized\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:wolever/parameterized+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        parameterized 0.9.0      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install parameterized</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/parameterized/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2023-03-27T02:01:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 27, 2023</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/parameterized\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Parameterized testing with any Python test framework</p><div data-html-include=\"/_includes/edit-project-button/parameterized\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for parameterized\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/wolever/parameterized\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/parameterized\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> BSD License (FreeBSD)</p>    <p><strong>Author:</strong> <a href=\"mailto:david@wolever.net\">David Wolever</a></p>  <p>    <strong>Requires:</strong> Python &gt;=3.7  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/wolever/\" aria-label=\"wolever\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/b25bbb4bf2a04fdbe90a1802ad88a73621645b1d/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f66306532383662613034383265353739303465383965373533613462333665363f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for wolever from gravatar.com\" title=\"Avatar for wolever from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            wolever          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+BSD+License\">            OSI Approved :: BSD License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for parameterized\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <a href=\"https://pypi.org/project/parameterized/\" rel=nofollow><img alt=PyPI src=\"https://pypi-camo.freetls.fastly.net/74c35ad6a834d2d7d8ba543706c770fefb553114/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706172616d65746572697a6564\"></a><a href=\"https://pypi.org/project/parameterized/\" rel=nofollow><img alt=\"PyPI - Downloads\" src=\"https://pypi-camo.freetls.fastly.net/15a5aac5988980a049c6c38d09ba9adbd0b38d03/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f706172616d65746572697a6564\"></a><a href=\"https://circleci.com/gh/wolever/parameterized\" rel=nofollow><img alt=\"Circle CI\" src=\"https://pypi-camo.freetls.fastly.net/17cee1b5e8769ed752c39205e532441d579e3773/68747470733a2f2f636972636c6563692e636f6d2f67682f776f6c657665722f706172616d65746572697a65642e7376673f7374796c653d737667\"></a><p>Parameterized testing in Python sucks.</p><p><span class=\"docutils literal\">parameterized</span> fixes that. For everything. Parameterized testing for nose,parameterized testing for py.test, parameterized testing for unittest.</p><pre><code><span class=c1># test_math.py</span><span class=w></span><span class=kn>from</span> <span class=nn>nose.tools</span> <span class=kn>import</span> <span class=n>assert_equal</span><span class=w></span><span class=kn>from</span> <span class=nn>parameterized</span> <span class=kn>import</span> <span class=n>parameterized</span><span class=p>,</span> <span class=n>parameterized_class</span><span class=w></span><span class=kn>import</span> <span class=nn>unittest</span><span class=w></span><span class=kn>import</span> <span class=nn>math</span><span class=w></span><span class=nd>@parameterized</span><span class=p>([</span><span class=w></span>    <span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>4</span><span class=p>),</span><span class=w></span>    <span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>8</span><span class=p>),</span><span class=w></span>    <span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>9</span><span class=p>,</span> <span class=mi>1</span><span class=p>),</span><span class=w></span>    <span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>9</span><span class=p>,</span> <span class=mi>0</span><span class=p>),</span><span class=w></span><span class=p>])</span><span class=w></span><span class=k>def</span> <span class=nf>test_pow</span><span class=p>(</span><span class=n>base</span><span class=p>,</span> <span class=n>exponent</span><span class=p>,</span> <span class=n>expected</span><span class=p>):</span><span class=w></span>   <span class=n>assert_equal</span><span class=p>(</span><span class=n>math</span><span class=o>.</span><span class=n>pow</span><span class=p>(</span><span class=n>base</span><span class=p>,</span> <span class=n>exponent</span><span class=p>),</span> <span class=n>expected</span><span class=p>)</span><span class=w></span><span class=k>class</span> <span class=nc>TestMathUnitTest</span><span class=p>(</span><span class=n>unittest</span><span class=o>.</span><span class=n>TestCase</span><span class=p>):</span><span class=w></span>   <span class=nd>@parameterized</span><span class=o>.</span><span class=n>expand</span><span class=p>([</span><span class=w></span>       <span class=p>(</span><span class=s2>\"negative\"</span><span class=p>,</span> <span class=o>-</span><span class=mf>1.5</span><span class=p>,</span> <span class=o>-</span><span class=mf>2.0</span><span class=p>),</span><span class=w></span>       <span class=p>(</span><span class=s2>\"integer\"</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mf>1.0</span><span class=p>),</span><span class=w></span>       <span class=p>(</span><span class=s2>\"large fraction\"</span><span class=p>,</span> <span class=mf>1.6</span><span class=p>,</span> <span class=mi>1</span><span class=p>),</span><span class=w></span>   <span class=p>])</span><span class=w></span>   <span class=k>def</span> <span class=nf>test_floor</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>name</span><span class=p>,</span> <span class=nb>input</span><span class=p>,</span> <span class=n>expected</span><span class=p>):</span><span class=w></span>       <span class=n>assert_equal</span><span class=p>(</span><span class=n>math</span><span class=o>.</span><span class=n>floor</span><span class=p>(</span><span class=nb>input</span><span class=p>),</span> <span class=n>expected</span><span class=p>)</span><span class=w></span><span class=nd>@parameterized_class</span><span class=p>((</span><span class=s1>'a'</span><span class=p>,</span> <span class=s1>'b'</span><span class=p>,</span> <span class=s1>'expected_sum'</span><span class=p>,</span> <span class=s1>'expected_product'</span><span class=p>),</span> <span class=p>[</span><span class=w></span>   <span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>2</span><span class=p>),</span><span class=w></span>   <span class=p>(</span><span class=mi>5</span><span class=p>,</span> <span class=mi>5</span><span class=p>,</span> <span class=mi>10</span><span class=p>,</span> <span class=mi>25</span><span class=p>),</span><span class=w></span><span class=p>])</span><span class=w></span><span class=k>class</span> <span class=nc>TestMathClass</span><span class=p>(</span><span class=n>unittest</span><span class=o>.</span><span class=n>TestCase</span><span class=p>):</span><span class=w></span>   <span class=k>def</span> <span class=nf>test_add</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>      <span class=n>assert_equal</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>a</span> <span class=o>+</span> <span class=bp>self</span><span class=o>.</span><span class=n>b</span><span class=p>,</span> <span class=bp>self</span><span class=o>.</span><span class=n>expected_sum</span><span class=p>)</span><span class=w></span>   <span class=k>def</span> <span class=nf>test_multiply</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>      <span class=n>assert_equal</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>a</span> <span class=o>*</span> <span class=bp>self</span><span class=o>.</span><span class=n>b</span><span class=p>,</span> <span class=bp>self</span><span class=o>.</span><span class=n>expected_product</span><span class=p>)</span><span class=w></span><span class=nd>@parameterized_class</span><span class=p>([</span><span class=w></span>   <span class=p>{</span> <span class=s2>\"a\"</span><span class=p>:</span> <span class=mi>3</span><span class=p>,</span> <span class=s2>\"expected\"</span><span class=p>:</span> <span class=mi>2</span> <span class=p>},</span><span class=w></span>   <span class=p>{</span> <span class=s2>\"b\"</span><span class=p>:</span> <span class=mi>5</span><span class=p>,</span> <span class=s2>\"expected\"</span><span class=p>:</span> <span class=o>-</span><span class=mi>4</span> <span class=p>},</span><span class=w></span><span class=p>])</span><span class=w></span><span class=k>class</span> <span class=nc>TestMathClassDict</span><span class=p>(</span><span class=n>unittest</span><span class=o>.</span><span class=n>TestCase</span><span class=p>):</span><span class=w></span>   <span class=n>a</span> <span class=o>=</span> <span class=mi>1</span><span class=w></span>   <span class=n>b</span> <span class=o>=</span> <span class=mi>1</span><span class=w></span>   <span class=k>def</span> <span class=nf>test_subtract</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>      <span class=n>assert_equal</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>a</span> <span class=o>-</span> <span class=bp>self</span><span class=o>.</span><span class=n>b</span><span class=p>,</span> <span class=bp>self</span><span class=o>.</span><span class=n>expected</span><span class=p>)</span></code></pre><p>With nose (and nose2):</p><pre>$ nosetests -v test_math.pytest_floor_0_negative (test_math.TestMathUnitTest) ... oktest_floor_1_integer (test_math.TestMathUnitTest) ... oktest_floor_2_large_fraction (test_math.TestMathUnitTest) ... oktest_math.test_pow(2, 2, 4, {}) ... oktest_math.test_pow(2, 3, 8, {}) ... oktest_math.test_pow(1, 9, 1, {}) ... oktest_math.test_pow(0, 9, 0, {}) ... oktest_add (test_math.TestMathClass_0) ... oktest_multiply (test_math.TestMathClass_0) ... oktest_add (test_math.TestMathClass_1) ... oktest_multiply (test_math.TestMathClass_1) ... oktest_subtract (test_math.TestMathClassDict_0) ... ok----------------------------------------------------------------------Ran 12 tests in 0.015sOK</pre><p>As the package name suggests, nose is best supported and will be used for allfurther examples.</p><p>With py.test (version 2.0 and above):</p><pre>$ py.test -v test_math.py============================= test session starts ==============================platform darwin -- Python 3.6.1, pytest-3.1.3, py-1.4.34, pluggy-0.4.0collecting ... collected 13 itemstest_math.py::test_pow::[0] PASSEDtest_math.py::test_pow::[1] PASSEDtest_math.py::test_pow::[2] PASSEDtest_math.py::test_pow::[3] PASSEDtest_math.py::TestMathUnitTest::test_floor_0_negative PASSEDtest_math.py::TestMathUnitTest::test_floor_1_integer PASSEDtest_math.py::TestMathUnitTest::test_floor_2_large_fraction PASSEDtest_math.py::TestMathClass_0::test_add PASSEDtest_math.py::TestMathClass_0::test_multiply PASSEDtest_math.py::TestMathClass_1::test_add PASSEDtest_math.py::TestMathClass_1::test_multiply PASSEDtest_math.py::TestMathClassDict_0::test_subtract PASSED==================== 12 passed, 4 warnings in 0.16 seconds =====================</pre><p>With unittest (and unittest2):</p><pre>$ python -m unittest -v test_mathtest_floor_0_negative (test_math.TestMathUnitTest) ... oktest_floor_1_integer (test_math.TestMathUnitTest) ... oktest_floor_2_large_fraction (test_math.TestMathUnitTest) ... oktest_add (test_math.TestMathClass_0) ... oktest_multiply (test_math.TestMathClass_0) ... oktest_add (test_math.TestMathClass_1) ... oktest_multiply (test_math.TestMathClass_1) ... oktest_subtract (test_math.TestMathClassDict_0) ... ok----------------------------------------------------------------------Ran 8 tests in 0.001sOK</pre><p>(note: because unittest does not support test decorators, only tests createdwith <span class=\"docutils literal\">@parameterized.expand</span> will be executed)</p><p>With green:</p><pre>$ green test_math.py -vvvtest_math  TestMathClass_1.   test_method_a.   test_method_b  TestMathClass_2.   test_method_a.   test_method_b  TestMathClass_3.   test_method_a.   test_method_b  TestMathUnitTest.   test_floor_0_negative.   test_floor_1_integer.   test_floor_2_large_fraction  TestMathClass_0.   test_add.   test_multiply  TestMathClass_1.   test_add.   test_multiply  TestMathClassDict_0.   test_subtractRan 12 tests in 0.121sOK (passes=9)</pre><section id=installation><h2>Installation</h2><pre>$ pip install parameterized</pre></section><section id=compatibility><h2>Compatibility</h2><p><a href=\"https://app.circleci.com/pipelines/github/wolever/parameterized?branch=master\" rel=nofollow>Yes</a> (mostly).</p><table><thead><tr><th class=\"head stub\"></th><th class=head><p>Py3.7</th><th class=head><p>Py3.8</th><th class=head><p>Py3.9</th><th class=head><p>Py3.10</th><th class=head><p>Py3.11</th><th class=head><p>PyPy3</th><th class=head><p><span class=\"docutils literal\">@mock.patch</span></th></tr></thead><tbody><tr><th class=stub><p>nose</th><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>no\u00a7</td><td><p>no\u00a7</td><td><p>yes</td></tr><tr><th class=stub><p>nose2</th><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>yes</td></tr><tr><th class=stub><p>py.test 2</th><td><p>no*</td><td><p>no*</td><td><p>no*</td><td><p>no*</td><td><p>no*</td><td><p>no*</td><td><p>no*</td></tr><tr><th class=stub><p>py.test 3</th><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>no*</td><td><p>no*</td><td><p>yes</td></tr><tr><th class=stub><p>py.test 4</th><td><p>no**</td><td><p>no**</td><td><p>no**</td><td><p>no**</td><td><p>no**</td><td><p>no**</td><td><p>no**</td></tr><tr><th class=stub><p>py.test fixtures</th><td><p>no\u2020</td><td><p>no\u2020</td><td><p>no\u2020</td><td><p>no\u2020</td><td><p>no\u2020</td><td><p>no\u2020</td><td><p>no\u2020</td></tr><tr><th class=stub><div class=line-block><div class=line>unittest</div><div class=line>(<span class=\"docutils literal\">@parameterized.expand</span>)</div></div></th><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>yes</td></tr><tr><th class=stub><div class=line-block><div class=line>unittest2</div><div class=line>(<span class=\"docutils literal\">@parameterized.expand</span>)</div></div></th><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>yes</td><td><p>no\u00a7</td><td><p>no\u00a7</td><td><p>yes</td></tr></tbody></table><p>\u00a7: nose and unittest2 - both of which were last updated in 2015 - sadly do notappear to support Python 3.10 or 3.11.</p><p>*: <a href=\"https://github.com/wolever/parameterized/issues/71\" rel=nofollow>py.test 2 does not appear to work under Python 3 (#71)</a>, and<a href=\"https://github.com/wolever/parameterized/issues/154\" rel=nofollow>py.test 3 does not appear to work under Python 3.10 or 3.11 (#154)</a>.</p><p>**: py.test 4 is not yet supported (but coming!) in <a href=\"https://github.com/wolever/parameterized/issues/34\" rel=nofollow>issue #34</a></p><p>\u2020: py.test fixture support is documented in <a href=\"https://github.com/wolever/parameterized/issues/81\" rel=nofollow>issue #81</a></p></section><section id=dependencies><h2>Dependencies</h2><p>(this section left intentionally blank)</p></section><section id=exhaustive-usage-examples><h2>Exhaustive Usage Examples</h2><p>The <span class=\"docutils literal\">@parameterized</span> and <span class=\"docutils literal\">@parameterized.expand</span> decorators accept a listor iterable of tuples or <span class=\"docutils literal\"><span class=pre>param(...)</span></span>, or a callable which returns a list oriterable:</p><pre><code><span class=kn>from</span> <span class=nn>parameterized</span> <span class=kn>import</span> <span class=n>parameterized</span><span class=p>,</span> <span class=n>param</span><span class=w></span><span class=c1># A list of tuples</span><span class=w></span><span class=nd>@parameterized</span><span class=p>([</span><span class=w></span>    <span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>5</span><span class=p>),</span><span class=w></span>    <span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=mi>5</span><span class=p>,</span> <span class=mi>8</span><span class=p>),</span><span class=w></span><span class=p>])</span><span class=w></span><span class=k>def</span> <span class=nf>test_add</span><span class=p>(</span><span class=n>a</span><span class=p>,</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>):</span><span class=w></span>    <span class=n>assert_equal</span><span class=p>(</span><span class=n>a</span> <span class=o>+</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>)</span><span class=w></span><span class=c1># A list of params</span><span class=w></span><span class=nd>@parameterized</span><span class=p>([</span><span class=w></span>    <span class=n>param</span><span class=p>(</span><span class=s2>\"10\"</span><span class=p>,</span> <span class=mi>10</span><span class=p>),</span><span class=w></span>    <span class=n>param</span><span class=p>(</span><span class=s2>\"10\"</span><span class=p>,</span> <span class=mi>16</span><span class=p>,</span> <span class=n>base</span><span class=o>=</span><span class=mi>16</span><span class=p>),</span><span class=w></span><span class=p>])</span><span class=w></span><span class=k>def</span> <span class=nf>test_int</span><span class=p>(</span><span class=n>str_val</span><span class=p>,</span> <span class=n>expected</span><span class=p>,</span> <span class=n>base</span><span class=o>=</span><span class=mi>10</span><span class=p>):</span><span class=w></span>    <span class=n>assert_equal</span><span class=p>(</span><span class=nb>int</span><span class=p>(</span><span class=n>str_val</span><span class=p>,</span> <span class=n>base</span><span class=o>=</span><span class=n>base</span><span class=p>),</span> <span class=n>expected</span><span class=p>)</span><span class=w></span><span class=c1># An iterable of params</span><span class=w></span><span class=nd>@parameterized</span><span class=p>(</span><span class=w></span>    <span class=n>param</span><span class=o>.</span><span class=n>explicit</span><span class=p>(</span><span class=o>*</span><span class=n>json</span><span class=o>.</span><span class=n>loads</span><span class=p>(</span><span class=n>line</span><span class=p>))</span><span class=w></span>    <span class=k>for</span> <span class=n>line</span> <span class=ow>in</span> <span class=nb>open</span><span class=p>(</span><span class=s2>\"testcases.jsons\"</span><span class=p>)</span><span class=w></span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>test_from_json_file</span><span class=p>(</span><span class=o>...</span><span class=p>):</span><span class=w></span>    <span class=o>...</span><span class=w></span><span class=c1># A callable which returns a list of tuples</span><span class=w></span><span class=k>def</span> <span class=nf>load_test_cases</span><span class=p>():</span><span class=w></span>    <span class=k>return</span> <span class=p>[</span><span class=w></span>        <span class=p>(</span><span class=s2>\"test1\"</span><span class=p>,</span> <span class=p>),</span><span class=w></span>        <span class=p>(</span><span class=s2>\"test2\"</span><span class=p>,</span> <span class=p>),</span><span class=w></span>    <span class=p>]</span><span class=w></span><span class=nd>@parameterized</span><span class=p>(</span><span class=n>load_test_cases</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>test_from_function</span><span class=p>(</span><span class=n>name</span><span class=p>):</span><span class=w></span>    <span class=o>...</span></code></pre><p>Note that, when using an iterator or a generator, all the items will be loadedinto memory before the start of the test run (we do this explicitly to ensurethat generators are exhausted exactly once in multi-process or multi-threadedtesting environments).</p><p>The <span class=\"docutils literal\">@parameterized</span> decorator can be used test class methods, and standalonefunctions:</p><pre><code><span class=kn>from</span> <span class=nn>parameterized</span> <span class=kn>import</span> <span class=n>parameterized</span><span class=w></span><span class=k>class</span> <span class=nc>AddTest</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span><span class=w></span>    <span class=nd>@parameterized</span><span class=p>([</span><span class=w></span>        <span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>5</span><span class=p>),</span><span class=w></span>    <span class=p>])</span><span class=w></span>    <span class=k>def</span> <span class=nf>test_add</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>a</span><span class=p>,</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>):</span><span class=w></span>        <span class=n>assert_equal</span><span class=p>(</span><span class=n>a</span> <span class=o>+</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>)</span><span class=w></span><span class=nd>@parameterized</span><span class=p>([</span><span class=w></span>    <span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>5</span><span class=p>),</span><span class=w></span><span class=p>])</span><span class=w></span><span class=k>def</span> <span class=nf>test_add</span><span class=p>(</span><span class=n>a</span><span class=p>,</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>):</span><span class=w></span>    <span class=n>assert_equal</span><span class=p>(</span><span class=n>a</span> <span class=o>+</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>)</span></code></pre><p>And <span class=\"docutils literal\">@parameterized.expand</span> can be used to generate test methods insituations where test generators cannot be used (for example, when the testclass is a subclass of <span class=\"docutils literal\">unittest.TestCase</span>):</p><pre><code><span class=kn>import</span> <span class=nn>unittest</span><span class=w></span><span class=kn>from</span> <span class=nn>parameterized</span> <span class=kn>import</span> <span class=n>parameterized</span><span class=w></span><span class=k>class</span> <span class=nc>AddTestCase</span><span class=p>(</span><span class=n>unittest</span><span class=o>.</span><span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=nd>@parameterized</span><span class=o>.</span><span class=n>expand</span><span class=p>([</span><span class=w></span>        <span class=p>(</span><span class=s2>\"2 and 3\"</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>5</span><span class=p>),</span><span class=w></span>        <span class=p>(</span><span class=s2>\"3 and 5\"</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>5</span><span class=p>,</span> <span class=mi>8</span><span class=p>),</span><span class=w></span>    <span class=p>])</span><span class=w></span>    <span class=k>def</span> <span class=nf>test_add</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>_</span><span class=p>,</span> <span class=n>a</span><span class=p>,</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>):</span><span class=w></span>        <span class=n>assert_equal</span><span class=p>(</span><span class=n>a</span> <span class=o>+</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>)</span></code></pre><p>Will create the test cases:</p><pre>$ nosetests example.pytest_add_0_2_and_3 (example.AddTestCase) ... oktest_add_1_3_and_5 (example.AddTestCase) ... ok----------------------------------------------------------------------Ran 2 tests in 0.001sOK</pre><p>Note that <span class=\"docutils literal\">@parameterized.expand</span> works by creating new methods on the testclass. If the first parameter is a string, that string will be added to the endof the method name. For example, the test case above will generate the methods<span class=\"docutils literal\">test_add_0_2_and_3</span> and <span class=\"docutils literal\">test_add_1_3_and_5</span>.</p><p>The names of the test cases generated by <span class=\"docutils literal\">@parameterized.expand</span> can becustomized using the <span class=\"docutils literal\">name_func</span> keyword argument. The value shouldbe a function which accepts three arguments: <span class=\"docutils literal\">testcase_func</span>, <span class=\"docutils literal\">param_num</span>,and <span class=\"docutils literal\">params</span>, and it should return the name of the test case.<span class=\"docutils literal\">testcase_func</span> will be the function to be tested, <span class=\"docutils literal\">param_num</span> will be theindex of the test case parameters in the list of parameters, and <span class=\"docutils literal\">param</span>(an instance of <span class=\"docutils literal\">param</span>) will be the parameters which will be used.</p><pre><code><span class=kn>import</span> <span class=nn>unittest</span><span class=w></span><span class=kn>from</span> <span class=nn>parameterized</span> <span class=kn>import</span> <span class=n>parameterized</span><span class=w></span><span class=k>def</span> <span class=nf>custom_name_func</span><span class=p>(</span><span class=n>testcase_func</span><span class=p>,</span> <span class=n>param_num</span><span class=p>,</span> <span class=n>param</span><span class=p>):</span><span class=w></span>    <span class=k>return</span> <span class=s2>\"</span><span class=si>%s</span><span class=s2>_</span><span class=si>%s</span><span class=s2>\"</span> <span class=o>%</span><span class=p>(</span><span class=w></span>        <span class=n>testcase_func</span><span class=o>.</span><span class=vm>__name__</span><span class=p>,</span><span class=w></span>        <span class=n>parameterized</span><span class=o>.</span><span class=n>to_safe_name</span><span class=p>(</span><span class=s2>\"_\"</span><span class=o>.</span><span class=n>join</span><span class=p>(</span><span class=nb>str</span><span class=p>(</span><span class=n>x</span><span class=p>)</span> <span class=k>for</span> <span class=n>x</span> <span class=ow>in</span> <span class=n>param</span><span class=o>.</span><span class=n>args</span><span class=p>)),</span><span class=w></span>    <span class=p>)</span><span class=w></span><span class=k>class</span> <span class=nc>AddTestCase</span><span class=p>(</span><span class=n>unittest</span><span class=o>.</span><span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=nd>@parameterized</span><span class=o>.</span><span class=n>expand</span><span class=p>([</span><span class=w></span>        <span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>5</span><span class=p>),</span><span class=w></span>        <span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>5</span><span class=p>),</span><span class=w></span>    <span class=p>],</span> <span class=n>name_func</span><span class=o>=</span><span class=n>custom_name_func</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>test_add</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>a</span><span class=p>,</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>):</span><span class=w></span>        <span class=n>assert_equal</span><span class=p>(</span><span class=n>a</span> <span class=o>+</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>)</span></code></pre><p>Will create the test cases:</p><pre>$ nosetests example.pytest_add_1_2_3 (example.AddTestCase) ... oktest_add_2_3_5 (example.AddTestCase) ... ok----------------------------------------------------------------------Ran 2 tests in 0.001sOK</pre><p>The <span class=\"docutils literal\"><span class=pre>param(...)</span></span> helper class stores the parameters for one specific testcase.  It can be used to pass keyword arguments to test cases:</p><pre><code><span class=kn>from</span> <span class=nn>parameterized</span> <span class=kn>import</span> <span class=n>parameterized</span><span class=p>,</span> <span class=n>param</span><span class=w></span><span class=nd>@parameterized</span><span class=p>([</span><span class=w></span>    <span class=n>param</span><span class=p>(</span><span class=s2>\"10\"</span><span class=p>,</span> <span class=mi>10</span><span class=p>),</span><span class=w></span>    <span class=n>param</span><span class=p>(</span><span class=s2>\"10\"</span><span class=p>,</span> <span class=mi>16</span><span class=p>,</span> <span class=n>base</span><span class=o>=</span><span class=mi>16</span><span class=p>),</span><span class=w></span><span class=p>])</span><span class=w></span><span class=k>def</span> <span class=nf>test_int</span><span class=p>(</span><span class=n>str_val</span><span class=p>,</span> <span class=n>expected</span><span class=p>,</span> <span class=n>base</span><span class=o>=</span><span class=mi>10</span><span class=p>):</span><span class=w></span>    <span class=n>assert_equal</span><span class=p>(</span><span class=nb>int</span><span class=p>(</span><span class=n>str_val</span><span class=p>,</span> <span class=n>base</span><span class=o>=</span><span class=n>base</span><span class=p>),</span> <span class=n>expected</span><span class=p>)</span></code></pre><p>If test cases have a docstring, the parameters for that test case will beappended to the first line of the docstring. This behavior can be controlledwith the <span class=\"docutils literal\">doc_func</span> argument:</p><pre><code><span class=kn>from</span> <span class=nn>parameterized</span> <span class=kn>import</span> <span class=n>parameterized</span><span class=w></span><span class=nd>@parameterized</span><span class=p>([</span><span class=w></span>    <span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>),</span><span class=w></span>    <span class=p>(</span><span class=mi>4</span><span class=p>,</span> <span class=mi>5</span><span class=p>,</span> <span class=mi>9</span><span class=p>),</span><span class=w></span><span class=p>])</span><span class=w></span><span class=k>def</span> <span class=nf>test_add</span><span class=p>(</span><span class=n>a</span><span class=p>,</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>):</span><span class=w>    </span><span class=sd>\"\"\" Test addition. \"\"\"</span><span class=w></span>    <span class=n>assert_equal</span><span class=p>(</span><span class=n>a</span> <span class=o>+</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>my_doc_func</span><span class=p>(</span><span class=n>func</span><span class=p>,</span> <span class=n>num</span><span class=p>,</span> <span class=n>param</span><span class=p>):</span><span class=w></span>    <span class=k>return</span> <span class=s2>\"</span><span class=si>%s</span><span class=s2>: </span><span class=si>%s</span><span class=s2> with </span><span class=si>%s</span><span class=s2>\"</span> <span class=o>%</span><span class=p>(</span><span class=n>num</span><span class=p>,</span> <span class=n>func</span><span class=o>.</span><span class=vm>__name__</span><span class=p>,</span> <span class=n>param</span><span class=p>)</span><span class=w></span><span class=nd>@parameterized</span><span class=p>([</span><span class=w></span>    <span class=p>(</span><span class=mi>5</span><span class=p>,</span> <span class=mi>4</span><span class=p>,</span> <span class=mi>1</span><span class=p>),</span><span class=w></span>    <span class=p>(</span><span class=mi>9</span><span class=p>,</span> <span class=mi>6</span><span class=p>,</span> <span class=mi>3</span><span class=p>),</span><span class=w></span><span class=p>],</span> <span class=n>doc_func</span><span class=o>=</span><span class=n>my_doc_func</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>test_subtraction</span><span class=p>(</span><span class=n>a</span><span class=p>,</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>):</span><span class=w></span>    <span class=n>assert_equal</span><span class=p>(</span><span class=n>a</span> <span class=o>-</span> <span class=n>b</span><span class=p>,</span> <span class=n>expected</span><span class=p>)</span></code></pre><pre>$ nosetests example.pyTest addition. [with a=1, b=2, expected=3] ... okTest addition. [with a=4, b=5, expected=9] ... ok0: test_subtraction with param(*(5, 4, 1)) ... ok1: test_subtraction with param(*(9, 6, 3)) ... ok----------------------------------------------------------------------Ran 4 tests in 0.001sOK</pre><p>Finally <span class=\"docutils literal\">@parameterized_class</span> parameterizes an entire class, usingeither a list of attributes, or a list of dicts that will be applied to theclass:</p><pre><code><span class=kn>from</span> <span class=nn>yourapp.models</span> <span class=kn>import</span> <span class=n>User</span><span class=w></span><span class=kn>from</span> <span class=nn>parameterized</span> <span class=kn>import</span> <span class=n>parameterized_class</span><span class=w></span><span class=nd>@parameterized_class</span><span class=p>([</span><span class=w></span>   <span class=p>{</span> <span class=s2>\"username\"</span><span class=p>:</span> <span class=s2>\"user_1\"</span><span class=p>,</span> <span class=s2>\"access_level\"</span><span class=p>:</span> <span class=mi>1</span> <span class=p>},</span><span class=w></span>   <span class=p>{</span> <span class=s2>\"username\"</span><span class=p>:</span> <span class=s2>\"user_2\"</span><span class=p>,</span> <span class=s2>\"access_level\"</span><span class=p>:</span> <span class=mi>2</span><span class=p>,</span> <span class=s2>\"expected_status_code\"</span><span class=p>:</span> <span class=mi>404</span> <span class=p>},</span><span class=w></span><span class=p>])</span><span class=w></span><span class=k>class</span> <span class=nc>TestUserAccessLevel</span><span class=p>(</span><span class=n>TestCase</span><span class=p>):</span><span class=w></span>   <span class=n>expected_status_code</span> <span class=o>=</span> <span class=mi>200</span><span class=w></span>   <span class=k>def</span> <span class=nf>setUp</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>      <span class=bp>self</span><span class=o>.</span><span class=n>client</span><span class=o>.</span><span class=n>force_login</span><span class=p>(</span><span class=n>User</span><span class=o>.</span><span class=n>objects</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>username</span><span class=o>=</span><span class=bp>self</span><span class=o>.</span><span class=n>username</span><span class=p>)[</span><span class=mi>0</span><span class=p>])</span><span class=w></span>   <span class=k>def</span> <span class=nf>test_url_a</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>      <span class=n>response</span> <span class=o>=</span> <span class=bp>self</span><span class=o>.</span><span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s1>'/url'</span><span class=p>)</span><span class=w></span>      <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=n>response</span><span class=o>.</span><span class=n>status_code</span><span class=p>,</span> <span class=bp>self</span><span class=o>.</span><span class=n>expected_status_code</span><span class=p>)</span><span class=w></span>   <span class=k>def</span> <span class=nf>tearDown</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>      <span class=bp>self</span><span class=o>.</span><span class=n>client</span><span class=o>.</span><span class=n>logout</span><span class=p>()</span><span class=w></span><span class=nd>@parameterized_class</span><span class=p>((</span><span class=s2>\"username\"</span><span class=p>,</span> <span class=s2>\"access_level\"</span><span class=p>,</span> <span class=s2>\"expected_status_code\"</span><span class=p>),</span> <span class=p>[</span><span class=w></span>   <span class=p>(</span><span class=s2>\"user_1\"</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>200</span><span class=p>),</span><span class=w></span>   <span class=p>(</span><span class=s2>\"user_2\"</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>404</span><span class=p>)</span><span class=w></span><span class=p>])</span><span class=w></span><span class=k>class</span> <span class=nc>TestUserAccessLevel</span><span class=p>(</span><span class=n>TestCase</span><span class=p>):</span><span class=w></span>   <span class=k>def</span> <span class=nf>setUp</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>      <span class=bp>self</span><span class=o>.</span><span class=n>client</span><span class=o>.</span><span class=n>force_login</span><span class=p>(</span><span class=n>User</span><span class=o>.</span><span class=n>objects</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>username</span><span class=o>=</span><span class=bp>self</span><span class=o>.</span><span class=n>username</span><span class=p>)[</span><span class=mi>0</span><span class=p>])</span><span class=w></span>   <span class=k>def</span> <span class=nf>test_url_a</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>      <span class=n>response</span> <span class=o>=</span> <span class=bp>self</span><span class=o>.</span><span class=n>client</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s2>\"/url\"</span><span class=p>)</span><span class=w></span>      <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=n>response</span><span class=o>.</span><span class=n>status_code</span><span class=p>,</span> <span class=bp>self</span><span class=o>.</span><span class=n>expected_status_code</span><span class=p>)</span><span class=w></span>   <span class=k>def</span> <span class=nf>tearDown</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>      <span class=bp>self</span><span class=o>.</span><span class=n>client</span><span class=o>.</span><span class=n>logout</span><span class=p>()</span></code></pre><p>The <span class=\"docutils literal\">@parameterized_class</span> decorator accepts a <span class=\"docutils literal\">class_name_func</span> argument,which controls the name of the parameterized classes generated by<span class=\"docutils literal\">@parameterized_class</span>:</p><pre><code><span class=kn>from</span> <span class=nn>parameterized</span> <span class=kn>import</span> <span class=n>parameterized</span><span class=p>,</span> <span class=n>parameterized_class</span><span class=w></span><span class=k>def</span> <span class=nf>get_class_name</span><span class=p>(</span><span class=bp>cls</span><span class=p>,</span> <span class=n>num</span><span class=p>,</span> <span class=n>params_dict</span><span class=p>):</span><span class=w></span>    <span class=c1># By default the generated class named includes either the \"name\"</span><span class=w></span>    <span class=c1># parameter (if present), or the first string value. This example shows</span><span class=w></span>    <span class=c1># multiple parameters being included in the generated class name:</span><span class=w></span>    <span class=k>return</span> <span class=s2>\"</span><span class=si>%s</span><span class=s2>_</span><span class=si>%s</span><span class=s2>_</span><span class=si>%s%s</span><span class=s2>\"</span> <span class=o>%</span><span class=p>(</span><span class=w></span>        <span class=bp>cls</span><span class=o>.</span><span class=vm>__name__</span><span class=p>,</span><span class=w></span>        <span class=n>num</span><span class=p>,</span><span class=w></span>        <span class=n>parameterized</span><span class=o>.</span><span class=n>to_safe_name</span><span class=p>(</span><span class=n>params_dict</span><span class=p>[</span><span class=s1>'a'</span><span class=p>]),</span><span class=w></span>        <span class=n>parameterized</span><span class=o>.</span><span class=n>to_safe_name</span><span class=p>(</span><span class=n>params_dict</span><span class=p>[</span><span class=s1>'b'</span><span class=p>]),</span><span class=w></span>    <span class=p>)</span><span class=w></span><span class=nd>@parameterized_class</span><span class=p>([</span><span class=w></span>   <span class=p>{</span> <span class=s2>\"a\"</span><span class=p>:</span> <span class=s2>\"hello\"</span><span class=p>,</span> <span class=s2>\"b\"</span><span class=p>:</span> <span class=s2>\" world!\"</span><span class=p>,</span> <span class=s2>\"expected\"</span><span class=p>:</span> <span class=s2>\"hello world!\"</span> <span class=p>},</span><span class=w></span>   <span class=p>{</span> <span class=s2>\"a\"</span><span class=p>:</span> <span class=s2>\"say \"</span><span class=p>,</span> <span class=s2>\"b\"</span><span class=p>:</span> <span class=s2>\" cheese :)\"</span><span class=p>,</span> <span class=s2>\"expected\"</span><span class=p>:</span> <span class=s2>\"say cheese :)\"</span> <span class=p>},</span><span class=w></span><span class=p>],</span> <span class=n>class_name_func</span><span class=o>=</span><span class=n>get_class_name</span><span class=p>)</span><span class=w></span><span class=k>class</span> <span class=nc>TestConcatenation</span><span class=p>(</span><span class=n>TestCase</span><span class=p>):</span><span class=w></span>  <span class=k>def</span> <span class=nf>test_concat</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>      <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>a</span> <span class=o>+</span> <span class=bp>self</span><span class=o>.</span><span class=n>b</span><span class=p>,</span> <span class=bp>self</span><span class=o>.</span><span class=n>expected</span><span class=p>)</span></code></pre><pre>$ nosetests -v test_math.pytest_concat (test_concat.TestConcatenation_0_hello_world_) ... oktest_concat (test_concat.TestConcatenation_0_say_cheese__) ... ok</pre><section id=using-with-single-parameters><h3>Using with Single Parameters</h3><p>If a test function only accepts one parameter and the value is not iterable,then it is possible to supply a list of values without wrapping each one in atuple:</p><pre><code><span class=nd>@parameterized</span><span class=p>([</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>])</span><span class=w></span><span class=k>def</span> <span class=nf>test_greater_than_zero</span><span class=p>(</span><span class=n>value</span><span class=p>):</span><span class=w></span>   <span class=k>assert</span> <span class=n>value</span> <span class=o>&gt;</span> <span class=mi>0</span></code></pre><p>Note, however, that if the single parameter <em>is</em> iterable (such as a list ortuple), then it <em>must</em> be wrapped in a tuple, list, or the <span class=\"docutils literal\"><span class=pre>param(...)</span></span>helper:</p><pre><code><span class=nd>@parameterized</span><span class=p>([</span><span class=w></span>   <span class=p>([</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>],</span> <span class=p>),</span><span class=w></span>   <span class=p>([</span><span class=mi>3</span><span class=p>,</span> <span class=mi>3</span><span class=p>],</span> <span class=p>),</span><span class=w></span>   <span class=p>([</span><span class=mi>6</span><span class=p>],</span> <span class=p>),</span><span class=w></span><span class=p>])</span><span class=w></span><span class=k>def</span> <span class=nf>test_sums_to_6</span><span class=p>(</span><span class=n>numbers</span><span class=p>):</span><span class=w></span>   <span class=k>assert</span> <span class=nb>sum</span><span class=p>(</span><span class=n>numbers</span><span class=p>)</span> <span class=o>==</span> <span class=mi>6</span></code></pre><p>(note, also, that Python requires single element tuples to be defined with atrailing comma: <span class=\"docutils literal\">(foo, )</span>)</p></section><section id=using-with-mock-patch><h3>Using with <span class=\"docutils literal\">@mock.patch</span></h3><p><span class=\"docutils literal\">parameterized</span> can be used with <span class=\"docutils literal\">mock.patch</span>, but the argument orderingcan be confusing. The <span class=\"docutils literal\"><span class=pre>@mock.patch(...)</span></span> decorator must come <em>below</em> the<span class=\"docutils literal\"><span class=pre>@parameterized(...)</span></span>, and the mocked parameters must come <em>last</em>:</p><pre><code><span class=nd>@mock</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=s2>\"os.getpid\"</span><span class=p>)</span><span class=w></span><span class=k>class</span> <span class=nc>TestOS</span><span class=p>(</span><span class=nb>object</span><span class=p>):</span><span class=w></span>   <span class=nd>@parameterized</span><span class=p>(</span><span class=o>...</span><span class=p>)</span><span class=w></span>   <span class=nd>@mock</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=s2>\"os.fdopen\"</span><span class=p>)</span><span class=w></span>   <span class=nd>@mock</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=s2>\"os.umask\"</span><span class=p>)</span><span class=w></span>   <span class=k>def</span> <span class=nf>test_method</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>param1</span><span class=p>,</span> <span class=n>param2</span><span class=p>,</span> <span class=o>...</span><span class=p>,</span> <span class=n>mock_umask</span><span class=p>,</span> <span class=n>mock_fdopen</span><span class=p>,</span> <span class=n>mock_getpid</span><span class=p>):</span><span class=w></span>      <span class=o>...</span></code></pre><p>Note: the same holds true when using <span class=\"docutils literal\">@parameterized.expand</span>.</p></section></section><section id=migrating-from-nose-parameterized-to-parameterized><h2>Migrating from <span class=\"docutils literal\"><span class=pre>nose-parameterized</span></span> to <span class=\"docutils literal\">parameterized</span></h2><p>To migrate a codebase from <span class=\"docutils literal\"><span class=pre>nose-parameterized</span></span> to <span class=\"docutils literal\">parameterized</span>:</p><ol><li><p>Update your requirements file, replacing <span class=\"docutils literal\"><span class=pre>nose-parameterized</span></span> with<span class=\"docutils literal\">parameterized</span>.</li><li><p>Replace all references to <span class=\"docutils literal\">nose_parameterized</span> with <span class=\"docutils literal\">parameterized</span>:</p><pre>$ perl -pi -e 's/nose_parameterized/parameterized/g' your-codebase/</pre></li><li><p>You\u2019re done!</li></ol></section><section id=faq><h2>FAQ</h2><dl class=simple><dt>What happened to Python 2.X, 3.5, and 3.6 support?</dt><dd><p>As of version 0.9.0, <span class=\"docutils literal\">parameterized</span> no longer supports Python 2.X, 3.5,or 3.6.  Previous versions of <span class=\"docutils literal\">parameterized</span> - 0.8.1 being the latest -will continue to work, but will not receive any new features or bug fixes.</p></dd><dt>What do you mean when you say \u201cnose is best supported\u201d?</dt><dd><p>There are small caveates with <span class=\"docutils literal\">py.test</span> and <span class=\"docutils literal\">unittest</span>: <span class=\"docutils literal\">py.test</span>does not show the parameter values (ex, it will show <span class=\"docutils literal\">test_add[0]</span>instead of <span class=\"docutils literal\">test_add[1, 2, 3]</span>), and <span class=\"docutils literal\">unittest</span>/<span class=\"docutils literal\">unittest2</span> do notsupport test generators so <span class=\"docutils literal\">@parameterized.expand</span> must be used.</p></dd><dt>Why not use <span class=\"docutils literal\">@pytest.mark.parametrize</span>?</dt><dd><p>Because spelling is difficult. Also, <span class=\"docutils literal\">parameterized</span> doesn\u2019t require youto repeat argument names, and (using <span class=\"docutils literal\">param</span>) it supports optionalkeyword arguments.</p></dd><dt>Why do I get an <span class=\"docutils literal\">AttributeError: 'function' object has no attribute 'expand'</span> with <span class=\"docutils literal\">@parameterized.expand</span>?</dt><dd><p>You\u2019ve likely installed the <span class=\"docutils literal\">parametrized</span> (note the missing <em>e</em>)package. Use <span class=\"docutils literal\">parameterized</span> (with the <em>e</em>) instead and you\u2019ll be allset.</p></dd><dt>What happened to <span class=\"docutils literal\"><span class=pre>nose-parameterized</span></span>?</dt><dd><p>Originally only nose was supported. But now everything is supported, and itonly made sense to change the name!</p></dd></dl></section>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/wolever/parameterized\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/parameterized\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> BSD License (FreeBSD)</p>    <p><strong>Author:</strong> <a href=\"mailto:david@wolever.net\">David Wolever</a></p>  <p>    <strong>Requires:</strong> Python &gt;=3.7  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/wolever/\" aria-label=\"wolever\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/b25bbb4bf2a04fdbe90a1802ad88a73621645b1d/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f66306532383662613034383265353739303465383965373533613462333665363f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for wolever from gravatar.com\" title=\"Avatar for wolever from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            wolever          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+BSD+License\">            OSI Approved :: BSD License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/parameterized/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/parameterized/0.9.0/\">                <p class=\"release__version\">                  0.9.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-03-27T02:01:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 27, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/parameterized/0.8.1/\">                <p class=\"release__version\">                  0.8.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-01-09T20:35:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 9, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/parameterized/0.7.5/\">                <p class=\"release__version\">                  0.7.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-01-04T17:23:28+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 4, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/parameterized/0.7.4/\">                <p class=\"release__version\">                  0.7.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-04-14T17:59:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 14, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/parameterized/0.7.3/\">                <p class=\"release__version\">                  0.7.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-04-12T21:18:34+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 12, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/parameterized/0.7.2/\">                <p class=\"release__version\">                  0.7.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-04-12T19:34:54+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 12, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/parameterized/0.7.1/\">                <p class=\"release__version\">                  0.7.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-11-19T22:04:22+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 19, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/parameterized/0.7.0/\">                <p class=\"release__version\">                  0.7.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-02-06T03:43:34+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 6, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/parameterized/0.6.3/\">                <p class=\"release__version\">                  0.6.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-01-22T17:40:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 22, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/parameterized/0.6.1/\">                <p class=\"release__version\">                  0.6.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-03-21T17:19:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 21, 2017</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/parameterized/0.5.0/\">                <p class=\"release__version\">                  0.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-08-02T16:24:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 2, 2016</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/ea/49/00c0c0cc24ff4266025a53e41336b79adaa5a4ebfad214f433d623f9865e/parameterized-0.9.0.tar.gz\">          parameterized-0.9.0.tar.gz        </a>        (24.4 kB        <a href=\"#copy-hash-modal-c60cc3fa-28e9-4348-a3ec-06f579e56929\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-03-27T02:01:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 27, 2023</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/00/2f/804f58f0b856ab3bf21617cccf5b39206e6c4c94c2cd227bde125ea6105f/parameterized-0.9.0-py2.py3-none-any.whl\">          parameterized-0.9.0-py2.py3-none-any.whl        </a>        (20.5 kB        <a href=\"#copy-hash-modal-87222942-eb6c-401e-864d-d84b4adbf053\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-03-27T02:01:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 27, 2023</time>          <code>py2</code>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-c60cc3fa-28e9-4348-a3ec-06f579e56929\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for parameterized-0.9.0.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for parameterized-0.9.0.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">7fc905272cefa4f364c1a3429cbbe9c0f98b793988efb5bf90aac80f08db09b1</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">ed1bee2fb5d9044688d8503bdda9e6f3</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">ea4900c0c0cc24ff4266025a53e41336b79adaa5a4ebfad214f433d623f9865e</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-87222942-eb6c-401e-864d-d84b4adbf053\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for parameterized-0.9.0-py2.py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for parameterized-0.9.0-py2.py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">4e0758e3d41bea3bbd05ec14fc2c24736723f243b28d702081aef438c9372b1b</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">cfce2b56c952afb5a64ba988722352e7</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">002f804f58f0b856ab3bf21617cccf5b39206e6c4c94c2cd227bde125ea6105f</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
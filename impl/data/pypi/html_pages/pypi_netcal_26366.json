{
  "libtype": "pypi",
  "libname": "netcal",
  "url": "https://pypi.org/project/netcal/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>netcal \u00b7 PyPI</title>    <meta name=\"description\" content=\"The net:cal calibration framework is a Python 3 library for measuring and mitigating miscalibration of uncertainty estimates, e.g., by a neural network.\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for netcal\" href=\"/rss/project/netcal/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/netcal/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/netcal/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"netcal\">    <meta property=\"og:description\" content=\"The net:cal calibration framework is a Python 3 library for measuring and mitigating miscalibration of uncertainty estimates, e.g., by a neural network.\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/EFS-OpenSource/calibration-framework\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:EFS-OpenSource/calibration-framework+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        netcal 1.3.5      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install netcal</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/netcal/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2023-03-28T07:15:27+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 28, 2023</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/netcal\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">The net:cal calibration framework is a Python 3 library for measuring and mitigating miscalibration of uncertainty estimates, e.g., by a neural network.</p><div data-html-include=\"/_includes/edit-project-button/netcal\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for netcal\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://efs-opensource.github.io/calibration-framework\" rel=\"nofollow\">        <i class=\"fas fa-book\" aria-hidden=\"true\"></i>Documentation      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/EFS-OpenSource/calibration-framework\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/netcal\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache Software License (Apache-2.0)</p>    <p><strong>Author:</strong> <a href=\"mailto:fabian.kueppers@efs-techhub.com\">Fabian K\u00fcppers</a></p>    <p><strong>Maintainer:</strong> <a href=\"mailto:fabian.kueppers@efs-techhub.com\">Fabian K\u00fcppers</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      netcal,    </span>    <span class=\"package-keyword\">      calibration,    </span>    <span class=\"package-keyword\">      uncertainty,    </span>    <span class=\"package-keyword\">      neural,    </span>    <span class=\"package-keyword\">      network,    </span>    <span class=\"package-keyword\">      confidence,    </span>    <span class=\"package-keyword\">      classification,    </span>    <span class=\"package-keyword\">      object,    </span>    <span class=\"package-keyword\">      detection,    </span>    <span class=\"package-keyword\">      regression    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=3.6  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/fabiankueppers/\" aria-label=\"fabiankueppers\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/116036b6f32652efc52cadfedf0d062446feb617/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f62366236343562336633333666633832323237323036363534643135626263333f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for fabiankueppers from gravatar.com\" title=\"Avatar for fabiankueppers from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            fabiankueppers          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+Apache+Software+License\">            OSI Approved :: Apache Software License          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Scientific%2FEngineering+%3A%3A+Artificial+Intelligence\">            Scientific/Engineering :: Artificial Intelligence          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for netcal\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <h1>net:cal - Uncertainty Calibration</h1><div><p>The <strong>net:cal</strong> calibration framework is a Python 3 library for measuring and mitigating miscalibration of uncertainty estimates, e.g., by a neural network.For full API reference documentation, visit<a href=\"https://efs-opensource.github.io/calibration-framework\" rel=nofollow>https://efs-opensource.github.io/calibration-framework</a>.</p><p>Copyright \u00a9 2019-2023 Ruhr West University of Applied Sciences,Bottrop, Germany AND e:fs TechHub GmbH, Gaimersheim, Germany.</p><p>This Source Code Form is subject to the terms of the Apache License 2.0.If a copy of the APL2 was not distributed with this file, You can obtainone at <a href=\"https://www.apache.org/licenses/LICENSE-2.0.txt\" rel=nofollow>https://www.apache.org/licenses/LICENSE-2.0.txt</a>.</p><p><strong>Important: updated references!</strong> If you use this framework(<em>classification or detection</em>) or parts of it for your research, pleasecite it by:</p><pre><code>@InProceedings{Kueppers_2020_CVPR_Workshops,   author = {K\u00fcppers, Fabian and Kronenberger, Jan and Shantia, Amirhossein and Haselhoff, Anselm},   title = {Multivariate Confidence Calibration for Object Detection},   booktitle = {The IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR) Workshops},   month = {June},   year = {2020}}</code></pre><p><em>If you use Bayesian calibration methods with uncertainty, please citeit by</em>:</p><pre><code>@InProceedings{Kueppers_2021_IV,   author = {K\u00fcppers, Fabian and Kronenberger, Jan and Schneider, Jonas and Haselhoff, Anselm},   title = {Bayesian Confidence Calibration for Epistemic Uncertainty Modelling},   booktitle = {Proceedings of the IEEE Intelligent Vehicles Symposium (IV)},   month = {July},   year = {2021},}</code></pre><p><em>If you use Regression calibration methods, please cite it by</em>:</p><pre><code>@InProceedings{Kueppers_2022_ECCV_Workshops,  author    = {K\u00fcppers, Fabian and Schneider, Jonas and Haselhoff, Anselm},  title     = {Parametric and Multivariate Uncertainty Calibration for Regression and Object Detection},  booktitle = {European Conference on Computer Vision (ECCV) Workshops},  year      = {2022},  month     = {October},  publisher = {Springer},}</code></pre><h2>Table of Contents</h2><ul><li><a href=#overview rel=nofollow>Overview</a><ul><li><a href=#update-on-version-13 rel=nofollow>Update on version 1.3</a></li><li><a href=#update-on-version-12 rel=nofollow>Update on version 1.2</a></li><li><a href=#update-on-version-11 rel=nofollow>Update on version 1.1</a></li></ul></li><li><a href=#installation rel=nofollow>Installation</a></li><li><a href=#requirements rel=nofollow>Requirements</a></li><li><a href=#calibration-metrics rel=nofollow>Calibration Metrics</a><ul><li><a href=#confidence-calibration-metrics rel=nofollow>Confidence Calibration Metrics</a></li><li><a href=#regression-calibration-metrics rel=nofollow>Regression Calibration Metrics</a></li></ul></li><li><a href=#methods rel=nofollow>Methods</a><ul><li><a href=#confidence-calibration-methods rel=nofollow>Confidence Calibration Methods</a><ul><li><a href=#binning rel=nofollow>Binning</a></li><li><a href=#scaling rel=nofollow>Scaling</a></li><li><a href=#regularization rel=nofollow>Regularization</a></li></ul></li><li><a href=#regression-calibration-methods rel=nofollow>Regression Calibration Methods</a><ul><li><a href=#non-parametric-calibration rel=nofollow>Non-parametric calibration</a></li><li><a href=#parametric-calibration rel=nofollow>Parametric calibration</a></li></ul></li></ul></li><li><a href=#visualization rel=nofollow>Visualization</a></li><li><a href=#examples rel=nofollow>Examples</a><ul><li><a href=#classification rel=nofollow>Classification</a><ul><li><a href=#post-hoc-calibration-for-classification rel=nofollow>Post-hoc Calibration for Classification</a></li><li><a href=#measuring-miscalibration-for-classification rel=nofollow>Measuring Miscalibration for Classification</a></li><li><a href=#visualizing-miscalibration-for-classification rel=nofollow>Visualizing Miscalibration for Classification</a></li></ul></li><li><a href=#detection-confidence-of-objects rel=nofollow>Detection (Confidence of Objects)</a><ul><li><a href=#post-hoc-calibration-for-detection rel=nofollow>Post-hoc Calibration for Detection</a></li><li><a href=#measuring-miscalibration-for-detection rel=nofollow>Measuring Miscalibration for Detection</a></li><li><a href=#visualizing-miscalibration-for-detection rel=nofollow>Visualizing Miscalibration for Detection</a></li></ul></li><li><a href=#uncertainty-in-confidence-calibration rel=nofollow>Uncertainty in Confidence Calibration</a><ul><li><a href=#post-hoc-calibration-with-uncertainty rel=nofollow>Post-hoc Calibration with Uncertainty</a></li><li><a href=#measuring-miscalibration-with-uncertainty rel=nofollow>Measuing Miscalibration with Uncertainty</a></li></ul></li><li><a href=#probabilistic-regression rel=nofollow>Probabilistic Regression</a><ul><li><a href=#post-hoc-calibration-parametric rel=nofollow>Post-hoc Calibration (Parametric)</a></li><li><a href=#post-hoc-calibration-non-parametric rel=nofollow>Post-hoc Calibration (Non-Parametric)</a></li><li><a href=#correlation-estimation-and-recalibration rel=nofollow>Correlation Estimation and Recalibration</a></li><li><a href=#measuring-miscalibration-for-regression rel=nofollow>Measuring Miscalibration for Regression</a></li><li><a href=#visualizing-miscalibration-for-regression rel=nofollow>Visualizing Miscalibration for Regression</a></li></ul></li></ul></li><li><a href=#references rel=nofollow>References</a></li></ul><h2>Overview</h2><p>This framework is designed to calibrate the confidence estimates ofclassifiers like neural networks. Modern neural networks are likely tobe overconfident with their predictions. However, reliable confidenceestimates of such classifiers are crucial especially in safety-criticalapplications.</p><p>For example: given 100 predictions with a confidence of 80% of eachprediction, the observed accuracy should also match 80% (neither morenor less). This behaviour is achievable with several calibrationmethods.</p><h3>Update on version 1.3</h3><p>TL;DR:</p><ul><li><p>Regression calibration methods: train and infer methods to rescale the uncertainty of probabilistic regression models</p></li><li><p>New package: <em>netcal.regression</em> with regression calibration methods:</p><ul><li>Isotonic Regression (<em>netcal.regression.IsotonicRegression</em>)</li><li>Variance Scaling (<em>netcal.regression.VarianceScaling</em>)</li><li>GP-Beta (<em>netcal.regression.GPBeta</em>)</li><li>GP-Normal (<em>netcal.regression.GPNormal</em>)</li><li>GP-Cauchy (<em>netcal.regression.GPCauchy</em>)</li></ul></li><li><p>Implement <em>netcal.regression.GPNormal</em> method with correlation estimation and recalibration</p></li><li><p>Restructured <em>netcal.metrics</em> package to distinguish between (semantic) confidence calibration in <em>netcal.confidence</em> and regression uncertainty calibration in <em>netcal.regression</em>:</p><ul><li>Expected Calibration Error (ECE - <em>netcal.confidence.ECE</em>)</li><li>Maximum Calibration Error (MCE - <em>netcal.confidence.MCE</em>)</li><li>Average Calibration Error (ACE - <em>netcal.confidence.ACE</em>)</li><li>Maximum Mean Calibration Error (MMCE - <em>netcal.confidence.MMCE</em>)</li><li>Negative Log Likelihood (NLL - <em>netcal.regression.NLL</em>)</li><li>Prediction Interval Coverage Probability (PICP - <em>netcal.regression.PICP</em>)</li><li>Pinball loss (<em>netcal.regression.PinballLoss</em>)</li><li>Uncertainty Calibration Error (UCE - <em>netcal.regression.UCE</em>)</li><li>Expected Normalized Calibration Error (ENCE - <em>netcal.regression.ENCE</em>)</li><li>Quantile Calibration Error (QCE - <em>netcal.regression.QCE</em>)</li></ul></li><li><p>Added new types of reliability diagrams to visualize regression calibration properties:</p><ul><li>Reliability Regression diagram to visualize calibration for different quantile levels (preferred - <em>netcal.presentation.ReliabilityRegression</em>)</li><li>Reliability QCE diagram to visualize QCE over stddev (<em>netcal.presentation.QCE</em>)</li></ul></li><li><p>Updated examples</p></li><li><p>Minor bugfixes</p></li><li><p>Use library <a href=\"https://github.com/texworld/tikzplotlib\" rel=nofollow>tikzplotlib</a> within the <em>netcal.presentation</em> package to enable a direct conversion of <em>matplotlib.Figure</em> objects to Tikz-Code (e.g., can be used for LaTeX figures)</p></li></ul><p>Within this release, we provide a new package <em>netcal.regression</em> toenable recalibration of probabilistic regression tasks. Withinprobabilistic regression, a regression model does not output a singlescore for each prediction but rather a probability distribution (e.g.,Gaussian with mean/variance) that targets the true output score. Similarto (semantic) confidence calibration, regression calibration requiresthat the estimated uncertainty matches the observed error distribution.There exist several definitions for regression calibration which theprovided calibration methods aim to mitigate (cf. README within the<em>netcal.regression</em> package). We distinguish the provided calibrationmethods into non-parametric and parametric methods. Non-parametriccalibration methods take a probability distribution as input and applyrecalibration in terms of quantiles on the cumulative (CDF). This leadsto a recalibrated probability distribution that, however, has noanalytical representation but is given by certain points defining a CDFdistribution. Non-parametric calibration methods are<em>netcal.regression.IsotonicRegression</em> and <em>netcal.regression.GPBeta</em>.</p><p>In contrast, parametric calibration methods also take a probabilitydistribution as input and provide a recalibrated distribution that hasan analytical expression (e.g., Gaussian). Parametric calibrationmethods are <em>netcal.regression.VarianceScaling</em>,<em>netcal.regression.GPNormal</em>, and <em>netcal.regression.GPCauchy</em>.</p><p>The calibration methods are designed to also work with multipleindependent dimensions. The methods<em>netcal.regression.IsotonicRegression</em> and<em>netcal.regression.VarianceScaling</em> apply a recalibration of eachdimension independently of each other. In contrast, the GP methods<em>netcal.regression.GPBeta</em>, <em>netcal.regression.GPNormal</em>, and<em>netcal.regression.GPCauchy</em> use a single GP to apply recalibration.Furthermore, the GP-Normal <em>netcal.regression.GPNormal</em> is can modelpossible correlations within the training data to transform multipleunivariate probability distributions of a single sample to a jointmultivariate (normal) distribution with possible correlations. Thiscalibration scheme is denoted as <em>correlation estimation</em>. Additionally,the GP-Normal is also able to take a multivariate (normal) distributionwith correlations as input and applies a recalibration of the wholecovariance matrix. This is referred to as <em>correlation recalibration</em>.</p><p>Besides the recalibration methods, we restructured the <em>netcal.metrics</em>package which now also holds several metrics for regression calibration(cf. <em>netcal.metrics</em> package documentation for detailed information).Finally, we provide several ways to visualize regression miscalibrationwithin the <em>netcal.presentation</em> package.</p><p>All plot-methods within the <em>netcal.presentation</em> package now supportthe option \"tikz=True\" which switches from standard<em>matplotlib.Figure</em> objects to strings with Tikz-Code. Tikz-code can bedirectly used for LaTeX documents to render images as vector graphicswith high quality. Thus, this option helps to improve the quality ofyour reliability diagrams if you are planning to use this library forany type of publication/document</p><h3>Update on version 1.2</h3><p>TL;DR:</p><ul><li>Bayesian confidence calibration: train and infer scaling methods using variational inference (VI) and MCMC sampling</li><li>New metrics: MMCE <a href=#ref13 rel=nofollow>[13]</a> and PICP <a href=#ref14 rel=nofollow>[14]</a> (<em>netcal.metrics.MMCE</em> and <em>netcal.metrics.PICP</em>)</li><li>New regularization methods: MMCE <a href=#ref13 rel=nofollow>[13]</a> and DCA <a href=#ref15 rel=nofollow>[15]</a> (<em>netcal.regularization.MMCEPenalty</em> and <em>netcal.regularization.DCAPenalty</em>)</li><li>Updated examples</li><li>Switched license from MPL2 to APL2</li></ul><p>Now you can also use Bayesian methods to obtain uncertainty within acalibration mapping mainly in the <em>netcal.scaling</em> package. We adaptedMarkov-Chain Monte-Carlo sampling (MCMC) as well as VariationalInference (VI) on common calibration methods. It is also easily possibleto bring the scaling methods to CUDA in order to speed-up thecomputations. We further provide new metrics to evaluate confidencecalibration (MMCE) and to evaluate the quality of prediction intervals(PICP). Finally, we updated our framework by new regularization methodsthat can be used during model training (MMCE and DCA).</p><h3>Update on version 1.1</h3><p>This framework can also be used to calibrate object detection models. Ithas recently been shown that calibration on object detection alsodepends on the position and/or scale of a predicted object <a href=#ref12 rel=nofollow>[12]</a>. Weprovide calibration methods to perform confidence calibration w.r.t. theadditional box regression branch. For this purpose, we extended thecommonly used Histogram Binning <a href=#ref3 rel=nofollow>[3]</a>, Logistic Calibration alias Plattscaling <a href=#ref10 rel=nofollow>[10]</a> and the Beta Calibration method <a href=#ref2 rel=nofollow>[2]</a> to also include thebounding box information into a calibration mapping. Furthermore, weprovide two new methods called the <em>Dependent Logistic Calibration</em> andthe <em>Dependent Beta Calibration</em> that are not only able to perform acalibration mapping w.r.t. additional bounding box information but alsoto model correlations and dependencies between all given quantities <a href=#ref12 rel=nofollow>[12]</a>.Those methods should be preffered over their counterparts in objectdetection mode.</p><p>The framework is structured as follows:</p><pre><code>netcal  .binning         # binning methods (confidence calibration)  .scaling         # scaling methods (confidence calibration)  .regularization  # regularization methods (confidence calibration)  .presentation    # presentation methods (confidence/regression calibration)  .metrics         # metrics for measuring miscalibration (confidence/regression calibration)  .regression      # methods for regression uncertainty calibration (regression calibration)examples           # example code snippets</code></pre><h2>Installation</h2><p>The installation of the calibration suite is quite easy as it registeredin the Python Package Index (PyPI). You can either install thisframework using PIP:</p><pre lang=shell>$<span class=w> </span>python3<span class=w> </span>-m<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>netcal</pre><p>Or simply invoke the following command to install the calibration suite when installing from source:</p><pre lang=shell>$<span class=w> </span>git<span class=w> </span>clone<span class=w> </span>https://github.com/EFS-OpenSource/calibration-framework$<span class=w> </span><span class=nb>cd</span><span class=w> </span>calibration-framework$<span class=w> </span>python3<span class=w> </span>-m<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>.</pre><p>Note: with update 1.3, we switched from <em>setup.py</em> to <em>pyproject.toml</em>according to PEP-518. The <em>setup.py</em> is only for backwardscompatibility.</p><h3>Requirements</h3><p>According to <em>requierments.txt</em>:</p><ul><li>numpy&gt;=1.18</li><li>scipy&gt;=1.4</li><li>matplotlib&gt;=3.3</li><li>scikit-learn&gt;=0.24</li><li>torch&gt;=1.9</li><li>torchvision&gt;=0.10.0</li><li>tqdm&gt;=4.40</li><li>pyro-ppl&gt;=1.8</li><li>tikzplotlib&gt;=0.9.8</li><li>tensorboard&gt;=2.2</li><li>gpytorch&gt;=1.5.1</li></ul><h2>Calibration Metrics</h2><p>We further distinguish between <em>onfidence calibration</em> which aims torecalibrate confidence estimates in the [0, 1] interval, and<em>regression uncertainty calibration</em> which addresses the problem ofcalibration in probabilistic regression settings.</p><h3>Confidence Calibration Metrics</h3><p>The most common metric to determine miscalibration in the scope ofclassification is the <em>Expected Calibration Error</em> (ECE) <a href=#ref1 rel=nofollow>[1]</a>. Thismetric divides the confidence space into several bins and measures theobserved accuracy in each bin. The bin gaps between observed accuracyand bin confidence are summed up and weighted by the amount of samplesin each bin. The <em>Maximum Calibration Error</em> (MCE) denotes the highestgap over all bins. The <em>Average Calibration Error</em> (ACE) <a href=#ref11 rel=nofollow>[11]</a> denotesthe average miscalibration where each bin gets weighted equally. Forobject detection, we implemented the <em>Detection Calibration Error</em>(D-ECE) <a href=#ref12 rel=nofollow>[12]</a> that is the natural extension of the ECE to objectdetection tasks. The miscalibration is determined w.r.t. the boundingbox information provided (e.g. box location and/or scale). For thispurpose, all available information gets binned in a multidimensionalhistogram. The accuracy is then calculated in each bin separately todetermine the mean deviation between confidence and accuracy.</p><ul><li>(Detection) Expected Calibration Error <a href=#ref1 rel=nofollow>[1]</a>, <a href=#ref12 rel=nofollow>[12]</a> (<em>netcal.metrics.ECE</em>)</li><li>(Detection) Maximum Calibration Error <a href=#ref1 rel=nofollow>[1]</a>, <a href=#ref12 rel=nofollow>[12]</a>  (<em>netcal.metrics.MCE</em>)</li><li>(Detection) Average Calibration Error <a href=#ref11 rel=nofollow>[11]</a>, <a href=#ref12 rel=nofollow>[12]</a> (<em>netcal.metrics.ACE</em>)</li><li>Maximum Mean Calibration Error (MMCE) <a href=#ref13 rel=nofollow>[13]</a> (<em>netcal.metrics.MMCE</em>) (no position-dependency)</li></ul><h3>Regression Calibration Metrics</h3><p>In regression calibration, the most common metric is the <em>Negative LogLikelihood</em> (NLL) to measure the quality of a predicted probabilitydistribution w.r.t. the ground-truth:</p><ul><li>Negative Log Likelihood (NLL) (<em>netcal.metrics.NLL</em>)</li></ul><p>The metrics <em>Pinball Loss</em>, <em>Prediction Interval Coverage Probability</em>(PICP), and <em>Quantile Calibration Error</em> (QCE) evaluate the estimateddistributions by means of the predicted quantiles. For example, if aforecaster makes 100 predictions using a probability distribution foreach estimate targeting the true ground-truth, we can measure thecoverage of the ground-truth samples for a certain quantile level (e.g.,95% quantile). If the relative amount of ground-truth samples fallinginto a certain predicted quantile is above or below the specifiedquantile level, a forecaster is told to be miscalibrated in terms of<em>quantile calibration</em>. Appropriate metrics in this context are</p><ul><li>Pinball Loss (<em>netcal.metrics.PinballLoss</em>)</li><li>Prediction Interval Coverage Probability (PICP) <a href=#ref14 rel=nofollow>[14]</a> (<em>netcal.metrics.PICP</em>)</li><li>Quantile Calibration Error (QCE) <a href=#ref15 rel=nofollow>[15]</a> (<em>netcal.metrics.QCE</em>)</li></ul><p>Finally, if we work with normal distributions, we can measure thequality of the predicted variance/stddev estimates. For <em>variancecalibration</em>, it is required that the predicted variance mathes theobserved error variance which is equivalent to then Mean Squared Error(MSE). Metrics for <em>variance calibration</em> are</p><ul><li>Expected Normalized Calibration Error (ENCE) <a href=#ref17 rel=nofollow>[17]</a> (<em>netcal.metrics.ENCE</em>)</li><li>Uncertainty Calibration Error (UCE) <a href=#ref18 rel=nofollow>[18]</a> (<em>netcal.metrics.UCE</em>)</li></ul><h2>Methods</h2><p>We further give an overview about the post-hoc calibration methods for(semantic) confidence calibration as well as about the methods forregression uncertainty calibration.</p><h3>Confidence Calibration Methods</h3><p>The post-hoc calibration methods are separated into binning and scalingmethods. The binning methods divide the available information intoseveral bins (like ECE or D-ECE) and perform calibration on each bin.The scaling methods scale the confidence estimates or logits directly tocalibrated confidence estimates - on detection calibration, this is donew.r.t. the additional regression branch of a network.</p><p>Important: if you use the detection mode, you need to specifiy the flag\"detection=True\" in the constructor of the according method (this isnot necessary for <em>netcal.scaling.LogisticCalibrationDependent</em> and<em>netcal.scaling.BetaCalibrationDependent</em>).</p><p>Most of the calibration methods are designed for binary classificationtasks. For binning methods, multi-class calibration is performed in\"one vs. all\" by default.</p><p>Some methods such as \"Isotonic Regression\" utilize methods from thescikit-learn API <a href=#ref9 rel=nofollow>[9]</a>.</p><p>Another group are the regularization tools which are added to the lossduring the training of a Neural Network.</p><h4>Binning</h4><p>Implemented binning methods are:</p><ul><li>Histogram Binning for classification <a href=#ref3 rel=nofollow>[3]</a>, <a href=#ref4 rel=nofollow>[4]</a> and object detection <a href=#ref12 rel=nofollow>[12]</a> (<em>netcal.binning.HistogramBinning</em>)</li><li>Isotonic Regression <a href=#ref4 rel=nofollow>[4]</a>,<a href=#ref5 rel=nofollow>[5]</a> (<em>netcal.binning.IsotonicRegression</em>)</li><li>Bayesian Binning into Quantiles (BBQ) <a href=#ref1 rel=nofollow>[1]</a> (<em>netcal.binning.BBQ</em>)</li><li>Ensemble of Near Isotonic Regression (ENIR) <a href=#ref6 rel=nofollow>[6]</a> (<em>netcal.binning.ENIR</em>)</li></ul><h4>Scaling</h4><p>Implemented scaling methods are:</p><ul><li>Logistic Calibration/Platt Scaling for classification <a href=#ref10 rel=nofollow>[10]</a> and object detection <a href=#ref12 rel=nofollow>[12]</a> (<em>netcal.scaling.LogisticCalibration</em>)</li><li>Dependent Logistic Calibration for object detection <a href=#ref12 rel=nofollow>[12]</a> (<em>netcal.scaling.LogisticCalibrationDependent</em>) - on detection, this method is able to capture correlations between all input quantities and should be preferred over Logistic Calibration for object detection</li><li>Temperature Scaling for classification <a href=#ref7 rel=nofollow>[7]</a> and object detection <a href=#ref12 rel=nofollow>[12]</a> (<em>netcal.scaling.TemperatureScaling</em>)</li><li>Beta Calibration for classification <a href=#ref2 rel=nofollow>[2]</a> and object detection <a href=#ref12 rel=nofollow>[12]</a> (<em>netcal.scaling.BetaCalibration</em>)</li><li>Dependent Beta Calibration for object detection <a href=#ref12 rel=nofollow>[12]</a> (<em>netcal.scaling.BetaCalibrationDependent</em>) - on detection, this method is able to capture correlations between all input quantities and should be preferred over Beta Calibration for object detection</li></ul><p><strong>New on version 1.2:</strong> you can provide a parameter named \"method\" tothe constructor of each scaling method. This parameter could be one ofthe following: - 'mle': use the method feed-forward with maximumlikelihood estimates on the calibration parameters (standard) -'momentum': use non-convex momentum optimization (e.g. default ondependent beta calibration) - 'mcmc': use Markov-Chain Monte-Carlosampling to obtain multiple parameter sets in order to quantifyuncertainty in the calibration - 'variational': use VariationalInference to obtain multiple parameter sets in order to quantifyuncertainty in the calibration</p><h4>Regularization</h4><p>With some effort, it is also possible to push the model training towardscalibrated confidences by regularization. Implemented regularizationmethods are:</p><ul><li>Confidence Penalty <a href=#ref8 rel=nofollow>[8]</a> (<em>netcal.regularization.confidence_penalty</em> and <em>netcal.regularization.ConfidencePenalty</em> - the latter one is a PyTorch implementation that might be used as a regularization term)</li><li>Maximum Mean Calibration Error (MMCE) <a href=#ref13 rel=nofollow>[13]</a> (<em>netcal.regularization.MMCEPenalty</em> - PyTorch regularization module)</li><li>DCA <a href=#ref15 rel=nofollow>[15]</a> (<em>netcal.regularization.DCAPenalty</em> - PyTorch regularization module)</li></ul><h3>Regression Calibration Methods</h3><p>The <em>netcal</em> library provides post-hoc methods to recalibrate theuncertainty of probabilistic regression tasks. We distinguish thecalibration methods into non-parametric and parametric methods.Non-parametric calibration methods take a probability distribution asinput and apply recalibration in terms of quantiles on the cumulative(CDF). This leads to a recalibrated probability distribution that,however, has no analytical representation but is given by certain pointsdefining a CDF distribution. In contrast, parametric calibration methodsalso take a probability distribution as input and provide a recalibrateddistribution that has an analytical expression (e.g., Gaussian).</p><h4>Non-parametric calibration</h4><p>The common non-parametric recalibration methods use the predictedcumulative (CDF) distribution functions to learn a mapping from theuncalibrated quantiles to the observed quantile coverage. Using arecalibrated CDF, it is possible to derive the respective densityfunctions (PDF) or to extract statistical moments such as mean andvariance. Non-parametric calibration methods within the<em>netcal.regression</em> package are</p><ul><li>Isotonic Regression <a href=#ref19 rel=nofollow>[19]</a> which applies a (marginal) recalibration of the CDF (<em>netcal.regression.IsotonicRegression</em>)</li><li>GP-Beta <a href=#ref20 rel=nofollow>[20]</a> which applies an input-dependent recalibration of the CDF using a Gaussian process for parameter estimation (<em>netcal.regression.GPBeta</em>)</li></ul><h4>Parametric calibration</h4><p>The parametric recalibration methods apply a recalibration of theestimated distributions so that the resulting distribution is given interms of a distribution with an analytical expression (e.g., aGaussian). These methods are suitable for applications where aparametric distribution is required for subsequent applications, e.g.,within Kalman filtering. We implemented the following parametriccalibration methods:</p><ul><li>Variance Scaling <a href=#ref17 rel=nofollow>[17]</a>, <a href=#ref18 rel=nofollow>[18]</a> which is nothing else but a temperature scaling for the predicted variance (<em>netcal.regression.VarianceScaling</em>)</li><li>GP-Normal <a href=#ref16 rel=nofollow>[16]</a> which applies an input-dependent rescaling of the predicted variance (<em>netcal.regression.GPNormal</em>). Note: this method is also able to capture correlations between multiple input dimensions and can return a joint multivariate normal distribution as calibration output (cf. examples section).</li><li>GP-Cauchy <a href=#ref16 rel=nofollow>[16]</a> is similar to GP-Normal but utilizes a Cauchy distribution as calibration output (<em>netcal.regression.GPCauchy</em>)</li></ul><h2>Visualization</h2><p>For visualization of miscalibration, one can use a Confidence Histograms&amp; Reliability Diagrams for (semantic) confidence calibration as well asfor regression uncertainty calibration. Within confidence calibration,these diagrams are similar to ECE. The output space is divided intoequally spaced bins. The calibration gap between bin accuracy and binconfidence is visualized as a histogram.</p><p>For detection calibration, the miscalibration can be visualized eitheralong one additional box information (e.g. the x-position of thepredictions) or distributed over two additional box information in termsof a heatmap.</p><p>For regression uncertainty calibration, the reliability diagram showsthe relative prediction interval coverage of the ground-truth samplesfor different quantile levels.</p><ul><li>Reliability Diagram <a href=#ref1 rel=nofollow>[1]</a>, <a href=#ref12 rel=nofollow>[12]</a> (<em>netcal.presentation.ReliabilityDiagram</em>)</li><li>Reliability Diagram for regression calibration (<em>netcal.presentation.ReliabilityRegression</em>)</li><li>Reliability QCE Diagram <a href=#ref16 rel=nofollow>[16]</a> shows the Quantile Calibration Error (QCE) for different variance levels (<em>netcal.presentation.ReliabilityQCE</em>)</li></ul><p><strong>New on version 1.3:</strong> All plot-methods within the<em>netcal.presentation</em> package now support the option \"tikz=True\" whichswitches from standard <em>matplotlib.Figure</em> objects to strings withTikz-Code. Tikz-code can be directly used for LaTeX documents to renderimages as vector graphics with high quality. Thus, this option helps toimprove the quality of your reliability diagrams if you are planning touse this library for any type of publication/document</p><h2>Examples</h2><p>The calibration methods work with the predicted confidence estimates ofa neural network and on detection also with the bounding box regressionbranch.</p><h3>Classification</h3><p>This is a basic example which uses softmax predictions of aclassification task with 10 classes and the given NumPy arrays:</p><pre lang=python3><span class=n>ground_truth</span>  <span class=c1># this is a NumPy 1-D array with ground truth digits between 0-9 - shape: (n_samples,)</span><span class=n>confidences</span>   <span class=c1># this is a NumPy 2-D array with confidence estimates between 0-1 - shape: (n_samples, n_classes)</span></pre><h4>Post-hoc Calibration for Classification</h4><p>This is an example for <em>netcal.scaling.TemperatureScaling</em> but alsoworks for every calibration method (remind different constructorparameters):</p><pre lang=python3><span class=kn>import</span> <span class=nn>numpy</span> <span class=k>as</span> <span class=nn>np</span><span class=kn>from</span> <span class=nn>netcal.scaling</span> <span class=kn>import</span> <span class=n>TemperatureScaling</span><span class=n>temperature</span> <span class=o>=</span> <span class=n>TemperatureScaling</span><span class=p>()</span><span class=n>temperature</span><span class=o>.</span><span class=n>fit</span><span class=p>(</span><span class=n>confidences</span><span class=p>,</span> <span class=n>ground_truth</span><span class=p>)</span><span class=n>calibrated</span> <span class=o>=</span> <span class=n>temperature</span><span class=o>.</span><span class=n>transform</span><span class=p>(</span><span class=n>confidences</span><span class=p>)</span></pre><h4>Measuring Miscalibration for Classification</h4><p>The miscalibration can be determined with the ECE:</p><pre lang=python3><span class=kn>from</span> <span class=nn>netcal.metrics</span> <span class=kn>import</span> <span class=n>ECE</span><span class=n>n_bins</span> <span class=o>=</span> <span class=mi>10</span><span class=n>ece</span> <span class=o>=</span> <span class=n>ECE</span><span class=p>(</span><span class=n>n_bins</span><span class=p>)</span><span class=n>uncalibrated_score</span> <span class=o>=</span> <span class=n>ece</span><span class=o>.</span><span class=n>measure</span><span class=p>(</span><span class=n>confidences</span><span class=p>,</span> <span class=n>ground_truth</span><span class=p>)</span><span class=n>calibrated_score</span> <span class=o>=</span> <span class=n>ece</span><span class=o>.</span><span class=n>measure</span><span class=p>(</span><span class=n>calibrated</span><span class=p>,</span> <span class=n>ground_truth</span><span class=p>)</span></pre><h4>Visualizing Miscalibration for Classification</h4><p>The miscalibration can be visualized with a Reliability Diagram:</p><pre lang=python3><span class=kn>from</span> <span class=nn>netcal.presentation</span> <span class=kn>import</span> <span class=n>ReliabilityDiagram</span><span class=n>n_bins</span> <span class=o>=</span> <span class=mi>10</span><span class=n>diagram</span> <span class=o>=</span> <span class=n>ReliabilityDiagram</span><span class=p>(</span><span class=n>n_bins</span><span class=p>)</span><span class=n>diagram</span><span class=o>.</span><span class=n>plot</span><span class=p>(</span><span class=n>confidences</span><span class=p>,</span> <span class=n>ground_truth</span><span class=p>)</span>  <span class=c1># visualize miscalibration of uncalibrated</span><span class=n>diagram</span><span class=o>.</span><span class=n>plot</span><span class=p>(</span><span class=n>calibrated</span><span class=p>,</span> <span class=n>ground_truth</span><span class=p>)</span>   <span class=c1># visualize miscalibration of calibrated</span><span class=c1># you can also use this method to create a tikz file with tikz code</span><span class=c1># that can be directly used within LaTeX documents:</span><span class=n>diagram</span><span class=o>.</span><span class=n>plot</span><span class=p>(</span><span class=n>confidences</span><span class=p>,</span> <span class=n>ground_truth</span><span class=p>,</span> <span class=n>tikz</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span> <span class=n>filename</span><span class=o>=</span><span class=s2>\"diagram.tikz\"</span><span class=p>)</span></pre><h3>Detection (Confidence of Objects)</h3><p>In this example we use confidence predictions of an object detectionmodel with the according x-position of the predicted bounding boxes. Ourground-truth provided to the calibration algorithm denotes if a boundingbox has matched a ground-truth box with a certain IoU and the correctclass label.</p><pre lang=python3><span class=n>matched</span>                <span class=c1># binary NumPy 1-D array (0, 1) that indicates if a bounding box has matched a ground truth at a certain IoU with the right label - shape: (n_samples,)</span><span class=n>confidences</span>            <span class=c1># NumPy 1-D array with confidence estimates between 0-1 - shape: (n_samples,)</span><span class=n>relative_x_position</span>    <span class=c1># NumPy 1-D array with relative center-x position between 0-1 of each prediction - shape: (n_samples,)</span></pre><h4>Post-hoc Calibration for Detection</h4><p>This is an example for <em>netcal.scaling.LogisticCalibration</em> and<em>netcal.scaling.LogisticCalibrationDependent</em> but also works for everycalibration method (remind different constructor parameters):</p><pre lang=python3><span class=kn>import</span> <span class=nn>numpy</span> <span class=k>as</span> <span class=nn>np</span><span class=kn>from</span> <span class=nn>netcal.scaling</span> <span class=kn>import</span> <span class=n>LogisticCalibration</span><span class=p>,</span> <span class=n>LogisticCalibrationDependent</span><span class=nb>input</span> <span class=o>=</span> <span class=n>np</span><span class=o>.</span><span class=n>stack</span><span class=p>((</span><span class=n>confidences</span><span class=p>,</span> <span class=n>relative_x_position</span><span class=p>),</span> <span class=n>axis</span><span class=o>=</span><span class=mi>1</span><span class=p>)</span><span class=n>lr</span> <span class=o>=</span> <span class=n>LogisticCalibration</span><span class=p>(</span><span class=n>detection</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span> <span class=n>use_cuda</span><span class=o>=</span><span class=kc>False</span><span class=p>)</span>    <span class=c1># flag 'detection=True' is mandatory for this method</span><span class=n>lr</span><span class=o>.</span><span class=n>fit</span><span class=p>(</span><span class=nb>input</span><span class=p>,</span> <span class=n>matched</span><span class=p>)</span><span class=n>calibrated</span> <span class=o>=</span> <span class=n>lr</span><span class=o>.</span><span class=n>transform</span><span class=p>(</span><span class=nb>input</span><span class=p>)</span><span class=n>lr_dependent</span> <span class=o>=</span> <span class=n>LogisticCalibrationDependent</span><span class=p>(</span><span class=n>use_cuda</span><span class=o>=</span><span class=kc>False</span><span class=p>)</span> <span class=c1># flag 'detection=True' is not necessary as this method is only defined for detection</span><span class=n>lr_dependent</span><span class=o>.</span><span class=n>fit</span><span class=p>(</span><span class=nb>input</span><span class=p>,</span> <span class=n>matched</span><span class=p>)</span><span class=n>calibrated</span> <span class=o>=</span> <span class=n>lr_dependent</span><span class=o>.</span><span class=n>transform</span><span class=p>(</span><span class=nb>input</span><span class=p>)</span></pre><h4>Measuring Miscalibration for Detection</h4><p>The miscalibration can be determined with the D-ECE:</p><pre lang=python3><span class=kn>from</span> <span class=nn>netcal.metrics</span> <span class=kn>import</span> <span class=n>ECE</span><span class=n>n_bins</span> <span class=o>=</span> <span class=p>[</span><span class=mi>10</span><span class=p>,</span> <span class=mi>10</span><span class=p>]</span><span class=n>input_calibrated</span> <span class=o>=</span> <span class=n>np</span><span class=o>.</span><span class=n>stack</span><span class=p>((</span><span class=n>calibrated</span><span class=p>,</span> <span class=n>relative_x_position</span><span class=p>),</span> <span class=n>axis</span><span class=o>=</span><span class=mi>1</span><span class=p>)</span><span class=n>ece</span> <span class=o>=</span> <span class=n>ECE</span><span class=p>(</span><span class=n>n_bins</span><span class=p>,</span> <span class=n>detection</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span>           <span class=c1># flag 'detection=True' is mandatory for this method</span><span class=n>uncalibrated_score</span> <span class=o>=</span> <span class=n>ece</span><span class=o>.</span><span class=n>measure</span><span class=p>(</span><span class=nb>input</span><span class=p>,</span> <span class=n>matched</span><span class=p>)</span><span class=n>calibrated_score</span> <span class=o>=</span> <span class=n>ece</span><span class=o>.</span><span class=n>measure</span><span class=p>(</span><span class=n>input_calibrated</span><span class=p>,</span> <span class=n>matched</span><span class=p>)</span></pre><h4>Visualizing Miscalibration for Detection</h4><p>The miscalibration can be visualized with a Reliability Diagram:</p><pre lang=python3><span class=kn>from</span> <span class=nn>netcal.presentation</span> <span class=kn>import</span> <span class=n>ReliabilityDiagram</span><span class=n>n_bins</span> <span class=o>=</span> <span class=p>[</span><span class=mi>10</span><span class=p>,</span> <span class=mi>10</span><span class=p>]</span><span class=n>diagram</span> <span class=o>=</span> <span class=n>ReliabilityDiagram</span><span class=p>(</span><span class=n>n_bins</span><span class=p>,</span> <span class=n>detection</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span>    <span class=c1># flag 'detection=True' is mandatory for this method</span><span class=n>diagram</span><span class=o>.</span><span class=n>plot</span><span class=p>(</span><span class=nb>input</span><span class=p>,</span> <span class=n>matched</span><span class=p>)</span>                <span class=c1># visualize miscalibration of uncalibrated</span><span class=n>diagram</span><span class=o>.</span><span class=n>plot</span><span class=p>(</span><span class=n>input_calibrated</span><span class=p>,</span> <span class=n>matched</span><span class=p>)</span>     <span class=c1># visualize miscalibration of calibrated</span><span class=c1># you can also use this method to create a tikz file with tikz code</span><span class=c1># that can be directly used within LaTeX documents:</span><span class=n>diagram</span><span class=o>.</span><span class=n>plot</span><span class=p>(</span><span class=nb>input</span><span class=p>,</span> <span class=n>matched</span><span class=p>,</span> <span class=n>tikz</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span> <span class=n>filename</span><span class=o>=</span><span class=s2>\"diagram.tikz\"</span><span class=p>)</span></pre><h3>Uncertainty in Confidence Calibration</h3><p>We can also quantify the uncertainty in a calibration mapping if we usea Bayesian view on the calibration models. We can sample multipleparameter sets using MCMC sampling or VI. In this example, we reuse thedata of the previous detection example.</p><pre lang=python3><span class=n>matched</span>                <span class=c1># binary NumPy 1-D array (0, 1) that indicates if a bounding box has matched a ground truth at a certain IoU with the right label - shape: (n_samples,)</span><span class=n>confidences</span>            <span class=c1># NumPy 1-D array with confidence estimates between 0-1 - shape: (n_samples,)</span><span class=n>relative_x_position</span>    <span class=c1># NumPy 1-D array with relative center-x position between 0-1 of each prediction - shape: (n_samples,)</span></pre><h4>Post-hoc Calibration with Uncertainty</h4><p>This is an example for <em>netcal.scaling.LogisticCalibration</em> and<em>netcal.scaling.LogisticCalibrationDependent</em> but also works for everycalibration method (remind different constructor parameters):</p><pre lang=python3><span class=kn>import</span> <span class=nn>numpy</span> <span class=k>as</span> <span class=nn>np</span><span class=kn>from</span> <span class=nn>netcal.scaling</span> <span class=kn>import</span> <span class=n>LogisticCalibration</span><span class=p>,</span> <span class=n>LogisticCalibrationDependent</span><span class=nb>input</span> <span class=o>=</span> <span class=n>np</span><span class=o>.</span><span class=n>stack</span><span class=p>((</span><span class=n>confidences</span><span class=p>,</span> <span class=n>relative_x_position</span><span class=p>),</span> <span class=n>axis</span><span class=o>=</span><span class=mi>1</span><span class=p>)</span><span class=c1># flag 'detection=True' is mandatory for this method</span><span class=c1># use Variational Inference with 2000 optimization steps for creating this calibration mapping</span><span class=n>lr</span> <span class=o>=</span> <span class=n>LogisticCalibration</span><span class=p>(</span><span class=n>detection</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span> <span class=n>method</span><span class=s1>'variational'</span><span class=p>,</span> <span class=n>vi_epochs</span><span class=o>=</span><span class=mi>2000</span><span class=p>,</span> <span class=n>use_cuda</span><span class=o>=</span><span class=kc>False</span><span class=p>)</span><span class=n>lr</span><span class=o>.</span><span class=n>fit</span><span class=p>(</span><span class=nb>input</span><span class=p>,</span> <span class=n>matched</span><span class=p>)</span><span class=c1># 'num_samples=1000': sample 1000 parameter sets from VI</span><span class=c1># thus, 'calibrated' has shape [1000, n_samples]</span><span class=n>calibrated</span> <span class=o>=</span> <span class=n>lr</span><span class=o>.</span><span class=n>transform</span><span class=p>(</span><span class=nb>input</span><span class=p>,</span> <span class=n>num_samples</span><span class=o>=</span><span class=mi>1000</span><span class=p>)</span><span class=c1># flag 'detection=True' is not necessary as this method is only defined for detection</span><span class=c1># this time, use Markov-Chain Monte-Carlo sampling with 250 warm-up steps, 250 parameter samples and one chain</span><span class=n>lr_dependent</span> <span class=o>=</span> <span class=n>LogisticCalibrationDependent</span><span class=p>(</span><span class=n>method</span><span class=o>=</span><span class=s1>'mcmc'</span><span class=p>,</span>                                            <span class=n>mcmc_warmup_steps</span><span class=o>=</span><span class=mi>250</span><span class=p>,</span> <span class=n>mcmc_steps</span><span class=o>=</span><span class=mi>250</span><span class=p>,</span> <span class=n>mcmc_chains</span><span class=o>=</span><span class=mi>1</span><span class=p>,</span>                                            <span class=n>use_cuda</span><span class=o>=</span><span class=kc>False</span><span class=p>)</span><span class=n>lr_dependent</span><span class=o>.</span><span class=n>fit</span><span class=p>(</span><span class=nb>input</span><span class=p>,</span> <span class=n>matched</span><span class=p>)</span><span class=c1># 'num_samples=1000': although we have only sampled 250 different parameter sets,</span><span class=c1># we can randomly sample 1000 parameter sets from MCMC</span><span class=n>calibrated</span> <span class=o>=</span> <span class=n>lr_dependent</span><span class=o>.</span><span class=n>transform</span><span class=p>(</span><span class=nb>input</span><span class=p>)</span></pre><h4>Measuring Miscalibration with Uncertainty</h4><p>You can directly pass the output to the D-ECE and PICP instance tomeasure miscalibration and mask quality:</p><pre lang=python3><span class=kn>from</span> <span class=nn>netcal.metrics</span> <span class=kn>import</span> <span class=n>ECE</span><span class=kn>from</span> <span class=nn>netcal.metrics</span> <span class=kn>import</span> <span class=n>PICP</span><span class=n>n_bins</span> <span class=o>=</span> <span class=mi>10</span><span class=n>ece</span> <span class=o>=</span> <span class=n>ECE</span><span class=p>(</span><span class=n>n_bins</span><span class=p>,</span> <span class=n>detection</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=n>picp</span> <span class=o>=</span> <span class=n>PICP</span><span class=p>(</span><span class=n>n_bins</span><span class=p>,</span> <span class=n>detection</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=c1># the following function calls are equivalent:</span><span class=n>miscalibration</span> <span class=o>=</span> <span class=n>ece</span><span class=o>.</span><span class=n>measure</span><span class=p>(</span><span class=n>calibrated</span><span class=p>,</span> <span class=n>matched</span><span class=p>,</span> <span class=n>uncertainty</span><span class=o>=</span><span class=s2>\"mean\"</span><span class=p>)</span><span class=n>miscalibration</span> <span class=o>=</span> <span class=n>ece</span><span class=o>.</span><span class=n>measure</span><span class=p>(</span><span class=n>np</span><span class=o>.</span><span class=n>mean</span><span class=p>(</span><span class=n>calibrated</span><span class=p>,</span> <span class=n>axis</span><span class=o>=</span><span class=mi>0</span><span class=p>),</span> <span class=n>matched</span><span class=p>)</span><span class=c1># now determine uncertainty quality</span><span class=n>uncertainty</span> <span class=o>=</span> <span class=n>picp</span><span class=o>.</span><span class=n>measure</span><span class=p>(</span><span class=n>calibrated</span><span class=p>,</span> <span class=n>matched</span><span class=p>,</span> <span class=n>kind</span><span class=o>=</span><span class=s2>\"confidence\"</span><span class=p>)</span><span class=nb>print</span><span class=p>(</span><span class=s2>\"D-ECE:\"</span><span class=p>,</span> <span class=n>miscalibration</span><span class=p>)</span><span class=nb>print</span><span class=p>(</span><span class=s2>\"PICP:\"</span><span class=p>,</span> <span class=n>uncertainty</span><span class=o>.</span><span class=n>picp</span><span class=p>)</span> <span class=c1># prediction coverage probability</span><span class=nb>print</span><span class=p>(</span><span class=s2>\"MPIW:\"</span><span class=p>,</span> <span class=n>uncertainty</span><span class=o>.</span><span class=n>mpiw</span><span class=p>)</span> <span class=c1># mean prediction interval width</span></pre><p>If we want to measure miscalibration and uncertainty quality by means ofthe relative x position, we need to broadcast the according information:</p><pre lang=python3><span class=c1># broadcast and stack x information to calibrated information</span><span class=n>broadcasted</span> <span class=o>=</span> <span class=n>np</span><span class=o>.</span><span class=n>broadcast_to</span><span class=p>(</span><span class=n>relative_x_position</span><span class=p>,</span> <span class=n>calibrated</span><span class=o>.</span><span class=n>shape</span><span class=p>)</span><span class=n>calibrated</span> <span class=o>=</span> <span class=n>np</span><span class=o>.</span><span class=n>stack</span><span class=p>((</span><span class=n>calibrated</span><span class=p>,</span> <span class=n>broadcasted</span><span class=p>),</span> <span class=n>axis</span><span class=o>=</span><span class=mi>2</span><span class=p>)</span><span class=n>n_bins</span> <span class=o>=</span> <span class=p>[</span><span class=mi>10</span><span class=p>,</span> <span class=mi>10</span><span class=p>]</span><span class=n>ece</span> <span class=o>=</span> <span class=n>ECE</span><span class=p>(</span><span class=n>n_bins</span><span class=p>,</span> <span class=n>detection</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=n>picp</span> <span class=o>=</span> <span class=n>PICP</span><span class=p>(</span><span class=n>n_bins</span><span class=p>,</span> <span class=n>detection</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=c1># the following function calls are equivalent:</span><span class=n>miscalibration</span> <span class=o>=</span> <span class=n>ece</span><span class=o>.</span><span class=n>measure</span><span class=p>(</span><span class=n>calibrated</span><span class=p>,</span> <span class=n>matched</span><span class=p>,</span> <span class=n>uncertainty</span><span class=o>=</span><span class=s2>\"mean\"</span><span class=p>)</span><span class=n>miscalibration</span> <span class=o>=</span> <span class=n>ece</span><span class=o>.</span><span class=n>measure</span><span class=p>(</span><span class=n>np</span><span class=o>.</span><span class=n>mean</span><span class=p>(</span><span class=n>calibrated</span><span class=p>,</span> <span class=n>axis</span><span class=o>=</span><span class=mi>0</span><span class=p>),</span> <span class=n>matched</span><span class=p>)</span><span class=c1># now determine uncertainty quality</span><span class=n>uncertainty</span> <span class=o>=</span> <span class=n>picp</span><span class=o>.</span><span class=n>measure</span><span class=p>(</span><span class=n>calibrated</span><span class=p>,</span> <span class=n>matched</span><span class=p>,</span> <span class=n>uncertainty</span><span class=o>=</span><span class=s2>\"mean\"</span><span class=p>)</span><span class=nb>print</span><span class=p>(</span><span class=s2>\"D-ECE:\"</span><span class=p>,</span> <span class=n>miscalibration</span><span class=p>)</span><span class=nb>print</span><span class=p>(</span><span class=s2>\"PICP:\"</span><span class=p>,</span> <span class=n>uncertainty</span><span class=o>.</span><span class=n>picp</span><span class=p>)</span> <span class=c1># prediction coverage probability</span><span class=nb>print</span><span class=p>(</span><span class=s2>\"MPIW:\"</span><span class=p>,</span> <span class=n>uncertainty</span><span class=o>.</span><span class=n>mpiw</span><span class=p>)</span> <span class=c1># mean prediction interval width</span></pre><h3>Probabilistic Regression</h3><p>The following example shows how to use the post-hoc calibration methodsfor probabilistic regression tasks. Within probabilistic regression, aforecaster (e.g. with Gaussian prior) outputs a mean and a variancetargeting the true ground-truth score. Thus, the following informationis required to construct the calibration methods:</p><pre lang=python3><span class=n>mean</span>          <span class=c1># NumPy n-D array holding the estimated mean of shape (n, d) with n samples and d dimensions</span><span class=n>stddev</span>        <span class=c1># NumPy n-D array holding the estimated stddev (independent) of shape (n, d) with n samples and d dimensions</span><span class=n>ground_truth</span>  <span class=c1># NumPy n-D array holding the ground-truth scores of shape (n, d) with n samples and d dimensions</span></pre><h4>Post-hoc Calibration (Parametric)</h4><p>These information might result e.g. from object detection where theposition information of the objects (bounding boxes) are parametrized bynormal distributions. We start by using parametric calibration methodssuch as Variance Scaling:</p><pre lang=python3><span class=kn>from</span> <span class=nn>netcal.regression</span> <span class=kn>import</span> <span class=n>VarianceScaling</span><span class=p>,</span> <span class=n>GPNormal</span><span class=c1># the initialization of the Variance Scaling method is pretty simple</span><span class=n>varscaling</span> <span class=o>=</span> <span class=n>VarianceScaling</span><span class=p>()</span><span class=c1># the GP-Normal requires a little bit more parameters to parametrize the underlying GP</span><span class=n>gpnormal</span> <span class=o>=</span> <span class=n>GPNormal</span><span class=p>(</span>    <span class=n>n_inducing_points</span><span class=o>=</span><span class=mi>12</span><span class=p>,</span>    <span class=c1># number of inducing points</span>    <span class=n>n_random_samples</span><span class=o>=</span><span class=mi>256</span><span class=p>,</span>    <span class=c1># random samples used for likelihood</span>    <span class=n>n_epochs</span><span class=o>=</span><span class=mi>256</span><span class=p>,</span>            <span class=c1># optimization epochs</span>    <span class=n>use_cuda</span><span class=o>=</span><span class=kc>False</span><span class=p>,</span>          <span class=c1># can also use CUDA for computations</span><span class=p>)</span><span class=c1># fit the Variance Scaling</span><span class=c1># note that we need to pass the first argument as tuple as the input distributions</span><span class=c1># are parametrized by mean and variance</span><span class=n>varscaling</span><span class=o>.</span><span class=n>fit</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>),</span> <span class=n>ground_truth</span><span class=p>)</span><span class=c1># fit GP-Normal - similar parameters here!</span><span class=n>gpnormal</span><span class=o>.</span><span class=n>fit</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>),</span> <span class=n>ground_truth</span><span class=p>)</span><span class=c1># transform distributions to obtain recalibrated stddevs</span><span class=n>stddev_varscaling</span> <span class=o>=</span> <span class=n>varscaling</span><span class=o>.</span><span class=n>transform</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>))</span>  <span class=c1># NumPy array with stddev - has shape (n, d)</span><span class=n>stddev_gpnormal</span> <span class=o>=</span> <span class=n>gpnormal</span><span class=o>.</span><span class=n>transform</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>))</span>  <span class=c1># NumPy array with stddev - has shape (n, d)</span></pre><h4>Post-hoc Calibration (Non-Parametric)</h4><p>We can also use non-parametric calibration methods. In this case, thecalibrated distributions are defined by their density (PDF) andcumulative (CDF) functions:</p><pre lang=python3><span class=kn>from</span> <span class=nn>netcal.regression</span> <span class=kn>import</span> <span class=n>IsotonicRegression</span><span class=p>,</span> <span class=n>GPBeta</span><span class=c1># the initialization of the Isotonic Regression method is pretty simple</span><span class=n>isotonic</span> <span class=o>=</span> <span class=n>IsotonicRegression</span><span class=p>()</span><span class=c1># the GP-Normal requires a little bit more parameters to parametrize the underlying GP</span><span class=n>gpbeta</span> <span class=o>=</span> <span class=n>GPBeta</span><span class=p>(</span>    <span class=n>n_inducing_points</span><span class=o>=</span><span class=mi>12</span><span class=p>,</span>    <span class=c1># number of inducing points</span>    <span class=n>n_random_samples</span><span class=o>=</span><span class=mi>256</span><span class=p>,</span>    <span class=c1># random samples used for likelihood</span>    <span class=n>n_epochs</span><span class=o>=</span><span class=mi>256</span><span class=p>,</span>            <span class=c1># optimization epochs</span>    <span class=n>use_cuda</span><span class=o>=</span><span class=kc>False</span><span class=p>,</span>          <span class=c1># can also use CUDA for computations</span><span class=p>)</span><span class=c1># fit the Isotonic Regression</span><span class=c1># note that we need to pass the first argument as tuple as the input distributions</span><span class=c1># are parametrized by mean and variance</span><span class=n>isotonic</span><span class=o>.</span><span class=n>fit</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>),</span> <span class=n>ground_truth</span><span class=p>)</span><span class=c1># fit GP-Beta - similar parameters here!</span><span class=n>gpbeta</span><span class=o>.</span><span class=n>fit</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>),</span> <span class=n>ground_truth</span><span class=p>)</span><span class=c1># transform distributions to obtain recalibrated distributions</span><span class=n>t_isotonic</span><span class=p>,</span> <span class=n>pdf_isotonic</span><span class=p>,</span> <span class=n>cdf_isotonic</span> <span class=o>=</span> <span class=n>varscaling</span><span class=o>.</span><span class=n>transform</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>))</span><span class=n>t_gpbeta</span><span class=p>,</span> <span class=n>pdf_gpbeta</span><span class=p>,</span> <span class=n>cdf_gpbeta</span> <span class=o>=</span> <span class=n>gpbeta</span><span class=o>.</span><span class=n>transform</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>))</span><span class=c1># Note: the transformation results are NumPy n-d arrays with shape (t, n, d)</span><span class=c1># with t as the number of points that define the PDF/CDF,</span><span class=c1># with n as the number of samples, and</span><span class=c1># with d as the number of dimensions.</span><span class=c1># The resulting variables can be interpreted as follows:</span><span class=c1># - t_isotonic/t_gpbeta: x-values of the PDF/CDF with shape (t, n, d)</span><span class=c1># - pdf_isotonic/pdf_gpbeta: y-values of the PDF with shape (t, n, d)</span><span class=c1># - cdf_isotonic/cdf_gpbeta: y-values of the CDF with shape (t, n, d)</span></pre><p>You can visualize the non-parametric distribution of a single samplewithin a single dimension using Matplotlib:</p><pre lang=python3><span class=kn>from</span> <span class=nn>matplotlib</span> <span class=kn>import</span> <span class=n>pyplot</span> <span class=k>as</span> <span class=n>plt</span><span class=n>fig</span><span class=p>,</span> <span class=p>(</span><span class=n>ax1</span><span class=p>,</span> <span class=n>ax2</span><span class=p>)</span> <span class=o>=</span> <span class=n>plt</span><span class=o>.</span><span class=n>subplots</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=c1># plot the recalibrated PDF within a single axis after calibration</span><span class=n>ax1</span><span class=o>.</span><span class=n>plot</span><span class=p>(</span>    <span class=n>t_isotonic</span><span class=p>[:,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>],</span> <span class=n>pdf_isotonic</span><span class=p>[:,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>],</span>    <span class=n>t_gpbeta</span><span class=p>[:,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>],</span> <span class=n>pdf_gpbeta</span><span class=p>[:,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>],</span><span class=p>)</span><span class=c1># plot the recalibrated PDF within a single axis after calibration</span><span class=n>ax2</span><span class=o>.</span><span class=n>plot</span><span class=p>(</span>    <span class=n>t_isotonic</span><span class=p>[:,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>],</span> <span class=n>cdf_isotonic</span><span class=p>[:,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>],</span>    <span class=n>t_gpbeta</span><span class=p>[:,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>],</span> <span class=n>cdf_gpbeta</span><span class=p>[:,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>],</span><span class=p>)</span><span class=n>plt</span><span class=o>.</span><span class=n>show</span><span class=p>()</span></pre><p>We provide a method to extract the statistical moments expectation andvariance from the recalibrated cumulative (CDF). Note that we advise touse one of the parametric calibration methods if you need e.g. aGaussian for subsequent applications such as Kalman filtering.</p><pre lang=python3><span class=kn>from</span> <span class=nn>netcal</span> <span class=kn>import</span> <span class=n>cumulative_moments</span><span class=c1># extract the expectation (mean) and the variance from the recalibrated CDF</span><span class=n>ymean_isotonic</span><span class=p>,</span> <span class=n>yvar_isotonic</span> <span class=o>=</span> <span class=n>cumulative_moments</span><span class=p>(</span><span class=n>t_isotonic</span><span class=p>,</span> <span class=n>cdf_isotonic</span><span class=p>)</span><span class=n>ymean_gpbeta</span><span class=p>,</span> <span class=n>yvar_gpbeta</span> <span class=o>=</span> <span class=n>cumulative_moments</span><span class=p>(</span><span class=n>t_gpbeta</span><span class=p>,</span> <span class=n>cdf_gpbeta</span><span class=p>)</span><span class=c1># each of these variables has shape (n, d) and holds the</span><span class=c1># mean/variance for each sample and in each dimension</span></pre><h4>Correlation Estimation and Recalibration</h4><p>With the GP-Normal <em>netcal.regression.GPNormal</em>, it is also possible todetect possible correlations between multiple input dimensions that haveoriginally been trained/modelled independently from each other:</p><pre lang=python3><span class=kn>from</span> <span class=nn>netcal.regression</span> <span class=kn>import</span> <span class=n>GPNormal</span><span class=c1># the GP-Normal requires a little bit more parameters to parametrize the underlying GP</span><span class=n>gpnormal</span> <span class=o>=</span> <span class=n>GPNormal</span><span class=p>(</span>    <span class=n>n_inducing_points</span><span class=o>=</span><span class=mi>12</span><span class=p>,</span>    <span class=c1># number of inducing points</span>    <span class=n>n_random_samples</span><span class=o>=</span><span class=mi>256</span><span class=p>,</span>    <span class=c1># random samples used for likelihood</span>    <span class=n>n_epochs</span><span class=o>=</span><span class=mi>256</span><span class=p>,</span>            <span class=c1># optimization epochs</span>    <span class=n>use_cuda</span><span class=o>=</span><span class=kc>False</span><span class=p>,</span>          <span class=c1># can also use CUDA for computations</span>    <span class=n>correlations</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span>       <span class=c1># enable correlation capturing between the input dimensions</span><span class=p>)</span><span class=c1># fit GP-Normal</span><span class=c1># note that we need to pass the first argument as tuple as the input distributions</span><span class=c1># are parametrized by mean and variance</span><span class=n>gpnormal</span><span class=o>.</span><span class=n>fit</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>),</span> <span class=n>ground_truth</span><span class=p>)</span><span class=c1># transform distributions to obtain recalibrated covariance matrices</span><span class=n>cov</span> <span class=o>=</span> <span class=n>gpnormal</span><span class=o>.</span><span class=n>transform</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>))</span>  <span class=c1># NumPy array with covariance - has shape (n, d, d)</span><span class=c1># note: if the input is already given by multivariate normal distributions</span><span class=c1># (stddev is covariance and has shape (n, d, d)), the methods works similar</span><span class=c1># and simply applies a covariance recalibration of the input</span></pre><h4>Measuring Miscalibration for Regression</h4><p>Measuring miscalibration is as simple as the training of the methods:</p><pre lang=python3><span class=kn>import</span> <span class=nn>numpy</span> <span class=k>as</span> <span class=nn>np</span><span class=kn>from</span> <span class=nn>netcal.metrics</span> <span class=kn>import</span> <span class=n>NLL</span><span class=p>,</span> <span class=n>PinballLoss</span><span class=p>,</span> <span class=n>QCE</span><span class=c1># define the quantile levels that are used to evaluate the pinball loss and the QCE</span><span class=n>quantiles</span> <span class=o>=</span> <span class=n>np</span><span class=o>.</span><span class=n>linspace</span><span class=p>(</span><span class=mf>0.1</span><span class=p>,</span> <span class=mf>0.9</span><span class=p>,</span> <span class=mi>9</span><span class=p>)</span><span class=c1># initialize NLL, Pinball, and QCE objects</span><span class=n>nll</span> <span class=o>=</span> <span class=n>NLL</span><span class=p>()</span><span class=n>pinball</span> <span class=o>=</span> <span class=n>PinballLoss</span><span class=p>()</span><span class=n>qce</span> <span class=o>=</span> <span class=n>QCE</span><span class=p>(</span><span class=n>marginal</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span>  <span class=c1># if \"marginal=False\", we can also measure the QCE by means of the predicted variance levels (realized by binning the variance space)</span><span class=c1># measure miscalibration with the initialized metrics</span><span class=c1># Note: the parameter \"reduction\" has a major influence to the return shape of the metrics</span><span class=c1># see the method docstrings for detailed information</span><span class=n>nll</span><span class=o>.</span><span class=n>measure</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>),</span> <span class=n>ground_truth</span><span class=p>,</span> <span class=n>reduction</span><span class=o>=</span><span class=s2>\"mean\"</span><span class=p>)</span><span class=n>pinball</span><span class=o>.</span><span class=n>measure</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>),</span> <span class=n>ground_truth</span><span class=p>,</span> <span class=n>q</span><span class=o>=</span><span class=n>quantiles</span><span class=p>,</span> <span class=n>reduction</span><span class=o>=</span><span class=s2>\"mean\"</span><span class=p>)</span><span class=n>qce</span><span class=o>.</span><span class=n>measure</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>),</span> <span class=n>ground_truth</span><span class=p>,</span> <span class=n>q</span><span class=o>=</span><span class=n>quantiles</span><span class=p>,</span> <span class=n>reduction</span><span class=o>=</span><span class=s2>\"mean\"</span><span class=p>)</span></pre><h4>Visualizing Miscalibration for Regression</h4><p>Example visualization code block using the<em>netcal.presentation.ReliabilityRegression</em> class:</p><pre lang=python3><span class=kn>from</span> <span class=nn>netcal.presentation</span> <span class=kn>import</span> <span class=n>ReliabilityRegression</span><span class=c1># define the quantile levels that are used for the quantile evaluation</span><span class=n>quantiles</span> <span class=o>=</span> <span class=n>np</span><span class=o>.</span><span class=n>linspace</span><span class=p>(</span><span class=mf>0.1</span><span class=p>,</span> <span class=mf>0.9</span><span class=p>,</span> <span class=mi>9</span><span class=p>)</span><span class=c1># initialize the diagram object</span><span class=n>diagram</span> <span class=o>=</span> <span class=n>ReliabilityRegression</span><span class=p>(</span><span class=n>quantiles</span><span class=o>=</span><span class=n>quantiles</span><span class=p>)</span><span class=c1># visualize miscalibration with the initialized object</span><span class=n>diagram</span><span class=o>.</span><span class=n>plot</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>),</span> <span class=n>ground_truth</span><span class=p>)</span><span class=c1># you can also use this method to create a tikz file with tikz code</span><span class=c1># that can be directly used within LaTeX documents:</span><span class=n>diagram</span><span class=o>.</span><span class=n>plot</span><span class=p>((</span><span class=n>mean</span><span class=p>,</span> <span class=n>stddev</span><span class=p>),</span> <span class=n>ground_truth</span><span class=p>,</span> <span class=n>tikz</span><span class=o>=</span><span class=kc>True</span><span class=p>,</span> <span class=n>filename</span><span class=o>=</span><span class=s2>\"diagram.tikz\"</span><span class=p>)</span></pre></div><h2>References</h2><p><a rel=nofollow>[1]</a> Naeini, Mahdi Pakdaman, Gregory Cooper, and Milos Hauskrecht: \"Obtaining well calibrated probabilities using bayesian binning.\" Twenty-Ninth AAAI Conference on Artificial Intelligence, 2015.</p><p><a rel=nofollow>[2]</a> Kull, Meelis, Telmo Silva Filho, and Peter Flach: \"Beta calibration: a well-founded and easily implemented improvement on logistic calibration for binary classifiers.\" Artificial Intelligence and Statistics, PMLR 54:623-631, 2017.</p><p><a rel=nofollow>[3]</a> Zadrozny, Bianca and Elkan, Charles: \"Obtaining calibrated probability estimates from decision trees and naive bayesian classifiers.\" In ICML, pp. 609\u2013616, 2001.</p><p><a rel=nofollow>[4]</a> Zadrozny, Bianca and Elkan, Charles: \"Transforming classifier scores into accurate multiclass probability estimates.\" In KDD, pp. 694\u2013699, 2002.</p><p><a rel=nofollow>[5]</a> Ryan J Tibshirani, Holger Hoefling, and Robert Tibshirani: \"Nearly-isotonic regression.\" Technometrics, 53(1):54\u201361, 2011.</p><p><a rel=nofollow>[6]</a> Naeini, Mahdi Pakdaman, and Gregory F. Cooper: \"Binary classifier calibration using an ensemble of near isotonic regression models.\" 2016 IEEE 16th International Conference on Data Mining (ICDM). IEEE, 2016.</p><p><a rel=nofollow>[7]</a> Chuan Guo, Geoff Pleiss, Yu Sun and Kilian Q. Weinberger: \"On Calibration of Modern Neural Networks.\" Proceedings of the 34th International Conference on Machine Learning, 2017.</p><p><a rel=nofollow>[8]</a> Pereyra, G., Tucker, G., Chorowski, J., Kaiser, L. and Hinton, G.: \u201cRegularizing neural networks by penalizing confident output distributions.\u201d CoRR, 2017.</p><p><a rel=nofollow>[9]</a> Pedregosa, F., Varoquaux, G., Gramfort, A., Michel, V., Thirion, B., Grisel, O., Blondel, M., Prettenhofer, P., Weiss, R., Dubourg, V., Vanderplas, J., Passos, A., Cournapeau, D., Brucher, M., Perrot, M. and Duchesnay, E.: \"Scikit-learn: Machine Learning in Python.\" In Journal of Machine Learning Research, volume 12 pp 2825-2830, 2011.</p><p><a rel=nofollow>[10]</a> Platt, John: \"Probabilistic outputs for support vector machines and comparisons to regularized likelihood methods.\" Advances in large margin classifiers, 10(3): 61\u201374, 1999.</p><p><a rel=nofollow>[11]</a> Neumann, Lukas, Andrew Zisserman, and Andrea Vedaldi: \"Relaxed Softmax: Efficient Confidence Auto-Calibration for Safe Pedestrian Detection.\" Conference on Neural Information Processing Systems (NIPS) Workshop MLITS, 2018.</p><p><a rel=nofollow>[12]</a> Fabian K\u00fcppers, Jan Kronenberger, Amirhossein Shantia, and Anselm Haselhoff: \"Multivariate Confidence Calibration for Object Detection\".\" The IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR) Workshops, 2020</p><p><a rel=nofollow>[13]</a> Kumar, Aviral, Sunita Sarawagi, and Ujjwal Jain: \"Trainable calibration measures for neural networks from _kernel mean embeddings.\" International Conference on Machine Learning. 2018</p><p><a rel=nofollow>[14]</a> Jiayu  Yao,  Weiwei  Pan,  Soumya  Ghosh,  and  Finale  Doshi-Velez: \"Quality of Uncertainty Quantification for Bayesian Neural Network Inference.\" Workshop on Uncertainty and Robustness in Deep Learning, ICML, 2019</p><p><a rel=nofollow>[15]</a> Liang, Gongbo, et al.: \"Improved trainable calibration method for neural networks on medical imaging classification.\" arXiv preprint arXiv:2009.04057 (2020)</p><p><a rel=nofollow>[16]</a> Fabian K\u00fcppers, Jonas Schneider, Jonas, and Anselm Haselhoff: \"Parametric and Multivariate Uncertainty Calibration for Regression and Object Detection.\" In: Proceedings of the European Conference on Computer Vision (ECCV) Workshops, Springer, October 2022</p><p><a rel=nofollow>[17]</a> Levi, Dan, et al.: \"Evaluating and calibrating uncertainty prediction in regression tasks.\" arXiv preprint arXiv:1905.11659 (2019).</p><p><a rel=nofollow>[18]</a> Laves, Max-Heinrich, et al.: \"Well-calibrated regression uncertainty in medical imaging with deep learning.\" Medical Imaging with Deep Learning. PMLR, 2020.</p><p><a rel=nofollow>[19]</a> Volodymyr Kuleshov, Nathan Fenner, and Stefano Ermon: \"Accurate uncertainties for deep learning using calibrated regression.\" International Conference on Machine Learning. PMLR, 2018.</p><p><a rel=nofollow>[20]</a> Hao Song, Tom Diethe, Meelis Kull and Peter Flach: \"Distribution calibration for regression.\" International Conference on Machine Learning. PMLR, 2019.</p>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://efs-opensource.github.io/calibration-framework\" rel=\"nofollow\">        <i class=\"fas fa-book\" aria-hidden=\"true\"></i>Documentation      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/EFS-OpenSource/calibration-framework\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/netcal\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache Software License (Apache-2.0)</p>    <p><strong>Author:</strong> <a href=\"mailto:fabian.kueppers@efs-techhub.com\">Fabian K\u00fcppers</a></p>    <p><strong>Maintainer:</strong> <a href=\"mailto:fabian.kueppers@efs-techhub.com\">Fabian K\u00fcppers</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      netcal,    </span>    <span class=\"package-keyword\">      calibration,    </span>    <span class=\"package-keyword\">      uncertainty,    </span>    <span class=\"package-keyword\">      neural,    </span>    <span class=\"package-keyword\">      network,    </span>    <span class=\"package-keyword\">      confidence,    </span>    <span class=\"package-keyword\">      classification,    </span>    <span class=\"package-keyword\">      object,    </span>    <span class=\"package-keyword\">      detection,    </span>    <span class=\"package-keyword\">      regression    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=3.6  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/fabiankueppers/\" aria-label=\"fabiankueppers\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/116036b6f32652efc52cadfedf0d062446feb617/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f62366236343562336633333666633832323237323036363534643135626263333f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for fabiankueppers from gravatar.com\" title=\"Avatar for fabiankueppers from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            fabiankueppers          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+Apache+Software+License\">            OSI Approved :: Apache Software License          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Scientific%2FEngineering+%3A%3A+Artificial+Intelligence\">            Scientific/Engineering :: Artificial Intelligence          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/netcal/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.3.5/\">                <p class=\"release__version\">                  1.3.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-03-28T07:15:27+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 28, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.3.4/\">                <p class=\"release__version\">                  1.3.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-03-17T12:06:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 17, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.3.3/\">                <p class=\"release__version\">                  1.3.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-01-19T08:10:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 19, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.3.2/\">                <p class=\"release__version\">                  1.3.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-11-11T09:54:03+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 11, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.3.1/\">                <p class=\"release__version\">                  1.3.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-19T08:50:20+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 19, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.3.0/\">                <p class=\"release__version\">                  1.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-18T15:59:55+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 18, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.2.1/\">                <p class=\"release__version\">                  1.2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-26T08:49:35+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 26, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.2.0/\">                <p class=\"release__version\">                  1.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-06-30T13:47:38+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 30, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.1.3/\">                <p class=\"release__version\">                  1.1.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-03-16T11:49:51+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 16, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.1.2/\">                <p class=\"release__version\">                  1.1.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-07-01T12:35:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 1, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.1.1/\">                <p class=\"release__version\">                  1.1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-06-10T12:49:20+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 10, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.1/\">                <p class=\"release__version\">                  1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-06-10T08:41:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 10, 2020</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/netcal/1.0/\">                <p class=\"release__version\">                  1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-09-05T07:21:12+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 5, 2019</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/2e/4d/4627b0a5ef8539e8f24316304861a7969d1ea34ac9093aa670b7aa92fca1/netcal-1.3.5.tar.gz\">          netcal-1.3.5.tar.gz        </a>        (173.6 kB        <a href=\"#copy-hash-modal-284b1d7a-61dc-489e-9783-1189bdd86e99\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-03-28T07:15:35+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 28, 2023</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/12/a6/fd7aa37d5d613216637976f4f121270bc1781d1ad4ac3bf981f34a45b1c0/netcal-1.3.5-py3-none-any.whl\">          netcal-1.3.5-py3-none-any.whl        </a>        (235.6 kB        <a href=\"#copy-hash-modal-5cd85e27-2a9a-4c9f-a966-4069a7951d4d\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-03-28T07:15:27+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 28, 2023</time>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-284b1d7a-61dc-489e-9783-1189bdd86e99\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for netcal-1.3.5.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for netcal-1.3.5.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">90921bfaed5b29a9c48539827781c7f98745f6f8f38bcaffcc40b66eeab31ac0</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">62c78c128b2649e5c72db8d202e50d9d</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">2e4d4627b0a5ef8539e8f24316304861a7969d1ea34ac9093aa670b7aa92fca1</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-5cd85e27-2a9a-4c9f-a966-4069a7951d4d\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for netcal-1.3.5-py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for netcal-1.3.5-py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">3c3ae5ea35786878c3a979ad5a0f7192d89e7c53d0b3ab76ed27e227dd18d6cd</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">9d3efe2ea188e194d7cf0d759ffe985f</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">12a6fd7aa37d5d613216637976f4f121270bc1781d1ad4ac3bf981f34a45b1c0</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "aiopg",
  "url": "https://aiopg.readthedocs.io",
  "html": "<!DOCTYPE html><html lang=\"en\">  <head>    <meta charset=\"utf-8\" />    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /><meta name=\"generator\" content=\"Docutils 0.17.1: http://docutils.sourceforge.net/\" />    <title>Welcome to AIOPG &#8212; Welcome to AIOPG</title>    <link rel=\"stylesheet\" type=\"text/css\" href=\"_static/pygments.css\" />    <link rel=\"stylesheet\" type=\"text/css\" href=\"_static/alabaster.css\" />    <link rel=\"stylesheet\" type=\"text/css\" href=\"/_/static/css/badge_only.css\" />    <script data-url_root=\"./\" id=\"documentation_options\" src=\"_static/documentation_options.js\"></script>    <script src=\"_static/jquery.js\"></script>    <script src=\"_static/underscore.js\"></script>    <script src=\"_static/doctools.js\"></script>    <script async=\"async\" src=\"/_/static/javascript/readthedocs-doc-embed.js\"></script>    <link rel=\"canonical\" href=\"https://aiopg.readthedocs.io/en/stable/index.html\" />    <link rel=\"index\" title=\"Index\" href=\"genindex.html\" />    <link rel=\"search\" title=\"Search\" href=\"search.html\" />    <link rel=\"next\" title=\"Core API Reference\" href=\"core.html\" />     <link rel=\"stylesheet\" href=\"_static/custom.css\" type=\"text/css\" />        <link rel=\"canonical\" href=\"https://aiopg.readthedocs.io/en/stable/index.html\"/>    <meta name=\"viewport\" content=\"width=device-width, initial-scale=0.9, maximum-scale=0.9\" />  <!-- RTD Extra Head --><link rel=\"stylesheet\" href=\"/_/static/css/readthedocs-doc-embed.css\" type=\"text/css\" /><script type=\"application/json\" id=\"READTHEDOCS_DATA\">{\"ad_free\": false, \"api_host\": \"https://readthedocs.org\", \"build_date\": \"2022-10-26T09:26:31Z\", \"builder\": \"sphinx\", \"canonical_url\": null, \"commit\": \"0b5e63ca\", \"docroot\": \"/docs/\", \"features\": {\"docsearch_disabled\": false}, \"global_analytics_code\": \"UA-17997319-1\", \"language\": \"en\", \"page\": \"index\", \"programming_language\": \"py\", \"project\": \"aiopg\", \"proxied_api_host\": \"/_\", \"source_suffix\": \".rst\", \"subprojects\": {}, \"theme\": \"alabaster\", \"user_analytics_code\": \"\", \"version\": \"stable\"}</script><!--Using this variable directly instead of using `JSON.parse` is deprecated.The READTHEDOCS_DATA global variable will be removed in the future.--><script type=\"text/javascript\">READTHEDOCS_DATA = JSON.parse(document.getElementById('READTHEDOCS_DATA').innerHTML);</script><script type=\"text/javascript\" src=\"/_/static/javascript/readthedocs-analytics.js\" async=\"async\"></script><!-- end RTD <extrahead> --></head><body>      <div class=\"document\">      <div class=\"documentwrapper\">        <div class=\"bodywrapper\">                    <div class=\"body\" role=\"main\">              <section id=\"welcome-to-aiopg\"><h1>Welcome to AIOPG<a class=\"headerlink\" href=\"#welcome-to-aiopg\" title=\"Permalink to this headline\">\u00b6</a></h1><p><strong>aiopg</strong> is a library for accessing a <a class=\"reference internal\" href=\"glossary.html#term-PostgreSQL\"><span class=\"xref std std-term\">PostgreSQL</span></a> databasefrom the <a class=\"reference external\" href=\"http://docs.python.org/3.4/library/asyncio.html\">asyncio</a> (PEP-3156/tulip) framework. It wrapsasynchronous features of the Psycopg database driver.</p><p>Current version is 1.4.0.</p><a class=\"reference external image-reference\" href=\"https://travis-ci.com/aio-libs/aiopg\"><img alt=\"Travis CI status\" src=\"https://travis-ci.com/aio-libs/aiopg.svg?branch=master\" /></a><a class=\"reference external image-reference\" href=\"https://codecov.io/github/aio-libs/aiopg\"><img alt=\"Code coverage status\" src=\"https://codecov.io/github/aio-libs/aiopg/coverage.svg?branch=master\" /></a><a class=\"reference external image-reference\" href=\"https://badge.fury.io/py/aiopg\"><img alt=\"Latest PyPI package version\" src=\"https://badge.fury.io/py/aiopg.svg\" /></a><div class=\"admonition warning\"><p class=\"admonition-title\">Warning</p><ol class=\"arabic simple\"><li><p>Removing await the before <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Cursor.mogrify()</span></code> function</p></li><li><p>Only supports <code class=\"docutils literal notranslate\"><span class=\"pre\">python</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">3.6</span></code></p></li><li><p>Only support syntax <code class=\"docutils literal notranslate\"><span class=\"pre\">async/await</span></code></p></li><li><p><a class=\"reference internal\" href=\"run_loop.html#aiopg-run-loop\"><span class=\"std std-ref\">Only use get_running_loop</span></a></p></li></ol></div><section id=\"features\"><h2>Features<a class=\"headerlink\" href=\"#features\" title=\"Permalink to this headline\">\u00b6</a></h2><ul class=\"simple\"><li><p>Implements <em>asyncio</em> <a class=\"reference internal\" href=\"glossary.html#term-DBAPI\"><span class=\"xref std std-term\">DBAPI</span></a> <em>like</em> interface for<a class=\"reference internal\" href=\"glossary.html#term-PostgreSQL\"><span class=\"xref std std-term\">PostgreSQL</span></a>.  It includes <a class=\"reference internal\" href=\"core.html#aiopg-core-connection\"><span class=\"std std-ref\">Connection</span></a>,<a class=\"reference internal\" href=\"core.html#aiopg-core-cursor\"><span class=\"std std-ref\">Cursor</span></a> and <a class=\"reference internal\" href=\"core.html#aiopg-core-pool\"><span class=\"std std-ref\">Pool</span></a> objects.</p></li><li><p>Implements <em>optional</em> support for charming <a class=\"reference internal\" href=\"glossary.html#term-sqlalchemy\"><span class=\"xref std std-term\">sqlalchemy</span></a>functional sql layer.</p></li></ul></section><section id=\"basics\"><h2>Basics<a class=\"headerlink\" href=\"#basics\" title=\"Permalink to this headline\">\u00b6</a></h2><p>The library uses <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">psycopg2-binary</span></code> connections in <strong>asynchronous</strong> modeinternally.</p><p>Literally it is an (almost) transparent wrapper for psycopg2-binaryconnection and cursor, but with only exception.</p><p>You should use <code class=\"docutils literal notranslate\"><span class=\"pre\">await</span> <span class=\"pre\">conn.f()</span></code> instead of just call <code class=\"docutils literal notranslate\"><span class=\"pre\">conn.f()</span></code> forevery method.</p><p>Properties are unchanged, so <code class=\"docutils literal notranslate\"><span class=\"pre\">conn.prop</span></code> is correct as well as<code class=\"docutils literal notranslate\"><span class=\"pre\">conn.prop</span> <span class=\"pre\">=</span> <span class=\"pre\">val</span></code>.</p><p>See example:</p><div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span><span class=\"kn\">import</span> <span class=\"nn\">aiopg</span><span class=\"n\">dsn</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;dbname=aiopg user=aiopg password=passwd host=127.0.0.1&#39;</span><span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">go</span><span class=\"p\">():</span>    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">aiopg</span><span class=\"o\">.</span><span class=\"n\">create_pool</span><span class=\"p\">(</span><span class=\"n\">dsn</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">pool</span><span class=\"p\">:</span>        <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">pool</span><span class=\"o\">.</span><span class=\"n\">acquire</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">conn</span><span class=\"p\">:</span>            <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">cur</span><span class=\"p\">:</span>                <span class=\"k\">await</span> <span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">&quot;SELECT 1&quot;</span><span class=\"p\">)</span>                <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>                <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">cur</span><span class=\"p\">:</span>                    <span class=\"n\">ret</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">)</span>                <span class=\"k\">assert</span> <span class=\"n\">ret</span> <span class=\"o\">==</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,)]</span><span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">go</span><span class=\"p\">())</span></pre></div></div><p>For documentation about connection and cursor methods/propertiesplease go to psycopg docs: <a class=\"reference external\" href=\"http://initd.org/psycopg/docs/\">http://initd.org/psycopg/docs/</a></p><div class=\"admonition note\"><p class=\"admonition-title\">Note</p><p>psycopg2-binary creates new connections with <code class=\"docutils literal notranslate\"><span class=\"pre\">autocommit=True</span></code>option in asynchronous mode. Autocommitting cannot be disabled.</p><p>See <a class=\"reference internal\" href=\"core.html#aiopg-core-transactions\"><span class=\"std std-ref\">Transactions</span></a> about transaction usagein <em>autocommit mode</em>.</p></div></section><section id=\"sqlalchemy-and-aiopg\"><h2>SQLAlchemy and aiopg<a class=\"headerlink\" href=\"#sqlalchemy-and-aiopg\" title=\"Permalink to this headline\">\u00b6</a></h2><p><a class=\"reference internal\" href=\"core.html#aiopg-core\"><span class=\"std std-ref\">Core API Reference</span></a> provides core support for <a class=\"reference internal\" href=\"glossary.html#term-PostgreSQL\"><span class=\"xref std std-term\">PostgreSQL</span></a> connections.</p><p>We have found it to be very annoying to write raw SQL queries manually,so we introduce support for <a class=\"reference internal\" href=\"glossary.html#term-sqlalchemy\"><span class=\"xref std std-term\">sqlalchemy</span></a> query builders:</p><div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span><span class=\"kn\">from</span> <span class=\"nn\">aiopg.sa</span> <span class=\"kn\">import</span> <span class=\"n\">create_engine</span><span class=\"kn\">import</span> <span class=\"nn\">sqlalchemy</span> <span class=\"k\">as</span> <span class=\"nn\">sa</span><span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">MetaData</span><span class=\"p\">()</span><span class=\"n\">tbl</span> <span class=\"o\">=</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">&#39;tbl&#39;</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">,</span>               <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">,</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>               <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s1\">&#39;val&#39;</span><span class=\"p\">,</span> <span class=\"n\">sa</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">)))</span><span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">go</span><span class=\"p\">():</span>    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">create_engine</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">&#39;aiopg&#39;</span><span class=\"p\">,</span>                             <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s1\">&#39;aiopg&#39;</span><span class=\"p\">,</span>                             <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">&#39;127.0.0.1&#39;</span><span class=\"p\">,</span>                             <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">&#39;passwd&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">engine</span><span class=\"p\">:</span>        <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">acquire</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">conn</span><span class=\"p\">:</span>            <span class=\"k\">await</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">tbl</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"o\">=</span><span class=\"s1\">&#39;abc&#39;</span><span class=\"p\">))</span>            <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">tbl</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">tbl</span><span class=\"o\">.</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"o\">==</span><span class=\"s1\">&#39;abc&#39;</span><span class=\"p\">)):</span>                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">row</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">)</span><span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">go</span><span class=\"p\">())</span></pre></div></div><p>We believe constructions like <code class=\"docutils literal notranslate\"><span class=\"pre\">tbl.insert().values(val='abc')</span></code> and<code class=\"docutils literal notranslate\"><span class=\"pre\">tbl.select().where(tbl.c.val=='abc')</span></code> to be very handy andconvenient.</p></section><section id=\"installation\"><h2>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this headline\">\u00b6</a></h2><div class=\"highlight-python3 notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip3</span> <span class=\"n\">install</span> <span class=\"n\">aiopg</span></pre></div></div><div class=\"admonition note\"><p class=\"admonition-title\">Note</p><p><a class=\"reference internal\" href=\"core.html#module-aiopg\" title=\"aiopg: A library for accessing a PostgreSQL database from the asyncio\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">aiopg</span></code></a> requires <a class=\"reference internal\" href=\"glossary.html#term-psycopg2-binary\"><span class=\"xref std std-term\">psycopg2-binary</span></a> library.</p><p>You can use global environment or you use like to use virtual environments(<a class=\"reference internal\" href=\"glossary.html#term-virtualenvwrapper\"><span class=\"xref std std-term\">virtualenvwrapper</span></a>, <a class=\"reference internal\" href=\"glossary.html#term-virtualenv\"><span class=\"xref std std-term\">virtualenv</span></a> or <a class=\"reference internal\" href=\"glossary.html#term-venv\"><span class=\"xref std std-term\">venv</span></a>) youprobably have to install <a class=\"reference internal\" href=\"glossary.html#term-libpq\"><span class=\"xref std std-term\">libpq</span></a> development package</p><div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>$ sudo apt-get install libpq-dev</pre></div></div></div><p>Also you probably want to use <a class=\"reference internal\" href=\"sa.html#module-aiopg.sa\" title=\"aiopg.sa: support for SQLAlchemy functional SQL layer\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">aiopg.sa</span></code></a>.</p><p id=\"aiozmq-install-sqlalchemy\"><a class=\"reference internal\" href=\"sa.html#module-aiopg.sa\" title=\"aiopg.sa: support for SQLAlchemy functional SQL layer\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">aiopg.sa</span></code></a> module is <strong>optional</strong> and requires<a class=\"reference internal\" href=\"glossary.html#term-sqlalchemy\"><span class=\"xref std std-term\">sqlalchemy</span></a>. You can install <em>sqlalchemy</em> by running</p><div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>$ pip3 install aiopg<span class=\"o\">[</span>sa<span class=\"o\">]</span></pre></div></div></section><section id=\"source-code\"><h2>Source code<a class=\"headerlink\" href=\"#source-code\" title=\"Permalink to this headline\">\u00b6</a></h2><p>The project is hosted on <a class=\"reference external\" href=\"https://github.com/aio-libs/aiopg\">GitHub</a></p><p>Please feel free to file an issue on <a class=\"reference external\" href=\"https://github.com/aio-libs/aiopg/issues\">bug tracker</a> if you have found a bugor have some suggestion for library improvement.</p><p>The library uses <a class=\"reference external\" href=\"https://travis-ci.org/aio-libs/aiopg\">Travis</a> forContinious Integration.</p></section><section id=\"discussion-list\"><h2>Discussion list<a class=\"headerlink\" href=\"#discussion-list\" title=\"Permalink to this headline\">\u00b6</a></h2><p><em>aio-libs</em> google group: <a class=\"reference external\" href=\"https://groups.google.com/forum/#!forum/aio-libs\">https://groups.google.com/forum/#!forum/aio-libs</a></p><p>Feel free to post your questions and ideas here.</p></section><section id=\"dependencies\"><h2>Dependencies<a class=\"headerlink\" href=\"#dependencies\" title=\"Permalink to this headline\">\u00b6</a></h2><ul class=\"simple\"><li><p>Python 3.6+</p></li><li><p>psycopg2-binary</p></li><li><p>aiopg.sa requires <a class=\"reference internal\" href=\"glossary.html#term-sqlalchemy\"><span class=\"xref std std-term\">sqlalchemy</span></a>.</p></li></ul></section><section id=\"authors-and-license\"><h2>Authors and License<a class=\"headerlink\" href=\"#authors-and-license\" title=\"Permalink to this headline\">\u00b6</a></h2><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">aiopg</span></code> package is written by Andrew Svetlov.  It\u2019s BSDlicensed and freely available.</p><p>Feel free to improve this package and send a pull request to <a class=\"reference external\" href=\"https://github.com/aio-libs/aiopg\">GitHub</a>.</p><p>Contents:</p><div class=\"toctree-wrapper compound\"><ul><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"core.html\">Core API Reference</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"core.html#connection\">Connection</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"core.html#cursor\">Cursor</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"core.html#pool\">Pool</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"core.html#exceptions\">Exceptions</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"core.html#transactions\">Transactions</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"core.html#extension-type-translations\">Extension type translations</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"core.html#server-side-notifications\">Server-side notifications</a></li></ul></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"sa.html\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">aiopg.sa</span></code> \u2014 support for SQLAlchemy functional SQL layer</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"sa.html#intro\">Intro</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"sa.html#engine\">Engine</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"sa.html#connection\">Connection</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"sa.html#resultproxy\">ResultProxy</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"sa.html#transaction-objects\">Transaction objects</a></li></ul></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"examples.html\">Examples of aiopg usage</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"examples.html#low-level-api\">Low-level API</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"examples.html#usage-of-listen-notify-commands\">Usage of LISTEN/NOTIFY commands</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"examples.html#simple-sqlalchemy-usage\">Simple sqlalchemy usage</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"examples.html#default-value-field-sqlalchemy-usage\">Default value field sqlalchemy usage</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"examples.html#types-field-sqlalchemy-usage\">Types field sqlalchemy usage</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"examples.html#named-field-sqlalchemy-usage\">Named field sqlalchemy usage</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"examples.html#complex-sqlalchemy-queries\">Complex sqlalchemy queries</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"examples.html#simple-transaction-in-sqlalchemy\">Simple transaction in sqlalchemy</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"examples.html#isolation-transaction-in-sqlalchemy\">Isolation transaction in sqlalchemy</a></li></ul></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"contributing.html\">Instruction for contributors</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"contributing.html#developer-environment\">Developer environment</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"contributing.html#contribution\">Contribution</a></li></ul></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"glossary.html\">Glossary</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"misc.html\">Miscellaneous</a><ul><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"essays.html\">Essays</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"team.html\">Team AIOPG</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"glossary.html\">Glossary</a></li><li class=\"toctree-l2\"><a class=\"reference internal\" href=\"changes.html\">Changelog</a></li></ul></li></ul></div><section id=\"indices-and-tables\"><h3>Indices and tables<a class=\"headerlink\" href=\"#indices-and-tables\" title=\"Permalink to this headline\">\u00b6</a></h3><ul class=\"simple\"><li><p><a class=\"reference internal\" href=\"genindex.html\"><span class=\"std std-ref\">Index</span></a></p></li><li><p><a class=\"reference internal\" href=\"py-modindex.html\"><span class=\"std std-ref\">Module Index</span></a></p></li><li><p><a class=\"reference internal\" href=\"search.html\"><span class=\"std std-ref\">Search Page</span></a></p></li></ul></section></section></section>          </div>                  </div>      </div>      <div class=\"sphinxsidebar\" role=\"navigation\" aria-label=\"main navigation\">        <div class=\"sphinxsidebarwrapper\"><p class=\"logo\">  <a href=\"#\">    <img class=\"logo\" src=\"_static/aiopg-icon.png\" alt=\"Logo\"/>      </a></p><p class=\"blurb\">aiopg - Postgres integration with asyncio</p><p><iframe src=\"https://ghbtns.com/github-btn.html?user=aio-libs&repo=aiopg&type=star&count=true&size=large&v=2\"  allowtransparency=\"true\" frameborder=\"0\" scrolling=\"0\" width=\"200px\" height=\"35px\"></iframe></p><h3>Navigation</h3><ul><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"core.html\">Core API Reference</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"sa.html\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">aiopg.sa</span></code> \u2014 support for SQLAlchemy functional SQL layer</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"examples.html\">Examples of aiopg usage</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"contributing.html\">Instruction for contributors</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"glossary.html\">Glossary</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"misc.html\">Miscellaneous</a></li></ul><div id=\"searchbox\" style=\"display: none\" role=\"search\">  <h3 id=\"searchlabel\">Quick search</h3>    <div class=\"searchformwrapper\">    <form class=\"search\" action=\"search.html\" method=\"get\">      <input type=\"text\" name=\"q\" aria-labelledby=\"searchlabel\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"/>      <input type=\"submit\" value=\"Go\" />    </form>    </div></div><script>$('#searchbox').show(0);</script>        </div>      </div>      <div class=\"clearer\"></div>    </div>    <div class=\"footer\">      &copy;2014-2022, Andrew Svetlov, Alexey Firsov.            |      Powered by <a href=\"http://sphinx-doc.org/\">Sphinx 4.1.2</a>      &amp; <a href=\"https://github.com/bitprophet/alabaster\">Alabaster 0.7.12</a>            |      <a href=\"_sources/index.rst.txt\"          rel=\"nofollow\">Page source</a>    </div>        <a href=\"https://github.com/aio-libs/aiopg\" class=\"github\">        <img style=\"position: absolute; top: 0; right: 0; border: 0;\" src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\" alt=\"Fork me on GitHub\"  class=\"github\"/>    </a>          </body></html>",
  "embeddings": []
}
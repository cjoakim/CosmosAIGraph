{
  "libtype": "pypi",
  "libname": "dataclass-wizard",
  "url": "https://pypi.org/project/dataclass-wizard/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>dataclass-wizard \u00b7 PyPI</title>    <meta name=\"description\" content=\"Marshal dataclasses to/from JSON. Use field properties with initial values. Construct a dataclass schema with JSON input.\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for dataclass-wizard\" href=\"/rss/project/dataclass-wizard/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/dataclass-wizard/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/dataclass-wizard/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"dataclass-wizard\">    <meta property=\"og:description\" content=\"Marshal dataclasses to/from JSON. Use field properties with initial values. Construct a dataclass schema with JSON input.\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/rnag/dataclass-wizard\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:rnag/dataclass-wizard+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        dataclass-wizard 0.22.3      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install dataclass-wizard</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/dataclass-wizard/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2024-01-29T17:50:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 29, 2024</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/dataclass-wizard\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Marshal dataclasses to/from JSON. Use field properties with initial values. Construct a dataclass schema with JSON input.</p><div data-html-include=\"/_includes/edit-project-button/dataclass-wizard\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for dataclass-wizard\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/rnag/dataclass-wizard\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/rnag/dataclass-wizard/issues\" rel=\"nofollow\">        <i class=\"fas fa-bug\" aria-hidden=\"true\"></i>Bug Tracker      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://dataclass-wizard.readthedocs.io/en/latest/history.html\" rel=\"nofollow\">        <i class=\"fas fa-scroll\" aria-hidden=\"true\"></i>Changelog      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://dataclass-wizard.readthedocs.io\" rel=\"nofollow\">        <i class=\"fas fa-book\" aria-hidden=\"true\"></i>Documentation      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://pypi.org/project/dataclass-wizard\" rel=\"nofollow\">        <i class=\"fas fa-cloud-download-alt\" aria-hidden=\"true\"></i>Download      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/rnag/dataclass-wizard\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>Source      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/dataclass-wizard\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache Software License (Apache 2.0)</p>    <p><strong>Author:</strong> <a href=\"mailto:rv.kvetch@gmail.com\">Ritvik Nag</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      dataclasses,    </span>    <span class=\"package-keyword\">      dataclass,    </span>    <span class=\"package-keyword\">      wizard,    </span>    <span class=\"package-keyword\">      json,    </span>    <span class=\"package-keyword\">      marshal,    </span>    <span class=\"package-keyword\">      json to dataclass,    </span>    <span class=\"package-keyword\">      json2dataclass,    </span>    <span class=\"package-keyword\">      dict to dataclass,    </span>    <span class=\"package-keyword\">      property,    </span>    <span class=\"package-keyword\">      field-property,    </span>    <span class=\"package-keyword\">      serialization,    </span>    <span class=\"package-keyword\">      deserialization    </span>  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/rkvetch/\" aria-label=\"rkvetch\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/c871744a87fe855f9474524f5a4269ef3f62e01a/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f66646337623237356131663266623461393163366566643332323237336133393f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for rkvetch from gravatar.com\" title=\"Avatar for rkvetch from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            rkvetch          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+Apache+Software+License\">            OSI Approved :: Apache Software License          </a>        </li>      </ul>    </li>    <li>      <strong>Natural Language</strong>      <ul>        <li>          <a href=\"/search/?c=Natural+Language+%3A%3A+English\">            English          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3+%3A%3A+Only\">            Python :: 3 :: Only          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.6\">            Python :: 3.6          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for dataclass-wizard\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <p>Full documentation is available at <a href=\"https://dataclass-wizard.readthedocs.io\" rel=nofollow>Read The Docs</a>. (<a href=\"https://dataclass-wizard.readthedocs.io/en/latest/installation.html\" rel=nofollow>Installation</a>)</p><a href=\"https://pypi.org/project/dataclass-wizard\" rel=nofollow><img alt=\"https://img.shields.io/pypi/v/dataclass-wizard.svg\" src=\"https://pypi-camo.freetls.fastly.net/8899e88767a057244383fd2f7ee2f6146b0fc5be/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f64617461636c6173732d77697a6172642e737667\"></a><a href=\"https://anaconda.org/conda-forge/dataclass-wizard\" rel=nofollow><img alt=\"https://img.shields.io/conda/vn/conda-forge/dataclass-wizard.svg\" src=\"https://pypi-camo.freetls.fastly.net/cf4fda135f9606ef5e0935ddd533854a3b331136/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f64617461636c6173732d77697a6172642e737667\"></a><a href=\"https://pypi.org/project/dataclass-wizard\" rel=nofollow><img alt=\"https://img.shields.io/pypi/pyversions/dataclass-wizard.svg\" src=\"https://pypi-camo.freetls.fastly.net/4e878b092e89574c1f5ea36acbe82414ca94521d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f64617461636c6173732d77697a6172642e737667\"></a><a href=\"https://github.com/rnag/dataclass-wizard/actions/workflows/dev.yml\" rel=nofollow><img alt=\"https://github.com/rnag/dataclass-wizard/actions/workflows/dev.yml/badge.svg\" src=\"https://pypi-camo.freetls.fastly.net/50f9da9e35912a776d7e937c28eb35e30d5a187f/68747470733a2f2f6769746875622e636f6d2f726e61672f64617461636c6173732d77697a6172642f616374696f6e732f776f726b666c6f77732f6465762e796d6c2f62616467652e737667\"></a><a href=\"https://dataclass-wizard.readthedocs.io/en/latest/?version=latest\" rel=nofollow><img alt=\"Documentation Status\" src=\"https://pypi-camo.freetls.fastly.net/495066cf26fa66a69c7f26324446f2fa698656f4/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f64617461636c6173732d77697a6172642f62616467652f3f76657273696f6e3d6c6174657374\"></a><a href=\"https://pyup.io/repos/github/rnag/dataclass-wizard/\" rel=nofollow><img alt=Updates src=\"https://pypi-camo.freetls.fastly.net/1967dff0e593a2eb6a6ebaaa257a6ae087d13dba/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f726e61672f64617461636c6173732d77697a6172642f736869656c642e737667\"></a><p>This library provides a set of simple, yet elegant <em>wizarding</em> tools forinteracting with the Python <span class=\"docutils literal\">dataclasses</span> module.</p><blockquote><p>The primary use is as a fast serialization framework that enables dataclass instances tobe converted to/from JSON; this works well in particular with a <em>nested dataclass</em> model.</p></blockquote><hr class=docutils><p><strong>Behold, the power of the Dataclass Wizard</strong>:</p><pre>&gt;&gt;&gt; from __future__ import annotations&gt;&gt;&gt; from dataclasses import dataclass, field&gt;&gt;&gt; from dataclass_wizard import JSONWizard...&gt;&gt;&gt; @dataclass... class MyClass(JSONWizard):...     my_str: str | None...     is_active_tuple: tuple[bool, ...]...     list_of_int: list[int] = field(default_factory=list)...&gt;&gt;&gt; string = \"\"\"... {...   \"my_str\": 20,...   \"ListOfInt\": [\"1\", \"2\", 3],...   \"isActiveTuple\": [\"true\", false, 1]... }... \"\"\"...&gt;&gt;&gt; instance = MyClass.from_json(string)&gt;&gt;&gt; instanceMyClass(my_str='20', is_active_tuple=(True, False, True), list_of_int=[1, 2, 3])&gt;&gt;&gt; instance.to_json()'{\"myStr\": \"20\", \"isActiveTuple\": [true, false, true], \"listOfInt\": [1, 2, 3]}'&gt;&gt;&gt; instance == MyClass.from_dict(instance.to_dict())True</pre><p>\u2014</p><nav class=\"contents local\" id=contents><p class=topic-title>Contents</p><ul class=simple><li><p><a href=#installation id=toc-entry-1 rel=nofollow>Installation</a></li><li><p><a href=#features id=toc-entry-2 rel=nofollow>Features</a></li><li><p><a href=#wizard-mixins id=toc-entry-3 rel=nofollow>Wizard Mixins</a></li><li><p><a href=#supported-types id=toc-entry-4 rel=nofollow>Supported Types</a></li><li><p><a href=#usage-and-examples id=toc-entry-5 rel=nofollow>Usage and Examples</a></li><li><p><a href=#json-marshalling id=toc-entry-6 rel=nofollow>JSON Marshalling</a></li><li><p><a href=#no-inheritance-needed id=toc-entry-7 rel=nofollow>No Inheritance Needed</a></li><li><p><a href=#custom-key-mappings id=toc-entry-8 rel=nofollow>Custom Key Mappings</a></li><li><p><a href=#extending-from-meta id=toc-entry-9 rel=nofollow>Extending from <span class=\"docutils literal\">Meta</span></a></li><li><p><a href=#date-and-time-with-custom-patterns id=toc-entry-10 rel=nofollow>Date and Time with Custom Patterns</a></li><li><p><a href=#dataclasses-in-union-types id=toc-entry-11 rel=nofollow>Dataclasses in <span class=\"docutils literal\">Union</span> Types</a></li><li><p><a href=#serialization-options id=toc-entry-12 rel=nofollow>Serialization Options</a></li><li><p><a href=#field-properties id=toc-entry-13 rel=nofollow>Field Properties</a></li><li><p><a href=#contributing id=toc-entry-14 rel=nofollow>Contributing</a></li><li><p><a href=#todos id=toc-entry-15 rel=nofollow>TODOs</a></li><li><p><a href=#credits id=toc-entry-16 rel=nofollow>Credits</a></li></ul></nav><section id=installation><h2>Installation</h2><p>The Dataclass Wizard library is available <a href=\"https://pypi.org/project/dataclass-wizard/\" rel=nofollow>on PyPI</a>, and can be installed with <span class=\"docutils literal\">pip</span>:</p><pre><code>$<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>dataclass-wizard</code></pre><p>Alternatively, this library is available <a href=\"https://anaconda.org/conda-forge/dataclass-wizard\" rel=nofollow>on conda</a> under the <a href=\"https://conda-forge.org/\" rel=nofollow>conda-forge</a> channel:</p><pre><code>$<span class=w> </span>conda<span class=w> </span>install<span class=w> </span>dataclass-wizard<span class=w> </span>-c<span class=w> </span>conda-forge</code></pre><p>The <span class=\"docutils literal\"><span class=pre>dataclass-wizard</span></span> library officially supports <strong>Python 3.6</strong> or higher.</p></section><section id=features><h2>Features</h2><p>Here are the supported features that <span class=\"docutils literal\"><span class=pre>dataclass-wizard</span></span> currently provides:</p><ul class=simple><li><p><em>JSON/YAML (de)serialization</em>: marshal dataclasses to/from JSON, YAML, and Python<span class=\"docutils literal\">dict</span> objects.</li><li><p><em>Field properties</em>: support for using properties with defaultvalues in dataclass instances.</li><li><p><em>JSON to Dataclass generation</em>: construct a dataclass schema with a JSON fileor string input.</li></ul></section><section id=wizard-mixins><h2>Wizard Mixins</h2><p>In addition to the <span class=\"docutils literal\">JSONWizard</span>, here are a few extra <a href=\"https://stackoverflow.com/a/547714/10237506\" rel=nofollow>Mixin</a> classes that might prove quite convenient to use.</p><ul class=simple><li><p><a href=\"https://dataclass-wizard.readthedocs.io/en/latest/common_use_cases/wizard_mixins.html#jsonlistwizard\" rel=nofollow>JSONListWizard</a> \u2013 Extends <span class=\"docutils literal\">JSONWizard</span> to return <a href=\"https://dataclass-wizard.readthedocs.io/en/latest/dataclass_wizard.html#dataclass_wizard.Container\" rel=nofollow>Container</a> \u2013 instead of <em>list</em> \u2013 objects where possible.</li><li><p><a href=\"https://dataclass-wizard.readthedocs.io/en/latest/common_use_cases/wizard_mixins.html#jsonfilewizard\" rel=nofollow>JSONFileWizard</a> \u2013 Makes it easier to convert dataclass instances from/to JSON files on a local drive.</li><li><p><a href=\"https://dataclass-wizard.readthedocs.io/en/latest/common_use_cases/wizard_mixins.html#yamlwizard\" rel=nofollow>YAMLWizard</a> \u2013 Provides support to convert dataclass instances to/from YAML, using the default <span class=\"docutils literal\">PyYAML</span> parser.</li></ul></section><section id=supported-types><h2>Supported Types</h2><p>The Dataclass Wizard library provides inherent support for standard Python collectionssuch as <span class=\"docutils literal\">list</span>, <span class=\"docutils literal\">dict</span> and <span class=\"docutils literal\">set</span>, as well as most Generics from the typingmodule, such as <span class=\"docutils literal\">Union</span> and <span class=\"docutils literal\">Any</span>. Other commonly used types such as <span class=\"docutils literal\">Enum</span>,<span class=\"docutils literal\">defaultdict</span>, and date and time objects such as <span class=\"docutils literal\">datetime</span> are also nativelysupported.</p><p>For a complete list of the supported Python types, including info on theload/dump process for special types, check out the <a href=\"https://dataclass-wizard.readthedocs.io/en/latest/overview.html#supported-types\" rel=nofollow>Supported Types</a> sectionin the docs.</p></section><section id=usage-and-examples><h2>Usage and Examples</h2><p>Using the built-in JSON marshalling support for dataclasses:</p><blockquote><p>Note: The following example should work in <strong>Python 3.7+</strong> with the included <span class=\"docutils literal\">__future__</span>import.</p></blockquote><pre><code><span class=kn>from</span> <span class=nn>__future__</span> <span class=kn>import</span> <span class=n>annotations</span>  <span class=c1># This can be removed in Python 3.10+</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclasses</span> <span class=kn>import</span> <span class=n>dataclass</span><span class=p>,</span> <span class=n>field</span><span class=w></span><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>date</span><span class=w></span><span class=kn>from</span> <span class=nn>enum</span> <span class=kn>import</span> <span class=n>Enum</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard</span> <span class=kn>import</span> <span class=n>JSONWizard</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>Data</span><span class=p>(</span><span class=n>JSONWizard</span><span class=p>):</span><span class=w></span>    <span class=k>class</span> <span class=nc>_</span><span class=p>(</span><span class=n>JSONWizard</span><span class=o>.</span><span class=n>Meta</span><span class=p>):</span><span class=w></span>        <span class=c1># Sets the target key transform to use for serialization;</span><span class=w></span>        <span class=c1># defaults to `camelCase` if not specified.</span><span class=w></span>        <span class=n>key_transform_with_dump</span> <span class=o>=</span> <span class=s1>'LISP'</span><span class=w></span>    <span class=n>a_sample_bool</span><span class=p>:</span> <span class=nb>bool</span><span class=w></span>    <span class=n>values</span><span class=p>:</span> <span class=nb>list</span><span class=p>[</span><span class=n>Inner</span><span class=p>]</span> <span class=o>=</span> <span class=n>field</span><span class=p>(</span><span class=n>default_factory</span><span class=o>=</span><span class=nb>list</span><span class=p>)</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>Inner</span><span class=p>:</span><span class=w></span>    <span class=n>vehicle</span><span class=p>:</span> <span class=n>Car</span> <span class=o>|</span> <span class=kc>None</span><span class=w></span>    <span class=n>my_dates</span><span class=p>:</span> <span class=nb>dict</span><span class=p>[</span><span class=nb>int</span><span class=p>,</span> <span class=n>date</span><span class=p>]</span><span class=w></span><span class=k>class</span> <span class=nc>Car</span><span class=p>(</span><span class=n>Enum</span><span class=p>):</span><span class=w></span>    <span class=n>SEDAN</span> <span class=o>=</span> <span class=s1>'BMW Coupe'</span><span class=w></span>    <span class=n>SUV</span> <span class=o>=</span> <span class=s1>'Toyota 4Runner'</span><span class=w></span>    <span class=n>JEEP</span> <span class=o>=</span> <span class=s1>'Jeep Cherokee'</span><span class=w></span><span class=k>def</span> <span class=nf>main</span><span class=p>():</span><span class=w></span>    <span class=n>my_dict</span> <span class=o>=</span> <span class=p>{</span><span class=w></span>        <span class=s1>'values'</span><span class=p>:</span> <span class=p>[</span><span class=w></span>            <span class=p>{</span><span class=w></span>                <span class=s1>'vehicle'</span><span class=p>:</span> <span class=s1>'Toyota 4Runner'</span><span class=p>,</span><span class=w></span>                <span class=s1>'My-Dates'</span><span class=p>:</span> <span class=p>{</span><span class=s1>'123'</span><span class=p>:</span> <span class=s1>'2023-01-31'</span><span class=p>}</span><span class=w></span>            <span class=p>},</span><span class=w></span>            <span class=p>{</span><span class=w></span>                <span class=s1>'vehicle'</span><span class=p>:</span> <span class=kc>None</span><span class=p>,</span><span class=w></span>                <span class=s1>'my_dates'</span><span class=p>:</span> <span class=p>{}</span><span class=w></span>            <span class=p>}</span><span class=w></span>        <span class=p>],</span><span class=w></span>        <span class=s1>'aSampleBool'</span><span class=p>:</span> <span class=s1>'TRUE'</span><span class=w></span>    <span class=p>}</span><span class=w></span>    <span class=c1># De-serialize (a JSON string or dictionary data) into a `Data` instance.</span><span class=w></span>    <span class=n>data</span> <span class=o>=</span> <span class=n>Data</span><span class=o>.</span><span class=n>from_dict</span><span class=p>(</span><span class=n>my_dict</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=nb>repr</span><span class=p>(</span><span class=n>data</span><span class=p>))</span><span class=w></span>    <span class=c1># &gt; Data(a_sample_bool=True, values=[Inner(vehicle=&lt;Car.SUV: 'Toyota 4Runner'&gt;, ...)])</span><span class=w></span>    <span class=c1># assert enums values are as expected</span><span class=w></span>    <span class=k>assert</span> <span class=n>data</span><span class=o>.</span><span class=n>values</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>vehicle</span> <span class=ow>is</span> <span class=n>Car</span><span class=o>.</span><span class=n>SUV</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>data</span><span class=o>.</span><span class=n>to_json</span><span class=p>(</span><span class=n>indent</span><span class=o>=</span><span class=mi>2</span><span class=p>))</span><span class=w></span>    <span class=c1># {</span><span class=w></span>    <span class=c1>#   \"a-sample-bool\": true,</span><span class=w></span>    <span class=c1>#   \"values\": [</span><span class=w></span>    <span class=c1>#     {</span><span class=w></span>    <span class=c1>#       \"vehicle\": \"Toyota 4Runner\",</span><span class=w></span>    <span class=c1>#       \"my-dates\": {</span><span class=w></span>    <span class=c1>#         \"123\": \"2023-01-31\"</span><span class=w></span>    <span class=c1>#       },</span><span class=w></span>    <span class=c1>#   ...</span><span class=w></span>    <span class=c1># True</span><span class=w></span>    <span class=k>assert</span> <span class=n>data</span> <span class=o>==</span> <span class=n>data</span><span class=o>.</span><span class=n>from_json</span><span class=p>(</span><span class=n>data</span><span class=o>.</span><span class=n>to_json</span><span class=p>())</span><span class=w></span><span class=k>if</span> <span class=vm>__name__</span> <span class=o>==</span> <span class=s1>'__main__'</span><span class=p>:</span><span class=w></span>    <span class=n>main</span><span class=p>()</span></code></pre><p>\u2026 and with the <span class=\"docutils literal\">property_wizard</span>, which provides support for<a href=\"https://dataclass-wizard.readthedocs.io/en/latest/using_field_properties.html\" rel=nofollow>field properties</a> with default values in dataclasses:</p><pre><code><span class=kn>from</span> <span class=nn>__future__</span> <span class=kn>import</span> <span class=n>annotations</span>  <span class=c1># This can be removed in Python 3.10+</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclasses</span> <span class=kn>import</span> <span class=n>dataclass</span><span class=p>,</span> <span class=n>field</span><span class=w></span><span class=kn>from</span> <span class=nn>typing_extensions</span> <span class=kn>import</span> <span class=n>Annotated</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard</span> <span class=kn>import</span> <span class=n>property_wizard</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>Vehicle</span><span class=p>(</span><span class=n>metaclass</span><span class=o>=</span><span class=n>property_wizard</span><span class=p>):</span><span class=w></span>    <span class=c1># Note: The example below uses the default value from the `field` extra in</span><span class=w></span>    <span class=c1># the `Annotated` definition; if `wheels` were annotated as `int | str`,</span><span class=w></span>    <span class=c1># it would default to 0, because `int` appears as the first type argument.</span><span class=w></span>    <span class=c1>#</span><span class=w></span>    <span class=c1># Any right-hand value assigned to `wheels` is ignored as it is simply</span><span class=w></span>    <span class=c1># re-declared by the property; here it is simply omitted for brevity.</span><span class=w></span>    <span class=n>wheels</span><span class=p>:</span> <span class=n>Annotated</span><span class=p>[</span><span class=nb>int</span> <span class=o>|</span> <span class=nb>str</span><span class=p>,</span> <span class=n>field</span><span class=p>(</span><span class=n>default</span><span class=o>=</span><span class=mi>4</span><span class=p>)]</span><span class=w></span>    <span class=c1># This is a shorthand version of the above; here an IDE suggests</span><span class=w></span>    <span class=c1># `_wheels` as a keyword argument to the constructor method, though</span><span class=w></span>    <span class=c1># it will actually be named as `wheels`.</span><span class=w></span>    <span class=c1># _wheels: int | str = 4</span><span class=w></span>    <span class=nd>@property</span><span class=w></span>    <span class=k>def</span> <span class=nf>wheels</span><span class=p>(</span><span class=bp>self</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=nb>int</span><span class=p>:</span><span class=w></span>        <span class=k>return</span> <span class=bp>self</span><span class=o>.</span><span class=n>_wheels</span><span class=w></span>    <span class=nd>@wheels</span><span class=o>.</span><span class=n>setter</span><span class=w></span>    <span class=k>def</span> <span class=nf>wheels</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>wheels</span><span class=p>:</span> <span class=nb>int</span> <span class=o>|</span> <span class=nb>str</span><span class=p>):</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>_wheels</span> <span class=o>=</span> <span class=nb>int</span><span class=p>(</span><span class=n>wheels</span><span class=p>)</span><span class=w></span><span class=k>if</span> <span class=vm>__name__</span> <span class=o>==</span> <span class=s1>'__main__'</span><span class=p>:</span><span class=w></span>    <span class=n>v</span> <span class=o>=</span> <span class=n>Vehicle</span><span class=p>()</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>v</span><span class=p>)</span><span class=w></span>    <span class=c1># prints:</span><span class=w></span>    <span class=c1>#   Vehicle(wheels=4)</span><span class=w></span>    <span class=n>v</span> <span class=o>=</span> <span class=n>Vehicle</span><span class=p>(</span><span class=n>wheels</span><span class=o>=</span><span class=mi>3</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>v</span><span class=p>)</span><span class=w></span>    <span class=n>v</span> <span class=o>=</span> <span class=n>Vehicle</span><span class=p>(</span><span class=s1>'6'</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=n>v</span><span class=p>)</span><span class=w></span>    <span class=k>assert</span> <span class=n>v</span><span class=o>.</span><span class=n>wheels</span> <span class=o>==</span> <span class=mi>6</span><span class=p>,</span> <span class=s1>'The constructor should use our setter method'</span><span class=w></span>    <span class=c1># Confirm that we go through our setter method</span><span class=w></span>    <span class=n>v</span><span class=o>.</span><span class=n>wheels</span> <span class=o>=</span> <span class=s1>'123'</span><span class=w></span>    <span class=k>assert</span> <span class=n>v</span><span class=o>.</span><span class=n>wheels</span> <span class=o>==</span> <span class=mi>123</span></code></pre><p>\u2026 or generate a dataclass schema for JSON input, via the <a href=\"https://dataclass-wizard.readthedocs.io/en/latest/wiz_cli.html\" rel=nofollow>wiz-cli</a> tool:</p><pre><code>$<span class=w> </span><span class=nb>echo</span><span class=w> </span><span class=s1>'{\"myFloat\": \"1.23\", \"Products\": [{\"created_at\": \"2021-11-17\"}]}'</span><span class=w> </span><span class=p>|</span><span class=w> </span>wiz<span class=w> </span>gs<span class=w> </span>-<span class=w> </span>my_file<span class=w></span><span class=c1># Contents of my_file.py</span>from<span class=w> </span>dataclasses<span class=w> </span>import<span class=w> </span>dataclass<span class=w></span>from<span class=w> </span>datetime<span class=w> </span>import<span class=w> </span>date<span class=w></span>from<span class=w> </span>typing<span class=w> </span>import<span class=w> </span>List,<span class=w> </span>Union<span class=w></span>from<span class=w> </span>dataclass_wizard<span class=w> </span>import<span class=w> </span>JSONWizard<span class=w></span>@dataclass<span class=w></span>class<span class=w> </span>Data<span class=o>(</span>JSONWizard<span class=o>)</span>:<span class=w>    </span><span class=s2>\"\"\"    Data dataclass    \"\"\"</span><span class=w>    </span>my_float:<span class=w> </span>Union<span class=o>[</span>float,<span class=w> </span>str<span class=o>]</span><span class=w>    </span>products:<span class=w> </span>List<span class=o>[</span><span class=s1>'Product'</span><span class=o>]</span><span class=w></span>@dataclass<span class=w></span>class<span class=w> </span>Product:<span class=w>    </span><span class=s2>\"\"\"    Product dataclass    \"\"\"</span><span class=w>    </span>created_at:<span class=w> </span>date</code></pre></section><section id=json-marshalling><h2>JSON Marshalling</h2><p><span class=\"docutils literal\">JSONSerializable</span> (aliased to <span class=\"docutils literal\">JSONWizard</span>) is a <a href=\"https://stackoverflow.com/a/547714/10237506\" rel=nofollow>Mixin</a> class whichprovides the following helper methods that are useful for serializing (and loading)a dataclass instance to/from JSON, as defined by the <span class=\"docutils literal\">AbstractJSONWizard</span>interface.</p><table><colgroup><col><col><col></colgroup><thead><tr><th class=head><p>Method</th><th class=head><p>Example</th><th class=head><p>Description</th></tr></thead><tbody><tr><td><p><span class=\"docutils literal\">from_json</span></td><td><p><cite>item = Product.from_json(string)</cite></td><td><p>Converts a JSON string to an instance of thedataclass, or a list of the dataclass instances.</td></tr><tr><td><p><span class=\"docutils literal\">from_list</span></td><td><p><cite>list_of_item = Product.from_list(l)</cite></td><td><p>Converts a Python <span class=\"docutils literal\">list</span> object to a list of thedataclass instances.</td></tr><tr><td><p><span class=\"docutils literal\">from_dict</span></td><td><p><cite>item = Product.from_dict(d)</cite></td><td><p>Converts a Python <span class=\"docutils literal\">dict</span> object to an instanceof the dataclass.</td></tr><tr><td><p><span class=\"docutils literal\">to_dict</span></td><td><p><cite>d = item.to_dict()</cite></td><td><p>Converts the dataclass instance to a Python <span class=\"docutils literal\">dict</span>object that is JSON serializable.</td></tr><tr><td><p><span class=\"docutils literal\">to_json</span></td><td><p><cite>string = item.to_json()</cite></td><td><p>Converts the dataclass instance to a JSON stringrepresentation.</td></tr><tr><td><p><span class=\"docutils literal\">list_to_json</span></td><td><p><cite>string = Product.list_to_json(list_of_item)</cite></td><td><p>Converts a list of dataclass instances to a JSON stringrepresentation.</td></tr></tbody></table><p>Additionally, it adds a default <span class=\"docutils literal\">__str__</span> method to subclasses, which willpretty print the JSON representation of an object; this is quite useful fordebugging purposes. Whenever you invoke <span class=\"docutils literal\">print(obj)</span> or <span class=\"docutils literal\">str(obj)</span>, forexample, it\u2019ll call this method which will format the dataclass object asa prettified JSON string. If you prefer a <span class=\"docutils literal\">__str__</span> method to not beadded, you can pass in <span class=\"docutils literal\">str=False</span> when extending from the Mixin classas mentioned <a href=\"https://dataclass-wizard.readthedocs.io/en/latest/common_use_cases/skip_the_str.html\" rel=nofollow>here</a>.</p><p>Note that the <span class=\"docutils literal\">__repr__</span> method, which is implemented by the<span class=\"docutils literal\">dataclass</span> decorator, is also available. To invoke the Python objectrepresentation of the dataclass instance, you can instead use<span class=\"docutils literal\">repr(obj)</span> or <span class=\"docutils literal\"><span class=pre>f'{obj!r}'</span></span>.</p><p>To mark a dataclass as being JSON serializable (andde-serializable), simply sub-class from <span class=\"docutils literal\">JSONSerializable</span> as shownbelow. You can also extend from the aliased name <span class=\"docutils literal\">JSONWizard</span>, if youprefer to use that instead.</p><p>Check out a <a href=\"https://dataclass-wizard.readthedocs.io/en/latest/examples.html#a-more-complete-example\" rel=nofollow>more complete example</a> of using the <span class=\"docutils literal\">JSONSerializable</span>Mixin class.</p></section><section id=no-inheritance-needed><h2>No Inheritance Needed</h2><p>It is important to note that the main purpose of sub-classing from<span class=\"docutils literal\">JSONWizard</span> Mixin class is to provide helper methods like <span class=\"docutils literal\">from_dict</span>and <span class=\"docutils literal\">to_dict</span>, which makes it much more convenient and easier to load ordump your data class from and to JSON.</p><p>That is, it\u2019s meant to <em>complement</em> the usage of the <span class=\"docutils literal\">dataclass</span> decorator,rather than to serve as a drop-in replacement for data classes, or to provide typevalidation for example; there are already excellent libraries like <a href=\"https://pydantic-docs.helpmanual.io/\" rel=nofollow>pydantic</a> thatprovide these features if so desired.</p><p>However, there may be use cases where we prefer to do away with the classinheritance model introduced by the Mixin class. In the interests of convenienceand also so that data classes can be used <em>as is</em>, the DataclassWizard library provides the helper functions <span class=\"docutils literal\">fromlist</span> and <span class=\"docutils literal\">fromdict</span>for de-serialization, and <span class=\"docutils literal\">asdict</span> for serialization. These functions alsowork recursively, so there is full support for nested dataclasses \u2013 just as withthe class inheritance approach.</p><p>Here is an example to demonstrate the usage of these helper functions:</p><aside class=\"admonition note\"><p class=admonition-title>Note</p><p>As of <em>v0.18.0</em>, the Meta config for the main dataclass will cascade downand be merged with the Meta config (if specified) of each nested dataclass. Todisable this behavior, you can pass in <span class=\"docutils literal\">recursive=False</span> to the Meta config.</p></aside><pre><code><span class=kn>from</span> <span class=nn>__future__</span> <span class=kn>import</span> <span class=n>annotations</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclasses</span> <span class=kn>import</span> <span class=n>dataclass</span><span class=p>,</span> <span class=n>field</span><span class=w></span><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>datetime</span><span class=p>,</span> <span class=n>date</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard</span> <span class=kn>import</span> <span class=n>fromdict</span><span class=p>,</span> <span class=n>asdict</span><span class=p>,</span> <span class=n>DumpMeta</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>A</span><span class=p>:</span><span class=w></span>    <span class=n>created_at</span><span class=p>:</span> <span class=n>datetime</span><span class=w></span>    <span class=n>list_of_b</span><span class=p>:</span> <span class=nb>list</span><span class=p>[</span><span class=n>B</span><span class=p>]</span> <span class=o>=</span> <span class=n>field</span><span class=p>(</span><span class=n>default_factory</span><span class=o>=</span><span class=nb>list</span><span class=p>)</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>B</span><span class=p>:</span><span class=w></span>    <span class=n>my_status</span><span class=p>:</span> <span class=nb>int</span> <span class=o>|</span> <span class=nb>str</span><span class=w></span>    <span class=n>my_date</span><span class=p>:</span> <span class=n>date</span> <span class=o>|</span> <span class=kc>None</span> <span class=o>=</span> <span class=kc>None</span><span class=w></span><span class=n>source_dict</span> <span class=o>=</span> <span class=p>{</span><span class=s1>'createdAt'</span><span class=p>:</span> <span class=s1>'2010-06-10 15:50:00Z'</span><span class=p>,</span><span class=w></span>               <span class=s1>'List-Of-B'</span><span class=p>:</span> <span class=p>[</span><span class=w></span>                   <span class=p>{</span><span class=s1>'MyStatus'</span><span class=p>:</span> <span class=s1>'200'</span><span class=p>,</span> <span class=s1>'my_date'</span><span class=p>:</span> <span class=s1>'2021-12-31'</span><span class=p>}</span><span class=w></span>               <span class=p>]}</span><span class=w></span><span class=c1># De-serialize the JSON dictionary object into an `A` instance.</span><span class=w></span><span class=n>a</span> <span class=o>=</span> <span class=n>fromdict</span><span class=p>(</span><span class=n>A</span><span class=p>,</span> <span class=n>source_dict</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=nb>repr</span><span class=p>(</span><span class=n>a</span><span class=p>))</span><span class=w></span><span class=c1># A(created_at=datetime.datetime(2010, 6, 10, 15, 50, tzinfo=datetime.timezone.utc),</span><span class=w></span><span class=c1>#   list_of_b=[B(my_status='200', my_date=datetime.date(2021, 12, 31))])</span><span class=w></span><span class=c1># Set an optional dump config for the main dataclass, for example one which</span><span class=w></span><span class=c1># converts converts date and datetime objects to a unix timestamp (as an int)</span><span class=w></span><span class=c1>#</span><span class=w></span><span class=c1># Note that `recursive=True` is the default, so this Meta config will be</span><span class=w></span><span class=c1># merged with the Meta config (if specified) of each nested dataclass.</span><span class=w></span><span class=n>DumpMeta</span><span class=p>(</span><span class=n>marshal_date_time_as</span><span class=o>=</span><span class=s1>'TIMESTAMP'</span><span class=p>,</span><span class=w></span>         <span class=n>key_transform</span><span class=o>=</span><span class=s1>'SNAKE'</span><span class=p>,</span><span class=w></span>         <span class=c1># Finally, apply the Meta config to the main dataclass.</span><span class=w></span>         <span class=p>)</span><span class=o>.</span><span class=n>bind_to</span><span class=p>(</span><span class=n>A</span><span class=p>)</span><span class=w></span><span class=c1># Serialize the `A` instance to a Python dict object.</span><span class=w></span><span class=n>json_dict</span> <span class=o>=</span> <span class=n>asdict</span><span class=p>(</span><span class=n>a</span><span class=p>)</span><span class=w></span><span class=n>expected_dict</span> <span class=o>=</span> <span class=p>{</span><span class=s1>'created_at'</span><span class=p>:</span> <span class=mi>1276185000</span><span class=p>,</span> <span class=s1>'list_of_b'</span><span class=p>:</span> <span class=p>[{</span><span class=s1>'my_status'</span><span class=p>:</span> <span class=s1>'200'</span><span class=p>,</span> <span class=s1>'my_date'</span><span class=p>:</span> <span class=mi>1640926800</span><span class=p>}]}</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>json_dict</span><span class=p>)</span><span class=w></span><span class=c1># Assert that we get the expected dictionary object.</span><span class=w></span><span class=k>assert</span> <span class=n>json_dict</span> <span class=o>==</span> <span class=n>expected_dict</span></code></pre></section><section id=custom-key-mappings><h2>Custom Key Mappings</h2><p>If you ever find the need to add a <a href=\"https://dataclass-wizard.readthedocs.io/en/latest/common_use_cases/custom_key_mappings.html\" rel=nofollow>custom mapping</a> of a JSON key to a dataclassfield (or vice versa), the helper function <span class=\"docutils literal\">json_field</span> \u2013 which can beconsidered an alias to <span class=\"docutils literal\">dataclasses.field()</span> \u2013 is one approach that canresolve this.</p><p>Example below:</p><pre><code><span class=kn>from</span> <span class=nn>dataclasses</span> <span class=kn>import</span> <span class=n>dataclass</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard</span> <span class=kn>import</span> <span class=n>JSONSerializable</span><span class=p>,</span> <span class=n>json_field</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>MyClass</span><span class=p>(</span><span class=n>JSONSerializable</span><span class=p>):</span><span class=w></span>    <span class=n>my_str</span><span class=p>:</span> <span class=nb>str</span> <span class=o>=</span> <span class=n>json_field</span><span class=p>(</span><span class=s1>'myString1'</span><span class=p>,</span> <span class=nb>all</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=w></span><span class=c1># De-serialize a dictionary object with the newly mapped JSON key.</span><span class=w></span><span class=n>d</span> <span class=o>=</span> <span class=p>{</span><span class=s1>'myString1'</span><span class=p>:</span> <span class=s1>'Testing'</span><span class=p>}</span><span class=w></span><span class=n>c</span> <span class=o>=</span> <span class=n>MyClass</span><span class=o>.</span><span class=n>from_dict</span><span class=p>(</span><span class=n>d</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=nb>repr</span><span class=p>(</span><span class=n>c</span><span class=p>))</span><span class=w></span><span class=c1># prints:</span><span class=w></span><span class=c1>#   MyClass(my_str='Testing')</span><span class=w></span><span class=c1># Assert we get the same dictionary object when serializing the instance.</span><span class=w></span><span class=k>assert</span> <span class=n>c</span><span class=o>.</span><span class=n>to_dict</span><span class=p>()</span> <span class=o>==</span> <span class=n>d</span></code></pre></section><section id=extending-from-meta><h2>Extending from <span class=\"docutils literal\">Meta</span></h2><p>Looking to change how <span class=\"docutils literal\">date</span> and <span class=\"docutils literal\">datetime</span> objects are serialized to JSON? Orprefer that field names appear in <em>snake case</em> when a dataclass instance is serialized?</p><p>The inner <span class=\"docutils literal\">Meta</span> class allows easy configuration of such settings, asshown below; and as a nice bonus, IDEs should be able to assist with code completionalong the way.</p><aside class=\"admonition note\"><p class=admonition-title>Note</p><p>As of <em>v0.18.0</em>, the Meta config for the main dataclass will cascade downand be merged with the Meta config (if specified) of each nested dataclass. Todisable this behavior, you can pass in <span class=\"docutils literal\">recursive=False</span> to the Meta config.</p></aside><pre><code><span class=kn>from</span> <span class=nn>dataclasses</span> <span class=kn>import</span> <span class=n>dataclass</span><span class=w></span><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>date</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard</span> <span class=kn>import</span> <span class=n>JSONWizard</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard.enums</span> <span class=kn>import</span> <span class=n>DateTimeTo</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>MyClass</span><span class=p>(</span><span class=n>JSONWizard</span><span class=p>):</span><span class=w></span>    <span class=k>class</span> <span class=nc>_</span><span class=p>(</span><span class=n>JSONWizard</span><span class=o>.</span><span class=n>Meta</span><span class=p>):</span><span class=w></span>        <span class=n>marshal_date_time_as</span> <span class=o>=</span> <span class=n>DateTimeTo</span><span class=o>.</span><span class=n>TIMESTAMP</span><span class=w></span>        <span class=n>key_transform_with_dump</span> <span class=o>=</span> <span class=s1>'SNAKE'</span><span class=w></span>    <span class=n>my_str</span><span class=p>:</span> <span class=nb>str</span><span class=w></span>    <span class=n>my_date</span><span class=p>:</span> <span class=n>date</span><span class=w></span><span class=n>data</span> <span class=o>=</span> <span class=p>{</span><span class=s1>'my_str'</span><span class=p>:</span> <span class=s1>'test'</span><span class=p>,</span> <span class=s1>'myDATE'</span><span class=p>:</span> <span class=s1>'2010-12-30'</span><span class=p>}</span><span class=w></span><span class=n>c</span> <span class=o>=</span> <span class=n>MyClass</span><span class=o>.</span><span class=n>from_dict</span><span class=p>(</span><span class=n>data</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=nb>repr</span><span class=p>(</span><span class=n>c</span><span class=p>))</span><span class=w></span><span class=c1># prints:</span><span class=w></span><span class=c1>#   MyClass(my_str='test', my_date=datetime.date(2010, 12, 30))</span><span class=w></span><span class=n>string</span> <span class=o>=</span> <span class=n>c</span><span class=o>.</span><span class=n>to_json</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>string</span><span class=p>)</span><span class=w></span><span class=c1># prints:</span><span class=w></span><span class=c1>#   {\"my_str\": \"test\", \"my_date\": 1293685200}</span></code></pre><section id=other-uses-for-meta><h3>Other Uses for <span class=\"docutils literal\">Meta</span></h3><p>Here are a few additional use cases for the inner <span class=\"docutils literal\">Meta</span> class. Note thata full list of available settings can be found in the <a href=\"https://dataclass-wizard.readthedocs.io/en/latest/common_use_cases/meta.html\" rel=nofollow>Meta</a> section in the docs.</p><section id=debug-mode><h4>Debug Mode</h4><p>Enables additional (more verbose) log output. For example, a message can belogged whenever an unknown JSON key is encountered when<span class=\"docutils literal\">from_dict</span> or <span class=\"docutils literal\">from_json</span> is called.</p><p>This also results in more helpful error messages during the JSON load(de-serialization) process, such as when values are an invalid type \u2013i.e. they don\u2019t match the annotation for the field. This can be particularlyuseful for debugging purposes.</p><aside class=\"admonition note\"><p class=admonition-title>Note</p><p>There is a minor performance impact when DEBUG mode is enabled;for that reason, I would personally advise against enablingthis in a <em>production</em> environment.</p></aside></section><section id=handle-unknown-json-keys><h4>Handle Unknown JSON Keys</h4><p>The default behavior is to ignore any unknown or extraneous JSON keys that areencountered when <span class=\"docutils literal\">from_dict</span> or <span class=\"docutils literal\">from_json</span> is called, and emit a \u201cwarning\u201dwhich is visible when <em>debug</em> mode is enabled (and logging is properly configured).An unknown key is one that does not have a known mapping to a dataclass field.</p><p>However, we can also raise an error in such cases if desired. The belowexample demonstrates a use case where we want to raise an error whenan unknown JSON key is encountered in the  <em>load</em> (de-serialization) process.</p><pre><code><span class=kn>import</span> <span class=nn>logging</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclasses</span> <span class=kn>import</span> <span class=n>dataclass</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard</span> <span class=kn>import</span> <span class=n>JSONWizard</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard.errors</span> <span class=kn>import</span> <span class=n>UnknownJSONKey</span><span class=w></span><span class=c1># Sets up application logging if we haven't already done so</span><span class=w></span><span class=n>logging</span><span class=o>.</span><span class=n>basicConfig</span><span class=p>(</span><span class=n>level</span><span class=o>=</span><span class=s1>'INFO'</span><span class=p>)</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>Container</span><span class=p>(</span><span class=n>JSONWizard</span><span class=p>):</span><span class=w></span>    <span class=k>class</span> <span class=nc>_</span><span class=p>(</span><span class=n>JSONWizard</span><span class=o>.</span><span class=n>Meta</span><span class=p>):</span><span class=w></span>        <span class=c1># True to enable Debug mode for additional (more verbose) log output.</span><span class=w></span>        <span class=n>debug_enabled</span> <span class=o>=</span> <span class=kc>True</span><span class=w></span>        <span class=c1># True to raise an class:`UnknownJSONKey` when an unmapped JSON key is</span><span class=w></span>        <span class=c1># encountered when `from_dict` or `from_json` is called. Note that by</span><span class=w></span>        <span class=c1># default, this is also recursively applied to any nested dataclasses.</span><span class=w></span>        <span class=n>raise_on_unknown_json_key</span> <span class=o>=</span> <span class=kc>True</span><span class=w></span>    <span class=n>element</span><span class=p>:</span> <span class=s1>'MyElement'</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>MyElement</span><span class=p>:</span><span class=w></span>    <span class=n>my_str</span><span class=p>:</span> <span class=nb>str</span><span class=w></span>    <span class=n>my_float</span><span class=p>:</span> <span class=nb>float</span><span class=w></span><span class=n>d</span> <span class=o>=</span> <span class=p>{</span><span class=w></span>    <span class=s1>'element'</span><span class=p>:</span> <span class=p>{</span><span class=w></span>        <span class=s1>'myStr'</span><span class=p>:</span> <span class=s1>'string'</span><span class=p>,</span><span class=w></span>        <span class=s1>'my_float'</span><span class=p>:</span> <span class=s1>'1.23'</span><span class=p>,</span><span class=w></span>        <span class=c1># Notice how this key is not mapped to a known dataclass field!</span><span class=w></span>        <span class=s1>'my_bool'</span><span class=p>:</span> <span class=s1>'Testing'</span><span class=w></span>    <span class=p>}</span><span class=w></span><span class=p>}</span><span class=w></span><span class=c1># Try to de-serialize the dictionary object into a `MyClass` object.</span><span class=w></span><span class=k>try</span><span class=p>:</span><span class=w></span>    <span class=n>c</span> <span class=o>=</span> <span class=n>Container</span><span class=o>.</span><span class=n>from_dict</span><span class=p>(</span><span class=n>d</span><span class=p>)</span><span class=w></span><span class=k>except</span> <span class=n>UnknownJSONKey</span> <span class=k>as</span> <span class=n>e</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=s1>'Received error:'</span><span class=p>,</span> <span class=nb>type</span><span class=p>(</span><span class=n>e</span><span class=p>)</span><span class=o>.</span><span class=vm>__name__</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=s1>'Class:'</span><span class=p>,</span> <span class=n>e</span><span class=o>.</span><span class=n>class_name</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=s1>'Unknown JSON key:'</span><span class=p>,</span> <span class=n>e</span><span class=o>.</span><span class=n>json_key</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=s1>'JSON object:'</span><span class=p>,</span> <span class=n>e</span><span class=o>.</span><span class=n>obj</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=s1>'Known Fields:'</span><span class=p>,</span> <span class=n>e</span><span class=o>.</span><span class=n>fields</span><span class=p>)</span><span class=w></span><span class=k>else</span><span class=p>:</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=s1>'Successfully de-serialized the JSON object.'</span><span class=p>)</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=nb>repr</span><span class=p>(</span><span class=n>c</span><span class=p>))</span></code></pre></section></section></section><section id=date-and-time-with-custom-patterns><h2>Date and Time with Custom Patterns</h2><p>As of <em>v0.20.0</em>, date and time strings in a <a href=\"https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes\" rel=nofollow>custom format</a> can be de-serializedusing the <span class=\"docutils literal\">DatePattern</span>, <span class=\"docutils literal\">TimePattern</span>, and <span class=\"docutils literal\">DateTimePattern</span> type annotations,representing patterned <cite>date</cite>, <cite>time</cite>, and <cite>datetime</cite> objects respectively.</p><p>This will internally call <span class=\"docutils literal\">datetime.strptime</span> with the format specified in the annotation,and also use the <span class=\"docutils literal\">fromisoformat()</span> method in case the date string is in ISO-8601 format.All dates and times will continue to be serialized as ISO format strings by default. For moreinfo, check out the <a href=\"https://dataclass-wizard.readthedocs.io/en/latest/common_use_cases/patterned_date_time.html\" rel=nofollow>Patterned Date and Time</a> section in the docs.</p><p>A brief example of the intended usage is shown below:</p><pre><code><span class=kn>from</span> <span class=nn>dataclasses</span> <span class=kn>import</span> <span class=n>dataclass</span><span class=w></span><span class=kn>from</span> <span class=nn>datetime</span> <span class=kn>import</span> <span class=n>time</span><span class=p>,</span> <span class=n>datetime</span><span class=w></span><span class=kn>from</span> <span class=nn>typing</span> <span class=kn>import</span> <span class=n>List</span><span class=w></span><span class=c1># Note: in Python 3.9+, you can import this from `typing` instead</span><span class=w></span><span class=kn>from</span> <span class=nn>typing_extensions</span> <span class=kn>import</span> <span class=n>Annotated</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard</span> <span class=kn>import</span> <span class=n>fromdict</span><span class=p>,</span> <span class=n>asdict</span><span class=p>,</span> <span class=n>DatePattern</span><span class=p>,</span> <span class=n>TimePattern</span><span class=p>,</span> <span class=n>Pattern</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>MyClass</span><span class=p>:</span><span class=w></span>    <span class=n>date_field</span><span class=p>:</span> <span class=n>DatePattern</span><span class=p>[</span><span class=s1>'%m-%Y'</span><span class=p>]</span><span class=w></span>    <span class=n>dt_field</span><span class=p>:</span> <span class=n>Annotated</span><span class=p>[</span><span class=n>datetime</span><span class=p>,</span> <span class=n>Pattern</span><span class=p>(</span><span class=s1>'%m/</span><span class=si>%d</span><span class=s1>/%y %H.%M.%S'</span><span class=p>)]</span><span class=w></span>    <span class=n>time_field1</span><span class=p>:</span> <span class=n>TimePattern</span><span class=p>[</span><span class=s1>'%H:%M'</span><span class=p>]</span><span class=w></span>    <span class=n>time_field2</span><span class=p>:</span> <span class=n>Annotated</span><span class=p>[</span><span class=n>List</span><span class=p>[</span><span class=n>time</span><span class=p>],</span> <span class=n>Pattern</span><span class=p>(</span><span class=s1>'%I:%M %p'</span><span class=p>)]</span><span class=w></span><span class=n>data</span> <span class=o>=</span> <span class=p>{</span><span class=s1>'date_field'</span><span class=p>:</span> <span class=s1>'12-2022'</span><span class=p>,</span><span class=w></span>        <span class=s1>'time_field1'</span><span class=p>:</span> <span class=s1>'15:20'</span><span class=p>,</span><span class=w></span>        <span class=s1>'dt_field'</span><span class=p>:</span> <span class=s1>'1/02/23 02.03.52'</span><span class=p>,</span><span class=w></span>        <span class=s1>'time_field2'</span><span class=p>:</span> <span class=p>[</span><span class=s1>'1:20 PM'</span><span class=p>,</span> <span class=s1>'12:30 am'</span><span class=p>]}</span><span class=w></span><span class=n>class_obj</span> <span class=o>=</span> <span class=n>fromdict</span><span class=p>(</span><span class=n>MyClass</span><span class=p>,</span> <span class=n>data</span><span class=p>)</span><span class=w></span><span class=c1># All annotated fields de-serialize as just date, time, or datetime, as shown.</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>class_obj</span><span class=p>)</span><span class=w></span><span class=c1># MyClass(date_field=datetime.date(2022, 12, 1), dt_field=datetime.datetime(2023, 1, 2, 2, 3, 52),</span><span class=w></span><span class=c1>#         time_field1=datetime.time(15, 20), time_field2=[datetime.time(13, 20), datetime.time(0, 30)])</span><span class=w></span><span class=c1># All date/time fields are serialized as ISO-8601 format strings by default.</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>asdict</span><span class=p>(</span><span class=n>class_obj</span><span class=p>))</span><span class=w></span><span class=c1># {'dateField': '2022-12-01', 'dtField': '2023-01-02T02:03:52',</span><span class=w></span><span class=c1>#  'timeField1': '15:20:00', 'timeField2': ['13:20:00', '00:30:00']}</span><span class=w></span><span class=c1># But, the patterned date/times can still be de-serialized back after</span><span class=w></span><span class=c1># serialization. In fact, it'll be faster than parsing the custom patterns!</span><span class=w></span><span class=k>assert</span> <span class=n>class_obj</span> <span class=o>==</span> <span class=n>fromdict</span><span class=p>(</span><span class=n>MyClass</span><span class=p>,</span> <span class=n>asdict</span><span class=p>(</span><span class=n>class_obj</span><span class=p>))</span></code></pre></section><section id=dataclasses-in-union-types><h2>Dataclasses in <span class=\"docutils literal\">Union</span> Types</h2><p>The <span class=\"docutils literal\"><span class=pre>dataclass-wizard</span></span> library fully supports declaring dataclass models in<a href=\"https://docs.python.org/3/library/typing.html#typing.Union\" rel=nofollow>Union</a> types as field annotations, such as <span class=\"docutils literal\">list[Wizard | Archer | Barbarian]</span>.</p><p>As of <em>v0.19.0</em>, there is added support to  <em>auto-generate</em> tags for a dataclass model\u2013 based on the class name \u2013 as well as to specify a custom <em>tag key</em> that will bepresent in the JSON object, which defaults to a special <span class=\"docutils literal\">__tag__</span> key otherwise.These two options are controlled by the <span class=\"docutils literal\">auto_assign_tags</span> and <span class=\"docutils literal\">tag_key</span>attributes (respectively) in the <span class=\"docutils literal\">Meta</span> config.</p><p>To illustrate a specific example, a JSON object such as<span class=\"docutils literal\">{\"oneOf\": {\"type\": \"A\", <span class=pre>...},</span> <span class=pre>...}</span></span> will now automatically map to a dataclassinstance <span class=\"docutils literal\">A</span>, provided that the <span class=\"docutils literal\">tag_key</span> is correctly set to \u201ctype\u201d, andthe field <span class=\"docutils literal\">one_of</span> is annotated as a Union type in the <span class=\"docutils literal\">A | B</span> syntax.</p><p>Let\u2019s start out with an example, which aims to demonstrate the simplest usage ofdataclasses in <span class=\"docutils literal\">Union</span> types. For more info, check out the<a href=\"https://dataclass-wizard.readthedocs.io/en/latest/common_use_cases/dataclasses_in_union_types.html\" rel=nofollow>Dataclasses in Union Types</a> section in the docs.</p><pre><code><span class=kn>from</span> <span class=nn>__future__</span> <span class=kn>import</span> <span class=n>annotations</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclasses</span> <span class=kn>import</span> <span class=n>dataclass</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard</span> <span class=kn>import</span> <span class=n>JSONWizard</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>Container</span><span class=p>(</span><span class=n>JSONWizard</span><span class=p>):</span><span class=w></span>    <span class=k>class</span> <span class=nc>Meta</span><span class=p>(</span><span class=n>JSONWizard</span><span class=o>.</span><span class=n>Meta</span><span class=p>):</span><span class=w></span>        <span class=n>tag_key</span> <span class=o>=</span> <span class=s1>'type'</span><span class=w></span>        <span class=n>auto_assign_tags</span> <span class=o>=</span> <span class=kc>True</span><span class=w></span>    <span class=n>objects</span><span class=p>:</span> <span class=nb>list</span><span class=p>[</span><span class=n>A</span> <span class=o>|</span> <span class=n>B</span> <span class=o>|</span> <span class=n>C</span><span class=p>]</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>A</span><span class=p>:</span><span class=w></span>    <span class=n>my_int</span><span class=p>:</span> <span class=nb>int</span><span class=w></span>    <span class=n>my_bool</span><span class=p>:</span> <span class=nb>bool</span> <span class=o>=</span> <span class=kc>False</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>B</span><span class=p>:</span><span class=w></span>    <span class=n>my_int</span><span class=p>:</span> <span class=nb>int</span><span class=w></span>    <span class=n>my_bool</span><span class=p>:</span> <span class=nb>bool</span> <span class=o>=</span> <span class=kc>True</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>C</span><span class=p>:</span><span class=w></span>    <span class=n>my_str</span><span class=p>:</span> <span class=nb>str</span><span class=w></span><span class=n>data</span> <span class=o>=</span> <span class=p>{</span><span class=w></span>    <span class=s1>'objects'</span><span class=p>:</span> <span class=p>[</span><span class=w></span>        <span class=p>{</span><span class=s1>'type'</span><span class=p>:</span> <span class=s1>'A'</span><span class=p>,</span> <span class=s1>'my_int'</span><span class=p>:</span> <span class=mi>42</span><span class=p>},</span><span class=w></span>        <span class=p>{</span><span class=s1>'type'</span><span class=p>:</span> <span class=s1>'C'</span><span class=p>,</span> <span class=s1>'my_str'</span><span class=p>:</span> <span class=s1>'hello world'</span><span class=p>},</span><span class=w></span>        <span class=p>{</span><span class=s1>'type'</span><span class=p>:</span> <span class=s1>'B'</span><span class=p>,</span> <span class=s1>'my_int'</span><span class=p>:</span> <span class=mi>123</span><span class=p>},</span><span class=w></span>        <span class=p>{</span><span class=s1>'type'</span><span class=p>:</span> <span class=s1>'A'</span><span class=p>,</span> <span class=s1>'my_int'</span><span class=p>:</span> <span class=mi>321</span><span class=p>,</span> <span class=s1>'myBool'</span><span class=p>:</span> <span class=kc>True</span><span class=p>}</span><span class=w></span>    <span class=p>]</span><span class=w></span><span class=p>}</span><span class=w></span><span class=n>c</span> <span class=o>=</span> <span class=n>Container</span><span class=o>.</span><span class=n>from_dict</span><span class=p>(</span><span class=n>data</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'</span><span class=si>{</span><span class=n>c</span><span class=si>!r}</span><span class=s1>'</span><span class=p>)</span><span class=w></span><span class=c1># True</span><span class=w></span><span class=k>assert</span> <span class=n>c</span> <span class=o>==</span> <span class=n>Container</span><span class=p>(</span><span class=n>objects</span><span class=o>=</span><span class=p>[</span><span class=n>A</span><span class=p>(</span><span class=n>my_int</span><span class=o>=</span><span class=mi>42</span><span class=p>,</span> <span class=n>my_bool</span><span class=o>=</span><span class=kc>False</span><span class=p>),</span><span class=w></span>                               <span class=n>C</span><span class=p>(</span><span class=n>my_str</span><span class=o>=</span><span class=s1>'hello world'</span><span class=p>),</span><span class=w></span>                               <span class=n>B</span><span class=p>(</span><span class=n>my_int</span><span class=o>=</span><span class=mi>123</span><span class=p>,</span> <span class=n>my_bool</span><span class=o>=</span><span class=kc>True</span><span class=p>),</span><span class=w></span>                               <span class=n>A</span><span class=p>(</span><span class=n>my_int</span><span class=o>=</span><span class=mi>321</span><span class=p>,</span> <span class=n>my_bool</span><span class=o>=</span><span class=kc>True</span><span class=p>)])</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>c</span><span class=o>.</span><span class=n>to_dict</span><span class=p>())</span><span class=w></span><span class=c1># prints the following on a single line:</span><span class=w></span><span class=c1># {'objects': [{'myInt': 42, 'myBool': False, 'type': 'A'},</span><span class=w></span><span class=c1>#              {'myStr': 'hello world', 'type': 'C'},</span><span class=w></span><span class=c1>#              {'myInt': 123, 'myBool': True, 'type': 'B'},</span><span class=w></span><span class=c1>#              {'myInt': 321, 'myBool': True, 'type': 'A'}]}</span><span class=w></span><span class=c1># True</span><span class=w></span><span class=k>assert</span> <span class=n>c</span> <span class=o>==</span> <span class=n>c</span><span class=o>.</span><span class=n>from_json</span><span class=p>(</span><span class=n>c</span><span class=o>.</span><span class=n>to_json</span><span class=p>())</span></code></pre></section><section id=serialization-options><h2>Serialization Options</h2><p>The following parameters can be used to fine-tune and control how the serialization of adataclass instance to a Python <span class=\"docutils literal\">dict</span> object or JSON string is handled.</p><section id=skip-defaults><h3>Skip Defaults</h3><p>A common use case is skipping fields with default values - based on the <span class=\"docutils literal\">default</span>or <span class=\"docutils literal\">default_factory</span> argument to <span class=\"docutils literal\">dataclasses.field</span> - in the serializationprocess.</p><p>The attribute <span class=\"docutils literal\">skip_defaults</span> in the inner <span class=\"docutils literal\">Meta</span> class can be enabled, to excludesuch field values from serialization.The <span class=\"docutils literal\">to_dict</span> method (or the <span class=\"docutils literal\">asdict</span> helperfunction) can also be passed an <span class=\"docutils literal\">skip_defaults</span> argument, which should have the sameresult. An example of both these approaches is shown below.</p><pre><code><span class=kn>from</span> <span class=nn>collections</span> <span class=kn>import</span> <span class=n>defaultdict</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclasses</span> <span class=kn>import</span> <span class=n>field</span><span class=p>,</span> <span class=n>dataclass</span><span class=w></span><span class=kn>from</span> <span class=nn>typing</span> <span class=kn>import</span> <span class=n>DefaultDict</span><span class=p>,</span> <span class=n>List</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard</span> <span class=kn>import</span> <span class=n>JSONWizard</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>MyClass</span><span class=p>(</span><span class=n>JSONWizard</span><span class=p>):</span><span class=w></span>    <span class=k>class</span> <span class=nc>_</span><span class=p>(</span><span class=n>JSONWizard</span><span class=o>.</span><span class=n>Meta</span><span class=p>):</span><span class=w></span>        <span class=n>skip_defaults</span> <span class=o>=</span> <span class=kc>True</span><span class=w></span>    <span class=n>my_str</span><span class=p>:</span> <span class=nb>str</span><span class=w></span>    <span class=n>other_str</span><span class=p>:</span> <span class=nb>str</span> <span class=o>=</span> <span class=s1>'any value'</span><span class=w></span>    <span class=n>optional_str</span><span class=p>:</span> <span class=nb>str</span> <span class=o>=</span> <span class=kc>None</span><span class=w></span>    <span class=n>my_list</span><span class=p>:</span> <span class=n>List</span><span class=p>[</span><span class=nb>str</span><span class=p>]</span> <span class=o>=</span> <span class=n>field</span><span class=p>(</span><span class=n>default_factory</span><span class=o>=</span><span class=nb>list</span><span class=p>)</span><span class=w></span>    <span class=n>my_dict</span><span class=p>:</span> <span class=n>DefaultDict</span><span class=p>[</span><span class=nb>str</span><span class=p>,</span> <span class=n>List</span><span class=p>[</span><span class=nb>float</span><span class=p>]]</span> <span class=o>=</span> <span class=n>field</span><span class=p>(</span><span class=w></span>        <span class=n>default_factory</span><span class=o>=</span><span class=k>lambda</span><span class=p>:</span> <span class=n>defaultdict</span><span class=p>(</span><span class=nb>list</span><span class=p>))</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=s1>'-- Load (Deserialize)'</span><span class=p>)</span><span class=w></span><span class=n>c</span> <span class=o>=</span> <span class=n>MyClass</span><span class=p>(</span><span class=s1>'abc'</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'Instance: </span><span class=si>{</span><span class=n>c</span><span class=si>!r}</span><span class=s1>'</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=s1>'-- Dump (Serialize)'</span><span class=p>)</span><span class=w></span><span class=n>string</span> <span class=o>=</span> <span class=n>c</span><span class=o>.</span><span class=n>to_json</span><span class=p>()</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>string</span><span class=p>)</span><span class=w></span><span class=k>assert</span> <span class=n>string</span> <span class=o>==</span> <span class=s1>'{\"myStr\": \"abc\"}'</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=s1>'-- Dump (with `skip_defaults=False`)'</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>c</span><span class=o>.</span><span class=n>to_dict</span><span class=p>(</span><span class=n>skip_defaults</span><span class=o>=</span><span class=kc>False</span><span class=p>))</span></code></pre></section><section id=exclude-fields><h3>Exclude Fields</h3><p>You can also exclude specific dataclass fields (and their values) from the serializationprocess. There are two approaches that can be used for this purpose:</p><ul class=simple><li><p>The argument <span class=\"docutils literal\">dump=False</span> can be passed in to the <span class=\"docutils literal\">json_key</span> and <span class=\"docutils literal\">json_field</span>helper functions. Note that this is a more permanent option, as opposed to the onebelow.</li><li><p>The <span class=\"docutils literal\">to_dict</span> method (or the <span class=\"docutils literal\">asdict</span> helper function ) can be passedan <span class=\"docutils literal\">exclude</span> argument, containing a list of one or more dataclass field namesto exclude from the serialization process.</li></ul><p>Additionally, here is an example to demonstrate usage of both these approaches:</p><pre><code><span class=kn>from</span> <span class=nn>dataclasses</span> <span class=kn>import</span> <span class=n>dataclass</span><span class=w></span><span class=kn>from</span> <span class=nn>typing</span> <span class=kn>import</span> <span class=n>Annotated</span><span class=w></span><span class=kn>from</span> <span class=nn>dataclass_wizard</span> <span class=kn>import</span> <span class=n>JSONWizard</span><span class=p>,</span> <span class=n>json_key</span><span class=p>,</span> <span class=n>json_field</span><span class=w></span><span class=nd>@dataclass</span><span class=w></span><span class=k>class</span> <span class=nc>MyClass</span><span class=p>(</span><span class=n>JSONWizard</span><span class=p>):</span><span class=w></span>    <span class=n>my_str</span><span class=p>:</span> <span class=nb>str</span><span class=w></span>    <span class=n>my_int</span><span class=p>:</span> <span class=nb>int</span><span class=w></span>    <span class=n>other_str</span><span class=p>:</span> <span class=n>Annotated</span><span class=p>[</span><span class=nb>str</span><span class=p>,</span> <span class=n>json_key</span><span class=p>(</span><span class=s1>'AnotherStr'</span><span class=p>,</span> <span class=n>dump</span><span class=o>=</span><span class=kc>False</span><span class=p>)]</span><span class=w></span>    <span class=n>my_bool</span><span class=p>:</span> <span class=nb>bool</span> <span class=o>=</span> <span class=n>json_field</span><span class=p>(</span><span class=s1>'TestBool'</span><span class=p>,</span> <span class=n>dump</span><span class=o>=</span><span class=kc>False</span><span class=p>)</span><span class=w></span><span class=n>data</span> <span class=o>=</span> <span class=p>{</span><span class=s1>'MyStr'</span><span class=p>:</span> <span class=s1>'my string'</span><span class=p>,</span><span class=w></span>        <span class=s1>'myInt'</span><span class=p>:</span> <span class=mi>1</span><span class=p>,</span><span class=w></span>        <span class=s1>'AnotherStr'</span><span class=p>:</span> <span class=s1>'testing 123'</span><span class=p>,</span><span class=w></span>        <span class=s1>'TestBool'</span><span class=p>:</span> <span class=kc>True</span><span class=p>}</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=s1>'-- From Dict'</span><span class=p>)</span><span class=w></span><span class=n>c</span> <span class=o>=</span> <span class=n>MyClass</span><span class=o>.</span><span class=n>from_dict</span><span class=p>(</span><span class=n>data</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=sa>f</span><span class=s1>'Instance: </span><span class=si>{</span><span class=n>c</span><span class=si>!r}</span><span class=s1>'</span><span class=p>)</span><span class=w></span><span class=c1># dynamically exclude the `my_int` field from serialization</span><span class=w></span><span class=n>additional_exclude</span> <span class=o>=</span> <span class=p>(</span><span class=s1>'my_int'</span><span class=p>,)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=s1>'-- To Dict'</span><span class=p>)</span><span class=w></span><span class=n>out_dict</span> <span class=o>=</span> <span class=n>c</span><span class=o>.</span><span class=n>to_dict</span><span class=p>(</span><span class=n>exclude</span><span class=o>=</span><span class=n>additional_exclude</span><span class=p>)</span><span class=w></span><span class=nb>print</span><span class=p>(</span><span class=n>out_dict</span><span class=p>)</span><span class=w></span><span class=k>assert</span> <span class=n>out_dict</span> <span class=o>==</span> <span class=p>{</span><span class=s1>'myStr'</span><span class=p>:</span> <span class=s1>'my string'</span><span class=p>}</span></code></pre></section></section><section id=field-properties><h2>Field Properties</h2><p>The Python <span class=\"docutils literal\">dataclasses</span> library has some <a href=\"https://florimond.dev/en/posts/2018/10/reconciling-dataclasses-and-properties-in-python/\" rel=nofollow>key limitations</a>with how it currently handles properties and default values.</p><p>The <span class=\"docutils literal\"><span class=pre>dataclass-wizard</span></span> package natively provides support for usingfield properties with default values in dataclasses. The main use casehere is to assign an initial value to the field property, if one is notexplicitly passed in via the constructor method.</p><p>To use it, simply importthe <span class=\"docutils literal\">property_wizard</span> helper function, and add it as a metaclass onany dataclass where you would benefit from using field properties withdefault values. The metaclass also pairs well with the <span class=\"docutils literal\">JSONSerializable</span>mixin class.</p><p>For more examples and important how-to\u2019s on properties with default values,refer to the <a href=\"https://dataclass-wizard.readthedocs.io/en/latest/using_field_properties.html\" rel=nofollow>Using Field Properties</a> section in the documentation.</p></section><section id=contributing><h2>Contributing</h2><p>Contributions are welcome! Open a pull request to fix a bug, or <a href=\"https://github.com/rnag/dataclass-wizard/issues\" rel=nofollow>open an issue</a>to discuss a new feature or change.</p><p>Check out the <a href=\"https://dataclass-wizard.readthedocs.io/en/latest/contributing.html\" rel=nofollow>Contributing</a> section in the docs for more info.</p></section><section id=todos><h2>TODOs</h2><p>All feature ideas or suggestions for future consideration, have been currently added<a href=\"https://github.com/rnag/dataclass-wizard/milestones\" rel=nofollow>as milestones</a> in the project\u2019s GitHub repo.</p></section><section id=credits><h2>Credits</h2><p>This package was created with <a href=\"https://github.com/cookiecutter/cookiecutter\" rel=nofollow>Cookiecutter</a> and the <a href=\"https://github.com/rnag/cookiecutter-pypackage\" rel=nofollow>rnag/cookiecutter-pypackage</a> project template.</p></section>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/rnag/dataclass-wizard\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/rnag/dataclass-wizard/issues\" rel=\"nofollow\">        <i class=\"fas fa-bug\" aria-hidden=\"true\"></i>Bug Tracker      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://dataclass-wizard.readthedocs.io/en/latest/history.html\" rel=\"nofollow\">        <i class=\"fas fa-scroll\" aria-hidden=\"true\"></i>Changelog      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://dataclass-wizard.readthedocs.io\" rel=\"nofollow\">        <i class=\"fas fa-book\" aria-hidden=\"true\"></i>Documentation      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://pypi.org/project/dataclass-wizard\" rel=\"nofollow\">        <i class=\"fas fa-cloud-download-alt\" aria-hidden=\"true\"></i>Download      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/rnag/dataclass-wizard\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>Source      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/dataclass-wizard\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache Software License (Apache 2.0)</p>    <p><strong>Author:</strong> <a href=\"mailto:rv.kvetch@gmail.com\">Ritvik Nag</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      dataclasses,    </span>    <span class=\"package-keyword\">      dataclass,    </span>    <span class=\"package-keyword\">      wizard,    </span>    <span class=\"package-keyword\">      json,    </span>    <span class=\"package-keyword\">      marshal,    </span>    <span class=\"package-keyword\">      json to dataclass,    </span>    <span class=\"package-keyword\">      json2dataclass,    </span>    <span class=\"package-keyword\">      dict to dataclass,    </span>    <span class=\"package-keyword\">      property,    </span>    <span class=\"package-keyword\">      field-property,    </span>    <span class=\"package-keyword\">      serialization,    </span>    <span class=\"package-keyword\">      deserialization    </span>  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/rkvetch/\" aria-label=\"rkvetch\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/c871744a87fe855f9474524f5a4269ef3f62e01a/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f66646337623237356131663266623461393163366566643332323237336133393f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for rkvetch from gravatar.com\" title=\"Avatar for rkvetch from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            rkvetch          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+Apache+Software+License\">            OSI Approved :: Apache Software License          </a>        </li>      </ul>    </li>    <li>      <strong>Natural Language</strong>      <ul>        <li>          <a href=\"/search/?c=Natural+Language+%3A%3A+English\">            English          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3+%3A%3A+Only\">            Python :: 3 :: Only          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.6\">            Python :: 3.6          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/dataclass-wizard/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.22.3/\">                <p class=\"release__version\">                  0.22.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-01-29T17:50:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 29, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.22.2/\">                <p class=\"release__version\">                  0.22.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-11T16:08:29+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 11, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.22.1/\">                <p class=\"release__version\">                  0.22.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-05-11T19:08:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 11, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.22.0/\">                <p class=\"release__version\">                  0.22.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-02-02T05:30:29+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 2, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.21.2/\">                <p class=\"release__version\">                  0.21.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-01-28T02:08:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 28, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.21.1/\">                <p class=\"release__version\">                  0.21.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-01-23T20:35:28+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 23, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.21.0/\">                <p class=\"release__version\">                  0.21.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-01-23T20:11:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 23, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.20.3/\">                <p class=\"release__version\">                  0.20.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-30T16:48:25+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 30, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.20.2/\">                <p class=\"release__version\">                  0.20.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-28T20:07:03+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 28, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.20.1/\">                <p class=\"release__version\">                  0.20.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-27T22:11:35+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 27, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.20.0/\">                <p class=\"release__version\">                  0.20.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-24T04:03:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 24, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.19.0/\">                <p class=\"release__version\">                  0.19.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-17T14:08:30+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 17, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.18.0/\">                <p class=\"release__version\">                  0.18.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-15T04:20:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 15, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.17.1/\">                <p class=\"release__version\">                  0.17.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-11-04T23:24:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 4, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.17.0/\">                <p class=\"release__version\">                  0.17.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-29T00:23:57+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 29, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.16.2/\">                <p class=\"release__version\">                  0.16.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-27T03:36:53+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 27, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.16.1/\">                <p class=\"release__version\">                  0.16.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-21T04:01:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 21, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.16.0/\">                <p class=\"release__version\">                  0.16.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-20T23:13:28+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 20, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.15.2/\">                <p class=\"release__version\">                  0.15.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-04T00:28:20+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 4, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.15.1/\">                <p class=\"release__version\">                  0.15.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-30T22:14:43+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 30, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.15.0/\">                <p class=\"release__version\">                  0.15.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-30T05:21:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 30, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.14.2/\">                <p class=\"release__version\">                  0.14.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-29T03:58:20+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 29, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.14.1/\">                <p class=\"release__version\">                  0.14.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-26T18:00:21+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 26, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.14.0/\">                <p class=\"release__version\">                  0.14.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-25T23:13:31+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 25, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.13.1/\">                <p class=\"release__version\">                  0.13.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-24T15:58:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 24, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.13.0/\">                <p class=\"release__version\">                  0.13.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-09T02:17:48+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 9, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.12.0/\">                <p class=\"release__version\">                  0.12.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-06T18:26:40+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 6, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.11.0/\">                <p class=\"release__version\">                  0.11.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-04T20:37:47+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 4, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.10.2/\">                <p class=\"release__version\">                  0.10.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-29T23:41:28+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 29, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.10.1/\">                <p class=\"release__version\">                  0.10.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-28T20:39:03+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 28, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.10.0/\">                <p class=\"release__version\">                  0.10.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-28T18:58:42+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 28, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.9.0/\">                <p class=\"release__version\">                  0.9.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-23T22:58:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 23, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.8.2/\">                <p class=\"release__version\">                  0.8.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-22T21:41:45+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 22, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.8.1/\">                <p class=\"release__version\">                  0.8.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-22T19:34:30+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 22, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.8.0/\">                <p class=\"release__version\">                  0.8.0                  <span class=\"badge badge--danger\">yanked                  </span>                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-22T19:16:56+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 22, 2021</time>                </p>                  <div class=\"callout-block callout-block--danger release__yanked-reason\">                    <p>Reason this release was yanked:</p>                    <p>CLI tool was not working</p>                  </div>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.7.0/\">                <p class=\"release__version\">                  0.7.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-20T01:19:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 20, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.6.0/\">                <p class=\"release__version\">                  0.6.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-16T23:33:37+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 16, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.5.1/\">                <p class=\"release__version\">                  0.5.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-13T16:11:35+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 13, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.5.0/\">                <p class=\"release__version\">                  0.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-12T23:07:35+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 12, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.4.1/\">                <p class=\"release__version\">                  0.4.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-09T22:32:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 9, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.4.0/\">                <p class=\"release__version\">                  0.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-09T21:55:51+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 9, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.3.0/\">                <p class=\"release__version\">                  0.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-05T22:26:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 5, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.2.4/\">                <p class=\"release__version\">                  0.2.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-04T16:20:49+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 4, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.2.3/\">                <p class=\"release__version\">                  0.2.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-03T22:26:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 3, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.2.2/\">                <p class=\"release__version\">                  0.2.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-03T22:13:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 3, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.2.1/\">                <p class=\"release__version\">                  0.2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-03T21:33:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 3, 2021</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/dataclass-wizard/0.1.0/\">                <p class=\"release__version\">                  0.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-08-03T01:01:49+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 3, 2021</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/2f/c8/8682aa0202355aca0e1f25a16199426f8b65f32c185c67a85046f5d35f28/dataclass-wizard-0.22.3.tar.gz\">          dataclass-wizard-0.22.3.tar.gz        </a>        (164.0 kB        <a href=\"#copy-hash-modal-8e79eea1-f9f1-425c-ba09-e9305d25759c\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-01-29T17:50:28+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 29, 2024</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/cc/3a/48b6a1a5d45dcf4a7c442c3b9240be617fe8e95dd2b2ee1382e429d3dd66/dataclass_wizard-0.22.3-py2.py3-none-any.whl\">          dataclass_wizard-0.22.3-py2.py3-none-any.whl        </a>        (90.9 kB        <a href=\"#copy-hash-modal-a352a617-318e-4e10-b436-31046c57df8a\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-01-29T17:50:26+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 29, 2024</time>          <code>py2</code>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-8e79eea1-f9f1-425c-ba09-e9305d25759c\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for dataclass-wizard-0.22.3.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for dataclass-wizard-0.22.3.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">4c46591782265058f1148cfd1f54a3a91221e63986fdd04c9d59f4ced61f4424</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">128591bc3ab8b28dca05c94c2df4ce8a</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">2fc88682aa0202355aca0e1f25a16199426f8b65f32c185c67a85046f5d35f28</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-a352a617-318e-4e10-b436-31046c57df8a\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for dataclass_wizard-0.22.3-py2.py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for dataclass_wizard-0.22.3-py2.py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">63751203e54b9b9349212cc185331da73c1adc99c51312575eb73bb5c00c1962</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">fb67e7ba780f3baf3893eaf26f7b07b5</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">cc3a48b6a1a5d45dcf4a7c442c3b9240be617fe8e95dd2b2ee1382e429d3dd66</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
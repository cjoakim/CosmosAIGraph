{
  "libtype": "pypi",
  "libname": "entangled-cli",
  "url": "https://entangled.github.io/",
  "html": "<!DOCTYPE html><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\"><head>  <meta charset=\"utf-8\" />  <meta name=\"generator\" content=\"pandoc\" />  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />  <title>Entangled</title>  <style type=\"text/css\">      code{white-space: pre-wrap;}      span.smallcaps{font-variant: small-caps;}      span.underline{text-decoration: underline;}      div.column{display: inline-block; vertical-align: top; width: 50%;}  </style>  <style type=\"text/css\">pre > code.sourceCode { white-space: pre; position: relative; }pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }pre > code.sourceCode > span:empty { height: 1.2em; }.sourceCode { overflow: visible; }code.sourceCode > span { color: inherit; text-decoration: inherit; }div.sourceCode { margin: 1em 0; }pre.sourceCode { margin: 0; }@media screen {div.sourceCode { overflow: auto; }}@media print {pre > code.sourceCode { white-space: pre-wrap; }pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }}pre.numberSource code  { counter-reset: source-line 0; }pre.numberSource code > span  { position: relative; left: -4em; counter-increment: source-line; }pre.numberSource code > span > a:first-child::before  { content: counter(source-line);    position: relative; left: -1em; text-align: right; vertical-align: baseline;    border: none; display: inline-block;    -webkit-touch-callout: none; -webkit-user-select: none;    -khtml-user-select: none; -moz-user-select: none;    -ms-user-select: none; user-select: none;    padding: 0 4px; width: 4em;  }pre.numberSource { margin-left: 3em;  padding-left: 4px; }div.sourceCode  { color: #eeeeee; background-color: #303030; }@media screen {pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }}code span.al { color: #ffcfaf; } /* Alert */code span.an { color: #7f9f7f; font-weight: bold; } /* Annotation */code span.at { } /* Attribute */code span.bn { color: #aadfff; } /* BaseN */code span.bu { } /* BuiltIn */code span.cf { color: #aaffdf; font-weight: bold; } /* ControlFlow */code span.ch { color: #dca3a3; } /* Char */code span.cn { color: #dca3a3; font-weight: bold; } /* Constant */code span.co { color: #7f9f7f; } /* Comment */code span.cv { color: #7f9f7f; font-weight: bold; } /* CommentVar */code span.do { color: #7f9f7f; } /* Documentation */code span.dt { color: #dfdfbf; } /* DataType */code span.dv { color: #aaffdf; } /* DecVal */code span.er { color: #c3bf9f; } /* Error */code span.ex { } /* Extension */code span.fl { color: #c0bed1; } /* Float */code span.fu { color: #efef8f; } /* Function */code span.im { } /* Import */code span.in { color: #7f9f7f; font-weight: bold; } /* Information */code span.kw { color: #aaccef; font-weight: bold; } /* Keyword */code span.op { color: #cceeff; } /* Operator */code span.ot { color: #efef8f; } /* Other */code span.pp { color: #ffcfaf; font-weight: bold; } /* Preprocessor */code span.sc { color: #dca3a3; } /* SpecialChar */code span.ss { color: #cc9393; } /* SpecialString */code span.st { color: #aaffdf; font-style: italic; } /* String */code span.va { } /* Variable */code span.vs { color: #cc9393; } /* VerbatimString */code span.wa { color: #7f9f7f; font-weight: bold; } /* Warning */  </style>  <!-- Bootstrap 4.5.0 stylesheet -->  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\">  <link rel=\"stylesheet\" href=\"css/nlesc.css\" />  <link rel=\"stylesheet\" href=\"css/code-examples.css\" />  <!--[if lt IE 9]>    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>  <![endif]--><!-- <script data-main=\"scripts/main\" src=\"js/require.js\"></script> -->  <!-- Load React. -->  <!-- Note: when deploying, replace \"development.js\" with \"production.min.js\". --><!--  <script src=\"https://unpkg.com/react@16/umd/react.development.js\" crossorigin></script>  <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\" crossorigin></script> --></head><body class=\"d-flex flex-column\"><nav id=\"TOC\" class=\"navbar navbar-light\"><a href=\"#\" class=\"navbar-brand\">Entangled</a><div class=\"navbar-nav mr-auto w-50\"><ul><li><a href=\"#about\" id=\"toc-about\">About</a></li><li><a href=\"#get-started\" id=\"toc-get-started\">Get Started</a></li><li><a href=\"#section-markdown\" id=\"toc-section-markdown\">WriteMarkdown</a></li><li><a href=\"#documentation\"id=\"toc-documentation\">Documentation</a></li><li><a href=\"#section-links\" id=\"toc-section-links\">ExternalLinks</a></li></ul></div><span id=\"logobar\"><a href=\"https://github.com/entangled/entangled.py/\"><img src=\"img/github.png\" alt=\"Octocat\" style=\"height: 20pt\"/> Github</a><a href=\"https://github.com/entangled/entangled.py/releases\"><img src=\"img/download.svg\" alt=\"Download\" style=\"height: 20pt\"/> Downloads</a></span></nav><div id=\"title-bar\"><div id=\"title\">Entangled</div><div id=\"subtitle\">literate programming for the new millennium</div></div><main role=\"main\" class=\"flex-fill\"><div class=\"container my-5\"><div class=\"container-fluid\"><div class=\"row\"><div id=\"synopsis\"><ul><li><strong>Literate Programming</strong> made easy</li><li>Create <strong>live documents</strong> in Markdown</li><li>Program in <strong>any language</strong> you like</li><li>Use your <strong>favourite editor/IDE</strong></li><li>Works well with <strong>version control</strong></li></ul></div><blockquote><p><strong>Literate programming</strong> <spanclass=\"phonetic\">/\u02c8l\u026at\u0259\u0279\u0259t \u02c8p\u0279\u0259\u028a\u0261\u0279\u00e6m\u026a\u014b/</span> (computing) Literateprogramming is a programming paradigm introduced by Donald Knuth inwhich a program is given as an explanation of the program logic in anatural language, such as English, interspersed with snippets of macrosand traditional source code, from which a compilable source code can begenerated. <ahref=\"https://en.wikipedia.org/wiki/Literate_programming\">Wikipedia</a></p></blockquote></div></div><script async id=\"asciicast-591604\" src=\"https://asciinema.org/a/591604.js\"        data-autoplay=\"true\" data-speed=\"2\"></script><h1 id=\"about\">About</h1><p>Entangled helps you write Literate Programs in Markdown. You put allyour code inside Markdown code blocks. Entangled automatically extractsthe code and writes it to more traditional source files. You can thenedit these generated files, and the changes are being fed back to theMarkdown.</p><p>We\u2019re trying to increase the visibility of Entangled. If you likeEntangled, please consider adding this badge <ahref=\"https://entangled.github.io/\"><imgsrc=\"https://img.shields.io/badge/entangled-Use%20the%20source!-%2300aeff\"alt=\"Entangled badge\" /></a> to the appropriate location in yourproject:</p><blockquote><pre><code>[![Entangled badge](https://img.shields.io/badge/entangled-Use%20the%20source!-%2300aeff)](https://entangled.github.io/)</code></pre></blockquote><h1 id=\"get-started\">Get Started</h1><p>With the 2.0 release, Entangled is now available as a Python package,installable through <code>pip</code>,</p><div class=\"sourceCode\" id=\"cb2\"><preclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">pip</span> install entangled_cli</span></code></pre></div><h1 id=\"section-markdown\">Write Markdown</h1><blockquote><p>\u201cA critical aspect of a programming language is the means it providesfor using names to refer to computational objects.\u201d <ahref=\"https://mitpress.mit.edu/sites/default/files/sicp/index.html\">Abelson,Sussman &amp; Sussman - SICP</a></p></blockquote><h4 id=\"name-your-code\">Name your code</h4><div class=\"example\"><div class=\"given-input\"><div class=\"sourceCode\" id=\"cb3\"><preclass=\"sourceCode markdown\"><code class=\"sourceCode markdown\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a> The square of the hypothenuse is the sum</span><span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a> of the two right-angled sides squared:</span><span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a> $$a^2 + b^2 = c^2$$</span><span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span><span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a> <span class=\"in\">``` {.python #pythagoras}</span></span><span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\"> def vector_length(x, y):</span></span><span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\">     return sqrt(x**2 + y**2)</span></span><span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\"> ```</span></span></code></pre></div></div><div class=\"generated-output\"><p>The square of the hypothenuse is the sum of the two right-angledsides squared: <span class=\"math display\">\\[a^2 + b^2 = c^2\\]</span></p><div class=\"named-code-block\"><div class=\"code-block-title\">\u00abpythagoras\u00bb</div><div class=\"sourceCode\" id=\"cb4\"><preclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> vector_length(x, y):</span><span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> sqrt(x<span class=\"op\">**</span><span class=\"dv\">2</span> <span class=\"op\">+</span> y<span class=\"op\">**</span><span class=\"dv\">2</span>)</span></code></pre></div></div></div></div><blockquote><p>\u201cLet us change our traditional attitude to the construction ofprograms: Instead of imagining that our main task is to instruct acomputer what to do, let us concentrate rather on explaining to humanbeings what we want a computer to do.\u201d <ahref=\"http://www.literateprogramming.com/knuthweb.pdf\">Knuth - LiterateProgramming</a></p></blockquote><h4 id=\"compose-your-program\">Compose your program</h4><div class=\"example\"><div class=\"given-input\"><div class=\"sourceCode\" id=\"cb5\"><preclass=\"sourceCode markdown\"><code class=\"sourceCode markdown\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a> To count the words in a sentence, first</span><span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a> split the sentence into words, then</span><span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a> count the number of words in the list.</span><span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span><span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a> <span class=\"in\">``` {.python #word-count}</span></span><span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\"> def word_count(sentence):</span></span><span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\">     &lt;&lt;split-into-words&gt;&gt;</span></span><span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\">     &lt;&lt;count-words&gt;&gt;</span></span><span id=\"cb5-9\"><a href=\"#cb5-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\">     return count</span></span><span id=\"cb5-10\"><a href=\"#cb5-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\"> ```</span></span><span id=\"cb5-11\"><a href=\"#cb5-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span><span id=\"cb5-12\"><a href=\"#cb5-12\" aria-hidden=\"true\" tabindex=\"-1\"></a> The default arguments to the <span class=\"in\">`.split`</span></span><span id=\"cb5-13\"><a href=\"#cb5-13\" aria-hidden=\"true\" tabindex=\"-1\"></a> method split on any white space.</span><span id=\"cb5-14\"><a href=\"#cb5-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span><span id=\"cb5-15\"><a href=\"#cb5-15\" aria-hidden=\"true\" tabindex=\"-1\"></a> <span class=\"in\">``` {.python #split-into-words}</span></span><span id=\"cb5-16\"><a href=\"#cb5-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\"> words = sentence.split()</span></span><span id=\"cb5-17\"><a href=\"#cb5-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\"> ```</span></span><span id=\"cb5-18\"><a href=\"#cb5-18\" aria-hidden=\"true\" tabindex=\"-1\"></a></span><span id=\"cb5-19\"><a href=\"#cb5-19\" aria-hidden=\"true\" tabindex=\"-1\"></a> Counting is done with the <span class=\"in\">`length`</span></span><span id=\"cb5-20\"><a href=\"#cb5-20\" aria-hidden=\"true\" tabindex=\"-1\"></a> function.</span><span id=\"cb5-21\"><a href=\"#cb5-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span><span id=\"cb5-22\"><a href=\"#cb5-22\" aria-hidden=\"true\" tabindex=\"-1\"></a> <span class=\"in\">``` {.python #count-words}</span></span><span id=\"cb5-23\"><a href=\"#cb5-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\"> count = len(words)</span></span><span id=\"cb5-24\"><a href=\"#cb5-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"in\"> ```</span></span></code></pre></div></div><div class=\"generated-output\"><p>To count the words in a sentence, first split the sentence intowords, then count the number of words in the list.</p><div class=\"named-code-block\"><div class=\"code-block-title\">\u00abword-count\u00bb</div><div class=\"sourceCode\" id=\"cb6\"><preclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> word_count(sentence):</span><span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">&lt;&lt;</span>split<span class=\"op\">-</span>into<span class=\"op\">-</span>words<span class=\"op\">&gt;&gt;</span></span><span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">&lt;&lt;</span>count<span class=\"op\">-</span>words<span class=\"op\">&gt;&gt;</span></span><span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> count</span></code></pre></div></div><p>The default arguments to the <code>.split</code> method split on anywhite space.</p><div class=\"named-code-block\"><div class=\"code-block-title\">\u00absplit-into-words\u00bb</div><div class=\"sourceCode\" id=\"cb7\"><preclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>words <span class=\"op\">=</span> sentence.split()</span></code></pre></div></div><p>Counting is done with the <code>len</code> function.</p><div class=\"named-code-block\"><div class=\"code-block-title\">\u00abcount-words\u00bb</div><div class=\"sourceCode\" id=\"cb8\"><preclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>count <span class=\"op\">=</span> <span class=\"bu\">len</span>(words)</span></code></pre></div></div></div></div><blockquote><p>\u201cTalk is cheap. Show me the code.\u201d <a href=\"\">Linus Torvalds</a></p></blockquote><!--#### Test your documentation::: {.example}:::: {.given-input}~~~markdown Counting words, the zero-case: ``` {.python .eval #word-count} word_count(\"\") ``` And a small sentence: ``` {.python .doctest #word-count} word_count(\"Hebban olla uogala\") --- 4 ```~~~:::::::: {.generated-output}Counting words, the zero-case:``` {.python .eval #word-count}word_count(\"\")```And a small sentence:``` {.python .doctest #word-count}word_count(\"Hebban olla uogala\")---4```:::::::--><h1 id=\"documentation\">Documentation</h1><ul><li><a href=\"tutorial.html\">Tutorial: setting up a Literateproject</a></li><li><a href=\"manual.html\">User Manual</a></li><li><a href=\"https://entangled.github.io/examples\">Examplegallery</a></li><li><a href=\"https://entangled.github.io/mkdocs-plugin\">Use MkDocs topublish</a></li></ul><h2 id=\"bootstrap-web-template-for-pandoc\">Bootstrap web template forPandoc</h2><p>To help you easily create a presentable website from your literatecode, we provide a Bootstrap template for Pandoc. Probably the best wayto use this template, is to fork <ahref=\"https://github.com/entangled/bootstrap-submodule\">our repositoryat entangled/bootstrap-submodule</a>, and add your fork as a submodulein your project:</p><pre><code>    git submodule add git@github.com:&lt;my bootstrap-submodule fork&gt;</code></pre><p>This way you can tweak the template to your own wishes. If you wantto play around first, you can also use the cookiecutter template,</p><pre><code>    cookiecutter https://github.com/entangled/bootstrap</code></pre><p>but this approach is less flexible. For more information, see <ahref=\"tutorial.html\">the tutorial</a>.</p><h1 id=\"section-links\">External Links</h1><h3 id=\"blogs\">Blogs</h3><ul><li><ahref=\"https://blog.esciencecenter.nl/why-all-youll-ever-need-is-markdown-dc604f0ab309\">Whyall you\u2019ll ever need is Markdown</a> \u2014 Introduction to Pandoc, andPandoc filters.</li><li><ahref=\"https://blog.esciencecenter.nl/entangled-1744448f4b9f\">Entangled,a bi-directional Literate Programming tool</a> \u2014 Presenting Entangled, atool for pain free literate programming.</li><li><ahref=\"https://blog.esciencecenter.nl/literate-programming-in-science-1669094541a7\">LiterateProgramming in Science: the why</a> \u2014 Explaining why LiterateProgramming is particularly well matched with scientificprogramming.</li><li><ahref=\"https://blog.esciencecenter.nl/literate-programming-in-science-ed94dcc8f758\">LiterateProgramming in Science: the how</a> \u2014 Showing methods for LiterateProgramming, comparing Entangled to Jupyter, RMarkdown andOrg-mode.</li><li><ahref=\"https://blog.esciencecenter.nl/unweaving-legacy-code-using-entangled-2e6380a88b2f\">Unweavinglegacy code using Entangled</a> \u2014 Showing how you can use Entangled toreverse-engineer unreadable legacy code.</li></ul><h3 id=\"literate-books\">Literate Books</h3><p>These are some awesome books written with a literate philosophy inmind.</p><div class=\"container-fluid my-4\"><div class=\"card-deck\"><div class=\"card rounded-1g\"><div class=\"row no-gutters\"><div class=\"col-4\"><img src=\"img/pbrt.png\"title=\"Pharr, Jakob &amp; Humphreys - Physically Based Rendering\"style=\"width:100.0%\"alt=\"Pharr, Jakob &amp; Humphreys - Physically Based Rendering\" /></div><div class=\"col-8\"><section class=\"card-title card-body\"><h3 class=\"card-title\">Pharr, Jakob &amp; Humphreys - Physically BasedRendering</h3><div class=\"card-text\"><p>Explains physically realistic 3D rendering, while implementing thesame techniques in C++. This book is so amazing, it actually won anAcadamy Award for technical achievement. The book uses the same<em>noweb</em> notation for code block references we do.</p></div><a href=\"https://www.pbrt.org/\"class=\"btn btn-secondary mt-auto mx-4\">PBRT</a></section></div></div></div></div></div><div class=\"container-fluid my-4\"><div class=\"card-deck\"><div class=\"card rounded-1g\"><div class=\"row no-gutters\"><div class=\"col-4\"><img src=\"img/sicm.jpg\"title=\"Sussman &amp; Wisdom - Structure and Interpretation of Classical Mechanics\"style=\"width:100.0%\"alt=\"Sussman &amp; Wisdom - Structure and Interpretation of Classical Mechanics\" /></div><div class=\"col-8\"><section class=\"card-title card-body\"><h3 class=\"card-title\">Sussman &amp; Wisdom - Structure andInterpretation of Classical Mechanics</h3><div class=\"card-text\"><p>Does not use <em>noweb</em>, but subscribes to the many foundingprinciples of literate programming. This is a text book on classicalmechanics and specifically the Lagrangian and Hamiltonian descriptionsof physics.</p></div><ahref=\"https://mitpress.mit.edu/books/structure-and-interpretation-classical-mechanics-second-edition\"class=\"btn btn-secondary mt-auto mx-4\">SICM</a></section></div></div></div></div></div><div class=\"container-fluid my-4\"><div class=\"card-deck\"><div class=\"card rounded-1g\"><div class=\"row no-gutters\"><div class=\"col-4\"><img src=\"img/hsom.jpg\"title=\"Hudak &amp; Quick - The Haskell School of Music\"style=\"width:100.0%\"alt=\"Hudak &amp; Quick - The Haskell School of Music\" /></div><div class=\"col-8\"><section class=\"card-title card-body\"><h3 class=\"card-title\">Hudak &amp; Quick - The Haskell School ofMusic</h3><div class=\"card-text\"><p>From signals to symphonies, this book fuses the authors\u2019 passion formusic and the Haskell programming language.</p></div><a href=\"http://euterpea.com/haskell-school-of-music/\"class=\"btn btn-secondary mt-auto mx-4\">HSOM</a></section></div></div></div></div></div><h3 id=\"pandoc-filters\">Pandoc filters</h3><ul><li><a href=\"https://github.com/kiwi0fruit/knitty\">Knitty</a> \u2014 Expandscode-cells through a Jupyter interface. Uses Panflute.</li><li><a href=\"https://github.com/alexpdp7/pandocsql\">pandocsql</a> \u2014Inserts tables in your markdown into an Sqlite database, and run queriesthat appear as tables in the output. Uses Panflute.</li></ul><h3 id=\"dev-tools\">Dev tools</h3><ul><li><a href=\"https://github.com/sergiocorreia/panflute\">Panflute</a> \u2014 A\u201cPythonic\u201d interface for creating Pandoc filters.</li></ul></div></main><footer class=\"py-4 footer\"><div class=\"container\"><a href=\"https://esciencecenter.nl/\"><img src=\"img/escience_white.png\"style=\"height: 20pt\" /></a></div></footer><!-- Bootstrap 4.5.0 --><script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script><script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script><script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\" integrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\" crossorigin=\"anonymous\"></script><!-- Mathjax --><script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script><script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script></body></html>",
  "embeddings": []
}
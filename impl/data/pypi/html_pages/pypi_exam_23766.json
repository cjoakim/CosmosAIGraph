{
  "libtype": "pypi",
  "libname": "exam",
  "url": "https://pypi.org/project/exam/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>exam \u00b7 PyPI</title>    <meta name=\"description\" content=\"Helpers for better testing.\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for exam\" href=\"/rss/project/exam/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/exam/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/exam/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"exam\">    <meta property=\"og:description\" content=\"Helpers for better testing.\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/fluxx/exam\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:fluxx/exam+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        exam 0.10.6      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install exam</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/exam/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2016-05-26T21:11:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 26, 2016</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/exam\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Helpers for better testing.</p><div data-html-include=\"/_includes/edit-project-button/exam\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for exam\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/fluxx/exam\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/exam\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT</p>    <p><strong>Author:</strong> <a href=\"mailto:jeff.pollard@gmail.com\">Jeff Pollard</a></p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/Fluxx/\" aria-label=\"Fluxx\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/7a529687ccb5be7ac192435ef92b0296c37b24e1/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f62393036326137303836656531383364376631346539646563663035663861623f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for Fluxx from gravatar.com\" title=\"Avatar for Fluxx from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            Fluxx          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2\">            Python :: 2          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2.6\">            Python :: 2.6          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2.7\">            Python :: 2.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.2\">            Python :: 3.2          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.3\">            Python :: 3.3          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for exam\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <a href=\"http://travis-ci.org/fluxx/exam\" rel=nofollow><img alt=\"https://api.travis-ci.org/Fluxx/exam.png?branch=master\" src=\"https://pypi-camo.freetls.fastly.net/928af9e50cbc167b109a811ab8b106d55b266018/68747470733a2f2f6170692e7472617669732d63692e6f72672f466c7578782f6578616d2e706e673f6272616e63683d6d6173746572\"></a><section id=exam><h2>Exam</h2><img alt=\"https://dl.dropbox.com/u/3663715/exam.jpeg\" src=\"https://pypi-camo.freetls.fastly.net/cbbafaf26c8cd25a3cdef5ad84b1fb7e0c11063c/68747470733a2f2f646c2e64726f70626f782e636f6d2f752f333636333731352f6578616d2e6a706567\"><p>Exam is a Python toolkit for writing better tests.  It aims to remove a lot of the boiler plate testing code one often writes, while still following Python conventions and adhering to the unit testing interface.</p><section id=installation><h3>Installation</h3><p>A simple <span class=\"docutils literal\">pip install exam</span> should do the trick.</p></section><section id=rationale><h3>Rationale</h3><p>Aside from the obvious \u201cdoes the code work?\u201d, writings tests has many additional goals and benefits:</p><ol><li><p>If written semantically, reading tests can help demonstrate how the code is supposed to work to other developers.</li><li><p>If quick running, tests provide feedback during development that your changes are working or not having an adverse side effects.</li><li><p>If they\u2019re easy to write correctly, developers will write more tests and they will be of a higher quality.</li></ol><p>Unfortunately, the common pattern for writing Python unit tests tends to not offer any of these advantages.  Often times results in inefficient and unnecessarily obtuse testing code.  Additionally, common uses of the <cite>mock</cite> library can often result in repetitive boiler-plate code or inefficiency during test runs.</p><p><cite>exam</cite> aims to improve the state of Python test writing by providing a toolkit of useful functionality to make writing quick, correct and useful tests and as painless as possible.</p></section><section id=usage><h3>Usage</h3><p>Exam features a collection of useful modules:</p><section id=exam-decorators><h4><span class=\"docutils literal\">exam.decorators</span></h4><p>Exam has some useful decorators to make your tests easier to write and understand.  To utilize the <span class=\"docutils literal\">@before</span>, <span class=\"docutils literal\">@after</span>, <span class=\"docutils literal\">@around</span> and <span class=\"docutils literal\">@patcher</span> decorators, you must mixin the <span class=\"docutils literal\">exam.cases.Exam</span> class into your test case.  It implements the appropriate <span class=\"docutils literal\">setUp()</span> and <span class=\"docutils literal\">tearDown()</span> methods necessary to make the decorators work.</p><p>Note that the <span class=\"docutils literal\">@fixture</span> decorator works without needing to be defined inside of an Exam class.  Still, it\u2019s a best practice to add the <span class=\"docutils literal\">Exam</span> mixin to your test cases.</p><p>All of the decorators in <span class=\"docutils literal\">exam.decorators</span>, as well as the <span class=\"docutils literal\">Exam</span> test case are available for import from the main <span class=\"docutils literal\">exam</span> package as well. I.e.:</p><pre><code><span class=kn>from</span> <span class=nn>exam</span> <span class=kn>import</span> <span class=n>Exam</span><span class=w></span><span class=kn>from</span> <span class=nn>exam</span> <span class=kn>import</span> <span class=n>fixture</span><span class=p>,</span> <span class=n>before</span><span class=p>,</span> <span class=n>after</span><span class=p>,</span> <span class=n>around</span><span class=p>,</span> <span class=n>patcher</span></code></pre><section id=exam-decorators-fixture><h5><span class=\"docutils literal\">exam.decorators.fixture</span></h5><p>The <span class=\"docutils literal\">@fixture</span> decorator turns a method into a property (similar to the <span class=\"docutils literal\">@property</span> decorator, but also memoizes the return value). This lets you reference the property in your tests, i.e. <span class=\"docutils literal\">self.grounds</span>, and it will always reference the exact same instance every time.</p><pre><code><span class=kn>from</span> <span class=nn>exam.decorators</span> <span class=kn>import</span> <span class=n>fixture</span><span class=w></span><span class=kn>from</span> <span class=nn>exam.cases</span> <span class=kn>import</span> <span class=n>Exam</span><span class=w></span><span class=k>class</span> <span class=nc>MyTest</span><span class=p>(</span><span class=n>Exam</span><span class=p>,</span> <span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=nd>@fixture</span><span class=w></span>    <span class=k>def</span> <span class=nf>user</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=k>return</span> <span class=n>User</span><span class=p>(</span><span class=n>name</span><span class=o>=</span><span class=s1>'jeff'</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>test_user_name_is_jeff</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=k>assert</span> <span class=bp>self</span><span class=o>.</span><span class=n>user</span><span class=o>.</span><span class=n>name</span> <span class=o>==</span> <span class=s1>'jeff'</span></code></pre><p>As you can see, <span class=\"docutils literal\">self.user</span> was used to reference the <span class=\"docutils literal\">user</span> property defined above.</p><p>If all your fixture method is doing is constructing a new instance of type or calling a class method, exam provides a shorthand inline <span class=\"docutils literal\">fixture</span> syntax for constructing fixture objects.  Simply set a class variable equal to <span class=\"docutils literal\">fixture(type_or_class_method)</span> and exam will automatically call your type or class method.</p><pre><code><span class=kn>from</span> <span class=nn>exam.decorators</span> <span class=kn>import</span> <span class=n>fixture</span><span class=w></span><span class=kn>from</span> <span class=nn>exam.cases</span> <span class=kn>import</span> <span class=n>Exam</span><span class=w></span><span class=k>class</span> <span class=nc>MyTest</span><span class=p>(</span><span class=n>Exam</span><span class=p>,</span> <span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=n>user</span> <span class=o>=</span> <span class=n>fixture</span><span class=p>(</span><span class=n>User</span><span class=p>,</span> <span class=n>name</span><span class=o>=</span><span class=s1>'jeff'</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>test_user_name_is_jeff</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=k>assert</span> <span class=bp>self</span><span class=o>.</span><span class=n>user</span><span class=o>.</span><span class=n>name</span> <span class=o>==</span> <span class=s1>'jeff'</span></code></pre><p>Any <span class=\"docutils literal\">*args</span> or <span class=\"docutils literal\">**kwargs</span> passed to <span class=\"docutils literal\">fixture(type_or_class_method)</span> will be passed to the <span class=\"docutils literal\">type_or_class_method</span> when called.</p></section><section id=exam-decorators-before><h5><span class=\"docutils literal\">exam.decorators.before</span></h5><p>The <span class=\"docutils literal\">@before</span> decorator adds the method to the list of methods which are run as part of the class\u2019s <span class=\"docutils literal\">setUp()</span> routine.</p><pre><code><span class=kn>from</span> <span class=nn>exam.decorators</span> <span class=kn>import</span> <span class=n>before</span><span class=w></span><span class=kn>from</span> <span class=nn>exam.cases</span> <span class=kn>import</span> <span class=n>Exam</span><span class=w></span><span class=k>class</span> <span class=nc>MyTest</span><span class=p>(</span><span class=n>Exam</span><span class=p>,</span> <span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=nd>@before</span><span class=w></span>    <span class=k>def</span> <span class=nf>reset_database</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=n>mydb</span><span class=o>.</span><span class=n>reset</span><span class=p>()</span></code></pre><p><span class=\"docutils literal\">@before</span> also hooks works through subclasses - that is to say, if a parent class has a <span class=\"docutils literal\">@before</span> hook in it, and you subclass it and define a 2nd <span class=\"docutils literal\">@before</span> hook in it, both <span class=\"docutils literal\">@before</span> hooks will be called.  Exam runs the parent\u2019s <span class=\"docutils literal\">@before</span> hook first, then runs the childs\u2019.  Also, if your override a <cite>@before</cite> hook in your child class, the overridden method is run when the rest of the child classes <cite>@before</cite> hooks are run.</p><p>For example, with hooks defined as such:</p><pre><code><span class=kn>from</span> <span class=nn>exam.decorators</span> <span class=kn>import</span> <span class=n>before</span><span class=w></span><span class=kn>from</span> <span class=nn>exam.cases</span> <span class=kn>import</span> <span class=n>Exam</span><span class=w></span><span class=k>class</span> <span class=nc>MyTest</span><span class=p>(</span><span class=n>Exam</span><span class=p>,</span> <span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=nd>@before</span><span class=w></span>    <span class=k>def</span> <span class=nf>reset_database</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=nb>print</span> <span class=s1>'parent reset_db'</span><span class=w></span>    <span class=nd>@before</span><span class=w></span>    <span class=k>def</span> <span class=nf>parent_hook</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=nb>print</span> <span class=s1>'parent hook'</span><span class=w></span><span class=k>class</span> <span class=nc>RedisTest</span><span class=p>(</span><span class=n>MyTest</span><span class=p>):</span><span class=w></span>    <span class=nd>@before</span><span class=w></span>    <span class=k>def</span> <span class=nf>reset_database</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=nb>print</span> <span class=s1>'child reset_db'</span><span class=w></span>    <span class=nd>@before</span><span class=w></span>    <span class=k>def</span> <span class=nf>child_hook</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=nb>print</span> <span class=s1>'child hook'</span></code></pre><p>When Exam runs these hooks, the output would be:</p><pre><code><span class=s2>\"prent hook\"</span><span class=w></span><span class=s2>\"child reset_db\"</span><span class=w></span><span class=s2>\"child hook\"</span></code></pre><p>As you can see even though the parent class defines a <span class=\"docutils literal\">reset_database</span>, because the child class overwrote it, the child\u2019s version is run instead, and also at the same time as the rest of the child\u2019s <span class=\"docutils literal\">@before</span> hooks.</p><p><span class=\"docutils literal\">@before</span> hooks can also be constructed with other functions in your test case, decorating actual test methods.  When this strategy is used, Exam will run the function <span class=\"docutils literal\">@before</span> is constructed with before running that particular test method.</p><pre><code><span class=kn>from</span> <span class=nn>exam.decorators</span> <span class=kn>import</span> <span class=n>before</span><span class=p>,</span> <span class=n>fixture</span><span class=w></span><span class=kn>from</span> <span class=nn>exam.cases</span> <span class=kn>import</span> <span class=n>Exam</span><span class=w></span><span class=kn>from</span> <span class=nn>myapp</span> <span class=kn>import</span> <span class=n>User</span><span class=w></span><span class=k>class</span> <span class=nc>MyTest</span><span class=p>(</span><span class=n>Exam</span><span class=p>,</span> <span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=n>user</span> <span class=o>=</span> <span class=n>fixture</span><span class=p>(</span><span class=n>User</span><span class=p>)</span><span class=w></span>    <span class=nd>@before</span><span class=w></span>    <span class=k>def</span> <span class=nf>create_user</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>user</span><span class=o>.</span><span class=n>create</span><span class=p>()</span><span class=w></span>    <span class=k>def</span> <span class=nf>confirm_user</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>user</span><span class=o>.</span><span class=n>confirm</span><span class=p>()</span><span class=w></span>    <span class=nd>@before</span><span class=p>(</span><span class=n>confirm_user</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>test_confirmed_users_have_no_token</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>assertFalse</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>user</span><span class=o>.</span><span class=n>token</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>test_user_display_name_exists</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>assertTrue</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>user</span><span class=o>.</span><span class=n>display_name</span><span class=p>)</span></code></pre><p>In the above example, the <span class=\"docutils literal\">confirm_user</span> method is run immediately before the <span class=\"docutils literal\">test_confirmed_users_have_no_token</span> method, but <strong>not</strong> the <span class=\"docutils literal\">test_user_display_name_exists</span> method.  The <span class=\"docutils literal\">@before</span> globally decorated <span class=\"docutils literal\">create_user</span> method still runs before each test method.</p><p><span class=\"docutils literal\">@before</span> can also be constructed with multiple functions to call before running the test method:</p><pre><code><span class=k>class</span> <span class=nc>MyTest</span><span class=p>(</span><span class=n>Exam</span><span class=p>,</span> <span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=nd>@before</span><span class=p>(</span><span class=n>func1</span><span class=p>,</span> <span class=n>func2</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=nf>test_does_things</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=n>does_things</span><span class=p>()</span></code></pre><p>In the above example, <span class=\"docutils literal\">func1</span> and <span class=\"docutils literal\">func2</span> are called in order before <span class=\"docutils literal\">test_does_things</span> is run.</p></section><section id=exam-decorators-after><h5><span class=\"docutils literal\">exam.decorators.after</span></h5><p>The compliment to <span class=\"docutils literal\">@before</span>, <span class=\"docutils literal\">@after</span> adds the method to the list of methods which are run as part of the class\u2019s <span class=\"docutils literal\">tearDown()</span> routine. Like <span class=\"docutils literal\">@before</span>, <span class=\"docutils literal\">@after</span> runs parent class <span class=\"docutils literal\">@after</span> hooks before running ones defined in child classes.</p><pre><code><span class=kn>from</span> <span class=nn>exam.decorators</span> <span class=kn>import</span> <span class=n>after</span><span class=w></span><span class=kn>from</span> <span class=nn>exam.cases</span> <span class=kn>import</span> <span class=n>Exam</span><span class=w></span><span class=k>class</span> <span class=nc>MyTest</span><span class=p>(</span><span class=n>Exam</span><span class=p>,</span> <span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=nd>@after</span><span class=w></span>    <span class=k>def</span> <span class=nf>remove_temp_files</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=n>myapp</span><span class=o>.</span><span class=n>remove_temp_files</span><span class=p>()</span></code></pre></section><section id=exam-decorators-around><h5><span class=\"docutils literal\">exam.decorators.around</span></h5><p>Methods decorated with <span class=\"docutils literal\">@around</span> act as a context manager around each test method.  In your around method, you\u2019re responsible for calling <span class=\"docutils literal\">yield</span> where you want the test case to run:</p><pre><code><span class=kn>from</span> <span class=nn>exam.decorators</span> <span class=kn>import</span> <span class=n>around</span><span class=w></span><span class=kn>from</span> <span class=nn>exam.cases</span> <span class=kn>import</span> <span class=n>Exam</span><span class=w></span><span class=k>class</span> <span class=nc>MyTest</span><span class=p>(</span><span class=n>Exam</span><span class=p>,</span> <span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=nd>@around</span><span class=w></span>    <span class=k>def</span> <span class=nf>run_in_transaction</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>        <span class=n>db</span><span class=o>.</span><span class=n>begin_transaction</span><span class=p>()</span><span class=w></span>        <span class=k>yield</span>  <span class=c1># Run the test</span><span class=w></span>        <span class=n>db</span><span class=o>.</span><span class=n>rollback_transaction</span><span class=p>()</span></code></pre><p><span class=\"docutils literal\">@around</span> also follows the same parent/child ordering rules as <span class=\"docutils literal\">@before</span> and <span class=\"docutils literal\">@after</span>, so parent <span class=\"docutils literal\">@arounds</span> will run (up until the <span class=\"docutils literal\">yield</span> statement), then child <span class=\"docutils literal\"><span class=pre>@around``s</span> will run.  After the test method has finished, however, the rest of the child's <span class=pre>``@around</span></span> will run, and then the parents\u2019.  This is done to preserve the normal behavior of nesting with context managers.</p></section><section id=exam-decorators-patcher><h5><span class=\"docutils literal\">exam.decorators.patcher</span></h5><p>The <span class=\"docutils literal\">@patcher</span> decorator is shorthand for the following boiler plate code:</p><pre><code><span class=kn>from</span> <span class=nn>mock</span> <span class=kn>import</span> <span class=n>patch</span><span class=w></span> <span class=k>def</span> <span class=nf>setUp</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>     <span class=bp>self</span><span class=o>.</span><span class=n>stats_patcher</span> <span class=o>=</span> <span class=n>patch</span><span class=p>(</span><span class=s1>'mylib.stats'</span><span class=p>,</span> <span class=n>new</span><span class=o>=</span><span class=n>dummy_stats</span><span class=p>)</span><span class=w></span>     <span class=bp>self</span><span class=o>.</span><span class=n>stats</span> <span class=o>=</span> <span class=bp>self</span><span class=o>.</span><span class=n>stats_patcher</span><span class=o>.</span><span class=n>start</span><span class=p>()</span><span class=w></span> <span class=k>def</span> <span class=nf>tearDown</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>     <span class=bp>self</span><span class=o>.</span><span class=n>stats_patcher</span><span class=o>.</span><span class=n>stop</span><span class=p>()</span></code></pre><p>Often, manually controlling a patch\u2019s start/stop is done to provide a test case property (here, <span class=\"docutils literal\">self.stats</span>) for the mock object you are patching with.  This is handy if you want the mock to have default behavior for most tests, but change it slightly for certain ones \u2013 i.e absorb all calls most of the time, but for certain tests have it raise an exception.</p><p>Using the <span class=\"docutils literal\">@patcher</span> decorator, the above code can simply be written as:</p><pre><code><span class=kn>from</span> <span class=nn>exam.decorators</span> <span class=kn>import</span> <span class=n>patcher</span><span class=w></span><span class=kn>from</span> <span class=nn>exam.cases</span> <span class=kn>import</span> <span class=n>Exam</span><span class=w></span><span class=k>class</span> <span class=nc>MyTest</span><span class=p>(</span><span class=n>Exam</span><span class=p>,</span> <span class=n>TestCase</span><span class=p>):</span><span class=w></span>   <span class=nd>@patcher</span><span class=p>(</span><span class=s1>'mylib.stats'</span><span class=p>)</span><span class=w></span>   <span class=k>def</span> <span class=nf>stats</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>       <span class=k>return</span> <span class=n>dummy_stats</span></code></pre><p>Exam takes care of starting and stopping the patcher appropriately, as well as constructing the <span class=\"docutils literal\">patch</span> object with the return value from the decorated method.</p><p>If you\u2019re happy with the default constructed mock object for a patch (<span class=\"docutils literal\">MagicMock</span>), then <span class=\"docutils literal\">patcher</span> can simply be used as an inline as a function inside the class body.  This method still starts and stops the patcher when needed, and returns the constructed <span class=\"docutils literal\">MagicMock</span> object, which you can set as a class attribute.  Exam will add the <span class=\"docutils literal\">MagicMock</span> object to the test case as an instance attribute automatically.</p><pre><code><span class=kn>from</span> <span class=nn>exam.decorators</span> <span class=kn>import</span> <span class=n>patcher</span><span class=w></span><span class=kn>from</span> <span class=nn>exam.cases</span> <span class=kn>import</span> <span class=n>Exam</span><span class=w></span><span class=k>class</span> <span class=nc>MyTest</span><span class=p>(</span><span class=n>Exam</span><span class=p>,</span> <span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=n>logger</span> <span class=o>=</span> <span class=n>patcher</span><span class=p>(</span><span class=s1>'coffee.logger'</span><span class=p>)</span></code></pre></section><section id=exam-decorators-patcher-object><h5><span class=\"docutils literal\">exam.decorators.patcher.object</span></h5><p>The <span class=\"docutils literal\">patcher.object</span> decorator provides the same features as the <span class=\"docutils literal\">patcher</span> decorator, but works with patching attributes of objects (similar to mock\u2019s <span class=\"docutils literal\">mock.patch.object</span>).  For example, here is how you would use patcher to patch the <span class=\"docutils literal\">objects</span> property of the <span class=\"docutils literal\">User</span> class:</p><pre><code><span class=kn>from</span> <span class=nn>exam.decorators</span> <span class=kn>import</span> <span class=n>patcher</span><span class=w></span><span class=kn>from</span> <span class=nn>exam.cases</span> <span class=kn>import</span> <span class=n>Exam</span><span class=w></span><span class=kn>from</span> <span class=nn>myapp</span> <span class=kn>import</span> <span class=n>User</span><span class=w></span><span class=k>class</span> <span class=nc>MyTest</span><span class=p>(</span><span class=n>Exam</span><span class=p>,</span> <span class=n>TestCase</span><span class=p>):</span><span class=w></span>    <span class=n>manager</span> <span class=o>=</span> <span class=n>patcher</span><span class=o>.</span><span class=n>object</span><span class=p>(</span><span class=n>User</span><span class=p>,</span> <span class=s1>'objects'</span><span class=p>)</span></code></pre><p>As with the vanilla <span class=\"docutils literal\">patcher</span>, in your test case, <span class=\"docutils literal\">self.manager</span> will be the mock object that <span class=\"docutils literal\">User.objects</span> was patched with.</p></section></section><section id=exam-helpers><h4><span class=\"docutils literal\">exam.helpers</span></h4><p>The <span class=\"docutils literal\">helpers</span> module features a collection of helper methods for common testing patterns:</p><section id=exam-helpers-track><h5><span class=\"docutils literal\">exam.helpers.track</span></h5><p>The <span class=\"docutils literal\">track</span> helper is intended to assist in tracking call orders of independent mock objects.  <span class=\"docutils literal\">track</span> is called with kwargs, where the key is the mock name (a string) and the value is the mock object you want to track.  <span class=\"docutils literal\">track</span> returns a newly constructed <span class=\"docutils literal\">MagicMock</span> object, with each mock object attached at a attribute named after the mock name.</p><p>For example, below <span class=\"docutils literal\">track()</span> creates a new mock with <span class=\"docutils literal\">tracker.cool` as the ``cool_mock</span> and <span class=\"docutils literal\">tracker.heat</span> as the <span class=\"docutils literal\">heat_mock</span>.</p><pre><code><span class=kn>from</span> <span class=nn>exam.helpers</span> <span class=kn>import</span> <span class=n>track</span><span class=w></span><span class=nd>@mock</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=s1>'coffee.roast.heat'</span><span class=p>)</span><span class=w></span><span class=nd>@mock</span><span class=o>.</span><span class=n>patch</span><span class=p>(</span><span class=s1>'coffee.roast.cool'</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>test_roasting_heats_then_cools_beans</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>cool_mock</span><span class=p>,</span> <span class=n>heat_mock</span><span class=p>):</span><span class=w></span>    <span class=n>tracker</span> <span class=o>=</span> <span class=n>track</span><span class=p>(</span><span class=n>heat</span><span class=o>=</span><span class=n>heat_mock</span><span class=p>,</span> <span class=n>cool</span><span class=o>=</span><span class=n>cool_mock</span><span class=p>)</span><span class=w></span>    <span class=n>roast</span><span class=o>.</span><span class=n>perform</span><span class=p>()</span><span class=w></span>    <span class=n>tracker</span><span class=o>.</span><span class=n>assert_has_calls</span><span class=p>([</span><span class=n>mock</span><span class=o>.</span><span class=n>call</span><span class=o>.</span><span class=n>heat</span><span class=p>(),</span> <span class=n>mock</span><span class=o>.</span><span class=n>call</span><span class=o>.</span><span class=n>cool</span><span class=p>()])</span></code></pre></section><section id=exam-helpers-rm-f><h5><span class=\"docutils literal\">exam.helpers.rm_f</span></h5><p>This is a simple helper that just removes all folders and files at a path:</p><pre><code><span class=kn>from</span> <span class=nn>exam.helpers</span> <span class=kn>import</span> <span class=n>rm_f</span><span class=w></span><span class=n>rm_f</span><span class=p>(</span><span class=s1>'/folder/i/do/not/care/about'</span><span class=p>)</span></code></pre></section><section id=exam-helpers-mock-import><h5><span class=\"docutils literal\">exam.helpers.mock_import</span></h5><p>Removes most of the boiler plate code needed to mock imports, which usually consists of making a <span class=\"docutils literal\">patch.dict</span> from <span class=\"docutils literal\">sys.modules</span>.  Instead, the <span class=\"docutils literal\">patch_import</span> helper can simply be used as a decorator or context manager for when certain modules are imported.</p><pre><code><span class=kn>from</span> <span class=nn>exam.helpers</span> <span class=kn>import</span> <span class=n>mock_import</span><span class=w></span><span class=k>with</span> <span class=n>mock_import</span><span class=p>(</span><span class=s1>'os.path'</span><span class=p>)</span> <span class=k>as</span> <span class=n>my_os_path</span><span class=p>:</span><span class=w></span>    <span class=kn>import</span> <span class=nn>os.path</span> <span class=k>as</span> <span class=nn>imported_os_path</span><span class=w></span>    <span class=k>assert</span> <span class=n>my_os_path</span> <span class=ow>is</span> <span class=n>imported_os_path</span></code></pre><p><span class=\"docutils literal\">mock_import</span> can also be used as a decorator, which passed the mock value tothe testing method (like a normal <span class=\"docutils literal\">@patch</span>) decorator:</p><pre><code><span class=kn>from</span> <span class=nn>exam.helpers</span> <span class=kn>import</span> <span class=n>mock_import</span><span class=w></span><span class=nd>@mock_import</span><span class=p>(</span><span class=s1>'os.path'</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>test_method</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>    <span class=kn>import</span> <span class=nn>os.path</span> <span class=k>as</span> <span class=nn>imported_os_path</span><span class=w></span>    <span class=k>assert</span> <span class=n>my_os_path</span> <span class=ow>is</span> <span class=n>imported_os_path</span></code></pre></section><section id=exam-helpers-effect><h5><span class=\"docutils literal\">exam.helpers.effect</span></h5><p>Helper class that is itself callable, whose return values when called are configured via the tuples passed in to the constructor. Useful to build <span class=\"docutils literal\">side_effect</span> callables for Mock objects. Raises TypeError if called with arguments that it was not configured with:</p><blockquote><pre>&gt;&gt;&gt; from exam.objects import call, effect&gt;&gt;&gt; side_effect = effect((call(1), 'with 1'), (call(2), 'with 2'))&gt;&gt;&gt; side_effect(1)'with 1'&gt;&gt;&gt; side_effect(2)'with 2'</pre></blockquote><p>Call argument equality is checked via equality (==) of the <span class=\"docutils literal\">call`</span> object, which is the 0th item of the configuration tuple passed in to the <span class=\"docutils literal\">effect</span> constructor.  By default, <span class=\"docutils literal\">call</span> objects are just <span class=\"docutils literal\">mock.call</span> objects.</p><p>If you would like to customize this behavior, subclass <cite>effect</cite> and redefine your own <cite>call_class</cite> class variable.  I.e.</p><pre><code><span class=k>class</span> <span class=nc>myeffect</span><span class=p>(</span><span class=n>effect</span><span class=p>):</span><span class=w></span>    <span class=n>call_class</span> <span class=o>=</span> <span class=n>my_call_class</span></code></pre></section></section><section id=exam-mock><h4><span class=\"docutils literal\">exam.mock</span></h4><p>Exam has a subclass of the normal <span class=\"docutils literal\">mock.Mock</span> object that adds a few more useful methods to your mock objects.  Use it in place of a normal <span class=\"docutils literal\">Mock</span> object:</p><pre><code><span class=kn>from</span> <span class=nn>exam.mock</span> <span class=kn>import</span> <span class=n>Mock</span><span class=w></span><span class=n>mock_user</span> <span class=o>=</span> <span class=n>Mock</span><span class=p>(</span><span class=n>spec</span><span class=o>=</span><span class=n>User</span><span class=p>)</span></code></pre><p>The subclass has the following extra methods:</p><ul class=simple><li><p><span class=\"docutils literal\">assert_called()</span> - Asserts the mock was called at least once.</li><li><p><span class=\"docutils literal\">assert_not_called()</span> - Asserts the mock has never been called.</li><li><p><span class=\"docutils literal\"><span class=pre>assert_not_called_with(*args,</span> **kwargs)</span> - Asserts the mock was not most recently called with the specified <span class=\"docutils literal\">*args</span> and <span class=\"docutils literal\">**kwargs</span>.</li><li><p><span class=\"docutils literal\"><span class=pre>assert_not_called_once_with(*args,</span> **kwargs)</span> - Asserts the mock has only every been called once with the specified <span class=\"docutils literal\">*args</span> and <span class=\"docutils literal\">**kwargs</span>.</li><li><p><span class=\"docutils literal\"><span class=pre>assert_not_any_call(*args,</span> **kwargs)</span> - Asserts the mock has never been called with the specified <span class=\"docutils literal\">*args</span> and <span class=\"docutils literal\">**kwargs</span>.</li></ul></section><section id=exam-fixtures><h4><span class=\"docutils literal\">exam.fixtures</span></h4><p>Helpful fixtures that you may want to use in your tests:</p><ul class=simple><li><p><span class=\"docutils literal\">exam.fixtures.two_px_square_image</span> - Image data as a string of a 2px square image.</li><li><p><span class=\"docutils literal\">exam.fixtures.one_px_spacer</span> - Image data as a string of a 1px square spacer image.</li></ul></section><section id=exam-objects><h4><span class=\"docutils literal\">exam.objects</span></h4><p>Useful objects for use in testing:</p><p><span class=\"docutils literal\">exam.objects.noop</span> - callable object that always returns <span class=\"docutils literal\">None</span>. no matter how it was called.</p></section><section id=exam-asserts><h4><span class=\"docutils literal\">exam.asserts</span></h4><p>The <cite>asserts</cite> module contains an <cite>AssertsMixin</cite> class, which is mixed into the main <cite>Exam</cite> test case mixin.  It contains additional asserts beyond the ones in Python\u2019s <cite>unittest</cite>.</p><section id=assertchanges><h5><span class=\"docutils literal\">assertChanges</span></h5><p>Used when you want to assert that a section of code changes a value.  For example, imagine if you had a function that changed a soldier\u2019s rank.</p><p>To properly test this, you should save that soldier\u2019s rank to a temporary variable, then run the function to change the rank, and then finally assert that the rank is the new expected value, as well as <strong>not</strong> the old value:</p><pre><code><span class=n>test_changes_rank</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>    <span class=n>old_rank</span> <span class=o>=</span> <span class=bp>self</span><span class=o>.</span><span class=n>soldier</span><span class=o>.</span><span class=n>rank</span><span class=w></span>    <span class=n>promote</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>soldier</span><span class=p>,</span> <span class=s1>'general'</span><span class=p>)</span><span class=w></span>    <span class=bp>self</span><span class=o>.</span><span class=n>assertEqual</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>soldier</span><span class=o>.</span><span class=n>rank</span><span class=p>,</span> <span class=s1>'general'</span><span class=p>)</span><span class=w></span>    <span class=bp>self</span><span class=o>.</span><span class=n>assertNotEqual</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>soldier</span><span class=o>.</span><span class=n>rank</span><span class=p>,</span> <span class=n>old_rank</span><span class=p>)</span></code></pre><p>Checking the old rank is not the same is the new rank is important.  If, for some reason there is a bug or something to where <span class=\"docutils literal\">self.soldier</span> is created with the rank of <span class=\"docutils literal\">general</span>, but <span class=\"docutils literal\">promote</span> is not working, this test would still pass!</p><p>To solve this, you can use Exam\u2019s <span class=\"docutils literal\">assertChanges</span>:</p><pre><code><span class=k>def</span> <span class=nf>test_changes_rank</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>    <span class=k>with</span> <span class=bp>self</span><span class=o>.</span><span class=n>assertChanges</span><span class=p>(</span><span class=nb>getattr</span><span class=p>,</span> <span class=bp>self</span><span class=o>.</span><span class=n>soldier</span><span class=p>,</span> <span class=s1>'rank'</span><span class=p>,</span> <span class=n>after</span><span class=o>=</span><span class=s1>'general'</span><span class=p>):</span><span class=w></span>        <span class=n>promote</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>soldier</span><span class=p>,</span> <span class=s1>'general'</span><span class=p>)</span></code></pre><p>This assert is doing a few things.</p><ol><li><p>It asserts that the rank once the context is run is the expected <span class=\"docutils literal\">general</span>.</li><li><p>It asserts that the context <strong>changes</strong> the value of <span class=\"docutils literal\">self.soldier.rank</span>.</li><li><p>It doesn\u2019t actually care what the old value of <span class=\"docutils literal\">self.soldier.rank</span> was, as long as it changed when the context was run.</li></ol><p>The definition of <span class=\"docutils literal\">assertChanges</span> is:</p><pre><code><span class=k>def</span> <span class=nf>assertChanges</span><span class=p>(</span><span class=n>thing</span><span class=p>,</span> <span class=o>*</span><span class=n>args</span><span class=p>,</span> <span class=o>**</span><span class=n>kwargs</span><span class=p>)</span></code></pre><ol><li><p>You pass it a <span class=\"docutils literal\">thing</span>, which which be a callable.</li><li><p><span class=\"docutils literal\">assertChanges</span> then calls your <span class=\"docutils literal\">thing</span> with any <span class=\"docutils literal\">*args</span> and <span class=\"docutils literal\">**kwargs</span> additionally passed in and captures the value as the \u201cbefore\u201d value.</li><li><p>The context is run, and then the callable is captured again as the \u201cafter\u201d value.</li><li><p>If before and after are not different, an <span class=\"docutils literal\">AssertionError</span> is raised.</li><li><p>Additionally, if the special kwarg <span class=\"docutils literal\">before</span> or <span class=\"docutils literal\">after</span> are passed, those values are extracted and saved.  In this case an <span class=\"docutils literal\">AssertionError</span> can also be raised if the \u201cbefore\u201d and/or \u201cafter\u201d values provided do not match their extracted values.</li></ol></section><section id=assertdoesnotchange><h5><span class=\"docutils literal\">assertDoesNotChange</span></h5><p>Similar to <span class=\"docutils literal\">assertChanges</span>, <span class=\"docutils literal\">assertDoesNotChange</span> asserts that the code inside the context does not change the value from the callable:</p><pre><code><span class=k>def</span> <span class=nf>test_does_not_change_rank</span><span class=p>(</span><span class=bp>self</span><span class=p>):</span><span class=w></span>    <span class=k>with</span> <span class=bp>self</span><span class=o>.</span><span class=n>assertDoesNotChange</span><span class=p>(</span><span class=nb>getattr</span><span class=p>,</span> <span class=bp>self</span><span class=o>.</span><span class=n>soldier</span><span class=p>,</span> <span class=s1>'rank'</span><span class=p>):</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>soldier</span><span class=o>.</span><span class=n>march</span><span class=p>()</span></code></pre><p>Unlike <span class=\"docutils literal\">assertChanges</span>, <span class=\"docutils literal\">assertDoesNotChange</span> does not take <span class=\"docutils literal\">before</span> or <span class=\"docutils literal\">after</span> kwargs.  It simply asserts that the value of the callable did not change when the context was run.</p></section></section></section><section id=license><h3>License</h3><p>Exam is MIT licensed.  Please see the <span class=\"docutils literal\">LICENSE</span> file for details.</p></section></section>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/fluxx/exam\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/exam\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT</p>    <p><strong>Author:</strong> <a href=\"mailto:jeff.pollard@gmail.com\">Jeff Pollard</a></p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/Fluxx/\" aria-label=\"Fluxx\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/7a529687ccb5be7ac192435ef92b0296c37b24e1/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f62393036326137303836656531383364376631346539646563663035663861623f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for Fluxx from gravatar.com\" title=\"Avatar for Fluxx from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            Fluxx          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2\">            Python :: 2          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2.6\">            Python :: 2.6          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2.7\">            Python :: 2.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.2\">            Python :: 3.2          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.3\">            Python :: 3.3          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/exam/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.10.6/\">                <p class=\"release__version\">                  0.10.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-05-26T21:11:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 26, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.10.5/\">                <p class=\"release__version\">                  0.10.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2014-08-07T20:54:24+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 7, 2014</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.10.4/\">                <p class=\"release__version\">                  0.10.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2014-05-07T15:07:55+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 7, 2014</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.10.3/\">                <p class=\"release__version\">                  0.10.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2014-03-13T03:43:51+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 13, 2014</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.10.2/\">                <p class=\"release__version\">                  0.10.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-07-09T02:25:57+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 9, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.10.1/\">                <p class=\"release__version\">                  0.10.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-07-06T16:59:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 6, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.10.0/\">                <p class=\"release__version\">                  0.10.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-04-28T22:28:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 28, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.9.0/\">                <p class=\"release__version\">                  0.9.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-03-06T18:48:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 6, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.8.0/\">                <p class=\"release__version\">                  0.8.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-02-22T18:31:13+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 22, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.7.0/\">                <p class=\"release__version\">                  0.7.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-02-02T00:49:33+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 2, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.6.2/\">                <p class=\"release__version\">                  0.6.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-01-26T00:12:15+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 26, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.6.1/\">                <p class=\"release__version\">                  0.6.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-01-21T20:59:05+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 21, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.6.0/\">                <p class=\"release__version\">                  0.6.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-01-19T22:53:27+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 19, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.5.3/\">                <p class=\"release__version\">                  0.5.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2013-01-08T05:01:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 8, 2013</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.5.2/\">                <p class=\"release__version\">                  0.5.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2012-12-21T22:14:19+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 21, 2012</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.5.1/\">                <p class=\"release__version\">                  0.5.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2012-12-12T23:05:47+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 12, 2012</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.5.0/\">                <p class=\"release__version\">                  0.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2012-12-10T22:56:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 10, 2012</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.4.2/\">                <p class=\"release__version\">                  0.4.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2012-12-06T01:41:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 6, 2012</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.4.1/\">                <p class=\"release__version\">                  0.4.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2012-11-30T22:46:58+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 30, 2012</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.4.0/\">                <p class=\"release__version\">                  0.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2012-11-30T20:38:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 30, 2012</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.3.1/\">                <p class=\"release__version\">                  0.3.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2012-11-27T21:34:47+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 27, 2012</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.3.0/\">                <p class=\"release__version\">                  0.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2012-11-26T06:33:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 26, 2012</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.2.0/\">                <p class=\"release__version\">                  0.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2012-10-30T21:49:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 30, 2012</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/exam/0.1.0/\">                <p class=\"release__version\">                  0.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2012-10-22T20:14:02+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 22, 2012</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/c7/bd/c15ce029540bb1b551af83c0df502ba47e019ce7132a65db046ad16b8eda/exam-0.10.6.tar.gz\">          exam-0.10.6.tar.gz        </a>        (15.0 kB        <a href=\"#copy-hash-modal-4c293477-aebb-4819-98b9-cd26cc383ea2\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2016-05-26T21:11:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 26, 2016</time>          <code>source</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-4c293477-aebb-4819-98b9-cd26cc383ea2\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for exam-0.10.6.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for exam-0.10.6.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">0c2da07ebc1c7b292721b0585bd43b282c7bb3287d33805e9934166f73e11789</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">0bf84acc2427a8a3d58d13d7297ff84a</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">c7bdc15ce029540bb1b551af83c0df502ba47e019ce7132a65db046ad16b8eda</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "jinja2schema",
  "url": "https://jinja2schema.readthedocs.io",
  "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\">  <head>    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />        <title>jinja2schema &#8212; jinja2schema 0.1.4 documentation</title>        <link rel=\"stylesheet\" href=\"_static/nature.css\" type=\"text/css\" />    <link rel=\"stylesheet\" href=\"_static/pygments.css\" type=\"text/css\" />    <link rel=\"stylesheet\" href=\"https://media.readthedocs.org/css/badge_only.css\" type=\"text/css\" />        <script type=\"text/javascript\">      var DOCUMENTATION_OPTIONS = {        URL_ROOT:    './',        VERSION:     '0.1.4',        COLLAPSE_INDEX: false,        FILE_SUFFIX: '.html',        HAS_SOURCE:  true,        SOURCELINK_SUFFIX: '.txt'      };    </script>    <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/jquery/jquery-2.0.3.min.js\"></script>    <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/jquery/jquery-migrate-1.2.1.min.js\"></script>    <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/underscore.js\"></script>    <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/doctools.js\"></script>    <script type=\"text/javascript\" src=\"https://media.readthedocs.org/javascript/readthedocs-doc-embed.js\"></script>    <link rel=\"index\" title=\"Index\" href=\"genindex.html\" />    <link rel=\"search\" title=\"Search\" href=\"search.html\" />    <link rel=\"next\" title=\"jinja2schema.core\" href=\"internals.html\" />   <!-- RTD Extra Head --><!-- Always link to the latest version, as canonical.http://docs.readthedocs.org/en/latest/canonical.html--><link rel=\"canonical\" href=\"http://jinja2schema.readthedocs.io/en/latest/\" /><link rel=\"stylesheet\" href=\"https://media.readthedocs.org/css/readthedocs-doc-embed.css\" type=\"text/css\" /><script type=\"text/javascript\" src=\"_static/readthedocs-data.js\"></script><!-- Add page-specific data, which must exist in the page js, not global --><script type=\"text/javascript\">READTHEDOCS_DATA['page'] = 'index' READTHEDOCS_DATA['source_suffix'] = '.rst'</script><script type=\"text/javascript\" src=\"_static/readthedocs-dynamic-include.js\"></script><!-- end RTD <extrahead> --></head>  <body role=\"document\">    <div class=\"related\" role=\"navigation\" aria-label=\"related navigation\">      <h3>Navigation</h3>      <ul>        <li class=\"right\" style=\"margin-right: 10px\">          <a href=\"genindex.html\" title=\"General Index\"             accesskey=\"I\">index</a></li>        <li class=\"right\" >          <a href=\"py-modindex.html\" title=\"Python Module Index\"             >modules</a> |</li>        <li class=\"right\" >          <a href=\"internals.html\" title=\"jinja2schema.core\"             accesskey=\"N\">next</a> |</li>        <li class=\"nav-item nav-item-0\"><a href=\"#\">jinja2schema 0.1.4 documentation</a> &#187;</li>       </ul>    </div>      <div class=\"document\">      <div class=\"documentwrapper\">        <div class=\"bodywrapper\">          <div class=\"body\" role=\"main\">              <div class=\"section\" id=\"jinja2schema\"><h1>jinja2schema<a class=\"headerlink\" href=\"#jinja2schema\" title=\"Permalink to this headline\">\u00b6</a></h1><p>Release v0.1.4.</p><div class=\"section\" id=\"introduction\"><h2>Introduction<a class=\"headerlink\" href=\"#introduction\" title=\"Permalink to this headline\">\u00b6</a></h2><p>jinja2schema is a library for inferring types from <a class=\"reference external\" href=\"http://jinja.pocoo.org/docs/\">Jinja2</a> templates.</p><p>One of the possible usages of jinja2schema is to create a JSON schema of a contextexpected by the template and then use it to render an HTML form (using such JS librariesas <a class=\"reference external\" href=\"https://github.com/Textalk/angular-schema-form\">angular-schema-form</a>, <a class=\"reference external\" href=\"http://www.alpacajs.org/\">Alpaca</a> or <a class=\"reference external\" href=\"https://github.com/jdorn/json-editor\">JSON Editor</a>) or to validate a user input.</p><p>The library is in an early stage of development. Although the code is extensively tested,please be prepared for bugs or inconsistencies and if you find some,let the author know by <a class=\"reference external\" href=\"https://github.com/aromanovich/jinja2schema/issues\">opening a ticket</a>.</p></div><div class=\"section\" id=\"examples\"><h2>Examples<a class=\"headerlink\" href=\"#examples\" title=\"Permalink to this headline\">\u00b6</a></h2><p>Let&#8217;s start with inferring types from some expressions:</p><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">jinja2schema</span> <span class=\"k\">import</span> <span class=\"n\">infer</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">&#39;{{ x }}&#39;</span><span class=\"p\">)</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"go\">{&#39;x&#39;: &lt;scalar&gt;}</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"go\">&lt;class &#39;jinja2schema.model.Dictionary&#39;&gt;</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"s1\">&#39;x&#39;</span><span class=\"p\">])</span><span class=\"go\">&lt;class &#39;jinja2schema.model.Scalar&#39;&gt;</span></pre></div></div><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">&#39;{{ x.a.b }}&#39;</span><span class=\"p\">)</span><span class=\"go\">{&#39;x&#39;: {&#39;a&#39;: {&#39;b&#39;: &lt;scalar&gt;}}}</span></pre></div></div><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">&#39;{{ xs|first }}&#39;</span><span class=\"p\">)</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"go\">{&#39;xs&#39;: [&lt;scalar&gt;]}</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"s1\">&#39;xs&#39;</span><span class=\"p\">])</span><span class=\"go\">&lt;class &#39;jinja2schema.model.List&#39;&gt;</span></pre></div></div><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">&#39;{{ (xs|first).name }}&#39;</span><span class=\"p\">)</span><span class=\"go\">{&#39;xs&#39;: [{&#39;name&#39;: &lt;scalar&gt;}]}</span></pre></div></div><p>jinja2schema supports all Jinja2 control structures:</p><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"gp\">... </span><span class=\"s1\">{</span><span class=\"si\">% f</span><span class=\"s1\">or row in items|batch(3, &#39;&amp;nbsp;&#39;) %}</span><span class=\"gp\">... </span><span class=\"s1\">    {</span><span class=\"si\">% f</span><span class=\"s1\">or column in row %}</span><span class=\"gp\">... </span><span class=\"s1\">        {</span><span class=\"si\">% i</span><span class=\"s1\">f column.has_title %}</span><span class=\"gp\">... </span><span class=\"s1\">            {{ column.title }}</span><span class=\"gp\">... </span><span class=\"s1\">        {</span><span class=\"si\">% e</span><span class=\"s1\">lse %}</span><span class=\"gp\">... </span><span class=\"s1\">            {{ column.desc|truncate(10) }}</span><span class=\"gp\">... </span><span class=\"s1\">        {</span><span class=\"si\">% e</span><span class=\"s1\">ndif %}</span><span class=\"gp\">... </span><span class=\"s1\">    {</span><span class=\"si\">% e</span><span class=\"s1\">ndfor %}</span><span class=\"gp\">... </span><span class=\"s1\">{</span><span class=\"si\">% e</span><span class=\"s1\">ndfor %}</span><span class=\"gp\">... </span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"p\">)</span><span class=\"go\">{</span><span class=\"go\">    &#39;items&#39;: [{</span><span class=\"go\">        &#39;desc&#39;: &lt;scalar&gt;,</span><span class=\"go\">        &#39;has_title&#39;: &lt;unknown&gt;,</span><span class=\"go\">        &#39;title&#39;: &lt;scalar&gt;</span><span class=\"go\">    }]</span><span class=\"go\">}</span></pre></div></div><p>It works correctly with nested scopes:</p><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"gp\">... </span><span class=\"s1\">{</span><span class=\"si\">% f</span><span class=\"s1\">or x in xs %}</span><span class=\"gp\">... </span><span class=\"s1\">    {</span><span class=\"si\">% f</span><span class=\"s1\">or x in ys %}</span><span class=\"gp\">... </span><span class=\"s1\">        {{ x.c }}</span><span class=\"gp\">... </span><span class=\"s1\">    {</span><span class=\"si\">% e</span><span class=\"s1\">ndfor %}</span><span class=\"gp\">... </span><span class=\"s1\">    {{ x.a }}</span><span class=\"gp\">... </span><span class=\"s1\">{</span><span class=\"si\">% e</span><span class=\"s1\">ndfor %}</span><span class=\"gp\">... </span><span class=\"s1\">{</span><span class=\"si\">% f</span><span class=\"s1\">or a in xs %}</span><span class=\"gp\">... </span><span class=\"s1\">    {{ a.b }}</span><span class=\"gp\">... </span><span class=\"s1\">{</span><span class=\"si\">% e</span><span class=\"s1\">ndfor %}</span><span class=\"gp\">... </span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"p\">)</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"go\">{</span><span class=\"go\">    &#39;xs&#39;: [{&#39;a&#39;: &lt;scalar&gt;, &#39;b&#39;: &lt;scalar&gt;}],</span><span class=\"go\">    &#39;ys&#39;: [{&#39;c&#39;: &lt;scalar&gt;}]</span><span class=\"go\">}</span></pre></div></div><p>jinja2schema supports macroses:</p><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"gp\">... </span><span class=\"s1\">{% macro user(login, name) %}</span><span class=\"gp\">... </span><span class=\"s1\">  {{ login }} {{ name.first }} {{ name.last }}</span><span class=\"gp\">... </span><span class=\"s1\">{</span><span class=\"si\">% e</span><span class=\"s1\">ndmacro %}</span><span class=\"gp\">... </span><span class=\"s1\">{</span><span class=\"si\">% f</span><span class=\"s1\">or user in users %}</span><span class=\"gp\">... </span><span class=\"s1\">  {{ user(user.login, user.name) }}</span><span class=\"gp\">... </span><span class=\"s1\">{</span><span class=\"si\">% e</span><span class=\"s1\">ndfor %}</span><span class=\"gp\">... </span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"p\">)</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"go\">{</span><span class=\"go\">    &#39;users&#39;: [{</span><span class=\"go\">        &#39;login&#39;: &lt;scalar&gt;</span><span class=\"go\">        &#39;name&#39;: {&#39;first&#39;: &lt;scalar&gt;, &#39;last&#39;: &lt;scalar&gt;}</span><span class=\"go\">    }]</span><span class=\"go\">}</span></pre></div></div><p>A result of <a class=\"reference internal\" href=\"#jinja2schema.infer\" title=\"jinja2schema.infer\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">jinja2schema.infer()</span></code></a> can be converted to <a class=\"reference external\" href=\"http://json-schema.org/\">JSON schema</a> using <a class=\"reference internal\" href=\"#jinja2schema.to_json_schema\" title=\"jinja2schema.to_json_schema\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">jinja2schema.to_json_schema()</span></code></a>.</p><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">to_json_schema</span><span class=\"p\">(</span><span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">&#39;{</span><span class=\"si\">% f</span><span class=\"s1\">or x in xs %}{{ x }}{</span><span class=\"si\">% e</span><span class=\"s1\">ndfor %}&#39;</span><span class=\"p\">))</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"go\">{</span><span class=\"go\">  &quot;type&quot;: &quot;object&quot;,</span><span class=\"go\">  &quot;properties&quot;: {</span><span class=\"go\">    &quot;xs&quot;: {</span><span class=\"go\">      &quot;type&quot;: &quot;array&quot;,</span><span class=\"go\">      &quot;title&quot;: &quot;xs&quot;,</span><span class=\"go\">      &quot;items&quot;: {</span><span class=\"go\">        &quot;title&quot;: &quot;x&quot;,</span><span class=\"go\">        &quot;anyOf&quot;: [</span><span class=\"go\">          {&quot;type&quot;: &quot;string&quot;},</span><span class=\"go\">          {&quot;type&quot;: &quot;number&quot;},</span><span class=\"go\">          {&quot;type&quot;: &quot;boolean&quot;},</span><span class=\"go\">          {&quot;type&quot;: &quot;null&quot;}</span><span class=\"go\">        ]</span><span class=\"go\">      }</span><span class=\"go\">    }</span><span class=\"go\">  },</span><span class=\"go\">  &quot;required&quot;: [&quot;xs&quot;]</span><span class=\"go\">}</span></pre></div></div><p>A more detailed representation of the structure can be obtained using <a class=\"reference internal\" href=\"internals.html#jinja2schema.util.debug_repr\" title=\"jinja2schema.util.debug_repr\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">jinja2schema.util.debug_repr()</span></code></a>.</p><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">jinja2schema.util</span> <span class=\"k\">import</span> <span class=\"n\">debug_repr</span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span> <span class=\"n\">debug_repr</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"go\">Dictionary(label=None, required=True, constant=False, linenos=[], {</span><span class=\"go\">    xs: List(label=xs, required=True, constant=False, linenos=[2],</span><span class=\"go\">            Dictionary(label=x, required=True, constant=False, linenos=[6], {</span><span class=\"go\">                b: Scalar(label=b, required=True, constant=False, linenos=[6])</span><span class=\"go\">            })</span><span class=\"go\">        )</span><span class=\"go\">    ys: List(label=ys, required=True, constant=False, linenos=[3],</span><span class=\"go\">            Dictionary(label=x, required=True, constant=False, linenos=[4], {</span><span class=\"go\">                a: Scalar(label=a, required=True, constant=False, linenos=[4])</span><span class=\"go\">            })</span><span class=\"go\">        )</span><span class=\"go\">})</span></pre></div></div></div><div class=\"section\" id=\"how-it-works\"><h2>How It Works<a class=\"headerlink\" href=\"#how-it-works\" title=\"Permalink to this headline\">\u00b6</a></h2><p>jinja2schema algorithm based on the following common sense assumptions.</p><div class=\"admonition note\"><p class=\"first admonition-title\">Note</p><p class=\"last\">This list is not exhausting and is a subject to change. Some of these &#8220;axioms&#8221; probablywill be customizable at some point in the future.</p></div><ul><li><p class=\"first\">If <code class=\"docutils literal\"><span class=\"pre\">x</span></code> is printed (<code class=\"docutils literal\"><span class=\"pre\">{{</span> <span class=\"pre\">x</span> <span class=\"pre\">}}</span></code>), <code class=\"docutils literal\"><span class=\"pre\">x</span></code> is a scalar: a string, a number or a boolean;</p></li><li><p class=\"first\">If <code class=\"docutils literal\"><span class=\"pre\">x</span></code> is used as an iterable in for loop (<code class=\"docutils literal\"><span class=\"pre\">{%</span> <span class=\"pre\">for</span> <span class=\"pre\">item</span> <span class=\"pre\">in</span> <span class=\"pre\">x</span> <span class=\"pre\">%}</span></code>) or used witha list filter (i.e., <code class=\"docutils literal\"><span class=\"pre\">x|first</span></code>), <code class=\"docutils literal\"><span class=\"pre\">x</span></code> is a list. If <code class=\"docutils literal\"><span class=\"pre\">x</span></code> is being indexed with an integer(<code class=\"docutils literal\"><span class=\"pre\">x[0]</span></code>) <code class=\"docutils literal\"><span class=\"pre\">x</span></code> is a list, dictionary or tuple (that behaviour can be adjusted using<a class=\"reference internal\" href=\"internals.html#jinja2schema.config.Config.TYPE_OF_VARIABLE_INDEXED_WITH_INTEGER_TYPE\" title=\"jinja2schema.config.Config.TYPE_OF_VARIABLE_INDEXED_WITH_INTEGER_TYPE\"><code class=\"xref py py-attr docutils literal\"><span class=\"pre\">jinja2schema.config.Config.TYPE_OF_VARIABLE_INDEXED_WITH_INTEGER_TYPE</span></code></a>);</p></li><li><p class=\"first\">If <code class=\"docutils literal\"><span class=\"pre\">x</span></code> is used with a dot (<code class=\"docutils literal\"><span class=\"pre\">x.field</span></code>) or being indexed with a string (<code class=\"docutils literal\"><span class=\"pre\">x['field']</span></code>),<code class=\"docutils literal\"><span class=\"pre\">x</span></code> is a dictionary.</p></li><li><p class=\"first\">A variable can only be used in the one role. So that a list or dictionary can not be printed,a string can not be indexed:</p><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"gp\">... </span><span class=\"s1\">{{ x }}</span><span class=\"gp\">... </span><span class=\"s1\">{{ x.name }}</span><span class=\"gp\">... </span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"p\">)</span><span class=\"go\">jinja2schema.exceptions.MergeException: variable &quot;x&quot; (lines: 2, used as scalar)</span><span class=\"go\">conflicts with variable &quot;x&quot; (lines: 3, used as dictionary)</span></pre></div></div></li><li><p class=\"first\">Lists are assumed to be homogeneous, meaning all elements of the same list are assumed tohave the same structure:</p><div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">infer</span><span class=\"p\">(</span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"gp\">... </span><span class=\"s1\">{</span><span class=\"si\">% s</span><span class=\"s1\">et xs = [</span><span class=\"gp\">... </span><span class=\"s1\">   1,</span><span class=\"gp\">... </span><span class=\"s1\">   </span><span class=\"si\">{}</span><span class=\"s1\"></span><span class=\"gp\">... </span><span class=\"s1\">] %}</span><span class=\"gp\">... </span><span class=\"s1\">&#39;&#39;&#39;</span><span class=\"p\">)</span><span class=\"go\">jinja2schema.exceptions.MergeException: unnamed variable (lines: 3, used as scalar)</span><span class=\"go\">conflicts with unnamed variable (lines: 4, used as dictionary)</span></pre></div></div></li></ul></div><div class=\"section\" id=\"installation\"><h2>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this headline\">\u00b6</a></h2><div class=\"highlight-sh\"><div class=\"highlight\"><pre><span></span>$ pip install jinja2schema</pre></div></div></div><div class=\"section\" id=\"api\"><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Permalink to this headline\">\u00b6</a></h2><p>To infer types from a template, simply call <a class=\"reference internal\" href=\"#jinja2schema.infer\" title=\"jinja2schema.infer\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">jinja2schema.infer()</span></code></a>.</p><dl class=\"function\"><dt id=\"jinja2schema.infer\"><code class=\"descclassname\">jinja2schema.</code><code class=\"descname\">infer</code><span class=\"sig-paren\">(</span><em>template</em>, <em>config=&lt;jinja2schema.config.Config object&gt;</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/jinja2schema/core.html#infer\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#jinja2schema.infer\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Returns a <a class=\"reference internal\" href=\"internals.html#jinja2schema.model.Dictionary\" title=\"jinja2schema.model.Dictionary\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">model.Dictionary</span></code></a> which reflects a structure of the context required by <code class=\"docutils literal\"><span class=\"pre\">template</span></code>.</p><table class=\"docutils field-list\" frame=\"void\" rules=\"none\"><col class=\"field-name\" /><col class=\"field-body\" /><tbody valign=\"top\"><tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\"><li><strong>template</strong> (<em>string</em>) &#8211; a template</li><li><strong>config</strong> (<a class=\"reference internal\" href=\"internals.html#jinja2schema.config.Config\" title=\"jinja2schema.config.Config\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">config.Config</span></code></a>) &#8211; a config</li></ul></td></tr><tr class=\"field-even field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first\"><a class=\"reference internal\" href=\"internals.html#jinja2schema.model.Dictionary\" title=\"jinja2schema.model.Dictionary\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">model.Dictionary</span></code></a></p></td></tr><tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first last\"><a class=\"reference internal\" href=\"internals.html#jinja2schema.exceptions.MergeException\" title=\"jinja2schema.exceptions.MergeException\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">exceptions.MergeException</span></code></a>, <a class=\"reference internal\" href=\"internals.html#jinja2schema.exceptions.InvalidExpression\" title=\"jinja2schema.exceptions.InvalidExpression\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">exceptions.InvalidExpression</span></code></a>,<a class=\"reference internal\" href=\"internals.html#jinja2schema.exceptions.UnexpectedExpression\" title=\"jinja2schema.exceptions.UnexpectedExpression\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">exceptions.UnexpectedExpression</span></code></a></p></td></tr></tbody></table></dd></dl><p>It&#8217;s logic can be tuned by specifying a custom <a class=\"reference internal\" href=\"internals.html#jinja2schema.config.Config\" title=\"jinja2schema.config.Config\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">jinja2schema.config.Config</span></code></a>.</p><div class=\"line-block\"><div class=\"line\"><br /></div></div><p>A <code class=\"xref py py-class docutils literal\"><span class=\"pre\">models.Dictionary</span></code> returned by <code class=\"docutils literal\"><span class=\"pre\">infer</span></code> can be converted toJSON schema using <a class=\"reference internal\" href=\"#jinja2schema.to_json_schema\" title=\"jinja2schema.to_json_schema\"><code class=\"xref py py-meth docutils literal\"><span class=\"pre\">jinja2schema.to_json_schema()</span></code></a> method.</p><dl class=\"function\"><dt id=\"jinja2schema.to_json_schema\"><code class=\"descclassname\">jinja2schema.</code><code class=\"descname\">to_json_schema</code><span class=\"sig-paren\">(</span><em>var</em>, <em>jsonschema_encoder=&lt;class 'jinja2schema.core.JSONSchemaDraft4Encoder'&gt;</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"_modules/jinja2schema/core.html#to_json_schema\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#jinja2schema.to_json_schema\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Returns JSON schema that describes <code class=\"docutils literal\"><span class=\"pre\">var</span></code>.</p><table class=\"docutils field-list\" frame=\"void\" rules=\"none\"><col class=\"field-name\" /><col class=\"field-body\" /><tbody valign=\"top\"><tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\"><li><strong>var</strong> (<a class=\"reference internal\" href=\"internals.html#jinja2schema.model.Variable\" title=\"jinja2schema.model.Variable\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">model.Variable</span></code></a>) &#8211; a variable</li><li><strong>jsonschema_encoder</strong> (subclass of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">JSONSchemaEncoder</span></code>) &#8211; JSON schema encoder</li></ul></td></tr><tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></code></p></td></tr></tbody></table></dd></dl><p>Standard JSON schema encoders are:</p><dl class=\"class\"><dt id=\"jinja2schema.JSONSchemaDraft4Encoder\"><em class=\"property\">class </em><code class=\"descclassname\">jinja2schema.</code><code class=\"descname\">JSONSchemaDraft4Encoder</code><a class=\"reference internal\" href=\"_modules/jinja2schema/core.html#JSONSchemaDraft4Encoder\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#jinja2schema.JSONSchemaDraft4Encoder\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Extensible JSON schema encoder for <a class=\"reference internal\" href=\"internals.html#jinja2schema.model.Variable\" title=\"jinja2schema.model.Variable\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">model.Variable</span></code></a>.</p></dd></dl><dl class=\"class\"><dt id=\"jinja2schema.StringJSONSchemaDraft4Encoder\"><em class=\"property\">class </em><code class=\"descclassname\">jinja2schema.</code><code class=\"descname\">StringJSONSchemaDraft4Encoder</code><a class=\"reference internal\" href=\"_modules/jinja2schema/core.html#StringJSONSchemaDraft4Encoder\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#jinja2schema.StringJSONSchemaDraft4Encoder\" title=\"Permalink to this definition\">\u00b6</a></dt><dd><p>Encodes <a class=\"reference internal\" href=\"internals.html#jinja2schema.model.Unknown\" title=\"jinja2schema.model.Unknown\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">model.Unknown</span></code></a> and <a class=\"reference internal\" href=\"internals.html#jinja2schema.model.Scalar\" title=\"jinja2schema.model.Scalar\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">model.Scalar</span></code></a> (but not it&#8217;s subclasses &#8211;<a class=\"reference internal\" href=\"internals.html#jinja2schema.model.String\" title=\"jinja2schema.model.String\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">model.String</span></code></a>, <a class=\"reference internal\" href=\"internals.html#jinja2schema.model.Number\" title=\"jinja2schema.model.Number\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">model.Number</span></code></a> or <a class=\"reference internal\" href=\"internals.html#jinja2schema.model.Boolean\" title=\"jinja2schema.model.Boolean\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">model.Boolean</span></code></a>) variables as strings.</p><p>Useful for rendering forms using resulting JSON schema, as most of form-renderingtools do not support &#8220;anyOf&#8221; validator.</p></dd></dl><div class=\"line-block\"><div class=\"line\"><br /></div></div><p>If you need more than that, please take a look at <a class=\"reference internal\" href=\"#internals\"><span class=\"std std-ref\">Internals</span></a>.</p></div><div class=\"section\" id=\"internals\"><span id=\"id1\"></span><h2>Internals<a class=\"headerlink\" href=\"#internals\" title=\"Permalink to this headline\">\u00b6</a></h2><div class=\"toctree-wrapper compound\"><ul><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"internals.html\">jinja2schema.core</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"internals.html#jinja2schema-config\">jinja2schema.config</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"internals.html#jinja2schema-model\">jinja2schema.model</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"internals.html#jinja2schema-mergers\">jinja2schema.mergers</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"internals.html#jinja2schema-exceptions\">jinja2schema.exceptions</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"internals.html#jinja2schema-util\">jinja2schema.util</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"internals.html#jinja2schema-visitors-stmt\">jinja2schema.visitors.stmt</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"internals.html#jinja2schema-visitors-expr\">jinja2schema.visitors.expr</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"internals.html#jinja2schema-visitors-util\">jinja2schema.visitors.util</a></li></ul></div></div><div class=\"section\" id=\"contributing\"><h2>Contributing<a class=\"headerlink\" href=\"#contributing\" title=\"Permalink to this headline\">\u00b6</a></h2><p>The project is hosted on <a class=\"reference external\" href=\"https://github.com/aromanovich/jinja2schema\">GitHub</a>.Please feel free to send a pull request or open an issue.</p><div class=\"section\" id=\"running-the-tests\"><h3>Running the Tests<a class=\"headerlink\" href=\"#running-the-tests\" title=\"Permalink to this headline\">\u00b6</a></h3><div class=\"highlight-sh\"><div class=\"highlight\"><pre><span></span>$ pip install -r ./requirements-dev.txt$ ./test.sh</pre></div></div></div></div></div>          </div>        </div>      </div>      <div class=\"sphinxsidebar\" role=\"navigation\" aria-label=\"main navigation\">        <div class=\"sphinxsidebarwrapper\">  <h3><a href=\"#\">Table Of Contents</a></h3>  <ul><li><a class=\"reference internal\" href=\"#\">jinja2schema</a><ul><li><a class=\"reference internal\" href=\"#introduction\">Introduction</a></li><li><a class=\"reference internal\" href=\"#examples\">Examples</a></li><li><a class=\"reference internal\" href=\"#how-it-works\">How It Works</a></li><li><a class=\"reference internal\" href=\"#installation\">Installation</a></li><li><a class=\"reference internal\" href=\"#api\">API</a></li><li><a class=\"reference internal\" href=\"#internals\">Internals</a></li><li><a class=\"reference internal\" href=\"#contributing\">Contributing</a><ul><li><a class=\"reference internal\" href=\"#running-the-tests\">Running the Tests</a></li></ul></li></ul></li></ul>  <h4>Next topic</h4>  <p class=\"topless\"><a href=\"internals.html\"                        title=\"next chapter\">jinja2schema.core</a></p>  <div role=\"note\" aria-label=\"source link\">    <h3>This Page</h3>    <ul class=\"this-page-menu\">      <li><a href=\"_sources/index.rst.txt\"            rel=\"nofollow\">Show Source</a></li>    </ul>   </div><div id=\"searchbox\" style=\"display: none\" role=\"search\">  <h3>Quick search</h3>    <form class=\"search\" action=\"search.html\" method=\"get\">      <div><input type=\"text\" name=\"q\" /></div>      <div><input type=\"submit\" value=\"Go\" /></div>      <input type=\"hidden\" name=\"check_keywords\" value=\"yes\" />      <input type=\"hidden\" name=\"area\" value=\"default\" />    </form></div><script type=\"text/javascript\">$('#searchbox').show(0);</script>        </div>      </div>      <div class=\"clearer\"></div>    </div>    <div class=\"related\" role=\"navigation\" aria-label=\"related navigation\">      <h3>Navigation</h3>      <ul>        <li class=\"right\" style=\"margin-right: 10px\">          <a href=\"genindex.html\" title=\"General Index\"             >index</a></li>        <li class=\"right\" >          <a href=\"py-modindex.html\" title=\"Python Module Index\"             >modules</a> |</li>        <li class=\"right\" >          <a href=\"internals.html\" title=\"jinja2schema.core\"             >next</a> |</li>        <li class=\"nav-item nav-item-0\"><a href=\"#\">jinja2schema 0.1.4 documentation</a> &#187;</li>       </ul>    </div>    <div class=\"footer\" role=\"contentinfo\">        &#169; Copyright 2014, Anton Romanovich.      Created using <a href=\"http://sphinx-doc.org/\">Sphinx</a> 1.5.3.    </div>  </body></html>",
  "embeddings": []
}
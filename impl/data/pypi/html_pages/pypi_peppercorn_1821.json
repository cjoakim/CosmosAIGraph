{
  "libtype": "pypi",
  "libname": "peppercorn",
  "url": "https://docs.pylonsproject.org/projects/peppercorn/en/latest/",
  "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\">  <head>    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />    <title>Peppercorn &#8212; peppercorn 0.6 documentation</title>    <link rel=\"stylesheet\" href=\"_static/pylons.css\" type=\"text/css\" />    <link rel=\"stylesheet\" href=\"_static/pygments.css\" type=\"text/css\" />    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://assets.readthedocs.org/static/css/badge_only.css\" />    <script type=\"text/javascript\" id=\"documentation_options\" data-url_root=\"./\" src=\"_static/documentation_options.js\"></script>    <script type=\"text/javascript\" src=\"_static/jquery.js\"></script>    <script type=\"text/javascript\" src=\"_static/underscore.js\"></script>    <script type=\"text/javascript\" src=\"_static/doctools.js\"></script>    <script type=\"text/javascript\" src=\"_static/language_data.js\"></script>    <script async=\"async\" type=\"text/javascript\" src=\"https://assets.readthedocs.org/static/javascript/readthedocs-doc-embed.js\"></script>    <link rel=\"canonical\" href=\"https://docs.pylonsproject.org/projects/peppercorn/en/latest/index.html\" />    <link rel=\"index\" title=\"Index\" href=\"genindex.html\" />    <link rel=\"search\" title=\"Search\" href=\"search.html\" />    <link rel=\"next\" title=\"API Documentation\" href=\"api.html\" /><link rel=\"stylesheet\" href=\"//static.pylonsproject.org/fonts/nobile/stylesheet.css\" type=\"text/css\" media=\"screen\" charset=\"utf-8\" /><link rel=\"stylesheet\" href=\"//static.pylonsproject.org/fonts/neuton/stylesheet.css\" type=\"text/css\" media=\"screen\" charset=\"utf-8\" /><!--[if lte IE 6]><link rel=\"stylesheet\" href=\"_static/ie6.css\" type=\"text/css\" media=\"screen\" charset=\"utf-8\" /><![endif]--><link rel=\"shortcut icon\" href=\"_static/pylons.ico\"/><link rel=\"canonical\" href=\"https://docs.pylonsproject.org/projects/peppercorn/en/latest/index.html\"/>  <!-- RTD Extra Head --><link rel=\"stylesheet\" href=\"https://assets.readthedocs.org/static/css/readthedocs-doc-embed.css\" type=\"text/css\" /><script type=\"application/json\" id=\"READTHEDOCS_DATA\">{\"ad_free\": false, \"api_host\": \"https://readthedocs.org\", \"build_date\": \"2022-04-22T10:08:18Z\", \"builder\": \"sphinx\", \"canonical_url\": null, \"commit\": \"e2dd9638\", \"docroot\": \"/docs/\", \"features\": {\"docsearch_disabled\": false}, \"global_analytics_code\": \"UA-17997319-1\", \"language\": \"en\", \"page\": \"index\", \"programming_language\": \"py\", \"project\": \"peppercorn\", \"proxied_api_host\": \"/_\", \"source_suffix\": \".rst\", \"subprojects\": {}, \"theme\": \"pylons\", \"user_analytics_code\": \"G-V7CJBMK66P\", \"version\": \"latest\"}</script><!--Using this variable directly instead of using `JSON.parse` is deprecated.The READTHEDOCS_DATA global variable will be removed in the future.--><script type=\"text/javascript\">READTHEDOCS_DATA = JSON.parse(document.getElementById('READTHEDOCS_DATA').innerHTML);</script><script type=\"text/javascript\" src=\"https://assets.readthedocs.org/static/javascript/readthedocs-analytics.js\" async=\"async\"></script><!-- end RTD <extrahead> --></head><body><a href=\"https://github.com/Pylons/peppercorn/blob/master/docs/index.rst\"><img style=\"position: absolute; top: 0; right: 0; border: 0;\" src=\"_static/edit-me-on-github.png\" alt=\"Edit me on GitHub\"></a><div class=\"header-small\"><div class=\"logo-small\"><a href=\"#\">      <img class=\"logo\" src=\"_static/pylons-small.png\" alt=\"Logo\"/></a>  </div></div>    <div class=\"related\" role=\"navigation\" aria-label=\"related navigation\">      <h3>Navigation</h3>      <ul>        <li class=\"right\" style=\"margin-right: 10px\">          <a href=\"genindex.html\" title=\"General Index\"             accesskey=\"I\">index</a></li>        <li class=\"right\" >          <a href=\"py-modindex.html\" title=\"Python Module Index\"             >modules</a> |</li>        <li class=\"right\" >          <a href=\"api.html\" title=\"API Documentation\"             accesskey=\"N\">next</a> |</li>    <li><a href=\"#\">peppercorn 0.6 documentation</a> &#187;</li>       </ul>    </div>      <div class=\"document\">      <div class=\"documentwrapper\">        <div class=\"bodywrapper\">          <div class=\"body\" role=\"main\">              <div class=\"section\" id=\"peppercorn\"><h1>Peppercorn<a class=\"headerlink\" href=\"#peppercorn\" title=\"Permalink to this headline\">\u00b6</a></h1><p>A library for converting a token stream into a data structure comprised ofsequences, mappings, and scalars, developed primarily for converting HTTPform post data into a richer data structure. It runs on Python 2.7, 3.4, 3.5,3.6 and 3.7.</p><p>Example &quot;bare&quot; usage:</p><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;project1&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;title&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Cool project&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;__start__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;series:mapping&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;date series 1&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;__start__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dates:sequence&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;__start__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;date:sequence&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;day&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;month&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;12&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;year&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2008&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;__end__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;date:sequence&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;__start__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;date:sequence&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;day&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;10&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;month&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;12&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;year&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2009&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;__end__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;date:sequence&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;__end__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dates:sequence&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;__start__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;:ignore&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;selectall&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;__end__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">(</span><span class=\"s1\">&#39;__end__&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;series:mapping&#39;</span><span class=\"p\">),</span><span class=\"gp\">... </span><span class=\"p\">]</span><span class=\"go\"> &gt;&gt;&gt; from peppercorn import parse</span><span class=\"go\"> &gt;&gt;&gt; return pprint.pprint(parse(fields))</span><span class=\"go\"> {&#39;series&#39;:</span><span class=\"go\">   {&#39;name&#39;:&#39;date series 1&#39;,</span><span class=\"go\">    &#39;dates&#39;: [[&#39;10&#39;, &#39;12&#39;, &#39;2008&#39;], [&#39;10&#39;, &#39;12&#39;, &#39;2009&#39;]]},</span><span class=\"go\">  &#39;name&#39;: &#39;project1&#39;,</span><span class=\"go\">  &#39;title&#39;: &#39;Cool project&#39;}</span></pre></div></div><p>A <code class=\"docutils literal notranslate\"><span class=\"pre\">__start__</span></code> token pushes a data structure onto the stack.  Itsvalue is composed of a name and a type, separated by a colon(e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">date:sequence</span></code>).  Four <code class=\"docutils literal notranslate\"><span class=\"pre\">__start__</span></code> token types exist:</p><ul><li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sequence</span></code>: begins a sequence.  Subsequent data elements will beadded as positional elements in the sequence.</p></li><li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">mapping</span></code>: begins a mapping.  Subsequent data elements will beadded as key/value pairs in the mapping.</p></li><li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">rename</span></code>: begins a special mode.  The value of the firstsubsequent data element in the stream will be used within itsparent sequence or mapping; any remaining data elements until thecorresponding <code class=\"docutils literal notranslate\"><span class=\"pre\">__end__</span></code> marker are ignored.</p><p>If the parent is a mapping, the key used in the mapping will be thename of the <code class=\"docutils literal notranslate\"><span class=\"pre\">rename</span></code> token (when <code class=\"docutils literal notranslate\"><span class=\"pre\">value=&quot;something:rename&quot;</span></code>, thekey will be <code class=\"docutils literal notranslate\"><span class=\"pre\">something</span></code>).  The value will be the value of thefirst data element.</p><p>If the parent is a sequence, the <code class=\"docutils literal notranslate\"><span class=\"pre\">rename</span></code> token name is ignored,and the value of the first data element is placed into the sequence.</p><p><code class=\"docutils literal notranslate\"><span class=\"pre\">rename</span></code> is mostly for radio controls; we surround sets of radiocontrols in a <code class=\"docutils literal notranslate\"><span class=\"pre\">rename</span></code> in order to provide a surrogate naming fora group of radio control elements.  Radio control <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>attributes are used by the browser to perform grouping, so eachradio control that is a member of a the same group must share a<code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> attribute value.  Moreover, this group name must be uniqueamongst all controls on the form to prevent &quot;select bleeding&quot;between radio controls.  However, on the server side, we'reuninterested in participating in this disambiguation process andit's easier to not know about it when the form is posted.  We justwant the selected value back in the pstruct to be recorded under awell-known name.  This name will be the name of the <code class=\"docutils literal notranslate\"><span class=\"pre\">rename</span></code> tokensurrounding some radio controls.</p></li><li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ignore</span></code>: The subsequent data elements will be ignored (not addedto the mapping or sequence) until the next <code class=\"docutils literal notranslate\"><span class=\"pre\">__end__</span></code> token. Usefulwhen forms include a field designed for client side scripting, suchas a &quot;select all&quot; checkbox in the middle of a series of checkboxes.</p></li></ul><p><code class=\"docutils literal notranslate\"><span class=\"pre\">__start__</span></code> markers can be unnamed; they are unnamed when theirvalue does not contain a colon.  For example, the start marker<code class=\"docutils literal notranslate\"><span class=\"pre\">('__start__',</span> <span class=\"pre\">'mapping')</span></code> begins a mapping with the implied name<code class=\"docutils literal notranslate\"><span class=\"pre\">''</span></code> (the empty string).</p><p>A sequence or mapping is closed when the corresponding <code class=\"docutils literal notranslate\"><span class=\"pre\">__end__</span></code>token for its <code class=\"docutils literal notranslate\"><span class=\"pre\">__start__</span></code> token is processed.  Mappings andsequences can be nested arbitrarily.  The value of an <code class=\"docutils literal notranslate\"><span class=\"pre\">__end__</span></code>token is optional; it is useful as documentation, but they arenot required by Peppercorn.</p><p>The data structure returned from <a class=\"reference internal\" href=\"api.html#peppercorn.parse\" title=\"peppercorn.parse\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">peppercorn.parse()</span></code></a> will alwaysbe a mapping.</p><p>To use Peppercorn in a web application, create a form that has thetokens in order.  For instance, the below form will generate the abovetoken stream:</p><div class=\"highlight-html notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">form</span> <span class=\"na\">action</span><span class=\"o\">=</span><span class=\"s\">&quot;.&quot;</span> <span class=\"na\">method</span><span class=\"o\">=</span><span class=\"s\">&quot;post&quot;</span> <span class=\"na\">enctype</span><span class=\"o\">=</span><span class=\"s\">&quot;multipart/form-data&quot;</span><span class=\"p\">&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;name&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;title&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;__start__&quot;</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;series:mapping&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;name&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;__start__&quot;</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;dates:sequence&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;__start__&quot;</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;date:sequence&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;day&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;month&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;year&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;__end__&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;__start__&quot;</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;date:sequence&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;day&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;month&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;year&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;__start__&quot;</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;sex:rename&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;radio&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;sex1&quot;</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;male&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;radio&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;sex1&quot;</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;female&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;__end__&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;__end__&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;__end__&quot;</span><span class=\"p\">/&gt;</span>  <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;__end__&quot;</span><span class=\"p\">/&gt;</span><span class=\"p\">&lt;/</span><span class=\"nt\">form</span><span class=\"p\">&gt;</span></pre></div></div><p>Then when the web post reaches the application, call the<a class=\"reference internal\" href=\"api.html#peppercorn.parse\" title=\"peppercorn.parse\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">peppercorn.parse()</span></code></a> function with the ordered field pairs.  For a<a class=\"reference internal\" href=\"glossary.html#term-webob\"><span class=\"xref std std-term\">WebOb</span></a> request, this means using the <code class=\"docutils literal notranslate\"><span class=\"pre\">items</span></code> method of aWebob MultiDict such as <code class=\"docutils literal notranslate\"><span class=\"pre\">request.POST</span></code>:</p><div class=\"highlight-python notranslate\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>12</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">POST</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span><span class=\"n\">peppercorn</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span></pre></div></td></tr></table></div><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code> attribute of a Python <code class=\"docutils literal notranslate\"><span class=\"pre\">cgi.FieldStorage</span></code> object canalso be used as a source of information:</p><div class=\"highlight-python notranslate\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>123456789</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[]</span><span class=\"k\">if</span> <span class=\"n\">fs</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">:</span>    <span class=\"k\">for</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"n\">fs</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">:</span>        <span class=\"k\">if</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">filename</span><span class=\"p\">:</span>            <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">))</span>        <span class=\"k\">else</span><span class=\"p\">:</span>            <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">))</span><span class=\"n\">peppercorn</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span></pre></div></td></tr></table></div><div class=\"toctree-wrapper compound\"><ul><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"api.html\">API Documentation</a></li><li class=\"toctree-l1\"><a class=\"reference internal\" href=\"glossary.html\">Glossary</a></li></ul></div><div class=\"section\" id=\"resources\"><h2>Resources<a class=\"headerlink\" href=\"#resources\" title=\"Permalink to this headline\">\u00b6</a></h2><p>See <a class=\"reference external\" href=\"https://web.archive.org/web/20170201033638/http://www.plope.com/peppercorn\">the plope.com article about the genesis of Peppercorn</a>.</p></div><div class=\"section\" id=\"indices-and-tables\"><h2>Indices and tables<a class=\"headerlink\" href=\"#indices-and-tables\" title=\"Permalink to this headline\">\u00b6</a></h2><ul class=\"simple\"><li><a class=\"reference internal\" href=\"genindex.html\"><span class=\"std std-ref\">Index</span></a></li><li><a class=\"reference internal\" href=\"py-modindex.html\"><span class=\"std std-ref\">Module Index</span></a></li><li><a class=\"reference internal\" href=\"search.html\"><span class=\"std std-ref\">Search Page</span></a></li></ul></div></div>          </div>        </div>      </div>      <div class=\"sphinxsidebar\" role=\"navigation\" aria-label=\"main navigation\">        <div class=\"sphinxsidebarwrapper\">  <h3><a href=\"#\">Table of Contents</a></h3>  <ul><li><a class=\"reference internal\" href=\"#\">Peppercorn</a><ul><li><a class=\"reference internal\" href=\"#resources\">Resources</a></li><li><a class=\"reference internal\" href=\"#indices-and-tables\">Indices and tables</a></li></ul></li></ul>  <h4>Next topic</h4>  <p class=\"topless\"><a href=\"api.html\"                        title=\"next chapter\">API Documentation</a></p>  <div role=\"note\" aria-label=\"source link\">    <h3>This Page</h3>    <ul class=\"this-page-menu\">      <li><a href=\"_sources/index.rst.txt\"            rel=\"nofollow\">Show Source</a></li>    </ul>   </div><div id=\"searchbox\" style=\"display: none\" role=\"search\">  <h3>Quick search</h3>    <div class=\"searchformwrapper\">    <form class=\"search\" action=\"search.html\" method=\"get\">      <input type=\"text\" name=\"q\" />      <input type=\"submit\" value=\"Go\" />      <input type=\"hidden\" name=\"check_keywords\" value=\"yes\" />      <input type=\"hidden\" name=\"area\" value=\"default\" />    </form>    </div></div><script type=\"text/javascript\">$('#searchbox').show(0);</script>        </div>      </div>      <div class=\"clearer\"></div>    </div>    <div class=\"related\" role=\"navigation\" aria-label=\"related navigation\">      <h3>Navigation</h3>      <ul>        <li class=\"right\" style=\"margin-right: 10px\">          <a href=\"genindex.html\" title=\"General Index\"             >index</a></li>        <li class=\"right\" >          <a href=\"py-modindex.html\" title=\"Python Module Index\"             >modules</a> |</li>        <li class=\"right\" >          <a href=\"api.html\" title=\"API Documentation\"             >next</a> |</li>    <li><a href=\"#\">peppercorn 0.6 documentation</a> &#187;</li>       </ul>    </div>    <div class=\"footer\" role=\"contentinfo\">        &#169; Copyright 2011-2022, Agendaless Consulting &lt;pylons-discuss@googlegroups.com&gt;.      Last updated on Apr 22, 2022.      Created using <a href=\"http://sphinx-doc.org/\">Sphinx</a> 1.8.6.    </div>  </body></html>",
  "embeddings": []
}
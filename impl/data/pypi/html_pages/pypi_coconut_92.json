{
  "libtype": "pypi",
  "libname": "coconut",
  "url": "http://coconut-lang.org",
  "html": "<!DOCTYPE html><html lang=\"en-us\"><head>  <meta charset=\"UTF-8\">  <title>Coconut Programming Language</title>  <meta name=\"description\" content=\"Simple, elegant, Pythonic functional programming.\">  <meta name=\"keywords\" content=\"Python, Functional, Programming, Language\">  <meta name=\"author\" content=\"Evan Hubinger\">  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\">  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\">  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\">  <link rel=\"manifest\" href=\"/site.webmanifest\">  <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\">  <meta name=\"msapplication-TileColor\" content=\"#da532c\">  <meta name=\"theme-color\" content=\"#ffffff\">  <link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheets/normalize.css\" media=\"screen\">  <link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheets/github-light.css\" media=\"screen\">  <link rel='stylesheet' type='text/css' href='https://fonts.googleapis.com/css?family=Open+Sans:400,700'>  <link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheets/stylesheet.css\" media=\"screen\">  <link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheets/pygments.css\" />  <script>  window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+  new Date;  ga('create', 'UA-16028750-7', 'auto');  ga('send', 'pageview');  </script>  <script async src='https://www.google-analytics.com/analytics.js'></script>  <script async defer src=\"https://buttons.github.io/buttons.js\"></script></head><body><section class=\"page-header\">  <img src=\"coconut.png\" style=\"width: 10vw; min-width: 150px;\">  <h1 class=\"project-name\">Coconut</h1>  <h2 class=\"project-tagline\">Simple, elegant, Pythonic functional programming.</h2>  <a href='https://github.com/evhub/coconut' class=\"btn\">GitHub</a>  <a href='http://coconut.readthedocs.io/en/latest/HELP.html' class=\"btn\">Tutorial</a>  <a href='http://coconut.readthedocs.io/en/latest/DOCS.html' class=\"btn\">Documentation</a>  <a href='http://coconut.readthedocs.io/en/latest/FAQ.html' class=\"btn\">FAQ</a></section><section class=\"interpreter\">  <div id=\"coconut-interpreter\" style=\"height: 300px;\"></div>  <script type=\"text/javascript\" src=\"scripts/coconut-interpreter.bundle.js\"></script></section><section class=\"main-content\"><h1><a id=\"user-content-coconut\" href=\"#coconut\" aria-hidden=\"true\"><span aria-hidden=\"true\"></span></a>Coconut</h1><p>Coconut is a <strong>functional programming language</strong> that <strong>compiles to <a href=\"https://www.python.org/\">Python</a></strong>. Since <strong>all valid Python is valid Coconut</strong>, using Coconut will only extend and enhance what you're already capable of in Python.</p><p>Coconut aims to enhance the repertoire of Python programmers to include the tools of modern functional programming in as Pythonic a way as possible. Additionally, <strong>Coconut code runs the same on any Python version</strong>, meaning that even if you just use Coconut to write pure Python, you no longer have to worry about any core Python version differences: Coconut can backport almost all modern Python features as far back as Python 2.6.</p><p>Installing Coconut is as easy as</p><ol><li>installing <a href=\"https://www.python.org/downloads/\">Python</a>,</li><li>opening a command-line prompt,</li><li>and entering:</li></ol><div class=\"code-block\">pip install coconut</div><p>which will give you access to all the features of Coconut, which adds to Python <strong>built-in, syntactical support</strong> for:</p><ul><li>prettier lambdas</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"n\">x</span> <span class=\"o\">-&gt;</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">1</span></pre></div></div><ul class=\"simple\"><li>pipeline-style programming</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"s2\">&quot;hello, world!&quot;</span> <span class=\"o\">|&gt;</span> <span class=\"nb\">print</span></pre></div></div><ul class=\"simple\"><li>partial application</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"o\">|&gt;</span> <span class=\"nb\">map</span><span class=\"o\">$</span><span class=\"p\">(</span><span class=\"o\">.**</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">|&gt;</span> <span class=\"nb\">list</span></pre></div></div><ul class=\"simple\"><li>enhanced pattern-matching (on top of support for Python 3.10 pattern-matching on all Python versions)</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"k\">match</span> <span class=\"p\">[</span><span class=\"n\">head</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">tail</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]:</span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">head</span><span class=\"p\">,</span> <span class=\"n\">tail</span><span class=\"p\">)</span></pre></div></div><ul class=\"simple\"><li>enhanced destructuring assignment</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"p\">{</span><span class=\"s2\">&quot;list&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">rest</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">_</span><span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;list&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]}</span></pre></div></div><ul class=\"simple\"><li>multidimensional array literals/concatenation</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span><span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">;;</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span><span class=\"n\">AA</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">A</span> <span class=\"p\">;</span> <span class=\"n\">A</span><span class=\"p\">]</span></pre></div></div><ul class=\"simple\"><li>operator functions</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"n\">product</span> <span class=\"o\">=</span> <span class=\"nb\">reduce</span><span class=\"o\">$</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span></pre></div></div><ul class=\"simple\"><li>point-free programming</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"n\">first_five_words</span> <span class=\"o\">=</span> <span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span> <span class=\"o\">..&gt;</span> <span class=\"o\">.$</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">..&gt;</span> <span class=\"s2\">&quot; &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span></pre></div></div><ul class=\"simple\"><li>lazy evaluation</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"o\">@</span><span class=\"nb\">recursive_iterator</span><span class=\"k\">def</span> <span class=\"nf\">fib</span><span class=\"p\">()</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">::</span> <span class=\"nb\">map</span><span class=\"p\">((</span><span class=\"o\">+</span><span class=\"p\">),</span> <span class=\"n\">fib</span><span class=\"p\">(),</span> <span class=\"n\">fib</span><span class=\"p\">()</span><span class=\"o\">$</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span></pre></div></div><ul class=\"simple\"><li>easy parallelization</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"o\">|&gt;</span> <span class=\"nb\">parallel_map</span><span class=\"o\">$</span><span class=\"p\">(</span><span class=\"o\">.**</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">|&gt;</span> <span class=\"nb\">list</span></pre></div></div><ul class=\"simple\"><li>tail call optimization</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"nf\">factorial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">acc</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>    <span class=\"k\">match</span> <span class=\"n\">n</span><span class=\"p\">:</span>        <span class=\"k\">case</span> <span class=\"mi\">0</span><span class=\"p\">:</span>            <span class=\"k\">return</span> <span class=\"n\">acc</span>        <span class=\"k\">case</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"k\">_</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>            <span class=\"k\">return</span> <span class=\"n\">factorial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">acc</span><span class=\"o\">*</span><span class=\"n\">n</span><span class=\"p\">)</span></pre></div></div><ul class=\"simple\"><li>algebraic data types</li></ul><div class=\"highlight-coconut\"><div class=\"highlight\"><pre><span class=\"k\">data</span> <span class=\"nc\">Empty</span><span class=\"p\">()</span><span class=\"k\">data</span> <span class=\"nc\">Leaf</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"k\">data</span> <span class=\"nc\">Node</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">)</span><span class=\"k\">def</span> <span class=\"nf\">size</span><span class=\"p\">(</span><span class=\"n\">Empty</span><span class=\"p\">())</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"k\">addpattern</span> <span class=\"k\">def</span> <span class=\"nf\">size</span><span class=\"p\">(</span><span class=\"n\">Leaf</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"k\">addpattern</span> <span class=\"k\">def</span> <span class=\"nf\">size</span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">))</span> <span class=\"o\">=</span> <span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span></pre></div></div></ul><p>and much more!</p><p>Like what you see? Don't forget to star Coconut on GitHub!</p><p><a class=\"github-button\" href=\"https://github.com/evhub/coconut\" data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star evhub/coconut on GitHub\">Star</a></p><p>Ready to get started? Here are some links to help you out:</p><ul><li><a href=\"http://coconut.readthedocs.io/en/latest/HELP.html\">Coconut's <strong>tutorial</strong></a> will guide you through the process of starting to enhance your Python with Coconut in a straightforward, easy-to-follow way.</li><li><a href=\"http://coconut.readthedocs.io/en/latest/DOCS.html\">Coconut's <strong>documentation</strong></a> is an extensive catalog of information on all of Coconut's features for whenever you see something that you want more information about.</li><li><a href=\"http://coconut.readthedocs.io/en/latest/FAQ.html\">The Coconut FAQ</a> should hopefully answer any questions you might have about who Coconut is built for and whether or not you should use it.</li><li><a href=\"https://github.com/evhub/coconut/issues/new\">Creating a new issue</a> is the best way for you to get help if you're having a problem with Coconut\u2014just detail the problem in the issue and it will be addressed as soon as possible.</li><li><a href=\"https://gitter.im/evhub/coconut\">Coconut's chat room</a> is a great place if you want to pose any general questions, concerns, or comments you have about Coconut to other Coconut developers.</li></ul><footer class=\"site-footer\">  <span class=\"site-footer-owner\"><a href=\"https://github.com/evhub/coconut\">Coconut</a> was created by <a href=\"https://github.com/evhub\">Evan Hubinger</a> and is licensed under <a href=\"http://www.apache.org/licenses/LICENSE-2.0\">Apache 2.0</a>.</span>  <span class=\"site-footer-credits\">The formatting of this page is based on the <a href=\"https://github.com/jasonlong/cayman-theme\">Cayman theme</a> for <a href=\"https://pages.github.com\">GitHub Pages</a> by <a href=\"https://twitter.com/jasonlong\">Jason Long</a>.</span></footer></section></body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "json-cfg",
  "url": "https://pypi.org/project/json-cfg/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>json-cfg \u00b7 PyPI</title>    <meta name=\"description\" content=\"JSON config file parser with extended syntax (e.g.: comments), line/column numbers in error messages, etc...\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for json-cfg\" href=\"/rss/project/json-cfg/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/json-cfg/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/json-cfg/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"json-cfg\">    <meta property=\"og:description\" content=\"JSON config file parser with extended syntax (e.g.: comments), line/column numbers in error messages, etc...\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/pasztorpisti/json-cfg\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:pasztorpisti/json-cfg+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        json-cfg 0.4.2      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install json-cfg</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/json-cfg/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2017-02-15T20:44:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 15, 2017</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/json-cfg\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">JSON config file parser with extended syntax (e.g.: comments), line/column numbers in error messages, etc...</p><div data-html-include=\"/_includes/edit-project-button/json-cfg\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for json-cfg\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/pasztorpisti/json-cfg\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/json-cfg\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (MIT)</p>    <p><strong>Author:</strong> <a href=\"mailto:pasztorpisti@gmail.com\">Istv\u00e1n P\u00e1sztor</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      json,    </span>    <span class=\"package-keyword\">      config,    </span>    <span class=\"package-keyword\">      file,    </span>    <span class=\"package-keyword\">      parser,    </span>    <span class=\"package-keyword\">      configuration,    </span>    <span class=\"package-keyword\">      comment    </span>  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/pasztorpisti/\" aria-label=\"pasztorpisti\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/f11410c92402373438fa198023adf1e72ecf4de0/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f66386630373565343833373132306433356338663633393366323036636530313f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for pasztorpisti from gravatar.com\" title=\"Avatar for pasztorpisti from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            pasztorpisti          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2\">            Python :: 2          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2.7\">            Python :: 2.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.3\">            Python :: 3.3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.4\">            Python :: 3.4          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.5\">            Python :: 3.5          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+CPython\">            Python :: Implementation :: CPython          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+PyPy\">            Python :: Implementation :: PyPy          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries+%3A%3A+Python+Modules\">            Software Development :: Libraries :: Python Modules          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for json-cfg\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <a href=\"https://travis-ci.org/pasztorpisti/json-cfg\" rel=nofollow><img alt=build src=\"https://pypi-camo.freetls.fastly.net/5ab6e56b79caca3af4ee23ab86bb43e4a4dcd85d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7061737a746f7270697374692f6a736f6e2d6366672e7376673f7374796c653d666c6174\"></a><a href=\"https://www.codacy.com/app/pasztorpisti/json-cfg\" rel=nofollow><img alt=\"code quality\" src=\"https://pypi-camo.freetls.fastly.net/974ab6f9f8aad0afd301b6ac62ff9cde9924c548/68747470733a2f2f696d672e736869656c64732e696f2f636f646163792f32353835346130383865383934373266396662663262643563313633333833342e7376673f7374796c653d666c6174\"></a><a href=\"https://landscape.io/github/pasztorpisti/json-cfg/master\" rel=nofollow><img alt=\"code health\" src=\"https://pypi-camo.freetls.fastly.net/46bbfd3276544f56ea373eea558e050600e49a11/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f7061737a746f7270697374692f6a736f6e2d6366672f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a><a href=\"https://coveralls.io/r/pasztorpisti/json-cfg?branch=master\" rel=nofollow><img alt=coverage src=\"https://pypi-camo.freetls.fastly.net/6ad43bc4dc3cc2bec0d6b91db970e468fc147c50/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f7061737a746f7270697374692f6a736f6e2d6366672f6d61737465722e7376673f7374796c653d666c6174\"></a><a href=\"https://pypi.python.org/pypi/json-cfg\" rel=nofollow><img alt=pypi src=\"https://pypi-camo.freetls.fastly.net/8bed0d9d27bc46a37f35d93a9cab9747ce7ca05b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6a736f6e2d6366672e7376673f7374796c653d666c6174\"></a><a href=\"https://github.com/pasztorpisti/json-cfg\" rel=nofollow><img alt=github src=\"https://pypi-camo.freetls.fastly.net/c266ced2e6a079e377cafdf47e4ec1d2a7670112/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f7061737a746f7270697374692f6a736f6e2d6366672e7376673f7374796c653d666c6174\"></a><a href=\"https://github.com/pasztorpisti/json-cfg/blob/master/LICENSE.txt\" rel=nofollow><img alt=\"license: MIT\" src=\"https://pypi-camo.freetls.fastly.net/2e9cbcef65b461812838db7b9e269ba668a6bc37/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f7061737a746f7270697374692f6a736f6e2d6366672e7376673f7374796c653d666c6174\"></a><nav class=contents id=contents><p class=topic-title>Contents</p><ul class=simple><li><p><a href=#introduction id=toc-entry-1 rel=nofollow>Introduction</a></p><ul><li><p><a href=#config-file-examples id=toc-entry-2 rel=nofollow>Config file examples</a></li></ul></li><li><p><a href=#usage id=toc-entry-3 rel=nofollow>Usage</a></p><ul><li><p><a href=#installation id=toc-entry-4 rel=nofollow>Installation</a></li><li><p><a href=#quick-starter id=toc-entry-5 rel=nofollow>Quick-starter</a></li><li><p><a href=#detailed-explanation-of-the-library-interface id=toc-entry-6 rel=nofollow>Detailed explanation of the library interface</a></p><ul><li><p><a href=#querying-the-json-config-hierarchy id=toc-entry-7 rel=nofollow>Querying the json config hierarchy</a></li><li><p><a href=#fetching-python-values-from-the-queried-wrapper-objects id=toc-entry-8 rel=nofollow>Fetching python values from the queried wrapper objects</a></p><ul><li><p><a href=#fetching-optional-config-values-by-specifying-a-default-value id=toc-entry-9 rel=nofollow>Fetching optional config values (by specifying a default value)</a></li><li><p><a href=#using-value-mappers-to-validate-and-or-transform-fetched-values id=toc-entry-10 rel=nofollow>Using value mappers to validate and/or transform fetched values</a></p><ul><li><p><a href=#writing-a-custom-value-mapper-or-validator id=toc-entry-11 rel=nofollow>Writing a custom value mapper (or validator)</a></li></ul></li></ul></li></ul></li><li><p><a href=#error-handling-exceptions id=toc-entry-12 rel=nofollow>Error handling: exceptions</a></li><li><p><a href=#utility-functions id=toc-entry-13 rel=nofollow>Utility functions</a></li></ul></li></ul></nav><section id=introduction><h2><a href=#toc-entry-1 rel=nofollow>Introduction</a></h2><p>The goal of this library is providing a json config file loader that hasthe following extras compared to the standard <span class=\"docutils literal\">json.load()</span>:</p><ul><li><p>A larger subset of javascript (and not some weird/exotic extension to json thatwould turn it into something that has nothing to do with json/javascript):</p><blockquote><ul class=simple><li><p>backward compatible with json so you can still load standard json files too</li><li><p>single and multi-line comments - this is more useful then you would think:it is good not only for documentation but also for temporarily disablinga block in your config without actually deleting entries</li><li><p>object (dictionary) keys without quotes: less quotation marks, less noise</li><li><p>trailing commas (allowing a comma after the last item of objects and arrays)</li></ul></blockquote></li><li><p>Providing line number information for each element of the loaded config fileand using this to display useful error messages that help locating errors notonly while parsing the file but also when processing/interpreting it.</li><li><p>A simple config query syntax that handles default values, required elements andautomatically raises an exception in case of error (with useful info includingthe location of the error in the config file).</li></ul><section id=config-file-examples><h3><a href=#toc-entry-2 rel=nofollow>Config file examples</a></h3><p>A traditional json config file:</p><pre><code><span class=p>{</span><span class=w>    </span><span class=s2>\"servers\"</span><span class=o>:</span><span class=w> </span><span class=p>[</span><span class=w>        </span><span class=p>{</span><span class=w>            </span><span class=s2>\"ip_address\"</span><span class=o>:</span><span class=w> </span><span class=s2>\"127.0.0.1\"</span><span class=p>,</span><span class=w>            </span><span class=s2>\"port\"</span><span class=o>:</span><span class=w> </span><span class=mf>8080</span><span class=w>        </span><span class=p>},</span><span class=w>        </span><span class=p>{</span><span class=w>            </span><span class=s2>\"ip_address\"</span><span class=o>:</span><span class=w> </span><span class=s2>\"127.0.0.1\"</span><span class=p>,</span><span class=w>            </span><span class=s2>\"port\"</span><span class=o>:</span><span class=w> </span><span class=mf>8081</span><span class=w>        </span><span class=p>}</span><span class=w>    </span><span class=p>],</span><span class=w>    </span><span class=s2>\"superuser_name\"</span><span class=o>:</span><span class=w> </span><span class=s2>\"tron\"</span><span class=w></span><span class=p>}</span></code></pre><p>Something similar but better with json-cfg:</p><pre><code><span class=p>{</span><span class=w>    </span><span class=c1>// Note that we can get rid of most quotation marks.</span><span class=w>    </span><span class=nx>servers</span><span class=o>:</span><span class=w> </span><span class=p>[</span><span class=w>        </span><span class=p>{</span><span class=w>            </span><span class=nx>ip_address</span><span class=o>:</span><span class=w> </span><span class=s2>\"127.0.0.1\"</span><span class=p>,</span><span class=w>            </span><span class=nx>port</span><span class=o>:</span><span class=w> </span><span class=mf>8080</span><span class=w>        </span><span class=p>},</span><span class=w>        </span><span class=c1>// We have commented out the block of the second server below.</span><span class=w>        </span><span class=c1>// Trailing commas are allowed so the comma after the</span><span class=w>        </span><span class=c1>// first block (above) doesn't cause any problems.</span><span class=w>        </span><span class=cm>/*        {            ip_address: \"127.0.0.1\",            port: 8081        },  // &lt;-- optional trailing comma        /**/</span><span class=w>    </span><span class=p>],</span><span class=w>    </span><span class=nx>superuser_name</span><span class=o>:</span><span class=w> </span><span class=s2>\"tron\"</span><span class=p>,</span><span class=w>  </span><span class=c1>// &lt;-- optional trailing comma</span><span class=w></span><span class=p>}</span></code></pre><p>Note that json-cfg can load both config files because standard json is a subset of the extendedsyntax allowed by json-cfg.</p><aside class=\"admonition tip\"><p class=admonition-title>Tip</p><p>Use javascript syntax highlight in your text editor for json config fileswhenever possible - this makes reading config files much easier especiallywhen you have a lot of comments or large commented config blocks.</p></aside></section></section><section id=usage><h2><a href=#toc-entry-3 rel=nofollow>Usage</a></h2><section id=installation><h3><a href=#toc-entry-4 rel=nofollow>Installation</a></h3><pre><code>pip<span class=w> </span>install<span class=w> </span>json-cfg</code></pre><p>Alternatively you can download the zipped library from <a href=\"https://pypi.python.org/pypi/json-cfg\" rel=nofollow>https://pypi.python.org/pypi/json-cfg</a></p></section><section id=quick-starter><h3><a href=#toc-entry-5 rel=nofollow>Quick-starter</a></h3><p>The json-cfg library provides two modes when it comes to loading config files: One that is verysimilar to the standard <span class=\"docutils literal\">json.loads()</span> and another one that returns the json wrapped into specialconfig nodes that make handling the config file much easier:</p><ul class=simple><li><p><span class=\"docutils literal\">jsoncfg.load()</span> and <span class=\"docutils literal\">jsoncfg.loads()</span> are very similar to the standard <span class=\"docutils literal\">json.loads()</span>.These functions allow you to load config files into bare python representation of the jsondata (dictionaries, lists, numbers, etc\u2026).</li><li><p><span class=\"docutils literal\">jsoncfg.load_config()</span> and <span class=\"docutils literal\">jsoncfg.loads_config()</span> load the json data into special wrapperobjects that help you to query the config with much nicer syntax. At the same time if youare looking for a value that doesn\u2019t exist in the config then these problems are handled withexceptions that contain line/column number info about the location of the error.</li></ul><p>One of the biggest problems with loading the config into bare python objects with a simple jsonlibrary is that the loaded json data doesn\u2019t contain the line/column numbers for the loaded jsonnodes/elements. This means that by using a simple json library you can report the location of errorswith config file line/column numbers only in case of json syntax errors (in best case).By loading the json nodes/elements into our wrapper objects we can retain the line/column numbersfor the json nodes/elements and we can use them in our error messages in case of semantic errors.</p><p>I assume that you have already installed json-cfg and you have the previously shown server configexample in a <span class=\"docutils literal\">server.cfg</span> file in the current directory.</p><p>This is how to load and process the above server configuration with a simple json library:</p><pre><code><span class=kn>import</span> <span class=nn>json</span><span class=w></span><span class=k>with</span> <span class=nb>open</span><span class=p>(</span><span class=s1>'server.cfg'</span><span class=p>)</span> <span class=k>as</span> <span class=n>f</span><span class=p>:</span><span class=w></span>    <span class=n>config</span> <span class=o>=</span> <span class=n>json</span><span class=o>.</span><span class=n>load</span><span class=p>(</span><span class=n>f</span><span class=p>)</span><span class=w></span><span class=k>for</span> <span class=n>server</span> <span class=ow>in</span> <span class=n>config</span><span class=p>[</span><span class=s1>'servers'</span><span class=p>]:</span><span class=w></span>    <span class=n>listen_on_interface</span><span class=p>(</span><span class=n>server</span><span class=p>[</span><span class=s1>'ip_address'</span><span class=p>],</span> <span class=n>server</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s1>'port'</span><span class=p>,</span> <span class=mi>8000</span><span class=p>))</span><span class=w></span><span class=n>superuser_name</span> <span class=o>=</span> <span class=n>config</span><span class=p>[</span><span class=s1>'superuser_name'</span><span class=p>]</span></code></pre><p>The same with json-cfg:</p><pre><code><span class=kn>import</span> <span class=nn>jsoncfg</span><span class=w></span><span class=n>config</span> <span class=o>=</span> <span class=n>jsoncfg</span><span class=o>.</span><span class=n>load_config</span><span class=p>(</span><span class=s1>'server.cfg'</span><span class=p>)</span><span class=w></span><span class=k>for</span> <span class=n>server</span> <span class=ow>in</span> <span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=p>:</span><span class=w></span>    <span class=n>listen_on_interface</span><span class=p>(</span><span class=n>server</span><span class=o>.</span><span class=n>ip_address</span><span class=p>(),</span> <span class=n>server</span><span class=o>.</span><span class=n>port</span><span class=p>(</span><span class=mi>8000</span><span class=p>))</span><span class=w></span><span class=n>superuser_name</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>superuser_name</span><span class=p>()</span></code></pre><p>Seemingly the difference isn\u2019t that big. With json-cfg you can use extended syntax in the configfile and the code that loads/processes the config is also somewhat nicer but real difference iswhat happens when you encounter an error. With json-cfg you get an exception with a message thatpoints to the problematic part of the json config file while the pure-json example can\u2019t tell youline/column numbers in the config file. In case of larger configs this can cause headaches.</p><p>Open your <span class=\"docutils literal\">server.cfg</span> file and remove the required <span class=\"docutils literal\">ip_address</span> attribute from one of the serverconfig blocks. This will cause an error when we try to load the config file with the above codeexamples. The above code snippets report the following error messages in this scenario:</p><p>json:</p><pre><code>KeyError: 'ip_address'</code></pre><p>json-cfg:</p><pre><code>jsoncfg.config_classes.JSONConfigValueNotFoundError: Required config node not found. Missing query path: .ip_address (relative to error location) [line=3;col=9]</code></pre></section><section id=detailed-explanation-of-the-library-interface><h3><a href=#toc-entry-6 rel=nofollow>Detailed explanation of the library interface</a></h3><p>When you load your json with <span class=\"docutils literal\">jsoncfg.load_config()</span> or <span class=\"docutils literal\">jsoncfg.loads_config()</span> the returned jsondata - the hierarchy - is a tree of wrapper objects provided by this library. These wrapper objectsmake it possible to store the column/line numbers for each json node/element (for error reporting)and these wrappers allow you to query the config with the nice syntax you\u2019ve seen above.</p><p>This library differentiates 3 types of json nodes/elements and each of these have their own wrapperclasses:</p><ul class=simple><li><p>json object (dictionary like stuff)</li><li><p>json array (list like stuff)</li><li><p>json scalar (I use \u201cscalar\u201d to refer any json value that isn\u2019t a container)</li></ul><p>I use <em>json value</em> to refer to any json node/element whose type is unknown or unimportant.The public API of the wrapper classes is very simple: they have no public methods. All they provideis a few magic methods that you can use to read/query the loaded json data. (These magic methodsare <span class=\"docutils literal\">__contains__</span>, <span class=\"docutils literal\">__getattr__</span>, <span class=\"docutils literal\">__getitem__</span>, <span class=\"docutils literal\">__len__</span>, <span class=\"docutils literal\">__iter__</span> and <span class=\"docutils literal\">__call__</span> but don\u2019tworry if you don\u2019t know about these magic methods as I will demonstrate the usage with simple codeexamples that don\u2019t assume that you know them.)The reason for having no public methods is simple: We allow querying json object keys with<span class=\"docutils literal\">__getattr__</span> (with the dot or member access operator like <span class=\"docutils literal\">config.myvalue</span>) and we don\u2019t want anypublic methods to conflict with the key values in your config file.</p><p>After loading the config you have a tree of wrapper object nodes and you have to perform these twooperations to get values from the config:</p><ol><li><p>querying/reading/traversing the json hierarchy: the result of querying is a wrapper object</li><li><p>fetching the python value from the selected wrapper object: this can be done by calling thequeried wrapper object.</li></ol><p>The following sections explain these two operations in detail.</p><section id=querying-the-json-config-hierarchy><h4><a href=#toc-entry-7 rel=nofollow>Querying the json config hierarchy</a></h4><p>To read and query the json hierarchy and the wrapper object nodes that build up the tree you haveto exploit the <span class=\"docutils literal\">__contains__</span>, <span class=\"docutils literal\">__getattr__</span>, <span class=\"docutils literal\">__getitem__</span>, <span class=\"docutils literal\">__len__</span>, <span class=\"docutils literal\">__iter__</span> magic methodsof the wrapper objects. We will use the previously shown server config for the following examples.</p><pre><code><span class=kn>import</span> <span class=nn>jsoncfg</span><span class=w></span><span class=n>config</span> <span class=o>=</span> <span class=n>jsoncfg</span><span class=o>.</span><span class=n>load_config</span><span class=p>(</span><span class=s1>'server.cfg'</span><span class=p>)</span><span class=w></span><span class=c1># Using __getattr__ to get the servers key from the config json object.</span><span class=w></span><span class=c1># The result of this expression is a wrapper object that wraps the servers array/list.</span><span class=w></span><span class=n>server_array</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=w></span><span class=c1># The equivalent of the previous expression using __getitem__:</span><span class=w></span><span class=n>server_array</span> <span class=o>=</span> <span class=n>config</span><span class=p>[</span><span class=s1>'servers'</span><span class=p>]</span><span class=w></span><span class=c1># Note that querying a non-existing key from an object doesn't raise an error. Instead</span><span class=w></span><span class=c1># it returns a special ValueNotFoundNode instance that you can continue using as a</span><span class=w></span><span class=c1># wrapper object. The error happens only if you try to fetch the value of this key</span><span class=w></span><span class=c1># without specifying a default value - but more on this later in the section where we</span><span class=w></span><span class=c1># discuss value fetching from wrapper objects.</span><span class=w></span><span class=n>special_value_not_found_node</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>non_existing_key</span><span class=w></span><span class=c1># Checking whether a key exists in a json object:</span><span class=w></span><span class=n>servers_exists</span> <span class=o>=</span> <span class=s1>'servers'</span> <span class=ow>in</span> <span class=n>config</span><span class=w></span><span class=c1># Using __getitem__ to index into json array wrapper objects:</span><span class=w></span><span class=c1># Over-indexing the array would raise an exception with useful error message</span><span class=w></span><span class=c1># containing the location of the servers_array in the config file.</span><span class=w></span><span class=n>first_item_wrapper_object</span> <span class=o>=</span> <span class=n>servers_array</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=w></span><span class=c1># Getting the length of json object and json array wrappers:</span><span class=w></span><span class=n>num_config_key_value_pairs</span> <span class=o>=</span> <span class=nb>len</span><span class=p>(</span><span class=n>config</span><span class=p>)</span><span class=w></span><span class=n>servers_array_len</span> <span class=o>=</span> <span class=nb>len</span><span class=p>(</span><span class=n>servers_array</span><span class=p>)</span><span class=w></span><span class=c1># Iterating the items of a json object or array:</span><span class=w></span><span class=k>for</span> <span class=n>key_string</span><span class=p>,</span> <span class=n>value_wrapper_object</span> <span class=ow>in</span> <span class=n>config</span><span class=p>:</span><span class=w></span>    <span class=k>pass</span><span class=w></span><span class=k>for</span> <span class=n>value_wrapper_object</span> <span class=ow>in</span> <span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=p>:</span><span class=w></span>    <span class=k>pass</span></code></pre><p>Not all node types (object, array, scalar) support all operations. For example a scalar json valuedoesn\u2019t support <span class=\"docutils literal\">len()</span> and you can not iterate it. What happens if someone puts a scalar valueinto the config in place of the servers array? In that case the config loader code sooner orlater performs an array-specific operation on that scalar value (for example iteration) and thisraises an exception with a useful error message pointing the the loader code with the stack traceand pointing to the scalar value in the config file with line/column numbers. You can find more infoabout json-node-type related checks and error handling mechanisms in the following sections (valuefetching and error handling).</p></section><section id=fetching-python-values-from-the-queried-wrapper-objects><h4><a href=#toc-entry-8 rel=nofollow>Fetching python values from the queried wrapper objects</a></h4><p>After selecting any of the wrapper object nodes from the json config hierarchy you can fetch itswrapped value by using its <span class=\"docutils literal\">__call__</span> magic method. This works on all json node types: objects,arrays and scalars. If you fetch a container (object or array) then this fetch is recursive: itfetches the whole subtree whose root node is the fetched wrapper object. In most cases it is agood practice to fetch only leaf nodes of the config. Leaving the containers (objects, arrays) inwrappers helps getting better error messages if something goes wrong while you are processing theconfig data.</p><pre><code><span class=kn>import</span> <span class=nn>jsoncfg</span><span class=w></span><span class=n>config</span> <span class=o>=</span> <span class=n>jsoncfg</span><span class=o>.</span><span class=n>load_config</span><span class=p>(</span><span class=s1>'server.cfg'</span><span class=p>)</span><span class=w></span><span class=c1># Fetching the value of the whole json object hierarchy.</span><span class=w></span><span class=c1># python_hierarchy now looks like something you normally</span><span class=w></span><span class=c1># get as a result of a standard ``json.load()``.</span><span class=w></span><span class=n>python_hierarchy</span> <span class=o>=</span> <span class=n>config</span><span class=p>()</span><span class=w></span><span class=c1># Converting only the servers array into python-object format:</span><span class=w></span><span class=n>python_server_list</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=p>()</span><span class=w></span><span class=c1># Getting the ip_address of the first server.</span><span class=w></span><span class=n>server_0_ip_address_str</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>ip_address</span><span class=p>()</span></code></pre><section id=fetching-optional-config-values-by-specifying-a-default-value><h5><a href=#toc-entry-9 rel=nofollow>Fetching optional config values (by specifying a default value)</a></h5><p>The value fetcher call has some optional parameters. You can call it with an optional default valuefollowed by zero or more <span class=\"docutils literal\">jsoncfg.JSONValueMapper</span> instances. The default value comes in handy whenyou are querying an <strong>optional</strong> item from a json object:</p><pre><code><span class=c1># If \"optional_value\" isn't in the config then return the default value (50).</span><span class=w></span><span class=n>v0</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>optional_value</span><span class=p>(</span><span class=mi>50</span><span class=p>)</span><span class=w></span><span class=c1># This raises an exception if \"required_value\" isn't in the config.</span><span class=w></span><span class=n>v1</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>required_value</span><span class=p>()</span></code></pre></section><section id=using-value-mappers-to-validate-and-or-transform-fetched-values><h5><a href=#toc-entry-10 rel=nofollow>Using value mappers to validate and/or transform fetched values</a></h5><p>Whether you are using a default value or not you can specify zero or more <span class=\"docutils literal\">jsoncfg.JSONValueMapper</span>instances too in the parameter list of the fetcher function call. These instances have to becallable, they have to have a <span class=\"docutils literal\">__call__</span> method that receives one parameter - the fetched value -and they have to return the transformed (or untouched) value. If you specify more than one valuemapper instances then these value mappers are applied to the fetched value in left-to-right orderas you specify them in the argument list. You can use these value mapper instances not only totransform the fetched value, but also to perform (type) checks on them. The <span class=\"docutils literal\">jsoncfg.value_mappers</span>module contains a few predefined type-checkers but you can create your own value mappers.</p><aside class=\"admonition warning\"><p class=admonition-title>Warning</p><p>If you specify both a default value and one or more value mapper instances in your value fetchercall then the value mappers are never applied to the default value. The value mappers are usedonly when you fetch a value that exists in the config. json-cfg uses either the default valueor the list of value mapper instances but not both.</p></aside><pre><code><span class=kn>from</span> <span class=nn>jsoncfg.value_mappers</span> <span class=kn>import</span> <span class=n>RequireType</span><span class=w></span><span class=kn>from</span> <span class=nn>jsoncfg.value_mappers</span> <span class=kn>import</span> <span class=n>require_list</span><span class=p>,</span> <span class=n>require_string</span><span class=p>,</span> <span class=n>require_integer</span><span class=p>,</span> <span class=n>require_number</span><span class=w></span><span class=c1># require_list is a jsoncfg.JSONValueMapper instance that checks if the fetched value is a list.</span><span class=w></span><span class=c1># If the \"servers\" key is missing form the config or its type isn't list then an exception is</span><span class=w></span><span class=c1># raised because we haven't specified a default value.</span><span class=w></span><span class=n>python_server_list</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=p>(</span><span class=n>require_list</span><span class=p>)</span><span class=w></span><span class=c1># If the \"servers\" key is missing from the config then the return value is None. If \"servers\"</span><span class=w></span><span class=c1># is in the config and it isn't a list instance then an exception is raised otherwise the</span><span class=w></span><span class=c1># return value is the servers list.</span><span class=w></span><span class=n>python_server_list</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=p>(</span><span class=kc>None</span><span class=p>,</span> <span class=n>require_list</span><span class=p>)</span><span class=w></span><span class=c1># Querying the required ip_address parameter with required string type.</span><span class=w></span><span class=n>ip_address</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>ip_address</span><span class=p>(</span><span class=n>require_string</span><span class=p>)</span><span class=w></span><span class=c1># Querying the optional port parameter with a default value of 8000.</span><span class=w></span><span class=c1># If the optional port parameter is specified in the config then it has to be an integer.</span><span class=w></span><span class=n>ip_address</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>port</span><span class=p>(</span><span class=mi>8000</span><span class=p>,</span> <span class=n>require_integer</span><span class=p>)</span><span class=w></span><span class=c1># An optional timeout parameter with a default value of 5. If the timeout parameter is in</span><span class=w></span><span class=c1># the config then it has to be a number (int, long, or float).</span><span class=w></span><span class=n>timeout</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>timeout</span><span class=p>(</span><span class=mi>5</span><span class=p>,</span> <span class=n>require_number</span><span class=p>)</span><span class=w></span><span class=c1># Getting a required guest_name parameter from the config. The parameter has to be either</span><span class=w></span><span class=c1># None (null in the json file) or a string.</span><span class=w></span><span class=n>guest_name</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>guest_name</span><span class=p>(</span><span class=n>RequireType</span><span class=p>(</span><span class=nb>type</span><span class=p>(</span><span class=kc>None</span><span class=p>),</span> <span class=nb>str</span><span class=p>))</span></code></pre><section id=writing-a-custom-value-mapper-or-validator><h6><a href=#toc-entry-11 rel=nofollow>Writing a custom value mapper (or validator)</a></h6><ul><li><p>Derive your own value mapper class from <span class=\"docutils literal\">jsoncfg.JSONValueMapper</span>.</li><li><p>Implement the <span class=\"docutils literal\">__call__</span> method that receives one value and returns one value:</p><blockquote><ul class=simple><li><p>Your <span class=\"docutils literal\">__call__</span> method can return the received value intact but it is allowed toreturn a completely different transformed value.</li><li><p>Your <span class=\"docutils literal\">__call__</span> implementation can perform validation. If the validation fails thenyou have to raise an exception. This exception can be anything but if you don\u2019t havea better idea then simply use the standard <span class=\"docutils literal\">ValueError</span> or <span class=\"docutils literal\">TypeError</span>. This exceptionis caught by the value fetcher call and re-raised as another json-cfg specificexception that contains useful error message with the location of the error and thatexception also contains the exception you raised while validating.</li></ul></blockquote></li></ul><p>Custom value mapper example code:</p><pre><code><span class=kn>import</span> <span class=nn>datetime</span><span class=w></span><span class=kn>import</span> <span class=nn>jsoncfg</span><span class=w></span><span class=kn>from</span> <span class=nn>jsoncfg</span> <span class=kn>import</span> <span class=n>JSONValueMapper</span><span class=w></span><span class=kn>from</span> <span class=nn>jsoncfg.value_mappers</span> <span class=kn>import</span> <span class=n>require_integer</span><span class=w></span><span class=k>class</span> <span class=nc>OneOf</span><span class=p>(</span><span class=n>JSONValueMapper</span><span class=p>):</span><span class=w></span>    <span class=k>def</span> <span class=fm>__init__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=o>*</span><span class=n>enum_members</span><span class=p>):</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>enum_members</span> <span class=o>=</span> <span class=nb>set</span><span class=p>(</span><span class=n>enum_members</span><span class=p>)</span><span class=w></span>    <span class=k>def</span> <span class=fm>__call__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>v</span><span class=p>):</span><span class=w></span>        <span class=k>if</span> <span class=n>v</span> <span class=ow>not</span> <span class=ow>in</span> <span class=bp>self</span><span class=o>.</span><span class=n>enum_members</span><span class=p>:</span><span class=w></span>            <span class=k>raise</span> <span class=ne>ValueError</span><span class=p>(</span><span class=s1>'</span><span class=si>%r</span><span class=s1> is not one of these: </span><span class=si>%r</span><span class=s1>'</span> <span class=o>%</span> <span class=p>(</span><span class=n>v</span><span class=p>,</span> <span class=bp>self</span><span class=o>.</span><span class=n>enum_members</span><span class=p>))</span><span class=w></span>        <span class=k>return</span> <span class=n>v</span><span class=w></span><span class=k>class</span> <span class=nc>RangeCheck</span><span class=p>(</span><span class=n>JSONValueMapper</span><span class=p>):</span><span class=w></span>    <span class=k>def</span> <span class=fm>__init__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>min_</span><span class=p>,</span> <span class=n>max_</span><span class=p>):</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>min</span> <span class=o>=</span> <span class=n>min_</span><span class=w></span>        <span class=bp>self</span><span class=o>.</span><span class=n>max</span> <span class=o>=</span> <span class=n>max_</span><span class=w></span>    <span class=k>def</span> <span class=fm>__call__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>v</span><span class=p>):</span><span class=w></span>        <span class=k>if</span> <span class=bp>self</span><span class=o>.</span><span class=n>min</span> <span class=o>&lt;=</span> <span class=n>v</span> <span class=o>&lt;</span> <span class=bp>self</span><span class=o>.</span><span class=n>max</span><span class=p>:</span><span class=w></span>            <span class=k>return</span> <span class=n>v</span><span class=w></span>        <span class=k>raise</span> <span class=ne>ValueError</span><span class=p>(</span><span class=s1>'</span><span class=si>%r</span><span class=s1> is not in range [</span><span class=si>%r</span><span class=s1>, </span><span class=si>%r</span><span class=s1>)'</span> <span class=o>%</span> <span class=p>(</span><span class=n>v</span><span class=p>,</span> <span class=bp>self</span><span class=o>.</span><span class=n>min</span><span class=p>,</span> <span class=bp>self</span><span class=o>.</span><span class=n>max</span><span class=p>))</span><span class=w></span><span class=k>class</span> <span class=nc>ToDateTime</span><span class=p>(</span><span class=n>JSONValueMapper</span><span class=p>):</span><span class=w></span>    <span class=k>def</span> <span class=fm>__call__</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>v</span><span class=p>):</span><span class=w></span>        <span class=k>if</span> <span class=ow>not</span> <span class=nb>isinstance</span><span class=p>(</span><span class=n>v</span><span class=p>,</span> <span class=nb>str</span><span class=p>):</span><span class=w></span>            <span class=k>raise</span> <span class=ne>TypeError</span><span class=p>(</span><span class=s1>'Expected a naive iso8601 datetime string but found </span><span class=si>%r</span><span class=s1>'</span> <span class=o>%</span> <span class=p>(</span><span class=n>v</span><span class=p>,))</span><span class=w></span>        <span class=k>return</span> <span class=n>datetime</span><span class=o>.</span><span class=n>datetime</span><span class=o>.</span><span class=n>strptime</span><span class=p>(</span><span class=n>v</span><span class=p>,</span> <span class=s1>'%Y-%m-</span><span class=si>%d</span><span class=s1>T%H:%M:%S'</span><span class=p>)</span><span class=w></span><span class=n>config</span> <span class=o>=</span> <span class=n>jsoncfg</span><span class=o>.</span><span class=n>load_config</span><span class=p>(</span><span class=s1>'server.cfg'</span><span class=p>)</span><span class=w></span><span class=c1># Creating a value mapper instance for reuse.</span><span class=w></span><span class=n>require_cool_superuser_name</span> <span class=o>=</span> <span class=n>OneOf</span><span class=p>(</span><span class=s1>'tron'</span><span class=p>,</span> <span class=s1>'neo'</span><span class=p>)</span><span class=w></span><span class=n>superuser_name</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>superuser_name</span><span class=p>(</span><span class=kc>None</span><span class=p>,</span> <span class=n>require_cool_superuser_name</span><span class=p>)</span><span class=w></span><span class=n>check_http_port_range</span> <span class=o>=</span> <span class=n>RangeCheck</span><span class=p>(</span><span class=mi>8000</span><span class=p>,</span> <span class=mi>9000</span><span class=p>)</span><span class=w></span><span class=n>port</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>port</span><span class=p>(</span><span class=mi>8000</span><span class=p>,</span> <span class=n>check_http_port_range</span><span class=p>)</span><span class=w></span><span class=c1># Chaining value mappers. First require_integer receives the value of the port</span><span class=w></span><span class=c1># attribute, checks/transforms it and the output of require_integer goes</span><span class=w></span><span class=c1># to the check_http_port_range value mapper. What you receive as a result of</span><span class=w></span><span class=c1># value fetching is the output of check_http_port_range.</span><span class=w></span><span class=n>port</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>.</span><span class=n>port</span><span class=p>(</span><span class=n>require_integer</span><span class=p>,</span> <span class=n>check_http_port_range</span><span class=p>)</span><span class=w></span><span class=c1># to_datetime converts a naive iso8601 datetime string into a datetime instance.</span><span class=w></span><span class=n>to_datetime</span> <span class=o>=</span> <span class=n>ToDateTime</span><span class=p>()</span><span class=w></span><span class=n>superuser_birthday</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>superuser_birthday</span><span class=p>(</span><span class=kc>None</span><span class=p>,</span> <span class=n>to_datetime</span><span class=p>)</span></code></pre></section></section></section></section><section id=error-handling-exceptions><h3><a href=#toc-entry-12 rel=nofollow>Error handling: exceptions</a></h3><p>The base of all library exceptions is <span class=\"docutils literal\">jsoncfg.JSONConfigException</span>. If the parsed json contains asyntax error then you receive a <span class=\"docutils literal\">jsoncfg.JSONConfigParserException</span> - this exception has nosubclasses. In case of config query errors you receive a <span class=\"docutils literal\">jsoncfg.JSONConfigQueryError</span> - thisexception has several subclasses.</p><pre><code>                 +---------------------+                 | JSONConfigException |                 +---------------------+                    ^               ^                    |               |+-------------------+-------+       || JSONConfigParserException |       |+---------------------------+       |                              +-----+----------------+      +----------------------&gt;| JSONConfigQueryError |&lt;------------------------+      |                       +----------------------+                         |      |                          ^                ^                            |      |                          |                |                            |      |   +----------------------+-----+    +-----+------------------------+   |      |   | JSONConfigValueMapperError |    | JSONConfigValueNotFoundError |   |      |   +----------------------------+    +------------------------------+   |      |                                                                        |+-----+-------------------+                                   +----------------+-----+| JSONConfigNodeTypeError |                                   | JSONConfigIndexError |+-------------------------+                                   +----------------------+</code></pre><p>jsoncfg.<strong>JSONConfigException</strong></p><blockquote><p>This is the mother of all exceptions raised by the library (aside from some some <span class=\"docutils literal\"><span class=pre>ValueError``s</span> and ``TypeErrors</span> that are raised in case of trivial programming mistakes). Note that thisexception is never raised directly - the library raises only exceptions that are derived fromthis.</p></blockquote><p>jsoncfg.<strong>JSONConfigParserException</strong></p><blockquote><p>You receive this exception if there is a syntax error in the parsed json.</p><ul class=simple><li><p><span class=\"docutils literal\">error_message</span>: The error message without the line/column numberinfo. The standard <span class=\"docutils literal\">Exception.message</span> field contains this very same message but with theline/column info formatted into it as a postfix.</li><li><p><span class=\"docutils literal\">line</span>, <span class=\"docutils literal\">column</span>: line and column information to locate the error easily in the parsed json.</li></ul></blockquote><p>jsoncfg.<strong>JSONConfigQueryError</strong></p><blockquote><p>You receive this exception in case of errors you make while processing the parsed json. Thisexception class is never instantiated directly, only its subclasses are used.</p><ul class=simple><li><p><span class=\"docutils literal\">config_node</span>: The json node/element that was processed when the error happened.</li><li><p><span class=\"docutils literal\">line</span>, <span class=\"docutils literal\">column</span>: line and column information to locate the error easily in the parsed json.</li></ul></blockquote><p>jsoncfg.<strong>JSONConfigValueMapperError</strong></p><blockquote><p>Raised when you query and fetch a value by specifying a value mapper but the value mapperinstance raises an exception during while fetching the value.</p><ul class=simple><li><p><span class=\"docutils literal\">mapper_exception</span>: The exception instance raised by the value mapper.</li></ul></blockquote><p>jsoncfg.<strong>JSONConfigValueNotFoundError</strong></p><blockquote><p>This is raised when you try to fetch a required (non-optional) value that doesn\u2019t exist in theconfig file.</p></blockquote><p>jsoncfg.<strong>JSONConfigNodeTypeError</strong></p><blockquote><p>You get this exception if you try to perform an operation on a node that is not allowed forthat node type (object, array or scalar), for example indexing into an array with a string.</p></blockquote><p>jsoncfg.<strong>JSONConfigIndexError</strong></p><blockquote><p>Over-indexing a json array results in this exception.</p><ul class=simple><li><p><span class=\"docutils literal\">index</span>: The index used to over-index the array.</li></ul></blockquote></section><section id=utility-functions><h3><a href=#toc-entry-13 rel=nofollow>Utility functions</a></h3><p>The config wrapper objects have no public methods but in some cases you may want to extract some info from them(for example line/column number, type of node). You can do that with utility functions that can be imported fromthe <span class=\"docutils literal\">jsoncfg</span> module.</p><p>jsoncfg.<strong>node_location</strong><em>(config_node)</em></p><blockquote><p>Returns the location of the specified config node in the file it was parsed from. The returned location is anamed tuple <span class=\"docutils literal\">NodeLocation(line, column)</span> containing the 1-based line and column numbers.</p></blockquote><p>jsoncfg.<strong>node_exists</strong><em>(config_node)</em></p><blockquote><p>The library doesn\u2019t raise an error if you query a non-existing key. It raises error only when you try to fetcha value from it. Querying a non-existing key returns a special <span class=\"docutils literal\">ValueNotFoundNode</span> instance and this functionactually checks whether the node is something else than a <span class=\"docutils literal\">ValueNotFoundNode</span> instance. A node can beany part of the json: an object/dict, a list, or any other json value. Before trying to fetch a value from thequeried node you can test the result of a query with <span class=\"docutils literal\">node_exists()</span> whether it is an existing or non-existingnode in order to handle missing/optional config blocks gracefully without exceptions.</p><pre><code><span class=kn>from</span> <span class=nn>jsoncfg</span> <span class=kn>import</span> <span class=n>load_config</span><span class=p>,</span> <span class=n>node_exists</span><span class=w></span><span class=n>config</span> <span class=o>=</span> <span class=n>load_config</span><span class=p>(</span><span class=s1>'my_config.cfg'</span><span class=p>)</span><span class=w></span><span class=k>if</span> <span class=n>node_exists</span><span class=p>(</span><span class=n>config</span><span class=o>.</span><span class=n>whatever1</span><span class=o>.</span><span class=n>whatever2</span><span class=o>.</span><span class=n>whatever3</span><span class=p>):</span><span class=w></span>    <span class=o>...</span><span class=w></span><span class=c1># OR an equivalent piece of code:</span><span class=w></span><span class=n>node</span> <span class=o>=</span> <span class=n>config</span><span class=o>.</span><span class=n>whatever1</span><span class=o>.</span><span class=n>whatever2</span><span class=o>.</span><span class=n>whatever3</span><span class=w></span><span class=k>if</span> <span class=n>node_exists</span><span class=p>(</span><span class=n>node</span><span class=p>):</span><span class=w></span>    <span class=o>...</span><span class=w></span><span class=c1># This node_exists() call returns True:</span><span class=w></span><span class=n>exists_1</span> <span class=o>=</span> <span class=n>node_exists</span><span class=p>(</span><span class=n>config</span><span class=o>.</span><span class=n>existing_key1</span><span class=o>.</span><span class=n>existing_key2</span><span class=o>.</span><span class=n>existing_key3</span><span class=p>)</span><span class=w></span><span class=c1># This node_exists() call returns False:</span><span class=w></span><span class=n>exists_2</span> <span class=o>=</span> <span class=n>node_exists</span><span class=p>(</span><span class=n>config</span><span class=o>.</span><span class=n>non_existing_key1</span><span class=o>.</span><span class=n>non_existing_key2</span><span class=p>)</span></code></pre></blockquote><p>jsoncfg.<strong>node_is_object</strong><em>(config_node)</em></p><blockquote><p>Returns <span class=\"docutils literal\">True</span> if the specified <span class=\"docutils literal\">config_node</span> is a json object/dict.</p></blockquote><p>jsoncfg.<strong>node_is_array</strong><em>(config_node)</em></p><blockquote><p>Returns <span class=\"docutils literal\">True</span> if the specified <span class=\"docutils literal\">config_node</span> is a json array/list.</p></blockquote><p>jsoncfg.<strong>node_is_scalar</strong><em>(config_node)</em></p><blockquote><p>Returns <span class=\"docutils literal\">True</span> if the specified <span class=\"docutils literal\">config_node</span> is a json value other than an object or array - if it isn\u2019t acontainer.</p></blockquote><p>jsoncfg.<strong>ensure_exists</strong><em>(config_node)</em></p><blockquote><p>Returns the specified <span class=\"docutils literal\">config_node</span> if it is an existing node, otherwise it raises a config error (withconfig file location info when possible).</p></blockquote><p>jsoncfg.<strong>expect_object</strong><em>(config_node)</em></p><blockquote><p>Returns the specified <span class=\"docutils literal\">config_node</span> if it is a json object/dict, otherwise it raises a config error (withconfig file location info when possible).</p><p>In many cases you can just query and fetch objects using jsoncfg without doing explicit error handling andjsoncfg provides useful error messages when an error occurs (like trying the fetch the value from a non-existingnode, trying to map a non-integer value to an integer, etc\u2026). There is however at least one exception whenjsoncfg can\u2019t really auto-detect problems in a smart way: When you iterate over a json object or array. A jsonobject returns <cite>(key, value)</cite> pairs during iteration while an array returns simple items. If you just assume(without actually checking) that a config node is a json object/dict and you iterate over it with auto-unpackingthe returned <cite>(key, value)</cite> pairs into two variables then you might get into trouble if your assumption isincorrect and the actual config node is a json array. If it is an array then it will return simple items andpython fails to unpack it into two variables. The result is an ugly python runtime error and not a nice jsoncfgerror that says that the config node is an array and not an object/dict that your code expected. To overcome thisproblem you can use this <span class=\"docutils literal\">jsoncfg.expect_object()</span> function to ensure that the node you iterate is a jsonobject. The same is recommended in case of json arrays: it is recommended to check them with<span class=\"docutils literal\">jsoncfg.expect_array()</span> before iteration:</p><pre><code><span class=kn>from</span> <span class=nn>jsoncfg</span> <span class=kn>import</span> <span class=n>load_config</span><span class=p>,</span> <span class=n>expect_object</span><span class=p>,</span> <span class=n>expect_array</span><span class=w></span><span class=n>config</span> <span class=o>=</span> <span class=n>load_config</span><span class=p>(</span><span class=s1>'server.cfg'</span><span class=p>)</span><span class=w></span><span class=k>for</span> <span class=n>server</span> <span class=ow>in</span> <span class=n>expect_array</span><span class=p>(</span><span class=n>config</span><span class=o>.</span><span class=n>servers</span><span class=p>):</span><span class=w></span>    <span class=nb>print</span><span class=p>(</span><span class=s1>'------------'</span><span class=p>)</span><span class=w></span>    <span class=k>for</span> <span class=n>key</span><span class=p>,</span> <span class=n>value</span> <span class=ow>in</span> <span class=n>expect_object</span><span class=p>(</span><span class=n>server</span><span class=p>):</span><span class=w></span>        <span class=nb>print</span><span class=p>(</span><span class=s1>'</span><span class=si>%s</span><span class=s1>: </span><span class=si>%r</span><span class=s1>'</span> <span class=o>%</span> <span class=p>(</span><span class=n>key</span><span class=p>,</span> <span class=n>value</span><span class=p>))</span></code></pre></blockquote><p>jsoncfg.<strong>expect_array</strong><em>(config_node)</em></p><blockquote><p>Returns the specified <span class=\"docutils literal\">config_node</span> if it is a json array/list, otherwise it raises a config error (withconfig file location info when possible).</p></blockquote><p>jsoncfg.<strong>expect_scalar</strong><em>(config_node)</em></p><blockquote><p>Returns the specified <span class=\"docutils literal\">config_node</span> if it isn\u2019t a json object or array, otherwise it raises a config error (withconfig file location info when possible).</p></blockquote></section></section>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/pasztorpisti/json-cfg\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/json-cfg\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (MIT)</p>    <p><strong>Author:</strong> <a href=\"mailto:pasztorpisti@gmail.com\">Istv\u00e1n P\u00e1sztor</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      json,    </span>    <span class=\"package-keyword\">      config,    </span>    <span class=\"package-keyword\">      file,    </span>    <span class=\"package-keyword\">      parser,    </span>    <span class=\"package-keyword\">      configuration,    </span>    <span class=\"package-keyword\">      comment    </span>  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/pasztorpisti/\" aria-label=\"pasztorpisti\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/f11410c92402373438fa198023adf1e72ecf4de0/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f66386630373565343833373132306433356338663633393366323036636530313f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for pasztorpisti from gravatar.com\" title=\"Avatar for pasztorpisti from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            pasztorpisti          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2\">            Python :: 2          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+2.7\">            Python :: 2.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.3\">            Python :: 3.3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.4\">            Python :: 3.4          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.5\">            Python :: 3.5          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+CPython\">            Python :: Implementation :: CPython          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+PyPy\">            Python :: Implementation :: PyPy          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries+%3A%3A+Python+Modules\">            Software Development :: Libraries :: Python Modules          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/json-cfg/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-cfg/0.4.2/\">                <p class=\"release__version\">                  0.4.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-02-15T20:44:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 15, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-cfg/0.4.1/\">                <p class=\"release__version\">                  0.4.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-12T00:24:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 12, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-cfg/0.4.0/\">                <p class=\"release__version\">                  0.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-04-09T23:01:06+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 9, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-cfg/0.3.4/\">                <p class=\"release__version\">                  0.3.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-05-07T00:28:57+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 7, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-cfg/0.3.3/\">                <p class=\"release__version\">                  0.3.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-05-04T22:20:20+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 4, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-cfg/0.3.2/\">                <p class=\"release__version\">                  0.3.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-05-03T23:17:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 3, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-cfg/0.3.1/\">                <p class=\"release__version\">                  0.3.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-05-03T02:09:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 3, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-cfg/0.3.0/\">                <p class=\"release__version\">                  0.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-05-03T01:25:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 3, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-cfg/0.2.0/\">                <p class=\"release__version\">                  0.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-04-30T00:28:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 30, 2015</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/json-cfg/0.1.0/\">                <p class=\"release__version\">                  0.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-04-29T01:13:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 29, 2015</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/70/d8/34e37fb051be7c3b143bdb3cc5827cb52e60ee1014f4f18a190bb0237759/json-cfg-0.4.2.tar.gz\">          json-cfg-0.4.2.tar.gz        </a>        (44.9 kB        <a href=\"#copy-hash-modal-e44f79b8-0f47-40d4-9f12-d93ea428bf3f\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2017-02-15T20:44:19+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 15, 2017</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/b7/f5/ecdfc00830bcbaf7743f0237cf4f3ced5511d57257408db01aa320e09458/json_cfg-0.4.2-py2.py3-none-any.whl\">          json_cfg-0.4.2-py2.py3-none-any.whl        </a>        (36.4 kB        <a href=\"#copy-hash-modal-d047df91-1140-4774-84d8-932e4e51b674\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2017-02-15T20:44:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 15, 2017</time>          <code>py2</code>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-e44f79b8-0f47-40d4-9f12-d93ea428bf3f\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for json-cfg-0.4.2.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for json-cfg-0.4.2.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">d3dd1ab30b16a3bb249b6eb35fcc42198f9656f33127e36a3fadb5e37f50d45b</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">1fc2673a7110253af5975b0f4557d019</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">70d834e37fb051be7c3b143bdb3cc5827cb52e60ee1014f4f18a190bb0237759</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-d047df91-1140-4774-84d8-932e4e51b674\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for json_cfg-0.4.2-py2.py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for json_cfg-0.4.2-py2.py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">70c8d0a37a7133bdfa650760cc901172bffdb90cd9ac158fde70668d48b716c8</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">28f420ea51b97ebdffb1040a0befbfb6</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">b7f5ecdfc00830bcbaf7743f0237cf4f3ced5511d57257408db01aa320e09458</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
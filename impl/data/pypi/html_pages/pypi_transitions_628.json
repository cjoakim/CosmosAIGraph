{
  "libtype": "pypi",
  "libname": "transitions",
  "url": "http://github.com/pytransitions/transitions",
  "html": "<!DOCTYPE html><html  lang=\"en\"    data-color-mode=\"auto\" data-light-theme=\"light\" data-dark-theme=\"dark\"  data-a11y-animated-images=\"system\" data-a11y-link-underlines=\"true\"  >  <head>    <meta charset=\"utf-8\">  <link rel=\"dns-prefetch\" href=\"https://github.githubassets.com\">  <link rel=\"dns-prefetch\" href=\"https://avatars.githubusercontent.com\">  <link rel=\"dns-prefetch\" href=\"https://github-cloud.s3.amazonaws.com\">  <link rel=\"dns-prefetch\" href=\"https://user-images.githubusercontent.com/\">  <link rel=\"preconnect\" href=\"https://github.githubassets.com\" crossorigin>  <link rel=\"preconnect\" href=\"https://avatars.githubusercontent.com\">    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/light-0eace2597ca3.css\" /><link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/dark-a167e256da9c.css\" /><link data-color-theme=\"dark_dimmed\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_dimmed-d11f2cf8009b.css\" /><link data-color-theme=\"dark_high_contrast\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_high_contrast-ea7373db06c8.css\" /><link data-color-theme=\"dark_colorblind\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_colorblind-afa99dcf40f7.css\" /><link data-color-theme=\"light_colorblind\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/light_colorblind-af6c685139ba.css\" /><link data-color-theme=\"light_high_contrast\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/light_high_contrast-578cdbc8a5a9.css\" /><link data-color-theme=\"light_tritanopia\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/light_tritanopia-5cb699a7e247.css\" /><link data-color-theme=\"dark_tritanopia\" crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" data-href=\"https://github.githubassets.com/assets/dark_tritanopia-9b32204967c6.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/primer-primitives-2ef2a46b27ee.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/primer-711f412bb361.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/global-6a61d5daf002.css\" />    <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/github-f4d857cbc96a.css\" />  <link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/repository-6247ca238fd4.css\" /><link crossorigin=\"anonymous\" media=\"all\" rel=\"stylesheet\" href=\"https://github.githubassets.com/assets/code-6d7b4ef0ea51.css\" />    <script type=\"application/json\" id=\"client-env\">{\"locale\":\"en\",\"featureFlags\":[\"code_vulnerability_scanning\",\"copilot_conversational_ux_history_refs\",\"copilot_chat_attach_knowledge\",\"copilot_chat_knowledge_base_copy\",\"copilot_smell_icebreaker_ux\",\"copilot_implicit_context\",\"docset_management_ui\",\"copilot_chat_settings\",\"failbot_handle_non_errors\",\"geojson_azure_maps\",\"image_metric_tracking\",\"marketing_forms_api_integration_contact_request\",\"marketing_pages_search_explore_provider\",\"turbo_experiment_risky\",\"sample_network_conn_type\",\"no_character_key_shortcuts_in_inputs\",\"custom_inp\",\"remove_child_patch\"]}</script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/wp-runtime-8e89ae260dbb.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_dompurify_dist_purify_js-6890e890956f.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_stacktrace-parser_dist_stack-trace-parser_esm_js-node_modules_github_bro-a4c183-79f9611c275b.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_hydro-analytics-client_dist_analytics-client_js-node_modules_gith-6a10dd-e66ebda625fb.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_failbot_failbot_ts-479802999bcc.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/environment-fe7570f3bc38.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_selector-observer_dist_index_esm_js-9f960d9b217c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_behaviors_dist_esm_focus-zone_js-086f7a27bac0.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_relative-time-element_dist_index_js-c76945c5961a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_delegated-events_dist_index_js-node_modules_github_details-dialog-elemen-29dc30-a2a71f11a507.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_auto-complete-element_dist_index_js-12366198e7a5.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_text-expander-element_dist_index_js-8a621df59e80.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_filter-input-element_dist_index_js-node_modules_github_remote-inp-b7d8f4-654130b7cde5.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_file-attachment-element_dist_index_js-node_modules_primer_view-co-5dccdf-e5e2b9fa3c0c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/github-elements-e4eda4896b4e.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/element-registry-d5234b153a27.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_catalyst_lib_index_js-node_modules_github_hydro-analytics-client_-978abc0-add939c751ce.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_lit-html_lit-html_js-5b376145beff.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_github_alive-client_dist-bf5aa2-1b562c29ab8e.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_morphdom_dist_morphdom-esm_js-5bff297a06de.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_turbo_dist_turbo_es2017-esm_js-c91f4ad18b62.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_color-convert_index_js-72c9fbde5ad4.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_scroll-anchoring_dist_scro-231ccf-aa129238d13b.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_behaviors_dist_esm_dimensions_js-node_modules_github_jtml_lib_index_js-95b84ee6bc34.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_session-resume_dist_index_js-node_modules_primer_behaviors_dist_e-da6ec6-3f39339c9d98.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_paste-markdown_dist_index_esm_js-node_modules_github_quote-select-67e0dc-1aa35af077a4.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_updatable-content_ts-ee3fc84d7fb0.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_behaviors_task-list_ts-app_assets_modules_github_onfocus_ts-app_ass-421cec-9de4213015af.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_sticky-scroll-into-view_ts-94209c43e6af.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_behaviors_ajax-error_ts-app_assets_modules_github_behaviors_include-467754-f9bd433e9591.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_behaviors_commenting_edit_ts-app_assets_modules_github_behaviors_ht-83c235-9285faa0e011.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_blob-anchor_ts-app_assets_modules_github_filter-sort_ts-app_assets_-c96432-da3733f430b8.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/behaviors-1fb9e5061509.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_delegated-events_dist_index_js-node_modules_github_catalyst_lib_index_js-d0256ebff5cd.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/notifications-global-352d84c6cc82.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_virtualized-list_es_index_js-node_modules_github_template-parts_lib_index_js-878844713bc9.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_delegated-events_dist_inde-c537341-c7f6a41a084c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_github_ref-selector_ts-b593b93f23f5.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/codespaces-1a8626dd714a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_filter-input-element_dist_index_js-node_modules_github_mini-throt-08ab15-3e0517baca99.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_file-attachment-element_dist_index_js-node_modules_github_mini-th-55cf52-e14cb4b719b4.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/repositories-69068e0899f9.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/code-menu-614feb194539.js\"></script>    <title>GitHub - pytransitions/transitions: A lightweight, object-oriented finite state machine implementation in Python with many extensions</title>  <meta name=\"route-pattern\" content=\"/:user_id/:repository\" data-turbo-transient>  <meta name=\"route-controller\" content=\"files\" data-turbo-transient>  <meta name=\"route-action\" content=\"disambiguate\" data-turbo-transient>      <meta name=\"current-catalog-service-hash\" content=\"82c569b93da5c18ed649ebd4c2c79437db4611a6a1373e805a3cb001c64130b7\">  <meta name=\"request-id\" content=\"DC6C:33B058:6FA5A7:A5C326:65E778F3\" data-pjax-transient=\"true\"/><meta name=\"html-safe-nonce\" content=\"96cff9fd5ff63583512dc5fb2f01e29cf820744a21643dcf7af59e10787cc5ca\" data-pjax-transient=\"true\"/><meta name=\"visitor-payload\" content=\"eyJyZWZlcnJlciI6IiIsInJlcXVlc3RfaWQiOiJEQzZDOjMzQjA1ODo2RkE1QTc6QTVDMzI2OjY1RTc3OEYzIiwidmlzaXRvcl9pZCI6IjM1MTk0OTI0OTI2NDc0MzAzODciLCJyZWdpb25fZWRnZSI6ImlhZCIsInJlZ2lvbl9yZW5kZXIiOiJpYWQifQ==\" data-pjax-transient=\"true\"/><meta name=\"visitor-hmac\" content=\"47ca08e19cecfffaa7452284bd9154d665f566ac6e6452bb16511db701e74320\" data-pjax-transient=\"true\"/>    <meta name=\"hovercard-subject-tag\" content=\"repository:25131903\" data-turbo-transient>  <meta name=\"github-keyboard-shortcuts\" content=\"repository,copilot\" data-turbo-transient=\"true\" />    <meta name=\"selected-link\" value=\"repo_source\" data-turbo-transient>  <link rel=\"assets\" href=\"https://github.githubassets.com/\">    <meta name=\"google-site-verification\" content=\"c1kuD-K2HIVF635lypcsWPoD4kilo5-jA_wBFyT4uMY\">  <meta name=\"google-site-verification\" content=\"KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU\">  <meta name=\"google-site-verification\" content=\"ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA\">  <meta name=\"google-site-verification\" content=\"GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc\">  <meta name=\"google-site-verification\" content=\"Apib7-x98H0j5cPqHWwSMm6dNU4GmODRoqxLiDzdx9I\"><meta name=\"octolytics-url\" content=\"https://collector.github.com/github/collect\" />  <meta name=\"analytics-location\" content=\"/&lt;user-name&gt;/&lt;repo-name&gt;\" data-turbo-transient=\"true\" />        <meta name=\"user-login\" content=\"\">      <meta name=\"viewport\" content=\"width=device-width\">          <meta name=\"description\" content=\"A lightweight, object-oriented finite state machine implementation in Python with many extensions - pytransitions/transitions\">      <link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/opensearch.xml\" title=\"GitHub\">    <link rel=\"fluid-icon\" href=\"https://github.com/fluidicon.png\" title=\"GitHub\">    <meta property=\"fb:app_id\" content=\"1401488693436528\">    <meta name=\"apple-itunes-app\" content=\"app-id=1477376905, app-argument=https://github.com/pytransitions/transitions\" />      <meta name=\"twitter:image:src\" content=\"https://opengraph.githubassets.com/04c457f10eb51e8580108763555289bd7f2dacba98a82f7344d6ba94be295c1b/pytransitions/transitions\" /><meta name=\"twitter:site\" content=\"@github\" /><meta name=\"twitter:card\" content=\"summary_large_image\" /><meta name=\"twitter:title\" content=\"GitHub - pytransitions/transitions: A lightweight, object-oriented finite state machine implementation in Python with many extensions\" /><meta name=\"twitter:description\" content=\"A lightweight, object-oriented finite state machine implementation in Python with many extensions - pytransitions/transitions\" />      <meta property=\"og:image\" content=\"https://opengraph.githubassets.com/04c457f10eb51e8580108763555289bd7f2dacba98a82f7344d6ba94be295c1b/pytransitions/transitions\" /><meta property=\"og:image:alt\" content=\"A lightweight, object-oriented finite state machine implementation in Python with many extensions - pytransitions/transitions\" /><meta property=\"og:image:width\" content=\"1200\" /><meta property=\"og:image:height\" content=\"600\" /><meta property=\"og:site_name\" content=\"GitHub\" /><meta property=\"og:type\" content=\"object\" /><meta property=\"og:title\" content=\"GitHub - pytransitions/transitions: A lightweight, object-oriented finite state machine implementation in Python with many extensions\" /><meta property=\"og:url\" content=\"https://github.com/pytransitions/transitions\" /><meta property=\"og:description\" content=\"A lightweight, object-oriented finite state machine implementation in Python with many extensions - pytransitions/transitions\" />              <meta name=\"hostname\" content=\"github.com\">        <meta name=\"expected-hostname\" content=\"github.com\">  <meta http-equiv=\"x-pjax-version\" content=\"be6e4050f17c500d004779be975953b0ff17c7f4101f0da25bf913426dce79ac\" data-turbo-track=\"reload\">  <meta http-equiv=\"x-pjax-csp-version\" content=\"5dcfbec3488c5fd5a334e287ce6a17058b7d4beb91db2d4d184e4d55bbf1d7d7\" data-turbo-track=\"reload\">  <meta http-equiv=\"x-pjax-css-version\" content=\"0e9c7c8f6386b81dbe1faa1505e42c2d40a329e466b5a09ed94cc3dd230d1d42\" data-turbo-track=\"reload\">  <meta http-equiv=\"x-pjax-js-version\" content=\"7e44825d814e37051501f7ae57d62db356d7cef9ef4bbb587e9fa29fc554cfb7\" data-turbo-track=\"reload\">  <meta name=\"turbo-cache-control\" content=\"no-preview\" data-turbo-transient=\"\">      <meta data-hydrostats=\"publish\">  <meta name=\"go-import\" content=\"github.com/pytransitions/transitions git https://github.com/pytransitions/transitions.git\">  <meta name=\"octolytics-dimension-user_id\" content=\"26332704\" /><meta name=\"octolytics-dimension-user_login\" content=\"pytransitions\" /><meta name=\"octolytics-dimension-repository_id\" content=\"25131903\" /><meta name=\"octolytics-dimension-repository_nwo\" content=\"pytransitions/transitions\" /><meta name=\"octolytics-dimension-repository_public\" content=\"true\" /><meta name=\"octolytics-dimension-repository_is_fork\" content=\"false\" /><meta name=\"octolytics-dimension-repository_network_root_id\" content=\"25131903\" /><meta name=\"octolytics-dimension-repository_network_root_nwo\" content=\"pytransitions/transitions\" />    <link rel=\"canonical\" href=\"https://github.com/pytransitions/transitions\" data-turbo-transient>  <meta name=\"turbo-body-classes\" content=\"logged-out env-production page-responsive\">  <meta name=\"browser-stats-url\" content=\"https://api.github.com/_private/browser/stats\">  <meta name=\"browser-errors-url\" content=\"https://api.github.com/_private/browser/errors\">  <link rel=\"mask-icon\" href=\"https://github.githubassets.com/assets/pinned-octocat-093da3e6fa40.svg\" color=\"#000000\">  <link rel=\"alternate icon\" class=\"js-site-favicon\" type=\"image/png\" href=\"https://github.githubassets.com/favicons/favicon.png\">  <link rel=\"icon\" class=\"js-site-favicon\" type=\"image/svg+xml\" href=\"https://github.githubassets.com/favicons/favicon.svg\"><meta name=\"theme-color\" content=\"#1e2327\"><meta name=\"color-scheme\" content=\"light dark\" />  <link rel=\"manifest\" href=\"/manifest.json\" crossOrigin=\"use-credentials\">  </head>  <body class=\"logged-out env-production page-responsive\" style=\"word-wrap: break-word;\">    <div data-turbo-body class=\"logged-out env-production page-responsive\" style=\"word-wrap: break-word;\">          <div class=\"position-relative js-header-wrapper \">      <a href=\"#start-of-content\" class=\"px-2 py-4 color-bg-accent-emphasis color-fg-on-emphasis show-on-focus js-skip-to-content\">Skip to content</a>      <span data-view-component=\"true\" class=\"progress-pjax-loader Progress position-fixed width-full\">    <span style=\"width: 0%;\" data-view-component=\"true\" class=\"Progress-item progress-pjax-loader-bar left-0 top-0 color-bg-accent-emphasis\"></span></span>              <script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Button_IconButton_js-node_modules_primer_react_lib--23bcad-a89698f38643.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/keyboard-shortcuts-dialog-a23eda2bcf8d.js\"></script><react-partial  partial-name=\"keyboard-shortcuts-dialog\"  data-ssr=\"false\">    <script type=\"application/json\" data-target=\"react-partial.embeddedData\">{\"props\":{}}</script>  <div data-target=\"react-partial.reactRoot\"></div></react-partial>                          <script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_delegated-events_dist_inde-94fd67-99519581d0f8.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/sessions-585a7232e50a.js\"></script><header class=\"Header-old header-logged-out js-details-container Details position-relative f4 py-3\" role=\"banner\" data-color-mode=light data-light-theme=light data-dark-theme=dark>  <button type=\"button\" class=\"Header-backdrop d-lg-none border-0 position-fixed top-0 left-0 width-full height-full js-details-target\" aria-label=\"Toggle navigation\">    <span class=\"d-none\">Toggle navigation</span>  </button>  <div class=\" d-flex flex-column flex-lg-row flex-items-center p-responsive height-full position-relative z-1\">    <div class=\"d-flex flex-justify-between flex-items-center width-full width-lg-auto\">      <a class=\"mr-lg-3 color-fg-inherit flex-order-2\" href=\"https://github.com/\" aria-label=\"Homepage\" data-ga-click=\"(Logged out) Header, go to homepage, icon:logo-wordmark\">        <svg height=\"32\" aria-hidden=\"true\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" data-view-component=\"true\" class=\"octicon octicon-mark-github\">    <path d=\"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z\"></path></svg>      </a>      <div class=\"flex-1\">        <a href=\"/login?return_to=https%3A%2F%2Fgithub.com%2Fpytransitions%2Ftransitions\"          class=\"d-inline-block d-lg-none flex-order-1 f5 no-underline border color-border-default rounded-2 px-2 py-1 color-fg-inherit\"          data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/pytransitions/transitions&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"b092f390d01fae6cd00070eb06a528ac841435bc4e8f3afde58a545a560bd153\"          data-ga-click=\"(Logged out) Header, clicked Sign in, text:sign-in\">          Sign in        </a>      </div>      <div class=\"flex-1 flex-order-2 text-right\">        <button aria-label=\"Toggle navigation\" aria-expanded=\"false\" type=\"button\" data-view-component=\"true\" class=\"js-details-target Button--link Button--medium Button d-lg-none color-fg-inherit p-1\">  <span class=\"Button-content\">    <span class=\"Button-label\"><div class=\"HeaderMenu-toggle-bar rounded my-1\"></div>            <div class=\"HeaderMenu-toggle-bar rounded my-1\"></div>            <div class=\"HeaderMenu-toggle-bar rounded my-1\"></div></span>  </span></button>      </div>    </div>    <div class=\"HeaderMenu--logged-out p-responsive height-fit position-lg-relative d-lg-flex flex-column flex-auto pt-7 pb-4 top-0\">      <div class=\"header-menu-wrapper d-flex flex-column flex-self-end flex-lg-row flex-justify-between flex-auto p-3 p-lg-0 rounded rounded-lg-0 mt-3 mt-lg-0\">          <nav class=\"mt-0 px-3 px-lg-0 mb-3 mb-lg-0\" aria-label=\"Global\">            <ul class=\"d-lg-flex list-style-none\">                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">      <button type=\"button\" class=\"HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-3 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target\" aria-expanded=\"false\">        Product        <svg opacity=\"0.5\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-chevron-down HeaderMenu-icon ml-1\">    <path d=\"M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z\"></path></svg>      </button>      <div class=\"HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 py-2 py-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 d-lg-flex dropdown-menu-wide\">          <div class=\"px-lg-4 border-lg-right mb-4 mb-lg-0 pr-lg-7\">            <ul class=\"list-style-none f5\" >                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}\" href=\"/features/actions\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-workflow color-fg-subtle mr-3\">    <path d=\"M1 3a2 2 0 0 1 2-2h6.5a2 2 0 0 1 2 2v6.5a2 2 0 0 1-2 2H7v4.063C7 16.355 7.644 17 8.438 17H12.5v-2.5a2 2 0 0 1 2-2H21a2 2 0 0 1 2 2V21a2 2 0 0 1-2 2h-6.5a2 2 0 0 1-2-2v-2.5H8.437A2.939 2.939 0 0 1 5.5 15.562V11.5H3a2 2 0 0 1-2-2Zm2-.5a.5.5 0 0 0-.5.5v6.5a.5.5 0 0 0 .5.5h6.5a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5ZM14.5 14a.5.5 0 0 0-.5.5V21a.5.5 0 0 0 .5.5H21a.5.5 0 0 0 .5-.5v-6.5a.5.5 0 0 0-.5-.5Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Actions</div>        Automate any workflow      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}\" href=\"/features/packages\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-package color-fg-subtle mr-3\">    <path d=\"M12.876.64V.639l8.25 4.763c.541.313.875.89.875 1.515v9.525a1.75 1.75 0 0 1-.875 1.516l-8.25 4.762a1.748 1.748 0 0 1-1.75 0l-8.25-4.763a1.75 1.75 0 0 1-.875-1.515V6.917c0-.625.334-1.202.875-1.515L11.126.64a1.748 1.748 0 0 1 1.75 0Zm-1 1.298L4.251 6.34l7.75 4.474 7.75-4.474-7.625-4.402a.248.248 0 0 0-.25 0Zm.875 19.123 7.625-4.402a.25.25 0 0 0 .125-.216V7.639l-7.75 4.474ZM3.501 7.64v8.803c0 .09.048.172.125.216l7.625 4.402v-8.947Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Packages</div>        Host and manage packages      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}\" href=\"/features/security\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-shield-check color-fg-subtle mr-3\">    <path d=\"M16.53 9.78a.75.75 0 0 0-1.06-1.06L11 13.19l-1.97-1.97a.75.75 0 0 0-1.06 1.06l2.5 2.5a.75.75 0 0 0 1.06 0l5-5Z\"></path><path d=\"m12.54.637 8.25 2.675A1.75 1.75 0 0 1 22 4.976V10c0 6.19-3.771 10.704-9.401 12.83a1.704 1.704 0 0 1-1.198 0C5.77 20.705 2 16.19 2 10V4.976c0-.758.489-1.43 1.21-1.664L11.46.637a1.748 1.748 0 0 1 1.08 0Zm-.617 1.426-8.25 2.676a.249.249 0 0 0-.173.237V10c0 5.46 3.28 9.483 8.43 11.426a.199.199 0 0 0 .14 0C17.22 19.483 20.5 15.461 20.5 10V4.976a.25.25 0 0 0-.173-.237l-8.25-2.676a.253.253 0 0 0-.154 0Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Security</div>        Find and fix vulnerabilities      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}\" href=\"/features/codespaces\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-codespaces color-fg-subtle mr-3\">    <path d=\"M3.5 3.75C3.5 2.784 4.284 2 5.25 2h13.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 18.75 13H5.25a1.75 1.75 0 0 1-1.75-1.75Zm-2 12c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v4a1.75 1.75 0 0 1-1.75 1.75H3.25a1.75 1.75 0 0 1-1.75-1.75ZM5.25 3.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h13.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Zm-2 12a.25.25 0 0 0-.25.25v4c0 .138.112.25.25.25h17.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25Z\"></path><path d=\"M10 17.75a.75.75 0 0 1 .75-.75h6.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1-.75-.75Zm-4 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Codespaces</div>        Instant dev environments      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}\" href=\"/features/copilot\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-copilot color-fg-subtle mr-3\">    <path d=\"M23.922 16.992c-.861 1.495-5.859 5.023-11.922 5.023-6.063 0-11.061-3.528-11.922-5.023A.641.641 0 0 1 0 16.736v-2.869a.841.841 0 0 1 .053-.22c.372-.935 1.347-2.292 2.605-2.656.167-.429.414-1.055.644-1.517a10.195 10.195 0 0 1-.052-1.086c0-1.331.282-2.499 1.132-3.368.397-.406.89-.717 1.474-.952 1.399-1.136 3.392-2.093 6.122-2.093 2.731 0 4.767.957 6.166 2.093.584.235 1.077.546 1.474.952.85.869 1.132 2.037 1.132 3.368 0 .368-.014.733-.052 1.086.23.462.477 1.088.644 1.517 1.258.364 2.233 1.721 2.605 2.656a.832.832 0 0 1 .053.22v2.869a.641.641 0 0 1-.078.256ZM12.172 11h-.344a4.323 4.323 0 0 1-.355.508C10.703 12.455 9.555 13 7.965 13c-1.725 0-2.989-.359-3.782-1.259a2.005 2.005 0 0 1-.085-.104L4 11.741v6.585c1.435.779 4.514 2.179 8 2.179 3.486 0 6.565-1.4 8-2.179v-6.585l-.098-.104s-.033.045-.085.104c-.793.9-2.057 1.259-3.782 1.259-1.59 0-2.738-.545-3.508-1.492a4.323 4.323 0 0 1-.355-.508h-.016.016Zm.641-2.935c.136 1.057.403 1.913.878 2.497.442.544 1.134.938 2.344.938 1.573 0 2.292-.337 2.657-.751.384-.435.558-1.15.558-2.361 0-1.14-.243-1.847-.705-2.319-.477-.488-1.319-.862-2.824-1.025-1.487-.161-2.192.138-2.533.529-.269.307-.437.808-.438 1.578v.021c0 .265.021.562.063.893Zm-1.626 0c.042-.331.063-.628.063-.894v-.02c-.001-.77-.169-1.271-.438-1.578-.341-.391-1.046-.69-2.533-.529-1.505.163-2.347.537-2.824 1.025-.462.472-.705 1.179-.705 2.319 0 1.211.175 1.926.558 2.361.365.414 1.084.751 2.657.751 1.21 0 1.902-.394 2.344-.938.475-.584.742-1.44.878-2.497Z\"></path><path d=\"M14.5 14.25a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Zm-5 0a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Copilot</div>        Write better code with AI      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}\" href=\"/features/code-review\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-code-review color-fg-subtle mr-3\">    <path d=\"M10.3 6.74a.75.75 0 0 1-.04 1.06l-2.908 2.7 2.908 2.7a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 0 1 1.06.04Zm3.44 1.06a.75.75 0 1 1 1.02-1.1l3.5 3.25a.75.75 0 0 1 0 1.1l-3.5 3.25a.75.75 0 1 1-1.02-1.1l2.908-2.7-2.908-2.7Z\"></path><path d=\"M1.5 4.25c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v12.5a1.75 1.75 0 0 1-1.75 1.75h-9.69l-3.573 3.573A1.458 1.458 0 0 1 5 21.043V18.5H3.25a1.75 1.75 0 0 1-1.75-1.75ZM3.25 4a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h2.5a.75.75 0 0 1 .75.75v3.19l3.72-3.72a.749.749 0 0 1 .53-.22h10a.25.25 0 0 0 .25-.25V4.25a.25.25 0 0 0-.25-.25Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Code review</div>        Manage code changes      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center pb-lg-3\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}\" href=\"/features/issues\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-issue-opened color-fg-subtle mr-3\">    <path d=\"M12 1c6.075 0 11 4.925 11 11s-4.925 11-11 11S1 18.075 1 12 5.925 1 12 1ZM2.5 12a9.5 9.5 0 0 0 9.5 9.5 9.5 9.5 0 0 0 9.5-9.5A9.5 9.5 0 0 0 12 2.5 9.5 9.5 0 0 0 2.5 12Zm9.5 2a2 2 0 1 1-.001-3.999A2 2 0 0 1 12 14Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Issues</div>        Plan and track work      </div>    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}\" href=\"/features/discussions\">      <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-comment-discussion color-fg-subtle mr-3\">    <path d=\"M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 14.25 14H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 15.543V14H1.75A1.75 1.75 0 0 1 0 12.25v-9.5C0 1.784.784 1 1.75 1ZM1.5 2.75v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Z\"></path><path d=\"M22.5 8.75a.25.25 0 0 0-.25-.25h-3.5a.75.75 0 0 1 0-1.5h3.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 22.25 20H21v1.543a1.457 1.457 0 0 1-2.487 1.03L15.939 20H10.75A1.75 1.75 0 0 1 9 18.25v-1.465a.75.75 0 0 1 1.5 0v1.465c0 .138.112.25.25.25h5.5a.75.75 0 0 1 .53.22l2.72 2.72v-2.19a.75.75 0 0 1 .75-.75h2a.25.25 0 0 0 .25-.25v-9.5Z\"></path></svg>      <div>        <div class=\"color-fg-default h4\">Discussions</div>        Collaborate outside of code      </div>    </a></li>            </ul>          </div>          <div class=\"px-lg-4\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"product-explore-heading\">Explore</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"product-explore-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to All features&quot;,&quot;label&quot;:&quot;ref_cta:All features;&quot;}\" href=\"/features\">      All features    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Documentation&quot;,&quot;label&quot;:&quot;ref_cta:Documentation;&quot;}\" href=\"https://docs.github.com\">      Documentation    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to GitHub Skills&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Skills;&quot;}\" href=\"https://skills.github.com/\">      GitHub Skills    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Blog&quot;,&quot;label&quot;:&quot;ref_cta:Blog;&quot;}\" href=\"https://github.blog\">      Blog    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>      </div></li>                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">      <button type=\"button\" class=\"HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-3 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target\" aria-expanded=\"false\">        Solutions        <svg opacity=\"0.5\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-chevron-down HeaderMenu-icon ml-1\">    <path d=\"M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z\"></path></svg>      </button>      <div class=\"HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 py-2 py-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 px-lg-4\">          <div class=\"border-bottom pb-3 mb-3\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"solutions-for-heading\">For</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"solutions-for-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Enterprise&quot;,&quot;label&quot;:&quot;ref_cta:Enterprise;&quot;}\" href=\"/enterprise\">      Enterprise    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Teams&quot;,&quot;label&quot;:&quot;ref_cta:Teams;&quot;}\" href=\"/team\">      Teams    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Startups&quot;,&quot;label&quot;:&quot;ref_cta:Startups;&quot;}\" href=\"/enterprise/startups\">      Startups    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Education&quot;,&quot;label&quot;:&quot;ref_cta:Education;&quot;}\" href=\"https://education.github.com\">      Education    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>          <div class=\"border-bottom pb-3 mb-3\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"solutions-by-solution-heading\">By Solution</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"solutions-by-solution-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to CI/CD &amp;amp; Automation&quot;,&quot;label&quot;:&quot;ref_cta:CI/CD &amp;amp; Automation;&quot;}\" href=\"/solutions/ci-cd/\">      CI/CD &amp; Automation    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to DevOps&quot;,&quot;label&quot;:&quot;ref_cta:DevOps;&quot;}\" href=\"/solutions/devops/\">      DevOps    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to DevSecOps&quot;,&quot;label&quot;:&quot;ref_cta:DevSecOps;&quot;}\" href=\"https://resources.github.com/devops/fundamentals/devsecops/\">      DevSecOps    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>          <div class=\"\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"solutions-resources-heading\">Resources</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"solutions-resources-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Learning Pathways&quot;,&quot;label&quot;:&quot;ref_cta:Learning Pathways;&quot;}\" href=\"https://resources.github.com/learn/pathways/\">      Learning Pathways    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to White papers, Ebooks, Webinars&quot;,&quot;label&quot;:&quot;ref_cta:White papers, Ebooks, Webinars;&quot;}\" href=\"https://resources.github.com/\">      White papers, Ebooks, Webinars    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Customer Stories&quot;,&quot;label&quot;:&quot;ref_cta:Customer Stories;&quot;}\" href=\"/customer-stories\">      Customer Stories    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" target=\"_blank\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Solutions&quot;,&quot;action&quot;:&quot;click to go to Partners&quot;,&quot;label&quot;:&quot;ref_cta:Partners;&quot;}\" href=\"https://partner.github.com/\">      Partners    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle\">    <path d=\"M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z\"></path></svg></a></li>            </ul>          </div>      </div></li>                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">      <button type=\"button\" class=\"HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-3 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target\" aria-expanded=\"false\">        Open Source        <svg opacity=\"0.5\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-chevron-down HeaderMenu-icon ml-1\">    <path d=\"M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z\"></path></svg>      </button>      <div class=\"HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 py-2 py-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 px-lg-4\">          <div class=\"border-bottom pb-3 mb-3\">            <ul class=\"list-style-none f5\" >                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}\" href=\"/sponsors\">            <div>        <div class=\"color-fg-default h4\">GitHub Sponsors</div>        Fund open source developers      </div>    </a></li>            </ul>          </div>          <div class=\"border-bottom pb-3 mb-3\">            <ul class=\"list-style-none f5\" >                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}\" href=\"/readme\">            <div>        <div class=\"color-fg-default h4\">The ReadME Project</div>        GitHub community articles      </div>    </a></li>            </ul>          </div>          <div class=\"\">              <span class=\"d-block h4 color-fg-default my-1\" id=\"open-source-repositories-heading\">Repositories</span>            <ul class=\"list-style-none f5\" aria-labelledby=\"open-source-repositories-heading\">                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Topics&quot;,&quot;label&quot;:&quot;ref_cta:Topics;&quot;}\" href=\"/topics\">      Topics    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Trending&quot;,&quot;label&quot;:&quot;ref_cta:Trending;&quot;}\" href=\"/trending\">      Trending    </a></li>                <li>  <a class=\"HeaderMenu-dropdown-link lh-condensed d-block no-underline position-relative py-2 Link--secondary\" data-analytics-event=\"{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to Collections&quot;,&quot;label&quot;:&quot;ref_cta:Collections;&quot;}\" href=\"/collections\">      Collections    </a></li>            </ul>          </div>      </div></li>                <li class=\"HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item\">    <a class=\"HeaderMenu-link no-underline px-0 px-lg-2 py-3 py-lg-2 d-block d-lg-inline-block\" data-analytics-event=\"{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}\" href=\"/pricing\">Pricing</a></li>            </ul>          </nav>        <div class=\"d-lg-flex flex-items-center mb-3 mb-lg-0 text-center text-lg-left ml-3\" style=\"\">                <qbsearch-input class=\"search-input\" data-scope=\"repo:pytransitions/transitions\" data-custom-scopes-path=\"/search/custom_scopes\" data-delete-custom-scopes-csrf=\"OP2qd9I4tokCUtM-gQmoz7S1NQwYUqXcvX-O0zzZ0nqeReJ64YWGLF0341t2p-C_3uyGVwMfgdoV64awY-cpHw\" data-max-custom-scopes=\"10\" data-header-redesign-enabled=\"false\" data-initial-value=\"\" data-blackbird-suggestions-path=\"/search/suggestions\" data-jump-to-suggestions-path=\"/_graphql/GetSuggestedNavigationDestinations\" data-current-repository=\"pytransitions/transitions\" data-current-org=\"pytransitions\" data-current-owner=\"\" data-logged-in=\"false\" data-copilot-chat-enabled=\"false\" data-blackbird-indexed-repo-csrf=\"<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=6CrouYKLU5oFAi97LwZh5llmdl7EnOpMu64IFyf9xsob7zaeUMeoOdT3N2ZDKc1tb0xySCi0BIFiHPB2gz0Pbkvrtcy%2Bxr5jtPQRqEE%2BMozM5cG%2FEqFP9Arwj0v1I3MCfCWo74YJbRujy6vg0fAo1y83PJLT%2BUFvPoRVDnqRZk85sJDi%2B0AaL8zmbadEZUNW%2B%2BIwokdp9C9rGF1BJjFbbqiHZPHPM13SF6gBMw%2BJc3pW7UsUfgheo6MkPk8HJuK4BkiBOCiR%2BPMztf3ptVohuELH8N41yrPV0cW6JXAr44kEGlwxiPmWd2YsvxJ7RT%2FK2uxFaC7Xu6QouDhyP6w7Mq5M4i47tQ8uwatBCBaEifkhF%2BbFlwVm5diJwvxe%2FFD1NcT7rRL2H7luEdzbGneYSfhhdEnqgeR0QUNX4iqxB%2FI6Bt%2FgakHIPm08%2BCOtVza%2FQSnHTivZhoFGivhue7%2BaH20acjtRQPZAVsbxmNw%2F1X%2BuuP6301Ze5g5gNMaBHT99IAeyekl2vk%2B77YwFyqE5baXNH8GomNMrkIA%3D--OuYVwY4OXGGi3fKv--zoDm4q65daBnl%2BGl4y8n9w%3D%3D&quot; />\">  <div    class=\"search-input-container search-with-dialog position-relative d-flex flex-row flex-items-center mr-4 rounded\"    data-action=\"click:qbsearch-input#searchInputContainerClicked\"  >      <button        type=\"button\"        class=\"header-search-button placeholder  input-button form-control d-flex flex-1 flex-self-stretch flex-items-center no-wrap width-full py-0 pl-2 pr-0 text-left border-0 box-shadow-none\"        data-target=\"qbsearch-input.inputButton\"        placeholder=\"Search or jump to...\"        data-hotkey=s,/        autocapitalize=\"off\"        data-action=\"click:qbsearch-input#handleExpand\"      >        <div class=\"mr-2 color-fg-muted\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-search\">    <path d=\"M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z\"></path></svg>        </div>        <span class=\"flex-1\" data-target=\"qbsearch-input.inputButtonText\">Search or jump to...</span>          <div class=\"d-flex\" data-target=\"qbsearch-input.hotkeyIndicator\">            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"20\" aria-hidden=\"true\" class=\"mr-1\"><path fill=\"none\" stroke=\"#979A9C\" opacity=\".4\" d=\"M3.5.5h12c1.7 0 3 1.3 3 3v13c0 1.7-1.3 3-3 3h-12c-1.7 0-3-1.3-3-3v-13c0-1.7 1.3-3 3-3z\"></path><path fill=\"#979A9C\" d=\"M11.8 6L8 15.1h-.9L10.8 6h1z\"></path></svg>          </div>      </button>    <input type=\"hidden\" name=\"type\" class=\"js-site-search-type-field\">    <div class=\"Overlay--hidden \" data-modal-dialog-overlay>  <modal-dialog data-action=\"close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose\" data-target=\"qbsearch-input.searchSuggestionsDialog\" role=\"dialog\" id=\"search-suggestions-dialog\" aria-modal=\"true\" aria-labelledby=\"search-suggestions-dialog-header\" data-view-component=\"true\" class=\"Overlay Overlay--width-large Overlay--height-auto\">      <h1 id=\"search-suggestions-dialog-header\" class=\"sr-only\">Search code, repositories, users, issues, pull requests...</h1>    <div class=\"Overlay-body Overlay-body--paddingNone\">                <div data-view-component=\"true\">        <div class=\"search-suggestions position-fixed width-full color-shadow-large border color-fg-default color-bg-default overflow-hidden d-flex flex-column query-builder-container\"          style=\"border-radius: 12px;\"          data-target=\"qbsearch-input.queryBuilderContainer\"          hidden        >          <!-- '\"` --><!-- </textarea></xmp> --></option></form><form id=\"query-builder-test-form\" action=\"\" accept-charset=\"UTF-8\" method=\"get\">  <query-builder data-target=\"qbsearch-input.queryBuilder\" id=\"query-builder-query-builder-test\" data-filter-key=\":\" data-view-component=\"true\" class=\"QueryBuilder search-query-builder\">    <div class=\"FormControl FormControl--fullWidth\">      <label id=\"query-builder-test-label\" for=\"query-builder-test\" class=\"FormControl-label sr-only\">        Search      </label>      <div        class=\"QueryBuilder-StyledInput width-fit \"        data-target=\"query-builder.styledInput\"      >          <span id=\"query-builder-test-leadingvisual-wrap\" class=\"FormControl-input-leadingVisualWrap QueryBuilder-leadingVisualWrap\">            <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-search FormControl-input-leadingVisual\">    <path d=\"M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z\"></path></svg>          </span>        <div data-target=\"query-builder.styledInputContainer\" class=\"QueryBuilder-StyledInputContainer\">          <div            aria-hidden=\"true\"            class=\"QueryBuilder-StyledInputContent\"            data-target=\"query-builder.styledInputContent\"          ></div>          <div class=\"QueryBuilder-InputWrapper\">            <div aria-hidden=\"true\" class=\"QueryBuilder-Sizer\" data-target=\"query-builder.sizer\"></div>            <input id=\"query-builder-test\" name=\"query-builder-test\" value=\"\" autocomplete=\"off\" type=\"text\" role=\"combobox\" spellcheck=\"false\" aria-expanded=\"false\" aria-describedby=\"validation-8310a1cf-cfab-433c-8823-ee6bb85d9d11\" data-target=\"query-builder.input\" data-action=\"          input:query-builder#inputChange          blur:query-builder#inputBlur          keydown:query-builder#inputKeydown          focus:query-builder#inputFocus        \" data-view-component=\"true\" class=\"FormControl-input QueryBuilder-Input FormControl-medium\" />          </div>        </div>          <span class=\"sr-only\" id=\"query-builder-test-clear\">Clear</span>          <button role=\"button\" id=\"query-builder-test-clear-button\" aria-labelledby=\"query-builder-test-clear query-builder-test-label\" data-target=\"query-builder.clearButton\" data-action=\"                click:query-builder#clear                focus:query-builder#clearButtonFocus                blur:query-builder#clearButtonBlur              \" variant=\"small\" hidden=\"hidden\" type=\"button\" data-view-component=\"true\" class=\"Button Button--iconOnly Button--invisible Button--medium mr-1 px-2 py-0 d-flex flex-items-center rounded-1 color-fg-muted\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x-circle-fill Button-visual\">    <path d=\"M2.343 13.657A8 8 0 1 1 13.658 2.343 8 8 0 0 1 2.343 13.657ZM6.03 4.97a.751.751 0 0 0-1.042.018.751.751 0 0 0-.018 1.042L6.94 8 4.97 9.97a.749.749 0 0 0 .326 1.275.749.749 0 0 0 .734-.215L8 9.06l1.97 1.97a.749.749 0 0 0 1.275-.326.749.749 0 0 0-.215-.734L9.06 8l1.97-1.97a.749.749 0 0 0-.326-1.275.749.749 0 0 0-.734.215L8 6.94Z\"></path></svg></button>      </div>      <template id=\"search-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-search\">    <path d=\"M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z\"></path></svg></template><template id=\"code-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code\">    <path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg></template><template id=\"file-code-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-file-code\">    <path d=\"M4 1.75C4 .784 4.784 0 5.75 0h5.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v8.586A1.75 1.75 0 0 1 14.25 15h-9a.75.75 0 0 1 0-1.5h9a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 10 4.25V1.5H5.75a.25.25 0 0 0-.25.25v2.5a.75.75 0 0 1-1.5 0Zm1.72 4.97a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734l1.47-1.47-1.47-1.47a.75.75 0 0 1 0-1.06ZM3.28 7.78 1.81 9.25l1.47 1.47a.751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018l-2-2a.75.75 0 0 1 0-1.06l2-2a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Zm8.22-6.218V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg></template><template id=\"history-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-history\">    <path d=\"m.427 1.927 1.215 1.215a8.002 8.002 0 1 1-1.6 5.685.75.75 0 1 1 1.493-.154 6.5 6.5 0 1 0 1.18-4.458l1.358 1.358A.25.25 0 0 1 3.896 6H.25A.25.25 0 0 1 0 5.75V2.104a.25.25 0 0 1 .427-.177ZM7.75 4a.75.75 0 0 1 .75.75v2.992l2.028.812a.75.75 0 0 1-.557 1.392l-2.5-1A.751.751 0 0 1 7 8.25v-3.5A.75.75 0 0 1 7.75 4Z\"></path></svg></template><template id=\"repo-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo\">    <path d=\"M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.495 2.495 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.486 2.486 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.249.249 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z\"></path></svg></template><template id=\"bookmark-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-bookmark\">    <path d=\"M3 2.75C3 1.784 3.784 1 4.75 1h6.5c.966 0 1.75.784 1.75 1.75v11.5a.75.75 0 0 1-1.227.579L8 11.722l-3.773 3.107A.751.751 0 0 1 3 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.91l3.023-2.489a.75.75 0 0 1 .954 0l3.023 2.49V2.75a.25.25 0 0 0-.25-.25Z\"></path></svg></template><template id=\"plus-circle-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-plus-circle\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm7.25-3.25v2.5h2.5a.75.75 0 0 1 0 1.5h-2.5v2.5a.75.75 0 0 1-1.5 0v-2.5h-2.5a.75.75 0 0 1 0-1.5h2.5v-2.5a.75.75 0 0 1 1.5 0Z\"></path></svg></template><template id=\"circle-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-dot-fill\">    <path d=\"M8 4a4 4 0 1 1 0 8 4 4 0 0 1 0-8Z\"></path></svg></template><template id=\"trash-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-trash\">    <path d=\"M11 1.75V3h2.25a.75.75 0 0 1 0 1.5H2.75a.75.75 0 0 1 0-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75ZM4.496 6.675l.66 6.6a.25.25 0 0 0 .249.225h5.19a.25.25 0 0 0 .249-.225l.66-6.6a.75.75 0 0 1 1.492.149l-.66 6.6A1.748 1.748 0 0 1 10.595 15h-5.19a1.75 1.75 0 0 1-1.741-1.575l-.66-6.6a.75.75 0 1 1 1.492-.15ZM6.5 1.75V3h3V1.75a.25.25 0 0 0-.25-.25h-2.5a.25.25 0 0 0-.25.25Z\"></path></svg></template><template id=\"team-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-people\">    <path d=\"M2 5.5a3.5 3.5 0 1 1 5.898 2.549 5.508 5.508 0 0 1 3.034 4.084.75.75 0 1 1-1.482.235 4 4 0 0 0-7.9 0 .75.75 0 0 1-1.482-.236A5.507 5.507 0 0 1 3.102 8.05 3.493 3.493 0 0 1 2 5.5ZM11 4a3.001 3.001 0 0 1 2.22 5.018 5.01 5.01 0 0 1 2.56 3.012.749.749 0 0 1-.885.954.752.752 0 0 1-.549-.514 3.507 3.507 0 0 0-2.522-2.372.75.75 0 0 1-.574-.73v-.352a.75.75 0 0 1 .416-.672A1.5 1.5 0 0 0 11 5.5.75.75 0 0 1 11 4Zm-5.5-.5a2 2 0 1 0-.001 3.999A2 2 0 0 0 5.5 3.5Z\"></path></svg></template><template id=\"project-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-project\">    <path d=\"M1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25V1.75C0 .784.784 0 1.75 0ZM1.5 1.75v12.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25ZM11.75 3a.75.75 0 0 1 .75.75v7.5a.75.75 0 0 1-1.5 0v-7.5a.75.75 0 0 1 .75-.75Zm-8.25.75a.75.75 0 0 1 1.5 0v5.5a.75.75 0 0 1-1.5 0ZM8 3a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5A.75.75 0 0 1 8 3Z\"></path></svg></template><template id=\"pencil-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-pencil\">    <path d=\"M11.013 1.427a1.75 1.75 0 0 1 2.474 0l1.086 1.086a1.75 1.75 0 0 1 0 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 0 1-.927-.928l.929-3.25c.081-.286.235-.547.445-.758l8.61-8.61Zm.176 4.823L9.75 4.81l-6.286 6.287a.253.253 0 0 0-.064.108l-.558 1.953 1.953-.558a.253.253 0 0 0 .108-.064Zm1.238-3.763a.25.25 0 0 0-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 0 0 0-.354Z\"></path></svg></template><template id=\"copilot-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-copilot\">    <path d=\"M7.998 15.035c-4.562 0-7.873-2.914-7.998-3.749V9.338c.085-.628.677-1.686 1.588-2.065.013-.07.024-.143.036-.218.029-.183.06-.384.126-.612-.201-.508-.254-1.084-.254-1.656 0-.87.128-1.769.693-2.484.579-.733 1.494-1.124 2.724-1.261 1.206-.134 2.262.034 2.944.765.05.053.096.108.139.165.044-.057.094-.112.143-.165.682-.731 1.738-.899 2.944-.765 1.23.137 2.145.528 2.724 1.261.566.715.693 1.614.693 2.484 0 .572-.053 1.148-.254 1.656.066.228.098.429.126.612.012.076.024.148.037.218.924.385 1.522 1.471 1.591 2.095v1.872c0 .766-3.351 3.795-8.002 3.795Zm0-1.485c2.28 0 4.584-1.11 5.002-1.433V7.862l-.023-.116c-.49.21-1.075.291-1.727.291-1.146 0-2.059-.327-2.71-.991A3.222 3.222 0 0 1 8 6.303a3.24 3.24 0 0 1-.544.743c-.65.664-1.563.991-2.71.991-.652 0-1.236-.081-1.727-.291l-.023.116v4.255c.419.323 2.722 1.433 5.002 1.433ZM6.762 2.83c-.193-.206-.637-.413-1.682-.297-1.019.113-1.479.404-1.713.7-.247.312-.369.789-.369 1.554 0 .793.129 1.171.308 1.371.162.181.519.379 1.442.379.853 0 1.339-.235 1.638-.54.315-.322.527-.827.617-1.553.117-.935-.037-1.395-.241-1.614Zm4.155-.297c-1.044-.116-1.488.091-1.681.297-.204.219-.359.679-.242 1.614.091.726.303 1.231.618 1.553.299.305.784.54 1.638.54.922 0 1.28-.198 1.442-.379.179-.2.308-.578.308-1.371 0-.765-.123-1.242-.37-1.554-.233-.296-.693-.587-1.713-.7Z\"></path><path d=\"M6.25 9.037a.75.75 0 0 1 .75.75v1.501a.75.75 0 0 1-1.5 0V9.787a.75.75 0 0 1 .75-.75Zm4.25.75v1.501a.75.75 0 0 1-1.5 0V9.787a.75.75 0 0 1 1.5 0Z\"></path></svg></template><template id=\"workflow-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-workflow\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h3.5C6.216 0 7 .784 7 1.75v3.5A1.75 1.75 0 0 1 5.25 7H4v4a1 1 0 0 0 1 1h4v-1.25C9 9.784 9.784 9 10.75 9h3.5c.966 0 1.75.784 1.75 1.75v3.5A1.75 1.75 0 0 1 14.25 16h-3.5A1.75 1.75 0 0 1 9 14.25v-.75H5A2.5 2.5 0 0 1 2.5 11V7h-.75A1.75 1.75 0 0 1 0 5.25Zm1.75-.25a.25.25 0 0 0-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 0 0 .25-.25v-3.5a.25.25 0 0 0-.25-.25Zm9 9a.25.25 0 0 0-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 0 0 .25-.25v-3.5a.25.25 0 0 0-.25-.25Z\"></path></svg></template><template id=\"book-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-book\">    <path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg></template><template id=\"code-review-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code-review\">    <path d=\"M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 13H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25v-8.5C0 1.784.784 1 1.75 1ZM1.5 2.75v8.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-8.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Zm5.28 1.72a.75.75 0 0 1 0 1.06L5.31 7l1.47 1.47a.751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018l-2-2a.75.75 0 0 1 0-1.06l2-2a.75.75 0 0 1 1.06 0Zm2.44 0a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.69 7 9.22 5.53a.75.75 0 0 1 0-1.06Z\"></path></svg></template><template id=\"codespaces-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-codespaces\">    <path d=\"M0 11.25c0-.966.784-1.75 1.75-1.75h12.5c.966 0 1.75.784 1.75 1.75v3A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25Zm2-9.5C2 .784 2.784 0 3.75 0h8.5C13.216 0 14 .784 14 1.75v5a1.75 1.75 0 0 1-1.75 1.75h-8.5A1.75 1.75 0 0 1 2 6.75Zm1.75-.25a.25.25 0 0 0-.25.25v5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-5a.25.25 0 0 0-.25-.25Zm-2 9.5a.25.25 0 0 0-.25.25v3c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-3a.25.25 0 0 0-.25-.25Z\"></path><path d=\"M7 12.75a.75.75 0 0 1 .75-.75h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1-.75-.75Zm-4 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75Z\"></path></svg></template><template id=\"comment-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-comment\">    <path d=\"M1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 13.25 12H9.06l-2.573 2.573A1.458 1.458 0 0 1 4 13.543V12H2.75A1.75 1.75 0 0 1 1 10.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h4.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path></svg></template><template id=\"comment-discussion-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-comment-discussion\">    <path d=\"M1.75 1h8.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 10.25 10H7.061l-2.574 2.573A1.458 1.458 0 0 1 2 11.543V10h-.25A1.75 1.75 0 0 1 0 8.25v-5.5C0 1.784.784 1 1.75 1ZM1.5 2.75v5.5c0 .138.112.25.25.25h1a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h3.5a.25.25 0 0 0 .25-.25v-5.5a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25Zm13 2a.25.25 0 0 0-.25-.25h-.5a.75.75 0 0 1 0-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 14.25 12H14v1.543a1.458 1.458 0 0 1-2.487 1.03L9.22 12.28a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l2.22 2.22v-2.19a.75.75 0 0 1 .75-.75h1a.25.25 0 0 0 .25-.25Z\"></path></svg></template><template id=\"organization-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-organization\">    <path d=\"M1.75 16A1.75 1.75 0 0 1 0 14.25V1.75C0 .784.784 0 1.75 0h8.5C11.216 0 12 .784 12 1.75v12.5c0 .085-.006.168-.018.25h2.268a.25.25 0 0 0 .25-.25V8.285a.25.25 0 0 0-.111-.208l-1.055-.703a.749.749 0 1 1 .832-1.248l1.055.703c.487.325.779.871.779 1.456v5.965A1.75 1.75 0 0 1 14.25 16h-3.5a.766.766 0 0 1-.197-.026c-.099.017-.2.026-.303.026h-3a.75.75 0 0 1-.75-.75V14h-1v1.25a.75.75 0 0 1-.75.75Zm-.25-1.75c0 .138.112.25.25.25H4v-1.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 .75.75v1.25h2.25a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25ZM3.75 6h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5ZM3 3.75A.75.75 0 0 1 3.75 3h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 3.75Zm4 3A.75.75 0 0 1 7.75 6h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 7 6.75ZM7.75 3h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5ZM3 9.75A.75.75 0 0 1 3.75 9h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 9.75ZM7.75 9h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5Z\"></path></svg></template><template id=\"rocket-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-rocket\">    <path d=\"M14.064 0h.186C15.216 0 16 .784 16 1.75v.186a8.752 8.752 0 0 1-2.564 6.186l-.458.459c-.314.314-.641.616-.979.904v3.207c0 .608-.315 1.172-.833 1.49l-2.774 1.707a.749.749 0 0 1-1.11-.418l-.954-3.102a1.214 1.214 0 0 1-.145-.125L3.754 9.816a1.218 1.218 0 0 1-.124-.145L.528 8.717a.749.749 0 0 1-.418-1.11l1.71-2.774A1.748 1.748 0 0 1 3.31 4h3.204c.288-.338.59-.665.904-.979l.459-.458A8.749 8.749 0 0 1 14.064 0ZM8.938 3.623h-.002l-.458.458c-.76.76-1.437 1.598-2.02 2.5l-1.5 2.317 2.143 2.143 2.317-1.5c.902-.583 1.74-1.26 2.499-2.02l.459-.458a7.25 7.25 0 0 0 2.123-5.127V1.75a.25.25 0 0 0-.25-.25h-.186a7.249 7.249 0 0 0-5.125 2.123ZM3.56 14.56c-.732.732-2.334 1.045-3.005 1.148a.234.234 0 0 1-.201-.064.234.234 0 0 1-.064-.201c.103-.671.416-2.273 1.15-3.003a1.502 1.502 0 1 1 2.12 2.12Zm6.94-3.935c-.088.06-.177.118-.266.175l-2.35 1.521.548 1.783 1.949-1.2a.25.25 0 0 0 .119-.213ZM3.678 8.116 5.2 5.766c.058-.09.117-.178.176-.266H3.309a.25.25 0 0 0-.213.119l-1.2 1.95ZM12 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg></template><template id=\"shield-check-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-shield-check\">    <path d=\"m8.533.133 5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667l5.25-1.68a1.748 1.748 0 0 1 1.066 0Zm-.61 1.429.001.001-5.25 1.68a.251.251 0 0 0-.174.237V7c0 1.36.275 2.666 1.057 3.859.784 1.194 2.121 2.342 4.366 3.298a.196.196 0 0 0 .154 0c2.245-.957 3.582-2.103 4.366-3.297C13.225 9.666 13.5 8.358 13.5 7V3.48a.25.25 0 0 0-.174-.238l-5.25-1.68a.25.25 0 0 0-.153 0ZM11.28 6.28l-3.5 3.5a.75.75 0 0 1-1.06 0l-1.5-1.5a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l.97.97 2.97-2.97a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg></template><template id=\"heart-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-heart\">    <path d=\"m8 14.25.345.666a.75.75 0 0 1-.69 0l-.008-.004-.018-.01a7.152 7.152 0 0 1-.31-.17 22.055 22.055 0 0 1-3.434-2.414C2.045 10.731 0 8.35 0 5.5 0 2.836 2.086 1 4.25 1 5.797 1 7.153 1.802 8 3.02 8.847 1.802 10.203 1 11.75 1 13.914 1 16 2.836 16 5.5c0 2.85-2.045 5.231-3.885 6.818a22.066 22.066 0 0 1-3.744 2.584l-.018.01-.006.003h-.002ZM4.25 2.5c-1.336 0-2.75 1.164-2.75 3 0 2.15 1.58 4.144 3.365 5.682A20.58 20.58 0 0 0 8 13.393a20.58 20.58 0 0 0 3.135-2.211C12.92 9.644 14.5 7.65 14.5 5.5c0-1.836-1.414-3-2.75-3-1.373 0-2.609.986-3.029 2.456a.749.749 0 0 1-1.442 0C6.859 3.486 5.623 2.5 4.25 2.5Z\"></path></svg></template><template id=\"server-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-server\">    <path d=\"M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v4c0 .372-.116.717-.314 1 .198.283.314.628.314 1v4a1.75 1.75 0 0 1-1.75 1.75H1.75A1.75 1.75 0 0 1 0 12.75v-4c0-.358.109-.707.314-1a1.739 1.739 0 0 1-.314-1v-4C0 1.784.784 1 1.75 1ZM1.5 2.75v4c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Zm.25 5.75a.25.25 0 0 0-.25.25v4c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25ZM7 4.75A.75.75 0 0 1 7.75 4h4.5a.75.75 0 0 1 0 1.5h-4.5A.75.75 0 0 1 7 4.75ZM7.75 10h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM3 4.75A.75.75 0 0 1 3.75 4h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 4.75ZM3.75 10h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5Z\"></path></svg></template><template id=\"globe-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-globe\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM5.78 8.75a9.64 9.64 0 0 0 1.363 4.177c.255.426.542.832.857 1.215.245-.296.551-.705.857-1.215A9.64 9.64 0 0 0 10.22 8.75Zm4.44-1.5a9.64 9.64 0 0 0-1.363-4.177c-.307-.51-.612-.919-.857-1.215a9.927 9.927 0 0 0-.857 1.215A9.64 9.64 0 0 0 5.78 7.25Zm-5.944 1.5H1.543a6.507 6.507 0 0 0 4.666 5.5c-.123-.181-.24-.365-.352-.552-.715-1.192-1.437-2.874-1.581-4.948Zm-2.733-1.5h2.733c.144-2.074.866-3.756 1.58-4.948.12-.197.237-.381.353-.552a6.507 6.507 0 0 0-4.666 5.5Zm10.181 1.5c-.144 2.074-.866 3.756-1.58 4.948-.12.197-.237.381-.353.552a6.507 6.507 0 0 0 4.666-5.5Zm2.733-1.5a6.507 6.507 0 0 0-4.666-5.5c.123.181.24.365.353.552.714 1.192 1.436 2.874 1.58 4.948Z\"></path></svg></template><template id=\"issue-opened-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-issue-opened\">    <path d=\"M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path><path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z\"></path></svg></template><template id=\"device-mobile-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-device-mobile\">    <path d=\"M3.75 0h8.5C13.216 0 14 .784 14 1.75v12.5A1.75 1.75 0 0 1 12.25 16h-8.5A1.75 1.75 0 0 1 2 14.25V1.75C2 .784 2.784 0 3.75 0ZM3.5 1.75v12.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25ZM8 13a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg></template><template id=\"package-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-package\">    <path d=\"m8.878.392 5.25 3.045c.54.314.872.89.872 1.514v6.098a1.75 1.75 0 0 1-.872 1.514l-5.25 3.045a1.75 1.75 0 0 1-1.756 0l-5.25-3.045A1.75 1.75 0 0 1 1 11.049V4.951c0-.624.332-1.201.872-1.514L7.122.392a1.75 1.75 0 0 1 1.756 0ZM7.875 1.69l-4.63 2.685L8 7.133l4.755-2.758-4.63-2.685a.248.248 0 0 0-.25 0ZM2.5 5.677v5.372c0 .09.047.171.125.216l4.625 2.683V8.432Zm6.25 8.271 4.625-2.683a.25.25 0 0 0 .125-.216V5.677L8.75 8.432Z\"></path></svg></template><template id=\"credit-card-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-credit-card\">    <path d=\"M10.75 9a.75.75 0 0 0 0 1.5h1.5a.75.75 0 0 0 0-1.5h-1.5Z\"></path><path d=\"M0 3.75C0 2.784.784 2 1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 14H1.75A1.75 1.75 0 0 1 0 12.25ZM14.5 6.5h-13v5.75c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25Zm0-2.75a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25V5h13Z\"></path></svg></template><template id=\"play-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-play\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z\"></path></svg></template><template id=\"gift-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-gift\">    <path d=\"M2 2.75A2.75 2.75 0 0 1 4.75 0c.983 0 1.873.42 2.57 1.232.268.318.497.668.68 1.042.183-.375.411-.725.68-1.044C9.376.42 10.266 0 11.25 0a2.75 2.75 0 0 1 2.45 4h.55c.966 0 1.75.784 1.75 1.75v2c0 .698-.409 1.301-1 1.582v4.918A1.75 1.75 0 0 1 13.25 16H2.75A1.75 1.75 0 0 1 1 14.25V9.332C.409 9.05 0 8.448 0 7.75v-2C0 4.784.784 4 1.75 4h.55c-.192-.375-.3-.8-.3-1.25ZM7.25 9.5H2.5v4.75c0 .138.112.25.25.25h4.5Zm1.5 0v5h4.5a.25.25 0 0 0 .25-.25V9.5Zm0-4V8h5.5a.25.25 0 0 0 .25-.25v-2a.25.25 0 0 0-.25-.25Zm-7 0a.25.25 0 0 0-.25.25v2c0 .138.112.25.25.25h5.5V5.5h-5.5Zm3-4a1.25 1.25 0 0 0 0 2.5h2.309c-.233-.818-.542-1.401-.878-1.793-.43-.502-.915-.707-1.431-.707ZM8.941 4h2.309a1.25 1.25 0 0 0 0-2.5c-.516 0-1 .205-1.43.707-.337.392-.646.975-.879 1.793Z\"></path></svg></template><template id=\"code-square-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code-square\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25Zm7.47 3.97a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L10.69 8 9.22 6.53a.75.75 0 0 1 0-1.06ZM6.78 6.53 5.31 8l1.47 1.47a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215l-2-2a.75.75 0 0 1 0-1.06l2-2a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg></template><template id=\"device-desktop-icon\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-device-desktop\">    <path d=\"M14.25 1c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 14.25 12h-3.727c.099 1.041.52 1.872 1.292 2.757A.752.752 0 0 1 11.25 16h-6.5a.75.75 0 0 1-.565-1.243c.772-.885 1.192-1.716 1.292-2.757H1.75A1.75 1.75 0 0 1 0 10.25v-7.5C0 1.784.784 1 1.75 1ZM1.75 2.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25ZM9.018 12H6.982a5.72 5.72 0 0 1-.765 2.5h3.566a5.72 5.72 0 0 1-.765-2.5Z\"></path></svg></template>        <div class=\"position-relative\">                <ul                  role=\"listbox\"                  class=\"ActionListWrap QueryBuilder-ListWrap\"                  aria-label=\"Suggestions\"                  data-action=\"                    combobox-commit:query-builder#comboboxCommit                    mousedown:query-builder#resultsMousedown                  \"                  data-target=\"query-builder.resultsList\"                  data-persist-list=false                  id=\"query-builder-test-results\"                ></ul>        </div>      <div class=\"FormControl-inlineValidation\" id=\"validation-8310a1cf-cfab-433c-8823-ee6bb85d9d11\" hidden=\"hidden\">        <span class=\"FormControl-inlineValidation--visual\">          <svg aria-hidden=\"true\" height=\"12\" viewBox=\"0 0 12 12\" version=\"1.1\" width=\"12\" data-view-component=\"true\" class=\"octicon octicon-alert-fill\">    <path d=\"M4.855.708c.5-.896 1.79-.896 2.29 0l4.675 8.351a1.312 1.312 0 0 1-1.146 1.954H1.33A1.313 1.313 0 0 1 .183 9.058ZM7 7V3H5v4Zm-1 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\"></path></svg>        </span>        <span></span></div>    </div>    <div data-target=\"query-builder.screenReaderFeedback\" aria-live=\"polite\" aria-atomic=\"true\" class=\"sr-only\"></div></query-builder></form>          <div class=\"d-flex flex-row color-fg-muted px-3 text-small color-bg-default search-feedback-prompt\">            <a target=\"_blank\" href=\"https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax\" data-view-component=\"true\" class=\"Link color-fg-accent text-normal ml-2\">              Search syntax tips</a>            <div class=\"d-flex flex-1\"></div>          </div>        </div></div>    </div></modal-dialog></div>  </div>  <div data-action=\"click:qbsearch-input#retract\" class=\"dark-backdrop position-fixed\" hidden data-target=\"qbsearch-input.darkBackdrop\"></div>  <div class=\"color-fg-default\">    <dialog-helper>  <dialog data-target=\"qbsearch-input.feedbackDialog\" data-action=\"close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose\" id=\"feedback-dialog\" aria-modal=\"true\" aria-labelledby=\"feedback-dialog-title\" aria-describedby=\"feedback-dialog-description\" data-view-component=\"true\" class=\"Overlay Overlay-whenNarrow Overlay--size-medium Overlay--motion-scaleFade\">    <div data-view-component=\"true\" class=\"Overlay-header\">  <div class=\"Overlay-headerContentWrap\">    <div class=\"Overlay-titleWrap\">      <h1 class=\"Overlay-title \" id=\"feedback-dialog-title\">        Provide feedback      </h1>    </div>    <div class=\"Overlay-actionWrap\">      <button data-close-dialog-id=\"feedback-dialog\" aria-label=\"Close\" type=\"button\" data-view-component=\"true\" class=\"close-button Overlay-closeButton\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg></button>    </div>  </div></div>      <scrollable-region data-labelled-by=\"feedback-dialog-title\">        <div data-view-component=\"true\" class=\"Overlay-body\">        <!-- '\"` --><!-- </textarea></xmp> --></option></form><form id=\"code-search-feedback-form\" data-turbo=\"false\" action=\"/search/feedback\" accept-charset=\"UTF-8\" method=\"post\"><input type=\"hidden\" data-csrf=\"true\" name=\"authenticity_token\" value=\"dIokrlqHCerWIaf2PX5erdlcYE5ZL3VKVqN7XpFOVwppEaktwFZnk3uyM/zGHeIuTOwJ5dxOhnbvL+6gKA8MDg==\" />          <p>We read every piece of feedback, and take your input very seriously.</p>          <textarea name=\"feedback\" class=\"form-control width-full mb-2\" style=\"height: 120px\" id=\"feedback\"></textarea>          <input name=\"include_email\" id=\"include_email\" aria-label=\"Include my email address so I can be contacted\" class=\"form-control mr-2\" type=\"checkbox\">          <label for=\"include_email\" style=\"font-weight: normal\">Include my email address so I can be contacted</label></form></div>      </scrollable-region>      <div data-view-component=\"true\" class=\"Overlay-footer Overlay-footer--alignEnd\">          <button data-close-dialog-id=\"feedback-dialog\" type=\"button\" data-view-component=\"true\" class=\"btn\">    Cancel</button>          <button form=\"code-search-feedback-form\" data-action=\"click:qbsearch-input#submitFeedback\" type=\"submit\" data-view-component=\"true\" class=\"btn-primary btn\">    Submit feedback</button></div></dialog></dialog-helper>    <custom-scopes data-target=\"qbsearch-input.customScopesManager\">    <dialog-helper>  <dialog data-target=\"custom-scopes.customScopesModalDialog\" data-action=\"close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose\" id=\"custom-scopes-dialog\" aria-modal=\"true\" aria-labelledby=\"custom-scopes-dialog-title\" aria-describedby=\"custom-scopes-dialog-description\" data-view-component=\"true\" class=\"Overlay Overlay-whenNarrow Overlay--size-medium Overlay--motion-scaleFade\">    <div data-view-component=\"true\" class=\"Overlay-header Overlay-header--divided\">  <div class=\"Overlay-headerContentWrap\">    <div class=\"Overlay-titleWrap\">      <h1 class=\"Overlay-title \" id=\"custom-scopes-dialog-title\">        Saved searches      </h1>        <h2 id=\"custom-scopes-dialog-description\" class=\"Overlay-description\">Use saved searches to filter your results more quickly</h2>    </div>    <div class=\"Overlay-actionWrap\">      <button data-close-dialog-id=\"custom-scopes-dialog\" aria-label=\"Close\" type=\"button\" data-view-component=\"true\" class=\"close-button Overlay-closeButton\"><svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg></button>    </div>  </div></div>      <scrollable-region data-labelled-by=\"custom-scopes-dialog-title\">        <div data-view-component=\"true\" class=\"Overlay-body\">        <div data-target=\"custom-scopes.customScopesModalDialogFlash\"></div>        <div hidden class=\"create-custom-scope-form\" data-target=\"custom-scopes.createCustomScopeForm\">        <!-- '\"` --><!-- </textarea></xmp> --></option></form><form id=\"custom-scopes-dialog-form\" data-turbo=\"false\" action=\"/search/custom_scopes\" accept-charset=\"UTF-8\" method=\"post\"><input type=\"hidden\" data-csrf=\"true\" name=\"authenticity_token\" value=\"jBVQwvciNoCf1gNpzTTGnXALZcoedqOVgRFg2zRssVK2xESeoPwUhZBN4iK6V2r1tiv9dqD6PhpIYCVDFgrFOg==\" />          <div data-target=\"custom-scopes.customScopesModalDialogFlash\"></div>          <input type=\"hidden\" id=\"custom_scope_id\" name=\"custom_scope_id\" data-target=\"custom-scopes.customScopesIdField\">          <div class=\"form-group\">            <label for=\"custom_scope_name\">Name</label>            <auto-check src=\"/search/custom_scopes/check_name\" required>              <input                type=\"text\"                name=\"custom_scope_name\"                id=\"custom_scope_name\"                data-target=\"custom-scopes.customScopesNameField\"                class=\"form-control\"                autocomplete=\"off\"                placeholder=\"github-ruby\"                required                maxlength=\"50\">              <input type=\"hidden\" data-csrf=\"true\" value=\"I44gvfr1mE974BG6cUMVWb9HHGLpPkUKtoYjvm/1ohmOZahK7ouD448e77I5gkundkjUbXbUAboTLTxZnEx/Pg==\" />            </auto-check>          </div>          <div class=\"form-group\">            <label for=\"custom_scope_query\">Query</label>            <input              type=\"text\"              name=\"custom_scope_query\"              id=\"custom_scope_query\"              data-target=\"custom-scopes.customScopesQueryField\"              class=\"form-control\"              autocomplete=\"off\"              placeholder=\"(repo:mona/a OR repo:mona/b) AND lang:python\"              required              maxlength=\"500\">          </div>          <p class=\"text-small color-fg-muted\">            To see all available qualifiers, see our <a class=\"Link--inTextBlock\" href=\"https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax\">documentation</a>.          </p></form>        </div>        <div data-target=\"custom-scopes.manageCustomScopesForm\">          <div data-target=\"custom-scopes.list\"></div>        </div></div>      </scrollable-region>      <div data-view-component=\"true\" class=\"Overlay-footer Overlay-footer--alignEnd Overlay-footer--divided\">          <button data-action=\"click:custom-scopes#customScopesCancel\" type=\"button\" data-view-component=\"true\" class=\"btn\">    Cancel</button>          <button form=\"custom-scopes-dialog-form\" data-action=\"click:custom-scopes#customScopesSubmit\" data-target=\"custom-scopes.customScopesSubmitButton\" type=\"submit\" data-view-component=\"true\" class=\"btn-primary btn\">    Create saved search</button></div></dialog></dialog-helper>    </custom-scopes>  </div></qbsearch-input><input type=\"hidden\" data-csrf=\"true\" class=\"js-data-jump-to-suggestions-path-csrf\" value=\"1r4o/tOcTkmD7kpcMw0aYCGDDcQ4eKdrYBFBpvfZWZFPUuOmKCIIp74ATV468I/9/Wj3gbVcEvcK+IHEyoMKyQ==\" />          <div class=\"position-relative mr-lg-3 d-lg-inline-block\">            <a href=\"/login?return_to=https%3A%2F%2Fgithub.com%2Fpytransitions%2Ftransitions\"              class=\"HeaderMenu-link HeaderMenu-link--sign-in flex-shrink-0 no-underline d-block d-lg-inline-block border border-lg-0 rounded rounded-lg-0 p-2 p-lg-0\"              data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/pytransitions/transitions&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"b092f390d01fae6cd00070eb06a528ac841435bc4e8f3afde58a545a560bd153\"              data-ga-click=\"(Logged out) Header, clicked Sign in, text:sign-in\">              Sign in            </a>          </div>            <a href=\"/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&amp;source=header-repo&amp;source_repo=pytransitions%2Ftransitions\"              class=\"HeaderMenu-link HeaderMenu-link--sign-up flex-shrink-0 d-none d-lg-inline-block no-underline border color-border-default rounded px-2 py-1\"              data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/pytransitions/transitions&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"b092f390d01fae6cd00070eb06a528ac841435bc4e8f3afde58a545a560bd153\"              data-analytics-event=\"{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/&lt;user-name&gt;/&lt;repo-name&gt;;ref_cta:Sign up;ref_loc:header logged out&quot;}\"            >              Sign up            </a>        </div>      </div>    </div>  </div></header>      <div hidden=\"hidden\" data-view-component=\"true\" class=\"js-stale-session-flash stale-session-flash flash flash-warn flash-full mb-3\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-alert\">    <path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>        <span class=\"js-stale-session-flash-signed-in\" hidden>You signed in with another tab or window. <a class=\"Link--inTextBlock\" href=\"\">Reload</a> to refresh your session.</span>        <span class=\"js-stale-session-flash-signed-out\" hidden>You signed out in another tab or window. <a class=\"Link--inTextBlock\" href=\"\">Reload</a> to refresh your session.</span>        <span class=\"js-stale-session-flash-switched\" hidden>You switched accounts on another tab or window. <a class=\"Link--inTextBlock\" href=\"\">Reload</a> to refresh your session.</span>    <button id=\"icon-button-92870949-c558-427d-b8d1-d81cce09298b\" aria-labelledby=\"tooltip-4b29621e-2723-4423-beeb-0cc0d45082e6\" type=\"button\" data-view-component=\"true\" class=\"Button Button--iconOnly Button--invisible Button--medium flash-close js-flash-close\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x Button-visual\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg></button><tool-tip id=\"tooltip-4b29621e-2723-4423-beeb-0cc0d45082e6\" for=\"icon-button-92870949-c558-427d-b8d1-d81cce09298b\" popover=\"manual\" data-direction=\"s\" data-type=\"label\" data-view-component=\"true\" class=\"sr-only position-absolute\">Dismiss alert</tool-tip>  </div>    </div>  <div id=\"start-of-content\" class=\"show-on-focus\"></div>    <div id=\"js-flash-container\" data-turbo-replace>  <template class=\"js-flash-template\">    <div class=\"flash flash-full   {{ className }}\">  <div class=\"px-2\" >    <button autofocus class=\"flash-close js-flash-close\" type=\"button\" aria-label=\"Dismiss this message\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg>    </button>    <div aria-atomic=\"true\" role=\"alert\" class=\"js-flash-alert\">            <div>{{ message }}</div>    </div>  </div></div>  </template></div>        <include-fragment class=\"js-notification-shelf-include-fragment\" data-base-src=\"https://github.com/notifications/beta/shelf\"></include-fragment>  <div    class=\"application-main \"    data-commit-hovercards-enabled    data-discussion-hovercards-enabled    data-issue-and-pr-hovercards-enabled  >        <div itemscope itemtype=\"http://schema.org/SoftwareSourceCode\" class=\"\">    <main id=\"js-repo-pjax-container\" >                        <div id=\"repository-container-header\"  class=\"pt-3 hide-full-screen\" style=\"background-color: var(--page-header-bgColor, var(--color-page-header-bg));\" data-turbo-replace>      <div class=\"d-flex flex-wrap flex-justify-end mb-3  px-3 px-md-4 px-lg-5\" style=\"gap: 1rem;\">        <div class=\"flex-auto min-width-0 width-fit mr-3\">              <div class=\" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo color-fg-muted mr-2\">    <path d=\"M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.495 2.495 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.486 2.486 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.249.249 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z\"></path></svg>        <span class=\"author flex-self-stretch\" itemprop=\"author\">      <a class=\"url fn\" rel=\"author\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/pytransitions/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"/pytransitions\">        pytransitions</a>    </span>    <span class=\"mx-1 flex-self-stretch color-fg-muted\">/</span>    <strong itemprop=\"name\" class=\"mr-2 flex-self-stretch\">      <a data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" href=\"/pytransitions/transitions\">transitions</a>    </strong>    <span></span><span class=\"Label Label--secondary v-align-middle mr-1\">Public</span>  </div>        </div>        <div id=\"repository-details-container\" data-turbo-replace>            <ul class=\"pagehead-actions flex-shrink-0 d-none d-md-inline\" style=\"padding: 2px 0;\">            <li>            <a href=\"/login?return_to=%2Fpytransitions%2Ftransitions\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/pytransitions/transitions&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"91e6d2e29fb7c103ba88ec08756c4a97598232d9631f091ced0af611a0eaa23d\" aria-label=\"You must be signed in to change notification settings\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-bell mr-2\">    <path d=\"M8 16a2 2 0 0 0 1.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 0 0 8 16ZM3 5a5 5 0 0 1 10 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.519 1.519 0 0 1 13.482 13H2.518a1.516 1.516 0 0 1-1.263-2.36l1.703-2.554A.255.255 0 0 0 3 7.947Zm5-3.5A3.5 3.5 0 0 0 4.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.017.017 0 0 0-.003.01l.001.006c0 .002.002.004.004.006l.006.004.007.001h10.964l.007-.001.006-.004.004-.006.001-.007a.017.017 0 0 0-.003-.01l-1.703-2.554a1.745 1.745 0 0 1-.294-.97V5A3.5 3.5 0 0 0 8 1.5Z\"></path></svg>Notifications</a>  </li>  <li>          <a icon=\"repo-forked\" id=\"fork-button\" href=\"/login?return_to=%2Fpytransitions%2Ftransitions\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;repo details fork button&quot;,&quot;repository_id&quot;:25131903,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/pytransitions/transitions&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"0077e2e4a94d919c7ec9f0757c4984aedf2388b528fe2a7f6888a8dfa81e1609\" data-view-component=\"true\" class=\"btn-sm btn\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo-forked mr-2\">    <path d=\"M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z\"></path></svg>Fork    <span id=\"repo-network-counter\" data-pjax-replace=\"true\" data-turbo-replace=\"true\" title=\"517\" data-view-component=\"true\" class=\"Counter\">517</span></a>  </li>  <li>        <div data-view-component=\"true\" class=\"BtnGroup d-flex\">        <a href=\"/login?return_to=%2Fpytransitions%2Ftransitions\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:25131903,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/pytransitions/transitions&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"fd85892d0d3b6fa79a76a1bc7b2ca253603a635f5d9cf05320a90d937badac8f\" aria-label=\"You must be signed in to star a repository\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn BtnGroup-item\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star v-align-text-bottom d-inline-block mr-2\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg><span data-view-component=\"true\" class=\"d-inline\">          Star</span>          <span id=\"repo-stars-counter-star\" aria-label=\"5275 users starred this repository\" data-singular-suffix=\"user starred this repository\" data-plural-suffix=\"users starred this repository\" data-turbo-replace=\"true\" title=\"5,275\" data-view-component=\"true\" class=\"Counter js-social-count\">5.3k</span></a>        <button aria-label=\"You must be signed in to add this repository to a list\" type=\"button\" disabled=\"disabled\" data-view-component=\"true\" class=\"btn-sm btn BtnGroup-item px-2\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-triangle-down\">    <path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></button></div>  </li>    <li>            </li></ul>        </div>      </div>        <div id=\"responsive-meta-container\" data-turbo-replace>      <div class=\"d-block d-md-none mb-2 px-3 px-md-4 px-lg-5\">      <p class=\"f4 mb-3 \">        A lightweight, object-oriented finite state machine implementation in Python with many extensions      </p>          <h3 class=\"sr-only\">License</h3>  <div class=\"mb-2\">    <a href=\"/pytransitions/transitions/blob/master/LICENSE\"      class=\"Link--muted\"            data-analytics-event=\"{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:license&quot;}\"    >      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-law mr-2\">    <path d=\"M8.75.75V2h.985c.304 0 .603.08.867.231l1.29.736c.038.022.08.033.124.033h2.234a.75.75 0 0 1 0 1.5h-.427l2.111 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.006.005-.01.01-.045.04c-.21.176-.441.327-.686.45C14.556 10.78 13.88 11 13 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L12.178 4.5h-.162c-.305 0-.604-.079-.868-.231l-1.29-.736a.245.245 0 0 0-.124-.033H8.75V13h2.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1 0-1.5h2.5V3.5h-.984a.245.245 0 0 0-.124.033l-1.289.737c-.265.15-.564.23-.869.23h-.162l2.112 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.016.015-.045.04c-.21.176-.441.327-.686.45C4.556 10.78 3.88 11 3 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L2.178 4.5H1.75a.75.75 0 0 1 0-1.5h2.234a.249.249 0 0 0 .125-.033l1.288-.737c.265-.15.564-.23.869-.23h.984V.75a.75.75 0 0 1 1.5 0Zm2.945 8.477c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L13 6.327Zm-10 0c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L3 6.327Z\"></path></svg>     MIT license    </a>  </div>    <div class=\"mb-3\">        <a class=\"Link--secondary no-underline mr-3\" href=\"/pytransitions/transitions/stargazers\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star mr-1\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg>          <span class=\"text-bold\">5.3k</span>          stars</a>        <a class=\"Link--secondary no-underline mr-3\" href=\"/pytransitions/transitions/forks\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo-forked mr-1\">    <path d=\"M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z\"></path></svg>          <span class=\"text-bold\">517</span>          forks</a>          <a class=\"Link--secondary no-underline mr-3 d-inline-block\" href=\"/pytransitions/transitions/branches\">            <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-git-branch mr-1\">    <path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg>            <span>Branches</span></a>          <a class=\"Link--secondary no-underline d-inline-block\" href=\"/pytransitions/transitions/tags\">            <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-tag mr-1\">    <path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg>            <span>Tags</span></a>        <a class=\"Link--secondary no-underline d-inline-block\" href=\"/pytransitions/transitions/activity\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-pulse mr-1\">    <path d=\"M6 2c.306 0 .582.187.696.471L10 10.731l1.304-3.26A.751.751 0 0 1 12 7h3.25a.75.75 0 0 1 0 1.5h-2.742l-1.812 4.528a.751.751 0 0 1-1.392 0L6 4.77 4.696 8.03A.75.75 0 0 1 4 8.5H.75a.75.75 0 0 1 0-1.5h2.742l1.812-4.529A.751.751 0 0 1 6 2Z\"></path></svg>          <span>Activity</span></a>    </div>      <div class=\"d-flex flex-wrap gap-2\">        <div class=\"flex-1\">            <div data-view-component=\"true\" class=\"BtnGroup d-flex\">        <a href=\"/login?return_to=%2Fpytransitions%2Ftransitions\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:25131903,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/pytransitions/transitions&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"fd85892d0d3b6fa79a76a1bc7b2ca253603a635f5d9cf05320a90d937badac8f\" aria-label=\"You must be signed in to star a repository\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn btn-block BtnGroup-item\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star v-align-text-bottom d-inline-block mr-2\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg><span data-view-component=\"true\" class=\"d-inline\">          Star</span></a>        <button aria-label=\"You must be signed in to add this repository to a list\" type=\"button\" disabled=\"disabled\" data-view-component=\"true\" class=\"btn-sm btn BtnGroup-item px-2\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-triangle-down\">    <path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></button></div>        </div>        <div class=\"flex-1\">                <a href=\"/login?return_to=%2Fpytransitions%2Ftransitions\" rel=\"nofollow\" data-hydro-click=\"{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/pytransitions/transitions&quot;,&quot;user_id&quot;:null}}\" data-hydro-click-hmac=\"91e6d2e29fb7c103ba88ec08756c4a97598232d9631f091ced0af611a0eaa23d\" aria-label=\"You must be signed in to change notification settings\" data-view-component=\"true\" class=\"tooltipped tooltipped-s btn-sm btn btn-block\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-bell mr-2\">    <path d=\"M8 16a2 2 0 0 0 1.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 0 0 8 16ZM3 5a5 5 0 0 1 10 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.519 1.519 0 0 1 13.482 13H2.518a1.516 1.516 0 0 1-1.263-2.36l1.703-2.554A.255.255 0 0 0 3 7.947Zm5-3.5A3.5 3.5 0 0 0 4.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.017.017 0 0 0-.003.01l.001.006c0 .002.002.004.004.006l.006.004.007.001h10.964l.007-.001.006-.004.004-.006.001-.007a.017.017 0 0 0-.003-.01l-1.703-2.554a1.745 1.745 0 0 1-.294-.97V5A3.5 3.5 0 0 0 8 1.5Z\"></path></svg>Notifications</a>        </div>          <span>                      </span>      </div>  </div></div>          <nav data-pjax=\"#js-repo-pjax-container\" aria-label=\"Repository\" data-view-component=\"true\" class=\"js-repo-nav js-sidenav-container-pjax js-responsive-underlinenav overflow-hidden UnderlineNav px-3 px-md-4 px-lg-5\">  <ul data-view-component=\"true\" class=\"UnderlineNav-body list-style-none\">      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"code-tab\" href=\"/pytransitions/transitions\" data-tab-item=\"i0code-tab\" data-selected-links=\"repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments repo_attestations /pytransitions/transitions\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g c\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Code&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" aria-current=\"page\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item selected\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg>        <span data-content=\"Code\">Code</span>          <span id=\"code-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"issues-tab\" href=\"/pytransitions/transitions/issues\" data-tab-item=\"i1issues-tab\" data-selected-links=\"repo_issues repo_labels repo_milestones /pytransitions/transitions/issues\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g i\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Issues&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-issue-opened UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path><path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z\"></path></svg>        <span data-content=\"Issues\">Issues</span>          <span id=\"issues-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"17\" data-view-component=\"true\" class=\"Counter\">17</span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"pull-requests-tab\" href=\"/pytransitions/transitions/pulls\" data-tab-item=\"i2pull-requests-tab\" data-selected-links=\"repo_pulls checks /pytransitions/transitions/pulls\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g p\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Pull requests&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-git-pull-request UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M1.5 3.25a2.25 2.25 0 1 1 3 2.122v5.256a2.251 2.251 0 1 1-1.5 0V5.372A2.25 2.25 0 0 1 1.5 3.25Zm5.677-.177L9.573.677A.25.25 0 0 1 10 .854V2.5h1A2.5 2.5 0 0 1 13.5 5v5.628a2.251 2.251 0 1 1-1.5 0V5a1 1 0 0 0-1-1h-1v1.646a.25.25 0 0 1-.427.177L7.177 3.427a.25.25 0 0 1 0-.354ZM3.75 2.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm0 9.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm8.25.75a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Z\"></path></svg>        <span data-content=\"Pull requests\">Pull requests</span>          <span id=\"pull-requests-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"3\" data-view-component=\"true\" class=\"Counter\">3</span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"discussions-tab\" href=\"/pytransitions/transitions/discussions\" data-tab-item=\"i3discussions-tab\" data-selected-links=\"repo_discussions /pytransitions/transitions/discussions\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g g\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Discussions&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-comment-discussion UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M1.75 1h8.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 10.25 10H7.061l-2.574 2.573A1.458 1.458 0 0 1 2 11.543V10h-.25A1.75 1.75 0 0 1 0 8.25v-5.5C0 1.784.784 1 1.75 1ZM1.5 2.75v5.5c0 .138.112.25.25.25h1a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h3.5a.25.25 0 0 0 .25-.25v-5.5a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25Zm13 2a.25.25 0 0 0-.25-.25h-.5a.75.75 0 0 1 0-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 14.25 12H14v1.543a1.458 1.458 0 0 1-2.487 1.03L9.22 12.28a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l2.22 2.22v-2.19a.75.75 0 0 1 .75-.75h1a.25.25 0 0 0 .25-.25Z\"></path></svg>        <span data-content=\"Discussions\">Discussions</span>          <span id=\"discussions-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"actions-tab\" href=\"/pytransitions/transitions/actions\" data-tab-item=\"i4actions-tab\" data-selected-links=\"repo_actions /pytransitions/transitions/actions\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g a\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Actions&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-play UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z\"></path></svg>        <span data-content=\"Actions\">Actions</span>          <span id=\"actions-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"projects-tab\" href=\"/pytransitions/transitions/projects\" data-tab-item=\"i5projects-tab\" data-selected-links=\"repo_projects new_repo_project repo_project /pytransitions/transitions/projects\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g b\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Projects&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-table UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25ZM6.5 6.5v8h7.75a.25.25 0 0 0 .25-.25V6.5Zm8-1.5V1.75a.25.25 0 0 0-.25-.25H6.5V5Zm-13 1.5v7.75c0 .138.112.25.25.25H5v-8ZM5 5V1.5H1.75a.25.25 0 0 0-.25.25V5Z\"></path></svg>        <span data-content=\"Projects\">Projects</span>          <span id=\"projects-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"0\" hidden=\"hidden\" data-view-component=\"true\" class=\"Counter\">0</span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"wiki-tab\" href=\"/pytransitions/transitions/wiki\" data-tab-item=\"i6wiki-tab\" data-selected-links=\"repo_wiki /pytransitions/transitions/wiki\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g w\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Wiki&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-book UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg>        <span data-content=\"Wiki\">Wiki</span>          <span id=\"wiki-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"security-tab\" href=\"/pytransitions/transitions/security\" data-tab-item=\"i7security-tab\" data-selected-links=\"security overview alerts policy token_scanning code_scanning /pytransitions/transitions/security\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-hotkey=\"g s\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Security&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-shield UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M7.467.133a1.748 1.748 0 0 1 1.066 0l5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667Zm.61 1.429a.25.25 0 0 0-.153 0l-5.25 1.68a.25.25 0 0 0-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.196.196 0 0 0 .154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.251.251 0 0 0-.174-.237l-5.25-1.68ZM8.75 4.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 1.5 0ZM9 10.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>        <span data-content=\"Security\">Security</span>          <include-fragment src=\"/pytransitions/transitions/security/overall-count\" accept=\"text/fragment+html\"></include-fragment>    </a></li>      <li data-view-component=\"true\" class=\"d-inline-flex\">  <a id=\"insights-tab\" href=\"/pytransitions/transitions/pulse\" data-tab-item=\"i8insights-tab\" data-selected-links=\"repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /pytransitions/transitions/pulse\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" data-analytics-event=\"{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Insights&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}\" data-view-component=\"true\" class=\"UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item\">                  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-graph UnderlineNav-octicon d-none d-sm-inline\">    <path d=\"M1.5 1.75V13.5h13.75a.75.75 0 0 1 0 1.5H.75a.75.75 0 0 1-.75-.75V1.75a.75.75 0 0 1 1.5 0Zm14.28 2.53-5.25 5.25a.75.75 0 0 1-1.06 0L7 7.06 4.28 9.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.25-3.25a.75.75 0 0 1 1.06 0L10 7.94l4.72-4.72a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg>        <span data-content=\"Insights\">Insights</span>          <span id=\"insights-repo-tab-count\" data-pjax-replace=\"\" data-turbo-replace=\"\" title=\"Not available\" data-view-component=\"true\" class=\"Counter\"></span>    </a></li></ul>    <div style=\"visibility:hidden;\" data-view-component=\"true\" class=\"UnderlineNav-actions js-responsive-underlinenav-overflow position-absolute pr-3 pr-md-4 pr-lg-5 right-0\">      <action-menu data-select-variant=\"none\" data-view-component=\"true\">  <focus-group direction=\"vertical\" mnemonics retain>    <button id=\"action-menu-6b4aa4d2-543a-4bd9-86ee-c93b14899182-button\" popovertarget=\"action-menu-6b4aa4d2-543a-4bd9-86ee-c93b14899182-overlay\" aria-controls=\"action-menu-6b4aa4d2-543a-4bd9-86ee-c93b14899182-list\" aria-haspopup=\"true\" aria-labelledby=\"tooltip-e0691de1-5c70-4c33-b5f6-c498246c0b28\" type=\"button\" data-view-component=\"true\" class=\"Button Button--iconOnly Button--secondary Button--medium UnderlineNav-item\">  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-kebab-horizontal Button-visual\">    <path d=\"M8 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Zm13 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path></svg></button><tool-tip id=\"tooltip-e0691de1-5c70-4c33-b5f6-c498246c0b28\" for=\"action-menu-6b4aa4d2-543a-4bd9-86ee-c93b14899182-button\" popover=\"manual\" data-direction=\"s\" data-type=\"label\" data-view-component=\"true\" class=\"sr-only position-absolute\">Additional navigation options</tool-tip><anchored-position id=\"action-menu-6b4aa4d2-543a-4bd9-86ee-c93b14899182-overlay\" anchor=\"action-menu-6b4aa4d2-543a-4bd9-86ee-c93b14899182-button\" align=\"start\" side=\"outside-bottom\" anchor-offset=\"normal\" popover=\"auto\" data-view-component=\"true\">  <div data-view-component=\"true\" class=\"Overlay Overlay--size-auto\">          <div data-view-component=\"true\" class=\"Overlay-body Overlay-body--paddingNone\">          <div data-view-component=\"true\">  <ul aria-labelledby=\"action-menu-6b4aa4d2-543a-4bd9-86ee-c93b14899182-button\" id=\"action-menu-6b4aa4d2-543a-4bd9-86ee-c93b14899182-list\" role=\"menu\" data-view-component=\"true\" class=\"ActionListWrap--inset ActionListWrap\">      <li hidden=\"hidden\" data-menu-item=\"i0code-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-c8430e6d-b21c-401f-9a4e-26acc9dae1b0\" href=\"/pytransitions/transitions\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-code\">    <path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Code</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i1issues-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-cb0bd29b-c874-452d-8008-7e3922dcfb7f\" href=\"/pytransitions/transitions/issues\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-issue-opened\">    <path d=\"M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path><path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Issues</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i2pull-requests-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-caeb3ba7-cf54-4e5b-ae29-7579aad4f5a1\" href=\"/pytransitions/transitions/pulls\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-git-pull-request\">    <path d=\"M1.5 3.25a2.25 2.25 0 1 1 3 2.122v5.256a2.251 2.251 0 1 1-1.5 0V5.372A2.25 2.25 0 0 1 1.5 3.25Zm5.677-.177L9.573.677A.25.25 0 0 1 10 .854V2.5h1A2.5 2.5 0 0 1 13.5 5v5.628a2.251 2.251 0 1 1-1.5 0V5a1 1 0 0 0-1-1h-1v1.646a.25.25 0 0 1-.427.177L7.177 3.427a.25.25 0 0 1 0-.354ZM3.75 2.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm0 9.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm8.25.75a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Pull requests</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i3discussions-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-b5e368d7-85b8-4046-a58e-7cf6e0f9a504\" href=\"/pytransitions/transitions/discussions\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-comment-discussion\">    <path d=\"M1.75 1h8.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 10.25 10H7.061l-2.574 2.573A1.458 1.458 0 0 1 2 11.543V10h-.25A1.75 1.75 0 0 1 0 8.25v-5.5C0 1.784.784 1 1.75 1ZM1.5 2.75v5.5c0 .138.112.25.25.25h1a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h3.5a.25.25 0 0 0 .25-.25v-5.5a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25Zm13 2a.25.25 0 0 0-.25-.25h-.5a.75.75 0 0 1 0-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 14.25 12H14v1.543a1.458 1.458 0 0 1-2.487 1.03L9.22 12.28a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l2.22 2.22v-2.19a.75.75 0 0 1 .75-.75h1a.25.25 0 0 0 .25-.25Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Discussions</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i4actions-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-8e076660-d526-48a6-9278-0ec1304dd66a\" href=\"/pytransitions/transitions/actions\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-play\">    <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Actions</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i5projects-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-0513e158-595b-4043-98a0-f5ef9d1be729\" href=\"/pytransitions/transitions/projects\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-table\">    <path d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25ZM6.5 6.5v8h7.75a.25.25 0 0 0 .25-.25V6.5Zm8-1.5V1.75a.25.25 0 0 0-.25-.25H6.5V5Zm-13 1.5v7.75c0 .138.112.25.25.25H5v-8ZM5 5V1.5H1.75a.25.25 0 0 0-.25.25V5Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Projects</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i6wiki-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-7053ece0-3285-4a01-9e97-c2904365aebf\" href=\"/pytransitions/transitions/wiki\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-book\">    <path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Wiki</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i7security-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-e629fc01-d73e-43b2-a973-a4ee51b9d064\" href=\"/pytransitions/transitions/security\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-shield\">    <path d=\"M7.467.133a1.748 1.748 0 0 1 1.066 0l5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667Zm.61 1.429a.25.25 0 0 0-.153 0l-5.25 1.68a.25.25 0 0 0-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.196.196 0 0 0 .154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.251.251 0 0 0-.174-.237l-5.25-1.68ZM8.75 4.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 1.5 0ZM9 10.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Security</span></a>    </li>      <li hidden=\"hidden\" data-menu-item=\"i8insights-tab\" data-targets=\"action-list.items action-list.items\" role=\"none\" data-view-component=\"true\" class=\"ActionListItem\">        <a tabindex=\"-1\" id=\"item-33d14cef-0c0e-4b17-a51f-a5e36744590e\" href=\"/pytransitions/transitions/pulse\" role=\"menuitem\" data-view-component=\"true\" class=\"ActionListContent ActionListContent--visual16\">        <span class=\"ActionListItem-visual ActionListItem-visual--leading\">          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-graph\">    <path d=\"M1.5 1.75V13.5h13.75a.75.75 0 0 1 0 1.5H.75a.75.75 0 0 1-.75-.75V1.75a.75.75 0 0 1 1.5 0Zm14.28 2.53-5.25 5.25a.75.75 0 0 1-1.06 0L7 7.06 4.28 9.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.25-3.25a.75.75 0 0 1 1.06 0L10 7.94l4.72-4.72a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z\"></path></svg>        </span>              <span data-view-component=\"true\" class=\"ActionListItem-label\">          Insights</span></a>    </li></ul>  </div></div>      </div></anchored-position>  </focus-group></action-menu></div></nav>  </div>  <turbo-frame id=\"repo-content-turbo-frame\" target=\"_top\" data-turbo-action=\"advance\" class=\"\">    <div id=\"repo-content-pjax-container\" class=\"repository-content \" >                <h1 class='sr-only'>pytransitions/transitions</h1>  <div class=\"clearfix container-xl px-md-4 px-lg-5 px-3\">    <div>  <div id=\"spoof-warning\" class=\"mt-0 pb-3\" hidden aria-hidden>  <div data-view-component=\"true\" class=\"flash flash-warn mt-0 clearfix\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-alert float-left mt-1\">    <path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>      <div class=\"overflow-hidden\">This commit does not belong to any branch on this repository, and may belong to a fork outside of the repository.</div>  </div></div>  <include-fragment src=\"/pytransitions/transitions/spoofed_commit_check/8ab2529508733fe30111c830ebc1cc708d32f205\" data-test-selector=\"spoofed-commit-check\"></include-fragment>  <div style=\"max-width: 100%\" data-view-component=\"true\" class=\"Layout Layout--flowRow-until-md react-repos-overview-margin Layout--sidebarPosition-end Layout--sidebarPosition-flowRow-end\">  <div data-view-component=\"true\" class=\"Layout-main\">        <script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/react-lib-1fbfc5be2c18.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_octicons-react_dist_index_esm_js-node_modules_primer_react_lib-es-2e8e7c-adc8451a70cf.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Box_Box_js-8f8c5e2a2cbf.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Button_Button_js-67fe00b5266a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_ActionList_index_js-2dd4d13d3ae6.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Overlay_Overlay_js-node_modules_primer_react_lib-es-fa1130-829932cf63db.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Text_Text_js-node_modules_primer_react_lib-esm_Text-85a14b-236dc9716ad0.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_ActionMenu_ActionMenu_js-eaf74522e470.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_react-router-dom_dist_index_js-3b41341d50fe.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_Dialog_js-node_modules_primer_react_lib-esm_Label_L-857e1c-77794958a54a.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_UnderlineNav_index_js-89fa5806aa3c.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/vendors-node_modules_primer_react_lib-esm_AvatarStack_AvatarStack_js-node_modules_primer_reac-e445e7-175b51e43dcc.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_react-core_create-browser-history_ts-ui_packages_react-core_AppContextProvider_ts-809ab9-bf008735d0bb.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_paths_index_ts-7137b25aa38b.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_ref-selector_RefSelector_tsx-dbbdef4348e2.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/ui_packages_commit-attribution_index_ts-ui_packages_commit-checks-status_index_ts-ui_packages-ffbe33-4c4ddf7d268d.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/app_assets_modules_react-code-view_components_directory_DirectoryContent_index_ts-app_assets_-1fd1f5-c96303590595.js\"></script><script crossorigin=\"anonymous\" defer=\"defer\" type=\"application/javascript\" src=\"https://github.githubassets.com/assets/repos-overview-523b8f59ec33.js\"></script><react-partial  partial-name=\"repos-overview\"  data-ssr=\"true\">    <script type=\"application/json\" data-target=\"react-partial.embeddedData\">{\"props\":{\"initialPayload\":{\"allShortcutsEnabled\":false,\"path\":\"/\",\"repo\":{\"id\":25131903,\"defaultBranch\":\"master\",\"name\":\"transitions\",\"ownerLogin\":\"pytransitions\",\"currentUserCanPush\":false,\"isFork\":false,\"isEmpty\":false,\"createdAt\":\"2014-10-12T20:59:09.000Z\",\"ownerAvatar\":\"https://avatars.githubusercontent.com/u/26332704?v=4\",\"public\":true,\"private\":false,\"isOrgOwned\":true},\"currentUser\":null,\"refInfo\":{\"name\":\"master\",\"listCacheKey\":\"v0:1698162685.0\",\"canEdit\":false,\"refType\":\"branch\",\"currentOid\":\"8ab2529508733fe30111c830ebc1cc708d32f205\"},\"tree\":{\"items\":[{\"name\":\".github\",\"path\":\".github\",\"contentType\":\"directory\"},{\"name\":\"binder\",\"path\":\"binder\",\"contentType\":\"directory\"},{\"name\":\"examples\",\"path\":\"examples\",\"contentType\":\"directory\"},{\"name\":\"tests\",\"path\":\"tests\",\"contentType\":\"directory\"},{\"name\":\"transitions\",\"path\":\"transitions\",\"contentType\":\"directory\"},{\"name\":\".coveragerc\",\"path\":\".coveragerc\",\"contentType\":\"file\"},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"contentType\":\"file\"},{\"name\":\".pylintrc\",\"path\":\".pylintrc\",\"contentType\":\"file\"},{\"name\":\"Changelog.md\",\"path\":\"Changelog.md\",\"contentType\":\"file\"},{\"name\":\"LICENSE\",\"path\":\"LICENSE\",\"contentType\":\"file\"},{\"name\":\"MANIFEST.in\",\"path\":\"MANIFEST.in\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"README.md\",\"contentType\":\"file\"},{\"name\":\"appveyor.yml\",\"path\":\"appveyor.yml\",\"contentType\":\"file\"},{\"name\":\"conftest.py\",\"path\":\"conftest.py\",\"contentType\":\"file\"},{\"name\":\"mypy.ini\",\"path\":\"mypy.ini\",\"contentType\":\"file\"},{\"name\":\"noxfile.py\",\"path\":\"noxfile.py\",\"contentType\":\"file\"},{\"name\":\"pytest.ini\",\"path\":\"pytest.ini\",\"contentType\":\"file\"},{\"name\":\"requirements.txt\",\"path\":\"requirements.txt\",\"contentType\":\"file\"},{\"name\":\"requirements_diagrams.txt\",\"path\":\"requirements_diagrams.txt\",\"contentType\":\"file\"},{\"name\":\"requirements_mypy.txt\",\"path\":\"requirements_mypy.txt\",\"contentType\":\"file\"},{\"name\":\"requirements_test.txt\",\"path\":\"requirements_test.txt\",\"contentType\":\"file\"},{\"name\":\"setup.cfg\",\"path\":\"setup.cfg\",\"contentType\":\"file\"},{\"name\":\"setup.py\",\"path\":\"setup.py\",\"contentType\":\"file\"}],\"templateDirectorySuggestionUrl\":null,\"readme\":null,\"totalCount\":23,\"showBranchInfobar\":false},\"fileTree\":null,\"fileTreeProcessingTime\":null,\"foldersToFetch\":[],\"treeExpanded\":false,\"symbolsExpanded\":false,\"isOverview\":true,\"overview\":{\"banners\":{\"shouldRecommendReadme\":false,\"isPersonalRepo\":false,\"showUseActionBanner\":false,\"actionSlug\":null,\"actionId\":null,\"showProtectBranchBanner\":false,\"recentlyTouchedDataChannel\":null,\"publishBannersInfo\":{\"dismissActionNoticePath\":\"/settings/dismiss-notice/publish_action_from_repo\",\"releasePath\":\"/pytransitions/transitions/releases/new?marketplace=true\",\"showPublishActionBanner\":false},\"interactionLimitBanner\":null,\"showInvitationBanner\":false,\"inviterName\":null},\"codeButton\":{\"contactPath\":\"/contact\",\"isEnterprise\":false,\"local\":{\"protocolInfo\":{\"httpAvailable\":true,\"sshAvailable\":null,\"httpUrl\":\"https://github.com/pytransitions/transitions.git\",\"showCloneWarning\":null,\"sshUrl\":null,\"sshCertificatesRequired\":null,\"sshCertificatesAvailable\":null,\"ghCliUrl\":\"gh repo clone pytransitions/transitions\",\"defaultProtocol\":\"http\",\"newSshKeyUrl\":\"/settings/ssh/new\",\"setProtocolPath\":\"/users/set_protocol\"},\"platformInfo\":{\"cloneUrl\":\"https://desktop.github.com\",\"showVisualStudioCloneButton\":false,\"visualStudioCloneUrl\":\"https://windows.github.com\",\"showXcodeCloneButton\":false,\"xcodeCloneUrl\":\"https://developer.apple.com\",\"zipballUrl\":\"/pytransitions/transitions/archive/refs/heads/master.zip\"}},\"newCodespacePath\":\"/codespaces/new?hide_repo_select=true\\u0026repo=25131903\"},\"popovers\":{\"rename\":null,\"renamedParentRepo\":null},\"commitCount\":\"1,023\",\"overviewFiles\":[{\"displayName\":\"README.md\",\"repoName\":\"transitions\",\"refName\":\"master\",\"path\":\"README.md\",\"preferredFileType\":\"readme\",\"tabName\":\"README\",\"richText\":\"\\u003carticle class=\\\"markdown-body entry-content container-lg\\\" itemprop=\\\"text\\\"\\u003e\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch1 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-transitions-module\\\"\\u003e\\u003c/a\\u003e transitions\\u003c/h1\\u003e\\u003ca id=\\\"user-content--transitions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink:  transitions\\\" href=\\\"#-transitions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ca href=\\\"https://github.com/pytransitions/transitions\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/d6baca485dfbf799d6151bf81dd002d7fca1db34a0b71ba4b662f327482918c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d76302e392e312d6f72616e67652e737667\\\" alt=\\\"Version\\\" data-canonical-src=\\\"https://img.shields.io/badge/version-v0.9.1-orange.svg\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\n\\u003ca href=\\\"https://github.com/pytransitions/transitions/actions?query=workflow%3Apytest\\\"\\u003e\\u003cimg src=\\\"https://github.com/pytransitions/transitions/actions/workflows/pytest.yml/badge.svg\\\" alt=\\\"Build Status\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\n\\u003ca href=\\\"https://app.codecov.io/gh/pytransitions/transitions/tree/master\\\" rel=\\\"nofollow\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/ff04b833af469e7aeb51927a08be1fc05186c43503455d6797ae6b8afc24b354/68747470733a2f2f636f6465636f762e696f2f67682f70797472616e736974696f6e732f7472616e736974696f6e732f6272616e63682f6d61737465722f6772617068732f62616467652e737667\\\" alt=\\\"Coverage Status\\\" data-canonical-src=\\\"https://codecov.io/gh/pytransitions/transitions/branch/master/graphs/badge.svg\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\n\\u003ca href=\\\"https://pypi.org/project/transitions\\\" rel=\\\"nofollow\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/cf6dc1cb34254b56d57011b498a3470f1dfa0810551bb2fceebe53e4bf73237e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7472616e736974696f6e732e737667\\\" alt=\\\"PyPi\\\" data-canonical-src=\\\"https://img.shields.io/pypi/v/transitions.svg\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\n\\u003ca href=\\\"https://copr.fedorainfracloud.org/coprs/aleneum/python3-transitions/package/python3-transitions\\\" rel=\\\"nofollow\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/ec9787a62799f159144dd580628564772db234ab438ff484f43598db3c42afc0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e3f636f6c6f723d626c7565266c6162656c3d636f70722671756572793d6275696c64732e6c61746573742e736f757263655f7061636b6167652e76657273696f6e2675726c3d6874747073253341253246253246636f70722e6665646f7261696e667261636c6f75642e6f72672532466170695f332532467061636b6167652533466f776e65726e616d65253344616c656e65756d25323670726f6a6563746e616d65253344707974686f6e332d7472616e736974696f6e732532367061636b6167656e616d65253344707974686f6e332d7472616e736974696f6e73253236776974685f6c61746573745f6275696c6425334454727565\\\" alt=\\\"Copr\\\" data-canonical-src=\\\"https://img.shields.io/badge/dynamic/json?color=blue\\u0026amp;label=copr\\u0026amp;query=builds.latest.source_package.version\\u0026amp;url=https%3A%2F%2Fcopr.fedorainfracloud.org%2Fapi_3%2Fpackage%3Fownername%3Daleneum%26projectname%3Dpython3-transitions%26packagename%3Dpython3-transitions%26with_latest_build%3DTrue\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\n\\u003ca href=\\\"https://github.com/pytransitions/transitions/compare/0.9.0...master\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/e5b4b065eee7b4ea402b0c2f5cf8cfd3ab7aa80c3d033c77bce6eeea7373cd7b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d6974732d73696e63652f70797472616e736974696f6e732f7472616e736974696f6e732f302e392e302e737667\\\" alt=\\\"GitHub commits\\\" data-canonical-src=\\\"https://img.shields.io/github/commits-since/pytransitions/transitions/0.9.0.svg\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\n\\u003ca href=\\\"/pytransitions/transitions/blob/master/LICENSE\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/76b28e42006f2e7c2ca988afcc3e503f9f375f976ff4e55ba218f16a4d359b69/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f70797472616e736974696f6e732f7472616e736974696f6e732e737667\\\" alt=\\\"License\\\" data-canonical-src=\\\"https://img.shields.io/github/license/pytransitions/transitions.svg\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\n\\u003ca href=\\\"https://mybinder.org/v2/gh/pytransitions/transitions/master?filepath=examples%2FPlayground.ipynb\\\" rel=\\\"nofollow\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/e91e1d353a8b6acf0b42547ac3901f2c30138a3abaaa3d3c242da30b5b4f8426/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\\\" alt=\\\"Binder\\\" data-canonical-src=\\\"https://mybinder.org/badge_logo.svg\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\u003c/p\\u003e\\n\\n\\n\\u003cp dir=\\\"auto\\\"\\u003eA lightweight, object-oriented state machine implementation in Python with many extensions. Compatible with Python 2.7+ and 3.0+.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eInstallation\\u003c/h2\\u003e\\u003ca id=\\\"user-content-installation\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Installation\\\" href=\\\"#installation\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"pip install transitions\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003epip install transitions\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e... or clone the repo from GitHub and then:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"python setup.py install\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003epython setup.py install\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eTable of Contents\\u003c/h2\\u003e\\u003ca id=\\\"user-content-table-of-contents\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Table of Contents\\\" href=\\\"#table-of-contents\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#quickstart\\\"\\u003eQuickstart\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#the-non-quickstart\\\"\\u003eNon-Quickstart\\u003c/a\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#basic-initialization\\\"\\u003eBasic initialization\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#states\\\"\\u003eStates\\u003c/a\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#state-callbacks\\\"\\u003eCallbacks\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#checking-state\\\"\\u003eChecking state\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#enum-state\\\"\\u003eEnumerations\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#transitions\\\"\\u003eTransitions\\u003c/a\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#automatic-transitions-for-all-states\\\"\\u003eAutomatic transitions\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#transitioning-from-multiple-states\\\"\\u003eTransitioning from multiple states\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#reflexive-from-multiple-states\\\"\\u003eReflexive transitions from multiple states\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#internal-transitions\\\"\\u003eInternal transitions\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#ordered-transitions\\\"\\u003eOrdered transitions\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#queued-transitions\\\"\\u003eQueued transitions\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#conditional-transitions\\\"\\u003eConditional transitions\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#check-transitions\\\"\\u003eCheck transitions\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#transition-callbacks\\\"\\u003eCallbacks\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#resolution\\\"\\u003eCallable resolution\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#execution-order\\\"\\u003eCallback execution order\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#passing-data\\\"\\u003ePassing data\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#alternative-initialization-patterns\\\"\\u003eAlternative initialization patterns\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#logging\\\"\\u003eLogging\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#restoring\\\"\\u003e(Re-)Storing machine instances\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#extensions\\\"\\u003eExtensions\\u003c/a\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#diagrams\\\"\\u003eDiagrams\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#hsm\\\"\\u003eHierarchical State Machine\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#threading\\\"\\u003eThreading\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#async\\\"\\u003eAsync\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#state-features\\\"\\u003eState features\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#django-support\\\"\\u003eDjango\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ca href=\\\"#bug-reports\\\"\\u003eBug reports etc.\\u003c/a\\u003e\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eQuickstart\\u003c/h2\\u003e\\u003ca id=\\\"user-content-quickstart\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Quickstart\\\" href=\\\"#quickstart\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThey say \\u003ca href=\\\"https://www.google.com/webhp?ie=UTF-8#q=%22a+good+example+is+worth%22\\u0026amp;start=20\\\" rel=\\\"nofollow\\\"\\u003ea good example is worth\\u003c/a\\u003e 100 pages of API documentation, a million directives, or a thousand words.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eWell, \\\"they\\\" probably lie... but here's an example anyway:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions import Machine\\nimport random\\n\\nclass NarcolepticSuperhero(object):\\n\\n    # Define some states. Most of the time, narcoleptic superheroes are just like\\n    # everyone else. Except for...\\n    states = ['asleep', 'hanging out', 'hungry', 'sweaty', 'saving the world']\\n\\n    def __init__(self, name):\\n\\n        # No anonymous superheroes on my watch! Every narcoleptic superhero gets\\n        # a name. Any name at all. SleepyMan. SlumberGirl. You get the idea.\\n        self.name = name\\n\\n        # What have we accomplished today?\\n        self.kittens_rescued = 0\\n\\n        # Initialize the state machine\\n        self.machine = Machine(model=self, states=NarcolepticSuperhero.states, initial='asleep')\\n\\n        # Add some transitions. We could also define these using a static list of\\n        # dictionaries, as we did with states above, and then pass the list to\\n        # the Machine initializer as the transitions= argument.\\n\\n        # At some point, every superhero must rise and shine.\\n        self.machine.add_transition(trigger='wake_up', source='asleep', dest='hanging out')\\n\\n        # Superheroes need to keep in shape.\\n        self.machine.add_transition('work_out', 'hanging out', 'hungry')\\n\\n        # Those calories won't replenish themselves!\\n        self.machine.add_transition('eat', 'hungry', 'hanging out')\\n\\n        # Superheroes are always on call. ALWAYS. But they're not always\\n        # dressed in work-appropriate clothing.\\n        self.machine.add_transition('distress_call', '*', 'saving the world',\\n                         before='change_into_super_secret_costume')\\n\\n        # When they get off work, they're all sweaty and disgusting. But before\\n        # they do anything else, they have to meticulously log their latest\\n        # escapades. Because the legal department says so.\\n        self.machine.add_transition('complete_mission', 'saving the world', 'sweaty',\\n                         after='update_journal')\\n\\n        # Sweat is a disorder that can be remedied with water.\\n        # Unless you've had a particularly long day, in which case... bed time!\\n        self.machine.add_transition('clean_up', 'sweaty', 'asleep', conditions=['is_exhausted'])\\n        self.machine.add_transition('clean_up', 'sweaty', 'hanging out')\\n\\n        # Our NarcolepticSuperhero can fall asleep at pretty much any time.\\n        self.machine.add_transition('nap', '*', 'asleep')\\n\\n    def update_journal(self):\\n        \\u0026quot;\\u0026quot;\\u0026quot; Dear Diary, today I saved Mr. Whiskers. Again. \\u0026quot;\\u0026quot;\\u0026quot;\\n        self.kittens_rescued += 1\\n\\n    @property\\n    def is_exhausted(self):\\n        \\u0026quot;\\u0026quot;\\u0026quot; Basically a coin toss. \\u0026quot;\\u0026quot;\\u0026quot;\\n        return random.random() \\u0026lt; 0.5\\n\\n    def change_into_super_secret_costume(self):\\n        print(\\u0026quot;Beauty, eh?\\u0026quot;)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003erandom\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eNarcolepticSuperhero\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# Define some states. Most of the time, narcoleptic superheroes are just like\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# everyone else. Except for...\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'asleep'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'hanging out'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'hungry'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'sweaty'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'saving the world'\\u003c/span\\u003e]\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003e__init__\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e):\\n\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# No anonymous superheroes on my watch! Every narcoleptic superhero gets\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# a name. Any name at all. SleepyMan. SlumberGirl. You get the idea.\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e\\n\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# What have we accomplished today?\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ekittens_rescued\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\n\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# Initialize the state machine\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-v\\\"\\u003eNarcolepticSuperhero\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'asleep'\\u003c/span\\u003e)\\n\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# Add some transitions. We could also define these using a static list of\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# dictionaries, as we did with states above, and then pass the list to\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# the Machine initializer as the transitions= argument.\\u003c/span\\u003e\\n\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# At some point, every superhero must rise and shine.\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etrigger\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'wake_up'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esource\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'asleep'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003edest\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'hanging out'\\u003c/span\\u003e)\\n\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# Superheroes need to keep in shape.\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'work_out'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'hanging out'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'hungry'\\u003c/span\\u003e)\\n\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# Those calories won't replenish themselves!\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'eat'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'hungry'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'hanging out'\\u003c/span\\u003e)\\n\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# Superheroes are always on call. ALWAYS. But they're not always\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# dressed in work-appropriate clothing.\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'distress_call'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'saving the world'\\u003c/span\\u003e,\\n                         \\u003cspan class=\\\"pl-s1\\\"\\u003ebefore\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'change_into_super_secret_costume'\\u003c/span\\u003e)\\n\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# When they get off work, they're all sweaty and disgusting. But before\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# they do anything else, they have to meticulously log their latest\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# escapades. Because the legal department says so.\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'complete_mission'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'saving the world'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'sweaty'\\u003c/span\\u003e,\\n                         \\u003cspan class=\\\"pl-s1\\\"\\u003eafter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'update_journal'\\u003c/span\\u003e)\\n\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# Sweat is a disorder that can be remedied with water.\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# Unless you've had a particularly long day, in which case... bed time!\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'clean_up'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'sweaty'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'asleep'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003econditions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'is_exhausted'\\u003c/span\\u003e])\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'clean_up'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'sweaty'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'hanging out'\\u003c/span\\u003e)\\n\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# Our NarcolepticSuperhero can fall asleep at pretty much any time.\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'nap'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'asleep'\\u003c/span\\u003e)\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eupdate_journal\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"\\\"\\\" Dear Diary, today I saved Mr. Whiskers. Again. \\\"\\\"\\\"\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ekittens_rescued\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e+=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-en\\\"\\u003e@\\u003cspan class=\\\"pl-s1\\\"\\u003eproperty\\u003c/span\\u003e\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eis_exhausted\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"\\\"\\\" Basically a coin toss. \\\"\\\"\\\"\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003erandom\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003erandom\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026lt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e0.5\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003echange_into_super_secret_costume\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Beauty, eh?\\\"\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThere, now you've baked a state machine into \\u003ccode\\u003eNarcolepticSuperhero\\u003c/code\\u003e. Let's take him/her/it out for a spin...\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"\\u0026gt;\\u0026gt;\\u0026gt; batman = NarcolepticSuperhero(\\u0026quot;Batman\\u0026quot;)\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.state\\n'asleep'\\n\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.wake_up()\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.state\\n'hanging out'\\n\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.nap()\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.state\\n'asleep'\\n\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.clean_up()\\nMachineError: \\u0026quot;Can't trigger event clean_up from state asleep!\\u0026quot;\\n\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.wake_up()\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.work_out()\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.state\\n'hungry'\\n\\n# Batman still hasn't done anything useful...\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.kittens_rescued\\n0\\n\\n# We now take you live to the scene of a horrific kitten entreement...\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.distress_call()\\n'Beauty, eh?'\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.state\\n'saving the world'\\n\\n# Back to the crib.\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.complete_mission()\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.state\\n'sweaty'\\n\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.clean_up()\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.state\\n'asleep'   # Too tired to shower!\\n\\n# Another productive day, Alfred.\\n\\u0026gt;\\u0026gt;\\u0026gt; batman.kittens_rescued\\n1\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eNarcolepticSuperhero\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Batman\\\"\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s\\\"\\u003e'asleep'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ewake_up\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s\\\"\\u003e'hanging out'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003enap\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s\\\"\\u003e'asleep'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eclean_up\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-v\\\"\\u003eMachineError\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Can't trigger event clean_up from state asleep!\\\"\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ewake_up\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ework_out\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s\\\"\\u003e'hungry'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Batman still hasn't done anything useful...\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ekittens_rescued\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# We now take you live to the scene of a horrific kitten entreement...\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003edistress_call\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s\\\"\\u003e'Beauty, eh?'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s\\\"\\u003e'saving the world'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Back to the crib.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ecomplete_mission\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s\\\"\\u003e'sweaty'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eclean_up\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s\\\"\\u003e'asleep'\\u003c/span\\u003e   \\u003cspan class=\\\"pl-c\\\"\\u003e# Too tired to shower!\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Another productive day, Alfred.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ebatman\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ekittens_rescued\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eWhile we cannot read the mind of the actual batman, we surely can visualize the current state of our \\u003ccode\\u003eNarcolepticSuperhero\\u003c/code\\u003e.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ca target=\\\"_blank\\\" rel=\\\"noopener noreferrer nofollow\\\" href=\\\"https://user-images.githubusercontent.com/205986/104932302-c2f24580-59a7-11eb-8963-5dce738b9305.png\\\"\\u003e\\u003cimg src=\\\"https://user-images.githubusercontent.com/205986/104932302-c2f24580-59a7-11eb-8963-5dce738b9305.png\\\" alt=\\\"batman diagram\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eHave a look at the \\u003ca href=\\\"#diagrams\\\"\\u003eDiagrams\\u003c/a\\u003e extensions if you want to know how.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch2 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eThe non-quickstart\\u003c/h2\\u003e\\u003ca id=\\\"user-content-the-non-quickstart\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: The non-quickstart\\\" href=\\\"#the-non-quickstart\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eBasic initialization\\u003c/h3\\u003e\\u003ca id=\\\"user-content-basic-initialization\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Basic initialization\\\" href=\\\"#basic-initialization\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eGetting a state machine up and running is pretty simple. Let's say you have the object \\u003ccode\\u003elump\\u003c/code\\u003e (an instance of class \\u003ccode\\u003eMatter\\u003c/code\\u003e), and you want to manage its states:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Matter(object):\\n    pass\\n\\nlump = Matter()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003epass\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou can initialize a (\\u003cem\\u003eminimal\\u003c/em\\u003e) working state machine bound to \\u003ccode\\u003elump\\u003c/code\\u003e like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions import Machine\\nmachine = Machine(model=lump, states=['solid', 'liquid', 'gas', 'plasma'], initial='solid')\\n\\n# Lump now has state!\\nlump.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'solid'\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Lump now has state!\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eI say \\\"minimal\\\", because while this state machine is technically operational, it doesn't actually \\u003cem\\u003edo\\u003c/em\\u003e anything. It starts in the \\u003ccode\\u003e'solid'\\u003c/code\\u003e state, but won't ever move into another state, because no transitions are defined... yet!\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eLet's try again.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# The states\\nstates=['solid', 'liquid', 'gas', 'plasma']\\n\\n# And some transitions between states. We're lazy, so we'll leave out\\n# the inverse phase transitions (freezing, condensation, etc.).\\ntransitions = [\\n    { 'trigger': 'melt', 'source': 'solid', 'dest': 'liquid' },\\n    { 'trigger': 'evaporate', 'source': 'liquid', 'dest': 'gas' },\\n    { 'trigger': 'sublimate', 'source': 'solid', 'dest': 'gas' },\\n    { 'trigger': 'ionize', 'source': 'gas', 'dest': 'plasma' }\\n]\\n\\n# Initialize\\nmachine = Machine(lump, states=states, transitions=transitions, initial='liquid')\\n\\n# Now lump maintains state...\\nlump.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'liquid'\\n\\n# And that state can change...\\nlump.evaporate()\\nlump.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'gas'\\nlump.trigger('ionize')\\nlump.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'plasma'\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# The states\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e]\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# And some transitions between states. We're lazy, so we'll leave out\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# the inverse phase transitions (freezing, condensation, etc.).\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'melt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e },\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'evaporate'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e },\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'sublimate'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e },\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'ionize'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e }\\n]\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Initialize\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Now lump maintains state...\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# And that state can change...\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eevaporate\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003etrigger\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'ionize'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNotice the shiny new methods attached to the \\u003ccode\\u003eMatter\\u003c/code\\u003e instance (\\u003ccode\\u003eevaporate()\\u003c/code\\u003e, \\u003ccode\\u003eionize()\\u003c/code\\u003e, etc.). Each method triggers the corresponding transition. You don't have to explicitly define these methods anywhere; the name of each transition is bound to the model passed to the \\u003ccode\\u003eMachine\\u003c/code\\u003e initializer (in this case, \\u003ccode\\u003elump\\u003c/code\\u003e).\\nTo be more precise, your model \\u003cstrong\\u003eshould not\\u003c/strong\\u003e already contain methods with the same name as event triggers since \\u003ccode\\u003etransitions\\u003c/code\\u003e will only attach convenience methods to your model if the spot is not already taken.\\nIf you want to modify that behaviour, have a look at the \\u003ca href=\\\"/pytransitions/transitions/blob/master/examples/Frequently%20asked%20questions.ipynb\\\"\\u003eFAQ\\u003c/a\\u003e.\\nFurthermore, there is a method called \\u003ccode\\u003etrigger\\u003c/code\\u003e now attached to your model (if it hasn't been there before).\\nThis method lets you execute transitions by name in case dynamic triggering is required.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-states\\\"\\u003e\\u003c/a\\u003eStates\\u003c/h3\\u003e\\u003ca id=\\\"user-content-states\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: States\\\" href=\\\"#states\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe soul of any good state machine (and of many bad ones, no doubt) is a set of states. Above, we defined the valid model states by passing a list of strings to the \\u003ccode\\u003eMachine\\u003c/code\\u003e initializer. But internally, states are actually represented as \\u003ccode\\u003eState\\u003c/code\\u003e objects.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou can initialize and modify States in a number of ways. Specifically, you can:\\u003c/p\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003epass a string to the \\u003ccode\\u003eMachine\\u003c/code\\u003e initializer giving the name(s) of the state(s), or\\u003c/li\\u003e\\n\\u003cli\\u003edirectly initialize each new \\u003ccode\\u003eState\\u003c/code\\u003e object, or\\u003c/li\\u003e\\n\\u003cli\\u003epass a dictionary with initialization arguments\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe following snippets illustrate several ways to achieve the same goal:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# import Machine and State class\\nfrom transitions import Machine, State\\n\\n# Create a list of 3 states to pass to the Machine\\n# initializer. We can mix types; in this case, we\\n# pass one State, one string, and one dict.\\nstates = [\\n    State(name='solid'),\\n    'liquid',\\n    { 'name': 'gas'}\\n    ]\\nmachine = Machine(lump, states)\\n\\n# This alternative example illustrates more explicit\\n# addition of states and state callbacks, but the net\\n# result is identical to the above.\\nmachine = Machine(lump)\\nsolid = State('solid')\\nliquid = State('liquid')\\ngas = State('gas')\\nmachine.add_states([solid, liquid, gas])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# import Machine and State class\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Create a list of 3 states to pass to the Machine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# initializer. We can mix types; in this case, we\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# pass one State, one string, and one dict.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n    \\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e),\\n    \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e,\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e}\\n    ]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# This alternative example illustrates more explicit\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# addition of states and state callbacks, but the net\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# result is identical to the above.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003esolid\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003eliquid\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003egas\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_states\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s1\\\"\\u003esolid\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eliquid\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003egas\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eStates are initialized \\u003cem\\u003eonce\\u003c/em\\u003e when added to the machine and will persist until they are removed from it. In other words: if you alter the attributes of a state object, this change will NOT be reset the next time you enter that state. Have a look at how to \\u003ca href=\\\"#state-features\\\"\\u003eextend state features\\u003c/a\\u003e in case you require some other behaviour.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-state-callbacks\\\"\\u003e\\u003c/a\\u003eCallbacks\\u003c/h4\\u003e\\u003ca id=\\\"user-content-callbacks\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Callbacks\\\" href=\\\"#callbacks\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eA \\u003ccode\\u003eState\\u003c/code\\u003e can also be associated with a list of \\u003ccode\\u003eenter\\u003c/code\\u003e and \\u003ccode\\u003eexit\\u003c/code\\u003e callbacks, which are called whenever the state machine enters or leaves that state. You can specify callbacks during initialization by passing them to a \\u003ccode\\u003eState\\u003c/code\\u003e object constructor, in a state property dictionary, or add them later.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor convenience, whenever a new \\u003ccode\\u003eState\\u003c/code\\u003e is added to a \\u003ccode\\u003eMachine\\u003c/code\\u003e, the methods \\u003ccode\\u003eon_enter_\u00abstate name\u00bb\\u003c/code\\u003e and \\u003ccode\\u003eon_exit_\u00abstate name\u00bb\\u003c/code\\u003e are dynamically created on the Machine (not on the model!), which allow you to dynamically add new enter and exit callbacks later if you need them.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# Our old Matter class, now with  a couple of new methods we\\n# can trigger when entering or exit states.\\nclass Matter(object):\\n    def say_hello(self): print(\\u0026quot;hello, new state!\\u0026quot;)\\n    def say_goodbye(self): print(\\u0026quot;goodbye, old state!\\u0026quot;)\\n\\nlump = Matter()\\n\\n# Same states as above, but now we give StateA an exit callback\\nstates = [\\n    State(name='solid', on_exit=['say_goodbye']),\\n    'liquid',\\n    { 'name': 'gas', 'on_exit': ['say_goodbye']}\\n    ]\\n\\nmachine = Machine(lump, states=states)\\nmachine.add_transition('sublimate', 'solid', 'gas')\\n\\n# Callbacks can also be added after initialization using\\n# the dynamically added on_enter_ and on_exit_ methods.\\n# Note that the initial call to add the callback is made\\n# on the Machine and not on the model.\\nmachine.on_enter_gas('say_hello')\\n\\n# Test out the callbacks...\\nmachine.set_state('solid')\\nlump.sublimate()\\n\\u0026gt;\\u0026gt;\\u0026gt; 'goodbye, old state!'\\n\\u0026gt;\\u0026gt;\\u0026gt; 'hello, new state!'\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# Our old Matter class, now with  a couple of new methods we\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# can trigger when entering or exit states.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esay_hello\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"hello, new state!\\\"\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esay_goodbye\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"goodbye, old state!\\\"\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Same states as above, but now we give StateA an exit callback\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n    \\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eon_exit\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'say_goodbye'\\u003c/span\\u003e]),\\n    \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e,\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'on_exit'\\u003c/span\\u003e: [\\u003cspan class=\\\"pl-s\\\"\\u003e'say_goodbye'\\u003c/span\\u003e]}\\n    ]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'sublimate'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Callbacks can also be added after initialization using\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# the dynamically added on_enter_ and on_exit_ methods.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Note that the initial call to add the callback is made\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# on the Machine and not on the model.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eon_enter_gas\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'say_hello'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Test out the callbacks...\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eset_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003esublimate\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'goodbye, old state!'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'hello, new state!'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNote that \\u003ccode\\u003eon_enter_\u00abstate name\u00bb\\u003c/code\\u003e callback will \\u003cem\\u003enot\\u003c/em\\u003e fire when a Machine is first initialized. For example if you have an \\u003ccode\\u003eon_enter_A()\\u003c/code\\u003e callback defined, and initialize the \\u003ccode\\u003eMachine\\u003c/code\\u003e with \\u003ccode\\u003einitial='A'\\u003c/code\\u003e, \\u003ccode\\u003eon_enter_A()\\u003c/code\\u003e will not be fired until the next time you enter state \\u003ccode\\u003eA\\u003c/code\\u003e. (If you need to make sure \\u003ccode\\u003eon_enter_A()\\u003c/code\\u003e fires at initialization, you can simply create a dummy initial state and then explicitly call \\u003ccode\\u003eto_A()\\u003c/code\\u003e inside the \\u003ccode\\u003e__init__\\u003c/code\\u003e method.)\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn addition to passing in callbacks when initializing a \\u003ccode\\u003eState\\u003c/code\\u003e, or adding them dynamically, it's also possible to define callbacks in the model class itself, which may increase code clarity. For example:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Matter(object):\\n    def say_hello(self): print(\\u0026quot;hello, new state!\\u0026quot;)\\n    def say_goodbye(self): print(\\u0026quot;goodbye, old state!\\u0026quot;)\\n    def on_enter_A(self): print(\\u0026quot;We've just entered state A!\\u0026quot;)\\n\\nlump = Matter()\\nmachine = Machine(lump, states=['A', 'B', 'C'])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esay_hello\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"hello, new state!\\\"\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esay_goodbye\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"goodbye, old state!\\\"\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eon_enter_A\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"We've just entered state A!\\\"\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNow, any time \\u003ccode\\u003elump\\u003c/code\\u003e transitions to state \\u003ccode\\u003eA\\u003c/code\\u003e, the \\u003ccode\\u003eon_enter_A()\\u003c/code\\u003e method defined in the \\u003ccode\\u003eMatter\\u003c/code\\u003e class will fire.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-checking-state\\\"\\u003e\\u003c/a\\u003eChecking state\\u003c/h4\\u003e\\u003ca id=\\\"user-content-checking-state\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Checking state\\\" href=\\\"#checking-state\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou can always check the current state of the model by either:\\u003c/p\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003einspecting the \\u003ccode\\u003e.state\\u003c/code\\u003e attribute, or\\u003c/li\\u003e\\n\\u003cli\\u003ecalling \\u003ccode\\u003eis_\u00abstate name\u00bb()\\u003c/code\\u003e\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAnd if you want to retrieve the actual \\u003ccode\\u003eState\\u003c/code\\u003e object for the current state, you can do that through the \\u003ccode\\u003eMachine\\u003c/code\\u003e instance's \\u003ccode\\u003eget_state()\\u003c/code\\u003e method.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"lump.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'solid'\\nlump.is_gas()\\n\\u0026gt;\\u0026gt;\\u0026gt; False\\nlump.is_solid()\\n\\u0026gt;\\u0026gt;\\u0026gt; True\\nmachine.get_state(lump.state).name\\n\\u0026gt;\\u0026gt;\\u0026gt; 'solid'\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_gas\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_solid\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e).\\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you'd like you can choose your own state attribute name by passing the \\u003ccode\\u003emodel_attribute\\u003c/code\\u003e argument while initializing the \\u003ccode\\u003eMachine\\u003c/code\\u003e. This will also change the name of \\u003ccode\\u003eis_\u00abstate name\u00bb()\\u003c/code\\u003e to \\u003ccode\\u003eis_\u00abmodel_attribute\u00bb_\u00abstate name\u00bb()\\u003c/code\\u003e though. Similarly, auto transitions will be named \\u003ccode\\u003eto_\u00abmodel_attribute\u00bb_\u00abstate name\u00bb()\\u003c/code\\u003e instead of \\u003ccode\\u003eto_\u00abstate name\u00bb()\\u003c/code\\u003e. This is done to allow multiple machines to work on the same model with individual state attribute names.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"lump = Matter()\\nmachine = Machine(lump, states=['solid', 'liquid', 'gas'],  model_attribute='matter_state', initial='solid')\\nlump.matter_state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'solid'\\n# with a custom 'model_attribute', states can also be checked like this:\\nlump.is_matter_state_solid()\\n\\u0026gt;\\u0026gt;\\u0026gt; True\\nlump.to_matter_state_gas()\\n\\u0026gt;\\u0026gt;\\u0026gt; True\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e],  \\u003cspan class=\\\"pl-s1\\\"\\u003emodel_attribute\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'matter_state'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ematter_state\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# with a custom 'model_attribute', states can also be checked like this:\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_matter_state_solid\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_matter_state_gas\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-enum-state\\\"\\u003e\\u003c/a\\u003eEnumerations\\u003c/h4\\u003e\\u003ca id=\\\"user-content-enumerations\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Enumerations\\\" href=\\\"#enumerations\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSo far we have seen how we can give state names and use these names to work with our state machine.\\nIf you favour stricter typing and more IDE code completion (or you just can't type 'sesquipedalophobia' any longer because the word scares you) using \\u003ca href=\\\"https://docs.python.org/3/library/enum.html\\\" rel=\\\"nofollow\\\"\\u003eEnumerations\\u003c/a\\u003e might be what you are looking for:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import enum  # Python 2.7 users need to have 'enum34' installed\\nfrom transitions import Machine\\n\\nclass States(enum.Enum):\\n    ERROR = 0\\n    RED = 1\\n    YELLOW = 2\\n    GREEN = 3\\n\\ntransitions = [['proceed', States.RED, States.YELLOW],\\n               ['proceed', States.YELLOW, States.GREEN],\\n               ['error', '*', States.ERROR]]\\n\\nm = Machine(states=States, transitions=transitions, initial=States.RED)\\nassert m.is_RED()\\nassert m.state is States.RED\\nstate = m.get_state(States.RED)  # get transitions.State object\\nprint(state.name)  # \\u0026gt;\\u0026gt;\\u0026gt; RED\\nm.proceed()\\nm.proceed()\\nassert m.is_GREEN()\\nm.error()\\nassert m.state is States.ERROR\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eenum\\u003c/span\\u003e  \\u003cspan class=\\\"pl-c\\\"\\u003e# Python 2.7 users need to have 'enum34' installed\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eenum\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eEnum\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-v\\\"\\u003eERROR\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-v\\\"\\u003eRED\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-v\\\"\\u003eYELLOW\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-v\\\"\\u003eGREEN\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [[\\u003cspan class=\\\"pl-s\\\"\\u003e'proceed'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eRED\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eYELLOW\\u003c/span\\u003e],\\n               [\\u003cspan class=\\\"pl-s\\\"\\u003e'proceed'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eYELLOW\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eGREEN\\u003c/span\\u003e],\\n               [\\u003cspan class=\\\"pl-s\\\"\\u003e'error'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eERROR\\u003c/span\\u003e]]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eRED\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_RED\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eis\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eRED\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eRED\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# get transitions.State object\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# \\u0026gt;\\u0026gt;\\u0026gt; RED\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eproceed\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eproceed\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_GREEN\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eerror\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eis\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eERROR\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou can mix enums and strings if you like (e.g. \\u003ccode\\u003e[States.RED, 'ORANGE', States.YELLOW, States.GREEN]\\u003c/code\\u003e) but note that internally, \\u003ccode\\u003etransitions\\u003c/code\\u003e will still handle states by name (\\u003ccode\\u003eenum.Enum.name\\u003c/code\\u003e).\\nThus, it is not possible to have the states \\u003ccode\\u003e'GREEN'\\u003c/code\\u003e and \\u003ccode\\u003eStates.GREEN\\u003c/code\\u003e at the same time.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-transitions\\\"\\u003e\\u003c/a\\u003eTransitions\\u003c/h3\\u003e\\u003ca id=\\\"user-content-transitions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Transitions\\\" href=\\\"#transitions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSome of the above examples already illustrate the use of transitions in passing, but here we'll explore them in more detail.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAs with states, each transition is represented internally as its own object \u2013 an instance of class \\u003ccode\\u003eTransition\\u003c/code\\u003e. The quickest way to initialize a set of transitions is to pass a dictionary, or list of dictionaries, to the \\u003ccode\\u003eMachine\\u003c/code\\u003e initializer. We already saw this above:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"transitions = [\\n    { 'trigger': 'melt', 'source': 'solid', 'dest': 'liquid' },\\n    { 'trigger': 'evaporate', 'source': 'liquid', 'dest': 'gas' },\\n    { 'trigger': 'sublimate', 'source': 'solid', 'dest': 'gas' },\\n    { 'trigger': 'ionize', 'source': 'gas', 'dest': 'plasma' }\\n]\\nmachine = Machine(model=Matter(), states=states, transitions=transitions)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'melt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e },\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'evaporate'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e },\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'sublimate'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e },\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'ionize'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e }\\n]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eDefining transitions in dictionaries has the benefit of clarity, but can be cumbersome. If you're after brevity, you might choose to define transitions using lists. Just make sure that the elements in each list are in the same order as the positional arguments in the \\u003ccode\\u003eTransition\\u003c/code\\u003e initialization (i.e., \\u003ccode\\u003etrigger\\u003c/code\\u003e, \\u003ccode\\u003esource\\u003c/code\\u003e, \\u003ccode\\u003edestination\\u003c/code\\u003e, etc.).\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe following list-of-lists is functionally equivalent to the list-of-dictionaries above:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"transitions = [\\n    ['melt', 'solid', 'liquid'],\\n    ['evaporate', 'liquid', 'gas'],\\n    ['sublimate', 'solid', 'gas'],\\n    ['ionize', 'gas', 'plasma']\\n]\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'melt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e],\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'evaporate'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e],\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'sublimate'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e],\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'ionize'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e]\\n]\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAlternatively, you can add transitions to a \\u003ccode\\u003eMachine\\u003c/code\\u003e after initialization:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine = Machine(model=lump, states=states, initial='solid')\\nmachine.add_transition('melt', source='solid', dest='liquid')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'melt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esource\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003edest\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003etrigger\\u003c/code\\u003e argument defines the name of the new triggering method that gets attached to the base model. When this method is called, it will try to execute the transition:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"\\u0026gt;\\u0026gt;\\u0026gt; lump.melt()\\n\\u0026gt;\\u0026gt;\\u0026gt; lump.state\\n'liquid'\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eBy default, calling an invalid trigger will raise an exception:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"\\u0026gt;\\u0026gt;\\u0026gt; lump.to_gas()\\n\\u0026gt;\\u0026gt;\\u0026gt; # This won't work because only objects in a solid state can melt\\n\\u0026gt;\\u0026gt;\\u0026gt; lump.melt()\\ntransitions.core.MachineError: \\u0026quot;Can't trigger event melt from state gas!\\u0026quot;\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_gas\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# This won't work because only objects in a solid state can melt\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ecore\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eMachineError\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Can't trigger event melt from state gas!\\\"\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThis behavior is generally desirable, since it helps alert you to problems in your code. But in some cases, you might want to silently ignore invalid triggers. You can do this by setting \\u003ccode\\u003eignore_invalid_triggers=True\\u003c/code\\u003e (either on a state-by-state basis, or globally for all states):\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"\\u0026gt;\\u0026gt;\\u0026gt; # Globally suppress invalid trigger exceptions\\n\\u0026gt;\\u0026gt;\\u0026gt; m = Machine(lump, states, initial='solid', ignore_invalid_triggers=True)\\n\\u0026gt;\\u0026gt;\\u0026gt; # ...or suppress for only one group of states\\n\\u0026gt;\\u0026gt;\\u0026gt; states = ['new_state1', 'new_state2']\\n\\u0026gt;\\u0026gt;\\u0026gt; m.add_states(states, ignore_invalid_triggers=True)\\n\\u0026gt;\\u0026gt;\\u0026gt; # ...or even just for a single state. Here, exceptions will only be suppressed when the current state is A.\\n\\u0026gt;\\u0026gt;\\u0026gt; states = [State('A', ignore_invalid_triggers=True), 'B', 'C']\\n\\u0026gt;\\u0026gt;\\u0026gt; m = Machine(lump, states)\\n\\u0026gt;\\u0026gt;\\u0026gt; # ...this can be inverted as well if just one state should raise an exception\\n\\u0026gt;\\u0026gt;\\u0026gt; # since the machine's global value is not applied to a previously initialized state.\\n\\u0026gt;\\u0026gt;\\u0026gt; states = ['A', 'B', State('C')] # the default value for 'ignore_invalid_triggers' is False\\n\\u0026gt;\\u0026gt;\\u0026gt; m = Machine(lump, states, ignore_invalid_triggers=True)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# Globally suppress invalid trigger exceptions\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eignore_invalid_triggers\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# ...or suppress for only one group of states\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'new_state1'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'new_state2'\\u003c/span\\u003e]\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_states\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eignore_invalid_triggers\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# ...or even just for a single state. Here, exceptions will only be suppressed when the current state is A.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eignore_invalid_triggers\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e), \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e]\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# ...this can be inverted as well if just one state should raise an exception\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# since the machine's global value is not applied to a previously initialized state.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e)] \\u003cspan class=\\\"pl-c\\\"\\u003e# the default value for 'ignore_invalid_triggers' is False\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eignore_invalid_triggers\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you need to know which transitions are valid from a certain state, you can use \\u003ccode\\u003eget_triggers\\u003c/code\\u003e:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"m.get_triggers('solid')\\n\\u0026gt;\\u0026gt;\\u0026gt; ['melt', 'sublimate']\\nm.get_triggers('liquid')\\n\\u0026gt;\\u0026gt;\\u0026gt; ['evaporate']\\nm.get_triggers('plasma')\\n\\u0026gt;\\u0026gt;\\u0026gt; []\\n# you can also query several states at once\\nm.get_triggers('solid', 'liquid', 'gas', 'plasma')\\n\\u0026gt;\\u0026gt;\\u0026gt; ['melt', 'evaporate', 'sublimate', 'ionize']\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_triggers\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'melt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'sublimate'\\u003c/span\\u003e]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_triggers\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'evaporate'\\u003c/span\\u003e]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_triggers\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e []\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# you can also query several states at once\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_triggers\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'melt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'evaporate'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'sublimate'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'ionize'\\u003c/span\\u003e]\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you have followed this documentation from the beginning, you will notice that \\u003ccode\\u003eget_triggers\\u003c/code\\u003e actually returns more triggers than the explicitly defined ones shown above, such as \\u003ccode\\u003eto_liquid\\u003c/code\\u003e and so on.\\nThese are called \\u003ccode\\u003eauto-transitions\\u003c/code\\u003e and will be introduced in the next section.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-automatic-transitions-for-all-states\\\"\\u003e\\u003c/a\\u003eAutomatic transitions for all states\\u003c/h4\\u003e\\u003ca id=\\\"user-content-automatic-transitions-for-all-states\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Automatic transitions for all states\\\" href=\\\"#automatic-transitions-for-all-states\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn addition to any transitions added explicitly, a \\u003ccode\\u003eto_\u00abstate\u00bb()\\u003c/code\\u003e method is created automatically whenever a state is added to a \\u003ccode\\u003eMachine\\u003c/code\\u003e instance. This method transitions to the target state no matter which state the machine is currently in:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"lump.to_liquid()\\nlump.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'liquid'\\nlump.to_solid()\\nlump.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'solid'\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_liquid\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_solid\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you desire, you can disable this behavior by setting \\u003ccode\\u003eauto_transitions=False\\u003c/code\\u003e in the \\u003ccode\\u003eMachine\\u003c/code\\u003e initializer.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-transitioning-from-multiple-states\\\"\\u003e\\u003c/a\\u003eTransitioning from multiple states\\u003c/h4\\u003e\\u003ca id=\\\"user-content-transitioning-from-multiple-states\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Transitioning from multiple states\\\" href=\\\"#transitioning-from-multiple-states\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eA given trigger can be attached to multiple transitions, some of which can potentially begin or end in the same state. For example:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine.add_transition('transmogrify', ['solid', 'liquid', 'gas'], 'plasma')\\nmachine.add_transition('transmogrify', 'plasma', 'solid')\\n# This next transition will never execute\\nmachine.add_transition('transmogrify', 'plasma', 'gas')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'transmogrify'\\u003c/span\\u003e, [\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'transmogrify'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# This next transition will never execute\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'transmogrify'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn this case, calling \\u003ccode\\u003etransmogrify()\\u003c/code\\u003e will set the model's state to \\u003ccode\\u003e'solid'\\u003c/code\\u003e if it's currently \\u003ccode\\u003e'plasma'\\u003c/code\\u003e, and set it to \\u003ccode\\u003e'plasma'\\u003c/code\\u003e otherwise. (Note that only the \\u003cem\\u003efirst\\u003c/em\\u003e matching transition will execute; thus, the transition defined in the last line above won't do anything.)\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou can also make a trigger cause a transition from \\u003cem\\u003eall\\u003c/em\\u003e states to a particular destination by using the \\u003ccode\\u003e'*'\\u003c/code\\u003e wildcard:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine.add_transition('to_liquid', '*', 'liquid')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'to_liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNote that wildcard transitions will only apply to states that exist at the time of the add_transition() call. Calling a wildcard-based transition when the model is in a state added after the transition was defined will elicit an invalid transition message, and will not transition to the target state.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-reflexive-from-multiple-states\\\"\\u003e\\u003c/a\\u003eReflexive transitions from multiple states\\u003c/h4\\u003e\\u003ca id=\\\"user-content-reflexive-transitions-from-multiple-states\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Reflexive transitions from multiple states\\\" href=\\\"#reflexive-transitions-from-multiple-states\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eA reflexive trigger (trigger that has the same state as source and destination) can easily be added specifying \\u003ccode\\u003e=\\u003c/code\\u003e as destination.\\nThis is handy if the same reflexive trigger should be added to multiple states.\\nFor example:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine.add_transition('touch', ['liquid', 'gas', 'plasma'], '=', after='change_shape')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'touch'\\u003c/span\\u003e, [\\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s\\\"\\u003e'='\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eafter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'change_shape'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThis will add reflexive transitions for all three states with \\u003ccode\\u003etouch()\\u003c/code\\u003e as trigger and with \\u003ccode\\u003echange_shape\\u003c/code\\u003e executed after each trigger.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-internal-transitions\\\"\\u003e\\u003c/a\\u003eInternal transitions\\u003c/h4\\u003e\\u003ca id=\\\"user-content-internal-transitions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Internal transitions\\\" href=\\\"#internal-transitions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn contrast to reflexive transitions, internal transitions will never actually leave the state.\\nThis means that transition-related callbacks such as \\u003ccode\\u003ebefore\\u003c/code\\u003e or \\u003ccode\\u003eafter\\u003c/code\\u003e will be processed while state-related callbacks \\u003ccode\\u003eexit\\u003c/code\\u003e or \\u003ccode\\u003eenter\\u003c/code\\u003e will not.\\nTo define a transition to be internal, set the destination to \\u003ccode\\u003eNone\\u003c/code\\u003e.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine.add_transition('internal', ['liquid', 'gas'], None, after='change_shape')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'internal'\\u003c/span\\u003e, [\\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-c1\\\"\\u003eNone\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eafter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'change_shape'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-ordered-transitions\\\"\\u003e\\u003c/a\\u003e Ordered transitions\\u003c/h4\\u003e\\u003ca id=\\\"user-content--ordered-transitions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink:  Ordered transitions\\\" href=\\\"#-ordered-transitions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eA common desire is for state transitions to follow a strict linear sequence. For instance, given states \\u003ccode\\u003e['A', 'B', 'C']\\u003c/code\\u003e, you might want valid transitions for \\u003ccode\\u003eA\\u003c/code\\u003e \u2192 \\u003ccode\\u003eB\\u003c/code\\u003e, \\u003ccode\\u003eB\\u003c/code\\u003e \u2192 \\u003ccode\\u003eC\\u003c/code\\u003e, and \\u003ccode\\u003eC\\u003c/code\\u003e \u2192 \\u003ccode\\u003eA\\u003c/code\\u003e (but no other pairs).\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTo facilitate this behavior, Transitions provides an \\u003ccode\\u003eadd_ordered_transitions()\\u003c/code\\u003e method in the \\u003ccode\\u003eMachine\\u003c/code\\u003e class:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"states = ['A', 'B', 'C']\\n # See the \\u0026quot;alternative initialization\\u0026quot; section for an explanation of the 1st argument to init\\nmachine = Machine(states=states, initial='A')\\nmachine.add_ordered_transitions()\\nmachine.next_state()\\nprint(machine.state)\\n\\u0026gt;\\u0026gt;\\u0026gt; 'B'\\n# We can also define a different order of transitions\\nmachine = Machine(states=states, initial='A')\\nmachine.add_ordered_transitions(['A', 'C', 'B'])\\nmachine.next_state()\\nprint(machine.state)\\n\\u0026gt;\\u0026gt;\\u0026gt; 'C'\\n# Conditions can be passed to 'add_ordered_transitions' as well\\n# If one condition is passed, it will be used for all transitions\\nmachine = Machine(states=states, initial='A')\\nmachine.add_ordered_transitions(conditions='check')\\n# If a list is passed, it must contain exactly as many elements as the\\n# machine contains states (A-\\u0026gt;B, ..., X-\\u0026gt;A)\\nmachine = Machine(states=states, initial='A')\\nmachine.add_ordered_transitions(conditions=['check_A2B', ..., 'check_X2A'])\\n# Conditions are always applied starting from the initial state\\nmachine = Machine(states=states, initial='B')\\nmachine.add_ordered_transitions(conditions=['check_B2C', ..., 'check_A2B'])\\n# With `loop=False`, the transition from the last state to the first state will be omitted (e.g. C-\\u0026gt;A)\\n# When you also pass conditions, you need to pass one condition less (len(states)-1)\\nmachine = Machine(states=states, initial='A')\\nmachine.add_ordered_transitions(loop=False)\\nmachine.next_state()\\nmachine.next_state()\\nmachine.next_state() # transitions.core.MachineError: \\u0026quot;Can't trigger event next_state from state C!\\u0026quot;\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e]\\n \\u003cspan class=\\\"pl-c\\\"\\u003e# See the \\\"alternative initialization\\\" section for an explanation of the 1st argument to init\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_ordered_transitions\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003enext_state\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# We can also define a different order of transitions\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_ordered_transitions\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e])\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003enext_state\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Conditions can be passed to 'add_ordered_transitions' as well\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# If one condition is passed, it will be used for all transitions\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_ordered_transitions\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003econditions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'check'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# If a list is passed, it must contain exactly as many elements as the\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# machine contains states (A-\\u0026gt;B, ..., X-\\u0026gt;A)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_ordered_transitions\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003econditions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'check_A2B'\\u003c/span\\u003e, ..., \\u003cspan class=\\\"pl-s\\\"\\u003e'check_X2A'\\u003c/span\\u003e])\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Conditions are always applied starting from the initial state\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_ordered_transitions\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003econditions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'check_B2C'\\u003c/span\\u003e, ..., \\u003cspan class=\\\"pl-s\\\"\\u003e'check_A2B'\\u003c/span\\u003e])\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# With `loop=False`, the transition from the last state to the first state will be omitted (e.g. C-\\u0026gt;A)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# When you also pass conditions, you need to pass one condition less (len(states)-1)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_ordered_transitions\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eloop\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003enext_state\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003enext_state\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003enext_state\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c\\\"\\u003e# transitions.core.MachineError: \\\"Can't trigger event next_state from state C!\\\"\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-queued-transitions\\\"\\u003e\\u003c/a\\u003eQueued transitions\\u003c/h4\\u003e\\u003ca id=\\\"user-content-queued-transitions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Queued transitions\\\" href=\\\"#queued-transitions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe default behaviour in Transitions is to process events instantly. This means events within an \\u003ccode\\u003eon_enter\\u003c/code\\u003e method will be processed \\u003cem\\u003ebefore\\u003c/em\\u003e callbacks bound to \\u003ccode\\u003eafter\\u003c/code\\u003e are called.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"def go_to_C():\\n    global machine\\n    machine.to_C()\\n\\ndef after_advance():\\n    print(\\u0026quot;I am in state B now!\\u0026quot;)\\n\\ndef entering_C():\\n    print(\\u0026quot;I am in state C now!\\u0026quot;)\\n\\nstates = ['A', 'B', 'C']\\nmachine = Machine(states=states, initial='A')\\n\\n# we want a message when state transition to B has been completed\\nmachine.add_transition('advance', 'A', 'B', after=after_advance)\\n\\n# call transition from state B to state C\\nmachine.on_enter_B(go_to_C)\\n\\n# we also want a message when entering state C\\nmachine.on_enter_C(entering_C)\\nmachine.advance()\\n\\u0026gt;\\u0026gt;\\u0026gt; 'I am in state C now!'\\n\\u0026gt;\\u0026gt;\\u0026gt; 'I am in state B now!' # what?\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003ego_to_C\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eglobal\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_C\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eafter_advance\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"I am in state B now!\\\"\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eentering_C\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"I am in state C now!\\\"\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# we want a message when state transition to B has been completed\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'advance'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eafter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eafter_advance\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# call transition from state B to state C\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eon_enter_B\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ego_to_C\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# we also want a message when entering state C\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eon_enter_C\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eentering_C\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadvance\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'I am in state C now!'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'I am in state B now!'\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# what?\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe execution order of this example is\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"prepare -\\u0026gt; before -\\u0026gt; on_enter_B -\\u0026gt; on_enter_C -\\u0026gt; after.\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003eprepare -\\u0026gt; before -\\u0026gt; on_enter_B -\\u0026gt; on_enter_C -\\u0026gt; after.\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf queued processing is enabled, a transition will be finished before the next transition is triggered:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine = Machine(states=states, queued=True, initial='A')\\n...\\nmachine.advance()\\n\\u0026gt;\\u0026gt;\\u0026gt; 'I am in state B now!'\\n\\u0026gt;\\u0026gt;\\u0026gt; 'I am in state C now!' # That's better!\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003equeued\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n...\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadvance\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'I am in state B now!'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'I am in state C now!'\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# That's better!\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThis results in\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"prepare -\\u0026gt; before -\\u0026gt; on_enter_B -\\u0026gt; queue(to_C) -\\u0026gt; after  -\\u0026gt; on_enter_C.\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003eprepare -\\u0026gt; before -\\u0026gt; on_enter_B -\\u0026gt; queue(to_C) -\\u0026gt; after  -\\u0026gt; on_enter_C.\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003cstrong\\u003eImportant note:\\u003c/strong\\u003e when processing events in a queue, the trigger call will \\u003cem\\u003ealways\\u003c/em\\u003e return \\u003ccode\\u003eTrue\\u003c/code\\u003e, since there is no way to determine at queuing time whether a transition involving queued calls will ultimately complete successfully. This is true even when only a single event is processed.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine.add_transition('jump', 'A', 'C', conditions='will_fail')\\n...\\n# queued=False\\nmachine.jump()\\n\\u0026gt;\\u0026gt;\\u0026gt; False\\n# queued=True\\nmachine.jump()\\n\\u0026gt;\\u0026gt;\\u0026gt; True\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'jump'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003econditions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'will_fail'\\u003c/span\\u003e)\\n...\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# queued=False\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ejump\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# queued=True\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ejump\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eWhen a model is removed from the machine, \\u003ccode\\u003etransitions\\u003c/code\\u003e will also remove all related events from the queue.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Model:\\n    def on_enter_B(self):\\n        self.to_C()  # add event to queue ...\\n        self.machine.remove_model(self)  # aaaand it's gone\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eModel\\u003c/span\\u003e:\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eon_enter_B\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_C\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# add event to queue ...\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eremove_model\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# aaaand it's gone\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-conditional-transitions\\\"\\u003e\\u003c/a\\u003eConditional transitions\\u003c/h4\\u003e\\u003ca id=\\\"user-content-conditional-transitions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Conditional transitions\\\" href=\\\"#conditional-transitions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSometimes you only want a particular transition to execute if a specific condition occurs. You can do this by passing a method, or list of methods, in the \\u003ccode\\u003econditions\\u003c/code\\u003e argument:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# Our Matter class, now with a bunch of methods that return booleans.\\nclass Matter(object):\\n    def is_flammable(self): return False\\n    def is_really_hot(self): return True\\n\\nmachine.add_transition('heat', 'solid', 'gas', conditions='is_flammable')\\nmachine.add_transition('heat', 'solid', 'liquid', conditions=['is_really_hot'])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# Our Matter class, now with a bunch of methods that return booleans.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eis_flammable\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eis_really_hot\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'heat'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003econditions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'is_flammable'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'heat'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003econditions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'is_really_hot'\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn the above example, calling \\u003ccode\\u003eheat()\\u003c/code\\u003e when the model is in state \\u003ccode\\u003e'solid'\\u003c/code\\u003e will transition to state \\u003ccode\\u003e'gas'\\u003c/code\\u003e if \\u003ccode\\u003eis_flammable\\u003c/code\\u003e returns \\u003ccode\\u003eTrue\\u003c/code\\u003e. Otherwise, it will transition to state \\u003ccode\\u003e'liquid'\\u003c/code\\u003e if \\u003ccode\\u003eis_really_hot\\u003c/code\\u003e returns \\u003ccode\\u003eTrue\\u003c/code\\u003e.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor convenience, there's also an \\u003ccode\\u003e'unless'\\u003c/code\\u003e argument that behaves exactly like conditions, but inverted:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine.add_transition('heat', 'solid', 'gas', unless=['is_flammable', 'is_really_hot'])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'heat'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eunless\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'is_flammable'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'is_really_hot'\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn this case, the model would transition from solid to gas whenever \\u003ccode\\u003eheat()\\u003c/code\\u003e fires, provided that both \\u003ccode\\u003eis_flammable()\\u003c/code\\u003e and \\u003ccode\\u003eis_really_hot()\\u003c/code\\u003e return \\u003ccode\\u003eFalse\\u003c/code\\u003e.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNote that condition-checking methods will passively receive optional arguments and/or data objects passed to triggering methods. For instance, the following call:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"lump.heat(temp=74)\\n# equivalent to lump.trigger('heat', temp=74)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eheat\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etemp\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e74\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# equivalent to lump.trigger('heat', temp=74)\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e... would pass the \\u003ccode\\u003etemp=74\\u003c/code\\u003e optional kwarg to the \\u003ccode\\u003eis_flammable()\\u003c/code\\u003e check (possibly wrapped in an \\u003ccode\\u003eEventData\\u003c/code\\u003e instance). For more on this, see the \\u003ca href=\\\"#passing-data\\\"\\u003ePassing data\\u003c/a\\u003e section below.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-check-transitions\\\"\\u003e\\u003c/a\\u003eCheck transitions\\u003c/h4\\u003e\\u003ca id=\\\"user-content-check-transitions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Check transitions\\\" href=\\\"#check-transitions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you want to check whether a transition is possible before you execute it ('look before you leap'), you can use \\u003ccode\\u003emay_\\u0026lt;trigger_name\\u0026gt;\\u003c/code\\u003e convenience functions that have been attached to your model:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# check if the current temperature is hot enough to trigger a transition\\nif lump.may_heat():\\n    lump.heat()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# check if the current temperature is hot enough to trigger a transition\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eif\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emay_heat\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eheat\\u003c/span\\u003e()\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThis will execute all \\u003ccode\\u003eprepare\\u003c/code\\u003e callbacks and evaluate the conditions assigned to the potential transitions.\\nTransition checks can also be used when a transition's destination is not available (yet):\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine.add_transition('elevate', 'solid', 'spiritual')\\nassert not lump.may_elevate()  # not ready yet :(\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'elevate'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'spiritual'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003enot\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emay_elevate\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# not ready yet :(\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-transition-callbacks\\\"\\u003e\\u003c/a\\u003eCallbacks\\u003c/h4\\u003e\\u003ca id=\\\"user-content-callbacks-1\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Callbacks\\\" href=\\\"#callbacks-1\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou can attach callbacks to transitions as well as states. Every transition has \\u003ccode\\u003e'before'\\u003c/code\\u003e and \\u003ccode\\u003e'after'\\u003c/code\\u003e attributes that contain a list of methods to call before and after the transition executes:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Matter(object):\\n    def make_hissing_noises(self): print(\\u0026quot;HISSSSSSSSSSSSSSSS\\u0026quot;)\\n    def disappear(self): print(\\u0026quot;where'd all the liquid go?\\u0026quot;)\\n\\ntransitions = [\\n    { 'trigger': 'melt', 'source': 'solid', 'dest': 'liquid', 'before': 'make_hissing_noises'},\\n    { 'trigger': 'evaporate', 'source': 'liquid', 'dest': 'gas', 'after': 'disappear' }\\n]\\n\\nlump = Matter()\\nmachine = Machine(lump, states, transitions=transitions, initial='solid')\\nlump.melt()\\n\\u0026gt;\\u0026gt;\\u0026gt; \\u0026quot;HISSSSSSSSSSSSSSSS\\u0026quot;\\nlump.evaporate()\\n\\u0026gt;\\u0026gt;\\u0026gt; \\u0026quot;where'd all the liquid go?\\u0026quot;\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003emake_hissing_noises\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"HISSSSSSSSSSSSSSSS\\\"\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003edisappear\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"where'd all the liquid go?\\\"\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'melt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'before'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'make_hissing_noises'\\u003c/span\\u003e},\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'evaporate'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'after'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'disappear'\\u003c/span\\u003e }\\n]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"HISSSSSSSSSSSSSSSS\\\"\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eevaporate\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"where'd all the liquid go?\\\"\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThere is also a \\u003ccode\\u003e'prepare'\\u003c/code\\u003e callback that is executed as soon as a transition starts, before any \\u003ccode\\u003e'conditions'\\u003c/code\\u003e are checked or other callbacks are executed.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Matter(object):\\n    heat = False\\n    attempts = 0\\n    def count_attempts(self): self.attempts += 1\\n    def heat_up(self): self.heat = random.random() \\u0026lt; 0.25\\n    def stats(self): print('It took you %i attempts to melt the lump!' %self.attempts)\\n\\n    @property\\n    def is_really_hot(self):\\n        return self.heat\\n\\n\\nstates=['solid', 'liquid', 'gas', 'plasma']\\n\\ntransitions = [\\n    { 'trigger': 'melt', 'source': 'solid', 'dest': 'liquid', 'prepare': ['heat_up', 'count_attempts'], 'conditions': 'is_really_hot', 'after': 'stats'},\\n]\\n\\nlump = Matter()\\nmachine = Machine(lump, states, transitions=transitions, initial='solid')\\nlump.melt()\\nlump.melt()\\nlump.melt()\\nlump.melt()\\n\\u0026gt;\\u0026gt;\\u0026gt; \\u0026quot;It took you 4 attempts to melt the lump!\\u0026quot;\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003eheat\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003eattempts\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003ecount_attempts\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eattempts\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e+=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eheat_up\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eheat\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003erandom\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003erandom\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026lt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e0.25\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003estats\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'It took you %i attempts to melt the lump!'\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e%\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eattempts\\u003c/span\\u003e)\\n\\n    \\u003cspan class=\\\"pl-en\\\"\\u003e@\\u003cspan class=\\\"pl-s1\\\"\\u003eproperty\\u003c/span\\u003e\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eis_really_hot\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eheat\\u003c/span\\u003e\\n\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n    { \\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'melt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'prepare'\\u003c/span\\u003e: [\\u003cspan class=\\\"pl-s\\\"\\u003e'heat_up'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'count_attempts'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s\\\"\\u003e'conditions'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'is_really_hot'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'after'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'stats'\\u003c/span\\u003e},\\n]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"It took you 4 attempts to melt the lump!\\\"\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNote that \\u003ccode\\u003eprepare\\u003c/code\\u003e will not be called unless the current state is a valid source for the named transition.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eDefault actions meant to be executed before or after \\u003cem\\u003eevery\\u003c/em\\u003e transition can be passed to \\u003ccode\\u003eMachine\\u003c/code\\u003e during initialization with\\n\\u003ccode\\u003ebefore_state_change\\u003c/code\\u003e and \\u003ccode\\u003eafter_state_change\\u003c/code\\u003e respectively:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Matter(object):\\n    def make_hissing_noises(self): print(\\u0026quot;HISSSSSSSSSSSSSSSS\\u0026quot;)\\n    def disappear(self): print(\\u0026quot;where'd all the liquid go?\\u0026quot;)\\n\\nstates=['solid', 'liquid', 'gas', 'plasma']\\n\\nlump = Matter()\\nm = Machine(lump, states, before_state_change='make_hissing_noises', after_state_change='disappear')\\nlump.to_gas()\\n\\u0026gt;\\u0026gt;\\u0026gt; \\u0026quot;HISSSSSSSSSSSSSSSS\\u0026quot;\\n\\u0026gt;\\u0026gt;\\u0026gt; \\u0026quot;where'd all the liquid go?\\u0026quot;\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003emake_hissing_noises\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"HISSSSSSSSSSSSSSSS\\\"\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003edisappear\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"where'd all the liquid go?\\\"\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ebefore_state_change\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'make_hissing_noises'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eafter_state_change\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'disappear'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_gas\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"HISSSSSSSSSSSSSSSS\\\"\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"where'd all the liquid go?\\\"\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThere are also two keywords for callbacks which should be executed \\u003cem\\u003eindependently\\u003c/em\\u003e a) of how many transitions are possible,\\nb) if any transition succeeds and c) even if an error is raised during the execution of some other callback.\\nCallbacks passed to \\u003ccode\\u003eMachine\\u003c/code\\u003e with \\u003ccode\\u003eprepare_event\\u003c/code\\u003e will be executed \\u003cem\\u003eonce\\u003c/em\\u003e before processing possible transitions\\n(and their individual \\u003ccode\\u003eprepare\\u003c/code\\u003e callbacks) takes place.\\nCallbacks of \\u003ccode\\u003efinalize_event\\u003c/code\\u003e will be executed regardless of the success of the processed transitions.\\nNote that if an error occurred it will be attached to \\u003ccode\\u003eevent_data\\u003c/code\\u003e as \\u003ccode\\u003eerror\\u003c/code\\u003e and can be retrieved with \\u003ccode\\u003esend_event=True\\u003c/code\\u003e.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions import Machine\\n\\nclass Matter(object):\\n    def raise_error(self, event): raise ValueError(\\u0026quot;Oh no\\u0026quot;)\\n    def prepare(self, event): print(\\u0026quot;I am ready!\\u0026quot;)\\n    def finalize(self, event): print(\\u0026quot;Result: \\u0026quot;, type(event.error), event.error)\\n\\nstates=['solid', 'liquid', 'gas', 'plasma']\\n\\nlump = Matter()\\nm = Machine(lump, states, prepare_event='prepare', before_state_change='raise_error',\\n            finalize_event='finalize', send_event=True)\\ntry:\\n    lump.to_gas()\\nexcept ValueError:\\n    pass\\nprint(lump.state)\\n\\n# \\u0026gt;\\u0026gt;\\u0026gt; I am ready!\\n# \\u0026gt;\\u0026gt;\\u0026gt; Result:  \\u0026lt;class 'ValueError'\\u0026gt; Oh no\\n# \\u0026gt;\\u0026gt;\\u0026gt; initial\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eraise_error\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eevent\\u003c/span\\u003e): \\u003cspan class=\\\"pl-k\\\"\\u003eraise\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eValueError\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Oh no\\\"\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eprepare\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eevent\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"I am ready!\\\"\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003efinalize\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eevent\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Result: \\\"\\u003c/span\\u003e, \\u003cspan class=\\\"pl-en\\\"\\u003etype\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eevent\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eerror\\u003c/span\\u003e), \\u003cspan class=\\\"pl-s1\\\"\\u003eevent\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eerror\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eprepare_event\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'prepare'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ebefore_state_change\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'raise_error'\\u003c/span\\u003e,\\n            \\u003cspan class=\\\"pl-s1\\\"\\u003efinalize_event\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'finalize'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esend_event\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-k\\\"\\u003etry\\u003c/span\\u003e:\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_gas\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-k\\\"\\u003eexcept\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eValueError\\u003c/span\\u003e:\\n    \\u003cspan class=\\\"pl-k\\\"\\u003epass\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# \\u0026gt;\\u0026gt;\\u0026gt; I am ready!\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# \\u0026gt;\\u0026gt;\\u0026gt; Result:  \\u0026lt;class 'ValueError'\\u0026gt; Oh no\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# \\u0026gt;\\u0026gt;\\u0026gt; initial\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSometimes things just don't work out as intended and we need to handle exceptions and clean up the mess to keep things going.\\nWe can pass callbacks to \\u003ccode\\u003eon_exception\\u003c/code\\u003e to do this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions import Machine\\n\\nclass Matter(object):\\n    def raise_error(self, event): raise ValueError(\\u0026quot;Oh no\\u0026quot;)\\n    def handle_error(self, event):\\n        print(\\u0026quot;Fixing things ...\\u0026quot;)\\n        del event.error  # it did not happen if we cannot see it ...\\n\\nstates=['solid', 'liquid', 'gas', 'plasma']\\n\\nlump = Matter()\\nm = Machine(lump, states, before_state_change='raise_error', on_exception='handle_error', send_event=True)\\ntry:\\n    lump.to_gas()\\nexcept ValueError:\\n    pass\\nprint(lump.state)\\n\\n# \\u0026gt;\\u0026gt;\\u0026gt; Fixing things ...\\n# \\u0026gt;\\u0026gt;\\u0026gt; initial\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eraise_error\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eevent\\u003c/span\\u003e): \\u003cspan class=\\\"pl-k\\\"\\u003eraise\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eValueError\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Oh no\\\"\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003ehandle_error\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eevent\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Fixing things ...\\\"\\u003c/span\\u003e)\\n        \\u003cspan class=\\\"pl-k\\\"\\u003edel\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eevent\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eerror\\u003c/span\\u003e  \\u003cspan class=\\\"pl-c\\\"\\u003e# it did not happen if we cannot see it ...\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ebefore_state_change\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'raise_error'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eon_exception\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'handle_error'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esend_event\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-k\\\"\\u003etry\\u003c/span\\u003e:\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_gas\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-k\\\"\\u003eexcept\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eValueError\\u003c/span\\u003e:\\n    \\u003cspan class=\\\"pl-k\\\"\\u003epass\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# \\u0026gt;\\u0026gt;\\u0026gt; Fixing things ...\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# \\u0026gt;\\u0026gt;\\u0026gt; initial\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-resolution\\\"\\u003e\\u003c/a\\u003eCallable resolution\\u003c/h3\\u003e\\u003ca id=\\\"user-content-callable-resolution\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Callable resolution\\\" href=\\\"#callable-resolution\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAs you have probably already realized, the standard way of passing callables to states, conditions and transitions is by name. When processing callbacks and conditions, \\u003ccode\\u003etransitions\\u003c/code\\u003e will use their name to retrieve the related callable from the model. If the method cannot be retrieved and it contains dots, \\u003ccode\\u003etransitions\\u003c/code\\u003e will treat the name as a path to a module function and try to import it. Alternatively, you can pass names of properties or attributes. They will be wrapped into functions but cannot receive event data for obvious reasons. You can also pass callables such as (bound) functions directly. As mentioned earlier, you can also pass lists/tuples of callables names to the callback parameters. Callbacks will be executed in the order they were added.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions import Machine\\nfrom mod import imported_func\\n\\nimport random\\n\\n\\nclass Model(object):\\n\\n    def a_callback(self):\\n        imported_func()\\n\\n    @property\\n    def a_property(self):\\n        \\u0026quot;\\u0026quot;\\u0026quot; Basically a coin toss. \\u0026quot;\\u0026quot;\\u0026quot;\\n        return random.random() \\u0026lt; 0.5\\n\\n    an_attribute = False\\n\\n\\nmodel = Model()\\nmachine = Machine(model=model, states=['A'], initial='A')\\nmachine.add_transition('by_name', 'A', 'A', conditions='a_property', after='a_callback')\\nmachine.add_transition('by_reference', 'A', 'A', unless=['a_property', 'an_attribute'], after=model.a_callback)\\nmachine.add_transition('imported', 'A', 'A', after='mod.imported_func')\\n\\nmodel.by_name()\\nmodel.by_reference()\\nmodel.imported()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emod\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eimported_func\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003erandom\\u003c/span\\u003e\\n\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eModel\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003ea_callback\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eimported_func\\u003c/span\\u003e()\\n\\n    \\u003cspan class=\\\"pl-en\\\"\\u003e@\\u003cspan class=\\\"pl-s1\\\"\\u003eproperty\\u003c/span\\u003e\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003ea_property\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"\\\"\\\" Basically a coin toss. \\\"\\\"\\\"\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003erandom\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003erandom\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026lt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e0.5\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003ean_attribute\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e\\n\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eModel\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'by_name'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003econditions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'a_property'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eafter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'a_callback'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'by_reference'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eunless\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'a_property'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'an_attribute'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003eafter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ea_callback\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'imported'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eafter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'mod.imported_func'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eby_name\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eby_reference\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eimported\\u003c/span\\u003e()\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe callable resolution is done in \\u003ccode\\u003eMachine.resolve_callable\\u003c/code\\u003e.\\nThis method can be overridden in case more complex callable resolution strategies are required.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003cstrong\\u003eExample\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class CustomMachine(Machine):\\n    @staticmethod\\n    def resolve_callable(func, event_data):\\n        # manipulate arguments here and return func, or super() if no manipulation is done.\\n        super(CustomMachine, CustomMachine).resolve_callable(func, event_data)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eCustomMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-en\\\"\\u003e@\\u003cspan class=\\\"pl-s1\\\"\\u003estaticmethod\\u003c/span\\u003e\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eresolve_callable\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efunc\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eevent_data\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-c\\\"\\u003e# manipulate arguments here and return func, or super() if no manipulation is done.\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-en\\\"\\u003esuper\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eCustomMachine\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eCustomMachine\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003eresolve_callable\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003efunc\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eevent_data\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-execution-order\\\"\\u003e\\u003c/a\\u003eCallback execution order\\u003c/h3\\u003e\\u003ca id=\\\"user-content-callback-execution-order\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Callback execution order\\\" href=\\\"#callback-execution-order\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn summary, there are currently three ways to trigger events. You can call a model's convenience functions like \\u003ccode\\u003elump.melt()\\u003c/code\\u003e,\\nexecute triggers by name such as \\u003ccode\\u003elump.trigger(\\\"melt\\\")\\u003c/code\\u003e or dispatch events on multiple models with \\u003ccode\\u003emachine.dispatch(\\\"melt\\\")\\u003c/code\\u003e\\n(see section about multiple models in \\u003ca href=\\\"#alternative-initialization-patterns\\\"\\u003ealternative initialization patterns\\u003c/a\\u003e).\\nCallbacks on transitions are then executed in the following order:\\u003c/p\\u003e\\n\\u003ctable\\u003e\\n\\u003cthead\\u003e\\n\\u003ctr\\u003e\\n\\u003cth\\u003eCallback\\u003c/th\\u003e\\n\\u003cth align=\\\"center\\\"\\u003eCurrent State\\u003c/th\\u003e\\n\\u003cth\\u003eComments\\u003c/th\\u003e\\n\\u003c/tr\\u003e\\n\\u003c/thead\\u003e\\n\\u003ctbody\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'machine.prepare_event'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003esource\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003eexecuted \\u003cem\\u003eonce\\u003c/em\\u003e before individual transitions are processed\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'transition.prepare'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003esource\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003eexecuted as soon as the transition starts\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'transition.conditions'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003esource\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003econditions \\u003cem\\u003emay\\u003c/em\\u003e fail and halt the transition\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'transition.unless'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003esource\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003econditions \\u003cem\\u003emay\\u003c/em\\u003e fail and halt the transition\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'machine.before_state_change'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003esource\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003edefault callbacks declared on model\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'transition.before'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003esource\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003e\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'state.on_exit'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003esource\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003ecallbacks declared on the source state\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e\\u0026lt;STATE CHANGE\\u0026gt;\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003e\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'state.on_enter'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003edestination\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003ecallbacks declared on the destination state\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'transition.after'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003edestination\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003e\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'machine.after_state_change'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003edestination\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003edefault callbacks declared on model\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'machine.on_exception'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003esource/destination\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003ecallbacks will be executed when an exception has been raised\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd\\u003e\\u003ccode\\u003e'machine.finalize_event'\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\\u003ccode\\u003esource/destination\\u003c/code\\u003e\\u003c/td\\u003e\\n\\u003ctd\\u003ecallbacks will be executed even if no transition took place or an exception has been raised\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003c/tbody\\u003e\\n\\u003c/table\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf any callback raises an exception, the processing of callbacks is not continued. This means that when an error occurs before the transition (in \\u003ccode\\u003estate.on_exit\\u003c/code\\u003e or earlier), it is halted. In case there is a raise after the transition has been conducted (in \\u003ccode\\u003estate.on_enter\\u003c/code\\u003e or later), the state change persists and no rollback is happening. Callbacks specified in \\u003ccode\\u003emachine.finalize_event\\u003c/code\\u003e will always be executed unless the exception is raised by a finalizing callback itself. Note that each callback sequence has to be finished before the next stage is executed. Blocking callbacks will halt the execution order and therefore block the \\u003ccode\\u003etrigger\\u003c/code\\u003e or \\u003ccode\\u003edispatch\\u003c/code\\u003e call itself. If you want callbacks to be executed in parallel, you could have a look at the \\u003ca href=\\\"#extensions\\\"\\u003eextensions\\u003c/a\\u003e \\u003ccode\\u003eAsyncMachine\\u003c/code\\u003e for asynchronous processing or \\u003ccode\\u003eLockedMachine\\u003c/code\\u003e for threading.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-passing-data\\\"\\u003e\\u003c/a\\u003ePassing data\\u003c/h3\\u003e\\u003ca id=\\\"user-content-passing-data\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Passing data\\\" href=\\\"#passing-data\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSometimes you need to pass the callback functions registered at machine initialization some data that reflects the model's current state.\\nTransitions allows you to do this in two different ways.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFirst (the default), you can pass any positional or keyword arguments directly to the trigger methods (created when you call \\u003ccode\\u003eadd_transition()\\u003c/code\\u003e):\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Matter(object):\\n    def __init__(self): self.set_environment()\\n    def set_environment(self, temp=0, pressure=101.325):\\n        self.temp = temp\\n        self.pressure = pressure\\n    def print_temperature(self): print(\\u0026quot;Current temperature is %d degrees celsius.\\u0026quot; % self.temp)\\n    def print_pressure(self): print(\\u0026quot;Current pressure is %.2f kPa.\\u0026quot; % self.pressure)\\n\\nlump = Matter()\\nmachine = Machine(lump, ['solid', 'liquid'], initial='solid')\\nmachine.add_transition('melt', 'solid', 'liquid', before='set_environment')\\n\\nlump.melt(45)  # positional arg;\\n# equivalent to lump.trigger('melt', 45)\\nlump.print_temperature()\\n\\u0026gt;\\u0026gt;\\u0026gt; 'Current temperature is 45 degrees celsius.'\\n\\nmachine.set_state('solid')  # reset state so we can melt again\\nlump.melt(pressure=300.23)  # keyword args also work\\nlump.print_pressure()\\n\\u0026gt;\\u0026gt;\\u0026gt; 'Current pressure is 300.23 kPa.'\\n\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003e__init__\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eset_environment\\u003c/span\\u003e()\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eset_environment\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etemp\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003epressure\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e101.325\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003etemp\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etemp\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003epressure\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003epressure\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eprint_temperature\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Current temperature is %d degrees celsius.\\\"\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e%\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003etemp\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eprint_pressure\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Current pressure is %.2f kPa.\\\"\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e%\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003epressure\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, [\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'melt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ebefore\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'set_environment'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e45\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# positional arg;\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# equivalent to lump.trigger('melt', 45)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eprint_temperature\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'Current temperature is 45 degrees celsius.'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eset_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# reset state so we can melt again\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003epressure\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e300.23\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# keyword args also work\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eprint_pressure\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'Current pressure is 300.23 kPa.'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou can pass any number of arguments you like to the trigger.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThere is one important limitation to this approach: every callback function triggered by the state transition must be able to handle \\u003cem\\u003eall\\u003c/em\\u003e of the arguments. This may cause problems if the callbacks each expect somewhat different data.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTo get around this, Transitions supports an alternate method for sending data. If you set \\u003ccode\\u003esend_event=True\\u003c/code\\u003e at \\u003ccode\\u003eMachine\\u003c/code\\u003e initialization, all arguments to the triggers will be wrapped in an \\u003ccode\\u003eEventData\\u003c/code\\u003e instance and passed on to every callback. (The \\u003ccode\\u003eEventData\\u003c/code\\u003e object also maintains internal references to the source state, model, transition, machine, and trigger associated with the event, in case you need to access these for anything.)\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Matter(object):\\n\\n    def __init__(self):\\n        self.temp = 0\\n        self.pressure = 101.325\\n\\n    # Note that the sole argument is now the EventData instance.\\n    # This object stores positional arguments passed to the trigger method in the\\n    # .args property, and stores keywords arguments in the .kwargs dictionary.\\n    def set_environment(self, event):\\n        self.temp = event.kwargs.get('temp', 0)\\n        self.pressure = event.kwargs.get('pressure', 101.325)\\n\\n    def print_pressure(self): print(\\u0026quot;Current pressure is %.2f kPa.\\u0026quot; % self.pressure)\\n\\nlump = Matter()\\nmachine = Machine(lump, ['solid', 'liquid'], send_event=True, initial='solid')\\nmachine.add_transition('melt', 'solid', 'liquid', before='set_environment')\\n\\nlump.melt(temp=45, pressure=1853.68)  # keyword args\\nlump.print_pressure()\\n\\u0026gt;\\u0026gt;\\u0026gt; 'Current pressure is 1853.68 kPa.'\\n\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003e__init__\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003etemp\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003epressure\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e101.325\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# Note that the sole argument is now the EventData instance.\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# This object stores positional arguments passed to the trigger method in the\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# .args property, and stores keywords arguments in the .kwargs dictionary.\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eset_environment\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eevent\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003etemp\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eevent\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ekwargs\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'temp'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e)\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003epressure\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eevent\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ekwargs\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'pressure'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e101.325\\u003c/span\\u003e)\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eprint_pressure\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Current pressure is %.2f kPa.\\\"\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e%\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003epressure\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, [\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003esend_event\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'melt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ebefore\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'set_environment'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etemp\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e45\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003epressure\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e1853.68\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# keyword args\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eprint_pressure\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'Current pressure is 1853.68 kPa.'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-alternative-initialization-patterns\\\"\\u003e\\u003c/a\\u003eAlternative initialization patterns\\u003c/h3\\u003e\\u003ca id=\\\"user-content-alternative-initialization-patterns\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Alternative initialization patterns\\\" href=\\\"#alternative-initialization-patterns\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn all of the examples so far, we've attached a new \\u003ccode\\u003eMachine\\u003c/code\\u003e instance to a separate model (\\u003ccode\\u003elump\\u003c/code\\u003e, an instance of class \\u003ccode\\u003eMatter\\u003c/code\\u003e). While this separation keeps things tidy (because you don't have to monkey patch a whole bunch of new methods into the \\u003ccode\\u003eMatter\\u003c/code\\u003e class), it can also get annoying, since it requires you to keep track of which methods are called on the state machine, and which ones are called on the model that the state machine is bound to (e.g., \\u003ccode\\u003elump.on_enter_StateA()\\u003c/code\\u003e vs. \\u003ccode\\u003emachine.add_transition()\\u003c/code\\u003e).\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFortunately, Transitions is flexible, and supports two other initialization patterns.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFirst, you can create a standalone state machine that doesn't require another model at all. Simply omit the model argument during initialization:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine = Machine(states=states, transitions=transitions, initial='solid')\\nmachine.melt()\\nmachine.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'liquid'\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you initialize the machine this way, you can then attach all triggering events (like \\u003ccode\\u003eevaporate()\\u003c/code\\u003e, \\u003ccode\\u003esublimate()\\u003c/code\\u003e, etc.) and all callback functions directly to the \\u003ccode\\u003eMachine\\u003c/code\\u003e instance.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThis approach has the benefit of consolidating all of the state machine functionality in one place, but can feel a little bit unnatural if you think state logic should be contained within the model itself rather than in a separate controller.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAn alternative (potentially better) approach is to have the model inherit from the \\u003ccode\\u003eMachine\\u003c/code\\u003e class. Transitions is designed to support inheritance seamlessly. (just be sure to override class \\u003ccode\\u003eMachine\\u003c/code\\u003e's \\u003ccode\\u003e__init__\\u003c/code\\u003e method!):\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Matter(Machine):\\n    def say_hello(self): print(\\u0026quot;hello, new state!\\u0026quot;)\\n    def say_goodbye(self): print(\\u0026quot;goodbye, old state!\\u0026quot;)\\n\\n    def __init__(self):\\n        states = ['solid', 'liquid', 'gas']\\n        Machine.__init__(self, states=states, initial='solid')\\n        self.add_transition('melt', 'solid', 'liquid')\\n\\nlump = Matter()\\nlump.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'solid'\\nlump.melt()\\nlump.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'liquid'\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esay_hello\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"hello, new state!\\\"\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esay_goodbye\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e): \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"goodbye, old state!\\\"\\u003c/span\\u003e)\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003e__init__\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e]\\n        \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003e__init__\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'melt'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003emelt\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eHere you get to consolidate all state machine functionality into your existing model, which often feels more natural than sticking all of the functionality we want in a separate standalone \\u003ccode\\u003eMachine\\u003c/code\\u003e instance.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eA machine can handle multiple models which can be passed as a list like \\u003ccode\\u003eMachine(model=[model1, model2, ...])\\u003c/code\\u003e.\\nIn cases where you want to add models \\u003cem\\u003eas well as\\u003c/em\\u003e the machine instance itself, you can pass the class variable placeholder (string) \\u003ccode\\u003eMachine.self_literal\\u003c/code\\u003e during initialization like \\u003ccode\\u003eMachine(model=[Machine.self_literal, model1, ...])\\u003c/code\\u003e.\\nYou can also create a standalone machine, and register models dynamically via \\u003ccode\\u003emachine.add_model\\u003c/code\\u003e by passing \\u003ccode\\u003emodel=None\\u003c/code\\u003e to the constructor.\\nFurthermore, you can use \\u003ccode\\u003emachine.dispatch\\u003c/code\\u003e to trigger events on all currently added models.\\nRemember to call \\u003ccode\\u003emachine.remove_model\\u003c/code\\u003e if machine is long-lasting and your models are temporary and should be garbage collected:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"class Matter():\\n    pass\\n\\nlump1 = Matter()\\nlump2 = Matter()\\n\\n# setting 'model' to None or passing an empty list will initialize the machine without a model\\nmachine = Machine(model=None, states=states, transitions=transitions, initial='solid')\\n\\nmachine.add_model(lump1)\\nmachine.add_model(lump2, initial='liquid')\\n\\nlump1.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'solid'\\nlump2.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'liquid'\\n\\n# custom events as well as auto transitions can be dispatched to all models\\nmachine.dispatch(\\u0026quot;to_plasma\\u0026quot;)\\n\\nlump1.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'plasma'\\nassert lump1.state == lump2.state\\n\\nmachine.remove_model([lump1, lump2])\\ndel lump1  # lump1 is garbage collected\\ndel lump2  # lump2 is garbage collected\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-k\\\"\\u003epass\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump1\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump2\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# setting 'model' to None or passing an empty list will initialize the machine without a model\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eNone\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_model\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump1\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_model\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump2\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# custom events as well as auto transitions can be dispatched to all models\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003edispatch\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"to_plasma\\\"\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'plasma'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elump1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e==\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elump2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eremove_model\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s1\\\"\\u003elump1\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003elump2\\u003c/span\\u003e])\\n\\u003cspan class=\\\"pl-k\\\"\\u003edel\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elump1\\u003c/span\\u003e  \\u003cspan class=\\\"pl-c\\\"\\u003e# lump1 is garbage collected\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003edel\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elump2\\u003c/span\\u003e  \\u003cspan class=\\\"pl-c\\\"\\u003e# lump2 is garbage collected\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you don't provide an initial state in the state machine constructor, \\u003ccode\\u003etransitions\\u003c/code\\u003e will create and add a default state called \\u003ccode\\u003e'initial'\\u003c/code\\u003e.\\nIf you do not want a default initial state, you can pass \\u003ccode\\u003einitial=None\\u003c/code\\u003e.\\nHowever, in this case you need to pass an initial state every time you add a model.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine = Machine(model=None, states=states, transitions=transitions, initial=None)\\n\\nmachine.add_model(Matter())\\n\\u0026gt;\\u0026gt;\\u0026gt; \\u0026quot;MachineError: No initial state configured for machine, must specify when adding model.\\u0026quot;\\nmachine.add_model(Matter(), initial='liquid')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eNone\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eNone\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_model\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e())\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"MachineError: No initial state configured for machine, must specify when adding model.\\\"\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_model\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eModels with multiple states could attach multiple machines using different \\u003ccode\\u003emodel_attribute\\u003c/code\\u003e values. As mentioned in \\u003ca href=\\\"#checking-state\\\"\\u003eChecking state\\u003c/a\\u003e, this will add custom \\u003ccode\\u003eis/to_\\u0026lt;model_attribute\\u0026gt;_\\u0026lt;state_name\\u0026gt;\\u003c/code\\u003e functions:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"lump = Matter()\\n\\nmatter_machine = Machine(lump, states=['solid', 'liquid', 'gas'], initial='solid')\\n# add a second machine to the same model but assign a different state attribute\\nshipment_machine = Machine(lump, states=['delivered', 'shipping'], initial='delivered', model_attribute='shipping_state')\\n\\nlump.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'solid'\\nlump.is_solid()  # check the default field\\n\\u0026gt;\\u0026gt;\\u0026gt; True\\nlump.shipping_state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'delivered'\\nlump.is_shipping_state_delivered()  # check the custom field.\\n\\u0026gt;\\u0026gt;\\u0026gt; True\\nlump.to_shipping_state_shipping()\\n\\u0026gt;\\u0026gt;\\u0026gt; True\\nlump.is_shipping_state_delivered()\\n\\u0026gt;\\u0026gt;\\u0026gt; False\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMatter\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ematter_machine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'liquid'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'gas'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# add a second machine to the same model but assign a different state attribute\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003eshipment_machine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'delivered'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'shipping'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'delivered'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003emodel_attribute\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'shipping_state'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_solid\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# check the default field\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eshipping_state\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'delivered'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_shipping_state_delivered\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# check the custom field.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_shipping_state_shipping\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elump\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_shipping_state_delivered\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eLogging\\u003c/h3\\u003e\\u003ca id=\\\"user-content-logging\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Logging\\\" href=\\\"#logging\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTransitions includes very rudimentary logging capabilities. A number of events \u2013 namely, state changes, transition triggers, and conditional checks \u2013 are logged as INFO-level events using the standard Python \\u003ccode\\u003elogging\\u003c/code\\u003e module. This means you can easily configure logging to standard output in a script:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# Set up logging; The basic log level will be DEBUG\\nimport logging\\nlogging.basicConfig(level=logging.DEBUG)\\n# Set transitions' log level to INFO; DEBUG messages will be omitted\\nlogging.getLogger('transitions').setLevel(logging.INFO)\\n\\n# Business as usual\\nmachine = Machine(states=states, transitions=transitions, initial='solid')\\n...\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# Set up logging; The basic log level will be DEBUG\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elogging\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elogging\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ebasicConfig\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elevel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003elogging\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eDEBUG\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Set transitions' log level to INFO; DEBUG messages will be omitted\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elogging\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003egetLogger\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'transitions'\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003esetLevel\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elogging\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eINFO\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# Business as usual\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'solid'\\u003c/span\\u003e)\\n...\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-restoring\\\"\\u003e\\u003c/a\\u003e(Re-)Storing machine instances\\u003c/h3\\u003e\\u003ca id=\\\"user-content-re-storing-machine-instances\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: (Re-)Storing machine instances\\\" href=\\\"#re-storing-machine-instances\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eMachines are picklable and can be stored and loaded with \\u003ccode\\u003epickle\\u003c/code\\u003e. For Python 3.3 and earlier \\u003ccode\\u003edill\\u003c/code\\u003e is required.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import dill as pickle # only required for Python 3.3 and earlier\\n\\nm = Machine(states=['A', 'B', 'C'], initial='A')\\nm.to_B()\\nm.state\\n\\u0026gt;\\u0026gt;\\u0026gt; B\\n\\n# store the machine\\ndump = pickle.dumps(m)\\n\\n# load the Machine instance again\\nm2 = pickle.loads(dump)\\n\\nm2.state\\n\\u0026gt;\\u0026gt;\\u0026gt; B\\n\\nm2.states.keys()\\n\\u0026gt;\\u0026gt;\\u0026gt; ['A', 'B', 'C']\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edill\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eas\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003epickle\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# only required for Python 3.3 and earlier\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_B\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eB\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# store the machine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003edump\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003epickle\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003edumps\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# load the Machine instance again\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em2\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003epickle\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eloads\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003edump\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eB\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ekeys\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e]\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-extensions\\\"\\u003e\\u003c/a\\u003e Extensions\\u003c/h3\\u003e\\u003ca id=\\\"user-content--extensions\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink:  Extensions\\\" href=\\\"#-extensions\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eEven though the core of transitions is kept lightweight, there are a variety of MixIns to extend its functionality. Currently supported are:\\u003c/p\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003cstrong\\u003eDiagrams\\u003c/strong\\u003e to visualize the current state of a machine\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cstrong\\u003eHierarchical State Machines\\u003c/strong\\u003e for nesting and reuse\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cstrong\\u003eThreadsafe Locks\\u003c/strong\\u003e for parallel execution\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cstrong\\u003eAsync callbacks\\u003c/strong\\u003e for asynchronous execution\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cstrong\\u003eCustom States\\u003c/strong\\u003e for extended state-related behaviour\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThere are two mechanisms to retrieve a state machine instance with the desired features enabled.\\nThe first approach makes use of the convenience \\u003ccode\\u003efactory\\u003c/code\\u003e with the four parameters \\u003ccode\\u003egraph\\u003c/code\\u003e, \\u003ccode\\u003enested\\u003c/code\\u003e, \\u003ccode\\u003elocked\\u003c/code\\u003e or \\u003ccode\\u003easyncio\\u003c/code\\u003e set to \\u003ccode\\u003eTrue\\u003c/code\\u003e if the feature is required:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions.extensions import MachineFactory\\n\\n# create a machine with mixins\\ndiagram_cls = MachineFactory.get_predefined(graph=True)\\nnested_locked_cls = MachineFactory.get_predefined(nested=True, locked=True)\\nasync_machine_cls = MachineFactory.get_predefined(asyncio=True)\\n\\n# create instances from these classes\\n# instances can be used like simple machines\\nmachine1 = diagram_cls(model, state, transitions)\\nmachine2 = nested_locked_cls(model, state, transitions)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachineFactory\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# create a machine with mixins\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ediagram_cls\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachineFactory\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_predefined\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003egraph\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003enested_locked_cls\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachineFactory\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_predefined\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003enested\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003elocked\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003easync_machine_cls\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachineFactory\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_predefined\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# create instances from these classes\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# instances can be used like simple machines\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine1\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003ediagram_cls\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine2\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003enested_locked_cls\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThis approach targets experimental use since in this case the underlying classes do not have to be known.\\nHowever, classes can also be directly imported from \\u003ccode\\u003etransitions.extensions\\u003c/code\\u003e. The naming scheme is as follows:\\u003c/p\\u003e\\n\\u003ctable\\u003e\\n\\u003cthead\\u003e\\n\\u003ctr\\u003e\\n\\u003cth align=\\\"right\\\"\\u003e\\u003c/th\\u003e\\n\\u003cth align=\\\"center\\\"\\u003eDiagrams\\u003c/th\\u003e\\n\\u003cth align=\\\"center\\\"\\u003eNested\\u003c/th\\u003e\\n\\u003cth align=\\\"center\\\"\\u003eLocked\\u003c/th\\u003e\\n\\u003cth align=\\\"center\\\"\\u003eAsyncio\\u003c/th\\u003e\\n\\u003c/tr\\u003e\\n\\u003c/thead\\u003e\\n\\u003ctbody\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eGraphMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eHierarchicalMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eLockedMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eHierarchicalGraphMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eLockedGraphMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eLockedHierarchicalMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eLockedHierarchicalGraphMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eAsyncMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eAsyncGraphMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eHierarchicalAsyncMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003ctr\\u003e\\n\\u003ctd align=\\\"right\\\"\\u003eHierarchicalAsyncGraphMachine\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2718\\u003c/td\\u003e\\n\\u003ctd align=\\\"center\\\"\\u003e\u2713\\u003c/td\\u003e\\n\\u003c/tr\\u003e\\n\\u003c/tbody\\u003e\\n\\u003c/table\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTo use a feature-rich state machine, one could write:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions.extensions import LockedHierarchicalGraphMachine as LHGMachine\\n\\nmachine = LHGMachine(model, states, transitions)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eLockedHierarchicalGraphMachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eas\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eLHGMachine\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eLHGMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-diagrams\\\"\\u003e\\u003c/a\\u003e Diagrams\\u003c/h4\\u003e\\u003ca id=\\\"user-content--diagrams\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink:  Diagrams\\\" href=\\\"#-diagrams\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAdditional Keywords:\\u003c/p\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003etitle\\u003c/code\\u003e (optional): Sets the title of the generated image.\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003eshow_conditions\\u003c/code\\u003e (default False): Shows conditions at transition edges\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003eshow_auto_transitions\\u003c/code\\u003e (default False): Shows auto transitions in graph\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003eshow_state_attributes\\u003c/code\\u003e (default False): Show callbacks (enter, exit), tags and timeouts in graph\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTransitions can generate basic state diagrams displaying all valid transitions between states. To use the graphing functionality, you'll need to have \\u003ccode\\u003egraphviz\\u003c/code\\u003e and/or \\u003ccode\\u003epygraphviz\\u003c/code\\u003e installed:\\u003cbr\\u003e\\nTo generate graphs with the package \\u003ccode\\u003egraphviz\\u003c/code\\u003e, you need to install \\u003ca href=\\\"https://graphviz.org/\\\" rel=\\\"nofollow\\\"\\u003eGraphviz\\u003c/a\\u003e manually or via a package manager.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"sudo apt-get install graphviz graphviz-dev  # Ubuntu and Debian\\nbrew install graphviz  # MacOS\\nconda install graphviz python-graphviz  # (Ana)conda\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003esudo apt-get install graphviz graphviz-dev  # Ubuntu and Debian\\nbrew install graphviz  # MacOS\\nconda install graphviz python-graphviz  # (Ana)conda\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNow you can install the actual Python packages\\u003c/p\\u003e\\n\\u003cdiv class=\\\"snippet-clipboard-content notranslate position-relative overflow-auto\\\" data-snippet-clipboard-copy-content=\\\"pip install graphviz pygraphviz # install graphviz and/or pygraphviz manually...\\npip install transitions[diagrams]  # ... or install transitions with 'diagrams' extras which currently depends on pygraphviz\\\"\\u003e\\u003cpre class=\\\"notranslate\\\"\\u003e\\u003ccode\\u003epip install graphviz pygraphviz # install graphviz and/or pygraphviz manually...\\npip install transitions[diagrams]  # ... or install transitions with 'diagrams' extras which currently depends on pygraphviz\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eCurrently, \\u003ccode\\u003eGraphMachine\\u003c/code\\u003e will use \\u003ccode\\u003epygraphviz\\u003c/code\\u003e when available and fall back to \\u003ccode\\u003egraphviz\\u003c/code\\u003e when \\u003ccode\\u003epygraphviz\\u003c/code\\u003e cannot be\\nfound. This can be overridden by passing \\u003ccode\\u003euse_pygraphviz=False\\u003c/code\\u003e to the constructor. Note that this default might change\\nin the future and \\u003ccode\\u003epygraphviz\\u003c/code\\u003e support may be dropped.\\nWith \\u003ccode\\u003eModel.get_graph()\\u003c/code\\u003e you can get the current graph or the region of interest (roi) and draw it like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# import transitions\\n\\nfrom transitions.extensions import GraphMachine\\nm = Model()\\n# without further arguments pygraphviz will be used\\nmachine = GraphMachine(model=m, ...)\\n# when you want to use graphviz explicitly\\nmachine = GraphMachine(model=m, use_pygraphviz=False, ...)\\n# in cases where auto transitions should be visible\\nmachine = GraphMachine(model=m, show_auto_transitions=True, ...)\\n\\n# draw the whole graph ...\\nm.get_graph().draw('my_state_diagram.png', prog='dot')\\n# ... or just the region of interest\\n# (previous state, active state and all reachable states)\\nroi = m.get_graph(show_roi=True).draw('my_state_diagram.png', prog='dot')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# import transitions\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eGraphMachine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eModel\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# without further arguments pygraphviz will be used\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eGraphMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e, ...)\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# when you want to use graphviz explicitly\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eGraphMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003euse_pygraphviz\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e, ...)\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# in cases where auto transitions should be visible\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eGraphMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eshow_auto_transitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e, ...)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# draw the whole graph ...\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_graph\\u003c/span\\u003e().\\u003cspan class=\\\"pl-en\\\"\\u003edraw\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'my_state_diagram.png'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eprog\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dot'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# ... or just the region of interest\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# (previous state, active state and all reachable states)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003eroi\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_graph\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eshow_roi\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e).\\u003cspan class=\\\"pl-en\\\"\\u003edraw\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'my_state_diagram.png'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eprog\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dot'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThis produces something like this:\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ca target=\\\"_blank\\\" rel=\\\"noopener noreferrer nofollow\\\" href=\\\"https://user-images.githubusercontent.com/205986/47524268-725c1280-d89a-11e8-812b-1d3b6e667b91.png\\\"\\u003e\\u003cimg src=\\\"https://user-images.githubusercontent.com/205986/47524268-725c1280-d89a-11e8-812b-1d3b6e667b91.png\\\" alt=\\\"state diagram example\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIndependent of the backend you use, the draw function also accepts a file descriptor or a binary stream as the first argument. If you set this parameter to \\u003ccode\\u003eNone\\u003c/code\\u003e, the byte stream will be returned:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import io\\n\\nwith open('a_graph.png', 'bw') as f:\\n    # you need to pass the format when you pass objects instead of filenames.\\n    m.get_graph().draw(f, format=\\u0026quot;png\\u0026quot;, prog='dot')\\n\\n# you can pass a (binary) stream too\\nb = io.BytesIO()\\nm.get_graph().draw(b, format=\\u0026quot;png\\u0026quot;, prog='dot')\\n\\n# or just handle the binary string yourself\\nresult = m.get_graph().draw(None, format=\\u0026quot;png\\u0026quot;, prog='dot')\\nassert result == b.getvalue()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eio\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003ewith\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eopen\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'a_graph.png'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'bw'\\u003c/span\\u003e) \\u003cspan class=\\\"pl-k\\\"\\u003eas\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ef\\u003c/span\\u003e:\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# you need to pass the format when you pass objects instead of filenames.\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_graph\\u003c/span\\u003e().\\u003cspan class=\\\"pl-en\\\"\\u003edraw\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ef\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eformat\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"png\\\"\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eprog\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dot'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# you can pass a (binary) stream too\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003eb\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eBytesIO\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_graph\\u003c/span\\u003e().\\u003cspan class=\\\"pl-en\\\"\\u003edraw\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eb\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eformat\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"png\\\"\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eprog\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dot'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# or just handle the binary string yourself\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003eresult\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_graph\\u003c/span\\u003e().\\u003cspan class=\\\"pl-en\\\"\\u003edraw\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003eNone\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eformat\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"png\\\"\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eprog\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dot'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eresult\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e==\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eb\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003egetvalue\\u003c/span\\u003e()\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eReferences and partials passed as callbacks will be resolved as good as possible:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions.extensions import GraphMachine\\nfrom functools import partial\\n\\n\\nclass Model:\\n\\n    def clear_state(self, deep=False, force=False):\\n        print(\\u0026quot;Clearing state ...\\u0026quot;)\\n        return True\\n\\n\\nmodel = Model()\\nmachine = GraphMachine(model=model, states=['A', 'B', 'C'],\\n                       transitions=[\\n                           {'trigger': 'clear', 'source': 'B', 'dest': 'A', 'conditions': model.clear_state},\\n                           {'trigger': 'clear', 'source': 'C', 'dest': 'A',\\n                            'conditions': partial(model.clear_state, False, force=True)},\\n                       ],\\n                       initial='A', show_conditions=True)\\n\\nmodel.get_graph().draw('my_state_diagram.png', prog='dot')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eGraphMachine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003efunctools\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003epartial\\u003c/span\\u003e\\n\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eModel\\u003c/span\\u003e:\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eclear_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003edeep\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eforce\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Clearing state ...\\\"\\u003c/span\\u003e)\\n        \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e\\n\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eModel\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eGraphMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e],\\n                       \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\n                           {\\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'clear'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'conditions'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eclear_state\\u003c/span\\u003e},\\n                           {\\u003cspan class=\\\"pl-s\\\"\\u003e'trigger'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'clear'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'source'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'dest'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e,\\n                            \\u003cspan class=\\\"pl-s\\\"\\u003e'conditions'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-en\\\"\\u003epartial\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eclear_state\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eforce\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)},\\n                       ],\\n                       \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eshow_conditions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_graph\\u003c/span\\u003e().\\u003cspan class=\\\"pl-en\\\"\\u003edraw\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'my_state_diagram.png'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eprog\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'dot'\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThis should produce something similar to this:\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ca target=\\\"_blank\\\" rel=\\\"noopener noreferrer nofollow\\\" href=\\\"https://user-images.githubusercontent.com/205986/110783076-39087f80-8268-11eb-8fa1-fc7bac97f4cf.png\\\"\\u003e\\u003cimg src=\\\"https://user-images.githubusercontent.com/205986/110783076-39087f80-8268-11eb-8fa1-fc7bac97f4cf.png\\\" alt=\\\"state diagram references_example\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf the format of references does not suit your needs, you can override the static method \\u003ccode\\u003eGraphMachine.format_references\\u003c/code\\u003e. If you want to skip reference entirely, just let \\u003ccode\\u003eGraphMachine.format_references\\u003c/code\\u003e return \\u003ccode\\u003eNone\\u003c/code\\u003e.\\nAlso, have a look at our \\u003ca href=\\\"/pytransitions/transitions/blob/master/examples\\\"\\u003eexample\\u003c/a\\u003e IPython/Jupyter notebooks for a more detailed example about how to use and edit graphs.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-hsm\\\"\\u003e\\u003c/a\\u003eHierarchical State Machine (HSM)\\u003c/h3\\u003e\\u003ca id=\\\"user-content-hierarchical-state-machine-hsm\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Hierarchical State Machine (HSM)\\\" href=\\\"#hierarchical-state-machine-hsm\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTransitions includes an extension module which allows nesting states.\\nThis allows us to create contexts and to model cases where states are related to certain subtasks in the state machine.\\nTo create a nested state, either import \\u003ccode\\u003eNestedState\\u003c/code\\u003e from transitions or use a dictionary with the initialization arguments \\u003ccode\\u003ename\\u003c/code\\u003e and \\u003ccode\\u003echildren\\u003c/code\\u003e.\\nOptionally, \\u003ccode\\u003einitial\\u003c/code\\u003e can be used to define a sub state to transit to, when the nested state is entered.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions.extensions import HierarchicalMachine\\n\\nstates = ['standing', 'walking', {'name': 'caffeinated', 'children':['dithering', 'running']}]\\ntransitions = [\\n  ['walk', 'standing', 'walking'],\\n  ['stop', 'walking', 'standing'],\\n  ['drink', '*', 'caffeinated'],\\n  ['walk', ['caffeinated', 'caffeinated_dithering'], 'caffeinated_running'],\\n  ['relax', 'caffeinated', 'standing']\\n]\\n\\nmachine = HierarchicalMachine(states=states, transitions=transitions, initial='standing', ignore_invalid_triggers=True)\\n\\nmachine.walk() # Walking now\\nmachine.stop() # let's stop for a moment\\nmachine.drink() # coffee time\\nmachine.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'caffeinated'\\nmachine.walk() # we have to go faster\\nmachine.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'caffeinated_running'\\nmachine.stop() # can't stop moving!\\nmachine.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'caffeinated_running'\\nmachine.relax() # leave nested state\\nmachine.state # phew, what a ride\\n\\u0026gt;\\u0026gt;\\u0026gt; 'standing'\\n# machine.on_enter_caffeinated_running('callback_method')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'standing'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'walking'\\u003c/span\\u003e, {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'children'\\u003c/span\\u003e:[\\u003cspan class=\\\"pl-s\\\"\\u003e'dithering'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'running'\\u003c/span\\u003e]}]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n  [\\u003cspan class=\\\"pl-s\\\"\\u003e'walk'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'standing'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'walking'\\u003c/span\\u003e],\\n  [\\u003cspan class=\\\"pl-s\\\"\\u003e'stop'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'walking'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'standing'\\u003c/span\\u003e],\\n  [\\u003cspan class=\\\"pl-s\\\"\\u003e'drink'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated'\\u003c/span\\u003e],\\n  [\\u003cspan class=\\\"pl-s\\\"\\u003e'walk'\\u003c/span\\u003e, [\\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated_dithering'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated_running'\\u003c/span\\u003e],\\n  [\\u003cspan class=\\\"pl-s\\\"\\u003e'relax'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'standing'\\u003c/span\\u003e]\\n]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'standing'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eignore_invalid_triggers\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ewalk\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c\\\"\\u003e# Walking now\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003estop\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c\\\"\\u003e# let's stop for a moment\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003edrink\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c\\\"\\u003e# coffee time\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ewalk\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c\\\"\\u003e# we have to go faster\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated_running'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003estop\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c\\\"\\u003e# can't stop moving!\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated_running'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003erelax\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c\\\"\\u003e# leave nested state\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# phew, what a ride\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'standing'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# machine.on_enter_caffeinated_running('callback_method')\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eA configuration making use of \\u003ccode\\u003einitial\\u003c/code\\u003e could look like this:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"# ...\\nstates = ['standing', 'walking', {'name': 'caffeinated', 'initial': 'dithering', 'children': ['dithering', 'running']}]\\ntransitions = [\\n  ['walk', 'standing', 'walking'],\\n  ['stop', 'walking', 'standing'],\\n  # this transition will end in 'caffeinated_dithering'...\\n  ['drink', '*', 'caffeinated'],\\n  # ... that is why we do not need do specify 'caffeinated' here anymore\\n  ['walk', 'caffeinated_dithering', 'caffeinated_running'],\\n  ['relax', 'caffeinated', 'standing']\\n]\\n# ...\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-c\\\"\\u003e# ...\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'standing'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'walking'\\u003c/span\\u003e, {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'initial'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'dithering'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'children'\\u003c/span\\u003e: [\\u003cspan class=\\\"pl-s\\\"\\u003e'dithering'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'running'\\u003c/span\\u003e]}]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n  [\\u003cspan class=\\\"pl-s\\\"\\u003e'walk'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'standing'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'walking'\\u003c/span\\u003e],\\n  [\\u003cspan class=\\\"pl-s\\\"\\u003e'stop'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'walking'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'standing'\\u003c/span\\u003e],\\n  \\u003cspan class=\\\"pl-c\\\"\\u003e# this transition will end in 'caffeinated_dithering'...\\u003c/span\\u003e\\n  [\\u003cspan class=\\\"pl-s\\\"\\u003e'drink'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated'\\u003c/span\\u003e],\\n  \\u003cspan class=\\\"pl-c\\\"\\u003e# ... that is why we do not need do specify 'caffeinated' here anymore\\u003c/span\\u003e\\n  [\\u003cspan class=\\\"pl-s\\\"\\u003e'walk'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated_dithering'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated_running'\\u003c/span\\u003e],\\n  [\\u003cspan class=\\\"pl-s\\\"\\u003e'relax'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'caffeinated'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'standing'\\u003c/span\\u003e]\\n]\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# ...\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThe \\u003ccode\\u003einitial\\u003c/code\\u003e keyword of the \\u003ccode\\u003eHierarchicalMachine\\u003c/code\\u003e constructor accepts nested states (e.g. \\u003ccode\\u003einitial='caffeinated_running'\\u003c/code\\u003e) and a list of states which is considered to be a parallel state (e.g. \\u003ccode\\u003einitial=['A', 'B']\\u003c/code\\u003e) or the current state of another model (\\u003ccode\\u003einitial=model.state\\u003c/code\\u003e) which should be effectively one of the previous mentioned options. Note that when passing a string, \\u003ccode\\u003etransition\\u003c/code\\u003e will check the targeted state for \\u003ccode\\u003einitial\\u003c/code\\u003e substates and use this as an entry state. This will be done recursively until a substate does not mention an initial state. Parallel states or a state passed as a list will be used 'as is' and no further initial evaluation will be conducted.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNote that your previously created state object \\u003cem\\u003emust be\\u003c/em\\u003e a \\u003ccode\\u003eNestedState\\u003c/code\\u003e or a derived class of it.\\nThe standard \\u003ccode\\u003eState\\u003c/code\\u003e class used in simple \\u003ccode\\u003eMachine\\u003c/code\\u003e instances lacks features required for nesting.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions.extensions.nesting import HierarchicalMachine, NestedState\\nfrom transitions import  State\\nm = HierarchicalMachine(states=['A'], initial='initial')\\nm.add_state('B')  # fine\\nm.add_state({'name': 'C'})  # also fine\\nm.add_state(NestedState('D'))  # fine as well\\nm.add_state(State('E'))  # does not work!\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003enesting\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eNestedState\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e  \\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'initial'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# fine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_state\\u003c/span\\u003e({\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e})  \\u003cspan class=\\\"pl-c\\\"\\u003e# also fine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eNestedState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'D'\\u003c/span\\u003e))  \\u003cspan class=\\\"pl-c\\\"\\u003e# fine as well\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'E'\\u003c/span\\u003e))  \\u003cspan class=\\\"pl-c\\\"\\u003e# does not work!\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSome things that have to be considered when working with nested states: State \\u003cem\\u003enames are concatenated\\u003c/em\\u003e with \\u003ccode\\u003eNestedState.separator\\u003c/code\\u003e.\\nCurrently the separator is set to underscore ('_') and therefore behaves similar to the basic machine.\\nThis means a substate \\u003ccode\\u003ebar\\u003c/code\\u003e from state \\u003ccode\\u003efoo\\u003c/code\\u003e will be known by \\u003ccode\\u003efoo_bar\\u003c/code\\u003e. A substate \\u003ccode\\u003ebaz\\u003c/code\\u003e of \\u003ccode\\u003ebar\\u003c/code\\u003e will be referred to as \\u003ccode\\u003efoo_bar_baz\\u003c/code\\u003e and so on.\\nWhen entering a substate, \\u003ccode\\u003eenter\\u003c/code\\u003e will be called for all parent states. The same is true for exiting substates.\\nThird, nested states can overwrite transition behaviour of their parents.\\nIf a transition is not known to the current state it will be delegated to its parent.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003cstrong\\u003eThis means that in the standard configuration, state names in HSMs MUST NOT contain underscores.\\u003c/strong\\u003e\\nFor \\u003ccode\\u003etransitions\\u003c/code\\u003e it's impossible to tell whether \\u003ccode\\u003emachine.add_state('state_name')\\u003c/code\\u003e should add a state named \\u003ccode\\u003estate_name\\u003c/code\\u003e or add a substate \\u003ccode\\u003ename\\u003c/code\\u003e to the state \\u003ccode\\u003estate\\u003c/code\\u003e.\\nIn some cases this is not sufficient however.\\nFor instance if state names consist of more than one word and you want/need to use underscore to separate them instead of \\u003ccode\\u003eCamelCase\\u003c/code\\u003e.\\nTo deal with this, you can change the character used for separation quite easily.\\nYou can even use fancy unicode characters if you use Python 3.\\nSetting the separator to something else than underscore changes some of the behaviour (auto_transition and setting callbacks) though:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions.extensions import HierarchicalMachine\\nfrom transitions.extensions.nesting import NestedState\\nNestedState.separator = '\u21a6'\\nstates = ['A', 'B',\\n  {'name': 'C', 'children':['1', '2',\\n    {'name': '3', 'children': ['a', 'b', 'c']}\\n  ]}\\n]\\n\\ntransitions = [\\n    ['reset', 'C', 'A'],\\n    ['reset', 'C\u21a62', 'C']  # overwriting parent reset\\n]\\n\\n# we rely on auto transitions\\nmachine = HierarchicalMachine(states=states, transitions=transitions, initial='A')\\nmachine.to_B()  # exit state A, enter state B\\nmachine.to_C()  # exit B, enter C\\nmachine.to_C.s3.a()  # enter C\u21a6a; enter C\u21a63\u21a6a;\\nmachine.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'C\u21a63\u21a6a'\\nassert machine.is_C.s3.a()\\nmachine.to('C\u21a62')  # not interactive; exit C\u21a63\u21a6a, exit C\u21a63, enter C\u21a62\\nmachine.reset()  # exit C\u21a62; reset C has been overwritten by C\u21a63\\nmachine.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'C'\\nmachine.reset()  # exit C, enter A\\nmachine.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'A'\\n# s.on_enter('C\u21a63\u21a6a', 'callback_method')\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003enesting\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eNestedState\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-v\\\"\\u003eNestedState\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eseparator\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'\u21a6'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e,\\n  {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'children'\\u003c/span\\u003e:[\\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e,\\n    {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'children'\\u003c/span\\u003e: [\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e]}\\n  ]}\\n]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'reset'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e],\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'reset'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C\u21a62'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e]  \\u003cspan class=\\\"pl-c\\\"\\u003e# overwriting parent reset\\u003c/span\\u003e\\n]\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# we rely on auto transitions\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_B\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# exit state A, enter state B\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_C\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# exit B, enter C\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eto_C\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003es3\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ea\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# enter C\u21a6a; enter C\u21a63\u21a6a;\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'C\u21a63\u21a6a'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eis_C\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003es3\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ea\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'C\u21a62'\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# not interactive; exit C\u21a63\u21a6a, exit C\u21a63, enter C\u21a62\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ereset\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# exit C\u21a62; reset C has been overwritten by C\u21a63\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ereset\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# exit C, enter A\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# s.on_enter('C\u21a63\u21a6a', 'callback_method')\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eInstead of \\u003ccode\\u003eto_C_3_a()\\u003c/code\\u003e auto transition is called as \\u003ccode\\u003eto_C.s3.a()\\u003c/code\\u003e. If your substate starts with a digit, transitions adds a prefix 's' ('3' becomes 's3') to the auto transition \\u003ccode\\u003eFunctionWrapper\\u003c/code\\u003e to comply with the attribute naming scheme of Python.\\nIf interactive completion is not required, \\u003ccode\\u003eto('C\u21a63\u21a6a')\\u003c/code\\u003e can be called directly. Additionally, \\u003ccode\\u003eon_enter/exit_\\u0026lt;\\u0026lt;state name\\u0026gt;\\u0026gt;\\u003c/code\\u003e is replaced with \\u003ccode\\u003eon_enter/exit(state_name, callback)\\u003c/code\\u003e. State checks can be conducted in a similar fashion. Instead of \\u003ccode\\u003eis_C_3_a()\\u003c/code\\u003e, the \\u003ccode\\u003eFunctionWrapper\\u003c/code\\u003e variant \\u003ccode\\u003eis_C.s3.a()\\u003c/code\\u003e can be used.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eTo check whether the current state is a substate of a specific state, \\u003ccode\\u003eis_state\\u003c/code\\u003e supports the keyword \\u003ccode\\u003eallow_substates\\u003c/code\\u003e:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"machine.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'C.2.a'\\nmachine.is_C() # checks for specific states\\n\\u0026gt;\\u0026gt;\\u0026gt; False\\nmachine.is_C(allow_substates=True)\\n\\u0026gt;\\u0026gt;\\u0026gt; True\\nassert machine.is_C.s2() is False\\nassert machine.is_C.s2(allow_substates=True)  # FunctionWrapper support allow_substate as well\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'C.2.a'\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_C\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c\\\"\\u003e# checks for specific states\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_C\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eallow_substates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eis_C\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003es2\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c1\\\"\\u003eis\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eis_C\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003es2\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eallow_substates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# FunctionWrapper support allow_substate as well\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003cem\\u003enew in 0.8.0\\u003c/em\\u003e\\u003cbr\\u003e\\nYou can use enumerations in HSMs as well but keep in mind that \\u003ccode\\u003eEnum\\u003c/code\\u003e are compared by value.\\nIf you have a value more than once in a state tree those states cannot be distinguished.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"states = [States.RED, States.YELLOW, {'name': States.GREEN, 'children': ['tick', 'tock']}]\\nstates = ['A', {'name': 'B', 'children': states, 'initial': States.GREEN}, States.GREEN]\\nmachine = HierarchicalMachine(states=states)\\nmachine.to_B()\\nmachine.is_GREEN()  # returns True even though the actual state is B_GREEN\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eRED\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eYELLOW\\u003c/span\\u003e, {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eGREEN\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'children'\\u003c/span\\u003e: [\\u003cspan class=\\\"pl-s\\\"\\u003e'tick'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'tock'\\u003c/span\\u003e]}]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'children'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'initial'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eGREEN\\u003c/span\\u003e}, \\u003cspan class=\\\"pl-v\\\"\\u003eStates\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eGREEN\\u003c/span\\u003e]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_B\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_GREEN\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# returns True even though the actual state is B_GREEN\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003cem\\u003enew in 0.8.0\\u003c/em\\u003e\\u003cbr\\u003e\\n\\u003ccode\\u003eHierarchicalMachine\\u003c/code\\u003e has been rewritten from scratch to support parallel states and better isolation of nested states.\\nThis involves some tweaks based on community feedback.\\nTo get an idea of processing order and configuration have a look at the following example:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions.extensions.nesting import HierarchicalMachine\\nimport logging\\nstates = ['A', 'B', {'name': 'C', 'parallel': [{'name': '1', 'children': ['a', 'b', 'c'], 'initial': 'a',\\n                                                'transitions': [['go', 'a', 'b']]},\\n                                               {'name': '2', 'children': ['x', 'y', 'z'], 'initial': 'z'}],\\n                      'transitions': [['go', '2_z', '2_x']]}]\\n\\ntransitions = [['reset', 'C_1_b', 'B']]\\nlogging.basicConfig(level=logging.INFO)\\nmachine = HierarchicalMachine(states=states, transitions=transitions, initial='A')\\nmachine.to_C()\\n# INFO:transitions.extensions.nesting:Exited state A\\n# INFO:transitions.extensions.nesting:Entered state C\\n# INFO:transitions.extensions.nesting:Entered state C_1\\n# INFO:transitions.extensions.nesting:Entered state C_2\\n# INFO:transitions.extensions.nesting:Entered state C_1_a\\n# INFO:transitions.extensions.nesting:Entered state C_2_z\\nmachine.go()\\n# INFO:transitions.extensions.nesting:Exited state C_1_a\\n# INFO:transitions.extensions.nesting:Entered state C_1_b\\n# INFO:transitions.extensions.nesting:Exited state C_2_z\\n# INFO:transitions.extensions.nesting:Entered state C_2_x\\nmachine.reset()\\n# INFO:transitions.extensions.nesting:Exited state C_1_b\\n# INFO:transitions.extensions.nesting:Exited state C_2_x\\n# INFO:transitions.extensions.nesting:Exited state C_1\\n# INFO:transitions.extensions.nesting:Exited state C_2\\n# INFO:transitions.extensions.nesting:Exited state C\\n# INFO:transitions.extensions.nesting:Entered state B\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003enesting\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003elogging\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'parallel'\\u003c/span\\u003e: [{\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'children'\\u003c/span\\u003e: [\\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'c'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s\\\"\\u003e'initial'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e,\\n                                                \\u003cspan class=\\\"pl-s\\\"\\u003e'transitions'\\u003c/span\\u003e: [[\\u003cspan class=\\\"pl-s\\\"\\u003e'go'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'a'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'b'\\u003c/span\\u003e]]},\\n                                               {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'children'\\u003c/span\\u003e: [\\u003cspan class=\\\"pl-s\\\"\\u003e'x'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'y'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'z'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s\\\"\\u003e'initial'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'z'\\u003c/span\\u003e}],\\n                      \\u003cspan class=\\\"pl-s\\\"\\u003e'transitions'\\u003c/span\\u003e: [[\\u003cspan class=\\\"pl-s\\\"\\u003e'go'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2_z'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2_x'\\u003c/span\\u003e]]}]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [[\\u003cspan class=\\\"pl-s\\\"\\u003e'reset'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C_1_b'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e]]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elogging\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ebasicConfig\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003elevel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003elogging\\u003c/span\\u003e.\\u003cspan class=\\\"pl-v\\\"\\u003eINFO\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_C\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Exited state A\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Entered state C\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Entered state C_1\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Entered state C_2\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Entered state C_1_a\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Entered state C_2_z\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ego\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Exited state C_1_a\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Entered state C_1_b\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Exited state C_2_z\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Entered state C_2_x\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ereset\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Exited state C_1_b\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Exited state C_2_x\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Exited state C_1\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Exited state C_2\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Exited state C\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# INFO:transitions.extensions.nesting:Entered state B\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eWhen using \\u003ccode\\u003eparallel\\u003c/code\\u003e instead of \\u003ccode\\u003echildren\\u003c/code\\u003e, \\u003ccode\\u003etransitions\\u003c/code\\u003e will enter all states of the passed list at the same time.\\nWhich substate to enter is defined by \\u003ccode\\u003einitial\\u003c/code\\u003e which should \\u003cem\\u003ealways\\u003c/em\\u003e point to a direct substate.\\nA novel feature is to define local transitions by passing the \\u003ccode\\u003etransitions\\u003c/code\\u003e keyword in a state definition.\\nThe above defined transition \\u003ccode\\u003e['go', 'a', 'b']\\u003c/code\\u003e is only valid in \\u003ccode\\u003eC_1\\u003c/code\\u003e.\\nWhile you can reference substates as done in \\u003ccode\\u003e['go', '2_z', '2_x']\\u003c/code\\u003e you cannot reference parent states directly in locally defined transitions.\\nWhen a parent state is exited, its children will also be exited.\\nIn addition to the processing order of transitions known from \\u003ccode\\u003eMachine\\u003c/code\\u003e where transitions are considered in the order they were added, \\u003ccode\\u003eHierarchicalMachine\\u003c/code\\u003e considers hierarchy as well.\\nTransitions defined in substates will be evaluated first (e.g. \\u003ccode\\u003eC_1_a\\u003c/code\\u003e is left before \\u003ccode\\u003eC_2_z\\u003c/code\\u003e) and transitions defined with wildcard \\u003ccode\\u003e*\\u003c/code\\u003e will (for now) only add transitions to root states (in this example \\u003ccode\\u003eA\\u003c/code\\u003e, \\u003ccode\\u003eB\\u003c/code\\u003e, \\u003ccode\\u003eC\\u003c/code\\u003e)\\nStarting with \\u003cem\\u003e0.8.0\\u003c/em\\u003e nested states can be added directly and will issue the creation of parent states on-the-fly:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"m = HierarchicalMachine(states=['A'], initial='A')\\nm.add_state('B_1_a')\\nm.to_B_1()\\nassert m.is_B(allow_substates=True)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e'B_1_a'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_B_1\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_B\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eallow_substates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003eReuse of previously created HSMs\\u003c/h4\\u003e\\u003ca id=\\\"user-content-reuse-of-previously-created-hsms\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Reuse of previously created HSMs\\\" href=\\\"#reuse-of-previously-created-hsms\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eBesides semantic order, nested states are very handy if you want to specify state machines for specific tasks and plan to reuse them.\\nBefore \\u003cem\\u003e0.8.0\\u003c/em\\u003e, a \\u003ccode\\u003eHierarchicalMachine\\u003c/code\\u003e would not integrate the machine instance itself but the states and transitions by creating copies of them.\\nHowever, since \\u003cem\\u003e0.8.0\\u003c/em\\u003e \\u003ccode\\u003e(Nested)State\\u003c/code\\u003e instances are just \\u003cstrong\\u003ereferenced\\u003c/strong\\u003e which means changes in one machine's collection of states and events will influence the other machine instance. Models and their state will not be shared though.\\nNote that events and transitions are also copied by reference and will be shared by both instances if you do not use the \\u003ccode\\u003eremap\\u003c/code\\u003e keyword.\\nThis change was done to be more in line with \\u003ccode\\u003eMachine\\u003c/code\\u003e which also uses passed \\u003ccode\\u003eState\\u003c/code\\u003e instances by reference.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"count_states = ['1', '2', '3', 'done']\\ncount_trans = [\\n    ['increase', '1', '2'],\\n    ['increase', '2', '3'],\\n    ['decrease', '3', '2'],\\n    ['decrease', '2', '1'],\\n    ['done', '3', 'done'],\\n    ['reset', '*', '1']\\n]\\n\\ncounter = HierarchicalMachine(states=count_states, transitions=count_trans, initial='1')\\n\\ncounter.increase() # love my counter\\nstates = ['waiting', 'collecting', {'name': 'counting', 'children': counter}]\\n\\ntransitions = [\\n    ['collect', '*', 'collecting'],\\n    ['wait', '*', 'waiting'],\\n    ['count', 'collecting', 'counting']\\n]\\n\\ncollector = HierarchicalMachine(states=states, transitions=transitions, initial='waiting')\\ncollector.collect()  # collecting\\ncollector.count()  # let's see what we got; counting_1\\ncollector.increase()  # counting_2\\ncollector.increase()  # counting_3\\ncollector.done()  # collector.state == counting_done\\ncollector.wait()  # collector.state == waiting\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ecount_states\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'done'\\u003c/span\\u003e]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecount_trans\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'increase'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e],\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'increase'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e],\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'decrease'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e],\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'decrease'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e],\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'done'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'done'\\u003c/span\\u003e],\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'reset'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e]\\n]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecounter\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ecount_states\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ecount_trans\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecounter\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eincrease\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c\\\"\\u003e# love my counter\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'collecting'\\u003c/span\\u003e, {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'counting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'children'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s1\\\"\\u003ecounter\\u003c/span\\u003e}]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'collect'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'collecting'\\u003c/span\\u003e],\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'wait'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e],\\n    [\\u003cspan class=\\\"pl-s\\\"\\u003e'count'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'collecting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'counting'\\u003c/span\\u003e]\\n]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ecollect\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# collecting\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ecount\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# let's see what we got; counting_1\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eincrease\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# counting_2\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eincrease\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# counting_3\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003edone\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# collector.state == counting_done\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ewait\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# collector.state == waiting\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf a \\u003ccode\\u003eHierarchicalMachine\\u003c/code\\u003e is passed with the \\u003ccode\\u003echildren\\u003c/code\\u003e keyword, the initial state of this machine will be assigned to the new parent state.\\nIn the above example we see that entering \\u003ccode\\u003ecounting\\u003c/code\\u003e will also enter \\u003ccode\\u003ecounting_1\\u003c/code\\u003e.\\nIf this is undesired behaviour and the machine should rather halt in the parent state, the user can pass \\u003ccode\\u003einitial\\u003c/code\\u003e as \\u003ccode\\u003eFalse\\u003c/code\\u003e like \\u003ccode\\u003e{'name': 'counting', 'children': counter, 'initial': False}\\u003c/code\\u003e.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSometimes you want such an embedded state collection to 'return' which means after it is done it should exit and transit to one of your super states.\\nTo achieve this behaviour you can remap state transitions.\\nIn the example above we would like the counter to return if the state \\u003ccode\\u003edone\\u003c/code\\u003e was reached.\\nThis is done as follows:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"states = ['waiting', 'collecting', {'name': 'counting', 'children': counter, 'remap': {'done': 'waiting'}}]\\n\\n... # same as above\\n\\ncollector.increase() # counting_3\\ncollector.done()\\ncollector.state\\n\\u0026gt;\\u0026gt;\\u0026gt; 'waiting' # be aware that 'counting_done' will be removed from the state machine\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'collecting'\\u003c/span\\u003e, {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'counting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'children'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s1\\\"\\u003ecounter\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'remap'\\u003c/span\\u003e: {\\u003cspan class=\\\"pl-s\\\"\\u003e'done'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e}}]\\n\\n... \\u003cspan class=\\\"pl-c\\\"\\u003e# same as above\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eincrease\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c\\\"\\u003e# counting_3\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003edone\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u0026gt;\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e\\u0026gt;\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# be aware that 'counting_done' will be removed from the state machine\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAs mentioned above, using \\u003ccode\\u003eremap\\u003c/code\\u003e will \\u003cstrong\\u003ecopy\\u003c/strong\\u003e events and transitions since they could not be valid in the original state machine.\\nIf a reused state machine does not have a final state, you can of course add the transitions manually.\\nIf 'counter' had no 'done' state, we could just add \\u003ccode\\u003e['done', 'counter_3', 'waiting']\\u003c/code\\u003e to achieve the same behaviour.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn cases where you want states and transitions to be copied by value rather than reference (for instance, if you want to keep the pre-0.8 behaviour) you can do so by creating a \\u003ccode\\u003eNestedState\\u003c/code\\u003e and assigning deep copies of the machine's events and states to it.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions.extensions.nesting import NestedState\\nfrom copy import deepcopy\\n\\n# ... configuring and creating counter\\n\\ncounting_state = NestedState(name=\\u0026quot;counting\\u0026quot;, initial='1')\\ncounting_state.states = deepcopy(counter.states)\\ncounting_state.events = deepcopy(counter.events)\\n\\nstates = ['waiting', 'collecting', counting_state]\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003enesting\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eNestedState\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ecopy\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003edeepcopy\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# ... configuring and creating counter\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecounting_state\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eNestedState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"counting\\\"\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecounting_state\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003edeepcopy\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ecounter\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecounting_state\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eevents\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003edeepcopy\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ecounter\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eevents\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'collecting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ecounting_state\\u003c/span\\u003e]\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor complex state machines, sharing configurations rather than instantiated machines might be more feasible.\\nEspecially since instantiated machines must be derived from \\u003ccode\\u003eHierarchicalMachine\\u003c/code\\u003e.\\nSuch configurations can be stored and loaded easily via JSON or YAML (see the \\u003ca href=\\\"/pytransitions/transitions/blob/master/examples/Frequently%20asked%20questions.ipynb\\\"\\u003eFAQ\\u003c/a\\u003e).\\n\\u003ccode\\u003eHierarchicalMachine\\u003c/code\\u003e allows defining substates either with the keyword \\u003ccode\\u003echildren\\u003c/code\\u003e or \\u003ccode\\u003estates\\u003c/code\\u003e.\\nIf both are present, only \\u003ccode\\u003echildren\\u003c/code\\u003e will be considered.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"counter_conf = {\\n    'name': 'counting',\\n    'states': ['1', '2', '3', 'done'],\\n    'transitions': [\\n        ['increase', '1', '2'],\\n        ['increase', '2', '3'],\\n        ['decrease', '3', '2'],\\n        ['decrease', '2', '1'],\\n        ['done', '3', 'done'],\\n        ['reset', '*', '1']\\n    ],\\n    'initial': '1'\\n}\\n\\ncollector_conf = {\\n    'name': 'collector',\\n    'states': ['waiting', 'collecting', counter_conf],\\n    'transitions': [\\n        ['collect', '*', 'collecting'],\\n        ['wait', '*', 'waiting'],\\n        ['count', 'collecting', 'counting']\\n    ],\\n    'initial': 'waiting'\\n}\\n\\ncollector = HierarchicalMachine(**collector_conf)\\ncollector.collect()\\ncollector.count()\\ncollector.increase()\\nassert collector.is_counting_2()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ecounter_conf\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e {\\n    \\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'counting'\\u003c/span\\u003e,\\n    \\u003cspan class=\\\"pl-s\\\"\\u003e'states'\\u003c/span\\u003e: [\\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'done'\\u003c/span\\u003e],\\n    \\u003cspan class=\\\"pl-s\\\"\\u003e'transitions'\\u003c/span\\u003e: [\\n        [\\u003cspan class=\\\"pl-s\\\"\\u003e'increase'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e],\\n        [\\u003cspan class=\\\"pl-s\\\"\\u003e'increase'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e],\\n        [\\u003cspan class=\\\"pl-s\\\"\\u003e'decrease'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e],\\n        [\\u003cspan class=\\\"pl-s\\\"\\u003e'decrease'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'2'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e],\\n        [\\u003cspan class=\\\"pl-s\\\"\\u003e'done'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'3'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'done'\\u003c/span\\u003e],\\n        [\\u003cspan class=\\\"pl-s\\\"\\u003e'reset'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e]\\n    ],\\n    \\u003cspan class=\\\"pl-s\\\"\\u003e'initial'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'1'\\u003c/span\\u003e\\n}\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector_conf\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e {\\n    \\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'collector'\\u003c/span\\u003e,\\n    \\u003cspan class=\\\"pl-s\\\"\\u003e'states'\\u003c/span\\u003e: [\\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'collecting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ecounter_conf\\u003c/span\\u003e],\\n    \\u003cspan class=\\\"pl-s\\\"\\u003e'transitions'\\u003c/span\\u003e: [\\n        [\\u003cspan class=\\\"pl-s\\\"\\u003e'collect'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'collecting'\\u003c/span\\u003e],\\n        [\\u003cspan class=\\\"pl-s\\\"\\u003e'wait'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'*'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e],\\n        [\\u003cspan class=\\\"pl-s\\\"\\u003e'count'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'collecting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'counting'\\u003c/span\\u003e]\\n    ],\\n    \\u003cspan class=\\\"pl-s\\\"\\u003e'initial'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e\\n}\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eHierarchicalMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e**\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector_conf\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ecollect\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ecount\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eincrease\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ecollector\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_counting_2\\u003c/span\\u003e()\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-threading\\\"\\u003e\\u003c/a\\u003e Threadsafe(-ish) State Machine\\u003c/h4\\u003e\\u003ca id=\\\"user-content--threadsafe-ish-state-machine\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink:  Threadsafe(-ish) State Machine\\\" href=\\\"#-threadsafe-ish-state-machine\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIn cases where event dispatching is done in threads, one can use either \\u003ccode\\u003eLockedMachine\\u003c/code\\u003e or \\u003ccode\\u003eLockedHierarchicalMachine\\u003c/code\\u003e where \\u003cstrong\\u003efunction access\\u003c/strong\\u003e (!sic) is secured with reentrant locks.\\nThis does not save you from corrupting your machine by tinkering with member variables of your model or state machine.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions.extensions import LockedMachine\\nfrom threading import Thread\\nimport time\\n\\nstates = ['A', 'B', 'C']\\nmachine = LockedMachine(states=states, initial='A')\\n\\n# let us assume that entering B will take some time\\nthread = Thread(target=machine.to_B)\\nthread.start()\\ntime.sleep(0.01) # thread requires some time to start\\nmachine.to_C() # synchronized access; won't execute before thread is done\\n# accessing attributes directly\\nthread = Thread(target=machine.to_B)\\nthread.start()\\nmachine.new_attrib = 42 # not synchronized! will mess with execution order\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eLockedMachine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ethreading\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eThread\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etime\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eLockedMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# let us assume that entering B will take some time\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ethread\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eThread\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etarget\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eto_B\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ethread\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003estart\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003esleep\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0.01\\u003c/span\\u003e) \\u003cspan class=\\\"pl-c\\\"\\u003e# thread requires some time to start\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_C\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c\\\"\\u003e# synchronized access; won't execute before thread is done\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# accessing attributes directly\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ethread\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eThread\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etarget\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eto_B\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ethread\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003estart\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003enew_attrib\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e42\\u003c/span\\u003e \\u003cspan class=\\\"pl-c\\\"\\u003e# not synchronized! will mess with execution order\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAny python context manager can be passed in via the \\u003ccode\\u003emachine_context\\u003c/code\\u003e keyword argument:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions.extensions import LockedMachine\\nfrom threading import RLock\\n\\nstates = ['A', 'B', 'C']\\n\\nlock1 = RLock()\\nlock2 = RLock()\\n\\nmachine = LockedMachine(states=states, initial='A', machine_context=[lock1, lock2])\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eLockedMachine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ethreading\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRLock\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e]\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elock1\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRLock\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003elock2\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRLock\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eLockedMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003emachine_context\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s1\\\"\\u003elock1\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003elock2\\u003c/span\\u003e])\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eAny contexts via \\u003ccode\\u003emachine_model\\u003c/code\\u003e will be shared between all models registered with the \\u003ccode\\u003eMachine\\u003c/code\\u003e.\\nPer-model contexts can be added as well:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"lock3 = RLock()\\n\\nmachine.add_model(model, model_context=lock3)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003elock3\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eRLock\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_model\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003emodel_context\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003elock3\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIt's important that all user-provided context managers are re-entrant since the state machine will call them multiple\\ntimes, even in the context of a single trigger invocation.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-async\\\"\\u003e\\u003c/a\\u003e Using async callbacks\\u003c/h4\\u003e\\u003ca id=\\\"user-content--using-async-callbacks\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink:  Using async callbacks\\\" href=\\\"#-using-async-callbacks\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you are using Python 3.7 or later, you can use \\u003ccode\\u003eAsyncMachine\\u003c/code\\u003e to work with asynchronous callbacks.\\nYou can mix synchronous and asynchronous callbacks if you like but this may have undesired side effects.\\nNote that events need to be awaited and the event loop must also be handled by you.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions.extensions.asyncio import AsyncMachine\\nimport asyncio\\nimport time\\n\\n\\nclass AsyncModel:\\n\\n    def prepare_model(self):\\n        print(\\u0026quot;I am synchronous.\\u0026quot;)\\n        self.start_time = time.time()\\n\\n    async def before_change(self):\\n        print(\\u0026quot;I am asynchronous and will block now for 100 milliseconds.\\u0026quot;)\\n        await asyncio.sleep(0.1)\\n        print(\\u0026quot;I am done waiting.\\u0026quot;)\\n\\n    def sync_before_change(self):\\n        print(\\u0026quot;I am synchronous and will block the event loop (what I probably shouldn't)\\u0026quot;)\\n        time.sleep(0.1)\\n        print(\\u0026quot;I am done waiting synchronously.\\u0026quot;)\\n\\n    def after_change(self):\\n        print(f\\u0026quot;I am synchronous again. Execution took {int((time.time() - self.start_time) * 1000)} ms.\\u0026quot;)\\n\\n\\ntransition = dict(trigger=\\u0026quot;start\\u0026quot;, source=\\u0026quot;Start\\u0026quot;, dest=\\u0026quot;Done\\u0026quot;, prepare=\\u0026quot;prepare_model\\u0026quot;,\\n                  before=[\\u0026quot;before_change\\u0026quot;] * 5 + [\\u0026quot;sync_before_change\\u0026quot;],\\n                  after=\\u0026quot;after_change\\u0026quot;)  # execute before function in asynchronously 5 times\\nmodel = AsyncModel()\\nmachine = AsyncMachine(model, states=[\\u0026quot;Start\\u0026quot;, \\u0026quot;Done\\u0026quot;], transitions=[transition], initial='Start')\\n\\nasyncio.get_event_loop().run_until_complete(model.start())\\n# \\u0026gt;\\u0026gt;\\u0026gt; I am synchronous.\\n#     I am asynchronous and will block now for 100 milliseconds.\\n#     I am asynchronous and will block now for 100 milliseconds.\\n#     I am asynchronous and will block now for 100 milliseconds.\\n#     I am asynchronous and will block now for 100 milliseconds.\\n#     I am asynchronous and will block now for 100 milliseconds.\\n#     I am synchronous and will block the event loop (what I probably shouldn't)\\n#     I am done waiting synchronously.\\n#     I am done waiting.\\n#     I am done waiting.\\n#     I am done waiting.\\n#     I am done waiting.\\n#     I am done waiting.\\n#     I am synchronous again. Execution took 101 ms.\\nassert model.is_Done()\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAsyncMachine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etime\\u003c/span\\u003e\\n\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAsyncModel\\u003c/span\\u003e:\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eprepare_model\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"I am synchronous.\\\"\\u003c/span\\u003e)\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estart_time\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003etime\\u003c/span\\u003e()\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003ebefore_change\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"I am asynchronous and will block now for 100 milliseconds.\\\"\\u003c/span\\u003e)\\n        \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003esleep\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0.1\\u003c/span\\u003e)\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"I am done waiting.\\\"\\u003c/span\\u003e)\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003esync_before_change\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"I am synchronous and will block the event loop (what I probably shouldn't)\\\"\\u003c/span\\u003e)\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003etime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003esleep\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0.1\\u003c/span\\u003e)\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"I am done waiting synchronously.\\\"\\u003c/span\\u003e)\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eafter_change\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003ef\\\"I am synchronous again. Execution took \\u003cspan class=\\\"pl-s1\\\"\\u003e\\u003cspan class=\\\"pl-kos\\\"\\u003e{\\u003c/span\\u003e\\u003cspan class=\\\"pl-en\\\"\\u003eint\\u003c/span\\u003e((\\u003cspan class=\\\"pl-s1\\\"\\u003etime\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003etime\\u003c/span\\u003e() \\u003cspan class=\\\"pl-c1\\\"\\u003e-\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estart_time\\u003c/span\\u003e) \\u003cspan class=\\\"pl-c1\\\"\\u003e*\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e1000\\u003c/span\\u003e)\\u003cspan class=\\\"pl-kos\\\"\\u003e}\\u003c/span\\u003e\\u003c/span\\u003e ms.\\\"\\u003c/span\\u003e)\\n\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransition\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003edict\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etrigger\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"start\\\"\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esource\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Start\\\"\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003edest\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Done\\\"\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eprepare\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"prepare_model\\\"\\u003c/span\\u003e,\\n                  \\u003cspan class=\\\"pl-s1\\\"\\u003ebefore\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"before_change\\\"\\u003c/span\\u003e] \\u003cspan class=\\\"pl-c1\\\"\\u003e*\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e5\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e+\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"sync_before_change\\\"\\u003c/span\\u003e],\\n                  \\u003cspan class=\\\"pl-s1\\\"\\u003eafter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"after_change\\\"\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# execute before function in asynchronously 5 times\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAsyncModel\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAsyncMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Start\\\"\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Done\\\"\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s1\\\"\\u003etransition\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'Start'\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_event_loop\\u003c/span\\u003e().\\u003cspan class=\\\"pl-en\\\"\\u003erun_until_complete\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003estart\\u003c/span\\u003e())\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# \\u0026gt;\\u0026gt;\\u0026gt; I am synchronous.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am asynchronous and will block now for 100 milliseconds.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am asynchronous and will block now for 100 milliseconds.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am asynchronous and will block now for 100 milliseconds.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am asynchronous and will block now for 100 milliseconds.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am asynchronous and will block now for 100 milliseconds.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am synchronous and will block the event loop (what I probably shouldn't)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am done waiting synchronously.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am done waiting.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am done waiting.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am done waiting.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am done waiting.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am done waiting.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e#     I am synchronous again. Execution took 101 ms.\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_Done\\u003c/span\\u003e()\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eSo, why do you need to use Python 3.7 or later you may ask.\\nAsync support has been introduced earlier.\\n\\u003ccode\\u003eAsyncMachine\\u003c/code\\u003e makes use of \\u003ccode\\u003econtextvars\\u003c/code\\u003e to handle running callbacks when new events arrive before a transition\\nhas been finished:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"async def await_never_return():\\n    await asyncio.sleep(100)\\n    raise ValueError(\\u0026quot;That took too long!\\u0026quot;)\\n\\nasync def fix():\\n    await m2.fix()\\n\\nm1 = AsyncMachine(states=['A', 'B', 'C'], initial='A', name=\\u0026quot;m1\\u0026quot;)\\nm2 = AsyncMachine(states=['A', 'B', 'C'], initial='A', name=\\u0026quot;m2\\u0026quot;)\\nm2.add_transition(trigger='go', source='A', dest='B', before=await_never_return)\\nm2.add_transition(trigger='fix', source='A', dest='C')\\nm1.add_transition(trigger='go', source='A', dest='B', after='go')\\nm1.add_transition(trigger='go', source='B', dest='C', after=fix)\\nasyncio.get_event_loop().run_until_complete(asyncio.gather(m2.go(), m1.go()))\\n\\nassert m1.state == m2.state\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eawait_never_return\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003esleep\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e100\\u003c/span\\u003e)\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eraise\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eValueError\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"That took too long!\\\"\\u003c/span\\u003e)\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003easync\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003efix\\u003c/span\\u003e():\\n    \\u003cspan class=\\\"pl-k\\\"\\u003eawait\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003efix\\u003c/span\\u003e()\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em1\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAsyncMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"m1\\\"\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em2\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAsyncMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e[\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e], \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"m2\\\"\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etrigger\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'go'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esource\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003edest\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003ebefore\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eawait_never_return\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etrigger\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'fix'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esource\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003edest\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etrigger\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'go'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esource\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003edest\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eafter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'go'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eadd_transition\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003etrigger\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'go'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003esource\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003edest\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003eafter\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003efix\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_event_loop\\u003c/span\\u003e().\\u003cspan class=\\\"pl-en\\\"\\u003erun_until_complete\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003egather\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003em2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ego\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003em1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ego\\u003c/span\\u003e()))\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e==\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eThis example actually illustrates two things:\\nFirst, that 'go' called in m1's transition from \\u003ccode\\u003eA\\u003c/code\\u003e to be \\u003ccode\\u003eB\\u003c/code\\u003e is not cancelled and second, calling \\u003ccode\\u003em2.fix()\\u003c/code\\u003e will\\nhalt the transition attempt of m2 from \\u003ccode\\u003eA\\u003c/code\\u003e to \\u003ccode\\u003eB\\u003c/code\\u003e by executing 'fix' from \\u003ccode\\u003eA\\u003c/code\\u003e to \\u003ccode\\u003eC\\u003c/code\\u003e.\\nThis separation would not be possible without \\u003ccode\\u003econtextvars\\u003c/code\\u003e.\\nNote that \\u003ccode\\u003eprepare\\u003c/code\\u003e and \\u003ccode\\u003econditions\\u003c/code\\u003e are NOT treated as ongoing transitions.\\nThis means that after \\u003ccode\\u003econditions\\u003c/code\\u003e have been evaluated, a transition is executed even though another event already happened.\\nTasks will only be cancelled when run as a \\u003ccode\\u003ebefore\\u003c/code\\u003e callback or later.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003ccode\\u003eAsyncMachine\\u003c/code\\u003e features a model-special queue mode which can be used when \\u003ccode\\u003equeued='model'\\u003c/code\\u003e is passed to the constructor.\\nWith a model-specific queue, events will only be queued when they belong to the same model.\\nFurthermore, a raised exception will only clear the event queue of the model that raised that exception.\\nFor the sake of simplicity, let's assume that every event in \\u003ccode\\u003easyncio.gather\\u003c/code\\u003e below is not triggered at the same time but slightly delayed:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"asyncio.gather(model1.event1(), model1.event2(), model2.event1())\\n# execution order with AsyncMachine(queued=True)\\n# model1.event1 -\\u0026gt; model1.event2 -\\u0026gt; model2.event1\\n# execution order with AsyncMachine(queued='model')\\n# (model1.event1, model2.event1) -\\u0026gt; model1.event2\\n\\nasyncio.gather(model1.event1(), model1.error(), model1.event3(), model2.event1(), model2.event2(), model2.event3())\\n# execution order with AsyncMachine(queued=True)\\n# model1.event1 -\\u0026gt; model1.error\\n# execution order with AsyncMachine(queued='model')\\n# (model1.event1, model2.event1) -\\u0026gt; (model1.error, model2.event2) -\\u0026gt; model2.event3\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003egather\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eevent1\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003emodel1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eevent2\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003emodel2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eevent1\\u003c/span\\u003e())\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# execution order with AsyncMachine(queued=True)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# model1.event1 -\\u0026gt; model1.event2 -\\u0026gt; model2.event1\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# execution order with AsyncMachine(queued='model')\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# (model1.event1, model2.event1) -\\u0026gt; model1.event2\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003egather\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eevent1\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003emodel1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eerror\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003emodel1\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eevent3\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003emodel2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eevent1\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003emodel2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eevent2\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003emodel2\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eevent3\\u003c/span\\u003e())\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# execution order with AsyncMachine(queued=True)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# model1.event1 -\\u0026gt; model1.error\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# execution order with AsyncMachine(queued='model')\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-c\\\"\\u003e# (model1.event1, model2.event1) -\\u0026gt; (model1.error, model2.event2) -\\u0026gt; model2.event3\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eNote that queue modes must not be changed after machine construction.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-state-features\\\"\\u003e\\u003c/a\\u003eAdding features to states\\u003c/h4\\u003e\\u003ca id=\\\"user-content-adding-features-to-states\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: Adding features to states\\\" href=\\\"#adding-features-to-states\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf your superheroes need some custom behaviour, you can throw in some extra functionality by decorating machine states:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from time import sleep\\nfrom transitions import Machine\\nfrom transitions.extensions.states import add_state_features, Tags, Timeout\\n\\n\\n@add_state_features(Tags, Timeout)\\nclass CustomStateMachine(Machine):\\n    pass\\n\\n\\nclass SocialSuperhero(object):\\n    def __init__(self):\\n        self.entourage = 0\\n\\n    def on_enter_waiting(self):\\n        self.entourage += 1\\n\\n\\nstates = [{'name': 'preparing', 'tags': ['home', 'busy']},\\n          {'name': 'waiting', 'timeout': 1, 'on_timeout': 'go'},\\n          {'name': 'away'}]  # The city needs us!\\n\\ntransitions = [['done', 'preparing', 'waiting'],\\n               ['join', 'waiting', 'waiting'],  # Entering Waiting again will increase our entourage\\n               ['go', 'waiting', 'away']]  # Okay, let' move\\n\\nhero = SocialSuperhero()\\nmachine = CustomStateMachine(model=hero, states=states, transitions=transitions, initial='preparing')\\nassert hero.state == 'preparing'  # Preparing for the night shift\\nassert machine.get_state(hero.state).is_busy  # We are at home and busy\\nhero.done()\\nassert hero.state == 'waiting'  # Waiting for fellow superheroes to join us\\nassert hero.entourage == 1  # It's just us so far\\nsleep(0.7)  # Waiting...\\nhero.join()  # Weeh, we got company\\nsleep(0.5)  # Waiting...\\nhero.join()  # Even more company \\\\o/\\nsleep(2)  # Waiting...\\nassert hero.state == 'away'  # Impatient superhero already left the building\\nassert machine.get_state(hero.state).is_home is False  # Yupp, not at home anymore\\nassert hero.entourage == 3  # At least he is not alone\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etime\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003esleep\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eadd_state_features\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eTags\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eTimeout\\u003c/span\\u003e\\n\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003e@\\u003cspan class=\\\"pl-en\\\"\\u003eadd_state_features\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eTags\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eTimeout\\u003c/span\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eCustomStateMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003epass\\u003c/span\\u003e\\n\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eSocialSuperhero\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eobject\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003e__init__\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eentourage\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e0\\u003c/span\\u003e\\n\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003eon_enter_waiting\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eentourage\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e+=\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e\\n\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [{\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'preparing'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'tags'\\u003c/span\\u003e: [\\u003cspan class=\\\"pl-s\\\"\\u003e'home'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'busy'\\u003c/span\\u003e]},\\n          {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'timeout'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'on_timeout'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'go'\\u003c/span\\u003e},\\n          {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'away'\\u003c/span\\u003e}]  \\u003cspan class=\\\"pl-c\\\"\\u003e# The city needs us!\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [[\\u003cspan class=\\\"pl-s\\\"\\u003e'done'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'preparing'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e],\\n               [\\u003cspan class=\\\"pl-s\\\"\\u003e'join'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e],  \\u003cspan class=\\\"pl-c\\\"\\u003e# Entering Waiting again will increase our entourage\\u003c/span\\u003e\\n               [\\u003cspan class=\\\"pl-s\\\"\\u003e'go'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'away'\\u003c/span\\u003e]]  \\u003cspan class=\\\"pl-c\\\"\\u003e# Okay, let' move\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eSocialSuperhero\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eCustomStateMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003emodel\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'preparing'\\u003c/span\\u003e)\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e==\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'preparing'\\u003c/span\\u003e  \\u003cspan class=\\\"pl-c\\\"\\u003e# Preparing for the night shift\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e).\\u003cspan class=\\\"pl-s1\\\"\\u003eis_busy\\u003c/span\\u003e  \\u003cspan class=\\\"pl-c\\\"\\u003e# We are at home and busy\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003edone\\u003c/span\\u003e()\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e==\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'waiting'\\u003c/span\\u003e  \\u003cspan class=\\\"pl-c\\\"\\u003e# Waiting for fellow superheroes to join us\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eentourage\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e==\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e1\\u003c/span\\u003e  \\u003cspan class=\\\"pl-c\\\"\\u003e# It's just us so far\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003esleep\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0.7\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# Waiting...\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ejoin\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# Weeh, we got company\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003esleep\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0.5\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# Waiting...\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ejoin\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# Even more company \\\\o/\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-en\\\"\\u003esleep\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e2\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# Waiting...\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e==\\u003c/span\\u003e \\u003cspan class=\\\"pl-s\\\"\\u003e'away'\\u003c/span\\u003e  \\u003cspan class=\\\"pl-c\\\"\\u003e# Impatient superhero already left the building\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003emachine\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eget_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estate\\u003c/span\\u003e).\\u003cspan class=\\\"pl-s1\\\"\\u003eis_home\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eis\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003eFalse\\u003c/span\\u003e  \\u003cspan class=\\\"pl-c\\\"\\u003e# Yupp, not at home anymore\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003ehero\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eentourage\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e==\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e3\\u003c/span\\u003e  \\u003cspan class=\\\"pl-c\\\"\\u003e# At least he is not alone\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eCurrently, transitions comes equipped with the following state features:\\u003c/p\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003cstrong\\u003eTimeout\\u003c/strong\\u003e -- triggers an event after some time has passed\\u003c/p\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003ekeyword: \\u003ccode\\u003etimeout\\u003c/code\\u003e (int, optional) -- if passed, an entered state will timeout after \\u003ccode\\u003etimeout\\u003c/code\\u003e seconds\\u003c/li\\u003e\\n\\u003cli\\u003ekeyword: \\u003ccode\\u003eon_timeout\\u003c/code\\u003e (string/callable, optional) -- will be called when timeout time has been reached\\u003c/li\\u003e\\n\\u003cli\\u003ewill raise an \\u003ccode\\u003eAttributeError\\u003c/code\\u003e when \\u003ccode\\u003etimeout\\u003c/code\\u003e is set but \\u003ccode\\u003eon_timeout\\u003c/code\\u003e is not\\u003c/li\\u003e\\n\\u003cli\\u003eNote: A timeout is triggered in a thread. This implies several limitations (e.g. catching Exceptions raised in timeouts). Consider an event queue for more sophisticated applications.\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003cstrong\\u003eTags\\u003c/strong\\u003e -- adds tags to states\\u003c/p\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003ekeyword: \\u003ccode\\u003etags\\u003c/code\\u003e (list, optional) -- assigns tags to a state\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003ccode\\u003eState.is_\\u0026lt;tag_name\\u0026gt;\\u003c/code\\u003e will return \\u003ccode\\u003eTrue\\u003c/code\\u003e when the state has been tagged with \\u003ccode\\u003etag_name\\u003c/code\\u003e, else \\u003ccode\\u003eFalse\\u003c/code\\u003e\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003cstrong\\u003eError\\u003c/strong\\u003e -- raises a \\u003ccode\\u003eMachineError\\u003c/code\\u003e when a state cannot be left\\u003c/p\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003einherits from \\u003ccode\\u003eTags\\u003c/code\\u003e (if you use \\u003ccode\\u003eError\\u003c/code\\u003e do not use \\u003ccode\\u003eTags\\u003c/code\\u003e)\\u003c/li\\u003e\\n\\u003cli\\u003ekeyword: \\u003ccode\\u003eaccepted\\u003c/code\\u003e (bool, optional) -- marks a state as accepted\\u003c/li\\u003e\\n\\u003cli\\u003ealternatively the keyword \\u003ccode\\u003etags\\u003c/code\\u003e can be passed, containing 'accepted'\\u003c/li\\u003e\\n\\u003cli\\u003eNote: Errors will only be raised if \\u003ccode\\u003eauto_transitions\\u003c/code\\u003e has been set to \\u003ccode\\u003eFalse\\u003c/code\\u003e. Otherwise every state can be exited with \\u003ccode\\u003eto_\\u0026lt;state\\u0026gt;\\u003c/code\\u003e methods.\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003cli\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003e\\u003cstrong\\u003eVolatile\\u003c/strong\\u003e -- initialises an object every time a state is entered\\u003c/p\\u003e\\n\\u003cul dir=\\\"auto\\\"\\u003e\\n\\u003cli\\u003ekeyword: \\u003ccode\\u003evolatile\\u003c/code\\u003e (class, optional) -- every time the state is entered an object of type class will be assigned to the model. The attribute name is defined by \\u003ccode\\u003ehook\\u003c/code\\u003e. If omitted, an empty VolatileObject will be created instead\\u003c/li\\u003e\\n\\u003cli\\u003ekeyword: \\u003ccode\\u003ehook\\u003c/code\\u003e (string, default='scope') -- The model's attribute name for the temporal object.\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou can write your own \\u003ccode\\u003eState\\u003c/code\\u003e extensions and add them the same way. Just note that \\u003ccode\\u003eadd_state_features\\u003c/code\\u003e expects \\u003cem\\u003eMixins\\u003c/em\\u003e. This means your extension should always call the overridden methods \\u003ccode\\u003e__init__\\u003c/code\\u003e, \\u003ccode\\u003eenter\\u003c/code\\u003e and \\u003ccode\\u003eexit\\u003c/code\\u003e. Your extension may inherit from \\u003cem\\u003eState\\u003c/em\\u003e but will also work without it.\\nUsing \\u003ccode\\u003e@add_state_features\\u003c/code\\u003e has a drawback which is that decorated machines cannot be pickled (more precisely, the dynamically generated \\u003ccode\\u003eCustomState\\u003c/code\\u003e cannot be pickled).\\nThis might be a reason to write a dedicated custom state class instead.\\nDepending on the chosen state machine, your custom state class may need to provide certain state features. For instance, \\u003ccode\\u003eHierarchicalMachine\\u003c/code\\u003e requires your custom state to be an instance of \\u003ccode\\u003eNestedState\\u003c/code\\u003e (\\u003ccode\\u003eState\\u003c/code\\u003e is not sufficient). To inject your states you can either assign them to your \\u003ccode\\u003eMachine\\u003c/code\\u003e's class attribute \\u003ccode\\u003estate_cls\\u003c/code\\u003e or override \\u003ccode\\u003eMachine.create_state\\u003c/code\\u003e in case you need some specific procedures done whenever a state is created:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"from transitions import Machine, State\\n\\nclass MyState(State):\\n    pass\\n\\nclass CustomMachine(Machine):\\n    # Use MyState as state class\\n    state_cls = MyState\\n\\n\\nclass VerboseMachine(Machine):\\n\\n    # `Machine._create_state` is a class method but we can\\n    # override it to be an instance method\\n    def _create_state(self, *args, **kwargs):\\n        print(\\u0026quot;Creating a new state with machine '{0}'\\u0026quot;.format(self.name))\\n        return MyState(*args, **kwargs)\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMyState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eState\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003epass\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eCustomMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# Use MyState as state class\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-s1\\\"\\u003estate_cls\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMyState\\u003c/span\\u003e\\n\\n\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eVerboseMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eMachine\\u003c/span\\u003e):\\n\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# `Machine._create_state` is a class method but we can\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-c\\\"\\u003e# override it to be an instance method\\u003c/span\\u003e\\n    \\u003cspan class=\\\"pl-k\\\"\\u003edef\\u003c/span\\u003e \\u003cspan class=\\\"pl-en\\\"\\u003e_create_state\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e*\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eargs\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e**\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ekwargs\\u003c/span\\u003e):\\n        \\u003cspan class=\\\"pl-en\\\"\\u003eprint\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s\\\"\\u003e\\\"Creating a new state with machine '{0}'\\\"\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eformat\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003eself\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003ename\\u003c/span\\u003e))\\n        \\u003cspan class=\\\"pl-k\\\"\\u003ereturn\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eMyState\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e*\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003eargs\\u003c/span\\u003e, \\u003cspan class=\\\"pl-c1\\\"\\u003e**\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003ekwargs\\u003c/span\\u003e)\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eIf you want to avoid threads in your \\u003ccode\\u003eAsyncMachine\\u003c/code\\u003e entirely, you can replace the \\u003ccode\\u003eTimeout\\u003c/code\\u003e state feature with \\u003ccode\\u003eAsyncTimeout\\u003c/code\\u003e from the \\u003ccode\\u003easyncio\\u003c/code\\u003e extension:\\u003c/p\\u003e\\n\\u003cdiv class=\\\"highlight highlight-source-python notranslate position-relative overflow-auto\\\" dir=\\\"auto\\\" data-snippet-clipboard-copy-content=\\\"import asyncio\\nfrom transitions.extensions.states import add_state_features\\nfrom transitions.extensions.asyncio import AsyncTimeout, AsyncMachine\\n\\n@add_state_features(AsyncTimeout)\\nclass TimeoutMachine(AsyncMachine):\\n    pass\\n\\nstates = ['A', {'name': 'B', 'timeout': 0.2, 'on_timeout': 'to_C'}, 'C']\\nm = TimeoutMachine(states=states, initial='A', queued=True)  # see remark below\\nasyncio.run(asyncio.wait([m.to_B(), asyncio.sleep(0.1)]))\\nassert m.is_B()  # timeout shouldn't be triggered\\nasyncio.run(asyncio.wait([m.to_B(), asyncio.sleep(0.3)]))\\nassert m.is_C()   # now timeout should have been processed\\\"\\u003e\\u003cpre\\u003e\\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003eadd_state_features\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003efrom\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003etransitions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003eextensions\\u003c/span\\u003e.\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e \\u003cspan class=\\\"pl-k\\\"\\u003eimport\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eAsyncTimeout\\u003c/span\\u003e, \\u003cspan class=\\\"pl-v\\\"\\u003eAsyncMachine\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-en\\\"\\u003e@\\u003cspan class=\\\"pl-en\\\"\\u003eadd_state_features\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eAsyncTimeout\\u003c/span\\u003e)\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-k\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eTimeoutMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-v\\\"\\u003eAsyncMachine\\u003c/span\\u003e):\\n    \\u003cspan class=\\\"pl-k\\\"\\u003epass\\u003c/span\\u003e\\n\\n\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e [\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, {\\u003cspan class=\\\"pl-s\\\"\\u003e'name'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'B'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'timeout'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-c1\\\"\\u003e0.2\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s\\\"\\u003e'on_timeout'\\u003c/span\\u003e: \\u003cspan class=\\\"pl-s\\\"\\u003e'to_C'\\u003c/span\\u003e}, \\u003cspan class=\\\"pl-s\\\"\\u003e'C'\\u003c/span\\u003e]\\n\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e \\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e \\u003cspan class=\\\"pl-v\\\"\\u003eTimeoutMachine\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s1\\\"\\u003estates\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003einitial\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-s\\\"\\u003e'A'\\u003c/span\\u003e, \\u003cspan class=\\\"pl-s1\\\"\\u003equeued\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003e=\\u003c/span\\u003e\\u003cspan class=\\\"pl-c1\\\"\\u003eTrue\\u003c/span\\u003e)  \\u003cspan class=\\\"pl-c\\\"\\u003e# see remark below\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003erun\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ewait\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_B\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003esleep\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0.1\\u003c/span\\u003e)]))\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_B\\u003c/span\\u003e()  \\u003cspan class=\\\"pl-c\\\"\\u003e# timeout shouldn't be triggered\\u003c/span\\u003e\\n\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003erun\\u003c/span\\u003e(\\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003ewait\\u003c/span\\u003e([\\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eto_B\\u003c/span\\u003e(), \\u003cspan class=\\\"pl-s1\\\"\\u003easyncio\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003esleep\\u003c/span\\u003e(\\u003cspan class=\\\"pl-c1\\\"\\u003e0.3\\u003c/span\\u003e)]))\\n\\u003cspan class=\\\"pl-k\\\"\\u003eassert\\u003c/span\\u003e \\u003cspan class=\\\"pl-s1\\\"\\u003em\\u003c/span\\u003e.\\u003cspan class=\\\"pl-en\\\"\\u003eis_C\\u003c/span\\u003e()   \\u003cspan class=\\\"pl-c\\\"\\u003e# now timeout should have been processed\\u003c/span\\u003e\\u003c/pre\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou should consider passing \\u003ccode\\u003equeued=True\\u003c/code\\u003e to the \\u003ccode\\u003eTimeoutMachine\\u003c/code\\u003e constructor. This will make sure that events are processed sequentially and avoid asynchronous \\u003ca href=\\\"https://github.com/pytransitions/transitions/issues/459\\\" data-hovercard-type=\\\"issue\\\" data-hovercard-url=\\\"/pytransitions/transitions/issues/459/hovercard\\\"\\u003eracing conditions\\u003c/a\\u003e that may appear when timeout and event happen in close proximity.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch4 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-django-support\\\"\\u003e\\u003c/a\\u003e Using transitions together with Django\\u003c/h4\\u003e\\u003ca id=\\\"user-content--using-transitions-together-with-django\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink:  Using transitions together with Django\\\" href=\\\"#-using-transitions-together-with-django\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eYou can have a look at the \\u003ca href=\\\"/pytransitions/transitions/blob/master/examples/Frequently%20asked%20questions.ipynb\\\"\\u003eFAQ\\u003c/a\\u003e for some inspiration or checkout \\u003ccode\\u003edjango-transitions\\u003c/code\\u003e.\\nIt has been developed by Christian Ledermann and is also hosted on \\u003ca href=\\\"https://github.com/PrimarySite/django-transitions\\\"\\u003eGithub\\u003c/a\\u003e.\\n\\u003ca href=\\\"https://django-transitions.readthedocs.io/en/latest/\\\" rel=\\\"nofollow\\\"\\u003eThe documentation\\u003c/a\\u003e contains some usage examples.\\u003c/p\\u003e\\n\\u003cdiv class=\\\"markdown-heading\\\" dir=\\\"auto\\\"\\u003e\\u003ch3 tabindex=\\\"-1\\\" class=\\\"heading-element\\\" dir=\\\"auto\\\"\\u003e\\u003ca name=\\\"user-content-bug-reports\\\"\\u003e\\u003c/a\\u003eI have a [bug report/issue/question]...\\u003c/h3\\u003e\\u003ca id=\\\"user-content-i-have-a-bug-reportissuequestion\\\" class=\\\"anchor-element\\\" aria-label=\\\"Permalink: I have a [bug report/issue/question]...\\\" href=\\\"#i-have-a-bug-reportissuequestion\\\"\\u003e\\u003csvg class=\\\"octicon octicon-link\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"16\\\" height=\\\"16\\\" aria-hidden=\\\"true\\\"\\u003e\\u003cpath d=\\\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\\\"\\u003e\\u003c/path\\u003e\\u003c/svg\\u003e\\u003c/a\\u003e\\u003c/div\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFirst, congratulations! You reached the end of the documentation!\\nIf you want to try out \\u003ccode\\u003etransitions\\u003c/code\\u003e before you install it, you can do that in an interactive Jupyter notebook at mybinder.org.\\nJust click this button \ud83d\udc49 \\u003ca href=\\\"https://mybinder.org/v2/gh/pytransitions/transitions/master?filepath=examples%2FPlayground.ipynb\\\" rel=\\\"nofollow\\\"\\u003e\\u003cimg src=\\\"https://camo.githubusercontent.com/e91e1d353a8b6acf0b42547ac3901f2c30138a3abaaa3d3c242da30b5b4f8426/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\\\" alt=\\\"Binder\\\" data-canonical-src=\\\"https://mybinder.org/badge_logo.svg\\\" style=\\\"max-width: 100%;\\\"\\u003e\\u003c/a\\u003e.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor bug reports and other issues, please \\u003ca href=\\\"https://github.com/pytransitions/transitions\\\"\\u003eopen an issue\\u003c/a\\u003e on GitHub.\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor usage questions, post on Stack Overflow, making sure to tag your question with the \\u003ca href=\\\"https://stackoverflow.com/questions/tagged/pytransitions\\\" rel=\\\"nofollow\\\"\\u003e\\u003ccode\\u003epytransitions\\u003c/code\\u003e tag\\u003c/a\\u003e. Do not forget to have a look at the \\u003ca href=\\\"/pytransitions/transitions/blob/master/examples\\\"\\u003eextended examples\\u003c/a\\u003e!\\u003c/p\\u003e\\n\\u003cp dir=\\\"auto\\\"\\u003eFor any other questions, solicitations, or large unrestricted monetary gifts, email \\u003ca href=\\\"mailto:tyarkoni@gmail.com\\\"\\u003eTal Yarkoni\\u003c/a\\u003e (initial author) and/or \\u003ca href=\\\"mailto:aleneum@gmail.com\\\"\\u003eAlexander Neumann\\u003c/a\\u003e (current maintainer).\\u003c/p\\u003e\\n\\u003c/article\\u003e\",\"loaded\":true,\"timedOut\":false,\"errorMessage\":null,\"headerInfo\":{\"toc\":[{\"level\":1,\"text\":\" transitions\",\"anchor\":\"-transitions\",\"htmlText\":\" transitions\"},{\"level\":2,\"text\":\"Installation\",\"anchor\":\"installation\",\"htmlText\":\"Installation\"},{\"level\":2,\"text\":\"Table of Contents\",\"anchor\":\"table-of-contents\",\"htmlText\":\"Table of Contents\"},{\"level\":2,\"text\":\"Quickstart\",\"anchor\":\"quickstart\",\"htmlText\":\"Quickstart\"},{\"level\":2,\"text\":\"The non-quickstart\",\"anchor\":\"the-non-quickstart\",\"htmlText\":\"The non-quickstart\"},{\"level\":3,\"text\":\"Basic initialization\",\"anchor\":\"basic-initialization\",\"htmlText\":\"Basic initialization\"},{\"level\":3,\"text\":\"States\",\"anchor\":\"states\",\"htmlText\":\"States\"},{\"level\":4,\"text\":\"Callbacks\",\"anchor\":\"callbacks\",\"htmlText\":\"Callbacks\"},{\"level\":4,\"text\":\"Checking state\",\"anchor\":\"checking-state\",\"htmlText\":\"Checking state\"},{\"level\":4,\"text\":\"Enumerations\",\"anchor\":\"enumerations\",\"htmlText\":\"Enumerations\"},{\"level\":3,\"text\":\"Transitions\",\"anchor\":\"transitions\",\"htmlText\":\"Transitions\"},{\"level\":4,\"text\":\"Automatic transitions for all states\",\"anchor\":\"automatic-transitions-for-all-states\",\"htmlText\":\"Automatic transitions for all states\"},{\"level\":4,\"text\":\"Transitioning from multiple states\",\"anchor\":\"transitioning-from-multiple-states\",\"htmlText\":\"Transitioning from multiple states\"},{\"level\":4,\"text\":\"Reflexive transitions from multiple states\",\"anchor\":\"reflexive-transitions-from-multiple-states\",\"htmlText\":\"Reflexive transitions from multiple states\"},{\"level\":4,\"text\":\"Internal transitions\",\"anchor\":\"internal-transitions\",\"htmlText\":\"Internal transitions\"},{\"level\":4,\"text\":\" Ordered transitions\",\"anchor\":\"-ordered-transitions\",\"htmlText\":\" Ordered transitions\"},{\"level\":4,\"text\":\"Queued transitions\",\"anchor\":\"queued-transitions\",\"htmlText\":\"Queued transitions\"},{\"level\":4,\"text\":\"Conditional transitions\",\"anchor\":\"conditional-transitions\",\"htmlText\":\"Conditional transitions\"},{\"level\":4,\"text\":\"Check transitions\",\"anchor\":\"check-transitions\",\"htmlText\":\"Check transitions\"},{\"level\":4,\"text\":\"Callbacks\",\"anchor\":\"callbacks-1\",\"htmlText\":\"Callbacks\"},{\"level\":3,\"text\":\"Callable resolution\",\"anchor\":\"callable-resolution\",\"htmlText\":\"Callable resolution\"},{\"level\":3,\"text\":\"Callback execution order\",\"anchor\":\"callback-execution-order\",\"htmlText\":\"Callback execution order\"},{\"level\":3,\"text\":\"Passing data\",\"anchor\":\"passing-data\",\"htmlText\":\"Passing data\"},{\"level\":3,\"text\":\"Alternative initialization patterns\",\"anchor\":\"alternative-initialization-patterns\",\"htmlText\":\"Alternative initialization patterns\"},{\"level\":3,\"text\":\"Logging\",\"anchor\":\"logging\",\"htmlText\":\"Logging\"},{\"level\":3,\"text\":\"(Re-)Storing machine instances\",\"anchor\":\"re-storing-machine-instances\",\"htmlText\":\"(Re-)Storing machine instances\"},{\"level\":3,\"text\":\" Extensions\",\"anchor\":\"-extensions\",\"htmlText\":\" Extensions\"},{\"level\":4,\"text\":\" Diagrams\",\"anchor\":\"-diagrams\",\"htmlText\":\" Diagrams\"},{\"level\":3,\"text\":\"Hierarchical State Machine (HSM)\",\"anchor\":\"hierarchical-state-machine-hsm\",\"htmlText\":\"Hierarchical State Machine (HSM)\"},{\"level\":4,\"text\":\"Reuse of previously created HSMs\",\"anchor\":\"reuse-of-previously-created-hsms\",\"htmlText\":\"Reuse of previously created HSMs\"},{\"level\":4,\"text\":\" Threadsafe(-ish) State Machine\",\"anchor\":\"-threadsafe-ish-state-machine\",\"htmlText\":\" Threadsafe(-ish) State Machine\"},{\"level\":4,\"text\":\" Using async callbacks\",\"anchor\":\"-using-async-callbacks\",\"htmlText\":\" Using async callbacks\"},{\"level\":4,\"text\":\"Adding features to states\",\"anchor\":\"adding-features-to-states\",\"htmlText\":\"Adding features to states\"},{\"level\":4,\"text\":\" Using transitions together with Django\",\"anchor\":\"-using-transitions-together-with-django\",\"htmlText\":\" Using transitions together with Django\"},{\"level\":3,\"text\":\"I have a [bug report/issue/question]...\",\"anchor\":\"i-have-a-bug-reportissuequestion\",\"htmlText\":\"I have a [bug report/issue/question]...\"}],\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Fpytransitions%2Ftransitions\"}},{\"displayName\":\"LICENSE\",\"repoName\":\"transitions\",\"refName\":\"master\",\"path\":\"LICENSE\",\"preferredFileType\":\"license\",\"tabName\":\"MIT\",\"richText\":null,\"loaded\":false,\"timedOut\":false,\"errorMessage\":null,\"headerInfo\":{\"toc\":null,\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Fpytransitions%2Ftransitions\"}}],\"overviewFilesProcessingTime\":56.027032}},\"appPayload\":{\"helpUrl\":\"https://docs.github.com\",\"findFileWorkerPath\":\"/assets-cdn/worker/find-file-worker-32bb159cc57c.js\",\"findInFileWorkerPath\":\"/assets-cdn/worker/find-in-file-worker-c6704d501c10.js\",\"githubDevUrl\":null,\"enabled_features\":{\"code_nav_ui_events\":false,\"copilot_conversational_ux\":false,\"copilot_conversational_ux_embedding_update\":false,\"copilot_popover_file_editor_header\":false,\"copilot_smell_icebreaker_ux\":true,\"copilot_workspace\":false,\"codeview_firefox_inert\":true}}}}</script>  <div data-target=\"react-partial.reactRoot\"><style data-styled=\"true\" data-styled-version=\"5.3.6\">.cgQnMS{font-weight:600;font-size:32px;margin:0;}/*!sc*/data-styled.g1[id=\"Heading__StyledHeading-sc-1c1dgg0-0\"]{content:\"cgQnMS,\"}/*!sc*/.izjvBm{margin-top:16px;margin-bottom:16px;}/*!sc*/.rPQgy{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}/*!sc*/.eUMEDg{margin-bottom:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;row-gap:16px;}/*!sc*/.eLcVee{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;padding-bottom:16px;padding-top:8px;}/*!sc*/.hsfLlq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;gap:8px;}/*!sc*/@media screen and (max-width:320px){.hsfLlq{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}}/*!sc*/.gpKoUz{position:relative;}/*!sc*/@media screen and (max-width:380px){.gpKoUz .ref-selector-button-text-container{max-width:80px;}}/*!sc*/@media screen and (max-width:320px){.gpKoUz{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}.gpKoUz .overview-ref-selector{width:100%;}.gpKoUz .overview-ref-selector > span{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}.gpKoUz .overview-ref-selector > span > span[data-component=\"text\"]{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}}/*!sc*/.kkrdEu{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}/*!sc*/.bKgizp{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;}/*!sc*/.iPGYsi{margin-right:4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.dKmYfk{font-size:14px;min-width:0;max-width:125px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}/*!sc*/.trpoQ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;pointer-events:none;}/*!sc*/.laYubZ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (max-width:1079px){.laYubZ{display:none;}}/*!sc*/.swnaL{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (min-width:1080px){.swnaL{display:none;}}/*!sc*/@media screen and (max-width:543px){.swnaL{display:none;}}/*!sc*/.bWpuBf{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding-left:8px;gap:8px;}/*!sc*/.grHjNb{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:8px;}/*!sc*/@media screen and (max-width:543px){.grHjNb{display:none;}}/*!sc*/.dXTsqj{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (max-width:1011px){.dXTsqj{display:none;}}/*!sc*/.dCOrmu{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (min-width:1012px){.dCOrmu{display:none;}}/*!sc*/@media screen and (max-width:544px){.bVvbgP{display:none;}}/*!sc*/.bNDvfp{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/@media screen and (min-width:544px){.bNDvfp{display:none;}}/*!sc*/.yfPnm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;gap:16px;}/*!sc*/.cAQuiW{width:100%;border-collapse:separate;border-spacing:0;border:1px solid;border-color:var(--borderColor-default,var(--color-border-default,#d0d7de));border-radius:6px;table-layout:fixed;overflow:unset;}/*!sc*/.iiUlLN{height:0px;line-height:0px;}/*!sc*/.iiUlLN tr{height:0px;font-size:0px;}/*!sc*/.jmggSN{padding:16px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));font-size:12px;text-align:left;height:40px;}/*!sc*/.jmggSN th{padding-left:16px;background-color:var(--bgColor-muted,var(--color-canvas-subtle,#f6f8fa));}/*!sc*/.kvYunM{width:100%;border-top-left-radius:6px;}/*!sc*/@media screen and (min-width:544px){.kvYunM{display:none;}}/*!sc*/.hrLuxA{width:40%;border-top-left-radius:6px;}/*!sc*/@media screen and (max-width:543px){.hrLuxA{display:none;}}/*!sc*/@media screen and (max-width:543px){.ePjhhA{display:none;}}/*!sc*/.cuEKae{text-align:right;padding-right:16px;width:136px;border-top-right-radius:6px;}/*!sc*/.jEbBOT{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));font-size:12px;height:40px;}/*!sc*/.bTxCvM{background-color:var(--bgColor-muted,var(--color-canvas-subtle,#f6f8fa));padding:4px;border-top-left-radius:6px;border-top-right-radius:6px;}/*!sc*/.eYedVD{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:8px;min-width:273px;padding-right:8px;padding-left:16px;padding-top:8px;padding-bottom:8px;}/*!sc*/.jGfYmh{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:8px;}/*!sc*/.lhFvfi{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/.bqgLjk{display:inherit;}/*!sc*/@media screen and (min-width:544px){.bqgLjk{display:none;}}/*!sc*/@media screen and (min-width:768px){.bqgLjk{display:none;}}/*!sc*/.epsqEd{text-align:center;vertical-align:center;height:40px;border-top:1px solid;border-color:var(--borderColor-default,var(--color-border-default,#d0d7de));}/*!sc*/.ldpruc{border-top:1px solid var(--borderColor-default,var(--color-border-default));cursor:pointer;}/*!sc*/.ehcSsh{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;gap:16px;}/*!sc*/.iGmlUb{border:1px solid;border-color:var(--borderColor-default,var(--color-border-default,#d0d7de));border-radius:6px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}/*!sc*/@media screen and (max-width:543px){.iGmlUb{margin-left:-16px;margin-right:-16px;max-width:calc(100% + 32px);}}/*!sc*/@media screen and (min-width:544px){.iGmlUb{max-width:100%;}}/*!sc*/.iRQGXA{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;border-bottom:1px solid;border-bottom-color:var(--borderColor-default,var(--color-border-default,#d0d7de));-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-right:8px;position:-webkit-sticky;position:sticky;top:0;background-color:var(--bgColor-default,var(--color-canvas-default,#ffffff));z-index:1;border-top-left-radius:6px;border-top-right-radius:6px;}/*!sc*/.dvTdPK{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding-left:8px;padding-right:8px;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;border-bottom:none;border-bottom-color:var(--borderColor-muted,var(--color-border-muted,hsla(210,18%,87%,1)));align:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:48px;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;max-width:100%;}/*!sc*/.gwuIGu{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/.kOxwQs{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;margin-right:8px;}/*!sc*/.kOgeFj{font-weight:600;}/*!sc*/.bJMeLZ{padding:32px;overflow:auto;}/*!sc*/data-styled.g2[id=\"Box-sc-g0xbh4-0\"]{content:\"izjvBm,rPQgy,eUMEDg,eLcVee,hsfLlq,gpKoUz,kkrdEu,bKgizp,iPGYsi,dKmYfk,trpoQ,laYubZ,swnaL,bWpuBf,grHjNb,dXTsqj,dCOrmu,bVvbgP,bNDvfp,yfPnm,cAQuiW,iiUlLN,jmggSN,kvYunM,hrLuxA,ePjhhA,cuEKae,jEbBOT,bTxCvM,eYedVD,jGfYmh,lhFvfi,bqgLjk,epsqEd,ldpruc,ehcSsh,iGmlUb,iRQGXA,dvTdPK,gwuIGu,kOxwQs,kOgeFj,bJMeLZ,\"}/*!sc*/.bOMzPg{min-width:0;}/*!sc*/.eUGNHp{font-weight:600;}/*!sc*/.dALsKK{color:var(--fgColor-default,var(--color-fg-default,#1F2328));}/*!sc*/data-styled.g6[id=\"Text-sc-17v1xeu-0\"]{content:\"bOMzPg,eUGNHp,dALsKK,\"}/*!sc*/.dheQRw{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));-webkit-text-decoration:none;text-decoration:none;}/*!sc*/[data-a11y-link-underlines='true'] .Link__StyledLink-sc-14289xe-0[data-inline='true']{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.dheQRw:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.dheQRw:is(button){display:inline-block;padding:0;font-size:inherit;white-space:nowrap;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;}/*!sc*/.vLMkZ{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));-webkit-text-decoration:none;text-decoration:none;position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;color:var(--fgColor-default,var(--color-fg-default,#1F2328));text-align:center;-webkit-text-decoration:none;text-decoration:none;line-height:calc(20/14);border-radius:6px;font-size:14px;padding-left:8px;padding-right:8px;padding-top:calc((2rem - 1.25rem) / 2);padding-bottom:calc((2rem - 1.25rem) / 2);}/*!sc*/[data-a11y-link-underlines='true'] .Link__StyledLink-sc-14289xe-0[data-inline='true']{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.vLMkZ:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.vLMkZ:is(button){display:inline-block;padding:0;font-size:inherit;white-space:nowrap;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;}/*!sc*/.vLMkZ span[data-component=\"icon\"]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/@media (hover:hover){.vLMkZ:hover{background-color:var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));-webkit-transition:background .12s ease-out;transition:background .12s ease-out;-webkit-text-decoration:none;text-decoration:none;}}/*!sc*/.vLMkZ:focus{outline:2px solid transparent;}/*!sc*/.vLMkZ:focus{box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.vLMkZ:focus:not(:focus-visible){box-shadow:none;}/*!sc*/.vLMkZ:focus-visible{outline:2px solid transparent;box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.vLMkZ span[data-content]::before{content:attr(data-content);display:block;height:0;font-weight:600;visibility:hidden;white-space:nowrap;}/*!sc*/.vLMkZ::after{position:absolute;right:50%;bottom:calc(50% - 25px);width:100%;height:2px;content:\"\";background-color:var(--underlineNav-borderColor-active,var(--color-primer-border-active,#fd8c73));border-radius:0;-webkit-transform:translate(50%,-50%);-ms-transform:translate(50%,-50%);transform:translate(50%,-50%);}/*!sc*/@media (forced-colors:active){.vLMkZ::after{background-color:LinkText;}}/*!sc*/.bhqztV{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));-webkit-text-decoration:none;text-decoration:none;position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;color:var(--fgColor-default,var(--color-fg-default,#1F2328));text-align:center;-webkit-text-decoration:none;text-decoration:none;line-height:calc(20/14);border-radius:6px;font-size:14px;padding-left:8px;padding-right:8px;padding-top:calc((2rem - 1.25rem) / 2);padding-bottom:calc((2rem - 1.25rem) / 2);}/*!sc*/[data-a11y-link-underlines='true'] .Link__StyledLink-sc-14289xe-0[data-inline='true']{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.bhqztV:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/.bhqztV:is(button){display:inline-block;padding:0;font-size:inherit;white-space:nowrap;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;}/*!sc*/.bhqztV span[data-component=\"icon\"]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/@media (hover:hover){.bhqztV:hover{background-color:var(--bgColor-neutral-muted,var(--color-neutral-muted,rgba(175,184,193,0.2)));-webkit-transition:background .12s ease-out;transition:background .12s ease-out;-webkit-text-decoration:none;text-decoration:none;}}/*!sc*/.bhqztV:focus{outline:2px solid transparent;}/*!sc*/.bhqztV:focus{box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.bhqztV:focus:not(:focus-visible){box-shadow:none;}/*!sc*/.bhqztV:focus-visible{outline:2px solid transparent;box-shadow:inset 0 0 0 2px var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.bhqztV span[data-content]::before{content:attr(data-content);display:block;height:0;font-weight:600;visibility:hidden;white-space:nowrap;}/*!sc*/.bhqztV::after{position:absolute;right:50%;bottom:calc(50% - 25px);width:100%;height:2px;content:\"\";background-color:transparent;border-radius:0;-webkit-transform:translate(50%,-50%);-ms-transform:translate(50%,-50%);transform:translate(50%,-50%);}/*!sc*/@media (forced-colors:active){.bhqztV::after{background-color:transparent;}}/*!sc*/data-styled.g8[id=\"Link__StyledLink-sc-14289xe-0\"]{content:\"dheQRw,vLMkZ,bhqztV,\"}/*!sc*/.izDscS{border-radius:6px;border:1px solid;border-color:var(--button-default-borderColor-rest,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:var(--button-default-bgColor-rest,var(--color-btn-bg,#f6f8fa));box-shadow:var(--button-default-shadow-resting,var(--color-btn-shadow,0 1px 0 rgba(31,35,40,0.04))),var(--button-default-shadow-inset,var(--color-btn-inset-shadow,inset 0 1px 0 rgba(255,255,255,0.25)));}/*!sc*/.izDscS:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.izDscS:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.izDscS:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.izDscS[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.izDscS[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.izDscS:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.izDscS:active{-webkit-transition:none;transition:none;}/*!sc*/.izDscS[data-inactive]{cursor:auto;}/*!sc*/.izDscS:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));border-color:var(--button-default-borderColor-disabled,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS:disabled [data-component=ButtonCounter]{color:inherit;}/*!sc*/@media (forced-colors:active){.izDscS:focus{outline:solid 1px transparent;}}/*!sc*/.izDscS [data-component=ButtonCounter]{font-size:12px;background-color:var(--buttonCounter-default-bgColor-rest,var(--color-btn-counter-bg,rgba(31,35,40,0.08)));}/*!sc*/.izDscS[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.izDscS[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.izDscS[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.izDscS[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.izDscS[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.izDscS[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.izDscS[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.izDscS[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.izDscS[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.izDscS[data-block=\"block\"]{width:100%;}/*!sc*/.izDscS[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.izDscS[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.izDscS [data-component=\"leadingVisual\"]{grid-area:leadingVisual;}/*!sc*/.izDscS [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.izDscS [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.izDscS [data-component=\"trailingAction\"]{margin-right:-4px;}/*!sc*/.izDscS [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.izDscS [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.izDscS:hover:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-hover,var(--color-btn-hover-bg,#f3f4f6));border-color:var(--button-default-borderColor-hover,var(--button-default-borderColor-hover,var(--color-btn-hover-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS:active:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS[aria-expanded=true]{background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.izDscS [data-component=\"leadingVisual\"],.izDscS [data-component=\"trailingVisual\"],.izDscS [data-component=\"trailingAction\"]{color:var(--button-color,var(--fgColor-muted,var(--color-fg-muted,#656d76)));}/*!sc*/.izDscS{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/.izDscS svg{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.izDscS > span{width:inherit;}/*!sc*/.cuOWTR{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:transparent;box-shadow:none;}/*!sc*/.cuOWTR:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.cuOWTR:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.cuOWTR:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.cuOWTR[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.cuOWTR[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.cuOWTR:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.cuOWTR:active{-webkit-transition:none;transition:none;}/*!sc*/.cuOWTR[data-inactive]{cursor:auto;}/*!sc*/.cuOWTR:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.cuOWTR:disabled [data-component=ButtonCounter],.cuOWTR:disabled [data-component=\"leadingVisual\"],.cuOWTR:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.cuOWTR:focus{outline:solid 1px transparent;}}/*!sc*/.cuOWTR [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.cuOWTR[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.cuOWTR[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.cuOWTR[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.cuOWTR[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.cuOWTR[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.cuOWTR[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.cuOWTR[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.cuOWTR[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.cuOWTR[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.cuOWTR[data-block=\"block\"]{width:100%;}/*!sc*/.cuOWTR[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.cuOWTR[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.cuOWTR [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.cuOWTR [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.cuOWTR [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.cuOWTR [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.cuOWTR [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.cuOWTR [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.cuOWTR:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));}/*!sc*/.cuOWTR:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));}/*!sc*/.cuOWTR[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.cuOWTR[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.cuOWTR[data-no-visuals]{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.cuOWTR:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.cuOWTR:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.cuOWTR:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.cuOWTR{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));padding-left:4px;padding-right:4px;}/*!sc*/.cuOWTR span[data-component=\"leadingVisual\"]{margin-right:4px !important;}/*!sc*/.tDSzd{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:transparent;box-shadow:none;}/*!sc*/.tDSzd:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.tDSzd:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.tDSzd:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.tDSzd[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.tDSzd[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.tDSzd:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.tDSzd:active{-webkit-transition:none;transition:none;}/*!sc*/.tDSzd[data-inactive]{cursor:auto;}/*!sc*/.tDSzd:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.tDSzd:disabled [data-component=ButtonCounter],.tDSzd:disabled [data-component=\"leadingVisual\"],.tDSzd:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.tDSzd:focus{outline:solid 1px transparent;}}/*!sc*/.tDSzd [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.tDSzd[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.tDSzd[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.tDSzd[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.tDSzd[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.tDSzd[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.tDSzd[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.tDSzd[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.tDSzd[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.tDSzd[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.tDSzd[data-block=\"block\"]{width:100%;}/*!sc*/.tDSzd[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.tDSzd[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.tDSzd [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.tDSzd [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.tDSzd [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.tDSzd [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.tDSzd:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));}/*!sc*/.tDSzd:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));}/*!sc*/.tDSzd[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.tDSzd[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd[data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.tDSzd:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.tDSzd:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.tDSzd:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.ftZGca{border-radius:6px;border:1px solid;border-color:var(--button-default-borderColor-rest,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:var(--button-default-bgColor-rest,var(--color-btn-bg,#f6f8fa));box-shadow:var(--button-default-shadow-resting,var(--color-btn-shadow,0 1px 0 rgba(31,35,40,0.04))),var(--button-default-shadow-inset,var(--color-btn-inset-shadow,inset 0 1px 0 rgba(255,255,255,0.25)));}/*!sc*/.ftZGca:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.ftZGca:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.ftZGca:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.ftZGca[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.ftZGca[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.ftZGca:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.ftZGca:active{-webkit-transition:none;transition:none;}/*!sc*/.ftZGca[data-inactive]{cursor:auto;}/*!sc*/.ftZGca:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));border-color:var(--button-default-borderColor-disabled,var(--button-default-borderColor-rest,var(--color-btn-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca:disabled [data-component=ButtonCounter]{color:inherit;}/*!sc*/@media (forced-colors:active){.ftZGca:focus{outline:solid 1px transparent;}}/*!sc*/.ftZGca [data-component=ButtonCounter]{font-size:12px;background-color:var(--buttonCounter-default-bgColor-rest,var(--color-btn-counter-bg,rgba(31,35,40,0.08)));}/*!sc*/.ftZGca[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.ftZGca[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.ftZGca[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.ftZGca[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.ftZGca[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.ftZGca[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.ftZGca[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.ftZGca[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.ftZGca[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.ftZGca[data-block=\"block\"]{width:100%;}/*!sc*/.ftZGca[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.ftZGca[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.ftZGca [data-component=\"leadingVisual\"]{grid-area:leadingVisual;}/*!sc*/.ftZGca [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.ftZGca [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.ftZGca [data-component=\"trailingAction\"]{margin-right:-4px;}/*!sc*/.ftZGca [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.ftZGca [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.ftZGca:hover:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-hover,var(--color-btn-hover-bg,#f3f4f6));border-color:var(--button-default-borderColor-hover,var(--button-default-borderColor-hover,var(--color-btn-hover-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca:active:not([disabled]):not([data-inactive]){background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca[aria-expanded=true]{background-color:var(--button-default-bgColor-active,var(--color-btn-active-bg,hsla(220,14%,93%,1)));border-color:var(--button-default-borderColor-active,var(--button-default-borderColor-active,var(--color-btn-active-border,rgba(31,35,40,0.15))));}/*!sc*/.ftZGca [data-component=\"leadingVisual\"],.ftZGca [data-component=\"trailingVisual\"],.ftZGca [data-component=\"trailingAction\"]{color:var(--button-color,var(--fgColor-muted,var(--color-fg-muted,#656d76)));}/*!sc*/.gYvpXq{border-radius:6px;border:1px solid;border-color:var(--button-primary-borderColor-rest,var(--color-btn-primary-border,rgba(31,35,40,0.15)));font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-primary-fgColor-rest,var(--color-btn-primary-text,#ffffff));background-color:var(--button-primary-bgColor-rest,var(--color-btn-primary-bg,#1f883d));box-shadow:var(--shadow-resting-small,var(--color-btn-primary-shadow,0 1px 0 rgba(31,35,40,0.1)));}/*!sc*/.gYvpXq:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.gYvpXq:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.gYvpXq:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.gYvpXq[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.gYvpXq[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.gYvpXq:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.gYvpXq:active{-webkit-transition:none;transition:none;}/*!sc*/.gYvpXq[data-inactive]{cursor:auto;}/*!sc*/.gYvpXq:disabled{cursor:not-allowed;box-shadow:none;color:var(--button-primary-fgColor-disabled,var(--color-btn-primary-disabled-text,rgba(255,255,255,0.8)));background-color:var(--button-primary-bgColor-disabled,var(--color-btn-primary-disabled-bg,#94d3a2));border-color:var(--button-primary-borderColor-disabled,var(--color-btn-primary-disabled-border,rgba(31,35,40,0.15)));}/*!sc*/.gYvpXq:disabled [data-component=ButtonCounter]{color:inherit;}/*!sc*/@media (forced-colors:active){.gYvpXq:focus{outline:solid 1px transparent;}}/*!sc*/.gYvpXq [data-component=ButtonCounter]{font-size:12px;background-color:var(--buttonCounter-primary-bgColor-rest,var(--color-btn-primary-counter-bg,rgba(0,45,17,0.2)));color:var(--button-primary-fgColor-rest,var(--color-btn-primary-text,#ffffff));}/*!sc*/.gYvpXq[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.gYvpXq[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.gYvpXq[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.gYvpXq[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.gYvpXq[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.gYvpXq[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.gYvpXq[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.gYvpXq[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.gYvpXq[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.gYvpXq[data-block=\"block\"]{width:100%;}/*!sc*/.gYvpXq[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.gYvpXq[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.gYvpXq [data-component=\"leadingVisual\"]{grid-area:leadingVisual;}/*!sc*/.gYvpXq [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.gYvpXq [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.gYvpXq [data-component=\"trailingAction\"]{margin-right:-4px;}/*!sc*/.gYvpXq [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.gYvpXq [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.gYvpXq:hover:not([disabled]):not([data-inactive]){color:btn.primary.hoverText;background-color:var(--button-primary-bgColor-hover,var(--color-btn-primary-hover-bg,#1a7f37));}/*!sc*/.gYvpXq:focus:not([disabled]){box-shadow:inset 0 0 0 3px;}/*!sc*/.gYvpXq:focus-visible:not([disabled]){box-shadow:inset 0 0 0 3px;}/*!sc*/.gYvpXq:active:not([disabled]):not([data-inactive]){background-color:var(--button-primary-bgColor-active,var(--color-btn-primary-selected-bg,hsla(137,66%,28%,1)));box-shadow:var(--button-primary-shadow-selected,var(--color-btn-primary-selected-shadow,inset 0 1px 0 rgba(0,45,17,0.2)));}/*!sc*/.gYvpXq[aria-expanded=true]{background-color:var(--button-primary-bgColor-active,var(--color-btn-primary-selected-bg,hsla(137,66%,28%,1)));box-shadow:var(--button-primary-shadow-selected,var(--color-btn-primary-selected-shadow,inset 0 1px 0 rgba(0,45,17,0.2)));}/*!sc*/.gYvpXq svg{color:fg.primary;}/*!sc*/.fAkXQN{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--fgColor-default,var(--color-fg-default,#1F2328));background-color:transparent;box-shadow:none;}/*!sc*/.fAkXQN:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.fAkXQN:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.fAkXQN:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.fAkXQN[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.fAkXQN[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.fAkXQN:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.fAkXQN:active{-webkit-transition:none;transition:none;}/*!sc*/.fAkXQN[data-inactive]{cursor:auto;}/*!sc*/.fAkXQN:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.fAkXQN:disabled [data-component=ButtonCounter],.fAkXQN:disabled [data-component=\"leadingVisual\"],.fAkXQN:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.fAkXQN:focus{outline:solid 1px transparent;}}/*!sc*/.fAkXQN [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.fAkXQN[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.fAkXQN[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.fAkXQN[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.fAkXQN[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.fAkXQN[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.fAkXQN[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.fAkXQN[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.fAkXQN[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.fAkXQN[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.fAkXQN[data-block=\"block\"]{width:100%;}/*!sc*/.fAkXQN[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.fAkXQN[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.fAkXQN [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.fAkXQN [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.fAkXQN [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.fAkXQN [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.fAkXQN [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.fAkXQN [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.fAkXQN:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.fAkXQN:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.fAkXQN[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.fAkXQN[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.fAkXQN[data-no-visuals]{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.fAkXQN:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.fAkXQN:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.fAkXQN:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.fAkXQN:focus:not([disabled]){-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.jPraEl{border-radius:6px;border:1px solid;border-color:transparent;font-family:inherit;font-weight:500;font-size:14px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-text-decoration:none;text-decoration:none;text-align:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:32px;padding:0 12px;gap:8px;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;-webkit-transition:80ms cubic-bezier(0.65,0,0.35,1);transition:80ms cubic-bezier(0.65,0,0.35,1);-webkit-transition-property:color,fill,background-color,border-color;transition-property:color,fill,background-color,border-color;color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));background-color:transparent;box-shadow:none;}/*!sc*/.jPraEl:focus:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.jPraEl:focus:not(:disabled):not(:focus-visible){outline:solid 1px transparent;}/*!sc*/.jPraEl:focus-visible:not(:disabled){box-shadow:none;outline:2px solid var(--fgColor-accent,var(--color-accent-fg,#0969da));outline-offset:-2px;}/*!sc*/.jPraEl[href]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;}/*!sc*/.jPraEl[href]:hover{-webkit-text-decoration:none;text-decoration:none;}/*!sc*/.jPraEl:hover{-webkit-transition-duration:80ms;transition-duration:80ms;}/*!sc*/.jPraEl:active{-webkit-transition:none;transition:none;}/*!sc*/.jPraEl[data-inactive]{cursor:auto;}/*!sc*/.jPraEl:disabled{cursor:not-allowed;box-shadow:none;color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.jPraEl:disabled [data-component=ButtonCounter],.jPraEl:disabled [data-component=\"leadingVisual\"],.jPraEl:disabled [data-component=\"trailingAction\"]{color:inherit;}/*!sc*/@media (forced-colors:active){.jPraEl:focus{outline:solid 1px transparent;}}/*!sc*/.jPraEl [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.jPraEl[data-component=IconButton]{display:inline-grid;padding:unset;place-content:center;width:32px;min-width:unset;}/*!sc*/.jPraEl[data-size=\"small\"]{padding:0 8px;height:28px;gap:4px;font-size:12px;}/*!sc*/.jPraEl[data-size=\"small\"] [data-component=\"text\"]{line-height:calc(20 / 12);}/*!sc*/.jPraEl[data-size=\"small\"] [data-component=ButtonCounter]{font-size:12px;}/*!sc*/.jPraEl[data-size=\"small\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:4px;}/*!sc*/.jPraEl[data-size=\"small\"][data-component=IconButton]{width:28px;padding:unset;}/*!sc*/.jPraEl[data-size=\"large\"]{padding:0 16px;height:40px;gap:8px;}/*!sc*/.jPraEl[data-size=\"large\"] [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.jPraEl[data-size=\"large\"][data-component=IconButton]{width:40px;padding:unset;}/*!sc*/.jPraEl[data-block=\"block\"]{width:100%;}/*!sc*/.jPraEl[data-inactive]:not([disabled]){background-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));border-color:var(--button-inactive-bgColor,var(--button-inactive-bgColor-rest,var(--color-btn-inactive-bg,#eaeef2)));color:var(--button-inactive-fgColor,var(--button-inactive-fgColor-rest,var(--color-btn-inactive-text,#57606a)));}/*!sc*/.jPraEl[data-inactive]:not([disabled]):focus-visible{box-shadow:none;}/*!sc*/.jPraEl [data-component=\"leadingVisual\"]{grid-area:leadingVisual;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.jPraEl [data-component=\"text\"]{grid-area:text;line-height:calc(20/14);white-space:nowrap;}/*!sc*/.jPraEl [data-component=\"trailingVisual\"]{grid-area:trailingVisual;}/*!sc*/.jPraEl [data-component=\"trailingAction\"]{margin-right:-4px;color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.jPraEl [data-component=\"buttonContent\"]{-webkit-flex:1 0 auto;-ms-flex:1 0 auto;flex:1 0 auto;display:grid;grid-template-areas:\"leadingVisual text trailingVisual\";grid-template-columns:min-content minmax(0,auto) min-content;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/.jPraEl [data-component=\"buttonContent\"] > :not(:last-child){margin-right:8px;}/*!sc*/.jPraEl:hover:not([disabled]){background-color:var(--control-transparent-bgColor-hover,var(--color-action-list-item-default-hover-bg,rgba(208,215,222,0.32)));}/*!sc*/.jPraEl:active:not([disabled]){background-color:var(--control-transparent-bgColor-active,var(--color-action-list-item-default-active-bg,rgba(208,215,222,0.48)));}/*!sc*/.jPraEl[aria-expanded=true]{background-color:var(--control-transparent-bgColor-selected,var(--color-action-list-item-default-selected-bg,rgba(208,215,222,0.24)));}/*!sc*/.jPraEl[data-component=\"IconButton\"][data-no-visuals]{color:var(--fgColor-muted,var(--color-fg-muted,#656d76));}/*!sc*/.jPraEl[data-no-visuals]{color:var(--fgColor-accent,var(--color-accent-fg,#0969da));}/*!sc*/.jPraEl:has([data-component=\"ButtonCounter\"]){color:var(--button-default-fgColor-rest,var(--color-btn-text,#24292f));}/*!sc*/.jPraEl:disabled[data-no-visuals]{color:var(--fgColor-disabled,var(--color-primer-fg-disabled,#8c959f));}/*!sc*/.jPraEl:disabled[data-no-visuals] [data-component=ButtonCounter]{color:inherit;}/*!sc*/.jPraEl{color:var(--fgColor-muted,var(--color-fg-subtle,#6e7781));padding-left:8px;padding-right:8px;}/*!sc*/data-styled.g9[id=\"types__StyledButton-sc-ws60qy-0\"]{content:\"izDscS,cuOWTR,tDSzd,ftZGca,gYvpXq,fAkXQN,jPraEl,\"}/*!sc*/.rTZSs{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;-webkit-clip:rect(0,0,0,0);clip:rect(0,0,0,0);white-space:nowrap;border-width:0;}/*!sc*/data-styled.g10[id=\"_VisuallyHidden__VisuallyHidden-sc-11jhm7a-0\"]{content:\"rTZSs,\"}/*!sc*/.fUpWeN{display:inline-block;overflow:hidden;text-overflow:ellipsis;vertical-align:top;white-space:nowrap;max-width:125px;max-width:100%;}/*!sc*/data-styled.g15[id=\"Truncate__StyledTruncate-sc-23o1d2-0\"]{content:\"fUpWeN,\"}/*!sc*/.dMjscx{position:relative;display:inline-block;}/*!sc*/.dMjscx::before{position:absolute;z-index:1000001;display:none;width:0px;height:0px;color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));pointer-events:none;content:'';border:6px solid transparent;opacity:0;}/*!sc*/.dMjscx::after{position:absolute;z-index:1000000;display:none;padding:0.5em 0.75em;font:normal normal 11px/1.5 -apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Noto Sans\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\";-webkit-font-smoothing:subpixel-antialiased;color:var(--fgColor-onEmphasis,var(--color-fg-on-emphasis,#ffffff));text-align:center;-webkit-text-decoration:none;text-decoration:none;text-shadow:none;text-transform:none;-webkit-letter-spacing:normal;-moz-letter-spacing:normal;-ms-letter-spacing:normal;letter-spacing:normal;word-wrap:break-word;white-space:pre;pointer-events:none;content:attr(aria-label);background:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));border-radius:6px;opacity:0;}/*!sc*/@-webkit-keyframes tooltip-appear{from{opacity:0;}to{opacity:1;}}/*!sc*/@keyframes tooltip-appear{from{opacity:0;}to{opacity:1;}}/*!sc*/.dMjscx:hover::before,.dMjscx:active::before,.dMjscx:focus::before,.dMjscx:focus-within::before,.dMjscx:hover::after,.dMjscx:active::after,.dMjscx:focus::after,.dMjscx:focus-within::after{display:inline-block;-webkit-text-decoration:none;text-decoration:none;-webkit-animation-name:tooltip-appear;animation-name:tooltip-appear;-webkit-animation-duration:0.1s;animation-duration:0.1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;-webkit-animation-delay:0.4s;animation-delay:0.4s;}/*!sc*/.dMjscx.tooltipped-no-delay:hover::before,.dMjscx.tooltipped-no-delay:active::before,.dMjscx.tooltipped-no-delay:focus::before,.dMjscx.tooltipped-no-delay:focus-within::before,.dMjscx.tooltipped-no-delay:hover::after,.dMjscx.tooltipped-no-delay:active::after,.dMjscx.tooltipped-no-delay:focus::after,.dMjscx.tooltipped-no-delay:focus-within::after{-webkit-animation-delay:0s;animation-delay:0s;}/*!sc*/.dMjscx.tooltipped-multiline:hover::after,.dMjscx.tooltipped-multiline:active::after,.dMjscx.tooltipped-multiline:focus::after,.dMjscx.tooltipped-multiline:focus-within::after{display:table-cell;}/*!sc*/.dMjscx.tooltipped-s::after,.dMjscx.tooltipped-se::after,.dMjscx.tooltipped-sw::after{top:100%;right:50%;margin-top:6px;}/*!sc*/.dMjscx.tooltipped-s::before,.dMjscx.tooltipped-se::before,.dMjscx.tooltipped-sw::before{top:auto;right:50%;bottom:-7px;margin-right:-6px;border-bottom-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-se::after{right:auto;left:50%;margin-left:-16px;}/*!sc*/.dMjscx.tooltipped-sw::after{margin-right:-16px;}/*!sc*/.dMjscx.tooltipped-n::after,.dMjscx.tooltipped-ne::after,.dMjscx.tooltipped-nw::after{right:50%;bottom:100%;margin-bottom:6px;}/*!sc*/.dMjscx.tooltipped-n::before,.dMjscx.tooltipped-ne::before,.dMjscx.tooltipped-nw::before{top:-7px;right:50%;bottom:auto;margin-right:-6px;border-top-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-ne::after{right:auto;left:50%;margin-left:-16px;}/*!sc*/.dMjscx.tooltipped-nw::after{margin-right:-16px;}/*!sc*/.dMjscx.tooltipped-s::after,.dMjscx.tooltipped-n::after{-webkit-transform:translateX(50%);-ms-transform:translateX(50%);transform:translateX(50%);}/*!sc*/.dMjscx.tooltipped-w::after{right:100%;bottom:50%;margin-right:6px;-webkit-transform:translateY(50%);-ms-transform:translateY(50%);transform:translateY(50%);}/*!sc*/.dMjscx.tooltipped-w::before{top:50%;bottom:50%;left:-7px;margin-top:-6px;border-left-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-e::after{bottom:50%;left:100%;margin-left:6px;-webkit-transform:translateY(50%);-ms-transform:translateY(50%);transform:translateY(50%);}/*!sc*/.dMjscx.tooltipped-e::before{top:50%;right:-7px;bottom:50%;margin-top:-6px;border-right-color:var(--bgColor-emphasis,var(--color-neutral-emphasis-plus,#24292f));}/*!sc*/.dMjscx.tooltipped-multiline::after{width:-webkit-max-content;width:-moz-max-content;width:max-content;max-width:250px;word-wrap:break-word;white-space:pre-line;border-collapse:separate;}/*!sc*/.dMjscx.tooltipped-multiline.tooltipped-s::after,.dMjscx.tooltipped-multiline.tooltipped-n::after{right:auto;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);}/*!sc*/.dMjscx.tooltipped-multiline.tooltipped-w::after,.dMjscx.tooltipped-multiline.tooltipped-e::after{right:100%;}/*!sc*/.dMjscx.tooltipped-align-right-2::after{right:0;margin-right:0;}/*!sc*/.dMjscx.tooltipped-align-right-2::before{right:15px;}/*!sc*/.dMjscx.tooltipped-align-left-2::after{left:0;margin-left:0;}/*!sc*/.dMjscx.tooltipped-align-left-2::before{left:10px;}/*!sc*/data-styled.g18[id=\"Tooltip__TooltipBase-sc-17tf59c-0\"]{content:\"dMjscx,\"}/*!sc*/.bPgibo{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;list-style:none;white-space:nowrap;padding-top:0;padding-bottom:0;padding-left:0;padding-right:0;margin:0;margin-bottom:-1px;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:8px;position:relative;}/*!sc*/data-styled.g103[id=\"UnderlineNav__NavigationList-sc-1jfr31k-0\"]{content:\"bPgibo,\"}/*!sc*/</style> <!-- --> <!-- --> <div class=\"Box-sc-g0xbh4-0 izjvBm\"><div class=\"Box-sc-g0xbh4-0 rPQgy\"><div class=\"Box-sc-g0xbh4-0 eUMEDg\"></div></div><div class=\"Box-sc-g0xbh4-0 eLcVee\"><div class=\"Box-sc-g0xbh4-0 hsfLlq\"><div class=\"Box-sc-g0xbh4-0 gpKoUz\"><button type=\"button\" id=\"branch-picker-repos-header-ref-selector\" aria-haspopup=\"true\" tabindex=\"0\" aria-label=\"master branch\" data-testid=\"anchor-button\" class=\"types__StyledButton-sc-ws60qy-0 izDscS overview-ref-selector\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"text\"><div class=\"Box-sc-g0xbh4-0 bKgizp\"><div class=\"Box-sc-g0xbh4-0 iPGYsi\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-git-branch\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg></div><div class=\"Box-sc-g0xbh4-0 dKmYfk ref-selector-button-text-container\"><span class=\"Text-sc-17v1xeu-0 bOMzPg\">\u00a0<!-- -->master</span></div></div></span><span data-component=\"trailingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-triangle-down\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></span></span></button><button hidden=\"\" data-hotkey-scope=\"read-only-cursor-text-area\"></button></div><div class=\"Box-sc-g0xbh4-0 laYubZ\"><a style=\"--button-color:fg.muted\" type=\"button\" href=\"/pytransitions/transitions/branches\" class=\"types__StyledButton-sc-ws60qy-0 cuOWTR\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-git-branch\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg></span><span data-component=\"text\">Branches</span></span></a><a style=\"--button-color:fg.muted\" type=\"button\" href=\"/pytransitions/transitions/tags\" class=\"types__StyledButton-sc-ws60qy-0 cuOWTR\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-tag\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg></span><span data-component=\"text\">Tags</span></span></a></div><div class=\"Box-sc-g0xbh4-0 swnaL\"><a style=\"--button-color:fg.muted\" type=\"button\" aria-label=\"Go to Branches page\" href=\"/pytransitions/transitions/branches\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 tDSzd\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-git-branch\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M9.5 3.25a2.25 2.25 0 1 1 3 2.122V6A2.5 2.5 0 0 1 10 8.5H6a1 1 0 0 0-1 1v1.128a2.251 2.251 0 1 1-1.5 0V5.372a2.25 2.25 0 1 1 1.5 0v1.836A2.493 2.493 0 0 1 6 7h4a1 1 0 0 0 1-1v-.628A2.25 2.25 0 0 1 9.5 3.25Zm-6 0a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Zm8.25-.75a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5ZM4.25 12a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Z\"></path></svg></a><a style=\"--button-color:fg.muted\" type=\"button\" aria-label=\"Go to Tags page\" href=\"/pytransitions/transitions/tags\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 tDSzd\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-tag\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg></a></div></div><div class=\"Box-sc-g0xbh4-0 bWpuBf\"><div class=\"Box-sc-g0xbh4-0 grHjNb\"><div class=\"Box-sc-g0xbh4-0 dXTsqj\"><!--$!--><template></template><!--/$--></div><div class=\"Box-sc-g0xbh4-0 dCOrmu\"><button type=\"button\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 ftZGca\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"text\">Go to file</span></span></button></div><div class=\"react-directory-add-file-icon\"></div><div class=\"react-directory-remove-file-icon\"></div></div><button type=\"button\" id=\":R2il5:\" aria-haspopup=\"true\" tabindex=\"0\" class=\"types__StyledButton-sc-ws60qy-0 gYvpXq\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><div class=\"Box-sc-g0xbh4-0 bVvbgP\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-code\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z\"></path></svg></div></span><span data-component=\"text\">Code</span></span><span data-component=\"trailingAction\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-triangle-down\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m4.427 7.427 3.396 3.396a.25.25 0 0 0 .354 0l3.396-3.396A.25.25 0 0 0 11.396 7H4.604a.25.25 0 0 0-.177.427Z\"></path></svg></span></button><div class=\"Box-sc-g0xbh4-0 bNDvfp\"><button data-component=\"IconButton\" type=\"button\" aria-label=\"Open more actions menu\" id=\":R3il5:\" aria-haspopup=\"true\" tabindex=\"0\" data-no-visuals=\"true\" class=\"types__StyledButton-sc-ws60qy-0 ftZGca\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-kebab-horizontal\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M8 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Zm13 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path></svg></button></div></div></div><div class=\"Box-sc-g0xbh4-0 yfPnm\"><div data-hpc=\"true\" class=\"Box-sc-g0xbh4-0\"><button hidden=\"\" data-testid=\"focus-next-element-button\" data-hotkey=\"j\" data-hotkey-scope=\"read-only-cursor-text-area\"></button><button hidden=\"\" data-hotkey=\"j\"></button><button hidden=\"\" data-testid=\"focus-previous-element-button\" data-hotkey=\"k\" data-hotkey-scope=\"read-only-cursor-text-area\"></button><button hidden=\"\" data-hotkey=\"k\"></button><h2 class=\"Heading__StyledHeading-sc-1c1dgg0-0 cgQnMS sr-only\" data-testid=\"screen-reader-heading\" id=\"folders-and-files\">Folders and files</h2><table aria-labelledby=\"folders-and-files\" class=\"Box-sc-g0xbh4-0 cAQuiW\"><thead class=\"Box-sc-g0xbh4-0 iiUlLN\"><tr class=\"Box-sc-g0xbh4-0 jmggSN\"><th colSpan=\"2\" class=\"Box-sc-g0xbh4-0 kvYunM\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Name</span></th><th colSpan=\"1\" class=\"Box-sc-g0xbh4-0 hrLuxA\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Name</span></th><th class=\"Box-sc-g0xbh4-0 ePjhhA\"><div title=\"Last commit message\" class=\"Truncate__StyledTruncate-sc-23o1d2-0 fUpWeN\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Last commit message</span></div></th><th colSpan=\"1\" class=\"Box-sc-g0xbh4-0 cuEKae\"><div title=\"Last commit date\" class=\"Truncate__StyledTruncate-sc-23o1d2-0 fUpWeN\"><span class=\"Text-sc-17v1xeu-0 eUGNHp\">Last commit date</span></div></th></tr></thead><tbody><tr class=\"Box-sc-g0xbh4-0 jEbBOT\"><td colSpan=\"3\" class=\"Box-sc-g0xbh4-0 bTxCvM\"><div class=\"Box-sc-g0xbh4-0 eYedVD\"><h2 class=\"Heading__StyledHeading-sc-1c1dgg0-0 cgQnMS sr-only\" data-testid=\"screen-reader-heading\">Latest commit</h2><div style=\"width:120px\" class=\"Skeleton Skeleton--text\" data-testid=\"loading\">\u00a0</div><div class=\"Box-sc-g0xbh4-0 jGfYmh\"><div data-testid=\"latest-commit-details\" class=\"Box-sc-g0xbh4-0 lhFvfi\"></div><h2 class=\"Heading__StyledHeading-sc-1c1dgg0-0 cgQnMS sr-only\" data-testid=\"screen-reader-heading\">History</h2><a class=\"types__StyledButton-sc-ws60qy-0 fAkXQN react-last-commit-history-group\" href=\"/pytransitions/transitions/commits/master/\" data-size=\"small\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-history\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m.427 1.927 1.215 1.215a8.002 8.002 0 1 1-1.6 5.685.75.75 0 1 1 1.493-.154 6.5 6.5 0 1 0 1.18-4.458l1.358 1.358A.25.25 0 0 1 3.896 6H.25A.25.25 0 0 1 0 5.75V2.104a.25.25 0 0 1 .427-.177ZM7.75 4a.75.75 0 0 1 .75.75v2.992l2.028.812a.75.75 0 0 1-.557 1.392l-2.5-1A.751.751 0 0 1 7 8.25v-3.5A.75.75 0 0 1 7.75 4Z\"></path></svg></span><span data-component=\"text\"><span class=\"Text-sc-17v1xeu-0 dALsKK\">1,023 Commits</span></span></span></a><div class=\"Box-sc-g0xbh4-0 bqgLjk\"></div><span role=\"tooltip\" aria-label=\"Commit history\" class=\"Tooltip__TooltipBase-sc-17tf59c-0 dMjscx tooltipped-n\"><a class=\"types__StyledButton-sc-ws60qy-0 fAkXQN react-last-commit-history-icon\" href=\"/pytransitions/transitions/commits/master/\"><span data-component=\"buttonContent\" class=\"Box-sc-g0xbh4-0 kkrdEu\"><span data-component=\"leadingVisual\" class=\"Box-sc-g0xbh4-0 trpoQ\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-history\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"m.427 1.927 1.215 1.215a8.002 8.002 0 1 1-1.6 5.685.75.75 0 1 1 1.493-.154 6.5 6.5 0 1 0 1.18-4.458l1.358 1.358A.25.25 0 0 1 3.896 6H.25A.25.25 0 0 1 0 5.75V2.104a.25.25 0 0 1 .427-.177ZM7.75 4a.75.75 0 0 1 .75.75v2.992l2.028.812a.75.75 0 0 1-.557 1.392l-2.5-1A.751.751 0 0 1 7 8.25v-3.5A.75.75 0 0 1 7.75 4Z\"></path></svg></span></span></a></span></div></div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-0\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".github\" aria-label=\".github, (Directory)\" class=\"Link--primary\" href=\"/pytransitions/transitions/tree/master/.github\">.github</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".github\" aria-label=\".github, (Directory)\" class=\"Link--primary\" href=\"/pytransitions/transitions/tree/master/.github\">.github</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-1\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"binder\" aria-label=\"binder, (Directory)\" class=\"Link--primary\" href=\"/pytransitions/transitions/tree/master/binder\">binder</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"binder\" aria-label=\"binder, (Directory)\" class=\"Link--primary\" href=\"/pytransitions/transitions/tree/master/binder\">binder</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-2\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"examples\" aria-label=\"examples, (Directory)\" class=\"Link--primary\" href=\"/pytransitions/transitions/tree/master/examples\">examples</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"examples\" aria-label=\"examples, (Directory)\" class=\"Link--primary\" href=\"/pytransitions/transitions/tree/master/examples\">examples</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-3\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"tests\" aria-label=\"tests, (Directory)\" class=\"Link--primary\" href=\"/pytransitions/transitions/tree/master/tests\">tests</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"tests\" aria-label=\"tests, (Directory)\" class=\"Link--primary\" href=\"/pytransitions/transitions/tree/master/tests\">tests</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-4\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"transitions\" aria-label=\"transitions, (Directory)\" class=\"Link--primary\" href=\"/pytransitions/transitions/tree/master/transitions\">transitions</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"icon-directory\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M1.75 1A1.75 1.75 0 0 0 0 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0 0 16 13.25v-8.5A1.75 1.75 0 0 0 14.25 3H7.5a.25.25 0 0 1-.2-.1l-.9-1.2C6.07 1.26 5.55 1 5 1H1.75Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"transitions\" aria-label=\"transitions, (Directory)\" class=\"Link--primary\" href=\"/pytransitions/transitions/tree/master/transitions\">transitions</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-5\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".coveragerc\" aria-label=\".coveragerc, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/.coveragerc\">.coveragerc</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".coveragerc\" aria-label=\".coveragerc, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/.coveragerc\">.coveragerc</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-6\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".gitignore\" aria-label=\".gitignore, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/.gitignore\">.gitignore</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".gitignore\" aria-label=\".gitignore, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/.gitignore\">.gitignore</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-7\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".pylintrc\" aria-label=\".pylintrc, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/.pylintrc\">.pylintrc</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\".pylintrc\" aria-label=\".pylintrc, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/.pylintrc\">.pylintrc</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-8\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"Changelog.md\" aria-label=\"Changelog.md, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/Changelog.md\">Changelog.md</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"Changelog.md\" aria-label=\"Changelog.md, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/Changelog.md\">Changelog.md</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row undefined\" id=\"folder-row-9\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"LICENSE\" aria-label=\"LICENSE, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/LICENSE\">LICENSE</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"LICENSE\" aria-label=\"LICENSE, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/LICENSE\">LICENSE</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-10\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"MANIFEST.in\" aria-label=\"MANIFEST.in, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/MANIFEST.in\">MANIFEST.in</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"MANIFEST.in\" aria-label=\"MANIFEST.in, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/MANIFEST.in\">MANIFEST.in</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-11\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"README.md\" aria-label=\"README.md, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/README.md\">README.md</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"README.md\" aria-label=\"README.md, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/README.md\">README.md</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-12\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"appveyor.yml\" aria-label=\"appveyor.yml, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/appveyor.yml\">appveyor.yml</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"appveyor.yml\" aria-label=\"appveyor.yml, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/appveyor.yml\">appveyor.yml</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-13\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"conftest.py\" aria-label=\"conftest.py, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/conftest.py\">conftest.py</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"conftest.py\" aria-label=\"conftest.py, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/conftest.py\">conftest.py</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-14\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"mypy.ini\" aria-label=\"mypy.ini, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/mypy.ini\">mypy.ini</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"mypy.ini\" aria-label=\"mypy.ini, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/mypy.ini\">mypy.ini</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-15\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"noxfile.py\" aria-label=\"noxfile.py, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/noxfile.py\">noxfile.py</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"noxfile.py\" aria-label=\"noxfile.py, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/noxfile.py\">noxfile.py</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-16\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"pytest.ini\" aria-label=\"pytest.ini, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/pytest.ini\">pytest.ini</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"pytest.ini\" aria-label=\"pytest.ini, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/pytest.ini\">pytest.ini</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-17\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"requirements.txt\" aria-label=\"requirements.txt, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/requirements.txt\">requirements.txt</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"requirements.txt\" aria-label=\"requirements.txt, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/requirements.txt\">requirements.txt</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-18\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"requirements_diagrams.txt\" aria-label=\"requirements_diagrams.txt, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/requirements_diagrams.txt\">requirements_diagrams.txt</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"requirements_diagrams.txt\" aria-label=\"requirements_diagrams.txt, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/requirements_diagrams.txt\">requirements_diagrams.txt</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-19\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"requirements_mypy.txt\" aria-label=\"requirements_mypy.txt, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/requirements_mypy.txt\">requirements_mypy.txt</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"requirements_mypy.txt\" aria-label=\"requirements_mypy.txt, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/requirements_mypy.txt\">requirements_mypy.txt</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-20\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"requirements_test.txt\" aria-label=\"requirements_test.txt, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/requirements_test.txt\">requirements_test.txt</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"requirements_test.txt\" aria-label=\"requirements_test.txt, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/requirements_test.txt\">requirements_test.txt</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-21\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"setup.cfg\" aria-label=\"setup.cfg, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/setup.cfg\">setup.cfg</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"setup.cfg\" aria-label=\"setup.cfg, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/setup.cfg\">setup.cfg</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"react-directory-row truncate-for-mobile\" id=\"folder-row-22\"><td class=\"react-directory-row-name-cell-small-screen\" colSpan=\"2\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"setup.py\" aria-label=\"setup.py, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/setup.py\">setup.py</a></div></h3></div></div></td><td class=\"react-directory-row-name-cell-large-screen\" colSpan=\"1\"><div class=\"react-directory-filename-column\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"color-fg-muted\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0 1 13.25 16h-9.5A1.75 1.75 0 0 1 2 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 9 4.25V1.5Zm6.75.062V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z\"></path></svg><div class=\"overflow-hidden\"><h3><div class=\"react-directory-truncate\"><a title=\"setup.py\" aria-label=\"setup.py, (File)\" class=\"Link--primary\" href=\"/pytransitions/transitions/blob/master/setup.py\">setup.py</a></div></h3></div></div></td><td class=\"react-directory-row-commit-cell\"><div class=\"Skeleton Skeleton--text\">\u00a0</div></td><td><div class=\"Skeleton Skeleton--text\">\u00a0</div></td></tr><tr class=\"Box-sc-g0xbh4-0 epsqEd show-for-mobile\" data-testid=\"view-all-files-row\"><td colSpan=\"3\" class=\"Box-sc-g0xbh4-0 ldpruc\"><div><button class=\"Link__StyledLink-sc-14289xe-0 dheQRw\">View all files</button></div></td></tr></tbody></table></div><div class=\"Box-sc-g0xbh4-0 ehcSsh\"><div class=\"Box-sc-g0xbh4-0 iGmlUb\"><div class=\"Box-sc-g0xbh4-0 iRQGXA\"><h2 class=\"_VisuallyHidden__VisuallyHidden-sc-11jhm7a-0 rTZSs\">Repository files navigation</h2><nav aria-label=\"Repository files\" class=\"Box-sc-g0xbh4-0 dvTdPK\"><ul role=\"list\" class=\"UnderlineNav__NavigationList-sc-1jfr31k-0 bPgibo\"><li class=\"Box-sc-g0xbh4-0 gwuIGu\"><a href=\"#\" aria-current=\"page\" class=\"Link__StyledLink-sc-14289xe-0 vLMkZ\"><span data-component=\"icon\" class=\"Box-sc-g0xbh4-0 kOxwQs\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-book\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg></span><span data-component=\"text\" data-content=\"README\" class=\"Box-sc-g0xbh4-0 kOgeFj\">README</span></a></li><li class=\"Box-sc-g0xbh4-0 gwuIGu\"><a href=\"#\" class=\"Link__StyledLink-sc-14289xe-0 bhqztV\"><span data-component=\"icon\" class=\"Box-sc-g0xbh4-0 kOxwQs\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-law\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M8.75.75V2h.985c.304 0 .603.08.867.231l1.29.736c.038.022.08.033.124.033h2.234a.75.75 0 0 1 0 1.5h-.427l2.111 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.006.005-.01.01-.045.04c-.21.176-.441.327-.686.45C14.556 10.78 13.88 11 13 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L12.178 4.5h-.162c-.305 0-.604-.079-.868-.231l-1.29-.736a.245.245 0 0 0-.124-.033H8.75V13h2.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1 0-1.5h2.5V3.5h-.984a.245.245 0 0 0-.124.033l-1.289.737c-.265.15-.564.23-.869.23h-.162l2.112 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.016.015-.045.04c-.21.176-.441.327-.686.45C4.556 10.78 3.88 11 3 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L2.178 4.5H1.75a.75.75 0 0 1 0-1.5h2.234a.249.249 0 0 0 .125-.033l1.288-.737c.265-.15.564-.23.869-.23h.984V.75a.75.75 0 0 1 1.5 0Zm2.945 8.477c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L13 6.327Zm-10 0c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L3 6.327Z\"></path></svg></span><span data-component=\"text\" data-content=\"MIT license\" class=\"Box-sc-g0xbh4-0\">MIT license</span></a></li></ul></nav><button style=\"--button-color:fg.subtle\" type=\"button\" aria-label=\"Outline\" id=\":Rdkl5:\" aria-haspopup=\"true\" tabindex=\"0\" class=\"types__StyledButton-sc-ws60qy-0 jPraEl\"><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" class=\"octicon octicon-list-unordered\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\" fill=\"currentColor\" style=\"display:inline-block;user-select:none;vertical-align:text-bottom;overflow:visible\"><path d=\"M5.75 2.5h8.5a.75.75 0 0 1 0 1.5h-8.5a.75.75 0 0 1 0-1.5Zm0 5h8.5a.75.75 0 0 1 0 1.5h-8.5a.75.75 0 0 1 0-1.5Zm0 5h8.5a.75.75 0 0 1 0 1.5h-8.5a.75.75 0 0 1 0-1.5ZM2 14a1 1 0 1 1 0-2 1 1 0 0 1 0 2Zm1-6a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM2 4a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg></button></div><div class=\"Box-sc-g0xbh4-0 bJMeLZ js-snippet-clipboard-copy-unpositioned\" data-hpc=\"true\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div class=\"markdown-heading\" dir=\"auto\"><h1 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-transitions-module\"></a> transitions</h1><a id=\"user-content--transitions\" class=\"anchor-element\" aria-label=\"Permalink:  transitions\" href=\"#-transitions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\"><a href=\"https://github.com/pytransitions/transitions\"><img src=\"https://camo.githubusercontent.com/d6baca485dfbf799d6151bf81dd002d7fca1db34a0b71ba4b662f327482918c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d76302e392e312d6f72616e67652e737667\" alt=\"Version\" data-canonical-src=\"https://img.shields.io/badge/version-v0.9.1-orange.svg\" style=\"max-width: 100%;\"></a><a href=\"https://github.com/pytransitions/transitions/actions?query=workflow%3Apytest\"><img src=\"https://github.com/pytransitions/transitions/actions/workflows/pytest.yml/badge.svg\" alt=\"Build Status\" style=\"max-width: 100%;\"></a><a href=\"https://app.codecov.io/gh/pytransitions/transitions/tree/master\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/ff04b833af469e7aeb51927a08be1fc05186c43503455d6797ae6b8afc24b354/68747470733a2f2f636f6465636f762e696f2f67682f70797472616e736974696f6e732f7472616e736974696f6e732f6272616e63682f6d61737465722f6772617068732f62616467652e737667\" alt=\"Coverage Status\" data-canonical-src=\"https://codecov.io/gh/pytransitions/transitions/branch/master/graphs/badge.svg\" style=\"max-width: 100%;\"></a><a href=\"https://pypi.org/project/transitions\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/cf6dc1cb34254b56d57011b498a3470f1dfa0810551bb2fceebe53e4bf73237e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7472616e736974696f6e732e737667\" alt=\"PyPi\" data-canonical-src=\"https://img.shields.io/pypi/v/transitions.svg\" style=\"max-width: 100%;\"></a><a href=\"https://copr.fedorainfracloud.org/coprs/aleneum/python3-transitions/package/python3-transitions\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/ec9787a62799f159144dd580628564772db234ab438ff484f43598db3c42afc0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e3f636f6c6f723d626c7565266c6162656c3d636f70722671756572793d6275696c64732e6c61746573742e736f757263655f7061636b6167652e76657273696f6e2675726c3d6874747073253341253246253246636f70722e6665646f7261696e667261636c6f75642e6f72672532466170695f332532467061636b6167652533466f776e65726e616d65253344616c656e65756d25323670726f6a6563746e616d65253344707974686f6e332d7472616e736974696f6e732532367061636b6167656e616d65253344707974686f6e332d7472616e736974696f6e73253236776974685f6c61746573745f6275696c6425334454727565\" alt=\"Copr\" data-canonical-src=\"https://img.shields.io/badge/dynamic/json?color=blue&amp;label=copr&amp;query=builds.latest.source_package.version&amp;url=https%3A%2F%2Fcopr.fedorainfracloud.org%2Fapi_3%2Fpackage%3Fownername%3Daleneum%26projectname%3Dpython3-transitions%26packagename%3Dpython3-transitions%26with_latest_build%3DTrue\" style=\"max-width: 100%;\"></a><a href=\"https://github.com/pytransitions/transitions/compare/0.9.0...master\"><img src=\"https://camo.githubusercontent.com/e5b4b065eee7b4ea402b0c2f5cf8cfd3ab7aa80c3d033c77bce6eeea7373cd7b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d6974732d73696e63652f70797472616e736974696f6e732f7472616e736974696f6e732f302e392e302e737667\" alt=\"GitHub commits\" data-canonical-src=\"https://img.shields.io/github/commits-since/pytransitions/transitions/0.9.0.svg\" style=\"max-width: 100%;\"></a><a href=\"/pytransitions/transitions/blob/master/LICENSE\"><img src=\"https://camo.githubusercontent.com/76b28e42006f2e7c2ca988afcc3e503f9f375f976ff4e55ba218f16a4d359b69/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f70797472616e736974696f6e732f7472616e736974696f6e732e737667\" alt=\"License\" data-canonical-src=\"https://img.shields.io/github/license/pytransitions/transitions.svg\" style=\"max-width: 100%;\"></a><a href=\"https://mybinder.org/v2/gh/pytransitions/transitions/master?filepath=examples%2FPlayground.ipynb\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/e91e1d353a8b6acf0b42547ac3901f2c30138a3abaaa3d3c242da30b5b4f8426/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\" alt=\"Binder\" data-canonical-src=\"https://mybinder.org/badge_logo.svg\" style=\"max-width: 100%;\"></a></p><p dir=\"auto\">A lightweight, object-oriented state machine implementation in Python with many extensions. Compatible with Python 2.7+ and 3.0+.</p><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Installation</h2><a id=\"user-content-installation\" class=\"anchor-element\" aria-label=\"Permalink: Installation\" href=\"#installation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"pip install transitions\"><pre class=\"notranslate\"><code>pip install transitions</code></pre></div><p dir=\"auto\">... or clone the repo from GitHub and then:</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"python setup.py install\"><pre class=\"notranslate\"><code>python setup.py install</code></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Table of Contents</h2><a id=\"user-content-table-of-contents\" class=\"anchor-element\" aria-label=\"Permalink: Table of Contents\" href=\"#table-of-contents\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><ul dir=\"auto\"><li><a href=\"#quickstart\">Quickstart</a></li><li><a href=\"#the-non-quickstart\">Non-Quickstart</a><ul dir=\"auto\"><li><a href=\"#basic-initialization\">Basic initialization</a></li><li><a href=\"#states\">States</a><ul dir=\"auto\"><li><a href=\"#state-callbacks\">Callbacks</a></li><li><a href=\"#checking-state\">Checking state</a></li><li><a href=\"#enum-state\">Enumerations</a></li></ul></li><li><a href=\"#transitions\">Transitions</a><ul dir=\"auto\"><li><a href=\"#automatic-transitions-for-all-states\">Automatic transitions</a></li><li><a href=\"#transitioning-from-multiple-states\">Transitioning from multiple states</a></li><li><a href=\"#reflexive-from-multiple-states\">Reflexive transitions from multiple states</a></li><li><a href=\"#internal-transitions\">Internal transitions</a></li><li><a href=\"#ordered-transitions\">Ordered transitions</a></li><li><a href=\"#queued-transitions\">Queued transitions</a></li><li><a href=\"#conditional-transitions\">Conditional transitions</a></li><li><a href=\"#check-transitions\">Check transitions</a></li><li><a href=\"#transition-callbacks\">Callbacks</a></li></ul></li><li><a href=\"#resolution\">Callable resolution</a></li><li><a href=\"#execution-order\">Callback execution order</a></li><li><a href=\"#passing-data\">Passing data</a></li><li><a href=\"#alternative-initialization-patterns\">Alternative initialization patterns</a></li><li><a href=\"#logging\">Logging</a></li><li><a href=\"#restoring\">(Re-)Storing machine instances</a></li><li><a href=\"#extensions\">Extensions</a><ul dir=\"auto\"><li><a href=\"#diagrams\">Diagrams</a></li><li><a href=\"#hsm\">Hierarchical State Machine</a></li><li><a href=\"#threading\">Threading</a></li><li><a href=\"#async\">Async</a></li><li><a href=\"#state-features\">State features</a></li><li><a href=\"#django-support\">Django</a></li></ul></li><li><a href=\"#bug-reports\">Bug reports etc.</a></li></ul></li></ul><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Quickstart</h2><a id=\"user-content-quickstart\" class=\"anchor-element\" aria-label=\"Permalink: Quickstart\" href=\"#quickstart\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">They say <a href=\"https://www.google.com/webhp?ie=UTF-8#q=%22a+good+example+is+worth%22&amp;start=20\" rel=\"nofollow\">a good example is worth</a> 100 pages of API documentation, a million directives, or a thousand words.</p><p dir=\"auto\">Well, \"they\" probably lie... but here's an example anyway:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions import Machineimport randomclass NarcolepticSuperhero(object):    # Define some states. Most of the time, narcoleptic superheroes are just like    # everyone else. Except for...    states = ['asleep', 'hanging out', 'hungry', 'sweaty', 'saving the world']    def __init__(self, name):        # No anonymous superheroes on my watch! Every narcoleptic superhero gets        # a name. Any name at all. SleepyMan. SlumberGirl. You get the idea.        self.name = name        # What have we accomplished today?        self.kittens_rescued = 0        # Initialize the state machine        self.machine = Machine(model=self, states=NarcolepticSuperhero.states, initial='asleep')        # Add some transitions. We could also define these using a static list of        # dictionaries, as we did with states above, and then pass the list to        # the Machine initializer as the transitions= argument.        # At some point, every superhero must rise and shine.        self.machine.add_transition(trigger='wake_up', source='asleep', dest='hanging out')        # Superheroes need to keep in shape.        self.machine.add_transition('work_out', 'hanging out', 'hungry')        # Those calories won't replenish themselves!        self.machine.add_transition('eat', 'hungry', 'hanging out')        # Superheroes are always on call. ALWAYS. But they're not always        # dressed in work-appropriate clothing.        self.machine.add_transition('distress_call', '*', 'saving the world',                         before='change_into_super_secret_costume')        # When they get off work, they're all sweaty and disgusting. But before        # they do anything else, they have to meticulously log their latest        # escapades. Because the legal department says so.        self.machine.add_transition('complete_mission', 'saving the world', 'sweaty',                         after='update_journal')        # Sweat is a disorder that can be remedied with water.        # Unless you've had a particularly long day, in which case... bed time!        self.machine.add_transition('clean_up', 'sweaty', 'asleep', conditions=['is_exhausted'])        self.machine.add_transition('clean_up', 'sweaty', 'hanging out')        # Our NarcolepticSuperhero can fall asleep at pretty much any time.        self.machine.add_transition('nap', '*', 'asleep')    def update_journal(self):        &quot;&quot;&quot; Dear Diary, today I saved Mr. Whiskers. Again. &quot;&quot;&quot;        self.kittens_rescued += 1    @property    def is_exhausted(self):        &quot;&quot;&quot; Basically a coin toss. &quot;&quot;&quot;        return random.random() &lt; 0.5    def change_into_super_secret_costume(self):        print(&quot;Beauty, eh?&quot;)\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">Machine</span><span class=\"pl-k\">import</span> <span class=\"pl-s1\">random</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">NarcolepticSuperhero</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-c\"># Define some states. Most of the time, narcoleptic superheroes are just like</span>    <span class=\"pl-c\"># everyone else. Except for...</span>    <span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'asleep'</span>, <span class=\"pl-s\">'hanging out'</span>, <span class=\"pl-s\">'hungry'</span>, <span class=\"pl-s\">'sweaty'</span>, <span class=\"pl-s\">'saving the world'</span>]    <span class=\"pl-k\">def</span> <span class=\"pl-en\">__init__</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">name</span>):        <span class=\"pl-c\"># No anonymous superheroes on my watch! Every narcoleptic superhero gets</span>        <span class=\"pl-c\"># a name. Any name at all. SleepyMan. SlumberGirl. You get the idea.</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">name</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">name</span>        <span class=\"pl-c\"># What have we accomplished today?</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">kittens_rescued</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>        <span class=\"pl-c\"># Initialize the state machine</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-v\">NarcolepticSuperhero</span>.<span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'asleep'</span>)        <span class=\"pl-c\"># Add some transitions. We could also define these using a static list of</span>        <span class=\"pl-c\"># dictionaries, as we did with states above, and then pass the list to</span>        <span class=\"pl-c\"># the Machine initializer as the transitions= argument.</span>        <span class=\"pl-c\"># At some point, every superhero must rise and shine.</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s1\">trigger</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'wake_up'</span>, <span class=\"pl-s1\">source</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'asleep'</span>, <span class=\"pl-s1\">dest</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'hanging out'</span>)        <span class=\"pl-c\"># Superheroes need to keep in shape.</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'work_out'</span>, <span class=\"pl-s\">'hanging out'</span>, <span class=\"pl-s\">'hungry'</span>)        <span class=\"pl-c\"># Those calories won't replenish themselves!</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'eat'</span>, <span class=\"pl-s\">'hungry'</span>, <span class=\"pl-s\">'hanging out'</span>)        <span class=\"pl-c\"># Superheroes are always on call. ALWAYS. But they're not always</span>        <span class=\"pl-c\"># dressed in work-appropriate clothing.</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'distress_call'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-s\">'saving the world'</span>,                         <span class=\"pl-s1\">before</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'change_into_super_secret_costume'</span>)        <span class=\"pl-c\"># When they get off work, they're all sweaty and disgusting. But before</span>        <span class=\"pl-c\"># they do anything else, they have to meticulously log their latest</span>        <span class=\"pl-c\"># escapades. Because the legal department says so.</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'complete_mission'</span>, <span class=\"pl-s\">'saving the world'</span>, <span class=\"pl-s\">'sweaty'</span>,                         <span class=\"pl-s1\">after</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'update_journal'</span>)        <span class=\"pl-c\"># Sweat is a disorder that can be remedied with water.</span>        <span class=\"pl-c\"># Unless you've had a particularly long day, in which case... bed time!</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'clean_up'</span>, <span class=\"pl-s\">'sweaty'</span>, <span class=\"pl-s\">'asleep'</span>, <span class=\"pl-s1\">conditions</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'is_exhausted'</span>])        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'clean_up'</span>, <span class=\"pl-s\">'sweaty'</span>, <span class=\"pl-s\">'hanging out'</span>)        <span class=\"pl-c\"># Our NarcolepticSuperhero can fall asleep at pretty much any time.</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'nap'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-s\">'asleep'</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">update_journal</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-s\">\"\"\" Dear Diary, today I saved Mr. Whiskers. Again. \"\"\"</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">kittens_rescued</span> <span class=\"pl-c1\">+=</span> <span class=\"pl-c1\">1</span>    <span class=\"pl-en\">@<span class=\"pl-s1\">property</span></span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">is_exhausted</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-s\">\"\"\" Basically a coin toss. \"\"\"</span>        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">random</span>.<span class=\"pl-en\">random</span>() <span class=\"pl-c1\">&lt;</span> <span class=\"pl-c1\">0.5</span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">change_into_super_secret_costume</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"Beauty, eh?\"</span>)</pre></div><p dir=\"auto\">There, now you've baked a state machine into <code>NarcolepticSuperhero</code>. Let's take him/her/it out for a spin...</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&gt;&gt;&gt; batman = NarcolepticSuperhero(&quot;Batman&quot;)&gt;&gt;&gt; batman.state'asleep'&gt;&gt;&gt; batman.wake_up()&gt;&gt;&gt; batman.state'hanging out'&gt;&gt;&gt; batman.nap()&gt;&gt;&gt; batman.state'asleep'&gt;&gt;&gt; batman.clean_up()MachineError: &quot;Can't trigger event clean_up from state asleep!&quot;&gt;&gt;&gt; batman.wake_up()&gt;&gt;&gt; batman.work_out()&gt;&gt;&gt; batman.state'hungry'# Batman still hasn't done anything useful...&gt;&gt;&gt; batman.kittens_rescued0# We now take you live to the scene of a horrific kitten entreement...&gt;&gt;&gt; batman.distress_call()'Beauty, eh?'&gt;&gt;&gt; batman.state'saving the world'# Back to the crib.&gt;&gt;&gt; batman.complete_mission()&gt;&gt;&gt; batman.state'sweaty'&gt;&gt;&gt; batman.clean_up()&gt;&gt;&gt; batman.state'asleep'   # Too tired to shower!# Another productive day, Alfred.&gt;&gt;&gt; batman.kittens_rescued1\"><pre><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">NarcolepticSuperhero</span>(<span class=\"pl-s\">\"Batman\"</span>)<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-s1\">state</span><span class=\"pl-s\">'asleep'</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-en\">wake_up</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-s1\">state</span><span class=\"pl-s\">'hanging out'</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-en\">nap</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-s1\">state</span><span class=\"pl-s\">'asleep'</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-en\">clean_up</span>()<span class=\"pl-v\">MachineError</span>: <span class=\"pl-s\">\"Can't trigger event clean_up from state asleep!\"</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-en\">wake_up</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-en\">work_out</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-s1\">state</span><span class=\"pl-s\">'hungry'</span><span class=\"pl-c\"># Batman still hasn't done anything useful...</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-s1\">kittens_rescued</span><span class=\"pl-c1\">0</span><span class=\"pl-c\"># We now take you live to the scene of a horrific kitten entreement...</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-en\">distress_call</span>()<span class=\"pl-s\">'Beauty, eh?'</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-s1\">state</span><span class=\"pl-s\">'saving the world'</span><span class=\"pl-c\"># Back to the crib.</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-en\">complete_mission</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-s1\">state</span><span class=\"pl-s\">'sweaty'</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-en\">clean_up</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-s1\">state</span><span class=\"pl-s\">'asleep'</span>   <span class=\"pl-c\"># Too tired to shower!</span><span class=\"pl-c\"># Another productive day, Alfred.</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">batman</span>.<span class=\"pl-s1\">kittens_rescued</span><span class=\"pl-c1\">1</span></pre></div><p dir=\"auto\">While we cannot read the mind of the actual batman, we surely can visualize the current state of our <code>NarcolepticSuperhero</code>.</p><p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/205986/104932302-c2f24580-59a7-11eb-8963-5dce738b9305.png\"><img src=\"https://user-images.githubusercontent.com/205986/104932302-c2f24580-59a7-11eb-8963-5dce738b9305.png\" alt=\"batman diagram\" style=\"max-width: 100%;\"></a></p><p dir=\"auto\">Have a look at the <a href=\"#diagrams\">Diagrams</a> extensions if you want to know how.</p><div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">The non-quickstart</h2><a id=\"user-content-the-non-quickstart\" class=\"anchor-element\" aria-label=\"Permalink: The non-quickstart\" href=\"#the-non-quickstart\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Basic initialization</h3><a id=\"user-content-basic-initialization\" class=\"anchor-element\" aria-label=\"Permalink: Basic initialization\" href=\"#basic-initialization\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Getting a state machine up and running is pretty simple. Let's say you have the object <code>lump</code> (an instance of class <code>Matter</code>), and you want to manage its states:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Matter(object):    passlump = Matter()\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">pass</span><span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()</pre></div><p dir=\"auto\">You can initialize a (<em>minimal</em>) working state machine bound to <code>lump</code> like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions import Machinemachine = Machine(model=lump, states=['solid', 'liquid', 'gas', 'plasma'], initial='solid')# Lump now has state!lump.state&gt;&gt;&gt; 'solid'\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">Machine</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'plasma'</span>], <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)<span class=\"pl-c\"># Lump now has state!</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'solid'</span></pre></div><p dir=\"auto\">I say \"minimal\", because while this state machine is technically operational, it doesn't actually <em>do</em> anything. It starts in the <code>'solid'</code> state, but won't ever move into another state, because no transitions are defined... yet!</p><p dir=\"auto\">Let's try again.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# The statesstates=['solid', 'liquid', 'gas', 'plasma']# And some transitions between states. We're lazy, so we'll leave out# the inverse phase transitions (freezing, condensation, etc.).transitions = [    { 'trigger': 'melt', 'source': 'solid', 'dest': 'liquid' },    { 'trigger': 'evaporate', 'source': 'liquid', 'dest': 'gas' },    { 'trigger': 'sublimate', 'source': 'solid', 'dest': 'gas' },    { 'trigger': 'ionize', 'source': 'gas', 'dest': 'plasma' }]# Initializemachine = Machine(lump, states=states, transitions=transitions, initial='liquid')# Now lump maintains state...lump.state&gt;&gt;&gt; 'liquid'# And that state can change...lump.evaporate()lump.state&gt;&gt;&gt; 'gas'lump.trigger('ionize')lump.state&gt;&gt;&gt; 'plasma'\"><pre><span class=\"pl-c\"># The states</span><span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'plasma'</span>]<span class=\"pl-c\"># And some transitions between states. We're lazy, so we'll leave out</span><span class=\"pl-c\"># the inverse phase transitions (freezing, condensation, etc.).</span><span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [    { <span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'melt'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'liquid'</span> },    { <span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'evaporate'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'gas'</span> },    { <span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'sublimate'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'gas'</span> },    { <span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'ionize'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'plasma'</span> }]<span class=\"pl-c\"># Initialize</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'liquid'</span>)<span class=\"pl-c\"># Now lump maintains state...</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'liquid'</span><span class=\"pl-c\"># And that state can change...</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">evaporate</span>()<span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'gas'</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">trigger</span>(<span class=\"pl-s\">'ionize'</span>)<span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'plasma'</span></pre></div><p dir=\"auto\">Notice the shiny new methods attached to the <code>Matter</code> instance (<code>evaporate()</code>, <code>ionize()</code>, etc.). Each method triggers the corresponding transition. You don't have to explicitly define these methods anywhere; the name of each transition is bound to the model passed to the <code>Machine</code> initializer (in this case, <code>lump</code>).To be more precise, your model <strong>should not</strong> already contain methods with the same name as event triggers since <code>transitions</code> will only attach convenience methods to your model if the spot is not already taken.If you want to modify that behaviour, have a look at the <a href=\"/pytransitions/transitions/blob/master/examples/Frequently%20asked%20questions.ipynb\">FAQ</a>.Furthermore, there is a method called <code>trigger</code> now attached to your model (if it hasn't been there before).This method lets you execute transitions by name in case dynamic triggering is required.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-states\"></a>States</h3><a id=\"user-content-states\" class=\"anchor-element\" aria-label=\"Permalink: States\" href=\"#states\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">The soul of any good state machine (and of many bad ones, no doubt) is a set of states. Above, we defined the valid model states by passing a list of strings to the <code>Machine</code> initializer. But internally, states are actually represented as <code>State</code> objects.</p><p dir=\"auto\">You can initialize and modify States in a number of ways. Specifically, you can:</p><ul dir=\"auto\"><li>pass a string to the <code>Machine</code> initializer giving the name(s) of the state(s), or</li><li>directly initialize each new <code>State</code> object, or</li><li>pass a dictionary with initialization arguments</li></ul><p dir=\"auto\">The following snippets illustrate several ways to achieve the same goal:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# import Machine and State classfrom transitions import Machine, State# Create a list of 3 states to pass to the Machine# initializer. We can mix types; in this case, we# pass one State, one string, and one dict.states = [    State(name='solid'),    'liquid',    { 'name': 'gas'}    ]machine = Machine(lump, states)# This alternative example illustrates more explicit# addition of states and state callbacks, but the net# result is identical to the above.machine = Machine(lump)solid = State('solid')liquid = State('liquid')gas = State('gas')machine.add_states([solid, liquid, gas])\"><pre><span class=\"pl-c\"># import Machine and State class</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">Machine</span>, <span class=\"pl-v\">State</span><span class=\"pl-c\"># Create a list of 3 states to pass to the Machine</span><span class=\"pl-c\"># initializer. We can mix types; in this case, we</span><span class=\"pl-c\"># pass one State, one string, and one dict.</span><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [    <span class=\"pl-v\">State</span>(<span class=\"pl-s1\">name</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>),    <span class=\"pl-s\">'liquid'</span>,    { <span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'gas'</span>}    ]<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span>)<span class=\"pl-c\"># This alternative example illustrates more explicit</span><span class=\"pl-c\"># addition of states and state callbacks, but the net</span><span class=\"pl-c\"># result is identical to the above.</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>)<span class=\"pl-s1\">solid</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">State</span>(<span class=\"pl-s\">'solid'</span>)<span class=\"pl-s1\">liquid</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">State</span>(<span class=\"pl-s\">'liquid'</span>)<span class=\"pl-s1\">gas</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">State</span>(<span class=\"pl-s\">'gas'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_states</span>([<span class=\"pl-s1\">solid</span>, <span class=\"pl-s1\">liquid</span>, <span class=\"pl-s1\">gas</span>])</pre></div><p dir=\"auto\">States are initialized <em>once</em> when added to the machine and will persist until they are removed from it. In other words: if you alter the attributes of a state object, this change will NOT be reset the next time you enter that state. Have a look at how to <a href=\"#state-features\">extend state features</a> in case you require some other behaviour.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-state-callbacks\"></a>Callbacks</h4><a id=\"user-content-callbacks\" class=\"anchor-element\" aria-label=\"Permalink: Callbacks\" href=\"#callbacks\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">A <code>State</code> can also be associated with a list of <code>enter</code> and <code>exit</code> callbacks, which are called whenever the state machine enters or leaves that state. You can specify callbacks during initialization by passing them to a <code>State</code> object constructor, in a state property dictionary, or add them later.</p><p dir=\"auto\">For convenience, whenever a new <code>State</code> is added to a <code>Machine</code>, the methods <code>on_enter_\u00abstate name\u00bb</code> and <code>on_exit_\u00abstate name\u00bb</code> are dynamically created on the Machine (not on the model!), which allow you to dynamically add new enter and exit callbacks later if you need them.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Our old Matter class, now with  a couple of new methods we# can trigger when entering or exit states.class Matter(object):    def say_hello(self): print(&quot;hello, new state!&quot;)    def say_goodbye(self): print(&quot;goodbye, old state!&quot;)lump = Matter()# Same states as above, but now we give StateA an exit callbackstates = [    State(name='solid', on_exit=['say_goodbye']),    'liquid',    { 'name': 'gas', 'on_exit': ['say_goodbye']}    ]machine = Machine(lump, states=states)machine.add_transition('sublimate', 'solid', 'gas')# Callbacks can also be added after initialization using# the dynamically added on_enter_ and on_exit_ methods.# Note that the initial call to add the callback is made# on the Machine and not on the model.machine.on_enter_gas('say_hello')# Test out the callbacks...machine.set_state('solid')lump.sublimate()&gt;&gt;&gt; 'goodbye, old state!'&gt;&gt;&gt; 'hello, new state!'\"><pre><span class=\"pl-c\"># Our old Matter class, now with  a couple of new methods we</span><span class=\"pl-c\"># can trigger when entering or exit states.</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">say_hello</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"hello, new state!\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">say_goodbye</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"goodbye, old state!\"</span>)<span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-c\"># Same states as above, but now we give StateA an exit callback</span><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [    <span class=\"pl-v\">State</span>(<span class=\"pl-s1\">name</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>, <span class=\"pl-s1\">on_exit</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'say_goodbye'</span>]),    <span class=\"pl-s\">'liquid'</span>,    { <span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'on_exit'</span>: [<span class=\"pl-s\">'say_goodbye'</span>]}    ]<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'sublimate'</span>, <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'gas'</span>)<span class=\"pl-c\"># Callbacks can also be added after initialization using</span><span class=\"pl-c\"># the dynamically added on_enter_ and on_exit_ methods.</span><span class=\"pl-c\"># Note that the initial call to add the callback is made</span><span class=\"pl-c\"># on the Machine and not on the model.</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">on_enter_gas</span>(<span class=\"pl-s\">'say_hello'</span>)<span class=\"pl-c\"># Test out the callbacks...</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">set_state</span>(<span class=\"pl-s\">'solid'</span>)<span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">sublimate</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'goodbye, old state!'</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'hello, new state!'</span></pre></div><p dir=\"auto\">Note that <code>on_enter_\u00abstate name\u00bb</code> callback will <em>not</em> fire when a Machine is first initialized. For example if you have an <code>on_enter_A()</code> callback defined, and initialize the <code>Machine</code> with <code>initial='A'</code>, <code>on_enter_A()</code> will not be fired until the next time you enter state <code>A</code>. (If you need to make sure <code>on_enter_A()</code> fires at initialization, you can simply create a dummy initial state and then explicitly call <code>to_A()</code> inside the <code>__init__</code> method.)</p><p dir=\"auto\">In addition to passing in callbacks when initializing a <code>State</code>, or adding them dynamically, it's also possible to define callbacks in the model class itself, which may increase code clarity. For example:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Matter(object):    def say_hello(self): print(&quot;hello, new state!&quot;)    def say_goodbye(self): print(&quot;goodbye, old state!&quot;)    def on_enter_A(self): print(&quot;We've just entered state A!&quot;)lump = Matter()machine = Machine(lump, states=['A', 'B', 'C'])\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">say_hello</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"hello, new state!\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">say_goodbye</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"goodbye, old state!\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">on_enter_A</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"We've just entered state A!\"</span>)<span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'C'</span>])</pre></div><p dir=\"auto\">Now, any time <code>lump</code> transitions to state <code>A</code>, the <code>on_enter_A()</code> method defined in the <code>Matter</code> class will fire.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-checking-state\"></a>Checking state</h4><a id=\"user-content-checking-state\" class=\"anchor-element\" aria-label=\"Permalink: Checking state\" href=\"#checking-state\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">You can always check the current state of the model by either:</p><ul dir=\"auto\"><li>inspecting the <code>.state</code> attribute, or</li><li>calling <code>is_\u00abstate name\u00bb()</code></li></ul><p dir=\"auto\">And if you want to retrieve the actual <code>State</code> object for the current state, you can do that through the <code>Machine</code> instance's <code>get_state()</code> method.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"lump.state&gt;&gt;&gt; 'solid'lump.is_gas()&gt;&gt;&gt; Falselump.is_solid()&gt;&gt;&gt; Truemachine.get_state(lump.state).name&gt;&gt;&gt; 'solid'\"><pre><span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'solid'</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">is_gas</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">False</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">is_solid</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">True</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">get_state</span>(<span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span>).<span class=\"pl-s1\">name</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'solid'</span></pre></div><p dir=\"auto\">If you'd like you can choose your own state attribute name by passing the <code>model_attribute</code> argument while initializing the <code>Machine</code>. This will also change the name of <code>is_\u00abstate name\u00bb()</code> to <code>is_\u00abmodel_attribute\u00bb_\u00abstate name\u00bb()</code> though. Similarly, auto transitions will be named <code>to_\u00abmodel_attribute\u00bb_\u00abstate name\u00bb()</code> instead of <code>to_\u00abstate name\u00bb()</code>. This is done to allow multiple machines to work on the same model with individual state attribute names.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"lump = Matter()machine = Machine(lump, states=['solid', 'liquid', 'gas'],  model_attribute='matter_state', initial='solid')lump.matter_state&gt;&gt;&gt; 'solid'# with a custom 'model_attribute', states can also be checked like this:lump.is_matter_state_solid()&gt;&gt;&gt; Truelump.to_matter_state_gas()&gt;&gt;&gt; True\"><pre><span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>],  <span class=\"pl-s1\">model_attribute</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'matter_state'</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)<span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">matter_state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'solid'</span><span class=\"pl-c\"># with a custom 'model_attribute', states can also be checked like this:</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">is_matter_state_solid</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">True</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">to_matter_state_gas</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">True</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-enum-state\"></a>Enumerations</h4><a id=\"user-content-enumerations\" class=\"anchor-element\" aria-label=\"Permalink: Enumerations\" href=\"#enumerations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">So far we have seen how we can give state names and use these names to work with our state machine.If you favour stricter typing and more IDE code completion (or you just can't type 'sesquipedalophobia' any longer because the word scares you) using <a href=\"https://docs.python.org/3/library/enum.html\" rel=\"nofollow\">Enumerations</a> might be what you are looking for:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import enum  # Python 2.7 users need to have 'enum34' installedfrom transitions import Machineclass States(enum.Enum):    ERROR = 0    RED = 1    YELLOW = 2    GREEN = 3transitions = [['proceed', States.RED, States.YELLOW],               ['proceed', States.YELLOW, States.GREEN],               ['error', '*', States.ERROR]]m = Machine(states=States, transitions=transitions, initial=States.RED)assert m.is_RED()assert m.state is States.REDstate = m.get_state(States.RED)  # get transitions.State objectprint(state.name)  # &gt;&gt;&gt; REDm.proceed()m.proceed()assert m.is_GREEN()m.error()assert m.state is States.ERROR\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">enum</span>  <span class=\"pl-c\"># Python 2.7 users need to have 'enum34' installed</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">Machine</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">States</span>(<span class=\"pl-s1\">enum</span>.<span class=\"pl-v\">Enum</span>):    <span class=\"pl-v\">ERROR</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>    <span class=\"pl-v\">RED</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">1</span>    <span class=\"pl-v\">YELLOW</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">2</span>    <span class=\"pl-v\">GREEN</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">3</span><span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [[<span class=\"pl-s\">'proceed'</span>, <span class=\"pl-v\">States</span>.<span class=\"pl-v\">RED</span>, <span class=\"pl-v\">States</span>.<span class=\"pl-v\">YELLOW</span>],               [<span class=\"pl-s\">'proceed'</span>, <span class=\"pl-v\">States</span>.<span class=\"pl-v\">YELLOW</span>, <span class=\"pl-v\">States</span>.<span class=\"pl-v\">GREEN</span>],               [<span class=\"pl-s\">'error'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-v\">States</span>.<span class=\"pl-v\">ERROR</span>]]<span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-v\">States</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-v\">States</span>.<span class=\"pl-v\">RED</span>)<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">is_RED</span>()<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">m</span>.<span class=\"pl-s1\">state</span> <span class=\"pl-c1\">is</span> <span class=\"pl-v\">States</span>.<span class=\"pl-v\">RED</span><span class=\"pl-s1\">state</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">get_state</span>(<span class=\"pl-v\">States</span>.<span class=\"pl-v\">RED</span>)  <span class=\"pl-c\"># get transitions.State object</span><span class=\"pl-en\">print</span>(<span class=\"pl-s1\">state</span>.<span class=\"pl-s1\">name</span>)  <span class=\"pl-c\"># &gt;&gt;&gt; RED</span><span class=\"pl-s1\">m</span>.<span class=\"pl-en\">proceed</span>()<span class=\"pl-s1\">m</span>.<span class=\"pl-en\">proceed</span>()<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">is_GREEN</span>()<span class=\"pl-s1\">m</span>.<span class=\"pl-en\">error</span>()<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">m</span>.<span class=\"pl-s1\">state</span> <span class=\"pl-c1\">is</span> <span class=\"pl-v\">States</span>.<span class=\"pl-v\">ERROR</span></pre></div><p dir=\"auto\">You can mix enums and strings if you like (e.g. <code>[States.RED, 'ORANGE', States.YELLOW, States.GREEN]</code>) but note that internally, <code>transitions</code> will still handle states by name (<code>enum.Enum.name</code>).Thus, it is not possible to have the states <code>'GREEN'</code> and <code>States.GREEN</code> at the same time.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-transitions\"></a>Transitions</h3><a id=\"user-content-transitions\" class=\"anchor-element\" aria-label=\"Permalink: Transitions\" href=\"#transitions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Some of the above examples already illustrate the use of transitions in passing, but here we'll explore them in more detail.</p><p dir=\"auto\">As with states, each transition is represented internally as its own object \u2013 an instance of class <code>Transition</code>. The quickest way to initialize a set of transitions is to pass a dictionary, or list of dictionaries, to the <code>Machine</code> initializer. We already saw this above:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"transitions = [    { 'trigger': 'melt', 'source': 'solid', 'dest': 'liquid' },    { 'trigger': 'evaporate', 'source': 'liquid', 'dest': 'gas' },    { 'trigger': 'sublimate', 'source': 'solid', 'dest': 'gas' },    { 'trigger': 'ionize', 'source': 'gas', 'dest': 'plasma' }]machine = Machine(model=Matter(), states=states, transitions=transitions)\"><pre><span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [    { <span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'melt'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'liquid'</span> },    { <span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'evaporate'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'gas'</span> },    { <span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'sublimate'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'gas'</span> },    { <span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'ionize'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'plasma'</span> }]<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-v\">Matter</span>(), <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>)</pre></div><p dir=\"auto\">Defining transitions in dictionaries has the benefit of clarity, but can be cumbersome. If you're after brevity, you might choose to define transitions using lists. Just make sure that the elements in each list are in the same order as the positional arguments in the <code>Transition</code> initialization (i.e., <code>trigger</code>, <code>source</code>, <code>destination</code>, etc.).</p><p dir=\"auto\">The following list-of-lists is functionally equivalent to the list-of-dictionaries above:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"transitions = [    ['melt', 'solid', 'liquid'],    ['evaporate', 'liquid', 'gas'],    ['sublimate', 'solid', 'gas'],    ['ionize', 'gas', 'plasma']]\"><pre><span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [    [<span class=\"pl-s\">'melt'</span>, <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>],    [<span class=\"pl-s\">'evaporate'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>],    [<span class=\"pl-s\">'sublimate'</span>, <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'gas'</span>],    [<span class=\"pl-s\">'ionize'</span>, <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'plasma'</span>]]</pre></div><p dir=\"auto\">Alternatively, you can add transitions to a <code>Machine</code> after initialization:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine = Machine(model=lump, states=states, initial='solid')machine.add_transition('melt', source='solid', dest='liquid')\"><pre><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'melt'</span>, <span class=\"pl-s1\">source</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>, <span class=\"pl-s1\">dest</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'liquid'</span>)</pre></div><p dir=\"auto\">The <code>trigger</code> argument defines the name of the new triggering method that gets attached to the base model. When this method is called, it will try to execute the transition:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&gt;&gt;&gt; lump.melt()&gt;&gt;&gt; lump.state'liquid'\"><pre><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">melt</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span><span class=\"pl-s\">'liquid'</span></pre></div><p dir=\"auto\">By default, calling an invalid trigger will raise an exception:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&gt;&gt;&gt; lump.to_gas()&gt;&gt;&gt; # This won't work because only objects in a solid state can melt&gt;&gt;&gt; lump.melt()transitions.core.MachineError: &quot;Can't trigger event melt from state gas!&quot;\"><pre><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">to_gas</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c\"># This won't work because only objects in a solid state can melt</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">melt</span>()<span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">core</span>.<span class=\"pl-v\">MachineError</span>: <span class=\"pl-s\">\"Can't trigger event melt from state gas!\"</span></pre></div><p dir=\"auto\">This behavior is generally desirable, since it helps alert you to problems in your code. But in some cases, you might want to silently ignore invalid triggers. You can do this by setting <code>ignore_invalid_triggers=True</code> (either on a state-by-state basis, or globally for all states):</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&gt;&gt;&gt; # Globally suppress invalid trigger exceptions&gt;&gt;&gt; m = Machine(lump, states, initial='solid', ignore_invalid_triggers=True)&gt;&gt;&gt; # ...or suppress for only one group of states&gt;&gt;&gt; states = ['new_state1', 'new_state2']&gt;&gt;&gt; m.add_states(states, ignore_invalid_triggers=True)&gt;&gt;&gt; # ...or even just for a single state. Here, exceptions will only be suppressed when the current state is A.&gt;&gt;&gt; states = [State('A', ignore_invalid_triggers=True), 'B', 'C']&gt;&gt;&gt; m = Machine(lump, states)&gt;&gt;&gt; # ...this can be inverted as well if just one state should raise an exception&gt;&gt;&gt; # since the machine's global value is not applied to a previously initialized state.&gt;&gt;&gt; states = ['A', 'B', State('C')] # the default value for 'ignore_invalid_triggers' is False&gt;&gt;&gt; m = Machine(lump, states, ignore_invalid_triggers=True)\"><pre><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c\"># Globally suppress invalid trigger exceptions</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>, <span class=\"pl-s1\">ignore_invalid_triggers</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c\"># ...or suppress for only one group of states</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'new_state1'</span>, <span class=\"pl-s\">'new_state2'</span>]<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">add_states</span>(<span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">ignore_invalid_triggers</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c\"># ...or even just for a single state. Here, exceptions will only be suppressed when the current state is A.</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-v\">State</span>(<span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">ignore_invalid_triggers</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>), <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'C'</span>]<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span>)<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c\"># ...this can be inverted as well if just one state should raise an exception</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c\"># since the machine's global value is not applied to a previously initialized state.</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-v\">State</span>(<span class=\"pl-s\">'C'</span>)] <span class=\"pl-c\"># the default value for 'ignore_invalid_triggers' is False</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">ignore_invalid_triggers</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)</pre></div><p dir=\"auto\">If you need to know which transitions are valid from a certain state, you can use <code>get_triggers</code>:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"m.get_triggers('solid')&gt;&gt;&gt; ['melt', 'sublimate']m.get_triggers('liquid')&gt;&gt;&gt; ['evaporate']m.get_triggers('plasma')&gt;&gt;&gt; []# you can also query several states at oncem.get_triggers('solid', 'liquid', 'gas', 'plasma')&gt;&gt;&gt; ['melt', 'evaporate', 'sublimate', 'ionize']\"><pre><span class=\"pl-s1\">m</span>.<span class=\"pl-en\">get_triggers</span>(<span class=\"pl-s\">'solid'</span>)<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> [<span class=\"pl-s\">'melt'</span>, <span class=\"pl-s\">'sublimate'</span>]<span class=\"pl-s1\">m</span>.<span class=\"pl-en\">get_triggers</span>(<span class=\"pl-s\">'liquid'</span>)<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> [<span class=\"pl-s\">'evaporate'</span>]<span class=\"pl-s1\">m</span>.<span class=\"pl-en\">get_triggers</span>(<span class=\"pl-s\">'plasma'</span>)<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> []<span class=\"pl-c\"># you can also query several states at once</span><span class=\"pl-s1\">m</span>.<span class=\"pl-en\">get_triggers</span>(<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'plasma'</span>)<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> [<span class=\"pl-s\">'melt'</span>, <span class=\"pl-s\">'evaporate'</span>, <span class=\"pl-s\">'sublimate'</span>, <span class=\"pl-s\">'ionize'</span>]</pre></div><p dir=\"auto\">If you have followed this documentation from the beginning, you will notice that <code>get_triggers</code> actually returns more triggers than the explicitly defined ones shown above, such as <code>to_liquid</code> and so on.These are called <code>auto-transitions</code> and will be introduced in the next section.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-automatic-transitions-for-all-states\"></a>Automatic transitions for all states</h4><a id=\"user-content-automatic-transitions-for-all-states\" class=\"anchor-element\" aria-label=\"Permalink: Automatic transitions for all states\" href=\"#automatic-transitions-for-all-states\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">In addition to any transitions added explicitly, a <code>to_\u00abstate\u00bb()</code> method is created automatically whenever a state is added to a <code>Machine</code> instance. This method transitions to the target state no matter which state the machine is currently in:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"lump.to_liquid()lump.state&gt;&gt;&gt; 'liquid'lump.to_solid()lump.state&gt;&gt;&gt; 'solid'\"><pre><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">to_liquid</span>()<span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'liquid'</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">to_solid</span>()<span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'solid'</span></pre></div><p dir=\"auto\">If you desire, you can disable this behavior by setting <code>auto_transitions=False</code> in the <code>Machine</code> initializer.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-transitioning-from-multiple-states\"></a>Transitioning from multiple states</h4><a id=\"user-content-transitioning-from-multiple-states\" class=\"anchor-element\" aria-label=\"Permalink: Transitioning from multiple states\" href=\"#transitioning-from-multiple-states\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">A given trigger can be attached to multiple transitions, some of which can potentially begin or end in the same state. For example:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine.add_transition('transmogrify', ['solid', 'liquid', 'gas'], 'plasma')machine.add_transition('transmogrify', 'plasma', 'solid')# This next transition will never executemachine.add_transition('transmogrify', 'plasma', 'gas')\"><pre><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'transmogrify'</span>, [<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>], <span class=\"pl-s\">'plasma'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'transmogrify'</span>, <span class=\"pl-s\">'plasma'</span>, <span class=\"pl-s\">'solid'</span>)<span class=\"pl-c\"># This next transition will never execute</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'transmogrify'</span>, <span class=\"pl-s\">'plasma'</span>, <span class=\"pl-s\">'gas'</span>)</pre></div><p dir=\"auto\">In this case, calling <code>transmogrify()</code> will set the model's state to <code>'solid'</code> if it's currently <code>'plasma'</code>, and set it to <code>'plasma'</code> otherwise. (Note that only the <em>first</em> matching transition will execute; thus, the transition defined in the last line above won't do anything.)</p><p dir=\"auto\">You can also make a trigger cause a transition from <em>all</em> states to a particular destination by using the <code>'*'</code> wildcard:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine.add_transition('to_liquid', '*', 'liquid')\"><pre><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'to_liquid'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-s\">'liquid'</span>)</pre></div><p dir=\"auto\">Note that wildcard transitions will only apply to states that exist at the time of the add_transition() call. Calling a wildcard-based transition when the model is in a state added after the transition was defined will elicit an invalid transition message, and will not transition to the target state.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-reflexive-from-multiple-states\"></a>Reflexive transitions from multiple states</h4><a id=\"user-content-reflexive-transitions-from-multiple-states\" class=\"anchor-element\" aria-label=\"Permalink: Reflexive transitions from multiple states\" href=\"#reflexive-transitions-from-multiple-states\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">A reflexive trigger (trigger that has the same state as source and destination) can easily be added specifying <code>=</code> as destination.This is handy if the same reflexive trigger should be added to multiple states.For example:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine.add_transition('touch', ['liquid', 'gas', 'plasma'], '=', after='change_shape')\"><pre><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'touch'</span>, [<span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'plasma'</span>], <span class=\"pl-s\">'='</span>, <span class=\"pl-s1\">after</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'change_shape'</span>)</pre></div><p dir=\"auto\">This will add reflexive transitions for all three states with <code>touch()</code> as trigger and with <code>change_shape</code> executed after each trigger.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-internal-transitions\"></a>Internal transitions</h4><a id=\"user-content-internal-transitions\" class=\"anchor-element\" aria-label=\"Permalink: Internal transitions\" href=\"#internal-transitions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">In contrast to reflexive transitions, internal transitions will never actually leave the state.This means that transition-related callbacks such as <code>before</code> or <code>after</code> will be processed while state-related callbacks <code>exit</code> or <code>enter</code> will not.To define a transition to be internal, set the destination to <code>None</code>.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine.add_transition('internal', ['liquid', 'gas'], None, after='change_shape')\"><pre><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'internal'</span>, [<span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>], <span class=\"pl-c1\">None</span>, <span class=\"pl-s1\">after</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'change_shape'</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-ordered-transitions\"></a> Ordered transitions</h4><a id=\"user-content--ordered-transitions\" class=\"anchor-element\" aria-label=\"Permalink:  Ordered transitions\" href=\"#-ordered-transitions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">A common desire is for state transitions to follow a strict linear sequence. For instance, given states <code>['A', 'B', 'C']</code>, you might want valid transitions for <code>A</code> \u2192 <code>B</code>, <code>B</code> \u2192 <code>C</code>, and <code>C</code> \u2192 <code>A</code> (but no other pairs).</p><p dir=\"auto\">To facilitate this behavior, Transitions provides an <code>add_ordered_transitions()</code> method in the <code>Machine</code> class:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"states = ['A', 'B', 'C'] # See the &quot;alternative initialization&quot; section for an explanation of the 1st argument to initmachine = Machine(states=states, initial='A')machine.add_ordered_transitions()machine.next_state()print(machine.state)&gt;&gt;&gt; 'B'# We can also define a different order of transitionsmachine = Machine(states=states, initial='A')machine.add_ordered_transitions(['A', 'C', 'B'])machine.next_state()print(machine.state)&gt;&gt;&gt; 'C'# Conditions can be passed to 'add_ordered_transitions' as well# If one condition is passed, it will be used for all transitionsmachine = Machine(states=states, initial='A')machine.add_ordered_transitions(conditions='check')# If a list is passed, it must contain exactly as many elements as the# machine contains states (A-&gt;B, ..., X-&gt;A)machine = Machine(states=states, initial='A')machine.add_ordered_transitions(conditions=['check_A2B', ..., 'check_X2A'])# Conditions are always applied starting from the initial statemachine = Machine(states=states, initial='B')machine.add_ordered_transitions(conditions=['check_B2C', ..., 'check_A2B'])# With `loop=False`, the transition from the last state to the first state will be omitted (e.g. C-&gt;A)# When you also pass conditions, you need to pass one condition less (len(states)-1)machine = Machine(states=states, initial='A')machine.add_ordered_transitions(loop=False)machine.next_state()machine.next_state()machine.next_state() # transitions.core.MachineError: &quot;Can't trigger event next_state from state C!&quot;\"><pre><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'C'</span>] <span class=\"pl-c\"># See the \"alternative initialization\" section for an explanation of the 1st argument to init</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_ordered_transitions</span>()<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">next_state</span>()<span class=\"pl-en\">print</span>(<span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">state</span>)<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'B'</span><span class=\"pl-c\"># We can also define a different order of transitions</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_ordered_transitions</span>([<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'C'</span>, <span class=\"pl-s\">'B'</span>])<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">next_state</span>()<span class=\"pl-en\">print</span>(<span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">state</span>)<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'C'</span><span class=\"pl-c\"># Conditions can be passed to 'add_ordered_transitions' as well</span><span class=\"pl-c\"># If one condition is passed, it will be used for all transitions</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_ordered_transitions</span>(<span class=\"pl-s1\">conditions</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'check'</span>)<span class=\"pl-c\"># If a list is passed, it must contain exactly as many elements as the</span><span class=\"pl-c\"># machine contains states (A-&gt;B, ..., X-&gt;A)</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_ordered_transitions</span>(<span class=\"pl-s1\">conditions</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'check_A2B'</span>, ..., <span class=\"pl-s\">'check_X2A'</span>])<span class=\"pl-c\"># Conditions are always applied starting from the initial state</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'B'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_ordered_transitions</span>(<span class=\"pl-s1\">conditions</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'check_B2C'</span>, ..., <span class=\"pl-s\">'check_A2B'</span>])<span class=\"pl-c\"># With `loop=False`, the transition from the last state to the first state will be omitted (e.g. C-&gt;A)</span><span class=\"pl-c\"># When you also pass conditions, you need to pass one condition less (len(states)-1)</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_ordered_transitions</span>(<span class=\"pl-s1\">loop</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">False</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">next_state</span>()<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">next_state</span>()<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">next_state</span>() <span class=\"pl-c\"># transitions.core.MachineError: \"Can't trigger event next_state from state C!\"</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-queued-transitions\"></a>Queued transitions</h4><a id=\"user-content-queued-transitions\" class=\"anchor-element\" aria-label=\"Permalink: Queued transitions\" href=\"#queued-transitions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">The default behaviour in Transitions is to process events instantly. This means events within an <code>on_enter</code> method will be processed <em>before</em> callbacks bound to <code>after</code> are called.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"def go_to_C():    global machine    machine.to_C()def after_advance():    print(&quot;I am in state B now!&quot;)def entering_C():    print(&quot;I am in state C now!&quot;)states = ['A', 'B', 'C']machine = Machine(states=states, initial='A')# we want a message when state transition to B has been completedmachine.add_transition('advance', 'A', 'B', after=after_advance)# call transition from state B to state Cmachine.on_enter_B(go_to_C)# we also want a message when entering state Cmachine.on_enter_C(entering_C)machine.advance()&gt;&gt;&gt; 'I am in state C now!'&gt;&gt;&gt; 'I am in state B now!' # what?\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">go_to_C</span>():    <span class=\"pl-k\">global</span> <span class=\"pl-s1\">machine</span>    <span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">to_C</span>()<span class=\"pl-k\">def</span> <span class=\"pl-en\">after_advance</span>():    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"I am in state B now!\"</span>)<span class=\"pl-k\">def</span> <span class=\"pl-en\">entering_C</span>():    <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"I am in state C now!\"</span>)<span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'C'</span>]<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-c\"># we want a message when state transition to B has been completed</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'advance'</span>, <span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-s1\">after</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">after_advance</span>)<span class=\"pl-c\"># call transition from state B to state C</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">on_enter_B</span>(<span class=\"pl-s1\">go_to_C</span>)<span class=\"pl-c\"># we also want a message when entering state C</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">on_enter_C</span>(<span class=\"pl-s1\">entering_C</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">advance</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'I am in state C now!'</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'I am in state B now!'</span> <span class=\"pl-c\"># what?</span></pre></div><p dir=\"auto\">The execution order of this example is</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"prepare -&gt; before -&gt; on_enter_B -&gt; on_enter_C -&gt; after.\"><pre class=\"notranslate\"><code>prepare -&gt; before -&gt; on_enter_B -&gt; on_enter_C -&gt; after.</code></pre></div><p dir=\"auto\">If queued processing is enabled, a transition will be finished before the next transition is triggered:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine = Machine(states=states, queued=True, initial='A')...machine.advance()&gt;&gt;&gt; 'I am in state B now!'&gt;&gt;&gt; 'I am in state C now!' # That's better!\"><pre><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">queued</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)...<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">advance</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'I am in state B now!'</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'I am in state C now!'</span> <span class=\"pl-c\"># That's better!</span></pre></div><p dir=\"auto\">This results in</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"prepare -&gt; before -&gt; on_enter_B -&gt; queue(to_C) -&gt; after  -&gt; on_enter_C.\"><pre class=\"notranslate\"><code>prepare -&gt; before -&gt; on_enter_B -&gt; queue(to_C) -&gt; after  -&gt; on_enter_C.</code></pre></div><p dir=\"auto\"><strong>Important note:</strong> when processing events in a queue, the trigger call will <em>always</em> return <code>True</code>, since there is no way to determine at queuing time whether a transition involving queued calls will ultimately complete successfully. This is true even when only a single event is processed.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine.add_transition('jump', 'A', 'C', conditions='will_fail')...# queued=Falsemachine.jump()&gt;&gt;&gt; False# queued=Truemachine.jump()&gt;&gt;&gt; True\"><pre><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'jump'</span>, <span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'C'</span>, <span class=\"pl-s1\">conditions</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'will_fail'</span>)...<span class=\"pl-c\"># queued=False</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">jump</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">False</span><span class=\"pl-c\"># queued=True</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">jump</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">True</span></pre></div><p dir=\"auto\">When a model is removed from the machine, <code>transitions</code> will also remove all related events from the queue.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Model:    def on_enter_B(self):        self.to_C()  # add event to queue ...        self.machine.remove_model(self)  # aaaand it's gone\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Model</span>:    <span class=\"pl-k\">def</span> <span class=\"pl-en\">on_enter_B</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-s1\">self</span>.<span class=\"pl-en\">to_C</span>()  <span class=\"pl-c\"># add event to queue ...</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">remove_model</span>(<span class=\"pl-s1\">self</span>)  <span class=\"pl-c\"># aaaand it's gone</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-conditional-transitions\"></a>Conditional transitions</h4><a id=\"user-content-conditional-transitions\" class=\"anchor-element\" aria-label=\"Permalink: Conditional transitions\" href=\"#conditional-transitions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Sometimes you only want a particular transition to execute if a specific condition occurs. You can do this by passing a method, or list of methods, in the <code>conditions</code> argument:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Our Matter class, now with a bunch of methods that return booleans.class Matter(object):    def is_flammable(self): return False    def is_really_hot(self): return Truemachine.add_transition('heat', 'solid', 'gas', conditions='is_flammable')machine.add_transition('heat', 'solid', 'liquid', conditions=['is_really_hot'])\"><pre><span class=\"pl-c\"># Our Matter class, now with a bunch of methods that return booleans.</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">is_flammable</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-k\">return</span> <span class=\"pl-c1\">False</span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">is_really_hot</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-k\">return</span> <span class=\"pl-c1\">True</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'heat'</span>, <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s1\">conditions</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'is_flammable'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'heat'</span>, <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s1\">conditions</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'is_really_hot'</span>])</pre></div><p dir=\"auto\">In the above example, calling <code>heat()</code> when the model is in state <code>'solid'</code> will transition to state <code>'gas'</code> if <code>is_flammable</code> returns <code>True</code>. Otherwise, it will transition to state <code>'liquid'</code> if <code>is_really_hot</code> returns <code>True</code>.</p><p dir=\"auto\">For convenience, there's also an <code>'unless'</code> argument that behaves exactly like conditions, but inverted:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine.add_transition('heat', 'solid', 'gas', unless=['is_flammable', 'is_really_hot'])\"><pre><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'heat'</span>, <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s1\">unless</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'is_flammable'</span>, <span class=\"pl-s\">'is_really_hot'</span>])</pre></div><p dir=\"auto\">In this case, the model would transition from solid to gas whenever <code>heat()</code> fires, provided that both <code>is_flammable()</code> and <code>is_really_hot()</code> return <code>False</code>.</p><p dir=\"auto\">Note that condition-checking methods will passively receive optional arguments and/or data objects passed to triggering methods. For instance, the following call:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"lump.heat(temp=74)# equivalent to lump.trigger('heat', temp=74)\"><pre><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">heat</span>(<span class=\"pl-s1\">temp</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">74</span>)<span class=\"pl-c\"># equivalent to lump.trigger('heat', temp=74)</span></pre></div><p dir=\"auto\">... would pass the <code>temp=74</code> optional kwarg to the <code>is_flammable()</code> check (possibly wrapped in an <code>EventData</code> instance). For more on this, see the <a href=\"#passing-data\">Passing data</a> section below.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-check-transitions\"></a>Check transitions</h4><a id=\"user-content-check-transitions\" class=\"anchor-element\" aria-label=\"Permalink: Check transitions\" href=\"#check-transitions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">If you want to check whether a transition is possible before you execute it ('look before you leap'), you can use <code>may_&lt;trigger_name&gt;</code> convenience functions that have been attached to your model:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# check if the current temperature is hot enough to trigger a transitionif lump.may_heat():    lump.heat()\"><pre><span class=\"pl-c\"># check if the current temperature is hot enough to trigger a transition</span><span class=\"pl-k\">if</span> <span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">may_heat</span>():    <span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">heat</span>()</pre></div><p dir=\"auto\">This will execute all <code>prepare</code> callbacks and evaluate the conditions assigned to the potential transitions.Transition checks can also be used when a transition's destination is not available (yet):</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine.add_transition('elevate', 'solid', 'spiritual')assert not lump.may_elevate()  # not ready yet :(\"><pre><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'elevate'</span>, <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'spiritual'</span>)<span class=\"pl-k\">assert</span> <span class=\"pl-c1\">not</span> <span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">may_elevate</span>()  <span class=\"pl-c\"># not ready yet :(</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-transition-callbacks\"></a>Callbacks</h4><a id=\"user-content-callbacks-1\" class=\"anchor-element\" aria-label=\"Permalink: Callbacks\" href=\"#callbacks-1\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">You can attach callbacks to transitions as well as states. Every transition has <code>'before'</code> and <code>'after'</code> attributes that contain a list of methods to call before and after the transition executes:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Matter(object):    def make_hissing_noises(self): print(&quot;HISSSSSSSSSSSSSSSS&quot;)    def disappear(self): print(&quot;where'd all the liquid go?&quot;)transitions = [    { 'trigger': 'melt', 'source': 'solid', 'dest': 'liquid', 'before': 'make_hissing_noises'},    { 'trigger': 'evaporate', 'source': 'liquid', 'dest': 'gas', 'after': 'disappear' }]lump = Matter()machine = Machine(lump, states, transitions=transitions, initial='solid')lump.melt()&gt;&gt;&gt; &quot;HISSSSSSSSSSSSSSSS&quot;lump.evaporate()&gt;&gt;&gt; &quot;where'd all the liquid go?&quot;\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">make_hissing_noises</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"HISSSSSSSSSSSSSSSS\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">disappear</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"where'd all the liquid go?\"</span>)<span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [    { <span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'melt'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'before'</span>: <span class=\"pl-s\">'make_hissing_noises'</span>},    { <span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'evaporate'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'after'</span>: <span class=\"pl-s\">'disappear'</span> }]<span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)<span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">melt</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">\"HISSSSSSSSSSSSSSSS\"</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">evaporate</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">\"where'd all the liquid go?\"</span></pre></div><p dir=\"auto\">There is also a <code>'prepare'</code> callback that is executed as soon as a transition starts, before any <code>'conditions'</code> are checked or other callbacks are executed.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Matter(object):    heat = False    attempts = 0    def count_attempts(self): self.attempts += 1    def heat_up(self): self.heat = random.random() &lt; 0.25    def stats(self): print('It took you %i attempts to melt the lump!' %self.attempts)    @property    def is_really_hot(self):        return self.heatstates=['solid', 'liquid', 'gas', 'plasma']transitions = [    { 'trigger': 'melt', 'source': 'solid', 'dest': 'liquid', 'prepare': ['heat_up', 'count_attempts'], 'conditions': 'is_really_hot', 'after': 'stats'},]lump = Matter()machine = Machine(lump, states, transitions=transitions, initial='solid')lump.melt()lump.melt()lump.melt()lump.melt()&gt;&gt;&gt; &quot;It took you 4 attempts to melt the lump!&quot;\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-s1\">heat</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">False</span>    <span class=\"pl-s1\">attempts</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">count_attempts</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">attempts</span> <span class=\"pl-c1\">+=</span> <span class=\"pl-c1\">1</span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">heat_up</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">heat</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">random</span>.<span class=\"pl-en\">random</span>() <span class=\"pl-c1\">&lt;</span> <span class=\"pl-c1\">0.25</span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">stats</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">'It took you %i attempts to melt the lump!'</span> <span class=\"pl-c1\">%</span><span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">attempts</span>)    <span class=\"pl-en\">@<span class=\"pl-s1\">property</span></span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">is_really_hot</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">heat</span><span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'plasma'</span>]<span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [    { <span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'melt'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'prepare'</span>: [<span class=\"pl-s\">'heat_up'</span>, <span class=\"pl-s\">'count_attempts'</span>], <span class=\"pl-s\">'conditions'</span>: <span class=\"pl-s\">'is_really_hot'</span>, <span class=\"pl-s\">'after'</span>: <span class=\"pl-s\">'stats'</span>},]<span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)<span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">melt</span>()<span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">melt</span>()<span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">melt</span>()<span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">melt</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">\"It took you 4 attempts to melt the lump!\"</span></pre></div><p dir=\"auto\">Note that <code>prepare</code> will not be called unless the current state is a valid source for the named transition.</p><p dir=\"auto\">Default actions meant to be executed before or after <em>every</em> transition can be passed to <code>Machine</code> during initialization with<code>before_state_change</code> and <code>after_state_change</code> respectively:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Matter(object):    def make_hissing_noises(self): print(&quot;HISSSSSSSSSSSSSSSS&quot;)    def disappear(self): print(&quot;where'd all the liquid go?&quot;)states=['solid', 'liquid', 'gas', 'plasma']lump = Matter()m = Machine(lump, states, before_state_change='make_hissing_noises', after_state_change='disappear')lump.to_gas()&gt;&gt;&gt; &quot;HISSSSSSSSSSSSSSSS&quot;&gt;&gt;&gt; &quot;where'd all the liquid go?&quot;\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">make_hissing_noises</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"HISSSSSSSSSSSSSSSS\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">disappear</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"where'd all the liquid go?\"</span>)<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'plasma'</span>]<span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">before_state_change</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'make_hissing_noises'</span>, <span class=\"pl-s1\">after_state_change</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'disappear'</span>)<span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">to_gas</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">\"HISSSSSSSSSSSSSSSS\"</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">\"where'd all the liquid go?\"</span></pre></div><p dir=\"auto\">There are also two keywords for callbacks which should be executed <em>independently</em> a) of how many transitions are possible,b) if any transition succeeds and c) even if an error is raised during the execution of some other callback.Callbacks passed to <code>Machine</code> with <code>prepare_event</code> will be executed <em>once</em> before processing possible transitions(and their individual <code>prepare</code> callbacks) takes place.Callbacks of <code>finalize_event</code> will be executed regardless of the success of the processed transitions.Note that if an error occurred it will be attached to <code>event_data</code> as <code>error</code> and can be retrieved with <code>send_event=True</code>.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions import Machineclass Matter(object):    def raise_error(self, event): raise ValueError(&quot;Oh no&quot;)    def prepare(self, event): print(&quot;I am ready!&quot;)    def finalize(self, event): print(&quot;Result: &quot;, type(event.error), event.error)states=['solid', 'liquid', 'gas', 'plasma']lump = Matter()m = Machine(lump, states, prepare_event='prepare', before_state_change='raise_error',            finalize_event='finalize', send_event=True)try:    lump.to_gas()except ValueError:    passprint(lump.state)# &gt;&gt;&gt; I am ready!# &gt;&gt;&gt; Result:  &lt;class 'ValueError'&gt; Oh no# &gt;&gt;&gt; initial\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">Machine</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">raise_error</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">event</span>): <span class=\"pl-k\">raise</span> <span class=\"pl-v\">ValueError</span>(<span class=\"pl-s\">\"Oh no\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">prepare</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">event</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"I am ready!\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">finalize</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">event</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"Result: \"</span>, <span class=\"pl-en\">type</span>(<span class=\"pl-s1\">event</span>.<span class=\"pl-s1\">error</span>), <span class=\"pl-s1\">event</span>.<span class=\"pl-s1\">error</span>)<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'plasma'</span>]<span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">prepare_event</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'prepare'</span>, <span class=\"pl-s1\">before_state_change</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'raise_error'</span>,            <span class=\"pl-s1\">finalize_event</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'finalize'</span>, <span class=\"pl-s1\">send_event</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-k\">try</span>:    <span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">to_gas</span>()<span class=\"pl-k\">except</span> <span class=\"pl-v\">ValueError</span>:    <span class=\"pl-k\">pass</span><span class=\"pl-en\">print</span>(<span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span>)<span class=\"pl-c\"># &gt;&gt;&gt; I am ready!</span><span class=\"pl-c\"># &gt;&gt;&gt; Result:  &lt;class 'ValueError'&gt; Oh no</span><span class=\"pl-c\"># &gt;&gt;&gt; initial</span></pre></div><p dir=\"auto\">Sometimes things just don't work out as intended and we need to handle exceptions and clean up the mess to keep things going.We can pass callbacks to <code>on_exception</code> to do this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions import Machineclass Matter(object):    def raise_error(self, event): raise ValueError(&quot;Oh no&quot;)    def handle_error(self, event):        print(&quot;Fixing things ...&quot;)        del event.error  # it did not happen if we cannot see it ...states=['solid', 'liquid', 'gas', 'plasma']lump = Matter()m = Machine(lump, states, before_state_change='raise_error', on_exception='handle_error', send_event=True)try:    lump.to_gas()except ValueError:    passprint(lump.state)# &gt;&gt;&gt; Fixing things ...# &gt;&gt;&gt; initial\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">Machine</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">raise_error</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">event</span>): <span class=\"pl-k\">raise</span> <span class=\"pl-v\">ValueError</span>(<span class=\"pl-s\">\"Oh no\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">handle_error</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">event</span>):        <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"Fixing things ...\"</span>)        <span class=\"pl-k\">del</span> <span class=\"pl-s1\">event</span>.<span class=\"pl-s1\">error</span>  <span class=\"pl-c\"># it did not happen if we cannot see it ...</span><span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>, <span class=\"pl-s\">'plasma'</span>]<span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">before_state_change</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'raise_error'</span>, <span class=\"pl-s1\">on_exception</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'handle_error'</span>, <span class=\"pl-s1\">send_event</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-k\">try</span>:    <span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">to_gas</span>()<span class=\"pl-k\">except</span> <span class=\"pl-v\">ValueError</span>:    <span class=\"pl-k\">pass</span><span class=\"pl-en\">print</span>(<span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span>)<span class=\"pl-c\"># &gt;&gt;&gt; Fixing things ...</span><span class=\"pl-c\"># &gt;&gt;&gt; initial</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-resolution\"></a>Callable resolution</h3><a id=\"user-content-callable-resolution\" class=\"anchor-element\" aria-label=\"Permalink: Callable resolution\" href=\"#callable-resolution\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">As you have probably already realized, the standard way of passing callables to states, conditions and transitions is by name. When processing callbacks and conditions, <code>transitions</code> will use their name to retrieve the related callable from the model. If the method cannot be retrieved and it contains dots, <code>transitions</code> will treat the name as a path to a module function and try to import it. Alternatively, you can pass names of properties or attributes. They will be wrapped into functions but cannot receive event data for obvious reasons. You can also pass callables such as (bound) functions directly. As mentioned earlier, you can also pass lists/tuples of callables names to the callback parameters. Callbacks will be executed in the order they were added.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions import Machinefrom mod import imported_funcimport randomclass Model(object):    def a_callback(self):        imported_func()    @property    def a_property(self):        &quot;&quot;&quot; Basically a coin toss. &quot;&quot;&quot;        return random.random() &lt; 0.5    an_attribute = Falsemodel = Model()machine = Machine(model=model, states=['A'], initial='A')machine.add_transition('by_name', 'A', 'A', conditions='a_property', after='a_callback')machine.add_transition('by_reference', 'A', 'A', unless=['a_property', 'an_attribute'], after=model.a_callback)machine.add_transition('imported', 'A', 'A', after='mod.imported_func')model.by_name()model.by_reference()model.imported()\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">Machine</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">mod</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">imported_func</span><span class=\"pl-k\">import</span> <span class=\"pl-s1\">random</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">Model</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">a_callback</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-en\">imported_func</span>()    <span class=\"pl-en\">@<span class=\"pl-s1\">property</span></span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">a_property</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-s\">\"\"\" Basically a coin toss. \"\"\"</span>        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">random</span>.<span class=\"pl-en\">random</span>() <span class=\"pl-c1\">&lt;</span> <span class=\"pl-c1\">0.5</span>    <span class=\"pl-s1\">an_attribute</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">False</span><span class=\"pl-s1\">model</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Model</span>()<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">model</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'A'</span>], <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'by_name'</span>, <span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">conditions</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'a_property'</span>, <span class=\"pl-s1\">after</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'a_callback'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'by_reference'</span>, <span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">unless</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'a_property'</span>, <span class=\"pl-s\">'an_attribute'</span>], <span class=\"pl-s1\">after</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">model</span>.<span class=\"pl-s1\">a_callback</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'imported'</span>, <span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">after</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'mod.imported_func'</span>)<span class=\"pl-s1\">model</span>.<span class=\"pl-en\">by_name</span>()<span class=\"pl-s1\">model</span>.<span class=\"pl-en\">by_reference</span>()<span class=\"pl-s1\">model</span>.<span class=\"pl-en\">imported</span>()</pre></div><p dir=\"auto\">The callable resolution is done in <code>Machine.resolve_callable</code>.This method can be overridden in case more complex callable resolution strategies are required.</p><p dir=\"auto\"><strong>Example</strong></p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class CustomMachine(Machine):    @staticmethod    def resolve_callable(func, event_data):        # manipulate arguments here and return func, or super() if no manipulation is done.        super(CustomMachine, CustomMachine).resolve_callable(func, event_data)\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">CustomMachine</span>(<span class=\"pl-v\">Machine</span>):    <span class=\"pl-en\">@<span class=\"pl-s1\">staticmethod</span></span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">resolve_callable</span>(<span class=\"pl-s1\">func</span>, <span class=\"pl-s1\">event_data</span>):        <span class=\"pl-c\"># manipulate arguments here and return func, or super() if no manipulation is done.</span>        <span class=\"pl-en\">super</span>(<span class=\"pl-v\">CustomMachine</span>, <span class=\"pl-v\">CustomMachine</span>).<span class=\"pl-en\">resolve_callable</span>(<span class=\"pl-s1\">func</span>, <span class=\"pl-s1\">event_data</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-execution-order\"></a>Callback execution order</h3><a id=\"user-content-callback-execution-order\" class=\"anchor-element\" aria-label=\"Permalink: Callback execution order\" href=\"#callback-execution-order\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">In summary, there are currently three ways to trigger events. You can call a model's convenience functions like <code>lump.melt()</code>,execute triggers by name such as <code>lump.trigger(\"melt\")</code> or dispatch events on multiple models with <code>machine.dispatch(\"melt\")</code>(see section about multiple models in <a href=\"#alternative-initialization-patterns\">alternative initialization patterns</a>).Callbacks on transitions are then executed in the following order:</p><table><thead><tr><th>Callback</th><th align=\"center\">Current State</th><th>Comments</th></tr></thead><tbody><tr><td><code>'machine.prepare_event'</code></td><td align=\"center\"><code>source</code></td><td>executed <em>once</em> before individual transitions are processed</td></tr><tr><td><code>'transition.prepare'</code></td><td align=\"center\"><code>source</code></td><td>executed as soon as the transition starts</td></tr><tr><td><code>'transition.conditions'</code></td><td align=\"center\"><code>source</code></td><td>conditions <em>may</em> fail and halt the transition</td></tr><tr><td><code>'transition.unless'</code></td><td align=\"center\"><code>source</code></td><td>conditions <em>may</em> fail and halt the transition</td></tr><tr><td><code>'machine.before_state_change'</code></td><td align=\"center\"><code>source</code></td><td>default callbacks declared on model</td></tr><tr><td><code>'transition.before'</code></td><td align=\"center\"><code>source</code></td><td></td></tr><tr><td><code>'state.on_exit'</code></td><td align=\"center\"><code>source</code></td><td>callbacks declared on the source state</td></tr><tr><td><code>&lt;STATE CHANGE&gt;</code></td><td align=\"center\"></td><td></td></tr><tr><td><code>'state.on_enter'</code></td><td align=\"center\"><code>destination</code></td><td>callbacks declared on the destination state</td></tr><tr><td><code>'transition.after'</code></td><td align=\"center\"><code>destination</code></td><td></td></tr><tr><td><code>'machine.after_state_change'</code></td><td align=\"center\"><code>destination</code></td><td>default callbacks declared on model</td></tr><tr><td><code>'machine.on_exception'</code></td><td align=\"center\"><code>source/destination</code></td><td>callbacks will be executed when an exception has been raised</td></tr><tr><td><code>'machine.finalize_event'</code></td><td align=\"center\"><code>source/destination</code></td><td>callbacks will be executed even if no transition took place or an exception has been raised</td></tr></tbody></table><p dir=\"auto\">If any callback raises an exception, the processing of callbacks is not continued. This means that when an error occurs before the transition (in <code>state.on_exit</code> or earlier), it is halted. In case there is a raise after the transition has been conducted (in <code>state.on_enter</code> or later), the state change persists and no rollback is happening. Callbacks specified in <code>machine.finalize_event</code> will always be executed unless the exception is raised by a finalizing callback itself. Note that each callback sequence has to be finished before the next stage is executed. Blocking callbacks will halt the execution order and therefore block the <code>trigger</code> or <code>dispatch</code> call itself. If you want callbacks to be executed in parallel, you could have a look at the <a href=\"#extensions\">extensions</a> <code>AsyncMachine</code> for asynchronous processing or <code>LockedMachine</code> for threading.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-passing-data\"></a>Passing data</h3><a id=\"user-content-passing-data\" class=\"anchor-element\" aria-label=\"Permalink: Passing data\" href=\"#passing-data\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Sometimes you need to pass the callback functions registered at machine initialization some data that reflects the model's current state.Transitions allows you to do this in two different ways.</p><p dir=\"auto\">First (the default), you can pass any positional or keyword arguments directly to the trigger methods (created when you call <code>add_transition()</code>):</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Matter(object):    def __init__(self): self.set_environment()    def set_environment(self, temp=0, pressure=101.325):        self.temp = temp        self.pressure = pressure    def print_temperature(self): print(&quot;Current temperature is %d degrees celsius.&quot; % self.temp)    def print_pressure(self): print(&quot;Current pressure is %.2f kPa.&quot; % self.pressure)lump = Matter()machine = Machine(lump, ['solid', 'liquid'], initial='solid')machine.add_transition('melt', 'solid', 'liquid', before='set_environment')lump.melt(45)  # positional arg;# equivalent to lump.trigger('melt', 45)lump.print_temperature()&gt;&gt;&gt; 'Current temperature is 45 degrees celsius.'machine.set_state('solid')  # reset state so we can melt againlump.melt(pressure=300.23)  # keyword args also worklump.print_pressure()&gt;&gt;&gt; 'Current pressure is 300.23 kPa.'\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">__init__</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-s1\">self</span>.<span class=\"pl-en\">set_environment</span>()    <span class=\"pl-k\">def</span> <span class=\"pl-en\">set_environment</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">temp</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">0</span>, <span class=\"pl-s1\">pressure</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">101.325</span>):        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">temp</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">temp</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">pressure</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">pressure</span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">print_temperature</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"Current temperature is %d degrees celsius.\"</span> <span class=\"pl-c1\">%</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">temp</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">print_pressure</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"Current pressure is %.2f kPa.\"</span> <span class=\"pl-c1\">%</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">pressure</span>)<span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, [<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>], <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'melt'</span>, <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s1\">before</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'set_environment'</span>)<span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">melt</span>(<span class=\"pl-c1\">45</span>)  <span class=\"pl-c\"># positional arg;</span><span class=\"pl-c\"># equivalent to lump.trigger('melt', 45)</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">print_temperature</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'Current temperature is 45 degrees celsius.'</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">set_state</span>(<span class=\"pl-s\">'solid'</span>)  <span class=\"pl-c\"># reset state so we can melt again</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">melt</span>(<span class=\"pl-s1\">pressure</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">300.23</span>)  <span class=\"pl-c\"># keyword args also work</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">print_pressure</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'Current pressure is 300.23 kPa.'</span></pre></div><p dir=\"auto\">You can pass any number of arguments you like to the trigger.</p><p dir=\"auto\">There is one important limitation to this approach: every callback function triggered by the state transition must be able to handle <em>all</em> of the arguments. This may cause problems if the callbacks each expect somewhat different data.</p><p dir=\"auto\">To get around this, Transitions supports an alternate method for sending data. If you set <code>send_event=True</code> at <code>Machine</code> initialization, all arguments to the triggers will be wrapped in an <code>EventData</code> instance and passed on to every callback. (The <code>EventData</code> object also maintains internal references to the source state, model, transition, machine, and trigger associated with the event, in case you need to access these for anything.)</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Matter(object):    def __init__(self):        self.temp = 0        self.pressure = 101.325    # Note that the sole argument is now the EventData instance.    # This object stores positional arguments passed to the trigger method in the    # .args property, and stores keywords arguments in the .kwargs dictionary.    def set_environment(self, event):        self.temp = event.kwargs.get('temp', 0)        self.pressure = event.kwargs.get('pressure', 101.325)    def print_pressure(self): print(&quot;Current pressure is %.2f kPa.&quot; % self.pressure)lump = Matter()machine = Machine(lump, ['solid', 'liquid'], send_event=True, initial='solid')machine.add_transition('melt', 'solid', 'liquid', before='set_environment')lump.melt(temp=45, pressure=1853.68)  # keyword argslump.print_pressure()&gt;&gt;&gt; 'Current pressure is 1853.68 kPa.'\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">__init__</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">temp</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">pressure</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">101.325</span>    <span class=\"pl-c\"># Note that the sole argument is now the EventData instance.</span>    <span class=\"pl-c\"># This object stores positional arguments passed to the trigger method in the</span>    <span class=\"pl-c\"># .args property, and stores keywords arguments in the .kwargs dictionary.</span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">set_environment</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">event</span>):        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">temp</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">event</span>.<span class=\"pl-s1\">kwargs</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-s\">'temp'</span>, <span class=\"pl-c1\">0</span>)        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">pressure</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">event</span>.<span class=\"pl-s1\">kwargs</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-s\">'pressure'</span>, <span class=\"pl-c1\">101.325</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">print_pressure</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"Current pressure is %.2f kPa.\"</span> <span class=\"pl-c1\">%</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">pressure</span>)<span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, [<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>], <span class=\"pl-s1\">send_event</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'melt'</span>, <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s1\">before</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'set_environment'</span>)<span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">melt</span>(<span class=\"pl-s1\">temp</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">45</span>, <span class=\"pl-s1\">pressure</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">1853.68</span>)  <span class=\"pl-c\"># keyword args</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">print_pressure</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'Current pressure is 1853.68 kPa.'</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-alternative-initialization-patterns\"></a>Alternative initialization patterns</h3><a id=\"user-content-alternative-initialization-patterns\" class=\"anchor-element\" aria-label=\"Permalink: Alternative initialization patterns\" href=\"#alternative-initialization-patterns\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">In all of the examples so far, we've attached a new <code>Machine</code> instance to a separate model (<code>lump</code>, an instance of class <code>Matter</code>). While this separation keeps things tidy (because you don't have to monkey patch a whole bunch of new methods into the <code>Matter</code> class), it can also get annoying, since it requires you to keep track of which methods are called on the state machine, and which ones are called on the model that the state machine is bound to (e.g., <code>lump.on_enter_StateA()</code> vs. <code>machine.add_transition()</code>).</p><p dir=\"auto\">Fortunately, Transitions is flexible, and supports two other initialization patterns.</p><p dir=\"auto\">First, you can create a standalone state machine that doesn't require another model at all. Simply omit the model argument during initialization:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine = Machine(states=states, transitions=transitions, initial='solid')machine.melt()machine.state&gt;&gt;&gt; 'liquid'\"><pre><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">melt</span>()<span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'liquid'</span></pre></div><p dir=\"auto\">If you initialize the machine this way, you can then attach all triggering events (like <code>evaporate()</code>, <code>sublimate()</code>, etc.) and all callback functions directly to the <code>Machine</code> instance.</p><p dir=\"auto\">This approach has the benefit of consolidating all of the state machine functionality in one place, but can feel a little bit unnatural if you think state logic should be contained within the model itself rather than in a separate controller.</p><p dir=\"auto\">An alternative (potentially better) approach is to have the model inherit from the <code>Machine</code> class. Transitions is designed to support inheritance seamlessly. (just be sure to override class <code>Machine</code>'s <code>__init__</code> method!):</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Matter(Machine):    def say_hello(self): print(&quot;hello, new state!&quot;)    def say_goodbye(self): print(&quot;goodbye, old state!&quot;)    def __init__(self):        states = ['solid', 'liquid', 'gas']        Machine.__init__(self, states=states, initial='solid')        self.add_transition('melt', 'solid', 'liquid')lump = Matter()lump.state&gt;&gt;&gt; 'solid'lump.melt()lump.state&gt;&gt;&gt; 'liquid'\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>(<span class=\"pl-v\">Machine</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">say_hello</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"hello, new state!\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">say_goodbye</span>(<span class=\"pl-s1\">self</span>): <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"goodbye, old state!\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">__init__</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>]        <span class=\"pl-v\">Machine</span>.<span class=\"pl-en\">__init__</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)        <span class=\"pl-s1\">self</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s\">'melt'</span>, <span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>)<span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'solid'</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">melt</span>()<span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'liquid'</span></pre></div><p dir=\"auto\">Here you get to consolidate all state machine functionality into your existing model, which often feels more natural than sticking all of the functionality we want in a separate standalone <code>Machine</code> instance.</p><p dir=\"auto\">A machine can handle multiple models which can be passed as a list like <code>Machine(model=[model1, model2, ...])</code>.In cases where you want to add models <em>as well as</em> the machine instance itself, you can pass the class variable placeholder (string) <code>Machine.self_literal</code> during initialization like <code>Machine(model=[Machine.self_literal, model1, ...])</code>.You can also create a standalone machine, and register models dynamically via <code>machine.add_model</code> by passing <code>model=None</code> to the constructor.Furthermore, you can use <code>machine.dispatch</code> to trigger events on all currently added models.Remember to call <code>machine.remove_model</code> if machine is long-lasting and your models are temporary and should be garbage collected:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Matter():    passlump1 = Matter()lump2 = Matter()# setting 'model' to None or passing an empty list will initialize the machine without a modelmachine = Machine(model=None, states=states, transitions=transitions, initial='solid')machine.add_model(lump1)machine.add_model(lump2, initial='liquid')lump1.state&gt;&gt;&gt; 'solid'lump2.state&gt;&gt;&gt; 'liquid'# custom events as well as auto transitions can be dispatched to all modelsmachine.dispatch(&quot;to_plasma&quot;)lump1.state&gt;&gt;&gt; 'plasma'assert lump1.state == lump2.statemachine.remove_model([lump1, lump2])del lump1  # lump1 is garbage collecteddel lump2  # lump2 is garbage collected\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Matter</span>():    <span class=\"pl-k\">pass</span><span class=\"pl-s1\">lump1</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">lump2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-c\"># setting 'model' to None or passing an empty list will initialize the machine without a model</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_model</span>(<span class=\"pl-s1\">lump1</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_model</span>(<span class=\"pl-s1\">lump2</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'liquid'</span>)<span class=\"pl-s1\">lump1</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'solid'</span><span class=\"pl-s1\">lump2</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'liquid'</span><span class=\"pl-c\"># custom events as well as auto transitions can be dispatched to all models</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">dispatch</span>(<span class=\"pl-s\">\"to_plasma\"</span>)<span class=\"pl-s1\">lump1</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'plasma'</span><span class=\"pl-k\">assert</span> <span class=\"pl-s1\">lump1</span>.<span class=\"pl-s1\">state</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s1\">lump2</span>.<span class=\"pl-s1\">state</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">remove_model</span>([<span class=\"pl-s1\">lump1</span>, <span class=\"pl-s1\">lump2</span>])<span class=\"pl-k\">del</span> <span class=\"pl-s1\">lump1</span>  <span class=\"pl-c\"># lump1 is garbage collected</span><span class=\"pl-k\">del</span> <span class=\"pl-s1\">lump2</span>  <span class=\"pl-c\"># lump2 is garbage collected</span></pre></div><p dir=\"auto\">If you don't provide an initial state in the state machine constructor, <code>transitions</code> will create and add a default state called <code>'initial'</code>.If you do not want a default initial state, you can pass <code>initial=None</code>.However, in this case you need to pass an initial state every time you add a model.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine = Machine(model=None, states=states, transitions=transitions, initial=None)machine.add_model(Matter())&gt;&gt;&gt; &quot;MachineError: No initial state configured for machine, must specify when adding model.&quot;machine.add_model(Matter(), initial='liquid')\"><pre><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">None</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_model</span>(<span class=\"pl-v\">Matter</span>())<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">\"MachineError: No initial state configured for machine, must specify when adding model.\"</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_model</span>(<span class=\"pl-v\">Matter</span>(), <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'liquid'</span>)</pre></div><p dir=\"auto\">Models with multiple states could attach multiple machines using different <code>model_attribute</code> values. As mentioned in <a href=\"#checking-state\">Checking state</a>, this will add custom <code>is/to_&lt;model_attribute&gt;_&lt;state_name&gt;</code> functions:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"lump = Matter()matter_machine = Machine(lump, states=['solid', 'liquid', 'gas'], initial='solid')# add a second machine to the same model but assign a different state attributeshipment_machine = Machine(lump, states=['delivered', 'shipping'], initial='delivered', model_attribute='shipping_state')lump.state&gt;&gt;&gt; 'solid'lump.is_solid()  # check the default field&gt;&gt;&gt; Truelump.shipping_state&gt;&gt;&gt; 'delivered'lump.is_shipping_state_delivered()  # check the custom field.&gt;&gt;&gt; Truelump.to_shipping_state_shipping()&gt;&gt;&gt; Truelump.is_shipping_state_delivered()&gt;&gt;&gt; False\"><pre><span class=\"pl-s1\">lump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Matter</span>()<span class=\"pl-s1\">matter_machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'solid'</span>, <span class=\"pl-s\">'liquid'</span>, <span class=\"pl-s\">'gas'</span>], <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)<span class=\"pl-c\"># add a second machine to the same model but assign a different state attribute</span><span class=\"pl-s1\">shipment_machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">lump</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'delivered'</span>, <span class=\"pl-s\">'shipping'</span>], <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'delivered'</span>, <span class=\"pl-s1\">model_attribute</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'shipping_state'</span>)<span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'solid'</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">is_solid</span>()  <span class=\"pl-c\"># check the default field</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">True</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-s1\">shipping_state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'delivered'</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">is_shipping_state_delivered</span>()  <span class=\"pl-c\"># check the custom field.</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">True</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">to_shipping_state_shipping</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">True</span><span class=\"pl-s1\">lump</span>.<span class=\"pl-en\">is_shipping_state_delivered</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">False</span></pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Logging</h3><a id=\"user-content-logging\" class=\"anchor-element\" aria-label=\"Permalink: Logging\" href=\"#logging\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Transitions includes very rudimentary logging capabilities. A number of events \u2013 namely, state changes, transition triggers, and conditional checks \u2013 are logged as INFO-level events using the standard Python <code>logging</code> module. This means you can easily configure logging to standard output in a script:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Set up logging; The basic log level will be DEBUGimport logginglogging.basicConfig(level=logging.DEBUG)# Set transitions' log level to INFO; DEBUG messages will be omittedlogging.getLogger('transitions').setLevel(logging.INFO)# Business as usualmachine = Machine(states=states, transitions=transitions, initial='solid')...\"><pre><span class=\"pl-c\"># Set up logging; The basic log level will be DEBUG</span><span class=\"pl-k\">import</span> <span class=\"pl-s1\">logging</span><span class=\"pl-s1\">logging</span>.<span class=\"pl-en\">basicConfig</span>(<span class=\"pl-s1\">level</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">logging</span>.<span class=\"pl-v\">DEBUG</span>)<span class=\"pl-c\"># Set transitions' log level to INFO; DEBUG messages will be omitted</span><span class=\"pl-s1\">logging</span>.<span class=\"pl-en\">getLogger</span>(<span class=\"pl-s\">'transitions'</span>).<span class=\"pl-en\">setLevel</span>(<span class=\"pl-s1\">logging</span>.<span class=\"pl-v\">INFO</span>)<span class=\"pl-c\"># Business as usual</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'solid'</span>)...</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-restoring\"></a>(Re-)Storing machine instances</h3><a id=\"user-content-re-storing-machine-instances\" class=\"anchor-element\" aria-label=\"Permalink: (Re-)Storing machine instances\" href=\"#re-storing-machine-instances\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Machines are picklable and can be stored and loaded with <code>pickle</code>. For Python 3.3 and earlier <code>dill</code> is required.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import dill as pickle # only required for Python 3.3 and earlierm = Machine(states=['A', 'B', 'C'], initial='A')m.to_B()m.state&gt;&gt;&gt; B# store the machinedump = pickle.dumps(m)# load the Machine instance againm2 = pickle.loads(dump)m2.state&gt;&gt;&gt; Bm2.states.keys()&gt;&gt;&gt; ['A', 'B', 'C']\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">dill</span> <span class=\"pl-k\">as</span> <span class=\"pl-s1\">pickle</span> <span class=\"pl-c\"># only required for Python 3.3 and earlier</span><span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Machine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'C'</span>], <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-s1\">m</span>.<span class=\"pl-en\">to_B</span>()<span class=\"pl-s1\">m</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-v\">B</span><span class=\"pl-c\"># store the machine</span><span class=\"pl-s1\">dump</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">pickle</span>.<span class=\"pl-en\">dumps</span>(<span class=\"pl-s1\">m</span>)<span class=\"pl-c\"># load the Machine instance again</span><span class=\"pl-s1\">m2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">pickle</span>.<span class=\"pl-en\">loads</span>(<span class=\"pl-s1\">dump</span>)<span class=\"pl-s1\">m2</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-v\">B</span><span class=\"pl-s1\">m2</span>.<span class=\"pl-s1\">states</span>.<span class=\"pl-en\">keys</span>()<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> [<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'C'</span>]</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-extensions\"></a> Extensions</h3><a id=\"user-content--extensions\" class=\"anchor-element\" aria-label=\"Permalink:  Extensions\" href=\"#-extensions\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Even though the core of transitions is kept lightweight, there are a variety of MixIns to extend its functionality. Currently supported are:</p><ul dir=\"auto\"><li><strong>Diagrams</strong> to visualize the current state of a machine</li><li><strong>Hierarchical State Machines</strong> for nesting and reuse</li><li><strong>Threadsafe Locks</strong> for parallel execution</li><li><strong>Async callbacks</strong> for asynchronous execution</li><li><strong>Custom States</strong> for extended state-related behaviour</li></ul><p dir=\"auto\">There are two mechanisms to retrieve a state machine instance with the desired features enabled.The first approach makes use of the convenience <code>factory</code> with the four parameters <code>graph</code>, <code>nested</code>, <code>locked</code> or <code>asyncio</code> set to <code>True</code> if the feature is required:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions.extensions import MachineFactory# create a machine with mixinsdiagram_cls = MachineFactory.get_predefined(graph=True)nested_locked_cls = MachineFactory.get_predefined(nested=True, locked=True)async_machine_cls = MachineFactory.get_predefined(asyncio=True)# create instances from these classes# instances can be used like simple machinesmachine1 = diagram_cls(model, state, transitions)machine2 = nested_locked_cls(model, state, transitions)\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">MachineFactory</span><span class=\"pl-c\"># create a machine with mixins</span><span class=\"pl-s1\">diagram_cls</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">MachineFactory</span>.<span class=\"pl-en\">get_predefined</span>(<span class=\"pl-s1\">graph</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-s1\">nested_locked_cls</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">MachineFactory</span>.<span class=\"pl-en\">get_predefined</span>(<span class=\"pl-s1\">nested</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-s1\">locked</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-s1\">async_machine_cls</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">MachineFactory</span>.<span class=\"pl-en\">get_predefined</span>(<span class=\"pl-s1\">asyncio</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-c\"># create instances from these classes</span><span class=\"pl-c\"># instances can be used like simple machines</span><span class=\"pl-s1\">machine1</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">diagram_cls</span>(<span class=\"pl-s1\">model</span>, <span class=\"pl-s1\">state</span>, <span class=\"pl-s1\">transitions</span>)<span class=\"pl-s1\">machine2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">nested_locked_cls</span>(<span class=\"pl-s1\">model</span>, <span class=\"pl-s1\">state</span>, <span class=\"pl-s1\">transitions</span>)</pre></div><p dir=\"auto\">This approach targets experimental use since in this case the underlying classes do not have to be known.However, classes can also be directly imported from <code>transitions.extensions</code>. The naming scheme is as follows:</p><table><thead><tr><th align=\"right\"></th><th align=\"center\">Diagrams</th><th align=\"center\">Nested</th><th align=\"center\">Locked</th><th align=\"center\">Asyncio</th></tr></thead><tbody><tr><td align=\"right\">Machine</td><td align=\"center\">\u2718</td><td align=\"center\">\u2718</td><td align=\"center\">\u2718</td><td align=\"center\">\u2718</td></tr><tr><td align=\"right\">GraphMachine</td><td align=\"center\">\u2713</td><td align=\"center\">\u2718</td><td align=\"center\">\u2718</td><td align=\"center\">\u2718</td></tr><tr><td align=\"right\">HierarchicalMachine</td><td align=\"center\">\u2718</td><td align=\"center\">\u2713</td><td align=\"center\">\u2718</td><td align=\"center\">\u2718</td></tr><tr><td align=\"right\">LockedMachine</td><td align=\"center\">\u2718</td><td align=\"center\">\u2718</td><td align=\"center\">\u2713</td><td align=\"center\">\u2718</td></tr><tr><td align=\"right\">HierarchicalGraphMachine</td><td align=\"center\">\u2713</td><td align=\"center\">\u2713</td><td align=\"center\">\u2718</td><td align=\"center\">\u2718</td></tr><tr><td align=\"right\">LockedGraphMachine</td><td align=\"center\">\u2713</td><td align=\"center\">\u2718</td><td align=\"center\">\u2713</td><td align=\"center\">\u2718</td></tr><tr><td align=\"right\">LockedHierarchicalMachine</td><td align=\"center\">\u2718</td><td align=\"center\">\u2713</td><td align=\"center\">\u2713</td><td align=\"center\">\u2718</td></tr><tr><td align=\"right\">LockedHierarchicalGraphMachine</td><td align=\"center\">\u2713</td><td align=\"center\">\u2713</td><td align=\"center\">\u2713</td><td align=\"center\">\u2718</td></tr><tr><td align=\"right\">AsyncMachine</td><td align=\"center\">\u2718</td><td align=\"center\">\u2718</td><td align=\"center\">\u2718</td><td align=\"center\">\u2713</td></tr><tr><td align=\"right\">AsyncGraphMachine</td><td align=\"center\">\u2713</td><td align=\"center\">\u2718</td><td align=\"center\">\u2718</td><td align=\"center\">\u2713</td></tr><tr><td align=\"right\">HierarchicalAsyncMachine</td><td align=\"center\">\u2718</td><td align=\"center\">\u2713</td><td align=\"center\">\u2718</td><td align=\"center\">\u2713</td></tr><tr><td align=\"right\">HierarchicalAsyncGraphMachine</td><td align=\"center\">\u2713</td><td align=\"center\">\u2713</td><td align=\"center\">\u2718</td><td align=\"center\">\u2713</td></tr></tbody></table><p dir=\"auto\">To use a feature-rich state machine, one could write:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions.extensions import LockedHierarchicalGraphMachine as LHGMachinemachine = LHGMachine(model, states, transitions)\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">LockedHierarchicalGraphMachine</span> <span class=\"pl-k\">as</span> <span class=\"pl-v\">LHGMachine</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">LHGMachine</span>(<span class=\"pl-s1\">model</span>, <span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-diagrams\"></a> Diagrams</h4><a id=\"user-content--diagrams\" class=\"anchor-element\" aria-label=\"Permalink:  Diagrams\" href=\"#-diagrams\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Additional Keywords:</p><ul dir=\"auto\"><li><code>title</code> (optional): Sets the title of the generated image.</li><li><code>show_conditions</code> (default False): Shows conditions at transition edges</li><li><code>show_auto_transitions</code> (default False): Shows auto transitions in graph</li><li><code>show_state_attributes</code> (default False): Show callbacks (enter, exit), tags and timeouts in graph</li></ul><p dir=\"auto\">Transitions can generate basic state diagrams displaying all valid transitions between states. To use the graphing functionality, you'll need to have <code>graphviz</code> and/or <code>pygraphviz</code> installed:<br>To generate graphs with the package <code>graphviz</code>, you need to install <a href=\"https://graphviz.org/\" rel=\"nofollow\">Graphviz</a> manually or via a package manager.</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"sudo apt-get install graphviz graphviz-dev  # Ubuntu and Debianbrew install graphviz  # MacOSconda install graphviz python-graphviz  # (Ana)conda\"><pre class=\"notranslate\"><code>sudo apt-get install graphviz graphviz-dev  # Ubuntu and Debianbrew install graphviz  # MacOSconda install graphviz python-graphviz  # (Ana)conda</code></pre></div><p dir=\"auto\">Now you can install the actual Python packages</p><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"pip install graphviz pygraphviz # install graphviz and/or pygraphviz manually...pip install transitions[diagrams]  # ... or install transitions with 'diagrams' extras which currently depends on pygraphviz\"><pre class=\"notranslate\"><code>pip install graphviz pygraphviz # install graphviz and/or pygraphviz manually...pip install transitions[diagrams]  # ... or install transitions with 'diagrams' extras which currently depends on pygraphviz</code></pre></div><p dir=\"auto\">Currently, <code>GraphMachine</code> will use <code>pygraphviz</code> when available and fall back to <code>graphviz</code> when <code>pygraphviz</code> cannot befound. This can be overridden by passing <code>use_pygraphviz=False</code> to the constructor. Note that this default might changein the future and <code>pygraphviz</code> support may be dropped.With <code>Model.get_graph()</code> you can get the current graph or the region of interest (roi) and draw it like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# import transitionsfrom transitions.extensions import GraphMachinem = Model()# without further arguments pygraphviz will be usedmachine = GraphMachine(model=m, ...)# when you want to use graphviz explicitlymachine = GraphMachine(model=m, use_pygraphviz=False, ...)# in cases where auto transitions should be visiblemachine = GraphMachine(model=m, show_auto_transitions=True, ...)# draw the whole graph ...m.get_graph().draw('my_state_diagram.png', prog='dot')# ... or just the region of interest# (previous state, active state and all reachable states)roi = m.get_graph(show_roi=True).draw('my_state_diagram.png', prog='dot')\"><pre><span class=\"pl-c\"># import transitions</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">GraphMachine</span><span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Model</span>()<span class=\"pl-c\"># without further arguments pygraphviz will be used</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">GraphMachine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">m</span>, ...)<span class=\"pl-c\"># when you want to use graphviz explicitly</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">GraphMachine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">m</span>, <span class=\"pl-s1\">use_pygraphviz</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">False</span>, ...)<span class=\"pl-c\"># in cases where auto transitions should be visible</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">GraphMachine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">m</span>, <span class=\"pl-s1\">show_auto_transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>, ...)<span class=\"pl-c\"># draw the whole graph ...</span><span class=\"pl-s1\">m</span>.<span class=\"pl-en\">get_graph</span>().<span class=\"pl-en\">draw</span>(<span class=\"pl-s\">'my_state_diagram.png'</span>, <span class=\"pl-s1\">prog</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'dot'</span>)<span class=\"pl-c\"># ... or just the region of interest</span><span class=\"pl-c\"># (previous state, active state and all reachable states)</span><span class=\"pl-s1\">roi</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">get_graph</span>(<span class=\"pl-s1\">show_roi</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>).<span class=\"pl-en\">draw</span>(<span class=\"pl-s\">'my_state_diagram.png'</span>, <span class=\"pl-s1\">prog</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'dot'</span>)</pre></div><p dir=\"auto\">This produces something like this:</p><p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/205986/47524268-725c1280-d89a-11e8-812b-1d3b6e667b91.png\"><img src=\"https://user-images.githubusercontent.com/205986/47524268-725c1280-d89a-11e8-812b-1d3b6e667b91.png\" alt=\"state diagram example\" style=\"max-width: 100%;\"></a></p><p dir=\"auto\">Independent of the backend you use, the draw function also accepts a file descriptor or a binary stream as the first argument. If you set this parameter to <code>None</code>, the byte stream will be returned:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import iowith open('a_graph.png', 'bw') as f:    # you need to pass the format when you pass objects instead of filenames.    m.get_graph().draw(f, format=&quot;png&quot;, prog='dot')# you can pass a (binary) stream toob = io.BytesIO()m.get_graph().draw(b, format=&quot;png&quot;, prog='dot')# or just handle the binary string yourselfresult = m.get_graph().draw(None, format=&quot;png&quot;, prog='dot')assert result == b.getvalue()\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span><span class=\"pl-k\">with</span> <span class=\"pl-en\">open</span>(<span class=\"pl-s\">'a_graph.png'</span>, <span class=\"pl-s\">'bw'</span>) <span class=\"pl-k\">as</span> <span class=\"pl-s1\">f</span>:    <span class=\"pl-c\"># you need to pass the format when you pass objects instead of filenames.</span>    <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">get_graph</span>().<span class=\"pl-en\">draw</span>(<span class=\"pl-s1\">f</span>, <span class=\"pl-s1\">format</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"png\"</span>, <span class=\"pl-s1\">prog</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'dot'</span>)<span class=\"pl-c\"># you can pass a (binary) stream too</span><span class=\"pl-s1\">b</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-v\">BytesIO</span>()<span class=\"pl-s1\">m</span>.<span class=\"pl-en\">get_graph</span>().<span class=\"pl-en\">draw</span>(<span class=\"pl-s1\">b</span>, <span class=\"pl-s1\">format</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"png\"</span>, <span class=\"pl-s1\">prog</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'dot'</span>)<span class=\"pl-c\"># or just handle the binary string yourself</span><span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">get_graph</span>().<span class=\"pl-en\">draw</span>(<span class=\"pl-c1\">None</span>, <span class=\"pl-s1\">format</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"png\"</span>, <span class=\"pl-s1\">prog</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'dot'</span>)<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s1\">b</span>.<span class=\"pl-en\">getvalue</span>()</pre></div><p dir=\"auto\">References and partials passed as callbacks will be resolved as good as possible:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions.extensions import GraphMachinefrom functools import partialclass Model:    def clear_state(self, deep=False, force=False):        print(&quot;Clearing state ...&quot;)        return Truemodel = Model()machine = GraphMachine(model=model, states=['A', 'B', 'C'],                       transitions=[                           {'trigger': 'clear', 'source': 'B', 'dest': 'A', 'conditions': model.clear_state},                           {'trigger': 'clear', 'source': 'C', 'dest': 'A',                            'conditions': partial(model.clear_state, False, force=True)},                       ],                       initial='A', show_conditions=True)model.get_graph().draw('my_state_diagram.png', prog='dot')\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">GraphMachine</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">functools</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">partial</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">Model</span>:    <span class=\"pl-k\">def</span> <span class=\"pl-en\">clear_state</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">deep</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">False</span>, <span class=\"pl-s1\">force</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">False</span>):        <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"Clearing state ...\"</span>)        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">True</span><span class=\"pl-s1\">model</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Model</span>()<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">GraphMachine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">model</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'C'</span>],                       <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span>[                           {<span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'clear'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'conditions'</span>: <span class=\"pl-s1\">model</span>.<span class=\"pl-s1\">clear_state</span>},                           {<span class=\"pl-s\">'trigger'</span>: <span class=\"pl-s\">'clear'</span>, <span class=\"pl-s\">'source'</span>: <span class=\"pl-s\">'C'</span>, <span class=\"pl-s\">'dest'</span>: <span class=\"pl-s\">'A'</span>,                            <span class=\"pl-s\">'conditions'</span>: <span class=\"pl-en\">partial</span>(<span class=\"pl-s1\">model</span>.<span class=\"pl-s1\">clear_state</span>, <span class=\"pl-c1\">False</span>, <span class=\"pl-s1\">force</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)},                       ],                       <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">show_conditions</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-s1\">model</span>.<span class=\"pl-en\">get_graph</span>().<span class=\"pl-en\">draw</span>(<span class=\"pl-s\">'my_state_diagram.png'</span>, <span class=\"pl-s1\">prog</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'dot'</span>)</pre></div><p dir=\"auto\">This should produce something similar to this:</p><p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/205986/110783076-39087f80-8268-11eb-8fa1-fc7bac97f4cf.png\"><img src=\"https://user-images.githubusercontent.com/205986/110783076-39087f80-8268-11eb-8fa1-fc7bac97f4cf.png\" alt=\"state diagram references_example\" style=\"max-width: 100%;\"></a></p><p dir=\"auto\">If the format of references does not suit your needs, you can override the static method <code>GraphMachine.format_references</code>. If you want to skip reference entirely, just let <code>GraphMachine.format_references</code> return <code>None</code>.Also, have a look at our <a href=\"/pytransitions/transitions/blob/master/examples\">example</a> IPython/Jupyter notebooks for a more detailed example about how to use and edit graphs.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-hsm\"></a>Hierarchical State Machine (HSM)</h3><a id=\"user-content-hierarchical-state-machine-hsm\" class=\"anchor-element\" aria-label=\"Permalink: Hierarchical State Machine (HSM)\" href=\"#hierarchical-state-machine-hsm\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Transitions includes an extension module which allows nesting states.This allows us to create contexts and to model cases where states are related to certain subtasks in the state machine.To create a nested state, either import <code>NestedState</code> from transitions or use a dictionary with the initialization arguments <code>name</code> and <code>children</code>.Optionally, <code>initial</code> can be used to define a sub state to transit to, when the nested state is entered.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions.extensions import HierarchicalMachinestates = ['standing', 'walking', {'name': 'caffeinated', 'children':['dithering', 'running']}]transitions = [  ['walk', 'standing', 'walking'],  ['stop', 'walking', 'standing'],  ['drink', '*', 'caffeinated'],  ['walk', ['caffeinated', 'caffeinated_dithering'], 'caffeinated_running'],  ['relax', 'caffeinated', 'standing']]machine = HierarchicalMachine(states=states, transitions=transitions, initial='standing', ignore_invalid_triggers=True)machine.walk() # Walking nowmachine.stop() # let's stop for a momentmachine.drink() # coffee timemachine.state&gt;&gt;&gt; 'caffeinated'machine.walk() # we have to go fastermachine.state&gt;&gt;&gt; 'caffeinated_running'machine.stop() # can't stop moving!machine.state&gt;&gt;&gt; 'caffeinated_running'machine.relax() # leave nested statemachine.state # phew, what a ride&gt;&gt;&gt; 'standing'# machine.on_enter_caffeinated_running('callback_method')\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">HierarchicalMachine</span><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'standing'</span>, <span class=\"pl-s\">'walking'</span>, {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'caffeinated'</span>, <span class=\"pl-s\">'children'</span>:[<span class=\"pl-s\">'dithering'</span>, <span class=\"pl-s\">'running'</span>]}]<span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [  [<span class=\"pl-s\">'walk'</span>, <span class=\"pl-s\">'standing'</span>, <span class=\"pl-s\">'walking'</span>],  [<span class=\"pl-s\">'stop'</span>, <span class=\"pl-s\">'walking'</span>, <span class=\"pl-s\">'standing'</span>],  [<span class=\"pl-s\">'drink'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-s\">'caffeinated'</span>],  [<span class=\"pl-s\">'walk'</span>, [<span class=\"pl-s\">'caffeinated'</span>, <span class=\"pl-s\">'caffeinated_dithering'</span>], <span class=\"pl-s\">'caffeinated_running'</span>],  [<span class=\"pl-s\">'relax'</span>, <span class=\"pl-s\">'caffeinated'</span>, <span class=\"pl-s\">'standing'</span>]]<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">HierarchicalMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'standing'</span>, <span class=\"pl-s1\">ignore_invalid_triggers</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">walk</span>() <span class=\"pl-c\"># Walking now</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">stop</span>() <span class=\"pl-c\"># let's stop for a moment</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">drink</span>() <span class=\"pl-c\"># coffee time</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'caffeinated'</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">walk</span>() <span class=\"pl-c\"># we have to go faster</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'caffeinated_running'</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">stop</span>() <span class=\"pl-c\"># can't stop moving!</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'caffeinated_running'</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">relax</span>() <span class=\"pl-c\"># leave nested state</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">state</span> <span class=\"pl-c\"># phew, what a ride</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'standing'</span><span class=\"pl-c\"># machine.on_enter_caffeinated_running('callback_method')</span></pre></div><p dir=\"auto\">A configuration making use of <code>initial</code> could look like this:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# ...states = ['standing', 'walking', {'name': 'caffeinated', 'initial': 'dithering', 'children': ['dithering', 'running']}]transitions = [  ['walk', 'standing', 'walking'],  ['stop', 'walking', 'standing'],  # this transition will end in 'caffeinated_dithering'...  ['drink', '*', 'caffeinated'],  # ... that is why we do not need do specify 'caffeinated' here anymore  ['walk', 'caffeinated_dithering', 'caffeinated_running'],  ['relax', 'caffeinated', 'standing']]# ...\"><pre><span class=\"pl-c\"># ...</span><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'standing'</span>, <span class=\"pl-s\">'walking'</span>, {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'caffeinated'</span>, <span class=\"pl-s\">'initial'</span>: <span class=\"pl-s\">'dithering'</span>, <span class=\"pl-s\">'children'</span>: [<span class=\"pl-s\">'dithering'</span>, <span class=\"pl-s\">'running'</span>]}]<span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [  [<span class=\"pl-s\">'walk'</span>, <span class=\"pl-s\">'standing'</span>, <span class=\"pl-s\">'walking'</span>],  [<span class=\"pl-s\">'stop'</span>, <span class=\"pl-s\">'walking'</span>, <span class=\"pl-s\">'standing'</span>],  <span class=\"pl-c\"># this transition will end in 'caffeinated_dithering'...</span>  [<span class=\"pl-s\">'drink'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-s\">'caffeinated'</span>],  <span class=\"pl-c\"># ... that is why we do not need do specify 'caffeinated' here anymore</span>  [<span class=\"pl-s\">'walk'</span>, <span class=\"pl-s\">'caffeinated_dithering'</span>, <span class=\"pl-s\">'caffeinated_running'</span>],  [<span class=\"pl-s\">'relax'</span>, <span class=\"pl-s\">'caffeinated'</span>, <span class=\"pl-s\">'standing'</span>]]<span class=\"pl-c\"># ...</span></pre></div><p dir=\"auto\">The <code>initial</code> keyword of the <code>HierarchicalMachine</code> constructor accepts nested states (e.g. <code>initial='caffeinated_running'</code>) and a list of states which is considered to be a parallel state (e.g. <code>initial=['A', 'B']</code>) or the current state of another model (<code>initial=model.state</code>) which should be effectively one of the previous mentioned options. Note that when passing a string, <code>transition</code> will check the targeted state for <code>initial</code> substates and use this as an entry state. This will be done recursively until a substate does not mention an initial state. Parallel states or a state passed as a list will be used 'as is' and no further initial evaluation will be conducted.</p><p dir=\"auto\">Note that your previously created state object <em>must be</em> a <code>NestedState</code> or a derived class of it.The standard <code>State</code> class used in simple <code>Machine</code> instances lacks features required for nesting.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions.extensions.nesting import HierarchicalMachine, NestedStatefrom transitions import  Statem = HierarchicalMachine(states=['A'], initial='initial')m.add_state('B')  # finem.add_state({'name': 'C'})  # also finem.add_state(NestedState('D'))  # fine as wellm.add_state(State('E'))  # does not work!\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span>.<span class=\"pl-s1\">nesting</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">HierarchicalMachine</span>, <span class=\"pl-v\">NestedState</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span> <span class=\"pl-k\">import</span>  <span class=\"pl-v\">State</span><span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">HierarchicalMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'A'</span>], <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'initial'</span>)<span class=\"pl-s1\">m</span>.<span class=\"pl-en\">add_state</span>(<span class=\"pl-s\">'B'</span>)  <span class=\"pl-c\"># fine</span><span class=\"pl-s1\">m</span>.<span class=\"pl-en\">add_state</span>({<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'C'</span>})  <span class=\"pl-c\"># also fine</span><span class=\"pl-s1\">m</span>.<span class=\"pl-en\">add_state</span>(<span class=\"pl-v\">NestedState</span>(<span class=\"pl-s\">'D'</span>))  <span class=\"pl-c\"># fine as well</span><span class=\"pl-s1\">m</span>.<span class=\"pl-en\">add_state</span>(<span class=\"pl-v\">State</span>(<span class=\"pl-s\">'E'</span>))  <span class=\"pl-c\"># does not work!</span></pre></div><p dir=\"auto\">Some things that have to be considered when working with nested states: State <em>names are concatenated</em> with <code>NestedState.separator</code>.Currently the separator is set to underscore ('_') and therefore behaves similar to the basic machine.This means a substate <code>bar</code> from state <code>foo</code> will be known by <code>foo_bar</code>. A substate <code>baz</code> of <code>bar</code> will be referred to as <code>foo_bar_baz</code> and so on.When entering a substate, <code>enter</code> will be called for all parent states. The same is true for exiting substates.Third, nested states can overwrite transition behaviour of their parents.If a transition is not known to the current state it will be delegated to its parent.</p><p dir=\"auto\"><strong>This means that in the standard configuration, state names in HSMs MUST NOT contain underscores.</strong>For <code>transitions</code> it's impossible to tell whether <code>machine.add_state('state_name')</code> should add a state named <code>state_name</code> or add a substate <code>name</code> to the state <code>state</code>.In some cases this is not sufficient however.For instance if state names consist of more than one word and you want/need to use underscore to separate them instead of <code>CamelCase</code>.To deal with this, you can change the character used for separation quite easily.You can even use fancy unicode characters if you use Python 3.Setting the separator to something else than underscore changes some of the behaviour (auto_transition and setting callbacks) though:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions.extensions import HierarchicalMachinefrom transitions.extensions.nesting import NestedStateNestedState.separator = '\u21a6'states = ['A', 'B',  {'name': 'C', 'children':['1', '2',    {'name': '3', 'children': ['a', 'b', 'c']}  ]}]transitions = [    ['reset', 'C', 'A'],    ['reset', 'C\u21a62', 'C']  # overwriting parent reset]# we rely on auto transitionsmachine = HierarchicalMachine(states=states, transitions=transitions, initial='A')machine.to_B()  # exit state A, enter state Bmachine.to_C()  # exit B, enter Cmachine.to_C.s3.a()  # enter C\u21a6a; enter C\u21a63\u21a6a;machine.state&gt;&gt;&gt; 'C\u21a63\u21a6a'assert machine.is_C.s3.a()machine.to('C\u21a62')  # not interactive; exit C\u21a63\u21a6a, exit C\u21a63, enter C\u21a62machine.reset()  # exit C\u21a62; reset C has been overwritten by C\u21a63machine.state&gt;&gt;&gt; 'C'machine.reset()  # exit C, enter Amachine.state&gt;&gt;&gt; 'A'# s.on_enter('C\u21a63\u21a6a', 'callback_method')\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">HierarchicalMachine</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span>.<span class=\"pl-s1\">nesting</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">NestedState</span><span class=\"pl-v\">NestedState</span>.<span class=\"pl-s1\">separator</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'\u21a6'</span><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>,  {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'C'</span>, <span class=\"pl-s\">'children'</span>:[<span class=\"pl-s\">'1'</span>, <span class=\"pl-s\">'2'</span>,    {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'3'</span>, <span class=\"pl-s\">'children'</span>: [<span class=\"pl-s\">'a'</span>, <span class=\"pl-s\">'b'</span>, <span class=\"pl-s\">'c'</span>]}  ]}]<span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [    [<span class=\"pl-s\">'reset'</span>, <span class=\"pl-s\">'C'</span>, <span class=\"pl-s\">'A'</span>],    [<span class=\"pl-s\">'reset'</span>, <span class=\"pl-s\">'C\u21a62'</span>, <span class=\"pl-s\">'C'</span>]  <span class=\"pl-c\"># overwriting parent reset</span>]<span class=\"pl-c\"># we rely on auto transitions</span><span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">HierarchicalMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">to_B</span>()  <span class=\"pl-c\"># exit state A, enter state B</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">to_C</span>()  <span class=\"pl-c\"># exit B, enter C</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">to_C</span>.<span class=\"pl-s1\">s3</span>.<span class=\"pl-en\">a</span>()  <span class=\"pl-c\"># enter C\u21a6a; enter C\u21a63\u21a6a;</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'C\u21a63\u21a6a'</span><span class=\"pl-k\">assert</span> <span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">is_C</span>.<span class=\"pl-s1\">s3</span>.<span class=\"pl-en\">a</span>()<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">to</span>(<span class=\"pl-s\">'C\u21a62'</span>)  <span class=\"pl-c\"># not interactive; exit C\u21a63\u21a6a, exit C\u21a63, enter C\u21a62</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">reset</span>()  <span class=\"pl-c\"># exit C\u21a62; reset C has been overwritten by C\u21a63</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'C'</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">reset</span>()  <span class=\"pl-c\"># exit C, enter A</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'A'</span><span class=\"pl-c\"># s.on_enter('C\u21a63\u21a6a', 'callback_method')</span></pre></div><p dir=\"auto\">Instead of <code>to_C_3_a()</code> auto transition is called as <code>to_C.s3.a()</code>. If your substate starts with a digit, transitions adds a prefix 's' ('3' becomes 's3') to the auto transition <code>FunctionWrapper</code> to comply with the attribute naming scheme of Python.If interactive completion is not required, <code>to('C\u21a63\u21a6a')</code> can be called directly. Additionally, <code>on_enter/exit_&lt;&lt;state name&gt;&gt;</code> is replaced with <code>on_enter/exit(state_name, callback)</code>. State checks can be conducted in a similar fashion. Instead of <code>is_C_3_a()</code>, the <code>FunctionWrapper</code> variant <code>is_C.s3.a()</code> can be used.</p><p dir=\"auto\">To check whether the current state is a substate of a specific state, <code>is_state</code> supports the keyword <code>allow_substates</code>:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"machine.state&gt;&gt;&gt; 'C.2.a'machine.is_C() # checks for specific states&gt;&gt;&gt; Falsemachine.is_C(allow_substates=True)&gt;&gt;&gt; Trueassert machine.is_C.s2() is Falseassert machine.is_C.s2(allow_substates=True)  # FunctionWrapper support allow_substate as well\"><pre><span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'C.2.a'</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">is_C</span>() <span class=\"pl-c\"># checks for specific states</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">False</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">is_C</span>(<span class=\"pl-s1\">allow_substates</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)<span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">True</span><span class=\"pl-k\">assert</span> <span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">is_C</span>.<span class=\"pl-en\">s2</span>() <span class=\"pl-c1\">is</span> <span class=\"pl-c1\">False</span><span class=\"pl-k\">assert</span> <span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">is_C</span>.<span class=\"pl-en\">s2</span>(<span class=\"pl-s1\">allow_substates</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)  <span class=\"pl-c\"># FunctionWrapper support allow_substate as well</span></pre></div><p dir=\"auto\"><em>new in 0.8.0</em><br>You can use enumerations in HSMs as well but keep in mind that <code>Enum</code> are compared by value.If you have a value more than once in a state tree those states cannot be distinguished.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"states = [States.RED, States.YELLOW, {'name': States.GREEN, 'children': ['tick', 'tock']}]states = ['A', {'name': 'B', 'children': states, 'initial': States.GREEN}, States.GREEN]machine = HierarchicalMachine(states=states)machine.to_B()machine.is_GREEN()  # returns True even though the actual state is B_GREEN\"><pre><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-v\">States</span>.<span class=\"pl-v\">RED</span>, <span class=\"pl-v\">States</span>.<span class=\"pl-v\">YELLOW</span>, {<span class=\"pl-s\">'name'</span>: <span class=\"pl-v\">States</span>.<span class=\"pl-v\">GREEN</span>, <span class=\"pl-s\">'children'</span>: [<span class=\"pl-s\">'tick'</span>, <span class=\"pl-s\">'tock'</span>]}]<span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'A'</span>, {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'children'</span>: <span class=\"pl-s1\">states</span>, <span class=\"pl-s\">'initial'</span>: <span class=\"pl-v\">States</span>.<span class=\"pl-v\">GREEN</span>}, <span class=\"pl-v\">States</span>.<span class=\"pl-v\">GREEN</span>]<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">HierarchicalMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">to_B</span>()<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">is_GREEN</span>()  <span class=\"pl-c\"># returns True even though the actual state is B_GREEN</span></pre></div><p dir=\"auto\"><em>new in 0.8.0</em><br><code>HierarchicalMachine</code> has been rewritten from scratch to support parallel states and better isolation of nested states.This involves some tweaks based on community feedback.To get an idea of processing order and configuration have a look at the following example:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions.extensions.nesting import HierarchicalMachineimport loggingstates = ['A', 'B', {'name': 'C', 'parallel': [{'name': '1', 'children': ['a', 'b', 'c'], 'initial': 'a',                                                'transitions': [['go', 'a', 'b']]},                                               {'name': '2', 'children': ['x', 'y', 'z'], 'initial': 'z'}],                      'transitions': [['go', '2_z', '2_x']]}]transitions = [['reset', 'C_1_b', 'B']]logging.basicConfig(level=logging.INFO)machine = HierarchicalMachine(states=states, transitions=transitions, initial='A')machine.to_C()# INFO:transitions.extensions.nesting:Exited state A# INFO:transitions.extensions.nesting:Entered state C# INFO:transitions.extensions.nesting:Entered state C_1# INFO:transitions.extensions.nesting:Entered state C_2# INFO:transitions.extensions.nesting:Entered state C_1_a# INFO:transitions.extensions.nesting:Entered state C_2_zmachine.go()# INFO:transitions.extensions.nesting:Exited state C_1_a# INFO:transitions.extensions.nesting:Entered state C_1_b# INFO:transitions.extensions.nesting:Exited state C_2_z# INFO:transitions.extensions.nesting:Entered state C_2_xmachine.reset()# INFO:transitions.extensions.nesting:Exited state C_1_b# INFO:transitions.extensions.nesting:Exited state C_2_x# INFO:transitions.extensions.nesting:Exited state C_1# INFO:transitions.extensions.nesting:Exited state C_2# INFO:transitions.extensions.nesting:Exited state C# INFO:transitions.extensions.nesting:Entered state B\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span>.<span class=\"pl-s1\">nesting</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">HierarchicalMachine</span><span class=\"pl-k\">import</span> <span class=\"pl-s1\">logging</span><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'C'</span>, <span class=\"pl-s\">'parallel'</span>: [{<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'1'</span>, <span class=\"pl-s\">'children'</span>: [<span class=\"pl-s\">'a'</span>, <span class=\"pl-s\">'b'</span>, <span class=\"pl-s\">'c'</span>], <span class=\"pl-s\">'initial'</span>: <span class=\"pl-s\">'a'</span>,                                                <span class=\"pl-s\">'transitions'</span>: [[<span class=\"pl-s\">'go'</span>, <span class=\"pl-s\">'a'</span>, <span class=\"pl-s\">'b'</span>]]},                                               {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'2'</span>, <span class=\"pl-s\">'children'</span>: [<span class=\"pl-s\">'x'</span>, <span class=\"pl-s\">'y'</span>, <span class=\"pl-s\">'z'</span>], <span class=\"pl-s\">'initial'</span>: <span class=\"pl-s\">'z'</span>}],                      <span class=\"pl-s\">'transitions'</span>: [[<span class=\"pl-s\">'go'</span>, <span class=\"pl-s\">'2_z'</span>, <span class=\"pl-s\">'2_x'</span>]]}]<span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [[<span class=\"pl-s\">'reset'</span>, <span class=\"pl-s\">'C_1_b'</span>, <span class=\"pl-s\">'B'</span>]]<span class=\"pl-s1\">logging</span>.<span class=\"pl-en\">basicConfig</span>(<span class=\"pl-s1\">level</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">logging</span>.<span class=\"pl-v\">INFO</span>)<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">HierarchicalMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">to_C</span>()<span class=\"pl-c\"># INFO:transitions.extensions.nesting:Exited state A</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Entered state C</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Entered state C_1</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Entered state C_2</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Entered state C_1_a</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Entered state C_2_z</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">go</span>()<span class=\"pl-c\"># INFO:transitions.extensions.nesting:Exited state C_1_a</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Entered state C_1_b</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Exited state C_2_z</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Entered state C_2_x</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">reset</span>()<span class=\"pl-c\"># INFO:transitions.extensions.nesting:Exited state C_1_b</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Exited state C_2_x</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Exited state C_1</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Exited state C_2</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Exited state C</span><span class=\"pl-c\"># INFO:transitions.extensions.nesting:Entered state B</span></pre></div><p dir=\"auto\">When using <code>parallel</code> instead of <code>children</code>, <code>transitions</code> will enter all states of the passed list at the same time.Which substate to enter is defined by <code>initial</code> which should <em>always</em> point to a direct substate.A novel feature is to define local transitions by passing the <code>transitions</code> keyword in a state definition.The above defined transition <code>['go', 'a', 'b']</code> is only valid in <code>C_1</code>.While you can reference substates as done in <code>['go', '2_z', '2_x']</code> you cannot reference parent states directly in locally defined transitions.When a parent state is exited, its children will also be exited.In addition to the processing order of transitions known from <code>Machine</code> where transitions are considered in the order they were added, <code>HierarchicalMachine</code> considers hierarchy as well.Transitions defined in substates will be evaluated first (e.g. <code>C_1_a</code> is left before <code>C_2_z</code>) and transitions defined with wildcard <code>*</code> will (for now) only add transitions to root states (in this example <code>A</code>, <code>B</code>, <code>C</code>)Starting with <em>0.8.0</em> nested states can be added directly and will issue the creation of parent states on-the-fly:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"m = HierarchicalMachine(states=['A'], initial='A')m.add_state('B_1_a')m.to_B_1()assert m.is_B(allow_substates=True)\"><pre><span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">HierarchicalMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'A'</span>], <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-s1\">m</span>.<span class=\"pl-en\">add_state</span>(<span class=\"pl-s\">'B_1_a'</span>)<span class=\"pl-s1\">m</span>.<span class=\"pl-en\">to_B_1</span>()<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">is_B</span>(<span class=\"pl-s1\">allow_substates</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Reuse of previously created HSMs</h4><a id=\"user-content-reuse-of-previously-created-hsms\" class=\"anchor-element\" aria-label=\"Permalink: Reuse of previously created HSMs\" href=\"#reuse-of-previously-created-hsms\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">Besides semantic order, nested states are very handy if you want to specify state machines for specific tasks and plan to reuse them.Before <em>0.8.0</em>, a <code>HierarchicalMachine</code> would not integrate the machine instance itself but the states and transitions by creating copies of them.However, since <em>0.8.0</em> <code>(Nested)State</code> instances are just <strong>referenced</strong> which means changes in one machine's collection of states and events will influence the other machine instance. Models and their state will not be shared though.Note that events and transitions are also copied by reference and will be shared by both instances if you do not use the <code>remap</code> keyword.This change was done to be more in line with <code>Machine</code> which also uses passed <code>State</code> instances by reference.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"count_states = ['1', '2', '3', 'done']count_trans = [    ['increase', '1', '2'],    ['increase', '2', '3'],    ['decrease', '3', '2'],    ['decrease', '2', '1'],    ['done', '3', 'done'],    ['reset', '*', '1']]counter = HierarchicalMachine(states=count_states, transitions=count_trans, initial='1')counter.increase() # love my counterstates = ['waiting', 'collecting', {'name': 'counting', 'children': counter}]transitions = [    ['collect', '*', 'collecting'],    ['wait', '*', 'waiting'],    ['count', 'collecting', 'counting']]collector = HierarchicalMachine(states=states, transitions=transitions, initial='waiting')collector.collect()  # collectingcollector.count()  # let's see what we got; counting_1collector.increase()  # counting_2collector.increase()  # counting_3collector.done()  # collector.state == counting_donecollector.wait()  # collector.state == waiting\"><pre><span class=\"pl-s1\">count_states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'1'</span>, <span class=\"pl-s\">'2'</span>, <span class=\"pl-s\">'3'</span>, <span class=\"pl-s\">'done'</span>]<span class=\"pl-s1\">count_trans</span> <span class=\"pl-c1\">=</span> [    [<span class=\"pl-s\">'increase'</span>, <span class=\"pl-s\">'1'</span>, <span class=\"pl-s\">'2'</span>],    [<span class=\"pl-s\">'increase'</span>, <span class=\"pl-s\">'2'</span>, <span class=\"pl-s\">'3'</span>],    [<span class=\"pl-s\">'decrease'</span>, <span class=\"pl-s\">'3'</span>, <span class=\"pl-s\">'2'</span>],    [<span class=\"pl-s\">'decrease'</span>, <span class=\"pl-s\">'2'</span>, <span class=\"pl-s\">'1'</span>],    [<span class=\"pl-s\">'done'</span>, <span class=\"pl-s\">'3'</span>, <span class=\"pl-s\">'done'</span>],    [<span class=\"pl-s\">'reset'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-s\">'1'</span>]]<span class=\"pl-s1\">counter</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">HierarchicalMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">count_states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">count_trans</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'1'</span>)<span class=\"pl-s1\">counter</span>.<span class=\"pl-en\">increase</span>() <span class=\"pl-c\"># love my counter</span><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'waiting'</span>, <span class=\"pl-s\">'collecting'</span>, {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'counting'</span>, <span class=\"pl-s\">'children'</span>: <span class=\"pl-s1\">counter</span>}]<span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [    [<span class=\"pl-s\">'collect'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-s\">'collecting'</span>],    [<span class=\"pl-s\">'wait'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-s\">'waiting'</span>],    [<span class=\"pl-s\">'count'</span>, <span class=\"pl-s\">'collecting'</span>, <span class=\"pl-s\">'counting'</span>]]<span class=\"pl-s1\">collector</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">HierarchicalMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'waiting'</span>)<span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">collect</span>()  <span class=\"pl-c\"># collecting</span><span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">count</span>()  <span class=\"pl-c\"># let's see what we got; counting_1</span><span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">increase</span>()  <span class=\"pl-c\"># counting_2</span><span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">increase</span>()  <span class=\"pl-c\"># counting_3</span><span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">done</span>()  <span class=\"pl-c\"># collector.state == counting_done</span><span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">wait</span>()  <span class=\"pl-c\"># collector.state == waiting</span></pre></div><p dir=\"auto\">If a <code>HierarchicalMachine</code> is passed with the <code>children</code> keyword, the initial state of this machine will be assigned to the new parent state.In the above example we see that entering <code>counting</code> will also enter <code>counting_1</code>.If this is undesired behaviour and the machine should rather halt in the parent state, the user can pass <code>initial</code> as <code>False</code> like <code>{'name': 'counting', 'children': counter, 'initial': False}</code>.</p><p dir=\"auto\">Sometimes you want such an embedded state collection to 'return' which means after it is done it should exit and transit to one of your super states.To achieve this behaviour you can remap state transitions.In the example above we would like the counter to return if the state <code>done</code> was reached.This is done as follows:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"states = ['waiting', 'collecting', {'name': 'counting', 'children': counter, 'remap': {'done': 'waiting'}}]... # same as abovecollector.increase() # counting_3collector.done()collector.state&gt;&gt;&gt; 'waiting' # be aware that 'counting_done' will be removed from the state machine\"><pre><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'waiting'</span>, <span class=\"pl-s\">'collecting'</span>, {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'counting'</span>, <span class=\"pl-s\">'children'</span>: <span class=\"pl-s1\">counter</span>, <span class=\"pl-s\">'remap'</span>: {<span class=\"pl-s\">'done'</span>: <span class=\"pl-s\">'waiting'</span>}}]... <span class=\"pl-c\"># same as above</span><span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">increase</span>() <span class=\"pl-c\"># counting_3</span><span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">done</span>()<span class=\"pl-s1\">collector</span>.<span class=\"pl-s1\">state</span><span class=\"pl-c1\">&gt;&gt;</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-s\">'waiting'</span> <span class=\"pl-c\"># be aware that 'counting_done' will be removed from the state machine</span></pre></div><p dir=\"auto\">As mentioned above, using <code>remap</code> will <strong>copy</strong> events and transitions since they could not be valid in the original state machine.If a reused state machine does not have a final state, you can of course add the transitions manually.If 'counter' had no 'done' state, we could just add <code>['done', 'counter_3', 'waiting']</code> to achieve the same behaviour.</p><p dir=\"auto\">In cases where you want states and transitions to be copied by value rather than reference (for instance, if you want to keep the pre-0.8 behaviour) you can do so by creating a <code>NestedState</code> and assigning deep copies of the machine's events and states to it.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions.extensions.nesting import NestedStatefrom copy import deepcopy# ... configuring and creating countercounting_state = NestedState(name=&quot;counting&quot;, initial='1')counting_state.states = deepcopy(counter.states)counting_state.events = deepcopy(counter.events)states = ['waiting', 'collecting', counting_state]\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span>.<span class=\"pl-s1\">nesting</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">NestedState</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">copy</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">deepcopy</span><span class=\"pl-c\"># ... configuring and creating counter</span><span class=\"pl-s1\">counting_state</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">NestedState</span>(<span class=\"pl-s1\">name</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"counting\"</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'1'</span>)<span class=\"pl-s1\">counting_state</span>.<span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">deepcopy</span>(<span class=\"pl-s1\">counter</span>.<span class=\"pl-s1\">states</span>)<span class=\"pl-s1\">counting_state</span>.<span class=\"pl-s1\">events</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">deepcopy</span>(<span class=\"pl-s1\">counter</span>.<span class=\"pl-s1\">events</span>)<span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'waiting'</span>, <span class=\"pl-s\">'collecting'</span>, <span class=\"pl-s1\">counting_state</span>]</pre></div><p dir=\"auto\">For complex state machines, sharing configurations rather than instantiated machines might be more feasible.Especially since instantiated machines must be derived from <code>HierarchicalMachine</code>.Such configurations can be stored and loaded easily via JSON or YAML (see the <a href=\"/pytransitions/transitions/blob/master/examples/Frequently%20asked%20questions.ipynb\">FAQ</a>).<code>HierarchicalMachine</code> allows defining substates either with the keyword <code>children</code> or <code>states</code>.If both are present, only <code>children</code> will be considered.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"counter_conf = {    'name': 'counting',    'states': ['1', '2', '3', 'done'],    'transitions': [        ['increase', '1', '2'],        ['increase', '2', '3'],        ['decrease', '3', '2'],        ['decrease', '2', '1'],        ['done', '3', 'done'],        ['reset', '*', '1']    ],    'initial': '1'}collector_conf = {    'name': 'collector',    'states': ['waiting', 'collecting', counter_conf],    'transitions': [        ['collect', '*', 'collecting'],        ['wait', '*', 'waiting'],        ['count', 'collecting', 'counting']    ],    'initial': 'waiting'}collector = HierarchicalMachine(**collector_conf)collector.collect()collector.count()collector.increase()assert collector.is_counting_2()\"><pre><span class=\"pl-s1\">counter_conf</span> <span class=\"pl-c1\">=</span> {    <span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'counting'</span>,    <span class=\"pl-s\">'states'</span>: [<span class=\"pl-s\">'1'</span>, <span class=\"pl-s\">'2'</span>, <span class=\"pl-s\">'3'</span>, <span class=\"pl-s\">'done'</span>],    <span class=\"pl-s\">'transitions'</span>: [        [<span class=\"pl-s\">'increase'</span>, <span class=\"pl-s\">'1'</span>, <span class=\"pl-s\">'2'</span>],        [<span class=\"pl-s\">'increase'</span>, <span class=\"pl-s\">'2'</span>, <span class=\"pl-s\">'3'</span>],        [<span class=\"pl-s\">'decrease'</span>, <span class=\"pl-s\">'3'</span>, <span class=\"pl-s\">'2'</span>],        [<span class=\"pl-s\">'decrease'</span>, <span class=\"pl-s\">'2'</span>, <span class=\"pl-s\">'1'</span>],        [<span class=\"pl-s\">'done'</span>, <span class=\"pl-s\">'3'</span>, <span class=\"pl-s\">'done'</span>],        [<span class=\"pl-s\">'reset'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-s\">'1'</span>]    ],    <span class=\"pl-s\">'initial'</span>: <span class=\"pl-s\">'1'</span>}<span class=\"pl-s1\">collector_conf</span> <span class=\"pl-c1\">=</span> {    <span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'collector'</span>,    <span class=\"pl-s\">'states'</span>: [<span class=\"pl-s\">'waiting'</span>, <span class=\"pl-s\">'collecting'</span>, <span class=\"pl-s1\">counter_conf</span>],    <span class=\"pl-s\">'transitions'</span>: [        [<span class=\"pl-s\">'collect'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-s\">'collecting'</span>],        [<span class=\"pl-s\">'wait'</span>, <span class=\"pl-s\">'*'</span>, <span class=\"pl-s\">'waiting'</span>],        [<span class=\"pl-s\">'count'</span>, <span class=\"pl-s\">'collecting'</span>, <span class=\"pl-s\">'counting'</span>]    ],    <span class=\"pl-s\">'initial'</span>: <span class=\"pl-s\">'waiting'</span>}<span class=\"pl-s1\">collector</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">HierarchicalMachine</span>(<span class=\"pl-c1\">**</span><span class=\"pl-s1\">collector_conf</span>)<span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">collect</span>()<span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">count</span>()<span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">increase</span>()<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">collector</span>.<span class=\"pl-en\">is_counting_2</span>()</pre></div><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-threading\"></a> Threadsafe(-ish) State Machine</h4><a id=\"user-content--threadsafe-ish-state-machine\" class=\"anchor-element\" aria-label=\"Permalink:  Threadsafe(-ish) State Machine\" href=\"#-threadsafe-ish-state-machine\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">In cases where event dispatching is done in threads, one can use either <code>LockedMachine</code> or <code>LockedHierarchicalMachine</code> where <strong>function access</strong> (!sic) is secured with reentrant locks.This does not save you from corrupting your machine by tinkering with member variables of your model or state machine.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions.extensions import LockedMachinefrom threading import Threadimport timestates = ['A', 'B', 'C']machine = LockedMachine(states=states, initial='A')# let us assume that entering B will take some timethread = Thread(target=machine.to_B)thread.start()time.sleep(0.01) # thread requires some time to startmachine.to_C() # synchronized access; won't execute before thread is done# accessing attributes directlythread = Thread(target=machine.to_B)thread.start()machine.new_attrib = 42 # not synchronized! will mess with execution order\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">LockedMachine</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">threading</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">Thread</span><span class=\"pl-k\">import</span> <span class=\"pl-s1\">time</span><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'C'</span>]<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">LockedMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>)<span class=\"pl-c\"># let us assume that entering B will take some time</span><span class=\"pl-s1\">thread</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Thread</span>(<span class=\"pl-s1\">target</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">to_B</span>)<span class=\"pl-s1\">thread</span>.<span class=\"pl-en\">start</span>()<span class=\"pl-s1\">time</span>.<span class=\"pl-en\">sleep</span>(<span class=\"pl-c1\">0.01</span>) <span class=\"pl-c\"># thread requires some time to start</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">to_C</span>() <span class=\"pl-c\"># synchronized access; won't execute before thread is done</span><span class=\"pl-c\"># accessing attributes directly</span><span class=\"pl-s1\">thread</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Thread</span>(<span class=\"pl-s1\">target</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">to_B</span>)<span class=\"pl-s1\">thread</span>.<span class=\"pl-en\">start</span>()<span class=\"pl-s1\">machine</span>.<span class=\"pl-s1\">new_attrib</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">42</span> <span class=\"pl-c\"># not synchronized! will mess with execution order</span></pre></div><p dir=\"auto\">Any python context manager can be passed in via the <code>machine_context</code> keyword argument:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions.extensions import LockedMachinefrom threading import RLockstates = ['A', 'B', 'C']lock1 = RLock()lock2 = RLock()machine = LockedMachine(states=states, initial='A', machine_context=[lock1, lock2])\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">LockedMachine</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">threading</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">RLock</span><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'C'</span>]<span class=\"pl-s1\">lock1</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">RLock</span>()<span class=\"pl-s1\">lock2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">RLock</span>()<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">LockedMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">machine_context</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s1\">lock1</span>, <span class=\"pl-s1\">lock2</span>])</pre></div><p dir=\"auto\">Any contexts via <code>machine_model</code> will be shared between all models registered with the <code>Machine</code>.Per-model contexts can be added as well:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"lock3 = RLock()machine.add_model(model, model_context=lock3)\"><pre><span class=\"pl-s1\">lock3</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">RLock</span>()<span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">add_model</span>(<span class=\"pl-s1\">model</span>, <span class=\"pl-s1\">model_context</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">lock3</span>)</pre></div><p dir=\"auto\">It's important that all user-provided context managers are re-entrant since the state machine will call them multipletimes, even in the context of a single trigger invocation.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-async\"></a> Using async callbacks</h4><a id=\"user-content--using-async-callbacks\" class=\"anchor-element\" aria-label=\"Permalink:  Using async callbacks\" href=\"#-using-async-callbacks\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">If you are using Python 3.7 or later, you can use <code>AsyncMachine</code> to work with asynchronous callbacks.You can mix synchronous and asynchronous callbacks if you like but this may have undesired side effects.Note that events need to be awaited and the event loop must also be handled by you.</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions.extensions.asyncio import AsyncMachineimport asyncioimport timeclass AsyncModel:    def prepare_model(self):        print(&quot;I am synchronous.&quot;)        self.start_time = time.time()    async def before_change(self):        print(&quot;I am asynchronous and will block now for 100 milliseconds.&quot;)        await asyncio.sleep(0.1)        print(&quot;I am done waiting.&quot;)    def sync_before_change(self):        print(&quot;I am synchronous and will block the event loop (what I probably shouldn't)&quot;)        time.sleep(0.1)        print(&quot;I am done waiting synchronously.&quot;)    def after_change(self):        print(f&quot;I am synchronous again. Execution took {int((time.time() - self.start_time) * 1000)} ms.&quot;)transition = dict(trigger=&quot;start&quot;, source=&quot;Start&quot;, dest=&quot;Done&quot;, prepare=&quot;prepare_model&quot;,                  before=[&quot;before_change&quot;] * 5 + [&quot;sync_before_change&quot;],                  after=&quot;after_change&quot;)  # execute before function in asynchronously 5 timesmodel = AsyncModel()machine = AsyncMachine(model, states=[&quot;Start&quot;, &quot;Done&quot;], transitions=[transition], initial='Start')asyncio.get_event_loop().run_until_complete(model.start())# &gt;&gt;&gt; I am synchronous.#     I am asynchronous and will block now for 100 milliseconds.#     I am asynchronous and will block now for 100 milliseconds.#     I am asynchronous and will block now for 100 milliseconds.#     I am asynchronous and will block now for 100 milliseconds.#     I am asynchronous and will block now for 100 milliseconds.#     I am synchronous and will block the event loop (what I probably shouldn't)#     I am done waiting synchronously.#     I am done waiting.#     I am done waiting.#     I am done waiting.#     I am done waiting.#     I am done waiting.#     I am synchronous again. Execution took 101 ms.assert model.is_Done()\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span>.<span class=\"pl-s1\">asyncio</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">AsyncMachine</span><span class=\"pl-k\">import</span> <span class=\"pl-s1\">asyncio</span><span class=\"pl-k\">import</span> <span class=\"pl-s1\">time</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">AsyncModel</span>:    <span class=\"pl-k\">def</span> <span class=\"pl-en\">prepare_model</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"I am synchronous.\"</span>)        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">start_time</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">time</span>.<span class=\"pl-en\">time</span>()    <span class=\"pl-k\">async</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">before_change</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"I am asynchronous and will block now for 100 milliseconds.\"</span>)        <span class=\"pl-k\">await</span> <span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">sleep</span>(<span class=\"pl-c1\">0.1</span>)        <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"I am done waiting.\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">sync_before_change</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"I am synchronous and will block the event loop (what I probably shouldn't)\"</span>)        <span class=\"pl-s1\">time</span>.<span class=\"pl-en\">sleep</span>(<span class=\"pl-c1\">0.1</span>)        <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"I am done waiting synchronously.\"</span>)    <span class=\"pl-k\">def</span> <span class=\"pl-en\">after_change</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-en\">print</span>(<span class=\"pl-s\">f\"I am synchronous again. Execution took <span class=\"pl-s1\"><span class=\"pl-kos\">{</span><span class=\"pl-en\">int</span>((<span class=\"pl-s1\">time</span>.<span class=\"pl-en\">time</span>() <span class=\"pl-c1\">-</span> <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">start_time</span>) <span class=\"pl-c1\">*</span> <span class=\"pl-c1\">1000</span>)<span class=\"pl-kos\">}</span></span> ms.\"</span>)<span class=\"pl-s1\">transition</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">dict</span>(<span class=\"pl-s1\">trigger</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"start\"</span>, <span class=\"pl-s1\">source</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"Start\"</span>, <span class=\"pl-s1\">dest</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"Done\"</span>, <span class=\"pl-s1\">prepare</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"prepare_model\"</span>,                  <span class=\"pl-s1\">before</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">\"before_change\"</span>] <span class=\"pl-c1\">*</span> <span class=\"pl-c1\">5</span> <span class=\"pl-c1\">+</span> [<span class=\"pl-s\">\"sync_before_change\"</span>],                  <span class=\"pl-s1\">after</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"after_change\"</span>)  <span class=\"pl-c\"># execute before function in asynchronously 5 times</span><span class=\"pl-s1\">model</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">AsyncModel</span>()<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">AsyncMachine</span>(<span class=\"pl-s1\">model</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">\"Start\"</span>, <span class=\"pl-s\">\"Done\"</span>], <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s1\">transition</span>], <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'Start'</span>)<span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">get_event_loop</span>().<span class=\"pl-en\">run_until_complete</span>(<span class=\"pl-s1\">model</span>.<span class=\"pl-en\">start</span>())<span class=\"pl-c\"># &gt;&gt;&gt; I am synchronous.</span><span class=\"pl-c\">#     I am asynchronous and will block now for 100 milliseconds.</span><span class=\"pl-c\">#     I am asynchronous and will block now for 100 milliseconds.</span><span class=\"pl-c\">#     I am asynchronous and will block now for 100 milliseconds.</span><span class=\"pl-c\">#     I am asynchronous and will block now for 100 milliseconds.</span><span class=\"pl-c\">#     I am asynchronous and will block now for 100 milliseconds.</span><span class=\"pl-c\">#     I am synchronous and will block the event loop (what I probably shouldn't)</span><span class=\"pl-c\">#     I am done waiting synchronously.</span><span class=\"pl-c\">#     I am done waiting.</span><span class=\"pl-c\">#     I am done waiting.</span><span class=\"pl-c\">#     I am done waiting.</span><span class=\"pl-c\">#     I am done waiting.</span><span class=\"pl-c\">#     I am done waiting.</span><span class=\"pl-c\">#     I am synchronous again. Execution took 101 ms.</span><span class=\"pl-k\">assert</span> <span class=\"pl-s1\">model</span>.<span class=\"pl-en\">is_Done</span>()</pre></div><p dir=\"auto\">So, why do you need to use Python 3.7 or later you may ask.Async support has been introduced earlier.<code>AsyncMachine</code> makes use of <code>contextvars</code> to handle running callbacks when new events arrive before a transitionhas been finished:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"async def await_never_return():    await asyncio.sleep(100)    raise ValueError(&quot;That took too long!&quot;)async def fix():    await m2.fix()m1 = AsyncMachine(states=['A', 'B', 'C'], initial='A', name=&quot;m1&quot;)m2 = AsyncMachine(states=['A', 'B', 'C'], initial='A', name=&quot;m2&quot;)m2.add_transition(trigger='go', source='A', dest='B', before=await_never_return)m2.add_transition(trigger='fix', source='A', dest='C')m1.add_transition(trigger='go', source='A', dest='B', after='go')m1.add_transition(trigger='go', source='B', dest='C', after=fix)asyncio.get_event_loop().run_until_complete(asyncio.gather(m2.go(), m1.go()))assert m1.state == m2.state\"><pre><span class=\"pl-k\">async</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">await_never_return</span>():    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">sleep</span>(<span class=\"pl-c1\">100</span>)    <span class=\"pl-k\">raise</span> <span class=\"pl-v\">ValueError</span>(<span class=\"pl-s\">\"That took too long!\"</span>)<span class=\"pl-k\">async</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">fix</span>():    <span class=\"pl-k\">await</span> <span class=\"pl-s1\">m2</span>.<span class=\"pl-en\">fix</span>()<span class=\"pl-s1\">m1</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">AsyncMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'C'</span>], <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">name</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"m1\"</span>)<span class=\"pl-s1\">m2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">AsyncMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span>[<span class=\"pl-s\">'A'</span>, <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'C'</span>], <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">name</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"m2\"</span>)<span class=\"pl-s1\">m2</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s1\">trigger</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'go'</span>, <span class=\"pl-s1\">source</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">dest</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'B'</span>, <span class=\"pl-s1\">before</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">await_never_return</span>)<span class=\"pl-s1\">m2</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s1\">trigger</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'fix'</span>, <span class=\"pl-s1\">source</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">dest</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'C'</span>)<span class=\"pl-s1\">m1</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s1\">trigger</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'go'</span>, <span class=\"pl-s1\">source</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">dest</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'B'</span>, <span class=\"pl-s1\">after</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'go'</span>)<span class=\"pl-s1\">m1</span>.<span class=\"pl-en\">add_transition</span>(<span class=\"pl-s1\">trigger</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'go'</span>, <span class=\"pl-s1\">source</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'B'</span>, <span class=\"pl-s1\">dest</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'C'</span>, <span class=\"pl-s1\">after</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">fix</span>)<span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">get_event_loop</span>().<span class=\"pl-en\">run_until_complete</span>(<span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">gather</span>(<span class=\"pl-s1\">m2</span>.<span class=\"pl-en\">go</span>(), <span class=\"pl-s1\">m1</span>.<span class=\"pl-en\">go</span>()))<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">m1</span>.<span class=\"pl-s1\">state</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s1\">m2</span>.<span class=\"pl-s1\">state</span></pre></div><p dir=\"auto\">This example actually illustrates two things:First, that 'go' called in m1's transition from <code>A</code> to be <code>B</code> is not cancelled and second, calling <code>m2.fix()</code> willhalt the transition attempt of m2 from <code>A</code> to <code>B</code> by executing 'fix' from <code>A</code> to <code>C</code>.This separation would not be possible without <code>contextvars</code>.Note that <code>prepare</code> and <code>conditions</code> are NOT treated as ongoing transitions.This means that after <code>conditions</code> have been evaluated, a transition is executed even though another event already happened.Tasks will only be cancelled when run as a <code>before</code> callback or later.</p><p dir=\"auto\"><code>AsyncMachine</code> features a model-special queue mode which can be used when <code>queued='model'</code> is passed to the constructor.With a model-specific queue, events will only be queued when they belong to the same model.Furthermore, a raised exception will only clear the event queue of the model that raised that exception.For the sake of simplicity, let's assume that every event in <code>asyncio.gather</code> below is not triggered at the same time but slightly delayed:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"asyncio.gather(model1.event1(), model1.event2(), model2.event1())# execution order with AsyncMachine(queued=True)# model1.event1 -&gt; model1.event2 -&gt; model2.event1# execution order with AsyncMachine(queued='model')# (model1.event1, model2.event1) -&gt; model1.event2asyncio.gather(model1.event1(), model1.error(), model1.event3(), model2.event1(), model2.event2(), model2.event3())# execution order with AsyncMachine(queued=True)# model1.event1 -&gt; model1.error# execution order with AsyncMachine(queued='model')# (model1.event1, model2.event1) -&gt; (model1.error, model2.event2) -&gt; model2.event3\"><pre><span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">gather</span>(<span class=\"pl-s1\">model1</span>.<span class=\"pl-en\">event1</span>(), <span class=\"pl-s1\">model1</span>.<span class=\"pl-en\">event2</span>(), <span class=\"pl-s1\">model2</span>.<span class=\"pl-en\">event1</span>())<span class=\"pl-c\"># execution order with AsyncMachine(queued=True)</span><span class=\"pl-c\"># model1.event1 -&gt; model1.event2 -&gt; model2.event1</span><span class=\"pl-c\"># execution order with AsyncMachine(queued='model')</span><span class=\"pl-c\"># (model1.event1, model2.event1) -&gt; model1.event2</span><span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">gather</span>(<span class=\"pl-s1\">model1</span>.<span class=\"pl-en\">event1</span>(), <span class=\"pl-s1\">model1</span>.<span class=\"pl-en\">error</span>(), <span class=\"pl-s1\">model1</span>.<span class=\"pl-en\">event3</span>(), <span class=\"pl-s1\">model2</span>.<span class=\"pl-en\">event1</span>(), <span class=\"pl-s1\">model2</span>.<span class=\"pl-en\">event2</span>(), <span class=\"pl-s1\">model2</span>.<span class=\"pl-en\">event3</span>())<span class=\"pl-c\"># execution order with AsyncMachine(queued=True)</span><span class=\"pl-c\"># model1.event1 -&gt; model1.error</span><span class=\"pl-c\"># execution order with AsyncMachine(queued='model')</span><span class=\"pl-c\"># (model1.event1, model2.event1) -&gt; (model1.error, model2.event2) -&gt; model2.event3</span></pre></div><p dir=\"auto\">Note that queue modes must not be changed after machine construction.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-state-features\"></a>Adding features to states</h4><a id=\"user-content-adding-features-to-states\" class=\"anchor-element\" aria-label=\"Permalink: Adding features to states\" href=\"#adding-features-to-states\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">If your superheroes need some custom behaviour, you can throw in some extra functionality by decorating machine states:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from time import sleepfrom transitions import Machinefrom transitions.extensions.states import add_state_features, Tags, Timeout@add_state_features(Tags, Timeout)class CustomStateMachine(Machine):    passclass SocialSuperhero(object):    def __init__(self):        self.entourage = 0    def on_enter_waiting(self):        self.entourage += 1states = [{'name': 'preparing', 'tags': ['home', 'busy']},          {'name': 'waiting', 'timeout': 1, 'on_timeout': 'go'},          {'name': 'away'}]  # The city needs us!transitions = [['done', 'preparing', 'waiting'],               ['join', 'waiting', 'waiting'],  # Entering Waiting again will increase our entourage               ['go', 'waiting', 'away']]  # Okay, let' movehero = SocialSuperhero()machine = CustomStateMachine(model=hero, states=states, transitions=transitions, initial='preparing')assert hero.state == 'preparing'  # Preparing for the night shiftassert machine.get_state(hero.state).is_busy  # We are at home and busyhero.done()assert hero.state == 'waiting'  # Waiting for fellow superheroes to join usassert hero.entourage == 1  # It's just us so farsleep(0.7)  # Waiting...hero.join()  # Weeh, we got companysleep(0.5)  # Waiting...hero.join()  # Even more company \\o/sleep(2)  # Waiting...assert hero.state == 'away'  # Impatient superhero already left the buildingassert machine.get_state(hero.state).is_home is False  # Yupp, not at home anymoreassert hero.entourage == 3  # At least he is not alone\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">time</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">sleep</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">Machine</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span>.<span class=\"pl-s1\">states</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">add_state_features</span>, <span class=\"pl-v\">Tags</span>, <span class=\"pl-v\">Timeout</span><span class=\"pl-en\">@<span class=\"pl-en\">add_state_features</span>(<span class=\"pl-v\">Tags</span>, <span class=\"pl-v\">Timeout</span>)</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">CustomStateMachine</span>(<span class=\"pl-v\">Machine</span>):    <span class=\"pl-k\">pass</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">SocialSuperhero</span>(<span class=\"pl-s1\">object</span>):    <span class=\"pl-k\">def</span> <span class=\"pl-en\">__init__</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">entourage</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">on_enter_waiting</span>(<span class=\"pl-s1\">self</span>):        <span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">entourage</span> <span class=\"pl-c1\">+=</span> <span class=\"pl-c1\">1</span><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [{<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'preparing'</span>, <span class=\"pl-s\">'tags'</span>: [<span class=\"pl-s\">'home'</span>, <span class=\"pl-s\">'busy'</span>]},          {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'waiting'</span>, <span class=\"pl-s\">'timeout'</span>: <span class=\"pl-c1\">1</span>, <span class=\"pl-s\">'on_timeout'</span>: <span class=\"pl-s\">'go'</span>},          {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'away'</span>}]  <span class=\"pl-c\"># The city needs us!</span><span class=\"pl-s1\">transitions</span> <span class=\"pl-c1\">=</span> [[<span class=\"pl-s\">'done'</span>, <span class=\"pl-s\">'preparing'</span>, <span class=\"pl-s\">'waiting'</span>],               [<span class=\"pl-s\">'join'</span>, <span class=\"pl-s\">'waiting'</span>, <span class=\"pl-s\">'waiting'</span>],  <span class=\"pl-c\"># Entering Waiting again will increase our entourage</span>               [<span class=\"pl-s\">'go'</span>, <span class=\"pl-s\">'waiting'</span>, <span class=\"pl-s\">'away'</span>]]  <span class=\"pl-c\"># Okay, let' move</span><span class=\"pl-s1\">hero</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">SocialSuperhero</span>()<span class=\"pl-s1\">machine</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">CustomStateMachine</span>(<span class=\"pl-s1\">model</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">hero</span>, <span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">transitions</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">transitions</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'preparing'</span>)<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">hero</span>.<span class=\"pl-s1\">state</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">'preparing'</span>  <span class=\"pl-c\"># Preparing for the night shift</span><span class=\"pl-k\">assert</span> <span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">get_state</span>(<span class=\"pl-s1\">hero</span>.<span class=\"pl-s1\">state</span>).<span class=\"pl-s1\">is_busy</span>  <span class=\"pl-c\"># We are at home and busy</span><span class=\"pl-s1\">hero</span>.<span class=\"pl-en\">done</span>()<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">hero</span>.<span class=\"pl-s1\">state</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">'waiting'</span>  <span class=\"pl-c\"># Waiting for fellow superheroes to join us</span><span class=\"pl-k\">assert</span> <span class=\"pl-s1\">hero</span>.<span class=\"pl-s1\">entourage</span> <span class=\"pl-c1\">==</span> <span class=\"pl-c1\">1</span>  <span class=\"pl-c\"># It's just us so far</span><span class=\"pl-en\">sleep</span>(<span class=\"pl-c1\">0.7</span>)  <span class=\"pl-c\"># Waiting...</span><span class=\"pl-s1\">hero</span>.<span class=\"pl-en\">join</span>()  <span class=\"pl-c\"># Weeh, we got company</span><span class=\"pl-en\">sleep</span>(<span class=\"pl-c1\">0.5</span>)  <span class=\"pl-c\"># Waiting...</span><span class=\"pl-s1\">hero</span>.<span class=\"pl-en\">join</span>()  <span class=\"pl-c\"># Even more company \\o/</span><span class=\"pl-en\">sleep</span>(<span class=\"pl-c1\">2</span>)  <span class=\"pl-c\"># Waiting...</span><span class=\"pl-k\">assert</span> <span class=\"pl-s1\">hero</span>.<span class=\"pl-s1\">state</span> <span class=\"pl-c1\">==</span> <span class=\"pl-s\">'away'</span>  <span class=\"pl-c\"># Impatient superhero already left the building</span><span class=\"pl-k\">assert</span> <span class=\"pl-s1\">machine</span>.<span class=\"pl-en\">get_state</span>(<span class=\"pl-s1\">hero</span>.<span class=\"pl-s1\">state</span>).<span class=\"pl-s1\">is_home</span> <span class=\"pl-c1\">is</span> <span class=\"pl-c1\">False</span>  <span class=\"pl-c\"># Yupp, not at home anymore</span><span class=\"pl-k\">assert</span> <span class=\"pl-s1\">hero</span>.<span class=\"pl-s1\">entourage</span> <span class=\"pl-c1\">==</span> <span class=\"pl-c1\">3</span>  <span class=\"pl-c\"># At least he is not alone</span></pre></div><p dir=\"auto\">Currently, transitions comes equipped with the following state features:</p><ul dir=\"auto\"><li><p dir=\"auto\"><strong>Timeout</strong> -- triggers an event after some time has passed</p><ul dir=\"auto\"><li>keyword: <code>timeout</code> (int, optional) -- if passed, an entered state will timeout after <code>timeout</code> seconds</li><li>keyword: <code>on_timeout</code> (string/callable, optional) -- will be called when timeout time has been reached</li><li>will raise an <code>AttributeError</code> when <code>timeout</code> is set but <code>on_timeout</code> is not</li><li>Note: A timeout is triggered in a thread. This implies several limitations (e.g. catching Exceptions raised in timeouts). Consider an event queue for more sophisticated applications.</li></ul></li><li><p dir=\"auto\"><strong>Tags</strong> -- adds tags to states</p><ul dir=\"auto\"><li>keyword: <code>tags</code> (list, optional) -- assigns tags to a state</li><li><code>State.is_&lt;tag_name&gt;</code> will return <code>True</code> when the state has been tagged with <code>tag_name</code>, else <code>False</code></li></ul></li><li><p dir=\"auto\"><strong>Error</strong> -- raises a <code>MachineError</code> when a state cannot be left</p><ul dir=\"auto\"><li>inherits from <code>Tags</code> (if you use <code>Error</code> do not use <code>Tags</code>)</li><li>keyword: <code>accepted</code> (bool, optional) -- marks a state as accepted</li><li>alternatively the keyword <code>tags</code> can be passed, containing 'accepted'</li><li>Note: Errors will only be raised if <code>auto_transitions</code> has been set to <code>False</code>. Otherwise every state can be exited with <code>to_&lt;state&gt;</code> methods.</li></ul></li><li><p dir=\"auto\"><strong>Volatile</strong> -- initialises an object every time a state is entered</p><ul dir=\"auto\"><li>keyword: <code>volatile</code> (class, optional) -- every time the state is entered an object of type class will be assigned to the model. The attribute name is defined by <code>hook</code>. If omitted, an empty VolatileObject will be created instead</li><li>keyword: <code>hook</code> (string, default='scope') -- The model's attribute name for the temporal object.</li></ul></li></ul><p dir=\"auto\">You can write your own <code>State</code> extensions and add them the same way. Just note that <code>add_state_features</code> expects <em>Mixins</em>. This means your extension should always call the overridden methods <code>__init__</code>, <code>enter</code> and <code>exit</code>. Your extension may inherit from <em>State</em> but will also work without it.Using <code>@add_state_features</code> has a drawback which is that decorated machines cannot be pickled (more precisely, the dynamically generated <code>CustomState</code> cannot be pickled).This might be a reason to write a dedicated custom state class instead.Depending on the chosen state machine, your custom state class may need to provide certain state features. For instance, <code>HierarchicalMachine</code> requires your custom state to be an instance of <code>NestedState</code> (<code>State</code> is not sufficient). To inject your states you can either assign them to your <code>Machine</code>'s class attribute <code>state_cls</code> or override <code>Machine.create_state</code> in case you need some specific procedures done whenever a state is created:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"from transitions import Machine, Stateclass MyState(State):    passclass CustomMachine(Machine):    # Use MyState as state class    state_cls = MyStateclass VerboseMachine(Machine):    # `Machine._create_state` is a class method but we can    # override it to be an instance method    def _create_state(self, *args, **kwargs):        print(&quot;Creating a new state with machine '{0}'&quot;.format(self.name))        return MyState(*args, **kwargs)\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">Machine</span>, <span class=\"pl-v\">State</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">MyState</span>(<span class=\"pl-v\">State</span>):    <span class=\"pl-k\">pass</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">CustomMachine</span>(<span class=\"pl-v\">Machine</span>):    <span class=\"pl-c\"># Use MyState as state class</span>    <span class=\"pl-s1\">state_cls</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">MyState</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">VerboseMachine</span>(<span class=\"pl-v\">Machine</span>):    <span class=\"pl-c\"># `Machine._create_state` is a class method but we can</span>    <span class=\"pl-c\"># override it to be an instance method</span>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">_create_state</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-c1\">*</span><span class=\"pl-s1\">args</span>, <span class=\"pl-c1\">**</span><span class=\"pl-s1\">kwargs</span>):        <span class=\"pl-en\">print</span>(<span class=\"pl-s\">\"Creating a new state with machine '{0}'\"</span>.<span class=\"pl-en\">format</span>(<span class=\"pl-s1\">self</span>.<span class=\"pl-s1\">name</span>))        <span class=\"pl-k\">return</span> <span class=\"pl-v\">MyState</span>(<span class=\"pl-c1\">*</span><span class=\"pl-s1\">args</span>, <span class=\"pl-c1\">**</span><span class=\"pl-s1\">kwargs</span>)</pre></div><p dir=\"auto\">If you want to avoid threads in your <code>AsyncMachine</code> entirely, you can replace the <code>Timeout</code> state feature with <code>AsyncTimeout</code> from the <code>asyncio</code> extension:</p><div class=\"highlight highlight-source-python notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import asynciofrom transitions.extensions.states import add_state_featuresfrom transitions.extensions.asyncio import AsyncTimeout, AsyncMachine@add_state_features(AsyncTimeout)class TimeoutMachine(AsyncMachine):    passstates = ['A', {'name': 'B', 'timeout': 0.2, 'on_timeout': 'to_C'}, 'C']m = TimeoutMachine(states=states, initial='A', queued=True)  # see remark belowasyncio.run(asyncio.wait([m.to_B(), asyncio.sleep(0.1)]))assert m.is_B()  # timeout shouldn't be triggeredasyncio.run(asyncio.wait([m.to_B(), asyncio.sleep(0.3)]))assert m.is_C()   # now timeout should have been processed\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">asyncio</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span>.<span class=\"pl-s1\">states</span> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">add_state_features</span><span class=\"pl-k\">from</span> <span class=\"pl-s1\">transitions</span>.<span class=\"pl-s1\">extensions</span>.<span class=\"pl-s1\">asyncio</span> <span class=\"pl-k\">import</span> <span class=\"pl-v\">AsyncTimeout</span>, <span class=\"pl-v\">AsyncMachine</span><span class=\"pl-en\">@<span class=\"pl-en\">add_state_features</span>(<span class=\"pl-v\">AsyncTimeout</span>)</span><span class=\"pl-k\">class</span> <span class=\"pl-v\">TimeoutMachine</span>(<span class=\"pl-v\">AsyncMachine</span>):    <span class=\"pl-k\">pass</span><span class=\"pl-s1\">states</span> <span class=\"pl-c1\">=</span> [<span class=\"pl-s\">'A'</span>, {<span class=\"pl-s\">'name'</span>: <span class=\"pl-s\">'B'</span>, <span class=\"pl-s\">'timeout'</span>: <span class=\"pl-c1\">0.2</span>, <span class=\"pl-s\">'on_timeout'</span>: <span class=\"pl-s\">'to_C'</span>}, <span class=\"pl-s\">'C'</span>]<span class=\"pl-s1\">m</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">TimeoutMachine</span>(<span class=\"pl-s1\">states</span><span class=\"pl-c1\">=</span><span class=\"pl-s1\">states</span>, <span class=\"pl-s1\">initial</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'A'</span>, <span class=\"pl-s1\">queued</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">True</span>)  <span class=\"pl-c\"># see remark below</span><span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">wait</span>([<span class=\"pl-s1\">m</span>.<span class=\"pl-en\">to_B</span>(), <span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">sleep</span>(<span class=\"pl-c1\">0.1</span>)]))<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">is_B</span>()  <span class=\"pl-c\"># timeout shouldn't be triggered</span><span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">wait</span>([<span class=\"pl-s1\">m</span>.<span class=\"pl-en\">to_B</span>(), <span class=\"pl-s1\">asyncio</span>.<span class=\"pl-en\">sleep</span>(<span class=\"pl-c1\">0.3</span>)]))<span class=\"pl-k\">assert</span> <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">is_C</span>()   <span class=\"pl-c\"># now timeout should have been processed</span></pre></div><p dir=\"auto\">You should consider passing <code>queued=True</code> to the <code>TimeoutMachine</code> constructor. This will make sure that events are processed sequentially and avoid asynchronous <a href=\"https://github.com/pytransitions/transitions/issues/459\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytransitions/transitions/issues/459/hovercard\">racing conditions</a> that may appear when timeout and event happen in close proximity.</p><div class=\"markdown-heading\" dir=\"auto\"><h4 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-django-support\"></a> Using transitions together with Django</h4><a id=\"user-content--using-transitions-together-with-django\" class=\"anchor-element\" aria-label=\"Permalink:  Using transitions together with Django\" href=\"#-using-transitions-together-with-django\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">You can have a look at the <a href=\"/pytransitions/transitions/blob/master/examples/Frequently%20asked%20questions.ipynb\">FAQ</a> for some inspiration or checkout <code>django-transitions</code>.It has been developed by Christian Ledermann and is also hosted on <a href=\"https://github.com/PrimarySite/django-transitions\">Github</a>.<a href=\"https://django-transitions.readthedocs.io/en/latest/\" rel=\"nofollow\">The documentation</a> contains some usage examples.</p><div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\"><a name=\"user-content-bug-reports\"></a>I have a [bug report/issue/question]...</h3><a id=\"user-content-i-have-a-bug-reportissuequestion\" class=\"anchor-element\" aria-label=\"Permalink: I have a [bug report/issue/question]...\" href=\"#i-have-a-bug-reportissuequestion\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div><p dir=\"auto\">First, congratulations! You reached the end of the documentation!If you want to try out <code>transitions</code> before you install it, you can do that in an interactive Jupyter notebook at mybinder.org.Just click this button \ud83d\udc49 <a href=\"https://mybinder.org/v2/gh/pytransitions/transitions/master?filepath=examples%2FPlayground.ipynb\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/e91e1d353a8b6acf0b42547ac3901f2c30138a3abaaa3d3c242da30b5b4f8426/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\" alt=\"Binder\" data-canonical-src=\"https://mybinder.org/badge_logo.svg\" style=\"max-width: 100%;\"></a>.</p><p dir=\"auto\">For bug reports and other issues, please <a href=\"https://github.com/pytransitions/transitions\">open an issue</a> on GitHub.</p><p dir=\"auto\">For usage questions, post on Stack Overflow, making sure to tag your question with the <a href=\"https://stackoverflow.com/questions/tagged/pytransitions\" rel=\"nofollow\"><code>pytransitions</code> tag</a>. Do not forget to have a look at the <a href=\"/pytransitions/transitions/blob/master/examples\">extended examples</a>!</p><p dir=\"auto\">For any other questions, solicitations, or large unrestricted monetary gifts, email <a href=\"mailto:tyarkoni@gmail.com\">Tal Yarkoni</a> (initial author) and/or <a href=\"mailto:aleneum@gmail.com\">Alexander Neumann</a> (current maintainer).</p></article></div></div></div></div></div> <!-- --> <!-- --> <script type=\"application/json\" id=\"__PRIMER_DATA__\">{\"resolvedServerColorMode\":\"day\"}</script></div></react-partial>        <input type=\"hidden\" data-csrf=\"true\" value=\"nJytAUr/BRw0fV5t5ZBasb7v7aUpWXIHCwP/wigxL5Tm9Oee/EhXHOxoXUPJc4irXrhdGPH+RaIjVTMMQAnTjw==\" /></div>  <div data-view-component=\"true\" class=\"Layout-sidebar\">            <div class=\"BorderGrid about-margin\" data-pjax>        <div class=\"BorderGrid-row\">          <div class=\"BorderGrid-cell\">            <div class=\"hide-sm hide-md\">  <h2 class=\"mb-3 h4\">About</h2>      <p class=\"f4 my-3\">        A lightweight, object-oriented finite state machine implementation in Python with many extensions      </p>    <h3 class=\"sr-only\">Topics</h3>    <div class=\"my-3\">        <div class=\"f6\">      <a data-ga-click=\"Topic, repository page\" data-octo-click=\"topic_click\" data-octo-dimensions=\"topic:python\" href=\"/topics/python\" title=\"Topic: python\" data-view-component=\"true\" class=\"topic-tag topic-tag-link\">  python</a>      <a data-ga-click=\"Topic, repository page\" data-octo-click=\"topic_click\" data-octo-dimensions=\"topic:state-machine\" href=\"/topics/state-machine\" title=\"Topic: state-machine\" data-view-component=\"true\" class=\"topic-tag topic-tag-link\">  state-machine</a>      <a data-ga-click=\"Topic, repository page\" data-octo-click=\"topic_click\" data-octo-dimensions=\"topic:state-diagram\" href=\"/topics/state-diagram\" title=\"Topic: state-diagram\" data-view-component=\"true\" class=\"topic-tag topic-tag-link\">  state-diagram</a>      <a data-ga-click=\"Topic, repository page\" data-octo-click=\"topic_click\" data-octo-dimensions=\"topic:nested-states\" href=\"/topics/nested-states\" title=\"Topic: nested-states\" data-view-component=\"true\" class=\"topic-tag topic-tag-link\">  nested-states</a>      <a data-ga-click=\"Topic, repository page\" data-octo-click=\"topic_click\" data-octo-dimensions=\"topic:hierarchical-state-machine\" href=\"/topics/hierarchical-state-machine\" title=\"Topic: hierarchical-state-machine\" data-view-component=\"true\" class=\"topic-tag topic-tag-link\">  hierarchical-state-machine</a>  </div>    </div>    <h3 class=\"sr-only\">Resources</h3>    <div class=\"mt-2\">      <a class=\"Link--muted\" data-analytics-event=\"{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:readme&quot;}\" href=\"#readme-ov-file\">        <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-book mr-2\">    <path d=\"M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z\"></path></svg>        Readme</a>    </div>      <h3 class=\"sr-only\">License</h3>  <div class=\"mt-2\">    <a href=\"#MIT-1-ov-file\"      class=\"Link--muted\"            data-analytics-event=\"{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:license&quot;}\"    >      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-law mr-2\">    <path d=\"M8.75.75V2h.985c.304 0 .603.08.867.231l1.29.736c.038.022.08.033.124.033h2.234a.75.75 0 0 1 0 1.5h-.427l2.111 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.006.005-.01.01-.045.04c-.21.176-.441.327-.686.45C14.556 10.78 13.88 11 13 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L12.178 4.5h-.162c-.305 0-.604-.079-.868-.231l-1.29-.736a.245.245 0 0 0-.124-.033H8.75V13h2.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1 0-1.5h2.5V3.5h-.984a.245.245 0 0 0-.124.033l-1.289.737c-.265.15-.564.23-.869.23h-.162l2.112 4.692a.75.75 0 0 1-.154.838l-.53-.53.529.531-.001.002-.002.002-.006.006-.016.015-.045.04c-.21.176-.441.327-.686.45C4.556 10.78 3.88 11 3 11a4.498 4.498 0 0 1-2.023-.454 3.544 3.544 0 0 1-.686-.45l-.045-.04-.016-.015-.006-.006-.004-.004v-.001a.75.75 0 0 1-.154-.838L2.178 4.5H1.75a.75.75 0 0 1 0-1.5h2.234a.249.249 0 0 0 .125-.033l1.288-.737c.265-.15.564-.23.869-.23h.984V.75a.75.75 0 0 1 1.5 0Zm2.945 8.477c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L13 6.327Zm-10 0c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L3 6.327Z\"></path></svg>     MIT license    </a>  </div>  <include-fragment  src=\"/pytransitions/transitions/hovercards/citation/sidebar_partial?tree_name=master\">  </include-fragment>  <div class=\"mt-2\">    <a href=\"/pytransitions/transitions/activity\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg text=\"gray\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-pulse mr-2\">    <path d=\"M6 2c.306 0 .582.187.696.471L10 10.731l1.304-3.26A.751.751 0 0 1 12 7h3.25a.75.75 0 0 1 0 1.5h-2.742l-1.812 4.528a.751.751 0 0 1-1.392 0L6 4.77 4.696 8.03A.75.75 0 0 1 4 8.5H.75a.75.75 0 0 1 0-1.5h2.742l1.812-4.529A.751.751 0 0 1 6 2Z\"></path></svg>      <span class=\"color-fg-muted\">Activity</span></a>  </div>    <div class=\"mt-2\">      <a href=\"/pytransitions/transitions/custom-properties\" data-view-component=\"true\" class=\"Link Link--muted\">        <svg text=\"gray\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-note mr-2\">    <path d=\"M0 3.75C0 2.784.784 2 1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 14H1.75A1.75 1.75 0 0 1 0 12.25Zm1.75-.25a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-8.5a.25.25 0 0 0-.25-.25ZM3.5 6.25a.75.75 0 0 1 .75-.75h7a.75.75 0 0 1 0 1.5h-7a.75.75 0 0 1-.75-.75Zm.75 2.25h4a.75.75 0 0 1 0 1.5h-4a.75.75 0 0 1 0-1.5Z\"></path></svg>        <span class=\"color-fg-muted\">Custom properties</span></a>    </div>  <h3 class=\"sr-only\">Stars</h3>  <div class=\"mt-2\">    <a href=\"/pytransitions/transitions/stargazers\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-star mr-2\">    <path d=\"M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z\"></path></svg>      <strong>5.3k</strong>      stars</a>  </div>  <h3 class=\"sr-only\">Watchers</h3>  <div class=\"mt-2\">    <a href=\"/pytransitions/transitions/watchers\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-eye mr-2\">    <path d=\"M8 2c1.981 0 3.671.992 4.933 2.078 1.27 1.091 2.187 2.345 2.637 3.023a1.62 1.62 0 0 1 0 1.798c-.45.678-1.367 1.932-2.637 3.023C11.67 13.008 9.981 14 8 14c-1.981 0-3.671-.992-4.933-2.078C1.797 10.83.88 9.576.43 8.898a1.62 1.62 0 0 1 0-1.798c.45-.677 1.367-1.931 2.637-3.022C4.33 2.992 6.019 2 8 2ZM1.679 7.932a.12.12 0 0 0 0 .136c.411.622 1.241 1.75 2.366 2.717C5.176 11.758 6.527 12.5 8 12.5c1.473 0 2.825-.742 3.955-1.715 1.124-.967 1.954-2.096 2.366-2.717a.12.12 0 0 0 0-.136c-.412-.621-1.242-1.75-2.366-2.717C10.824 4.242 9.473 3.5 8 3.5c-1.473 0-2.825.742-3.955 1.715-1.124.967-1.954 2.096-2.366 2.717ZM8 10a2 2 0 1 1-.001-3.999A2 2 0 0 1 8 10Z\"></path></svg>      <strong>94</strong>      watching</a>  </div>  <h3 class=\"sr-only\">Forks</h3>  <div class=\"mt-2\">    <a href=\"/pytransitions/transitions/forks\" data-view-component=\"true\" class=\"Link Link--muted\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-repo-forked mr-2\">    <path d=\"M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z\"></path></svg>      <strong>517</strong>      forks</a>  </div>    <div class=\"mt-2\">      <a class=\"Link--muted\" href=\"/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fpytransitions%2Ftransitions&amp;report=pytransitions+%28user%29\">          Report repository</a>    </div></div>          </div>        </div>                    <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\">  <a href=\"/pytransitions/transitions/releases\" data-view-component=\"true\" class=\"Link--primary no-underline Link\">    Releases      <span title=\"30\" data-view-component=\"true\" class=\"Counter\">30</span></a></h2>  <a class=\"Link--primary d-flex no-underline\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" href=\"/pytransitions/transitions/releases/tag/0.9.0\">    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-tag flex-shrink-0 mt-1 color-fg-success\">    <path d=\"M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.752 1.752 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z\"></path></svg>    <div class=\"ml-2 min-width-0\">      <div class=\"d-flex\">        <span class=\"css-truncate css-truncate-target text-bold mr-2\" style=\"max-width: none;\">Release 0.9.0</span>        <span title=\"Label: Latest\" data-view-component=\"true\" class=\"Label Label--success flex-shrink-0\">          Latest</span>      </div>      <div class=\"text-small color-fg-muted\"><relative-time datetime=\"2022-09-02T09:45:38Z\" class=\"no-wrap\">Sep 2, 2022</relative-time></div>    </div></a>    <div data-view-component=\"true\" class=\"mt-3\">      <a text=\"small\" data-pjax=\"#repo-content-pjax-container\" data-turbo-frame=\"repo-content-turbo-frame\" href=\"/pytransitions/transitions/releases\" data-view-component=\"true\" class=\"Link\">        + 29 releases</a></div>              </div>            </div>                            <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\">  <a href=\"/orgs/pytransitions/packages?repo_name=transitions\" data-view-component=\"true\" class=\"Link--primary no-underline Link d-flex flex-items-center\">    Packages      <span title=\"0\" hidden=\"hidden\" data-view-component=\"true\" class=\"Counter ml-1\">0</span></a></h2>      <div class=\"text-small color-fg-muted\">        No packages published <br>      </div>              </div>            </div>                    <div class=\"BorderGrid-row\" >              <div class=\"BorderGrid-cell\">                  <h2 class=\"h4 mb-3\">    <a href=\"/pytransitions/transitions/network/dependents\" data-view-component=\"true\" class=\"Link--primary no-underline Link\">      Used by <span title=\"3,221\" data-view-component=\"true\" class=\"Counter\">3.2k</span></a>  </h2>  <a class=\"d-flex flex-items-center\" href=\"/pytransitions/transitions/network/dependents\">    <ul class=\"hx_flex-avatar-stack list-style-none min-width-0\">          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/17450586?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@jmbuhr\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/65161427?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@shatrunjay4321\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/92773?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@mtache\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/62879274?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@Dinamitrii\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar\" src=\"https://avatars.githubusercontent.com/u/107674780?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@OpenNyAI\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/35985988?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@habutaso\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar avatar-user\" src=\"https://avatars.githubusercontent.com/u/71650608?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@jankhan03\" />          </li>          <li class=\"hx_flex-avatar-stack-item\">            <img class=\"avatar\" src=\"https://avatars.githubusercontent.com/u/79122455?s=64&amp;v=4\" width=\"32\" height=\"32\" alt=\"@tsinghua-fib-lab\" />          </li>    </ul>      <span class=\"px-2 text-bold text-small no-wrap\">        + 3,213      </span>  </a>              </div>            </div>                    <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\">  <a href=\"/pytransitions/transitions/graphs/contributors\" data-view-component=\"true\" class=\"Link--primary no-underline Link d-flex flex-items-center\">    Contributors      <span title=\"64\" data-view-component=\"true\" class=\"Counter ml-1\">64</span></a></h2>      <ul class=\"list-style-none d-flex flex-wrap mb-n2\">    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/aleneum\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/aleneum/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/205986?s=64&amp;v=4\" alt=\"@aleneum\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/tyarkoni\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/tyarkoni/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/303932?s=64&amp;v=4\" alt=\"@tyarkoni\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/wtgee\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/wtgee/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/70736?s=64&amp;v=4\" alt=\"@wtgee\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/thedrow\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/thedrow/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/48936?s=64&amp;v=4\" alt=\"@thedrow\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/ankostis\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/ankostis/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/501585?s=64&amp;v=4\" alt=\"@ankostis\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/artofhuman\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/artofhuman/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/1192122?s=64&amp;v=4\" alt=\"@artofhuman\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/svdgraaf\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/svdgraaf/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/19777?s=64&amp;v=4\" alt=\"@svdgraaf\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/TheMysteriousX\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/TheMysteriousX/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/590630?s=64&amp;v=4\" alt=\"@TheMysteriousX\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/ollamh\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/ollamh/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/1472539?s=64&amp;v=4\" alt=\"@ollamh\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/termim\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/termim/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/200767?s=64&amp;v=4\" alt=\"@termim\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/v1k45\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/v1k45/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/7877501?s=64&amp;v=4\" alt=\"@v1k45\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/medecau\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/medecau/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/59870?s=64&amp;v=4\" alt=\"@medecau\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/njouanin\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/njouanin/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/728898?s=64&amp;v=4\" alt=\"@njouanin\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li>    <li class=\"mb-2 mr-2\"        >      <a href=\"https://github.com/paulbovbel\"          class=\"\"            data-hovercard-type=\"user\" data-hovercard-url=\"/users/paulbovbel/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\"                  >        <img src=\"https://avatars.githubusercontent.com/u/1694370?s=64&amp;v=4\" alt=\"@paulbovbel\" size=\"32\" height=\"32\" width=\"32\" data-view-component=\"true\" class=\"avatar circle\" />      </a>    </li></ul>  <div data-view-component=\"true\" class=\"mt-3\">    <a text=\"small\" href=\"/pytransitions/transitions/graphs/contributors\" data-view-component=\"true\" class=\"Link\">      + 50 contributors</a></div>              </div>            </div>                            <div class=\"BorderGrid-row\">              <div class=\"BorderGrid-cell\">                <h2 class=\"h4 mb-3\">Languages</h2><div class=\"mb-2\">  <span data-view-component=\"true\" class=\"Progress\">    <span style=\"background-color:#3572A5 !important;;width: 100.0%;\" itemprop=\"keywords\" aria-label=\"Python 100.0\" data-view-component=\"true\" class=\"Progress-item color-bg-success-emphasis\"></span></span></div><ul class=\"list-style-none\">    <li class=\"d-inline\">        <a class=\"d-inline-flex flex-items-center flex-nowrap Link--secondary no-underline text-small mr-3\" href=\"/pytransitions/transitions/search?l=python\"  data-ga-click=\"Repository, language stats search click, location:repo overview\">          <svg style=\"color:#3572A5;\" aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-dot-fill mr-2\">    <path d=\"M8 4a4 4 0 1 1 0 8 4 4 0 0 1 0-8Z\"></path></svg>          <span class=\"color-fg-default text-bold mr-1\">Python</span>          <span>100.0%</span>        </a>    </li></ul>              </div>            </div>              </div></div>  </div></div>  </div>  </div></turbo-frame>    </main>  </div>  </div>          <footer class=\"footer pt-8 pb-6 f6 color-fg-muted p-responsive\" role=\"contentinfo\" >  <h2 class='sr-only'>Footer</h2>    <div class=\"d-flex flex-justify-center flex-items-center flex-column-reverse flex-lg-row flex-wrap flex-lg-nowrap\">    <div class=\"d-flex flex-items-center flex-shrink-0 mx-2\">      <a aria-label=\"Homepage\" title=\"GitHub\" class=\"footer-octicon mr-2\" href=\"https://github.com\">        <svg aria-hidden=\"true\" height=\"24\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"24\" data-view-component=\"true\" class=\"octicon octicon-mark-github\">    <path d=\"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z\"></path></svg></a>      <span>        &copy; 2024 GitHub,&nbsp;Inc.      </span>    </div>    <nav aria-label=\"Footer\">      <h3 class=\"sr-only\" id=\"sr-footer-heading\">Footer navigation</h3>      <ul class=\"list-style-none d-flex flex-justify-center flex-wrap mb-2 mb-lg-0\" aria-labelledby=\"sr-footer-heading\">          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to Terms&quot;,&quot;label&quot;:&quot;text:terms&quot;}\" href=\"https://docs.github.com/site-policy/github-terms/github-terms-of-service\" data-view-component=\"true\" class=\"Link--secondary Link\">Terms</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to privacy&quot;,&quot;label&quot;:&quot;text:privacy&quot;}\" href=\"https://docs.github.com/site-policy/privacy-policies/github-privacy-statement\" data-view-component=\"true\" class=\"Link--secondary Link\">Privacy</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to security&quot;,&quot;label&quot;:&quot;text:security&quot;}\" href=\"/security\" data-view-component=\"true\" class=\"Link--secondary Link\">Security</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to status&quot;,&quot;label&quot;:&quot;text:status&quot;}\" href=\"https://www.githubstatus.com/\" data-view-component=\"true\" class=\"Link--secondary Link\">Status</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to docs&quot;,&quot;label&quot;:&quot;text:docs&quot;}\" href=\"https://docs.github.com\" data-view-component=\"true\" class=\"Link--secondary Link\">Docs</a>          </li>          <li class=\"mx-2\">            <a data-analytics-event=\"{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to contact&quot;,&quot;label&quot;:&quot;text:contact&quot;}\" href=\"https://support.github.com?tags=dotcom-footer\" data-view-component=\"true\" class=\"Link--secondary Link\">Contact</a>          </li>          <li class=\"mx-2\" >  <cookie-consent-link>    <button type=\"button\" class=\"Link--secondary underline-on-hover border-0 p-0 color-bg-transparent\" data-action=\"click:cookie-consent-link#showConsentManagement\">      Manage cookies    </button>  </cookie-consent-link></li><li class=\"mx-2\">  <cookie-consent-link>    <button type=\"button\" class=\"Link--secondary underline-on-hover border-0 p-0 color-bg-transparent\" data-action=\"click:cookie-consent-link#showConsentManagement\">      Do not share my personal information    </button>  </cookie-consent-link></li>      </ul>    </nav>  </div></footer>    <cookie-consent id=\"cookie-consent-banner\" class=\"position-fixed bottom-0 left-0\" style=\"z-index: 999999\" data-initial-cookie-consent-allowed=\"\" data-cookie-consent-required=\"false\"></cookie-consent>  <div id=\"ajax-error-message\" class=\"ajax-error-message flash flash-error\" hidden>    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-alert\">    <path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"></path></svg>    <button type=\"button\" class=\"flash-close js-ajax-error-dismiss\" aria-label=\"Dismiss error\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg>    </button>    You can\u2019t perform that action at this time.  </div>    <template id=\"site-details-dialog\">  <details class=\"details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm\" open>    <summary role=\"button\" aria-label=\"Close dialog\"></summary>    <details-dialog class=\"Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal\">      <button class=\"Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0\" type=\"button\" aria-label=\"Close dialog\" data-close-dialog>        <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-x\">    <path d=\"M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z\"></path></svg>      </button>      <div class=\"octocat-spinner my-6 js-details-dialog-spinner\"></div>    </details-dialog>  </details></template>    <div class=\"Popover js-hovercard-content position-absolute\" style=\"display: none; outline: none;\" tabindex=\"0\">  <div class=\"Popover-message Popover-message--bottom-left Popover-message--large Box color-shadow-large\" style=\"width:360px;\">  </div></div>    <template id=\"snippet-clipboard-copy-button\">  <div class=\"zeroclipboard-container position-absolute right-0 top-0\">    <clipboard-copy aria-label=\"Copy\" class=\"ClipboardButton btn js-clipboard-copy m-2 p-0 tooltipped-no-delay\" data-copy-feedback=\"Copied!\" data-tooltip-direction=\"w\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-copy js-clipboard-copy-icon m-2\">    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path></svg>      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2\">    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path></svg>    </clipboard-copy>  </div></template><template id=\"snippet-clipboard-copy-button-unpositioned\">  <div class=\"zeroclipboard-container\">    <clipboard-copy aria-label=\"Copy\" class=\"ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 tooltipped-no-delay d-flex flex-justify-center flex-items-center\" data-copy-feedback=\"Copied!\" data-tooltip-direction=\"w\">      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-copy js-clipboard-copy-icon\">    <path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path></svg>      <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-check js-clipboard-check-icon color-fg-success d-none\">    <path d=\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"></path></svg>    </clipboard-copy>  </div></template>    </div>    <div id=\"js-global-screen-reader-notice\" class=\"sr-only\" aria-live=\"polite\" aria-atomic=\"true\" ></div>    <div id=\"js-global-screen-reader-notice-assertive\" class=\"sr-only\" aria-live=\"assertive\" aria-atomic=\"true\"></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "returns",
  "url": "https://pypi.org/project/returns/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>returns \u00b7 PyPI</title>    <meta name=\"description\" content=\"Make your functions return something meaningful, typed, and safe!\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for returns\" href=\"/rss/project/returns/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/returns/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/returns/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"returns\">    <meta property=\"og:description\" content=\"Make your functions return something meaningful, typed, and safe!\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/dry-python/returns\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:dry-python/returns+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        returns 0.22.0      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install returns</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/returns/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2023-08-26T13:41:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 26, 2023</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/returns\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Make your functions return something meaningful, typed, and safe!</p><div data-html-include=\"/_includes/edit-project-button/returns\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for returns\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://returns.readthedocs.io\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/sponsors/dry-python\" rel=\"nofollow\">        <i class=\"fas fa-donate\" aria-hidden=\"true\"></i>Funding      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/dry-python/returns\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>Repository      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/returns\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> BSD License (BSD-3-Clause)</p>    <p><strong>Author:</strong> <a href=\"mailto:mail@sobolevn.me\">sobolevn</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      functional programming,    </span>    <span class=\"package-keyword\">      fp,    </span>    <span class=\"package-keyword\">      monads,    </span>    <span class=\"package-keyword\">      monad,    </span>    <span class=\"package-keyword\">      monad transformers,    </span>    <span class=\"package-keyword\">      composition,    </span>    <span class=\"package-keyword\">      type-safety,    </span>    <span class=\"package-keyword\">      mypy,    </span>    <span class=\"package-keyword\">      railway-oriented-programming    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=3.8.1, &lt;4.0  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/sobolevn/\" aria-label=\"sobolevn\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/093466b664360bcc322617f80a89162fbd424633/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f38633361326562663763326238346638333930643939633762663863386134383f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for sobolevn from gravatar.com\" title=\"Avatar for sobolevn from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            sobolevn          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/thepabloaguilar/\" aria-label=\"thepabloaguilar\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/e6b919dbda8c990fa286e9883e06c0f22265fb1d/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f31373735313963326231326538653532316638373530373634613635636665643f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for thepabloaguilar from gravatar.com\" title=\"Avatar for thepabloaguilar from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            thepabloaguilar          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Framework</strong>      <ul>        <li>          <a href=\"/search/?c=Framework+%3A%3A+Hypothesis\">            Hypothesis          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+BSD+License\">            OSI Approved :: BSD License          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries+%3A%3A+Python+Modules\">            Software Development :: Libraries :: Python Modules          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Utilities\">            Utilities          </a>        </li>      </ul>    </li>    <li>      <strong>Typing</strong>      <ul>        <li>          <a href=\"/search/?c=Typing+%3A%3A+Typed\">            Typed          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for returns\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <p><a href=\"https://github.com/dry-python/returns\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/fe2eee1b41b921283ebff68efc43f1e274933d05/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6472792d707974686f6e2f6272616e642f6d61737465722f6c6f676f2f72657475726e735f77686974652d6f75746c696e652e706e67\" alt=\"Returns logo\"></a></p><hr><p><a href=\"https://github.com/dry-python/returns/actions?query=workflow%3Atest\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/14d63d0ebcbf0e5bcf399b3f5db1de93edde6699/68747470733a2f2f6769746875622e636f6d2f6472792d707974686f6e2f72657475726e732f776f726b666c6f77732f746573742f62616467652e7376673f6272616e63683d6d6173746572266576656e743d70757368\" alt=\"Build Status\"></a><a href=\"https://codecov.io/gh/dry-python/returns\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/556c5b093816a5bd2bc09d0c766acbe0af9a08c1/68747470733a2f2f636f6465636f762e696f2f67682f6472792d707974686f6e2f72657475726e732f6272616e63682f6d61737465722f67726170682f62616467652e737667\" alt=codecov></a><a href=\"https://returns.readthedocs.io/en/latest/?badge=latest\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/4e3ccb67e5cff369d1cf9ba3bf458037403781e8/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f72657475726e732f62616467652f3f76657273696f6e3d6c6174657374\" alt=\"Documentation Status\"></a><a href=\"https://pypi.org/project/returns/\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/f6eb1c44840f0756fb41a21081d802c42b549208/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f72657475726e732e737667\" alt=\"Python Version\"></a><a href=\"https://github.com/wemake-services/wemake-python-styleguide\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/c8b7ab66b651e55b1e788d412c25d402dfc132f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374796c652d77656d616b652d3030303030302e737667\" alt=wemake-python-styleguide></a><a href=\"https://t.me/drypython\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/ad669f2ea8d611e599d9b42f88eae00c12262664/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6a6f696e2d626c75653f6c6f676f3d74656c656772616d\" alt=\"Telegram chat\"></a></p><hr><p>Make your functions return something meaningful, typed, and safe!</p><h2>Features</h2><ul><li>Brings functional programming to Python land</li><li>Provides a bunch of primitives to write declarative business logic</li><li>Enforces better architecture</li><li>Fully typed with annotations and checked with <code>mypy</code>, <a href=\"https://www.python.org/dev/peps/pep-0561/\" rel=nofollow>PEP561 compatible</a></li><li>Adds emulated Higher Kinded Types support</li><li>Provides type-safe interfaces to create your own data-types with enforced laws</li><li>Has a bunch of helpers for better composition</li><li>Pythonic and pleasant to write and to read \ud83d\udc0d</li><li>Support functions and coroutines, framework agnostic</li><li>Easy to start: has lots of docs, tests, and tutorials</li></ul><p><a href=\"https://returns.readthedocs.io/en/latest/pages/quickstart.html\" rel=nofollow>Quickstart</a> right now!</p><h2>Installation</h2><pre lang=bash>pip<span class=w> </span>install<span class=w> </span>returns</pre><p>You can also install <code>returns</code> with the latest supported <code>mypy</code> version:</p><pre lang=bash>pip<span class=w> </span>install<span class=w> </span>returns<span class=o>[</span>compatible-mypy<span class=o>]</span></pre><p>You would also need to configure our <a href=\"https://returns.readthedocs.io/en/latest/pages/contrib/mypy_plugins.html\" rel=nofollow><code>mypy</code> plugin</a>:</p><pre lang=ini><span class=c1># In setup.cfg or mypy.ini:</span><span class=k>[mypy]</span><span class=na>plugins</span><span class=w> </span><span class=o>=</span><span class=w>  </span><span class=na>returns.contrib.mypy.returns_plugin</span></pre><p>or:</p><pre lang=toml><span class=k>[tool.mypy]</span><span class=n>plugins</span><span class=w> </span><span class=o>=</span><span class=w> </span><span class=p>[</span><span class=s>\"returns.contrib.mypy.returns_plugin\"</span><span class=p>]</span></pre><p>We also recommend to use the same <code>mypy</code> settings <a href=\"https://github.com/wemake-services/wemake-python-styleguide/blob/master/styles/mypy.toml\" rel=nofollow>we use</a>.</p><p>Make sure you know how to get started, <a href=\"https://returns.readthedocs.io/en/latest/\" rel=nofollow>check out our docs</a>!<a href=\"https://repl.it/@sobolevn/returns#ex.py\" rel=nofollow>Try our demo</a>.</p><h2>Contents</h2><ul><li><a href=#maybe-container rel=nofollow>Maybe container</a> that allows you to write <code>None</code>-free code</li><li><a href=#requirescontext-container rel=nofollow>RequiresContext container</a> that allows you to use typed functional dependency injection</li><li><a href=#result-container rel=nofollow>Result container</a> that let's you to get rid of exceptions</li><li><a href=#io-container rel=nofollow>IO container</a> and <a href=#troublesome-io rel=nofollow>IOResult</a> that marks all impure operations and structures them</li><li><a href=#future-container rel=nofollow>Future container</a> and <a href=#async-code-without-exceptions rel=nofollow>FutureResult</a> to work with <code>async</code> code</li><li><a href=\"https://returns.readthedocs.io/en/latest/pages/create-your-own-container.html\" rel=nofollow>Write your own container!</a> You would still have all the features for your own types (including full existing code reuse and type-safety)</li></ul><h2>Maybe container</h2><p><code>None</code> is called the <a href=\"https://www.infoq.com/presentations/Null-References-The-Billion-Dollar-Mistake-Tony-Hoare/\" rel=nofollow>worst mistake in the history of Computer Science</a>.</p><p>So, what can we do to check for <code>None</code> in our programs?You can use builtin <a href=\"https://mypy.readthedocs.io/en/stable/kinds_of_types.html#optional-types-and-the-none-type\" rel=nofollow>Optional</a> typeand write a lot of <code>if some is not None:</code> conditions.But, <strong>having <code>null</code> checks here and there makes your code unreadable</strong>.</p><pre lang=python3><span class=n>user</span><span class=p>:</span> <span class=n>Optional</span><span class=p>[</span><span class=n>User</span><span class=p>]</span><span class=n>discount_program</span><span class=p>:</span> <span class=n>Optional</span><span class=p>[</span><span class=s1>'DiscountProgram'</span><span class=p>]</span> <span class=o>=</span> <span class=kc>None</span><span class=k>if</span> <span class=n>user</span> <span class=ow>is</span> <span class=ow>not</span> <span class=kc>None</span><span class=p>:</span>     <span class=n>balance</span> <span class=o>=</span> <span class=n>user</span><span class=o>.</span><span class=n>get_balance</span><span class=p>()</span>     <span class=k>if</span> <span class=n>balance</span> <span class=ow>is</span> <span class=ow>not</span> <span class=kc>None</span><span class=p>:</span>         <span class=n>credit</span> <span class=o>=</span> <span class=n>balance</span><span class=o>.</span><span class=n>credit_amount</span><span class=p>()</span>         <span class=k>if</span> <span class=n>credit</span> <span class=ow>is</span> <span class=ow>not</span> <span class=kc>None</span> <span class=ow>and</span> <span class=n>credit</span> <span class=o>&gt;</span> <span class=mi>0</span><span class=p>:</span>             <span class=n>discount_program</span> <span class=o>=</span> <span class=n>choose_discount</span><span class=p>(</span><span class=n>credit</span><span class=p>)</span></pre><p>Or you can use<a href=\"https://returns.readthedocs.io/en/latest/pages/maybe.html\" rel=nofollow>Maybe</a> container!It consists of <code>Some</code> and <code>Nothing</code> types,representing existing state and empty (instead of <code>None</code>) state respectively.</p><pre lang=python3><span class=kn>from</span> <span class=nn>typing</span> <span class=kn>import</span> <span class=n>Optional</span><span class=kn>from</span> <span class=nn>returns.maybe</span> <span class=kn>import</span> <span class=n>Maybe</span><span class=p>,</span> <span class=n>maybe</span><span class=nd>@maybe</span>  <span class=c1># decorator to convert existing Optional[int] to Maybe[int]</span><span class=k>def</span> <span class=nf>bad_function</span><span class=p>()</span> <span class=o>-&gt;</span> <span class=n>Optional</span><span class=p>[</span><span class=nb>int</span><span class=p>]:</span>    <span class=o>...</span><span class=n>maybe_number</span><span class=p>:</span> <span class=n>Maybe</span><span class=p>[</span><span class=nb>float</span><span class=p>]</span> <span class=o>=</span> <span class=n>bad_function</span><span class=p>()</span><span class=o>.</span><span class=n>bind_optional</span><span class=p>(</span>    <span class=k>lambda</span> <span class=n>number</span><span class=p>:</span> <span class=n>number</span> <span class=o>/</span> <span class=mi>2</span><span class=p>,</span><span class=p>)</span><span class=c1># =&gt; Maybe will return Some[float] only if there's a non-None value</span><span class=c1>#    Otherwise, will return Nothing</span></pre><p>You can be sure that <code>.bind_optional()</code> method won't be called for <code>Nothing</code>.Forget about <code>None</code>-related errors forever!</p><p>We can also bind a <code>Optional</code>-returning function over a container.To achieve this, we are going to use <code>.bind_optional</code> method.</p><p>And here's how your initial refactored code will look:</p><pre lang=python3><span class=n>user</span><span class=p>:</span> <span class=n>Optional</span><span class=p>[</span><span class=n>User</span><span class=p>]</span><span class=c1># Type hint here is optional, it only helps the reader here:</span><span class=n>discount_program</span><span class=p>:</span> <span class=n>Maybe</span><span class=p>[</span><span class=s1>'DiscountProgram'</span><span class=p>]</span> <span class=o>=</span> <span class=n>Maybe</span><span class=o>.</span><span class=n>from_optional</span><span class=p>(</span>    <span class=n>user</span><span class=p>,</span><span class=p>)</span><span class=o>.</span><span class=n>bind_optional</span><span class=p>(</span>  <span class=c1># This won't be called if `user is None`</span>    <span class=k>lambda</span> <span class=n>real_user</span><span class=p>:</span> <span class=n>real_user</span><span class=o>.</span><span class=n>get_balance</span><span class=p>(),</span><span class=p>)</span><span class=o>.</span><span class=n>bind_optional</span><span class=p>(</span>  <span class=c1># This won't be called if `real_user.get_balance()` is None</span>    <span class=k>lambda</span> <span class=n>balance</span><span class=p>:</span> <span class=n>balance</span><span class=o>.</span><span class=n>credit_amount</span><span class=p>(),</span><span class=p>)</span><span class=o>.</span><span class=n>bind_optional</span><span class=p>(</span>  <span class=c1># And so on!</span>    <span class=k>lambda</span> <span class=n>credit</span><span class=p>:</span> <span class=n>choose_discount</span><span class=p>(</span><span class=n>credit</span><span class=p>)</span> <span class=k>if</span> <span class=n>credit</span> <span class=o>&gt;</span> <span class=mi>0</span> <span class=k>else</span> <span class=kc>None</span><span class=p>,</span><span class=p>)</span></pre><p>Much better, isn't it?</p><h2>RequiresContext container</h2><p>Many developers do use some kind of dependency injection in Python.And usually it is based on the ideathat there's some kind of a container and assembly process.</p><p>Functional approach is much simpler!</p><p>Imagine that you have a <code>django</code> based game, where you award users with points for each guessed letter in a word (unguessed letters are marked as <code>'.'</code>):</p><pre lang=python3><span class=kn>from</span> <span class=nn>django.http</span> <span class=kn>import</span> <span class=n>HttpRequest</span><span class=p>,</span> <span class=n>HttpResponse</span><span class=kn>from</span> <span class=nn>words_app.logic</span> <span class=kn>import</span> <span class=n>calculate_points</span><span class=k>def</span> <span class=nf>view</span><span class=p>(</span><span class=n>request</span><span class=p>:</span> <span class=n>HttpRequest</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=n>HttpResponse</span><span class=p>:</span>    <span class=n>user_word</span><span class=p>:</span> <span class=nb>str</span> <span class=o>=</span> <span class=n>request</span><span class=o>.</span><span class=n>POST</span><span class=p>[</span><span class=s1>'word'</span><span class=p>]</span>  <span class=c1># just an example</span>    <span class=n>points</span> <span class=o>=</span> <span class=n>calculate_points</span><span class=p>(</span><span class=n>user_word</span><span class=p>)</span>    <span class=o>...</span>  <span class=c1># later you show the result to user somehow</span><span class=c1># Somewhere in your `words_app/logic.py`:</span><span class=k>def</span> <span class=nf>calculate_points</span><span class=p>(</span><span class=n>word</span><span class=p>:</span> <span class=nb>str</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=nb>int</span><span class=p>:</span>    <span class=n>guessed_letters_count</span> <span class=o>=</span> <span class=nb>len</span><span class=p>([</span><span class=n>letter</span> <span class=k>for</span> <span class=n>letter</span> <span class=ow>in</span> <span class=n>word</span> <span class=k>if</span> <span class=n>letter</span> <span class=o>!=</span> <span class=s1>'.'</span><span class=p>])</span>    <span class=k>return</span> <span class=n>_award_points_for_letters</span><span class=p>(</span><span class=n>guessed_letters_count</span><span class=p>)</span><span class=k>def</span> <span class=nf>_award_points_for_letters</span><span class=p>(</span><span class=n>guessed</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=nb>int</span><span class=p>:</span>    <span class=k>return</span> <span class=mi>0</span> <span class=k>if</span> <span class=n>guessed</span> <span class=o>&lt;</span> <span class=mi>5</span> <span class=k>else</span> <span class=n>guessed</span>  <span class=c1># minimum 6 points possible!</span></pre><p>Awesome! It works, users are happy, your logic is pure and awesome.But, later you decide to make the game more fun:let's make the minimal accountable letters thresholdconfigurable for an extra challenge.</p><p>You can just do it directly:</p><pre lang=python3><span class=k>def</span> <span class=nf>_award_points_for_letters</span><span class=p>(</span><span class=n>guessed</span><span class=p>:</span> <span class=nb>int</span><span class=p>,</span> <span class=n>threshold</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=nb>int</span><span class=p>:</span>    <span class=k>return</span> <span class=mi>0</span> <span class=k>if</span> <span class=n>guessed</span> <span class=o>&lt;</span> <span class=n>threshold</span> <span class=k>else</span> <span class=n>guessed</span></pre><p>The problem is that <code>_award_points_for_letters</code> is deeply nested.And then you have to pass <code>threshold</code> through the whole callstack,including <code>calculate_points</code> and all other functions that might be on the way.All of them will have to accept <code>threshold</code> as a parameter!This is not useful at all!Large code bases will struggle a lot from this change.</p><p>Ok, you can directly use <code>django.settings</code> (or similar)in your <code>_award_points_for_letters</code> function.And <strong>ruin your pure logic with framework specific details</strong>. That's ugly!</p><p>Or you can use <code>RequiresContext</code> container. Let's see how our code changes:</p><pre lang=python3><span class=kn>from</span> <span class=nn>django.conf</span> <span class=kn>import</span> <span class=n>settings</span><span class=kn>from</span> <span class=nn>django.http</span> <span class=kn>import</span> <span class=n>HttpRequest</span><span class=p>,</span> <span class=n>HttpResponse</span><span class=kn>from</span> <span class=nn>words_app.logic</span> <span class=kn>import</span> <span class=n>calculate_points</span><span class=k>def</span> <span class=nf>view</span><span class=p>(</span><span class=n>request</span><span class=p>:</span> <span class=n>HttpRequest</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=n>HttpResponse</span><span class=p>:</span>    <span class=n>user_word</span><span class=p>:</span> <span class=nb>str</span> <span class=o>=</span> <span class=n>request</span><span class=o>.</span><span class=n>POST</span><span class=p>[</span><span class=s1>'word'</span><span class=p>]</span>  <span class=c1># just an example</span>    <span class=n>points</span> <span class=o>=</span> <span class=n>calculate_points</span><span class=p>(</span><span class=n>user_words</span><span class=p>)(</span><span class=n>settings</span><span class=p>)</span>  <span class=c1># passing the dependencies</span>    <span class=o>...</span>  <span class=c1># later you show the result to user somehow</span><span class=c1># Somewhere in your `words_app/logic.py`:</span><span class=kn>from</span> <span class=nn>typing</span> <span class=kn>import</span> <span class=n>Protocol</span><span class=kn>from</span> <span class=nn>returns.context</span> <span class=kn>import</span> <span class=n>RequiresContext</span><span class=k>class</span> <span class=nc>_Deps</span><span class=p>(</span><span class=n>Protocol</span><span class=p>):</span>  <span class=c1># we rely on abstractions, not direct values or types</span>    <span class=n>WORD_THRESHOLD</span><span class=p>:</span> <span class=nb>int</span><span class=k>def</span> <span class=nf>calculate_points</span><span class=p>(</span><span class=n>word</span><span class=p>:</span> <span class=nb>str</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=n>RequiresContext</span><span class=p>[</span><span class=nb>int</span><span class=p>,</span> <span class=n>_Deps</span><span class=p>]:</span>    <span class=n>guessed_letters_count</span> <span class=o>=</span> <span class=nb>len</span><span class=p>([</span><span class=n>letter</span> <span class=k>for</span> <span class=n>letter</span> <span class=ow>in</span> <span class=n>word</span> <span class=k>if</span> <span class=n>letter</span> <span class=o>!=</span> <span class=s1>'.'</span><span class=p>])</span>    <span class=k>return</span> <span class=n>_award_points_for_letters</span><span class=p>(</span><span class=n>guessed_letters_count</span><span class=p>)</span><span class=k>def</span> <span class=nf>_award_points_for_letters</span><span class=p>(</span><span class=n>guessed</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=n>RequiresContext</span><span class=p>[</span><span class=nb>int</span><span class=p>,</span> <span class=n>_Deps</span><span class=p>]:</span>    <span class=k>return</span> <span class=n>RequiresContext</span><span class=p>(</span>        <span class=k>lambda</span> <span class=n>deps</span><span class=p>:</span> <span class=mi>0</span> <span class=k>if</span> <span class=n>guessed</span> <span class=o>&lt;</span> <span class=n>deps</span><span class=o>.</span><span class=n>WORD_THRESHOLD</span> <span class=k>else</span> <span class=n>guessed</span><span class=p>,</span>    <span class=p>)</span></pre><p>And now you can pass your dependencies in a really direct and explicit way.And have the type-safety to check what you pass to cover your back.Check out <a href=\"https://returns.readthedocs.io/en/latest/pages/context.html\" rel=nofollow>RequiresContext</a> docs for more. There you will learn how to make <code>'.'</code> also configurable.</p><p>We also have <a href=\"https://returns.readthedocs.io/en/latest/pages/context.html#requirescontextresult-container\" rel=nofollow>RequiresContextResult</a>for context-related operations that might fail. And also <a href=\"https://returns.readthedocs.io/en/latest/pages/context.html#requirescontextioresult-container\" rel=nofollow>RequiresContextIOResult</a> and <a href=\"https://returns.readthedocs.io/en/latest/pages/context.html#requirescontextfutureresult-container\" rel=nofollow>RequiresContextFutureResult</a>.</p><h2>Result container</h2><p>Please, make sure that you are also aware of<a href=\"https://fsharpforfunandprofit.com/rop/\" rel=nofollow>Railway Oriented Programming</a>.</p><h3>Straight-forward approach</h3><p>Consider this code that you can find in <strong>any</strong> <code>python</code> project.</p><pre lang=python3><span class=kn>import</span> <span class=nn>requests</span><span class=k>def</span> <span class=nf>fetch_user_profile</span><span class=p>(</span><span class=n>user_id</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=s1>'UserProfile'</span><span class=p>:</span><span class=w>    </span><span class=sd>\"\"\"Fetches UserProfile dict from foreign API.\"\"\"</span>    <span class=n>response</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s1>'/api/users/</span><span class=si>{0}</span><span class=s1>'</span><span class=o>.</span><span class=n>format</span><span class=p>(</span><span class=n>user_id</span><span class=p>))</span>    <span class=n>response</span><span class=o>.</span><span class=n>raise_for_status</span><span class=p>()</span>    <span class=k>return</span> <span class=n>response</span><span class=o>.</span><span class=n>json</span><span class=p>()</span></pre><p>Seems legit, does it not?It also seems like a pretty straightforward code to test.All you need is to mock <code>requests.get</code> to return the structure you need.</p><p>But, there are hidden problems in this tiny code samplethat are almost impossible to spot at the first glance.</p><h3>Hidden problems</h3><p>Let's have a look at the exact same code,but with the all hidden problems explained.</p><pre lang=python3><span class=kn>import</span> <span class=nn>requests</span><span class=k>def</span> <span class=nf>fetch_user_profile</span><span class=p>(</span><span class=n>user_id</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=s1>'UserProfile'</span><span class=p>:</span><span class=w>    </span><span class=sd>\"\"\"Fetches UserProfile dict from foreign API.\"\"\"</span>    <span class=n>response</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s1>'/api/users/</span><span class=si>{0}</span><span class=s1>'</span><span class=o>.</span><span class=n>format</span><span class=p>(</span><span class=n>user_id</span><span class=p>))</span>    <span class=c1># What if we try to find user that does not exist?</span>    <span class=c1># Or network will go down? Or the server will return 500?</span>    <span class=c1># In this case the next line will fail with an exception.</span>    <span class=c1># We need to handle all possible errors in this function</span>    <span class=c1># and do not return corrupt data to consumers.</span>    <span class=n>response</span><span class=o>.</span><span class=n>raise_for_status</span><span class=p>()</span>    <span class=c1># What if we have received invalid JSON?</span>    <span class=c1># Next line will raise an exception!</span>    <span class=k>return</span> <span class=n>response</span><span class=o>.</span><span class=n>json</span><span class=p>()</span></pre><p>Now, all (probably all?) problems are clear.How can we be sure that this function will be safeto use inside our complex business logic?</p><p>We really cannot be sure!We will have to create <strong>lots</strong> of <code>try</code> and <code>except</code> casesjust to catch the expected exceptions. Our code will become complex and unreadable with all this mess!</p><p>Or we can go with the top level <code>except Exception:</code> caseto catch literally everything.And this way we would end up with catching unwanted ones.This approach can hide serious problems from us for a long time.</p><h3>Pipe example</h3><pre lang=python3><span class=kn>import</span> <span class=nn>requests</span><span class=kn>from</span> <span class=nn>returns.result</span> <span class=kn>import</span> <span class=n>Result</span><span class=p>,</span> <span class=n>safe</span><span class=kn>from</span> <span class=nn>returns.pipeline</span> <span class=kn>import</span> <span class=n>flow</span><span class=kn>from</span> <span class=nn>returns.pointfree</span> <span class=kn>import</span> <span class=n>bind</span><span class=k>def</span> <span class=nf>fetch_user_profile</span><span class=p>(</span><span class=n>user_id</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=n>Result</span><span class=p>[</span><span class=s1>'UserProfile'</span><span class=p>,</span> <span class=ne>Exception</span><span class=p>]:</span><span class=w>    </span><span class=sd>\"\"\"Fetches `UserProfile` TypedDict from foreign API.\"\"\"</span>    <span class=k>return</span> <span class=n>flow</span><span class=p>(</span>        <span class=n>user_id</span><span class=p>,</span>        <span class=n>_make_request</span><span class=p>,</span>        <span class=n>bind</span><span class=p>(</span><span class=n>_parse_json</span><span class=p>),</span>    <span class=p>)</span><span class=nd>@safe</span><span class=k>def</span> <span class=nf>_make_request</span><span class=p>(</span><span class=n>user_id</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=n>requests</span><span class=o>.</span><span class=n>Response</span><span class=p>:</span>    <span class=c1># TODO: we are not yet done with this example, read more about `IO`:</span>    <span class=n>response</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s1>'/api/users/</span><span class=si>{0}</span><span class=s1>'</span><span class=o>.</span><span class=n>format</span><span class=p>(</span><span class=n>user_id</span><span class=p>))</span>    <span class=n>response</span><span class=o>.</span><span class=n>raise_for_status</span><span class=p>()</span>    <span class=k>return</span> <span class=n>response</span><span class=nd>@safe</span><span class=k>def</span> <span class=nf>_parse_json</span><span class=p>(</span><span class=n>response</span><span class=p>:</span> <span class=n>requests</span><span class=o>.</span><span class=n>Response</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=s1>'UserProfile'</span><span class=p>:</span>    <span class=k>return</span> <span class=n>response</span><span class=o>.</span><span class=n>json</span><span class=p>()</span></pre><p>Now we have a clean and a safe and declarative wayto express our business needs:</p><ul><li>We start from making a request, that might fail at any moment,</li><li>Then parsing the response if the request was successful,</li><li>And then return the result.</li></ul><p>Now, instead of returning regular valueswe return values wrapped inside a special containerthanks to the<a href=\"https://returns.readthedocs.io/en/latest/pages/result.html#safe\" rel=nofollow>@safe</a>decorator. It will return <a href=\"https://returns.readthedocs.io/en/latest/pages/result.html\" rel=nofollow>Success[YourType] or Failure[Exception]</a>.And will never throw exception at us!</p><p>We also use <a href=\"https://returns.readthedocs.io/en/latest/pages/pipeline.html#flow\" rel=nofollow>flow</a>and <a href=\"https://returns.readthedocs.io/en/latest/pages/pointfree.html#bind\" rel=nofollow>bind</a>functions for handy and declarative composition.</p><p>This way we can be sure that our code won't break inrandom places due to some implicit exception.Now we control all parts and are prepared for the explicit errors.</p><p>We are not yet done with this example,let's continue to improve it in the next chapter.</p><h2>IO container</h2><p>Let's look at our example from another angle.All its functions look like regular ones:it is impossible to tell whether they are <a href=\"https://en.wikipedia.org/wiki/Pure_function\" rel=nofollow>pure</a>or impure from the first sight.</p><p>It leads to a very important consequence:<em>we start to mix pure and impure code together</em>.We should not do that!</p><p>When these two concepts are mixedwe suffer really bad when testing or reusing it.Almost everything should be pure by default.And we should explicitly mark impure parts of the program.</p><p>That's why we have created <code>IO</code> containerto mark impure functions that never fail.</p><p>These impure functions use <code>random</code>, current datetime, environment, or console:</p><pre lang=python3><span class=kn>import</span> <span class=nn>random</span><span class=kn>import</span> <span class=nn>datetime</span> <span class=k>as</span> <span class=nn>dt</span><span class=kn>from</span> <span class=nn>returns.io</span> <span class=kn>import</span> <span class=n>IO</span><span class=k>def</span> <span class=nf>get_random_number</span><span class=p>()</span> <span class=o>-&gt;</span> <span class=n>IO</span><span class=p>[</span><span class=nb>int</span><span class=p>]:</span>  <span class=c1># or use `@impure` decorator</span>    <span class=k>return</span> <span class=n>IO</span><span class=p>(</span><span class=n>random</span><span class=o>.</span><span class=n>randint</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>10</span><span class=p>))</span>  <span class=c1># isn't pure, because random</span><span class=n>now</span><span class=p>:</span> <span class=n>Callable</span><span class=p>[[],</span> <span class=n>IO</span><span class=p>[</span><span class=n>dt</span><span class=o>.</span><span class=n>datetime</span><span class=p>]]</span> <span class=o>=</span> <span class=n>impure</span><span class=p>(</span><span class=n>dt</span><span class=o>.</span><span class=n>datetime</span><span class=o>.</span><span class=n>now</span><span class=p>)</span><span class=nd>@impure</span><span class=k>def</span> <span class=nf>return_and_show_next_number</span><span class=p>(</span><span class=n>previous</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=nb>int</span><span class=p>:</span>    <span class=n>next_number</span> <span class=o>=</span> <span class=n>previous</span> <span class=o>+</span> <span class=mi>1</span>    <span class=nb>print</span><span class=p>(</span><span class=n>next_number</span><span class=p>)</span>  <span class=c1># isn't pure, because does IO</span>    <span class=k>return</span> <span class=n>next_number</span></pre><p>Now we can clearly see which functions are pure and which ones are impure.This helps us a lot in building large applications, unit testing you code,and composing business logic together.</p><h3>Troublesome IO</h3><p>As it was already said, we use <code>IO</code> when we handle functions that do not fail.</p><p>What if our function can fail and is impure?Like <code>requests.get()</code> we had earlier in our example.</p><p>Then we have to use a special <code>IOResult</code> type instead of a regular <code>Result</code>.Let's find the difference:</p><ul><li>Our <code>_parse_json</code> function always returnsthe same result (hopefully) for the same input:you can either parse valid <code>json</code> or fail on invalid one.That's why we return pure <code>Result</code>, there's no <code>IO</code> inside</li><li>Our <code>_make_request</code> function is impure and can fail.Try to send two similar requests with and without internet connection.The result will be different for the same input.That's why we must use <code>IOResult</code> here: it can fail and has <code>IO</code></li></ul><p>So, in order to fulfill our requirement and separate pure code from impure one,we have to refactor our example.</p><h3>Explicit IO</h3><p>Let's make our <a href=\"https://returns.readthedocs.io/en/latest/pages/io.html\" rel=nofollow>IO</a>explicit!</p><pre lang=python3><span class=kn>import</span> <span class=nn>requests</span><span class=kn>from</span> <span class=nn>returns.io</span> <span class=kn>import</span> <span class=n>IOResult</span><span class=p>,</span> <span class=n>impure_safe</span><span class=kn>from</span> <span class=nn>returns.result</span> <span class=kn>import</span> <span class=n>safe</span><span class=kn>from</span> <span class=nn>returns.pipeline</span> <span class=kn>import</span> <span class=n>flow</span><span class=kn>from</span> <span class=nn>returns.pointfree</span> <span class=kn>import</span> <span class=n>bind_result</span><span class=k>def</span> <span class=nf>fetch_user_profile</span><span class=p>(</span><span class=n>user_id</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=n>IOResult</span><span class=p>[</span><span class=s1>'UserProfile'</span><span class=p>,</span> <span class=ne>Exception</span><span class=p>]:</span><span class=w>    </span><span class=sd>\"\"\"Fetches `UserProfile` TypedDict from foreign API.\"\"\"</span>    <span class=k>return</span> <span class=n>flow</span><span class=p>(</span>        <span class=n>user_id</span><span class=p>,</span>        <span class=n>_make_request</span><span class=p>,</span>        <span class=c1># before: def (Response) -&gt; UserProfile</span>        <span class=c1># after safe: def (Response) -&gt; ResultE[UserProfile]</span>        <span class=c1># after bind_result: def (IOResultE[Response]) -&gt; IOResultE[UserProfile]</span>        <span class=n>bind_result</span><span class=p>(</span><span class=n>_parse_json</span><span class=p>),</span>    <span class=p>)</span><span class=nd>@impure_safe</span><span class=k>def</span> <span class=nf>_make_request</span><span class=p>(</span><span class=n>user_id</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=n>requests</span><span class=o>.</span><span class=n>Response</span><span class=p>:</span>    <span class=n>response</span> <span class=o>=</span> <span class=n>requests</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s1>'/api/users/</span><span class=si>{0}</span><span class=s1>'</span><span class=o>.</span><span class=n>format</span><span class=p>(</span><span class=n>user_id</span><span class=p>))</span>    <span class=n>response</span><span class=o>.</span><span class=n>raise_for_status</span><span class=p>()</span>    <span class=k>return</span> <span class=n>response</span><span class=nd>@safe</span><span class=k>def</span> <span class=nf>_parse_json</span><span class=p>(</span><span class=n>response</span><span class=p>:</span> <span class=n>requests</span><span class=o>.</span><span class=n>Response</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=s1>'UserProfile'</span><span class=p>:</span>    <span class=k>return</span> <span class=n>response</span><span class=o>.</span><span class=n>json</span><span class=p>()</span></pre><p>And later we can use <a href=\"https://returns.readthedocs.io/en/latest/pages/io.html#unsafe-perform-io\" rel=nofollow>unsafe_perform_io</a>somewhere at the top level of our program to get the pure (or \"real\") value.</p><p>As a result of this refactoring session, we know everything about our code:</p><ul><li>Which parts can fail,</li><li>Which parts are impure,</li><li>How to compose them in a smart, readable, and typesafe manner.</li></ul><h2>Future container</h2><p>There are several issues with <code>async</code> code in Python:</p><ol><li>You cannot call <code>async</code> function from a sync one</li><li>Any unexpectedly thrown exception can ruin your whole event loop</li><li>Ugly composition with lots of <code>await</code> statements</li></ol><p><code>Future</code> and <code>FutureResult</code> containers solve these issues!</p><h3>Mixing sync and async code</h3><p>The main feature of <a href=\"https://returns.readthedocs.io/en/latest/pages/future.html\" rel=nofollow>Future</a>is that it allows to run async codewhile maintaining sync context. Let's see an example.</p><p>Let's say we have two functions,the <code>first</code> one returns a number and the <code>second</code> one increments it:</p><pre lang=python3><span class=k>async</span> <span class=k>def</span> <span class=nf>first</span><span class=p>()</span> <span class=o>-&gt;</span> <span class=nb>int</span><span class=p>:</span>    <span class=k>return</span> <span class=mi>1</span><span class=k>def</span> <span class=nf>second</span><span class=p>():</span>  <span class=c1># How can we call `first()` from here?</span>    <span class=k>return</span> <span class=n>first</span><span class=p>()</span> <span class=o>+</span> <span class=mi>1</span>  <span class=c1># Boom! Don't do this. We illustrate a problem here.</span></pre><p>If we try to just run <code>first()</code>, we will just create an unawaited coroutine.It won't return the value we want.</p><p>But, if we would try to run <code>await first()</code>,then we would need to change <code>second</code> to be <code>async</code>.And sometimes it is not possible for various reasons.</p><p>However, with <code>Future</code> we can \"pretend\" to call async code from sync code:</p><pre lang=python3><span class=kn>from</span> <span class=nn>returns.future</span> <span class=kn>import</span> <span class=n>Future</span><span class=k>def</span> <span class=nf>second</span><span class=p>()</span> <span class=o>-&gt;</span> <span class=n>Future</span><span class=p>[</span><span class=nb>int</span><span class=p>]:</span>    <span class=k>return</span> <span class=n>Future</span><span class=p>(</span><span class=n>first</span><span class=p>())</span><span class=o>.</span><span class=n>map</span><span class=p>(</span><span class=k>lambda</span> <span class=n>num</span><span class=p>:</span> <span class=n>num</span> <span class=o>+</span> <span class=mi>1</span><span class=p>)</span></pre><p>Without touching our <code>first</code> async functionor making <code>second</code> async we have achieved our goal.Now, our async value is incremented inside a sync function.</p><p>However, <code>Future</code> still requires to be executed inside a proper eventloop:</p><pre lang=python3><span class=kn>import</span> <span class=nn>anyio</span>  <span class=c1># or asyncio, or any other lib</span><span class=c1># We can then pass our `Future` to any library: asyncio, trio, curio.</span><span class=c1># And use any event loop: regular, uvloop, even a custom one, etc</span><span class=k>assert</span> <span class=n>anyio</span><span class=o>.</span><span class=n>run</span><span class=p>(</span><span class=n>second</span><span class=p>()</span><span class=o>.</span><span class=n>awaitable</span><span class=p>)</span> <span class=o>==</span> <span class=mi>2</span></pre><p>As you can see <code>Future</code> allows youto work with async functions from a sync context.And to mix these two realms together.Use raw <code>Future</code> for operations that cannot fail or raise exceptions.Pretty much the same logic we had with our <code>IO</code> container.</p><h3>Async code without exceptions</h3><p>We have already covered how <a href=#result-container rel=nofollow><code>Result</code></a> worksfor both pure and impure code.The main idea is: we don't raise exceptions, we return them.It is <strong>especially</strong> critical in async code,because a single exception can ruinall our coroutines running in a single eventloop.</p><p>We have a handy combination of <code>Future</code> and <code>Result</code> containers: <code>FutureResult</code>.Again, this is exactly like <code>IOResult</code>, but for impure async code.Use it when your <code>Future</code> might have problems:like HTTP requests or filesystem operations.</p><p>You can easily turn any wild throwing coroutine into a calm <code>FutureResult</code>:</p><pre lang=python3><span class=kn>import</span> <span class=nn>anyio</span><span class=kn>from</span> <span class=nn>returns.future</span> <span class=kn>import</span> <span class=n>future_safe</span><span class=kn>from</span> <span class=nn>returns.io</span> <span class=kn>import</span> <span class=n>IOFailure</span><span class=nd>@future_safe</span><span class=k>async</span> <span class=k>def</span> <span class=nf>raising</span><span class=p>():</span>    <span class=k>raise</span> <span class=ne>ValueError</span><span class=p>(</span><span class=s1>'Not so fast!'</span><span class=p>)</span><span class=n>ioresult</span> <span class=o>=</span> <span class=n>anyio</span><span class=o>.</span><span class=n>run</span><span class=p>(</span><span class=n>raising</span><span class=o>.</span><span class=n>awaitable</span><span class=p>)</span>  <span class=c1># all `Future`s return IO containers</span><span class=k>assert</span> <span class=n>ioresult</span> <span class=o>==</span> <span class=n>IOFailure</span><span class=p>(</span><span class=ne>ValueError</span><span class=p>(</span><span class=s1>'Not so fast!'</span><span class=p>))</span>  <span class=c1># True</span></pre><p>Using <code>FutureResult</code> will keep your code safe from exceptions.You can always <code>await</code> or execute inside an eventloop any <code>FutureResult</code>to get sync <code>IOResult</code> instance to work with it in a sync manner.</p><h3>Better async composition</h3><p>Previously, you had to do quite a lot of <code>await</code>ing while writing <code>async</code> code:</p><pre lang=python3><span class=k>async</span> <span class=k>def</span> <span class=nf>fetch_user</span><span class=p>(</span><span class=n>user_id</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=s1>'User'</span><span class=p>:</span>    <span class=o>...</span><span class=k>async</span> <span class=k>def</span> <span class=nf>get_user_permissions</span><span class=p>(</span><span class=n>user</span><span class=p>:</span> <span class=s1>'User'</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=s1>'Permissions'</span><span class=p>:</span>    <span class=o>...</span><span class=k>async</span> <span class=k>def</span> <span class=nf>ensure_allowed</span><span class=p>(</span><span class=n>permissions</span><span class=p>:</span> <span class=s1>'Permissions'</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=nb>bool</span><span class=p>:</span>    <span class=o>...</span><span class=k>async</span> <span class=k>def</span> <span class=nf>main</span><span class=p>(</span><span class=n>user_id</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=nb>bool</span><span class=p>:</span>    <span class=c1># Also, don't forget to handle all possible errors with `try / except`!</span>    <span class=n>user</span> <span class=o>=</span> <span class=k>await</span> <span class=n>fetch_user</span><span class=p>(</span><span class=n>user_id</span><span class=p>)</span>  <span class=c1># We will await each time we use a coro!</span>    <span class=n>permissions</span> <span class=o>=</span> <span class=k>await</span> <span class=n>get_user_permissions</span><span class=p>(</span><span class=n>user</span><span class=p>)</span>    <span class=k>return</span> <span class=k>await</span> <span class=n>ensure_allowed</span><span class=p>(</span><span class=n>permissions</span><span class=p>)</span></pre><p>Some people are ok with it, but some people don't like this imperative style.The problem is that there was no choice.</p><p>But now, you can do the same thing in functional style!With the help of <code>Future</code> and <code>FutureResult</code> containers:</p><pre lang=python3><span class=kn>import</span> <span class=nn>anyio</span><span class=kn>from</span> <span class=nn>returns.future</span> <span class=kn>import</span> <span class=n>FutureResultE</span><span class=p>,</span> <span class=n>future_safe</span><span class=kn>from</span> <span class=nn>returns.io</span> <span class=kn>import</span> <span class=n>IOSuccess</span><span class=p>,</span> <span class=n>IOFailure</span><span class=nd>@future_safe</span><span class=k>async</span> <span class=k>def</span> <span class=nf>fetch_user</span><span class=p>(</span><span class=n>user_id</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=s1>'User'</span><span class=p>:</span>    <span class=o>...</span><span class=nd>@future_safe</span><span class=k>async</span> <span class=k>def</span> <span class=nf>get_user_permissions</span><span class=p>(</span><span class=n>user</span><span class=p>:</span> <span class=s1>'User'</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=s1>'Permissions'</span><span class=p>:</span>    <span class=o>...</span><span class=nd>@future_safe</span><span class=k>async</span> <span class=k>def</span> <span class=nf>ensure_allowed</span><span class=p>(</span><span class=n>permissions</span><span class=p>:</span> <span class=s1>'Permissions'</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=nb>bool</span><span class=p>:</span>    <span class=o>...</span><span class=k>def</span> <span class=nf>main</span><span class=p>(</span><span class=n>user_id</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=n>FutureResultE</span><span class=p>[</span><span class=nb>bool</span><span class=p>]:</span>    <span class=c1># We can now turn `main` into a sync function, it does not `await` at all.</span>    <span class=c1># We also don't care about exceptions anymore, they are already handled.</span>    <span class=k>return</span> <span class=n>fetch_user</span><span class=p>(</span><span class=n>user_id</span><span class=p>)</span><span class=o>.</span><span class=n>bind</span><span class=p>(</span><span class=n>get_user_permissions</span><span class=p>)</span><span class=o>.</span><span class=n>bind</span><span class=p>(</span><span class=n>ensure_allowed</span><span class=p>)</span><span class=n>correct_user_id</span><span class=p>:</span> <span class=nb>int</span>  <span class=c1># has required permissions</span><span class=n>banned_user_id</span><span class=p>:</span> <span class=nb>int</span>  <span class=c1># does not have required permissions</span><span class=n>wrong_user_id</span><span class=p>:</span> <span class=nb>int</span>  <span class=c1># does not exist</span><span class=c1># We can have correct business results:</span><span class=k>assert</span> <span class=n>anyio</span><span class=o>.</span><span class=n>run</span><span class=p>(</span><span class=n>main</span><span class=p>(</span><span class=n>correct_user_id</span><span class=p>)</span><span class=o>.</span><span class=n>awaitable</span><span class=p>)</span> <span class=o>==</span> <span class=n>IOSuccess</span><span class=p>(</span><span class=kc>True</span><span class=p>)</span><span class=k>assert</span> <span class=n>anyio</span><span class=o>.</span><span class=n>run</span><span class=p>(</span><span class=n>main</span><span class=p>(</span><span class=n>banned_user_id</span><span class=p>)</span><span class=o>.</span><span class=n>awaitable</span><span class=p>)</span> <span class=o>==</span> <span class=n>IOSuccess</span><span class=p>(</span><span class=kc>False</span><span class=p>)</span><span class=c1># Or we can have errors along the way:</span><span class=k>assert</span> <span class=n>anyio</span><span class=o>.</span><span class=n>run</span><span class=p>(</span><span class=n>main</span><span class=p>(</span><span class=n>wrong_user_id</span><span class=p>)</span><span class=o>.</span><span class=n>awaitable</span><span class=p>)</span> <span class=o>==</span> <span class=n>IOFailure</span><span class=p>(</span>    <span class=n>UserDoesNotExistError</span><span class=p>(</span><span class=o>...</span><span class=p>),</span><span class=p>)</span></pre><p>Or even something really fancy:</p><pre lang=python3><span class=kn>from</span> <span class=nn>returns.pointfree</span> <span class=kn>import</span> <span class=n>bind</span><span class=kn>from</span> <span class=nn>returns.pipeline</span> <span class=kn>import</span> <span class=n>flow</span><span class=k>def</span> <span class=nf>main</span><span class=p>(</span><span class=n>user_id</span><span class=p>:</span> <span class=nb>int</span><span class=p>)</span> <span class=o>-&gt;</span> <span class=n>FutureResultE</span><span class=p>[</span><span class=nb>bool</span><span class=p>]:</span>    <span class=k>return</span> <span class=n>flow</span><span class=p>(</span>        <span class=n>fetch_user</span><span class=p>(</span><span class=n>user_id</span><span class=p>),</span>        <span class=n>bind</span><span class=p>(</span><span class=n>get_user_permissions</span><span class=p>),</span>        <span class=n>bind</span><span class=p>(</span><span class=n>ensure_allowed</span><span class=p>),</span>    <span class=p>)</span></pre><p>Later we can also refactor our logical functions to be syncand to return <code>FutureResult</code>.</p><p>Lovely, isn't it?</p><h2>More!</h2><p>Want more?<a href=\"https://returns.readthedocs.io\" rel=nofollow>Go to the docs!</a>Or read these articles:</p><ul><li><a href=\"https://sobolevn.me/2019/02/python-exceptions-considered-an-antipattern\" rel=nofollow>Python exceptions considered an anti-pattern</a></li><li><a href=\"https://sobolevn.me/2019/03/enforcing-srp\" rel=nofollow>Enforcing Single Responsibility Principle in Python</a></li><li><a href=\"https://sobolevn.me/2020/02/typed-functional-dependency-injection\" rel=nofollow>Typed functional Dependency Injection in Python</a></li><li><a href=\"https://sobolevn.me/2020/06/how-async-should-have-been\" rel=nofollow>How Async Should Have Been</a></li><li><a href=\"https://sobolevn.me/2020/10/higher-kinded-types-in-python\" rel=nofollow>Higher Kinded Types in Python</a></li><li><a href=\"https://sobolevn.me/2021/02/make-tests-a-part-of-your-app\" rel=nofollow>Make Tests a Part of Your App</a></li></ul><p>Do you have an article to submit? Feel free to open a pull request!</p>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://returns.readthedocs.io\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/sponsors/dry-python\" rel=\"nofollow\">        <i class=\"fas fa-donate\" aria-hidden=\"true\"></i>Funding      </a>    </li>    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/dry-python/returns\" rel=\"nofollow\">        <i class=\"fab fa-github\" aria-hidden=\"true\"></i>Repository      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/returns\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> BSD License (BSD-3-Clause)</p>    <p><strong>Author:</strong> <a href=\"mailto:mail@sobolevn.me\">sobolevn</a></p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      functional programming,    </span>    <span class=\"package-keyword\">      fp,    </span>    <span class=\"package-keyword\">      monads,    </span>    <span class=\"package-keyword\">      monad,    </span>    <span class=\"package-keyword\">      monad transformers,    </span>    <span class=\"package-keyword\">      composition,    </span>    <span class=\"package-keyword\">      type-safety,    </span>    <span class=\"package-keyword\">      mypy,    </span>    <span class=\"package-keyword\">      railway-oriented-programming    </span>  </p>  <p>    <strong>Requires:</strong> Python &gt;=3.8.1, &lt;4.0  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/sobolevn/\" aria-label=\"sobolevn\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/093466b664360bcc322617f80a89162fbd424633/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f38633361326562663763326238346638333930643939633762663863386134383f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for sobolevn from gravatar.com\" title=\"Avatar for sobolevn from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            sobolevn          </span>        </a>      </span>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/thepabloaguilar/\" aria-label=\"thepabloaguilar\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/e6b919dbda8c990fa286e9883e06c0f22265fb1d/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f31373735313963326231326538653532316638373530373634613635636665643f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for thepabloaguilar from gravatar.com\" title=\"Avatar for thepabloaguilar from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            thepabloaguilar          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Framework</strong>      <ul>        <li>          <a href=\"/search/?c=Framework+%3A%3A+Hypothesis\">            Hypothesis          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+BSD+License\">            OSI Approved :: BSD License          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Libraries+%3A%3A+Python+Modules\">            Software Development :: Libraries :: Python Modules          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Utilities\">            Utilities          </a>        </li>      </ul>    </li>    <li>      <strong>Typing</strong>      <ul>        <li>          <a href=\"/search/?c=Typing+%3A%3A+Typed\">            Typed          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/returns/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.22.0/\">                <p class=\"release__version\">                  0.22.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-08-26T13:41:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 26, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.21.0/\">                <p class=\"release__version\">                  0.21.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-06-27T15:46:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 27, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.20.1/\">                <p class=\"release__version\">                  0.20.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-06-23T20:33:06+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 23, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.20.0/\">                <p class=\"release__version\">                  0.20.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-21T13:13:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 21, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.19.0/\">                <p class=\"release__version\">                  0.19.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-03-13T14:33:17+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 13, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.18.0/\">                <p class=\"release__version\">                  0.18.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-12-31T16:50:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 31, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.17.0/\">                <p class=\"release__version\">                  0.17.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-10-05T07:47:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 5, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.16.0/\">                <p class=\"release__version\">                  0.16.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-03-26T15:33:34+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 26, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.15.0/\">                <p class=\"release__version\">                  0.15.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-10-21T17:15:36+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 21, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.14.0/\">                <p class=\"release__version\">                  0.14.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-06-07T21:02:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 7, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.13.0/\">                <p class=\"release__version\">                  0.13.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-02-02T20:21:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 2, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.12.0/\">                <p class=\"release__version\">                  0.12.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-12-21T14:03:45+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 21, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.11.0/\">                <p class=\"release__version\">                  0.11.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-08-29T21:41:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 29, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.10.0/\">                <p class=\"release__version\">                  0.10.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-08-18T14:13:19+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 18, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.9.0/\">                <p class=\"release__version\">                  0.9.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-07-01T14:25:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 1, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.8.0/\">                <p class=\"release__version\">                  0.8.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-06-17T11:29:41+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 17, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.7.0/\">                <p class=\"release__version\">                  0.7.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-06-11T08:49:54+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 11, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.6.0/\">                <p class=\"release__version\">                  0.6.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-06-07T11:12:02+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 7, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.5.0/\">                <p class=\"release__version\">                  0.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-06-01T11:06:56+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 1, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.4.0/\">                <p class=\"release__version\">                  0.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-02-04T11:49:19+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 4, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.3.1/\">                <p class=\"release__version\">                  0.3.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-02-02T17:55:56+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 2, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.3.0/\">                <p class=\"release__version\">                  0.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-02-02T13:30:27+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 2, 2019</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/returns/0.2.0/\">                <p class=\"release__version\">                  0.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-01-30T18:55:59+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 30, 2019</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/4e/b7/4e6ac3c8f180107619771f3ab57d5a3e7645dc6d393c01ee662d8de98717/returns-0.22.0.tar.gz\">          returns-0.22.0.tar.gz        </a>        (105.8 kB        <a href=\"#copy-hash-modal-dc62eaea-4f5a-49fa-b46b-867c885bb1ab\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-08-26T13:41:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 26, 2023</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/4e/7c/3c1bf4a1eb5c846c3af094dc5c484d55e66b9f7ab7615c8a17f23bcfb52f/returns-0.22.0-py3-none-any.whl\">          returns-0.22.0-py3-none-any.whl        </a>        (155.5 kB        <a href=\"#copy-hash-modal-56c4a8ba-26bd-4e6a-9763-343bc9539e49\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-08-26T13:41:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 26, 2023</time>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-dc62eaea-4f5a-49fa-b46b-867c885bb1ab\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for returns-0.22.0.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for returns-0.22.0.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">c7bd85bd1e0041b44fe46c7e2f68fcc76a0546142c876229e395174bcd674f37</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">686444aaddc58011d1ca876c194f0741</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">4eb74e6ac3c8f180107619771f3ab57d5a3e7645dc6d393c01ee662d8de98717</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-56c4a8ba-26bd-4e6a-9763-343bc9539e49\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for returns-0.22.0-py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for returns-0.22.0-py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">d38d6324692eeb29ec4bd698e1b859ec0ac79fb2c17bf0d302f92c8c42ef35c1</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">7e2e3c5b18780bbc2cc03a0461c1652e</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">4e7c3c1bf4a1eb5c846c3af094dc5c484d55e66b9f7ab7615c8a17f23bcfb52f</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "zcbor",
  "url": "https://pypi.org/project/zcbor/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>zcbor \u00b7 PyPI</title>    <meta name=\"description\" content=\"Code generation and validation using CDDL schemas\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for zcbor\" href=\"/rss/project/zcbor/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/zcbor/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/zcbor/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"zcbor\">    <meta property=\"og:description\" content=\"Code generation and validation using CDDL schemas\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/NordicSemiconductor/zcbor\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:NordicSemiconductor/zcbor+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        zcbor 0.8.1      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install zcbor</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/zcbor/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2024-01-26T17:25:33+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 26, 2024</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/zcbor\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Code generation and validation using CDDL schemas</p><div data-html-include=\"/_includes/edit-project-button/zcbor\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for zcbor\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/NordicSemiconductor/zcbor\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/zcbor\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache Software License (Apache)</p>    <p><strong>Author:</strong> Nordic Semiconductor ASA</p>    <p><strong>Maintainer:</strong> <a href=\"mailto:oyvind.ronningstad@nordicsemi.no\">\u00d8yvind R\u00f8nningstad</a></p>  <p>    <strong>Requires:</strong> Python &gt;=3.8  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/pypi.nordic/\" aria-label=\"pypi.nordic\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/79719c2371c83f9a9ac6abf9b57ac0bf24837590/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f61353638376539646165613266656661613539646263363034653163616166393f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for pypi.nordic from gravatar.com\" title=\"Avatar for pypi.nordic from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            pypi.nordic          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+Apache+Software+License\">            OSI Approved :: Apache Software License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+C\">            C          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+File+Formats+%3A%3A+JSON+%3A%3A+JSON+Schema\">            File Formats :: JSON :: JSON Schema          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Build+Tools\">            Software Development :: Build Tools          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Code+Generators\">            Software Development :: Code Generators          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for zcbor\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <h1>zcbor</h1><p>zcbor is a low footprint <a href=\"https://en.wikipedia.org/wiki/CBOR\" rel=nofollow>CBOR</a> library in the C language (C++ compatible), tailored for use in microcontrollers.It comes with a schema-driven script tool that can validate your data, or even generate code.The schema language (CDDL) allows creating very advanced and detailed schemas.</p><p>The validation and conversion part of the tool works with YAML and JSON data, in addition to CBOR.It can for example validate a YAML file against a schema and convert it into CBOR.</p><p>The code generation part of the tool generates C code based on the given schema.The generated code performs CBOR encoding and decoding using the C library, while also validating the data against all the rules in the schema.</p><p>The schema language used by zcbor is CDDL (Concise Data Definition Language) which is a powerful human-readable data description language defined in <a href=\"https://datatracker.ietf.org/doc/rfc8610/\" rel=nofollow>IETF RFC 8610</a>.</p><h1>Features</h1><p>Here are some possible ways zcbor can be used:</p><ul><li>C code:<ul><li>As a low-footprint CBOR decoding/encoding library similar to TinyCBOR/QCBOR/NanoCBOR. The library can be used independently of the Python script. (<a href=#cbor-decodingencoding-library rel=nofollow>More information</a>)</li><li>To generate C code (using the Python script) for validating and decoding or encoding CBOR, for use in optimized or constrained environments, such as microcontrollers. (<a href=#code-generation rel=nofollow>More information</a>)</li></ul></li><li>Python script and module (<a href=#python-script-and-module rel=nofollow>More information</a>):<ul><li>Validate a YAML/JSON file and translate it into CBOR e.g. for transmission.</li><li>Validate a YAML/JSON/CBOR file before processing it with some other tool</li><li>Decode and validate incoming CBOR data into human-readable YAML/JSON.</li><li>As part of a python script that processes YAML/JSON/CBOR files.<ul><li>Uses the same internal representation used by the PyYAML/json/cbor2 libraries.</li><li>Do validation against a CDDL schema.</li><li>Create a read-only representation via named tuples (with names taken from the CDDL schema).</li></ul></li></ul></li></ul><h1>Getting started</h1><p>There are samples in the <a href=samples rel=nofollow>samples</a> directory that demonstrate different ways to use zcbor, both the script tool and the C code.</p><ol><li>The <a href=\"samples/hello_world/README.md\" rel=nofollow>hello_world sample</a> is a minimum examples of encoding and decoding using the C library.</li><li>The <a href=\"samples/pet/README.md\" rel=nofollow>pet sample</a> shows a how to use the C library together with generated code, and how to use the script tool to do code generation and data conversion.</li></ol><p>The <a href=tests rel=nofollow>tests</a> also demonstrate how to use zcbor in different ways. The <a href=\"tests/encode\" rel=nofollow>encoding</a>, <a href=\"tests/decode\" rel=nofollow>decoding</a>, and <a href=\"tests/unit\" rel=nofollow>unit</a> tests run using <a href=\"https://github.com/zephyrproject-rtos/zephyr\" rel=nofollow>Zephyr</a> (the samples do not use Zephyr).</p><h2>Should I use code generation or the library directly?</h2><p>The benefit of using code generation is greater for decoding than encoding.This is because decoding is generally more complex than encoding, since when decoding you have to gracefully handle all possible payloads.The code generation will provide a number of checks that are tedious to write manually.These checks ensure that the payload is well-formed.</p><h1>CBOR decoding/encoding library</h1><p>The CBOR library can be found in <a href=include rel=nofollow>include/</a> and <a href=src rel=nofollow>src/</a> and can be used directly, by including the files in your project.If using zcbor with Zephyr, the library will be available when the <a href=\"https://docs.zephyrproject.org/latest/kconfig.html#CONFIG_ZCBOR\" rel=nofollow>CONFIG_ZCBOR</a> config is enabled.</p><p>The library is also used by generated code. See the <a href=#code-generation rel=nofollow>Code generation</a> section for more info about code generation.</p><p>The C library is C++ compatible.</p><h2>The zcbor state object</h2><p>To do encoding or decoding with the library, instantiate a <code>zcbor_state_t</code> object, which is most easily done using the <code>ZCBOR_STATE_*()</code> macros, look below or in the <a href=\"samples/hello_world/src/main.c\" rel=nofollow>hello_world</a> sample for example code.</p><p>The <code>elem_count</code> member refers to the number of encoded objects in the current list or map.<code>elem_count</code> starts again when entering a nested list or map, and is restored when exiting.</p><p><code>elem_count</code> is one reason for needing \"backup\" states (the other is to allow rollback of the payload).Backups are needed for <em>decoding</em> if there are any lists, maps, or CBOR-encoded strings (<code>zcbor_bstr_*_decode</code>) in the data.Backups are needed for <em>encoding</em> if there are any lists or maps <em>and</em> you are using canonical encoding (<code>ZCBOR_CANONICAL</code>), or when using the <code>zcbor_bstr_*_encode</code> functions.</p><pre lang=c><span class=cm>/** Initialize a decoding state (could include an array of backup states).</span><span class=cm> *  After calling this, decode_state[0] is ready to be used with the decoding APIs. */</span><span class=n>ZCBOR_STATE_D</span><span class=p>(</span><span class=n>decode_state</span><span class=p>,</span><span class=w> </span><span class=n>n</span><span class=p>,</span><span class=w> </span><span class=n>payload</span><span class=p>,</span><span class=w> </span><span class=n>payload_len</span><span class=p>,</span><span class=w> </span><span class=n>elem_count</span><span class=p>,</span><span class=w> </span><span class=n>n_flags</span><span class=p>);</span><span class=cm>/** Initialize an encoding state (could include an array of backup states).</span><span class=cm> *  After calling this, encode_state[0] is ready to be used with the encoding APIs. */</span><span class=n>ZCBOR_STATE_E</span><span class=p>(</span><span class=n>encode_state</span><span class=p>,</span><span class=w> </span><span class=n>n</span><span class=p>,</span><span class=w> </span><span class=n>payload</span><span class=p>,</span><span class=w> </span><span class=n>payload_len</span><span class=p>,</span><span class=w> </span><span class=mi>0</span><span class=p>);</span></pre><h2>Configuration</h2><p>The C library has a few compile-time configuration options.These configuration options can be enabled by adding them as compile definitions to the build.If using zcbor with Zephyr, use the <a href=\"https://github.com/zephyrproject-rtos/zephyr/blob/main/modules/zcbor/Kconfig\" rel=nofollow>Kconfig options</a> instead.</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>ZCBOR_CANONICAL</code></td><td>Assume canonical encoding (AKA \"deterministically encoded CBOR\"). When encoding lists and maps, do not use indefinite length encoding. Enabling <code>ZCBOR_CANONICAL</code> increases code size and makes the encoding library more often use state backups. When decoding, ensure that the incoming data conforms to canonical encoding, i.e. no indefinite length encoding, and always using minimal length encoding (e.g. not using 16 bits to encode a value &lt; 256). Note: the map ordering constraint in canonical encoding is not checked.</td></tr><tr><td><code>ZCBOR_VERBOSE</code></td><td>Print log messages on encoding/decoding errors (<code>zcbor_log()</code>), and also a trace message (<code>zcbor_trace()</code>) for each decoded value, and in each generated function (when using code generation).</td></tr><tr><td><code>ZCBOR_ASSERTS</code></td><td>Enable asserts (<code>zcbor_assert()</code>). When they fail, the assert statements instruct the current function to return a <code>ZCBOR_ERR_ASSERTION</code> error. If <code>ZCBOR_VERBOSE</code> is enabled, a message is printed.</td></tr><tr><td><code>ZCBOR_STOP_ON_ERROR</code></td><td>Enable the <code>stop_on_error</code> functionality. This makes all functions abort their execution if called when an error has already happened.</td></tr><tr><td><code>ZCBOR_BIG_ENDIAN</code></td><td>All decoded values are returned as big-endian. The default is little-endian.</td></tr><tr><td><code>ZCBOR_MAP_SMART_SEARCH</code></td><td>Applies to decoding of unordered maps. When enabled, a flag is kept for each element in an array, ensuring it is not processed twice. If disabled, a count is kept for map as a whole. Enabling increases code size and memory usage, and requires the state variable to possess the memory necessary for the flags.</td></tr></tbody></table><h1>Python script and module</h1><p>The zcbor.py script can directly read CBOR, YAML, or JSON data and validate it against a CDDL description.It can also freely convert the data between CBOR/YAML/JSON.It can also output the data to a C file formatted as a byte array.</p><h2>Invoking zcbor.py from the command line</h2><p>zcbor.py can be installed via <a href=\"https://pypi.org/project/zcbor/\" rel=nofollow><code>pip</code></a>, or alternatively invoked directly from its location in this repo.</p><p>Following are some generalized examples for validating, and for converting (which also validates) data from the command line.The script infers the data format from the file extension, but the format can also be specified explicitly.See <code>zcbor validate --help</code> and <code>zcbor convert --help</code> for more information.</p><pre lang=sh>zcbor<span class=w> </span>validate<span class=w> </span>-c<span class=w> </span>&lt;CDDL<span class=w> </span>description<span class=w> </span>file&gt;<span class=w> </span>-t<span class=w> </span>&lt;which<span class=w> </span>CDDL<span class=w> </span><span class=nb>type</span><span class=w> </span>to<span class=w> </span>expect&gt;<span class=w> </span>-i<span class=w> </span>&lt;input<span class=w> </span>data<span class=w> </span>file&gt;zcbor<span class=w> </span>convert<span class=w> </span>-c<span class=w> </span>&lt;CDDL<span class=w> </span>description<span class=w> </span>file&gt;<span class=w> </span>-t<span class=w> </span>&lt;which<span class=w> </span>CDDL<span class=w> </span><span class=nb>type</span><span class=w> </span>to<span class=w> </span>expect&gt;<span class=w> </span>-i<span class=w> </span>&lt;input<span class=w> </span>data<span class=w> </span>file&gt;<span class=w> </span>-o<span class=w> </span>&lt;output<span class=w> </span>data<span class=w> </span>file&gt;</pre><p>Or directly from within the repo.</p><pre lang=sh>python3<span class=w> </span>&lt;zcbor<span class=w> </span>base&gt;/zcbor/zcbor.py<span class=w> </span>validate<span class=w> </span>-c<span class=w> </span>&lt;CDDL<span class=w> </span>description<span class=w> </span>file&gt;<span class=w> </span>-t<span class=w> </span>&lt;which<span class=w> </span>CDDL<span class=w> </span><span class=nb>type</span><span class=w> </span>to<span class=w> </span>expect&gt;<span class=w> </span>-i<span class=w> </span>&lt;input<span class=w> </span>data<span class=w> </span>file&gt;python3<span class=w> </span>&lt;zcbor<span class=w> </span>base&gt;/zcbor/zcbor.py<span class=w> </span>convert<span class=w> </span>-c<span class=w> </span>&lt;CDDL<span class=w> </span>description<span class=w> </span>file&gt;<span class=w> </span>-t<span class=w> </span>&lt;which<span class=w> </span>CDDL<span class=w> </span><span class=nb>type</span><span class=w> </span>to<span class=w> </span>expect&gt;<span class=w> </span>-i<span class=w> </span>&lt;input<span class=w> </span>data<span class=w> </span>file&gt;<span class=w> </span>-o<span class=w> </span>&lt;output<span class=w> </span>data<span class=w> </span>file&gt;</pre><h2>Importing zcbor in a Python script</h2><p>Importing zcbor gives access to the DataTranslator class which is used to implement the command line conversion features.DataTranslator can be used to programmatically perform the translations, or to manipulate the data.When accessing the data, you can choose between two internal formats:</p><ol><li>The format provided by the <a href=\"https://pypi.org/project/cbor2/\" rel=nofollow>cbor2</a>, <a href=\"https://pypi.org/project/PyYAML/\" rel=nofollow>yaml (PyYAML)</a>, and <a href=\"https://docs.python.org/3/library/json.html\" rel=nofollow>json</a> packages.This is a format where the serialization types (map, list, string, number etc.) are mapped directly to the corresponding Python types.This format is common between these packages, which makes translation very simple.When returning this format, DataTranslator hides the idiomatic representations for bytestrings, tags, and non-text keys described above.</li><li>A custom format which allows accessing the data via the names from the CDDL description file.This format is implemented using named tuples, and is immutable, meaning that it can be used for inspecting data, but not for changing or creating data.</li></ol><h2>Making CBOR YAML-/JSON-compatible</h2><p>Since CBOR supports more data types than YAML and JSON, zcbor can optionally use a bespoke format when converting to/from YAML/JSON.This is controlled with the <code>--yaml-compatibility</code> option to <code>convert</code> and <code>validate</code>.This is relevant when handling YAML/JSON conversions of data that uses the unsupported features.The following data types are supported by CBOR, but not by YAML (or JSON which is a subset of YAML):</p><ol><li>bytestrings: YAML supports only text strings. In YAML, bytestrings are represented as <code>{\"zcbor_bstr\": \"&lt;hex-formatted bytestring&gt;\"}</code>, or as <code>{\"zcbor_bstr\": &lt;any type&gt;}</code> if the CBOR bytestring contains CBOR-formatted data, in which the data is decoded into <code>&lt;any type&gt;</code>.</li><li>map keys other than text string: In YAML, such key value pairs are represented as <code>{\"zcbor_keyval&lt;unique int&gt;\": {\"key\": &lt;key, not text&gt;, \"val\": &lt;value&gt;}}</code>.</li><li>tags: In cbor2, tags are represented by a special type, <code>cbor2.CBORTag</code>. In YAML, these are represented as <code>{\"zcbor_tag\": &lt;tag number&gt;, \"zcbor_tag_val\": &lt;tagged data&gt;}</code>.</li><li>undefined: In cbor2, undefined has its own value <code>cbor2.types.undefined</code>. In YAML, undefined is represented as: <code>[\"zcbor_undefined\"]</code>.</li></ol><p>You can see an example of the conversions in <a href=\"tests/cases/yaml_compatibility.yaml\" rel=nofollow>tests/cases/yaml_compatibility.yaml</a> and its CDDL file <a href=\"tests/cases/yaml_compatibility.cddl\" rel=nofollow>tests/cases/yaml_compatibility.cddl</a>.</p><h1>Code generation</h1><p>Code generation is invoked with the <code>zcbor code</code> command:</p><pre lang=sh>zcbor<span class=w> </span>code<span class=w> </span>&lt;--decode<span class=w> </span>or<span class=w> </span>--encode<span class=w> </span>or<span class=w> </span>both&gt;<span class=w> </span>-c<span class=w> </span>&lt;CDDL<span class=w> </span>description<span class=w> </span>file<span class=o>(</span>s<span class=o>)</span>&gt;<span class=w> </span>-t<span class=w> </span>&lt;which<span class=w> </span>CDDL<span class=w> </span>type<span class=o>(</span>s<span class=o>)</span><span class=w> </span>to<span class=w> </span>expose<span class=w> </span><span class=k>in</span><span class=w> </span>the<span class=w> </span>API&gt;<span class=w> </span>--output-cmake<span class=w> </span>&lt;path<span class=w> </span>to<span class=w> </span>place<span class=w> </span>the<span class=w> </span>generated<span class=w> </span>CMake<span class=w> </span>file<span class=w> </span>at&gt;zcbor<span class=w> </span>code<span class=w> </span>&lt;--decode<span class=w> </span>or<span class=w> </span>--encode<span class=w> </span>or<span class=w> </span>both&gt;<span class=w> </span>-c<span class=w> </span>&lt;CDDL<span class=w> </span>description<span class=w> </span>file<span class=o>(</span>s<span class=o>)</span>&gt;<span class=w> </span>-t<span class=w> </span>&lt;which<span class=w> </span>CDDL<span class=w> </span>type<span class=o>(</span>s<span class=o>)</span><span class=w> </span>to<span class=w> </span>expose<span class=w> </span><span class=k>in</span><span class=w> </span>the<span class=w> </span>API&gt;<span class=w> </span>--oc<span class=w> </span>&lt;path<span class=w> </span>to<span class=w> </span>the<span class=w> </span>generated<span class=w> </span>C<span class=w> </span>file&gt;<span class=w> </span>--oh<span class=w> </span>&lt;path<span class=w> </span>to<span class=w> </span>the<span class=w> </span>generated<span class=w> </span>header<span class=w> </span>file&gt;<span class=w> </span>--oht<span class=w> </span>&lt;path<span class=w> </span>to<span class=w> </span>the<span class=w> </span>generated<span class=w> </span>types<span class=w> </span>header&gt;</pre><p>When you call this, zcbor reads the CDDL files and creates C struct types to match the types described in the CDDL.It then creates code that uses the C library to decode CBOR data into the structs, and/or encode CBOR from the data in the structs.Finally, it takes the \"entry types\" (<code>-t</code>) and creates a public API function for each of them.While doing these things, it will make a number of optimizations, e.g. inlining code for small types and removing unused functions.It outputs the generated code into header and source files and optionally creates a CMake file to build them.</p><p>The <code>zcbor code</code> command reads one or more CDDL file(s) and generates some or all of these files:</p><ul><li>A header file with types (always)</li><li>A header file with declarations for decoding functions (if <code>--decode</code>/<code>-d</code> is specified)</li><li>A C file with decoding functions (if <code>--decode</code>/<code>-d</code> is specified)</li><li>A header file with declarations for encoding functions (if <code>--encode</code>/<code>-e</code> is specified)</li><li>A C file with encoding functions (if <code>--encode</code>/<code>-e</code> is specified)</li><li>A CMake file that creates a library with the generated code and the C library (if <code>--output-cmake</code> is specified).</li></ul><p>CDDL allows placing restrictions on the members of your data.Restrictions can be on type (int/string/list/bool etc.), on content (e.g. values/sizes of ints or strings), and repetition (e.g. the number of members in a list).The generated code will validate the input, which means that it will check all the restriction set in the CDDL description, and fail if a restriction is broken.</p><p>There are tests for the code generation in <a href=\"tests/decode\" rel=nofollow>tests/decode</a> and <a href=\"tests/encode\" rel=nofollow>tests/encode</a>.The tests require <a href=\"https://github.com/zephyrproject-rtos/zephyr\" rel=nofollow>Zephyr</a> (if your system is set up to build Zephyr samples, the tests should also build).</p><p>The generated C code is C++ compatible.</p><h2>Build system</h2><p>When calling zcbor with the argument <code>--output-cmake &lt;file path&gt;</code>, a CMake file will be created at that location.The generated CMake file creates a target library and adds the generated and non-generated source files as well as required include directories to it.This CMake file can then be included in your project's <code>CMakeLists.txt</code> file, and the target can be linked into your project.This is demonstrated in the tests, e.g. at <a href=\"tests/decode/test3_simple/CMakeLists.txt\" rel=nofollow>tests/decode/test3_simple/CMakeLists.txt</a>.zcbor can be instructed to copy the non-generated sources to the same location as the generated sources with <code>--copy-sources</code>.</p><h1>Usage Example</h1><p>There are buildable examples in the <a href=samples rel=nofollow>samples</a> directory.</p><p>To see how to use the C library directly, see the <a href=\"samples/hello_world/src/main.c\" rel=nofollow>hello_world</a> sample, or the <a href=\"samples/pet/src/main.c\" rel=nofollow>pet</a> sample (look for calls to functions prefixed with <code>zcbor_</code>).</p><p>To see how to use code generation, see the <a href=\"samples/pet/src/main.c\" rel=nofollow>pet</a> sample.</p><p>Look at the <a href=\"samples/pet/CMakeLists.txt\" rel=nofollow>CMakeLists.txt</a> file to see how zcbor is invoked for code generation (and for conversion).</p><p>To see how to do conversion, see the <a href=\"samples/pet/CMakeLists.txt\" rel=nofollow>pet</a> sample.</p><p>Below are some additional examples of how to invoke zcbor for code generation and for converting/validating</p><h2>Code generation</h2><pre lang=sh>python3<span class=w> </span>&lt;zcbor<span class=w> </span>base&gt;/zcbor/zcbor.py<span class=w> </span>code<span class=w> </span>-c<span class=w> </span>pet.cddl<span class=w> </span>-d<span class=w> </span>-t<span class=w> </span>Pet<span class=w> </span>--oc<span class=w> </span>pet_decode.c<span class=w> </span>--oh<span class=w> </span>pet_decode.h<span class=c1># or</span>zcbor<span class=w> </span>code<span class=w> </span>-c<span class=w> </span>pet.cddl<span class=w> </span>-d<span class=w> </span>-t<span class=w> </span>Pet<span class=w> </span>--oc<span class=w> </span>pet_decode.c<span class=w> </span>--oh<span class=w> </span>pet_decode.h</pre><h2>Converting</h2><p>Here is an example call for converting from YAML to CBOR:</p><pre lang=sh>python3<span class=w> </span>&lt;zcbor<span class=w> </span>base&gt;/zcbor/zcbor.py<span class=w> </span>convert<span class=w> </span>-c<span class=w> </span>pet.cddl<span class=w> </span>-t<span class=w> </span>Pet<span class=w> </span>-i<span class=w> </span>mypet.yaml<span class=w> </span>-o<span class=w> </span>mypet.cbor<span class=c1># or</span>zcbor<span class=w> </span>convert<span class=w> </span>-c<span class=w> </span>pet.cddl<span class=w> </span>-t<span class=w> </span>Pet<span class=w> </span>-i<span class=w> </span>mypet.yaml<span class=w> </span>-o<span class=w> </span>mypet.cbor</pre><p>Which takes a yaml structure from mypet.yaml, validates it against the Pet type in the CDDL description in pet.cddl, and writes binary CBOR data to mypet.cbor.</p><h2>Validating</h2><p>Here is an example call for validating a JSON file:</p><pre lang=sh>python3<span class=w> </span>&lt;zcbor<span class=w> </span>base&gt;/zcbor/zcbor.py<span class=w> </span>validate<span class=w> </span>-c<span class=w> </span>pet.cddl<span class=w> </span>-t<span class=w> </span>Pet<span class=w> </span>--yaml-compatibility<span class=w> </span>-i<span class=w> </span>mypet.json<span class=c1># or</span>zcbor<span class=w> </span>validate<span class=w> </span>-c<span class=w> </span>pet.cddl<span class=w> </span>-t<span class=w> </span>Pet<span class=w> </span>--yaml-compatibility<span class=w> </span>-i<span class=w> </span>mypet.json</pre><p>Which takes the json structure in mypet.json, converts any <a href=#making-cbor-yaml-json-compatible rel=nofollow>yaml-compatible</a> values to their original form, and validates that against the Pet type in the CDDL description in pet.cddl.</p><h1>Running tests</h1><p>The tests for the generated code are based on the Zephyr ztest library.These tests can be found in <a href=\"tests/decode\" rel=nofollow>tests/decode</a> and <a href=\"tests/encode\" rel=nofollow>tests/encode</a>.To set up the environment to run the ztest tests, follow <a href=\"https://docs.zephyrproject.org/latest/getting_started/index.html\" rel=nofollow>Zephyr's Getting Started Guide</a>, or see the workflow in the <a href=.github rel=nofollow><code>.github</code></a> directory.</p><p>Tests for <code>convert</code> and <code>verify</code> are implemented with the unittest module.These tests can be found in <a href=\"tests/scripts/test_zcbor.py\" rel=nofollow>tests/scripts/test_zcbor.py</a>.In this file there are also tests for code style of all python scripts, using the <code>pycodestyle</code> library.</p><p>Tests for the docs, samples, etc. can be found in <a href=\"tests/scripts/test_repo_files.py\" rel=nofollow>tests/scripts/test_repo_files.py</a>.</p><p>For running the tests locally, there is <a href=\"tests/test.sh\" rel=nofollow><code>tests/test.sh</code></a> which runs all above tests.</p><h1>Introduction to CDDL</h1><p>In CDDL you define types from other types.Types can be defined from base types, or from other types you define.Types are declared with '<code>=</code>', e.g. <code>Foo = int</code> which declares the type <code>Foo</code> to be an integer, analogous to <code>typedef int Foo;</code> in C.CDDL defines the following base types (this is not an exhaustive list):</p><ul><li><code>int</code>: Positive or negative integer</li><li><code>uint</code>: Positive integer</li><li><code>bstr</code>: Byte string</li><li><code>tstr</code>: Text string</li><li><code>bool</code>: Boolean</li><li><code>nil</code>: Nil/Null value</li><li><code>float</code>: Floating point value</li><li><code>any</code>: Any single element</li></ul><p>CDDL allows creating aggregate types:</p><ul><li><code>[]</code>: List. Elements don't need to have the same type.</li><li><code>{}</code>: Map. Key/value pairs as are declared as <code>&lt;key&gt; =&gt; &lt;value&gt;</code> or <code>&lt;key&gt;: &lt;value&gt;</code>. Note that <code>:</code> is also used for labels.</li><li><code>()</code>: Groups. Grouping with no enclosing type, which means that e.g. <code>Foo = [(int, bstr)]</code> is equivalent to <code>Foo = [int, bstr]</code>.</li><li><code>/</code>: Unions. Analogous to unions in C. E.g. <code>Foo = int/bstr/Bar</code> where Foo is either an int, a bstr, or Bar (some custom type).</li></ul><p>Literals can be used instead of the base type names:</p><ul><li>Number: <code>Foo = 3</code>, where Foo is a uint with the additional requirement that it must have the value 3.</li><li>Number range: <code>Foo = -100..100</code>, where Foo is an int with value between -100 and 100.</li><li>Text string: <code>Foo = \"hello\"</code>, where Foo is a tstr with the requirement that it must be \"hello\".</li><li>True/False: <code>Foo = false</code>, where Foo is a bool which is always false.</li></ul><p>Base types can also be restricted in other ways:</p><ul><li><code>.size</code>: Works for integers and strings. E.g. <code>Foo = uint .size 4</code> where Foo is a uint exactly 4 bytes long.</li><li><code>.cbor</code>/<code>.cborseq</code>: E.g. <code>Foo = bstr .cbor Bar</code> where Foo is a bstr whose contents must be CBOR data decodable as the Bar type.</li></ul><p>An element can be repeated:</p><ul><li><code>?</code>: 0 or 1 time. E.g. <code>Foo = [int, ?bstr]</code>, where Foo is a list with an int possibly followed by a bstr.</li><li><code>*</code>: 0 or more times. E.g. <code>Foo = [*tstr]</code>, where Foo is a list containing 0 or more tstrs.</li><li><code>+</code>: 1 or more times. E.g. <code>Foo = [+Bar]</code>.</li><li><code>x*y</code>: Between x and y times, inclusive. E.g. <code>Foo = {4*8(int =&gt; bstr)}</code> where Foo is a map with 4 to 8 key/value pairs where each key is an int and each value is a bstr.</li></ul><p>Note that in the zcbor script and its generated code, the number of entries supported via <code>*</code> and <code>+</code> is affected by the default_max_qty value.</p><p>Any element can be labeled with <code>:</code>.The label is only for readability and does not impact the data structure in any way.E.g. <code>Foo = [name: tstr, age: uint]</code> is equivalent to <code>Foo = [tstr, uint]</code>.</p><p>See <a href=\"tests/cases/pet.cddl\" rel=nofollow>pet.cddl</a> for CDDL example code.</p><h1>Introduction to CBOR</h1><p>CBOR's format is described well on <a href=\"https://en.wikipedia.org/wiki/CBOR\" rel=nofollow>Wikipedia</a>, but here's a synopsis:</p><p>Encoded CBOR data elements look like this.</p><pre><code>| Header                       | Value                  | Payload                   || 1 byte                       | 0, 1, 2, 4, or 8 bytes | 0 - 2^64-1 bytes/elements || 3 bits     | 5 bits          || Major Type | Additional Info |</code></pre><p>The available major types can be seen in <code>zcbor_major_type_t</code>.</p><p>For all major types, Values 0-23 are encoded directly in the <em>Additional info</em>, meaning that the <em>Value</em> field is 0 bytes long.If <em>Additional info</em> is 24, 25, 26, or 27, the <em>Value</em> field is 1, 2, 4, or 8 bytes long, respectively.</p><p>Major types <code>pint</code> (0), <code>nint</code> (1), <code>tag</code> (6), and <code>simple</code> (7) elements have no payload, only <em>Value</em>.</p><ul><li><code>pint</code>: Interpret the <em>Value</em> as a positive integer.</li><li><code>nint</code>: Interpret the <em>Value</em> as a positive integer, then multiply by -1 and subtract 1.</li><li><code>tag</code>: The <em>Value</em> says something about the next non-tag element.See the <a href=\"https://www.iana.org/assignments/cbor-tags/cbor-tags.xhtml\" rel=nofollow>CBOR tag documentation</a> for details.</li><li><code>simple</code>: Different <em>Additional info</em> mean different things:<ul><li>0-19: Unassigned simple values.</li><li>20: <code>false</code> simple value</li><li>21: <code>true</code> simple value</li><li>22: <code>null</code> simple value</li><li>23: <code>undefined</code> simple value</li><li>24: Interpret the <em>Value</em> as a 1 byte simple value. These simple values are currently unassigned.</li><li>25: Interpret the <em>Value</em> as an IEEE 754 float16.</li><li>26: Interpret the <em>Value</em> as an IEEE 754 float32.</li><li>27: Interpret the <em>Value</em> as an IEEE 754 float64.</li><li>31: End of an indefinite-length <code>list</code> or <code>map</code>.</li></ul></li></ul><p>For <code>bstr</code> (2), <code>tstr</code> (3), <code>list</code> (4), and <code>map</code> (5), the <em>Value</em> describes the length of the <em>Payload</em>.For <code>bstr</code> and <code>tstr</code>, the length is in bytes, for <code>list</code>, the length is in number of elements, and for <code>map</code>, the length is in number of key/value element pairs.</p><p>For <code>list</code> and <code>map</code>, sub elements are regular CBOR elements with their own <em>Header</em>, <em>Value</em> and <em>Payload</em>. <code>list</code>s and <code>map</code>s can be recursively encoded.If a <code>list</code> or <code>map</code> has <em>Additional info</em> 31, it is \"indefinite-length\", which means it has an \"unknown\" number of elements.Instead, its end is marked by a <code>simple</code> with <em>Additional info</em> 31 (byte value 0xFF).</p><h1>History</h1><p>zcbor (then \"cddl-gen\") was initially conceived as a code generation project.It was inspired by the need to securely decode the complex manifest data structures in the <a href=\"https://datatracker.ietf.org/doc/draft-ietf-suit-manifest/\" rel=nofollow>IETF SUIT specification</a>.This is reflected in the fact that there are multiple zcbor tests that use the CDDL and examples from various revisions of that specification.Decoding/deserializing data securely requires doing some quite repetitive checks on each data element, to be sure that you are not decoding gibberish.This is where code generation could pull a lot of weight.Later it was discovered that the CBOR library that was designed to used by generated code could be useful by itself.The script was also expanded so it could directly manipulate CBOR data.Since CBOR, YAML, and JSON are all represented in roughly the same way internally in Python, it was easy to expand that data manipulation to support YAML and JSON.</p><p>Some places where zcbor is currently used:</p><ul><li><a href=\"https://github.com/mcu-tools/mcuboot/blob/main/boot/boot_serial/src/boot_serial.c\" rel=nofollow>MCUboot's serial recovery mechanism</a></li><li><a href=\"https://github.com/zephyrproject-rtos/zephyr/blob/main/subsys/mgmt/mcumgr/grp/img_mgmt/src/img_mgmt.c\" rel=nofollow>Zephyr's mcumgr</a></li><li><a href=\"https://github.com/zephyrproject-rtos/zephyr/blob/main/subsys/net/lib/lwm2m/lwm2m_rw_senml_cbor.c\" rel=nofollow>Zephyr's LwM2M SenML</a></li><li><a href=\"https://github.com/nrfconnect/sdk-nrf/blob/main/subsys/mgmt/fmfu/src/fmfu_mgmt.c\" rel=nofollow>nRF Connect SDK's full modem update mechanism</a></li><li><a href=\"https://github.com/nrfconnect/sdk-nrfxlib/blob/main/nrf_rpc/nrf_rpc_cbor.c\" rel=nofollow>nRF Connect SDK's nrf_rpc</a></li></ul><h1>Command line documentation</h1><p>Added via <code>add_helptext.py</code></p><h2>zcbor --help</h2><pre><code>usage: zcbor [-h] [--version] {code,validate,convert} ...Parse a CDDL file and validate/convert between YAML, JSON, and CBOR. Can alsogenerate C code for validation/encoding/decoding of CBOR.positional arguments:  {code,validate,convert}options:  -h, --help            show this help message and exit  --version             show program's version number and exit</code></pre><h2>zcbor code --help</h2><pre><code>usage: zcbor code [-h] -c CDDL [--no-prelude] [-v]                  [--default-max-qty DEFAULT_MAX_QTY] [--output-c OUTPUT_C]                  [--output-h OUTPUT_H] [--output-h-types OUTPUT_H_TYPES]                  [--copy-sources] [--output-cmake OUTPUT_CMAKE] -t                  ENTRY_TYPES [ENTRY_TYPES ...] [-d] [-e] [--time-header]                  [--git-sha-header] [-b {32,64}]                  [--include-prefix INCLUDE_PREFIX] [-s]                  [--file-header FILE_HEADER]Parse a CDDL file and produce C code that validates and xcodes CBOR.The output from this script is a C file and a header file. The header filecontains typedefs for all the types specified in the cddl input file, as wellas declarations to xcode functions for the types designated as entry types whenrunning the script. The c file contains all the code for decoding and validatingthe types in the CDDL input file. All types are validated as they are xcoded.Where a `bstr .cbor &lt;Type&gt;` is specified in the CDDL, AND the Type is an entrytype, the xcoder will not xcode the string, only provide a pointer into thepayload buffer. This is useful to reduce the size of typedefs, or to break updecoding. Using this mechanism is necessary when the CDDL contains self-referencing types, since the C type cannot be self referencing.This script requires 'regex' for lookaround functionality not present in 're'.options:  -h, --help            show this help message and exit  -c CDDL, --cddl CDDL  Path to one or more input CDDL file(s). Passing                        multiple files is equivalent to concatenating them.  --no-prelude          Exclude the standard CDDL prelude from the build. The                        prelude can be viewed at zcbor/prelude.cddl in the                        repo, or together with the script.  -v, --verbose         Print more information while parsing CDDL and                        generating code.  --default-max-qty DEFAULT_MAX_QTY, --dq DEFAULT_MAX_QTY                        Default maximum number of repetitions when no maximum                        is specified. This is needed to construct complete C                        types. The default_max_qty can usually be set to a                        text symbol if desired, to allow it to be configurable                        when building the code. This is not always possible,                        as sometimes the value is needed for internal                        computations. If so, the script will raise an                        exception.  --output-c OUTPUT_C, --oc OUTPUT_C                        Path to output C file. If both --decode and --encode                        are specified, _decode and _encode will be appended to                        the filename when creating the two files. If not                        specified, the path and name will be based on the                        --output-cmake file. A 'src' directory will be created                        next to the cmake file, and the C file will be placed                        there with the same name (except the file extension)                        as the cmake file.  --output-h OUTPUT_H, --oh OUTPUT_H                        Path to output header file. If both --decode and                        --encode are specified, _decode and _encode will be                        appended to the filename when creating the two files.                        If not specified, the path and name will be based on                        the --output-cmake file. An 'include' directory will                        be created next to the cmake file, and the C file will                        be placed there with the same name (except the file                        extension) as the cmake file.  --output-h-types OUTPUT_H_TYPES, --oht OUTPUT_H_TYPES                        Path to output header file with typedefs (shared                        between decode and encode). If not specified, the path                        and name will be taken from the output header file                        (--output-h), with '_types' added to the file name.  --copy-sources        Copy the non-generated source files (zcbor_*.c/h) into                        the same directories as the generated files.  --output-cmake OUTPUT_CMAKE                        Path to output CMake file. The filename of the CMake                        file without '.cmake' is used as the name of the CMake                        target in the file. The CMake file defines a CMake                        target with the zcbor source files and the generated                        file as sources, and the zcbor header files' and                        generated header files' folders as                        include_directories. Add it to your project via                        include() in your CMakeLists.txt file, and link the                        target to your program. This option works with or                        without the --copy-sources option.  -t ENTRY_TYPES [ENTRY_TYPES ...], --entry-types ENTRY_TYPES [ENTRY_TYPES ...]                        Names of the types which should have their xcode                        functions exposed.  -d, --decode          Generate decoding code. Either --decode or --encode or                        both must be specified.  -e, --encode          Generate encoding code. Either --decode or --encode or                        both must be specified.  --time-header         Put the current time in a comment in the generated                        files.  --git-sha-header      Put the current git sha of zcbor in a comment in the                        generated files.  -b {32,64}, --default-bit-size {32,64}                        Default bit size of integers in code. When integers                        have no explicit bounds, assume they have this bit                        width. Should follow the bit width of the architecture                        the code will be running on.  --include-prefix INCLUDE_PREFIX                        When #include'ing generated files, add this path                        prefix to the filename.  -s, --short-names     Attempt to make most generated struct member names                        shorter. This might make some names identical which                        will cause a compile error. If so, tweak the CDDL                        labels or layout, or disable this option. This might                        also make enum names different from the corresponding                        union members.  --file-header FILE_HEADER                        Header to be included in the comment at the top of                        generated C files, e.g. copyright.</code></pre><h2>zcbor validate --help</h2><pre><code>usage: zcbor validate [-h] -c CDDL [--no-prelude] [-v] -i INPUT                      [--input-as {yaml,json,cbor,cborhex}] -t ENTRY_TYPE                      [--default-max-qty DEFAULT_MAX_QTY]                      [--yaml-compatibility]Read CBOR, YAML, or JSON data from file or stdin and validate it against aCDDL schema file.options:  -h, --help            show this help message and exit  -c CDDL, --cddl CDDL  Path to one or more input CDDL file(s). Passing                        multiple files is equivalent to concatenating them.  --no-prelude          Exclude the standard CDDL prelude from the build. The                        prelude can be viewed at zcbor/prelude.cddl in the                        repo, or together with the script.  -v, --verbose         Print more information while parsing CDDL and                        generating code.  -i INPUT, --input INPUT                        Input data file. The option --input-as specifies how                        to interpret the contents. Use \"-\" to indicate stdin.  --input-as {yaml,json,cbor,cborhex}                        Which format to interpret the input file as. If                        omitted, the format is inferred from the file name.                        .yaml, .yml =&gt; YAML, .json =&gt; JSON, .cborhex =&gt; CBOR                        as hex string, everything else =&gt; CBOR  -t ENTRY_TYPE, --entry-type ENTRY_TYPE                        Name of the type (from the CDDL) to interpret the data                        as.  --default-max-qty DEFAULT_MAX_QTY, --dq DEFAULT_MAX_QTY                        Default maximum number of repetitions when no maximum                        is specified. It is only relevant when handling data                        that will be decoded by generated code. If omitted, a                        large number will be used.  --yaml-compatibility  Whether to convert CBOR-only values to YAML-compatible                        ones (when converting from CBOR), or vice versa (when                        converting to CBOR). When this is enabled, all CBOR                        data is guaranteed to convert into YAML/JSON. JSON and                        YAML do not support all data types that CBOR/CDDL                        supports. bytestrings (BSTR), tags, undefined, and                        maps with non-text keys need special handling. See the                        zcbor README for more information.</code></pre><h2>zcbor convert --help</h2><pre><code>usage: zcbor convert [-h] -c CDDL [--no-prelude] [-v] -i INPUT                     [--input-as {yaml,json,cbor,cborhex}] -t ENTRY_TYPE                     [--default-max-qty DEFAULT_MAX_QTY]                     [--yaml-compatibility] -o OUTPUT                     [--output-as {yaml,json,cbor,cborhex,c_code}]                     [--c-code-var-name C_CODE_VAR_NAME]                     [--c-code-columns C_CODE_COLUMNS]Parse a CDDL file and validate/convert between CBOR and YAML/JSON. The scriptdecodes the CBOR/YAML/JSON data from a file or stdin and verifies that itconforms to the CDDL description. The script fails if the data does notconform. 'zcbor validate' can be used if only validate is needed.options:  -h, --help            show this help message and exit  -c CDDL, --cddl CDDL  Path to one or more input CDDL file(s). Passing                        multiple files is equivalent to concatenating them.  --no-prelude          Exclude the standard CDDL prelude from the build. The                        prelude can be viewed at zcbor/prelude.cddl in the                        repo, or together with the script.  -v, --verbose         Print more information while parsing CDDL and                        generating code.  -i INPUT, --input INPUT                        Input data file. The option --input-as specifies how                        to interpret the contents. Use \"-\" to indicate stdin.  --input-as {yaml,json,cbor,cborhex}                        Which format to interpret the input file as. If                        omitted, the format is inferred from the file name.                        .yaml, .yml =&gt; YAML, .json =&gt; JSON, .cborhex =&gt; CBOR                        as hex string, everything else =&gt; CBOR  -t ENTRY_TYPE, --entry-type ENTRY_TYPE                        Name of the type (from the CDDL) to interpret the data                        as.  --default-max-qty DEFAULT_MAX_QTY, --dq DEFAULT_MAX_QTY                        Default maximum number of repetitions when no maximum                        is specified. It is only relevant when handling data                        that will be decoded by generated code. If omitted, a                        large number will be used.  --yaml-compatibility  Whether to convert CBOR-only values to YAML-compatible                        ones (when converting from CBOR), or vice versa (when                        converting to CBOR). When this is enabled, all CBOR                        data is guaranteed to convert into YAML/JSON. JSON and                        YAML do not support all data types that CBOR/CDDL                        supports. bytestrings (BSTR), tags, undefined, and                        maps with non-text keys need special handling. See the                        zcbor README for more information.  -o OUTPUT, --output OUTPUT                        Output data file. The option --output-as specifies how                        to interpret the contents. Use \"-\" to indicate stdout.  --output-as {yaml,json,cbor,cborhex,c_code}                        Which format to interpret the output file as. If                        omitted, the format is inferred from the file name.                        .yaml, .yml =&gt; YAML, .json =&gt; JSON, .c, .h =&gt; C code,                        .cborhex =&gt; CBOR as hex string, everything else =&gt;                        CBOR  --c-code-var-name C_CODE_VAR_NAME                        Only relevant together with '--output-as c_code' or .c                        files.  --c-code-columns C_CODE_COLUMNS                        Only relevant together with '--output-as c_code' or .c                        files. The number of bytes per line in the variable                        instantiation. If omitted, the entire declaration is a                        single line.</code></pre>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/NordicSemiconductor/zcbor\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/zcbor\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> Apache Software License (Apache)</p>    <p><strong>Author:</strong> Nordic Semiconductor ASA</p>    <p><strong>Maintainer:</strong> <a href=\"mailto:oyvind.ronningstad@nordicsemi.no\">\u00d8yvind R\u00f8nningstad</a></p>  <p>    <strong>Requires:</strong> Python &gt;=3.8  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/pypi.nordic/\" aria-label=\"pypi.nordic\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/79719c2371c83f9a9ac6abf9b57ac0bf24837590/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f61353638376539646165613266656661613539646263363034653163616166393f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for pypi.nordic from gravatar.com\" title=\"Avatar for pypi.nordic from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            pypi.nordic          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+4+-+Beta\">            4 - Beta          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+Apache+Software+License\">            OSI Approved :: Apache Software License          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+C\">            C          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+File+Formats+%3A%3A+JSON+%3A%3A+JSON+Schema\">            File Formats :: JSON :: JSON Schema          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Build+Tools\">            Software Development :: Build Tools          </a>        </li>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Software+Development+%3A%3A+Code+Generators\">            Software Development :: Code Generators          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/zcbor/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/zcbor/0.8.1/\">                <p class=\"release__version\">                  0.8.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-01-26T17:25:33+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 26, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/zcbor/0.8.0/\">                <p class=\"release__version\">                  0.8.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2024-01-09T14:40:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 9, 2024</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/zcbor/0.7.0/\">                <p class=\"release__version\">                  0.7.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-04-01T14:38:50+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 1, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/zcbor/0.6.0/\">                <p class=\"release__version\">                  0.6.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-10-12T13:30:23+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 12, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/zcbor/0.5.1/\">                <p class=\"release__version\">                  0.5.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-06-21T11:47:21+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 21, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/zcbor/0.5.0/\">                <p class=\"release__version\">                  0.5.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-06-13T09:29:40+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 13, 2022</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/zcbor/0.4.0/\">                <p class=\"release__version\">                  0.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-03-31T08:19:27+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 31, 2022</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/9a/fa/0a082e28646618669fc09626d8ad88a82f3b7de999e02496cb4dad9fc4eb/zcbor-0.8.1.tar.gz\">          zcbor-0.8.1.tar.gz        </a>        (95.5 kB        <a href=\"#copy-hash-modal-96b32406-cd5c-468c-a183-9db9a7123be7\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-01-26T17:25:35+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 26, 2024</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/6d/0f/9beb56b89cc5a5f0b4c8ed54b9fdd060319d8a91bd573b4c395d92d50751/zcbor-0.8.1-py3-none-any.whl\">          zcbor-0.8.1-py3-none-any.whl        </a>        (81.1 kB        <a href=\"#copy-hash-modal-8ea46517-689c-4f25-ab26-67124a7552fd\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2024-01-26T17:25:33+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 26, 2024</time>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-96b32406-cd5c-468c-a183-9db9a7123be7\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for zcbor-0.8.1.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for zcbor-0.8.1.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">53763faf7b418732ba6c69ccc5da8acd2edb2c7c80ce0a466793d52bda70ecf9</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">9c5457f3b079fe8cc7f565338aade253</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">9afa0a082e28646618669fc09626d8ad88a82f3b7de999e02496cb4dad9fc4eb</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-8ea46517-689c-4f25-ab26-67124a7552fd\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for zcbor-0.8.1-py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for zcbor-0.8.1-py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">3aca62602be395ed1a1f0772ec239ad28a3ab09fa9c709a725cc89865ad243af</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">043fe6641827cab8fc9abdcefb1d0695</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">6d0f9beb56b89cc5a5f0b4c8ed54b9fdd060319d8a91bd573b4c395d92d50751</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
{
  "libtype": "pypi",
  "libname": "portion",
  "url": "https://pypi.org/project/portion/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>portion \u00b7 PyPI</title>    <meta name=\"description\" content=\"Python data structure and operations for intervals\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for portion\" href=\"/rss/project/portion/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/portion/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/portion/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"portion\">    <meta property=\"og:description\" content=\"Python data structure and operations for intervals\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/AlexandreDecan/portion\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:AlexandreDecan/portion+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        portion 2.4.2      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install portion</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/portion/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2023-12-06T08:33:07+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 6, 2023</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/portion\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Python data structure and operations for intervals</p><div data-html-include=\"/_includes/edit-project-button/portion\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for portion\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/AlexandreDecan/portion\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/portion\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> GNU Lesser General Public License v3 (LGPLv3) (LGPLv3)</p>    <p><strong>Author:</strong> Alexandre Decan</p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      interval,    </span>    <span class=\"package-keyword\">      operation,    </span>    <span class=\"package-keyword\">      range,    </span>    <span class=\"package-keyword\">      math    </span>  </p>  <p>    <strong>Requires:</strong> Python ~= 3.7  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/AlexandreDecan/\" aria-label=\"AlexandreDecan\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/c0e874dbaad3d3919730184b133af321ff90a2c0/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f34313137376538353237383534306162366330663037626132306338373935303f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for AlexandreDecan from gravatar.com\" title=\"Avatar for AlexandreDecan from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            AlexandreDecan          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Education\">            Education          </a>        </li>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Information+Technology\">            Information Technology          </a>        </li>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Science%2FResearch\">            Science/Research          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+GNU+Lesser+General+Public+License+v3+%28LGPLv3%29\">            OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3+%3A%3A+Only\">            Python :: 3 :: Only          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Scientific%2FEngineering+%3A%3A+Mathematics\">            Scientific/Engineering :: Mathematics          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for portion\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <h1>portion - data structure and operations for intervals</h1><p><a href=\"https://github.com/AlexandreDecan/portion/actions/workflows/test.yaml\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/09901ca24de09ffeb8cde4f14c042e1f246c742a/68747470733a2f2f6769746875622e636f6d2f416c6578616e647265446563616e2f706f7274696f6e2f616374696f6e732f776f726b666c6f77732f746573742e79616d6c2f62616467652e7376673f6272616e63683d6d6173746572\" alt=Tests></a><a href=\"https://coveralls.io/github/AlexandreDecan/portion?branch=master\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/091b8f01c21165e33847b2b06280ac0677f303e7/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f416c6578616e647265446563616e2f706f7274696f6e2f62616467652e7376673f6272616e63683d6d6173746572\" alt=\"Coverage Status\"></a><a href=\"https://github.com/AlexandreDecan/portion/blob/master/LICENSE.txt\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/a839bcfb4459f30a6a2cf3d74ea2544073204088/68747470733a2f2f62616467656e2e6e65742f707970692f6c6963656e73652f706f7274696f6e\" alt=License></a><a href=\"https://pypi.org/project/portion\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/9562d88bdcfeead6ea93a3b9d964c14eb5ac0d0a/68747470733a2f2f62616467656e2e6e65742f707970692f762f706f7274696f6e\" alt=PyPI></a><a href=\"https://github.com/AlexandreDecan/portion/commits/\" rel=nofollow><img src=\"https://pypi-camo.freetls.fastly.net/019ea38cfb178b5dc7a0f0d4826f1053552f79c8/68747470733a2f2f62616467656e2e6e65742f6769746875622f6c6173742d636f6d6d69742f416c6578616e647265446563616e2f706f7274696f6e\" alt=Commits></a></p><p>The <code>portion</code> library provides data structure and operations for intervals in Python 3.7+.</p><ul><li>Support intervals of any (comparable) objects.</li><li>Closed or open, finite or (semi-)infinite intervals.</li><li>Interval sets (union of atomic intervals) are supported.</li><li>Automatic simplification of intervals.</li><li>Support comparison, transformation, intersection, union, complement, difference and containment.</li><li>Provide test for emptiness, atomicity, overlap and adjacency.</li><li>Discrete iterations on the values of an interval.</li><li>Dict-like structure to map intervals to data.</li><li>Import and export intervals to strings and to Python built-in data types.</li><li>Heavily tested with high code coverage.</li></ul><h2>Table of contents</h2><ul><li><a href=#installation rel=nofollow>Installation</a></li><li><a href=#documentation--usage rel=nofollow>Documentation &amp; usage</a><ul><li><a href=#interval-creation rel=nofollow>Interval creation</a></li><li><a href=#interval-bounds--attributes rel=nofollow>Interval bounds &amp; attributes</a></li><li><a href=#interval-operations rel=nofollow>Interval operations</a></li><li><a href=#comparison-operators rel=nofollow>Comparison operators</a></li><li><a href=#interval-transformation rel=nofollow>Interval transformation</a></li><li><a href=#discrete-iteration rel=nofollow>Discrete iteration</a></li><li><a href=#map-intervals-to-data rel=nofollow>Map intervals to data</a></li><li><a href=#import--export-intervals-to-strings rel=nofollow>Import &amp; export intervals to strings</a></li><li><a href=#import--export-intervals-to-python-built-in-data-types rel=nofollow>Import &amp; export intervals to Python built-in data types</a></li><li><a href=#specialize--customize-intervals rel=nofollow>Specialize &amp; customize intervals</a></li></ul></li><li><a href=#changelog rel=nofollow>Changelog</a></li><li><a href=#contributions rel=nofollow>Contributions</a></li><li><a href=#license rel=nofollow>License</a></li></ul><h2>Installation</h2><p>You can use <code>pip</code> to install it, as usual: <code>pip install portion</code>. This will install the latest available version from <a href=\"https://pypi.org/project/portion\" rel=nofollow>PyPI</a>.Pre-releases are available from the <em>master</em> branch on <a href=\"https://github.com/AlexandreDecan/portion\" rel=nofollow>GitHub</a>and can be installed with <code>pip install git+https://github.com/AlexandreDecan/portion</code>.Note that <code>portion</code> is also available on <a href=\"https://anaconda.org/conda-forge/portion\" rel=nofollow>conda-forge</a>.</p><p>You can install <code>portion</code> and its development environment using <code>pip install -e .[test]</code> at the root of this repository. This automatically installs <a href=\"https://docs.pytest.org/en/latest/\" rel=nofollow>pytest</a> (for the test suites) and <a href=\"https://black.readthedocs.io/en/stable/\" rel=nofollow>black</a> (for code formatting).</p><h2>Documentation &amp; usage</h2><h3>Interval creation</h3><p>Assuming this library is imported using <code>import portion as P</code>, intervals can be easilycreated using one of the following helpers:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=p>[</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>openclosed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closedopen</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=p>[</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>1</span><span class=p>)</span><span class=p>[</span><span class=mi>1</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>empty</span><span class=p>()</span><span class=p>()</span></pre><p>The bounds of an interval can be any arbitrary values, as long as they are comparable:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mf>1.2</span><span class=p>,</span> <span class=mf>2.4</span><span class=p>)</span><span class=p>[</span><span class=mf>1.2</span><span class=p>,</span><span class=mf>2.4</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=s1>'a'</span><span class=p>,</span> <span class=s1>'z'</span><span class=p>)</span><span class=p>[</span><span class=s1>'a'</span><span class=p>,</span><span class=s1>'z'</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=kn>import</span> <span class=nn>datetime</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=n>datetime</span><span class=o>.</span><span class=n>date</span><span class=p>(</span><span class=mi>2011</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>15</span><span class=p>),</span> <span class=n>datetime</span><span class=o>.</span><span class=n>date</span><span class=p>(</span><span class=mi>2013</span><span class=p>,</span> <span class=mi>10</span><span class=p>,</span> <span class=mi>10</span><span class=p>))</span><span class=p>[</span><span class=n>datetime</span><span class=o>.</span><span class=n>date</span><span class=p>(</span><span class=mi>2011</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>15</span><span class=p>),</span><span class=n>datetime</span><span class=o>.</span><span class=n>date</span><span class=p>(</span><span class=mi>2013</span><span class=p>,</span> <span class=mi>10</span><span class=p>,</span> <span class=mi>10</span><span class=p>)]</span></pre><p>Infinite and semi-infinite intervals are supported using <code>P.inf</code> and <code>-P.inf</code> as upper or lower bounds.These two objects support comparison with any other object.When infinities are used as a lower or upper bound, the corresponding boundary is automatically converted to an open one.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span> <span class=o>&gt;</span> <span class=s1>'a'</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span> <span class=o>&gt;</span> <span class=mi>0</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span> <span class=o>&gt;</span> <span class=kc>True</span><span class=p>(</span><span class=kc>True</span><span class=p>,</span> <span class=kc>True</span><span class=p>,</span> <span class=kc>True</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>openclosed</span><span class=p>(</span><span class=o>-</span><span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>,</span> <span class=mi>0</span><span class=p>)</span><span class=p>(</span><span class=o>-</span><span class=n>inf</span><span class=p>,</span><span class=mi>0</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=o>-</span><span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>)</span>  <span class=c1># Automatically converted to an open interval</span><span class=p>(</span><span class=o>-</span><span class=n>inf</span><span class=p>,</span><span class=o>+</span><span class=n>inf</span><span class=p>)</span></pre><p>Intervals created with this library are <code>Interval</code> instances.An <code>Interval</code> instance is a disjunction of atomic intervals each representing a single interval (e.g. <code>[1,2]</code>).Intervals can be iterated to access the underlying atomic intervals, sorted by their lower and upper bounds.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>10</span><span class=p>,</span> <span class=mi>11</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>20</span><span class=p>,</span> <span class=mi>21</span><span class=p>))</span><span class=p>[[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>],</span> <span class=p>(</span><span class=mi>10</span><span class=p>,</span><span class=mi>11</span><span class=p>),</span> <span class=p>[</span><span class=mi>20</span><span class=p>,</span><span class=mi>21</span><span class=p>]]</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>empty</span><span class=p>())</span><span class=p>[]</span></pre><p>Nested (sorted) intervals can also be retrieved with a position or a slice:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>10</span><span class=p>,</span> <span class=mi>11</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>20</span><span class=p>,</span> <span class=mi>21</span><span class=p>))[</span><span class=mi>0</span><span class=p>]</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>10</span><span class=p>,</span> <span class=mi>11</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>20</span><span class=p>,</span> <span class=mi>21</span><span class=p>))[</span><span class=o>-</span><span class=mi>2</span><span class=p>]</span><span class=p>(</span><span class=mi>10</span><span class=p>,</span><span class=mi>11</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>10</span><span class=p>,</span> <span class=mi>11</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>20</span><span class=p>,</span> <span class=mi>21</span><span class=p>))[:</span><span class=mi>2</span><span class=p>]</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span> <span class=o>|</span> <span class=p>(</span><span class=mi>10</span><span class=p>,</span><span class=mi>11</span><span class=p>)</span></pre><p>For convenience, intervals are automatically simplified:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>4</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>4</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span><span class=p>[</span><span class=mi>1</span><span class=p>,</span><span class=mi>4</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>empty</span><span class=p>()</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>4</span><span class=p>,</span> <span class=mi>5</span><span class=p>)</span><span class=p>[</span><span class=mi>1</span><span class=p>,</span><span class=mi>3</span><span class=p>]</span> <span class=o>|</span> <span class=p>[</span><span class=mi>4</span><span class=p>,</span><span class=mi>5</span><span class=p>]</span></pre><p>Note that, by default, simplification of discrete intervals is <strong>not</strong> supported by <code>portion</code> (but it can be simulated though, see <a href=\"https://github.com/AlexandreDecan/portion/issues/24#issuecomment-604456362\" rel=nofollow>#24</a>).For example, combining <code>[0,1]</code> with <code>[2,3]</code> will <strong>not</strong> result in <code>[0,3]</code> even if there isno integer between <code>1</code> and <code>2</code>.Refer to <a href=#specialize--customize-intervals rel=nofollow>Specialize &amp; customize intervals</a> to see how to create and use specialized discrete intervals.</p><p><a href=#table-of-contents rel=nofollow>\u2191 back to top</a></p><h3>Interval bounds &amp; attributes</h3><p>An <code>Interval</code> defines the following properties:</p><ul><li><p><code>i.empty</code> is <code>True</code> if and only if the interval is empty.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=o>.</span><span class=n>empty</span><span class=kc>False</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>)</span><span class=o>.</span><span class=n>empty</span><span class=kc>False</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>openclosed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>)</span><span class=o>.</span><span class=n>empty</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>empty</span><span class=p>()</span><span class=o>.</span><span class=n>empty</span><span class=kc>True</span></pre></li><li><p><code>i.atomic</code> is <code>True</code> if and only if the interval is empty or is a disjunction of a single interval.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>empty</span><span class=p>()</span><span class=o>.</span><span class=n>atomic</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=o>.</span><span class=n>atomic</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>))</span><span class=o>.</span><span class=n>atomic</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>))</span><span class=o>.</span><span class=n>atomic</span><span class=kc>False</span></pre></li><li><p><code>i.enclosure</code> refers to the smallest atomic interval that includes the current one.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>))</span><span class=o>.</span><span class=n>enclosure</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>3</span><span class=p>)</span></pre></li></ul><p>The left and right boundaries, and the lower and upper bounds of an interval can be respectively accessedwith its <code>left</code>, <code>right</code>, <code>lower</code> and <code>upper</code> attributes.The <code>left</code> and <code>right</code> bounds are either <code>P.CLOSED</code> or <code>P.OPEN</code>.By definition, <code>P.CLOSED == ~P.OPEN</code> and vice-versa.</p><pre lang=python3><span class=o>&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>CLOSED</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>OPEN</span><span class=n>CLOSED</span><span class=p>,</span> <span class=n>OPEN</span><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>closedopen</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span><span class=o>.</span><span class=n>left</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>lower</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>upper</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>right</span><span class=p>(</span><span class=n>CLOSED</span><span class=p>,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=n>OPEN</span><span class=p>)</span></pre><p>By convention, empty intervals resolve to <code>(P.inf, -P.inf)</code>:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>empty</span><span class=p>()</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>left</span><span class=p>,</span> <span class=n>i</span><span class=o>.</span><span class=n>lower</span><span class=p>,</span> <span class=n>i</span><span class=o>.</span><span class=n>upper</span><span class=p>,</span> <span class=n>i</span><span class=o>.</span><span class=n>right</span><span class=p>(</span><span class=n>OPEN</span><span class=p>,</span> <span class=o>+</span><span class=n>inf</span><span class=p>,</span> <span class=o>-</span><span class=n>inf</span><span class=p>,</span> <span class=n>OPEN</span><span class=p>)</span></pre><p>If the interval is not atomic, then <code>left</code> and <code>lower</code> refer to the lower bound of its enclosure,while <code>right</code> and <code>upper</code> refer to the upper bound of its enclosure:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span><span class=o>.</span><span class=n>left</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>lower</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>upper</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>right</span><span class=p>(</span><span class=n>OPEN</span><span class=p>,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>4</span><span class=p>,</span> <span class=n>CLOSED</span><span class=p>)</span></pre><p>One can easily check for some interval properties based on the bounds of an interval:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>openclosed</span><span class=p>(</span><span class=o>-</span><span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>,</span> <span class=mi>0</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=c1># Check that interval is left/right closed</span><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span><span class=o>.</span><span class=n>left</span> <span class=o>==</span> <span class=n>P</span><span class=o>.</span><span class=n>CLOSED</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>right</span> <span class=o>==</span> <span class=n>P</span><span class=o>.</span><span class=n>CLOSED</span><span class=p>(</span><span class=kc>False</span><span class=p>,</span> <span class=kc>True</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=c1># Check that interval is left/right bounded</span><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span><span class=o>.</span><span class=n>lower</span> <span class=o>==</span> <span class=o>-</span><span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>upper</span> <span class=o>==</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>(</span><span class=kc>True</span><span class=p>,</span> <span class=kc>False</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=c1># Check for singleton</span><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span><span class=o>.</span><span class=n>lower</span> <span class=o>==</span> <span class=n>x</span><span class=o>.</span><span class=n>upper</span><span class=kc>False</span></pre><p><a href=#table-of-contents rel=nofollow>\u2191 back to top</a></p><h3>Interval operations</h3><p><code>Interval</code> instances support the following operations:</p><ul><li><p><code>i.intersection(other)</code> and <code>i &amp; other</code> return the intersection of two intervals.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>&amp;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span><span class=p>[</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>4</span><span class=p>)</span> <span class=o>&amp;</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span><span class=mi>3</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>&amp;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span><span class=p>[</span><span class=mi>2</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>&amp;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>)</span><span class=p>()</span></pre></li><li><p><code>i.union(other)</code> and <code>i | other</code> return the union of two intervals.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>2</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span> <span class=o>|</span> <span class=p>[</span><span class=mi>2</span><span class=p>,</span><span class=mi>3</span><span class=p>]</span></pre></li><li><p><code>i.complement(other)</code> and <code>~i</code> return the complement of the interval.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=o>~</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=p>(</span><span class=o>-</span><span class=n>inf</span><span class=p>,</span><span class=mi>0</span><span class=p>)</span> <span class=o>|</span> <span class=p>(</span><span class=mi>1</span><span class=p>,</span><span class=o>+</span><span class=n>inf</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=o>~</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=o>-</span><span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>,</span> <span class=mi>0</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>))</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=o>~</span><span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=o>-</span><span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>)</span><span class=p>()</span></pre></li><li><p><code>i.difference(other)</code> and <code>i - other</code> return the difference between <code>i</code> and <code>other</code>.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span><span class=mi>2</span><span class=p>)</span> <span class=o>-</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>4</span><span class=p>)</span> <span class=o>-</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=p>(</span><span class=mi>2</span><span class=p>,</span><span class=mi>4</span><span class=p>]</span></pre></li><li><p><code>i.contains(other)</code> and <code>other in i</code> hold if given item is contained in the interval.It supports intervals and arbitrary comparable values.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=mi>2</span> <span class=ow>in</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=mi>2</span> <span class=ow>in</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=kc>False</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=ow>in</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=kc>True</span></pre></li><li><p><code>i.adjacent(other)</code> tests if the two intervals are adjacent, i.e., if they do not overlap and their union form a single atomic interval.While this definition corresponds to the usual notion of adjacency for atomicintervals, it has stronger requirements for non-atomic ones since it requiresall underlying atomic intervals to be adjacent (i.e. that oneinterval fills the gaps between the atomic intervals of the other one).</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=o>.</span><span class=n>adjacent</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>openclosed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>))</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=o>.</span><span class=n>adjacent</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>))</span><span class=kc>False</span><span class=o>&gt;&gt;&gt;</span> <span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>))</span><span class=o>.</span><span class=n>adjacent</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>))</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>))</span><span class=o>.</span><span class=n>adjacent</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>))</span><span class=kc>False</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=o>.</span><span class=n>adjacent</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>))</span><span class=kc>False</span></pre></li><li><p><code>i.overlaps(other)</code> tests if there is an overlap between two intervals.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=o>.</span><span class=n>overlaps</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>))</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=o>.</span><span class=n>overlaps</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>))</span><span class=kc>False</span></pre></li></ul><p>Finally, intervals are hashable as long as their bounds are hashable (and we have defined a hash value for <code>P.inf</code> and <code>-P.inf</code>).</p><p><a href=#table-of-contents rel=nofollow>\u2191 back to top</a></p><h3>Comparison operators</h3><p>Equality between intervals can be checked with the classical <code>==</code> operator:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>==</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>==</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=kc>False</span></pre><p>Moreover, intervals are comparable using <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code> or <code>&lt;=</code>.These comparison operators have a different behaviour than the usual ones.For instance, <code>a &lt; b</code> holds if all values in <code>a</code> are lower than the minimal value of <code>b</code> (i.e., <code>a</code> isentirely on the left of the lower bound of <code>b</code>).</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>&lt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>&lt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=kc>False</span></pre><p>Similarly, <code>a &lt;= b</code> if all values in <code>a</code> are lower than the maximal value of <code>b</code> (i.e., <code>a</code> isentirely on the left of the upper bound of <code>b</code>).</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>&lt;=</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>&lt;=</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span> <span class=o>&lt;=</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=kc>False</span></pre><p>If an interval needs to be compared against a single value, convert the value to a singleton interval first:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>0</span><span class=p>)</span> <span class=o>&lt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>10</span><span class=p>)</span><span class=kc>False</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>0</span><span class=p>)</span> <span class=o>&lt;=</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>10</span><span class=p>)</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>5</span><span class=p>)</span> <span class=o>&lt;=</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>10</span><span class=p>)</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>&lt;</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>2</span><span class=p>)</span><span class=kc>True</span></pre><p>Note that all these semantics differ from classical comparison operators.As a consequence, the empty interval is never <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code> nor <code>&gt;=</code> than any other interval, andno interval is <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code> or <code>&gt;=</code> when compared to the empty interval.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>e</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>empty</span><span class=p>()</span><span class=o>&gt;&gt;&gt;</span> <span class=n>e</span> <span class=o>&lt;</span> <span class=n>e</span> <span class=ow>or</span> <span class=n>e</span> <span class=o>&gt;</span> <span class=n>e</span> <span class=ow>or</span> <span class=n>e</span> <span class=o>&lt;=</span> <span class=n>e</span> <span class=ow>or</span> <span class=n>e</span> <span class=o>&gt;=</span> <span class=n>e</span><span class=kc>False</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>e</span> <span class=o>&lt;</span> <span class=n>i</span> <span class=ow>or</span> <span class=n>e</span> <span class=o>&lt;=</span> <span class=n>i</span> <span class=ow>or</span> <span class=n>e</span> <span class=o>&gt;</span> <span class=n>i</span> <span class=ow>or</span> <span class=n>e</span> <span class=o>&gt;=</span> <span class=n>i</span><span class=kc>False</span></pre><p>Moreover, some non-empty intervals are also not comparable in the classical sense, as illustrated hereafter:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>a</span><span class=p>,</span> <span class=n>b</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>4</span><span class=p>),</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>a</span> <span class=o>&lt;</span> <span class=n>b</span> <span class=ow>or</span> <span class=n>a</span> <span class=o>&gt;</span> <span class=n>b</span><span class=kc>False</span><span class=o>&gt;&gt;&gt;</span> <span class=n>a</span> <span class=o>&lt;=</span> <span class=n>b</span> <span class=ow>or</span> <span class=n>a</span> <span class=o>&gt;=</span> <span class=n>b</span><span class=kc>False</span><span class=o>&gt;&gt;&gt;</span> <span class=n>b</span> <span class=o>&lt;=</span> <span class=n>a</span> <span class=ow>and</span> <span class=n>b</span> <span class=o>&gt;=</span> <span class=n>a</span><span class=kc>True</span></pre><p>As a general rule, if <code>a &lt; b</code> holds, then <code>a &lt;= b</code>, <code>b &gt; a</code>, <code>b &gt;= a</code>,<code>not (a &gt; b)</code>, <code>not (b &lt; a)</code>, <code>not (a &gt;= b)</code>, and <code>not (b &lt;= a)</code> hold.</p><p><a href=#table-of-contents rel=nofollow>\u2191 back to top</a></p><h3>Interval transformation</h3><p>Intervals are immutable but provide a <code>replace</code> method to create a new interval based on thecurrent one. This method accepts four optional parameters <code>left</code>, <code>lower</code>, <code>upper</code>, and <code>right</code>:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>OPEN</span><span class=p>,</span> <span class=o>-</span><span class=mi>1</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>CLOSED</span><span class=p>)</span><span class=p>(</span><span class=o>-</span><span class=mi>1</span><span class=p>,</span><span class=mi>3</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>lower</span><span class=o>=</span><span class=mi>1</span><span class=p>,</span> <span class=n>right</span><span class=o>=</span><span class=n>P</span><span class=o>.</span><span class=n>OPEN</span><span class=p>)</span><span class=p>[</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>)</span></pre><p>Functions can be passed instead of values. If a function is passed, it is called with the current correspondingvalue.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>upper</span><span class=o>=</span><span class=k>lambda</span> <span class=n>x</span><span class=p>:</span> <span class=mi>2</span> <span class=o>*</span> <span class=n>x</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>4</span><span class=p>]</span></pre><p>The provided function won't be called on infinities, unless <code>ignore_inf</code> is set to <code>False</code>.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>closedopen</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>upper</span><span class=o>=</span><span class=k>lambda</span> <span class=n>x</span><span class=p>:</span> <span class=mi>10</span><span class=p>)</span>  <span class=c1># No change, infinity is ignored</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=o>+</span><span class=n>inf</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>upper</span><span class=o>=</span><span class=k>lambda</span> <span class=n>x</span><span class=p>:</span> <span class=mi>10</span><span class=p>,</span> <span class=n>ignore_inf</span><span class=o>=</span><span class=kc>False</span><span class=p>)</span>  <span class=c1># Infinity is not ignored</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>10</span><span class=p>)</span></pre><p>When <code>replace</code> is applied on an interval that is not atomic, it is extended and/or restricted such thatits enclosure satisfies the new bounds.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>openclosed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>5</span><span class=p>,</span> <span class=mi>10</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>CLOSED</span><span class=p>,</span> <span class=o>-</span><span class=mi>1</span><span class=p>,</span> <span class=mi>8</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>OPEN</span><span class=p>)</span><span class=p>[</span><span class=o>-</span><span class=mi>1</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span> <span class=o>|</span> <span class=p>[</span><span class=mi>5</span><span class=p>,</span><span class=mi>8</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>lower</span><span class=o>=</span><span class=mi>4</span><span class=p>)</span><span class=p>(</span><span class=mi>4</span><span class=p>,</span><span class=mi>10</span><span class=p>]</span></pre><p>To apply arbitrary transformations on the underlying atomic intervals, intervals expose an <code>apply</code> method that acts like <code>map</code>.This method accepts a function that will be applied on each of the underlying atomic intervals to perform the desired transformation.The provided function is expected to return either an <code>Interval</code>, or a 4-uple <code>(left, lower, upper, right)</code>.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>4</span><span class=p>,</span> <span class=mi>5</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=c1># Increment bound values</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>apply</span><span class=p>(</span><span class=k>lambda</span> <span class=n>x</span><span class=p>:</span> <span class=p>(</span><span class=n>x</span><span class=o>.</span><span class=n>left</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>lower</span> <span class=o>+</span> <span class=mi>1</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>upper</span> <span class=o>+</span> <span class=mi>1</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>right</span><span class=p>))</span><span class=p>[</span><span class=mi>3</span><span class=p>,</span><span class=mi>4</span><span class=p>]</span> <span class=o>|</span> <span class=p>(</span><span class=mi>5</span><span class=p>,</span><span class=mi>6</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=c1># Invert bounds</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>apply</span><span class=p>(</span><span class=k>lambda</span> <span class=n>x</span><span class=p>:</span> <span class=p>(</span><span class=o>~</span><span class=n>x</span><span class=o>.</span><span class=n>left</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>lower</span><span class=p>,</span> <span class=n>x</span><span class=o>.</span><span class=n>upper</span><span class=p>,</span> <span class=o>~</span><span class=n>x</span><span class=o>.</span><span class=n>right</span><span class=p>))</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span><span class=mi>3</span><span class=p>)</span> <span class=o>|</span> <span class=p>[</span><span class=mi>4</span><span class=p>,</span><span class=mi>5</span><span class=p>]</span></pre><p>The <code>apply</code> method is very powerful when used in combination with <code>replace</code>.Because the latter allows functions to be passed as parameters and ignores infinities by default, it can beconveniently used to transform (disjunction of) intervals in presence of infinities.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>openclosed</span><span class=p>(</span><span class=o>-</span><span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>,</span> <span class=mi>0</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closedopen</span><span class=p>(</span><span class=mi>8</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=c1># Increment bound values</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>apply</span><span class=p>(</span><span class=k>lambda</span> <span class=n>x</span><span class=p>:</span> <span class=n>x</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>upper</span><span class=o>=</span><span class=k>lambda</span> <span class=n>v</span><span class=p>:</span> <span class=n>v</span> <span class=o>+</span> <span class=mi>1</span><span class=p>))</span><span class=p>(</span><span class=o>-</span><span class=n>inf</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span> <span class=o>|</span> <span class=p>[</span><span class=mi>3</span><span class=p>,</span><span class=mi>5</span><span class=p>]</span> <span class=o>|</span> <span class=p>[</span><span class=mi>8</span><span class=p>,</span><span class=o>+</span><span class=n>inf</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=c1># Intervals are still automatically simplified</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>apply</span><span class=p>(</span><span class=k>lambda</span> <span class=n>x</span><span class=p>:</span> <span class=n>x</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>lower</span><span class=o>=</span><span class=k>lambda</span> <span class=n>v</span><span class=p>:</span> <span class=n>v</span> <span class=o>*</span> <span class=mi>2</span><span class=p>))</span><span class=p>(</span><span class=o>-</span><span class=n>inf</span><span class=p>,</span><span class=mi>0</span><span class=p>]</span> <span class=o>|</span> <span class=p>[</span><span class=mi>16</span><span class=p>,</span><span class=o>+</span><span class=n>inf</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=c1># Invert bounds</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>apply</span><span class=p>(</span><span class=k>lambda</span> <span class=n>x</span><span class=p>:</span> <span class=n>x</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>left</span><span class=o>=</span><span class=k>lambda</span> <span class=n>v</span><span class=p>:</span> <span class=o>~</span><span class=n>v</span><span class=p>,</span> <span class=n>right</span><span class=o>=</span><span class=k>lambda</span> <span class=n>v</span><span class=p>:</span> <span class=o>~</span><span class=n>v</span><span class=p>))</span><span class=p>(</span><span class=o>-</span><span class=n>inf</span><span class=p>,</span><span class=mi>0</span><span class=p>)</span> <span class=o>|</span> <span class=p>(</span><span class=mi>3</span><span class=p>,</span><span class=mi>4</span><span class=p>)</span> <span class=o>|</span> <span class=p>(</span><span class=mi>8</span><span class=p>,</span><span class=o>+</span><span class=n>inf</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=c1># Replace infinities with -10 and 10</span><span class=o>&gt;&gt;&gt;</span> <span class=n>conv</span> <span class=o>=</span> <span class=k>lambda</span> <span class=n>v</span><span class=p>:</span> <span class=o>-</span><span class=mi>10</span> <span class=k>if</span> <span class=n>v</span> <span class=o>==</span> <span class=o>-</span><span class=n>P</span><span class=o>.</span><span class=n>inf</span> <span class=k>else</span> <span class=p>(</span><span class=mi>10</span> <span class=k>if</span> <span class=n>v</span> <span class=o>==</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span> <span class=k>else</span> <span class=n>v</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>i</span><span class=o>.</span><span class=n>apply</span><span class=p>(</span><span class=k>lambda</span> <span class=n>x</span><span class=p>:</span> <span class=n>x</span><span class=o>.</span><span class=n>replace</span><span class=p>(</span><span class=n>lower</span><span class=o>=</span><span class=n>conv</span><span class=p>,</span> <span class=n>upper</span><span class=o>=</span><span class=n>conv</span><span class=p>,</span> <span class=n>ignore_inf</span><span class=o>=</span><span class=kc>False</span><span class=p>))</span><span class=p>(</span><span class=o>-</span><span class=mi>10</span><span class=p>,</span><span class=mi>0</span><span class=p>]</span> <span class=o>|</span> <span class=p>[</span><span class=mi>3</span><span class=p>,</span><span class=mi>4</span><span class=p>]</span> <span class=o>|</span> <span class=p>[</span><span class=mi>8</span><span class=p>,</span><span class=mi>10</span><span class=p>)</span></pre><p><a href=#table-of-contents rel=nofollow>\u2191 back to top</a></p><h3>Discrete iteration</h3><p>The <code>iterate</code> function takes an interval, and returns a generator to iterate overthe values of an interval. Obviously, as intervals are continuous, it is required to specify the<code>step</code> between consecutive values. The iteration then starts from the lower bound and ends on the upper one. Only values contained by the interval are returned this way.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>3</span><span class=p>),</span> <span class=n>step</span><span class=o>=</span><span class=mi>1</span><span class=p>))</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>3</span><span class=p>),</span> <span class=n>step</span><span class=o>=</span><span class=mi>2</span><span class=p>))</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>3</span><span class=p>),</span> <span class=n>step</span><span class=o>=</span><span class=mi>2</span><span class=p>))</span><span class=p>[</span><span class=mi>2</span><span class=p>]</span></pre><p>When an interval is not atomic, <code>iterate</code> consecutively iterates on all underlying atomicintervals, starting from each lower bound and ending on each upper one:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>0</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>3</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>5</span><span class=p>),</span> <span class=n>step</span><span class=o>=</span><span class=mi>2</span><span class=p>))</span>  <span class=c1># Won't be [0]</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>5</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>4</span><span class=p>,</span> <span class=mi>6</span><span class=p>),</span> <span class=n>step</span><span class=o>=</span><span class=mi>3</span><span class=p>))</span>  <span class=c1># Won't be [0, 6]</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span> <span class=mi>4</span><span class=p>]</span></pre><p>By default, the iteration always starts on the lower bound of each underlying atomic interval.The <code>base</code> parameter can be used to change this behaviour, by specifying how the initial value to startthe iteration from must be computed. This parameter accepts a callable that is called with the lowerbound of each underlying atomic interval, and that returns the initial value to start the iteration from.It can be helpful to deal with (semi-)infinite intervals, or to <em>align</em> the generated values of the iterator:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=c1># Align on integers</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mf>0.3</span><span class=p>,</span> <span class=mf>4.9</span><span class=p>),</span> <span class=n>step</span><span class=o>=</span><span class=mi>1</span><span class=p>,</span> <span class=n>base</span><span class=o>=</span><span class=nb>int</span><span class=p>))</span><span class=p>[</span><span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>4</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=c1># Restrict values of a (semi-)infinite interval</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>openclosed</span><span class=p>(</span><span class=o>-</span><span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>,</span> <span class=mi>2</span><span class=p>),</span> <span class=n>step</span><span class=o>=</span><span class=mi>1</span><span class=p>,</span> <span class=n>base</span><span class=o>=</span><span class=k>lambda</span> <span class=n>x</span><span class=p>:</span> <span class=nb>max</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>x</span><span class=p>)))</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>2</span><span class=p>]</span></pre><p>The <code>base</code> parameter can be used to change how <code>iterate</code> applies on unions of atomic interval, byspecifying a function that returns a single value, as illustrated next:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>base</span> <span class=o>=</span> <span class=k>lambda</span> <span class=n>x</span><span class=p>:</span> <span class=mi>0</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>0</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>3</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>5</span><span class=p>),</span> <span class=n>step</span><span class=o>=</span><span class=mi>2</span><span class=p>,</span> <span class=n>base</span><span class=o>=</span><span class=n>base</span><span class=p>))</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>4</span><span class=p>,</span> <span class=mi>6</span><span class=p>),</span> <span class=n>step</span><span class=o>=</span><span class=mi>3</span><span class=p>,</span> <span class=n>base</span><span class=o>=</span><span class=n>base</span><span class=p>))</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span> <span class=mi>6</span><span class=p>]</span></pre><p>Notice that defining <code>base</code> such that it returns a single value can be extremely inefficient interms of performance when the intervals are \"far apart\" each other (i.e., when the <em>gaps</em> betweenatomic intervals are large).</p><p>Finally, iteration can be performed in reverse order by specifying <code>reverse=True</code>.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>3</span><span class=p>),</span> <span class=n>step</span><span class=o>=-</span><span class=mi>1</span><span class=p>,</span> <span class=n>reverse</span><span class=o>=</span><span class=kc>True</span><span class=p>))</span>  <span class=c1># Mind step=-1</span><span class=p>[</span><span class=mi>3</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>0</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>3</span><span class=p>),</span> <span class=n>step</span><span class=o>=-</span><span class=mi>2</span><span class=p>,</span> <span class=n>reverse</span><span class=o>=</span><span class=kc>True</span><span class=p>))</span>  <span class=c1># Mind step=-2</span><span class=p>[</span><span class=mi>3</span><span class=p>,</span> <span class=mi>1</span><span class=p>]</span></pre><p>Again, this library does not make any assumption about the objects being used in an interval, as long as theyare comparable. However, it is not always possible to provide a meaningful value for <code>step</code> (e.g., what wouldbe the step between two consecutive characters?). In these cases, a callable can be passed instead of a value.This callable will be called with the current value, and is expected to return the next possible value.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=s1>'a'</span><span class=p>,</span> <span class=s1>'d'</span><span class=p>),</span> <span class=n>step</span><span class=o>=</span><span class=k>lambda</span> <span class=n>d</span><span class=p>:</span> <span class=nb>chr</span><span class=p>(</span><span class=nb>ord</span><span class=p>(</span><span class=n>d</span><span class=p>)</span> <span class=o>+</span> <span class=mi>1</span><span class=p>)))</span><span class=p>[</span><span class=s1>'a'</span><span class=p>,</span> <span class=s1>'b'</span><span class=p>,</span> <span class=s1>'c'</span><span class=p>,</span> <span class=s1>'d'</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=c1># Since we reversed the order, we changed \"+\" to \"-\" in the lambda.</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>iterate</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=s1>'a'</span><span class=p>,</span> <span class=s1>'d'</span><span class=p>),</span> <span class=n>step</span><span class=o>=</span><span class=k>lambda</span> <span class=n>d</span><span class=p>:</span> <span class=nb>chr</span><span class=p>(</span><span class=nb>ord</span><span class=p>(</span><span class=n>d</span><span class=p>)</span> <span class=o>-</span> <span class=mi>1</span><span class=p>),</span> <span class=n>reverse</span><span class=o>=</span><span class=kc>True</span><span class=p>))</span><span class=p>[</span><span class=s1>'d'</span><span class=p>,</span> <span class=s1>'c'</span><span class=p>,</span> <span class=s1>'b'</span><span class=p>,</span> <span class=s1>'a'</span><span class=p>]</span></pre><p><a href=#table-of-contents rel=nofollow>\u2191 back to top</a></p><h3>Map intervals to data</h3><p>The library provides an <code>IntervalDict</code> class, a <code>dict</code>-like data structure to store and query dataalong with intervals. Any value can be stored in such data structure as long as it supportsequality.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>IntervalDict</span><span class=p>()</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>3</span><span class=p>)]</span> <span class=o>=</span> <span class=s1>'banana'</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=mi>4</span><span class=p>]</span> <span class=o>=</span> <span class=s1>'apple'</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>{[</span><span class=mi>0</span><span class=p>,</span><span class=mi>3</span><span class=p>]:</span> <span class=s1>'banana'</span><span class=p>,</span> <span class=p>[</span><span class=mi>4</span><span class=p>]:</span> <span class=s1>'apple'</span><span class=p>}</span></pre><p>When a value is defined for an interval that overlaps an existing one, it is automatically updatedto take the new value into account:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>4</span><span class=p>)]</span> <span class=o>=</span> <span class=s1>'orange'</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>{[</span><span class=mi>0</span><span class=p>,</span><span class=mi>2</span><span class=p>):</span> <span class=s1>'banana'</span><span class=p>,</span> <span class=p>[</span><span class=mi>2</span><span class=p>,</span><span class=mi>4</span><span class=p>]:</span> <span class=s1>'orange'</span><span class=p>}</span></pre><p>An <code>IntervalDict</code> can be queried using single values or intervals. If a single value is used as akey, its behaviour corresponds to the one of a classical <code>dict</code>:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=mi>2</span><span class=p>]</span><span class=s1>'orange'</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=mi>5</span><span class=p>]</span>  <span class=c1># Key does not exist</span><span class=n>Traceback</span> <span class=p>(</span><span class=n>most</span> <span class=n>recent</span> <span class=n>call</span> <span class=n>last</span><span class=p>):</span> <span class=o>...</span><span class=ne>KeyError</span><span class=p>:</span> <span class=mi>5</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=mi>5</span><span class=p>,</span> <span class=n>default</span><span class=o>=</span><span class=mi>0</span><span class=p>)</span><span class=mi>0</span></pre><p>When the key is an interval, a new <code>IntervalDict</code> containing the valuesfor the specified key is returned:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=o>~</span><span class=n>P</span><span class=o>.</span><span class=n>empty</span><span class=p>()]</span>  <span class=c1># Get all values, similar to d.copy()</span><span class=p>{[</span><span class=mi>0</span><span class=p>,</span><span class=mi>2</span><span class=p>):</span> <span class=s1>'banana'</span><span class=p>,</span> <span class=p>[</span><span class=mi>2</span><span class=p>,</span><span class=mi>4</span><span class=p>]:</span> <span class=s1>'orange'</span><span class=p>}</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>3</span><span class=p>)]</span><span class=p>{[</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>):</span> <span class=s1>'banana'</span><span class=p>,</span> <span class=p>[</span><span class=mi>2</span><span class=p>,</span><span class=mi>3</span><span class=p>]:</span> <span class=s1>'orange'</span><span class=p>}</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=o>-</span><span class=mi>2</span><span class=p>,</span> <span class=mi>1</span><span class=p>)]</span><span class=p>{[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]:</span> <span class=s1>'banana'</span><span class=p>}</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=o>-</span><span class=mi>2</span><span class=p>,</span> <span class=o>-</span><span class=mi>1</span><span class=p>)]</span><span class=p>{}</span></pre><p>By using <code>.get</code>, a default value (defaulting to <code>None</code>) can be specified.This value is used to \"fill the gaps\" if the queried interval is not completelycovered by the <code>IntervalDict</code>:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=o>-</span><span class=mi>2</span><span class=p>,</span> <span class=mi>1</span><span class=p>),</span> <span class=n>default</span><span class=o>=</span><span class=s1>'peach'</span><span class=p>)</span><span class=p>{[</span><span class=o>-</span><span class=mi>2</span><span class=p>,</span><span class=mi>0</span><span class=p>):</span> <span class=s1>'peach'</span><span class=p>,</span> <span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]:</span> <span class=s1>'banana'</span><span class=p>}</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=o>-</span><span class=mi>2</span><span class=p>,</span> <span class=o>-</span><span class=mi>1</span><span class=p>),</span> <span class=n>default</span><span class=o>=</span><span class=s1>'peach'</span><span class=p>)</span><span class=p>{[</span><span class=o>-</span><span class=mi>2</span><span class=p>,</span><span class=o>-</span><span class=mi>1</span><span class=p>]:</span> <span class=s1>'peach'</span><span class=p>}</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>1</span><span class=p>),</span> <span class=n>default</span><span class=o>=</span><span class=s1>'peach'</span><span class=p>)</span>  <span class=c1># Key is covered, default is not used</span><span class=p>{[</span><span class=mi>1</span><span class=p>]:</span> <span class=s1>'banana'</span><span class=p>}</span></pre><p>For convenience, an <code>IntervalDict</code> provides a way to look for specific data values.The <code>.find</code> method always returns a (possibly empty) <code>Interval</code> instance for which givenvalue is defined:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=o>.</span><span class=n>find</span><span class=p>(</span><span class=s1>'banana'</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>2</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=o>.</span><span class=n>find</span><span class=p>(</span><span class=s1>'orange'</span><span class=p>)</span><span class=p>[</span><span class=mi>2</span><span class=p>,</span><span class=mi>4</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=o>.</span><span class=n>find</span><span class=p>(</span><span class=s1>'carrot'</span><span class=p>)</span><span class=p>()</span></pre><p>The active domain of an <code>IntervalDict</code> can be retrieved with its <code>.domain</code> method.This method always returns a single <code>Interval</code> instance, where <code>.keys</code> returns a sorted view of disjoint intervals.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=o>.</span><span class=n>domain</span><span class=p>()</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>4</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>d</span><span class=o>.</span><span class=n>keys</span><span class=p>())</span><span class=p>[[</span><span class=mi>0</span><span class=p>,</span><span class=mi>2</span><span class=p>),</span> <span class=p>[</span><span class=mi>2</span><span class=p>,</span><span class=mi>4</span><span class=p>]]</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>d</span><span class=o>.</span><span class=n>values</span><span class=p>())</span><span class=p>[</span><span class=s1>'banana'</span><span class=p>,</span> <span class=s1>'orange'</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>d</span><span class=o>.</span><span class=n>items</span><span class=p>())</span><span class=p>[([</span><span class=mi>0</span><span class=p>,</span><span class=mi>2</span><span class=p>),</span> <span class=s1>'banana'</span><span class=p>),</span> <span class=p>([</span><span class=mi>2</span><span class=p>,</span><span class=mi>4</span><span class=p>],</span> <span class=s1>'orange'</span><span class=p>)]</span></pre><p>The <code>.keys</code>, <code>.values</code> and <code>.items</code> methods return exactly one element for each stored value (i.e., if two intervals share a value, they are merged into a disjunction), as illustrated next.See <a href=\"https://github.com/AlexandreDecan/portion/issues/44#issuecomment-710199687\" rel=nofollow>#44</a> to know how to obtained a sorted list of atomic intervals instead.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>IntervalDict</span><span class=p>()</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)]</span> <span class=o>=</span> <span class=n>d</span><span class=p>[</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>)]</span> <span class=o>=</span> <span class=s1>'peach'</span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>d</span><span class=o>.</span><span class=n>items</span><span class=p>())</span><span class=p>[([</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span> <span class=o>|</span> <span class=p>[</span><span class=mi>2</span><span class=p>,</span><span class=mi>3</span><span class=p>],</span> <span class=s1>'peach'</span><span class=p>)]</span></pre><p>Two <code>IntervalDict</code> instances can be combined together using the <code>.combine</code> method.This method returns a new <code>IntervalDict</code> whose keys and values are taken from the twosource <code>IntervalDict</code>. Values corresponding to non-intersecting keys are simply copied,while values corresponding to intersecting keys are combined together using the providedfunction, as illustrated hereafter:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>d1</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>IntervalDict</span><span class=p>({</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>):</span> <span class=s1>'banana'</span><span class=p>})</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d2</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>IntervalDict</span><span class=p>({</span><span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>1</span><span class=p>,</span> <span class=mi>3</span><span class=p>):</span> <span class=s1>'orange'</span><span class=p>})</span><span class=o>&gt;&gt;&gt;</span> <span class=n>concat</span> <span class=o>=</span> <span class=k>lambda</span> <span class=n>x</span><span class=p>,</span> <span class=n>y</span><span class=p>:</span> <span class=n>x</span> <span class=o>+</span> <span class=s1>'/'</span> <span class=o>+</span> <span class=n>y</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d1</span><span class=o>.</span><span class=n>combine</span><span class=p>(</span><span class=n>d2</span><span class=p>,</span> <span class=n>how</span><span class=o>=</span><span class=n>concat</span><span class=p>)</span><span class=p>{[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>):</span> <span class=s1>'banana'</span><span class=p>,</span> <span class=p>[</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>]:</span> <span class=s1>'banana/orange'</span><span class=p>,</span> <span class=p>(</span><span class=mi>2</span><span class=p>,</span><span class=mi>3</span><span class=p>]:</span> <span class=s1>'orange'</span><span class=p>}</span></pre><p>Resulting keys always correspond to an outer join. Other joins can be easily simulatedby querying the resulting <code>IntervalDict</code> as follows:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span> <span class=o>=</span> <span class=n>d1</span><span class=o>.</span><span class=n>combine</span><span class=p>(</span><span class=n>d2</span><span class=p>,</span> <span class=n>how</span><span class=o>=</span><span class=n>concat</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=n>d1</span><span class=o>.</span><span class=n>domain</span><span class=p>()]</span>  <span class=c1># Left join</span><span class=p>{[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>):</span> <span class=s1>'banana'</span><span class=p>,</span> <span class=p>[</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>]:</span> <span class=s1>'banana/orange'</span><span class=p>}</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=n>d2</span><span class=o>.</span><span class=n>domain</span><span class=p>()]</span>  <span class=c1># Right join</span><span class=p>{[</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>]:</span> <span class=s1>'banana/orange'</span><span class=p>,</span> <span class=p>(</span><span class=mi>2</span><span class=p>,</span><span class=mi>3</span><span class=p>]:</span> <span class=s1>'orange'</span><span class=p>}</span><span class=o>&gt;&gt;&gt;</span> <span class=n>d</span><span class=p>[</span><span class=n>d1</span><span class=o>.</span><span class=n>domain</span><span class=p>()</span> <span class=o>&amp;</span> <span class=n>d2</span><span class=o>.</span><span class=n>domain</span><span class=p>()]</span>  <span class=c1># Inner join</span><span class=p>{[</span><span class=mi>1</span><span class=p>,</span><span class=mi>2</span><span class=p>]:</span> <span class=s1>'banana/orange'</span><span class=p>}</span></pre><p>Finally, similarly to a <code>dict</code>, an <code>IntervalDict</code> also supports <code>len</code>, <code>in</code> and <code>del</code>, and defines<code>.clear</code>, <code>.copy</code>, <code>.update</code>, <code>.pop</code>, <code>.popitem</code>, and <code>.setdefault</code>.For convenience, one can export the content of an <code>IntervalDict</code> to a classical Python <code>dict</code> usingthe <code>as_dict</code> method. This method accepts an optional <code>atomic</code> parameter (whose default is <code>False</code>). When set to <code>True</code>, the keys of the resulting <code>dict</code> instance are atomic intervals.</p><p><a href=#table-of-contents rel=nofollow>\u2191 back to top</a></p><h3>Import &amp; export intervals to strings</h3><p>Intervals can be exported to string, either using <code>repr</code> (as illustrated above) or with the <code>to_string</code> function.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>to_string</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>closedopen</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>))</span><span class=s1>'[0,1)'</span></pre><p>The way string representations are built can be easily parametrized using the various parameters supported by<code>to_string</code>:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>params</span> <span class=o>=</span> <span class=p>{</span><span class=o>...</span>   <span class=s1>'disj'</span><span class=p>:</span> <span class=s1>' or '</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'sep'</span><span class=p>:</span> <span class=s1>' - '</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'left_closed'</span><span class=p>:</span> <span class=s1>'&lt;'</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'right_closed'</span><span class=p>:</span> <span class=s1>'&gt;'</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'left_open'</span><span class=p>:</span> <span class=s1>'..'</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'right_open'</span><span class=p>:</span> <span class=s1>'..'</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'pinf'</span><span class=p>:</span> <span class=s1>'+oo'</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'ninf'</span><span class=p>:</span> <span class=s1>'-oo'</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'conv'</span><span class=p>:</span> <span class=k>lambda</span> <span class=n>v</span><span class=p>:</span> <span class=s1>'\"</span><span class=si>{}</span><span class=s1>\"'</span><span class=o>.</span><span class=n>format</span><span class=p>(</span><span class=n>v</span><span class=p>),</span><span class=o>...</span> <span class=p>}</span><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>openclosed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>to_string</span><span class=p>(</span><span class=n>x</span><span class=p>,</span> <span class=o>**</span><span class=n>params</span><span class=p>)</span><span class=s1>'..\"0\" - \"1\"&gt; or &lt;\"2\" - +oo..'</span></pre><p>Similarly, intervals can be created from a string using the <code>from_string</code> function.A conversion function (<code>conv</code> parameter) has to be provided to convert a bound (as string) to a value.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>from_string</span><span class=p>(</span><span class=s1>'[0, 1]'</span><span class=p>,</span> <span class=n>conv</span><span class=o>=</span><span class=nb>int</span><span class=p>)</span> <span class=o>==</span> <span class=n>P</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>from_string</span><span class=p>(</span><span class=s1>'[1.2]'</span><span class=p>,</span> <span class=n>conv</span><span class=o>=</span><span class=nb>float</span><span class=p>)</span> <span class=o>==</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mf>1.2</span><span class=p>)</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=n>converter</span> <span class=o>=</span> <span class=k>lambda</span> <span class=n>s</span><span class=p>:</span> <span class=n>datetime</span><span class=o>.</span><span class=n>datetime</span><span class=o>.</span><span class=n>strptime</span><span class=p>(</span><span class=n>s</span><span class=p>,</span> <span class=s1>'%Y/%m/</span><span class=si>%d</span><span class=s1>'</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>from_string</span><span class=p>(</span><span class=s1>'[2011/03/15, 2013/10/10]'</span><span class=p>,</span> <span class=n>conv</span><span class=o>=</span><span class=n>converter</span><span class=p>)</span><span class=p>[</span><span class=n>datetime</span><span class=o>.</span><span class=n>datetime</span><span class=p>(</span><span class=mi>2011</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>15</span><span class=p>,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>),</span><span class=n>datetime</span><span class=o>.</span><span class=n>datetime</span><span class=p>(</span><span class=mi>2013</span><span class=p>,</span> <span class=mi>10</span><span class=p>,</span> <span class=mi>10</span><span class=p>,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>)]</span></pre><p>Similarly to <code>to_string</code>, function <code>from_string</code> can be parametrized to deal with more elaborated inputs.Notice that as <code>from_string</code> expects regular expression patterns, we need to escape some characters.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>s</span> <span class=o>=</span> <span class=s1>'..\"0\" - \"1\"&gt; or &lt;\"2\" - +oo..'</span><span class=o>&gt;&gt;&gt;</span> <span class=n>params</span> <span class=o>=</span> <span class=p>{</span><span class=o>...</span>   <span class=s1>'disj'</span><span class=p>:</span> <span class=s1>' or '</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'sep'</span><span class=p>:</span> <span class=s1>' - '</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'left_closed'</span><span class=p>:</span> <span class=s1>'&lt;'</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'right_closed'</span><span class=p>:</span> <span class=s1>'&gt;'</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'left_open'</span><span class=p>:</span> <span class=sa>r</span><span class=s1>'\\.\\.'</span><span class=p>,</span>  <span class=c1># from_string expects regular expression patterns</span><span class=o>...</span>   <span class=s1>'right_open'</span><span class=p>:</span> <span class=sa>r</span><span class=s1>'\\.\\.'</span><span class=p>,</span>  <span class=c1># from_string expects regular expression patterns</span><span class=o>...</span>   <span class=s1>'pinf'</span><span class=p>:</span> <span class=sa>r</span><span class=s1>'\\+oo'</span><span class=p>,</span>  <span class=c1># from_string expects regular expression patterns</span><span class=o>...</span>   <span class=s1>'ninf'</span><span class=p>:</span> <span class=s1>'-oo'</span><span class=p>,</span><span class=o>...</span>   <span class=s1>'conv'</span><span class=p>:</span> <span class=k>lambda</span> <span class=n>v</span><span class=p>:</span> <span class=nb>int</span><span class=p>(</span><span class=n>v</span><span class=p>[</span><span class=mi>1</span><span class=p>:</span><span class=o>-</span><span class=mi>1</span><span class=p>]),</span><span class=o>...</span> <span class=p>}</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>from_string</span><span class=p>(</span><span class=n>s</span><span class=p>,</span> <span class=o>**</span><span class=n>params</span><span class=p>)</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span> <span class=o>|</span> <span class=p>[</span><span class=mi>2</span><span class=p>,</span><span class=o>+</span><span class=n>inf</span><span class=p>)</span></pre><p>When a bound contains a comma or has a representation that cannot be automatically parsed with <code>from_string</code>,the <code>bound</code> parameter can be used to specify the regular expression that should be used to match its representation.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>s</span> <span class=o>=</span> <span class=s1>'[(0, 1), (2, 3)]'</span>  <span class=c1># Bounds are expected to be tuples</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>from_string</span><span class=p>(</span><span class=n>s</span><span class=p>,</span> <span class=n>conv</span><span class=o>=</span><span class=nb>eval</span><span class=p>,</span> <span class=n>bound</span><span class=o>=</span><span class=sa>r</span><span class=s1>'\\(.+?\\)'</span><span class=p>)</span><span class=p>[(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>),(</span><span class=mi>2</span><span class=p>,</span> <span class=mi>3</span><span class=p>)]</span></pre><p><a href=#table-of-contents rel=nofollow>\u2191 back to top</a></p><h3>Import &amp; export intervals to Python built-in data types</h3><p>Intervals can also be exported to a list of 4-uples with <code>to_data</code>, e.g., to support JSON serialization.<code>P.CLOSED</code> and <code>P.OPEN</code> are represented by Boolean values <code>True</code> (inclusive) and <code>False</code> (exclusive).</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>to_data</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>openclosed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>))</span><span class=p>[(</span><span class=kc>False</span><span class=p>,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=kc>True</span><span class=p>)]</span></pre><p>The values used to represent positive and negative infinities can be specified with<code>pinf</code> and <code>ninf</code>. They default to <code>float('inf')</code> and <code>float('-inf')</code> respectively.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>openclosed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>closedopen</span><span class=p>(</span><span class=mi>2</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>inf</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>to_data</span><span class=p>(</span><span class=n>x</span><span class=p>)</span><span class=p>[(</span><span class=kc>False</span><span class=p>,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=kc>True</span><span class=p>),</span> <span class=p>(</span><span class=kc>True</span><span class=p>,</span> <span class=mi>2</span><span class=p>,</span> <span class=n>inf</span><span class=p>,</span> <span class=kc>False</span><span class=p>)]</span></pre><p>The function to convert bounds can be specified with the <code>conv</code> parameter.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>closedopen</span><span class=p>(</span><span class=n>datetime</span><span class=o>.</span><span class=n>date</span><span class=p>(</span><span class=mi>2011</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>15</span><span class=p>),</span> <span class=n>datetime</span><span class=o>.</span><span class=n>date</span><span class=p>(</span><span class=mi>2013</span><span class=p>,</span> <span class=mi>10</span><span class=p>,</span> <span class=mi>10</span><span class=p>))</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>to_data</span><span class=p>(</span><span class=n>x</span><span class=p>,</span> <span class=n>conv</span><span class=o>=</span><span class=k>lambda</span> <span class=n>v</span><span class=p>:</span> <span class=p>(</span><span class=n>v</span><span class=o>.</span><span class=n>year</span><span class=p>,</span> <span class=n>v</span><span class=o>.</span><span class=n>month</span><span class=p>,</span> <span class=n>v</span><span class=o>.</span><span class=n>day</span><span class=p>))</span><span class=p>[(</span><span class=kc>True</span><span class=p>,</span> <span class=p>(</span><span class=mi>2011</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>15</span><span class=p>),</span> <span class=p>(</span><span class=mi>2013</span><span class=p>,</span> <span class=mi>10</span><span class=p>,</span> <span class=mi>10</span><span class=p>),</span> <span class=kc>False</span><span class=p>)]</span></pre><p>Intervals can be imported from such a list of 4-tuples with <code>from_data</code>.The same set of parameters can be used to specify how bounds and infinities are converted.</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>x</span> <span class=o>=</span> <span class=p>[(</span><span class=kc>True</span><span class=p>,</span> <span class=p>(</span><span class=mi>2011</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>15</span><span class=p>),</span> <span class=p>(</span><span class=mi>2013</span><span class=p>,</span> <span class=mi>10</span><span class=p>,</span> <span class=mi>10</span><span class=p>),</span> <span class=kc>False</span><span class=p>)]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>from_data</span><span class=p>(</span><span class=n>x</span><span class=p>,</span> <span class=n>conv</span><span class=o>=</span><span class=k>lambda</span> <span class=n>v</span><span class=p>:</span> <span class=n>datetime</span><span class=o>.</span><span class=n>date</span><span class=p>(</span><span class=o>*</span><span class=n>v</span><span class=p>))</span><span class=p>[</span><span class=n>datetime</span><span class=o>.</span><span class=n>date</span><span class=p>(</span><span class=mi>2011</span><span class=p>,</span> <span class=mi>3</span><span class=p>,</span> <span class=mi>15</span><span class=p>),</span><span class=n>datetime</span><span class=o>.</span><span class=n>date</span><span class=p>(</span><span class=mi>2013</span><span class=p>,</span> <span class=mi>10</span><span class=p>,</span> <span class=mi>10</span><span class=p>))</span></pre><p><a href=#table-of-contents rel=nofollow>\u2191 back to top</a></p><h3>Specialize &amp; customize intervals</h3><p><strong>Disclaimer</strong>: the features explained in this section are still experimental and are subject to backward incompatible changes even in minor or patch updates of <code>portion</code>.</p><p>The intervals provided by <code>portion</code> already cover a wide range of use cases.However, in some situations, it might be interesting to specialize or customize these intervals.One typical example would be to support discrete intervals such as intervals of integers.</p><p>While it is definitely possible to rely on the default intervals provided by <code>portion</code> to encode discreteintervals, there are a few edge cases that lead some operations to return unexpected results:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>0</span><span class=p>)</span> <span class=o>|</span> <span class=n>P</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>1</span><span class=p>)</span>  <span class=c1># Case 1: should be [0,1] for discrete numbers</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span> <span class=o>|</span> <span class=p>[</span><span class=mi>1</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span>  <span class=c1># Case 2: should be empty</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>P</span><span class=o>.</span><span class=n>closedopen</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span>  <span class=c1># Case 3: should be singleton [0]</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>)</span></pre><p>The <code>portion</code> library makes its best to ease defining and using subclasses of <code>Interval</code> to addressthese situations. In particular, <code>Interval</code> instances always produce new intervals using <code>self.__class__</code>, and the class is written in a way that most of its methods can be easily extended.</p><p>To implement a class for intervals of discrete numbers and to cover the three aforementioned cases, we need to change the behaviour of the <code>Interval._mergeable</code> class method (to address first case) and of the <code>Interval.from_atomic</code> class method (for cases 2 and 3).The former is used to detect whether two atomic intervals can be merged into a single interval, while the latter is used to create atomic intervals.</p><p>Thankfully, since discrete intervals are expected to be a frequent use case, <code>portion</code> provides an <code>AbstractDiscreteInterval</code> class that already makes the appropriate changes to these two methods.As indicated by its name, this class cannot be used directly and should be inherited.In particular, one has either to provide a <code>_step</code> class attribute to define the step between consecutive discrete values, or to define the <code>_incr</code> and <code>_decr</code> class methods:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=k>class</span> <span class=nc>IntInterval</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>AbstractDiscreteInterval</span><span class=p>):</span><span class=o>...</span>     <span class=n>_step</span> <span class=o>=</span> <span class=mi>1</span></pre><p>That's all!We can now use this class to manipulate intervals of discrete numbers and see it covers the three problematic cases:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>IntInterval</span><span class=o>.</span><span class=n>from_atomic</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>CLOSED</span><span class=p>,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>0</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>CLOSED</span><span class=p>)</span> <span class=o>|</span> <span class=n>IntInterval</span><span class=o>.</span><span class=n>from_atomic</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>CLOSED</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>CLOSED</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>IntInterval</span><span class=o>.</span><span class=n>from_atomic</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>OPEN</span><span class=p>,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>OPEN</span><span class=p>)</span><span class=p>()</span><span class=o>&gt;&gt;&gt;</span> <span class=n>IntInterval</span><span class=o>.</span><span class=n>from_atomic</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>CLOSED</span><span class=p>,</span> <span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>OPEN</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span></pre><p>As an example of using <code>_incr</code> and <code>_decr</code>, consider the following <code>CharInterval</code> subclass tailored to manipulate intervals of characters:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=k>class</span> <span class=nc>CharInterval</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>AbstractDiscreteInterval</span><span class=p>):</span><span class=o>...</span>     <span class=n>_incr</span> <span class=o>=</span> <span class=k>lambda</span> <span class=n>v</span><span class=p>:</span> <span class=nb>chr</span><span class=p>(</span><span class=nb>ord</span><span class=p>(</span><span class=n>v</span><span class=p>)</span> <span class=o>+</span> <span class=mi>1</span><span class=p>)</span><span class=o>...</span>     <span class=n>_decr</span> <span class=o>=</span> <span class=k>lambda</span> <span class=n>v</span><span class=p>:</span> <span class=nb>chr</span><span class=p>(</span><span class=nb>ord</span><span class=p>(</span><span class=n>v</span><span class=p>)</span> <span class=o>-</span> <span class=mi>1</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>CharInterval</span><span class=o>.</span><span class=n>from_atomic</span><span class=p>(</span><span class=n>P</span><span class=o>.</span><span class=n>OPEN</span><span class=p>,</span> <span class=s1>'a'</span><span class=p>,</span> <span class=s1>'z'</span><span class=p>,</span> <span class=n>P</span><span class=o>.</span><span class=n>OPEN</span><span class=p>)</span><span class=p>[</span><span class=s1>'b'</span><span class=p>,</span><span class=s1>'y'</span><span class=p>]</span></pre><p>Having to call <code>from_atomic</code> on the subclass to create intervals is quite verbose.For convenience, all the functions that create interval instances accept an additional <code>klass</code> parameter to specify the class that creates intervals, circumventing the direct use of the class constructors.However, having to specify the <code>klass</code> parameter in each call to <code>P.closed</code> or other helpers that create intervals is still a bit too verbose to be convenient.Consequently, <code>portion</code> provides a <code>create_api</code> function that, given a subclass of <code>Interval</code>, returns a dynamically generated module whose API is similar to the one of <code>portion</code> but configured to use the subclass instead:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>D</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>create_api</span><span class=p>(</span><span class=n>IntInterval</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>D</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>0</span><span class=p>)</span> <span class=o>|</span> <span class=n>D</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mi>1</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>D</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=p>()</span><span class=o>&gt;&gt;&gt;</span> <span class=n>D</span><span class=o>.</span><span class=n>closedopen</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>]</span></pre><p>This makes it easy to use our newly defined <code>IntInterval</code> subclass while still benefiting from <code>portion</code>'s API.</p><p>Let's extend our example to support intervals of natural numbers.Such intervals are quite similar to the above ones, except they cannot go over negative values.We can prevent the bounds of an interval to be negative by slightly changing the <code>from_atomic</code> class method as follows:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=k>class</span> <span class=nc>NaturalInterval</span><span class=p>(</span><span class=n>IntInterval</span><span class=p>):</span><span class=o>...</span>    <span class=nd>@classmethod</span><span class=o>...</span>    <span class=k>def</span> <span class=nf>from_atomic</span><span class=p>(</span><span class=bp>cls</span><span class=p>,</span> <span class=n>left</span><span class=p>,</span> <span class=n>lower</span><span class=p>,</span> <span class=n>upper</span><span class=p>,</span> <span class=n>right</span><span class=p>):</span><span class=o>...</span>        <span class=k>return</span> <span class=nb>super</span><span class=p>()</span><span class=o>.</span><span class=n>from_atomic</span><span class=p>(</span><span class=o>...</span>            <span class=n>P</span><span class=o>.</span><span class=n>CLOSED</span> <span class=k>if</span> <span class=n>lower</span> <span class=o>&lt;</span> <span class=mi>0</span> <span class=k>else</span> <span class=n>left</span><span class=p>,</span><span class=o>...</span>            <span class=nb>max</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=n>lower</span><span class=p>),</span><span class=o>...</span>            <span class=n>upper</span><span class=p>,</span><span class=o>...</span>            <span class=n>right</span><span class=p>,</span><span class=o>...</span>        <span class=p>)</span></pre><p>We can now define and use the <code>N</code> module to check whether our newly defined <code>NaturalInterval</code> does the job:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>N</span> <span class=o>=</span> <span class=n>P</span><span class=o>.</span><span class=n>create_api</span><span class=p>(</span><span class=n>NaturalInterval</span><span class=p>)</span><span class=o>&gt;&gt;&gt;</span> <span class=n>N</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=o>-</span><span class=mi>10</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>2</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=n>N</span><span class=o>.</span><span class=n>open</span><span class=p>(</span><span class=o>-</span><span class=mi>10</span><span class=p>,</span> <span class=mi>2</span><span class=p>)</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=mi>1</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=o>~</span><span class=n>N</span><span class=o>.</span><span class=n>empty</span><span class=p>()</span><span class=p>[</span><span class=mi>0</span><span class=p>,</span><span class=o>+</span><span class=n>inf</span><span class=p>)</span></pre><p>Keep in mind that just because <code>NaturalInterval</code> has semantics associated with natural numbers does not mean that all possible operations on these intervals strictly comply the semantics.The following examples illustrate some of the cases where additional checks should be implemented to strictly adhere to these semantics:</p><pre lang=python3><span class=o>&gt;&gt;&gt;</span> <span class=n>N</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mf>1.5</span><span class=p>,</span> <span class=mf>2.5</span><span class=p>)</span>  <span class=c1># Bounds are not natural numbers</span><span class=p>[</span><span class=mf>1.5</span><span class=p>,</span><span class=mf>2.5</span><span class=p>]</span><span class=o>&gt;&gt;&gt;</span> <span class=mf>0.5</span> <span class=ow>in</span> <span class=n>N</span><span class=o>.</span><span class=n>closed</span><span class=p>(</span><span class=mi>0</span><span class=p>,</span> <span class=mi>1</span><span class=p>)</span>  <span class=c1># Given value is not a natural number</span><span class=kc>True</span><span class=o>&gt;&gt;&gt;</span> <span class=o>~</span><span class=n>N</span><span class=o>.</span><span class=n>singleton</span><span class=p>(</span><span class=mf>0.5</span><span class=p>)</span><span class=p>[</span><span class=mf>1.5</span><span class=p>,</span><span class=o>+</span><span class=n>inf</span><span class=p>)</span></pre><p><a href=#table-of-contents rel=nofollow>\u2191 back to top</a></p><h2>Changelog</h2><p>This library adheres to a <a href=\"https://semver.org\" rel=nofollow>semantic versioning</a> scheme.See <a href=\"https://github.com/AlexandreDecan/portion/blob/master/CHANGELOG.md\" rel=nofollow>CHANGELOG.md</a> for the list of changes.</p><h2>Contributions</h2><p>Contributions are very welcome!Feel free to report bugs or suggest new features using GitHub issues and/or pull requests.</p><h2>License</h2><p>Distributed under <a href=\"https://github.com/AlexandreDecan/portion/blob/master/LICENSE.txt\" rel=nofollow>LGPLv3 - GNU Lesser General Public License, version 3</a>.</p><p>You can refer to this library using:</p><pre><code>@software{portion,  author = {Decan, Alexandre},  title = {portion: Python data structure and operations for intervals},  url = {https://github.com/AlexandreDecan/portion},}</code></pre>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"https://github.com/AlexandreDecan/portion\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/portion\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> GNU Lesser General Public License v3 (LGPLv3) (LGPLv3)</p>    <p><strong>Author:</strong> Alexandre Decan</p>  <p class=\"tags\">    <i class=\"fa fa-tags\" aria-hidden=\"true\"></i>    <span class=\"sr-only\">Tags</span>    <span class=\"package-keyword\">      interval,    </span>    <span class=\"package-keyword\">      operation,    </span>    <span class=\"package-keyword\">      range,    </span>    <span class=\"package-keyword\">      math    </span>  </p>  <p>    <strong>Requires:</strong> Python ~= 3.7  </p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/AlexandreDecan/\" aria-label=\"AlexandreDecan\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/c0e874dbaad3d3919730184b133af321ff90a2c0/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f34313137376538353237383534306162366330663037626132306338373935303f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for AlexandreDecan from gravatar.com\" title=\"Avatar for AlexandreDecan from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            AlexandreDecan          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Education\">            Education          </a>        </li>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Information+Technology\">            Information Technology          </a>        </li>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Science%2FResearch\">            Science/Research          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+GNU+Lesser+General+Public+License+v3+%28LGPLv3%29\">            OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3+%3A%3A+Only\">            Python :: 3 :: Only          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11\">            Python :: 3.11          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.12\">            Python :: 3.12          </a>        </li>      </ul>    </li>    <li>      <strong>Topic</strong>      <ul>        <li>          <a href=\"/search/?c=Topic+%3A%3A+Scientific%2FEngineering+%3A%3A+Mathematics\">            Scientific/Engineering :: Mathematics          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/portion/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.4.2/\">                <p class=\"release__version\">                  2.4.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-12-06T08:33:07+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 6, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.4.1/\">                <p class=\"release__version\">                  2.4.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-07-19T07:30:31+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 19, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.4.0/\">                <p class=\"release__version\">                  2.4.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-03-13T16:12:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 13, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.3.1/\">                <p class=\"release__version\">                  2.3.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2023-01-28T13:23:51+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 28, 2023</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.3.0/\">                <p class=\"release__version\">                  2.3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-08-31T08:42:11+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 31, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.2.0/\">                <p class=\"release__version\">                  2.2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-09-14T07:12:13+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 14, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.1.6/\">                <p class=\"release__version\">                  2.1.6                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-04-17T14:34:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Apr 17, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.1.5/\">                <p class=\"release__version\">                  2.1.5                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-02-28T10:25:44+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 28, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.1.4/\">                <p class=\"release__version\">                  2.1.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-11-26T10:59:28+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 26, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.1.3.post1/\">                <p class=\"release__version\">                  2.1.3.post1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-11-13T08:44:10+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Nov 13, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.1.3/\">                <p class=\"release__version\">                  2.1.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-09-18T15:56:46+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 18, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.1.2/\">                <p class=\"release__version\">                  2.1.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-09-16T12:08:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Sep 16, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.1.1/\">                <p class=\"release__version\">                  2.1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-08-21T11:54:31+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 21, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.1.0/\">                <p class=\"release__version\">                  2.1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-08-09T08:54:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 9, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.0.2/\">                <p class=\"release__version\">                  2.0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-05-09T09:55:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 9, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.0.1/\">                <p class=\"release__version\">                  2.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-03-15T09:17:56+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 15, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.0.0/\">                <p class=\"release__version\">                  2.0.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-03-06T12:57:45+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 6, 2020</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/portion/2.0.0rc1/\">                <p class=\"release__version\">                  2.0.0rc1                  <span class=\"badge badge--warning\">pre-release                  </span>                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-03-06T11:10:39+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 6, 2020</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/94/61/002fdbc86a02ecdb01c36e5a1236246599b3e14be2caa523c58cf7eee76f/portion-2.4.2.tar.gz\">          portion-2.4.2.tar.gz        </a>        (53.0 kB        <a href=\"#copy-hash-modal-dfb5d98e-e559-4e8e-8938-b3fdf34692e0\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-12-06T08:33:09+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 6, 2023</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/46/64/d174dfb0aea9bd846192c0e7dfbd9bf165713fdbb2ca7ca3c217133508a0/portion-2.4.2-py3-none-any.whl\">          portion-2.4.2-py3-none-any.whl        </a>        (27.7 kB        <a href=\"#copy-hash-modal-0f2674fa-e32a-49ec-b764-bf5e70658cd1\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2023-12-06T08:33:07+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 6, 2023</time>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-dfb5d98e-e559-4e8e-8938-b3fdf34692e0\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for portion-2.4.2.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for portion-2.4.2.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">5289b40d98959b16b3f6927781678935d3df1b7c14947f5d7778e5e04dd9a065</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">be59f7c68fea4c2232a798d9a347ea82</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">9461002fdbc86a02ecdb01c36e5a1236246599b3e14be2caa523c58cf7eee76f</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-0f2674fa-e32a-49ec-b764-bf5e70658cd1\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for portion-2.4.2-py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for portion-2.4.2-py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">17f0388d7df3488313ac527d8da9542d2c1329dfefb8793a77ad2dfc97596051</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">ff6e6cb98050680250db9197bf62b8c4</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">4664d174dfb0aea9bd846192c0e7dfbd9bf165713fdbb2ca7ca3c217133508a0</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
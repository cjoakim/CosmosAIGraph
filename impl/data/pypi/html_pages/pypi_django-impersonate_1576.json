{
  "libtype": "pypi",
  "libname": "django-impersonate",
  "url": "https://code.netlandish.com/~petersanchez/django-impersonate",
  "html": "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"utf8\"/><meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/><title>django-impersonate: Simple app to allow superusers to login as other (non-superuser) accounts via a quick user switch process.</title><link href=\"/static/logo.svg\" rel=\"icon\" type=\"image/svg+xml\"/><link href=\"/static/logo.png\" rel=\"icon\" sizes=\"any\" type=\"image/png\"/><link href=\"/static/main.min.84a14117.css\" rel=\"stylesheet\"/></head><body><nav class=\"container navbar navbar-light navbar-expand-sm\"><span class=\"navbar-brand\"><span aria-hidden=\"true\" class=\"icon icon-circle\"><svg height=\"22\" viewbox=\"0 0 512 512\" width=\"22\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200z\"></path></svg></span><a href=\"https://code.netlandish.com\">    netlandish  </a></span><ul class=\"navbar-nav\"></ul><div class=\"login\"><span class=\"navbar-text\"><a href=\"https://meta.code.netlandish.com/oauth/authorize?client_id=480880452120e165&amp;scopes=profile&amp;state=%2F~petersanchez%2Fdjango-impersonate%2F%3F\" rel=\"nofollow\">Log in</a>    \u2014    <a href=\"https://meta.code.netlandish.com\">Register</a></span></div></nav><div class=\"header-tabbed\"><div class=\"container\"><h2><a href=\"/~petersanchez/\">~petersanchez</a>/<wbr/>django-impersonate</h2><ul class=\"nav nav-tabs\"><li class=\"nav-item\"><a class=\"nav-link active\" href=\"/~petersanchez/django-impersonate/\">summary</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"https://hg.code.netlandish.com/~petersanchez/django-impersonate\">source</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"https://lists.code.netlandish.com/~petersanchez/public-inbox\">mailing list</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"https://todo.code.netlandish.com/~petersanchez/django-impersonate\">tickets</a></li></ul></div></div><div class=\"header-extension\"><div class=\"container\">Simple app to allow superusers to login as other (non-superuser) accounts via a quick user switch process.</div></div><div class=\"container\"><div class=\"row\"><div class=\"col-md-12\"><div class=\"event-list project-events\"><div class=\"event\"><style>.highlight { background: inherit; }</style><div class=\"markdown\"><p><a href=\"https://lists.code.netlandish.com/~petersanchez/public-inbox/%3Cw2dyikpur44pkobl3sxrr5b2bw3dyugm3nn5mgaxu27vjgo4nl%407skn6iloe6hw%3E\" rel=\"nofollow noopener\">Re: [PATCH gohome] Fix typo in README</a></p></div><style>.highlight { background: inherit; }</style><div class=\"markdown\"><p><a href=\"https://lists.code.netlandish.com/~petersanchez\" rel=\"nofollow noopener\">~petersanchez</a> via <a href=\"https://lists.code.netlandish.com/~petersanchez/public-inbox\" rel=\"nofollow noopener\">public-inbox</a></p></div><small class=\"text-muted\"><span title=\"2024-01-16 13:25:27 UTC\">a month ago</span></small></div><div class=\"event\"><style>.highlight { background: inherit; }</style><div class=\"markdown\"><p><a href=\"https://lists.code.netlandish.com/~petersanchez/public-inbox/%3C20240115194714.23047-1-aiden%40fox-ivey.com%3E\" rel=\"nofollow noopener\">[PATCH gohome] Fix typo in README</a></p></div><style>.highlight { background: inherit; }</style><div class=\"markdown\"><p>Aiden Fox Ivey via <a href=\"https://lists.code.netlandish.com/~petersanchez/public-inbox\" rel=\"nofollow noopener\">public-inbox</a></p></div><small class=\"text-muted\"><span title=\"2024-01-15 19:54:55 UTC\">a month ago</span></small></div><div class=\"view-more\"><a class=\"btn btn-link\" href=\"/~petersanchez/django-impersonate/feed\">View project feed\u00a0<span aria-hidden=\"true\" class=\"icon icon-caret-right\"><svg viewbox=\"0 0 192 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"></path></svg></span></a><a class=\"btn btn-link\" href=\"/~petersanchez/django-impersonate/feed.rss\">RSS\u00a0<span aria-hidden=\"true\" class=\"icon icon-caret-right\"><svg viewbox=\"0 0 192 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"></path></svg></span></a></div></div></div></div><div class=\"row\"><div class=\"col-md-10 project-summary\"><div class=\"readme\"><style>.highlight { background: inherit; }</style><div class=\"markdown\"><h3 id=\"django-impersonate-a-hrefhttpwwwnetlandishcomimg-srchttpsimgshieldsiobadge10025-netlandish-bluesvgstylesquare-flat-altnlshield-a\"><a href=\"#django-impersonate-a-hrefhttpwwwnetlandishcomimg-srchttpsimgshieldsiobadge10025-netlandish-bluesvgstylesquare-flat-altnlshield-a\" rel=\"nofollow noopener\">#</a>django-impersonate <a href=\"http://www.netlandish.com\" rel=\"nofollow noopener\"><img alt=\"nlshield\" src=\"https://img.shields.io/badge/100%25-Netlandish-blue.svg?style=square-flat\"/></a></h3><p>Simple application to allow superusers to \"impersonate\" other non-superuser accounts.</p><p><strong>Version:</strong> 1.9.1</p><p><strong>Project Links:</strong> <a href=\"https://todo.code.netlandish.com/~petersanchez/django-impersonate\" rel=\"nofollow noopener\">Issues</a> - <a href=\"https://lists.code.netlandish.com/~petersanchez/public-inbox\" rel=\"nofollow noopener\">Mailing List</a> -<a href=\"#contributing\" rel=\"nofollow noopener\">Contributing</a></p><p><strong>Author:</strong> Peter Sanchez (<a href=\"https://petersanchez.com\" rel=\"nofollow noopener\">https://petersanchez.com</a>)</p><h2 id=\"python--django-support\"><a href=\"#python--django-support\" rel=\"nofollow noopener\">#</a>Python / Django Support</h2><ul><li>Python 3.7+ for Django versions 2.2+</li></ul><p><strong>Note:</strong> As of version 1.4 we are only officially supporting Pythonand Django versions that are supported by the official projects. So if a Pythonor Django version is End-of-Life'd, then we will no longer support thatversion either.</p><h2 id=\"dependencies\"><a href=\"#dependencies\" rel=\"nofollow noopener\">#</a>Dependencies</h2><ul><li>Depends on your project using the django.contrib.session framework.</li></ul><p><strong>NOTE:</strong></p><ul><li><strong>Version 1.6</strong> has officially removed support for the old settings format.Please see the <a href=\"#settings\" rel=\"nofollow noopener\">settings</a> section for how settings should beconfigured.</li><li><strong>Version 1.5 is now only officially supporting Django's 1.11, 2.2,and 3.0</strong></li><li><strong>Version 1.4 is now officially supporting Python 3.6+ and Django1.11+</strong></li><li><strong>Version 1.3 adds a settings format change.</strong> Please see theSettings section for details.</li><li><strong>Version 1.0 adds new functionality by default.</strong> Please see the<code>DISABLE_LOGGING</code> settings option.</li><li>If you need to use this with Django older than 1.8, please useversion django-impersonate == 1.0.1</li><li>If you need to use this with Django older than 1.7, please useversion django-impersonate == 0.9.2</li><li><strong>Version 0.9.2 partially reverts work completed in version 0.9.1.</strong>This is because work done to address a request in <a href=\"https://bitbucket.org/petersanchez/django-impersonate/issues/17/remember-where-to-return-to-after\" rel=\"nofollow noopener\">Issue#17</a>broke default behavior for all previous versions. <a href=\"https://bitbucket.org/petersanchez/django-impersonate/issues/24/impersonate_redirect_url-no-longer-works\" rel=\"nofollow noopener\">Issue#24</a>was opened and the fix was released in 0.9.2 to address it. Pleasesee the new <code>USE_HTTP_REFERER</code> settings option.</li><li>If you need to use this with Django older than 1.4, please useversion django-impersonate == 0.5.3</li></ul><h2 id=\"installation\"><a href=\"#installation\" rel=\"nofollow noopener\">#</a>Installation</h2><p>PIP:</p><pre><code>pip install django-impersonate</code></pre><p>Basic Manual Install:</p><pre><code>$ python setup.py build$ sudo python setup.py install</code></pre><p>Alternative Install (Manually):</p><p>Place impersonate directory in your Python path. Either in your Pythoninstalls site-packages directory or set your $PYTHONPATH environmentvariable to include a directory where the impersonate directory lives.</p><h2 id=\"use\"><a href=\"#use\" rel=\"nofollow noopener\">#</a>Use</h2><ol><li><p>Add <code>impersonate</code> to your INSTALLED_APPS</p></li><li><p>Add <code>impersonate.middleware.ImpersonateMiddleware</code> to your<code>MIDDLEWARE</code> setting.</p></li><li><p>Add <code>impersonate.urls</code> somewhere in your url structure. Example:</p><pre><code>urlpatterns = patterns('',    url(r'^admin/', include(admin.site.urls)),    url(r'^impersonate/', include('impersonate.urls')),    ... (all your other urls here) ...)</code></pre></li></ol><p><strong>Note:</strong> The <code>ImpersonationMiddleware</code> class should be placed AFTER the<code>django.contrib.auth.*</code> middleware classes</p><h2 id=\"functionality\"><a href=\"#functionality\" rel=\"nofollow noopener\">#</a>Functionality</h2><p><strong>You can now impersonate another user by hitting the following path:</strong></p><pre><code>/impersonate/&lt;user-id&gt;/</code></pre><p>Replace &lt;user-id&gt; with the user id of the user you want toimpersonate.</p><p>While in impersonation \"mode\" the <code>request.user</code> object will have an<code>is_impersonate</code> attribute set to <code>True</code> as well as <code>impersonator</code> (and also<code>request.impersonator</code>) set to the original user. So if you wanted to check inyour templates or view, you just do something like...:</p><pre><code>{% if user.is_impersonate %} .... {% endif %}</code></pre><p>The original user is available as <code>user.impersonator</code> or<code>request.impersonator</code>:</p><pre><code>{{ request.user }} ({{ request.impersonator }})</code></pre><p>The real user is available as <code>request.real_user</code> - this is equivalentto calling <code>getattr(request, 'impersonator', request.user)</code>:</p><pre><code>assert request.real_user == getattr(request, 'impersonator', request.user)</code></pre><p>You can reference this URL with <code>reverse</code> or the <code>{% url %}</code> template tagas <code>impersonate-start</code> and expects the argument of the user ID. Example:</p><pre><code>reverse('impersonate-start', args=[user.id])reverse('impersonate-start', uid=user.id)</code></pre><p><strong>To remove the impersonation, hit the following path:</strong></p><pre><code>/impersonate/stop/</code></pre><p>You can reference this URL with <code>reverse</code> or the <code>{% url %}</code> template tagas <code>impersonate-stop</code>. When you call this URL, you will be redirected tothe page that you used to start impersonating a user (eg, some searchresults or the user list).</p><p><strong>To list all users you can go to:</strong></p><pre><code>/impersonate/list/</code></pre><p>This will render the template <code>impersonate/list_users.html</code> and willpass the following in the context:</p><ul><li><code>users</code> - queryset of all users</li><li><code>paginator</code> - Django Paginator instance</li><li><code>page</code> - Current page of objects (from Paginator)</li><li><code>page_number</code> - Current page number, defaults to 1</li></ul><p>You can reference this URL with <code>reverse</code> or the <code>{% url %}</code> template tagas <code>impersonate-list</code>.</p><p><strong>To search all users you can go to:</strong></p><pre><code>/impersonate/search/</code></pre><p>This will render the template 'impersonate/search_users.html' and willpass the following in the context:</p><ul><li><code>users</code> - queryset of all users</li><li><code>paginator</code> - Django Paginator instance</li><li><code>page</code> - Current page of objects (from Paginator)</li><li><code>page_number</code> - Current page number, defaults to 1</li><li><code>query</code> - The search query that was entered</li></ul><p>The view will expect a GET request and look for the <code>q</code> variable beingpassed. If present, it will search the user entries with the value of<code>q</code>. The default fields searched are:</p><p><code>User.username</code>, <code>User.first_name</code>, <code>User.last_name</code>, <code>User.email</code></p><p>You can reference this URL with <code>reverse</code> or the <code>{% url %}</code> template tagas <code>impersonate-search</code>.</p><p><strong>To allow some users to impersonate other users</strong></p><p>You can optionally allow only some non-superuser and non-staff users toimpersonate by adding a <code>CUSTOM_ALLOW</code> setting option. Create afunction that takes a request object, and based on your rules, returns<code>True</code> if the user is allowed to impersonate or not.</p><p><strong>To limit what users a user can impersonate</strong></p><p>By, optionally, setting the <code>CUSTOM_USER_QUERYSET</code> option you cancontrol what users can be impersonated. It takes a request object of theuser, and returns a QuerySet of users. This is used when searching forusers to impersonate, when listing what users to impersonate, and whentrying to start impersonation.</p><h2 id=\"signals\"><a href=\"#signals\" rel=\"nofollow noopener\">#</a>Signals</h2><p>If you wish to hook into the impersonation session (for instance, inorder to audit access), there are two signals that are fired bydjango-impersonate, at the beginning and end of a session:</p><ul><li><code>session_begin</code> - sent when calling the <code>impersonate</code> view</li><li><code>session_end</code> - sent when calling the <code>stop_impersonate</code> view</li></ul><p>Both of these signals send the same arguments:</p><ul><li><code>sender</code> - this is a Django signal requirement, and is always set toNone</li><li><code>impersonator</code> - a reference to the User object of the person doingthe impersonation</li><li><code>impersonating</code> - a reference to the User object of the person beingimpersonated</li><li><code>request</code> - the Django HttpRequest object from which the impersonationwas invoked</li></ul><p>The request object is included as it contains pertinent information thatyou may wish to audit - such as client IP address, user-agent string,etc.</p><p>For an example of how to hook up the signals, see the relevant test -<code>test_successful_impersonation_signals</code>.</p><p>The <code>session_end</code> signal will only be fired if the impersonatorexplicitly ends the session.</p><h2 id=\"settings\"><a href=\"#settings\" rel=\"nofollow noopener\">#</a>Settings</h2><p>The following settings are available for django-impersonate. Allsettings should be set as variables in a dictionary assigned to theattribute named <code>IMPERSONATE</code>.</p><p>For example:</p><pre><code>IMPERSONATE = {    'REDIRECT_URL': '/some-path/',    'PAGINATE_COUNT': 10,}</code></pre><p>Here are the options available...</p><pre><code>REDIRECT_URL</code></pre><p>This is the URL you want to be redirected to <em>after</em> you have chosen toimpersonate another user. If this is not present it will check for the<code>LOGIN_REDIRECT_URL</code> setting and fall back to '/' if neither is present.Value should be a string containing the redirect path.</p><pre><code>READ_ONLY</code></pre><p>A boolean that if set to <code>True</code> any requests that are not either <code>GET</code> or<code>HEAD</code> or <code>OPTIONS</code> will result in a \"Bad Request\" response (status code 405).Use this if you want to limit your impersonating users to read onlyimpersonation sessions.</p><p>Value should be a boolean, defaults to <code>False</code></p><p>If the <code>CUSTOM_READ_ONLY</code> is set, then that custom function is used, and thissetting is ignored.</p><pre><code>CUSTOM_READ_ONLY</code></pre><p>A string that represents a function (e.g. <code>module.submodule.mod.function_name</code>)that allows more fine grained control over who has read only access. It takesone argument, the request object, and should return True to restrict the userto only allow <code>GET</code>, <code>HEAD</code> and <code>OPTIONS</code> requests.</p><p>It is optional, and if it is not present, <code>READ_ONLY</code> setting value applies.</p><pre><code>USE_HTTP_REFERER</code></pre><p>If this is set to <code>True</code>, then the app will attempt to be redirect you tothe URL you were at when the impersonation began once you have <em>stopped</em>the impersonation. For example, if you were at the url '/foo/bar/' whenyou began impersonating a user, once you end the impersonation, you willbe redirected back to '/foo/bar/' instead of the value in <code>REDIRECT_URL</code>.</p><p>Value should be a boolean, defaults to <code>False</code></p><pre><code>PAGINATE_COUNT</code></pre><p>This is the number of users to paginate by when using the list or searchviews. This defaults to 20. Value should be an integer.</p><pre><code>REQUIRE_SUPERUSER</code></pre><p>If this is set to <code>True</code>, then only users who have <code>is_superuser</code> set to<code>True</code> will be allowed to impersonate other users. Default is <code>False</code>. If<code>False</code>, then any <code>is_staff</code> user will be able to impersonate otherusers.</p><p><strong>Note:</strong> Regardless of this setting, a <code>is_staff</code> user will <strong>not</strong> beallowed to impersonate a <code>is_superuser</code> user.</p><p>Value should be a boolean</p><p>If the <code>CUSTOM_ALLOW</code> is set, then that custom function is used, and thissetting is ignored.</p><pre><code>ALLOW_SUPERUSER</code></pre><p>By default, superusers cannot be impersonated; this setting allows forthat.</p><p><strong>Note:</strong> Even when this is true, only superusers can impersonate othersuperusers, regardless of the value of REQUIRE_SUPERUSER.</p><p>Value should be a boolean and the default is <code>False</code>.</p><pre><code>URI_EXCLUSIONS</code></pre><p>Set to a list/tuple of url patterns that, if matched, user impersonationis not completed. It defaults to:</p><pre><code>(r'^admin/',)</code></pre><p>If you do not want to use even the default exclusions then set thesetting to an empty list/tuple.</p><pre><code>CUSTOM_USER_QUERYSET</code></pre><p>A string that represents a function (e.g.<code>module.submodule.mod.function_name</code>) that allows more fine grainedcontrol over what users a user can impersonate. It takes one argument,the request object, and should return a QuerySet. Only the users in thisqueryset can be impersonated.</p><p>This function will not be called when the request has an unauthorisedusers, and will only be called when the user is allowed to impersonate(cf. <code>REQUIRE_SUPERUSER</code> and <code>CUSTOM_ALLOW</code>).</p><p>Regardless of what this function returns, a user cannot impersonate asuperuser, even if there are superusers in the returned QuerySet.</p><p>It is optional, and if it is not present, the user can impersonate anyuser (i.e. the default is <code>User.objects.all()</code>).</p><pre><code>CUSTOM_ALLOW</code></pre><p>A string that represents a function (e.g.<code>module.submodule.mod.function_name</code>) that allows more fine grainedcontrol over who can use the impersonation. It takes one argument, therequest object, and should return True to allow impersonation. Regardlessof this setting, the user must be logged in to impersonate. If thissetting is used, <code>REQUIRE_SUPERUSER</code> is ignored.</p><p>It is optional, and if it is not present, the previous rules aboutsuperuser and <code>REQUIRE_SUPERUSER</code> apply.</p><pre><code>REDIRECT_FIELD_NAME</code></pre><p>A string that represents the name of a request (GET) parameter whichcontains the URL to redirect to after impersonating a user. This can beused to redirect to a custom page after impersonating a user. Example:</p><pre><code># in settings.pyIMPERSONATE = {'REDIRECT_FIELD_NAME': 'next'}# in your template&lt;a href=\"{% url 'impersonate-list' %}?next=/some/url/\"&gt;switch user&lt;/a&gt;</code></pre><p>To return always to the current page after impersonating a user, userequest.path:</p><pre><code>`&lt;a href=\"{% url 'impersonate-list' %}?next={{request.path}}\"&gt;switch user&lt;/a&gt;`</code></pre><p>Each use case is different so obviously set the next value to whatever yourcase requires.</p><pre><code>SEARCH_FIELDS</code></pre><p>Array of user model fields used for building searching query. Defaultvalue is [<code>User.USERNAME_FIELD</code>, <code>first_name</code>, <code>last_name</code>, <code>email</code>].If the User model doesn't have the <code>USERNAME_FIELD</code> attribute, it fallsback to 'username' (&lt; Django 1.5).</p><pre><code>LOOKUP_TYPE</code></pre><p>A string that represents SQL lookup type for searching users by query onfields above. It is <code>icontains</code> by default.</p><pre><code>DISABLE_LOGGING</code></pre><p>A boolean that can be used to disable the logging of impersonationsessions. By default each impersonation <code>session_begin</code> signal willcreate a new <code>ImpersonationLog</code> object, which is closed out (durationcalculated) at the corresponding <code>session_end</code> signal.</p><p>It is optional, and defaults to False (i.e. logging is enabled).</p><pre><code>MAX_FILTER_SIZE</code></pre><p>The max number of items acceptable in the admin list filters. If thenumber of items exceeds this, then the filter list is the size of the settingsvalue. This is used by the \"Filter by impersonator\" filter.</p><p>It is optional, and defaults to 100.</p><pre><code>ADMIN_DELETE_PERMISSION</code></pre><p>A boolean to enable/disable deletion of impersonation logs in the Django admin.</p><p>Default is <code>False</code></p><pre><code>ADMIN_ADD_PERMISSION</code></pre><p>A boolean to enable/disable ability to add impersonation logs in the Djangoadmin.</p><p>Default is <code>False</code></p><pre><code>ADMIN_READ_ONLY</code></pre><p>A boolean to enable/disable \"read only\" mode of impersonation logs in theDjango admin. Generally you want to leave this enabled otherwise admin userscan alter logs within the Django admin area.</p><p>Default is <code>True</code></p><pre><code>MAX_DURATION</code></pre><p>A number specifying the maximum allowed duration of impersonationsessions in <strong>seconds</strong>.</p><p>Default is <code>None</code></p><h2 id=\"admin\"><a href=\"#admin\" rel=\"nofollow noopener\">#</a>Admin</h2><p>As of version 1.3 django-impersonate now includes a helper admin mixin,located at <code>impersonate.admin.UserAdminImpersonateMixin</code>, to include inyour User model's ModelAdmin. This provides a direct link to impersonateusers from your user model's Django admin list view. Using it is verysimple, however if you're using the default<code>django.contrib.auth.models.User</code> model you will need to unregister theold ModelAdmin before registering your own.</p><p>The <code>UserAdminImpersonateMixin</code> has a attribute named <code>open_new_window</code>that <strong>defaults to <code>False</code></strong>. If this is set to True a new window will beopened to start the new impersonation session when clicking theimpersonate link directly in the admin.</p><p>Here's an example:</p><pre><code># yourapp/admin.pyfrom django.contrib import adminfrom django.contrib.auth.models import Userfrom django.contrib.auth.admin import UserAdminfrom impersonate.admin import UserAdminImpersonateMixinclass NewUserAdmin(UserAdminImpersonateMixin, UserAdmin):    open_new_window = True    passadmin.site.unregister(User)admin.site.register(User, NewUserAdmin)</code></pre><h2 id=\"testing\"><a href=\"#testing\" rel=\"nofollow noopener\">#</a>Testing</h2><p>From the repo checkout, ensure you have Django in your <code>PYTHONPATH</code> andrun:</p><pre><code>$ python runtests.py</code></pre><p>To get test coverage, use:</p><pre><code>$ coverage run --branch runtests.py$ coverage html  &lt;- Pretty HTML files for you$ coverage report -m  &lt;- Ascii report</code></pre><p>If you're bored and want to test all the supported environments, you'llneed tox.:</p><pre><code>$ pip install tox$ tox</code></pre><p>And you should see:</p><pre><code>py37-django2.2: commands succeededpy37-django3.2: commands succeededpy38-django2.2: commands succeededpy38-django3.2: commands succeededpy39-django2.2: commands succeededpy39-django3.2: commands succeededpy38-django4.0: commands succeededpy39-django4.0: commands succeededpy310-django3.2: commands succeededpy310-django4.0: commands succeededcongratulations :)</code></pre><h2 id=\"contributing\"><a href=\"#contributing\" rel=\"nofollow noopener\">#</a>Contributing</h2><p>We accept patches submitted via <code>hg email</code> which is the <code>patchbomb</code> extensionincluded with Mercurial.</p><p>The mailing list where you submit your patches is<code>~petersanchez/public-inbox@lists.code.netlandish.com</code>. You can also view thearchives on the web here:</p><p><a href=\"https://lists.code.netlandish.com/~petersanchez/public-inbox\" rel=\"nofollow noopener\">https://lists.code.netlandish.com/~petersanchez/public-inbox</a></p><p>To quickly setup your clone of <code>django-impersonate</code> to submit to the mailinglist just edit your <code>.hg/hgrc</code> file and add the following:</p><pre><code>[email]to = ~petersanchez/public-inbox@lists.code.netlandish.com[patchbomb]flagtemplate = {separate(' ', 'django-impersonate', flags)}[diff]git = 1</code></pre><p>We have more information on the topic here:</p><ul><li><a href=\"https://man.code.netlandish.com/contributing.md\" rel=\"nofollow noopener\">Contributing</a></li><li><a href=\"https://man.code.netlandish.com/hg/email.md\" rel=\"nofollow noopener\">Using email with Mercurial</a></li><li><a href=\"https://man.code.netlandish.com/lists/etiquette.md\" rel=\"nofollow noopener\">Mailing list etiquette</a></li></ul><h2 id=\"copyright-amp-warranty\"><a href=\"#copyright-amp-warranty\" rel=\"nofollow noopener\">#</a>Copyright &amp; Warranty</h2><p>All documentation, libraries, and sample code are Copyright 2011 PeterSanchez &lt;<a href=\"mailto:petersanchez@gmail.com\" rel=\"nofollow noopener\">petersanchez@gmail.com</a>&gt;. The library and sample codeare made available to you under the terms of the BSD license which iscontained in the included file, BSD-LICENSE.</p><h3 id=\"commercial-support\"><a href=\"#commercial-support\" rel=\"nofollow noopener\">#</a>Commercial Support</h3><p>This software, and lots of other software like it, has been built insupport of many of Netlandish's own projects, and the projects of ourclients. We would love to help you on your next project so get in touchby dropping us a note at <a href=\"mailto:hello@netlandish.com\" rel=\"nofollow noopener\">hello@netlandish.com</a>.</p></div></div></div></div></div></body></html>",
  "embeddings": []
}
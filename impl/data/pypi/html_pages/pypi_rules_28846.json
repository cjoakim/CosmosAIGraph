{
  "libtype": "pypi",
  "libname": "rules",
  "url": "https://pypi.org/project/rules/",
  "html": "<!DOCTYPE html><html lang=\"en\" dir=\"ltr\">  <head>    <meta charset=\"utf-8\">    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">    <meta name=\"defaultLanguage\" content=\"en\">    <meta name=\"availableLanguages\" content=\"en, es, fr, ja, pt_BR, uk, el, de, zh_Hans, zh_Hant, ru, he, eo\">    <title>rules \u00b7 PyPI</title>    <meta name=\"description\" content=\"Awesome Django authorization, without the database\">    <link rel=\"stylesheet\" href=\"/static/css/warehouse-ltr.99b3104d.css\">    <link rel=\"stylesheet\" href=\"/static/css/fontawesome.b50b476c.css\">    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+3:400,400italic,600,600italic,700,700italic%7CSource+Code+Pro:500\">    <noscript>      <link rel=\"stylesheet\" href=\"/static/css/noscript.0673c9ea.css\">    </noscript>    <link rel=\"icon\" href=\"/static/images/favicon.35549fe8.ico\" type=\"image/x-icon\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 latest updates\" href=\"/rss/updates.xml\">    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: 40 newest packages\" href=\"/rss/packages.xml\"><link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS: latest releases for rules\" href=\"/rss/project/rules/releases.xml\">    <link rel=\"canonical\" href=\"https://pypi.org/project/rules/\">    <meta property=\"og:url\" content=\"https://pypi.org/project/rules/\">    <meta property=\"og:site_name\" content=\"PyPI\">    <meta property=\"og:type\" content=\"website\">    <meta property=\"og:image\" content=\"https://pypi.org/static/images/twitter.abaf4b19.webp\">    <meta property=\"og:title\" content=\"rules\">    <meta property=\"og:description\" content=\"Awesome Django authorization, without the database\">    <link rel=\"search\" type=\"application/opensearchdescription+xml\" title=\"PyPI\" href=\"/opensearch.xml\">    <script asyncdata-ga-id=\"UA-55961911-1\"data-ga4-id=\"G-RW7D75DF8V\"            src=\"/static/js/warehouse.dd4295c4.js\">    </script><script>MathJax = {  tex: {    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]  },};</script><script async  src=\"https://cdn.jsdelivr.net/npm/mathjax@3.2.2/es5/tex-svg.js\"  integrity=\"sha256-1CldwzdEg2k1wTmf7s5RWVd7NMXI/7nxxjJM2C4DqII=\"  crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-55961911-1\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-RW7D75DF8V\"></script><script defer src=\"https://www.fastly-insights.com/insights.js?k=6a52360a-f306-421e-8ed5-7417d0d4a4e9&dnt=true\"></script>    <script async        src=\"https://media.ethicalads.io/media/client/v1.4.0/ethicalads.min.js\"        integrity=\"sha256-U3hKDidudIaxBDEzwGJApJgPEf2mWk6cfMWghrAa6i0= sha384-UcmsCqcNRSLW/dV3Lo1oCi2/VaurXbib6p4HyUEOeIa/4OpsrnucrugAefzVZJfI sha512-q4t1L4xEjGV2R4hzqCa41P8jrgFUS8xTb8rdNv4FGvw7FpydVj/kkxBJHOiaoxHa8olCcx1Slk9K+3sNbsM4ug==\"        crossorigin=\"anonymous\"    ></script>  </head>  <body data-controller=\"viewport-toggle\">    <!-- Accessibility: this link should always be the first piece of content inside the body-->    <a href=\"#content\" class=\"skip-to-content\">Skip to main content</a>    <button type=\"button\" class=\"button button--primary button--switch-to-mobile hidden\" data-viewport-toggle-target=\"switchToMobile\" data-action=\"viewport-toggle#switchToMobile\">Switch to mobile version    </button>    <div id=\"sticky-notifications\" class=\"stick-to-top js-stick-to-top\">      <!-- Add browser warning. Will show for ie9 and below -->      <!--[if IE]>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">You are using an unsupported browser, upgrade to a newer version.</span>      </div>      <![endif]-->      <noscript>      <div class=\"notification-bar notification-bar--warning\" role=\"status\">        <span class=\"notification-bar__icon\">          <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Warning</span>        </span>        <span class=\"notification-bar__message\">Some features may not work without JavaScript. Please try enabling it if you encounter problems.</span>      </div>      </noscript><div data-html-include=\"/_includes/notification-banners/\"></div>    </div><div data-html-include=\"/_includes/flash-messages/\"></div><div data-html-include=\"/_includes/session-notifications/\"></div>    <header class=\"site-header \">      <div class=\"site-container\">        <div class=\"split-layout\">          <div class=\"split-layout\">            <div>              <a class=\"site-header__logo\" href=\"/\">                <img alt=\"PyPI\" src=\"/static/images/logo-small.2a411bc6.svg\">              </a>            </div>            <form class=\"search-form search-form--primary\" action=\"/search/\" role=\"search\">              <label for=\"search\" class=\"sr-only\">Search PyPI</label>              <input id=\"search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" data-controller=\"search-focus\" data-action=\"keydown@window->search-focus#focusSearchField\" data-search-focus-target=\"searchField\">              <button type=\"submit\" class=\"search-form__button\">                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>                <span class=\"sr-only\">Search</span>              </button>            </form>          </div><div data-html-include=\"/_includes/current-user-indicator/\">            <div id=\"user-indicator\" class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall\">  <nav class=\"horizontal-menu horizontal-menu--light horizontal-menu--tall hide-on-tablet\" aria-label=\"Main navigation\">    <ul>      <li class=\"horizontal-menu__item\"><a href=\"/help/\" class=\"horizontal-menu__link\">Help</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/sponsors/\" class=\"horizontal-menu__link\">Sponsors</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/login/\" class=\"horizontal-menu__link\">Log in</a></li>      <li class=\"horizontal-menu__item\"><a href=\"/account/register/\" class=\"horizontal-menu__link\">Register</a></li>    </ul>  </nav>  <nav class=\"dropdown dropdown--on-menu hidden show-on-tablet\" aria-label=\"Main navigation\">    <button type=\"button\" class=\"horizontal-menu__link dropdown__trigger\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"View menu\">Menu      <span class=\"dropdown__trigger-caret\">        <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>      </span>    </button>    <ul class=\"dropdown__content\" aria-hidden=\"true\" aria-label=\"Main menu\">      <li><a class=\"dropdown__link\" href=\"/help/\">Help</a></li>      <li><a class=\"dropdown__link\" href=\"/sponsors/\">Sponsors</a></li>      <li><a class=\"dropdown__link\" href=\"/account/login/\">Log in</a></li>      <li><a class=\"dropdown__link\" href=\"/account/register/\">Register</a></li>    </ul>  </nav></div></div>        </div>      </div>    </header>    <div class=\"mobile-search\">      <form class=\"search-form search-form--fullwidth\" action=\"/search/\" role=\"search\">        <label for=\"mobile-search\" class=\"sr-only\">Search PyPI</label>        <input id=\"mobile-search\" class=\"search-form__search\" type=\"text\" name=\"q\" placeholder=\"Search projects\" value=\"\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\">                <button type=\"submit\" class=\"search-form__button\">          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>          <span class=\"sr-only\">Search</span>        </button>      </form>    </div>    <main id=\"content\"><div class=\"hidden\"  data-controller=\"github-repo-stats\"  data-github-repo-stats-github-repo-info-outlet=\".github-repo-info\"  data-github-repo-stats-url-value=\"https://api.github.com/repos/dfunckt/django-rules\"  data-github-repo-stats-issue-url-value=\"https://api.github.com/search/issues?q=repo:dfunckt/django-rules+type:issue+state:open&amp;per_page=1\"></div><div class=\"banner\">  <div class=\"package-header\">    <div class=\"package-header__left\">      <h1 class=\"package-header__name\">        rules 3.3      </h1>      <div data-controller=\"clipboard\">        <p class=\"package-header__pip-instructions\">          <span id=\"pip-command\" data-clipboard-target=\"source\">pip install rules</span>          <button type=\"button\" class=\"copy-tooltip copy-tooltip-s\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">            <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>            <span class=\"sr-only\">Copy PIP instructions</span>          </button>        </p>      </div>    </div>    <div class=\"package-header__right\">      <a class=\"status-badge status-badge--good\" href=\"/project/rules/\">        <span>Latest version</span>      </a>      <p class=\"package-header__date\">Released: <time datetime=\"2022-03-23T08:54:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 23, 2022</time>      </p>    </div>  </div></div><div class=\"horizontal-section horizontal-section--grey horizontal-section--thin\">  <div class=\"site-container\"><div data-html-include=\"/_includes/administer-project-include/rules\"></div>    <div class=\"split-layout split-layout--middle package-description\">      <p class=\"package-description__summary\">Awesome Django authorization, without the database</p><div data-html-include=\"/_includes/edit-project-button/rules\"></div>    </div>  </div></div><div data-controller=\"project-tabs\">  <div class=\"tabs-container\">    <div class=\"vertical-tabs\">      <div class=\"vertical-tabs__tabs\">        <div class=\"sidebar-section\">          <h3 class=\"sidebar-section__title\">Navigation</h3>          <nav aria-label=\"Navigation for rules\">            <ul class=\"vertical-tabs__list\" role=\"tablist\">              <li role=\"tab\">                <a id=\"description-tab\" href=\"#description\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                  <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description                </a>              </li>              <li role=\"tab\">                <a id=\"history-tab\" href=\"#history\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Release history. Focus will be moved to the history panel.\">                  <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history                </a>              </li>              <li role=\"tab\">                <a id=\"files-tab\" href=\"#files\" data-project-tabs-target=\"tab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon\" aria-label=\"Download files. Focus will be moved to the project files.\">                  <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files                </a>              </li>            </ul>          </nav>        </div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"http://github.com/dfunckt/django-rules\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/rules\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (MIT)</p>    <p><strong>Author:</strong> <a href=\"mailto:akiskesoglou@gmail.com\">Akis Kesoglou</a></p>    <p><strong>Maintainer:</strong> <a href=\"mailto:akiskesoglou@gmail.com\">Akis Kesoglou</a></p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/dfunckt/\" aria-label=\"dfunckt\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/8759b14159ff2741586b594d22dc77dfec49e8fc/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f32353331663434356636663665313037396438626138383835356234663333353f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for dfunckt from gravatar.com\" title=\"Avatar for dfunckt from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            dfunckt          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Environment</strong>      <ul>        <li>          <a href=\"/search/?c=Environment+%3A%3A+Web+Environment\">            Web Environment          </a>        </li>      </ul>    </li>    <li>      <strong>Framework</strong>      <ul>        <li>          <a href=\"/search/?c=Framework+%3A%3A+Django\">            Django          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>      </ul>    </li>  </ul></div><div class=\"sidebar-section\" data-ea-publisher=\"psf\" data-ea-type=\"psf\" data-ea-keywords=\"pypi-sidebar\"></div>      </div>      <div class=\"vertical-tabs__panel\">        <!-- mobile menu -->        <nav aria-label=\"Navigation for rules\">          <ul class=\"vertical-tabs__list\" role=\"tablist\">            <li role=\"tab\">              <a id=\"mobile-description-tab\" href=\"#description\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile vertical-tabs__tab--no-top-border vertical-tabs__tab--is-active\" aria-selected=\"true\" aria-label=\"Project description. Focus will be moved to the description.\">                <i class=\"fa fa-align-left\" aria-hidden=\"true\"></i>Project description              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-data-tab\" href=\"#data\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Project details. Focus will be moved to the project details.\">                <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>Project details              </a>            </li>            <li role=\"tab\">              <a id=\"mobile-history-tab\" href=\"#history\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Release history. Focus will be moved to the history panel.\">              <i class=\"fa fa-history\" aria-hidden=\"true\"></i>Release history            </a>            </li>            <li role=\"tab\">              <a id=\"mobile-files-tab\" href=\"#files\" data-project-tabs-target=\"mobileTab\" data-action=\"project-tabs#onTabClick\" class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--mobile\" aria-label=\"Download files. Focus will be moved to the project files.\">                <i class=\"fa fa-download\" aria-hidden=\"true\"></i>Download files              </a>            </li>          </ul>        </nav>        <div id=\"description\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"description-tab mobile-description-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project description</h2>          <div class=\"project-description\">            <p><span class=\"docutils literal\">rules</span> is a tiny but powerful app providing object-level permissions toDjango, without requiring a database. At its core, it is a generic frameworkfor building rule-based systems, similar to <a href=\"http://wikipedia.org/wiki/Decision_tree\" rel=nofollow>decision trees</a>. It can also beused as a standalone library in other contexts and frameworks.</p><a href=\"https://github.com/dfunckt/django-rules/actions\" rel=nofollow><img alt=\"https://img.shields.io/github/workflow/status/dfunckt/django-rules/CI/master\" src=\"https://pypi-camo.freetls.fastly.net/a9327f6d3c791b74676a3e55984b038ad6fbae77/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6466756e636b742f646a616e676f2d72756c65732f43492f6d6173746572\"></a><a href=\"https://coveralls.io/r/dfunckt/django-rules\" rel=nofollow><img alt=\"https://coveralls.io/repos/dfunckt/django-rules/badge.svg\" src=\"https://pypi-camo.freetls.fastly.net/71238eda19df8b534c2ea3b150d8b7a7a75cf74d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6466756e636b742f646a616e676f2d72756c65732f62616467652e737667\"></a><a href=\"https://pypi.org/project/rules/\" rel=nofollow><img alt=\"https://img.shields.io/pypi/v/rules.svg\" src=\"https://pypi-camo.freetls.fastly.net/39626648f21630293d225ee0c39597d7100b28a4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f72756c65732e737667\"></a><a href=\"https://pypi.org/project/rules/\" rel=nofollow><img alt=\"https://img.shields.io/pypi/pyversions/rules.svg\" src=\"https://pypi-camo.freetls.fastly.net/177c7861886d862d32443af5226b8428e74a1f1d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f72756c65732e737667\"></a><a href=\"https://github.com/psf/black\" rel=nofollow><img alt=\"https://img.shields.io/badge/code%20style-black-000000.svg\" src=\"https://pypi-camo.freetls.fastly.net/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a><a href=\"https://github.com/pre-commit/pre-commit\" rel=nofollow><img alt=\"https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&amp;logoColor=white\" src=\"https://pypi-camo.freetls.fastly.net/d861174d9af84b80d393b2e7c89badabc5e04097/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7072652d2d636f6d6d69742d656e61626c65642d627269676874677265656e3f6c6f676f3d7072652d636f6d6d6974266c6f676f436f6c6f723d7768697465\"></a><section id=features><h2>Features</h2><p><span class=\"docutils literal\">rules</span> has got you covered. <span class=\"docutils literal\">rules</span> is:</p><ul class=simple><li><p><strong>Documented</strong>, <strong>tested</strong>, <strong>reliable</strong> and <strong>easy to use</strong>.</li><li><p><strong>Versatile</strong>. Decorate callables to build complex graphs of predicates.Predicates can be any type of callable \u2013 simple functions, lambdas,methods, callable class objects, partial functions, decorated functions,anything really.</li><li><p><strong>A good Django citizen</strong>. Seamless integration with Django views,templates and the Admin for testing for object-level permissions.</li><li><p><strong>Efficient</strong> and <strong>smart</strong>. No need to mess around with a database to figureout whether John really wrote that book.</li><li><p><strong>Simple</strong>. Dive in the code. You\u2019ll need 10 minutes to figure out how itworks.</li><li><p><strong>Powerful</strong>. <span class=\"docutils literal\">rules</span> comes complete with advanced features, such asinvocation context and storage for arbitrary data, skipping evaluation ofpredicates under specific conditions, logging of evaluated predicates and more!</li></ul></section><section id=table-of-contents><h2>Table of Contents</h2><ul class=simple><li><p><a href=#requirements rel=nofollow>Requirements</a></li><li><p><a href=#upgrading-from-2-x rel=nofollow>Upgrading from 2.x</a></li><li><p><a href=#upgrading-from-1-x rel=nofollow>Upgrading from 1.x</a></li><li><p><a href=#how-to-install rel=nofollow>How to install</a></p><ul><li><p><a href=#configuring-django rel=nofollow>Configuring Django</a></li></ul></li><li><p><a href=#using-rules rel=nofollow>Using Rules</a></p><ul><li><p><a href=#creating-predicates rel=nofollow>Creating predicates</a></li><li><p><a href=#setting-up-rules rel=nofollow>Setting up rules</a></li><li><p><a href=#combining-predicates rel=nofollow>Combining predicates</a></li></ul></li><li><p><a href=#using-rules-with-django rel=nofollow>Using Rules with Django</a></p><ul><li><p><a href=#permissions rel=nofollow>Permissions</a></li><li><p><a href=#permissions-in-models rel=nofollow>Permissions in models</a></li><li><p><a href=#permissions-in-views rel=nofollow>Permissions in views</a></li><li><p><a href=#permissions-and-rules-in-templates rel=nofollow>Permissions and rules in templates</a></li><li><p><a href=#permissions-in-the-admin rel=nofollow>Permissions in the Admin</a></li><li><p><a href=#permissions-in-django-rest-framework rel=nofollow>Permissions in Django Rest Framework</a></li></ul></li><li><p><a href=#advanced-features rel=nofollow>Advanced features</a></p><ul><li><p><a href=#custom-rule-sets rel=nofollow>Custom rule sets</a></li><li><p><a href=#invocation-context rel=nofollow>Invocation context</a></li><li><p><a href=#binding-self rel=nofollow>Binding \u201cself\u201d</a></li><li><p><a href=#skipping-predicates rel=nofollow>Skipping predicates</a></li><li><p><a href=#logging-predicate-evaluation rel=nofollow>Logging predicate evaluation</a></li></ul></li><li><p><a href=#best-practices rel=nofollow>Best practices</a></li><li><p><a href=#api-reference rel=nofollow>API Reference</a></li><li><p><a href=#licence rel=nofollow>Licence</a></li></ul></section><section id=requirements><h2>Requirements</h2><p><span class=\"docutils literal\">rules</span> requires Python 3.7 or newer. The last version to support Python 2.7is <span class=\"docutils literal\">rules</span> 2.2. It can optionally integrate with Django, in which caserequires Django 2.2 or newer.</p><p><em>Note</em>: At any given moment in time, <span class=\"docutils literal\">rules</span> will maintain support for allcurrently supported Django versions, while dropping support for those versionsthat reached end-of-life in minor releases. See the <a href=\"https://www.djangoproject.com/download/#supported-versions\" rel=nofollow>Supported Versions</a>section on Django Project website for the current state and timeline.</p></section><section id=upgrading-from-2-x><h2>Upgrading from 2.x</h2><p>The are no significant changes between <span class=\"docutils literal\">rules</span> 2.x and 3.x except droppingsupport for Python 2, so before upgrading to 3.x you just need to make sureyou\u2019re running a supported Python 3 version.</p></section><section id=upgrading-from-1-x><h2>Upgrading from 1.x</h2><ul class=simple><li><p>Support for Python 2.6 and 3.3, and Django versions before 1.11 has beendropped.</li><li><p>The <span class=\"docutils literal\">SkipPredicate</span> exception and <span class=\"docutils literal\">skip()</span> method of <span class=\"docutils literal\">Predicate</span>,that were used to signify that a predicate should be skipped, have beenremoved. You may return <span class=\"docutils literal\">None</span> from your predicate to achieve this.</li><li><p>The APIs to replace a rule\u2019s predicate have been renamed and theirbehaviour changed. <span class=\"docutils literal\">replace_rule</span> and <span class=\"docutils literal\">replace_perm</span> functions and<span class=\"docutils literal\">replace_rule</span> method of <span class=\"docutils literal\">RuleSet</span> have been renamed to <span class=\"docutils literal\">set_rule</span>,<span class=\"docutils literal\">set_perm</span> and <span class=\"docutils literal\">RuleSet.set_perm</span> respectively. The old behaviour wasto raise a <span class=\"docutils literal\">KeyError</span> if a rule by the given name did not exist. Sinceversion 2.0 this has changed and you can safely use <span class=\"docutils literal\">set_*</span> to set arule\u2019s predicate without having to ensure the rule exists first.</li></ul></section><section id=how-to-install><h2>How to install</h2><p>Using pip:</p><pre><code>$<span class=w> </span>pip<span class=w> </span>install<span class=w> </span>rules</code></pre><p>Manually:</p><pre><code>$<span class=w> </span>git<span class=w> </span>clone<span class=w> </span>https://github.com/dfunckt/django-rules.git<span class=w></span>$<span class=w> </span><span class=nb>cd</span><span class=w> </span>django-rules<span class=w></span>$<span class=w> </span>python<span class=w> </span>setup.py<span class=w> </span>install</code></pre><p>Run tests with:</p><pre><code>$<span class=w> </span>./runtests.sh</code></pre><p>You may also want to read <a href=#best-practices rel=nofollow>Best practices</a> for general advice on how touse <span class=\"docutils literal\">rules</span>.</p><section id=configuring-django><h3>Configuring Django</h3><p>Add <span class=\"docutils literal\">rules</span> to <span class=\"docutils literal\">INSTALLED_APPS</span>:</p><pre><code><span class=n>INSTALLED_APPS</span> <span class=o>=</span> <span class=p>(</span><span class=w></span>    <span class=c1># ...</span><span class=w></span>    <span class=s1>'rules'</span><span class=p>,</span><span class=w></span><span class=p>)</span></code></pre><p>Add the authentication backend:</p><pre><code><span class=n>AUTHENTICATION_BACKENDS</span> <span class=o>=</span> <span class=p>(</span><span class=w></span>    <span class=s1>'rules.permissions.ObjectPermissionBackend'</span><span class=p>,</span><span class=w></span>    <span class=s1>'django.contrib.auth.backends.ModelBackend'</span><span class=p>,</span><span class=w></span><span class=p>)</span></code></pre></section></section><section id=using-rules><h2>Using Rules</h2><p><span class=\"docutils literal\">rules</span> is based on the idea that you maintain a dict-like object that mapsstring keys used as identifiers of some kind, to callables, called<em>predicates</em>. This dict-like object is actually an instance of <span class=\"docutils literal\">RuleSet</span> andthe predicates are instances of <span class=\"docutils literal\">Predicate</span>.</p><section id=creating-predicates><h3>Creating predicates</h3><p>Let\u2019s ignore rule sets for a moment and go ahead and define a predicate. Theeasiest way is with the <span class=\"docutils literal\">@predicate</span> decorator:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=nd>@rules</span><span class=o>.</span><span class=n>predicate</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=k>def</span> <span class=nf>is_book_author</span><span class=p>(</span><span class=n>user</span><span class=p>,</span> <span class=n>book</span><span class=p>):</span><span class=w></span><span class=o>...</span>     <span class=k>return</span> <span class=n>book</span><span class=o>.</span><span class=n>author</span> <span class=o>==</span> <span class=n>user</span><span class=w></span><span class=o>...</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>is_book_author</span><span class=w></span><span class=o>&lt;</span><span class=n>Predicate</span><span class=p>:</span><span class=n>is_book_author</span> <span class=nb>object</span> <span class=n>at</span> <span class=mh>0x10eeaa490</span><span class=o>&gt;</span></code></pre><p>This predicate will return <span class=\"docutils literal\">True</span> if the book\u2019s author is the given user,<span class=\"docutils literal\">False</span> otherwise.</p><p>Predicates can be created from any callable that accepts anything from zero totwo positional arguments:</p><ul class=simple><li><p><span class=\"docutils literal\">fn(obj, target)</span></li><li><p><span class=\"docutils literal\">fn(obj)</span></li><li><p><span class=\"docutils literal\">fn()</span></li></ul><p>This is their generic form. If seen from the perspective of authorization inDjango, the equivalent signatures are:</p><ul class=simple><li><p><span class=\"docutils literal\">fn(user, obj)</span></li><li><p><span class=\"docutils literal\">fn(user)</span></li><li><p><span class=\"docutils literal\">fn()</span></li></ul><p>Predicates can do pretty much anything with the given arguments, but mustalways return <span class=\"docutils literal\">True</span> if the condition they check is true, <span class=\"docutils literal\">False</span>otherwise. <span class=\"docutils literal\">rules</span> comes with several predefined predicates that you mayread about later on in <a href=#api-reference rel=nofollow>API Reference</a>, that are mostly useful when dealingwith <a href=#authorization-in-django rel=nofollow>authorization in Django</a>.</p></section><section id=setting-up-rules><h3>Setting up rules</h3><p>Let\u2019s pretend that we want to let authors edit or delete their books, but notbooks written by other authors. So, essentially, what determines whether anauthor <em>can edit</em> or <em>can delete</em> a given book is <em>whether they are itsauthor</em>.</p><p>In <span class=\"docutils literal\">rules</span>, such requirements are modelled as <em>rules</em>. A <em>rule</em> is a map ofa unique identifier (eg. \u201ccan edit\u201d) to a predicate. Rules are groupedtogether into a <em>rule set</em>. <span class=\"docutils literal\">rules</span> has two predefined rule sets:</p><ul class=simple><li><p>A default rule set storing shared rules.</li><li><p>Another rule set storing rules that serve as permissions in a Djangocontext.</li></ul><p>So, let\u2019s define our first couple of rules, adding them to the shared ruleset. We can use the <span class=\"docutils literal\">is_book_author</span> predicate we defined earlier:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_rule</span><span class=p>(</span><span class=s1>'can_edit_book'</span><span class=p>,</span> <span class=n>is_book_author</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_rule</span><span class=p>(</span><span class=s1>'can_delete_book'</span><span class=p>,</span> <span class=n>is_book_author</span><span class=p>)</span></code></pre><p>Assuming we\u2019ve got some data, we can now test our rules:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=kn>from</span> <span class=nn>django.contrib.auth.models</span> <span class=kn>import</span> <span class=n>User</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=kn>from</span> <span class=nn>books.models</span> <span class=kn>import</span> <span class=n>Book</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>guidetodjango</span> <span class=o>=</span> <span class=n>Book</span><span class=o>.</span><span class=n>objects</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>isbn</span><span class=o>=</span><span class=s1>'978-1-4302-1936-1'</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>guidetodjango</span><span class=o>.</span><span class=n>author</span><span class=w></span><span class=o>&lt;</span><span class=n>User</span><span class=p>:</span> <span class=n>adrian</span><span class=o>&gt;</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>adrian</span> <span class=o>=</span> <span class=n>User</span><span class=o>.</span><span class=n>objects</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>username</span><span class=o>=</span><span class=s1>'adrian'</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>test_rule</span><span class=p>(</span><span class=s1>'can_edit_book'</span><span class=p>,</span> <span class=n>adrian</span><span class=p>,</span> <span class=n>guidetodjango</span><span class=p>)</span><span class=w></span><span class=kc>True</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>test_rule</span><span class=p>(</span><span class=s1>'can_delete_book'</span><span class=p>,</span> <span class=n>adrian</span><span class=p>,</span> <span class=n>guidetodjango</span><span class=p>)</span><span class=w></span><span class=kc>True</span></code></pre><p>Nice\u2026 but not awesome.</p></section><section id=combining-predicates><h3>Combining predicates</h3><p>Predicates by themselves are not so useful \u2013 not more useful than any otherfunction would be. Predicates, however, can be combined using binary operatorsto create more complex ones. Predicates support the following operators:</p><ul class=simple><li><p><span class=\"docutils literal\">P1 &amp; P2</span>: Returns a new predicate that returns <span class=\"docutils literal\">True</span> if <em>both</em>predicates return <span class=\"docutils literal\">True</span>, otherwise <span class=\"docutils literal\">False</span>. If P1 returns <span class=\"docutils literal\">False</span>,P2 will not be evaluated.</li><li><p><span class=\"docutils literal\">P1 | P2</span>: Returns a new predicate that returns <span class=\"docutils literal\">True</span> if <em>any</em> of thepredicates returns <span class=\"docutils literal\">True</span>, otherwise <span class=\"docutils literal\">False</span>. If P1 returns <span class=\"docutils literal\">True</span>,P2 will not be evaluated.</li><li><p><span class=\"docutils literal\">P1 ^ P2</span>: Returns a new predicate that returns <span class=\"docutils literal\">True</span> if one of thepredicates returns <span class=\"docutils literal\">True</span> and the other returns <span class=\"docutils literal\">False</span>, otherwise<span class=\"docutils literal\">False</span>.</li><li><p><span class=\"docutils literal\">~P</span>: Returns a new predicate that returns the negated result of theoriginal predicate.</li></ul><p>Suppose the requirement for allowing a user to edit a given book was for themto be either the book\u2019s author, or a member of the \u201ceditors\u201d group. Allowingusers to delete a book should still be determined by whether the user is thebook\u2019s author.</p><p>With <span class=\"docutils literal\">rules</span> that\u2019s easy to implement. We\u2019d have to define anotherpredicate, that would return <span class=\"docutils literal\">True</span> if the given user is a member of the\u201ceditors\u201d group, <span class=\"docutils literal\">False</span> otherwise. The built-in <span class=\"docutils literal\">is_group_member</span> factorywill come in handy:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>is_editor</span> <span class=o>=</span> <span class=n>rules</span><span class=o>.</span><span class=n>is_group_member</span><span class=p>(</span><span class=s1>'editors'</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>is_editor</span><span class=w></span><span class=o>&lt;</span><span class=n>Predicate</span><span class=p>:</span><span class=n>is_group_member</span><span class=p>:</span><span class=n>editors</span> <span class=nb>object</span> <span class=n>at</span> <span class=mh>0x10eee1350</span><span class=o>&gt;</span></code></pre><p>We could combine it with the <span class=\"docutils literal\">is_book_author</span> predicate to create a new onethat checks for either condition:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>is_book_author_or_editor</span> <span class=o>=</span> <span class=n>is_book_author</span> <span class=o>|</span> <span class=n>is_editor</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>is_book_author_or_editor</span><span class=w></span><span class=o>&lt;</span><span class=n>Predicate</span><span class=p>:(</span><span class=n>is_book_author</span> <span class=o>|</span> <span class=n>is_group_member</span><span class=p>:</span><span class=n>editors</span><span class=p>)</span> <span class=nb>object</span> <span class=n>at</span> <span class=mh>0x10eee1390</span><span class=o>&gt;</span></code></pre><p>We can now update our <span class=\"docutils literal\">can_edit_book</span> rule:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>set_rule</span><span class=p>(</span><span class=s1>'can_edit_book'</span><span class=p>,</span> <span class=n>is_book_author_or_editor</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>test_rule</span><span class=p>(</span><span class=s1>'can_edit_book'</span><span class=p>,</span> <span class=n>adrian</span><span class=p>,</span> <span class=n>guidetodjango</span><span class=p>)</span><span class=w></span><span class=kc>True</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>test_rule</span><span class=p>(</span><span class=s1>'can_delete_book'</span><span class=p>,</span> <span class=n>adrian</span><span class=p>,</span> <span class=n>guidetodjango</span><span class=p>)</span><span class=w></span><span class=kc>True</span></code></pre><p>Let\u2019s see what happens with another user:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>martin</span> <span class=o>=</span> <span class=n>User</span><span class=o>.</span><span class=n>objects</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=n>username</span><span class=o>=</span><span class=s1>'martin'</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=nb>list</span><span class=p>(</span><span class=n>martin</span><span class=o>.</span><span class=n>groups</span><span class=o>.</span><span class=n>values_list</span><span class=p>(</span><span class=s1>'name'</span><span class=p>,</span> <span class=n>flat</span><span class=o>=</span><span class=kc>True</span><span class=p>))</span><span class=w></span><span class=p>[</span><span class=s1>'editors'</span><span class=p>]</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>test_rule</span><span class=p>(</span><span class=s1>'can_edit_book'</span><span class=p>,</span> <span class=n>martin</span><span class=p>,</span> <span class=n>guidetodjango</span><span class=p>)</span><span class=w></span><span class=kc>True</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>test_rule</span><span class=p>(</span><span class=s1>'can_delete_book'</span><span class=p>,</span> <span class=n>martin</span><span class=p>,</span> <span class=n>guidetodjango</span><span class=p>)</span><span class=w></span><span class=kc>False</span></code></pre><p>Awesome.</p><p>So far, we\u2019ve only used the underlying, generic framework for defining andtesting rules. This layer is not at all specific to Django; it may be used inany context. There\u2019s actually no import of anything Django-related in thewhole app (except in the <span class=\"docutils literal\">rules.templatetags</span> module). <span class=\"docutils literal\">rules</span> however canintegrate tightly with Django to provide authorization.</p></section></section><section id=using-rules-with-django><span id=authorization-in-django></span><h2>Using Rules with Django</h2><p><span class=\"docutils literal\">rules</span> is able to provide object-level permissions in Django. It comeswith an authorization backend and a couple template tags for use in yourtemplates.</p><section id=permissions><h3>Permissions</h3><p>In <span class=\"docutils literal\">rules</span>, permissions are a specialised type of rules. You still definerules by creating and combining predicates. These rules however, must be addedto a permissions-specific rule set that comes with <span class=\"docutils literal\">rules</span> so that they canbe picked up by the <span class=\"docutils literal\">rules</span> authorization backend.</p><section id=creating-permissions><h4>Creating permissions</h4><p>The convention for naming permissions in Django is <span class=\"docutils literal\">app_label.action_object</span>,and we like to adhere to that. Let\u2019s add rules for the <span class=\"docutils literal\">books.change_book</span>and <span class=\"docutils literal\">books.delete_book</span> permissions:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_perm</span><span class=p>(</span><span class=s1>'books.change_book'</span><span class=p>,</span> <span class=n>is_book_author</span> <span class=o>|</span> <span class=n>is_editor</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_perm</span><span class=p>(</span><span class=s1>'books.delete_book'</span><span class=p>,</span> <span class=n>is_book_author</span><span class=p>)</span></code></pre><p>See the difference in the API? <span class=\"docutils literal\">add_perm</span> adds to a permissions-specificrule set, whereas <span class=\"docutils literal\">add_rule</span> adds to a default shared rule set. It\u2019simportant to know however, that these two rule sets are separate, meaning thatadding a rule in one does not make it available to the other.</p></section><section id=checking-for-permission><h4>Checking for permission</h4><p>Let\u2019s go ahead and check whether <span class=\"docutils literal\">adrian</span> has change permission to the<span class=\"docutils literal\">guidetodjango</span> book:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>adrian</span><span class=o>.</span><span class=n>has_perm</span><span class=p>(</span><span class=s1>'books.change_book'</span><span class=p>,</span> <span class=n>guidetodjango</span><span class=p>)</span><span class=w></span><span class=kc>False</span></code></pre><p>When you call the <span class=\"docutils literal\">User.has_perm</span> method, Django asks each backend in<span class=\"docutils literal\">settings.AUTHENTICATION_BACKENDS</span> whether a user has the given permissionfor the object. When queried for object permissions, Django\u2019s defaultauthentication backend always returns <span class=\"docutils literal\">False</span>. <span class=\"docutils literal\">rules</span> comes with anauthorization backend, that is able to provide object-level permissions bylooking into the permissions-specific rule set.</p><p>Let\u2019s add the <span class=\"docutils literal\">rules</span> authorization backend in settings:</p><pre><code><span class=n>AUTHENTICATION_BACKENDS</span> <span class=o>=</span> <span class=p>(</span><span class=w></span>    <span class=s1>'rules.permissions.ObjectPermissionBackend'</span><span class=p>,</span><span class=w></span>    <span class=s1>'django.contrib.auth.backends.ModelBackend'</span><span class=p>,</span><span class=w></span><span class=p>)</span></code></pre><p>Now, checking again gives <span class=\"docutils literal\">adrian</span> the required permissions:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>adrian</span><span class=o>.</span><span class=n>has_perm</span><span class=p>(</span><span class=s1>'books.change_book'</span><span class=p>,</span> <span class=n>guidetodjango</span><span class=p>)</span><span class=w></span><span class=kc>True</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>adrian</span><span class=o>.</span><span class=n>has_perm</span><span class=p>(</span><span class=s1>'books.delete_book'</span><span class=p>,</span> <span class=n>guidetodjango</span><span class=p>)</span><span class=w></span><span class=kc>True</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>martin</span><span class=o>.</span><span class=n>has_perm</span><span class=p>(</span><span class=s1>'books.change_book'</span><span class=p>,</span> <span class=n>guidetodjango</span><span class=p>)</span><span class=w></span><span class=kc>True</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>martin</span><span class=o>.</span><span class=n>has_perm</span><span class=p>(</span><span class=s1>'books.delete_book'</span><span class=p>,</span> <span class=n>guidetodjango</span><span class=p>)</span><span class=w></span><span class=kc>False</span></code></pre><p><strong>NOTE:</strong> Calling <cite>has_perm</cite> on a superuser will ALWAYS return <cite>True</cite>.</p></section></section><section id=permissions-in-models><h3>Permissions in models</h3><p><strong>NOTE:</strong> The features described in this section work on Python 3+ only.</p><p>It is common to have a set of permissions for a model, like what Django offers withits default model permissions (such as <em>add</em>, <em>change</em> etc.). When using <span class=\"docutils literal\">rules</span>as the permission checking backend, you can declare object-level permissions forany model in a similar way, using a new <span class=\"docutils literal\">Meta</span> option.</p><p>First, you need to switch your model\u2019s base and metaclass to the slightly extendedversions provided in <span class=\"docutils literal\">rules.contrib.models</span>. There are several classes and mixinsyou can use, depending on whether you\u2019re already using a custom base and/or metaclassfor your models or not. The extensions are very slim and don\u2019t affect the models\u2019behavior in any way other than making it register permissions.</p><ul><li><p>If you\u2019re using the stock <span class=\"docutils literal\">django.db.models.Model</span> as base for your models,simply switch over to <span class=\"docutils literal\">RulesModel</span> and you\u2019re good to go.</li><li><p>If you already have a custom base class adding common functionality to your models,add <span class=\"docutils literal\">RulesModelMixin</span> to the classes it inherits from and set <span class=\"docutils literal\">RulesModelBase</span>as its metaclass, like so:</p><pre>from django.db.models import Modelfrom rules.contrib.models import RulesModelBase, RulesModelMixinclass MyModel(RulesModelMixin, Model, metaclass=RulesModelBase):    ...</pre></li><li><p>If you\u2019re using a custom metaclass for your models, you\u2019ll already know how tomake it inherit from <span class=\"docutils literal\">RulesModelBaseMixin</span> yourself.</li></ul><p>Then, create your models like so, assuming you\u2019re using <span class=\"docutils literal\">RulesModel</span> as basedirectly:</p><pre>import rulesfrom rules.contrib.models import RulesModelclass Book(RulesModel):    class Meta:        rules_permissions = {            \"add\": rules.is_staff,            \"read\": rules.is_authenticated,        }</pre><p>This would be equivalent to the following calls:</p><pre>rules.add_perm(\"app_label.add_book\", rules.is_staff)rules.add_perm(\"app_label.read_book\", rules.is_authenticated)</pre><p>There are methods in <span class=\"docutils literal\">RulesModelMixin</span> that you can overwrite in order to customizehow a model\u2019s permissions are registered. See the documented source code for detailsif you need this.</p><p>Of special interest is the <span class=\"docutils literal\">get_perm</span> classmethod of <span class=\"docutils literal\">RulesModelMixin</span>, which canbe used to convert a permission type to the corresponding full permission name. Ifyou need to query for some type of permission on a given model programmatically,this is handy:</p><pre>if user.has_perm(Book.get_perm(\"read\")):    ...</pre></section><section id=permissions-in-views><h3>Permissions in views</h3><p><span class=\"docutils literal\">rules</span> comes with a set of view decorators to help you enforceauthorization in your views.</p><section id=using-the-function-based-view-decorator><h4>Using the function-based view decorator</h4><p>For function-based views you can use the <span class=\"docutils literal\">permission_required</span> decorator:</p><pre><code><span class=kn>from</span> <span class=nn>django.shortcuts</span> <span class=kn>import</span> <span class=n>get_object_or_404</span><span class=w></span><span class=kn>from</span> <span class=nn>rules.contrib.views</span> <span class=kn>import</span> <span class=n>permission_required</span><span class=w></span><span class=kn>from</span> <span class=nn>posts.models</span> <span class=kn>import</span> <span class=n>Post</span><span class=w></span><span class=k>def</span> <span class=nf>get_post_by_pk</span><span class=p>(</span><span class=n>request</span><span class=p>,</span> <span class=n>post_id</span><span class=p>):</span><span class=w></span>    <span class=k>return</span> <span class=n>get_object_or_404</span><span class=p>(</span><span class=n>Post</span><span class=p>,</span> <span class=n>pk</span><span class=o>=</span><span class=n>post_id</span><span class=p>)</span><span class=w></span><span class=nd>@permission_required</span><span class=p>(</span><span class=s1>'posts.change_post'</span><span class=p>,</span> <span class=n>fn</span><span class=o>=</span><span class=n>get_post_by_pk</span><span class=p>)</span><span class=w></span><span class=k>def</span> <span class=nf>post_update</span><span class=p>(</span><span class=n>request</span><span class=p>,</span> <span class=n>post_id</span><span class=p>):</span><span class=w></span>    <span class=c1># ...</span></code></pre><p>Usage is straight-forward, but there\u2019s one thing in the example above thatstands out and this is the <span class=\"docutils literal\">get_post_by_pk</span> function. This function, giventhe current request and all arguments passed to the view, is responsible forfetching and returning the object to check permissions against \u2013 i.e. the<span class=\"docutils literal\">Post</span> instance with PK equal to the given <span class=\"docutils literal\">post_id</span> in the example.This specific use-case is quite common so, to save you some typing, <span class=\"docutils literal\">rules</span>comes with a generic helper function that you can use to do this declaratively.The example below is equivalent to the one above:</p><pre><code><span class=kn>from</span> <span class=nn>rules.contrib.views</span> <span class=kn>import</span> <span class=n>permission_required</span><span class=p>,</span> <span class=n>objectgetter</span><span class=w></span><span class=kn>from</span> <span class=nn>posts.models</span> <span class=kn>import</span> <span class=n>Post</span><span class=w></span><span class=nd>@permission_required</span><span class=p>(</span><span class=s1>'posts.change_post'</span><span class=p>,</span> <span class=n>fn</span><span class=o>=</span><span class=n>objectgetter</span><span class=p>(</span><span class=n>Post</span><span class=p>,</span> <span class=s1>'post_id'</span><span class=p>))</span><span class=w></span><span class=k>def</span> <span class=nf>post_update</span><span class=p>(</span><span class=n>request</span><span class=p>,</span> <span class=n>post_id</span><span class=p>):</span><span class=w></span>    <span class=c1># ...</span></code></pre><p>For more information on the decorator and helper function, refer to the<span class=\"docutils literal\">rules.contrib.views</span> module.</p></section><section id=using-the-class-based-view-mixin><h4>Using the class-based view mixin</h4><p>Django includes a set of access mixins that you can use in your class-basedviews to enforce authorization. <span class=\"docutils literal\">rules</span> extends this framework to provideobject-level permissions via a mixin, <span class=\"docutils literal\">PermissionRequiredMixin</span>.</p><p>The following example will automatically test for permission against theinstance returned by the view\u2019s <span class=\"docutils literal\">get_object</span> method:</p><pre><code><span class=kn>from</span> <span class=nn>django.views.generic.edit</span> <span class=kn>import</span> <span class=n>UpdateView</span><span class=w></span><span class=kn>from</span> <span class=nn>rules.contrib.views</span> <span class=kn>import</span> <span class=n>PermissionRequiredMixin</span><span class=w></span><span class=kn>from</span> <span class=nn>posts.models</span> <span class=kn>import</span> <span class=n>Post</span><span class=w></span><span class=k>class</span> <span class=nc>PostUpdate</span><span class=p>(</span><span class=n>PermissionRequiredMixin</span><span class=p>,</span> <span class=n>UpdateView</span><span class=p>):</span><span class=w></span>    <span class=n>model</span> <span class=o>=</span> <span class=n>Post</span><span class=w></span>    <span class=n>permission_required</span> <span class=o>=</span> <span class=s1>'posts.change_post'</span></code></pre><p>You can customise the object either by overriding <span class=\"docutils literal\">get_object</span> or<span class=\"docutils literal\">get_permission_object</span>.</p><p>For more information refer to the <a href=\"https://docs.djangoproject.com/en/1.9/topics/auth/default/#limiting-access-to-logged-in-users\" rel=nofollow>Django documentation</a> and the<span class=\"docutils literal\">rules.contrib.views</span> module.</p></section><section id=checking-permission-automatically-based-on-view-type><h4>Checking permission automatically based on view type</h4><p>If you use the mechanisms provided by <span class=\"docutils literal\">rules.contrib.models</span> to register permissionsfor your models as described in <a href=#permissions-in-models rel=nofollow>Permissions in models</a>, there\u2019s another convenientmixin for class-based views available for you.</p><p><span class=\"docutils literal\">rules.contrib.views.AutoPermissionRequiredMixin</span> can recognize the type of viewit\u2019s used with and check for the corresponding permission automatically.</p><p>This example view would, without any further configuration, automatically check forthe <span class=\"docutils literal\">\"posts.change_post\"</span> permission, given that the app label is <span class=\"docutils literal\">\"posts\"</span>:</p><pre>from django.views.generic import UpdateViewfrom rules.contrib.views import AutoPermissionRequiredMixinfrom posts.models import Postclass UpdatePostView(AutoPermissionRequiredMixin, UpdateView):    model = Post</pre><p>By default, the generic CRUD views from <span class=\"docutils literal\">django.views.generic</span> are mapped to thenative Django permission types (<em>add</em>, <em>change</em>, <em>delete</em> and <em>view</em>). However,the pre-defined mappings can be extended, changed or replaced altogether whensubclassing <span class=\"docutils literal\">AutoPermissionRequiredMixin</span>. See the fully documented source codefor details on how to do that properly.</p></section></section><section id=permissions-and-rules-in-templates><h3>Permissions and rules in templates</h3><p><span class=\"docutils literal\">rules</span> comes with two template tags to allow you to test for rules andpermissions in templates.</p><p>Add <span class=\"docutils literal\">rules</span> to your <span class=\"docutils literal\">INSTALLED_APPS</span>:</p><pre><code><span class=n>INSTALLED_APPS</span> <span class=o>=</span> <span class=p>(</span><span class=w></span>    <span class=c1># ...</span><span class=w></span>    <span class=s1>'rules'</span><span class=p>,</span><span class=w></span><span class=p>)</span></code></pre><p>Then, in your template:</p><pre>{% load rules %}{% has_perm 'books.change_book' author book as can_edit_book %}{% if can_edit_book %}    ...{% endif %}{% test_rule 'has_super_feature' user as has_super_feature %}{% if has_super_feature %}    ...{% endif %}</pre></section><section id=permissions-in-the-admin><h3>Permissions in the Admin</h3><p>If you\u2019ve setup <span class=\"docutils literal\">rules</span> to be used with permissions in Django, you\u2019re almostset to also use <span class=\"docutils literal\">rules</span> to authorize any add/change/delete actions in theAdmin. The Admin asks for <em>four</em> different permissions, depending on action:</p><ul class=simple><li><p><span class=\"docutils literal\"><span class=pre>&lt;app_label&gt;.add_&lt;modelname&gt;</span></span></li><li><p><span class=\"docutils literal\"><span class=pre>&lt;app_label&gt;.view_&lt;modelname&gt;</span></span></li><li><p><span class=\"docutils literal\"><span class=pre>&lt;app_label&gt;.change_&lt;modelname&gt;</span></span></li><li><p><span class=\"docutils literal\"><span class=pre>&lt;app_label&gt;.delete_&lt;modelname&gt;</span></span></li><li><p><span class=\"docutils literal\">&lt;app_label&gt;</span></li></ul><p><em>Note:</em> view permission is new in Django v2.1 and should not be added in versions before that.</p><p>The first four are obvious. The fifth is the required permission for an appto be displayed in the Admin\u2019s \u201cdashboard\u201d. Overriding it does not restrict access to the add,change or delete views. Here\u2019s some rules for our imaginary <span class=\"docutils literal\">books</span> app as an example:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_perm</span><span class=p>(</span><span class=s1>'books'</span><span class=p>,</span> <span class=n>rules</span><span class=o>.</span><span class=n>always_allow</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_perm</span><span class=p>(</span><span class=s1>'books.add_book'</span><span class=p>,</span> <span class=n>is_staff</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_perm</span><span class=p>(</span><span class=s1>'books.view_book'</span><span class=p>,</span> <span class=n>is_staff</span> <span class=o>|</span> <span class=n>has_secret_access_code</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_perm</span><span class=p>(</span><span class=s1>'books.change_book'</span><span class=p>,</span> <span class=n>is_staff</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_perm</span><span class=p>(</span><span class=s1>'books.delete_book'</span><span class=p>,</span> <span class=n>is_staff</span><span class=p>)</span></code></pre><p>Django Admin does not support object-permissions, in the sense that it willnever ask for permission to perform an action <em>on an object</em>, only whether auser is allowed to act on (<em>any</em>) instances of a model.</p><p>If you\u2019d like to tell Django whether a user has permissions on a specificobject, you\u2019d have to override the following methods of a model\u2019s<span class=\"docutils literal\">ModelAdmin</span>:</p><ul class=simple><li><p><span class=\"docutils literal\">has_view_permission(user, obj=None)</span></li><li><p><span class=\"docutils literal\">has_change_permission(user, obj=None)</span></li><li><p><span class=\"docutils literal\">has_delete_permission(user, obj=None)</span></li></ul><p><span class=\"docutils literal\">rules</span> comes with a custom <span class=\"docutils literal\">ModelAdmin</span> subclass,<span class=\"docutils literal\">rules.contrib.admin.ObjectPermissionsModelAdmin</span>, that overrides thesemethods to pass on the edited model instance to the authorization backends,thus enabling permissions per object in the Admin:</p><pre><code><span class=c1># books/admin.py</span><span class=w></span><span class=kn>from</span> <span class=nn>django.contrib</span> <span class=kn>import</span> <span class=n>admin</span><span class=w></span><span class=kn>from</span> <span class=nn>rules.contrib.admin</span> <span class=kn>import</span> <span class=n>ObjectPermissionsModelAdmin</span><span class=w></span><span class=kn>from</span> <span class=nn>.models</span> <span class=kn>import</span> <span class=n>Book</span><span class=w></span><span class=k>class</span> <span class=nc>BookAdmin</span><span class=p>(</span><span class=n>ObjectPermissionsModelAdmin</span><span class=p>):</span><span class=w></span>    <span class=k>pass</span><span class=w></span><span class=n>admin</span><span class=o>.</span><span class=n>site</span><span class=o>.</span><span class=n>register</span><span class=p>(</span><span class=n>Book</span><span class=p>,</span> <span class=n>BookAdmin</span><span class=p>)</span></code></pre><p>Now this allows you to specify permissions like this:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_perm</span><span class=p>(</span><span class=s1>'books'</span><span class=p>,</span> <span class=n>rules</span><span class=o>.</span><span class=n>always_allow</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_perm</span><span class=p>(</span><span class=s1>'books.add_book'</span><span class=p>,</span> <span class=n>has_author_profile</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_perm</span><span class=p>(</span><span class=s1>'books.change_book'</span><span class=p>,</span> <span class=n>is_book_author_or_editor</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>rules</span><span class=o>.</span><span class=n>add_perm</span><span class=p>(</span><span class=s1>'books.delete_book'</span><span class=p>,</span> <span class=n>is_book_author</span><span class=p>)</span></code></pre><p>To preserve backwards compatibility, Django will ask for either <em>view</em> or<em>change</em> permission. For maximum flexibility, <span class=\"docutils literal\">rules</span> behaves subtlydifferent: <span class=\"docutils literal\">rules</span> will ask for the change permission if and only if no ruleexists for the view permission.</p></section><section id=permissions-in-django-rest-framework><h3>Permissions in Django Rest Framework</h3><p>Similar to <span class=\"docutils literal\">rules.contrib.views.AutoPermissionRequiredMixin</span>, there is a<span class=\"docutils literal\">rules.contrib.rest_framework.AutoPermissionViewSetMixin</span> for viewsets in DjangoRest Framework. The difference is that it doesn\u2019t derive permission from the typeof view but from the API action (<em>create</em>, <em>retrieve</em> etc.) that\u2019s tried to beperformed. Of course, it also requires you to declare your models as described in<a href=#permissions-in-models rel=nofollow>Permissions in models</a>.</p><p>Here is a possible <span class=\"docutils literal\">ModelViewSet</span> for the <span class=\"docutils literal\">Post</span> model with fully automated CRUDpermission checking:</p><pre>from rest_framework.serializers import ModelSerializerfrom rest_framework.viewsets import ModelViewSetfrom rules.contrib.rest_framework import AutoPermissionViewSetMixinfrom posts.models import Postclass PostSerializer(ModelSerializer):    class Meta:        model = Post        fields = \"__all__\"class PostViewSet(AutoPermissionViewSetMixin, ModelViewSet):    queryset = Post.objects.all()    serializer_class = PostSerializer</pre><p>By default, the CRUD actions of <span class=\"docutils literal\">ModelViewSet</span> are mapped to the nativeDjango permission types (<em>add</em>, <em>change</em>, <em>delete</em> and <em>view</em>). The <span class=\"docutils literal\">list</span>action has no permission checking enabled. However, the pre-defined mappingscan be extended, changed or replaced altogether when using (or subclassing)<span class=\"docutils literal\">AutoPermissionViewSetMixin</span>. Custom API actions defined via the <span class=\"docutils literal\">@action</span>decorator may then be mapped as well. See the fully documented source code fordetails on how to properly customize the default behavior.</p></section></section><section id=advanced-features><h2>Advanced features</h2><section id=custom-rule-sets><h3>Custom rule sets</h3><p>You may create as many rule sets as you need:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>features</span> <span class=o>=</span> <span class=n>rules</span><span class=o>.</span><span class=n>RuleSet</span><span class=p>()</span></code></pre><p>And manipulate them by adding, removing, querying and testing rules:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>features</span><span class=o>.</span><span class=n>rule_exists</span><span class=p>(</span><span class=s1>'has_super_feature'</span><span class=p>)</span><span class=w></span><span class=kc>False</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>is_special_user</span> <span class=o>=</span> <span class=n>rules</span><span class=o>.</span><span class=n>is_group_member</span><span class=p>(</span><span class=s1>'special'</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>features</span><span class=o>.</span><span class=n>add_rule</span><span class=p>(</span><span class=s1>'has_super_feature'</span><span class=p>,</span> <span class=n>is_special_user</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=s1>'has_super_feature'</span> <span class=ow>in</span> <span class=n>features</span><span class=w></span><span class=kc>True</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>features</span><span class=p>[</span><span class=s1>'has_super_feature'</span><span class=p>]</span><span class=w></span><span class=o>&lt;</span><span class=n>Predicate</span><span class=p>:</span><span class=n>is_group_member</span><span class=p>:</span><span class=n>special</span> <span class=nb>object</span> <span class=n>at</span> <span class=mh>0x10eeaa500</span><span class=o>&gt;</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>features</span><span class=o>.</span><span class=n>test_rule</span><span class=p>(</span><span class=s1>'has_super_feature'</span><span class=p>,</span> <span class=n>adrian</span><span class=p>)</span><span class=w></span><span class=kc>True</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>features</span><span class=o>.</span><span class=n>remove_rule</span><span class=p>(</span><span class=s1>'has_super_feature'</span><span class=p>)</span></code></pre><p>Note however that custom rule sets are <em>not available</em> in Django templates \u2013you need to provide integration yourself.</p></section><section id=invocation-context><h3>Invocation context</h3><p>A new context is created as a result of invoking <span class=\"docutils literal\">Predicate.test()</span> and isonly valid for the duration of the invocation. A context is a simple <span class=\"docutils literal\">dict</span>that you can use to store arbitrary data, (eg. caching computed values,setting flags, etc.), that can be used by predicates later on in the chain.Inside a predicate function it can be used like so:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=nd>@predicate</span><span class=w></span><span class=o>...</span> <span class=k>def</span> <span class=nf>mypred</span><span class=p>(</span><span class=n>a</span><span class=p>,</span> <span class=n>b</span><span class=p>):</span><span class=w></span><span class=o>...</span>     <span class=n>value</span> <span class=o>=</span> <span class=n>compute_expensive_value</span><span class=p>(</span><span class=n>a</span><span class=p>)</span><span class=w></span><span class=o>...</span>     <span class=n>mypred</span><span class=o>.</span><span class=n>context</span><span class=p>[</span><span class=s1>'value'</span><span class=p>]</span> <span class=o>=</span> <span class=n>value</span><span class=w></span><span class=o>...</span>     <span class=k>return</span> <span class=kc>True</span></code></pre><p>Other predicates can later use stored values:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=nd>@predicate</span><span class=w></span><span class=o>...</span> <span class=k>def</span> <span class=nf>myotherpred</span><span class=p>(</span><span class=n>a</span><span class=p>,</span> <span class=n>b</span><span class=p>):</span><span class=w></span><span class=o>...</span>     <span class=n>value</span> <span class=o>=</span> <span class=n>myotherpred</span><span class=o>.</span><span class=n>context</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s1>'value'</span><span class=p>)</span><span class=w></span><span class=o>...</span>     <span class=k>if</span> <span class=n>value</span> <span class=ow>is</span> <span class=ow>not</span> <span class=kc>None</span><span class=p>:</span><span class=w></span><span class=o>...</span>         <span class=k>return</span> <span class=n>do_something_with_value</span><span class=p>(</span><span class=n>value</span><span class=p>)</span><span class=w></span><span class=o>...</span>     <span class=k>else</span><span class=p>:</span><span class=w></span><span class=o>...</span>         <span class=k>return</span> <span class=n>do_something_without_value</span><span class=p>()</span></code></pre><p><span class=\"docutils literal\">Predicate.context</span> provides a single <span class=\"docutils literal\">args</span> attribute that contains thearguments as given to <span class=\"docutils literal\">test()</span> at the beginning of the invocation.</p></section><section id=binding-self><h3>Binding \u201cself\u201d</h3><p>In a predicate\u2019s function body, you can refer to the predicate instance itselfby its name, eg. <span class=\"docutils literal\">is_book_author</span>. Passing <span class=\"docutils literal\">bind=True</span> as a keywordargument to the <span class=\"docutils literal\">predicate</span> decorator will let you refer to the predicatewith <span class=\"docutils literal\">self</span>, which is more convenient. Binding <span class=\"docutils literal\">self</span> is just syntacticsugar. As a matter of fact, the following two are equivalent:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=nd>@predicate</span><span class=w></span><span class=o>...</span> <span class=k>def</span> <span class=nf>is_book_author</span><span class=p>(</span><span class=n>user</span><span class=p>,</span> <span class=n>book</span><span class=p>):</span><span class=w></span><span class=o>...</span>     <span class=k>if</span> <span class=n>is_book_author</span><span class=o>.</span><span class=n>context</span><span class=o>.</span><span class=n>args</span><span class=p>:</span><span class=w></span><span class=o>...</span>         <span class=k>return</span> <span class=n>user</span> <span class=o>==</span> <span class=n>book</span><span class=o>.</span><span class=n>author</span><span class=w></span><span class=o>...</span>     <span class=k>return</span> <span class=kc>False</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=nd>@predicate</span><span class=p>(</span><span class=n>bind</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=w></span><span class=o>...</span> <span class=k>def</span> <span class=nf>is_book_author</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>user</span><span class=p>,</span> <span class=n>book</span><span class=p>):</span><span class=w></span><span class=o>...</span>     <span class=k>if</span> <span class=bp>self</span><span class=o>.</span><span class=n>context</span><span class=o>.</span><span class=n>args</span><span class=p>:</span><span class=w></span><span class=o>...</span>         <span class=k>return</span> <span class=n>user</span> <span class=o>==</span> <span class=n>book</span><span class=o>.</span><span class=n>author</span><span class=w></span><span class=o>...</span>     <span class=k>return</span> <span class=kc>False</span></code></pre></section><section id=skipping-predicates><h3>Skipping predicates</h3><p>You may skip evaluation by returning <span class=\"docutils literal\">None</span> from your predicate:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=nd>@predicate</span><span class=p>(</span><span class=n>bind</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=w></span><span class=o>...</span> <span class=k>def</span> <span class=nf>is_book_author</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>user</span><span class=p>,</span> <span class=n>book</span><span class=p>):</span><span class=w></span><span class=o>...</span>     <span class=k>if</span> <span class=nb>len</span><span class=p>(</span><span class=bp>self</span><span class=o>.</span><span class=n>context</span><span class=o>.</span><span class=n>args</span><span class=p>)</span> <span class=o>&gt;</span> <span class=mi>1</span><span class=p>:</span><span class=w></span><span class=o>...</span>         <span class=k>return</span> <span class=n>user</span> <span class=o>==</span> <span class=n>book</span><span class=o>.</span><span class=n>author</span><span class=w></span><span class=o>...</span>     <span class=k>else</span><span class=p>:</span><span class=w></span><span class=o>...</span>         <span class=k>return</span> <span class=kc>None</span></code></pre><p>Returning <span class=\"docutils literal\">None</span> signifies that the predicate need not be evaluated, thusleaving the predicate result up to that point unchanged.</p></section><section id=logging-predicate-evaluation><h3>Logging predicate evaluation</h3><p><span class=\"docutils literal\">rules</span> can optionally be configured to log debug information as rules areevaluated to help with debugging your predicates. Messages are sent at theDEBUG level to the <span class=\"docutils literal\">'rules'</span> logger. The following <a href=\"https://docs.python.org/3.6/library/logging.config.html#logging-config-dictschema\" rel=nofollow>dictConfig</a> configuresa console logger (place this in your project\u2019s <cite>settings.py</cite> if you\u2019re using<cite>rules</cite> with Django):</p><pre><code><span class=n>LOGGING</span> <span class=o>=</span> <span class=p>{</span><span class=w></span>    <span class=s1>'version'</span><span class=p>:</span> <span class=mi>1</span><span class=p>,</span><span class=w></span>    <span class=s1>'disable_existing_loggers'</span><span class=p>:</span> <span class=kc>False</span><span class=p>,</span><span class=w></span>    <span class=s1>'handlers'</span><span class=p>:</span> <span class=p>{</span><span class=w></span>        <span class=s1>'console'</span><span class=p>:</span> <span class=p>{</span><span class=w></span>            <span class=s1>'level'</span><span class=p>:</span> <span class=s1>'DEBUG'</span><span class=p>,</span><span class=w></span>            <span class=s1>'class'</span><span class=p>:</span> <span class=s1>'logging.StreamHandler'</span><span class=p>,</span><span class=w></span>        <span class=p>},</span><span class=w></span>    <span class=p>},</span><span class=w></span>    <span class=s1>'loggers'</span><span class=p>:</span> <span class=p>{</span><span class=w></span>        <span class=s1>'rules'</span><span class=p>:</span> <span class=p>{</span><span class=w></span>            <span class=s1>'handlers'</span><span class=p>:</span> <span class=p>[</span><span class=s1>'console'</span><span class=p>],</span><span class=w></span>            <span class=s1>'level'</span><span class=p>:</span> <span class=s1>'DEBUG'</span><span class=p>,</span><span class=w></span>            <span class=s1>'propagate'</span><span class=p>:</span> <span class=kc>True</span><span class=p>,</span><span class=w></span>        <span class=p>},</span><span class=w></span>    <span class=p>},</span><span class=w></span><span class=p>}</span></code></pre><p>When this logger is active each individual predicate will have a log messageprinted when it is evaluated.</p></section></section><section id=best-practices><h2>Best practices</h2><p>Before you can test for rules, these rules must be registered with a rule set,and for this to happen the modules containing your rule definitions must beimported.</p><p>For complex projects with several predicates and rules, it may not bepractical to define all your predicates and rules inside one module. It mightbe best to split them among any sub-components of your project. In a Djangocontext, these sub-components could be the apps for your project.</p><p>On the other hand, because importing predicates from all over the place inorder to define rules can lead to circular imports and broken hearts, it\u2019sbest to further split predicates and rules in different modules.</p><p><span class=\"docutils literal\">rules</span> may optionally be configured to autodiscover <span class=\"docutils literal\">rules.py</span> modules inyour apps and import them at startup. To have <span class=\"docutils literal\">rules</span> do so, just edit your<span class=\"docutils literal\">INSTALLED_APPS</span> setting:</p><pre><code><span class=n>INSTALLED_APPS</span> <span class=o>=</span> <span class=p>(</span><span class=w></span>    <span class=c1># replace 'rules' with:</span><span class=w></span>    <span class=s1>'rules.apps.AutodiscoverRulesConfig'</span><span class=p>,</span><span class=w></span><span class=p>)</span></code></pre><p><strong>Note:</strong> On Python 2, you must also add the following to the top of your<span class=\"docutils literal\">rules.py</span> file, or you\u2019ll get import errors trying to import <span class=\"docutils literal\">rules</span>itself:</p><pre><code><span class=kn>from</span> <span class=nn>__future__</span> <span class=kn>import</span> <span class=n>absolute_import</span></code></pre></section><section id=api-reference><h2>API Reference</h2><p>The core APIs are accessible from the root <span class=\"docutils literal\">rules</span> module. Django-specificfunctionality for the Admin and views is available from <span class=\"docutils literal\">rules.contrib</span>.</p><section id=class-rules-predicate><h3>Class <span class=\"docutils literal\">rules.Predicate</span></h3><p>You create <span class=\"docutils literal\">Predicate</span> instances by passing in a callable:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=k>def</span> <span class=nf>is_book_author</span><span class=p>(</span><span class=n>user</span><span class=p>,</span> <span class=n>book</span><span class=p>):</span><span class=w></span><span class=o>...</span>     <span class=k>return</span> <span class=n>book</span><span class=o>.</span><span class=n>author</span> <span class=o>==</span> <span class=n>user</span><span class=w></span><span class=o>...</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>pred</span> <span class=o>=</span> <span class=n>Predicate</span><span class=p>(</span><span class=n>is_book_author</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>pred</span><span class=w></span><span class=o>&lt;</span><span class=n>Predicate</span><span class=p>:</span><span class=n>is_book_author</span> <span class=nb>object</span> <span class=n>at</span> <span class=mh>0x10eeaa490</span><span class=o>&gt;</span></code></pre><p>You may optionally provide a different name for the predicate that is usedwhen inspecting it:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=n>pred</span> <span class=o>=</span> <span class=n>Predicate</span><span class=p>(</span><span class=n>is_book_author</span><span class=p>,</span> <span class=n>name</span><span class=o>=</span><span class=s1>'another_name'</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>pred</span><span class=w></span><span class=o>&lt;</span><span class=n>Predicate</span><span class=p>:</span><span class=n>another_name</span> <span class=nb>object</span> <span class=n>at</span> <span class=mh>0x10eeaa490</span><span class=o>&gt;</span></code></pre><p>Also, you may optionally provide <span class=\"docutils literal\">bind=True</span> in order to be able to accessthe predicate instance with <span class=\"docutils literal\">self</span>:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=k>def</span> <span class=nf>is_book_author</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>user</span><span class=p>,</span> <span class=n>book</span><span class=p>):</span><span class=w></span><span class=o>...</span>     <span class=k>if</span> <span class=bp>self</span><span class=o>.</span><span class=n>context</span><span class=o>.</span><span class=n>args</span><span class=p>:</span><span class=w></span><span class=o>...</span>         <span class=k>return</span> <span class=n>user</span> <span class=o>==</span> <span class=n>book</span><span class=o>.</span><span class=n>author</span><span class=w></span><span class=o>...</span>     <span class=k>return</span> <span class=kc>False</span><span class=w></span><span class=o>...</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>pred</span> <span class=o>=</span> <span class=n>Predicate</span><span class=p>(</span><span class=n>is_book_author</span><span class=p>,</span> <span class=n>bind</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>pred</span><span class=w></span><span class=o>&lt;</span><span class=n>Predicate</span><span class=p>:</span><span class=n>is_book_author</span> <span class=nb>object</span> <span class=n>at</span> <span class=mh>0x10eeaa490</span><span class=o>&gt;</span></code></pre><section id=instance-methods><h4>Instance methods</h4><dl class=simple><dt><span class=\"docutils literal\">test(obj=None, target=None)</span></dt><dd><p>Returns the result of calling the passed in callable with zero, one or twopositional arguments, depending on how many it accepts.</p></dd></dl></section></section><section id=class-rules-ruleset><h3>Class <span class=\"docutils literal\">rules.RuleSet</span></h3><p><span class=\"docutils literal\">RuleSet</span> extends Python\u2019s built-in <a href=\"http://docs.python.org/library/stdtypes.html#mapping-types-dict\" rel=nofollow>dict</a> type. Therefore, you may createand use a rule set any way you\u2019d use a dict.</p><section id=instance-methods-1><h4>Instance methods</h4><dl class=simple><dt><span class=\"docutils literal\">add_rule(name, predicate)</span></dt><dd><p>Adds a predicate to the rule set, assigning it to the given rule name.Raises <span class=\"docutils literal\">KeyError</span> if another rule with that name already exists.</p></dd><dt><span class=\"docutils literal\">set_rule(name, predicate)</span></dt><dd><p>Set the rule with the given name, regardless if one already exists.</p></dd><dt><span class=\"docutils literal\">remove_rule(name)</span></dt><dd><p>Remove the rule with the given name. Raises <span class=\"docutils literal\">KeyError</span> if a rule withthat name does not exist.</p></dd><dt><span class=\"docutils literal\">rule_exists(name)</span></dt><dd><p>Returns <span class=\"docutils literal\">True</span> if a rule with the given name exists, <span class=\"docutils literal\">False</span> otherwise.</p></dd><dt><span class=\"docutils literal\">test_rule(name, obj=None, target=None)</span></dt><dd><p>Returns the result of calling <span class=\"docutils literal\">predicate.test(obj, target)</span> where<span class=\"docutils literal\">predicate</span> is the predicate for the rule with the given name. Returns<span class=\"docutils literal\">False</span> if a rule with the given name does not exist.</p></dd></dl></section></section><section id=decorators><h3>Decorators</h3><dl><dt><span class=\"docutils literal\">@predicate</span></dt><dd><p>Decorator that creates a predicate out of any callable:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=nd>@predicate</span><span class=w></span><span class=o>...</span> <span class=k>def</span> <span class=nf>is_book_author</span><span class=p>(</span><span class=n>user</span><span class=p>,</span> <span class=n>book</span><span class=p>):</span><span class=w></span><span class=o>...</span>     <span class=k>return</span> <span class=n>book</span><span class=o>.</span><span class=n>author</span> <span class=o>==</span> <span class=n>user</span><span class=w></span><span class=o>...</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>is_book_author</span><span class=w></span><span class=o>&lt;</span><span class=n>Predicate</span><span class=p>:</span><span class=n>is_book_author</span> <span class=nb>object</span> <span class=n>at</span> <span class=mh>0x10eeaa490</span><span class=o>&gt;</span></code></pre><p>Customising the predicate name:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=nd>@predicate</span><span class=p>(</span><span class=n>name</span><span class=o>=</span><span class=s1>'another_name'</span><span class=p>)</span><span class=w></span><span class=o>...</span> <span class=k>def</span> <span class=nf>is_book_author</span><span class=p>(</span><span class=n>user</span><span class=p>,</span> <span class=n>book</span><span class=p>):</span><span class=w></span><span class=o>...</span>     <span class=k>return</span> <span class=n>book</span><span class=o>.</span><span class=n>author</span> <span class=o>==</span> <span class=n>user</span><span class=w></span><span class=o>...</span><span class=w></span><span class=o>&gt;&gt;&gt;</span> <span class=n>is_book_author</span><span class=w></span><span class=o>&lt;</span><span class=n>Predicate</span><span class=p>:</span><span class=n>another_name</span> <span class=nb>object</span> <span class=n>at</span> <span class=mh>0x10eeaa490</span><span class=o>&gt;</span></code></pre><p>Binding <span class=\"docutils literal\">self</span>:</p><pre><code><span class=o>&gt;&gt;&gt;</span> <span class=nd>@predicate</span><span class=p>(</span><span class=n>bind</span><span class=o>=</span><span class=kc>True</span><span class=p>)</span><span class=w></span><span class=o>...</span> <span class=k>def</span> <span class=nf>is_book_author</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>user</span><span class=p>,</span> <span class=n>book</span><span class=p>):</span><span class=w></span><span class=o>...</span>     <span class=k>if</span> <span class=s1>'user_has_special_flag'</span> <span class=ow>in</span> <span class=bp>self</span><span class=o>.</span><span class=n>context</span><span class=p>:</span><span class=w></span><span class=o>...</span>         <span class=k>return</span> <span class=bp>self</span><span class=o>.</span><span class=n>context</span><span class=p>[</span><span class=s1>'user_has_special_flag'</span><span class=p>]</span><span class=w></span><span class=o>...</span>     <span class=k>return</span> <span class=n>book</span><span class=o>.</span><span class=n>author</span> <span class=o>==</span> <span class=n>user</span></code></pre></dd></dl></section><section id=predefined-predicates><h3>Predefined predicates</h3><dl class=simple><dt><span class=\"docutils literal\">always_allow()</span>, <span class=\"docutils literal\">always_true()</span></dt><dd><p>Always returns <span class=\"docutils literal\">True</span>.</p></dd><dt><span class=\"docutils literal\">always_deny()</span>, <span class=\"docutils literal\">always_false()</span></dt><dd><p>Always returns <span class=\"docutils literal\">False</span>.</p></dd><dt><span class=\"docutils literal\">is_authenticated(user)</span></dt><dd><p>Returns the result of calling <span class=\"docutils literal\">user.is_authenticated()</span>. Returns<span class=\"docutils literal\">False</span> if the given user does not have an <span class=\"docutils literal\">is_authenticated</span> method.</p></dd><dt><span class=\"docutils literal\">is_superuser(user)</span></dt><dd><p>Returns the result of calling <span class=\"docutils literal\">user.is_superuser</span>. Returns <span class=\"docutils literal\">False</span>if the given user does not have an <span class=\"docutils literal\">is_superuser</span> property.</p></dd><dt><span class=\"docutils literal\">is_staff(user)</span></dt><dd><p>Returns the result of calling <span class=\"docutils literal\">user.is_staff</span>. Returns <span class=\"docutils literal\">False</span> if thegiven user does not have an <span class=\"docutils literal\">is_staff</span> property.</p></dd><dt><span class=\"docutils literal\">is_active(user)</span></dt><dd><p>Returns the result of calling <span class=\"docutils literal\">user.is_active</span>. Returns <span class=\"docutils literal\">False</span> if thegiven user does not have an <span class=\"docutils literal\">is_active</span> property.</p></dd><dt><span class=\"docutils literal\"><span class=pre>is_group_member(*groups)</span></span></dt><dd><p>Factory that creates a new predicate that returns <span class=\"docutils literal\">True</span> if the givenuser is a member of <em>all</em> the given groups, <span class=\"docutils literal\">False</span> otherwise.</p></dd></dl></section><section id=shortcuts><h3>Shortcuts</h3><section id=managing-the-shared-rule-set><h4>Managing the shared rule set</h4><dl class=simple><dt><span class=\"docutils literal\">add_rule(name, predicate)</span></dt><dd><p>Adds a rule to the shared rule set. See <span class=\"docutils literal\">RuleSet.add_rule</span>.</p></dd><dt><span class=\"docutils literal\">set_rule(name, predicate)</span></dt><dd><p>Set the rule with the given name from the shared rule set. See<span class=\"docutils literal\">RuleSet.set_rule</span>.</p></dd><dt><span class=\"docutils literal\">remove_rule(name)</span></dt><dd><p>Remove a rule from the shared rule set. See <span class=\"docutils literal\">RuleSet.remove_rule</span>.</p></dd><dt><span class=\"docutils literal\">rule_exists(name)</span></dt><dd><p>Returns whether a rule exists in the shared rule set. See<span class=\"docutils literal\">RuleSet.rule_exists</span>.</p></dd><dt><span class=\"docutils literal\">test_rule(name, obj=None, target=None)</span></dt><dd><p>Tests the rule with the given name. See <span class=\"docutils literal\">RuleSet.test_rule</span>.</p></dd></dl></section><section id=managing-the-permissions-rule-set><h4>Managing the permissions rule set</h4><dl class=simple><dt><span class=\"docutils literal\">add_perm(name, predicate)</span></dt><dd><p>Adds a rule to the permissions rule set. See <span class=\"docutils literal\">RuleSet.add_rule</span>.</p></dd><dt><span class=\"docutils literal\">set_perm(name, predicate)</span></dt><dd><p>Replace a rule from the permissions rule set. See <span class=\"docutils literal\">RuleSet.set_rule</span>.</p></dd><dt><span class=\"docutils literal\">remove_perm(name)</span></dt><dd><p>Remove a rule from the permissions rule set. See <span class=\"docutils literal\">RuleSet.remove_rule</span>.</p></dd><dt><span class=\"docutils literal\">perm_exists(name)</span></dt><dd><p>Returns whether a rule exists in the permissions rule set. See<span class=\"docutils literal\">RuleSet.rule_exists</span>.</p></dd><dt><span class=\"docutils literal\">has_perm(name, user=None, obj=None)</span></dt><dd><p>Tests the rule with the given name. See <span class=\"docutils literal\">RuleSet.test_rule</span>.</p></dd></dl></section></section></section><section id=licence><h2>Licence</h2><p><span class=\"docutils literal\"><span class=pre>django-rules</span></span> is distributed under the MIT licence.</p><p>Copyright (c) 2014 Akis Kesoglou</p><p>Permission is hereby granted, free of charge, to any personobtaining a copy of this software and associated documentationfiles (the \u201cSoftware\u201d), to deal in the Software withoutrestriction, including without limitation the rights to use,copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom theSoftware is furnished to do so, subject to the followingconditions:</p><p>The above copyright notice and this permission notice shall beincluded in all copies or substantial portions of the Software.</p><p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND,EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIESOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE ANDNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHTHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISINGFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OROTHER DEALINGS IN THE SOFTWARE.</p></section>          </div>        </div>        <div id=\"data\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"mobile-data-tab\" tabindex=\"-1\">          <h2 class=\"page-title\">Project details</h2><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Project links</h3>  <ul class=\"vertical-tabs__list\">    <li>      <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\" href=\"http://github.com/dfunckt/django-rules\" rel=\"nofollow\">        <i class=\"fas fa-home\" aria-hidden=\"true\"></i>Homepage      </a>    </li>  </ul></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Statistics</h3>  <div class=\"hidden github-repo-info\" data-controller=\"github-repo-info\">GitHub statistics:    <ul class=\"vertical-tabs__list\">      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"stargazersUrl\" rel=\"noopener\">          <i class=\"fa fa-star\" aria-hidden=\"true\"></i>          <strong>Stars:</strong>          <span data-github-repo-info-target=\"stargazersCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"forksUrl\" rel=\"noopener\">          <i class=\"fa fa-code-branch\" aria-hidden=\"true\"></i>          <strong>Forks:</strong>          <span data-github-repo-info-target=\"forksCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openIssuesUrl\" rel=\"noopener\">          <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>          <strong>Open issues:</strong>          <span data-github-repo-info-target=\"openIssuesCount\"></span>        </a>      </li>      <li>        <a class=\"vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed\"           data-github-repo-info-target=\"openPRsUrl\" rel=\"noopener\">          <i class=\"fa fa-code-pull-request\" aria-hidden=\"true\"></i>          <strong>Open PRs:</strong>          <span data-github-repo-info-target=\"openPRsCount\"></span>        </a>      </li>    </ul>  </div>  <p>View statistics for this project via <a href=\"https://libraries.io/pypi/rules\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Libraries.io</a>, or by using <a href=\"https://packaging.python.org/guides/analyzing-pypi-package-downloads/\" target=\"_blank\" rel=\"noopener\">our public dataset on Google BigQuery</a>  </p></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Meta</h3>  <p><strong>License:</strong> MIT License (MIT)</p>    <p><strong>Author:</strong> <a href=\"mailto:akiskesoglou@gmail.com\">Akis Kesoglou</a></p>    <p><strong>Maintainer:</strong> <a href=\"mailto:akiskesoglou@gmail.com\">Akis Kesoglou</a></p></div><div class=\"sidebar-section\">    <h3 class=\"sidebar-section__title\">Maintainers</h3>      <span class=\"sidebar-section__maintainer\">        <a href=\"/user/dfunckt/\" aria-label=\"dfunckt\">          <span class=\"sidebar-section__user-gravatar\">            <img src=\"https://pypi-camo.freetls.fastly.net/8759b14159ff2741586b594d22dc77dfec49e8fc/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f32353331663434356636663665313037396438626138383835356234663333353f73697a653d3530\" height=\"50\" width=\"50\" alt=\"Avatar for dfunckt from gravatar.com\" title=\"Avatar for dfunckt from gravatar.com\">          </span>          <span class=\"sidebar-section__user-gravatar-text\">            dfunckt          </span>        </a>      </span></div><div class=\"sidebar-section\">  <h3 class=\"sidebar-section__title\">Classifiers</h3>  <ul class=\"sidebar-section__classifiers\">    <li>      <strong>Development Status</strong>      <ul>        <li>          <a href=\"/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable\">            5 - Production/Stable          </a>        </li>      </ul>    </li>    <li>      <strong>Environment</strong>      <ul>        <li>          <a href=\"/search/?c=Environment+%3A%3A+Web+Environment\">            Web Environment          </a>        </li>      </ul>    </li>    <li>      <strong>Framework</strong>      <ul>        <li>          <a href=\"/search/?c=Framework+%3A%3A+Django\">            Django          </a>        </li>      </ul>    </li>    <li>      <strong>Intended Audience</strong>      <ul>        <li>          <a href=\"/search/?c=Intended+Audience+%3A%3A+Developers\">            Developers          </a>        </li>      </ul>    </li>    <li>      <strong>License</strong>      <ul>        <li>          <a href=\"/search/?c=License+%3A%3A+OSI+Approved+%3A%3A+MIT+License\">            OSI Approved :: MIT License          </a>        </li>      </ul>    </li>    <li>      <strong>Operating System</strong>      <ul>        <li>          <a href=\"/search/?c=Operating+System+%3A%3A+OS+Independent\">            OS Independent          </a>        </li>      </ul>    </li>    <li>      <strong>Programming Language</strong>      <ul>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python\">            Python          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3\">            Python :: 3          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7\">            Python :: 3.7          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8\">            Python :: 3.8          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9\">            Python :: 3.9          </a>        </li>        <li>          <a href=\"/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10\">            Python :: 3.10          </a>        </li>      </ul>    </li>  </ul></div>          <br>        </div>        <div id=\"history\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"history-tab mobile-history-tab\" tabindex=\"-1\">          <h2 class=\"page-title split-layout\">            <span>Release history</span>            <span class=\"reset-text margin-top\">              <a href=\"/help/#project-release-notifications\">Release notifications</a> |              <a href=\"/rss/project/rules/releases.xml\">RSS feed <i class=\"fa fa-rss\" aria-hidden=\"true\"></i></a>            </span>          </h2>          <div class=\"release-timeline\">            <div class=\"release release--latest release--current\">              <div class=\"release__meta\">                <span class=\"badge\">This version</span>              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/blue-cube.572a5bfb.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/3.3/\">                <p class=\"release__version\">                  3.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-03-23T08:54:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 23, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/3.2.1/\">                <p class=\"release__version\">                  3.2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-03-02T09:42:48+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 2, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/3.2/\">                <p class=\"release__version\">                  3.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2022-03-02T08:46:18+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 2, 2022</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/3.1/\">                <p class=\"release__version\">                  3.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-12-22T17:48:00+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 22, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/3.0/\">                <p class=\"release__version\">                  3.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2021-05-10T09:00:07+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 10, 2021</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/2.2/\">                <p class=\"release__version\">                  2.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2020-01-17T10:23:24+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jan 17, 2020</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/2.1/\">                <p class=\"release__version\">                  2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2019-08-11T13:18:10+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Aug 11, 2019</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/2.0.1/\">                <p class=\"release__version\">                  2.0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-12-07T14:15:21+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 7, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/2.0/\">                <p class=\"release__version\">                  2.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-07-22T13:51:38+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 22, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/1.4/\">                <p class=\"release__version\">                  1.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2018-07-21T15:56:15+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jul 21, 2018</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/1.3/\">                <p class=\"release__version\">                  1.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-12-12T22:38:16+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 12, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/1.2.1/\">                <p class=\"release__version\">                  1.2.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2017-05-13T12:22:32+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  May 13, 2017</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/1.2/\">                <p class=\"release__version\">                  1.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2016-12-18T21:20:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 18, 2016</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/1.1.1/\">                <p class=\"release__version\">                  1.1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-12-07T09:44:57+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 7, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/1.1/\">                <p class=\"release__version\">                  1.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-12-05T16:18:03+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Dec 5, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/1.0/\">                <p class=\"release__version\">                  1.0                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-10-06T19:25:08+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 6, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/0.4/\">                <p class=\"release__version\">                  0.4                </p>                <p class=\"release__version-date\">                  <time datetime=\"2015-02-16T08:36:35+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Feb 16, 2015</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/0.3/\">                <p class=\"release__version\">                  0.3                </p>                <p class=\"release__version-date\">                  <time datetime=\"2014-10-15T16:09:08+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Oct 15, 2014</time>                </p>              </a>            </div>            <div class=\"release\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/0.2/\">                <p class=\"release__version\">                  0.2                </p>                <p class=\"release__version-date\">                  <time datetime=\"2014-06-09T16:34:04+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Jun 9, 2014</time>                </p>              </a>            </div>            <div class=\"release release--oldest\">              <div class=\"release__meta\">              </div>              <div class=\"release__graphic\">                <div class=\"release__line\"></div>                <img class=\"release__node\" alt=\"\" src=\"https://pypi.org/static/images/white-cube.2351a86c.svg\">              </div>              <a class=\"card release__card\" href=\"/project/rules/0.1/\">                <p class=\"release__version\">                  0.1                </p>                <p class=\"release__version-date\">                  <time datetime=\"2014-03-09T15:02:56+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 9, 2014</time>                </p>              </a>            </div>          </div>        </div>          <div id=\"files\" data-project-tabs-target=\"content\" class=\"vertical-tabs__content\" role=\"tabpanel\" aria-labelledby=\"files-tab mobile-files-tab\" tabindex=\"-1\">            <h2 class=\"page-title\">Download files</h2>            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">installing packages</a>.</p>            <h3>Source Distribution            </h3>                  <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/6f/44/6b11fc4490ba4d25fbbb81348b5f8d2d748c47d866cb57b79fb656b86b26/rules-3.3.tar.gz\">          rules-3.3.tar.gz        </a>        (54.9 kB        <a href=\"#copy-hash-modal-fc0740be-0d19-484c-8918-9948cbc5adb3\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2022-03-23T08:54:03+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 23, 2022</time>          <code>source</code>        </p>      </div>    </div>            <h3>Built Distribution            </h3>                <div class=\"file\">      <div class=\"file__graphic\">        <i class=\"far fa-file\" aria-hidden=\"true\"></i>      </div>      <div class=\"card file__card\">        <a href=\"https://files.pythonhosted.org/packages/50/03/43c18318718fa3c938a05df8cc13322e057aa178b1db2b2d603301cef013/rules-3.3-py2.py3-none-any.whl\">          rules-3.3-py2.py3-none-any.whl        </a>        (25.4 kB        <a href=\"#copy-hash-modal-de67d366-bb15-4f0a-8c5d-99ddf33259e9\">view hashes</a>)        <p class=\"file__meta\">          Uploaded <time datetime=\"2022-03-23T08:54:01+0000\" data-controller=\"localized-time\" data-localized-time-relative=\"true\" data-localized-time-show-time=\"false\">  Mar 23, 2022</time>          <code>py2</code>          <code>py3</code>        </p>      </div>    </div>          </div><div id=\"copy-hash-modal-fc0740be-0d19-484c-8918-9948cbc5adb3\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for rules-3.3.tar.gz      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for rules-3.3.tar.gz</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">bf7bea8b724b73c36a622714c1b3557620c187a2ee05321a2ac8ab7472dc4464</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">01d5a920094941191cb284d7ff55b860</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">6f446b11fc4490ba4d25fbbb81348b5f8d2d748c47d866cb57b79fb656b86b26</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div><div id=\"copy-hash-modal-de67d366-bb15-4f0a-8c5d-99ddf33259e9\" class=\"modal modal--wide\">  <div class=\"modal__content\" role=\"dialog\">    <a href=\"#modal-close\" title=\"Close\" class=\"modal__close\">      <i class=\"fa fa-times\" aria-hidden=\"true\"></i>      <span class=\"sr-only\">Close</span>    </a>    <div class=\"modal__body\">      <h3 class=\"modal__title\"><a href=\"https://pip.pypa.io/en/stable/topics/secure-installs/#hash-checking-mode\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Hashes</a> for rules-3.3-py2.py3-none-any.whl      </h3>      <table class=\"table table--hashes\">        <caption class=\"sr-only\">Hashes for rules-3.3-py2.py3-none-any.whl</caption>        <thead>          <tr>            <th scope=\"col\">Algorithm</th>            <th scope=\"col\">Hash digest</th>            <th></th>          </tr>        </thead>        <tbody>          <tr data-controller=\"clipboard\">            <th scope=\"row\">SHA256</th>            <td><code data-clipboard-target=\"source\">12c8bbab5f54560e68528fcca7abc0e162c35ac882e3cc0daed40ac49c963070</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">MD5</th>            <td><code data-clipboard-target=\"source\">2c1a401750ed9453ba6bef6e0f3af6a1</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>          <tr data-controller=\"clipboard\">            <th scope=\"row\">BLAKE2b-256</th>            <td><code data-clipboard-target=\"source\">500343c18318718fa3c938a05df8cc13322e057aa178b1db2b2d603301cef013</code></td>            <td class=\"table__align-right\">              <button type=\"button\" class=\"button button--small copy-tooltip copy-tooltip-w\" data-action=\"clipboard#copy\" data-clipboard-target=\"tooltip\" data-clipboard-tooltip-value=\"Copy to clipboard\">Copy              </button>            </td>          </tr>        </tbody>      </table>    </div>    <div class=\"modal__footer\">      <a href=\"#modal-close\" class=\"button button--primary modal__action\">Close</a>    </div>  </div></div>      </div>    </div>  </div></div>    </main>    <footer class=\"footer\">      <div class=\"footer__logo\">        <img src=\"/static/images/white-cube.2351a86c.svg\" alt=\"\" class=\"-js-white-cube\">      </div>      <div class=\"footer__menus\">        <div class=\"footer__menu\">          <h2>Help</h2>          <nav aria-label=\"Help navigation\">            <ul>              <li><a href=\"https://packaging.python.org/tutorials/installing-packages/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Installing packages</a></li>              <li><a href=\"https://packaging.python.org/tutorials/packaging-projects/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Uploading packages</a></li>              <li><a href=\"https://packaging.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">User guide</a></li>              <li><a href=\"https://www.python.org/dev/peps/pep-0541/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Project name retention</a></li>              <li><a href=\"/help/\">FAQs</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>About PyPI</h2>          <nav aria-label=\"About PyPI navigation\">            <ul>              <li><a href=\"https://twitter.com/PyPI\" title=\"External link\" target=\"_blank\" rel=\"noopener\">PyPI on Twitter</a></li>              <li><a href=\"https://dtdg.co/pypi\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Infrastructure dashboard</a></li>              <li><a href=\"/stats/\">Statistics</a></li>              <li><a href=\"/trademarks/\">Logos & trademarks</a></li>              <li><a href=\"/sponsors/\">Our sponsors</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Contributing to PyPI</h2>          <nav aria-label=\"How to contribute navigation\">            <ul>              <li><a href=\"/help/#feedback\">Bugs and feedback</a></li>              <li><a href=\"https://github.com/pypi/warehouse\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Contribute on GitHub</a></li>              <li><a href=\"https://hosted.weblate.org/projects/pypa/warehouse/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Translate PyPI</a></li>              <li><a href=\"/sponsors/\">Sponsor PyPI</a></li>              <li><a href=\"https://github.com/pypi/warehouse/graphs/contributors\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Development credits</a></li>            </ul>          </nav>        </div>        <div class=\"footer__menu\">          <h2>Using PyPI</h2>          <nav aria-label=\"Using PyPI navigation\">            <ul>              <li><a href=\"https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Code of conduct</a></li>              <li><a href=\"/security/\">Report security issue</a></li>              <li><a href=\"https://www.python.org/privacy/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Privacy policy</a></li>              <li><a href=\"/policy/terms-of-use/\">Terms of use</a></li>              <li><a href=\"/policy/acceptable-use-policy/\">Acceptable Use Policy</a></li>            </ul>          </nav>        </div>      </div>      <hr class=\"footer__divider\">      <div class=\"footer__text\">        <p>Status:<a href=\"https://status.python.org/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">          <span data-statuspage-domain=\"https://2p66nmmycsj3.statuspage.io\">all systems operational</span></a>        </p>        <p>Developed and maintained by the Python community, for the Python community.          <br>          <a href=\"https://donate.pypi.org\">Donate today!</a>        </p>        <p>          \"PyPI\", \"Python Package Index\", and the blocks logos are registered <a href=\"/trademarks/\">trademarks</a> of the <a href=\"https://python.org/psf-landing\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a>.<br>        </p>        <p>          \u00a9 2024 <a href=\"https://www.python.org/psf-landing/\" title=\"External link\" target=\"_blank\" rel=\"noopener\">Python Software Foundation</a><br>          <a href=\"/sitemap/\">Site map</a>        </p>      </div>      <div class=\"centered hide-on-desktop\">        <button type=\"button\" class=\"button button--switch-to-desktop hidden\" data-viewport-toggle-target=\"switchToDesktop\" data-action=\"viewport-toggle#switchToDesktop\">Switch to desktop version        </button>      </div>    </footer>    <div class=\"language-switcher\">      <form action=\"/locale/\">        <ul>          <li>            <button              class=\"language-switcher__selected\"              name=\"locale_id\" value=\"en\" type=\"submit\"            >              English            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"es\" type=\"submit\"            >              espa\u00f1ol            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"fr\" type=\"submit\"            >              fran\u00e7ais            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ja\" type=\"submit\"            >              \u65e5\u672c\u8a9e            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"pt_BR\" type=\"submit\"            >              portugu\u00eas (Brasil)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"uk\" type=\"submit\"            >              \u0443\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"el\" type=\"submit\"            >              \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"de\" type=\"submit\"            >              Deutsch            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hans\" type=\"submit\"            >              \u4e2d\u6587 (\u7b80\u4f53)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"zh_Hant\" type=\"submit\"            >              \u4e2d\u6587 (\u7e41\u9ad4)            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"ru\" type=\"submit\"            >              \u0440\u0443\u0441\u0441\u043a\u0438\u0439            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"he\" type=\"submit\"            >              \u05e2\u05d1\u05e8\u05d9\u05ea            </button>          </li>          <li>            <button              name=\"locale_id\" value=\"eo\" type=\"submit\"            >              esperanto            </button>          </li>        </ul>      </form>    </div><div class=\"sponsors\">  <p class=\"sponsors__title\">Supported by</p>  <div class=\"sponsors__divider\"></div>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://aws.amazon.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67\" alt=AWS loading=lazy>          <span class=\"sponsors__name\">AWS</span>          <span class=\"sponsors__service\">            Cloud computing and Security Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.datadoghq.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67\" alt=Datadog loading=lazy>          <span class=\"sponsors__name\">Datadog</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fastly.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67\" alt=Fastly loading=lazy>          <span class=\"sponsors__name\">Fastly</span>          <span class=\"sponsors__service\">            CDN          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://careers.google.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67\" alt=Google loading=lazy>          <span class=\"sponsors__name\">Google</span>          <span class=\"sponsors__service\">            Download Analytics          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/psf/sponsors/#microsoft\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67\" alt=Microsoft loading=lazy>          <span class=\"sponsors__name\">Microsoft</span>          <span class=\"sponsors__service\">            PSF Sponsor          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://www.pingdom.com/\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67\" alt=Pingdom loading=lazy>          <span class=\"sponsors__name\">Pingdom</span>          <span class=\"sponsors__service\">            Monitoring          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://getsentry.com/for/python\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67\" alt=Sentry loading=lazy>          <span class=\"sponsors__name\">Sentry</span>          <span class=\"sponsors__service\">            Error logging          </span>        </a>        <a class=\"sponsors__sponsor\" target=\"_blank\" rel=\"noopener\" href=\"https://statuspage.io\">          <img class=sponsors__image src=\"https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67\" alt=StatusPage loading=lazy>          <span class=\"sponsors__name\">StatusPage</span>          <span class=\"sponsors__service\">            Status page          </span>        </a></div>  </body></html>",
  "embeddings": []
}
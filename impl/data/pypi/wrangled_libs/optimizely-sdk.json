{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8"
  ],
  "description": "python sdk for optimizely feature experimentation, optimizely full stack (legacy), and optimizely rollouts.\noptimizely feature experimentation is a/b testing and feature management for product development teams. experiment in any application. make every feature on your roadmap an opportunity to learn. learn more at https://www.optimizely.com/products/experiment/feature-experimentation/ or see our documentation at https://docs.developers.optimizely.com/experimentation/v4.0.0-full-stack/docs/welcome. # optimizely python sdk\r\n\r\n[![pypi version](https://badge.fury.io/py/optimizely-sdk.svg)](https://pypi.org/project/optimizely-sdk)\r\n[![build status](https://travis-ci.org/optimizely/python-sdk.svg?branch=master)](https://travis-ci.org/optimizely/python-sdk)\r\n[![coverage status](https://coveralls.io/repos/github/optimizely/python-sdk/badge.svg)](https://coveralls.io/github/optimizely/python-sdk)\r\n[![apache 2.0](https://img.shields.io/badge/license-apache%202.0-blue.svg)](http://www.apache.org/licenses/license-2.0)\r\n\r\nthis repository houses the python sdk for use with optimizely feature experimentation and optimizely full stack (legacy).\r\n\r\noptimizely feature experimentation is an a/b testing and feature management tool for product development teams that enables you to experiment at every step. using optimizely feature experimentation allows for every feature on your roadmap to be an opportunity to discover hidden insights. learn more at [optimizely.com](https://www.optimizely.com/products/experiment/feature-experimentation/), or see the [developer documentation](https://docs.developers.optimizely.com/experimentation/v4.0.0-full-stack/docs/welcome).\r\n\r\noptimizely rollouts is [free feature flags](https://www.optimizely.com/free-feature-flagging/) for development teams. you can easily roll out and roll back features in any application without code deploys, mitigating risk for every feature on your roadmap.\r\n\r\n## get started\r\n\r\nrefer to the [python sdk's developer documentation](https://docs.developers.optimizely.com/experimentation/v4.0.0-full-stack/docs/python-sdk) for detailed instructions on getting started with using the sdk.\r\n\r\n### requirements\r\n\r\nversion `4.0+`: python 3.7+, pypy 3.7+\r\n\r\nversion `3.0+`: python 2.7+, pypy 3.4+\r\n\r\n### install the sdk\r\n\r\nthe sdk is available through [pypi](https://pypi.python.org/pypi?name=optimizely-sdk&:action=display).\r\n\r\nto install:\r\n\r\n    pip install optimizely-sdk\r\n\r\n### feature management access\r\n\r\nto access the feature management configuration in the optimizely\r\ndashboard, please contact your optimizely customer success manager.\r\n\r\n## use the python sdk\r\n\r\n### initialization\r\n\r\nyou can initialize the optimizely instance in three ways: with a datafile, by providing an sdk_key, or by providing an implementation of\r\n[baseconfigmanager](https://github.com/optimizely/python-sdk/tree/master/optimizely/config_manager.py#l32).\r\neach method is described below.\r\n\r\n1.  initialize optimizely with a datafile. this datafile will be used as\r\n    the source of projectconfig throughout the life of optimizely instance:\r\n\r\n        optimizely.optimizely(\r\n          datafile\r\n        )\r\n\r\n2.  initialize optimizely by providing an \\'sdk_key\\'. this will\r\n    initialize a pollingconfigmanager that makes an http get request to\r\n    the url (formed using your provided sdk key and the\r\n    default datafile cdn url template) to asynchronously download the\r\n    project datafile at regular intervals and update projectconfig when\r\n    a new datafile is received. a hard-coded datafile can also be\r\n    provided along with the sdk_key that will be used\r\n    initially before any update:\r\n\r\n        optimizely.optimizely(\r\n          sdk_key='put_your_sdk_key_here'\r\n        )\r\n\r\n    if providing a datafile, the initialization will look like:\r\n\r\n        optimizely.optimizely(\r\n          datafile=datafile,\r\n          sdk_key='put_your_sdk_key_here'\r\n        )\r\n\r\n3.  initialize optimizely by providing a configmanager that implements\r\n    [baseconfigmanager](https://github.com/optimizely/python-sdk/tree/master/optimizely/config_manager.py#l34).\r\n    you may use our [pollingconfigmanager](https://github.com/optimizely/python-sdk/blob/master/optimizely/config_manager.py#l150) or\r\n    [authdatafilepollingconfigmanager](https://github.com/optimizely/python-sdk/blob/master/optimizely/config_manager.py#l375) as needed:\r\n\r\n        optimizely.optimizely(\r\n          config_manager=custom_config_manager\r\n        )\r\n\r\n### pollingconfigmanager\r\n\r\nthe [pollingconfigmanager](https://github.com/optimizely/python-sdk/blob/master/optimizely/config_manager.py#l150) asynchronously polls for\r\ndatafiles from a specified url at regular intervals by making http requests.\r\n\r\n    polling_config_manager = pollingconfigmanager(\r\n        sdk_key=none,\r\n        datafile=none,\r\n        update_interval=none,\r\n        url=none,\r\n        url_template=none,\r\n        logger=none,\r\n        error_handler=none,\r\n        notification_center=none,\r\n        skip_json_validation=false\r\n    )\r\n\r\n**note**: you must provide either the sdk_key or url. if\r\nyou provide both, the url takes precedence.\r\n\r\n**sdk_key** the sdk_key is used to compose the outbound\r\nhttp request to the default datafile location on the optimizely cdn.\r\n\r\n**datafile** you can provide an initial datafile to bootstrap the\r\n`projectconfigmanager` so that it can be used immediately. the initial\r\ndatafile also serves as a fallback datafile if http connection cannot be\r\nestablished. the initial datafile will be discarded after the first\r\nsuccessful datafile poll.\r\n\r\n**update_interval** the update_interval is used to specify a fixed\r\ndelay in seconds between consecutive http requests for the datafile.\r\n\r\n**url** the target url from which to request the datafile.\r\n\r\n**url_template** a string with placeholder `{sdk_key}` can be provided\r\nso that this template along with the provided sdk key is\r\nused to form the target url.\r\n\r\nyou may also provide your own logger, error_handler, or\r\nnotification_center.\r\n\r\n### authdatafilepollingconfigmanager\r\n\r\nthe [authdatafilepollingconfigmanager](https://github.com/optimizely/python-sdk/blob/master/optimizely/config_manager.py#l375)\r\nimplements `pollingconfigmanager` and asynchronously polls for authenticated datafiles from a specified url at regular intervals\r\nby making http requests.\r\n\r\n    auth_datafile_polling_config_manager = authdatafilepollingconfigmanager(\r\n        datafile_access_token,\r\n        *args,\r\n        **kwargs\r\n    )\r\n\r\n**note**: to use [authdatafilepollingconfigmanager](#authdatafilepollingconfigmanager), you must create a secure environment for\r\nyour project and generate an access token for your datafile.\r\n\r\n**datafile_access_token** the datafile_access_token is attached to the outbound http request header to authorize the request and fetch the datafile.\r\n\r\n### advanced configuration\r\n\r\nthe following properties can be set to override the default\r\nconfigurations for [pollingconfigmanager](#pollingconfigmanager) and [authdatafilepollingconfigmanager](#authdatafilepollingconfigmanager).\r\n\r\n| **property name** |                                                                                    **default value**                                                                                    |                        **description**                         |\r\n| :---------------: | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :------------------------------------------------------------: |\r\n|      sdk_key      |                                                                                          none                                                                                           |                   optimizely project sdk key                   |\r\n|     datafile      |                                                                                          none                                                                                           | initial datafile, typically sourced from a local cached source |\r\n|  update_interval  |                                                                                        5 minutes                                                                                        |          fixed delay between fetches for the datafile          |\r\n|        url        |                                                                                          none                                                                                           |      custom url location from which to fetch the datafile      |\r\n|   url_template    | `pollingconfigmanager:`<br/>https://cdn.optimizely.com/datafiles/{sdk_key}.json<br/>`authdatafilepollingconfigmanager:`<br/>https://config.optimizely.com/datafiles/auth/{sdk_key}.json |             parameterized datafile url by sdk key              |\r\n\r\na notification signal will be triggered whenever a _new_ datafile is\r\nfetched and project config is updated. to subscribe to these\r\nnotifications, use:\r\n\r\n```\r\nnotification_center.add_notification_listener(notificationtypes.optimizely_config_update, update_callback)\r\n```\r\n\r\nfor further details see the optimizely [feature experimentation documentation](https://docs.developers.optimizely.com/experimentation/v4.0.0-full-stack/docs/welcome)\r\nto learn how to set up your first python project and use the sdk.\r\n\r\n## sdk development\r\n\r\n### building the sdk\r\n\r\nbuild and install the sdk with pip, using the following command:\r\n\r\n    pip install -e .\r\n\r\n### unit tests\r\n\r\n#### running all tests\r\n\r\nto get test dependencies installed, use a modified version of the\r\ninstall command:\r\n\r\n    pip install -e '.[test]'\r\n\r\nyou can run all unit tests with:\r\n\r\n    pytest\r\n\r\n#### running all tests in a file\r\n\r\nto run all tests under a particular test file you can use the following\r\ncommand:\r\n\r\n    pytest tests.<file_name_without_extension>\r\n\r\nfor example, to run all tests under `test_event_builder`, the command would be:\r\n\r\n    pytest tests/test_event_builder.py\r\n\r\n#### running all tests under a class\r\n\r\nto run all tests under a particular class of tests you can use the\r\nfollowing command:\r\n\r\n    pytest tests/<file_name_with_extension>::classname\r\n\r\nfor example, to run all tests under `test_event_builder.eventtest`, the command\r\nwould be:\r\n\r\n    pytest tests/test_event_builder.py::eventtest\r\n\r\n#### running a single test\r\n\r\nto run a single test you can use the following command:\r\n\r\n    pytest tests/<file_name_with_extension>::classname::test_name\r\n\r\nfor example, to run `test_event_builder.eventtest.test_init`, the command\r\nwould be:\r\n\r\n    pytest tests/test_event_builder.py::eventtest::test_init\r\n\r\n### contributing\r\n\r\nplease see [contributing](https://github.com/optimizely/python-sdk/blob/master/contributing.md).\r\n\r\n### credits\r\n\r\nthis software incorporates code from the following open source projects:\r\n\r\nrequests (apache-2.0 license: https://github.com/psf/requests/blob/master/license)\r\n\r\npyopenssl (apache-2.0 license https://github.com/pyca/pyopenssl/blob/main/license)\r\n\r\ncryptography (apache-2.0 https://github.com/pyca/cryptography/blob/main/license.apache)\r\n\r\nidna (bsd 3-clause license https://github.com/kjd/idna/blob/master/license.md)\r\n\r\n### other optimizely sdks\r\n\r\n- agent - https://github.com/optimizely/agent\r\n\r\n- android - https://github.com/optimizely/android-sdk\r\n\r\n- c# - https://github.com/optimizely/csharp-sdk\r\n\r\n- flutter - https://github.com/optimizely/optimizely-flutter-sdk\r\n\r\n- go - https://github.com/optimizely/go-sdk\r\n\r\n- java - https://github.com/optimizely/java-sdk\r\n\r\n- javascript - https://github.com/optimizely/javascript-sdk\r\n\r\n- php - https://github.com/optimizely/php-sdk\r\n\r\n- python - https://github.com/optimizely/python-sdk\r\n\r\n- react - https://github.com/optimizely/react-sdk\r\n\r\n- ruby - https://github.com/optimizely/ruby-sdk\r\n\r\n- swift - https://github.com/optimizely/swift-sdk\r\n# optimizely python sdk changelog\r\n\r\n## 4.1.1\r\nmarch 10th, 2023\r\n\r\nwe updated our readme.md and other non-functional code to reflect that this sdk supports both optimizely feature experimentation and optimizely full stack. ([#420](https://github.com/optimizely/python-sdk/pull/420))\r\n\r\n## 4.1.0\r\njuly 7th, 2022\r\n\r\n### bug fixes\r\n* fix error log formatting for flag key ([#381](https://github.com/optimizely/python-sdk/pull/381))\r\n* fix invalid datafile returned from `projectconfig.to_datafile` and `optimizelyconfig.get_datafile` ([#321](https://github.com/optimizely/python-sdk/pull/321), [#384](https://github.com/optimizely/python-sdk/pull/384))\r\n\r\n\r\n## 4.0.0\r\njanuary 12th, 2022\r\n\r\n### new features\r\n* add a set of new apis for overriding and managing user-level flag, experiment and delivery rule decisions. these methods can be used for qa and automated testing purposes. they are an extension of the optimizelyusercontext interface ([#361](https://github.com/optimizely/python-sdk/pull/361), [#365](https://github.com/optimizely/python-sdk/pull/365), [#369](https://github.com/optimizely/python-sdk/pull/369)):\r\n\t- setforceddecision\r\n\t- getforceddecision\r\n\t- removeforceddecision\r\n\t- removeallforceddecisions\r\n\r\n* for details, refer to our documentation pages: [optimizelyusercontext](https://docs.developers.optimizely.com/full-stack/v4.0/docs/optimizelyusercontext-python) and [forced decision methods](https://docs.developers.optimizely.com/full-stack/v4.0/docs/forced-decision-methods-python).\r\n\r\n### breaking changes:\r\n\r\n* support for `python v3.4` has been dropped as of this release due to a security vulnerability with `pyyaml <v5.4`. ([#366](https://github.com/optimizely/python-sdk/pull/366))\r\n* we no longer support `python v2.7, v3.5, and v3.6` including `pypy` as of this release. ([#377](https://github.com/optimizely/python-sdk/pull/373))\r\n* we now support `python v3.7 and above` including `pypy3`.\r\n\r\n## 3.10.0\r\nseptember 16th, 2021\r\n\r\n### new features\r\n* added new public properties to optimizelyconfig.\r\n  - sdk_key and environment_key [#338] (https://github.com/optimizely/python-sdk/pull/338)\r\n  - attributes and events [#339] (https://github.com/optimizely/python-sdk/pull/339)\r\n  - experiment_rules, delivery_rules, audiences and audiences in optimizelyexperiment\r\n    - [#342] (https://github.com/optimizely/python-sdk/pull/342)\r\n    - [#351] (https://github.com/optimizely/python-sdk/pull/351/files)\r\n* for details please refer to our documentation page:\r\n  - python-sdk: [https://docs.developers.optimizely.com/full-stack/docs/optimizelyconfig-python]\r\n\r\n* optimizelyfeature.experiments_map of optimizelyconfig is now deprecated. please use optimizelyfeature.experiment_rules and optimizelyfeature.delivery_rules. [#360] (https://github.com/optimizely/python-sdk/pull/360)\r\n\r\n### bug fixes\r\n* fix event processor negative timeout interval when retrieving events from queue. [#356] (https://github.com/optimizely/python-sdk/pull/356)\r\n\r\n## 3.9.1\r\njuly 14th, 2021\r\n\r\n### bug fixes:\r\n* fixed issue with serving incorrect variation in projects containing multiple flags with duplicate keys. [#347] (https://github.com/optimizely/python-sdk/pull/347)\r\n* fixed issue with serving incorrect variation in create_impression_event in user_event_factory.py. [#350] (https://github.com/optimizely/python-sdk/pull/350)\r\n\r\n## 3.9.0\r\njune 1st, 2021\r\n\r\n### new features\r\n* added support for multiple concurrent prioritized experiments per flag. [#322](https://github.com/optimizely/python-sdk/pull/322)\r\n\r\n## 3.8.0\r\nfebruary 12th, 2021\r\n\r\n### new features\r\n* new features\r\nintroducing a new primary interface for retrieving feature flag status, configuration and associated experiment decisions for users ([#309](https://github.com/optimizely/python-sdk/pull/309)). the new `optimizelyusercontext` class is instantiated with `create_user_context` and exposes the following apis to get `optimizelydecision`:\r\n\r\n    - set_attribute\r\n    - decide\r\n    - decide_all\r\n    - decide_for_keys\r\n    - track_event\r\n\r\nfor details, refer to our documentation page: https://docs.developers.optimizely.com/full-stack/v4.0/docs/python-sdk.\r\n\r\n## 3.7.1\r\nnovember 19th, 2020\r\n\r\n### bug fixes:\r\n* added \"enabled\" field to decision metadata structure. [#306](https://github.com/optimizely/python-sdk/pull/306)\r\n\r\n## 3.7.0\r\nnovember 2nd, 2020\r\n\r\n### new features\r\n* added support for upcoming application-controlled introduction of tracking for non-experiment flag decisions. [#300](https://github.com/optimizely/python-sdk/pull/300)\r\n\r\n## 3.6.0\r\noctober 1st, 2020\r\n\r\n### new features:\r\n* version targeting using semantic version syntax. [#293](https://github.com/optimizely/python-sdk/pull/293)\r\n* datafile accessor api added to access current config as a json string. [#283](https://github.com/optimizely/python-sdk/pull/283)\r\n\r\n### bug fixes:\r\n* fixed package installation for python 3.4 and pypy. [#298](https://github.com/optimizely/python-sdk/pull/298)\r\n\r\n## 3.5.2\r\njuly 14th, 2020\r\n\r\n### bug fixes:\r\n* fixed handling of network and no status code errors when polling for datafile in `pollingconfigmanager` and `authdatafilepollingconfigmanager`. ([#287](https://github.com/optimizely/python-sdk/pull/287))\r\n\r\n## 3.5.1\r\njuly 10th, 2020\r\n\r\n### bug fixes:\r\n* fixed http request exception handling in `pollingconfigmanager`. ([#285](https://github.com/optimizely/python-sdk/pull/285))\r\n\r\n## 3.5.0\r\njuly 9th, 2020\r\n\r\n### new features:\r\n* introduced 2 apis to interact with feature variables:\r\n  * `get_feature_variable_json` allows you to get value for json variables related to a feature.\r\n  * `get_all_feature_variables` gets values for all variables under a feature.\r\n* added support for fetching authenticated datafiles. `authdatafilepollingconfigmanager` is a new config manager that allows you to poll for a datafile belonging to a secure environment. you can create a client by setting the `datafile_access_token`.\r\n\r\n### bug fixes:\r\n* fixed log messages for targeted rollouts evaluation. ([#268](https://github.com/optimizely/python-sdk/pull/268))\r\n\r\n## 3.4.2\r\njune 11th, 2020\r\n\r\n### bug fixes:\r\n* adjusted log level for audience evaluation logs. ([#267](https://github.com/optimizely/python-sdk/pull/267))\r\n\r\n## 3.4.1\r\nmarch 19th, 2020\r\n\r\n### bug fixes:\r\n* updated `jsonschema` to address [installation issue](https://github.com/optimizely/python-sdk/issues/232).\r\n\r\n## 3.4.0\r\njanuary 27th, 2020\r\n\r\n### new features:\r\n* added a new api to get project configuration static data.\r\n  * call `get_optimizely_config()` to get a snapshot of project configuration static data.\r\n  * it returns an `optimizelyconfig` instance which includes a datafile revision number, all experiments, and feature flags mapped by their key values.\r\n  * added caching for `get_optimizely_config()` - `optimizelyconfig` object will be cached and reused for the lifetime of the datafile.\r\n  * for details, refer to our documentation page: [https://docs.developers.optimizely.com/full-stack/docs/optimizelyconfig-python](https://docs.developers.optimizely.com/full-stack/docs/optimizelyconfig-python).\r\n\r\n\r\n## 3.3.1\r\ndecember 16th, 2019\r\n\r\n### bug fixes:\r\n* fixed [installation issue](https://github.com/optimizely/python-sdk/issues/220) on windows. ([#224](https://github.com/optimizely/python-sdk/pull/224))\r\n* fixed batch event processor deadline reset issue. ([#227](https://github.com/optimizely/python-sdk/pull/227))\r\n* added more batch event processor debug messages. ([#227](https://github.com/optimizely/python-sdk/pull/227))\r\n\r\n## 3.3.0\r\noctober 28th, 2019\r\n\r\n### new features:\r\n* added support for event batching via the event processor.\r\n  * events generated by methods like `activate`, `track`, and `is_feature_enabled` will be held in a queue until the configured batch size is reached, or the configured flush interval has elapsed. then, they will be batched into a single payload and sent to the event dispatcher.\r\n  * to configure event batching, set the `batch_size` and `flush_interval` properties when initializing instance of [batcheventprocessor](https://github.com/optimizely/python-sdk/blob/3.3.x/optimizely/event/event_processor.py#l45).\r\n  * event batching is disabled by default. you can pass in instance of `batcheventprocessor` when creating `optimizely` instance to enable event batching.\r\n  * users can subscribe to `logevent` notification to be notified of whenever a payload consisting of a batch of user events is handed off to the event dispatcher to send to optimizely's backend.\r\n* introduced blocking timeout in `pollingconfigmanager`. by default, calls to `get_config` will block for maximum of 10 seconds until config is available.\r\n\r\n### bug fixes:\r\n* fixed incorrect log message when numeric metric is not used. ([#217](https://github.com/optimizely/python-sdk/pull/217))\r\n\r\n## 3.2.0\r\naugust 27th, 2019\r\n\r\n### new features:\r\n* added support for automatic datafile management via [pollingconfigmanager](https://github.com/optimizely/python-sdk/blob/3.2.x/optimizely/config_manager.py#l151):\r\n  * the [pollingconfigmanager](https://github.com/optimizely/python-sdk/blob/3.2.x/optimizely/config_manager.py#l151) is an implementation of the [baseconfigmanager](https://github.com/optimizely/python-sdk/blob/3.2.x/optimizely/config_manager.py#l32).\r\n  * users may provide one of datafile or sdk key (sdk_key) or both to `optimizely.optimizely`. based on that, the sdk will use the [staticconfigmanager](https://github.com/optimizely/python-sdk/blob/3.2.x/optimizely/config_manager.py#l73) or the [pollingconfigmanager](https://github.com/optimizely/python-sdk/blob/3.2.x/optimizely/config_manager.py#l151). refer to the [readme](readme.md) for more instructions.\r\n  * an initial datafile can be provided to the `pollingconfigmanager` to bootstrap before making http requests for the hosted datafile.\r\n  * requests for the datafile are made in a separate thread and are scheduled with fixed delay.\r\n  * configuration updates can be subscribed to by adding the optimizely_config_update notification listener.\r\n* introduced `optimizely.get_feature_variable` api.  ([#191](https://github.com/optimizely/python-sdk/pull/191))\r\n\r\n### deprecated:\r\n\r\n* `notificationcenter.clear_notifications` is deprecated as of this release. please use `notificationcenter.clear_notification_listeners`.  ([#182](https://github.com/optimizely/python-sdk/pull/182))\r\n* `notificationcenter.clear_all_notifications` is deprecated as of this release. please use `notificationcenter.clear_all_notification_listeners`.  ([#182](https://github.com/optimizely/python-sdk/pull/182))\r\n\r\n## 3.2.0b1\r\njuly 26th, 2019\r\n\r\n### new features:\r\n* added support for automatic datafile management via [pollingconfigmanager](https://github.com/optimizely/python-sdk/blob/3.2.x/optimizely/config_manager.py#l151):\r\n  * the [pollingconfigmanager](https://github.com/optimizely/python-sdk/blob/3.2.x/optimizely/config_manager.py#l151) is an implementation of the [baseconfigmanager](https://github.com/optimizely/python-sdk/blob/3.2.x/optimizely/config_manager.py#l32).\r\n  * users may provide one of datafile or sdk key (sdk_key) or both to `optimizely.optimizely`. based on that, the sdk will use the [staticconfigmanager](https://github.com/optimizely/python-sdk/blob/3.2.x/optimizely/config_manager.py#l73) or the [pollingconfigmanager](https://github.com/optimizely/python-sdk/blob/3.2.x/optimizely/config_manager.py#l151). refer to the [readme](readme.md) for more instructions.\r\n  * an initial datafile can be provided to the `pollingconfigmanager` to bootstrap before making http requests for the hosted datafile.\r\n  * requests for the datafile are made in a separate thread and are scheduled with fixed delay.\r\n  * configuration updates can be subscribed to by adding the optimizely_config_update notification listener.\r\n* introduced `optimizely.get_feature_variable` api.  ([#191](https://github.com/optimizely/python-sdk/pull/191))\r\n\r\n### deprecated:\r\n\r\n* `notificationcenter.clear_notifications` is deprecated as of this release. please use `notificationcenter.clear_notification_listeners`.  ([#182](https://github.com/optimizely/python-sdk/pull/182))\r\n* `notificationcenter.clear_all_notifications` is deprecated as of this release. please use `notificationcenter.clear_all_notification_listeners`.  ([#182](https://github.com/optimizely/python-sdk/pull/182))\r\n\r\n## 3.1.0\r\nmay 3rd, 2019\r\n\r\n### new features:\r\n* introduced decision notification listener to be able to record:\r\n  * variation assignments for users activated in an experiment.\r\n  * feature access for users.\r\n  * feature variable value for users.\r\n\r\n### bug fixes:\r\n* feature variable apis now return default variable value when featureenabled property is false.  ([#171](https://github.com/optimizely/python-sdk/pull/171))\r\n\r\n### deprecated:\r\n* activate notification listener is deprecated as of this release.  recommendation is to use the new decision notification listener.  activate notification listener will be removed in the next major release.\r\n\r\n## 3.0.0\r\nmarch 1st, 2019\r\n\r\nthe 3.0 release improves event tracking and supports additional audience\r\ntargeting functionality.\r\n\r\n### new features:\r\n* event tracking:\r\n  * the `track` method now dispatches its conversion event *unconditionally*, without first determining whether the user is targeted by a known experiment that uses the event. this may increase outbound network traffic.\r\n  * in optimizely results, conversion events sent by 3.0 sdks don\\'t explicitly name the experiments and variations that are currently targeted to the user. instead, conversions are automatically attributed to variations that the user has previously seen, as long as those variations were served via 3.0 sdks or by other clients capable of automatic attribution, and as long as our backend actually received the impression events for those variations.\r\n  * altogether, this allows you to track conversion events and attribute them to variations even when you don't know all of a user's attribute values, and even if the user's attribute values or the experiment's configuration have changed such that the user is no longer affected by the experiment. as a result, **you may observe an increase in the conversion rate for previously-instrumented events.** if that is undesirable, you can reset the results of previously-running experiments after upgrading to the 3.0 sdk.  -   this will also allow you to attribute events to variations from other optimizely projects in your account, even though those experiments don't appear in the same datafile.\r\n  * note that for results segmentation in optimizely results, the user attribute values from one event are automatically applied to all other events in the same session, as long as the events in question were actually received by our backend. this behavior was already in place and is not affected by the 3.0 release.\r\n* support for all types of attribute values, not just strings.\r\n  * all values are passed through to notification listeners.\r\n  * strings, booleans, and valid numbers are passed to the event dispatcher and can be used for optimizely results segmentation.  a valid number is a finite float or numbers.integral in the inclusive range \\[-2 ^ 53, 2 ^ 53\\].\r\n  * strings, booleans, and valid numbers are relevant for audience conditions.\r\n* support for additional matchers in audience conditions:\r\n  * an `exists` matcher that passes if the user has a non-null value for the targeted user attribute and fails otherwise.\r\n  * a `substring` matcher that resolves if the user has a string value for the targeted attribute.\r\n    * `gt` (greater than) and `lt` (less than) matchers that resolve if the user has a valid number value for the targeted attribute.  a valid number is a finite float or numbers.integral in the inclusive range \\[-2 ^ 53, 2 ^ 53\\].\r\n    * the original (`exact`) matcher can now be used to target booleans and valid numbers, not just strings.\r\n* support for a/b tests, feature tests, and feature rollouts whose audiences are combined using `\"and\"` and `\"not\"` operators, not just the `\"or\"` operator.\r\n* datafile-version compatibility check: the sdk will remain uninitialized (i.e., will gracefully fail to activate experiments and features) if given a datafile version greater than 4.\r\n* updated pull request template and commit message guidelines.\r\n\r\n### breaking changes:\r\n* conversion events sent by 3.0 sdks don\\'t explicitly name the experiments and variations that are currently targeted to the user, so these events are unattributed in raw events data export. you must use the new *results* export to determine the variations to which events have been attributed.\r\n* previously, notification listeners were only given string-valued user attributes because only strings could be passed into various method calls. that is no longer the case. you may pass non-string attribute values, and if you do, you must update your notification listeners to be able to receive whatever values you pass in.\r\n\r\n### bug fixes:\r\n* experiments and features can no longer activate when a negatively targeted attribute has a missing, null, or malformed value.\r\n  * audience conditions (except for the new `exists` matcher) no longer resolve to `false` when they fail to find an legitimate value for the targeted user attribute. the result remains `null` (unknown). therefore, an audience that negates such a condition (using the `\"not\"` operator) can no longer resolve to `true` unless there is an unrelated branch in the condition tree that itself resolves to `true`.\r\n* updated the default event dispatcher to log an error if the request resolves to http 4xx or 5xx.  ([#140](https://github.com/optimizely/python-sdk/pull/140))\r\n* all methods now validate that user ids are strings and that experiment keys, feature keys, feature variable keys, and event keys are non-empty strings.\r\n\r\n## 2.1.1\r\naugust 21st, 2018\r\n\r\n* fix: record conversions for all experiments using an event when using track([#136](https://github.com/optimizely/python-sdk/pull/136)).\r\n\r\n## 2.1.0\r\njuly 2nd, 2018\r\n\r\n* introduced support for bot filtering ([#121](https://github.com/optimizely/python-sdk/pull/121)).\r\n* overhauled logging to use standard python logging ([#123](https://github.com/optimizely/python-sdk/pull/123)).\r\n\r\n## 2.0.1\r\njune 19th, 2018\r\n\r\n* fix: send impression event for feature test when feature is disabled ([#128](https://github.com/optimizely/python-sdk/pull/128)).\r\n\r\n## 2.0.0\r\napril 12th, 2018\r\n\r\nthis major release introduces apis for feature management. it also\r\nintroduces some breaking changes listed below.\r\n\r\n### new features\r\n* introduced the `is_feature_enabled` api to determine whether to show a feature to a user or not.\r\n\r\n```\r\n    is_enabled = optimizel_client.is_feature_enabled('my_feature_key', 'my_user', user_attributes)\r\n```\r\n\r\n* all enabled features for the user can be retrieved by calling:\r\n\r\n```\r\n    enabled_features = optimizely_client.get_enabled_features('my_user', user_attributes)\r\n```\r\n* introduced feature variables to configure or parameterize a feature.  there are four variable types: `string`, `integer`, `double`, `boolean`.\r\n\r\n```\r\n    string_variable = optimizely_client.get_feature_variable_string('my_feature_key', 'string_variable_key', 'my_user')\r\n    integer_variable = optimizely_client.get_feature_variable_integer('my_feature_key', 'integer_variable_key', 'my_user')\r\n    double_variable = optimizely_client.get_feature_variable_double('my_feature_key', 'double_variable_key', 'my_user')\r\n    boolean_variable = optimizely_client.get_feature_variable_boolean('my_feature_key', 'boolean_variable_key', 'my_user')\r\n```\r\n\r\n### breaking changes\r\n* the `track` api with revenue value as a stand-alone parameter has been removed. the revenue value should be passed in as an entry in the event tags dict. the key for the revenue tag is `revenue` and the passed in value will be treated by optimizely as the value for computing results.\r\n\r\n```\r\n    event_tags = {\r\n      'revenue': 1200\r\n    }\r\n\r\n    optimizely_client.track('event_key', 'my_user', user_attributes, event_tags)\r\n```\r\n\r\n## 2.0.0b1\r\nmarch 29th, 2018\r\n\r\nthis beta release introduces apis for feature management. it also\r\nintroduces some breaking changes listed below.\r\n\r\n### new features\r\n* introduced the `is_feature_enabled` api to determine whether to show a feature to a user or not.\r\n```\r\n    is_enabled = optimizel_client.is_feature_enabled('my_feature_key', 'my_user', user_attributes)\r\n```\r\n\r\n* all enabled features for the user can be retrieved by calling:\r\n\r\n```\r\n    enabled_features = optimizely_client.get_enabled_features('my_user', user_attributes)\r\n```\r\n\r\n* introduced feature variables to configure or parameterize a feature.  there are four variable types: `string`, `integer`, `double`, `boolean`.\r\n\r\n```\r\n    string_variable = optimizely_client.get_feature_variable_string('my_feature_key', 'string_variable_key', 'my_user')\r\n    integer_variable = optimizely_client.get_feature_variable_integer('my_feature_key', 'integer_variable_key', 'my_user')\r\n    double_variable = optimizely_client.get_feature_variable_double('my_feature_key', 'double_variable_key', 'my_user')\r\n    boolean_variable = optimizely_client.get_feature_variable_boolean('my_feature_key', 'boolean_variable_key', 'my_user')\r\n```\r\n\r\n### breaking changes\r\n* the `track` api with revenue value as a stand-alone parameter has been removed. the revenue value should be passed in as an entry in the event tags dict. the key for the revenue tag is `revenue` and the passed in value will be treated by optimizely as the value for computing results.\r\n\r\n```\r\n    event_tags = {\r\n      'revenue': 1200\r\n    }\r\n\r\n    optimizely_client.track('event_key', 'my_user', user_attributes, event_tags)\r\n```\r\n\r\n## 1.4.0\r\n\r\n* added support for ip anonymization.\r\n* added support for notification listeners.\r\n* added support for bucketing id.\r\n* updated mmh3 to handle installation failures on windows 10.\r\n\r\n## 1.3.0\r\n\r\n* introduced support for forced bucketing.\r\n* introduced support for numeric metrics.\r\n* updated event builder to support new endpoint.\r\n\r\n## 1.2.1\r\n\r\n* removed older feature flag parsing.\r\n\r\n## 1.2.0\r\n\r\n* added user profile service.\r\n\r\n## 1.1.1\r\n\r\n* updated datafile parsing to be able to handle additional fields.\r\n* deprecated classic project support.\r\n\r\n## 1.1.0\r\n\r\n* included datafile revision information in log events.\r\n* added event tags to track api to allow users to pass in event metadata.\r\n* deprecated the `event_value` parameter from the track method. should use `event_tags` to pass in event value instead.\r\n* updated event logging endpoint to logx.optimizely.com.\r\n\r\n## 1.0.0\r\n\r\n* introduced support for full stack projects in optimizely x. no breaking changes from previous version.\r\n* introduced more graceful exception handling in instantiation and core methods.\r\n* updated whitelisting to precede audience matching.\r\n\r\n## 0.1.3\r\n\r\n* added support for v2 endpoint and datafile.\r\n* updated dispatch_event to consume an event object instead of url and params. the event object comprises of four properties: url (string representing url to dispatch event to), params (dict representing the params to be set for the event), http_verb (one of 'get' or 'post') and headers (header values to be sent along).\r\n* fixed issue with tracking events for experiments in groups.\r\n\r\n## 0.1.2\r\n\r\n* updated requirements file.\r\n\r\n## 0.1.1\r\n\r\n* introduced option to skip json schema validation.\r\n\r\n## 0.1.0\r\n\r\n* beta release of the python sdk for server-side testing.\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "optimizely-sdk",
  "package_url": "https://pypi.org/project/optimizely-sdk/",
  "project_url": "https://pypi.org/project/optimizely-sdk/",
  "project_urls": {
    "Homepage": "https://github.com/optimizely/python-sdk"
  },
  "release_url": "https://pypi.org/project/optimizely-sdk/4.1.1/",
  "requires_dist": [
    "jsonschema (>=3.2.0)",
    "pyrsistent (>=0.16.0)",
    "requests (>=2.21)",
    "pyOpenSSL (>=19.1.0)",
    "cryptography (>=2.8.0)",
    "idna (>=2.10)",
    "six (>=1.12.0)",
    "cryptography (>=2.8.0) ; extra == 'test'",
    "pyrsistent (>=0.16.0) ; extra == 'test'",
    "pyOpenSSL (>=19.1.0) ; extra == 'test'",
    "requests (>=2.21) ; extra == 'test'",
    "six (>=1.12.0) ; extra == 'test'",
    "funcsigs (>=0.4) ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest (>=6.2.0) ; extra == 'test'",
    "python-coveralls ; extra == 'test'",
    "coverage ; extra == 'test'",
    "flake8 (>=4.0.1) ; extra == 'test'",
    "mock (>=4.0.0) ; extra == 'test'",
    "jsonschema (>=3.2.0) ; extra == 'test'",
    "idna (>=2.10) ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "python sdk for optimizely feature experimentation, optimizely full stack (legacy), and optimizely rollouts.",
  "version": "4.1.1",
  "releases": [],
  "developers": [
    "developers@optimizely.com",
    "optimizely"
  ],
  "kwds": "optimizelyfeature optimizely_client optimizel_client optimizely get_optimizely_config",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_optimizely_sdk",
  "homepage": "https://github.com/optimizely/python-sdk",
  "release_count": 39,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_cryptography",
    "pypi_flake8",
    "pypi_funcsigs",
    "pypi_idna",
    "pypi_jsonschema",
    "pypi_mock",
    "pypi_pyopenssl",
    "pypi_pyrsistent",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_python_coveralls",
    "pypi_requests",
    "pypi_six"
  ],
  "documentation_summary": "The HTML text is a GitHub repository page for the Optimizely Python SDK, which is used for Optimizely Feature Experimentation and Optimizely Full Stack (legacy). The SDK supports A/B testing and feature management, allowing product development teams to experiment throughout the development process. It includes documentation on how to get started, requirements for different versions, and instructions for installation via PyPi. The SDK can be initialized in three ways: with a datafile, an SDK key, or a custom ConfigManager. It also details the use of PollingConfigManager and AuthDatafilePollingConfigManager for fetching datafiles. The repository includes a guide for SDK development, running unit tests, contributing, and credits for open source projects used. Additionally, it lists other Optimizely SDKs for various platforms. The repository is licensed under the Apache-2.0 license.",
  "embedding": [
    -0.01214990857988596,
    0.007475783582776785,
    -0.015866681933403015,
    -0.03418305516242981,
    0.0038082851096987724,
    0.023201677948236465,
    -0.008024852722883224,
    0.010361914522945881,
    -0.012663779780268669,
    -0.021990912035107613,
    0.014627757482230663,
    -0.0049310605973005295,
    -0.02404640056192875,
    0.0306070689111948,
    -0.022596294060349464,
    -0.02995944954454899,
    0.01010849792510271,
    -0.04091266915202141,
    -0.014360262081027031,
    0.010150734335184097,
    0.005698349326848984,
    -0.0015055397525429726,
    -0.011241832748055458,
    -0.014627757482230663,
    -0.003759009763598442,
    -0.004121535923331976,
    0.001604970428161323,
    -0.03367622196674347,
    0.006578267086297274,
    0.008067088201642036,
    0.0286219734698534,
    0.009094832465052605,
    -0.031761519610881805,
    -0.010622370056807995,
    -0.00616294564679265,
    0.009566469117999077,
    0.011551563628017902,
    0.0005904249846935272,
    0.03142363205552101,
    0.0010259844129905105,
    0.009869160130620003,
    0.029368143528699875,
    -0.006785927806049585,
    0.006880959030240774,
    -0.0093764066696167,
    0.010608292184770107,
    -0.003424640977755189,
    -0.025707684457302094,
    -0.0103689543902874,
    0.024018242955207825,
    0.006226299796253443,
    0.015261298045516014,
    0.012459639459848404,
    -0.019484905526041985,
    0.01520498376339674,
    -0.005395657382905483,
    -0.0025904786307364702,
    0.017640596255660057,
    -0.01444473396986723,
    0.0011896492214873433,
    0.025848472490906715,
    0.011030652560293674,
    -0.014529206790030003,
    -0.010932101868093014,
    -0.012691937386989594,
    0.018724655732512474,
    -0.009848042391240597,
    0.009608704596757889,
    0.018823206424713135,
    -0.0044207083992660046,
    0.035788025707006454,
    0.02220209129154682,
    -0.04161660373210907,
    0.004001867026090622,
    0.022906025871634483,
    -0.011164399795234203,
    -0.028284085914492607,
    0.025609133765101433,
    -0.002249070443212986,
    -0.005740585271269083,
    0.0077855149284005165,
    -0.008841416798532009,
    0.012396285310387611,
    0.029255514964461327,
    0.013783035799860954,
    0.017851777374744415,
    -0.0056948293931782246,
    0.014543285593390465,
    -0.0056948293931782246,
    -0.02765054441988468,
    0.015261298045516014,
    -0.004135614726692438,
    0.004477023147046566,
    0.029227357357740402,
    -0.007496901787817478,
    0.011988002806901932,
    -0.011079927906394005,
    0.017091527581214905,
    -0.005124642513692379,
    -0.019189251586794853,
    -0.008067088201642036,
    0.024679940193891525,
    -0.011931688524782658,
    -0.00853168498724699,
    -0.07264602929353714,
    0.0007738879066891968,
    -0.014613678678870201,
    -0.0022789877839386463,
    0.016274964436888695,
    0.028692366555333138,
    -0.02928367257118225,
    0.03542197868227959,
    -0.016725482419133186,
    -0.05299218371510506,
    -0.01818966493010521,
    -0.005258390214294195,
    -0.0030656345188617706,
    0.006018639076501131,
    -0.017640596255660057,
    0.001707920921035111,
    0.0012116471771150827,
    0.03494330495595932,
    0.013297321274876595,
    -0.021638944745063782,
    0.008595039136707783,
    0.01609194092452526,
    0.00043973902938887477,
    -0.021892361342906952,
    0.018682420253753662,
    -0.01416316069662571,
    -0.0021082835737615824,
    -0.010530859231948853,
    0.0013154774205759168,
    -0.010207049548625946,
    -0.0360695980489254,
    0.012614504434168339,
    -0.004600211512297392,
    -0.010995456017553806,
    -0.03587249666452408,
    0.009108911268413067,
    0.006835203152149916,
    0.029931291937828064,
    -0.0041743312031030655,
    -0.004360873717814684,
    -0.012107672169804573,
    0.03516856208443642,
    0.003801245940849185,
    -0.012663779780268669,
    0.019724242389202118,
    0.0028544540982693434,
    0.023877454921603203,
    0.014853016473352909,
    -0.02393377013504505,
    0.031198373064398766,
    0.011826097965240479,
    -0.0005644673947244883,
    0.008109324611723423,
    0.012522993609309196,
    -0.0387163944542408,
    -0.014085727743804455,
    -0.007391311228275299,
    0.017640596255660057,
    -0.03542197868227959,
    -0.02104763872921467,
    0.020864617079496384,
    0.017809540033340454,
    0.023976005613803864,
    -0.019682006910443306,
    0.0019235007930547,
    0.013248045928776264,
    -0.0016357676358893514,
    0.019132938235998154,
    -0.03421121463179588,
    -0.008623196743428707,
    0.013409950770437717,
    0.011917609721422195,
    -0.002710147527977824,
    -0.0006924954941496253,
    -0.02215985581278801,
    0.009165226481854916,
    0.011572682298719883,
    -0.0011192557867616415,
    -0.0016841631149873137,
    0.02251182310283184,
    0.0021241221111267805,
    -0.01110808551311493,
    -0.008038931526243687,
    -0.004857147578150034,
    0.011431895196437836,
    0.012945353984832764,
    0.02256813831627369,
    0.02470809780061245,
    0.009383445605635643,
    -0.009186344221234322,
    -0.6122540235519409,
    -0.014613678678870201,
    -0.024215344339609146,
    -0.02567952685058117,
    0.012128789909183979,
    0.015613265335559845,
    0.025510583072900772,
    0.007461704779416323,
    -0.033394649624824524,
    0.022906025871634483,
    -0.02496151439845562,
    0.024933356791734695,
    -0.007834790274500847,
    -0.030072078108787537,
    -0.019738320261240005,
    -0.018161507323384285,
    0.015542872250080109,
    -0.023863377049565315,
    0.009200423024594784,
    0.006349488627165556,
    -0.01619049161672592,
    0.00972837395966053,
    -0.03336649015545845,
    -0.000600984029006213,
    0.014979724772274494,
    0.015979310497641563,
    -0.0044242278672754765,
    0.009003321640193462,
    -0.001037423382513225,
    0.004153212998062372,
    -0.019949501380324364,
    0.025003749877214432,
    0.01665508933365345,
    -0.020723829045891762,
    0.05090853571891785,
    0.010066262446343899,
    -0.006880959030240774,
    0.01706336997449398,
    0.005402696784585714,
    0.05104932561516762,
    0.0005613876855932176,
    0.010073301382362843,
    0.004096898250281811,
    0.00804597046226263,
    0.0021593188866972923,
    0.0008104044827632606,
    0.008496488444507122,
    0.022047225385904312,
    -0.008510567247867584,
    -0.003787167137488723,
    0.020949088037014008,
    -0.030072078108787537,
    0.007137895096093416,
    -0.013691524043679237,
    0.020949088037014008,
    0.015289455652236938,
    0.03505593538284302,
    -0.0029301270842552185,
    0.0028720523696392775,
    -0.01321988832205534,
    -0.015373927541077137,
    0.02083645947277546,
    -0.003493274562060833,
    -0.015768131241202354,
    -0.004286960698664188,
    0.018429003655910492,
    0.0017017615027725697,
    0.019175173714756966,
    0.001338355359621346,
    -0.027115553617477417,
    0.008074128068983555,
    0.017443494871258736,
    -0.002370499074459076,
    -0.02276523970067501,
    0.02908657118678093,
    0.022244328632950783,
    0.03744931146502495,
    -0.0022121139336377382,
    -0.008137482218444347,
    0.02480664849281311,
    0.006729613058269024,
    0.019062543287873268,
    0.006222780328243971,
    -0.0186401829123497,
    0.025200853124260902,
    -0.0044242278672754765,
    -0.011903530918061733,
    -0.009566469117999077,
    0.002616876270622015,
    -0.006060875486582518,
    0.024694019928574562,
    0.01357185561209917,
    -0.011129203252494335,
    -0.022483665496110916,
    0.008616156876087189,
    0.02383521944284439,
    0.002754143439233303,
    0.03167704865336418,
    -0.008876613341271877,
    -0.02389153465628624,
    -0.01661285199224949,
    -0.015866681933403015,
    -0.010861707851290703,
    -0.005395657382905483,
    0.02017476037144661,
    0.010537898167967796,
    -0.011044731363654137,
    0.00140698894392699,
    0.024919278919696808,
    -0.0014448254369199276,
    -0.001304038567468524,
    -0.038322191685438156,
    -0.01752796769142151,
    -0.0032803344074636698,
    0.021667102351784706,
    -0.023398779332637787,
    0.013846389949321747,
    0.012804566882550716,
    0.027889881283044815,
    -0.000952951202634722,
    -0.004325677175074816,
    -0.00513168191537261,
    0.0059165689162909985,
    0.006778888404369354,
    0.019484905526041985,
    0.0033260900527238846,
    -0.005846175365149975,
    -0.024018242955207825,
    -0.0280165895819664,
    -0.00464596739038825,
    0.012706016190350056,
    0.0003757250087801367,
    0.020949088037014008,
    -0.010045143775641918,
    0.03958927094936371,
    0.01248075719922781,
    0.05504767224192619,
    -0.009277855977416039,
    0.004114496521651745,
    -0.017457572743296623,
    -0.01214990857988596,
    0.0038047656416893005,
    0.009890278801321983,
    -0.010967298410832882,
    -0.001287320046685636,
    -0.018006643280386925,
    -0.007236445788294077,
    -0.0008763983496464789,
    -0.012142868712544441,
    -0.017330866307020187,
    0.0034633574541658163,
    0.004227126017212868,
    -0.01793624833226204,
    0.029199199751019478,
    0.019442668184638023,
    -0.010812432505190372,
    -0.011474130675196648,
    -0.019696084782481194,
    0.004825470503419638,
    0.007475783582776785,
    0.0030832327902317047,
    0.0010805393103510141,
    -0.012572268955409527,
    -0.012403324246406555,
    -0.02124474011361599,
    0.006050316151231527,
    -0.03891349583864212,
    0.028748681768774986,
    -0.011396698653697968,
    -0.035112250596284866,
    -0.014740386977791786,
    -0.020132524892687798,
    -0.025595055893063545,
    0.013649288564920425,
    0.006764809601008892,
    0.00612422963604331,
    -0.00991139654070139,
    -0.022385114803910255,
    0.0006480596493929625,
    -0.001347154495306313,
    -0.002366979606449604,
    0.031648892909288406,
    -0.03911059722304344,
    -0.0054378933273255825,
    0.03556276857852936,
    0.00917226541787386,
    0.010073301382362843,
    0.021779730916023254,
    -0.026777666062116623,
    -0.004498140886425972,
    -0.029311830177903175,
    0.023778904229402542,
    0.019498983398079872,
    0.019189251586794853,
    -0.034098584204912186,
    0.0063318898901343346,
    -0.006775368936359882,
    -0.002310664625838399,
    -0.0021153229754418135,
    0.045051801949739456,
    0.013783035799860954,
    0.018020721152424812,
    0.006659219507128,
    -0.01110104564577341,
    -0.006789447274059057,
    -0.01568365842103958,
    0.005684270523488522,
    -0.008313465863466263,
    0.006511393468827009,
    -0.019217409193515778,
    0.0560331791639328,
    0.012459639459848404,
    -0.015782209113240242,
    0.000935352873057127,
    0.00883437693119049,
    0.011213675141334534,
    0.001372672151774168,
    0.005043690092861652,
    -0.018245980143547058,
    0.011122164316475391,
    0.008792140521109104,
    0.005054248962551355,
    -0.013163574039936066,
    -0.029987607151269913,
    -0.020906852558255196,
    -0.013304360210895538,
    0.03280334547162056,
    0.029790503904223442,
    0.03539382293820381,
    -0.028129220008850098,
    -0.012241419404745102,
    0.028312241658568382,
    0.009059635922312737,
    -0.029706032946705818,
    0.03857560455799103,
    -0.0037202935200184584,
    0.02048449218273163,
    -0.027903961017727852,
    0.02531348168849945,
    -0.022173933684825897,
    0.021836046129465103,
    0.007130855694413185,
    0.05918680503964424,
    -0.024215344339609146,
    0.006398763973265886,
    -0.002284267218783498,
    0.032521769404411316,
    0.022948261350393295,
    0.0024408926256000996,
    -0.003296172944828868,
    0.007715121377259493,
    0.006768329534679651,
    -0.0008605598122812808,
    0.007482822984457016,
    0.015247219242155552,
    -0.003787167137488723,
    0.0006845762254670262,
    -0.005737065337598324,
    0.024567311629652977,
    0.013149495236575603,
    0.00991139654070139,
    0.018569789826869965,
    0.015979310497641563,
    0.029508931562304497,
    0.036604590713977814,
    -0.03373253718018532,
    -0.020343704149127007,
    -0.01347330491989851,
    1.0620885404932778e-05,
    -0.019344117492437363,
    0.0034140818752348423,
    -0.01910478062927723,
    0.014501049183309078,
    -0.013860468752682209,
    0.001373552018776536,
    0.0006295813363976777,
    0.022751159965991974,
    0.017330866307020187,
    0.01479670125991106,
    -0.003517912235110998,
    -0.005620916374027729,
    -0.019372275099158287,
    0.01834453083574772,
    0.0014307467499747872,
    -0.007708081975579262,
    -0.015979310497641563,
    0.000476475601317361,
    0.023666275665163994,
    -0.027720937505364418,
    0.026369383558630943,
    -0.010425268672406673,
    -0.0034651171881705523,
    -0.022539980709552765,
    -0.006279095076024532,
    -0.028199613094329834,
    -0.01199504267424345,
    0.022173933684825897,
    -0.007204768713563681,
    0.006764809601008892,
    -0.003836442483589053,
    0.021413685753941536,
    0.023257993161678314,
    -0.002685509854927659,
    0.0019674967043101788,
    0.051218267530202866,
    0.022990498691797256,
    0.0014448254369199276,
    -0.020498570054769516,
    -0.020709751173853874,
    -0.01818966493010521,
    0.00562795577570796,
    -0.013233967125415802,
    0.008123403415083885,
    -0.024018242955207825,
    0.024271659553050995,
    -0.01273417379707098,
    -0.0041954489424824715,
    -0.008024852722883224,
    0.022708924487233162,
    -0.003466876922175288,
    0.0007756477571092546,
    -0.014810780063271523,
    -0.01828821562230587,
    0.024525076150894165,
    0.027495678514242172,
    0.02408863604068756,
    0.024665862321853638,
    0.00562795577570796,
    -0.027692779898643494,
    -0.010551976971328259,
    -0.04288368672132492,
    0.0005781061481684446,
    0.015500635839998722,
    0.013107258826494217,
    -0.033901482820510864,
    -0.008214914239943027,
    0.008010773919522762,
    0.020400019362568855,
    0.008904770016670227,
    -0.002977642696350813,
    0.0020730867981910706,
    -0.001992134377360344,
    -0.012853842228651047,
    -0.022188013419508934,
    -0.02221617102622986,
    0.004906422924250364,
    -0.012318852357566357,
    -0.0064339605160057545,
    0.00827826838940382,
    0.020048052072525024,
    0.001912941806949675,
    0.020132524892687798,
    -0.023694433271884918,
    -0.045868366956710815,
    -0.0033947236370295286,
    0.005251350812613964,
    0.009108911268413067,
    0.035731710493564606,
    -0.014268750324845314,
    0.02556689828634262,
    0.022737082093954086,
    0.018161507323384285,
    0.015571029856801033,
    0.0060362378135323524,
    0.014571442268788815,
    -0.02521493099629879,
    -0.007701042573899031,
    0.006247418001294136,
    0.00975653063505888,
    -0.032268352806568146,
    0.00046459672739729285,
    0.0220049899071455,
    -0.013888626359403133,
    -0.003570707282051444,
    0.00026727511431090534,
    0.010537898167967796,
    -0.03550645336508751,
    -0.004142654128372669,
    0.008067088201642036,
    0.0036534196697175503,
    0.012114711105823517,
    -0.030691539868712425,
    0.011755704879760742,
    -0.0494161956012249,
    -0.01074907835572958,
    -0.045305218547582626,
    -0.00825011171400547,
    -0.00779255386441946,
    -0.0034527983516454697,
    0.011023612692952156,
    0.0020378902554512024,
    0.028861312195658684,
    -0.02246958762407303,
    -0.003751970361918211,
    -0.006789447274059057,
    -0.011804980225861073,
    -0.017950328066945076,
    -0.0032152205239981413,
    0.030269179493188858,
    -0.006071434356272221,
    -0.00804597046226263,
    0.014177239499986172,
    0.009566469117999077,
    -0.007496901787817478,
    -0.005877852439880371,
    -0.010016987100243568,
    -0.0050612883642315865,
    -0.03136731684207916,
    -0.005877852439880371,
    -0.020442254841327667,
    -0.00863727554678917,
    -0.010094420053064823,
    0.011819059029221535,
    0.029255514964461327,
    -0.0011474131606519222,
    0.013698563911020756,
    -0.011199596337974072,
    -0.01479670125991106,
    0.01268489845097065,
    0.010080341249704361,
    0.0001317677233600989,
    0.002435613190755248,
    0.005659632850438356,
    -0.004258803091943264,
    -0.005251350812613964,
    -0.010573094710707664,
    0.005311185028403997,
    -0.00827826838940382,
    -0.0007048143306747079,
    0.012403324246406555,
    -0.001560974633321166,
    0.026707271113991737,
    -0.01971016451716423,
    0.010678685270249844,
    0.02311720699071884,
    -0.010235206224024296,
    0.002504246775060892,
    0.01065052766352892,
    0.0207379087805748,
    -0.0024338532239198685,
    -0.0019270204938948154,
    0.03863191977143288,
    -0.0013964299578219652,
    -0.0220049899071455,
    0.019696084782481194,
    -0.0153035344555974,
    0.008721747435629368,
    0.02684805914759636,
    0.009080753661692142,
    0.017049292102456093,
    0.005624435842037201,
    -0.009812845848500729,
    -0.027340812608599663,
    -0.012269577011466026,
    0.02984681911766529,
    -0.0034721565898507833,
    -0.011431895196437836,
    -0.011734587140381336,
    0.014726308174431324,
    -0.007327957544475794,
    -0.011424855329096317,
    -0.008426095359027386,
    -0.0020202917512506247,
    -0.0239900853484869,
    0.005624435842037201,
    -0.012389245443046093,
    -0.0022772278171032667,
    -0.02805882692337036,
    0.0021082835737615824,
    -0.0220049899071455,
    -0.03561908006668091,
    0.013241006061434746,
    -0.014472891576588154,
    0.017232313752174377,
    -0.004399590194225311,
    0.00827826838940382,
    -0.023821141570806503,
    -0.01321988832205534,
    8.144741150317714e-05,
    0.003759009763598442,
    0.015219062566757202,
    -0.007834790274500847,
    0.02165302261710167,
    0.03820956125855446,
    0.029480773955583572,
    0.009925475344061852,
    0.012424442917108536,
    0.012973511591553688,
    0.02237103506922722,
    -0.02484888583421707,
    0.003081472823396325,
    0.015402085147798061,
    0.012396285310387611,
    -0.032014936208724976,
    -0.0058144982904195786,
    0.015359848737716675,
    0.011199596337974072,
    -0.015922997146844864,
    0.008728786371648312,
    0.0226103737950325,
    0.019189251586794853,
    0.005955285392701626,
    -0.009151147678494453,
    -0.03305676206946373,
    -0.015542872250080109,
    0.018147429451346397,
    -0.0011887692380696535,
    0.02745344303548336,
    -0.04232053831219673,
    -0.009995868429541588,
    0.012952392920851707,
    0.0015732934698462486,
    0.006282614544034004,
    -0.0034879951272159815,
    0.0007664086297154427,
    -0.02591886557638645,
    0.012910157442092896,
    0.03438015654683113,
    0.01900622993707657,
    -0.014810780063271523,
    0.009848042391240597,
    -0.0306070689111948,
    -0.007222366984933615,
    0.024215344339609146,
    0.027692779898643494,
    0.01854163222014904,
    0.017513887956738472,
    0.027594229206442833,
    0.002162838587537408,
    0.024778490886092186,
    0.018879521638154984,
    -0.007933340966701508,
    0.016443908214569092,
    -0.011650114320218563,
    -0.01904846541583538,
    -0.015514714643359184,
    -0.029790503904223442,
    -0.02953708916902542,
    -0.01593707501888275,
    -0.004403109662234783,
    0.025947023183107376,
    0.022089462727308273,
    -0.011903530918061733,
    0.0038223639130592346,
    0.02455323189496994,
    0.01158676017075777,
    0.04110977053642273,
    0.01510643307119608,
    0.013409950770437717,
    0.032887816429138184,
    0.025651371106505394,
    -0.017894012853503227,
    0.00019380194135010242,
    -0.026256753131747246,
    -0.006166465580463409,
    0.031761519610881805,
    0.011115124449133873,
    -0.017682833597064018,
    -0.019189251586794853,
    0.001844308222644031,
    -0.0023405819665640593,
    -0.0159933902323246,
    -0.016683245077729225,
    0.03035365231335163,
    0.010425268672406673,
    0.008862534537911415,
    -0.03153626248240471,
    -0.022272484377026558,
    -0.0246517825871706,
    0.028565658256411552,
    -0.006448039319366217,
    -0.0017228794749826193,
    0.012093593366444111,
    0.001365632750093937,
    -0.018274137750267982,
    0.02684805914759636,
    0.024412445724010468,
    0.010636448860168457,
    0.00016388473159167916,
    -0.005634995177388191,
    -0.024891121312975883,
    -0.01523314043879509,
    -0.03395779803395271,
    0.012107672169804573,
    -0.008397937752306461,
    0.010601252317428589,
    -0.018062956631183624,
    -0.011277029290795326,
    0.04969777166843414,
    0.03350728005170822,
    -0.011699389666318893,
    0.019935423508286476,
    0.012135829776525497,
    0.04085635393857956,
    -0.036491960287094116,
    -0.011854255571961403,
    0.011192557401955128,
    -0.032521769404411316,
    0.007891104556620121,
    -0.004575573839247227,
    -0.01818966493010521,
    -0.008116363547742367,
    -0.019836872816085815,
    -0.009059635922312737,
    0.004881785251200199,
    -0.01074907835572958,
    -0.022483665496110916,
    -0.002240271307528019,
    -0.004058181773871183,
    0.0037202935200184584,
    -0.014754465781152248,
    -0.020920930430293083,
    -0.015528793446719646,
    -0.027228184044361115,
    -0.02659464254975319,
    -0.018400846049189568,
    0.007869986817240715,
    -0.005663152318447828,
    0.02455323189496994,
    0.010664606466889381,
    0.006001040805131197,
    0.04105345532298088,
    -0.01661285199224949,
    0.006866880226880312,
    0.0009978270391002297,
    0.0063037327490746975,
    -0.024285737425088882,
    0.004399590194225311,
    0.0014025893760845065,
    0.00789814442396164,
    0.0274112056940794,
    -0.0008605598122812808,
    -0.052597980946302414,
    -0.015289455652236938,
    -0.0009168745600618422,
    0.054118476808071136,
    0.019189251586794853,
    -0.0015266577247530222,
    0.003586545819416642,
    0.01675364002585411,
    0.02424350194633007,
    0.012234380468726158,
    -0.025595055893063545,
    0.04336236044764519,
    -0.007750317919999361,
    -0.01782361976802349,
    0.020385941490530968,
    -0.0005565481260418892,
    0.015908917412161827,
    -0.005261909682303667,
    0.020005816593766212,
    0.014754465781152248,
    -0.036548275500535965,
    -0.02068159356713295,
    -0.011136242188513279,
    0.0037977262400090694,
    -0.0044207083992660046,
    0.0033014523796737194,
    -0.026566484943032265,
    -0.04961329698562622,
    -0.017190078273415565,
    0.03854744881391525,
    0.010256324894726276,
    -0.013149495236575603,
    -0.02210354059934616,
    0.0022085942327976227,
    0.023525487631559372,
    -0.005314704962074757,
    0.007173091638833284,
    -0.007137895096093416,
    -0.04879673570394516,
    -0.006676817778497934,
    -0.031254690140485764,
    -0.023708511143922806,
    -0.014740386977791786,
    0.02210354059934616,
    0.01120663620531559,
    -0.03973005712032318,
    -0.018048878759145737,
    -0.00789814442396164,
    -0.0375056266784668,
    0.005092965438961983,
    -0.011776822619140148,
    0.019498983398079872,
    0.004723399877548218,
    0.015289455652236938,
    0.0041848900727927685,
    0.005895450711250305,
    0.002164598321542144,
    0.04012426361441612,
    -0.030804170295596123,
    0.005209114868193865,
    0.015078275464475155,
    -0.0072997999377548695,
    -0.010284481570124626,
    -0.011213675141334534,
    -0.007989655248820782,
    -0.007827750407159328,
    -0.009925475344061852,
    -0.0015336971264332533,
    -0.004346794914454222,
    0.040321364998817444,
    -0.006659219507128,
    -0.004945139400660992,
    -0.018766891211271286,
    0.03153626248240471,
    -0.0015944114420562983,
    0.0019692564383149147,
    0.02011844515800476,
    -0.006757770664989948,
    -0.003338408889248967,
    -0.002558801556006074,
    0.007510980125516653,
    0.01700705476105213,
    0.004103937651962042,
    -0.010122576728463173,
    -0.007363154087215662,
    0.01130518689751625,
    -0.02175157330930233,
    -0.004772675223648548,
    -0.016528381034731865,
    0.018457161262631416,
    0.0073068393394351006,
    0.00681408541277051,
    0.01148820947855711,
    0.020639358088374138,
    -0.015021960251033306,
    0.016894426196813583,
    -0.008053009398281574,
    0.027326734736561775,
    -0.014965645968914032,
    0.0019217409426346421,
    0.00942568201571703,
    0.0006814965163357556,
    -0.012544111348688602,
    -0.012361088767647743,
    0.015120510943233967,
    0.011009533889591694,
    0.00982692465186119,
    0.016739560291171074,
    -0.007729199714958668,
    -0.03682984784245491,
    -0.003635821398347616,
    0.01179090142250061,
    -0.006374126300215721,
    -0.002354660537093878,
    -0.014712229371070862,
    0.007518019527196884,
    -0.007940379902720451,
    -0.020512649789452553,
    0.004244724754244089,
    -0.015514714643359184,
    0.00042588033829815686,
    0.00035988647141493857,
    -0.0064515587873756886,
    -0.02715778909623623,
    0.011115124449133873,
    0.009355287998914719,
    -0.024891121312975883,
    0.038378503173589706,
    0.1714221090078354,
    0.01065052766352892,
    -0.004807872232049704,
    0.02089277282357216,
    0.012945353984832764,
    0.02521493099629879,
    -0.0006946952780708671,
    -0.0015996909933164716,
    -0.02908657118678093,
    0.01766875386238098,
    0.02342693693935871,
    -0.0017105606384575367,
    0.0033102515153586864,
    0.00012604825315065682,
    -0.01357185561209917,
    -0.007869986817240715,
    -0.023525487631559372,
    -0.016922583803534508,
    -0.018372688442468643,
    -0.015725895762443542,
    -0.007095659151673317,
    -0.02220209129154682,
    -0.009235619567334652,
    -0.01273417379707098,
    0.008538724854588509,
    -0.0023986564483493567,
    -0.02984681911766529,
    -0.01579628884792328,
    0.0032468975987285376,
    0.019062543287873268,
    -0.01065052766352892,
    -0.012537072412669659,
    0.010207049548625946,
    -0.013930861838161945,
    -0.019696084782481194,
    -0.031705208122730255,
    -0.016795875504612923,
    0.0003871639200951904,
    0.034605417400598526,
    0.019090700894594193,
    -0.006880959030240774,
    -0.02434205263853073,
    -0.0009450319339521229,
    -0.03102942928671837,
    -0.013072062283754349,
    -0.014036452397704124,
    -0.02130105532705784,
    0.01095321960747242,
    0.008060049265623093,
    0.002308904891833663,
    -0.023441016674041748,
    -0.030522596091032028,
    0.019076623022556305,
    0.0005446692812256515,
    -0.01337475422769785,
    -0.010411189869046211,
    0.008510567247867584,
    0.028819074854254723,
    0.016162334010004997,
    0.04752965271472931,
    -0.012621544301509857,
    0.018682420253753662,
    -0.016683245077729225,
    -0.0006946952780708671,
    -0.03801245987415314,
    -0.0005561081925407052,
    -0.02558097615838051,
    -0.0022261925041675568,
    -0.008742865175008774,
    0.02582031488418579,
    0.004814911633729935,
    -0.033084917813539505,
    -0.0286219734698534,
    -0.00817971769720316,
    -0.009517193771898746,
    -0.014501049183309078,
    0.05017644539475441,
    0.008130442351102829,
    0.028255928307771683,
    0.014226514846086502,
    -0.012213261798024178,
    0.011572682298719883,
    -0.0146981505677104,
    0.006321331020444632,
    -0.022272484377026558,
    -0.0004265402676537633,
    0.0491909384727478,
    -0.016739560291171074,
    -0.025397954508662224,
    0.0033612868282943964,
    -0.04778306931257248,
    -0.027903961017727852,
    0.013163574039936066,
    -0.007869986817240715,
    0.011565642431378365,
    0.025257166475057602,
    -0.0044312672689557076,
    0.01783769764006138,
    -0.028664208948612213,
    -0.008193796500563622,
    -0.027129633352160454,
    0.05715947598218918,
    0.017176000401377678,
    0.0016920823836699128,
    -0.009883238933980465,
    -0.017204158008098602,
    -0.026003338396549225,
    0.012551150284707546,
    -0.00468820333480835,
    -0.013839351013302803,
    0.015725895762443542,
    -0.03071969747543335,
    0.006870400160551071,
    -0.013944940641522408,
    0.0015292975585907698,
    0.0065430705435574055,
    0.012487797066569328,
    -0.030804170295596123,
    -0.00012527832586783916,
    -0.020963167771697044,
    -0.01192464865744114,
    0.010981377214193344,
    -0.0015328172594308853,
    -0.006968950852751732,
    -0.019780557602643967,
    -0.012572268955409527,
    -0.015866681933403015,
    -0.00571946706622839,
    -0.018105193972587585,
    -0.003681577043607831,
    0.015247219242155552,
    -0.01809111423790455,
    0.01583852432668209,
    0.009284894913434982,
    -0.013114298693835735,
    -0.048515159636735916,
    -0.028537500649690628,
    -0.01257930789142847,
    -0.01604970544576645,
    0.02449691854417324,
    -0.014965645968914032,
    -0.00739835062995553,
    0.009453839622437954,
    -0.028917625546455383,
    -0.0003209500864613801,
    -0.021075796335935593,
    0.015458399429917336,
    0.00468820333480835,
    -0.0010611811885610223,
    0.016894426196813583,
    0.006634581834077835,
    -0.017401259392499924,
    0.017429416999220848,
    -0.004086339380592108,
    0.02622859738767147,
    -0.0033524876926094294,
    -0.019273724406957626,
    -0.011861295439302921,
    0.0044418261386454105,
    0.007405390031635761,
    -0.015064196661114693,
    -0.005515326280146837,
    -0.005473090335726738,
    -0.001844308222644031,
    -0.021005403250455856,
    -0.008925888687372208,
    -0.17986932396888733,
    0.02134329080581665,
    0.028002511709928513,
    -0.030241021886467934,
    0.004286960698664188,
    0.002685509854927659,
    0.01155860349535942,
    0.0076940031722188,
    -0.0028949303086847067,
    -0.018583869561553,
    0.03764641284942627,
    0.02704516053199768,
    -0.029114726930856705,
    -0.034098584204912186,
    0.020005816593766212,
    0.010537898167967796,
    -0.016373515129089355,
    -0.011410776525735855,
    0.03266255557537079,
    0.005990481935441494,
    0.026045573875308037,
    -0.011572682298719883,
    0.020301468670368195,
    0.0070041473954916,
    -0.002462010597810149,
    -0.015289455652236938,
    -0.03246545419096947,
    -0.009672058746218681,
    0.0071977293118834496,
    -0.01721823588013649,
    -0.01219918392598629,
    0.021709337830543518,
    0.01555695105344057,
    0.02052672766149044,
    0.029931291937828064,
    0.006528991740196943,
    0.03195862099528313,
    -0.0029917212668806314,
    -0.01296647172421217,
    0.03271887078881264,
    0.01706336997449398,
    0.029255514964461327,
    0.00848240964114666,
    -0.005979923065751791,
    0.0018372688209638,
    0.003150106640532613,
    0.029058413580060005,
    -0.008489449508488178,
    0.0016771237133070827,
    -0.020442254841327667,
    0.052851397544145584,
    -0.007813672535121441,
    0.006997107993811369,
    -0.008573921397328377,
    -0.0016771237133070827,
    0.008158599957823753,
    0.007968537509441376,
    -0.021512236446142197,
    -0.011762743815779686,
    -0.022680766880512238,
    0.011467091739177704,
    -9.096152643905953e-05,
    -0.0011377340415492654,
    -0.030578911304473877,
    -0.012804566882550716,
    -0.009052596986293793,
    -0.031508103013038635,
    0.025454267859458923,
    -0.020259233191609383,
    0.01238220650702715,
    0.018978072330355644,
    0.026665035635232925,
    0.02836855687201023,
    0.00848240964114666,
    0.03719589486718178,
    0.010087380185723305,
    0.011143282055854797,
    0.01243148185312748,
    0.026256753131747246,
    -0.017767304554581642,
    -0.009200423024594784,
    0.020104367285966873,
    -0.011727547273039818,
    0.02455323189496994,
    0.009214501827955246,
    -0.0019956540782004595,
    -0.017457572743296623,
    -0.007363154087215662,
    -0.011959846131503582,
    -0.013670406304299831,
    0.017978485673666,
    -0.000720652868039906,
    0.0018601467600092292,
    -0.0010347835486754775,
    -0.01090394426137209,
    0.011636036448180676,
    0.0029248474165797234,
    0.0032222599256783724,
    0.023257993161678314,
    0.00582153769209981,
    0.01074907835572958,
    -0.002671431051567197,
    -0.009249698370695114,
    0.002660872181877494,
    0.03345096483826637,
    0.02180788852274418,
    -0.02506006509065628,
    0.005497728008776903,
    0.021892361342906952,
    -0.008813259191811085,
    -0.02577807940542698,
    -0.006968950852751732,
    0.010460465215146542,
    0.000248796830419451,
    -0.028819074854254723,
    0.047501493245363235,
    0.00932009145617485,
    -0.011298147030174732,
    0.018457161262631416,
    -0.02720002643764019,
    0.03046628087759018,
    -0.008031891658902168,
    -0.019372275099158287,
    0.02552466280758381,
    -0.038434818387031555,
    -0.04620625451207161,
    -0.08999097347259521,
    -0.0401524193584919,
    0.01405757013708353,
    0.00917226541787386,
    -0.007729199714958668,
    -0.0013885106891393661,
    -0.002729505766183138,
    0.004477023147046566,
    0.00965797994285822,
    0.003794206539168954,
    -0.0060643949545919895,
    0.021413685753941536,
    -0.011931688524782658,
    -0.00028003391344100237,
    0.001226605731062591,
    0.0013700323179364204,
    -0.01143893413245678,
    -0.013783035799860954,
    -0.008876613341271877,
    0.006198142655193806,
    -0.016570616513490677,
    -0.0031571458093822002,
    0.00621574092656374,
    0.005216154269874096,
    0.0048395493067801,
    0.009763570502400398,
    -0.037111423909664154,
    0.01634535752236843,
    0.02089277282357216,
    0.008975164033472538,
    0.022497743368148804,
    -0.030184708535671234,
    -0.011973924934864044,
    -0.011755704879760742,
    0.008897731080651283,
    0.020709751173853874,
    -0.03775904327630997,
    -0.015599186532199383,
    0.018203744664788246,
    -0.0028562138322740793,
    -0.005286547355353832,
    -0.0023898573126643896,
    0.009362327866256237,
    -0.023201677948236465,
    -0.01900622993707657,
    0.013304360210895538,
    0.009489036165177822,
    0.027185946702957153,
    -0.005022571887820959,
    -0.017133763059973717,
    -0.00996067188680172,
    0.008165638893842697,
    -0.020639358088374138,
    -0.000304451648844406,
    -0.0037836474366486073,
    -0.007975577376782894,
    -0.001399949542246759,
    -0.0029565244913101196,
    0.0022121139336377382,
    -0.023708511143922806,
    -0.012853842228651047,
    -0.0033225705847144127,
    -0.00394907221198082,
    0.006430441047996283,
    -0.0099817905575037,
    0.0153880063444376,
    0.011340383440256119,
    -0.007204768713563681,
    0.008426095359027386,
    -0.023145364597439766,
    0.0002694748982321471,
    0.027847645804286003,
    -0.011361501179635525,
    0.022427350282669067,
    -0.02089277282357216,
    -0.00014056690270081162,
    0.002926607383415103,
    -0.01077019702643156,
    0.005782821215689182,
    -0.0011104565346613526,
    -0.013487383723258972,
    0.006282614544034004,
    -0.018245980143547058,
    -0.017894012853503227,
    0.009876199997961521,
    0.01056605577468872,
    0.015571029856801033,
    -0.0034967942629009485,
    0.009031478315591812,
    -0.05530108883976936,
    0.014501049183309078,
    0.0014527447056025267,
    0.012079514563083649,
    -0.0033313697203993797,
    -0.010277442634105682,
    -0.0004857147578150034,
    0.010601252317428589,
    -0.010777235962450504,
    -0.029677875339984894,
    0.022638531401753426,
    -0.053104814141988754,
    0.0032820941414684057,
    -0.09128621220588684,
    0.014360262081027031,
    0.00789814442396164,
    -0.02796027436852455,
    0.0014483450213447213,
    -0.02607373148202896,
    0.010474544018507004,
    -0.033648066222667694,
    0.03294413164258003,
    -0.009805806912481785,
    -0.010488622821867466,
    -0.006092552561312914,
    -0.022934183478355408,
    0.0044207083992660046,
    0.005230232607573271,
    -0.016387593001127243,
    0.024567311629652977,
    -0.019372275099158287,
    0.0438973493874073,
    0.0019622172694653273,
    -0.005367499776184559,
    -0.017556125298142433,
    0.04840252920985222,
    -0.013691524043679237,
    -0.03601328656077385,
    0.0045720539055764675,
    -0.017176000401377678,
    0.02959340251982212,
    0.007827750407159328,
    -0.03249361366033554,
    0.005684270523488522,
    -0.003766049165278673,
    0.0005864653503522277,
    0.010207049548625946,
    0.029734190553426743,
    0.0068211243487894535,
    0.038125086575746536,
    -0.0066732983104884624,
    0.022019067779183388,
    0.011523406021296978,
    -0.037618257105350494,
    -0.01721823588013649,
    0.014712229371070862,
    -0.024187186732888222,
    -0.02180788852274418,
    0.0051879966631531715,
    -0.0012978790327906609,
    -0.023257993161678314,
    0.030888643115758896,
    0.015317613258957863,
    0.032071251422166824,
    0.01700705476105213,
    -0.037984300404787064,
    -0.027214104309678078,
    0.0267495084553957,
    -0.010439347475767136,
    0.03136731684207916,
    -0.005744104739278555,
    -0.011431895196437836,
    0.008651354350149632,
    0.013902705162763596,
    -0.022680766880512238,
    0.01971016451716423,
    0.0039068362675607204,
    0.0005094725638628006,
    -0.004832509905099869,
    -0.03567539528012276,
    -0.007736239116638899,
    -0.01479670125991106,
    -0.0031624254770576954,
    -0.03336649015545845,
    -0.038491133600473404,
    0.013691524043679237,
    0.00463540805503726,
    0.026369383558630943,
    -0.03246545419096947,
    -0.009263777174055576,
    -0.001502020051702857,
    -0.01931595988571644,
    0.02190643921494484,
    0.025792157277464867,
    -0.0076940031722188,
    -0.021413685753941536,
    -0.0013964299578219652,
    0.004389031324535608,
    0.0143109867349267,
    -0.043531306087970734,
    0.005275988485664129,
    -0.007320918142795563,
    0.0049486588686704636,
    -0.022427350282669067,
    0.0030145992059260607,
    -0.009207461960613728,
    0.017288628965616226,
    0.008292347192764282,
    -0.0037202935200184584,
    0.00031391074298880994,
    -0.022793397307395935,
    0.0036428605671972036,
    0.016514301300048828,
    -0.0007092139567248523,
    -0.007243485189974308,
    0.04446049779653549,
    -0.02634122595191002,
    -0.028720524162054062,
    -0.005388617981225252,
    -0.00612422963604331,
    -0.013135416433215141,
    -0.004913462325930595,
    0.020498570054769516,
    0.0009432721417397261,
    -0.02511638030409813,
    0.01782361976802349,
    0.009010360576212406,
    -0.01573997363448143,
    -0.0014694631099700928,
    0.0022279524710029364,
    0.0070393444038927555,
    -0.02984681911766529,
    0.02011844515800476,
    -0.002513045910745859,
    0.009489036165177822,
    0.03530935198068619,
    -0.009313052520155907,
    0.005195036064833403,
    0.0003807845350820571,
    0.02490519918501377,
    -0.026059651747345924,
    -0.006947832647711039,
    0.003114909864962101,
    -0.007912223227322102,
    0.003801245940849185,
    0.00012054877151967958,
    -0.021413685753941536,
    -0.01150932814925909,
    -0.016697324812412262,
    -0.019991736859083176,
    -0.0001935819600475952,
    -0.00011779902706621215,
    0.09460878372192383,
    0.006345968693494797,
    -0.019442668184638023,
    -0.005342862103134394,
    -0.004955698270350695,
    0.023807061836123466,
    -0.003062114818021655,
    0.012255498208105564,
    -0.0293963011354208,
    -0.024468760937452316,
    0.007334996480494738,
    -0.015373927541077137,
    -0.007285721134394407,
    -0.018668340519070625,
    -0.01125591155141592,
    0.0010339036816731095,
    -0.017049292102456093,
    0.029002098366618156,
    0.009890278801321983,
    0.012255498208105564,
    0.03271887078881264,
    0.026369383558630943,
    0.01375487819314003,
    -0.024229422211647034,
    -0.01222734060138464,
    0.007820711471140385,
    0.030381809920072556,
    0.004536857362836599,
    0.009918436408042908,
    -0.059017863124608994,
    0.01441657729446888,
    0.010706842876970768,
    -0.013557776808738708,
    -0.012234380468726158,
    -0.009094832465052605,
    -0.0035583884455263615,
    0.00041840103222057223,
    -0.02235695719718933,
    -0.00040828195051290095,
    0.007715121377259493,
    -0.009228580631315708,
    -0.007292760536074638,
    -0.022793397307395935,
    -0.04012426361441612,
    0.004860667046159506,
    -0.014529206790030003,
    0.028917625546455383,
    -0.016570616513490677,
    -0.055751606822013855
  ]
}
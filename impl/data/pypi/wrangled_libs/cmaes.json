{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "lightweight covariance matrix adaptation evolution strategy (cma-es) implementation for python 3.\n# cma-es\n\n[![software license](https://img.shields.io/badge/license-mit-brightgreen.svg?style=flat-square)](./license) [![pypi - downloads](https://img.shields.io/pypi/dw/cmaes)](https://pypistats.org/packages/cmaes)\n\nlightweight covariance matrix adaptation evolution strategy (cma-es) [1] implementation.\n\n![visualize-six-hump-camel](https://user-images.githubusercontent.com/5564044/73486622-db5cff00-43e8-11ea-98fb-8246dbacab6d.gif)\n\n## news\n* **2023/05/23** our paper, [m. nomura, y. akimoto, and i. ono, cma-es with learning rate adaptation: can cma-es with default population size solve multimodal and noisy problems?](https://arxiv.org/abs/2304.03473), has been nominated for the best paper award in the enum track at gecco'23 :whale:\n* **2023/04/01** two papers have been accepted to gecco'23 enum track: (1) [m. nomura, y. akimoto, and i. ono, cma-es with learning rate adaptation: can cma-es with default population size solve multimodal and noisy problems?](https://arxiv.org/abs/2304.03473), and (2) [y. watanabe, k. uchida, r. hamano, s. saito, m. nomura, and s. shirakawa, (1+1)-cma-es with margin for discrete and mixed-integer problems](https://arxiv.org/abs/2305.00849) :tada:\n* **2022/05/13** the paper, [\"cma-es with margin: lower-bounding marginal probability for mixed-integer black-box optimization\"](https://arxiv.org/abs/2205.13482) written by hamano, saito, [@nomuramasahir0](https://github.com/nomuramasahir0) (the maintainer of this library), and shirakawa, has been nominated as best paper at gecco'22 enum track.\n* **2021/03/10** [\"introduction to cma-es sampler\"](https://medium.com/optuna/introduction-to-cma-es-sampler-ee68194c8f88) is published at optuna medium blog. this article explains when and how to make the best use out of cma-es sampler. please check it out!\n* **2021/02/02** the paper [\"warm starting cma-es for hyperparameter optimization\"](https://arxiv.org/abs/2012.06932) written by [@nomuramasahir0](https://github.com/nomuramasahir0), the maintainer of this library, is accepted at aaai 2021 :tada:\n* **2020/07/29** optuna's built-in cma-es sampler which uses this library under the hood is stabled at optuna v2.0. please check out the [v2.0 release blog](https://medium.com/optuna/optuna-v2-3165e3f1fc2).\n\n## installation\n\nsupported python versions are 3.7 or later.\n\n```\n$ pip install cmaes\n```\n\nor you can install via [conda-forge](https://anaconda.org/conda-forge/cmaes).\n\n```\n$ conda install -c conda-forge cmaes\n```\n\n## usage\n\nthis library provides an \"ask-and-tell\" style interface.\n\n```python\nimport numpy as np\nfrom cmaes import cma\n\ndef quadratic(x1, x2):\n    return (x1 - 3) ** 2 + (10 * (x2 + 2)) ** 2\n\nif __name__ == \"__main__\":\n    optimizer = cma(mean=np.zeros(2), sigma=1.3)\n\n    for generation in range(50):\n        solutions = []\n        for _ in range(optimizer.population_size):\n            x = optimizer.ask()\n            value = quadratic(x[0], x[1])\n            solutions.append((x, value))\n            print(f\"#{generation} {value} (x1={x[0]}, x2 = {x[1]})\")\n        optimizer.tell(solutions)\n```\n\nand you can use this library via [optuna](https://github.com/optuna/optuna) [2], an automatic hyperparameter optimization framework.\noptuna's built-in cma-es sampler which uses this library under the hood is available from [v1.3.0](https://github.com/optuna/optuna/releases/tag/v1.3.0) and stabled at [v2.0.0](https://github.com/optuna/optuna/releases/tag/v2.2.0).\nsee [the documentation](https://optuna.readthedocs.io/en/stable/reference/samplers/generated/optuna.samplers.cmaessampler.html) or [v2.0 release blog](https://medium.com/optuna/optuna-v2-3165e3f1fc2) for more details.\n\n```python\nimport optuna\n\ndef objective(trial: optuna.trial):\n    x1 = trial.suggest_uniform(\"x1\", -4, 4)\n    x2 = trial.suggest_uniform(\"x2\", -4, 4)\n    return (x1 - 3) ** 2 + (10 * (x2 + 2)) ** 2\n\nif __name__ == \"__main__\":\n    sampler = optuna.samplers.cmaessampler()\n    study = optuna.create_study(sampler=sampler)\n    study.optimize(objective, n_trials=250)\n```\n\n\n## cma-es variants\n\n#### cma-es with margin [3]\n\ncma-es with margin introduces a lower bound on the marginal probability associated with each discrete dimension so that samples can avoid being fixed to a single point.\nit can be applied to mixed spaces of continuous (float) and discrete (including integer and binary).\n\n|cma-es|cma-eswm|\n|---|---|\n|![cma-es](https://raw.githubusercontent.com/evoconjp/cma-es_with_margin/main/fig/cma-es.gif)|![cma-eswm](https://raw.githubusercontent.com/evoconjp/cma-es_with_margin/main/fig/cma-eswm.gif)|\n\nthe above figures are taken from [evoconjp/cma-es_with_margin](https://github.com/evoconjp/cma-es_with_margin).\n\n<details>\n<summary>source code</summary>\n\n```python\nimport numpy as np\nfrom cmaes import cmawm\n\n\ndef ellipsoid_onemax(x, n_zdim):\n    n = len(x)\n    n_rdim = n - n_zdim\n    r = 10\n    if len(x) < 2:\n        raise valueerror(\"dimension must be greater one\")\n    ellipsoid = sum([(1000 ** (i / (n_rdim - 1)) * x[i]) ** 2 for i in range(n_rdim)])\n    onemax = n_zdim - (0.0 < x[(n - n_zdim) :]).sum()\n    return ellipsoid + r * onemax\n\n\ndef main():\n    binary_dim, continuous_dim = 10, 10\n    dim = binary_dim + continuous_dim\n    bounds = np.concatenate(\n        [\n            np.tile([-np.inf, np.inf], (continuous_dim, 1)),\n            np.tile([0, 1], (binary_dim, 1)),\n        ]\n    )\n    steps = np.concatenate([np.zeros(continuous_dim), np.ones(binary_dim)])\n    optimizer = cmawm(mean=np.zeros(dim), sigma=2.0, bounds=bounds, steps=steps)\n    print(\" evals    f(x)\")\n    print(\"======  ==========\")\n\n    evals = 0\n    while true:\n        solutions = []\n        for _ in range(optimizer.population_size):\n            x_for_eval, x_for_tell = optimizer.ask()\n            value = ellipsoid_onemax(x_for_eval, binary_dim)\n            evals += 1\n            solutions.append((x_for_tell, value))\n            if evals % 300 == 0:\n                print(f\"{evals:5d}  {value:10.5f}\")\n        optimizer.tell(solutions)\n\n        if optimizer.should_stop():\n            break\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\nsource code is also available [here](./examples/cmaes_with_margin.py).\n\n</details>\n\n#### warm starting cma-es [4]\n\nwarm starting cma-es is a method to transfer prior knowledge on similar hpo tasks through the initialization of cma-es.\nhere is the result of an experiment that tuning lightgbm for kaggle's toxic comment classification challenge data, a multilabel classification dataset.\nin this benchmark, we use 10% of a full dataset as the source task, and a full dataset as the target task.\nplease refer [the paper](https://arxiv.org/abs/2012.06932) and/or https://github.com/c-bata/benchmark-warm-starting-cmaes for more details of experiment settings.\n\n![benchmark-lightgbm-toxic](https://github.com/c-bata/benchmark-warm-starting-cmaes/raw/main/result.png)\n\n<details>\n<summary>source code</summary>\n\n```python\nimport numpy as np\nfrom cmaes import cma, get_warm_start_mgd\n\ndef source_task(x1: float, x2: float) -> float:\n    b = 0.4\n    return (x1 - b) ** 2 + (x2 - b) ** 2\n\ndef target_task(x1: float, x2: float) -> float:\n    b = 0.6\n    return (x1 - b) ** 2 + (x2 - b) ** 2\n\nif __name__ == \"__main__\":\n    # generate solutions from a source task\n    source_solutions = []\n    for _ in range(1000):\n        x = np.random.random(2)\n        value = source_task(x[0], x[1])\n        source_solutions.append((x, value))\n\n    # estimate a promising distribution of the source task,\n    # then generate parameters of the multivariate gaussian distribution.\n    ws_mean, ws_sigma, ws_cov = get_warm_start_mgd(\n        source_solutions, gamma=0.1, alpha=0.1\n    )\n    optimizer = cma(mean=ws_mean, sigma=ws_sigma, cov=ws_cov)\n\n    # run ws-cma-es\n    print(\" g    f(x1,x2)     x1      x2  \")\n    print(\"===  ==========  ======  ======\")\n    while true:\n        solutions = []\n        for _ in range(optimizer.population_size):\n            x = optimizer.ask()\n            value = target_task(x[0], x[1])\n            solutions.append((x, value))\n            print(\n                f\"{optimizer.generation:3d}  {value:10.5f}\"\n                f\"  {x[0]:6.2f}  {x[1]:6.2f}\"\n            )\n        optimizer.tell(solutions)\n\n        if optimizer.should_stop():\n            break\n```\n\nthe full source code is available [here](./examples/ws_cma_es.py).\n\n</details>\n\n#### separable cma-es [5]\n\nsep-cma-es is an algorithm which constrains the covariance matrix to be diagonal.\ndue to the reduction of the number of parameters, the learning rate for the covariance matrix can be increased.\nconsequently, this algorithm outperforms cma-es on separable functions.\n\n<details>\n<summary>source code</summary>\n\n```python\nimport numpy as np\nfrom cmaes import sepcma\n\ndef ellipsoid(x):\n    n = len(x)\n    if len(x) < 2:\n        raise valueerror(\"dimension must be greater one\")\n    return sum([(1000 ** (i / (n - 1)) * x[i]) ** 2 for i in range(n)])\n\nif __name__ == \"__main__\":\n    dim = 40\n    optimizer = sepcma(mean=3 * np.ones(dim), sigma=2.0)\n    print(\" evals    f(x)\")\n    print(\"======  ==========\")\n\n    evals = 0\n    while true:\n        solutions = []\n        for _ in range(optimizer.population_size):\n            x = optimizer.ask()\n            value = ellipsoid(x)\n            evals += 1\n            solutions.append((x, value))\n            if evals % 3000 == 0:\n                print(f\"{evals:5d}  {value:10.5f}\")\n        optimizer.tell(solutions)\n\n        if optimizer.should_stop():\n            break\n```\n\nfull source code is available [here](./examples/sepcma_ellipsoid_function.py).\n\n</details>\n\n#### ipop-cma-es [6]\n\nipop-cma-es is a method to restart cma-es with increasing population size like below.\n\n![visualize-ipop-cmaes-himmelblau](https://user-images.githubusercontent.com/5564044/88472274-f9e12480-cf4b-11ea-8aff-2a859eb51a15.gif)\n\n<details>\n<summary>source code</summary>\n\n```python\nimport math\nimport numpy as np\nfrom cmaes import cma\n\ndef ackley(x1, x2):\n    # https://www.sfu.ca/~ssurjano/ackley.html\n    return (\n        -20 * math.exp(-0.2 * math.sqrt(0.5 * (x1 ** 2 + x2 ** 2)))\n        - math.exp(0.5 * (math.cos(2 * math.pi * x1) + math.cos(2 * math.pi * x2)))\n        + math.e + 20\n    )\n\nif __name__ == \"__main__\":\n    bounds = np.array([[-32.768, 32.768], [-32.768, 32.768]])\n    lower_bounds, upper_bounds = bounds[:, 0], bounds[:, 1]\n\n    mean = lower_bounds + (np.random.rand(2) * (upper_bounds - lower_bounds))\n    sigma = 32.768 * 2 / 5  # 1/5 of the domain width\n    optimizer = cma(mean=mean, sigma=sigma, bounds=bounds, seed=0)\n\n    for generation in range(200):\n        solutions = []\n        for _ in range(optimizer.population_size):\n            x = optimizer.ask()\n            value = ackley(x[0], x[1])\n            solutions.append((x, value))\n            print(f\"#{generation} {value} (x1={x[0]}, x2 = {x[1]})\")\n        optimizer.tell(solutions)\n\n        if optimizer.should_stop():\n            # popsize multiplied by 2 (or 3) before each restart.\n            popsize = optimizer.population_size * 2\n            mean = lower_bounds + (np.random.rand(2) * (upper_bounds - lower_bounds))\n            optimizer = cma(mean=mean, sigma=sigma, population_size=popsize)\n            print(f\"restart cma-es with popsize={popsize}\")\n```\n\nfull source code is available [here](./examples/ipop_cmaes.py).\n\n</details>\n\n#### bipop-cma-es [7]\n\nbipop-cma-es applies two interlaced restart strategies, one with an increasing population size and one with varying small population sizes.\n\n![visualize-bipop-cmaes-himmelblau](https://user-images.githubusercontent.com/5564044/88471815-55111800-cf48-11ea-8933-5a4b48c49eba.gif)\n\n<details>\n<summary>source code</summary>\n\n```python\nimport math\nimport numpy as np\nfrom cmaes import cma\n\ndef ackley(x1, x2):\n    # https://www.sfu.ca/~ssurjano/ackley.html\n    return (\n        -20 * math.exp(-0.2 * math.sqrt(0.5 * (x1 ** 2 + x2 ** 2)))\n        - math.exp(0.5 * (math.cos(2 * math.pi * x1) + math.cos(2 * math.pi * x2)))\n        + math.e + 20\n    )\n\nif __name__ == \"__main__\":\n    bounds = np.array([[-32.768, 32.768], [-32.768, 32.768]])\n    lower_bounds, upper_bounds = bounds[:, 0], bounds[:, 1]\n\n    mean = lower_bounds + (np.random.rand(2) * (upper_bounds - lower_bounds))\n    sigma = 32.768 * 2 / 5  # 1/5 of the domain width\n    optimizer = cma(mean=mean, sigma=sigma, bounds=bounds, seed=0)\n\n    n_restarts = 0  # a small restart doesn't count in the n_restarts\n    small_n_eval, large_n_eval = 0, 0\n    popsize0 = optimizer.population_size\n    inc_popsize = 2\n\n    # initial run is with \"normal\" population size; it is\n    # the large population before first doubling, but its\n    # budget accounting is the same as in case of small\n    # population.\n    poptype = \"small\"\n\n    for generation in range(200):\n        solutions = []\n        for _ in range(optimizer.population_size):\n            x = optimizer.ask()\n            value = ackley(x[0], x[1])\n            solutions.append((x, value))\n            print(f\"#{generation} {value} (x1={x[0]}, x2 = {x[1]})\")\n        optimizer.tell(solutions)\n\n        if optimizer.should_stop():\n            n_eval = optimizer.population_size * optimizer.generation\n            if poptype == \"small\":\n                small_n_eval += n_eval\n            else:  # poptype == \"large\"\n                large_n_eval += n_eval\n\n            if small_n_eval < large_n_eval:\n                poptype = \"small\"\n                popsize_multiplier = inc_popsize ** n_restarts\n                popsize = math.floor(\n                    popsize0 * popsize_multiplier ** (np.random.uniform() ** 2)\n                )\n            else:\n                poptype = \"large\"\n                n_restarts += 1\n                popsize = popsize0 * (inc_popsize ** n_restarts)\n\n            mean = lower_bounds + (np.random.rand(2) * (upper_bounds - lower_bounds))\n            optimizer = cma(\n                mean=mean,\n                sigma=sigma,\n                bounds=bounds,\n                population_size=popsize,\n            )\n            print(\"restart cma-es with popsize={} ({})\".format(popsize, poptype))\n```\n\nfull source code is available [here](./examples/bipop_cmaes.py).\n\n</details>\n\n## benchmark results\n\n| [rosenbrock function](https://www.sfu.ca/~ssurjano/rosen.html) | [six-hump camel function](https://www.sfu.ca/~ssurjano/camel6.html) |\n| ------------------- | ----------------------- |\n| ![rosenbrock](https://user-images.githubusercontent.com/5564044/73486735-0cd5ca80-43e9-11ea-9e6e-35028edf4ee8.png) | ![six-hump-camel](https://user-images.githubusercontent.com/5564044/73486738-0e9f8e00-43e9-11ea-8e65-d60fd5853b8d.png) |\n\nthis implementation (green) stands comparison with [pycma](https://github.com/cma-es/pycma) (blue).\nsee [benchmark](./benchmark) for details.\n\n## links\n\n**projects using cmaes:**\n\n* [optuna](https://github.com/optuna/optuna) : a hyperparameter optimization framework that supports cma-es using this library under the hood.\n* (if you have a project which uses `cmaes` and want your own project to be listed here, please submit a github issue.)\n\n**other libraries:**\n\ni respect all libraries involved in cma-es.\n\n* [pycma](https://github.com/cma-es/pycma) : most famous cma-es implementation by nikolaus hansen.\n* [pymoo](https://github.com/msu-coinlab/pymoo) : multi-objective optimization in python.\n* [evojax](https://github.com/google/evojax) : evojax provides a jax-port of this library.\n* [evosax](https://github.com/roberttlange/evosax) : evosax provides jax-based cma-es and sep-cma-es implementation, which is inspired by this library.\n\n**references:**\n\n* [1] [n. hansen, the cma evolution strategy: a tutorial. arxiv:1604.00772, 2016.](https://arxiv.org/abs/1604.00772)\n* [2] [t. akiba, s. sano, t. yanase, t. ohta, m. koyama, optuna: a next-generation hyperparameter optimization framework, kdd, 2019.](https://dl.acm.org/citation.cfm?id=3330701)\n* [3] [r. hamano, s. saito, m. nomura, s. shirakawa, cma-es with margin: lower-bounding marginal probability for mixed-integer black-box optimization, gecco, 2022.](https://arxiv.org/abs/2205.13482)\n* [4] [m. nomura, s. watanabe, y. akimoto, y. ozaki, m. onishi, warm starting cma-es for hyperparameter optimization, aaai, 2021.](https://arxiv.org/abs/2012.06932)\n* [5] [r. ros, n. hansen, a simple modification in cma-es achieving linear time and space complexity, ppsn, 2008.](https://hal.inria.fr/inria-00287367/document)\n* [6] [a. auger, n. hansen, a restart cma evolution strategy with increasing population size, cec, 2005.](https://sci2s.ugr.es/sites/default/files/files/tematicwebsites/eamhco/contributionscec05/auger05arcma.pdf)\n* [7] [n. hansen, benchmarking a bi-population cma-es on the bbob-2009 function testbed, gecco workshop, 2009.](https://hal.inria.fr/inria-00382093/document)\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license  copyright (c) 2020-2021 cyberagent, inc.  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software. ",
  "name": "cmaes",
  "package_url": "https://pypi.org/project/cmaes/",
  "project_url": "https://pypi.org/project/cmaes/",
  "project_urls": {
    "Homepage": "https://github.com/CyberAgentAILab/cmaes"
  },
  "release_url": "https://pypi.org/project/cmaes/0.10.0/",
  "requires_dist": [
    "numpy",
    "scipy ; extra == 'cmawm'"
  ],
  "requires_python": ">=3.7",
  "summary": "lightweight covariance matrix adaptation evolution strategy (cma-es) implementation for python 3.",
  "version": "0.10.0",
  "releases": [],
  "developers": [
    "m.shibata1020@gmail.com",
    "nomura_masahiro@cyberagent.co.jp"
  ],
  "kwds": "adaptation cma cmaes multimodal cmawm",
  "license_kwds": "copyright liable license mit liability",
  "libtype": "pypi",
  "id": "pypi_cmaes",
  "homepage": "",
  "release_count": 18,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_scipy"
  ],
  "documentation_summary": "The HTML text provides information about \"cmaes,\" a Python package available on PyPI for implementing the Covariance Matrix Adaptation Evolution Strategy (CMA-ES), a lightweight version designed for Python 3.7 or later. The latest version, 0.10.0, was released on July 19, 2023. The package, licensed under the MIT License, is developed by Masashi Shibata and maintained by Masahiro Nomura. It includes several features and improvements, such as support for different CMA-ES variants like Warm Starting CMA-ES, Separable CMA-ES, IPOP-CMA-ES, and BIPOP-CMA-ES, catering to various optimization needs. The package has been recognized in academic circles, with papers nominated for awards at GECCO'23 and GECCO'22. It also integrates with Optuna, a hyperparameter optimization framework, enhancing its utility for developers and researchers in science and research fields.",
  "embedding": [
    -0.014231130480766296,
    -0.008772214874625206,
    -0.002463080221787095,
    -0.01869751699268818,
    -0.003472031094133854,
    0.035088859498500824,
    0.006633896380662918,
    -0.008181075565516949,
    -0.0262436643242836,
    -0.021806471049785614,
    -0.01274233590811491,
    0.014377091079950333,
    -0.012735037133097649,
    0.03590623661875725,
    -0.017544429749250412,
    -0.027863824740052223,
    0.02548467181622982,
    -0.029483983293175697,
    -0.003156391903758049,
    0.019310548901557922,
    0.005021034739911556,
    0.001404867973178625,
    -0.018770497292280197,
    -0.021178841590881348,
    0.00623980350792408,
    0.02170429937541485,
    0.021135052666068077,
    -0.006002617999911308,
    -0.004838584456592798,
    0.004433544352650642,
    0.033716831356287,
    0.003552309237420559,
    -0.018405595794320107,
    -0.020040351897478104,
    -0.020434444770216942,
    -0.010034771636128426,
    0.02704644575715065,
    -0.0032822825014591217,
    0.04939297214150429,
    -0.01576371304690838,
    0.014617925509810448,
    0.013734865933656693,
    1.7874437617138028e-05,
    -0.015428004786372185,
    -0.021251821890473366,
    0.0003674094914458692,
    0.008903578855097294,
    -0.02507598139345646,
    -0.022696828469634056,
    0.023061729967594147,
    0.02452133223414421,
    0.030447321012616158,
    -0.024346180260181427,
    0.005725293420255184,
    0.005893147550523281,
    0.015661541372537613,
    -0.0046670809388160706,
    0.007976731285452843,
    -0.0040029617957770824,
    -0.00979393720626831,
    0.011990639381110668,
    -0.004601398948580027,
    -0.024827849119901657,
    0.001602826756425202,
    0.002851699711754918,
    -0.009173605591058731,
    -0.019091609865427017,
    0.014727395959198475,
    0.017996907234191895,
    0.02339743822813034,
    0.047699831426143646,
    0.02039065584540367,
    -0.014581435360014439,
    -0.014231130480766296,
    0.011260838247835636,
    -0.01846398040652275,
    -0.01993817836046219,
    0.013326176442205906,
    -0.023820722475647926,
    0.00161286152433604,
    0.014253024943172932,
    -0.02082853764295578,
    -0.003039623610675335,
    0.03867948427796364,
    0.010552930645644665,
    0.002014252357184887,
    -0.010655103251338005,
    0.020959900692105293,
    -0.04516012221574783,
    -0.020726364105939865,
    0.026141492649912834,
    -0.013311580754816532,
    0.012253368273377419,
    0.004761955235153437,
    -0.030680857598781586,
    0.01998196728527546,
    -0.0012005235766991973,
    0.009239288046956062,
    -0.0006495233974419534,
    -0.01605563424527645,
    0.002559778979048133,
    0.0211496502161026,
    -0.002127371495589614,
    -0.024740273132920265,
    -0.04101485013961792,
    -0.03263672813773155,
    -0.017442258074879646,
    0.009224691428244114,
    0.026112299412488937,
    0.015471793711185455,
    -0.012413924559950829,
    0.043321020901203156,
    -0.005812869407236576,
    -0.03888382762670517,
    0.004696273244917393,
    -0.0056924521923065186,
    0.03783291205763817,
    0.007969433441758156,
    -0.013596203178167343,
    -0.0004401615879032761,
    -0.006633896380662918,
    0.004386107437312603,
    0.009283076040446758,
    -0.008078902959823608,
    0.0037803722079843283,
    0.0029137327801436186,
    -0.03794968128204346,
    -0.01653730310499668,
    -0.0321112684905529,
    -0.024419160559773445,
    0.011260838247835636,
    0.003377156797796488,
    0.011224348098039627,
    0.004371511284261942,
    -0.042153339833021164,
    -0.002260560402646661,
    -0.00730531383305788,
    -0.011749804951250553,
    -0.023061729967594147,
    -0.036052197217941284,
    -0.001575459144078195,
    0.02656477689743042,
    0.01428221631795168,
    0.009786639362573624,
    -0.03494289889931679,
    0.03654846176505089,
    0.013034256175160408,
    0.001698613166809082,
    -0.021397782489657402,
    -0.014201938174664974,
    0.01633295975625515,
    -0.009231990203261375,
    0.010516440495848656,
    0.026258260011672974,
    0.021602125838398933,
    -0.0076483204029500484,
    0.015048508532345295,
    -0.0010919655906036496,
    -0.015676137059926987,
    -0.02314930595457554,
    0.0026236367411911488,
    0.02977590449154377,
    -0.013494031503796577,
    -0.022331928834319115,
    -0.019923582673072815,
    0.027513518929481506,
    0.0073636979795992374,
    -0.009290373884141445,
    -0.022623848170042038,
    -0.012815315276384354,
    -0.013362666592001915,
    0.006389412563294172,
    -0.022580061107873917,
    0.012012533843517303,
    -0.003966471645981073,
    0.014975528232753277,
    -0.005499054677784443,
    0.021281013265252113,
    -0.015603157691657543,
    -0.0063748168759047985,
    0.020799344405531883,
    0.023849915713071823,
    0.004440842662006617,
    0.004995491821318865,
    -0.0045868027955293655,
    -0.011851977556943893,
    -0.0007389240781776607,
    0.00412337901070714,
    0.04302909970283508,
    -0.012362838722765446,
    0.031147930771112442,
    0.03500128164887428,
    -0.01809907890856266,
    -0.018770497292280197,
    -0.5558168888092041,
    -0.0008178338757716119,
    -0.026053916662931442,
    -0.029235851019620895,
    -0.014092468656599522,
    -0.0007886418025009334,
    0.003594272769987583,
    0.012107407674193382,
    -0.020040351897478104,
    0.023105517029762268,
    -0.03602300584316254,
    -0.005790975410491228,
    -0.004159869160503149,
    -0.015457197092473507,
    -0.021645914763212204,
    -0.023689359426498413,
    0.002616338664665818,
    -0.032403189688920975,
    0.0171357411891222,
    0.0006221558433026075,
    -0.016114018857479095,
    0.03269511088728905,
    -0.002003305358812213,
    0.016581092029809952,
    0.007976731285452843,
    0.03730745613574982,
    0.004948054440319538,
    -0.02335365116596222,
    0.019091609865427017,
    -0.004320425447076559,
    -0.006148578133434057,
    0.029878076165914536,
    -0.017325488850474358,
    -0.018157463520765305,
    0.05931827053427696,
    0.003242143429815769,
    -0.00545891560614109,
    0.039350900799036026,
    0.0050867167301476,
    0.004626941867172718,
    -0.01422383263707161,
    -0.022492485120892525,
    0.002200351795181632,
    0.011917660012841225,
    0.0116403354331851,
    0.0020635139662772417,
    0.0041197300888597965,
    -0.008502188138663769,
    0.008852493017911911,
    -0.03666523098945618,
    0.020974496379494667,
    0.014763886108994484,
    0.006017214152961969,
    -0.030885202810168266,
    0.0009761095861904323,
    -0.008538678288459778,
    0.018828880041837692,
    -0.011990639381110668,
    0.014464667066931725,
    -0.0005842974060215056,
    -0.024171028286218643,
    0.021135052666068077,
    -0.0018226794200018048,
    -0.02399587631225586,
    0.00892547331750393,
    0.04936377704143524,
    0.004400703590363264,
    -0.0171357411891222,
    0.007440327201038599,
    -0.025747399777173996,
    0.004991842899471521,
    0.0023371896240860224,
    -0.0024867989122867584,
    -0.006695929449051619,
    0.03526401147246361,
    0.027352962642908096,
    0.013413753360509872,
    0.003992014564573765,
    0.010487248189747334,
    0.01741306483745575,
    0.01499012392014265,
    0.0006276293424889445,
    -0.00021380904945544899,
    -0.017325488850474358,
    0.023090921342372894,
    -0.00365265691652894,
    0.001693139667622745,
    -0.00842920783907175,
    -0.005159697029739618,
    0.012450414709746838,
    0.01974843069911003,
    0.01725250855088234,
    -0.0021602127235382795,
    -0.03800806775689125,
    -0.003222073893994093,
    -0.0008027817239053547,
    0.00924658589065075,
    0.008684638887643814,
    0.002682020887732506,
    -0.04790417477488518,
    -0.016756244003772736,
    -0.014092468656599522,
    -0.005152399186044931,
    -0.00554649205878377,
    0.01569073460996151,
    0.00814458541572094,
    0.02179187536239624,
    0.003039623610675335,
    0.023382842540740967,
    -0.016186999157071114,
    0.0021073019597679377,
    -0.030447321012616158,
    -0.010093155317008495,
    -0.016391342505812645,
    0.016201594844460487,
    -0.04542284831404686,
    0.009764744900166988,
    0.024711081758141518,
    0.017544429749250412,
    -0.01237743441015482,
    0.009611486457288265,
    -0.01745685376226902,
    0.012333646416664124,
    0.015953462570905685,
    0.021412378177046776,
    0.013012361712753773,
    -0.009502016939222813,
    -0.025017598643898964,
    -0.04594830796122551,
    -0.01157465297728777,
    -0.0065609160810709,
    -0.00304509699344635,
    -0.004867776297032833,
    0.0035012229345738888,
    0.03616896644234657,
    -0.0035468356218189,
    -0.0027057393454015255,
    -0.00983042735606432,
    -0.00454301480203867,
    -0.010144242085516453,
    -0.024185623973608017,
    0.005896796938031912,
    -0.003944577649235725,
    -0.021689701825380325,
    -0.031323082745075226,
    -0.002012427896261215,
    0.008327036164700985,
    0.0025196399074047804,
    0.00614128028973937,
    0.013253196142613888,
    0.021499954164028168,
    0.00804971158504486,
    -0.032169654965400696,
    0.01621619053184986,
    -0.004269339144229889,
    -0.009275778196752071,
    -0.029717519879341125,
    -0.015252852812409401,
    -0.04317506030201912,
    -0.016201594844460487,
    0.01569073460996151,
    -0.0026911431923508644,
    -0.012720441445708275,
    -0.0023554344661533833,
    -0.03570189327001572,
    0.02030307985842228,
    -0.024112643674016,
    0.01653730310499668,
    -0.022521676495671272,
    -0.026272855699062347,
    -0.025470074266195297,
    -0.014683607965707779,
    -0.006911220960319042,
    0.0222297552973032,
    0.0018938350258395076,
    0.003524941625073552,
    0.010071261785924435,
    -0.014201938174664974,
    -0.025382498279213905,
    -0.002900961320847273,
    0.016902204602956772,
    0.0014541295822709799,
    -0.033454105257987976,
    -0.01580750197172165,
    0.05555249750614166,
    0.003937279339879751,
    0.009772042743861675,
    -0.002103653037920594,
    0.0023901001550257206,
    0.015267448499798775,
    -0.020288484171032906,
    0.010881341062486172,
    -0.016581092029809952,
    0.03462178632616997,
    0.00934875849634409,
    0.004805743228644133,
    0.00915171205997467,
    0.023251477628946304,
    0.014479262754321098,
    0.02291576936841011,
    0.03062247484922409,
    0.026812909170985222,
    0.029206659644842148,
    -0.017515238374471664,
    0.010319394059479237,
    -0.05207864195108414,
    0.03193611651659012,
    -0.03138146921992302,
    -0.004320425447076559,
    -7.68002137192525e-05,
    0.014698203653097153,
    -0.021178841590881348,
    -0.03447582572698593,
    -0.0076848105527460575,
    -0.00725422753021121,
    0.01693139597773552,
    0.009516612626612186,
    -0.002375504234805703,
    0.01564694568514824,
    -0.000886708905454725,
    -0.02282819338142872,
    0.014960932545363903,
    0.014822269789874554,
    0.004685326013714075,
    -0.0007193106575869024,
    0.007991326972842216,
    0.017690390348434448,
    0.017880138009786606,
    0.012771527282893658,
    -0.024857042357325554,
    -0.01396110374480486,
    0.027352962642908096,
    0.019514894112944603,
    -0.012822614051401615,
    0.026477200910449028,
    -0.026506392285227776,
    0.0466197244822979,
    -0.010698891244828701,
    0.02808276377618313,
    -0.02922125533223152,
    0.007177598308771849,
    0.024550525471568108,
    0.005437021609395742,
    -0.005437021609395742,
    0.002616338664665818,
    -0.018391000106930733,
    -0.0003569185792002827,
    0.028549836948513985,
    -0.0020069542806595564,
    -0.0036125178448855877,
    -0.03269511088728905,
    -0.004557610955089331,
    -1.583612356625963e-05,
    0.03354167938232422,
    0.0018099078442901373,
    -0.025251135230064392,
    0.003787670051679015,
    0.03146904334425926,
    0.03555593267083168,
    0.013253196142613888,
    0.01865372806787491,
    -0.0332205668091774,
    0.0007954837055876851,
    0.01244311686605215,
    0.01890186034142971,
    -0.034213095903396606,
    -0.0076264264062047005,
    -0.031031163409352303,
    0.007290717680007219,
    -0.025995532050728798,
    -0.03243238106369972,
    -0.03783291205763817,
    -0.031089546158909798,
    -0.020040351897478104,
    0.026900485157966614,
    -0.0008091675117611885,
    0.02792220748960972,
    0.024229412898421288,
    0.03298703208565712,
    0.0077285985462367535,
    -0.04218253120779991,
    -0.040314238518476486,
    0.03873786702752113,
    0.0005295622395351529,
    0.002083583502098918,
    -0.009574996307492256,
    -0.001623808522708714,
    0.005780028644949198,
    -0.01374216377735138,
    0.032724302262067795,
    0.007290717680007219,
    0.02568901516497135,
    -0.013362666592001915,
    0.010341288521885872,
    -0.03374602645635605,
    0.011027301661670208,
    0.03578946739435196,
    -0.015676137059926987,
    0.030184593051671982,
    -0.0016393167898058891,
    0.0044043525122106075,
    -0.013596203178167343,
    0.003718338906764984,
    -0.015136084519326687,
    0.020317675545811653,
    0.0037511801347136497,
    -0.0023006994742900133,
    -0.031323082745075226,
    -0.007779684849083424,
    -0.008319738321006298,
    0.0034501368645578623,
    -0.021689701825380325,
    -0.002216772176325321,
    -0.0006367518799379468,
    0.01212200429290533,
    -0.0016046512173488736,
    0.0023225934710353613,
    0.007068128325045109,
    0.020449040457606316,
    -0.016026442870497704,
    -0.010122347623109818,
    -0.02672533318400383,
    0.011903063394129276,
    -0.0003028676437679678,
    0.022215159609913826,
    0.032286420464515686,
    -0.00038975966162979603,
    -0.0068053994327783585,
    -0.021091265603899956,
    -0.019602470099925995,
    -0.007301664911210537,
    0.005696101114153862,
    -0.005002789665013552,
    0.0045065246522426605,
    -0.03923413157463074,
    0.007969433441758156,
    0.0029246797785162926,
    0.004955352749675512,
    0.034767746925354004,
    0.014435474760830402,
    -0.015136084519326687,
    -0.01573452167212963,
    0.00899115577340126,
    0.010071261785924435,
    0.0016393167898058891,
    0.009494718164205551,
    -0.0002944293082691729,
    -0.00878681056201458,
    0.024813253432512283,
    0.008327036164700985,
    0.017865542322397232,
    -0.0011029125889763236,
    0.0010390549432486296,
    -0.03152742609381676,
    -0.012012533843517303,
    0.017836350947618484,
    5.673067062161863e-05,
    0.028316300362348557,
    -0.004017557483166456,
    0.017164932563900948,
    0.015384216792881489,
    0.013194812461733818,
    -0.015384216792881489,
    -0.005944233853369951,
    0.015515581704676151,
    0.011443288996815681,
    0.012632865458726883,
    0.017967713996767998,
    -0.0005651401006616652,
    -0.03406713902950287,
    0.0021018285769969225,
    0.011881169863045216,
    -0.022375715896487236,
    -0.007232333533465862,
    0.03783291205763817,
    -0.014909845776855946,
    -0.035409972071647644,
    -0.0401974692940712,
    0.042153339833021164,
    0.012041726149618626,
    0.010428864508867264,
    -0.018128270283341408,
    0.00026843012892641127,
    -0.025630630552768707,
    -0.0009277602657675743,
    -0.02355799451470375,
    -0.016873013228178024,
    0.004721816163510084,
    0.01464711781591177,
    -0.016478920355439186,
    -0.015194469131529331,
    0.024813253432512283,
    -0.01416544895619154,
    0.001768856542184949,
    -0.00924658589065075,
    -0.019485702738165855,
    -0.017004376277327538,
    -0.017062760889530182,
    0.01250150054693222,
    0.019631661474704742,
    0.017953118309378624,
    -0.0009523910703137517,
    -0.009574996307492256,
    0.00826865155249834,
    -0.002616338664665818,
    -0.013369964435696602,
    -0.0011311924317851663,
    -0.04510173574090004,
    0.02468188852071762,
    -0.019193781539797783,
    0.01063320878893137,
    -0.023747744038701057,
    -0.024506736546754837,
    0.008319738321006298,
    0.00888898316770792,
    -0.01105649396777153,
    0.0013328001368790865,
    -0.008553273975849152,
    -0.012844507582485676,
    0.007440327201038599,
    -0.007991326972842216,
    0.02312011457979679,
    0.031031163409352303,
    -0.029323427006602287,
    0.010888639837503433,
    -0.03243238106369972,
    -0.011494374834001064,
    0.0014139905106276274,
    6.328747986117378e-05,
    0.01942731812596321,
    0.01477118395268917,
    0.001981411362066865,
    -0.014012190513312817,
    0.010815659537911415,
    -0.004127027932554483,
    -0.000828324758913368,
    0.007816174998879433,
    -0.026944274082779884,
    0.03543916344642639,
    -0.008443804457783699,
    -0.005739889573305845,
    0.032724302262067795,
    0.00049672118620947,
    0.017486045137047768,
    0.013369964435696602,
    -0.00904953945428133,
    0.03141066059470177,
    0.003189232898876071,
    0.00099344237241894,
    0.032403189688920975,
    -0.01621619053184986,
    0.011450586840510368,
    -0.027455134317278862,
    0.03406713902950287,
    0.005761783570051193,
    0.013939210213720798,
    -0.014019488357007504,
    -0.04270798712968826,
    -0.010333990678191185,
    -0.010479950346052647,
    0.009589592926204205,
    0.003105305600911379,
    -0.004335021134465933,
    -0.003787670051679015,
    0.0005861218669451773,
    0.016595687717199326,
    -0.0009231989970430732,
    -0.018434787169098854,
    0.009655274450778961,
    -0.027352962642908096,
    -0.0035212927032262087,
    0.019836006686091423,
    -0.0056121740490198135,
    0.016902204602956772,
    -0.006185068283230066,
    -0.0040832399390637875,
    -0.006896624807268381,
    -0.009502016939222813,
    -0.019120801240205765,
    -0.005064822733402252,
    -0.002547007519751787,
    0.0203468669205904,
    0.029002314433455467,
    0.043437790125608444,
    0.05277924984693527,
    -0.015676137059926987,
    0.027630288153886795,
    0.0011576476972550154,
    0.00028279810794629157,
    0.014566839672625065,
    -0.02206919901072979,
    0.025703610852360725,
    0.010604016482830048,
    0.007155704312026501,
    0.01974843069911003,
    0.02776165120303631,
    -0.0023335404694080353,
    -0.04355455935001373,
    0.018595343455672264,
    0.020638788118958473,
    -0.014814971946179867,
    -0.02023009955883026,
    -0.013012361712753773,
    -0.050297923386096954,
    -0.012676653452217579,
    0.01376405730843544,
    -0.005652313120663166,
    0.01858074776828289,
    -0.03041812963783741,
    -0.004148921929299831,
    0.0066229491494596004,
    0.02828710898756981,
    0.022740617394447327,
    0.026302048936486244,
    -0.0005008263397030532,
    -0.0028462260961532593,
    0.04682406783103943,
    -0.006692280527204275,
    -0.00439340528100729,
    -0.014785779640078545,
    -0.018347211182117462,
    -0.03397956117987633,
    -0.008772214874625206,
    0.011187857948243618,
    -0.003698269370943308,
    0.02906069904565811,
    0.027294578030705452,
    0.0041197300888597965,
    -0.010545632801949978,
    0.024448351934552193,
    -0.012917487882077694,
    -0.0157783105969429,
    0.03214045986533165,
    -0.00842920783907175,
    -0.006265346426516771,
    -0.012129302136600018,
    -0.038504332304000854,
    -0.038825444877147675,
    -0.0013264144072309136,
    -0.006298187654465437,
    -0.005838412791490555,
    0.022098392248153687,
    -0.02447754517197609,
    0.002138318493962288,
    0.018507767468690872,
    0.036373309791088104,
    0.05207864195108414,
    -0.0036781998351216316,
    0.02206919901072979,
    0.014690905809402466,
    -0.015369621105492115,
    -0.005404180847108364,
    -0.021660510450601578,
    0.003139971289783716,
    0.020522020757198334,
    0.01653730310499668,
    0.012129302136600018,
    -0.0358770452439785,
    -0.01454494521021843,
    0.01617240346968174,
    -0.013661885634064674,
    -0.032082077115774155,
    -0.01237743441015482,
    0.02601012773811817,
    0.009910705499351025,
    0.030826818197965622,
    -0.02840387634932995,
    0.013844335451722145,
    -0.01842019148170948,
    0.013034256175160408,
    -0.035818662494421005,
    0.005203485023230314,
    0.0011302802013233304,
    -0.03468016907572746,
    -0.0105748251080513,
    0.03392117843031883,
    0.03319137543439865,
    0.01741306483745575,
    0.033045414835214615,
    -0.006955008953809738,
    0.0012625567615032196,
    -0.024492140859365463,
    0.009538506157696247,
    0.01922297291457653,
    0.018040694296360016,
    0.03403794392943382,
    0.006677684374153614,
    -0.010363182052969933,
    0.03222803771495819,
    -0.012114706449210644,
    -0.015822097659111023,
    -0.023207690566778183,
    -0.00661200238391757,
    0.028433069586753845,
    -0.0026218120474368334,
    -0.008297843858599663,
    -0.010523738339543343,
    -0.024506736546754837,
    0.004174464847892523,
    -0.01125354040414095,
    -0.03360006585717201,
    -0.02167510613799095,
    0.00018986244685947895,
    0.006502531934529543,
    0.004309478215873241,
    0.010341288521885872,
    -0.02552845887839794,
    -0.007370995823293924,
    -0.01761741004884243,
    0.013406454585492611,
    -0.053275514394044876,
    0.002986712846904993,
    0.008823300711810589,
    -0.009253883734345436,
    0.0031582163646817207,
    -0.011209752410650253,
    -0.027425942942500114,
    0.034213095903396606,
    0.022653041407465935,
    -0.0063967108726501465,
    -0.003524941625073552,
    0.024667292833328247,
    0.015880482271313667,
    0.020930709317326546,
    0.006287240423262119,
    0.009684466756880283,
    -0.014960932545363903,
    0.0012798894895240664,
    -0.009808532893657684,
    -0.00798402912914753,
    0.005418776534497738,
    0.011333818547427654,
    -0.029951056465506554,
    -0.046970028430223465,
    0.0044262465089559555,
    0.030651666224002838,
    0.029031505808234215,
    0.003977418411523104,
    -0.023689359426498413,
    0.030826818197965622,
    0.019441913813352585,
    -0.02183566242456436,
    -0.006531724240630865,
    0.021821066737174988,
    0.0034154714085161686,
    -0.017121145501732826,
    0.00842920783907175,
    -0.0008470259490422904,
    0.02427319996058941,
    -0.01974843069911003,
    0.02636043354868889,
    -0.0008930946933105588,
    -0.04810851812362671,
    -0.017106547951698303,
    -0.025134366005659103,
    0.005006438586860895,
    -0.003548660082742572,
    0.01438438892364502,
    -0.006644843146204948,
    -0.019252166152000427,
    -0.0203468669205904,
    0.02291576936841011,
    0.0035395375452935696,
    -0.012559885159134865,
    -0.001784364809282124,
    0.006626598071306944,
    -0.020434444770216942,
    0.00038291775854304433,
    -0.021821066737174988,
    -0.01825963519513607,
    -0.0024393617641180754,
    0.03567270189523697,
    -0.023266073316335678,
    0.003313299035653472,
    -1.0269961421727203e-05,
    0.03812483325600624,
    0.042036570608615875,
    -0.028637412935495377,
    -0.019631661474704742,
    -0.013479434885084629,
    -0.015705330297350883,
    0.005776379257440567,
    -0.043642133474349976,
    0.012297156266868114,
    0.009582295082509518,
    0.007677512709051371,
    0.00045270504779182374,
    0.012311752885580063,
    0.0009606013190932572,
    -0.01757362112402916,
    -0.030797626823186874,
    0.010355884209275246,
    -0.013793249614536762,
    -0.006174121517688036,
    -0.003092534141615033,
    0.004674379248172045,
    -0.01077187154442072,
    0.011669526807963848,
    0.028389280661940575,
    0.04486820101737976,
    -0.012873699888586998,
    0.022565465420484543,
    0.0040029617957770824,
    -0.022726021707057953,
    0.025294922292232513,
    -0.0037730741314589977,
    -0.002900961320847273,
    -0.002977590309455991,
    0.026973465457558632,
    -0.04378809407353401,
    -0.015063104219734669,
    0.02323688194155693,
    -0.027309175580739975,
    0.0013875352451577783,
    -0.0014650766970589757,
    0.021923238411545753,
    -0.024740273132920265,
    0.009801235049962997,
    -0.01750064082443714,
    -0.017427662387490273,
    -0.01693139597773552,
    0.01801150292158127,
    0.022127583622932434,
    0.02796599641442299,
    0.020653383806347847,
    0.03138146921992302,
    0.01360350102186203,
    -0.0012917488347738981,
    -0.03351248800754547,
    0.02291576936841011,
    -0.028024381026625633,
    0.01701897196471691,
    0.002366381697356701,
    -0.009553102776408195,
    -0.011691421270370483,
    0.00018324861594010144,
    0.04057696834206581,
    -0.01001287717372179,
    0.002466729376465082,
    -0.0002729913976509124,
    -0.009932599030435085,
    -0.012267964892089367,
    0.0017022622050717473,
    0.01075727492570877,
    -0.03167338669300079,
    -0.000913164229132235,
    -0.015325833112001419,
    -0.0030104315374046564,
    -0.0017861893866211176,
    -0.014143554493784904,
    0.017748774960637093,
    -0.021967027336359024,
    0.007845367304980755,
    0.001849134685471654,
    -0.026915082708001137,
    -0.0035066965501755476,
    0.005670558195561171,
    -0.023747744038701057,
    -0.028476856648921967,
    0.017967713996767998,
    0.1862453669309616,
    0.005732591263949871,
    0.006809048820286989,
    0.030914394184947014,
    0.036139775067567825,
    0.0034008752554655075,
    0.0017861893866211176,
    0.02142697386443615,
    0.02103288099169731,
    0.015953462570905685,
    -0.00046091529657132924,
    0.000293973193038255,
    -0.008553273975849152,
    0.002163861645385623,
    0.028389280661940575,
    -0.001997831743210554,
    -0.021018285304307938,
    -0.04177384078502655,
    -0.013953805901110172,
    0.028987718746066093,
    0.018595343455672264,
    0.0045065246522426605,
    -0.018960244953632355,
    -0.018069887533783913,
    -0.002136494033038616,
    -0.012202282436192036,
    -0.022609252482652664,
    -0.004634240176528692,
    0.009334161877632141,
    -0.01750064082443714,
    -0.03187773376703262,
    0.027294578030705452,
    0.016624879091978073,
    -0.010976215824484825,
    -0.04796255752444267,
    -0.00021597565500997007,
    -0.003094358602538705,
    -0.0017369277775287628,
    -0.0017962241545319557,
    0.024711081758141518,
    -0.027075638994574547,
    -0.03783291205763817,
    -0.02403966337442398,
    0.002399222692474723,
    -0.01027560606598854,
    -0.0064550950191915035,
    -0.022580061107873917,
    0.0025068684481084347,
    -0.004813041538000107,
    -0.0005861218669451773,
    -0.008071605116128922,
    -0.018274230882525444,
    0.004408001434057951,
    0.04256202653050423,
    -0.014698203653097153,
    -0.020974496379494667,
    0.00022646655270364136,
    0.012771527282893658,
    0.017106547951698303,
    -0.007020690944045782,
    0.0009688115678727627,
    0.020171714946627617,
    0.00999098364263773,
    -0.0051305051892995834,
    -0.013457541354000568,
    0.006185068283230066,
    -0.02199621871113777,
    -0.0028699447866529226,
    0.014924442395567894,
    -0.007294366601854563,
    -0.02929423563182354,
    -0.016435131430625916,
    -0.023981278762221336,
    0.0027641234919428825,
    -0.002767772413790226,
    -0.017486045137047768,
    0.033366527408361435,
    0.004583153873682022,
    0.020054947584867477,
    0.023485014215111732,
    -0.009918003343045712,
    0.005042928736656904,
    -0.0010226344456896186,
    0.01601184718310833,
    -0.01906241662800312,
    -0.024375371634960175,
    0.02098909392952919,
    -0.0047108689323067665,
    -0.0038533522747457027,
    -0.021397782489657402,
    -0.011384904384613037,
    -0.029951056465506554,
    0.02692967839539051,
    -0.005721644498407841,
    0.024827849119901657,
    0.003028676612302661,
    -0.009042241610586643,
    0.014581435360014439,
    -0.03138146921992302,
    0.015179872512817383,
    -0.027674075216054916,
    0.039263322949409485,
    0.0316150039434433,
    -0.012968573719263077,
    0.017194125801324844,
    -0.013362666592001915,
    -0.014661713503301144,
    0.008385419845581055,
    0.017486045137047768,
    0.005250922404229641,
    -0.03666523098945618,
    -0.02218596823513508,
    -0.01585129089653492,
    -0.010020175948739052,
    -0.012552587315440178,
    0.005871253553777933,
    -0.00995449349284172,
    -0.013895422220230103,
    0.017442258074879646,
    -0.024229412898421288,
    0.008093499578535557,
    -0.018887264654040337,
    -0.009100625291466713,
    0.0053932336159050465,
    -0.003696444910019636,
    0.015121488831937313,
    -0.04539365693926811,
    -0.0029046102426946163,
    -0.007060830015689135,
    0.0002081074781017378,
    0.0011029125889763236,
    -0.010968917980790138,
    0.0246381014585495,
    0.01745685376226902,
    0.018128270283341408,
    -0.03310379758477211,
    -0.013253196142613888,
    -0.025907956063747406,
    -0.0013775004772469401,
    0.01709195226430893,
    -0.028885547071695328,
    -0.003535888623446226,
    -0.010749977082014084,
    0.0041781142354011536,
    0.01612861454486847,
    -0.018507767468690872,
    -0.009976387955248356,
    0.03900059685111046,
    -0.0037365839816629887,
    -0.013107236474752426,
    -0.03543916344642639,
    0.01897484064102173,
    0.017267106100916862,
    -0.01416544895619154,
    0.032082077115774155,
    -0.019004033878445625,
    -0.016464322805404663,
    -0.04688245430588722,
    0.006991499103605747,
    0.01853696070611477,
    -0.012253368273377419,
    -0.0034756800159811974,
    -0.0003430067445151508,
    0.004488279577344656,
    -0.017325488850474358,
    -0.012713143602013588,
    -0.18589505553245544,
    0.006203313358128071,
    0.016435131430625916,
    -0.026593970134854317,
    -0.003388103796169162,
    -0.011260838247835636,
    0.00043468805961310863,
    0.02395208738744259,
    -0.013946508057415485,
    -0.01933974213898182,
    0.011107579804956913,
    0.01709195226430893,
    -0.013391858898103237,
    -0.009137115441262722,
    -0.008677341043949127,
    0.016945991665124893,
    -0.023178497329354286,
    0.003992014564573765,
    0.010815659537911415,
    0.026915082708001137,
    0.04081050306558609,
    -0.06568214297294617,
    0.020916113629937172,
    0.027469731867313385,
    -0.0008210267405956984,
    0.00465613417327404,
    0.014479262754321098,
    0.027294578030705452,
    -0.021135052666068077,
    -0.028914738446474075,
    -0.04670730233192444,
    -0.00788185652345419,
    0.016989780589938164,
    0.007163002621382475,
    0.012224175967276096,
    0.01153816282749176,
    0.009677168913185596,
    -0.030388938263058662,
    -0.018522363156080246,
    0.02041984722018242,
    0.03298703208565712,
    0.010443460196256638,
    -0.012362838722765446,
    -0.002441186225041747,
    -0.03021378442645073,
    -0.012574480846524239,
    0.010399672202765942,
    -0.009487420320510864,
    0.02066798135638237,
    -0.023090921342372894,
    0.0018117324216291308,
    -0.03596462309360504,
    0.015559369698166847,
    0.012727739289402962,
    0.010903235524892807,
    0.011268136091530323,
    0.02447754517197609,
    0.03435905650258064,
    0.019149992614984512,
    -0.012625567615032196,
    -0.01266205683350563,
    -0.018799688667058945,
    0.032607533037662506,
    -0.014887952245771885,
    -0.005896796938031912,
    -0.03576027601957321,
    -0.019354337826371193,
    0.024900829419493675,
    -0.009064135141670704,
    0.008100797422230244,
    0.016508111730217934,
    0.03225722908973694,
    -0.017880138009786606,
    -0.004112431779503822,
    0.03932170942425728,
    0.0105748251080513,
    -0.0015854939119890332,
    0.011144069954752922,
    0.008998453617095947,
    -0.033045414835214615,
    -0.03768695145845413,
    0.041394345462322235,
    -0.01093242783099413,
    -0.005218081176280975,
    0.009545804932713509,
    -0.02126641757786274,
    0.01950029842555523,
    -0.006809048820286989,
    -0.027265386655926704,
    -0.005243624094873667,
    0.0024503087624907494,
    3.164373993058689e-05,
    0.005991670768707991,
    -0.00953120831400156,
    0.0014550419291481376,
    0.023660166189074516,
    -0.024784062057733536,
    0.011195155791938305,
    0.004791147541254759,
    -0.025090578943490982,
    0.0018628184916451573,
    0.007181247696280479,
    -0.02688588947057724,
    -0.003083411604166031,
    0.021485358476638794,
    0.01338456105440855,
    -0.05420966073870659,
    -0.0006267171120271087,
    0.03365844860672951,
    -0.0246381014585495,
    -0.010158837772905827,
    0.009399844333529472,
    0.029323427006602287,
    0.028724990785121918,
    -0.00698055187240243,
    0.020244695246219635,
    -0.003344315802678466,
    -0.00021403712162282318,
    0.014150852337479591,
    -0.008516784757375717,
    0.031644195318222046,
    -0.017544429749250412,
    -0.01043616235256195,
    -0.0017232439713552594,
    0.0006595581653527915,
    -0.021076669916510582,
    -0.10917831212282181,
    -0.01881428435444832,
    0.0035468356218189,
    0.02103288099169731,
    -0.017836350947618484,
    0.013683779165148735,
    -0.019018629565835,
    0.025980936363339424,
    -0.01564694568514824,
    0.023017941042780876,
    -0.0009177254978567362,
    -0.005090366117656231,
    -0.012275262735784054,
    0.005754485260695219,
    0.006360220722854137,
    -0.030038632452487946,
    -0.010523738339543343,
    -0.0085678705945611,
    -0.03205288574099541,
    0.019631661474704742,
    -0.011508970521390438,
    -0.014552243053913116,
    0.004889670759439468,
    0.00023604519083164632,
    -0.003001308999955654,
    0.024550525471568108,
    -0.017267106100916862,
    0.016989780589938164,
    0.015092296525835991,
    0.027192406356334686,
    0.01025371253490448,
    -0.019164590165019035,
    -0.012078216299414635,
    0.0036307629197835922,
    0.0168584156781435,
    -0.017646601423621178,
    -0.006495234090834856,
    -0.04259122163057327,
    0.01977762207388878,
    0.0014696379657834768,
    0.01169871911406517,
    -0.010625910945236683,
    0.0006741542019881308,
    -0.01954408548772335,
    -0.010720784775912762,
    0.015223660506308079,
    -0.01105649396777153,
    0.038621097803115845,
    0.0013227653689682484,
    -0.029075294733047485,
    -0.032403189688920975,
    -0.02135399356484413,
    -0.0027331069577485323,
    0.005119557958096266,
    0.016624879091978073,
    -0.019792217761278152,
    0.0005842974060215056,
    0.008027817122638226,
    0.008217565715312958,
    -0.008188373409211636,
    0.03447582572698593,
    0.0053056576289236546,
    -0.0035669051576405764,
    0.008115393109619617,
    -0.003211126895621419,
    -0.002981239464133978,
    0.009363354183733463,
    -0.00985232088714838,
    0.011881169863045216,
    -0.034534212201833725,
    -0.026798313483595848,
    0.024827849119901657,
    -0.006283591501414776,
    0.01326049491763115,
    -0.03129389137029648,
    -0.006473340094089508,
    -0.00826865155249834,
    -0.01326049491763115,
    0.006630247458815575,
    -0.01079376507550478,
    -0.005761783570051193,
    -0.012873699888586998,
    -0.013822441920638084,
    -0.022010816261172295,
    -0.011778997257351875,
    0.027717864140868187,
    -0.004364213440567255,
    0.007816174998879433,
    0.0076848105527460575,
    -0.03920494019985199,
    0.027338366955518723,
    -0.01773417741060257,
    0.044722240418195724,
    -0.015471793711185455,
    -0.015238257125020027,
    -0.015661541372537613,
    0.006590108387172222,
    0.007677512709051371,
    0.005418776534497738,
    -0.003017729613929987,
    -0.025061385706067085,
    -0.0025780240539461374,
    -0.07543229311704636,
    0.030710050836205482,
    -0.01234094426035881,
    -0.02154374308884144,
    0.0017104723956435919,
    -0.03975959122180939,
    0.012041726149618626,
    0.0012096461141481996,
    0.011552758514881134,
    -0.010494546964764595,
    -0.02869579754769802,
    0.016989780589938164,
    -0.003999312408268452,
    -0.015121488831937313,
    -0.015515581704676151,
    0.010611315257847309,
    0.022769808769226074,
    -0.0043824585154652596,
    0.04475143179297447,
    0.01079376507550478,
    -0.020609596744179726,
    -0.0020489178132265806,
    0.05251652002334595,
    -0.0030323255341500044,
    -0.029848884791135788,
    -0.009932599030435085,
    0.0010025649098679423,
    0.05105691775679588,
    -0.022930365055799484,
    0.002842577174305916,
    0.024331584572792053,
    0.01665407232940197,
    -0.004331372212618589,
    0.0364316962659359,
    0.0008274125284515321,
    0.00953120831400156,
    0.01917918585240841,
    0.004502875730395317,
    0.020843133330345154,
    0.009903407655656338,
    -0.030009441077709198,
    -0.023061729967594147,
    0.025353306904435158,
    0.014107064343988895,
    -0.017953118309378624,
    0.010195327922701836,
    0.006203313358128071,
    -0.0012899242574349046,
    0.007133810315281153,
    0.020522020757198334,
    0.03438825160264969,
    -0.001586406142450869,
    -0.002851699711754918,
    -0.022857384756207466,
    0.0038314582780003548,
    -0.03424229100346565,
    0.031848542392253876,
    -0.0008100797422230244,
    -0.008757619187235832,
    -0.007830770686268806,
    0.03975959122180939,
    0.006279942579567432,
    0.01709195226430893,
    0.017836350947618484,
    -0.0032658621203154325,
    -0.032403189688920975,
    -0.032169654965400696,
    -0.003922683652490377,
    -0.04101485013961792,
    -0.024375371634960175,
    -0.007100969087332487,
    -0.0019430966349318624,
    0.017194125801324844,
    0.02981969155371189,
    0.01677083969116211,
    -0.005528246983885765,
    0.022813597694039345,
    -0.019047820940613747,
    -0.02355799451470375,
    0.014362495392560959,
    0.02656477689743042,
    -0.007381943054497242,
    -0.007389240898191929,
    0.022726021707057953,
    0.022302735596895218,
    0.015209064818918705,
    -0.03815402463078499,
    -0.015077700838446617,
    -0.016727052628993988,
    0.026915082708001137,
    0.00027732460875995457,
    0.02323688194155693,
    0.009903407655656338,
    0.0033370177261531353,
    0.0007562568644061685,
    0.02520734630525112,
    -0.0011248067021369934,
    -0.003535888623446226,
    0.03438825160264969,
    0.022842789068818092,
    0.010939725674688816,
    -0.0019960072822868824,
    -0.002083583502098918,
    -0.018288826569914818,
    -0.024054259061813354,
    -0.00222224579192698,
    6.898905849084258e-05,
    0.010786467231810093,
    0.003072464605793357,
    0.04291233420372009,
    0.020770153030753136,
    0.003926332574337721,
    -0.02922125533223152,
    0.02074095979332924,
    -0.012151196599006653,
    0.024827849119901657,
    0.02347041852772236,
    -0.013245898298919201,
    -0.014428176917135715,
    0.01729629747569561,
    0.01020992361009121,
    -0.0038278093561530113,
    0.02672533318400383,
    0.01697518490254879,
    0.018507767468690872,
    0.03815402463078499,
    0.019120801240205765,
    -0.016318364068865776,
    0.019894391298294067,
    -0.012224175967276096,
    0.014092468656599522,
    0.009356056340038776,
    0.015209064818918705,
    -0.007115565240383148,
    -0.024054259061813354,
    -0.014245727099478245,
    0.04081050306558609,
    -0.026316644623875618,
    -0.026462605223059654,
    0.10100454092025757,
    0.011195155791938305,
    0.005265518557280302,
    0.006053703837096691,
    0.00116403354331851,
    0.02511977031826973,
    0.006976902950555086,
    0.007217737380415201,
    0.010129645466804504,
    -0.025090578943490982,
    -0.014939038082957268,
    -0.007090022321790457,
    -0.02817034162580967,
    -0.03392117843031883,
    -0.007830770686268806,
    0.01785094663500786,
    -0.02601012773811817,
    0.04586073011159897,
    -0.01596805825829506,
    -0.015267448499798775,
    0.02741134725511074,
    0.016843819990754128,
    0.005831114482134581,
    -0.0046670809388160706,
    -0.024346180260181427,
    -0.004845882300287485,
    0.02881256677210331,
    0.04980165883898735,
    0.005437021609395742,
    -0.03383360058069229,
    0.00757534010335803,
    0.022477887570858,
    -0.03719068691134453,
    -0.023003345355391502,
    -0.023689359426498413,
    -0.010968917980790138,
    0.004477332811802626,
    -0.02925044670701027,
    0.026798313483595848,
    0.009757447056472301,
    -0.009334161877632141,
    -0.010479950346052647,
    -0.009020347148180008,
    -0.04410920664668083,
    -0.0022514378651976585,
    -0.011348414234817028,
    -0.012085514143109322,
    0.008421909995377064,
    -0.06673305481672287
  ]
}
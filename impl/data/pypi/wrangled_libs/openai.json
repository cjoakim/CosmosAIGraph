{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: os independent",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "typing :: typed"
  ],
  "description": "the official python library for the openai api\n# openai python api library\n\n[![pypi version](https://img.shields.io/pypi/v/openai.svg)](https://pypi.org/project/openai/)\n\nthe openai python library provides convenient access to the openai rest api from any python 3.7+\napplication. the library includes type definitions for all request params and response fields,\nand offers both synchronous and asynchronous clients powered by [httpx](https://github.com/encode/httpx).\n\nit is generated from our [openapi specification](https://github.com/openai/openai-openapi) with [stainless](https://stainlessapi.com/).\n\n## documentation\n\nthe api documentation can be found [here](https://platform.openai.com/docs).\n\n## installation\n\n> [!important]\n> the sdk was rewritten in v1, which was released november 6th 2023. see the [v1 migration guide](https://github.com/openai/openai-python/discussions/742), which includes scripts to automatically update your code.\n\n```sh\npip install openai\n```\n\n## usage\n\nthe full api of this library can be found in [api.md](https://www.github.com/openai/openai-python/blob/main/api.md).\n\n```python\nimport os\nfrom openai import openai\n\nclient = openai(\n    # this is the default and can be omitted\n    api_key=os.environ.get(\"openai_api_key\"),\n)\n\nchat_completion = client.chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"say this is a test\",\n        }\n    ],\n    model=\"gpt-3.5-turbo\",\n)\n```\n\nwhile you can provide an `api_key` keyword argument,\nwe recommend using [python-dotenv](https://pypi.org/project/python-dotenv/)\nto add `openai_api_key=\"my api key\"` to your `.env` file\nso that your api key is not stored in source control.\n\n## async usage\n\nsimply import `asyncopenai` instead of `openai` and use `await` with each api call:\n\n```python\nimport os\nimport asyncio\nfrom openai import asyncopenai\n\nclient = asyncopenai(\n    # this is the default and can be omitted\n    api_key=os.environ.get(\"openai_api_key\"),\n)\n\n\nasync def main() -> none:\n    chat_completion = await client.chat.completions.create(\n        messages=[\n            {\n                \"role\": \"user\",\n                \"content\": \"say this is a test\",\n            }\n        ],\n        model=\"gpt-3.5-turbo\",\n    )\n\n\nasyncio.run(main())\n```\n\nfunctionality between the synchronous and asynchronous clients is otherwise identical.\n\n## streaming responses\n\nwe provide support for streaming responses using server side events (sse).\n\n```python\nfrom openai import openai\n\nclient = openai()\n\nstream = client.chat.completions.create(\n    model=\"gpt-4\",\n    messages=[{\"role\": \"user\", \"content\": \"say this is a test\"}],\n    stream=true,\n)\nfor chunk in stream:\n    print(chunk.choices[0].delta.content or \"\", end=\"\")\n```\n\nthe async client uses the exact same interface.\n\n```python\nfrom openai import asyncopenai\n\nclient = asyncopenai()\n\n\nasync def main():\n    stream = await client.chat.completions.create(\n        model=\"gpt-4\",\n        messages=[{\"role\": \"user\", \"content\": \"say this is a test\"}],\n        stream=true,\n    )\n    async for chunk in stream:\n        print(chunk.choices[0].delta.content or \"\", end=\"\")\n\n\nasyncio.run(main())\n```\n\n## module-level client\n\n> [!important]\n> we highly recommend instantiating client instances instead of relying on the global client.\n\nwe also expose a global client instance that is accessible in a similar fashion to versions prior to v1.\n\n```py\nimport openai\n\n# optional; defaults to `os.environ['openai_api_key']`\nopenai.api_key = '...'\n\n# all client options can be configured just like the `openai` instantiation counterpart\nopenai.base_url = \"https://...\"\nopenai.default_headers = {\"x-foo\": \"true\"}\n\ncompletion = openai.chat.completions.create(\n    model=\"gpt-4\",\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"how do i output all files in a directory using python?\",\n        },\n    ],\n)\nprint(completion.choices[0].message.content)\n```\n\nthe api is the exact same as the standard client instance based api.\n\nthis is intended to be used within repls or notebooks for faster iteration, **not** in application code.\n\nwe recommend that you always instantiate a client (e.g., with `client = openai()`) in application code because:\n\n- it can be difficult to reason about where client options are configured\n- it's not possible to change certain client options without potentially causing race conditions\n- it's harder to mock for testing purposes\n- it's not possible to control cleanup of network connections\n\n## using types\n\nnested request parameters are [typeddicts](https://docs.python.org/3/library/typing.html#typing.typeddict). responses are [pydantic models](https://docs.pydantic.dev), which provide helper methods for things like:\n\n- serializing back into json, `model.model_dump_json(indent=2, exclude_unset=true)`\n- converting to a dictionary, `model.model_dump(exclude_unset=true)`\n\ntyped requests and responses provide autocomplete and documentation within your editor. if you would like to see type errors in vs code to help catch bugs earlier, set `python.analysis.typecheckingmode` to `basic`.\n\n## pagination\n\nlist methods in the openai api are paginated.\n\nthis library provides auto-paginating iterators with each list response, so you do not have to request successive pages manually:\n\n```python\nimport openai\n\nclient = openai()\n\nall_jobs = []\n# automatically fetches more pages as needed.\nfor job in client.fine_tuning.jobs.list(\n    limit=20,\n):\n    # do something with job here\n    all_jobs.append(job)\nprint(all_jobs)\n```\n\nor, asynchronously:\n\n```python\nimport asyncio\nimport openai\n\nclient = asyncopenai()\n\n\nasync def main() -> none:\n    all_jobs = []\n    # iterate through items across all pages, issuing requests as needed.\n    async for job in client.fine_tuning.jobs.list(\n        limit=20,\n    ):\n        all_jobs.append(job)\n    print(all_jobs)\n\n\nasyncio.run(main())\n```\n\nalternatively, you can use the `.has_next_page()`, `.next_page_info()`, or `.get_next_page()` methods for more granular control working with pages:\n\n```python\nfirst_page = await client.fine_tuning.jobs.list(\n    limit=20,\n)\nif first_page.has_next_page():\n    print(f\"will fetch next page using these details: {first_page.next_page_info()}\")\n    next_page = await first_page.get_next_page()\n    print(f\"number of items we just fetched: {len(next_page.data)}\")\n\n# remove `await` for non-async usage.\n```\n\nor just work directly with the returned data:\n\n```python\nfirst_page = await client.fine_tuning.jobs.list(\n    limit=20,\n)\n\nprint(f\"next page cursor: {first_page.after}\")  # => \"next page cursor: ...\"\nfor job in first_page.data:\n    print(job.id)\n\n# remove `await` for non-async usage.\n```\n\n## nested params\n\nnested parameters are dictionaries, typed using `typeddict`, for example:\n\n```python\nfrom openai import openai\n\nclient = openai()\n\ncompletion = client.chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"can you generate an example json object describing a fruit?\",\n        }\n    ],\n    model=\"gpt-3.5-turbo-1106\",\n    response_format={\"type\": \"json_object\"},\n)\n```\n\n## file uploads\n\nrequest parameters that correspond to file uploads can be passed as `bytes`, a [`pathlike`](https://docs.python.org/3/library/os.html#os.pathlike) instance or a tuple of `(filename, contents, media type)`.\n\n```python\nfrom pathlib import path\nfrom openai import openai\n\nclient = openai()\n\nclient.files.create(\n    file=path(\"input.jsonl\"),\n    purpose=\"fine-tune\",\n)\n```\n\nthe async client uses the exact same interface. if you pass a [`pathlike`](https://docs.python.org/3/library/os.html#os.pathlike) instance, the file contents will be read asynchronously automatically.\n\n## handling errors\n\nwhen the library is unable to connect to the api (for example, due to network connection problems or a timeout), a subclass of `openai.apiconnectionerror` is raised.\n\nwhen the api returns a non-success status code (that is, 4xx or 5xx\nresponse), a subclass of `openai.apistatuserror` is raised, containing `status_code` and `response` properties.\n\nall errors inherit from `openai.apierror`.\n\n```python\nimport openai\nfrom openai import openai\n\nclient = openai()\n\ntry:\n    client.fine_tunes.create(\n        training_file=\"file-xginujblhpwglsztz8cps8xy\",\n    )\nexcept openai.apiconnectionerror as e:\n    print(\"the server could not be reached\")\n    print(e.__cause__)  # an underlying exception, likely raised within httpx.\nexcept openai.ratelimiterror as e:\n    print(\"a 429 status code was received; we should back off a bit.\")\nexcept openai.apistatuserror as e:\n    print(\"another non-200-range status code was received\")\n    print(e.status_code)\n    print(e.response)\n```\n\nerror codes are as followed:\n\n| status code | error type                 |\n| ----------- | -------------------------- |\n| 400         | `badrequesterror`          |\n| 401         | `authenticationerror`      |\n| 403         | `permissiondeniederror`    |\n| 404         | `notfounderror`            |\n| 422         | `unprocessableentityerror` |\n| 429         | `ratelimiterror`           |\n| >=500       | `internalservererror`      |\n| n/a         | `apiconnectionerror`       |\n\n### retries\n\ncertain errors are automatically retried 2 times by default, with a short exponential backoff.\nconnection errors (for example, due to a network connectivity problem), 408 request timeout, 409 conflict,\n429 rate limit, and >=500 internal errors are all retried by default.\n\nyou can use the `max_retries` option to configure or disable retry settings:\n\n```python\nfrom openai import openai\n\n# configure the default for all requests:\nclient = openai(\n    # default is 2\n    max_retries=0,\n)\n\n# or, configure per-request:\nclient.with_options(max_retries=5).chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"how can i get the name of the current day in node.js?\",\n        }\n    ],\n    model=\"gpt-3.5-turbo\",\n)\n```\n\n### timeouts\n\nby default requests time out after 10 minutes. you can configure this with a `timeout` option,\nwhich accepts a float or an [`httpx.timeout`](https://www.python-httpx.org/advanced/#fine-tuning-the-configuration) object:\n\n```python\nfrom openai import openai\n\n# configure the default for all requests:\nclient = openai(\n    # 20 seconds (default is 10 minutes)\n    timeout=20.0,\n)\n\n# more granular control:\nclient = openai(\n    timeout=httpx.timeout(60.0, read=5.0, write=10.0, connect=2.0),\n)\n\n# override per-request:\nclient.with_options(timeout=5 * 1000).chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"how can i list all files in a directory using python?\",\n        }\n    ],\n    model=\"gpt-3.5-turbo\",\n)\n```\n\non timeout, an `apitimeouterror` is thrown.\n\nnote that requests that time out are [retried twice by default](#retries).\n\n## advanced\n\n### logging\n\nwe use the standard library [`logging`](https://docs.python.org/3/library/logging.html) module.\n\nyou can enable logging by setting the environment variable `openai_log` to `debug`.\n\n```shell\n$ export openai_log=debug\n```\n\n### how to tell whether `none` means `null` or missing\n\nin an api response, a field may be explicitly `null`, or missing entirely; in either case, its value is `none` in this library. you can differentiate the two cases with `.model_fields_set`:\n\n```py\nif response.my_field is none:\n  if 'my_field' not in response.model_fields_set:\n    print('got json like {}, without a \"my_field\" key present at all.')\n  else:\n    print('got json like {\"my_field\": null}.')\n```\n\n### accessing raw response data (e.g. headers)\n\nthe \"raw\" response object can be accessed by prefixing `.with_raw_response.` to any http method call.\n\n```py\nfrom openai import openai\n\nclient = openai()\nresponse = client.chat.completions.with_raw_response.create(\n    messages=[{\n        \"role\": \"user\",\n        \"content\": \"say this is a test\",\n    }],\n    model=\"gpt-3.5-turbo\",\n)\nprint(response.headers.get('x-my-header'))\n\ncompletion = response.parse()  # get the object that `chat.completions.create()` would have returned\nprint(completion)\n```\n\nthese methods return an [`apiresponse`](https://github.com/openai/openai-python/tree/main/src/openai/_response.py) object.\n\n### configuring the http client\n\nyou can directly override the [httpx client](https://www.python-httpx.org/api/#client) to customize it for your use case, including:\n\n- support for proxies\n- custom transports\n- additional [advanced](https://www.python-httpx.org/advanced/#client-instances) functionality\n\n```python\nimport httpx\nfrom openai import openai\n\nclient = openai(\n    # or use the `openai_base_url` env var\n    base_url=\"http://my.test.server.example.com:8083\",\n    http_client=httpx.client(\n        proxies=\"http://my.test.proxy.example.com\",\n        transport=httpx.httptransport(local_address=\"0.0.0.0\"),\n    ),\n)\n```\n\n### managing http resources\n\nby default the library closes underlying http connections whenever the client is [garbage collected](https://docs.python.org/3/reference/datamodel.html#object.__del__). you can manually close the client using the `.close()` method if desired, or with a context manager that closes when exiting.\n\n## microsoft azure openai\n\nto use this library with [azure openai](https://learn.microsoft.com/en-us/azure/ai-services/openai/overview), use the `azureopenai`\nclass instead of the `openai` class.\n\n> [!important]\n> the azure api shape differs from the core api shape which means that the static types for responses / params\n> won't always be correct.\n\n```py\nfrom openai import azureopenai\n\n# gets the api key from environment variable azure_openai_api_key\nclient = azureopenai(\n    # https://learn.microsoft.com/en-us/azure/ai-services/openai/reference#rest-api-versioning\n    api_version=\"2023-07-01-preview\",\n    # https://learn.microsoft.com/en-us/azure/cognitive-services/openai/how-to/create-resource?pivots=web-portal#create-a-resource\n    azure_endpoint=\"https://example-endpoint.openai.azure.com\",\n)\n\ncompletion = client.chat.completions.create(\n    model=\"deployment-name\",  # e.g. gpt-35-instant\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"how do i output all files in a directory using python?\",\n        },\n    ],\n)\nprint(completion.model_dump_json(indent=2))\n```\n\nin addition to the options provided in the base `openai` client, the following options are provided:\n\n- `azure_endpoint` (or the `azure_openai_endpoint` environment variable)\n- `azure_deployment`\n- `api_version` (or the `openai_api_version` environment variable)\n- `azure_ad_token` (or the `azure_openai_ad_token` environment variable)\n- `azure_ad_token_provider`\n\nan example of using the client with azure active directory can be found [here](https://github.com/openai/openai-python/blob/main/examples/azure_ad.py).\n\n## versioning\n\nthis package generally follows [semver](https://semver.org/spec/v2.0.0.html) conventions, though certain backwards-incompatible changes may be released as minor versions:\n\n1. changes that only affect static types, without breaking runtime behavior.\n2. changes to library internals which are technically public but not intended or documented for external use. _(please open a github issue to let us know if you are relying on such internals)_.\n3. changes that we do not expect to impact the vast majority of users in practice.\n\nwe take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.\n\nwe are keen for your feedback; please open an [issue](https://www.github.com/openai/openai-python/issues) with questions, bugs, or suggestions.\n\n## requirements\n\npython 3.7 or higher.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "openai",
  "package_url": "https://pypi.org/project/openai/",
  "project_url": "https://pypi.org/project/openai/",
  "project_urls": {
    "Homepage": "https://github.com/openai/openai-python",
    "Repository": "https://github.com/openai/openai-python"
  },
  "release_url": "https://pypi.org/project/openai/1.6.1/",
  "requires_dist": [
    "anyio<5,>=3.5.0",
    "distro<2,>=1.7.0",
    "httpx<1,>=0.23.0",
    "pydantic<3,>=1.9.0",
    "sniffio",
    "tqdm>4",
    "typing-extensions<5,>=4.7",
    "numpy>=1; extra == 'datalib'",
    "pandas-stubs>=1.1.0.11; extra == 'datalib'",
    "pandas>=1.2.3; extra == 'datalib'"
  ],
  "requires_python": ">=3.7.1",
  "summary": "the official python library for the openai api",
  "version": "1.6.1",
  "releases": [],
  "developers": [
    "support@openai.com"
  ],
  "kwds": "openai_api_version openapi openai_api_key openai azure_openai_endpoint",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_openai",
  "homepage": "",
  "release_count": 102,
  "dependency_ids": [
    "pypi_anyio",
    "pypi_distro",
    "pypi_httpx",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pandas_stubs",
    "pypi_pydantic",
    "pypi_sniffio",
    "pypi_tqdm",
    "pypi_typing_extensions"
  ],
  "documentation_summary": "The HTML text provides detailed information about the OpenAI Python library, which offers convenient access to the OpenAI REST API for Python 3.7+ applications. The library supports both synchronous and asynchronous clients, streaming responses, and is generated from the OpenAPI specification. It includes type definitions for request parameters and response fields. The latest version, 1.13.3, was released on February 28, 2024. The library requires Python version 3.7.1 or higher and is licensed under the Apache Software License. It supports various Python versions up to 3.12 and is compatible with multiple operating systems. The library also includes features for file uploads, error handling, pagination, and configuring HTTP client settings. Additionally, it provides guidance for using the library with Microsoft Azure OpenAI, including differences in API shapes and additional configuration options.",
  "embedding": [
    -0.024831442162394524,
    -0.018723098561167717,
    -0.010892067104578018,
    -0.023211700841784477,
    -0.0009471362573094666,
    0.027672849595546722,
    0.01427567657083273,
    -0.002810523845255375,
    -0.009189967066049576,
    -0.028414087370038033,
    0.014207043685019016,
    -0.014028597623109818,
    -0.006472097709774971,
    0.008592858910560608,
    -0.009313506074249744,
    -0.017117084935307503,
    0.02474908158183098,
    -0.04128964990377426,
    0.019230984151363373,
    -0.005308767315000296,
    0.02174295298755169,
    -0.011207778938114643,
    -0.0399169884622097,
    -0.017611242830753326,
    -0.011207778938114643,
    -0.001877114176750183,
    -0.002165373181924224,
    -0.03157120943069458,
    0.009519405663013458,
    -0.02608056366443634,
    0.027096332982182503,
    0.0015468175988644361,
    -0.03272424265742302,
    -0.009862571023404598,
    -0.006853010971099138,
    -0.013678569346666336,
    0.01358934585005045,
    0.005706838797777891,
    0.0399169884622097,
    0.009478225372731686,
    0.012319634668529034,
    0.02179786004126072,
    0.0025668765883892775,
    0.016018956899642944,
    -0.029265137389302254,
    0.002544570714235306,
    0.0032926711719483137,
    -0.022360650822520256,
    -0.0034917069133371115,
    0.020974263548851013,
    0.005912738386541605,
    0.02623155526816845,
    0.010219463147222996,
    -0.009121334180235863,
    -0.0037816816475242376,
    -0.00397385424003005,
    -0.022772450000047684,
    0.028963152319192886,
    -0.0042895665392279625,
    -0.006393169518560171,
    0.01573069766163826,
    -0.015140453353524208,
    -0.019656509160995483,
    -0.005593594629317522,
    -0.009437046013772488,
    0.015112999826669693,
    -0.017858322709798813,
    0.013788381591439247,
    0.004268976394087076,
    -0.008167333900928497,
    0.03769327700138092,
    0.019381975755095482,
    -0.016650380566716194,
    -0.0025737397372722626,
    0.031049596145749092,
    -0.013026555068790913,
    -0.011921562254428864,
    0.004512623883783817,
    -0.0209056306630373,
    -0.0071927448734641075,
    0.0034591061994433403,
    -0.02619037590920925,
    0.0026269303634762764,
    0.03783054277300835,
    0.025627585127949715,
    0.009999836795032024,
    -0.0007056336617097259,
    0.011880382895469666,
    0.010590081103146076,
    -0.011132282204926014,
    0.019258437678217888,
    -0.008284010924398899,
    -0.003153689205646515,
    0.03173592686653137,
    -0.02860626019537449,
    0.054878994822502136,
    -0.002952937502413988,
    0.01584050990641117,
    -0.0008574842941015959,
    -0.017487704753875732,
    -0.026217829436063766,
    0.01079598069190979,
    -0.013184411451220512,
    -0.010892067104578018,
    -0.03719911724328995,
    0.016087589785456657,
    0.0006627379916608334,
    -0.013239317573606968,
    0.036018628627061844,
    0.008990931324660778,
    -0.02201748639345169,
    0.021468421444296837,
    -0.015112999826669693,
    -0.03030836023390293,
    -0.014509028755128384,
    -0.010219463147222996,
    0.030390718951821327,
    -0.00578233553096652,
    -0.014797287993133068,
    0.004790587816387415,
    -0.009828254580497742,
    0.020411472767591476,
    0.0022940600756555796,
    0.009279189631342888,
    0.007961435243487358,
    -0.008826212026178837,
    0.002124193124473095,
    -0.009368413127958775,
    -0.0025188333820551634,
    -0.0064618028700351715,
    0.003754228353500366,
    -0.0011581828584894538,
    0.01599150337278843,
    -0.012854971922934055,
    -0.026959067210555077,
    0.021921399980783463,
    -0.022621456533670425,
    -0.005820083431899548,
    -0.017830869182944298,
    -0.021729227155447006,
    0.008400687016546726,
    0.028112102299928665,
    -0.021358609199523926,
    0.006365716457366943,
    -0.00995179358869791,
    0.03371255844831467,
    0.018009314313530922,
    -0.010747937485575676,
    -0.004220933187752962,
    0.0029392107389867306,
    0.016705287620425224,
    -0.01736416481435299,
    -0.053286708891391754,
    0.003822861472144723,
    -0.006705449894070625,
    -0.0008210230153053999,
    -0.014907101169228554,
    0.029127871617674828,
    -0.022635184228420258,
    -0.009718441404402256,
    0.00604657270014286,
    0.040987662971019745,
    -0.04356826841831207,
    -0.010041017085313797,
    -0.006907917559146881,
    0.02010948769748211,
    0.014056051149964333,
    -0.019807500764727592,
    -0.011544080451130867,
    -0.001159898703917861,
    -0.00879189558327198,
    0.0059436229057610035,
    -0.022827355191111565,
    -0.008585995994508266,
    0.008613449521362782,
    0.0062661985866725445,
    0.019766321405768394,
    0.01406977791339159,
    -0.017913229763507843,
    -0.004859220702201128,
    0.026684533804655075,
    0.012381404638290405,
    0.021289976313710213,
    0.04290939122438431,
    0.0011667620856314898,
    0.005583299323916435,
    -0.002000653650611639,
    0.0031279518734663725,
    0.01721317134797573,
    0.011969605460762978,
    0.023321514949202538,
    0.01762497052550316,
    -0.01219609472900629,
    -0.0330536812543869,
    -0.5802513360977173,
    -0.018146581947803497,
    -0.01715826615691185,
    -0.024886347353458405,
    0.006853010971099138,
    0.013081461191177368,
    0.007309420965611935,
    0.01546989195048809,
    -0.005010213237255812,
    0.03072015754878521,
    -0.026204103603959084,
    0.023143067955970764,
    -0.025696218013763428,
    0.0017930386820808053,
    0.03382237255573273,
    -0.026011930778622627,
    0.021633140742778778,
    -0.020301658660173416,
    -0.012408857233822346,
    -0.007302557583898306,
    -0.0038503147661685944,
    0.02940240316092968,
    -0.03994444012641907,
    -0.0014841899974271655,
    0.0008622028399258852,
    0.0071447016671299934,
    0.008949751034379005,
    -0.01324618048965931,
    0.006098047364503145,
    0.005500939674675465,
    -0.010226326063275337,
    0.02549031935632229,
    0.016705287620425224,
    -0.011207778938114643,
    0.04883928596973419,
    -0.007583953440189362,
    -0.012841246090829372,
    0.06264825910329819,
    0.00030949219944886863,
    0.03231244534254074,
    0.001032069674693048,
    0.002110466593876481,
    -0.01794068142771721,
    -0.010061606764793396,
    0.029951468110084534,
    -0.0009805948939174414,
    0.0271375123411417,
    -0.008345779962837696,
    -0.03129667416214943,
    -0.023458780720829964,
    0.011008743196725845,
    -0.00863403920084238,
    0.010562628507614136,
    -0.02617665007710457,
    0.013575619086623192,
    -0.007549636531621218,
    0.0095056788995862,
    -0.006067162379622459,
    -0.004008170682936907,
    0.001417272724211216,
    0.008119290694594383,
    0.014824741519987583,
    -0.015195359475910664,
    -0.02580603025853634,
    -0.02507852017879486,
    0.022319471463561058,
    0.004896969068795443,
    -0.0174739770591259,
    -0.002810523845255375,
    -0.02819446101784706,
    0.03272424265742302,
    0.010885203257203102,
    0.011544080451130867,
    -0.019876133650541306,
    0.011736253276467323,
    0.04123474285006523,
    0.04428205266594887,
    0.013314814306795597,
    -0.016128769144415855,
    0.02417256496846676,
    0.02754931151866913,
    0.005737723782658577,
    0.009629218839108944,
    -0.03341057524085045,
    0.04381534457206726,
    0.017597516998648643,
    -0.0206310972571373,
    0.0011890677269548178,
    0.01858583278954029,
    -0.0190113577991724,
    -0.002407304709777236,
    0.018709372729063034,
    0.0015485334442928433,
    -0.04422714561223984,
    0.023266607895493507,
    -0.004608709830790758,
    -0.009690987877547741,
    -0.02487262152135372,
    -0.021578233689069748,
    -0.03341057524085045,
    -0.00543917017057538,
    -0.01182547677308321,
    0.004787155892699957,
    0.026739440858364105,
    0.02650608867406845,
    0.014028597623109818,
    -0.008483046665787697,
    0.0006091184332035482,
    -0.006712313275784254,
    -0.007330011110752821,
    -0.012189231812953949,
    -0.04318392276763916,
    -0.013095187954604626,
    -0.012731432914733887,
    0.01704845204949379,
    -0.0190525371581316,
    0.006122068967670202,
    -0.00112472428008914,
    0.015854237601161003,
    -0.007995751686394215,
    -0.0048695155419409275,
    -0.009841981343925,
    0.008181060664355755,
    0.003213742980733514,
    0.01732298545539379,
    0.0162523090839386,
    0.013548166491091251,
    -0.015881691128015518,
    -0.032806601375341415,
    0.007721219211816788,
    0.03272424265742302,
    0.0059196013025939465,
    0.009100743569433689,
    -0.0026835526805371046,
    0.044995833188295364,
    0.010816570371389389,
    0.018352480605244637,
    -0.004993055015802383,
    0.0038640412967652082,
    -0.010143966414034367,
    -0.008572269231081009,
    0.027686577290296555,
    0.006832421291619539,
    -0.004292997997254133,
    -0.012051965110003948,
    -0.012889289297163486,
    -0.0011496037477627397,
    0.003908652812242508,
    -0.013273634016513824,
    -0.015181632712483406,
    -0.021235069260001183,
    0.0008622028399258852,
    -0.004275839775800705,
    0.021893946453928947,
    -0.0003371599013917148,
    -0.0023095025680959225,
    -0.024515729397535324,
    -0.020260479301214218,
    0.0015699812211096287,
    0.011015606112778187,
    0.011763706803321838,
    -0.005219544284045696,
    0.011372498236596584,
    0.007583953440189362,
    -0.031598661094903946,
    -0.015167906880378723,
    -0.03651278838515282,
    0.04562725871801376,
    -0.026094289496541023,
    -0.0302534531801939,
    0.005689680576324463,
    -0.021660594269633293,
    0.0004388226370792836,
    0.0007982882671058178,
    0.0143580362200737,
    0.02513342723250389,
    -0.03129667416214943,
    0.039148297160863876,
    -0.0071927448734641075,
    0.0011101397685706615,
    -0.0038057032506912947,
    0.009244873188436031,
    -0.02522951364517212,
    -0.026217829436063766,
    0.02671198733150959,
    0.009059564210474491,
    0.022552823647856712,
    0.0268217995762825,
    -0.005693112500011921,
    -0.005054824985563755,
    -0.02174295298755169,
    0.025696218013763428,
    -0.01710335910320282,
    0.04112492874264717,
    -0.015401259064674377,
    -0.002259743632748723,
    0.02137233503162861,
    -0.00923801027238369,
    0.004711659625172615,
    0.038763951510190964,
    0.016719013452529907,
    -0.0006237029447220266,
    0.008160470984876156,
    0.0019817797001451254,
    0.0049964869394898415,
    0.005662227515131235,
    0.013884468004107475,
    -0.022497916594147682,
    0.02222338505089283,
    -0.012017648667097092,
    0.03711675852537155,
    0.021097803488373756,
    -0.010233188979327679,
    -0.018654465675354004,
    0.0032532070763409138,
    0.005813220050185919,
    -0.004986192099750042,
    0.011969605460762978,
    -0.023101888597011566,
    -0.002165373181924224,
    0.0064789610914886,
    0.0175151564180851,
    -0.005854400340467691,
    -0.0016034399159252644,
    -0.01375406514853239,
    0.014248223043978214,
    0.015648337081074715,
    0.01715826615691185,
    0.018407387658953667,
    -0.013019691221415997,
    0.009972384199500084,
    0.0143580362200737,
    0.004540076944977045,
    -0.036348070949316025,
    0.02448827587068081,
    -0.004186616744846106,
    0.04834512993693352,
    -0.0064377812668681145,
    0.026835527271032333,
    -0.04197597876191139,
    0.0037507968954741955,
    -0.0079682981595397,
    0.019711414352059364,
    -0.02929259091615677,
    0.030473079532384872,
    -0.0020384020172059536,
    0.004728817846626043,
    0.009828254580497742,
    -0.04090530425310135,
    -0.016403300687670708,
    -0.011612714268267155,
    0.0028019447345286608,
    -0.009944930672645569,
    0.00423465995118022,
    0.0011478879023343325,
    -0.004028760828077793,
    0.005723997484892607,
    -0.010562628507614136,
    0.01741907000541687,
    -0.0009582891361787915,
    -0.002398725599050522,
    -0.001624029828235507,
    0.030747611075639725,
    0.013898194767534733,
    0.024007845669984818,
    -0.00500335032120347,
    -0.03585391119122505,
    -0.023829398676753044,
    -0.004879810847342014,
    -0.006022551096975803,
    -0.0007742667221464217,
    -0.037665825337171555,
    -0.012628483586013317,
    -0.02654726803302765,
    0.05232584476470947,
    0.02307443507015705,
    0.019354524090886116,
    0.036869678646326065,
    0.007453550584614277,
    -0.010892067104578018,
    -0.008002614602446556,
    -0.037665825337171555,
    0.03319094702601433,
    -0.006925075780600309,
    0.00699370913207531,
    -0.013026555068790913,
    -0.01340403687208891,
    0.01715826615691185,
    -0.035826459527015686,
    0.014577662572264671,
    -0.0034024841152131557,
    0.01821521483361721,
    0.006200997158885002,
    0.006008824333548546,
    -0.031653568148612976,
    -0.00047914456808939576,
    0.034398891031742096,
    -0.015428712591528893,
    -0.0024570636451244354,
    -0.023568592965602875,
    0.02533932588994503,
    0.002458779374137521,
    -0.00459155160933733,
    0.018572106957435608,
    0.03283405676484108,
    0.01973886787891388,
    -0.0011701936600729823,
    0.015085547231137753,
    -0.03151630237698555,
    -0.03884631395339966,
    0.013431490398943424,
    0.007680039387196302,
    -0.00010069757263408974,
    -0.007583953440189362,
    0.019519243389368057,
    0.005720565561205149,
    0.018064221367239952,
    -0.019972220063209534,
    0.028633713722229004,
    0.004179753363132477,
    -0.002438189461827278,
    -0.015058093704283237,
    -0.007927118800580502,
    -0.005246997345238924,
    0.02754931151866913,
    0.009299779310822487,
    0.008153608068823814,
    -0.0005979655543342233,
    -0.04107002541422844,
    0.0010835444554686546,
    -0.026410002261400223,
    0.0144953029230237,
    -0.01071362104266882,
    0.017721056938171387,
    -0.018077949061989784,
    0.005679385736584663,
    0.008098701015114784,
    0.03299877420067787,
    0.019725142046809196,
    0.013760928995907307,
    -0.008194787427783012,
    0.014577662572264671,
    0.008407549932599068,
    -0.015854237601161003,
    0.01767987571656704,
    0.010246915742754936,
    -0.02612174302339554,
    -1.7185075193992816e-05,
    0.04988250881433487,
    0.01682882569730282,
    0.03184574097394943,
    0.019766321405768394,
    -0.03190064802765846,
    -0.03895612433552742,
    0.006983413826674223,
    -0.00752218347042799,
    -0.00015163616626523435,
    0.02354113943874836,
    -0.016169948503375053,
    0.033383119851350784,
    0.013740338385105133,
    0.02159196138381958,
    0.022895989939570427,
    0.0006726040155626833,
    0.031186863780021667,
    0.014207043685019016,
    -0.022580277174711227,
    -0.007933981716632843,
    -0.014509028755128384,
    -0.021770406514406204,
    -0.020287932828068733,
    0.014591388404369354,
    -0.016430754214525223,
    -0.007796715945005417,
    -0.0015133590204641223,
    0.018132854253053665,
    -0.03648533672094345,
    -0.010281232185661793,
    0.02923768386244774,
    0.025009887292981148,
    -0.01087834034115076,
    -0.031022144481539726,
    0.0031262359116226435,
    -0.01647193543612957,
    -0.010940110310912132,
    -0.04074058681726456,
    -0.00813301745802164,
    -0.01842111349105835,
    -0.0056038894690573215,
    -0.01641702838242054,
    -0.0013211864279583097,
    0.034179262816905975,
    -0.0056244791485369205,
    0.02317052148282528,
    0.025353053584694862,
    -0.000891371862962842,
    -0.022292017936706543,
    -0.02200375869870186,
    0.02138606272637844,
    0.00397385424003005,
    0.008682082407176495,
    -0.0158954169601202,
    0.0081261545419693,
    0.026437455788254738,
    0.019862407818436623,
    -0.03568919003009796,
    -0.01504436694085598,
    -0.014838467352092266,
    0.034453798085451126,
    -0.012552986852824688,
    0.018036767840385437,
    0.0018719667568802834,
    0.009780211374163628,
    0.01794068142771721,
    0.013005965389311314,
    0.016142496839165688,
    0.007529046852141619,
    0.002234006067737937,
    0.015318899415433407,
    0.009739031083881855,
    0.015195359475910664,
    0.0018805458676069975,
    0.017295531928539276,
    -0.002156793838366866,
    -0.030445626005530357,
    -0.015167906880378723,
    0.0024227469693869352,
    0.00158027617726475,
    0.009567448869347572,
    -0.008242830634117126,
    0.0008956614183261991,
    0.023664679378271103,
    -0.01693863980472088,
    6.552312697749585e-05,
    0.023060709238052368,
    -0.00022884836653247476,
    -0.0006151238339953125,
    -0.010542037896811962,
    0.009141923859715462,
    -0.004179753363132477,
    0.002788218203932047,
    0.028276821598410606,
    0.004492033738642931,
    -0.014907101169228554,
    0.007357464171946049,
    -0.03459106385707855,
    0.006619658786803484,
    0.030335813760757446,
    0.0049964869394898415,
    0.009841981343925,
    0.017817143350839615,
    -0.03055543825030327,
    -0.03596372529864311,
    0.019917314872145653,
    0.019340796396136284,
    -0.001455020857974887,
    0.004787155892699957,
    -0.045050740242004395,
    0.0162111297249794,
    -0.00035817877505905926,
    -0.012841246090829372,
    -0.004993055015802383,
    0.0028637144714593887,
    -0.0032446279656141996,
    -0.025009887292981148,
    0.011187189258635044,
    -0.004852357320487499,
    0.003090203506872058,
    0.0033921890426427126,
    -0.023623500019311905,
    -0.018201487138867378,
    0.020068306475877762,
    0.009189967066049576,
    0.031077049672603607,
    -0.013012828305363655,
    0.012662800028920174,
    -0.013362856581807137,
    -0.01964278146624565,
    -0.016760192811489105,
    0.01610131561756134,
    0.004296429455280304,
    -0.005456328392028809,
    0.018517199903726578,
    0.03255952522158623,
    0.025325600057840347,
    0.0023506823927164078,
    0.03261443227529526,
    -0.01225100178271532,
    0.008407549932599068,
    -0.00493471696972847,
    -0.005205817520618439,
    0.011873519979417324,
    0.030116187408566475,
    -0.023321514949202538,
    -0.005264155566692352,
    0.013115777634084225,
    0.024982433766126633,
    -0.037610918283462524,
    -0.00040879566222429276,
    0.021839039400219917,
    -0.0055318246595561504,
    -0.013905058614909649,
    -0.022182205691933632,
    -0.02693161368370056,
    0.007281967904418707,
    2.6112735213246197e-05,
    -0.004193480126559734,
    0.0193682499229908,
    -0.04381534457206726,
    -0.007961435243487358,
    0.023197975009679794,
    -0.004492033738642931,
    0.026560993865132332,
    0.00578233553096652,
    0.007323147729039192,
    -0.011612714268267155,
    0.01658174768090248,
    0.02480398863554001,
    0.010926383547484875,
    -0.00875757820904255,
    0.012813792563974857,
    -0.036979492753744125,
    -0.008181060664355755,
    -0.015881691128015518,
    0.003006128128618002,
    0.014948280528187752,
    0.02175668068230152,
    0.01584050990641117,
    -0.0013735191896557808,
    0.010548901744186878,
    0.011756842955946922,
    -0.011756842955946922,
    0.002258027670904994,
    -0.027727756649255753,
    -0.014907101169228554,
    -0.03374001383781433,
    -0.009409592486917973,
    -0.03321840241551399,
    -0.014056051149964333,
    -0.009718441404402256,
    0.014577662572264671,
    0.02211357280611992,
    -0.019285889342427254,
    -0.007089795079082251,
    0.023513685911893845,
    -0.022786175832152367,
    0.0524631105363369,
    0.020095760002732277,
    0.03719911724328995,
    0.0129579221829772,
    0.003857178147882223,
    -0.008078111335635185,
    -0.004636163357645273,
    -0.029072964563965797,
    -0.0007807010551914573,
    0.027796389535069466,
    0.012999101541936398,
    -0.01682882569730282,
    -0.000658019445836544,
    -0.008407549932599068,
    -0.010679304599761963,
    -0.03236735239624977,
    -0.006612795405089855,
    0.03264188393950462,
    0.02179786004126072,
    0.01979377493262291,
    -0.023005802184343338,
    -0.02359604649245739,
    -0.011633303947746754,
    0.03546956554055214,
    -0.030116187408566475,
    0.004993055015802383,
    0.01736416481435299,
    -0.031022144481539726,
    -0.01732298545539379,
    0.01409723050892353,
    0.03527739271521568,
    0.0010329275391995907,
    0.032751698046922684,
    0.022099845111370087,
    -0.011530354619026184,
    -0.025957023724913597,
    -0.014536482281982899,
    -0.019807500764727592,
    0.020946810021996498,
    0.020768364891409874,
    -0.015373805537819862,
    -0.01393251121044159,
    0.03665005415678024,
    -0.013767791911959648,
    -0.0193682499229908,
    -0.002505106618627906,
    0.008572269231081009,
    0.03912084549665451,
    -0.037034399807453156,
    -0.006025982555001974,
    -0.016115043312311172,
    -0.026423728093504906,
    0.002568592317402363,
    -0.02285480871796608,
    -0.007817305624485016,
    0.02038401924073696,
    -0.029210230335593224,
    -0.0011976469540968537,
    0.010240052826702595,
    0.014577662572264671,
    -0.00836637057363987,
    -0.007130974903702736,
    -0.0001753360265865922,
    -0.015401259064674377,
    -0.006324536632746458,
    0.00849677249789238,
    0.019725142046809196,
    -0.016293488442897797,
    -0.014907101169228554,
    -0.02797483652830124,
    -0.03711675852537155,
    -0.006509845610707998,
    0.023788219317793846,
    0.0034024841152131557,
    -0.01684255339205265,
    0.040520958602428436,
    0.0033287035766988993,
    0.016293488442897797,
    -0.012244137935340405,
    0.03467342257499695,
    -0.01715826615691185,
    0.025476591661572456,
    -0.014207043685019016,
    -0.010363591834902763,
    0.011159735731780529,
    0.007082931697368622,
    -0.029265137389302254,
    -0.022882262244820595,
    -0.011846066452562809,
    0.02849644608795643,
    0.012628483586013317,
    0.012525533325970173,
    0.005586731247603893,
    0.0007948566344566643,
    -0.007954571396112442,
    -0.01441294327378273,
    0.019354524090886116,
    0.0368422269821167,
    0.020974263548851013,
    -0.008400687016546726,
    0.023348966613411903,
    -0.0017604379681870341,
    0.017062179744243622,
    -0.0034076315350830555,
    0.03596372529864311,
    -0.002290628384798765,
    -0.01953296922147274,
    -0.03783054277300835,
    -0.011276411823928356,
    -0.012635346502065659,
    -0.026313915848731995,
    0.01721317134797573,
    -0.02385685220360756,
    -0.017144538462162018,
    -0.035606831312179565,
    0.03659514710307121,
    -0.0022786175832152367,
    -0.01105678640305996,
    -0.007734945975244045,
    0.038818858563899994,
    0.013198137283325195,
    0.0023644089233130217,
    -0.009636081755161285,
    -0.008702672086656094,
    -0.0034385162871330976,
    -0.0033904733136296272,
    -0.02048010565340519,
    0.008853664621710777,
    -0.004220933187752962,
    0.016375849023461342,
    0.022346924990415573,
    -0.028688618913292885,
    -0.027068879455327988,
    -0.008435003459453583,
    -0.02296462282538414,
    0.015360078774392605,
    -0.025202060118317604,
    0.05232584476470947,
    0.01034986600279808,
    0.022895989939570427,
    0.021921399980783463,
    0.011228368617594242,
    -0.002662962768226862,
    0.03088487684726715,
    -0.02680807374417782,
    0.009368413127958775,
    -0.0021070349030196667,
    0.01699354499578476,
    -0.012635346502065659,
    -0.007782989181578159,
    -0.02776893600821495,
    -0.0032840920612215996,
    -0.007295694202184677,
    -0.020068306475877762,
    -0.0028362611774355173,
    0.0412621945142746,
    0.0025806031189858913,
    -0.021976307034492493,
    0.0017372743459418416,
    0.003184573957696557,
    -0.006798104848712683,
    0.01762497052550316,
    -0.011063649319112301,
    -0.03327330946922302,
    -0.007913392037153244,
    -0.006022551096975803,
    0.013822698034346104,
    0.019491789862513542,
    -0.006369147915393114,
    0.0030318654607981443,
    0.005037666764110327,
    0.0014799003256484866,
    -0.019972220063209534,
    -0.023046981543302536,
    -0.009835117496550083,
    0.009196829982101917,
    0.044693849980831146,
    0.0006052578100934625,
    0.022264564409852028,
    0.026108017191290855,
    -0.018201487138867378,
    -0.000753676809836179,
    0.002258027670904994,
    0.017968134954571724,
    -0.005734292324632406,
    0.00656132074072957,
    0.022250838577747345,
    -0.03272424265742302,
    0.010583218187093735,
    -0.0113999517634511,
    0.03456360846757889,
    -0.0012045102193951607,
    0.01769360341131687,
    -0.0011144293239340186,
    0.00041866168612614274,
    -0.005480349995195866,
    -0.009992973878979683,
    -0.0038743363693356514,
    -0.006513277534395456,
    0.0020452651660889387,
    0.008990931324660778,
    0.0237058587372303,
    0.0016531988512724638,
    -0.030006375163793564,
    -0.02391175925731659,
    -0.03975226730108261,
    -0.014220770448446274,
    -0.0045263501815497875,
    -0.006839284673333168,
    -0.02849644608795643,
    0.02079581841826439,
    0.003901789430528879,
    -0.03799526393413544,
    0.0012954489793628454,
    0.17965389788150787,
    -0.0009136776207014918,
    0.004296429455280304,
    0.004896969068795443,
    -0.014907101169228554,
    0.02697279304265976,
    0.013712885789573193,
    0.017926955595612526,
    -0.028221914544701576,
    0.028963152319192886,
    0.004680774640291929,
    -0.0062627666629850864,
    0.003884631209075451,
    -0.00019849967793561518,
    -0.022717542946338654,
    -0.011605850420892239,
    -0.021468421444296837,
    -0.02654726803302765,
    -0.01290301512926817,
    0.007954571396112442,
    0.007652586326003075,
    6.0750982811441645e-05,
    -0.007590816356241703,
    -0.021990032866597176,
    0.02142724208533764,
    0.0010972711024805903,
    0.0016008662059903145,
    -0.021138982847332954,
    -0.000743810785934329,
    -0.0023163657169789076,
    -0.016924912109971046,
    0.020150667056441307,
    0.0035311710089445114,
    0.008510499261319637,
    -0.03945028409361839,
    -0.010596944950520992,
    -0.008599722757935524,
    -0.003613530658185482,
    0.010850886814296246,
    0.022868536412715912,
    0.013822698034346104,
    -0.017295531928539276,
    0.00079871725756675,
    -0.04101511836051941,
    -0.0077280825935304165,
    -0.009972384199500084,
    -0.025366779416799545,
    -0.012209821492433548,
    0.0022769018542021513,
    0.025668764486908913,
    -0.03299877420067787,
    -0.01752888411283493,
    0.007254514377564192,
    0.0029306316282600164,
    -0.020287932828068733,
    0.0035311710089445114,
    -0.00517493300139904,
    0.013287360779941082,
    0.023733312264084816,
    0.012889289297163486,
    -0.038352154195308685,
    0.01921725645661354,
    -0.009828254580497742,
    0.015401259064674377,
    -0.04625868424773216,
    0.0046739112585783005,
    -0.048043143004179,
    -0.012786339037120342,
    -0.010137103497982025,
    0.018187761306762695,
    -0.004001307301223278,
    -0.01324618048965931,
    -0.025009887292981148,
    -0.020809544250369072,
    -0.0193270705640316,
    -0.026464907452464104,
    0.06182466074824333,
    0.01842111349105835,
    0.01752888411283493,
    0.021880220621824265,
    0.01757006347179413,
    0.008579133078455925,
    -0.005854400340467691,
    0.020178120583295822,
    -0.028386633843183517,
    -0.02285480871796608,
    0.026533542200922966,
    -0.01441294327378273,
    0.0068255579099059105,
    -0.007261377759277821,
    -0.02480398863554001,
    -0.030527984723448753,
    0.016224855557084084,
    0.007652586326003075,
    -0.0035689191427081823,
    0.011839202605187893,
    0.01962905563414097,
    -0.007309420965611935,
    -0.017913229763507843,
    0.0159365963190794,
    -0.006341694854199886,
    0.050706107169389725,
    -0.013946237973868847,
    0.005881853401660919,
    -0.020342839881777763,
    -0.005576436407864094,
    -0.02301952801644802,
    0.02439218945801258,
    0.005909306462854147,
    0.0033389984164386988,
    -0.006053436081856489,
    -0.02290971577167511,
    -0.00699370913207531,
    -0.017981862649321556,
    -0.00033415723009966314,
    -0.005422011949121952,
    -0.007844759151339531,
    0.00873698852956295,
    0.007762399036437273,
    0.009642944671213627,
    -0.019601602107286453,
    0.008778168819844723,
    2.3994762159418315e-05,
    -0.014426669105887413,
    -0.015758151188492775,
    -0.030006375163793564,
    -0.03401454538106918,
    0.004347904585301876,
    -0.008407549932599068,
    0.005319062154740095,
    0.015058093704283237,
    -0.01726807840168476,
    -0.0035311710089445114,
    0.031186863780021667,
    -0.007082931697368622,
    -0.004588120151311159,
    0.0008476183284074068,
    -0.012999101541936398,
    0.019889861345291138,
    -0.01391192153096199,
    -0.005154342856258154,
    0.007817305624485016,
    0.012765749357640743,
    -0.02010948769748211,
    0.01652684062719345,
    -0.008235967718064785,
    0.011070513166487217,
    -0.007378053851425648,
    -0.0077280825935304165,
    0.021084075793623924,
    -0.016870006918907166,
    0.0014687475049868226,
    0.011866656132042408,
    -0.0003646131372079253,
    0.023692132905125618,
    -0.0055798678658902645,
    -0.007769262418150902,
    -0.0016531988512724638,
    0.020178120583295822,
    0.027521857991814613,
    -0.020082034170627594,
    -0.011949015781283379,
    -0.013355993665754795,
    -0.005181795917451382,
    -0.03459106385707855,
    -0.025215785950422287,
    -0.17108850181102753,
    0.00630737841129303,
    0.021770406514406204,
    -0.0599578432738781,
    0.022031212225556374,
    -0.007666313089430332,
    -0.005353378597646952,
    -0.013712885789573193,
    0.015634611248970032,
    -0.011454857885837555,
    0.02101544290781021,
    -0.0020898766815662384,
    0.008826212026178837,
    -0.004035624209791422,
    -0.0008021488902159035,
    -0.01158526074141264,
    0.008263420313596725,
    -0.007034888956695795,
    0.02849644608795643,
    0.0010964131215587258,
    0.03574409708380699,
    -0.014673748053610325,
    0.010329275391995907,
    0.020548738539218903,
    0.001177057041786611,
    -0.015181632712483406,
    -0.026204103603959084,
    0.0041625951416790485,
    -0.007879075594246387,
    -0.0387364998459816,
    -0.012065691873431206,
    0.009965520352125168,
    0.03934046998620033,
    0.010068469680845737,
    0.04323882982134819,
    0.013863878324627876,
    0.05194149911403656,
    -0.029100418090820312,
    -0.034755781292915344,
    0.04005425423383713,
    0.013706021942198277,
    0.03563428670167923,
    0.051557157188653946,
    -0.03780309110879898,
    -0.004951875191181898,
    -0.009059564210474491,
    0.03448124974966049,
    -0.02855135314166546,
    0.005607320927083492,
    -0.01595032401382923,
    0.03670496121048927,
    -0.006166680715978146,
    0.00813301745802164,
    -0.010075333528220654,
    0.006691723596304655,
    0.016924912109971046,
    0.012868698686361313,
    0.010631261393427849,
    0.014907101169228554,
    -0.0027470383793115616,
    0.005274450872093439,
    -0.018599558621644974,
    0.013678569346666336,
    -0.009114470332860947,
    -0.013342266902327538,
    -0.008270284160971642,
    -0.02760421670973301,
    0.039779722690582275,
    -0.006231882143765688,
    0.03135158121585846,
    0.005617616232484579,
    0.011921562254428864,
    -0.011214641854166985,
    -0.0027058583218604326,
    0.01261475682258606,
    0.015593431890010834,
    -0.014426669105887413,
    0.027700303122401237,
    0.04290939122438431,
    -0.015648337081074715,
    -0.01805049553513527,
    0.028853338211774826,
    -0.022319471463561058,
    0.01478356122970581,
    -0.0007609690655954182,
    -0.012278454378247261,
    0.014934553764760494,
    -0.002904894296079874,
    -0.025380505248904228,
    -0.010871476493775845,
    0.009636081755161285,
    -0.007721219211816788,
    -0.0002886878210119903,
    -0.012841246090829372,
    -0.012367677874863148,
    0.0243372842669487,
    0.03393218666315079,
    -0.008435003459453583,
    0.023184247314929962,
    -0.005312198773026466,
    -0.0016514830058440566,
    0.01757006347179413,
    0.002711005974560976,
    0.001696952385827899,
    0.02476280927658081,
    0.019519243389368057,
    -0.035606831312179565,
    0.001060380833223462,
    0.016005229204893112,
    -0.0143580362200737,
    -0.0028002290055155754,
    -0.0009102459880523384,
    0.005854400340467691,
    0.020548738539218903,
    -0.04145436733961105,
    0.008167333900928497,
    -0.0031725631561130285,
    -0.0075564999133348465,
    0.030912330374121666,
    -0.00028311138157732785,
    0.0349479541182518,
    0.004361630883067846,
    -0.021660594269633293,
    0.019134897738695145,
    -0.023005802184343338,
    -0.02507852017879486,
    -0.10251034051179886,
    -0.045215461403131485,
    0.01444039586931467,
    0.0013211864279583097,
    -0.018723098561167717,
    0.0018977040890604258,
    -0.0032892394810914993,
    0.013417763635516167,
    -0.011695073917508125,
    0.013280496932566166,
    -0.01827012002468109,
    0.002053844276815653,
    -0.023211700841784477,
    -0.00892229750752449,
    -0.0012911594239994884,
    -0.02787875011563301,
    -0.03124176897108555,
    -0.017858322709798813,
    -0.011365635320544243,
    -0.013205001130700111,
    -0.011784296482801437,
    0.0007425239309668541,
    0.01895645074546337,
    0.02010948769748211,
    -0.024419642984867096,
    -0.01330108754336834,
    -0.03832470253109932,
    0.014934553764760494,
    0.025037340819835663,
    0.006084321066737175,
    0.02253909781575203,
    -0.02634136937558651,
    -0.025778578594326973,
    0.006715745199471712,
    0.005006781779229641,
    0.02349996007978916,
    -0.03604608401656151,
    -0.015648337081074715,
    0.016169948503375053,
    -0.019134897738695145,
    0.005281314253807068,
    -0.0047013647854328156,
    0.024049025028944016,
    -0.012944195419549942,
    -0.008270284160971642,
    0.02085072360932827,
    0.0028877360746264458,
    0.019134897738695145,
    -0.0009479941800236702,
    -0.02031538635492325,
    -0.034755781292915344,
    -0.006225018762052059,
    -0.013630526140332222,
    0.014179590158164501,
    0.02344505302608013,
    0.0024038730189204216,
    0.006008824333548546,
    -0.016018956899642944,
    0.019148623570799828,
    -0.020027127116918564,
    0.007652586326003075,
    0.005559277720749378,
    -0.008503636345267296,
    0.020933084189891815,
    4.742651799460873e-05,
    0.006681428290903568,
    0.015497345477342606,
    0.007487867027521133,
    0.010425361804664135,
    -0.012278454378247261,
    -0.012319634668529034,
    0.0221684779971838,
    0.0025943296495825052,
    0.009917477145791054,
    -0.02708260528743267,
    -0.012971648946404457,
    0.0005426301504485309,
    -0.007700629532337189,
    0.019038811326026917,
    0.010404772125184536,
    -0.021825313568115234,
    0.0025171174202114344,
    -0.03780309110879898,
    -0.014303130097687244,
    0.00241588382050395,
    0.002810523845255375,
    0.004557235166430473,
    -0.010720483958721161,
    -0.0018959883600473404,
    -0.05611439049243927,
    0.01619740203022957,
    0.008640902116894722,
    0.009999836795032024,
    -0.004945012275129557,
    -0.0055318246595561504,
    -0.0018805458676069975,
    -0.016924912109971046,
    -0.003465969581156969,
    -0.022182205691933632,
    0.00707606878131628,
    -0.03077506460249424,
    0.00863403920084238,
    -0.07862603664398193,
    0.003301250282675028,
    0.011269548907876015,
    -0.004773429594933987,
    0.010919519700109959,
    -0.04672538861632347,
    0.015771877020597458,
    -0.029127871617674828,
    0.013369720429182053,
    0.016005229204893112,
    -0.029155325144529343,
    -0.037720728665590286,
    -0.012072555720806122,
    0.012106872163712978,
    0.024845167994499207,
    0.015826784074306488,
    0.05655364319682121,
    -0.014001144096255302,
    0.020287932828068733,
    0.001437004772014916,
    0.007741809356957674,
    -0.006128932349383831,
    0.0392855629324913,
    -0.009148786775767803,
    -0.006729471497237682,
    -0.009038974530994892,
    -0.007391780614852905,
    0.02418629080057144,
    -0.0008433287148363888,
    -0.0019955062307417393,
    0.02170177362859249,
    -0.0009642945369705558,
    -0.011592123657464981,
    0.012889289297163486,
    0.004790587816387415,
    0.008435003459453583,
    0.02997892163693905,
    -0.008235967718064785,
    0.001133303390815854,
    0.009938066825270653,
    -0.033136043697595596,
    -0.044995833188295364,
    0.03511267527937889,
    -0.012580440379679203,
    -0.007858485914766788,
    0.002321513369679451,
    0.019134897738695145,
    0.021619414910674095,
    0.0337674655020237,
    0.0012542691547423601,
    0.04757643863558769,
    0.006681428290903568,
    -0.05103554576635361,
    -0.03815998136997223,
    -0.007302557583898306,
    -0.022937169298529625,
    0.043897707015275955,
    -0.004378789104521275,
    -0.013891331851482391,
    0.015071820467710495,
    0.02396666444838047,
    0.0025737397372722626,
    0.015346352010965347,
    -0.0019834954291582108,
    -0.0011015606578439474,
    -0.024460822343826294,
    -0.04186616837978363,
    -0.020287932828068733,
    -0.009313506074249744,
    0.0061392271891236305,
    -0.028633713722229004,
    -0.03975226730108261,
    0.00038799128378741443,
    -0.003929242957383394,
    0.032284993678331375,
    -0.013891331851482391,
    0.006108342204242945,
    -0.0036478471010923386,
    -0.029127871617674828,
    0.03689713403582573,
    0.018407387658953667,
    -0.015648337081074715,
    -0.027302231639623642,
    -0.006396601442247629,
    0.02623155526816845,
    0.016128769144415855,
    -0.03244971111416817,
    -0.009272326715290546,
    -0.0174739770591259,
    -0.006897622719407082,
    -0.013500123284757137,
    -0.005099436268210411,
    0.00449889712035656,
    0.0205899178981781,
    0.02211357280611992,
    0.00932036992162466,
    -0.016609201207756996,
    0.008325190283358097,
    0.014303130097687244,
    0.0006464376347139478,
    0.018187761306762695,
    -0.026725713163614273,
    0.015634611248970032,
    -0.030802518129348755,
    -0.029539668932557106,
    -0.005758313927799463,
    -0.026945339515805244,
    -0.032175179570913315,
    -0.02137233503162861,
    0.018393659964203835,
    0.0162523090839386,
    -0.004214069806039333,
    -0.01185292936861515,
    0.025957023724913597,
    -0.01087834034115076,
    0.025792304426431656,
    0.00992434099316597,
    0.007563363295048475,
    -0.032010458409786224,
    -0.00036804479896090925,
    -0.004478307440876961,
    0.011969605460762978,
    0.01721317134797573,
    -0.02761794440448284,
    0.013287360779941082,
    0.026259008795022964,
    0.0019834954291582108,
    -0.012175505049526691,
    0.005394558422267437,
    -9.068411600310355e-06,
    -0.02481771446764469,
    -0.00013415618741419166,
    -0.02270381711423397,
    -0.015662064775824547,
    -0.014879647642374039,
    -0.005837241653352976,
    -0.025668764486908913,
    -0.004028760828077793,
    -0.020123213529586792,
    0.0711587592959404,
    -0.014289403334259987,
    -0.0017106790328398347,
    0.00268526840955019,
    0.009876297786831856,
    0.0016420460306107998,
    0.008647765964269638,
    -0.016540568321943283,
    -0.011029332876205444,
    -0.008730125613510609,
    -0.0051920912228524685,
    -0.003840019693598151,
    -0.0081055648624897,
    -0.03088487684726715,
    -0.009450772777199745,
    0.006355421617627144,
    4.970534791937098e-05,
    0.017597516998648643,
    0.0221684779971838,
    0.0032823760993778706,
    0.03563428670167923,
    0.029429856687784195,
    -0.011791160330176353,
    -0.02454318292438984,
    -0.05715761333703995,
    0.002640657126903534,
    0.017171991989016533,
    0.014316856861114502,
    -0.0004075088072568178,
    -0.045105647295713425,
    0.04087785258889198,
    0.00587155856192112,
    -0.011200916022062302,
    -0.02771403081715107,
    -0.015593431890010834,
    0.00735060079023242,
    -0.008215377107262611,
    -0.02328033372759819,
    -0.015607157722115517,
    0.005655364133417606,
    0.004594983533024788,
    -0.006008824333548546,
    -0.02893569879233837,
    -0.033026229590177536,
    -0.02264891006052494,
    0.0012551271356642246,
    -0.005823515355587006,
    -0.011358771473169327,
    -0.04974524304270744
  ]
}
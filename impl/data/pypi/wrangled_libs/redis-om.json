{
  "classifiers": [
    "development status :: 3 - alpha",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: database"
  ],
  "description": "object mappings, and more, for redis.\n<div align=\"center\">\n  <br/>\n  <br/>\n  <img width=\"360\" src=\"https://raw.githubusercontent.com/redis-developer/redis-om-python/main/images/logo.svg?token=aaaxxhuyl6rhpesrrambjolbsvqxe\" alt=\"redis om\" />\n  <br/>\n  <br/>\n</div>\n\n<p align=\"center\">\n    <p align=\"center\">\n        object mapping, and more, for redis and python\n    </p>\n</p>\n\n---\n\n[![version][version-svg]][package-url]\n[![license][license-image]][license-url]\n[![build status][ci-svg]][ci-url]\n\n**redis om python** makes it easy to model redis data in your python applications.\n\n[redis om .net](https://github.com/redis/redis-om-dotnet) | [redis om node.js](https://github.com/redis/redis-om-node) | [redis om spring](https://github.com/redis/redis-om-spring) | **redis om python**\n\n<details>\n  <summary><strong>table of contents</strong></summary>\n\nspan\n\n<!-- don't edit this section, instead re-run doctoc to update -->\n\n- [\ud83d\udca1 why redis om?](#-why-redis-om)\n- [\ud83d\udcbb installation](#-installation)\n- [\ud83c\udfc1 getting started](#-getting-started)\n- [\ud83d\udcc7 modeling your data](#-modeling-your-data)\n- [\u2713 validating data with your model](#-validating-data-with-your-model)\n- [\ud83d\udd0e rich queries and embedded models](#-rich-queries-and-embedded-models)\n  - [querying](#querying)\n  - [embedded models](#embedded-models)\n- [calling other redis commands](#calling-other-redis-commands)\n- [\ud83d\udcda documentation](#-documentation)\n- [\u26cf\ufe0f troubleshooting](#\ufe0f-troubleshooting)\n- [\u2728 so how do you get redisearch and redisjson?](#-so-how-do-you-get-redisearch-and-redisjson)\n- [\u2764\ufe0f contributing](#\ufe0f-contributing)\n- [\ud83d\udcdd license](#-license)\n\n<!-- end doctoc generated toc please keep comment here to allow auto update -->\n\n</details>\n\n## \ud83d\udca1 why redis om?\n\nredis om provides high-level abstractions that make it easy to model and query data in redis with modern python applications.\n\nthis **preview** release contains the following features:\n\n* declarative object mapping for redis objects\n* declarative secondary-index generation\n* fluent apis for querying redis\n\n## \ud83d\udcbb installation\n\ninstallation is simple with `pip`, poetry, or pipenv.\n\n```sh\n# with pip\n$ pip install redis-om\n\n# or, using poetry\n$ poetry add redis-om\n```\n\n## \ud83c\udfc1 getting started\n\n### starting redis\n\nbefore writing any code you'll need a redis instance with the appropriate redis modules! the quickest way to get this is with docker:\n\n```sh\ndocker run -p 6379:6379 -p 8001:8001 redis/redis-stack\n```\n\nthis launches the [redis-stack](https://redis.io/docs/stack/) an extension of redis that adds all manner of modern data structures to redis. you'll also notice that if you open up http://localhost:8001 you'll have access to the redis-insight gui, a gui you can use to visualize and work with your data in redis.\n\n\n## \ud83d\udcc7 modeling your data\n\nredis om contains powerful declarative models that give you data validation, serialization, and persistence to redis.\n\ncheck out this example of modeling customer data with redis om. first, we create a `customer` model:\n\n```python\nimport datetime\nfrom typing import optional\n\nfrom pydantic import emailstr\n\nfrom redis_om import hashmodel\n\n\nclass customer(hashmodel):\n    first_name: str\n    last_name: str\n    email: emailstr\n    join_date: datetime.date\n    age: int\n    bio: optional[str]\n```\n\nnow that we have a `customer` model, let's use it to save customer data to redis.\n\n```python\nimport datetime\nfrom typing import optional\n\nfrom pydantic import emailstr\n\nfrom redis_om import hashmodel\n\n\nclass customer(hashmodel):\n    first_name: str\n    last_name: str\n    email: emailstr\n    join_date: datetime.date\n    age: int\n    bio: optional[str]\n\n\n# first, we create a new `customer` object:\nandrew = customer(\n    first_name=\"andrew\",\n    last_name=\"brookins\",\n    email=\"andrew.brookins@example.com\",\n    join_date=datetime.date.today(),\n    age=38,\n    bio=\"python developer, works at redis, inc.\"\n)\n\n# the model generates a globally unique primary key automatically\n# without needing to talk to redis.\nprint(andrew.pk)\n# > \"01fjm6ph661hcnnrc884h6k30c\"\n\n# we can save the model to redis by calling `save()`:\nandrew.save()\n\n# expire the model after 2 mins (120 seconds)\nandrew.expire(120)\n\n# to retrieve this customer with its primary key, we use `customer.get()`:\nassert customer.get(andrew.pk) == andrew\n```\n\n**ready to learn more?** check out the [getting started](docs/getting_started.md) guide.\n\nor, continue reading to see how redis om makes data validation a snap.\n\n## \u2713 validating data with your model\n\nredis om uses [pydantic][pydantic-url] to validate data based on the type annotations you assign to fields in a model class.\n\nthis validation ensures that fields like `first_name`, which the `customer` model marked as a `str`, are always strings. **but every redis om model is also a pydantic model**, so you can use pydantic validators like `emailstr`, `pattern`, and many more for complex validations!\n\nfor example, because we used the `emailstr` type for the `email` field, we'll get a validation error if we try to create a `customer` with an invalid email address:\n\n```python\nimport datetime\nfrom typing import optional\n\nfrom pydantic import emailstr, validationerror\n\nfrom redis_om import hashmodel\n\n\nclass customer(hashmodel):\n    first_name: str\n    last_name: str\n    email: emailstr\n    join_date: datetime.date\n    age: int\n    bio: optional[str]\n\n\ntry:\n    customer(\n        first_name=\"andrew\",\n        last_name=\"brookins\",\n        email=\"not an email address!\",\n        join_date=datetime.date.today(),\n        age=38,\n        bio=\"python developer, works at redis, inc.\"\n    )\nexcept validationerror as e:\n    print(e)\n    \"\"\"\n    pydantic.error_wrappers.validationerror: 1 validation error for customer\n     email\n       value is not a valid email address (type=value_error.email)\n    \"\"\"\n```\n\n**any existing pydantic validator should work** as a drop-in type annotation with a redis om model. you can also write arbitrarily complex custom validations!\n\nto learn more, see the [documentation on data validation](docs/validation.md).\n\n## \ud83d\udd0e rich queries and embedded models\n\ndata modeling, validation, and saving models to redis all work regardless of how you run redis.\n\nnext, we'll show you the **rich query expressions** and **embedded models** redis om provides when the [redisearch][redisearch-url] and [redisjson][redis-json-url] modules are installed in your redis deployment, or you're using [redis enterprise][redis-enterprise-url].\n\n**tip**: *wait, what's a redis module?* if you aren't familiar with redis modules, review the [so, how do you get redisearch and redisjson?](#-so-how-do-you-get-redisearch-and-redisjson) section of this readme.\n\n### querying\n\nredis om comes with a rich query language that allows you to query redis with python expressions.\n\nto show how this works, we'll make a small change to the `customer` model we defined earlier. we'll add `field(index=true)` to tell redis om that we want to index the `last_name` and `age` fields:\n\n```python\nimport datetime\nfrom typing import optional\n\nfrom pydantic import emailstr\n\nfrom redis_om import (\n    field,\n    hashmodel,\n    migrator\n)\n\n\nclass customer(hashmodel):\n    first_name: str\n    last_name: str = field(index=true)\n    email: emailstr\n    join_date: datetime.date\n    age: int = field(index=true)\n    bio: optional[str]\n\n\n# now, if we use this model with a redis deployment that has the\n# redisearch module installed, we can run queries like the following.\n\n# before running queries, we need to run migrations to set up the\n# indexes that redis om will use. you can also use the `migrate`\n# cli tool for this!\nmigrator().run()\n\n# find all customers with the last name \"brookins\"\ncustomer.find(customer.last_name == \"brookins\").all()\n\n# find all customers that do not have the last name \"brookins\"\ncustomer.find(customer.last_name != \"brookins\").all()\n\n# find all customers whose last name is \"brookins\" or whose age is\n# 100 and whose last name is \"smith\"\ncustomer.find((customer.last_name == \"brookins\") | (\n        customer.age == 100\n) & (customer.last_name == \"smith\")).all()\n```\n\nthese queries -- and more! -- are possible because **redis om manages indexes for you automatically**.\n\nquerying with this index features a rich expression syntax inspired by the django orm, sqlalchemy, and peewee. we think you'll enjoy it!\n\n**note:** indexing only works for data stored in redis logical database 0.  if you are using a different database number when connecting to redis, you can expect the code to raise a `migrationerror` when you run the migrator.\n\n### embedded models\n\nredis om can store and query **nested models** like any document database, with the speed and power you get from redis. let's see how this works.\n\nin the next example, we'll define a new `address` model and embed it within the `customer` model.\n\n```python\nimport datetime\nfrom typing import optional\n\nfrom redis_om import (\n    embeddedjsonmodel,\n    jsonmodel,\n    field,\n    migrator,\n)\n\n\nclass address(embeddedjsonmodel):\n    address_line_1: str\n    address_line_2: optional[str]\n    city: str = field(index=true)\n    state: str = field(index=true)\n    country: str\n    postal_code: str = field(index=true)\n\n\nclass customer(jsonmodel):\n    first_name: str = field(index=true)\n    last_name: str = field(index=true)\n    email: str = field(index=true)\n    join_date: datetime.date\n    age: int = field(index=true)\n    bio: optional[str] = field(index=true, full_text_search=true,\n                               default=\"\")\n\n    # creates an embedded model.\n    address: address\n\n\n# with these two models and a redis deployment with the redisjson\n# module installed, we can run queries like the following.\n\n# before running queries, we need to run migrations to set up the\n# indexes that redis om will use. you can also use the `migrate`\n# cli tool for this!\nmigrator().run()\n\n# find all customers who live in san antonio, tx\ncustomer.find(customer.address.city == \"san antonio\",\n              customer.address.state == \"tx\")\n```\n\n## calling other redis commands\n\nsometimes you'll need to run a redis command directly.  redis om supports this through the `db` method on your model's class.  this returns a connected redis client instance which exposes a function named for each redis command.  for example, let's perform some basic set operations:\n\n```python\nfrom redis_om import hashmodel\n\nclass demo(hashmodel):\n    some_field: str\n\nredis_conn = demo.db()\n\nredis_conn.sadd(\"myset\", \"a\", \"b\", \"c\", \"d\")\n\n# prints false\nprint(redis_conn.sismember(\"myset\", \"e\"))\n\n# prints true\nprint(redis_conn.sismember(\"myset\", \"b\"))\n```\n\nthe parameters expected by each command function are those documented on the command's page on [redis.io](https://redis.io/commands/).\n\nif you don't want to get a redis connection from a model class, you can also use `get_redis_connection`:\n\n```python\nfrom redis_om import get_redis_connection\n\nredis_conn = get_redis_connection()\nredis_conn.set(\"hello\", \"world\")\n```\n\n## \ud83d\udcda documentation\n\nthe redis om documentation is available [here](docs/index.md).\n\n## \u26cf\ufe0f troubleshooting\n\nif you run into trouble or have any questions, we're here to help!\n\nhit us up on the [redis discord server](http://discord.gg/redis) or [open an issue on github](https://github.com/redis-developer/redis-om-python/issues/new).\n\n## \u2728 so how do you get redisearch and redisjson?\n\nsome advanced features of redis om rely on core features from two source available redis modules: [redisearch][redisearch-url] and [redisjson][redis-json-url].\n\nyou can run these modules in your self-hosted redis deployment, or you can use [redis enterprise][redis-enterprise-url], which includes both modules.\n\nto learn more, read [our documentation](docs/redis_modules.md).\n\n## \u2764\ufe0f contributing\n\nwe'd love your contributions!\n\n**bug reports** are especially helpful at this stage of the project. [you can open a bug report on github](https://github.com/redis/redis-om-python/issues/new).\n\nyou can also **contribute documentation** -- or just let us know if something needs more detail. [open an issue on github](https://github.com/redis/redis-om-python/issues/new) to get started.\n\n## \ud83d\udcdd license\n\nredis om uses the [mit license][license-url].\n\n<!-- badges -->\n\n[version-svg]: https://img.shields.io/pypi/v/redis-om?style=flat-square\n[package-url]: https://pypi.org/project/redis-om/\n[ci-svg]: https://github.com/redis/redis-om-python/actions/workflows/ci.yml/badge.svg\n[ci-url]: https://github.com/redis/redis-om-python/actions/workflows/ci.yml\n[license-image]: https://img.shields.io/badge/license-mit-green.svg?style=flat-square\n[license-url]: license\n<!-- links -->\n\n[redis-om-website]: https://developer.redis.com\n[redis-om-js]: https://github.com/redis-om/redis-om-js\n[redis-om-dotnet]: https://github.com/redis-om/redis-om-dotnet\n[redis-om-spring]: https://github.com/redis-om/redis-om-spring\n[redisearch-url]: https://redis.io/docs/stack/search/\n[redis-json-url]: https://redis.io/docs/stack/json/\n[pydantic-url]: https://github.com/samuelcolvin/pydantic\n[ulid-url]: https://github.com/ulid/spec\n[redis-enterprise-url]: https://redis.com/try-free/\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd-3-clause",
  "name": "redis-om",
  "package_url": "https://pypi.org/project/redis-om/",
  "project_url": "https://pypi.org/project/redis-om/",
  "project_urls": {
    "Code": "https://github.com/redis/redis-om-python",
    "Homepage": "https://github.com/redis/redis-om-python",
    "Issue tracker": "https://github.com/redis/redis-om-python/issues",
    "Repository": "https://github.com/redis/redis-om-python"
  },
  "release_url": "https://pypi.org/project/redis-om/0.2.1/",
  "requires_dist": [
    "redis (>=3.5.3,<5.0.0)",
    "pydantic (>=1.10.2,<2.1.0)",
    "click (>=8.0.1,<9.0.0)",
    "types-redis (>=3.5.9,<5.0.0)",
    "python-ulid (>=1.0.3,<2.0.0)",
    "typing-extensions (>=4.4.0,<5.0.0)",
    "hiredis (>=2.2.3,<3.0.0)",
    "more-itertools (>=8.14,<10.0)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "object mappings, and more, for redis.",
  "version": "0.2.1",
  "releases": [],
  "developers": [
    "oss@redis.com",
    "redis_oss"
  ],
  "kwds": "redis redis_modules redis_om redisjson get_redis_connection",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_redis_om",
  "homepage": "https://github.com/redis/redis-om-python",
  "release_count": 30,
  "dependency_ids": [
    "pypi_click",
    "pypi_hiredis",
    "pypi_more_itertools",
    "pypi_pydantic",
    "pypi_python_ulid",
    "pypi_redis",
    "pypi_types_redis",
    "pypi_typing_extensions"
  ],
  "documentation_summary": "The GitHub repository \"redis/redis-om-python\" is dedicated to providing object mapping and additional functionalities for integrating Redis with Python applications. It simplifies modeling Redis data in Python, supporting declarative object mapping, secondary-index generation, and fluent APIs for querying Redis. Installation is straightforward using pip, Poetry, or Pipenv. The repository includes a comprehensive guide on getting started, modeling data, validating data with models, and performing rich queries and embedded models. It leverages Pydantic for data validation and supports querying with Python expressions. Advanced features require RediSearch and RedisJSON modules. The project is open for contributions and uses the MIT license.",
  "embedding": [
    0.0017168193589895964,
    -0.014350761659443378,
    -0.0014172745868563652,
    -0.04579097777605057,
    -0.026209309697151184,
    0.03516484424471855,
    -0.0008566980250179768,
    -0.016733426600694656,
    -0.00880490429699421,
    -0.025278154760599136,
    -0.012200885452330112,
    -0.002976618940010667,
    -0.030618609860539436,
    -0.0008438603836111724,
    -0.01624046079814434,
    0.01885591447353363,
    0.03343946486711502,
    -0.02526446059346199,
    0.0005357571644708514,
    -0.004720825236290693,
    0.00961281917989254,
    -0.04957037791609764,
    -0.03993017226457596,
    -0.010140017606317997,
    -0.003892370034009218,
    0.008038069121539593,
    0.016733426600694656,
    -0.03697238117456436,
    -0.0041970498859882355,
    0.01116018183529377,
    0.020896242931485176,
    -0.03031735308468342,
    -0.016308927908539772,
    -0.010400193743407726,
    -0.013467532582581043,
    0.017801517620682716,
    0.02570265159010887,
    -0.006240800954401493,
    0.03919072449207306,
    -0.0019478967878967524,
    0.00480640958994627,
    0.008503647521138191,
    -0.00010339642904000357,
    0.005059738643467426,
    -0.0028807646594941616,
    0.021827397868037224,
    -0.003906063735485077,
    -0.02419636957347393,
    0.0009884977480396628,
    -0.004611277487128973,
    0.0035329165402799845,
    0.049077413976192474,
    -0.0036013838835060596,
    -0.006809080019593239,
    0.00037507282104343176,
    0.002959502162411809,
    -0.01526822429150343,
    0.02696245163679123,
    -0.021087950095534325,
    -0.014391841366887093,
    0.02761973813176155,
    0.009838761761784554,
    -0.04121735692024231,
    -0.013166275806725025,
    -0.006836466956883669,
    0.033384691923856735,
    -0.01767827570438385,
    0.006874124053865671,
    0.0160213652998209,
    -0.012967720627784729,
    0.029824387282133102,
    0.04666735976934433,
    -0.008578961715102196,
    -0.011728460900485516,
    0.0445585660636425,
    -0.005436309613287449,
    -0.02419636957347393,
    0.007976449094712734,
    -0.0026137419044971466,
    -0.0147341787815094,
    -0.005573244299739599,
    -0.00761357182636857,
    -0.021019482985138893,
    0.04173770919442177,
    0.011735307984054089,
    0.057950783520936966,
    -0.013385371305048466,
    -0.0026685157790780067,
    0.018499884754419327,
    0.004713978618383408,
    0.011502518318593502,
    0.00579233979806304,
    0.01521345041692257,
    -0.005686215125024319,
    -0.0200746338814497,
    0.022197121754288673,
    -0.012522682547569275,
    0.03502790629863739,
    -0.01014686468988657,
    0.0008875083294697106,
    -0.014939581044018269,
    0.018869608640670776,
    -0.02430591732263565,
    -0.01559686753898859,
    -0.02419636957347393,
    -0.01452877651900053,
    0.01430968102067709,
    -0.007579338271170855,
    0.024744108319282532,
    0.014720485545694828,
    -0.015295610763132572,
    0.01977337710559368,
    -0.01996508613228798,
    -0.027496496215462685,
    -0.009900381788611412,
    0.0023227555211633444,
    0.016158299520611763,
    -0.017377018928527832,
    -0.008147617802023888,
    0.005970355123281479,
    0.001745062181726098,
    0.027934687212109566,
    -0.00046857359120622277,
    -0.00340282847173512,
    0.004460649564862251,
    -0.0025743732694536448,
    -0.005806033033877611,
    -0.022251896560192108,
    0.030180418863892555,
    -0.025497250258922577,
    0.005569820757955313,
    -0.004713978618383408,
    0.005919004324823618,
    -0.011392970569431782,
    -0.02371709793806076,
    0.019047623500227928,
    -0.019567975774407387,
    -0.006275034509599209,
    -0.011187568306922913,
    -0.027633432298898697,
    0.024333303794264793,
    0.013597620651125908,
    -0.0014241213211789727,
    -0.010454967617988586,
    -0.012269353494048119,
    0.01515867654234171,
    0.002846531104296446,
    -0.001045839162543416,
    0.013946804217994213,
    -0.009544352069497108,
    0.023361068218946457,
    -0.027236320078372955,
    -0.022251896560192108,
    0.015103902667760849,
    0.015843350440263748,
    0.00918832141906023,
    -0.016788199543952942,
    -0.0038957935757935047,
    -0.00913354754447937,
    -0.00731231551617384,
    -0.006357195787131786,
    0.02295026369392872,
    -0.042449772357940674,
    0.005788916256278753,
    0.00731231551617384,
    0.0261545367538929,
    0.024593479931354523,
    -0.01911609061062336,
    -0.024839963763952255,
    0.010694603435695171,
    0.002719866344705224,
    0.030399514362215996,
    -0.030289966613054276,
    0.0020694262348115444,
    -0.013960497453808784,
    0.012467908672988415,
    -9.695087101135869e-06,
    0.001613262458704412,
    -0.02158091589808464,
    0.00039796659257262945,
    0.020608678460121155,
    -0.0003928315418306738,
    -0.003556879935786128,
    0.04034097492694855,
    -0.02733217552304268,
    -0.00981822144240141,
    -0.025237074121832848,
    0.0015644794330000877,
    0.0021378938108682632,
    -0.016336314380168915,
    0.012399441562592983,
    0.02659272775053978,
    -0.004737942013889551,
    0.0025144643150269985,
    -0.5692103505134583,
    0.0005948102916590869,
    -0.013221049681305885,
    -0.04034097492694855,
    0.0017835750477388501,
    -0.01137927733361721,
    0.029879162088036537,
    0.017171617597341537,
    -0.017842598259449005,
    0.014597243629395962,
    -0.011386124417185783,
    -0.0002265842049382627,
    -0.00413542939350009,
    -0.023005036637187004,
    0.0025264460127800703,
    -0.022142348811030388,
    0.015829656273126602,
    -0.033576399087905884,
    -0.0058265733532607555,
    0.005751259159296751,
    -0.006785116624087095,
    0.013967343606054783,
    -0.011235496029257774,
    0.0045428103767335415,
    -0.0014857420464977622,
    0.010441274382174015,
    -0.013789328746497631,
    0.02770189940929413,
    0.01793845184147358,
    0.024812575429677963,
    -0.032097503542900085,
    0.018664205446839333,
    0.01811646670103073,
    -0.0261545367538929,
    0.04957037791609764,
    0.002755811670795083,
    -0.013289516791701317,
    0.05159701034426689,
    0.01292663998901844,
    0.041600774973630905,
    0.0026496872305870056,
    -0.005326761398464441,
    -0.0015987131046131253,
    -0.009920922107994556,
    0.015281917527318,
    -0.0022371714003384113,
    0.0048303729854524136,
    0.013371678069233894,
    0.016911441460251808,
    0.019307799637317657,
    0.014761565253138542,
    0.016295235604047775,
    -0.017363326624035835,
    -0.014939581044018269,
    0.022128654643893242,
    -0.03108418732881546,
    0.012584303505718708,
    0.0031306706368923187,
    0.007880594581365585,
    0.005200096871703863,
    7.814908894943073e-05,
    0.02441546507179737,
    -0.027044612914323807,
    -0.03532916307449341,
    -0.04209374263882637,
    0.023580163717269897,
    -0.009345795959234238,
    -0.02434699796140194,
    -0.0013368254294618964,
    -0.03579474240541458,
    0.015350384637713432,
    -0.013905723579227924,
    0.002144740428775549,
    -0.002728424733504653,
    0.00528568122535944,
    0.035630419850349426,
    0.02504536509513855,
    0.015076515264809132,
    0.015966590493917465,
    0.020499130710959435,
    0.017801517620682716,
    0.02820855751633644,
    -0.002755811670795083,
    -0.05274726450443268,
    0.03450755774974823,
    0.0114203579723835,
    -0.021375514566898346,
    -0.011132794432342052,
    0.007921675220131874,
    -0.005470543168485165,
    0.003132382407784462,
    0.025812199339270592,
    0.004443532321602106,
    -0.023361068218946457,
    0.02169046364724636,
    0.01469309814274311,
    -0.02301873080432415,
    0.014871113002300262,
    -0.037876151502132416,
    -0.02070453390479088,
    0.008250318467617035,
    -0.031358055770397186,
    -0.006196297239512205,
    0.002339872531592846,
    -0.00023043550027068704,
    0.016076138243079185,
    -0.020115714520215988,
    0.024661947041749954,
    0.02188217267394066,
    0.0004694294184446335,
    0.007100066635757685,
    -0.02232036367058754,
    -0.02173154428601265,
    0.005135052837431431,
    -0.004957037977874279,
    -0.03672589734196663,
    0.03152237832546234,
    0.021019482985138893,
    0.01515867654234171,
    -0.023744484409689903,
    -0.012823939323425293,
    0.007723119575530291,
    -0.0045873140916228294,
    0.01207764446735382,
    0.016473250463604927,
    -0.014857419766485691,
    -0.008626889437437057,
    0.00876382365822792,
    -0.027825139462947845,
    0.02386772632598877,
    0.01734963245689869,
    -0.014542469754815102,
    0.0099414624273777,
    -0.026524260640144348,
    0.048447512090206146,
    0.012070797383785248,
    0.007921675220131874,
    -0.00012559483002405614,
    0.0037759756669402122,
    -0.0018229437991976738,
    -0.0025504096411168575,
    -0.0024545553606003523,
    0.02025264874100685,
    -0.013768788427114487,
    -0.002659957390278578,
    -0.031467605382204056,
    -0.0054876599460840225,
    -0.00191023969091475,
    0.0013359696604311466,
    -0.021978026255965233,
    -0.01569272205233574,
    0.0010834961431100965,
    -0.05030982568860054,
    0.016664957627654076,
    0.005022082012146711,
    -0.011612066067755222,
    -0.03623293340206146,
    0.0045633502304553986,
    -0.007654652465134859,
    -0.010413886979222298,
    0.017801517620682716,
    0.027893608435988426,
    -0.010434427298605442,
    0.004145699553191662,
    -0.033384691923856735,
    -0.02692137099802494,
    -0.04839273914694786,
    0.060415610671043396,
    -0.029194487258791924,
    0.0006380303530022502,
    -0.022512072697281837,
    -0.016035059466958046,
    -0.0005776934558525681,
    -0.013097808696329594,
    -0.00929786916822195,
    0.012419981881976128,
    -0.03149498999118805,
    0.003207696368917823,
    0.00034832776873372495,
    -0.0009722366812638938,
    0.021868478506803513,
    0.00854472815990448,
    -0.023319987580180168,
    -0.01867789961397648,
    0.028482427820563316,
    0.004039574880152941,
    0.017034681513905525,
    0.020389582961797714,
    -0.01255691610276699,
    -0.0008228922379203141,
    0.0036630043759942055,
    0.03825956955552101,
    0.017664581537246704,
    0.0226490069180727,
    -0.00801068264991045,
    0.017650889232754707,
    0.002873918041586876,
    -0.004179933108389378,
    -0.0025469863321632147,
    0.021895864978432655,
    0.006213414017111063,
    0.021978026255965233,
    0.010098937898874283,
    -0.007538257632404566,
    -0.013714014552533627,
    0.011653146706521511,
    0.03152237832546234,
    -0.012563763186335564,
    0.02003355324268341,
    0.003389135003089905,
    0.010105784051120281,
    -0.004946767818182707,
    -0.018335562199354172,
    -0.016966214403510094,
    0.010797305032610893,
    0.018431417644023895,
    -0.0307555440813303,
    0.026579033583402634,
    -0.014323374256491661,
    -0.005042621865868568,
    -0.003680121386423707,
    0.026236698031425476,
    0.007634112145751715,
    0.004679745063185692,
    0.016295235604047775,
    0.008140770718455315,
    0.021060563623905182,
    0.015966590493917465,
    0.021936945617198944,
    -0.019362572580575943,
    -0.011208108626306057,
    0.02677074261009693,
    -0.006446203216910362,
    -0.007750506512820721,
    0.02286810241639614,
    0.002425456652417779,
    0.03856082260608673,
    -0.03193318098783493,
    0.023415841162204742,
    -0.017144229263067245,
    0.006186027079820633,
    0.041162583976984024,
    0.030399514362215996,
    -0.02794838137924671,
    0.011769541539251804,
    0.009647052735090256,
    0.01598028466105461,
    0.021129030734300613,
    -0.016308927908539772,
    0.009092466905713081,
    -0.03185102343559265,
    0.007045292761176825,
    -0.013166275806725025,
    0.005829996895045042,
    -0.007147993892431259,
    -0.015254531055688858,
    0.0017955568619072437,
    0.004717402160167694,
    0.036041226238012314,
    0.017555033788084984,
    -0.006566021125763655,
    0.008113383315503597,
    0.028646748512983322,
    0.014241213910281658,
    0.03612338751554489,
    -0.011673687025904655,
    -0.00935264304280281,
    -0.034781426191329956,
    0.016048751771450043,
    -0.013262130320072174,
    -0.016418475657701492,
    -0.03864298388361931,
    -0.032645244151353836,
    -0.03672589734196663,
    0.012303587049245834,
    0.016473250463604927,
    -0.01200917735695839,
    0.02829071879386902,
    0.0033377844374626875,
    0.02258053980767727,
    -0.012728084810078144,
    -0.023005036637187004,
    0.03752012178301811,
    -0.0007475781021639705,
    -0.010934239253401756,
    -0.012166651897132397,
    -0.046722136437892914,
    0.013070421293377876,
    -0.01244736835360527,
    0.002493923995643854,
    0.020156795158982277,
    0.028674134984612465,
    -0.013467532582581043,
    -0.005261717829853296,
    -0.04061484709382057,
    0.004775599110871553,
    0.04699600487947464,
    -0.019143477082252502,
    -0.0010783611796796322,
    0.001527678221464157,
    0.011879089288413525,
    0.025428783148527145,
    -0.014227519743144512,
    -0.009462190791964531,
    0.03984801098704338,
    -0.007538257632404566,
    0.007147993892431259,
    -0.011831161566078663,
    -0.0193351861089468,
    -0.0104070408269763,
    0.0006251927115954459,
    -0.007565644569694996,
    -0.01963644288480282,
    -0.021334433928132057,
    0.017952146008610725,
    0.007360242772847414,
    0.03212489187717438,
    0.010413886979222298,
    0.024881042540073395,
    -0.009975695982575417,
    -0.0014164188178256154,
    -0.023744484409689903,
    0.0034285036381334066,
    -0.0009217420010827482,
    0.026893984526395798,
    0.004422992467880249,
    0.004525693133473396,
    0.019540587440133095,
    -0.040204040706157684,
    -0.022621620446443558,
    -0.012057104147970676,
    0.0018109619850292802,
    -0.0036869680043309927,
    0.0022097844630479813,
    -0.014830033294856548,
    0.018294481560587883,
    0.03097463957965374,
    0.012057104147970676,
    -0.013371678069233894,
    -0.0056040543131530285,
    -0.007120606955140829,
    -0.025716345757246017,
    -0.009249942377209663,
    -0.02132073976099491,
    -0.01506282202899456,
    -0.03371333330869675,
    0.013542846776545048,
    0.03897162899374962,
    0.04190203174948692,
    0.008791211061179638,
    0.04798193648457527,
    0.021498754620552063,
    -0.011550446040928364,
    -0.043298766016960144,
    -0.013179969042539597,
    -0.008305092342197895,
    0.017924757674336433,
    0.01478895265609026,
    0.0015311016468331218,
    0.014816339127719402,
    0.011940710246562958,
    0.011057481169700623,
    -0.00828455202281475,
    0.017281165346503258,
    0.022840715944767,
    0.032097503542900085,
    -0.014652017503976822,
    -0.005111089441925287,
    -0.0074013229459524155,
    -0.004142276011407375,
    -0.018294481560587883,
    0.01420013327151537,
    -0.008825444616377354,
    0.005552703980356455,
    0.009071926586329937,
    0.002914998447522521,
    -0.041162583976984024,
    -0.02626408450305462,
    0.01702098920941353,
    0.010694603435695171,
    -0.031440217047929764,
    -0.024059435352683067,
    -0.01576118916273117,
    -0.020608678460121155,
    -0.010181098245084286,
    -0.017486566677689552,
    -0.0017365037929266691,
    -0.011755848303437233,
    0.0185957383364439,
    -0.02227928303182125,
    -0.027537576854228973,
    0.0051213596016168594,
    -0.024278530851006508,
    -0.0016372260870411992,
    -0.0037725523579865694,
    -0.035712581127882004,
    -0.008072303608059883,
    -0.02677074261009693,
    0.03223443776369095,
    0.013748248107731342,
    0.004073808901011944,
    -0.002760946750640869,
    -0.00275238836184144,
    0.0005156449042260647,
    0.02404574118554592,
    -0.008140770718455315,
    -0.009626512415707111,
    -0.03560303524136543,
    0.005713602062314749,
    -0.005213790573179722,
    0.011221802793443203,
    -0.010427581146359444,
    -0.012406287714838982,
    0.03343946486711502,
    0.02258053980767727,
    0.013946804217994213,
    0.022032801061868668,
    0.014556163921952248,
    0.01617199368774891,
    0.020102020353078842,
    -0.00902399979531765,
    -0.019362572580575943,
    0.0015233990270644426,
    -0.006853584200143814,
    -0.0053883823566138744,
    -0.021813705563545227,
    -0.024251144379377365,
    -0.024839963763952255,
    0.008941838517785072,
    -0.008893911726772785,
    -0.01650063693523407,
    0.006350348703563213,
    -0.02040327712893486,
    0.014775259420275688,
    0.005628018174320459,
    -0.005374688655138016,
    -0.004532540217041969,
    -0.0114203579723835,
    0.01628154143691063,
    -0.00440929876640439,
    -0.018212320283055305,
    0.045681431889534,
    0.0023022154346108437,
    -0.0067953867837786674,
    0.012324127368628979,
    -0.02478518895804882,
    -0.001450652489438653,
    0.005200096871703863,
    0.015939204022288322,
    0.02905755303800106,
    -0.015391465276479721,
    0.004494883120059967,
    -0.0005028072628192604,
    0.01763719506561756,
    0.03801308572292328,
    0.012351513840258121,
    -0.015418852679431438,
    -0.01565164141356945,
    0.025661570951342583,
    -0.00297833071090281,
    -0.01922563835978508,
    -0.007380782626569271,
    -4.3781674321508035e-05,
    0.013412758708000183,
    -0.01062613632529974,
    -0.023100892081856728,
    -0.0033069741912186146,
    -0.02722262777388096,
    -0.003806785913184285,
    -0.027592351660132408,
    -0.01357023324817419,
    0.004138852469623089,
    0.028920618817210197,
    0.009653899818658829,
    0.042340222746133804,
    0.006470166612416506,
    -0.02809900976717472,
    -0.013563386164605618,
    -0.013549692928791046,
    0.010379653424024582,
    -0.009729214012622833,
    0.009332102723419666,
    0.0009431380894966424,
    0.023785565048456192,
    0.034863587468862534,
    0.02548355609178543,
    0.013803021982312202,
    0.00435452489182353,
    0.012419981881976128,
    -0.0054876599460840225,
    0.004655781202018261,
    0.011310810223221779,
    -0.008702202700078487,
    -0.022922877222299576,
    -0.008626889437437057,
    0.016596490517258644,
    -0.0119680967181921,
    0.0009448497439734638,
    -0.0042244368232786655,
    0.004902264103293419,
    -0.0043031745590269566,
    -0.01147513184696436,
    0.0028670711908489466,
    -0.02449762634932995,
    0.009140394628047943,
    0.0071343001909554005,
    0.008038069121539593,
    0.007195920683443546,
    -0.018130160868167877,
    -0.006422239355742931,
    0.015829656273126602,
    0.013816716149449348,
    0.03439800813794136,
    0.011173875071108341,
    -0.013529152609407902,
    -0.022251896560192108,
    0.02703091874718666,
    0.01915717124938965,
    0.007045292761176825,
    -0.0011434050975367427,
    0.01276231836527586,
    -0.03385026752948761,
    -0.024744108319282532,
    0.012529529631137848,
    0.00801068264991045,
    0.0023877995554357767,
    0.025332927703857422,
    0.001192188123241067,
    0.002909863367676735,
    0.01404950488358736,
    -0.009037693031132221,
    -0.0033206676598638296,
    0.02449762634932995,
    -0.032316599041223526,
    -0.011707920581102371,
    -0.027469109743833542,
    -0.030070869252085686,
    -0.03280956670641899,
    0.0023792411666363478,
    0.01430968102067709,
    0.020868854597210884,
    0.025291847065091133,
    0.0013702033320441842,
    -0.014131666161119938,
    0.009263635613024235,
    0.0012212867150083184,
    0.04483243450522423,
    0.010057857260107994,
    0.02201910689473152,
    0.01250214222818613,
    0.002630858914926648,
    -0.027058305218815804,
    0.01420013327151537,
    -0.014227519743144512,
    -0.01351545937359333,
    0.038177408277988434,
    0.006552327424287796,
    -0.026948757469654083,
    -0.009825067594647408,
    0.017555033788084984,
    -0.02199172042310238,
    -0.019129784777760506,
    -0.035411324352025986,
    0.04625655710697174,
    0.01506282202899456,
    0.013967343606054783,
    -0.0059943185187876225,
    0.008099690079689026,
    -0.0047584823332726955,
    0.015240836888551712,
    -0.02935880981385708,
    -0.0043031745590269566,
    0.018212320283055305,
    -0.003240218386054039,
    -0.036890219897031784,
    0.03157715126872063,
    0.022785941138863564,
    0.0059943185187876225,
    0.001778439967893064,
    -0.03491836041212082,
    -0.02018418163061142,
    -0.019211944192647934,
    -0.013864642940461636,
    0.0010030469857156277,
    0.014761565253138542,
    0.007764200214296579,
    0.012296739965677261,
    -0.013111501932144165,
    0.05937490612268448,
    0.018609432503581047,
    0.0032470652367919683,
    -0.0033412077464163303,
    -0.0014523641439154744,
    0.03237137570977211,
    -0.002630858914926648,
    -0.009715519845485687,
    0.014227519743144512,
    -0.007661499083042145,
    0.004155969712883234,
    0.004063538741320372,
    -0.01643216982483864,
    0.0053712655790150166,
    -0.005039198789745569,
    0.0048372200690209866,
    -0.006223684176802635,
    -0.01929410547018051,
    -0.01591181755065918,
    0.004193626809865236,
    -0.02637363225221634,
    -0.021936945617198944,
    -0.003755435347557068,
    0.011817468330264091,
    -0.0023877995554357767,
    -0.028756296262145042,
    -0.02968745306134224,
    -0.007545104715973139,
    -0.02349800243973732,
    0.03538393974304199,
    0.033603787422180176,
    0.007326008751988411,
    0.017377018928527832,
    0.04688645526766777,
    0.0021738391369581223,
    0.01977337710559368,
    0.002810585545375943,
    -0.007524564396589994,
    -0.011358737014234066,
    0.018020613119006157,
    -0.02286810241639614,
    -0.015350384637713432,
    0.01079045794904232,
    0.018623124808073044,
    -0.04937867075204849,
    -0.026387326419353485,
    0.025661570951342583,
    -0.0008943550637923181,
    -0.018184933811426163,
    -0.0009542640182189643,
    0.008099690079689026,
    0.0012863307492807508,
    0.0025350044015794992,
    -0.005535587202757597,
    -0.023251520469784737,
    0.028893230482935905,
    -0.013919416815042496,
    -0.003680121386423707,
    -0.013542846776545048,
    0.01532299816608429,
    0.012091337703168392,
    0.0006363186403177679,
    0.011577832512557507,
    0.016596490517258644,
    -0.021978026255965233,
    -0.03253569453954697,
    -0.010920546017587185,
    -0.011481977999210358,
    -0.007483483757823706,
    0.012858172878623009,
    -0.00042513958760537207,
    -0.007291775196790695,
    -0.019362572580575943,
    0.015610560774803162,
    0.00710691325366497,
    0.003163192654028535,
    0.013043034821748734,
    0.007880594581365585,
    0.044257309287786484,
    0.0060935961082577705,
    0.0010235871886834502,
    -0.005408922675997019,
    -0.030481673777103424,
    0.026674889028072357,
    -0.037328410893678665,
    -0.026839209720492363,
    -0.010427581146359444,
    0.031686700880527496,
    0.025497250258922577,
    -0.028811071068048477,
    -0.019362572580575943,
    -0.002208072692155838,
    -0.03185102343559265,
    -0.019540587440133095,
    -0.024223756045103073,
    0.013268976472318172,
    0.03190579637885094,
    0.02794838137924671,
    0.014227519743144512,
    0.011920169927179813,
    0.02099209651350975,
    0.01484372653067112,
    -0.011570986360311508,
    0.028044236823916435,
    -0.023415841162204742,
    -0.01233782060444355,
    0.007195920683443546,
    -0.005491083487868309,
    -0.038615599274635315,
    -0.006511247251182795,
    0.0004379772290121764,
    -0.007387629710137844,
    0.009380030445754528,
    0.05663621053099632,
    -0.015747494995594025,
    0.0030895902309566736,
    -0.0023432958405464888,
    -0.003330937586724758,
    0.006922051310539246,
    0.008640582673251629,
    0.005812880117446184,
    -0.024374384433031082,
    -0.012426828034222126,
    0.010434427298605442,
    0.011351890861988068,
    0.019472120329737663,
    -0.002969772322103381,
    -0.008661122992634773,
    -0.010804151184856892,
    0.024881042540073395,
    -0.008613195270299911,
    0.006846737116575241,
    -0.0030656266026198864,
    0.013015647418797016,
    0.016076138243079185,
    -0.002680497709661722,
    0.003721201792359352,
    0.024004660546779633,
    -0.007599878590553999,
    -0.002023210981860757,
    -0.02692137099802494,
    -0.015679027885198593,
    -0.02663380838930607,
    0.009879841469228268,
    0.02556571736931801,
    -0.006264764815568924,
    -0.0012734931660816073,
    -0.03919072449207306,
    0.023812951520085335,
    -0.019403653219342232,
    0.006309268530458212,
    -0.00870904978364706,
    0.009694980457425117,
    -0.03598644956946373,
    -0.020019859075546265,
    0.014556163921952248,
    -0.017294857650995255,
    0.0014763277722522616,
    0.005696485284715891,
    0.02084146812558174,
    -0.01409058552235365,
    -0.026195617392659187,
    -0.005812880117446184,
    -0.00691520469263196,
    -0.022703781723976135,
    0.018842220306396484,
    -0.0019222215050831437,
    -0.015199757181107998,
    -0.011612066067755222,
    0.0022748284973204136,
    -0.021156419068574905,
    0.01436445489525795,
    0.20277297496795654,
    0.018910689279437065,
    0.022142348811030388,
    0.015733802691102028,
    -0.016048751771450043,
    0.026387326419353485,
    -0.0019342033192515373,
    0.018034305423498154,
    -0.002408339874818921,
    0.016048751771450043,
    0.003173462813720107,
    -0.025209685787558556,
    -0.017144229263067245,
    0.002639417303726077,
    -0.008832290768623352,
    -0.013693474233150482,
    -0.007627265527844429,
    -0.03995756059885025,
    -0.004539386834949255,
    -0.014172745868563652,
    0.0035226463805884123,
    -0.023634936660528183,
    -0.04247715696692467,
    -0.020238954573869705,
    0.007593031506985426,
    -0.002363836159929633,
    0.002483653835952282,
    -0.0072849285788834095,
    0.014706791378557682,
    -0.0032795872539281845,
    -0.01848619058728218,
    0.020088328048586845,
    0.025346621870994568,
    -0.00018721546803135425,
    -0.04036836326122284,
    -0.01992400549352169,
    0.017582422122359276,
    0.0036903913132846355,
    -0.0010141729144379497,
    0.03319298103451729,
    0.015254531055688858,
    -0.008647428825497627,
    -0.005289104767143726,
    -0.02497689798474312,
    0.007462943438440561,
    -0.007202767767012119,
    -0.00828455202281475,
    -0.024251144379377365,
    0.013364830985665321,
    0.005152169615030289,
    -0.026715969666838646,
    -0.007000789046287537,
    0.013289516791701317,
    0.0020882547833025455,
    0.02777036651968956,
    -0.016254154965281487,
    -0.004402452148497105,
    0.019033929333090782,
    0.010331726633012295,
    0.001640649395994842,
    -0.030153030529618263,
    0.024881042540073395,
    0.013741401955485344,
    -0.006370889022946358,
    -0.05080278962850571,
    0.027058305218815804,
    -0.04261409118771553,
    0.0016894324216991663,
    0.0027643702924251556,
    -0.012803399004042149,
    0.011071174405515194,
    -0.01035226695239544,
    -0.014487695880234241,
    -0.03804047405719757,
    -0.02033481001853943,
    -0.0150080481544137,
    0.02924926206469536,
    -0.005535587202757597,
    0.04061484709382057,
    0.026305165141820908,
    -0.0071616871282458305,
    -0.0035911137238144875,
    -0.004611277487128973,
    0.010441274382174015,
    -0.0086542759090662,
    0.0060935961082577705,
    0.04294273629784584,
    -0.017842598259449005,
    0.012803399004042149,
    -0.002439150121062994,
    -0.018390337005257607,
    -0.02227928303182125,
    0.0022508648689836264,
    0.005521893501281738,
    -0.010194791480898857,
    0.02092362940311432,
    0.004532540217041969,
    0.01613091304898262,
    -0.010612443089485168,
    0.009989390149712563,
    -0.033056046813726425,
    0.031878408044576645,
    0.03420630097389221,
    -0.008626889437437057,
    -0.01970490999519825,
    -0.0003292852779850364,
    -0.010064703412353992,
    0.030043482780456543,
    -0.0033052624203264713,
    -0.014131666161119938,
    0.01996508613228798,
    -0.028756296262145042,
    -0.02029372937977314,
    -0.007935368455946445,
    -0.002926980145275593,
    -0.016445862129330635,
    0.0004976722411811352,
    0.010016776621341705,
    -0.011516212485730648,
    0.007093220017850399,
    -0.01778782345354557,
    -0.03554825857281685,
    -0.013221049681305885,
    -0.006374312564730644,
    -0.04412037506699562,
    0.0019085280364379287,
    -0.01667865179479122,
    0.02286810241639614,
    -0.023415841162204742,
    -0.007716272957623005,
    0.04080655425786972,
    0.00034233686164952815,
    0.0300160963088274,
    0.0200746338814497,
    -0.01815754733979702,
    -0.0005460273241624236,
    -0.01848619058728218,
    -0.007716272957623005,
    -0.0024922124575823545,
    -0.024908430874347687,
    -0.028811071068048477,
    0.0017852867022156715,
    0.02316935919225216,
    -0.003257335163652897,
    0.01719900406897068,
    -0.04066962003707886,
    -0.003529492998495698,
    0.007332855835556984,
    0.024059435352683067,
    0.007298621814697981,
    -0.008264011703431606,
    0.012810245156288147,
    0.025346621870994568,
    -0.01587073691189289,
    0.010797305032610893,
    -0.016404783353209496,
    -0.019609056413173676,
    -0.0383143424987793,
    -0.003916333895176649,
    0.01667865179479122,
    -0.04077916592359543,
    0.011235496029257774,
    0.001059532631188631,
    0.003570573404431343,
    -0.017842598259449005,
    -0.0030741849914193153,
    -0.17045636475086212,
    0.013426451943814754,
    0.008941838517785072,
    -0.05006334185600281,
    0.025812199339270592,
    -0.03012564405798912,
    0.01099586021155119,
    -0.010009929537773132,
    0.008072303608059883,
    -0.004238130524754524,
    0.0272500142455101,
    0.004905687179416418,
    -0.0350005216896534,
    -0.0375748947262764,
    0.0037759756669402122,
    0.016528023406863213,
    0.018404029309749603,
    -0.00241689826361835,
    0.023443227633833885,
    -0.009811374358832836,
    0.017171617597341537,
    -0.03286433964967728,
    0.020690839737653732,
    0.01715792343020439,
    -0.007942215539515018,
    -0.029413582757115364,
    -0.007216461002826691,
    0.02792099490761757,
    -0.011612066067755222,
    -0.029714839532971382,
    -0.024141594767570496,
    -0.008168157190084457,
    0.04499675706028938,
    0.018445109948515892,
    0.010612443089485168,
    0.0239361934363842,
    0.035192228853702545,
    0.0040361518040299416,
    -0.012454215437173843,
    0.013535999692976475,
    0.027962075546383858,
    0.0379309244453907,
    0.0014061486581340432,
    -3.319063034723513e-05,
    -0.015076515264809132,
    0.004607854411005974,
    0.02327890694141388,
    -0.021539835259318352,
    0.008298245258629322,
    -0.0054157692939043045,
    0.05291158705949783,
    -0.0068227737210690975,
    0.017952146008610725,
    -0.009920922107994556,
    0.000339983293088153,
    0.018034305423498154,
    0.025921747088432312,
    0.0005165007314644754,
    0.004950190894305706,
    -0.01458355039358139,
    -0.009291022084653378,
    -0.029194487258791924,
    0.008661122992634773,
    -0.014569857157766819,
    -0.009914075955748558,
    -0.003113553859293461,
    -0.011920169927179813,
    0.04012187942862511,
    -0.03311081975698471,
    0.019526895135641098,
    0.01543254591524601,
    0.037437960505485535,
    -0.0009919210569933057,
    0.008832290768623352,
    0.00036844005808234215,
    0.015665335580706596,
    -0.012515835464000702,
    0.017335938289761543,
    0.04442163184285164,
    -0.00037977995816618204,
    -0.018253400921821594,
    0.02227928303182125,
    -0.006624218542128801,
    0.034534942358732224,
    0.0009191744611598551,
    -0.012255659326910973,
    0.009537504985928535,
    0.002262846566736698,
    -0.001819520490244031,
    0.016486942768096924,
    0.02781144715845585,
    -0.03374072164297104,
    0.03634248301386833,
    -0.0003372018109075725,
    0.0038204793818295,
    0.020937321707606316,
    0.009092466905713081,
    0.00068809709046036,
    0.018938075751066208,
    -0.03582213073968887,
    0.018691591918468475,
    0.01948581449687481,
    -0.01489850040525198,
    -0.00950327143073082,
    0.04108042269945145,
    0.010934239253401756,
    -0.008887064643204212,
    -0.009715519845485687,
    0.03406936302781105,
    0.0061449469067156315,
    -0.004734518937766552,
    0.008982919156551361,
    0.0031974262092262506,
    0.019129784777760506,
    -0.016692345961928368,
    0.002973195631057024,
    0.021115338429808617,
    -0.020485438406467438,
    0.007634112145751715,
    0.021635690703988075,
    0.033795494586229324,
    -0.006148369982838631,
    -0.007093220017850399,
    0.026866596192121506,
    -0.00018518284196034074,
    -0.03341207653284073,
    -0.11688750237226486,
    -0.04077916592359543,
    0.0059943185187876225,
    0.0015199757181107998,
    -0.023484308272600174,
    -0.009571738541126251,
    0.007545104715973139,
    0.03439800813794136,
    -0.01506282202899456,
    0.012111878022551537,
    -0.013933110050857067,
    0.01889699511229992,
    -0.018718980252742767,
    0.026140842586755753,
    -0.009934615343809128,
    0.013563386164605618,
    -0.020567599684000015,
    0.008715896867215633,
    -0.010448121465742588,
    0.018253400921821594,
    -0.018431417644023895,
    -0.009907228872179985,
    0.005812880117446184,
    0.010133171454071999,
    0.0059155807830393314,
    0.005186403635889292,
    -0.031002026051282883,
    0.006340078543871641,
    0.004981001373380423,
    0.019732296466827393,
    0.020430663600564003,
    -0.018828528001904488,
    -0.026948757469654083,
    0.006004588678479195,
    0.001188764814287424,
    0.025825893506407738,
    -0.00928417593240738,
    -0.002879053121432662,
    0.03437061980366707,
    -0.019691215828061104,
    0.012296739965677261,
    0.002367259468883276,
    -0.007373936008661985,
    0.020581291988492012,
    -0.013871490024030209,
    0.007326008751988411,
    0.01404950488358736,
    0.019691215828061104,
    0.021635690703988075,
    -0.03642464056611061,
    -0.014063198119401932,
    -0.007195920683443546,
    -0.03149498999118805,
    0.009441650472581387,
    0.017281165346503258,
    -0.021238578483462334,
    0.00320427305996418,
    0.005032351706176996,
    -0.0017108285101130605,
    0.013782482594251633,
    -0.002105371793732047,
    -0.0009807951282709837,
    0.006802233401685953,
    0.010564515367150307,
    -0.003229948226362467,
    -0.004991271533071995,
    0.0005186403286643326,
    -0.012707544490695,
    0.019677523523569107,
    0.005593784153461456,
    -0.01617199368774891,
    0.01697990857064724,
    -0.03185102343559265,
    -0.020019859075546265,
    -0.032727405428886414,
    0.002153298817574978,
    0.005891617387533188,
    -0.015637947246432304,
    0.004402452148497105,
    -0.0061826035380363464,
    -0.017377018928527832,
    0.008661122992634773,
    -0.01355654001235962,
    -0.024141594767570496,
    0.013310057111084461,
    0.016213074326515198,
    0.014515083283185959,
    0.005463696550577879,
    0.006709802430123091,
    -0.04894047975540161,
    0.00419020326808095,
    0.011091714724898338,
    -0.00972236692905426,
    -0.026455793529748917,
    -0.008592654950916767,
    0.010667216964066029,
    -0.030673382803797722,
    0.00379309244453907,
    -0.013844102621078491,
    0.013631854206323624,
    -0.03661635145545006,
    -0.02151244878768921,
    -0.07120607048273087,
    0.013652394525706768,
    0.0008592655067332089,
    -0.010372807271778584,
    0.028674134984612465,
    -0.05178872123360634,
    -0.0024151864927262068,
    -0.045462336391210556,
    0.018294481560587883,
    0.011577832512557507,
    -0.02169046364724636,
    0.004546233452856541,
    0.004073808901011944,
    -0.007949061691761017,
    -0.022046493366360664,
    -0.0027455417439341545,
    0.023840339854359627,
    0.005939544644206762,
    0.024470239877700806,
    0.012830785475671291,
    -0.004655781202018261,
    0.01047550793737173,
    0.01944473385810852,
    0.007743659894913435,
    -0.016596490517258644,
    -0.015993978828191757,
    -0.018691591918468475,
    0.029084939509630203,
    -0.024648254737257957,
    0.012960873544216156,
    0.005658828187733889,
    -0.014460309408605099,
    -0.021060563623905182,
    0.007230154704302549,
    -0.004022458102554083,
    0.0026856327895075083,
    0.03675328567624092,
    -0.008394099771976471,
    0.004799562972038984,
    0.010098937898874283,
    -0.021005790680646896,
    -0.047269873321056366,
    0.03927288576960564,
    0.020690839737653732,
    -0.019129784777760506,
    -0.020088328048586845,
    -0.00806545652449131,
    -0.003159769345074892,
    0.02206018753349781,
    -0.026058681309223175,
    0.03771182894706726,
    0.023730792105197906,
    -0.01760980859398842,
    -0.04836535081267357,
    -0.010105784051120281,
    0.005973778199404478,
    0.0252233799546957,
    0.02430591732263565,
    -0.0165691040456295,
    0.0021567223593592644,
    0.02247099205851555,
    -0.009523811750113964,
    -0.011927016079425812,
    -0.03354901447892189,
    -0.012317280285060406,
    -0.03464449197053909,
    -0.04077916592359543,
    -0.017212698236107826,
    0.008003835566341877,
    -0.004399028606712818,
    -0.026620114222168922,
    -0.031659312546253204,
    0.01628154143691063,
    0.003502106061205268,
    0.013316904194653034,
    -0.020197875797748566,
    0.013481225818395615,
    -0.011783234775066376,
    -0.03639725595712662,
    0.03409675136208534,
    0.019458428025245667,
    -0.010776764713227749,
    -0.006781693082302809,
    0.003611653810366988,
    0.025949133560061455,
    0.01121495570987463,
    -0.014460309408605099,
    0.004905687179416418,
    0.003449043957516551,
    0.00528568122535944,
    -0.0008117663091979921,
    0.005511623341590166,
    0.001624388387426734,
    -0.005747836083173752,
    -0.018130160868167877,
    -0.01469309814274311,
    0.005730719305574894,
    -0.00944849755614996,
    0.019102396443486214,
    -0.0013530864380300045,
    0.028865844011306763,
    -0.01452877651900053,
    0.00013222760753706098,
    -0.017431793734431267,
    -0.005182980094105005,
    0.020471744239330292,
    -0.024661947041749954,
    -0.007524564396589994,
    0.0028259907849133015,
    0.04466811567544937,
    -0.0004715690447483212,
    -0.029714839532971382,
    -0.02162199653685093,
    0.024730414152145386,
    -0.0068604308180511,
    0.0037999392952769995,
    0.01974599063396454,
    -0.024182675406336784,
    -0.016788199543952942,
    0.016322622075676918,
    0.0009987677913159132,
    0.007127453573048115,
    0.02968745306134224,
    -0.0036356174387037754,
    0.020896242931485176,
    0.052500780671834946,
    0.0015764612471684813,
    -0.0026719393208622932,
    -0.004624971188604832,
    -0.0042963274754583836,
    0.018362948670983315,
    -0.007640958763659,
    -0.01367978099733591,
    -0.011536751873791218,
    -0.02820855751633644,
    -0.008058609440922737,
    -0.0010723702143877745,
    -0.012988260947167873,
    -0.007168533746153116,
    0.09295130521059036,
    -0.012317280285060406,
    -0.03713670372962952,
    0.019088704138994217,
    -0.01035226695239544,
    0.027058305218815804,
    0.009852454997599125,
    0.005473966244608164,
    -0.005580090917646885,
    -0.016884054988622665,
    0.013707168400287628,
    -0.006343502085655928,
    -0.028756296262145042,
    -0.03406936302781105,
    -0.02132073976099491,
    0.015583174303174019,
    -0.03442539647221565,
    0.014501389116048813,
    -0.024963203817605972,
    0.0006679848302155733,
    0.021704157814383507,
    -0.0014720484614372253,
    -0.021923253312706947,
    -0.01414535939693451,
    -0.009475884027779102,
    -0.007490330375730991,
    0.014391841366887093,
    0.01985553838312626,
    -0.014597243629395962,
    -0.03207011893391609,
    0.013577080331742764,
    -0.0019530318677425385,
    -0.01537777204066515,
    -0.0026274353731423616,
    -0.006329808849841356,
    0.006682415492832661,
    0.026524260640144348,
    -0.01911609061062336,
    0.013816716149449348,
    0.008695356547832489,
    -0.010174251161515713,
    -0.0053712655790150166,
    -0.027167852967977524,
    -0.04633871838450432,
    0.021854786202311516,
    0.011564139276742935,
    0.02938619628548622,
    -0.007736813277006149,
    -0.040204040706157684
  ]
}
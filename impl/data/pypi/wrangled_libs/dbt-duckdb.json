{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: apache software license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "the duckdb adapter plugin for dbt (data build tool)\n## dbt-duckdb\n\n[duckdb](http://duckdb.org) is an embedded database, similar to sqlite, but designed for olap-style analytics.\nit is crazy fast and allows you to read and write data stored in csv, json, and parquet files directly, without requiring you to load\nthem into the database first.\n\n[dbt](http://getdbt.com) is the best way to manage a collection of data transformations written in sql or python for analytics\nand data science. `dbt-duckdb` is the project that ties duckdb and dbt together, allowing you to create a [modern data stack in\na box](https://duckdb.org/2022/10/12/modern-data-stack-in-a-box.html) or a simple and powerful data lakehouse with python.\n\n### installation\n\nthis project is hosted on pypi, so you should be able to install it and the necessary dependencies via:\n\n`pip3 install dbt-duckdb`\n\nthe latest supported version targets `dbt-core` 1.6.x and `duckdb` version 0.9.x, but we work hard to ensure that newer\nversions of duckdb will continue to work with the adapter as they are released. if you would like to use our new (and experimental!)\nsupport for persisting the tables that duckdb creates to the [aws glue catalog](https://aws.amazon.com/glue/), you should install\n`dbt-duckdb[glue]` in order to get the aws dependencies as well.\n\n### configuring your profile\n\na super-minimal dbt-duckdb profile only needs *one* setting:\n\n````\ndefault:\n  outputs:\n    dev:\n      type: duckdb\n  target: dev\n````\n\nthis will run your dbt-duckdb pipeline against an in-memory duckdb database that will not be persisted after your run completes. this may\nnot seem very useful at first, but it turns out to be a powerful tool for a) testing out data pipelines, either locally or in ci jobs and\nb) running data pipelines that operate purely on external csv, parquet, or json files. more details on how to work with external data files\nin dbt-duckdb are provided in the docs on [reading and writing external files](#reading-and-writing-external-files).\n\nto have your dbt pipeline persist relations in a duckdb file, set the `path` field in your profile to the path\nof the duckdb file that you would like to read and write on your local filesystem. (for in-memory pipelines, the `path`\nis automatically set to the special value `:memory:`).\n\n`dbt-duckdb` also supports common profile fields like `schema` and `threads`, but the `database` property is special: its value is automatically set\nto the basename of the file in the `path` argument with the suffix removed. for example, if the `path` is `/tmp/a/dbfile.duckdb`, the `database`\nfield will be set to `dbfile`. if you are running in in-memory mode, then the `database` property will be automatically set to `memory`.\n\n#### using motherduck\n\nas of `dbt-duckdb` 1.5.2, you can connect to a duckdb instance running on [motherduck](http://www.motherduck.com) by setting your `path` to use a [md:<database> connection string](https://motherduck.com/docs/getting-started/connect-query-from-python/installation-authentication), just as you would with the duckdb cli\nor the python api.\n\nmotherduck databases generally work the same way as local duckdb databases from the perspective of dbt, but\nthere are a [few differences to be aware of](https://motherduck.com/docs/architecture-and-capabilities#considerations-and-limitations):\n1. for the moment, motherduck _requires_ duckdb version `0.9.1`.\n1. motherduck databases do not suppport transactions, so there is a new `disable_transactions` profile.\noption that will be automatically enabled if you are connecting to a motherduck database in your `path`.\n1. motherduck preloads a set of the most common duckdb extensions for you, but does not support loading custom extensions or user-defined functions.\n1. a small subset of advanced sql features are currently unsupported; the only impact of this on the dbt adapter is that the [dbt.listagg](https://docs.getdbt.com/reference/dbt-jinja-functions/cross-database-macros#listagg) macro and foreign-key constraints will work against a local duckdb database, but will not work against a motherduck database.\n\n#### duckdb extensions, settings, and filesystems\n\nyou can load any supported [duckdb extensions](https://duckdb.org/docs/extensions/overview) by listing them in\nthe `extensions` field in your profile. you can also set any additional [duckdb configuration options](https://duckdb.org/docs/sql/configuration)\nvia the `settings` field, including options that are supported in any loaded extensions. for example, to be able to connect to s3 and read/write\nparquet files using an aws access key and secret, your profile would look something like this:\n\n```\ndefault:\n  outputs:\n    dev:\n      type: duckdb\n      path: /tmp/dbt.duckdb\n      extensions:\n        - httpfs\n        - parquet\n      settings:\n        s3_region: my-aws-region\n        s3_access_key_id: \"{{ env_var('s3_access_key_id') }}\"\n        s3_secret_access_key: \"{{ env_var('s3_secret_access_key') }}\"\n  target: dev\n```\n\nas of version `1.4.1`, we have added (experimental!) support for duckdb's (experimental!) support for filesystems\nimplemented via [fsspec](https://duckdb.org/docs/guides/python/filesystems.html). the `fsspec` library provides\nsupport for reading and writing files from a [variety of cloud data storage systems](https://filesystem-spec.readthedocs.io/en/latest/api.html#other-known-implementations)\nincluding s3, gcs, and azure blob storage. you can configure a list of fsspec-compatible implementations for use with your dbt-duckdb project by installing the relevant python modules\nand configuring your profile like so:\n\n```\ndefault:\n  outputs:\n    dev:\n      type: duckdb\n      path: /tmp/dbt.duckdb\n      filesystems:\n        - fs: s3\n          anon: false\n          key: \"{{ env_var('s3_access_key_id') }}\"\n          secret: \"{{ env_var('s3_secret_access_key') }}\"\n          client_kwargs:\n            endpoint_url: \"http://localhost:4566\"\n  target: dev\n```\n\nhere, the `filesystems` property takes a list of configurations, where each entry must have a property named `fs` that indicates which `fsspec` protocol\nto load (so `s3`, `gcs`, `abfs`, etc.) and then an arbitrary set of other key-value pairs that are used to configure the `fsspec` implementation. you can see a simple example project that\nillustrates the usage of this feature to connect to a localstack instance running s3 from dbt-duckdb [here](https://github.com/jwills/s3-demo).\n\n#### fetching credentials from context\ninstead of specifying the credentials through the settings block, you can also use the use_credential_provider property. if you set this to `aws` (currently the only supported implementation) and you have `boto3` installed in your python environment, we will fetch your aws credentials using the credential provider chain as described [here](https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html). this means that you can use any supported mechanism from aws to obtain credentials (e.g., web identity tokens).\n\n#### attaching additional databases\n\nduckdb version `0.7.0` added support for [attaching additional databases](https://duckdb.org/docs/sql/statements/attach.html) to your dbt-duckdb run so that you can read\nand write from multiple databases. additional databases may be configured using [dbt run hooks](https://docs.getdbt.com/docs/build/hooks-operations) or via the `attach` argument\nin your profile that was added in dbt-duckdb `1.4.0`:\n\n```\ndefault:\n  outputs:\n    dev:\n      type: duckdb\n      path: /tmp/dbt.duckdb\n      attach:\n        - path: /tmp/other.duckdb\n        - path: ./yet/another.duckdb\n          alias: yet_another\n        - path: s3://yep/even/this/works.duckdb\n          read_only: true\n        - path: sqlite.db\n          type: sqlite\n```\n\nthe attached databases may be referred to in your dbt sources and models by either the basename of the database file minus its suffix (e.g., `/tmp/other.duckdb` is the `other` database\nand `s3://yep/even/this/works.duckdb` is the `works` database) or by an alias that you specify (so the `./yet/another.duckdb` database in the above configuration is referred to\nas `yet_another` instead of `another`.) note that these additional databases do not necessarily have to be duckdb files: duckdb's storage and catalog engines are pluggable, and\nduckdb `0.7.0` ships with support for reading and writing from attached sqlite databases. you can indicate the type of the database you are connecting to via the `type` argument,\nwhich currently supports `duckdb` and `sqlite`.\n\n#### configuring dbt-duckdb plugins\n\ndbt-duckdb has its own [plugin](dbt/adapters/duckdb/plugins/__init__.py) system to enable advanced users to extend\ndbt-duckdb with additional functionality, including:\n\n* defining [custom python udfs](https://duckdb.org/docs/api/python/function.html) on the duckdb database connection\nso that they can be used in your sql models\n* loading source data from [excel](dbt/adapters/duckdb/plugins/excel.py), [google sheets](dbt/adapters/duckdb/plugins/gsheet.py), or [sqlalchemy](dbt/adapters/duckdb/plugins/sqlalchemy.py) tables\n\nyou can find more details on [how to write your own plugins here](#writing-your-own-plugins). to configure a plugin for use\nin your dbt project, use the `plugins` property on the profile:\n\n```\ndefault:\n  outputs:\n    dev:\n      type: duckdb\n      path: /tmp/dbt.duckdb\n      plugins:\n        - module: gsheet\n          config:\n            method: oauth\n        - module: sqlalchemy\n          alias: sql\n          config:\n            connection_url: \"{{ env_var('dbt_env_secret_sqlalchemy_uri') }}\"\n        - module: path.to.custom_udf_module\n```\n\nevery plugin must have a `module` property that indicates where the `plugin` class to load is defined. there is\na set of built-in plugins that are defined in [dbt.adapters.duckdb.plugins](dbt/adapters/duckdb/plugins/) that\nmay be referenced by their base filename (e.g., `excel` or `gsheet`), while user-defined plugins (which are\ndescribed later in this document) should be referred to via their full module path name (e.g. a `lib.my.custom` module that defines a class named `plugin`.)\n\neach plugin instance has a name for logging and reference purposes that defaults to the name of the module\nbut that may be overridden by the user by setting the `alias` property in the configuration. finally,\nmodules may be initialized using an arbitrary set of key-value pairs that are defined in the\n`config` dictionary. in this example, we initialize the `gsheet` plugin with the setting `method: oauth` and we\ninitialize the `sqlalchemy` plugin (aliased as \"sql\") with a `connection_url` that is set via an environment variable.\n\nplease remember that using plugins may require you to add additional dependencies to the python environment that your dbt-duckdb pipeline runs in:\n\n* `excel` depends on `pandas`, and `openpyxl` or `xlsxwriter` to perform writes\n* `gsheet` depends on `gspread` and `pandas`\n*  `iceberg` depends on `pyiceberg` and python >= 3.8\n* `sqlalchemy` depends on `pandas`, `sqlalchemy`, and the driver(s) you need\n\n**experimental:**\n\n* `delta` depends on `deltalake`, [an example project](https://github.com/milicevica23/dbt-duckdb-delta-plugin-demo)\n\n**note:** be aware that experimental features can change over time, and we would like your feedback on config and possible different use cases.\n\n#### using local python modules\n\nin dbt-duckdb 1.6.0, we added a new profile setting named `module_paths` that allows users to specify a list\nof paths on the filesystem that contain additional python modules that should be added to the python processes'\n`sys.path` property. this allows users to include additional helper python modules in their dbt projects that\ncan be accessed by the running dbt process and used to define custom dbt-duckdb plugins or library code that is\nhelpful for creating dbt python models.\n\n### reading and writing external files\n\none of duckdb's most powerful features is its ability to read and write csv, json, and parquet files directly, without needing to import/export\nthem from the database first.\n\n#### reading from external files\n\nyou may reference external files in your dbt models either directly or as dbt `source`s by configuring the `external_location`\nmeta option on the source:\n\n```\nsources:\n  - name: external_source\n    meta:\n      external_location: \"s3://my-bucket/my-sources/{name}.parquet\"\n    tables:\n      - name: source1\n      - name: source2\n```\n\nhere, the `meta` options on `external_source` defines `external_location` as an [f-string](https://peps.python.org/pep-0498/) that\nallows us to express a pattern that indicates the location of any of the tables defined for that source. so a dbt model like:\n\n```\nselect *\nfrom {{ source('external_source', 'source1') }}\n```\n\nwill be compiled as:\n\n```\nselect *\nfrom 's3://my-bucket/my-sources/source1.parquet'\n```\n\nif one of the source tables deviates from the pattern or needs some other special handling, then the `external_location` can also be set on the `meta`\noptions for the table itself, for example:\n\n```\nsources:\n  - name: external_source\n    meta:\n      external_location: \"s3://my-bucket/my-sources/{name}.parquet\"\n    tables:\n      - name: source1\n      - name: source2\n        meta:\n          external_location: \"read_parquet(['s3://my-bucket/my-sources/source2a.parquet', 's3://my-bucket/my-sources/source2b.parquet'])\"\n```\n\nin this situation, the `external_location` setting on the `source2` table will take precedence, so a dbt model like:\n\n```\nselect *\nfrom {{ source('external_source', 'source2') }}\n```\n\nwill be compiled to the sql query:\n\n```\nselect *\nfrom read_parquet(['s3://my-bucket/my-sources/source2a.parquet', 's3://my-bucket/my-sources/source2b.parquet'])\n```\n\nnote that the value of the `external_location` property does not need to be a path-like string; it can also be a function\ncall, which is helpful in the case that you have an external source that is a csv file which requires special handling for duckdb to load it correctly:\n\n```\nsources:\n  - name: flights_source\n    tables:\n      - name: flights\n        meta:\n          external_location: \"read_csv('flights.csv', types={'flightdate': 'date'}, names=['flightdate', 'uniquecarrier'])\"\n          formatter: oldstyle\n```\n\nnote that we need to override the default `str.format` string formatting strategy for this example\nbecause the `types={'flightdate': 'date'}` argument to the `read_csv` function will be interpreted by\n`str.format` as a template to be matched on, which will cause a `keyerror: \"'flightdate'\"` when we attempt\nto parse the source in a dbt model. the `formatter` configuration option for the source indicates whether\nwe should use `newstyle` string formatting (the default), `oldstyle` string formatting, or `template` string\nformatting. you can read up on the strategies the various string formatting techniques use at this\n[stack overflow answer](https://stackoverflow.com/questions/13451989/pythons-many-ways-of-string-formatting-are-the-older-ones-going-to-be-depre) and see examples of their use\nin this [dbt-duckdb integration test](https://github.com/jwills/dbt-duckdb/blob/master/tests/functional/adapter/test_sources.py).\n\n#### writing to external files\n\nwe support creating dbt models that are backed by external files via the `external` materialization strategy:\n\n```\n{{ config(materialized='external', location='local/directory/file.parquet') }}\nselect m.*, s.id is not null as has_source_id\nfrom {{ ref('upstream_model') }} m\nleft join {{ source('upstream', 'source') }} s using (id)\n```\n\n| option | default | description\n| :---:    |  :---:    | ---\n| location | [external_location](dbt/include/duckdb/macros/utils/external_location.sql) macro | the path to write the external materialization to. see below for more details.\n| format | parquet | the format of the external file (parquet, csv, or json)\n| delimiter | ,    | for csv files, the delimiter to use for fields.\n| options | none | any other options to pass to duckdb's `copy` operation (e.g., `partition_by`, `codec`, etc.)\n| glue_register | false | if true, try to register the file created by this model with the aws glue catalog.\n| glue_database | default | the name of the aws glue database to register the model with.\n\nif the `location` argument is specified, it must be a filename (or s3 bucket/path), and dbt-duckdb will attempt to infer\nthe `format` argument from the file extension of the `location` if the `format` argument is unspecified (this functionality was\nadded in version 1.4.1.)\n\nif the `location` argument is _not_ specified, then the external file will be named after the model.sql (or model.py) file that defined it\nwith an extension that matches the `format` argument (`parquet`, `csv`, or `json`). by default, the external files are created\nrelative to the current working directory, but you can change the default directory (or s3 bucket/prefix) by specifying the\n`external_root` setting in your duckdb profile.\n\n#### re-running external models with an in-memory version of dbt-duckdb\nwhen using `:memory:` as the duckdb database, subsequent dbt runs can fail when selecting a subset of models that depend on external tables. this is because external files are only registered as  duckdb views when they are created, not when they are referenced. to overcome this issue we have provided the `register_upstream_external_models` macro that can be triggered at the beginning of a run. to enable this automatic registration, place the following in your `dbt_project.yml` file:\n\n```yaml\non-run-start:\n  - \"{{ register_upstream_external_models() }}\"\n```\n\n### python support\n\ndbt added support for [python models in version 1.3.0](https://docs.getdbt.com/docs/build/python-models). for most data platforms,\ndbt will package up the python code defined in a `.py` file and ship it off to be executed in whatever python environment that\ndata platform supports (e.g., snowpark for snowflake or dataproc for bigquery.) in dbt-duckdb, we execute python models in the same\nprocess that owns the connection to the duckdb database, which by default, is the python process that is created when you run dbt.\nto execute the python model, we treat the `.py` file that your model is defined in as a python module and load it into the\nrunning process using [importlib](https://docs.python.org/3/library/importlib.html). we then construct the arguments to the `model`\nfunction that you defined (a `dbt` object that contains the names of any `ref` and `source` information your model needs and a\n`duckdbpyconnection` object for you to interact with the underlying duckdb database), call the `model` function, and then materialize\nthe returned object as a table in duckdb.\n\nthe value of the `dbt.ref` and `dbt.source` functions inside of a python model will be a [duckdb relation](https://duckdb.org/docs/api/python/reference/)\nobject that can be easily converted into a pandas/polars dataframe or an arrow table. the return value of the `model` function can be\nany python object that duckdb knows how to turn into a table, including a pandas/polars `dataframe`, a duckdb `relation`, or an arrow `table`,\n`dataset`, `recordbatchreader`, or `scanner`.\n\n#### batch processing with python models\n\nas of version 1.6.1, it is possible to both read and write data in chunks, which allows for larger-than-memory\ndatasets to be manipulated in python models. here is a basic example:\n```\nimport pyarrow as pa\n\ndef batcher(batch_reader: pa.recordbatchreader):\n    for batch in batch_reader:\n        df = batch.to_pandas()\n        # do some operations on the df...\n        # ...then yield back a new batch\n        yield pa.recordbatch.from_pandas(df)\n\ndef model(dbt, session):\n    big_model = dbt.ref(\"big_model\")\n    batch_reader = big_model.record_batch(100_000)\n    batch_iter = batcher(batch_reader)\n    return pa.recordbatchreader.from_batches(batch_reader.schema, batch_iter)\n```\n\n### writing your own plugins\n\ndefining your own dbt-duckdb plugin is as simple as creating a python module that defines a class named `plugin` that\ninherits from [dbt.adapters.duckdb.plugins.baseplugin](dbt/adapters/duckdb/plugins/__init__.py). there are currently\nfour methods that may be implemented in your plugin class:\n\n1. `initialize`: takes in the `config` dictionary for the plugin that is defined in the profile to enable any\nadditional configuration for the module based on the project; this method is called once when an instance of the\n`plugin` class is created.\n1. `configure_connection`: takes an instance of the `duckdbpyconnection` object used to connect to the duckdb\ndatabase and may perform any additional configuration of that object that is needed by the plugin, like defining\ncustom user-defined functions.\n1. `load`: takes a [sourceconfig](dbt/adapters/duckdb/utils.py) instance, which encapsulates the configuration for a\na dbt source and can optionally return a dataframe-like object that duckdb knows how to turn into a table (this is\nsimilar to a dbt-duckdb python model, but without the ability to `ref` any models or access any information beyond\nthe source config.)\n1. `store`: takes a [targetconfig](dbt/adapters/duckdb/utils.py) instance, which encapsulates the configuration for\nan `external` materialization and can perform additional operations once the csv/parquet/json file is written. the\n[glue](dbt/adapters/duckdb/plugins/glue.py) and [sqlalchemy](dbt/adapters/duckdb/plugins/sqlalchemy.py) are examples\nthat demonstrate how to use the `store` operation to register an aws glue database table or upload a dataframe to\nan external database, respectively.\n\ndbt-duckdb ships with a number of [built-in plugins](dbt/adapters/duckdb/plugins/) that can be used as examples\nfor implementing your own.\n\n### roadmap\n\nthings that we would like to add in the near future:\n\n* support for delta and iceberg external table formats (both as sources and destinations)\n* make dbt's incremental models and snapshots work with external materializations\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "dbt-duckdb",
  "package_url": "https://pypi.org/project/dbt-duckdb/",
  "project_url": "https://pypi.org/project/dbt-duckdb/",
  "project_urls": {
    "Homepage": "https://github.com/jwills/dbt-duckdb"
  },
  "release_url": "https://pypi.org/project/dbt-duckdb/1.7.0/",
  "requires_dist": [
    "dbt-core ~=1.7.0",
    "duckdb >=0.7.0",
    "boto3 ; extra == 'glue'",
    "mypy-boto3-glue ; extra == 'glue'"
  ],
  "requires_python": ">=3.8",
  "summary": "the duckdb adapter plugin for dbt (data build tool)",
  "version": "1.7.0",
  "releases": [],
  "developers": [
    "josh_wills",
    "joshwills+dbt@gmail.com"
  ],
  "kwds": "databases duckdb db dbfile dbt",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_dbt_duckdb",
  "homepage": "https://github.com/jwills/dbt-duckdb",
  "release_count": 29,
  "dependency_ids": [
    "pypi_boto3",
    "pypi_dbt_core",
    "pypi_duckdb",
    "pypi_mypy_boto3_glue"
  ],
  "documentation_summary": "The HTML text describes the GitHub repository for `dbt-duckdb`, an adapter that connects dbt (Data Build Tool) with DuckDB, an embedded database optimized for OLAP (Online Analytical Processing) analytics. This adapter allows users to manage data transformations and analytics within a Python environment, leveraging DuckDB's ability to directly read and write CSV, JSON, and Parquet files. The repository includes installation instructions, configuration details for setting up a dbt-duckdb profile, and information on advanced features like using MotherDuck for remote DuckDB instances, configuring DuckDB extensions, and working with external files. It also covers Python support for dbt models, incremental table models, and the development of custom dbt-duckdb plugins. The project is licensed under Apache-2.0 and has garnered significant interest with 687 stars and 63 forks on GitHub.",
  "embedding": [
    -0.0163659006357193,
    -0.007660633884370327,
    -0.021602988243103027,
    -0.019332654774188995,
    -0.01530733983963728,
    0.04117242619395256,
    -0.019778363406658173,
    -0.01947193779051304,
    -0.001371079357340932,
    -0.027996134012937546,
    0.010035430081188679,
    0.02366439439356327,
    -0.024012604728341103,
    0.013984139077365398,
    0.0005627954378724098,
    -0.02273119054734707,
    0.023330112919211388,
    -0.00395219074562192,
    0.02465331368148327,
    -0.028344346210360527,
    0.012709688395261765,
    -0.001949979574419558,
    -0.028149347752332687,
    -0.004690397065132856,
    -0.01067613810300827,
    0.007214924320578575,
    0.01614304445683956,
    -0.027090787887573242,
    -0.015321267768740654,
    0.023775821551680565,
    0.016059475019574165,
    -0.001691433135420084,
    -0.016296258196234703,
    -0.015098413452506065,
    -0.00030207273084670305,
    -0.02153334580361843,
    -0.0014267930528149009,
    0.011024348437786102,
    0.043233830481767654,
    0.03292679786682129,
    -0.012556475587189198,
    -0.002252922859042883,
    0.0017950257752090693,
    -0.016477327793836594,
    -0.01771695725619793,
    0.014360206201672554,
    0.000870526593644172,
    -0.038609594106674194,
    0.0026324724312871695,
    -0.035907480865716934,
    0.002211137441918254,
    0.02365046553313732,
    -0.016003761440515518,
    -0.0002735629677772522,
    0.01579483412206173,
    0.013879675418138504,
    0.0144437775015831,
    -0.005581816658377647,
    -0.009805611334741116,
    0.005703689996153116,
    0.017090177163481712,
    0.014666631817817688,
    -0.027996134012937546,
    -0.006316540762782097,
    -0.008586874231696129,
    -0.002858809195458889,
    -0.018747661262750626,
    0.004753075074404478,
    0.0064906463958323,
    0.008210807107388973,
    0.025892943143844604,
    0.0462145134806633,
    0.011901839636266232,
    -0.033010367304086685,
    0.03941744193434715,
    -0.028191132470965385,
    -0.03097681701183319,
    0.01557197980582714,
    -0.007980987429618835,
    0.019541580229997635,
    0.004349150694906712,
    -0.008788836188614368,
    -0.015502337366342545,
    0.038191743195056915,
    0.007047783117741346,
    0.01749410293996334,
    -0.025307949632406235,
    0.013628964312374592,
    -0.036269620060920715,
    0.004056653939187527,
    -0.018343735486268997,
    0.009708112105727196,
    0.0055504776537418365,
    0.01310664787888527,
    0.016129115596413612,
    0.027285784482955933,
    -0.007333315908908844,
    0.031255386769771576,
    0.019875863566994667,
    -0.021686557680368423,
    -0.010063286870718002,
    0.01386574748903513,
    -0.04122813791036606,
    -0.02576758712530136,
    -0.044375963509082794,
    -0.002745640929788351,
    0.026074012741446495,
    0.004533702507615089,
    0.02100406587123871,
    0.017410531640052795,
    -0.03891602158546448,
    0.04217527061700821,
    -0.007423850707709789,
    -0.029918257147073746,
    -0.007681526709347963,
    0.008141164667904377,
    0.0008766202954575419,
    -0.029918257147073746,
    0.0010655245278030634,
    0.01788409799337387,
    0.022661548107862473,
    0.032258231192827225,
    0.000518398592248559,
    -0.019165514037013054,
    -0.016045546159148216,
    0.001685339491814375,
    -0.007751168683171272,
    -0.010174714960157871,
    0.007382065523415804,
    -0.017215533182024956,
    0.015725191682577133,
    0.007688490673899651,
    0.02845577336847782,
    -0.016658397391438484,
    -0.038581736385822296,
    0.024876167997717857,
    -0.04540666565299034,
    -0.01576697826385498,
    -0.025934727862477303,
    -0.02617151103913784,
    0.021797984838485718,
    0.016254471614956856,
    -0.012215228751301765,
    -0.012835043482482433,
    -0.016115188598632812,
    0.0016017688903957605,
    0.011957553215324879,
    -0.004606826696544886,
    0.014973057433962822,
    0.0027734977193176746,
    -0.0052928016521036625,
    -0.03041968122124672,
    -0.01619875803589821,
    -0.0072567095048725605,
    -0.012270942330360413,
    0.005028161685913801,
    -0.019109798595309258,
    -0.006403593346476555,
    -0.0031373777892440557,
    0.012493797577917576,
    0.015725191682577133,
    0.03679889813065529,
    -0.02580937184393406,
    -0.0055504776537418365,
    0.037244610488414764,
    0.022647619247436523,
    0.0025959103368222713,
    -0.010348820127546787,
    -0.021505488082766533,
    -0.022438693791627884,
    0.03794103115797043,
    0.019722649827599525,
    -0.02677043341100216,
    0.019917648285627365,
    0.015098413452506065,
    0.007848667912185192,
    -0.012006302364170551,
    0.025920799002051353,
    -0.023357968777418137,
    -0.008900263346731663,
    0.013803069479763508,
    -0.00098804768640548,
    -0.0016992678865790367,
    0.031283244490623474,
    -0.01713196374475956,
    -0.04482167214155197,
    -0.030113255605101585,
    0.009185796603560448,
    -0.0052057490684092045,
    0.009840432554483414,
    0.0110591696575284,
    0.006595109589397907,
    -0.018357664346694946,
    -0.0192212276160717,
    -0.5727368593215942,
    -0.012946471571922302,
    0.004773967899382114,
    -0.018315879628062248,
    -0.010836315341293812,
    0.014499491080641747,
    -0.012765401974320412,
    0.020892638713121414,
    -0.0211851354688406,
    0.02406831830739975,
    -0.019722649827599525,
    0.0013815256534144282,
    0.01579483412206173,
    0.0006803165306337178,
    -0.014005031436681747,
    -0.0013501867651939392,
    0.027243999764323235,
    -0.019346583634614944,
    -0.019012300297617912,
    -0.010759708471596241,
    -0.017814455553889275,
    0.028246846050024033,
    -0.007709383498877287,
    -0.0032366178929805756,
    -0.013322538696229458,
    0.033233221620321274,
    -0.0026934093330055475,
    0.007444743532687426,
    0.028776125982403755,
    0.01011203695088625,
    -0.03543391451239586,
    0.025321876630187035,
    0.03813602775335312,
    -0.020056933164596558,
    0.041478849947452545,
    -0.01943015307188034,
    -0.01617090217769146,
    0.03537819907069206,
    0.004836645908653736,
    0.0500030480325222,
    -0.009144010953605175,
    -0.038024600595235825,
    0.0027734977193176746,
    0.006887606345117092,
    0.005982258822768927,
    -0.005156999453902245,
    0.02231333777308464,
    0.01135863084346056,
    0.0010916403261944652,
    -0.003771121148020029,
    -0.005177892278879881,
    0.01539091020822525,
    0.016825538128614426,
    -0.00961061380803585,
    0.014415919780731201,
    -0.020934423431754112,
    0.026018299162387848,
    -0.0023539038375020027,
    0.0043979003094136715,
    -0.014583061449229717,
    0.024569742381572723,
    0.015739120543003082,
    0.02639436535537243,
    -0.020822996273636818,
    -0.010885064490139484,
    -0.0043317400850355625,
    -0.020892638713121414,
    -0.00876794382929802,
    0.021992983296513557,
    -0.035879623144865036,
    0.012744509615004063,
    0.011853089556097984,
    0.015599836595356464,
    -0.017354818060994148,
    0.023803679272532463,
    0.029723258689045906,
    0.035099633038043976,
    0.02330225519835949,
    -0.0026272491086274385,
    0.04507238417863846,
    0.011706841178238392,
    -0.007862595841288567,
    -0.005017715040594339,
    -0.018148738890886307,
    0.040448147803545,
    0.008252591826021671,
    -0.013489680364727974,
    0.002630731323733926,
    0.03412464261054993,
    0.0037571927532553673,
    -0.010627388954162598,
    0.02908255159854889,
    -0.03554534167051315,
    -0.0288596972823143,
    0.018900873139500618,
    0.03412464261054993,
    0.0011403898242861032,
    -0.03170109540224075,
    -0.01902622915804386,
    -0.01048113964498043,
    -0.015613764524459839,
    0.007138317916542292,
    -0.0012187372194603086,
    0.004613790661096573,
    0.014123423025012016,
    0.012751473113894463,
    -0.012075944803655148,
    0.005062982439994812,
    -0.0012875087559223175,
    -0.009499185718595982,
    -0.0025105986278504133,
    -0.03002968430519104,
    -0.0028413988184183836,
    0.001321459305472672,
    0.01442984864115715,
    -0.026450078934431076,
    0.032230377197265625,
    -0.008837586268782616,
    0.036102477461099625,
    -0.012591296806931496,
    0.010703994892537594,
    -0.010919885709881783,
    0.014401991851627827,
    -0.0026812218129634857,
    0.010404533706605434,
    0.027856850996613503,
    0.016226615756750107,
    -0.02235512249171734,
    -0.02807970531284809,
    0.015028771013021469,
    -0.0023295290302485228,
    0.009875253774225712,
    0.04830377921462059,
    -0.019945504143834114,
    0.021825842559337616,
    0.014471634291112423,
    0.012333620339632034,
    0.011720770038664341,
    -0.008294377475976944,
    -0.01657482609152794,
    -0.013545393943786621,
    -0.006953766103833914,
    0.005950919818133116,
    -0.022564049810171127,
    -0.009457400999963284,
    -0.01845516264438629,
    -0.006751804146915674,
    0.0030903692822903395,
    -0.009673291817307472,
    -0.018942657858133316,
    0.0008670444949530065,
    -0.018218379467725754,
    -0.0008753144647926092,
    0.01230576355010271,
    -0.015140198171138763,
    0.002228548051789403,
    -0.013691642321646214,
    -0.02787077985703945,
    -0.009951859712600708,
    -0.011003456078469753,
    0.017939811572432518,
    0.019193369895219803,
    0.00887240655720234,
    -0.0026638114359229803,
    -0.04008600860834122,
    -0.006128507200628519,
    -0.027230070903897285,
    0.027856850996613503,
    0.0017741331830620766,
    -0.03287108242511749,
    -0.007806882262229919,
    -0.0279404204338789,
    0.024305101484060287,
    0.018162665888667107,
    0.015836618840694427,
    -0.01067613810300827,
    -0.00887240655720234,
    7.350508531089872e-05,
    -0.012131658382713795,
    -0.00790438149124384,
    0.006424486171454191,
    -0.004265580326318741,
    -0.012765401974320412,
    -0.023149043321609497,
    0.05317872762680054,
    -0.014638775028288364,
    0.004394418094307184,
    0.020822996273636818,
    -0.018510878086090088,
    0.018984444439411163,
    -0.01021649967879057,
    0.014569132588803768,
    -0.02714650146663189,
    -0.011351666413247585,
    -0.005975294392555952,
    0.008942048996686935,
    0.02561437338590622,
    -0.014137351885437965,
    0.0013423520140349865,
    0.020864780992269516,
    0.0036283547524362803,
    -0.0010585603304207325,
    0.009199724532663822,
    -0.02331618405878544,
    0.0028344346210360527,
    -0.0012744509149342775,
    0.017828384414315224,
    -0.01984800584614277,
    0.021700486540794373,
    0.003673622151836753,
    0.019694793969392776,
    -0.012006302364170551,
    -0.0192212276160717,
    -0.014917343854904175,
    -0.003892994951456785,
    0.001413735211826861,
    -0.03334464877843857,
    0.0075631351210176945,
    -0.035684626549482346,
    0.009854360483586788,
    -0.00380246015265584,
    -0.00022938376059755683,
    -0.0013928425032645464,
    0.006845821160823107,
    -0.004477988928556442,
    -0.005613155197352171,
    -0.02270333282649517,
    0.027202215045690536,
    0.016672324389219284,
    -0.03540605679154396,
    0.02346939593553543,
    0.03412464261054993,
    0.005365925841033459,
    -0.020126573741436005,
    0.009861324913799763,
    -0.03097681701183319,
    0.021881556138396263,
    -0.01358717866241932,
    0.027982207015156746,
    -0.014262707903981209,
    0.026784362271428108,
    -0.011240239255130291,
    0.019875863566994667,
    -0.01356628630310297,
    0.013218075968325138,
    -0.00846848264336586,
    -0.0008487633895128965,
    0.037606749683618546,
    -0.030726106837391853,
    -0.008726158179342747,
    0.004352632910013199,
    0.01617090217769146,
    -0.013531465083360672,
    -0.00187685526907444,
    0.022452620789408684,
    -0.02135227620601654,
    -0.012556475587189198,
    0.01980622112751007,
    0.04927876964211464,
    0.006473235785961151,
    0.01397021021693945,
    0.008155092597007751,
    0.02101799286901951,
    0.009359901770949364,
    0.058220818638801575,
    -0.01078060083091259,
    -0.019388368353247643,
    -0.02695150300860405,
    -0.0065150209702551365,
    -0.015168054960668087,
    0.01654696837067604,
    -0.023929035291075706,
    -0.009269366972148418,
    -0.041673850268125534,
    0.007333315908908844,
    0.004018350504338741,
    -0.006831892766058445,
    0.052844446152448654,
    -0.008057594299316406,
    0.011915767565369606,
    -0.012535583227872849,
    -0.028776125982403755,
    0.019012300297617912,
    -0.011734697967767715,
    0.002568053314462304,
    0.01885908842086792,
    -0.013552357442677021,
    0.014680560678243637,
    -0.007813846692442894,
    0.027828993275761604,
    0.013991103507578373,
    0.01596197485923767,
    0.01519591175019741,
    0.012591296806931496,
    -0.0031617525964975357,
    0.0005101285642012954,
    0.03640890493988991,
    0.007079122122377157,
    -0.009784718975424767,
    -0.02462545596063137,
    0.016825538128614426,
    0.032453231513500214,
    -0.009722040966153145,
    -0.008760979399085045,
    0.04289954900741577,
    -0.015446623787283897,
    0.005898687988519669,
    -0.01962515152990818,
    -0.007549206726253033,
    -0.028803983703255653,
    -0.005104768089950085,
    0.009478293359279633,
    -0.03097681701183319,
    -0.013900568708777428,
    0.010557746514678001,
    0.024973666295409203,
    -0.002801354508846998,
    0.01869194768369198,
    0.017187677323818207,
    0.010390604846179485,
    0.004028797149658203,
    -0.03044753707945347,
    -0.013886639848351479,
    0.014158244244754314,
    0.038386739790439606,
    -0.003875584341585636,
    0.004840127658098936,
    0.026436151936650276,
    -0.0278986357152462,
    -0.017382673919200897,
    -0.022369051352143288,
    -0.01617090217769146,
    0.005526102613657713,
    0.0024479208514094353,
    -0.0037049611564725637,
    0.00789045263081789,
    0.012180407531559467,
    0.002635954413563013,
    0.014680560678243637,
    0.0007221017731353641,
    -0.004349150694906712,
    -0.02078120969235897,
    0.016421614214777946,
    -0.012089872732758522,
    0.0026011334266513586,
    -0.005557441618293524,
    0.005839492194354534,
    0.02363653853535652,
    0.048220209777355194,
    0.017786599695682526,
    0.016672324389219284,
    0.015223768539726734,
    0.011762554757297039,
    -0.028720412403345108,
    -0.017410531640052795,
    0.010508996434509754,
    0.011811304837465286,
    0.016240544617176056,
    0.0031391188967972994,
    0.008733122609555721,
    0.025502946227788925,
    0.00428647268563509,
    -0.006797071546316147,
    0.02192334085702896,
    0.012229157611727715,
    0.017633385956287384,
    -0.001117756124585867,
    -0.020669782534241676,
    0.014255743473768234,
    -0.037606749683618546,
    -0.00582904601469636,
    0.0031077798921614885,
    -0.005658422596752644,
    -0.00951311457902193,
    0.031311098486185074,
    0.026310795918107033,
    -0.022591905668377876,
    -0.012194336391985416,
    0.03298250958323479,
    -0.005982258822768927,
    0.04847092181444168,
    -0.003771121148020029,
    0.0031896093860268593,
    -0.05501728132367134,
    -0.011692913249135017,
    -0.025823300704360008,
    0.01222219318151474,
    -0.01406770944595337,
    0.004182009492069483,
    0.010105072520673275,
    -0.0017915436765179038,
    0.026464007794857025,
    -0.019736578688025475,
    0.014555204659700394,
    -0.006713501177728176,
    -0.021212991327047348,
    -0.04482167214155197,
    -0.02690971828997135,
    0.006180738564580679,
    -0.0066717155277729034,
    -0.011170596815645695,
    0.0050525362603366375,
    0.0250015240162611,
    0.010794529691338539,
    0.006031007971614599,
    -0.03543391451239586,
    -0.0051221782341599464,
    -0.025071166455745697,
    -0.016588754951953888,
    -0.007458671927452087,
    0.02079513855278492,
    0.02346939593553543,
    0.0016156972851604223,
    0.037634603679180145,
    0.0064906463958323,
    0.026115797460079193,
    -0.01309968437999487,
    -0.013684677891433239,
    0.029695402830839157,
    -0.008698301389813423,
    -0.006901534739881754,
    -0.0010637835366651416,
    0.013510572724044323,
    -0.00961757730692625,
    -0.005136106628924608,
    -0.021254777908325195,
    0.016435541212558746,
    -0.012236122041940689,
    0.017633385956287384,
    0.008691336959600449,
    -0.006421003956347704,
    0.0032139841932803392,
    -0.0025523840449750423,
    -0.01493127178400755,
    0.018190523609519005,
    -0.01941622421145439,
    -0.01461091823875904,
    -0.0038303169421851635,
    0.020335501059889793,
    -0.012263978831470013,
    0.007214924320578575,
    0.0070129623636603355,
    -0.028943268582224846,
    0.004721736069768667,
    0.035155344754457474,
    -0.029946114867925644,
    0.025837229564785957,
    0.029973970726132393,
    0.005136106628924608,
    0.04256526753306389,
    0.012828079983592033,
    -0.03585176542401314,
    -0.03964029997587204,
    0.0021763164550065994,
    0.0365481898188591,
    0.0035134453792124987,
    -0.018733732402324677,
    -0.012152550742030144,
    -0.008844549767673016,
    -0.006114578805863857,
    -0.022633690387010574,
    -0.00894901342689991,
    -0.024527957662940025,
    -0.00828741304576397,
    -0.023149043321609497,
    0.0009471329394727945,
    -0.01906801387667656,
    0.008315269835293293,
    0.0021989501547068357,
    -0.024291174486279488,
    -0.016505183652043343,
    -0.009394722990691662,
    0.02557258866727352,
    0.02735542692244053,
    0.006097168195992708,
    -0.02349725365638733,
    0.025697944685816765,
    -0.009854360483586788,
    -0.016115188598632812,
    -0.00789045263081789,
    0.013433965854346752,
    0.01792588271200657,
    0.007716347463428974,
    0.010822386480867863,
    0.03535034507513046,
    0.006281720008701086,
    0.02617151103913784,
    0.02927755005657673,
    0.0054494962096214294,
    0.009359901770949364,
    -0.011630235239863396,
    -0.0014790246495977044,
    -0.0013649857137352228,
    -0.00034842826426029205,
    -0.0015895814867690206,
    0.020850852131843567,
    -0.005766368005424738,
    -0.0010829350212588906,
    -0.009826503694057465,
    0.006605555769056082,
    -0.015363053418695927,
    0.010369712486863136,
    -0.0030781819950789213,
    -0.028831839561462402,
    -0.03133895620703697,
    0.01424877904355526,
    -0.012110766023397446,
    0.009401687420904636,
    -0.0384424552321434,
    0.007096532732248306,
    0.026505792513489723,
    0.013211111538112164,
    0.018719803541898727,
    0.013775212690234184,
    0.02927755005657673,
    -0.027842922136187553,
    0.008343126624822617,
    0.007228852715343237,
    0.022257624194025993,
    -0.021226920187473297,
    0.005599226802587509,
    -0.04139528051018715,
    -0.04891663044691086,
    0.024973666295409203,
    0.026338651776313782,
    0.014861629344522953,
    0.0038337991572916508,
    0.014889487065374851,
    -0.008252591826021671,
    0.02291226014494896,
    -0.0009619318880140781,
    0.005174410063773394,
    0.012828079983592033,
    -0.02561437338590622,
    -0.0240822471678257,
    -0.058220818638801575,
    -0.03735603764653206,
    -0.011219346895813942,
    0.010898992419242859,
    0.008308305405080318,
    0.013517537154257298,
    0.022564049810171127,
    0.012215228751301765,
    -0.01386574748903513,
    -0.017048392444849014,
    -0.010871135629713535,
    0.04844306409358978,
    -0.0024844829458743334,
    0.0385260246694088,
    0.035712484270334244,
    -0.00043743959395214915,
    -0.003544784151017666,
    -0.00903258379548788,
    0.011860053986310959,
    -0.005313694477081299,
    0.021895484998822212,
    0.009366866201162338,
    -0.002850104123353958,
    -0.030837533995509148,
    0.009380794130265713,
    -0.0031008156947791576,
    -0.021045850589871407,
    -0.007751168683171272,
    0.03548962622880936,
    0.02924969233572483,
    0.0011247203219681978,
    -0.012765401974320412,
    -0.007730275858193636,
    -0.0004740017175208777,
    -0.007249745540320873,
    -0.030921103432774544,
    0.004241205286234617,
    0.02830255962908268,
    -0.02905469574034214,
    -0.017619457095861435,
    0.012250049971044064,
    0.032648228108882904,
    0.02002907544374466,
    0.008029737509787083,
    0.011477022431790829,
    0.014680560678243637,
    -0.009819540195167065,
    -0.026227224618196487,
    0.020697640255093575,
    0.018385522067546844,
    0.0384981669485569,
    -0.015516266226768494,
    0.008433661423623562,
    0.040476005524396896,
    -0.028971124440431595,
    -0.011692913249135017,
    0.004537184722721577,
    0.01069703046232462,
    0.041478849947452545,
    -0.023176899179816246,
    -0.00644189678132534,
    -0.01001453772187233,
    0.0031217082869261503,
    -0.002670775633305311,
    0.004091475158929825,
    -0.01077363733202219,
    -0.017967669293284416,
    0.004352632910013199,
    0.008879370987415314,
    0.006375736556947231,
    -0.01904015801846981,
    -0.021296562626957893,
    0.01812088117003441,
    0.0037363001611083746,
    -0.020641926676034927,
    -0.006898052524775267,
    -0.0022685923613607883,
    0.035907480865716934,
    -0.032035376876592636,
    -0.024472244083881378,
    -0.016588754951953888,
    -0.007974023930728436,
    -0.017995525151491165,
    0.009889181703329086,
    0.018399449065327644,
    -0.019332654774188995,
    0.03791317343711853,
    -0.0028953715227544308,
    -0.006685643922537565,
    -0.01597590371966362,
    0.007688490673899651,
    -0.010885064490139484,
    -0.011783448047935963,
    -0.0144437775015831,
    -0.015739120543003082,
    0.0005775943864136934,
    0.007319387514144182,
    -0.012257014401257038,
    -0.038776736706495285,
    -0.006800553761422634,
    0.0065846629440784454,
    0.011470058001577854,
    -0.019889790564775467,
    0.011219346895813942,
    0.010160786099731922,
    0.011017384007573128,
    0.017215533182024956,
    -0.01250772550702095,
    0.016073402017354965,
    0.015850547701120377,
    -0.020502641797065735,
    -0.004168081097304821,
    0.013642892241477966,
    0.00032318299054168165,
    0.004540666472166777,
    -0.01941622421145439,
    0.0009166644886136055,
    -0.045490238815546036,
    -0.011275060474872589,
    -0.02294011600315571,
    -0.003746746340766549,
    0.003659693757072091,
    0.012674867175519466,
    0.0031147440895438194,
    -0.026227224618196487,
    -0.025725802406668663,
    0.02922183647751808,
    -0.007799918297678232,
    0.022396907210350037,
    0.013461822643876076,
    0.017995525151491165,
    -0.004411828704178333,
    0.024597598239779472,
    -0.005254498217254877,
    -0.007500457111746073,
    -0.03097681701183319,
    -0.01710410602390766,
    -0.0423145554959774,
    -0.018009454011917114,
    -0.026129726320505142,
    0.021700486540794373,
    0.02658936381340027,
    -0.013030041940510273,
    -0.004979412071406841,
    -0.005804671440273523,
    -0.019193369895219803,
    -0.021240849047899246,
    -0.006149399559944868,
    0.009039548225700855,
    0.027787208557128906,
    -0.01846909150481224,
    0.010355784557759762,
    0.014778058975934982,
    0.003889512736350298,
    0.012215228751301765,
    -0.031088246032595634,
    -0.0030329145956784487,
    0.009088297374546528,
    -0.0053972648456692696,
    0.015585907734930515,
    -0.008614731021225452,
    -0.051451604813337326,
    -0.001821141573600471,
    0.002313859760761261,
    -0.019555509090423584,
    0.020279787480831146,
    0.031645383685827255,
    -0.016463398933410645,
    -0.00451629189774394,
    0.010794529691338539,
    -0.013761283829808235,
    -0.02309332974255085,
    0.013754320330917835,
    0.022619763389229774,
    -0.03774603083729744,
    -0.012723616324365139,
    0.022424764931201935,
    0.023009758442640305,
    0.02330225519835949,
    -0.02331618405878544,
    0.013092719949781895,
    -0.010355784557759762,
    0.017814455553889275,
    -0.023357968777418137,
    -0.003290590364485979,
    0.009826503694057465,
    0.016226615756750107,
    0.024876167997717857,
    -0.016254471614956856,
    0.006887606345117092,
    0.007026890758424997,
    0.013942353427410126,
    -0.0259625855833292,
    -0.01656089723110199,
    0.011957553215324879,
    -0.02941683493554592,
    -0.005842974409461021,
    -3.7786296161357313e-05,
    -0.03576819598674774,
    0.005244052037596703,
    -0.016129115596413612,
    0.02750864066183567,
    -0.010167750529944897,
    -0.006828410550951958,
    -0.012876829132437706,
    -0.008252591826021671,
    -0.003395053558051586,
    -0.0043108477257192135,
    0.02291226014494896,
    -0.04691093787550926,
    -0.008001880720257759,
    0.00630957679823041,
    0.014025924727320671,
    0.007758133113384247,
    -0.0005449496675282717,
    0.006236452609300613,
    -0.023775821551680565,
    -0.0028187651187181473,
    0.011699877679347992,
    -0.022006912156939507,
    -0.034542493522167206,
    -0.0030224681831896305,
    -0.01789802685379982,
    -0.002674257615581155,
    0.015544123016297817,
    0.18586090207099915,
    0.014137351885437965,
    0.017229462042450905,
    0.017842313274741173,
    0.02947254851460457,
    0.02229940891265869,
    -0.00942954421043396,
    0.024374743923544884,
    -0.009596684947609901,
    0.015376981347799301,
    -0.005115214269608259,
    -0.013956282287836075,
    0.00664385873824358,
    -0.0016931742429733276,
    0.027383284643292427,
    -0.015725191682577133,
    -0.02177012898027897,
    -0.027968278154730797,
    -0.031227529048919678,
    0.0056375302374362946,
    0.0023678322322666645,
    -0.014360206201672554,
    -0.01019560731947422,
    -0.012577367946505547,
    0.03150609880685806,
    -0.012048088014125824,
    0.006723947357386351,
    -0.011372559703886509,
    0.016658397391438484,
    -0.0020962280686944723,
    -0.00999364536255598,
    -0.008823657408356667,
    0.022842617705464363,
    -0.026422223076224327,
    0.005341551266610622,
    -0.009004727005958557,
    0.0035029989667236805,
    -0.025642231106758118,
    0.007946166209876537,
    0.03231394663453102,
    0.01442984864115715,
    -0.01750802993774414,
    -0.017452316358685493,
    -0.0100911445915699,
    0.003987011965364218,
    -0.03097681701183319,
    -0.0007486528484150767,
    0.01358717866241932,
    0.027271857485175133,
    0.01404681708663702,
    -0.003288849489763379,
    -0.00027748034335672855,
    0.01752195879817009,
    0.0020474784541875124,
    -0.017368746921420097,
    -0.0307818204164505,
    0.022229766473174095,
    -0.00886544305831194,
    0.020251929759979248,
    0.0010028466349467635,
    -0.03217466175556183,
    0.0481087826192379,
    -0.003586569568142295,
    0.010028466582298279,
    -0.051451604813337326,
    0.002684704028069973,
    -0.04139528051018715,
    0.011518808081746101,
    0.00367710436694324,
    -0.00529628386721015,
    -0.012229157611727715,
    -0.026617221534252167,
    -0.035099633038043976,
    -0.0046381657011806965,
    -0.021589059382677078,
    -0.028915410861372948,
    0.033762503415346146,
    0.006504574790596962,
    0.03501605987548828,
    0.041283853352069855,
    -0.011957553215324879,
    -0.01654696837067604,
    -0.00904651265591383,
    -0.020446928218007088,
    -0.004606826696544886,
    -0.01433234941214323,
    0.029723258689045906,
    -0.03189609572291374,
    0.0075840274803340435,
    -0.011964517645537853,
    -0.008315269835293293,
    -0.030280396342277527,
    8.193831308744848e-05,
    -0.00413326034322381,
    0.00707563990727067,
    0.008398840203881264,
    -0.035879623144865036,
    0.009499185718595982,
    -0.025461161509156227,
    0.010320963338017464,
    -0.03615819290280342,
    0.05816510319709778,
    0.03387393057346344,
    0.0009767308365553617,
    -0.011999338865280151,
    0.02597651258111,
    0.0003099074529018253,
    0.028177203610539436,
    0.009742933325469494,
    -0.0028971123974770308,
    -0.006003151182085276,
    -0.03891602158546448,
    -0.015669478103518486,
    0.0015338677912950516,
    0.010139893740415573,
    0.004387454129755497,
    0.01885908842086792,
    0.011518808081746101,
    -0.022759046405553818,
    -0.006936355959624052,
    0.004739146679639816,
    0.005519138649106026,
    0.022438693791627884,
    -0.012932542711496353,
    -0.02001514658331871,
    0.0021641291677951813,
    -0.010446319356560707,
    0.026032226160168648,
    -0.00630957679823041,
    -0.014805915765464306,
    -0.007577063515782356,
    -0.021115493029356003,
    0.01493127178400755,
    -0.00702340854331851,
    -0.008454553782939911,
    0.01213862281292677,
    0.005623601842671633,
    -0.033957500010728836,
    0.0025541249196976423,
    0.01384485512971878,
    -0.03295465558767319,
    -0.008280448615550995,
    0.021602988243103027,
    0.0010533371241763234,
    0.00712438952177763,
    -0.03484892100095749,
    0.004854056052863598,
    0.007291530724614859,
    0.020056933164596558,
    -0.007444743532687426,
    -0.008106343448162079,
    0.013433965854346752,
    0.004627719521522522,
    -0.008586874231696129,
    -0.004342186730355024,
    -0.02370617911219597,
    0.003544784151017666,
    -0.01672803796827793,
    -0.010125964879989624,
    0.019722649827599525,
    -0.04980804771184921,
    -0.017466245219111443,
    0.005181374028325081,
    -0.002512339735403657,
    -0.023357968777418137,
    -0.03535034507513046,
    -0.1750524491071701,
    0.02966754510998726,
    0.018427306786179543,
    -0.03002968430519104,
    0.02922183647751808,
    0.016825538128614426,
    0.004780931863933802,
    0.005390300415456295,
    -0.014513419009745121,
    0.01290468592196703,
    0.004115849733352661,
    -0.0006372254574671388,
    -0.0366039015352726,
    -0.00027008086908608675,
    0.012842007912695408,
    0.007127871736884117,
    -0.00875401496887207,
    -0.024416528642177582,
    0.02462545596063137,
    0.007758133113384247,
    0.028344346210360527,
    -0.018775517120957375,
    -0.008043665438890457,
    -0.001499917358160019,
    0.0202240739017725,
    0.0009349455358460546,
    0.0011769519187510014,
    -0.014360206201672554,
    -0.0015094931004568934,
    -0.03022468276321888,
    -0.009450436569750309,
    -0.007597955875098705,
    0.018134810030460358,
    -0.0031704579014331102,
    0.04064314439892769,
    -0.005390300415456295,
    0.03406892716884613,
    0.009311152622103691,
    0.016881251707673073,
    0.026603292673826218,
    0.008517231792211533,
    0.03479320555925369,
    0.012514689937233925,
    -0.0250015240162611,
    0.001098604523576796,
    0.012828079983592033,
    0.0022320302668958902,
    -0.0029789418913424015,
    0.014861629344522953,
    -0.0006824928568676114,
    0.054181575775146484,
    -0.0025523840449750423,
    0.0032139841932803392,
    -0.016811609268188477,
    0.011860053986310959,
    0.01961122266948223,
    0.01869194768369198,
    0.02331618405878544,
    0.012932542711496353,
    0.003927815705537796,
    -0.008426696993410587,
    -0.027801137417554855,
    -0.010787565261125565,
    0.0012509466614574194,
    -0.02289833128452301,
    -0.046660225838422775,
    -0.03498820587992668,
    0.034570351243019104,
    -0.013977174647152424,
    -0.011950588785111904,
    -0.0012178666656836867,
    0.0029911294113844633,
    -0.021226920187473297,
    0.028525415807962418,
    -0.02327439934015274,
    -0.009018654935061932,
    -0.047078076750040054,
    0.008795800618827343,
    0.021421918645501137,
    0.008231699466705322,
    -0.013440930284559727,
    0.03925030305981636,
    -0.012751473113894463,
    -0.0026899271178990602,
    -0.012897721491754055,
    0.009958824142813683,
    -0.0057071722112596035,
    -0.0037293359637260437,
    -0.011699877679347992,
    -0.010383641347289085,
    0.03022468276321888,
    -0.008990798145532608,
    0.012166479602456093,
    -0.02791256457567215,
    -0.00514655327424407,
    0.02717435732483864,
    0.00631305854767561,
    0.010244356468319893,
    -0.014624846167862415,
    -0.018970515578985214,
    0.023399755358695984,
    -0.0020004701800644398,
    -0.011985410004854202,
    0.007458671927452087,
    0.002345198532566428,
    0.0201822891831398,
    -0.034598208963871,
    0.009708112105727196,
    0.04259312525391579,
    0.013148433528840542,
    -0.004105403553694487,
    0.012284871190786362,
    0.02558651752769947,
    -0.0008461518445983529,
    -0.003179162973538041,
    0.0423981249332428,
    0.02330225519835949,
    -0.008705265820026398,
    0.023831535130739212,
    -0.02250833436846733,
    0.027271857485175133,
    0.0011760813649743795,
    -0.009192761033773422,
    0.01924908347427845,
    -0.007389029487967491,
    -0.03947315737605095,
    -0.09510328620672226,
    -0.033985357731580734,
    0.022577976807951927,
    0.006257344968616962,
    -0.02402653358876705,
    -0.030280396342277527,
    -0.01145613007247448,
    0.03195180743932724,
    -0.018162665888667107,
    -0.0026690345257520676,
    -0.004060136154294014,
    -0.011302917264401913,
    -0.00827348418533802,
    0.01618483103811741,
    -0.013482715934515,
    -2.4347540602320805e-05,
    -0.002481000730767846,
    -0.00808545108884573,
    -0.02309332974255085,
    0.033818215131759644,
    -0.03886030614376068,
    0.009283295832574368,
    -0.004213348496705294,
    -0.00030903692822903395,
    -0.013956282287836075,
    -0.0018559626769274473,
    -0.029751116409897804,
    0.016588754951953888,
    3.604524181355373e-07,
    0.0008631271193735301,
    0.013433965854346752,
    -0.030363967642188072,
    -0.019207298755645752,
    0.00021175558504182845,
    -0.007106978911906481,
    0.005616637412458658,
    -0.017062321305274963,
    0.00018857781833503395,
    0.02579544298350811,
    -0.03796888887882233,
    -0.0003754145873244852,
    -0.004488435108214617,
    0.004707807675004005,
    0.000382814061595127,
    -0.022605834528803825,
    -0.00730545911937952,
    -0.012876829132437706,
    0.04585237428545952,
    0.03161752596497536,
    -0.023399755358695984,
    -0.008217770606279373,
    0.0051186964847147465,
    0.0005854291375726461,
    0.010279177688062191,
    0.023511182516813278,
    -0.009199724532663822,
    -0.006281720008701086,
    0.002012657467275858,
    -0.008043665438890457,
    0.02096227928996086,
    -0.0030259503982961178,
    -0.008614731021225452,
    -0.008621695451438427,
    0.015265554189682007,
    0.007291530724614859,
    -0.00887240655720234,
    -0.0049863760359585285,
    0.00857294537127018,
    0.023970820009708405,
    -0.0005997928092256188,
    0.0004770485684275627,
    -0.01809302531182766,
    -0.01097559928894043,
    0.005996187217533588,
    0.005933509208261967,
    0.0044640605337917805,
    0.02268940396606922,
    -0.005000304896384478,
    0.010181678459048271,
    -0.03746746480464935,
    -0.005891724023967981,
    -0.013413073495030403,
    -0.03560105338692665,
    -0.01943015307188034,
    0.013329503126442432,
    0.02062799781560898,
    0.008760979399085045,
    0.009157939814031124,
    0.022424764931201935,
    -0.07549206167459488,
    -0.0015625952510163188,
    0.008823657408356667,
    0.037216752767562866,
    -0.01846909150481224,
    0.0045650415122509,
    0.033762503415346146,
    -0.015920190140604973,
    0.014360206201672554,
    0.0183019507676363,
    -0.0074099223129451275,
    -0.03640890493988991,
    -0.028413986787199974,
    -0.07799918204545975,
    0.007159210741519928,
    0.005351997446268797,
    -0.000974989787209779,
    0.010926849208772182,
    -0.026422223076224327,
    -0.02729971334338188,
    0.009060440585017204,
    0.00887240655720234,
    0.019485866650938988,
    -0.006278237793594599,
    0.00031643640249967575,
    -0.015599836595356464,
    0.004425757098942995,
    -0.0019604258704930544,
    -0.008969905786216259,
    0.022410836070775986,
    -0.02058621309697628,
    0.002585463924333453,
    -0.004108885303139687,
    -0.007646705489605665,
    -0.00377808534540236,
    0.024736883118748665,
    0.028776125982403755,
    -0.02521044947206974,
    0.009039548225700855,
    -0.01870587468147278,
    0.03197966516017914,
    -0.02427724562585354,
    -0.010139893740415573,
    0.0011813045712187886,
    -0.0013719499111175537,
    0.010000609792768955,
    0.01844123564660549,
    0.014220922254025936,
    0.019973361864686012,
    0.033400364220142365,
    -0.004209866747260094,
    0.032230377197265625,
    0.007002515718340874,
    -0.008419733494520187,
    -0.031032532453536987,
    0.016811609268188477,
    -0.01748017407953739,
    -0.02523830719292164,
    -0.010808457620441914,
    -0.005522620864212513,
    0.0026133207138627768,
    0.017563743516802788,
    -0.0031634937040507793,
    0.039946723729372025,
    -0.005083875264972448,
    -0.017814455553889275,
    -0.04693879187107086,
    0.0029650134965777397,
    -0.01280718669295311,
    0.018928730860352516,
    0.00040087749948725104,
    -0.03306608274579048,
    -0.014388062991201878,
    0.03197966516017914,
    0.024360815063118935,
    0.00942954421043396,
    0.008531160652637482,
    5.36461993760895e-05,
    -0.02273119054734707,
    -0.01618483103811741,
    -0.021867627277970314,
    0.010404533706605434,
    -0.006988587323576212,
    -0.007897417061030865,
    -0.040921714156866074,
    0.01844123564660549,
    -0.0042446875013411045,
    0.006716982927173376,
    -0.014081638306379318,
    -0.003154788399115205,
    0.0008082839194685221,
    -0.010759708471596241,
    0.02519652061164379,
    0.022396907210350037,
    -0.007799918297678232,
    -0.031088246032595634,
    0.007493492681533098,
    0.02618543989956379,
    0.0025088575202971697,
    -0.011525771580636501,
    0.00408451072871685,
    0.025865085422992706,
    -0.0018489984795451164,
    -0.016686253249645233,
    0.0025262681301683187,
    -0.01511234138160944,
    0.0034281336702406406,
    0.0007203607237897813,
    -0.0024392155464738607,
    0.00755617069080472,
    -5.198676080908626e-05,
    0.02445831522345543,
    0.00471477210521698,
    0.015279482118785381,
    0.007089568302035332,
    0.0028431399259716272,
    -0.008245627395808697,
    -0.003260992467403412,
    -0.004192456137388945,
    -0.02690971828997135,
    -0.02519652061164379,
    0.017271246761083603,
    0.00903258379548788,
    -0.024750811979174614,
    -0.028232917189598083,
    -0.028776125982403755,
    0.02599044144153595,
    -0.03774603083729744,
    0.007946166209876537,
    -0.015502337366342545,
    -0.016296258196234703,
    -0.014903414994478226,
    0.025697944685816765,
    -0.006459307391196489,
    0.017605530098080635,
    0.034765347838401794,
    -0.01674196682870388,
    0.03231394663453102,
    0.005515656433999538,
    0.028831839561462402,
    -0.00951311457902193,
    -0.003536079078912735,
    -0.009074369445443153,
    0.003353268373757601,
    0.016602683812379837,
    -0.00818295031785965,
    -0.009666327387094498,
    -0.002585463924333453,
    -0.01452734787017107,
    -0.005627083592116833,
    0.008259556256234646,
    0.00012176490417914465,
    0.08189914375543594,
    0.029973970726132393,
    -0.040336720645427704,
    0.016602683812379837,
    -0.01183916162699461,
    0.016115188598632812,
    0.005700208246707916,
    0.005839492194354534,
    0.013343431055545807,
    -0.01163719967007637,
    -0.01078060083091259,
    -0.012417190708220005,
    -0.0346260666847229,
    -0.01575304940342903,
    -0.01406770944595337,
    0.03507177531719208,
    0.0033010367769747972,
    0.0071000149473547935,
    0.0014302751515060663,
    0.020363356918096542,
    -0.002393948147073388,
    0.03231394663453102,
    -0.002252922859042883,
    0.002461849246174097,
    -0.029583975672721863,
    0.006905016954988241,
    0.052454449236392975,
    0.02289833128452301,
    -0.03303822502493858,
    -0.03796888887882233,
    0.01773088611662388,
    -0.009185796603560448,
    -0.0033062598668038845,
    -0.03367893397808075,
    -0.006849303375929594,
    -0.010174714960157871,
    0.021296562626957893,
    -0.02845577336847782,
    0.017062321305274963,
    0.027271857485175133,
    0.014624846167862415,
    -0.04220312833786011,
    -0.03540605679154396,
    -0.015460551716387272,
    0.027230070903897285,
    -0.01308575551956892,
    -0.013245932757854462,
    -0.02156120166182518,
    -0.028915410861372948
  ]
}
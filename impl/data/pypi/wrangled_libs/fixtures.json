{
  "classifiers": [
    "development status :: 6 - mature",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing"
  ],
  "description": "fixtures, reusable state for writing clean tests and more.\n************************************************************\nfixtures: fixtures with cleanups for testing and convenience\n************************************************************\n\n*fixtures* defines a python contract for reusable state / support logic,\nprimarily for unit testing. helper and adaption logic is included to make it\neasy to write your own fixtures using the fixtures contract. glue code is\nprovided that makes using fixtures that meet the ``fixtures`` contract in\n``unittest`` compatible test cases easy and straight forward.\n\ndependencies\n============\n\n* python 3.7+\n  this is the base language fixtures is written in and for.\n\n* ``pbr``\n  used for version and release management of fixtures.\n\nthe ``fixtures[streams]`` extra adds:\n\n* ``testtools`` <https://launchpad.net/testtools>\n\n  ``testtools`` provides helpful glue functions for the details api used to report\n  information about a fixture (whether its used in a testing or production\n  environment).\n\nfor use in a unit test suite using the included glue, you will need a test\nenvironment that supports ``testcase.addcleanup``. writing your own glue code\nis easy. alternatively, you can simply use fixtures directly without any\nsupport code.\n\nto run the test suite for fixtures, ``testtools`` is needed.\n\nwhy fixtures\n============\n\nstandard python ``unittest`` provides no obvious method for making and reusing\nstate needed in a test case other than by adding a method on the test class.\nthis scales poorly - complex helper functions propagating up a test class\nhierarchy is a regular pattern when this is done. mocking, while a great tool,\ndoesn't itself prevent this (and helpers to mock complex things can accumulate\nin the same way if placed on the test class).\n\nby defining a uniform contract where helpers have no dependency on the test\nclass we permit all the regular code hygiene activities to take place without\nthe distorting influence of being in a class hierarchy that is modelling an\nentirely different thing - which is what helpers on a ``testcase`` suffer from.\n\nabout fixtures\n==============\n\na fixture represents some state. each fixture has attributes on it that are\nspecific to the fixture. for instance, a fixture representing a directory that\ncan be used for temporary files might have a attribute ``path``.\n\nmost fixtures have complete ``pydoc`` documentation, so be sure to check\n``pydoc fixtures`` for usage information.\n\ncreating fixtures\n=================\n\nminimally, subclass ``fixture``, define ``_setup`` to initialize your state,\nschedule a cleanup for when ``cleanup`` is called, and you're done::\n\n  >>> import unittest\n  >>> import fixtures\n  >>> class noddyfixture(fixtures.fixture):\n  ...     def _setup(self):\n  ...         self.frobnozzle = 42\n  ...         self.addcleanup(delattr, self, 'frobnozzle')\n\nthis will initialize ``frobnozzle`` when ``setup`` is called, and when\n``cleanup`` is called get rid of the ``frobnozzle`` attribute. prior to version\n1.3.0 *fixtures* recommended overriding ``setup``. this is still supported, but\nsince it is harder to write leak-free fixtures in this fashion, it is not\nrecommended.\n\nif your fixture has diagnostic data - for instance the log file of an\napplication server, or log messages - it can expose that by creating a content\nobject (``testtools.content.content``) and calling ``adddetail``::\n\n  >>> from testtools.content import text_content\n  >>> class withlog(fixtures.fixture):\n  ...     def _setup(self):\n  ...         self.adddetail('message', text_content('foo bar baz'))\n\nthe method ``usefixture`` will use another fixture, call ``setup`` on it, call\n``self.addcleanup(thefixture.cleanup)``, attach any details from it and return\nthe fixture. this allows simple composition of different fixtures::\n\n  >>> class reusingfixture(fixtures.fixture):\n  ...     def _setup(self):\n  ...         self.noddy = self.usefixture(noddyfixture())\n\nthere is a helper for adapting a function or function pair into fixtures. it\nputs the result of the function in ``fn_result``::\n\n  >>> import os.path\n  >>> import shutil\n  >>> import tempfile\n  >>> def setup_function():\n  ...     return tempfile.mkdtemp()\n  >>> def teardown_function(fixture):\n  ...     shutil.rmtree(fixture)\n  >>> fixture = fixtures.functionfixture(setup_function, teardown_function)\n  >>> fixture.setup()\n  >>> print (os.path.isdir(fixture.fn_result))\n  true\n  >>> fixture.cleanup()\n\nthis can be expressed even more pithily::\n\n  >>> fixture = fixtures.functionfixture(tempfile.mkdtemp, shutil.rmtree)\n  >>> fixture.setup()\n  >>> print (os.path.isdir(fixture.fn_result))\n  true\n  >>> fixture.cleanup()\n\nanother variation is ``methodfixture`` which is useful for adapting alternate\nfixture implementations to fixture::\n\n  >>> class myserver:\n  ...    def start(self):\n  ...        pass\n  ...    def stop(self):\n  ...        pass\n  >>> server = myserver()\n  >>> fixture = fixtures.methodfixture(server, server.start, server.stop)\n\nyou can also combine existing fixtures using ``compoundfixture``::\n\n  >>> noddy_with_log = fixtures.compoundfixture([noddyfixture(),\n  ...                                            withlog()])\n  >>> with noddy_with_log as x:\n  ...     print (x.fixtures[0].frobnozzle)\n  42\n\nthe fixture api\n===============\n\nthe example above introduces some of the ``fixture`` api. in order to be able\nto clean up after a fixture has been used, all fixtures define a ``cleanup``\nmethod which should be called when a fixture is finished with.\n\nbecause it's nice to be able to build a particular set of related fixtures in\nadvance of using them, fixtures also have a ``setup`` method which should be\ncalled before trying to use them.\n\none common desire with fixtures that are expensive to create is to reuse them\nin many test cases; to support this the base ``fixture`` also defines a\n``reset`` which calls ``self.cleanup(); self.setup()``. fixtures that can more\nefficiently make themselves reusable should override this method. this can then\nbe used with multiple test state via things like ``testresources``,\n``setupclass``, or ``setupmodule``.\n\nwhen using a fixture with a test you can manually call the ``setup`` and\n``cleanup`` methods. more convenient though is to use the included glue from\n``fixtures.testwithfixtures`` which provides a mixin defining ``usefixture``\n(camel case because ``unittest`` is camel case throughout) method. it will call\n``setup`` on the fixture, call ``self.addcleanup(fixture)`` to schedule a\ncleanup, and return the fixture. this lets one write::\n\n  >>> import testtools\n  >>> import unittest\n\nnote that we use ``testtools.testcase``. ``testtools`` has it's own\nimplementation of ``usefixture`` so there is no need to use\n``fixtures.testwithfixtures`` with ``testtools.testcase``::\n\n  >>> class noddytest(testtools.testcase, fixtures.testwithfixtures):\n  ...     def test_example(self):\n  ...         fixture = self.usefixture(noddyfixture())\n  ...         self.assertequal(42, fixture.frobnozzle)\n  >>> result = unittest.testresult()\n  >>> _ = noddytest('test_example').run(result)\n  >>> print (result.wassuccessful())\n  true\n\nfixtures implement the context protocol, so you can also use a fixture as a\ncontext manager::\n\n  >>> with fixtures.functionfixture(setup_function, teardown_function) as fixture:\n  ...    print (os.path.isdir(fixture.fn_result))\n  true\n\nwhen multiple cleanups error, ``fixture.cleanup()`` will raise a wrapper\nexception rather than choosing an arbitrary single exception to raise::\n\n  >>> import sys\n  >>> from fixtures.fixture import multipleexceptions\n  >>> class brokenfixture(fixtures.fixture):\n  ...     def _setup(self):\n  ...         self.addcleanup(lambda:1/0)\n  ...         self.addcleanup(lambda:1/0)\n  >>> fixture = brokenfixture()\n  >>> fixture.setup()\n  >>> try:\n  ...    fixture.cleanup()\n  ... except multipleexceptions:\n  ...    exc_info = sys.exc_info()\n  >>> print (exc_info[1].args[0][0].__name__)\n  zerodivisionerror\n\nfixtures often expose diagnostic details that can be useful for tracking down\nissues. the ``getdetails`` method will return a dict of all the attached\ndetails but can only be called before ``cleanup`` is called. each detail\nobject is an instance of ``testtools.content.content``::\n\n  >>> with withlog() as l:\n  ...     print(l.getdetails()['message'].as_text())\n  foo bar baz\n\nerrors in setup\n+++++++++++++++\n\nthe examples above used ``_setup`` rather than ``setup`` because the base\nclass implementation of ``setup`` acts to reduce the chance of leaking\nexternal resources if an error is raised from ``_setup``. specifically,\n``setup`` contains a try/except block which catches all exceptions, captures\nany registered detail objects, and calls ``self.cleanup`` before propagating\nthe error. as long as you take care to register any cleanups before calling\nthe code that may fail, this will cause them to be cleaned up. the captured\ndetail objects are provided to the args of the raised exception.\n\nif the error that occurred was a subclass of ``exception`` then ``setup`` will\nraise ``multipleexceptions`` with the last element being a ``setuperror`` that\ncontains the detail objects. otherwise, to prevent causing normally\nuncatchable errors like ``keyboardinterrupt`` being caught inappropriately in\nthe calling layer, the original exception will be raised as-is and no\ndiagnostic data other than that from the original exception will be available.\n\nshared dependencies\n+++++++++++++++++++\n\na common use case within complex environments is having some fixtures shared by\nother ones.\n\nconsider the case of testing using a ``tempdir`` with two fixtures built on top\nof it; say a small database and a web server. writing either one is nearly\ntrivial. however handling ``reset()`` correctly is hard: both the database and\nweb server would reasonably expect to be able to discard operating system\nresources they may have open within the temporary directory before its removed.\na recursive ``reset()`` implementation would work for one, but not both.\ncalling ``reset()`` on the ``tempdir`` instance between each test is probably\ndesirable but we don't want to have to do a complete ``cleanup`` of the higher\nlayer fixtures (which would make the ``tempdir`` be unused and trivially\nresettable. we have a few options available to us.\n\nimagine that the webserver does not depend on the db fixture in any way - we\njust want the webserver and db fixture to coexist in the same tempdir.\n\na simple option is to just provide an explicit dependency fixture for the\nhigher layer fixtures to use.  this pushes complexity out of the core and onto\nusers of fixtures::\n\n  >>> class withdep(fixtures.fixture):\n  ...     def __init__(self, tempdir, dependency_fixture):\n  ...         super(withdep, self).__init__()\n  ...         self.tempdir = tempdir\n  ...         self.dependency_fixture = dependency_fixture\n  ...     def setup(self):\n  ...         super(withdep, self).setup()\n  ...         self.addcleanup(self.dependency_fixture.cleanup)\n  ...         self.dependency_fixture.setup()\n  ...         # we assume that at this point self.tempdir is usable.\n  >>> db = withdep\n  >>> webserver = withdep\n  >>> tempdir = fixtures.tempdir()\n  >>> db = db(tempdir, tempdir)\n  >>> server = webserver(tempdir, db)\n  >>> server.setup()\n  >>> server.cleanup()\n\nanother option is to write the fixtures to gracefully handle a dependency\nbeing reset underneath them. this is insufficient if the fixtures would\nblock the dependency resetting (for instance by holding file locks open\nin a tempdir - on windows this will prevent the directory being deleted).\n\nanother approach which ``fixtures`` neither helps nor hinders is to raise\na signal of some sort for each user of a fixture before it is reset. in the\nexample here, ``tempdir`` might offer a subscribers attribute that both the\ndb and web server would be registered in. calling ``reset`` or ``cleanup``\non the tempdir would trigger a callback to all the subscribers; the db and\nweb server reset methods would look something like::\n\n  >>> def reset(self):\n  ...     if not self._cleaned:\n  ...         self._clean()\n\n(their action on the callback from the tempdir would be to do whatever work\nwas needed and set ``self._cleaned``.) this approach has the (perhaps)\nsurprising effect that resetting the webserver may reset the db - if the\nwebserver were to be depending on ``tempdir.reset`` as a way to reset the\nwebserver's state.\n\nanother approach which is not currently implemented is to provide an object\ngraph of dependencies and a reset mechanism that can traverse that, along with\na separation between 'reset starting' and 'reset finishing' - the db and\nwebserver would both have their ``reset_starting`` methods called, then the\ntempdir would be reset, and finally the db and webserver would have\n``reset_finishing`` called.\n\nstock fixtures\n==============\n\nin addition to the ``fixture``, ``functionfixture`` and ``methodfixture``\nclasses, fixtures includes a number of pre-canned fixtures. the api docs for\nfixtures will list the complete set of these, should the docs be out of date or\nnot to hand. for the complete feature set of each fixture please see the api\ndocs.\n\n``bytestream``\n++++++++++++++\n\ntrivial adapter to make a ``bytesio`` (though it may in future auto-spill to\ndisk for large content) and expose that as a detail object, for automatic\ninclusion in test failure descriptions. very useful in combination with\n``monkeypatch``::\n\n  >>> fixture = fixtures.stringstream('my-content')\n  >>> fixture.setup()\n  >>> with fixtures.monkeypatch('sys.something', fixture.stream):\n  ...     pass\n  >>> fixture.cleanup()\n\nthis requires the ``fixtures[streams]`` extra.\n\n``environmentvariable``\n+++++++++++++++++++++++\n\nisolate your code from environmental variables, delete them or set them to a\nnew value::\n\n  >>> fixture = fixtures.environmentvariable('home')\n\n``fakelogger``\n++++++++++++++\n\nisolate your code from an external logging configuration - so that your test\ngets the output from logged messages, but they don't go to e.g. the console::\n\n  >>> fixture = fixtures.fakelogger()\n\n``fakepopen``\n+++++++++++++\n\npretend to run an external command rather than needing it to be present to run\ntests::\n\n  >>> from io import bytesio\n  >>> fixture = fixtures.fakepopen(lambda _:{'stdout': bytesio('foobar')})\n\n``loghandler``\n++++++++++++++\n\nreplace or extend a logger's handlers. the behavior of this fixture depends on\nthe value of the ``nuke_handlers`` parameter: if ``true``, the logger's\nexisting handlers are removed and replaced by the provided handler, while if\n``false`` the logger's set of handlers is extended by the provided handler::\n\n  >>> from logging import streamhandler\n  >>> fixture = fixtures.loghandler(streamhandler())\n\n``mockpatchobject``\n+++++++++++++++++++\n\nadapts ``mock.patch.object`` to be used as a fixture::\n\n  >>> class fred:\n  ...     value = 1\n  >>> fixture = fixtures.mockpatchobject(fred, 'value', 2)\n  >>> with fixture:\n  ...     fred().value\n  2\n  >>> fred().value\n  1\n\n``mockpatch``\n+++++++++++++\n\nadapts ``mock.patch`` to be used as a fixture::\n\n  >>> fixture = fixtures.mockpatch('subprocess.popen.returncode', 3)\n\n``mockpatchmultiple``\n+++++++++++++++++++++\n\nadapts ``mock.patch.multiple`` to be used as a ``fixture``::\n\n  >>> fixture = fixtures.mockpatchmultiple('subprocess.popen', returncode=3)\n\n``monkeypatch``\n+++++++++++++++\n\ncontrol the value of a named python attribute::\n\n  >>> def fake_open(path, mode):\n  ...     pass\n  >>> fixture = fixtures.monkeypatch('__builtin__.open', fake_open)\n\nnote that there are some complexities when patching methods - please see the\napi documentation for details.\n\n``nestedtempfile``\n++++++++++++++++++\n\nchange the default directory that the ``tempfile`` module places temporary\nfiles and directories in. this can be useful for containing the noise created\nby code which doesn't clean up its temporary files. this does not affect\ntemporary file creation where an explicit containing directory was provided::\n\n  >>> fixture = fixtures.nestedtempfile()\n\n``packagepathentry``\n++++++++++++++++++++\n\nadds a single directory to the path for an existing python package. this adds\nto the ``package.__path__`` list. if the directory is already in the path,\nnothing happens, if it isn't then it is added on ``setup`` and removed on\n``cleanup``::\n\n  >>> fixture = fixtures.packagepathentry('package/name', '/foo/bar')\n\n``pythonpackage``\n+++++++++++++++++\n\ncreates a python package directory. particularly useful for testing code that\ndynamically loads packages/modules, or for mocking out the command line entry\npoints to python programs::\n\n  >>> fixture = fixtures.pythonpackage('foo.bar', [('quux.py', '')])\n\n``pythonpathentry``\n+++++++++++++++++++\n\nadds a single directory to ``sys.path``. if the directory is already in the\npath, nothing happens, if it isn't then it is added on ``setup`` and removed on\n``cleanup``::\n\n  >>> fixture = fixtures.pythonpathentry('/foo/bar')\n\n``stream``\n++++++++++\n\ntrivial adapter to expose a file-like object as a detail object, for automatic\ninclusion in test failure descriptions. ``stringstream`` and ``bytesstream``\nprovided concrete users of this fixture.\n\nthis requires the ``fixtures[streams]`` extra.\n\n``stringstream``\n++++++++++++++++\n\ntrivial adapter to make a ``stringio`` (though it may in future auto-spill to\ndisk for large content) and expose that as a detail object, for automatic\ninclusion in test failure descriptions. very useful in combination with\n``monkeypatch``::\n\n  >>> fixture = fixtures.stringstream('stdout')\n  >>> fixture.setup()\n  >>> with fixtures.monkeypatch('sys.stdout', fixture.stream):\n  ...     pass\n  >>> fixture.cleanup()\n\nthis requires the ``fixtures[streams]`` extra.\n\n``tempdir``\n+++++++++++\n\ncreate a temporary directory and clean it up later::\n\n  >>> fixture = fixtures.tempdir()\n\nthe created directory is stored in the ``path`` attribute of the fixture after\n``setup``.\n\n``temphomedir``\n+++++++++++++++\n\ncreate a temporary directory and set it as ``$home`` in the environment::\n\n  >>> fixture = fixtures.temphomedir()\n\nthe created directory is stored in the ``path`` attribute of the fixture after\n``setup``.\n\nthe environment will now have ``$home`` set to the same path, and the value\nwill be returned to its previous value after ``teardown``.\n\n``timeout``\n+++++++++++\n\naborts if the covered code takes more than a specified number of whole wall-clock\nseconds.\n\nthere are two possibilities, controlled by the ``gentle`` argument: when gentle,\nan exception will be raised and the test (or other covered code) will fail.\nwhen not gentle, the entire process will be terminated, which is less clean,\nbut more likely to break hangs where no python code is running.\n\n.. caution::\n\n   only one timeout can be active at any time across all threads in a single\n   process.  using more than one has undefined results.  (this could be improved\n   by chaining alarms.)\n\n.. note::\n\n   currently supported only on unix because it relies on the ``alarm`` system\n   call.\n\n``warningscapture``\n+++++++++++++++++++\n\ncapture warnings for later analysis::\n\n  >>> fixture = fixtures.warningscapture()\n\nthe captured warnings are stored in the ``captures`` attribute of the fixture\nafter ``setup``.\n\n``warningsfilter``\n++++++++++++++++++\n\nconfigure warnings filters during test runs::\n\n  >>> fixture = fixtures.warningsfilter(\n  ...     [\n  ...         {\n  ...             'action': 'ignore',\n  ...             'message': 'foo',\n  ...             'category': deprecationwarning,\n  ...         },\n  ...     ]\n  ... )\n\norder is important: entries closer to the front of the list override entries\nlater in the list, if both match a particular warning.\n\ncontributing\n============\n\nfixtures has its project homepage on github\n<https://github.com/testing-cabal/fixtures>.\n\nlicense\n=======\n\n  copyright (c) 2010, robert collins <robertc@robertcollins.net>\n\n  licensed under either the apache license, version 2.0 or the bsd 3-clause\n  license at the users choice. a copy of both licenses are available in the\n  project source as apache-2.0 and bsd. you may not use this file except in\n  compliance with one of these two licences.\n\n  unless required by applicable law or agreed to in writing, software\n  distributed under these licenses is distributed on an \"as is\" basis, without\n  warranties or conditions of any kind, either express or implied.  see the\n  license you chose for the specific language governing permissions and\n  limitations under that license.\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "fixtures",
  "package_url": "https://pypi.org/project/fixtures/",
  "project_url": "https://pypi.org/project/fixtures/",
  "project_urls": {
    "Homepage": "https://github.com/testing-cabal/fixtures"
  },
  "release_url": "https://pypi.org/project/fixtures/4.1.0/",
  "requires_dist": [
    "pbr (>=5.7.0)",
    "docutils ; extra == 'docs'",
    "testtools ; extra == 'streams'",
    "mock ; extra == 'test'",
    "testtools ; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "fixtures, reusable state for writing clean tests and more.",
  "version": "4.1.0",
  "releases": [],
  "developers": [
    "robert_collins",
    "robertc@robertcollins.net"
  ],
  "kwds": "dependency_fixture fixtures fixture python testresources",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_fixtures",
  "homepage": "https://github.com/testing-cabal/fixtures",
  "release_count": 33,
  "dependency_ids": [
    "pypi_docutils",
    "pypi_mock",
    "pypi_pbr",
    "pypi_testtools"
  ],
  "documentation_summary": "The HTML text provides information about the \"fixtures\" package version 4.1.0, released on May 26, 2023, available on PyPI (Python Package Index). It is designed for creating reusable state for writing clean tests and more, requiring Python version 3.7 or higher. The package is licensed under the Apache Software License and BSD License, with Robert Collins listed as the author. It includes a comprehensive description of how to use fixtures to improve the quality of unit tests by providing a uniform contract for helper functions, thereby avoiding complex dependencies and making code cleaner. The document also outlines various types of fixtures provided by the package, such as `FunctionFixture`, `MethodFixture`, and `TempDir`, among others, and explains how to create and use these fixtures in testing environments. Additionally, it mentions the project's GitHub statistics and provides links for further information, including project description, release history, and download files.",
  "embedding": [
    0.01321876235306263,
    0.006907683797180653,
    0.0017655565170571208,
    -0.015842387452721596,
    -0.0013594336342066526,
    0.0018302487442269921,
    0.03326614201068878,
    -0.017423752695322037,
    -0.015238595195114613,
    -0.02328917384147644,
    -0.004496104549616575,
    0.004154673311859369,
    -0.03151226416230202,
    0.04068417474627495,
    -0.012744353152811527,
    0.005164589732885361,
    0.028838321566581726,
    -0.016589941456913948,
    0.027041317895054817,
    -0.006027151830494404,
    0.03740643709897995,
    -0.0010224953293800354,
    -0.038067735731601715,
    0.009732574224472046,
    -0.01529609877616167,
    0.013240326195955276,
    0.023303549736738205,
    -0.03260484337806702,
    0.0031213960610330105,
    0.00751866539940238,
    0.029355859383940697,
    -0.023806709796190262,
    -0.04749841243028641,
    -0.026006244122982025,
    -0.013721923343837261,
    8.591925870859995e-05,
    0.01004884671419859,
    -0.00739646889269352,
    0.027415094897150993,
    -0.011781158857047558,
    0.013570975512266159,
    0.0007906818063929677,
    -0.017869409173727036,
    0.003992943093180656,
    -0.023662950843572617,
    0.008100894279778004,
    0.008568115532398224,
    -0.03168477490544319,
    -0.011989611200988293,
    -0.0057611954398453236,
    0.007561793550848961,
    0.011831475421786308,
    -0.01329783070832491,
    -0.006936436053365469,
    0.018085049465298653,
    -0.01529609877616167,
    0.00217437488026917,
    0.01566987670958042,
    -0.012471208348870277,
    -0.028292033821344376,
    -0.0076264855451881886,
    0.007098166272044182,
    -0.012241192162036896,
    -0.006814239546656609,
    -0.01730874367058277,
    -0.004546420648694038,
    -0.00666688522323966,
    0.016618693247437477,
    0.00022619789524469525,
    -0.005994805600494146,
    0.044881973415613174,
    0.017567511647939682,
    0.024237992241978645,
    4.8350641009164974e-05,
    0.03605509176850319,
    -0.006548283156007528,
    -0.01878947578370571,
    0.015411107800900936,
    -0.012816233560442924,
    -0.004093575291335583,
    -0.003917469177395105,
    0.015439859591424465,
    -0.027846375480294228,
    0.032662346959114075,
    0.016963718459010124,
    0.013132506050169468,
    0.003189682262018323,
    0.026423148810863495,
    -0.0056210290640592575,
    -0.007295836694538593,
    -0.008740628138184547,
    0.006102626211941242,
    -0.00860405620187521,
    0.009452241472899914,
    -0.0029686507768929005,
    0.04476696625351906,
    -0.01518109068274498,
    0.05155245587229729,
    0.005358666181564331,
    -0.038642775267362595,
    -0.006354206707328558,
    0.020528975874185562,
    -0.02476990409195423,
    -0.01064545288681984,
    -0.027587607502937317,
    -0.015195466578006744,
    0.0059983995743095875,
    -0.006426086649298668,
    0.012090243399143219,
    0.02409423142671585,
    -0.024784279987215996,
    0.01814255304634571,
    -0.01029323972761631,
    -0.05546273663640022,
    0.0030549070797860622,
    0.002454707631841302,
    0.03409995138645172,
    -0.0037737085949629545,
    -0.008453107438981533,
    0.003116005100309849,
    -0.010386683978140354,
    -0.011443322524428368,
    0.021535297855734825,
    -0.017351871356368065,
    0.013319394551217556,
    -0.018904482945799828,
    -0.020687110722064972,
    0.00375933269970119,
    -0.0257330983877182,
    -0.024007974192500114,
    0.011874603107571602,
    -0.0009667882113717496,
    0.017567511647939682,
    0.002152811037376523,
    -0.009596002288162708,
    0.009955402463674545,
    -0.0013190010795369744,
    -0.011802722699940205,
    -0.039419081062078476,
    -0.007964322343468666,
    0.003380164736881852,
    0.01830068975687027,
    -0.025488706305623055,
    -0.011996799148619175,
    0.007648049388080835,
    0.04154673591256142,
    -0.004309216048568487,
    -0.027587607502937317,
    -0.002249849261716008,
    -0.023562317714095116,
    0.01198242325335741,
    -0.004025289323180914,
    0.0006109814275987446,
    -0.008366851136088371,
    -0.0048087830655276775,
    0.008618432097136974,
    -0.015382355079054832,
    0.004895039368420839,
    -0.020413966849446297,
    0.004366720095276833,
    -0.014620425179600716,
    0.02817702479660511,
    -0.009308481588959694,
    -0.00778462179005146,
    -0.008661559782922268,
    0.026495028287172318,
    0.02518681064248085,
    0.01694934256374836,
    -0.020945880562067032,
    -0.0004427368985489011,
    0.025560585781931877,
    0.014368845149874687,
    -0.05445641279220581,
    0.017811905592679977,
    0.014821689575910568,
    0.024367375299334526,
    0.014879194088280201,
    0.013089378364384174,
    -0.003549083136022091,
    -0.010163855738937855,
    0.024209240451455116,
    -0.005351478233933449,
    0.011953671462833881,
    0.03260484337806702,
    -0.011874603107571602,
    -0.011824287474155426,
    -0.005150213837623596,
    0.007921193726360798,
    -0.019695164635777473,
    0.02550308220088482,
    0.01611553318798542,
    0.024683648720383644,
    -0.030132165178656578,
    -0.01762501709163189,
    -0.6127640008926392,
    0.018228810280561447,
    -0.008611244149506092,
    -0.04542826488614082,
    -0.011134237982332706,
    0.022182218730449677,
    0.01043699961155653,
    0.014225084334611893,
    -0.05230000987648964,
    0.029643379151821136,
    -0.02383546344935894,
    0.01627366989850998,
    0.011910543777048588,
    -0.013930375687777996,
    -0.007993074133992195,
    -0.01082515250891447,
    -0.009797266684472561,
    -0.01866009086370468,
    -0.022555995732545853,
    0.006444056984037161,
    0.0057396311312913895,
    0.04373189061880112,
    -0.03654387593269348,
    -0.0014169377973303199,
    -0.0025229938328266144,
    -0.00030257058097049594,
    0.006267950404435396,
    -0.01122768223285675,
    0.020758992061018944,
    -0.011184553615748882,
    -0.01617303676903248,
    0.02396484650671482,
    0.034847505390644073,
    -0.01595739647746086,
    0.06233447790145874,
    0.005944489501416683,
    -0.03277735412120819,
    0.04445069283246994,
    0.015123587101697922,
    0.03303612396121025,
    -0.018286313861608505,
    -0.025043049827218056,
    -0.009128781035542488,
    0.017797529697418213,
    0.013197198510169983,
    0.015022954903542995,
    0.01669057458639145,
    0.012844985350966454,
    0.023274797946214676,
    0.00921503733843565,
    0.020830871537327766,
    -0.018070673570036888,
    0.027314461767673492,
    -0.00963194202631712,
    0.016201788559556007,
    -0.004765654914081097,
    0.006264356430619955,
    0.0008162891026586294,
    0.006641727406531572,
    0.0013082190416753292,
    -0.008532175794243813,
    0.01749563217163086,
    0.02341855689883232,
    -0.014426348730921745,
    -0.021736562252044678,
    0.022829139605164528,
    -0.010753273032605648,
    -0.022599123418331146,
    0.016546813771128654,
    -0.018933234736323357,
    0.007633673492819071,
    0.005146619863808155,
    -0.005750413052737713,
    -0.020888375118374825,
    0.02531619369983673,
    0.04882100969552994,
    0.027846375480294228,
    0.008266218937933445,
    0.005570712964981794,
    0.011910543777048588,
    0.013182822614908218,
    0.007683989591896534,
    0.0038779349997639656,
    -0.02846454456448555,
    0.028608305379748344,
    -0.005865421611815691,
    0.0036137753631919622,
    0.0019066213862970471,
    0.005017235409468412,
    -0.004373908042907715,
    0.02277163602411747,
    0.009984155185520649,
    -0.011407381854951382,
    -0.02596311643719673,
    0.007820561528205872,
    0.032374825328588486,
    -0.032691098749637604,
    0.011019228957593441,
    -0.022440986707806587,
    -0.02354794181883335,
    -0.006170912180095911,
    -0.028407040983438492,
    -0.008568115532398224,
    0.01017823163419962,
    0.008855636231601238,
    0.00161011575255543,
    0.019925180822610855,
    0.012535900808870792,
    0.014275400899350643,
    -0.017581887543201447,
    0.014059760607779026,
    -0.018602587282657623,
    -0.01559799537062645,
    -0.022354731336236,
    -0.0006127784145064652,
    -0.03660137951374054,
    0.03502001613378525,
    -0.032949868589639664,
    0.023145413026213646,
    -0.012924053706228733,
    0.011055169627070427,
    -0.0064871846698224545,
    -0.020212702453136444,
    -0.006081061903387308,
    0.0357675701379776,
    0.00311959907412529,
    0.02113276906311512,
    -0.016934966668486595,
    -0.024079855531454086,
    0.0010719129350036383,
    -0.01051606796681881,
    0.008934704586863518,
    0.01170927844941616,
    -0.006781893782317638,
    0.008122459053993225,
    -0.008927516639232635,
    0.018803851678967476,
    -0.02313103713095188,
    -0.004711744841188192,
    -0.02814827300608158,
    -0.011155801825225353,
    0.003543692175298929,
    0.009308481588959694,
    0.0036047901958227158,
    -0.04499698430299759,
    -0.04827471822500229,
    -0.008639995940029621,
    0.006569846998900175,
    -0.0035598650574684143,
    0.01037230808287859,
    0.004488916136324406,
    0.003482593921944499,
    -0.033984940499067307,
    -0.0032022614032030106,
    -0.017380623146891594,
    -0.006418898701667786,
    0.009761326014995575,
    -0.016259294003248215,
    -0.011587082408368587,
    -0.005919331684708595,
    0.015080458484590054,
    0.02524431422352791,
    -0.015540491789579391,
    -0.01588551700115204,
    -0.025388075038790703,
    0.003466421039775014,
    -0.031799785792827606,
    0.028191400691866875,
    0.0034107137471437454,
    -0.04289808124303818,
    -0.006569846998900175,
    -0.014692305587232113,
    -0.018501954153180122,
    -0.004417036194354296,
    -0.004535638261586428,
    0.010271675884723663,
    -0.025560585781931877,
    -0.004571578465402126,
    0.000981164281256497,
    0.0008589679491706192,
    -0.009696634486317635,
    0.0335824117064476,
    -0.04795844480395317,
    -0.010185419581830502,
    0.028320785611867905,
    0.014721057377755642,
    -0.005710878875106573,
    0.013693171553313732,
    -0.0036353394389152527,
    0.0076049212366342545,
    -0.024108607321977615,
    -0.004948949441313744,
    -0.026840053498744965,
    0.0016891838749870658,
    -0.009588814340531826,
    0.01975267007946968,
    0.013146881945431232,
    0.0010458563920110464,
    0.015209842473268509,
    0.018516330048441887,
    0.022412234917283058,
    -0.0017970041371881962,
    0.013340958394110203,
    -0.019738294184207916,
    0.008675935678184032,
    -0.025431202724575996,
    0.024468008428812027,
    -0.019048243761062622,
    0.013420026749372482,
    -0.01949390023946762,
    0.036198850721120834,
    -0.0337836779654026,
    -0.028263280168175697,
    0.004697368945926428,
    0.020816495642066002,
    0.028191400691866875,
    0.003712610574439168,
    0.03648637235164642,
    -0.022814763709902763,
    -0.00017576946993358433,
    0.020802119746804237,
    -0.011162989772856236,
    0.007188016548752785,
    0.017006846144795418,
    0.0022480522748082876,
    -0.01217649970203638,
    0.00781337358057499,
    0.014397596940398216,
    0.03956284373998642,
    -0.0006595005397684872,
    -0.008064954541623592,
    0.004988483618944883,
    0.023634199053049088,
    -0.030563445761799812,
    0.016992470249533653,
    -0.019220756366848946,
    0.027429470792412758,
    -0.023519190028309822,
    0.012988746166229248,
    -0.027170702815055847,
    0.04258181154727936,
    0.014562921598553658,
    0.02550308220088482,
    0.008819696493446827,
    0.000651863228995353,
    -0.01252871286123991,
    0.009006584994494915,
    -0.0008571709622628987,
    -0.009380361065268517,
    0.012931241653859615,
    0.016000524163246155,
    0.028780817985534668,
    -0.005125055555254221,
    0.006293108221143484,
    0.02653815783560276,
    -0.01068139262497425,
    -0.0015445250319316983,
    -0.005135837942361832,
    0.02199533022940159,
    0.0087190642952919,
    0.010056034661829472,
    -4.006757808383554e-05,
    0.011220493353903294,
    0.026365645229816437,
    0.03838400915265083,
    -0.018516330048441887,
    -0.020917128771543503,
    -0.035940080881118774,
    -0.01608678139746189,
    -0.01390881184488535,
    0.003935439046472311,
    -0.03312237933278084,
    -0.03792397677898407,
    0.009883522987365723,
    0.013836931437253952,
    0.01178834680467844,
    0.0062967026606202126,
    0.030994726344943047,
    -0.009531309828162193,
    -0.01585676521062851,
    -0.015842387452721596,
    -0.023777958005666733,
    0.016733702272176743,
    0.0008153906092047691,
    -0.005948083475232124,
    -0.03657262772321701,
    -0.030247174203395844,
    0.01556924358010292,
    0.009107217192649841,
    0.012535900808870792,
    -0.006702825427055359,
    0.008726252242922783,
    0.007220362778753042,
    -0.001543626538477838,
    -0.004571578465402126,
    0.019148875027894974,
    0.013599727302789688,
    -0.009157532826066017,
    -0.012586216442286968,
    -0.01145051047205925,
    -0.004316403996199369,
    0.014562921598553658,
    -0.005746819078922272,
    0.0035041579976677895,
    0.026940686628222466,
    -0.020572103559970856,
    -0.011464886367321014,
    -0.02274288423359394,
    -0.007719929795712233,
    -0.0272713340818882,
    0.008294970728456974,
    0.01874634623527527,
    -0.023892967030405998,
    -0.001956937601789832,
    0.006961593870073557,
    -0.0029956058133393526,
    0.005987617652863264,
    0.0075330412946641445,
    0.031541015952825546,
    0.02872331440448761,
    -0.02154967375099659,
    -0.021060887724161148,
    -0.026495028287172318,
    -0.0069975340738892555,
    0.04206427186727524,
    0.02492804080247879,
    0.004603924695402384,
    0.0278176236897707,
    -0.04856223985552788,
    -0.024626145139336586,
    -0.0009596002055332065,
    -0.0022103150840848684,
    0.014699493534862995,
    0.004417036194354296,
    0.01775440014898777,
    0.02599186822772026,
    -0.0056210290640592575,
    -9.483408575761132e-06,
    -0.009423489682376385,
    0.01697809435427189,
    -0.011996799148619175,
    0.010875469073653221,
    -0.019436396658420563,
    -0.006048715673387051,
    0.013585351407527924,
    -0.018501954153180122,
    0.009495370090007782,
    0.02193782664835453,
    0.02978713996708393,
    0.013067813590168953,
    0.007195204496383667,
    0.02615000493824482,
    -0.012586216442286968,
    -0.023246046155691147,
    -0.004560796543955803,
    -0.004136703442782164,
    0.01575613208115101,
    0.05339258536696434,
    -0.03340990096330643,
    0.016934966668486595,
    0.01710747927427292,
    0.032921116799116135,
    0.014455101452767849,
    0.005103491712361574,
    0.0035149401519447565,
    -0.023447310552001,
    0.013513470999896526,
    -0.004089981317520142,
    0.02006894163787365,
    -0.021952202543616295,
    0.012384952045977116,
    -0.00860405620187521,
    -0.029053961858153343,
    0.004402660299092531,
    0.008963456377387047,
    0.02186594530940056,
    -0.02898208238184452,
    -0.016704950481653214,
    0.049741074442863464,
    -0.017222488299012184,
    0.036170098930597305,
    -0.02061523124575615,
    -0.017926912754774094,
    -0.038614023476839066,
    -0.014534169808030128,
    -0.06285201758146286,
    -0.005028017330914736,
    0.003239998361095786,
    -0.007727117743343115,
    -0.004758466966450214,
    -0.024180486798286438,
    0.03151226416230202,
    -0.03608384355902672,
    0.01746688038110733,
    0.0048339408822357655,
    -0.0047872187569737434,
    -0.018904482945799828,
    -0.03174228221178055,
    0.0333811491727829,
    -0.019824549555778503,
    0.006799863651394844,
    0.01002009492367506,
    -0.007425221148878336,
    -0.004417036194354296,
    -0.017409376800060272,
    -0.0012516133720055223,
    -0.014634802006185055,
    -0.016230540350079536,
    0.013182822614908218,
    0.020989008247852325,
    0.017323119565844536,
    -0.006957999896258116,
    -0.010077599436044693,
    0.04261056333780289,
    0.005225688219070435,
    0.013211574405431747,
    -0.013535034842789173,
    -0.009790078736841679,
    -0.008388414978981018,
    0.016848711296916008,
    -0.013578163459897041,
    -0.002492444822564721,
    0.021247776225209236,
    -0.029643379151821136,
    -0.035911329090595245,
    -0.02165030501782894,
    0.008431543596088886,
    0.00019171787425875664,
    -0.00038568201125599444,
    0.013721923343837261,
    -0.012104620225727558,
    0.03093722276389599,
    -0.022210970520973206,
    -0.00833091139793396,
    0.02113276906311512,
    -0.028162648901343346,
    -0.004445787984877825,
    0.0109545374289155,
    -0.0028949736151844263,
    0.014124452136456966,
    -0.020758992061018944,
    0.023533565923571587,
    -0.0037808967754244804,
    0.004474540241062641,
    0.011860227212309837,
    -0.02544557861983776,
    -0.0014978029066696763,
    0.017064351588487625,
    0.017452504485845566,
    0.014864818193018436,
    0.03277735412120819,
    -0.013118130154907703,
    -0.02251286804676056,
    0.011026416905224323,
    0.024654896929860115,
    0.021305281668901443,
    -0.011615834198892117,
    -0.026480652391910553,
    -0.010142290964722633,
    -0.007270678877830505,
    -0.002645190106704831,
    0.008913140743970871,
    0.004258899949491024,
    0.016043653711676598,
    0.009480994194746017,
    -0.021147144958376884,
    0.0015993337146937847,
    -0.006742359604686499,
    0.007985886186361313,
    -0.02409423142671585,
    -0.015281722880899906,
    0.0023468874860554934,
    0.007015503942966461,
    0.012967181392014027,
    -0.008647183887660503,
    -0.01827193796634674,
    -0.006555471103638411,
    0.012456832453608513,
    0.009653505869209766,
    -0.01098328921943903,
    0.026811301708221436,
    -0.002179766073822975,
    0.017323119565844536,
    0.0017026613932102919,
    0.041575487703084946,
    0.0048986333422362804,
    0.00320046441629529,
    0.014936698600649834,
    0.0184300746768713,
    0.019062619656324387,
    -0.02833516150712967,
    0.0052508460357785225,
    -0.023087909445166588,
    0.00262182904407382,
    -0.0020845248363912106,
    0.015813635662198067,
    -0.007216768339276314,
    -0.043271858245134354,
    0.014469477348029613,
    0.024712400510907173,
    -0.006170912180095911,
    0.011306749656796455,
    -0.02022707834839821,
    -0.016474934294819832,
    -0.007220362778753042,
    0.013664419762790203,
    0.0031178020872175694,
    0.028450168669223785,
    -0.0083956029266119,
    -0.009596002288162708,
    0.005182560067623854,
    0.004524856340140104,
    0.004567984491586685,
    0.015238595195114613,
    0.018803851678967476,
    0.0010215968359261751,
    0.016417428851127625,
    0.030448438599705696,
    0.005455704405903816,
    0.005222093779593706,
    0.0076264855451881886,
    -0.041834257543087006,
    -0.020370839163661003,
    -0.020399590954184532,
    -0.01125643402338028,
    0.012543088756501675,
    -0.020658358931541443,
    0.019048243761062622,
    -0.020500222221016884,
    -0.003856370924040675,
    0.00659500528126955,
    -0.019249508157372475,
    0.028119521215558052,
    -0.006882525980472565,
    -0.015396730974316597,
    -0.010401059873402119,
    -0.026552533730864525,
    -0.015094834379851818,
    0.0034179019276052713,
    -0.010947349481284618,
    -0.004499698523432016,
    0.02277163602411747,
    0.0023073533084243536,
    0.0026865212712436914,
    -0.01837257109582424,
    -0.017696896567940712,
    0.03631385788321495,
    0.022656628862023354,
    0.03711891546845436,
    0.030132165178656578,
    -0.007691177539527416,
    -0.022972900420427322,
    -0.015411107800900936,
    -0.00820152647793293,
    0.005865421611815691,
    0.007705553900450468,
    -0.002454707631841302,
    0.005031611770391464,
    -0.003529316047206521,
    0.011630211025476456,
    -0.0037844907492399216,
    -0.019738294184207916,
    -0.01083952933549881,
    0.04056916385889053,
    0.041604239493608475,
    0.013664419762790203,
    -0.0311959907412529,
    0.032374825328588486,
    -0.02718507871031761,
    0.0026092499028891325,
    -0.015540491789579391,
    -0.0009038930875249207,
    0.013118130154907703,
    0.00535507220774889,
    -0.010192607529461384,
    0.01920638047158718,
    0.01017823163419962,
    0.012118996120989323,
    -0.004909415263682604,
    -0.01681995950639248,
    -0.003173509379848838,
    -0.03691765293478966,
    -0.041834257543087006,
    0.009667881764471531,
    0.017265615984797478,
    0.003532910021021962,
    -0.01585676521062851,
    -0.01529609877616167,
    0.032403577119112015,
    -0.006386552471667528,
    -0.028119521215558052,
    -0.013951940461993217,
    0.006152942311018705,
    0.032949868589639664,
    -0.049424801021814346,
    0.005865421611815691,
    -0.003712610574439168,
    0.00044296152191236615,
    0.016417428851127625,
    -0.020370839163661003,
    0.0031357721891254187,
    -0.010286051779985428,
    -0.0039210631512105465,
    0.005125055555254221,
    0.01614428497850895,
    0.006638133432716131,
    -0.004136703442782164,
    -0.01723686419427395,
    -0.002697303192690015,
    0.008151210844516754,
    -0.007349746767431498,
    -0.012938429601490498,
    0.009732574224472046,
    -0.029197722673416138,
    -0.027458222582936287,
    -0.02058647945523262,
    -0.009193473495543003,
    0.013053437694907188,
    -0.00016869376122485846,
    -0.00886282417923212,
    0.0028895826544612646,
    0.039160314947366714,
    0.0018742752727121115,
    0.009624754078686237,
    -0.041345469653606415,
    0.013455966487526894,
    -0.016805581748485565,
    0.014699493534862995,
    0.00225524022243917,
    0.014002256095409393,
    0.03691765293478966,
    -0.013973504304885864,
    -0.02908271551132202,
    -0.03749269247055054,
    -0.005434140563011169,
    0.028809569776058197,
    0.023231668397784233,
    -0.007676801644265652,
    -0.004417036194354296,
    -0.00860405620187521,
    0.023202916607260704,
    -0.022182218730449677,
    0.009200661443173885,
    0.012291507795453072,
    -0.020960256457328796,
    0.004266087897121906,
    0.017538759857416153,
    -0.0257330983877182,
    -0.0034772029612213373,
    0.03760770335793495,
    -0.008338099345564842,
    0.012794669717550278,
    -0.03254733979701996,
    -0.025560585781931877,
    0.00038141413824632764,
    -0.011055169627070427,
    -0.002372045535594225,
    -0.0017538759857416153,
    0.014634802006185055,
    -0.02586248330771923,
    -0.01531047560274601,
    0.021722186356782913,
    -0.01316844578832388,
    -0.014778561890125275,
    -0.017998794093728065,
    0.02042834274470806,
    0.018645714968442917,
    -0.008949080482125282,
    0.016704950481653214,
    0.019350141286849976,
    -0.027041317895054817,
    -0.009926650673151016,
    -0.02100338414311409,
    -0.01866009086370468,
    -0.019709540531039238,
    0.029700884595513344,
    0.015209842473268509,
    -0.02534494549036026,
    -0.016848711296916008,
    -0.018099425360560417,
    0.01569862850010395,
    0.005664157215505838,
    -0.014548545703291893,
    0.004614706616848707,
    0.010674204677343369,
    -0.0040863873437047005,
    0.00781337358057499,
    0.019091371446847916,
    0.0007358731818385422,
    0.03663013130426407,
    -0.02238348312675953,
    0.008877200074493885,
    0.022167842835187912,
    0.01531047560274601,
    0.0008666052599437535,
    -0.010041658766567707,
    -0.03717642277479172,
    0.015899892896413803,
    0.002744025317952037,
    0.0035347070079296827,
    0.016446182504296303,
    0.023461686447262764,
    0.00013724618474952877,
    -0.0035311130341142416,
    -0.008963456377387047,
    0.0005431444733403623,
    -0.005376636516302824,
    0.00554914865642786,
    0.015123587101697922,
    -0.015914268791675568,
    -0.0263800211250782,
    0.004187019541859627,
    0.009337233379483223,
    0.004445787984877825,
    -0.0022803982719779015,
    0.016417428851127625,
    -0.002244458068162203,
    0.011888979002833366,
    -0.020572103559970856,
    -0.011472074314951897,
    0.0007920295465737581,
    -0.014397596940398216,
    0.00963194202631712,
    0.001669416786171496,
    0.026509404182434082,
    0.01637430116534233,
    0.01814255304634571,
    0.002208518097177148,
    -0.013930375687777996,
    0.007870878092944622,
    -0.033697422593832016,
    0.0003389599150978029,
    0.012097431346774101,
    -0.016259294003248215,
    0.007619297597557306,
    -0.026365645229816437,
    0.01759626530110836,
    -0.009711010381579399,
    0.004104357212781906,
    0.007277866825461388,
    -0.021190272644162178,
    0.004783624783158302,
    0.015971772372722626,
    0.013046249747276306,
    -0.010976101271808147,
    0.006922059692442417,
    -0.016963718459010124,
    0.014476665295660496,
    0.013599727302789688,
    -0.008805320598185062,
    -0.019838925451040268,
    -0.012492773123085499,
    0.045083239674568176,
    -0.008790943771600723,
    -0.009322857484221458,
    -0.030275925993919373,
    -0.002779965288937092,
    0.03297862038016319,
    -0.016201788559556007,
    -0.006842991802841425,
    0.17193736135959625,
    0.008870012126863003,
    0.03496251255273819,
    0.03381242975592613,
    0.009861958213150501,
    0.017121855169534683,
    0.0013917797477915883,
    -0.0020809308625757694,
    0.00435953214764595,
    0.03936157748103142,
    -0.003256171476095915,
    -0.0016092171426862478,
    -0.0021779690869152546,
    0.003478999948129058,
    -0.008172774687409401,
    0.004010913427919149,
    -0.03064970299601555,
    -0.037808965891599655,
    -0.03683139756321907,
    0.014548545703291893,
    0.0075330412946641445,
    -0.018257562071084976,
    -0.00905690062791109,
    -0.0434156209230423,
    0.02328917384147644,
    -0.011508014053106308,
    -0.007727117743343115,
    -0.024971168488264084,
    0.007497101090848446,
    0.011177365668118,
    0.006609381176531315,
    -0.006875337567180395,
    -0.009308481588959694,
    0.003329848637804389,
    -0.01853070594370365,
    -0.01656118966639042,
    0.005168183706700802,
    -0.012499961070716381,
    0.014692305587232113,
    -0.02129090577363968,
    0.03246108070015907,
    -0.022987276315689087,
    -0.007583357393741608,
    -0.029758388176560402,
    -0.0006064889021217823,
    -0.009538497775793076,
    -0.005851045250892639,
    0.011881791055202484,
    -0.009696634486317635,
    0.024209240451455116,
    -0.026480652391910553,
    -0.04062666743993759,
    0.005869015585631132,
    -0.013204386457800865,
    -0.01272278930991888,
    -0.0177831519395113,
    -0.005984023679047823,
    0.017926912754774094,
    0.015943020582199097,
    0.001876072259619832,
    -0.010659828782081604,
    0.029758388176560402,
    -0.013535034842789173,
    0.029672132804989815,
    -0.057619139552116394,
    0.020945880562067032,
    -0.02721383050084114,
    -0.0011033605551347136,
    0.014749810099601746,
    -0.021060887724161148,
    -0.007101760245859623,
    -0.043616883456707,
    -0.03476124629378319,
    0.0049453554674983025,
    -0.005940895527601242,
    -0.00882688444107771,
    0.018257562071084976,
    0.017567511647939682,
    0.030448438599705696,
    0.013046249747276306,
    0.006993940100073814,
    -0.004212177824229002,
    0.009646317921578884,
    0.01871759444475174,
    -0.011831475421786308,
    -0.002974041737616062,
    0.015842387452721596,
    -0.026365645229816437,
    0.009452241472899914,
    -0.013657230883836746,
    -0.02058647945523262,
    -0.008575303480029106,
    0.008639995940029621,
    -0.012550276704132557,
    -0.01206149160861969,
    0.004812377039343119,
    -0.005588682834059,
    0.0013818962033838034,
    -0.0003942177863791585,
    -0.000382537255063653,
    -0.02550308220088482,
    0.06768236309289932,
    0.014253837056457996,
    0.007223956752568483,
    0.004877069033682346,
    0.007073008455336094,
    -0.0006001993897370994,
    0.01936451718211174,
    0.0009200660861097276,
    -0.029327107593417168,
    0.035882577300071716,
    -0.023792333900928497,
    0.0008917633094824851,
    -0.01627366989850998,
    0.022412234917283058,
    -0.013499095104634762,
    -0.011608646251261234,
    -0.02087399922311306,
    0.0060918438248336315,
    0.01871759444475174,
    0.0026254230178892612,
    0.009976967237889767,
    0.0179844181984663,
    -0.012629345059394836,
    0.0002338351623620838,
    -0.021405912935733795,
    -0.051092419773340225,
    0.021923450753092766,
    -0.005696502979844809,
    -0.0189763642847538,
    -0.005495238583534956,
    -0.028665808960795403,
    0.010616700164973736,
    -0.0045967367477715015,
    -0.0006410812493413687,
    -0.01191773172467947,
    0.0030315460171550512,
    -0.02856517769396305,
    -0.022052833810448647,
    0.04065542295575142,
    -0.020025813952088356,
    0.002850048476830125,
    0.010199795477092266,
    -0.004258899949491024,
    -0.001973110483959317,
    -0.021980954334139824,
    0.011479262262582779,
    -0.005092709790915251,
    0.004560796543955803,
    0.0006217634072527289,
    -0.003631745232269168,
    0.0024421284906566143,
    7.204863504739478e-05,
    -0.020830871537327766,
    -0.00027943414170295,
    -0.05546273663640022,
    0.0050208293832838535,
    -0.03962034732103348,
    0.023087909445166588,
    -0.0041331094689667225,
    -0.027415094897150993,
    -0.0002686521038413048,
    -0.0036604974884539843,
    -0.0029488836880773306,
    -0.030994726344943047,
    -0.02958587557077408,
    -0.18447326123714447,
    0.02139153704047203,
    0.005441328510642052,
    -0.02511492930352688,
    0.008503423072397709,
    -0.0021725778933614492,
    0.016000524163246155,
    0.02144904062151909,
    -0.002744025317952037,
    -0.018027545884251595,
    0.007403656840324402,
    -0.023332301527261734,
    -0.009639129973948002,
    -0.006652509327977896,
    -0.02425236813724041,
    0.012909677810966969,
    0.0010197998490184546,
    0.011019228957593441,
    0.013520658947527409,
    0.032691098749637604,
    0.03171353042125702,
    -0.012384952045977116,
    0.030534693971276283,
    -0.002645190106704831,
    0.014706681482493877,
    -0.02724258229136467,
    0.00647280877456069,
    0.0029758387245237827,
    0.007655237801373005,
    -0.01559799537062645,
    0.0037341746501624584,
    -0.005732443183660507,
    0.027803247794508934,
    0.013901623897254467,
    0.010401059873402119,
    0.0003355905064381659,
    0.012873737141489983,
    0.0032417953480035067,
    -0.002355872420594096,
    0.02718507871031761,
    0.023447310552001,
    9.692591265775263e-05,
    0.013010310009121895,
    -0.02524431422352791,
    -0.012492773123085499,
    0.002454707631841302,
    0.006253574509173632,
    -0.01492232270538807,
    0.012428080663084984,
    -0.022426610812544823,
    0.03315113112330437,
    -0.014498229138553143,
    0.002048584632575512,
    0.017121855169534683,
    0.01056638453155756,
    -0.0005000163801014423,
    -0.0001759940932970494,
    0.001637070789001882,
    0.01388006005436182,
    0.0020270205568522215,
    -0.004007318988442421,
    -0.009121593087911606,
    0.004107951652258635,
    0.0019820956513285637,
    -0.0076696136966347694,
    -0.0037665206473320723,
    -0.019997062161564827,
    0.008618432097136974,
    0.013010310009121895,
    0.016216164454817772,
    0.011831475421786308,
    -0.027544479817152023,
    0.020284581929445267,
    0.0019281854620203376,
    -0.009114405140280724,
    0.007418033201247454,
    -0.0324898362159729,
    0.01206149160861969,
    0.006566253025084734,
    0.003748550545424223,
    -0.026581285521388054,
    0.029959652572870255,
    -0.013154069893062115,
    -0.013110942207276821,
    -0.003602993208914995,
    -0.009365985170006752,
    -0.012715601362287998,
    0.005980429705232382,
    -0.016589941456913948,
    0.004877069033682346,
    0.016489310190081596,
    4.7761001042090356e-05,
    -0.007418033201247454,
    -0.008179962635040283,
    0.0016703152796253562,
    0.003279532538726926,
    0.00933004543185234,
    -0.0028698155656456947,
    0.016776829957962036,
    -0.025531833991408348,
    0.012499961070716381,
    0.014936698600649834,
    -0.022814763709902763,
    0.005430546589195728,
    0.0036209633108228445,
    0.02508617751300335,
    -0.015238595195114613,
    0.012629345059394836,
    0.035882577300071716,
    -0.007137700449675322,
    -0.01759626530110836,
    -0.01145051047205925,
    0.016719326376914978,
    0.016604317352175713,
    -0.01855945773422718,
    0.022024082019925117,
    0.014368845149874687,
    0.008323723450303078,
    0.024194862693548203,
    -0.024496760219335556,
    0.01772564835846424,
    -0.014850442297756672,
    -0.013707547448575497,
    0.029470868408679962,
    -0.015353603288531303,
    -0.02016957476735115,
    -0.11391568183898926,
    -0.04959731549024582,
    0.002133043948560953,
    0.013484719209372997,
    -0.005232876166701317,
    -0.009114405140280724,
    0.0007367716752924025,
    0.04097169265151024,
    -0.005056769587099552,
    -0.004143891390413046,
    -0.01866009086370468,
    -0.0007430611876770854,
    -0.011263621971011162,
    -0.004194207489490509,
    -0.020730240270495415,
    -0.014498229138553143,
    -0.006620163097977638,
    0.0014474868075922132,
    -0.0017116464441642165,
    0.0222540982067585,
    -0.002548151882365346,
    -0.018487578257918358,
    0.000618618680164218,
    -0.02328917384147644,
    -0.00963194202631712,
    0.012090243399143219,
    -0.04545701667666435,
    0.005254440009593964,
    -0.010782024823129177,
    0.02219659462571144,
    0.016288045793771744,
    -0.01382974348962307,
    -0.023274797946214676,
    -0.034013692289590836,
    0.03875778615474701,
    0.015281722880899906,
    -0.01643180660903454,
    -0.022555995732545853,
    0.01827193796634674,
    -0.028162648901343346,
    0.00616731820628047,
    -0.0017224284820258617,
    0.03010341338813305,
    0.007047850172966719,
    0.01076046098023653,
    -0.004158267751336098,
    -0.0017026613932102919,
    0.029873397201299667,
    0.017898160964250565,
    -0.007597733289003372,
    -0.028033263981342316,
    -0.008618432097136974,
    -0.012104620225727558,
    -0.002109682885929942,
    0.007238332647830248,
    -0.020241454243659973,
    0.012298696674406528,
    0.010221359319984913,
    -0.005901361349970102,
    -0.027300085872411728,
    -0.028910202905535698,
    0.02006894163787365,
    0.01492232270538807,
    0.017869409173727036,
    -0.004639864433556795,
    0.006925653666257858,
    -0.008762191981077194,
    0.005966053809970617,
    0.012873737141489983,
    -0.021564049646258354,
    -0.021952202543616295,
    0.009969779290258884,
    -0.019465148448944092,
    0.013901623897254467,
    -0.011155801825225353,
    0.003317269729450345,
    0.03202980011701584,
    -0.0011851242743432522,
    0.010810776613652706,
    -0.011378630064427853,
    -0.022541619837284088,
    -0.0010368713410571218,
    -0.02721383050084114,
    -0.01569862850010395,
    0.008812508545815945,
    0.030218420550227165,
    -0.007993074133992195,
    0.012924053706228733,
    0.00990508683025837,
    -0.036400116980075836,
    0.008898764848709106,
    -0.008237467147409916,
    0.025416826829314232,
    -0.0006994838477112353,
    0.0003969132958445698,
    0.006569846998900175,
    0.01988205313682556,
    -1.0831161489477381e-05,
    0.006925653666257858,
    0.01913449913263321,
    -0.02570434659719467,
    -0.017840657383203506,
    -0.07832062989473343,
    0.01939326897263527,
    0.00732458895072341,
    -0.001436704769730568,
    -0.003964191302657127,
    -0.013506283052265644,
    0.0030423279386013746,
    -0.022110339254140854,
    -0.011134237982332706,
    0.018602587282657623,
    -0.02508617751300335,
    -0.015238595195114613,
    0.00497051328420639,
    -0.01868884265422821,
    0.0020234265830367804,
    -0.017136231064796448,
    0.031569767743349075,
    -0.012780292890965939,
    0.029341483488678932,
    0.018760722130537033,
    6.497293361462653e-05,
    0.0003915222769137472,
    0.031569767743349075,
    0.017826281487941742,
    -0.050517380237579346,
    0.004312810022383928,
    0.0222540982067585,
    0.018056297674775124,
    -0.004255305975675583,
    -0.0311959907412529,
    0.02817702479660511,
    0.0005134939565323293,
    -0.02409423142671585,
    0.010142290964722633,
    0.025258690118789673,
    0.03366867080330849,
    0.019048243761062622,
    -0.0038815289735794067,
    0.024468008428812027,
    -0.0002365306718274951,
    -0.026495028287172318,
    -0.024884913116693497,
    0.02058647945523262,
    -0.01853070594370365,
    -0.014340093359351158,
    0.0017952071502804756,
    -0.014613237231969833,
    0.009840394370257854,
    0.025229938328266144,
    0.02461176924407482,
    0.031023479998111725,
    0.01170927844941616,
    -0.021664680913090706,
    -0.006264356430619955,
    0.00400372501462698,
    -0.03194354474544525,
    -0.01125643402338028,
    -0.009121593087911606,
    -0.008654371835291386,
    -0.011191741563379765,
    0.032921116799116135,
    0.012277131900191307,
    0.011105485260486603,
    0.019465148448944092,
    0.009610378183424473,
    -0.023102285340428352,
    -0.025804979726672173,
    -0.021909074857831,
    0.01595739647746086,
    -0.004614706616848707,
    -0.007058632094413042,
    -0.03113848716020584,
    0.04031039774417877,
    0.012758729048073292,
    0.021377161145210266,
    0.002179766073822975,
    -0.006835803855210543,
    -0.0016739093698561192,
    -0.021204648539423943,
    0.03657262772321701,
    0.03326614201068878,
    -0.014893569983541965,
    -0.034013692289590836,
    0.015641123056411743,
    0.03757895156741142,
    -0.01355659868568182,
    -0.031569767743349075,
    -0.008704688400030136,
    -0.007921193726360798,
    0.012420892715454102,
    -0.01910574734210968,
    0.0046218945644795895,
    0.015842387452721596,
    -0.00535507220774889,
    -0.0036838585510849953,
    0.017409376800060272,
    0.005858233664184809,
    -0.023519190028309822,
    -0.005171777680516243,
    -0.030218420550227165,
    0.007130512502044439,
    -0.0006177201867103577,
    0.021305281668901443,
    -0.019278259947896004,
    -0.014340093359351158,
    -0.006630945019423962,
    -0.010005719028413296,
    -0.020816495642066002,
    -8.754779264563695e-05,
    0.04100044444203377,
    0.011615834198892117,
    -0.020212702453136444,
    -3.877597919199616e-05,
    0.01694934256374836,
    -0.02734321542084217,
    0.022814763709902763,
    -0.010753273032605648,
    -0.0038204307202249765,
    -0.0003948916564695537,
    0.007202392444014549,
    0.01585676521062851,
    0.004222959745675325,
    0.04008037969470024,
    -0.01252871286123991,
    0.024741152301430702,
    0.027961384505033493,
    0.010882657021284103,
    -0.023519190028309822,
    -0.006735171657055616,
    0.018645714968442917,
    -0.004614706616848707,
    0.00033985840855166316,
    -0.001064724987372756,
    -0.015741756185889244,
    -0.013261890038847923,
    -0.032374825328588486,
    0.004395471885800362,
    -0.005071145482361317,
    0.014124452136456966,
    0.0722251906991005,
    0.00015824867296032608,
    -0.028292033821344376,
    0.013793803751468658,
    -0.0013100160285830498,
    0.018731970340013504,
    -0.003306487575173378,
    0.016589941456913948,
    0.006210446357727051,
    -0.0032256224658340216,
    0.020054565742611885,
    0.011896166950464249,
    0.01720811240375042,
    -0.005768383387476206,
    -0.0173374954611063,
    -0.004384689964354038,
    -0.01669057458639145,
    0.010336367413401604,
    0.0068106455728411674,
    0.025661218911409378,
    0.006548283156007528,
    0.020183950662612915,
    -0.005764789413660765,
    -0.009107217192649841,
    -0.02788950316607952,
    -0.007313806563615799,
    0.011809910647571087,
    0.01051606796681881,
    -0.0027494162786751986,
    -0.01913449913263321,
    0.006749547552317381,
    0.005045987665653229,
    -0.02604937180876732,
    0.0026901152450591326,
    0.007914005778729916,
    0.01993955858051777,
    -0.00866874773055315,
    -0.005797135177999735,
    -0.00800745002925396,
    0.0055096144787967205,
    -0.010861093178391457,
    0.000938036129809916,
    -0.011019228957593441,
    -0.00720598641782999,
    -0.005207717884331942,
    -0.0034394660033285618,
    0.0018509142100811005,
    0.003701828420162201,
    -0.04117295891046524
  ]
}
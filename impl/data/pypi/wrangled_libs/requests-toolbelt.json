{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "the requests toolbelt\n=====================\n\nthis is just a collection of utilities for `python-requests`_, but don't\nreally belong in ``requests`` proper. the minimum tested requests version is\n``2.1.0``. in reality, the toolbelt should work with ``2.0.1`` as well, but\nsome idiosyncracies prevent effective or sane testing on that version.\n\n``pip install requests-toolbelt`` to get started!\n\n\nmultipart/form-data encoder\n---------------------------\n\nthe main attraction is a streaming multipart form-data object, ``multipartencoder``.\nits api looks like this:\n\n.. code-block:: python\n\n    from requests_toolbelt import multipartencoder\n    import requests\n\n    m = multipartencoder(\n        fields={'field0': 'value', 'field1': 'value',\n                'field2': ('filename', open('file.py', 'rb'), 'text/plain')}\n        )\n\n    r = requests.post('http://httpbin.org/post', data=m,\n                      headers={'content-type': m.content_type})\n\n\nyou can also use ``multipart/form-data`` encoding for requests that don't\nrequire files:\n\n.. code-block:: python\n\n    from requests_toolbelt import multipartencoder\n    import requests\n\n    m = multipartencoder(fields={'field0': 'value', 'field1': 'value'})\n\n    r = requests.post('http://httpbin.org/post', data=m,\n                      headers={'content-type': m.content_type})\n\n\nor, you can just create the string and examine the data:\n\n.. code-block:: python\n\n    # assuming `m` is one of the above\n    m.to_string()  # always returns unicode\n\n\nuser-agent constructor\n----------------------\n\nyou can easily construct a requests-style ``user-agent`` string::\n\n    from requests_toolbelt import user_agent\n\n    headers = {\n        'user-agent': user_agent('my_package', '0.0.1')\n        }\n\n    r = requests.get('https://api.github.com/users', headers=headers)\n\n\nssladapter\n----------\n\nthe ``ssladapter`` was originally published on `cory benfield's blog`_.\nthis adapter allows the user to choose one of the ssl protocols made available\nin python's ``ssl`` module for outgoing https connections:\n\n.. code-block:: python\n\n    from requests_toolbelt import ssladapter\n    import requests\n    import ssl\n\n    s = requests.session()\n    s.mount('https://', ssladapter(ssl.protocol_tlsv1))\n\ncookies/forgetfulcookiejar\n--------------------------\n\nthe ``forgetfulcookiejar`` prevents a particular requests session from storing\ncookies:\n\n.. code-block:: python\n\n    from requests_toolbelt.cookies.forgetful import forgetfulcookiejar\n\n    session = requests.session()\n    session.cookies = forgetfulcookiejar()\n\ncontributing\n------------\n\nplease read the `suggested workflow\n<https://toolbelt.readthedocs.io/en/latest/contributing.html>`_ for\ncontributing to this project.\n\nplease report any bugs on the `issue tracker`_\n\n.. _cory benfield's blog: https://lukasa.co.uk/2013/01/choosing_ssl_version_in_requests/\n.. _python-requests: https://github.com/kennethreitz/requests\n.. _issue tracker: https://github.com/requests/toolbelt/issues\n\n\nhistory\n=======\n\n1.0.0 -- 2023-05-01\n-------------------\n\nbreaking changes\n~~~~~~~~~~~~~~~~\n\n- removed google app engine support to allow using urllib3 2.0\n\nfixed bugs\n~~~~~~~~~~\n\n- ensured the test suite no longer reaches the internet\n\nmiscellaneous\n~~~~~~~~~~~~~\n\n- added explicit support for python 3.11\n\n0.10.1 -- 2022-10-25\n--------------------\n\nfixed bugs\n~~~~~~~~~~\n\n- fix urllib3 warning to only emit on x509adapter usage\n\n0.10.0 -- 2022-10-06\n--------------------\n\nnew features\n~~~~~~~~~~~~\n\n- add support for preparing requests in baseurlsession\n\nfixed bugs\n~~~~~~~~~~\n\n- fixing missing newline in dump utility\n\n0.9.1 -- 2019-01-29\n-------------------\n\nfixed bugs\n~~~~~~~~~~\n\n- fix import of pyopenssl shim from urllib3 for pkcs12 adapter\n\n0.9.0 -- 2019-01-29\n-------------------\n\nnew features\n~~~~~~~~~~~~\n\n- add x509 adapter that can handle pkcs12\n- add stateless solution for streaming files by multipartencoder from one host to another (in chunks)\n\nfixed bugs\n~~~~~~~~~~\n\n- update link to example\n- move import of ``abcs`` from collections into version-specific part of\n  _compat module\n- fix backwards incompatibility in ``get_encodings_from_content``\n- correct callback documentation for ``multipartencodermonitor``\n- fix bug when ``multipartencoder`` is asked to encode zero parts\n- correct the type of non string request body dumps\n- removed content from being stored in multipartdecoder\n- fix bug by enabling support for contenttype with capital letters.\n- coerce proxy url to bytes before dumping request\n- avoid bailing out with exception upon empty response reason\n- corrected pool documentation\n- corrected parentheses match in example usage\n- fix \"oject\" to \"object\" in ``multipartencoder``\n- fix url for the project after the move\n- add fix for osx tcpkeepaliveadapter\n\nmiscellaneous\n~~~~~~~~~~~~~\n\n- remove py33 from testing and add python 3.6 and nightly testing to the travis matrix.\n\n0.8.0 -- 2017-05-20\n-------------------\n\nmore information about this release can be found on the `0.8.0 milestone`_.\n\nnew features\n~~~~~~~~~~~~\n\n- add ``useragentbuilder`` to provide more control over generated user-agent\n  strings.\n\nfixed bugs\n~~~~~~~~~~\n\n- include ``_validate_certificate`` in the lits of picked attributes on the\n  ``appengineadapter``.\n- fix backwards incompatibility in ``get_encodings_from_content``\n\n.. _0.8.0 milestone:\n    https://github.com/requests/toolbelt/milestones/0.8.0\n\n0.7.1 -- 2017-02-13\n-------------------\n\nmore information about this release can be found on the `0.7.1 milestone`_.\n\nfixed bugs\n~~~~~~~~~~\n\n- fixed monkey-patching for the appengineadapter.\n\n- make it easier to disable certificate verification when monkey-patching\n  appengine.\n\n- handle ``multipart/form-data`` bodies without a trailing ``crlf``.\n\n\n.. links\n.. _0.7.1 milestone:\n    https://github.com/requests/toolbelt/milestone/9\n\n0.7.0 -- 2016-07-21\n-------------------\n\nmore information about this release can be found on the `0.7.0 milestone`_.\n\nnew features\n~~~~~~~~~~~~\n\n- add ``baseurlsession`` to allow developers to have a session that has a\n  \"base\" url. see the documentation for more details and examples.\n\n- split the logic of ``stream_response_to_file`` into two separate functions:\n\n  * ``get_download_file_path`` to generate the file name from the response.\n\n  * ``stream_response_to_file`` which will use ``get_download_file_path`` if\n    necessary\n\nfixed bugs\n~~~~~~~~~~\n\n- fixed the issue for people using *very* old versions of requests where they\n  would see an importerror from ``requests_toolbelt._compat`` when trying to\n  import ``connection``.\n\n\n.. _0.7.0 milestone:\n    https://github.com/requests/toolbelt/milestones/0.7.0\n\n0.6.2 -- 2016-05-10\n-------------------\n\nfixed bugs\n~~~~~~~~~~\n\n- when passing a timeout via requests, it was not appropriately translated to\n  the timeout that the urllib3 code was expecting.\n\n0.6.1 -- 2016-05-05\n-------------------\n\nfixed bugs\n~~~~~~~~~~\n\n- remove assertion about request urls in the appengineadapter.\n\n- prevent pip from installing requests 3.0.0 when that is released until we\n  are ready to handle it.\n\n0.6.0 -- 2016-01-27\n-------------------\n\nmore information about this release can be found on the `0.6.0 milestone`_.\n\nnew features\n~~~~~~~~~~~~\n\n- add ``appengineadapter`` to support developers using google's appengine\n  platform with requests.\n\n- add ``guessproxyauth`` class to support guessing between basic and digest\n  authentication for proxies.\n\nfixed bugs\n~~~~~~~~~~\n\n- ensure that proxies use the correct tls version when using the\n  ``ssladapter``.\n\n- fix an ``attributeerror`` when using the ``httpproxydigestauth`` class.\n\nmiscellaneous\n~~~~~~~~~~~~~\n\n- drop testing support for python 3.2. virtualenv and pip have stopped\n  supporting it meaning that it is harder to test for this with our ci\n  infrastructure. moving forward we will make a best-effort attempt to\n  support 3.2 but will not test for it.\n\n\n.. _0.6.0 milestone:\n    https://github.com/requests/toolbelt/milestones/0.6.0\n\n0.5.1 -- 2015-12-16\n-------------------\n\nmore information about this release can be found on the `0.5.1 milestone`_.\n\nfixed bugs\n~~~~~~~~~~\n\n- now papers over the differences in requests' ``super_len`` function from\n  versions prior to 2.9.0 and versions 2.9.0 and later.\n\n\n.. _0.5.1 milestone:\n    https://github.com/requests/toolbelt/milestones/0.5.1\n\n0.5.0 -- 2015-11-24\n-------------------\n\nmore information about this release can be found on the `milestone\n<https://github.com/requests/toolbelt/issues?utf8=%e2%9c%93&q=is%3aall+milestone%3a0.5+>`_\nfor 0.5.0.\n\nnew features\n~~~~~~~~~~~~\n\n- the ``tee`` submodule was added to ``requests_toolbelt.downloadutils``. it\n  allows you to iterate over the bytes of a response while also writing them\n  to a file. the ``tee.tee`` function, expects you to pass an open file\n  object, while ``tee.tee_to_file`` will use the provided file name to open\n  the file for you.\n\n- added a new parameter to ``requests_toolbelt.utils.user_agent`` that allows\n  the user to specify additional items.\n\n- added nested form-data helper,\n  ``requests_toolbelt.utils.formdata.urlencode``.\n\n- added the ``forgetfulcookiejar`` to ``requests_toolbelt.cookies``.\n\n- added utilities for dumping the information about a request-response cycle\n  in ``requests_toolbelt.utils.dump``.\n\n- implemented the api described in the ``requests_toolbelt.threaded`` module\n  docstring, i.e., added ``requests_toolbelt.threaded.map`` as an available\n  function.\n\nfixed bugs\n~~~~~~~~~~\n\n- now papers over the api differences in versions of requests installed from\n  system packages versus versions of requests installed from pypi.\n\n- allow string types for ``sourceaddressadapter``.\n\n0.4.0 -- 2015-04-03\n-------------------\n\nfor more information about this release, please see `milestone 0.4.0\n<https://github.com/requests/toolbelt/issues?q=milestone%3a0.4>`_\non the project's page.\n\nnew features\n~~~~~~~~~~~~\n\n- a naive implemenation of a thread pool is now included in the toolbelt. see\n  the docs in ``docs/threading.rst`` or on `read the docs\n  <https://toolbelt.readthedocs.io/>`_.\n\n- the ``streamingiterator`` now accepts files (such as ``sys.stdin``) without\n  a specific length and will properly stream them.\n\n- the ``multipartencoder`` now accepts exactly the same format of fields as\n  requests' ``files`` parameter does. in other words, you can now also pass in\n  extra headers to add to a part in the body. you can also now specify a\n  custom ``content-type`` for a part.\n\n- an implementation of http digest authentication for proxies is now included.\n\n- a transport adapter that allows a user to specify a specific certificate\n  fingerprint is now included in the toolbelt.\n\n- a transport adapter that simplifies how users specify socket options is now\n  included.\n\n- a transport adapter that simplifies how users can specify tcp keep-alive\n  options is now included in the toolbelt.\n\n- deprecated functions from ``requests.utils`` are now included and\n  maintained.\n\n- an authentication tool that allows users to specify how to authenticate to\n  several different domains at once is now included.\n\n- a function to save streamed responses to disk by analyzing the\n  ``content-disposition`` header is now included in the toolbelt.\n\nfixed bugs\n~~~~~~~~~~\n\n- the ``multipartencoder`` will now allow users to upload files larger than\n  4gb on 32-bit systems.\n\n- the ``multipartencoder`` will now accept empty unicode strings for form\n  values.\n\n0.3.1 -- 2014-06-23\n-------------------\n\n- fix the fact that 0.3.0 bundle did not include the ``streamingiterator``\n\n0.3.0 -- 2014-05-21\n-------------------\n\nbug fixes\n~~~~~~~~~\n\n- complete rewrite of ``multipartencoder`` fixes bug where bytes were lost in\n  uploads\n\nnew features\n~~~~~~~~~~~~\n\n- ``multipartdecoder`` to accept ``multipart/form-data`` response bodies and\n  parse them into an easy to use object.\n\n- ``sourceaddressadapter`` to allow users to choose a local address to bind\n  connections to.\n\n- ``guessauth`` which accepts a username and password and uses the\n  ``www-authenticate`` header to determine how to authenticate against a\n  server.\n\n- ``multipartencodermonitor`` wraps an instance of the ``multipartencoder``\n  and keeps track of how many bytes were read and will call the provided\n  callback.\n\n- ``streamingiterator`` will wrap an iterator and stream the upload instead of\n  chunk it, provided you also provide the length of the content you wish to\n  upload.\n\n0.2.0 -- 2014-02-24\n-------------------\n\n- add ability to tell ``multipartencoder`` which encoding to use. by default\n  it uses 'utf-8'.\n\n- fix #10 - allow users to install with pip\n\n- fix #9 - fix ``multipartencoder#to_string`` so that it properly handles file\n  objects as fields\n\n0.1.2 -- 2014-01-19\n-------------------\n\n- at some point during development we broke how we handle normal file objects.\n  thanks to @konomae this is now fixed.\n\n0.1.1 -- 2014-01-19\n-------------------\n\n- handle ``io.bytesio``-like objects better\n\n0.1.0 -- 2014-01-18\n-------------------\n\n- add initial implementation of the streaming ``multipartencoder``\n\n- add initial implementation of the ``user_agent`` function\n\n- add the ``ssladapter``\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2.0",
  "name": "requests-toolbelt",
  "package_url": "https://pypi.org/project/requests-toolbelt/",
  "project_url": "https://pypi.org/project/requests-toolbelt/",
  "project_urls": {
    "Changelog": "https://github.com/requests/toolbelt/blob/master/HISTORY.rst",
    "Homepage": "https://toolbelt.readthedocs.io/",
    "Source": "https://github.com/requests/toolbelt"
  },
  "release_url": "https://pypi.org/project/requests-toolbelt/1.0.0/",
  "requires_dist": [
    "requests (<3.0.0,>=2.0.1)"
  ],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
  "summary": "a utility belt for advanced users of python-requests",
  "version": "1.0.0",
  "releases": [],
  "developers": [
    "graffatcolmingov@gmail.com",
    "ian_cordasco"
  ],
  "kwds": "requests_toolbelt pip multipartdecoder requests multipartencoder",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_requests_toolbelt",
  "homepage": "https://toolbelt.readthedocs.io/",
  "release_count": 21,
  "dependency_ids": [
    "pypi_requests"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "license :: other/proprietary license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing",
    "topic :: utilities"
  ],
  "description": "mock object framework\npowerful and intuitive mock object framework for python.\n\n|package-version|\n|python-versions|\n|documentation status|\n\ninstall\n-------\n\n.. code:: bash\n\n   pip install pymox\n\ntutorial\n--------\n\nbasics\n~~~~~~\n\npymox works in a way you set expectations and then enter in replay mode.\nhere is a basic example:\n\n.. code:: python\n\n   class duck:\n       def quack(self, times=1):\n           return ['quack'] * times\n\n       def walk(self):\n           return ['walking']\n\n       def walk_and_quack(self, times=1):\n           return self.walk() + self.quack(times=times)\n\nhere is a ``duck`` class. let's play with our \ud83e\udd86 and pymox!\n\n.. code:: python\n\n   import mox\n\n\n   class testduck:\n\n       def test_quack(self):\n           m = mox.mox()\n           m_duck = m.createmock(duck)\n\n           # expects quack to be called with `times=1`\n           m_duck.quack(times=1).returns(['new quack'])\n\n           m.replay_all()\n           assert m_duck.quack(times=1) == ['new quack']\n           m.verify_all()\n\nlet's change the test a little bit:\n\n.. code:: python\n\n       # [...]\n       def test_quack_2(self):\n           m = mox.mox()\n           m_duck = m.createmock(duck)\n\n           # expects quack to be called with `times=1`\n           m_duck.quack(times=1).returns(['new quack'])\n\n           m.replay_all()\n           assert m_duck.walk() == ['walking']\n           assert m_duck.quack(times=1) == ['new quack']\n           m.verify_all()\n\nthe test above will fail with the following error:\n\n.. code:: python-traceback\n\n       e           mox.mox.unexpectedmethodcallerror: unexpected method call.  unexpected:-  expected:+\n       e           - duck.walk() -> none\n       e           + duck.quack(times=1) -> ['new quack']\n\nsince you expected quack to be called and walk was called instead. you\ncan add an expectation for walk:\n\n.. code:: python\n\n       def test_quack_3(self):\n           m = mox.mox()\n           m_duck = m.createmock(duck)\n\n           # expects quack to be called with `times=1`\n           m_duck.quack(times=1).returns(['new quack'])\n           m_duck.walk().returns(['pretending to be walking'])\n\n           m.replay_all()\n           assert m_duck.quack(times=1) == ['new quack']\n           assert m_duck.walk() == ['pretending to be walking']\n           m.verify_all()\n\nyou can also stub out ``quack`` method only and mox won't care about the\nother methods:\n\n.. code:: python\n\n       def test_quack_4(self):\n           m = mox.mox()\n           duck = duck()\n\n           m.stubout(duck, 'quack')\n           \"\"\"\n           you can also do with the class:\n           m.stubout(duck, 'quack')\n           \"\"\"\n\n           # expects quack to be called with `times=1`\n           duck.quack(times=1).returns(['new quack'])\n\n           m.replay_all()\n           assert duck.quack(times=1) == ['new quack']\n           assert duck.walk() == ['walking']\n           m.verify_all()\n\nthe order matters, so if you do:\n\n.. code:: python\n\n       def test_quack_5(self):\n           m = mox.mox()\n           m_duck = m.createmock(duck)\n\n           # expects quack to be called with `times=1`\n           m_duck.quack(times=1).returns(['new quack'])\n           m_duck.walk().returns(['pretending to be walking'])\n\n           m.replay_all()\n           assert m_duck.walk() == ['pretending to be walking']\n           assert m_duck.quack(times=1) == ['new quack']\n           m.verify_all()\n\nit fails with:\n\n.. code:: python-traceback\n\n       e           mox.mox.unexpectedmethodcallerror: unexpected method call.  unexpected:-  expected:+\n       e           - duck.walk() -> none\n       e           + duck.quack(times=1) -> ['new quack']\n\nto fix that you can use ``any_order()``:\n\n.. code:: python\n\n       def test_quack_6(self):\n           m = mox.mox()\n           m_duck = m.createmock(duck)\n\n           # expects quack to be called with `times=1`\n           m_duck.quack(times=1).any_order().returns(['new quack'])\n           m_duck.walk().any_order().returns(['pretending to be walking'])\n\n           m.replay_all()\n           assert m_duck.walk() == ['pretending to be walking']\n           assert m_duck.quack(times=1) == ['new quack']\n\ncomparators\n~~~~~~~~~~~\n\nyou can use comparators when you are unsure of the arguments of a method\ncall.\n\n.. code:: python\n\n       def test_quack_7(self):\n           m = mox.mox()\n           duck = duck()\n\n           m.stubout(duck, 'quack')\n\n           def validate_arg(arg):\n            if arg in [1, 2, 3]:\n             return true\n            return false\n\n           duck.quack(times=mox.is_a(int)).returns(['new quack'])\n           duck.quack(times=mox.not_(mox.is_(4))).returns(['new quack'])\n           duck.quack(times=mox.func(validate_arg)).returns(['new quack'])\n           duck.quack(times=mox.or_(mox.is(1), mox.is_(2), mox.is_(3))).returns(['new quack'])\n\n           duck.quack(times=mox.ignore_arg()).returns(['new quack'])\n           duck.quack(times=mox.is_almost(1.00003, places=4)).returns(['new quack'])\n\n           m.replay_all()\n           assert duck.quack(times=random.choice([1, 2, 3])) == ['new quack']\n           assert duck.quack(times=random.choice([1, 2, 3])) == mox.in_('new quack')\n           assert duck.quack(times=random.choice([1, 2, 3]))[0] == mox.str_contains('quack')\n           assert duck.quack(times=random.choice([1, 2, 3])) == mox.same_elements_as({'new quack'})\n\n           assert duck.quack(times=random.choice([1, 2, 3])) == ['new quack']\n           assert duck.quack(times=1) == ['new quack']\n           m.verify_all()\n\nall the assertions for the test above should pass. there are other cool\ncomparators, like: ``and``, ``contains_attribute_value``,\n``contains_key_value``.\n\nfor more comparators, see:\nhttps://pymox.readthedocs.io/en/latest/reference.html#comparators\n\nremember\n~~~~~~~~\n\nit's possible to also remember a value that might be changed in your\ncode. see the test below:\n\n.. code:: python\n\n       def test_quack_8(self):\n\n           class stopquackingduck:\n\n               def _do_quack(self, choices=none):\n                   return choices\n\n               def quack(self, choices=[], less=false):\n                   if less:\n                       choices.pop()\n                   self._do_quack(choices=choices)\n\n           m = mox.mox()\n           duck = stopquackingduck()\n\n           m.stubout(stopquackingduck, '_do_quack')\n\n           choices_1 = mox.value()\n           choices_2 = mox.value()\n           duck._do_quack(choices=mox.remember(choices_1))\n           duck._do_quack(choices=mox.remember(choices_2))\n           duck._do_quack(choices=mox.remember(choices_2))\n           duck._do_quack(choices=mox.remember(choices_2))\n\n           all_choices = ['quack', 'new quack', 'newest quack']\n\n           m.replay_all()\n           duck.quack(all_choices, less=false)\n           assert choices_1 == ['quack', 'new quack', 'newest quack']\n\n           duck.quack(all_choices, less=true)\n           assert choices_2 == ['quack', 'new quack']\n\n           duck.quack(all_choices, less=true)\n           assert choices_2 == ['quack']\n\n           duck.quack(all_choices, less=true)\n           assert choices_2 == []\n           m.verify_all()\n\nother\n~~~~~\n\nyou can also make a method return a different value the second time it's\ncalled:\n\n.. code:: python\n\n       def test_walk_and_quack_0(self):\n           m = mox.mox()\n           duck = duck()\n\n           m.stubout(duck, 'quack')\n\n           duck.quack(times=1).returns(['new quack'])\n           duck.quack(times=1).returns(['newest quack'])\n\n           m.replay_all()\n           assert duck.walk_and_quack() == ['walking', 'new quack']\n\nbut since we didn't use m.verify_all(), it didn't require the second\ncall to happen. let's add the verify and see what happens:\n\n.. code:: python\n\n       def test_walk_and_quack_1(self):\n           m = mox.mox()\n           duck = duck()\n\n           m.stubout(duck, 'quack')\n\n           duck.quack(times=1).returns(['new quack'])\n           duck.quack(times=1).returns(['newest quack'])\n\n           m.replay_all()\n           assert duck.walk_and_quack() == ['walking', 'new quack']\n           m.verify_all()\n\nit fails with:\n\n.. code:: python-traceback\n\n       e           mox.mox.expectedmethodcallserror: verify: expected methods never called:\n       e             0.  duck.quack.__call__(times=1) -> ['newest quack']\n\nlet's fix it by adding a second call:\n\n.. code:: python\n\n       def test_walk_and_quack_2(self):\n           m = mox.mox()\n           duck = duck()\n\n           m.stubout(duck, 'quack')\n\n           duck.quack(times=1).returns(['new quack'])\n           duck.quack(times=1).returns(['newest quack'])\n\n           m.replay_all()\n           assert duck.walk_and_quack() == ['walking', 'new quack']\n           assert duck.walk_and_quack() == ['walking', 'new quack']\n           m.verify_all()\n\nnow you get the following error, since in the second time it returns\n['newest quack'].\n\n.. code:: python-traceback\n\n       e       assertionerror: assert ['walking', 'newest quack'] == ['walking', 'new quack']\n       e         at index 1 diff: 'newest quack' != 'new quack'\n       e         full diff:\n       e         - ['walking', 'new quack']\n       e         + ['walking', 'newest quack']\n       e         ?                 +++\n\nlet's fix it:\n\n.. code:: python\n\n       def test_walk_and_quack_3(self):\n           m = mox.mox()\n           duck = duck()\n\n           m.stubout(duck, 'quack')\n\n           duck.quack(times=1).returns(['new quack'])\n           duck.quack(times=1).returns(['newest quack'])\n\n           m.replay_all()\n           assert duck.walk_and_quack() == ['walking', 'new quack']\n           assert duck.walk_and_quack() == ['walking', 'newest quack']\n           m.verify_all()\n\nlet's now see how we can mock and assert calls in the context of a loop:\n\n.. code:: python\n\n       def test_walk_and_quack_4(self):\n           m = mox.mox()\n           duck = duck()\n\n           m.stubout(duck, 'quack')\n\n           duck.quack(times=1).returns(['new quack'])\n\n           m.replay_all()\n           assert duck.walk() == ['walking']\n           for _ in range(3):\n               assert duck.walk_and_quack() == ['walking', 'new quack']\n           m.verify_all()\n\nif you run the test above, you get the following:\n\n.. code:: python-traceback\n\n       e           mox.mox.unexpectedmethodcallerror: unexpected method call duck.quack.__call__(times=1) -> none\n\nlet's fix by using the ``multiple_times`` group.\n\n.. code:: python\n\n       def test_walk_and_quack_5(self):\n           m = mox.mox()\n           duck = duck()\n\n           m.stubout(duck, 'quack')\n\n           duck.quack(times=1).multiple_times().returns(['new quack'])\n\n           m.replay_all()\n           assert duck.walk() == ['walking']\n           for _ in range(3):\n               assert duck.walk_and_quack() == ['walking', 'new quack']\n           m.verify_all()\n\nif you know exactly how many calls are made, you can add an argument:\n``.multiple_times(3)``.\n\nnext\n~~~~\n\nthat's it for now! for a more comprehensive tutorial, see:\nhttps://pymox.readthedocs.io/en/latest/tutorial.html\n\nfor more examples, see:\nhttps://pymox.readthedocs.io/en/latest/examples.html\n\nfor the api reference, see:\nhttps://pymox.readthedocs.io/en/latest/reference.html\n\ndocumentation\n-------------\n\nfor full documentation, including installation, tutorials and pdf\ndocuments, please see http://pymox.rtfd.io/.\n\nhttp://pymox.readthedocs.io/en/latest/index.html\n\ndisclaimer\n----------\n\npymox is a fork of mox. mox is copyright 2008 google inc, and licensed\nunder the apache license, version 2.0; see the file copying for details.\n\n.. |package-version| image:: https://badge.fury.io/py/pymox.svg\n.. |python-versions| image:: https://img.shields.io/pypi/pyversions/pymox.svg\n.. |documentation status| image:: https://readthedocs.org/projects/pymox/badge/?version=latest\n\n",
  "docs_url": null,
  "keywords": "mox,mock,test,mocking,unittest,pymox",
  "license": "apache license, version 2.0",
  "name": "pymox",
  "package_url": "https://pypi.org/project/pymox/",
  "project_url": "https://pypi.org/project/pymox/",
  "project_urls": {
    "Homepage": "http://pymox.rtfd.io",
    "Repository": "https://github.com/ivancrneto/pymox"
  },
  "release_url": "https://pypi.org/project/pymox/1.1.0/",
  "requires_dist": [],
  "requires_python": ">=3.3,<4",
  "summary": "mock object framework",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "ivan.cr.neto@gmail.com",
    "ivan_neto"
  ],
  "kwds": "test_walk_and_quack_0 test_walk_and_quack_1 test_walk_and_quack_2 test_walk_and_quack_3 test_walk_and_quack_5",
  "license_kwds": "apache license, version 2.0",
  "libtype": "pypi",
  "id": "pypi_pymox",
  "homepage": "http://pymox.rtfd.io",
  "release_count": 12,
  "dependency_ids": [],
  "documentation_summary": "The HTML text provides information about \"pymox,\" a Python package available on PyPI (Python Package Index) for advanced mocking in unit tests, described as \"mocking on steroids.\" It emphasizes the ease, speed, and intuitiveness of writing tests with pymox. The latest version, 1.4.1, was released on January 27, 2024. The package offers features like async support, decorators, and various ways to assert expectations in tests, including handling unexpected method calls, accessing dictionary elements, and using comparators for more flexible assertions. It also introduces concepts like \"Remember\" and \"Value\" for deeper codebase testing and provides examples of usage in both modern and classic testing approaches. The document includes links to project resources like documentation, changelogs, and statistics, and mentions the maintainer, Ivan Cr Neto. Additionally, it warns users about potential issues with JavaScript disabled browsers and unsupported browser versions, specifically targeting Internet Explorer 9 and below.",
  "embedding": [
    -0.021478937938809395,
    -0.006669481750577688,
    -0.0061363414861261845,
    -0.02157650515437126,
    -0.01792466826736927,
    0.03088729828596115,
    0.0012692575110122561,
    -0.044797733426094055,
    -0.02221766859292984,
    -0.014774610288441181,
    -0.005645016208291054,
    -0.020294182002544403,
    0.005422003101557493,
    0.014718856662511826,
    -0.012830215506255627,
    0.006188610102981329,
    0.007132930681109428,
    -0.012537511065602303,
    -0.010070430114865303,
    -0.017395012080669403,
    0.0342324934899807,
    0.01888641156256199,
    -0.031890854239463806,
    -0.017590148374438286,
    -0.010676746256649494,
    0.02140924520790577,
    -0.0015384410507977009,
    -0.02189708687365055,
    0.011073987931013107,
    0.0075406264513731,
    0.02860141545534134,
    0.00014624337200075388,
    -0.03743830323219299,
    -0.0007883857470005751,
    -0.011582736857235432,
    -0.012244806624948978,
    0.00912262499332428,
    0.0034723817370831966,
    0.044797733426094055,
    -0.008669629693031311,
    0.014593412168323994,
    -0.010391010902822018,
    0.0017196391709148884,
    -0.014565534889698029,
    -0.024935638532042503,
    -0.0034758662804961205,
    0.009471082128584385,
    -0.021701950579881668,
    -0.01798042096197605,
    -0.004843563307076693,
    0.033340439200401306,
    0.00731761334463954,
    -0.0028155387844890356,
    -0.0002711437118705362,
    0.036936525255441666,
    -0.01093460526317358,
    0.0226218793541193,
    0.018468262627720833,
    -0.004871439654380083,
    -0.010286473669111729,
    -0.012439942918717861,
    0.000906861387193203,
    -0.030524902045726776,
    0.007735762745141983,
    0.002345120767131448,
    0.018844597041606903,
    -0.02355574630200863,
    0.019039733335375786,
    -0.013520161621272564,
    -0.011784842237830162,
    0.03389797359704971,
    0.026984570547938347,
    0.011499106884002686,
    -0.017645901069045067,
    0.05382975935935974,
    -0.007777577731758356,
    -0.011060049757361412,
    0.021604381501674652,
    -0.003000221448019147,
    -0.015847859904170036,
    0.010446764528751373,
    -0.0029200762510299683,
    -0.0020994581282138824,
    0.05293770506978035,
    0.036825019866228104,
    0.031193939968943596,
    0.015569093637168407,
    0.006463891826570034,
    0.005083999130874872,
    0.0003521601320244372,
    0.021952839568257332,
    0.006801895797252655,
    0.005310496781021357,
    0.03088729828596115,
    -0.008028467185795307,
    0.04209370166063309,
    -0.033981602638959885,
    0.027946313843131065,
    0.011213371530175209,
    -0.03211386874318123,
    0.014265861362218857,
    0.0063070859760046005,
    -0.020809898152947426,
    -0.008133004419505596,
    -0.03643474727869034,
    0.002233614446595311,
    -0.006530098617076874,
    -0.0175483338534832,
    0.023834511637687683,
    0.03872063010931015,
    -0.02433629147708416,
    0.05001065880060196,
    0.01467704214155674,
    -0.05820638686418533,
    0.014398275874555111,
    -0.019834216684103012,
    0.02044750191271305,
    -0.019820278510451317,
    0.0023311825934797525,
    0.019569389522075653,
    0.00733852107077837,
    0.014467966742813587,
    0.019527573138475418,
    -0.011638489551842213,
    0.018816720694303513,
    -0.02108866535127163,
    0.0041640703566372395,
    -0.01650295965373516,
    0.007979683578014374,
    -0.004610096570104361,
    0.015290327370166779,
    0.027277275919914246,
    0.016029058024287224,
    -0.000951289723161608,
    -0.004700695630162954,
    0.002109911758452654,
    -0.024921700358390808,
    -0.0027563010808080435,
    -0.02227342128753662,
    -0.014886116608977318,
    0.003291183849796653,
    0.004958554171025753,
    -0.011547890491783619,
    0.004136194009333849,
    -0.01894216425716877,
    0.04895135015249252,
    0.009680157527327538,
    -0.017018677666783333,
    0.015819983556866646,
    0.0006485670455731452,
    0.0300231222063303,
    -0.008850827813148499,
    -0.0028329617343842983,
    0.010913698002696037,
    -0.018370693549513817,
    0.019193055108189583,
    0.0028765189927071333,
    0.017297444865107536,
    -0.0043870834633708,
    0.00862781424075365,
    -0.0059098438359797,
    0.03518029674887657,
    -0.015137005597352982,
    -0.012913845479488373,
    -0.018064051866531372,
    0.01583392173051834,
    0.03347982466220856,
    0.005080514587461948,
    -0.03442762792110443,
    0.006477830000221729,
    -0.0013372066896408796,
    -0.003364359959959984,
    -0.045466769486665726,
    0.02651066705584526,
    0.0028608383145183325,
    0.014133447781205177,
    0.013722267001867294,
    0.005132783204317093,
    -0.020670516416430473,
    0.008404801599681377,
    0.0009260265505872667,
    0.011060049757361412,
    0.009450174868106842,
    0.02087959088385105,
    -0.02940983697772026,
    -0.008098158985376358,
    -0.0275560412555933,
    -0.013046259060502052,
    -0.0055822934955358505,
    0.021241987124085426,
    0.013638637959957123,
    0.034734271466732025,
    -0.0038225818425416946,
    -0.02106078900396824,
    -0.5869701504707336,
    0.021980715915560722,
    -0.020809898152947426,
    -0.020252365618944168,
    0.014056786894798279,
    0.016224194318056107,
    0.01007739920169115,
    -0.007024908903986216,
    -0.02108866535127163,
    0.03487365320324898,
    -0.028099635615944862,
    0.015555155463516712,
    0.01055827084928751,
    -0.005561386235058308,
    -0.025367725640535355,
    -0.017102308571338654,
    0.02860141545534134,
    -0.03849761560559273,
    -0.0006516160210594535,
    0.014649164862930775,
    0.007157322950661182,
    0.031918734312057495,
    -0.022677632048726082,
    0.017854977399110794,
    -0.019443944096565247,
    0.005341857671737671,
    -0.01241206657141447,
    -0.0002162616146961227,
    0.03244838863611221,
    0.024238722398877144,
    -0.02529803477227688,
    0.012823246419429779,
    0.019917847588658333,
    -0.017367135733366013,
    0.06071528419852257,
    0.007805454079061747,
    -0.02578587643802166,
    0.04069986939430237,
    -0.0011960812844336033,
    0.04638670012354851,
    0.007118992507457733,
    0.0035159389954060316,
    0.004035141319036484,
    0.011429415084421635,
    -0.0056066857650876045,
    0.0016438495367765427,
    0.01575029082596302,
    0.015889674425125122,
    0.0020419626962393522,
    -0.017478642985224724,
    -0.006686904933303595,
    -0.008795074187219143,
    7.55173314246349e-05,
    -0.0034131440334022045,
    0.013994064182043076,
    0.009471082128584385,
    0.01601511985063553,
    0.0026291138492524624,
    -0.004812201950699091,
    0.0034044324420392513,
    -0.010579178109765053,
    0.019848154857754707,
    0.019862093031406403,
    -0.01254448015242815,
    -0.01926274597644806,
    0.04092288017272949,
    0.0005936849629506469,
    0.003697137115523219,
    0.013966187834739685,
    -0.039083026349544525,
    0.026691865175962448,
    0.008913549594581127,
    -0.023360610008239746,
    -0.018412509933114052,
    0.02474050223827362,
    0.03796796128153801,
    0.01908154785633087,
    -0.007213076110929251,
    -0.00615027965977788,
    0.017395012080669403,
    0.019973600283265114,
    0.0038260663859546185,
    -0.01711624674499035,
    -0.03718741610646248,
    0.07013758271932602,
    0.005697284825146198,
    -0.029744356870651245,
    -0.007261860184371471,
    0.022663693875074387,
    0.0013572430470958352,
    0.012690831907093525,
    0.022036470472812653,
    -0.006913402583450079,
    -0.00781939271837473,
    0.007756670005619526,
    0.02108866535127163,
    -0.03155633807182312,
    0.0035716921556741,
    0.005111875478178263,
    -0.031807225197553635,
    -0.015234573744237423,
    0.003805158892646432,
    0.0020576431415975094,
    0.014035879634320736,
    0.0035629807971417904,
    0.015095191076397896,
    -0.023109719157218933,
    0.03456701338291168,
    -0.0006956088473089039,
    -0.013784989714622498,
    0.009742879308760166,
    -0.035403311252593994,
    0.020642638206481934,
    -0.01566666178405285,
    -0.014872178435325623,
    -0.042623355984687805,
    0.010885820724070072,
    -0.012642048299312592,
    0.0034445051569491625,
    -0.00353858876042068,
    -0.0033260295167565346,
    -0.01743682660162449,
    0.0021464999299496412,
    0.01353409979492426,
    0.02465687319636345,
    -0.0018537953728809953,
    0.005700769368559122,
    -0.02111654169857502,
    -0.01818949542939663,
    0.014941869303584099,
    -0.00643949955701828,
    -0.013157765381038189,
    0.016976863145828247,
    -0.0021552112884819508,
    0.021604381501674652,
    0.020837774500250816,
    0.02390420436859131,
    -0.02874079719185829,
    0.01998753845691681,
    0.0045682815834879875,
    -0.003815612755715847,
    0.01214026939123869,
    0.003728498239070177,
    -0.02538166381418705,
    -0.004115286283195019,
    -0.04145253822207451,
    -0.02065657638013363,
    -0.0030612016562372446,
    0.0028347040060907602,
    0.002543741837143898,
    0.015401833690702915,
    -0.00894839596003294,
    -0.02621796354651451,
    0.022022532299160957,
    -0.012809308245778084,
    0.0004547373973764479,
    -0.036155980080366135,
    0.005352311301976442,
    -0.013088074512779713,
    -0.0026273715775460005,
    -0.006530098617076874,
    0.026036765426397324,
    -0.016781726852059364,
    0.012830215506255627,
    -0.006244363263249397,
    -0.016990801319479942,
    -0.03163996711373329,
    0.019332436844706535,
    -0.00880204327404499,
    -0.03487365320324898,
    -0.012774461880326271,
    -0.004996884614229202,
    0.004275577142834663,
    -0.00593075156211853,
    0.007125961594283581,
    0.010321319103240967,
    -0.019416067749261856,
    -0.007763639558106661,
    -0.0013093301095068455,
    -0.01711624674499035,
    0.011025204323232174,
    0.03498516231775284,
    -0.04488136246800423,
    -0.02476837858557701,
    0.005941205192357302,
    0.0001802180049708113,
    0.0025559377390891314,
    0.02221766859292984,
    -0.004414960276335478,
    0.012307528406381607,
    0.015875736251473427,
    0.015206697396934032,
    -0.0240714643150568,
    0.01357591524720192,
    -0.022175852209329605,
    -0.025618616491556168,
    0.02621796354651451,
    0.007352459244430065,
    0.02616221085190773,
    0.05505632981657982,
    0.02816932648420334,
    -0.008028467185795307,
    0.006118918769061565,
    -0.01789679192006588,
    0.0047355410642921925,
    -0.012628110125660896,
    0.018788844347000122,
    -0.0029636335093528032,
    0.021046850830316544,
    0.003259822493419051,
    0.013088074512779713,
    -0.015945427119731903,
    -0.03437187522649765,
    0.00046911128447391093,
    0.023472115397453308,
    0.020670516416430473,
    -0.024921700358390808,
    0.03559844568371773,
    -0.021674074232578278,
    -0.017213813960552216,
    -0.007443058304488659,
    0.02706819958984852,
    -0.0002428315201541409,
    0.02720758318901062,
    0.011882410384714603,
    -0.020698392763733864,
    -0.007568502798676491,
    0.01347137801349163,
    0.016252070665359497,
    -0.006042257882654667,
    -0.005310496781021357,
    0.022092223167419434,
    0.024921700358390808,
    -0.03074791468679905,
    0.04309725761413574,
    -0.005456849001348019,
    0.049034979194402695,
    -0.021646197885274887,
    0.027514226734638214,
    -0.01743682660162449,
    0.008146942593157291,
    0.021952839568257332,
    0.025158651173114777,
    -0.01505337655544281,
    0.010802190750837326,
    -0.0050979373045265675,
    0.011568798683583736,
    0.010983388870954514,
    -0.009422298520803452,
    0.0009025056497193873,
    0.012000885792076588,
    0.0044219293631613255,
    0.004826140124350786,
    0.010739468969404697,
    0.010837037116289139,
    -0.01041191816329956,
    -0.009101716801524162,
    0.017534395679831505,
    0.01958332769572735,
    -0.0010192389599978924,
    0.00289742648601532,
    -0.011471230536699295,
    0.016238132491707802,
    0.03359133005142212,
    0.04161979630589485,
    -0.03150058165192604,
    -0.009025056846439838,
    -0.04125740006566048,
    -0.006122403312474489,
    -0.03456701338291168,
    -0.022426743060350418,
    -0.012028762139379978,
    -0.024322353303432465,
    -0.021562566980719566,
    0.0348179005086422,
    -0.009059902280569077,
    0.019039733335375786,
    0.028099635615944862,
    0.008523277007043362,
    -0.02213403768837452,
    -0.023388486355543137,
    -0.03637899085879326,
    0.024405982345342636,
    0.004941131453961134,
    -0.0011281321058049798,
    -0.022524310275912285,
    -0.04095075652003288,
    -0.020252365618944168,
    -0.006010896526277065,
    0.019457882270216942,
    0.009756817482411861,
    -0.010147091001272202,
    0.00022170625743456185,
    -0.010823098942637444,
    -0.01926274597644806,
    0.00418497808277607,
    0.01706049218773842,
    -0.006042257882654667,
    -0.004962038714438677,
    -0.0200154148042202,
    0.014251923188567162,
    0.008613876067101955,
    0.008857796899974346,
    -0.0029810562264174223,
    0.01467704214155674,
    0.0018346302676945925,
    0.00045125282485969365,
    -0.031890854239463806,
    -0.027193645015358925,
    -0.01668415777385235,
    0.013959218747913837,
    0.008836889639496803,
    -0.009708033874630928,
    -0.020057229325175285,
    -0.000215826032217592,
    -0.010871882550418377,
    0.0018816720694303513,
    -0.014244954101741314,
    0.02932620607316494,
    0.001138585852459073,
    -0.009059902280569077,
    -0.013889526948332787,
    -0.01542971096932888,
    0.0014983684523031116,
    0.031946610659360886,
    0.019527573138475418,
    0.01687929406762123,
    -0.0014173520030453801,
    -0.03629536181688309,
    -0.021590443328022957,
    -0.020963219925761223,
    -0.005021276418119669,
    0.022872768342494965,
    0.010279504582285881,
    -0.011694243177771568,
    0.03230900689959526,
    0.006314055062830448,
    -0.005408064927905798,
    0.007352459244430065,
    -0.0015332142356783152,
    -0.019527573138475418,
    0.008795074187219143,
    -0.019792402163147926,
    -0.00932473037391901,
    -0.008383894339203835,
    -0.010328288190066814,
    -0.001479203230701387,
    -0.004749479703605175,
    0.019485758617520332,
    0.018287064507603645,
    0.013931342400610447,
    0.02761179395020008,
    -0.001550637069158256,
    -0.02230129763484001,
    -0.011694243177771568,
    -0.026761557906866074,
    0.012335405685007572,
    0.021283801645040512,
    -0.008892642334103584,
    0.029660725966095924,
    0.010049521923065186,
    0.031054558232426643,
    -0.024378105998039246,
    0.007066723890602589,
    0.0031221816316246986,
    0.0022719446569681168,
    -0.005780914798378944,
    0.013555007986724377,
    0.031974487006664276,
    -0.006652059033513069,
    0.011408507823944092,
    0.0069621866568923,
    -0.0024635964073240757,
    -0.027514226734638214,
    -0.004251184873282909,
    0.0019862093031406403,
    -0.022147975862026215,
    -0.030413394793868065,
    0.0420658215880394,
    -0.013108981773257256,
    0.003320802701637149,
    -0.009610465727746487,
    -0.016962924972176552,
    -0.013966187834739685,
    -0.01763196289539337,
    -0.029103193432092667,
    0.005230351351201534,
    -0.005247774068266153,
    -0.016976863145828247,
    -0.0007461352506652474,
    -0.011540921404957771,
    0.019011856988072395,
    -0.045522525906562805,
    -0.0093526067212224,
    -0.002090746769681573,
    -0.017799222841858864,
    -0.00010290394129697233,
    -0.02302609011530876,
    0.034790024161338806,
    0.00929685402661562,
    0.009610465727746487,
    8.591662481194362e-05,
    0.0049690078012645245,
    -0.013875588774681091,
    0.02106078900396824,
    -0.017729531973600388,
    -0.008418739773333073,
    -0.014927931129932404,
    0.023193350061774254,
    0.016516899690032005,
    0.029632849618792534,
    -0.013548038899898529,
    -0.019220931455492973,
    0.03303379938006401,
    0.01470491848886013,
    0.010418887250125408,
    -0.009610465727746487,
    -0.018468262627720833,
    -0.013478347100317478,
    0.004972492344677448,
    -0.018314940854907036,
    0.02178557962179184,
    -0.0022580064833164215,
    -0.00802149809896946,
    -0.010899759829044342,
    -0.0472787506878376,
    0.0016438495367765427,
    -0.002282398520037532,
    0.0034863201435655355,
    -0.0124747883528471,
    -0.02425266243517399,
    0.027374843135476112,
    -0.05012216791510582,
    -0.0008267160737887025,
    0.03214174509048462,
    -0.027096077799797058,
    -0.008516307920217514,
    0.021423185244202614,
    0.000702142424415797,
    -0.002775466302409768,
    -0.024782316759228706,
    0.05650591477751732,
    -0.02645491436123848,
    -0.011979978531599045,
    0.004721602890640497,
    -0.016405392438173294,
    0.007909991778433323,
    0.01853795349597931,
    -0.02651066705584526,
    0.001885156612843275,
    -0.022357050329446793,
    -0.00987529382109642,
    -0.001710056560114026,
    0.026343408972024918,
    0.036936525255441666,
    0.011533952318131924,
    -0.00965924933552742,
    -0.04371054470539093,
    0.012112392112612724,
    0.00011226873903069645,
    -0.013290179893374443,
    -0.0021691496949642897,
    -8.54266036185436e-05,
    0.0051397522911429405,
    -0.005829698871821165,
    -0.0059202974662184715,
    -0.015150944702327251,
    -0.026845186948776245,
    0.02529803477227688,
    -0.035514816641807556,
    -0.012690831907093525,
    0.00418497808277607,
    -0.006833257153630257,
    -0.004533435683697462,
    0.0018799296813085675,
    -0.0005849734880030155,
    -0.019443944096565247,
    -0.0035298774018883705,
    0.006098011042922735,
    -0.0066032749600708485,
    -0.00011194206308573484,
    -0.004522982053458691,
    0.01267689373344183,
    0.025632554665207863,
    0.036936525255441666,
    0.006997032091021538,
    0.01542971096932888,
    0.007394274231046438,
    0.006355870049446821,
    -0.005739099811762571,
    -0.019889969378709793,
    0.0055822934955358505,
    0.005854090675711632,
    0.008516307920217514,
    -0.005596232134848833,
    0.012621141038835049,
    -0.008063312619924545,
    -0.005219897720962763,
    -0.011784842237830162,
    0.020782021805644035,
    -0.012774461880326271,
    0.02439204417169094,
    -0.00963137298822403,
    0.005359280854463577,
    0.0037354673258960247,
    -0.0046310038305819035,
    -0.009694095700979233,
    0.010133151896297932,
    -0.013966187834739685,
    -0.01302535180002451,
    0.022607941180467606,
    -0.001710056560114026,
    0.01940212957561016,
    0.017757408320903778,
    0.014196169562637806,
    -0.03518029674887657,
    0.026580359786748886,
    0.026148272678256035,
    0.012202991172671318,
    -0.01867733709514141,
    -0.004425413906574249,
    -0.03462276607751846,
    0.00538018811494112,
    -0.007596379611641169,
    -0.009512897580862045,
    0.045355264097452164,
    0.00020951023907400668,
    0.0379958376288414,
    -0.007965744473040104,
    0.024893824011087418,
    -0.01536001916974783,
    -0.020085105672478676,
    0.009687126614153385,
    -0.014454028569161892,
    -0.01760408654808998,
    -0.012154207564890385,
    -0.016377516090869904,
    -0.021297739818692207,
    0.01395224966108799,
    0.019443944096565247,
    0.013359871692955494,
    0.005878482945263386,
    -0.012823246419429779,
    -0.008105128072202206,
    -0.0132692726328969,
    -0.020112983882427216,
    0.07365003973245621,
    0.00970106478780508,
    0.026287654414772987,
    0.042567603290081024,
    -0.009380483068525791,
    -0.00929685402661562,
    -0.011784842237830162,
    0.006063165608793497,
    -0.004585704300552607,
    0.036016594618558884,
    0.014690980315208435,
    -0.012321467511355877,
    -0.0201547984033823,
    0.007247922010719776,
    -0.011192464269697666,
    -0.0018886411562561989,
    -0.013018382713198662,
    0.0262458398938179,
    0.007261860184371471,
    0.006432530470192432,
    -0.039640557020902634,
    0.0038678813725709915,
    -0.008453586138784885,
    0.012286621145904064,
    -0.024196907877922058,
    0.0015436679823324084,
    0.0006341931875795126,
    -0.041145894676446915,
    -0.03130544722080231,
    0.018454324454069138,
    0.01832887902855873,
    -0.013485316187143326,
    0.014495844021439552,
    -0.01851007714867592,
    0.00023891136515885592,
    -0.030218258500099182,
    0.0011882410617545247,
    0.017743470147252083,
    0.012697801925241947,
    0.020559009164571762,
    0.008983241394162178,
    -0.003878335002809763,
    0.04164767265319824,
    -0.021590443328022957,
    0.0005070060724392533,
    -0.007624256424605846,
    -0.0006768792518414557,
    0.0374104268848896,
    -0.01658659055829048,
    -0.005150205921381712,
    -0.021660136058926582,
    -0.009317761287093163,
    -0.018844597041606903,
    -0.025047145783901215,
    -0.0139243733137846,
    -0.035375434905290604,
    -0.0025925259105861187,
    -0.003613507142290473,
    0.014035879634320736,
    -0.004700695630162954,
    -0.008077251724898815,
    -0.010844006203114986,
    -0.012704771012067795,
    -0.00509096821770072,
    -0.006115434225648642,
    0.005899390205740929,
    -0.0022005108185112476,
    -0.00316225434653461,
    0.004812201950699091,
    -0.023890266194939613,
    -0.010600085370242596,
    0.006000442896038294,
    0.00476341787725687,
    -0.004833109211176634,
    -9.250464790966362e-05,
    0.02036387287080288,
    0.004296484403312206,
    0.017381073907017708,
    -0.012014823965728283,
    -0.01536001916974783,
    -0.03308955207467079,
    0.0015079510631039739,
    0.003115212544798851,
    0.013185642659664154,
    0.028963809832930565,
    0.007352459244430065,
    -0.028071759268641472,
    -0.033201057463884354,
    -0.006453438196331263,
    0.017353197559714317,
    0.008432677946984768,
    -0.025981012731790543,
    0.01644720695912838,
    0.017799222841858864,
    0.012293590232729912,
    -0.011387600563466549,
    -0.016628405079245567,
    0.01943000592291355,
    -0.012934752739965916,
    0.019625142216682434,
    0.01746470481157303,
    -0.018496138975024223,
    0.001126389717683196,
    0.01798042096197605,
    -0.012182083912193775,
    0.008683567866683006,
    -0.037466179579496384,
    -0.007021424360573292,
    -0.02935408428311348,
    0.013729236088693142,
    -0.015875736251473427,
    -0.007896053604781628,
    -0.02798812836408615,
    -0.013074136339128017,
    -0.02573012188076973,
    0.03849761560559273,
    0.01647508330643177,
    0.009136563166975975,
    -0.0160987488925457,
    0.02729121409356594,
    0.007373366504907608,
    0.008474493399262428,
    -0.013903465121984482,
    0.0362674854695797,
    -0.01536001916974783,
    0.008432677946984768,
    -0.0017492580227553844,
    -0.027402719482779503,
    -0.02924257703125477,
    0.04652608186006546,
    0.03356345370411873,
    -0.017994359135627747,
    -0.022552186623215675,
    -0.0010967708658427,
    -0.019165178760886192,
    -0.024754440411925316,
    -0.014802486635744572,
    0.023081842809915543,
    -0.00013448292156681418,
    -0.005334888584911823,
    0.006697358563542366,
    0.008418739773333073,
    0.0189979188144207,
    0.006174671929329634,
    -0.028392339125275612,
    -0.01202179305255413,
    0.007721824571490288,
    0.0036483530420809984,
    0.015596969984471798,
    -0.00915050134062767,
    -0.02996736951172352,
    -0.004362691193819046,
    0.0013694390654563904,
    -0.005718192085623741,
    0.002547226380556822,
    0.04362691566348076,
    0.0014800743665546179,
    -0.012621141038835049,
    -0.02012692205607891,
    -0.019541513174772263,
    0.011380631476640701,
    -0.00515717500820756,
    0.01575029082596302,
    0.009303823113441467,
    -0.018175557255744934,
    0.009944984689354897,
    0.00245836959220469,
    0.011603644117712975,
    -0.012823246419429779,
    0.007861207239329815,
    0.0008162623271346092,
    0.014105570502579212,
    -0.0030089330393821,
    -0.006930825300514698,
    0.016001181676983833,
    0.005836667958647013,
    0.011547890491783619,
    0.004442836623638868,
    0.03660200536251068,
    0.025339849293231964,
    -0.011826656758785248,
    0.004951585084199905,
    -0.049118608236312866,
    0.012823246419429779,
    -0.024350229650735855,
    0.00033843962592072785,
    0.012460850179195404,
    -0.01795254461467266,
    8.058085768425371e-06,
    -0.031862977892160416,
    0.037577688694000244,
    -0.011046111583709717,
    -0.007042331621050835,
    -0.007470934651792049,
    0.008669629693031311,
    0.005561386235058308,
    -0.0026116911321878433,
    0.0005388028221204877,
    0.0054603335447609425,
    0.0365462526679039,
    -0.030301889404654503,
    0.051822640001773834,
    -0.010188905522227287,
    0.0001431943674106151,
    -0.013304118067026138,
    -0.0136316679418087,
    0.017158061265945435,
    -0.00784726906567812,
    0.0006686033448204398,
    -0.006132856942713261,
    -0.001845083897933364,
    -0.0015593485441058874,
    -0.004209369886666536,
    0.002162180608138442,
    0.18688488006591797,
    0.024865947663784027,
    0.026036765426397324,
    0.04429595172405243,
    0.03389797359704971,
    0.02529803477227688,
    0.008335109800100327,
    0.0025263188872486353,
    0.0035333619453012943,
    0.026036765426397324,
    0.017854977399110794,
    -0.01274658553302288,
    -0.021743765100836754,
    0.008105128072202206,
    -0.018440386280417442,
    -0.025047145783901215,
    -0.01958332769572735,
    -0.029103193432092667,
    -0.01961120404303074,
    -0.014035879634320736,
    0.012209960259497166,
    -0.005129298660904169,
    0.0021325615234673023,
    -0.034762147814035416,
    0.020266303792595863,
    -0.003308606566861272,
    -0.013555007986724377,
    -0.010230720043182373,
    0.0021377885714173317,
    0.0007578957010991871,
    -0.023709068074822426,
    0.007125961594283581,
    0.007415181491523981,
    -0.002923560794442892,
    -0.03565419837832451,
    -0.0020489317830652,
    -0.0035159389954060316,
    -0.0036797141656279564,
    0.031918734312057495,
    0.011826656758785248,
    0.00894839596003294,
    -0.019193055108189583,
    -0.006129372399300337,
    -0.0043348148465156555,
    0.002120365621522069,
    -0.01473279483616352,
    -0.006230425089597702,
    -0.0034166285768151283,
    -0.011603644117712975,
    0.038413986563682556,
    -0.030218258500099182,
    -0.0014887858415022492,
    0.012969598174095154,
    0.0035995689686387777,
    0.0094292676076293,
    -0.03130544722080231,
    -0.004401021637022495,
    0.0027406204026192427,
    0.01789679192006588,
    0.020921405404806137,
    -0.005784399341791868,
    0.023012151941657066,
    -0.021855272352695465,
    0.02111654169857502,
    -0.07069511711597443,
    0.02538166381418705,
    -0.04167554900050163,
    0.010349196381866932,
    -0.013234426267445087,
    0.0027528165373951197,
    -0.006098011042922735,
    -0.021046850830316544,
    0.005160659551620483,
    -0.005143236834555864,
    -0.0004969878937117755,
    -0.033340439200401306,
    0.027918437495827675,
    0.013004444539546967,
    0.03738255053758621,
    0.038302477449178696,
    -0.0210329107940197,
    -0.011666366830468178,
    0.00965924933552742,
    0.009854385629296303,
    -0.028266895562410355,
    -0.0024078432470560074,
    0.0327829085290432,
    -0.0020593854133039713,
    -0.023360610008239746,
    -0.021660136058926582,
    -0.01432858407497406,
    -0.03852549195289612,
    0.0033591329120099545,
    -0.010600085370242596,
    -0.0011804007226601243,
    0.016572652384638786,
    -0.0031692234333604574,
    0.03445550426840782,
    -0.005146721377968788,
    -0.00983347836881876,
    -0.021911025047302246,
    0.02999524585902691,
    -0.010648869909346104,
    0.008153911679983139,
    0.012056639418005943,
    -0.017506519332528114,
    0.0021012003999203444,
    0.03297804296016693,
    -0.01126912422478199,
    -0.03203023970127106,
    0.008655691519379616,
    -0.03150058165192604,
    -0.012607202865183353,
    -0.015262451022863388,
    0.0094292676076293,
    -0.008857796899974346,
    -0.008585999719798565,
    0.005181567277759314,
    0.013882557861506939,
    0.018802782520651817,
    0.002235356718301773,
    0.009073840454220772,
    -0.0001283849123865366,
    -0.022036470472812653,
    0.01655871421098709,
    -0.030524902045726776,
    -0.0400308296084404,
    0.019471820443868637,
    -0.007505780551582575,
    -0.014802486635744572,
    0.0130532281473279,
    -0.026204025372862816,
    0.03381434455513954,
    0.007972713559865952,
    -0.008760228753089905,
    0.0006982222548685968,
    0.010028614662587643,
    -0.03359133005142212,
    -0.011582736857235432,
    0.005888936575502157,
    -0.036880772560834885,
    -0.004467228893190622,
    -0.002043704967945814,
    -0.003045520978048444,
    0.01832887902855873,
    -0.022315235808491707,
    -0.011847564950585365,
    0.008795074187219143,
    0.026719743385910988,
    0.02218979224562645,
    -0.014872178435325623,
    0.0028556114993989468,
    0.018524015322327614,
    -0.007903022691607475,
    0.013903465121984482,
    -0.024489613249897957,
    0.0017466446151956916,
    -0.012906876392662525,
    0.03671351075172424,
    0.00917837768793106,
    -0.036183856427669525,
    -0.0139243733137846,
    -0.0081957271322608,
    0.01618237979710102,
    -0.02868504449725151,
    -0.014265861362218857,
    -0.17562271654605865,
    0.002998479176312685,
    0.03172359615564346,
    -0.02854566089808941,
    0.00012664262612815946,
    -0.028935933485627174,
    0.03283866122364998,
    -0.005847121588885784,
    -0.025632554665207863,
    -0.024963514879345894,
    0.0014295480214059353,
    -0.010467671789228916,
    -0.019485758617520332,
    0.0003915794368367642,
    -0.00822360347956419,
    0.007861207239329815,
    -0.004359206650406122,
    -0.002179603325203061,
    0.019736649468541145,
    0.022329173982143402,
    0.030385518446564674,
    -0.017450764775276184,
    0.022956399247050285,
    0.00983347836881876,
    0.017771346494555473,
    -0.02294246107339859,
    0.014481904916465282,
    -0.002650021342560649,
    -0.002148242201656103,
    -0.04451896622776985,
    -0.006195579189807177,
    -0.0011960812844336033,
    0.006930825300514698,
    0.0059272670187056065,
    0.022008594125509262,
    0.020545070990920067,
    0.029772233217954636,
    0.010620993562042713,
    -0.009666218422353268,
    0.033312562853097916,
    0.0013171704486012459,
    0.015401833690702915,
    0.022175852209329605,
    -0.018384631723165512,
    -0.0006124145584180951,
    0.025827690958976746,
    0.004219823516905308,
    -0.005334888584911823,
    0.009840447455644608,
    -0.024127217009663582,
    0.04716724529862404,
    -0.015234573744237423,
    0.022817015647888184,
    -0.006955217104405165,
    0.025827690958976746,
    -0.011638489551842213,
    0.02207828499376774,
    0.01023768913000822,
    0.013213519006967545,
    0.0021569535601884127,
    -0.005962112452834845,
    -0.03523604944348335,
    0.010293442755937576,
    0.006070134695619345,
    -0.030413394793868065,
    -0.0040769558399915695,
    -0.021618321537971497,
    0.029158946126699448,
    -0.02033599652349949,
    -0.011143679730594158,
    0.025897381827235222,
    7.176052167778835e-05,
    0.017130184918642044,
    0.007394274231046438,
    0.0033399679232388735,
    0.028141450136899948,
    -0.006174671929329634,
    0.005028245970606804,
    0.029772233217954636,
    0.027834806591272354,
    -0.016698095947504044,
    0.00853024609386921,
    -0.012767492793500423,
    0.014133447781205177,
    0.020642638206481934,
    -0.010063461028039455,
    0.005530024878680706,
    -0.00414664763957262,
    -0.007380335591733456,
    -0.015973305329680443,
    -0.0016473341966047883,
    -0.012216929346323013,
    -0.00019012727716472,
    -0.009547743014991283,
    0.002108169486746192,
    0.005042184144258499,
    -0.026900941506028175,
    -0.009087778627872467,
    -0.01241206657141447,
    -0.03414886072278023,
    -0.002233614446595311,
    0.0029444682877510786,
    -0.0040839253924787045,
    -0.017938606441020966,
    0.023012151941657066,
    0.02862929180264473,
    -0.020140860229730606,
    0.01821737363934517,
    0.042651232331991196,
    -0.012823246419429779,
    0.002163922879844904,
    -0.010648869909346104,
    0.031890854239463806,
    0.0300231222063303,
    -0.03166784346103668,
    0.016572652384638786,
    0.013457439839839935,
    -0.010725530795753002,
    -0.0006285307463258505,
    -0.004780840594321489,
    0.043933555483818054,
    0.015875736251473427,
    -0.002353832358494401,
    0.012523572891950607,
    -0.026343408972024918,
    -0.02140924520790577,
    -0.11256580054759979,
    -0.06974730640649796,
    0.015067314729094505,
    0.005983020178973675,
    -0.022607941180467606,
    -0.006652059033513069,
    -0.01430070772767067,
    0.029186824336647987,
    0.00681583397090435,
    0.015792107209563255,
    0.0011054823407903314,
    0.010885820724070072,
    -0.006077103782445192,
    -0.0063070859760046005,
    -0.009819540195167065,
    -0.014370398595929146,
    -0.006895979400724173,
    -0.002575102960690856,
    0.013325025327503681,
    0.01601511985063553,
    -0.0022301299031823874,
    0.0018607645761221647,
    -0.005805306602269411,
    0.012941721826791763,
    -0.00017749567632563412,
    -0.004286030773073435,
    -0.019792402163147926,
    -0.003263307036831975,
    -0.006056196056306362,
    0.026148272678256035,
    0.0007291479269042611,
    -0.016489021480083466,
    -0.0004031221033073962,
    -0.018314940854907036,
    0.015220635570585728,
    0.012175114825367928,
    -0.01998753845691681,
    -0.01926274597644806,
    0.026650050655007362,
    -0.019039733335375786,
    -0.005812275689095259,
    0.010579178109765053,
    0.004637972917407751,
    -0.025660431012511253,
    0.010133151896297932,
    -0.008411770686507225,
    -0.010816129855811596,
    0.008676598779857159,
    0.015373957343399525,
    0.006456922739744186,
    -0.010391010902822018,
    0.004491620697081089,
    -0.015373957343399525,
    -0.016656281426548958,
    0.015903612598776817,
    -0.021966777741909027,
    -0.025911320000886917,
    0.008007559925317764,
    0.006056196056306362,
    0.00829329527914524,
    0.0081957271322608,
    -0.010899759829044342,
    -0.0049934000708162785,
    0.00043513666605576873,
    0.002780693117529154,
    0.01612662523984909,
    0.003380040405318141,
    0.004467228893190622,
    0.02779299207031727,
    -0.013596822507679462,
    -0.011756965890526772,
    0.018412509933114052,
    -0.021743765100836754,
    0.00374592118896544,
    -0.031138187274336815,
    -0.007331551518291235,
    0.006927340757101774,
    -0.005289589054882526,
    0.005955143366008997,
    -0.0061990637332201,
    -0.003958480432629585,
    -0.007798484992235899,
    -0.03587721288204193,
    -0.019917847588658333,
    0.017241690307855606,
    0.02854566089808941,
    0.0313333235681057,
    0.013966187834739685,
    0.005596232134848833,
    -0.039083026349544525,
    0.0031500584445893764,
    0.004815686494112015,
    0.03732679784297943,
    -0.012885969132184982,
    -0.013171704486012459,
    -0.016377516090869904,
    0.009715002961456776,
    0.0009094747947528958,
    -0.0016647570300847292,
    0.030218258500099182,
    -0.023067904636263847,
    -0.04713936895132065,
    -0.07459784299135208,
    0.005073545500636101,
    0.027834806591272354,
    -0.00970106478780508,
    0.022607941180467606,
    -0.028768673539161682,
    0.0009896201081573963,
    -0.01650295965373516,
    0.01176393497735262,
    0.0035473001189529896,
    -0.047585394233465195,
    -0.007233983371406794,
    -0.022900644689798355,
    -0.011520014144480228,
    -0.004324361216276884,
    -0.0011281321058049798,
    0.030943050980567932,
    -0.016279947012662888,
    0.024935638532042503,
    0.007673040498048067,
    0.013108981773257256,
    -0.0025803297758102417,
    0.038915764540433884,
    -0.007624256424605846,
    -0.0371316596865654,
    -0.009777725674211979,
    -0.02476837858557701,
    0.02283095382153988,
    -0.029688602313399315,
    -0.01816161908209324,
    -0.005550932604819536,
    -0.0023642859887331724,
    0.00791696086525917,
    0.046916354447603226,
    0.02474050223827362,
    0.02108866535127163,
    -0.0008454456692561507,
    0.00159332319162786,
    0.0039027270395308733,
    -0.0024496582336723804,
    -0.019876031205058098,
    -0.04382205009460449,
    0.018844597041606903,
    -0.010579178109765053,
    -0.005488209892064333,
    -0.011297001503407955,
    -0.017729531973600388,
    0.019876031205058098,
    0.018426448106765747,
    -0.0012100196909159422,
    0.036825019866228104,
    0.005258227698504925,
    -0.027054261416196823,
    -0.03308955207467079,
    -0.004550858400762081,
    -0.022203730419278145,
    0.00894839596003294,
    -0.009561681188642979,
    -0.018398569896817207,
    -0.0066450899466872215,
    0.02047537826001644,
    0.010676746256649494,
    0.01285112276673317,
    0.0007452640566043556,
    0.014467966742813587,
    -0.04212157800793648,
    -0.03501303866505623,
    -0.014565534889698029,
    -0.0037250136956572533,
    -0.0120357321575284,
    -0.015095191076397896,
    -0.036741387099027634,
    0.020112983882427216,
    0.011812718585133553,
    0.012781430967152119,
    -0.004554343409836292,
    -0.005826213862746954,
    -0.01583392173051834,
    -0.016837479546666145,
    0.02514471299946308,
    0.017799222841858864,
    0.0011577509576454759,
    -0.04131315276026726,
    0.027834806591272354,
    0.018482200801372528,
    -0.011436384171247482,
    -0.026998508721590042,
    -0.013896496035158634,
    0.0026012372691184282,
    0.0029061378445476294,
    -0.01655871421098709,
    -0.011833625845611095,
    -0.02476837858557701,
    -0.013192611746490002,
    0.0019043217180296779,
    0.002357316901907325,
    0.015234573744237423,
    -0.014844301156699657,
    -0.007784546818584204,
    -0.01179181132465601,
    0.019541513174772263,
    -0.004171039443463087,
    0.006216486915946007,
    -0.03718741610646248,
    -0.015945427119731903,
    -0.022580064833164215,
    -0.022008594125509262,
    -0.009791663847863674,
    0.006230425089597702,
    0.02372300624847412,
    0.025632554665207863,
    -0.009443205781280994,
    -0.011338816024363041,
    0.008620845153927803,
    -0.019151238724589348,
    0.023221226409077644,
    0.006115434225648642,
    -0.015485463663935661,
    -0.015346080996096134,
    0.022817015647888184,
    0.012293590232729912,
    -0.0015523794572800398,
    0.04594067484140396,
    -0.02422478422522545,
    0.005599716678261757,
    0.017381073907017708,
    0.013171704486012459,
    -0.028531722724437714,
    -0.006690389476716518,
    0.008669629693031311,
    0.025548923760652542,
    0.005212928168475628,
    -0.02500532940030098,
    -0.019471820443868637,
    -0.0071991379372775555,
    -0.024113278836011887,
    -0.00012119796883780509,
    0.018314940854907036,
    -0.005251258611679077,
    0.08563698083162308,
    -0.009721972048282623,
    -0.028908057138323784,
    -0.014593412168323994,
    -0.015959367156028748,
    0.01679566502571106,
    0.017966482788324356,
    0.0039724186062812805,
    0.0019426521612331271,
    -0.006422076839953661,
    0.02299821376800537,
    0.00257858750410378,
    -0.008829920552670956,
    -0.008035436272621155,
    0.004857501480728388,
    0.00010203279089182615,
    -0.03412098437547684,
    -0.009436236694455147,
    0.00445329025387764,
    0.0013781505404040217,
    0.033228933811187744,
    0.010000738315284252,
    -0.006449953652918339,
    -0.01990390755236149,
    -0.02575799822807312,
    0.004275577142834663,
    0.02140924520790577,
    0.016990801319479942,
    -0.02447567507624626,
    -0.0327829085290432,
    0.003965449519455433,
    0.00952683575451374,
    -0.016614466905593872,
    -0.019193055108189583,
    9.596200470696203e-06,
    0.01267689373344183,
    0.0211722943931818,
    -0.015541217289865017,
    0.00036108936183154583,
    0.011394569650292397,
    -0.019067609682679176,
    -0.00507006049156189,
    -0.002078550634905696,
    -0.027040323242545128,
    0.023109719157218933,
    0.004366176202893257,
    0.017018677666783333,
    0.0023608014453202486,
    -0.044714100658893585
  ]
}
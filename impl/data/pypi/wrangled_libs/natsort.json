{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: financial and insurance industry",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: information analysis",
    "topic :: text processing",
    "topic :: utilities"
  ],
  "description": "simple yet flexible natural sorting in python.\nnatsort\n=======\n\n.. image:: https://img.shields.io/pypi/v/natsort.svg\n    :target: https://pypi.org/project/natsort/\n\n.. image:: https://img.shields.io/pypi/pyversions/natsort.svg\n    :target: https://pypi.org/project/natsort/\n\n.. image:: https://img.shields.io/pypi/l/natsort.svg\n    :target: https://github.com/sethmmorton/natsort/blob/main/license\n\n.. image:: https://github.com/sethmmorton/natsort/workflows/tests/badge.svg\n    :target: https://github.com/sethmmorton/natsort/actions\n\n.. image:: https://codecov.io/gh/sethmmorton/natsort/branch/main/graph/badge.svg\n    :target: https://codecov.io/gh/sethmmorton/natsort\n\n.. image:: https://img.shields.io/pypi/dw/natsort.svg\n    :target: https://pypi.org/project/natsort/\n\nsimple yet flexible natural sorting in python.\n\n    - source code: https://github.com/sethmmorton/natsort\n    - downloads: https://pypi.org/project/natsort/\n    - documentation: https://natsort.readthedocs.io/\n\n      - `examples and recipes`_\n      - `how does natsort work?`_\n      - `api`_\n\n    - `quick description`_\n    - `quick examples`_\n    - `faq`_\n    - `requirements`_\n    - `optional dependencies`_\n    - `installation`_\n    - `how to run tests`_\n    - `how to build documentation`_\n    - `dropped deprecated apis`_\n    - `history`_\n\n**note**: please see the `dropped deprecated apis`_ section for changes.\n\nquick description\n-----------------\n\nwhen you try to sort a list of strings that contain numbers, the normal python\nsort algorithm sorts lexicographically, so you might not get the results that\nyou expect:\n\n.. code-block:: pycon\n\n    >>> a = ['2 ft 7 in', '1 ft 5 in', '10 ft 2 in', '2 ft 11 in', '7 ft 6 in']\n    >>> sorted(a)\n    ['1 ft 5 in', '10 ft 2 in', '2 ft 11 in', '2 ft 7 in', '7 ft 6 in']\n\nnotice that it has the order ('1', '10', '2') - this is because the list is\nbeing sorted in lexicographical order, which sorts numbers like you would\nletters (i.e. 'b', 'ba', 'c').\n\n`natsort`_ provides a function `natsorted()`_ that helps sort lists\n\"naturally\" (\"naturally\" is rather ill-defined, but in general it means\nsorting based on meaning and not computer code point).\nusing `natsorted()`_ is simple:\n\n.. code-block:: pycon\n\n    >>> from natsort import natsorted\n    >>> a = ['2 ft 7 in', '1 ft 5 in', '10 ft 2 in', '2 ft 11 in', '7 ft 6 in']\n    >>> natsorted(a)\n    ['1 ft 5 in', '2 ft 7 in', '2 ft 11 in', '7 ft 6 in', '10 ft 2 in']\n\n`natsorted()`_ identifies numbers anywhere in a string and sorts them\nnaturally. below are some other things you can do with `natsort`_\n(also see the `examples and recipes`_ for a quick start guide, or the\n`api`_ for complete details).\n\n**note**: `natsorted()`_ is designed to be a drop-in replacement for the\nbuilt-in `sorted()`_ function. like `sorted()`_, `natsorted()`_\n`does not sort in-place`. to sort a list and assign the output to the same\nvariable, you must explicitly assign the output to a variable:\n\n.. code-block:: pycon\n\n    >>> a = ['2 ft 7 in', '1 ft 5 in', '10 ft 2 in', '2 ft 11 in', '7 ft 6 in']\n    >>> natsorted(a)\n    ['1 ft 5 in', '2 ft 7 in', '2 ft 11 in', '7 ft 6 in', '10 ft 2 in']\n    >>> print(a)  # 'a' was not sorted; \"natsorted\" simply returned a sorted list\n    ['2 ft 7 in', '1 ft 5 in', '10 ft 2 in', '2 ft 11 in', '7 ft 6 in']\n    >>> a = natsorted(a)  # now 'a' will be sorted because the sorted list was assigned to 'a'\n    >>> print(a)\n    ['1 ft 5 in', '2 ft 7 in', '2 ft 11 in', '7 ft 6 in', '10 ft 2 in']\n\nplease see `generating a reusable sorting key and sorting in-place`_ for\nan alternate way to sort in-place naturally.\n\nquick examples\n--------------\n\n- `sorting versions`_\n- `sort paths like my file browser (e.g. windows explorer on windows)`_\n- `sorting by real numbers (i.e. signed floats)`_\n- `locale-aware sorting (or \"human sorting\")`_\n- `further customizing natsort`_\n- `sorting mixed types`_\n- `handling bytes`_\n- `generating a reusable sorting key and sorting in-place`_\n- `other useful things`_\n\nsorting versions\n++++++++++++++++\n\n`natsort`_ does not actually *comprehend* version numbers.\nit just so happens that the most common versioning schemes are designed to\nwork with standard natural sorting techniques; these schemes include\n``major.minor``, ``major.minor.patch``, ``year.month.day``. if your data\nconforms to a scheme like this, then it will work out-of-the-box with\n`natsorted()`_ (as of `natsort`_ version >= 4.0.0):\n\n.. code-block:: pycon\n\n    >>> a = ['version-1.9', 'version-2.0', 'version-1.11', 'version-1.10']\n    >>> natsorted(a)\n    ['version-1.9', 'version-1.10', 'version-1.11', 'version-2.0']\n\nif you need to versions that use a more complicated scheme, please see\n`these version sorting examples`_.\n\nsort paths like my file browser (e.g. windows explorer on windows)\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nprior to `natsort`_ version 7.1.0, it was a common request to be able to\nsort paths like windows explorer. as of `natsort`_ 7.1.0, the function\n`os_sorted()`_ has been added to provide users the ability to sort\nin the order that their file browser might sort (e.g windows explorer on\nwindows, finder on macos, dolphin/nautilus/thunar/etc. on linux).\n\n.. code-block:: python\n\n    import os\n    from natsort import os_sorted\n    print(os_sorted(os.listdir()))\n    # the directory sorted like your file browser might show\n\noutput will be different depending on the operating system you are on.\n\nfor users **not** on windows (e.g. macos/linux) it is **strongly** recommended\nto also install `pyicu`_, which will help\n`natsort`_ give results that match most file browsers. if this is not installed,\nit will fall back on python's built-in `locale`_ module and will give good\nresults for most input, but will give poor results for special characters.\n\nsorting by real numbers (i.e. signed floats)\n++++++++++++++++++++++++++++++++++++++++++++\n\nthis is useful in scientific data analysis (and was the default behavior\nof `natsorted()`_ for `natsort`_ version < 4.0.0). use the `realsorted()`_\nfunction:\n\n.. code-block:: pycon\n\n    >>> from natsort import realsorted, ns\n    >>> # note that when interpreting as signed floats, the below numbers are\n    >>> #            +5.10,                -3.00,            +5.30,              +2.00\n    >>> a = ['position5.10.data', 'position-3.data', 'position5.3.data', 'position2.data']\n    >>> natsorted(a)\n    ['position2.data', 'position5.3.data', 'position5.10.data', 'position-3.data']\n    >>> natsorted(a, alg=ns.real)\n    ['position-3.data', 'position2.data', 'position5.10.data', 'position5.3.data']\n    >>> realsorted(a)  # shortcut for natsorted with alg=ns.real\n    ['position-3.data', 'position2.data', 'position5.10.data', 'position5.3.data']\n\nlocale-aware sorting (or \"human sorting\")\n+++++++++++++++++++++++++++++++++++++++++\n\nthis is where the non-numeric characters are also ordered based on their\nmeaning, not on their ordinal value, and a locale-dependent thousands\nseparator and decimal separator is accounted for in the number.\nthis can be achieved with the `humansorted()`_ function:\n\n.. code-block:: pycon\n\n    >>> a = ['apple', 'apple15', 'banana', 'apple14,689', 'banana']\n    >>> natsorted(a)\n    ['apple', 'banana', 'apple14,689', 'apple15', 'banana']\n    >>> import locale\n    >>> locale.setlocale(locale.lc_all, 'en_us.utf-8')\n    'en_us.utf-8'\n    >>> natsorted(a, alg=ns.locale)\n    ['apple15', 'apple14,689', 'apple', 'banana', 'banana']\n    >>> from natsort import humansorted\n    >>> humansorted(a)  # shortcut for natsorted with alg=ns.locale\n    ['apple15', 'apple14,689', 'apple', 'banana', 'banana']\n\nyou may find you need to explicitly set the locale to get this to work\n(as shown in the example). please see `locale issues`_ and the\n`optional dependencies`_ section below before using the `humansorted()`_ function.\n\nfurther customizing natsort\n+++++++++++++++++++++++++++\n\nif you need to combine multiple algorithm modifiers (such as ``ns.real``,\n``ns.locale``, and ``ns.ignorecase``), you can combine the options using the\nbitwise or operator (``|``). for example,\n\n.. code-block:: pycon\n\n    >>> a = ['apple', 'apple15', 'banana', 'apple14,689', 'banana']\n    >>> natsorted(a, alg=ns.real | ns.locale | ns.ignorecase)\n    ['apple', 'apple15', 'apple14,689', 'banana', 'banana']\n    >>> # the ns enum provides long and short forms for each option.\n    >>> ns.locale == ns.l\n    true\n    >>> # you can also customize the convenience functions, too.\n    >>> natsorted(a, alg=ns.real | ns.locale | ns.ignorecase) == realsorted(a, alg=ns.l | ns.ic)\n    true\n    >>> natsorted(a, alg=ns.real | ns.locale | ns.ignorecase) == humansorted(a, alg=ns.r | ns.ic)\n    true\n\nall of the available customizations can be found in the documentation for\n`the ns enum`_.\n\nyou can also add your own custom transformation functions with the ``key``\nargument. these can be used with ``alg`` if you wish.\n\n.. code-block:: pycon\n\n    >>> a = ['apple2.50', '2.3apple']\n    >>> natsorted(a, key=lambda x: x.replace('apple', ''), alg=ns.real)\n    ['2.3apple', 'apple2.50']\n\nsorting mixed types\n+++++++++++++++++++\n\nyou can mix and match `int`_, `float`_, and `str`_ types when you sort:\n\n.. code-block:: pycon\n\n    >>> a = ['4.5', 6, 2.0, '5', 'a']\n    >>> natsorted(a)\n    [2.0, '4.5', '5', 6, 'a']\n    >>> # sorted(a) would raise an \"unorderable types\" typeerror\n\nhandling bytes\n++++++++++++++\n\n`natsort`_ does not officially support the `bytes`_ type, but\nconvenience functions are provided that help you decode to `str`_ first:\n\n.. code-block:: pycon\n\n    >>> from natsort import as_utf8\n    >>> a = [b'a', 14.0, 'b']\n    >>> # natsorted(a) would raise a typeerror (bytes() < str())\n    >>> natsorted(a, key=as_utf8) == [14.0, b'a', 'b']\n    true\n    >>> a = [b'a56', b'a5', b'a6', b'a40']\n    >>> # natsorted(a) would return the same results as sorted(a)\n    >>> natsorted(a, key=as_utf8) == [b'a5', b'a6', b'a40', b'a56']\n    true\n\ngenerating a reusable sorting key and sorting in-place\n++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nunder the hood, `natsorted()`_ works by generating a custom sorting\nkey using `natsort_keygen()`_ and then passes that to the built-in\n`sorted()`_. you can use the `natsort_keygen()`_ function yourself to\ngenerate a custom sorting key to sort in-place using the `list.sort()`_\nmethod.\n\n.. code-block:: pycon\n\n    >>> from natsort import natsort_keygen\n    >>> natsort_key = natsort_keygen()\n    >>> a = ['2 ft 7 in', '1 ft 5 in', '10 ft 2 in', '2 ft 11 in', '7 ft 6 in']\n    >>> natsorted(a) == sorted(a, key=natsort_key)\n    true\n    >>> a.sort(key=natsort_key)\n    >>> a\n    ['1 ft 5 in', '2 ft 7 in', '2 ft 11 in', '7 ft 6 in', '10 ft 2 in']\n\nall of the algorithm customizations mentioned in the\n`further customizing natsort`_ section can also be applied to\n`natsort_keygen()`_ through the *alg* keyword option.\n\nother useful things\n+++++++++++++++++++\n\n - recursively descend into lists of lists\n - automatic unicode normalization of input data\n - `controlling the case-sensitivity`_\n - `sorting file paths correctly`_\n - `allow custom sorting keys`_\n - `accounting for units`_\n\nfaq\n---\n\nhow do i debug `natsorted()`_?\n    the best way to debug `natsorted()`_ is to generate a key using `natsort_keygen()`_\n    with the same options being passed to `natsorted()`_. one can take a look at\n    exactly what is being done with their input using this key - it is highly\n    recommended to `look at this issue describing how to debug`_ for *how* to debug,\n    and also to review the `how does natsort work?`_ page for *why* `natsort`_ is\n    doing that to your data.\n\n    if you are trying to sort custom classes and running into trouble, please\n    take a look at https://github.com/sethmmorton/natsort/issues/60. in short,\n    custom classes are not likely to be sorted correctly if one relies\n    on the behavior of ``__lt__`` and the other rich comparison operators in\n    their custom class - it is better to use a ``key`` function with\n    `natsort`_, or use the `natsort`_ key as part of your rich comparison\n    operator definition.\n\n`natsort`_ gave me results i didn't expect, and it's a terrible library!\n    did you try to debug using the above advice? if so, and you still cannot figure out\n    the error, then please `file an issue`_.\n\nhow *does* `natsort`_ work?\n    if you don't want to read `how does natsort work?`_,\n    here is a quick primer.\n\n    `natsort`_ provides a `key function`_ that can be passed to `list.sort()`_\n    or `sorted()`_ in order to modify the default sorting behavior. this key\n    is generated on-demand with the key generator `natsort_keygen()`_.\n    `natsorted()`_ is essentially a wrapper for the following code:\n\n    .. code-block:: pycon\n\n        >>> from natsort import natsort_keygen\n        >>> natsort_key = natsort_keygen()\n        >>> sorted(['1', '10', '2'], key=natsort_key)\n        ['1', '2', '10']\n\n    users can further customize `natsort`_ sorting behavior with the ``key``\n    and/or ``alg`` options (see details in the `further customizing natsort`_\n    section).\n\n    the key generated by `natsort_keygen()`_ *always* returns a `tuple`_. it\n    does so in the following way (*some details omitted for clarity*):\n\n      1. assume the input is a string, and attempt to split it into numbers and\n         non-numbers using regular expressions. numbers are then converted into\n         either `int`_ or `float`_.\n      2. if the above fails because the input is not a string, assume the input\n         is some other sequence (e.g. `list`_ or `tuple`_), and recursively\n         apply the key to each element of the sequence.\n      3. if the above fails because the input is not iterable, assume the input\n         is an `int`_ or `float`_, and just return the input in a `tuple`_.\n\n    because a `tuple`_ is always returned, a `typeerror`_ should not be common\n    unless one tries to do something odd like sort an `int`_ against a `list`_.\n\nshell script\n------------\n\n`natsort`_ comes with a shell script called `natsort`_, or can also be called\nfrom the command line with ``python -m natsort``.  check out the\n`shell script wiki documentation`_ for more details.\n\nrequirements\n------------\n\n`natsort`_ requires python 3.7 or greater.\n\noptional dependencies\n---------------------\n\nfastnumbers\n+++++++++++\n\nthe most efficient sorting can occur if you install the\n`fastnumbers`_ package\n(version >=2.0.0); it helps with the string to number conversions.\n`natsort`_ will still run (efficiently) without the package, but if you need\nto squeeze out that extra juice it is recommended you include this as a\ndependency. `natsort`_ will not require (or check) that\n`fastnumbers`_ is installed at installation.\n\npyicu\n+++++\n\nit is recommended that you install `pyicu`_ if you wish to sort in a\nlocale-dependent manner, see this page on `locale issues`_ for an explanation why.\n\ninstallation\n------------\n\nuse ``pip``!\n\n.. code-block:: console\n\n    $ pip install natsort\n\nif you want to install the `optional dependencies`_, you can use the\n`\"extras\" notation`_ at installation time to install those dependencies as\nwell - use ``fast`` for `fastnumbers`_ and ``icu`` for `pyicu`_.\n\n.. code-block:: console\n\n    # install both optional dependencies.\n    $ pip install natsort[fast,icu]\n    # install just fastnumbers\n    $ pip install natsort[fast]\n\nhow to run tests\n----------------\n\nplease note that `natsort`_ is not set-up to support ``python setup.py test``.\n\nthe recommended way to run tests is with `tox`_. after installing ``tox``,\nrunning tests is as simple as executing the following in the `natsort`_ directory:\n\n.. code-block:: console\n\n    $ tox\n\n``tox`` will create virtual a virtual environment for your tests and install\nall the needed testing requirements for you.  you can specify a particular\npython version with the ``-e`` flag, e.g. ``tox -e py36``. static analysis\nis done with ``tox -e flake8``. you can see all available testing environments\nwith ``tox --listenvs``.\n\nhow to build documentation\n--------------------------\n\nif you want to build the documentation for `natsort`_, it is recommended to\nuse ``tox``:\n\n.. code-block:: console\n\n    $ tox -e docs\n\nthis will place the documentation in ``build/sphinx/html``.\n\ndropped deprecated apis\n-----------------------\n\nin `natsort`_ version 6.0.0, the following apis and functions were removed\n\n - ``number_type`` keyword argument (deprecated since 3.4.0)\n - ``signed`` keyword argument (deprecated since 3.4.0)\n - ``exp`` keyword argument (deprecated since 3.4.0)\n - ``as_path`` keyword argument (deprecated since 3.4.0)\n - ``py3_safe`` keyword argument (deprecated since 3.4.0)\n - ``ns.typesafe`` (deprecated since version 5.0.0)\n - ``ns.digit`` (deprecated since version 5.0.0)\n - ``ns.version`` (deprecated since version 5.0.0)\n - ``versorted()`` (discouraged since version 4.0.0,\n   officially deprecated since version 5.5.0)\n - ``index_versorted()`` (discouraged since version 4.0.0,\n   officially deprecated since version 5.5.0)\n\nin general, if you want to determine if you are using deprecated apis you\ncan run your code with the following flag\n\n.. code-block:: console\n\n    $ python -wdefault::deprecationwarning my-code.py\n\nby default `deprecationwarnings`_ are not shown, but this will cause them\nto be shown. alternatively, you can just set the environment variable\n``pythonwarnings`` to \"default::deprecationwarning\" and then run your code.\n\nauthor\n------\n\nseth m. morton\n\nhistory\n-------\n\nplease visit the changelog `on github`_.\n\n.. _natsort: https://natsort.readthedocs.io/en/stable/index.html\n.. _natsorted(): https://natsort.readthedocs.io/en/stable/api.html#natsort.natsorted\n.. _natsort_keygen(): https://natsort.readthedocs.io/en/stable/api.html#natsort.natsort_keygen\n.. _realsorted(): https://natsort.readthedocs.io/en/stable/api.html#natsort.realsorted\n.. _humansorted(): https://natsort.readthedocs.io/en/stable/api.html#natsort.humansorted\n.. _os_sorted(): https://natsort.readthedocs.io/en/stable/api.html#natsort.os_sorted\n.. _the ns enum: https://natsort.readthedocs.io/en/stable/api.html#natsort.ns\n.. _fastnumbers: https://github.com/sethmmorton/fastnumbers\n.. _sorted(): https://docs.python.org/3/library/functions.html#sorted\n.. _list.sort(): https://docs.python.org/3/library/stdtypes.html#list.sort\n.. _key function: https://docs.python.org/3/howto/sorting.html#key-functions\n.. _locale: https://docs.python.org/3/library/locale.html\n.. _int: https://docs.python.org/3/library/functions.html#int\n.. _float: https://docs.python.org/3/library/functions.html#float\n.. _str: https://docs.python.org/3/library/stdtypes.html#str\n.. _bytes: https://docs.python.org/3/library/stdtypes.html#bytes\n.. _list: https://docs.python.org/3/library/stdtypes.html#list\n.. _tuple: https://docs.python.org/3/library/stdtypes.html#tuple\n.. _typeerror: https://docs.python.org/3/library/exceptions.html#typeerror\n.. _deprecationwarnings: https://docs.python.org/3/library/exceptions.html#deprecationwarning\n.. _\"extras\" notation: https://packaging.python.org/tutorials/installing-packages/#installing-setuptools-extras\n.. _pyicu: https://pypi.org/project/pyicu\n.. _tox: https://tox.readthedocs.io/en/latest/\n.. _examples and recipes: https://github.com/sethmmorton/natsort/wiki/examples-and-recipes\n.. _how does natsort work?: https://github.com/sethmmorton/natsort/wiki/how-does-natsort-work%3f\n.. _api: https://natsort.readthedocs.io/en/stable/api.html\n.. _on github: https://github.com/sethmmorton/natsort/blob/main/changelog.md\n.. _file an issue: https://github.com/sethmmorton/natsort/issues/new\n.. _look at this issue describing how to debug: https://github.com/sethmmorton/natsort/issues/13#issuecomment-50422375\n.. _controlling the case-sensitivity: https://github.com/sethmmorton/natsort/wiki/examples-and-recipes#controlling-case-when-sorting\n.. _sorting file paths correctly: https://github.com/sethmmorton/natsort/wiki/examples-and-recipes#sort-os-generated-paths\n.. _allow custom sorting keys: https://github.com/sethmmorton/natsort/wiki/examples-and-recipes#using-a-custom-sorting-key\n.. _accounting for units: https://github.com/sethmmorton/natsort/wiki/examples-and-recipes#accounting-for-units-when-sorting\n.. _these version sorting examples: https://github.com/sethmmorton/natsort/wiki/examples-and-recipes#sorting-more-expressive-versioning-schemes\n.. _locale issues: https://github.com/sethmmorton/natsort/wiki/possible-issues-with-natsort.humansorted-or-ns.locale\n.. _shell script wiki documentation: https://github.com/sethmmorton/natsort/wiki/shell-script\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "natsort",
  "package_url": "https://pypi.org/project/natsort/",
  "project_url": "https://pypi.org/project/natsort/",
  "project_urls": {
    "Homepage": "https://github.com/SethMMorton/natsort"
  },
  "release_url": "https://pypi.org/project/natsort/8.4.0/",
  "requires_dist": [
    "fastnumbers (>=2.0.0) ; extra == 'fast'",
    "PyICU (>=1.0.0) ; extra == 'icu'"
  ],
  "requires_python": ">=3.7",
  "summary": "simple yet flexible natural sorting in python.",
  "version": "8.4.0",
  "releases": [],
  "developers": [
    "drtuba78@gmail.com",
    "seth_m"
  ],
  "kwds": "natsort _natsort_keygen _natsort natsort_keygen natsort_key",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_natsort",
  "homepage": "https://github.com/sethmmorton/natsort",
  "release_count": 59,
  "dependency_ids": [
    "pypi_fastnumbers",
    "pypi_pyicu"
  ],
  "documentation_summary": "The GitHub repository \"SethMMorton/natsort\" offers a Python package for natural sorting, which sorts strings containing numbers in a way that is intuitive to humans, unlike the standard lexicographical order. It provides a function `natsorted()` to sort lists \"naturally.\" The package is flexible, allowing for various customizations such as locale-aware sorting, sorting by real numbers, and handling mixed types. It supports Python 3.7 or greater and can benefit from optional dependencies like `fastnumbers` for efficiency and `PyICU` for locale-dependent sorting. The package is licensed under the MIT license and is available for download from PyPI. Additional features include sorting file paths correctly, generating reusable sorting keys, and handling bytes. The repository includes comprehensive documentation and examples to help users implement natural sorting in their projects.",
  "embedding": [
    2.7526595658855513e-05,
    0.0006708087748847902,
    0.009218866936862469,
    -0.0020783133804798126,
    0.007839220575988293,
    0.041375238448381424,
    -0.013541758991777897,
    -0.0033306076657027006,
    -0.02064516767859459,
    -0.0009949372615665197,
    0.009650448337197304,
    -0.015367137268185616,
    -0.05481794476509094,
    0.015904845669865608,
    0.009912227280437946,
    -0.005058703012764454,
    0.021904537454247475,
    -0.016343502327799797,
    0.006682440638542175,
    0.011772981844842434,
    0.00924716703593731,
    0.013046501204371452,
    -0.01441199705004692,
    -0.02617790363729,
    -0.020871572196483612,
    0.008822660893201828,
    0.02027726173400879,
    -0.020164061337709427,
    0.0033164573833346367,
    -0.001040925388224423,
    0.02514493837952614,
    0.002117226365953684,
    -0.04355436936020851,
    -0.04516749456524849,
    -0.02114042639732361,
    -0.011327249929308891,
    -0.006049218121916056,
    -0.023461060598492622,
    0.030055062845349312,
    -0.03192289173603058,
    0.011178672313690186,
    0.001896129222586751,
    -0.0013769931392744184,
    -0.005858190357685089,
    -0.01299697533249855,
    -0.0008609523065388203,
    8.783084922470152e-05,
    -0.030649371445178986,
    -0.009777801111340523,
    0.016485003754496574,
    0.020220661535859108,
    0.011935709044337273,
    -0.003222712082788348,
    -0.00788167119026184,
    0.010110330767929554,
    -0.02358841337263584,
    0.004655421711504459,
    0.012912074103951454,
    -0.01614539884030819,
    0.011971084401011467,
    0.011228198185563087,
    0.00440425518900156,
    -0.029913561418652534,
    0.0207583699375391,
    0.018409432843327522,
    -0.012770571745932102,
    -0.029092848300933838,
    0.0036825942806899548,
    -0.011532427743077278,
    0.006965444888919592,
    0.028540989384055138,
    0.038233887404203415,
    -0.003426121547818184,
    0.017970776185393333,
    0.02101307362318039,
    0.019357498735189438,
    -0.019145244732499123,
    0.014355395920574665,
    0.0032545500434935093,
    0.0099193025380373,
    -0.0016511535504832864,
    -0.008334478363394737,
    -0.014440297149121761,
    0.038714997470378876,
    0.012989900074899197,
    0.006756728980690241,
    0.0009878621203824878,
    -0.0030069213826209307,
    -0.023149756714701653,
    -0.014702076092362404,
    0.010640963912010193,
    0.004513919353485107,
    0.004117713309824467,
    0.022711100056767464,
    -0.036139655858278275,
    0.024253474548459053,
    -0.002400230849161744,
    0.008497205562889576,
    -0.016216149553656578,
    -0.03396052494645119,
    -0.012211638502776623,
    0.016499154269695282,
    -0.0004563445399980992,
    -0.0005792745505459607,
    -0.02723916992545128,
    -0.004255678039044142,
    0.008723609149456024,
    -0.005324019584804773,
    0.013230454176664352,
    0.027125967666506767,
    -0.032630402594804764,
    0.03229079768061638,
    0.008525506593286991,
    -0.03183799237012863,
    0.018069827929139137,
    -0.0036967445630580187,
    0.033677518367767334,
    0.01410776749253273,
    -0.024182721972465515,
    0.011376774869859219,
    0.023022403940558434,
    0.003894847584888339,
    0.04208274930715561,
    -0.012820097617805004,
    0.03166818618774414,
    0.013718636706471443,
    -0.006459574680775404,
    -0.041375238448381424,
    -0.03098897822201252,
    -0.034781236201524734,
    0.0584121011197567,
    0.009317918680608273,
    0.015805793926119804,
    0.0022799537982791662,
    0.004368879832327366,
    0.01811227947473526,
    0.0077543193474411964,
    -0.005982004571706057,
    -0.02500343509018421,
    -0.013110176660120487,
    0.003486260073259473,
    0.01204891037195921,
    -0.013131402432918549,
    -0.01792832650244236,
    -0.008737759664654732,
    0.025102486833930016,
    0.020560266450047493,
    -0.010725865140557289,
    0.016301050782203674,
    -0.019074494019150734,
    0.04109223186969757,
    -0.026078851893544197,
    -0.0013955652248114347,
    -0.002838887507095933,
    -0.01186495739966631,
    -0.012452191673219204,
    0.0065444759093225,
    -0.013386106118559837,
    -0.0012726351851597428,
    -0.018508484587073326,
    0.0022817226126790047,
    0.023206356912851334,
    -0.005426608491688967,
    -0.024111971259117126,
    -0.0013177390210330486,
    0.021225327625870705,
    0.02630525454878807,
    -0.023630864918231964,
    -0.03152668476104736,
    -0.004747398197650909,
    0.02384311705827713,
    -0.028017431497573853,
    -0.010322583839297295,
    0.0029290951788425446,
    0.01337195560336113,
    -0.022201692685484886,
    0.011843732558190823,
    0.018947141245007515,
    -0.009912227280437946,
    0.03203609213232994,
    0.0007349269581027329,
    0.011482901871204376,
    0.0002140220458386466,
    0.03645096346735954,
    -0.02650335803627968,
    -0.02674391120672226,
    0.018154729157686234,
    0.019796155393123627,
    0.007393489126116037,
    0.025909049436450005,
    0.0074359397403895855,
    0.0052249678410589695,
    -0.016117097809910774,
    -0.02617790363729,
    -0.5555941462516785,
    -0.02494683489203453,
    0.00847598072141409,
    -0.031385183334350586,
    0.020531967282295227,
    0.017206665128469467,
    0.0010718790581449866,
    0.03381901979446411,
    0.004365342203527689,
    0.043780773878097534,
    -0.0389413982629776,
    0.01133432425558567,
    0.014426147565245628,
    0.013265829533338547,
    -0.018777338787913322,
    -0.012063060887157917,
    0.006777954287827015,
    -0.013570059090852737,
    0.015480338595807552,
    0.009006613865494728,
    -0.023616714403033257,
    0.033366214483976364,
    -0.0010188156738877296,
    -0.0036012304481118917,
    -0.010548987425863743,
    0.02181963622570038,
    0.015211484394967556,
    -0.031215380877256393,
    0.02347521111369133,
    0.008950012736022472,
    -0.053572725504636765,
    0.004528069868683815,
    0.004821687005460262,
    -0.019499000161886215,
    0.05422363430261612,
    0.0007318315911106765,
    -0.02206018939614296,
    0.050120070576667786,
    0.0041495515033602715,
    0.022838452830910683,
    -0.001421212567947805,
    -0.03596985340118408,
    0.007188310846686363,
    -0.003457959508523345,
    0.006431274116039276,
    -0.004620046354830265,
    -0.003863009624183178,
    -0.011107921600341797,
    0.0013522302033379674,
    -0.029545655474066734,
    0.019201846793293953,
    -0.007534991018474102,
    0.019753703847527504,
    -0.024423277005553246,
    0.02237149514257908,
    -0.005055165383964777,
    0.0158906951546669,
    -0.014143142849206924,
    0.0265458095818758,
    -0.029856959357857704,
    -0.01583409309387207,
    0.01596144586801529,
    0.013718636706471443,
    -0.054195336997509,
    -0.017164213582873344,
    0.03359261900186539,
    0.002065931912511587,
    -0.02198943868279457,
    0.0036861319094896317,
    -0.02760707587003708,
    0.015395437367260456,
    0.006908843759447336,
    0.024918533861637115,
    -0.006027992814779282,
    0.005401845555752516,
    0.05433683842420578,
    0.022512996569275856,
    0.009657523594796658,
    0.00682394253090024,
    -0.0006195142050273716,
    0.02372991479933262,
    0.006318072322756052,
    0.006905306596308947,
    -0.04584670811891556,
    0.041856344789266586,
    -0.007888746447861195,
    0.005741450935602188,
    0.0005615867557935417,
    0.01232483983039856,
    -0.009112740866839886,
    -0.003689669305458665,
    0.033734120428562164,
    0.010994719341397285,
    -0.034158624708652496,
    0.02255544811487198,
    0.01945655047893524,
    -0.01389551442116499,
    -0.020560266450047493,
    -0.014277569949626923,
    -0.042846858501434326,
    0.020531967282295227,
    -0.024904383346438408,
    0.008921712636947632,
    0.0029149448964744806,
    -0.013718636706471443,
    0.004457318689674139,
    0.014348320662975311,
    0.02027726173400879,
    0.011412151157855988,
    -0.014659625478088856,
    -0.014843578450381756,
    -0.04194124788045883,
    -0.00757744163274765,
    -0.01785757578909397,
    0.008886337280273438,
    -0.029347551986575127,
    0.017418919131159782,
    -0.0151548832654953,
    0.020744219422340393,
    -0.006873468402773142,
    0.008907562121748924,
    0.00673196604475379,
    -0.005140066612511873,
    -0.008405229076743126,
    0.0299418605864048,
    0.022781850770115852,
    0.04259215667843819,
    0.009034913964569569,
    -0.030705973505973816,
    -0.0001356431021122262,
    0.012211638502776623,
    -0.021720584481954575,
    -0.0028229684103280306,
    0.002380774123594165,
    0.026206204667687416,
    -0.007152935024350882,
    0.008277877233922482,
    0.005766213871538639,
    0.007142322603613138,
    -0.012678595259785652,
    -0.027649525552988052,
    -0.009699974209070206,
    -0.00765526806935668,
    -0.03642266243696213,
    0.006647064816206694,
    -0.03475293517112732,
    -0.012225788086652756,
    0.026588259264826775,
    -0.026163753122091293,
    0.013683260418474674,
    -0.01804152876138687,
    -0.007078646682202816,
    -0.04853524640202522,
    0.007301512639969587,
    -0.01645670272409916,
    -0.004361804574728012,
    0.007994873449206352,
    -0.031102178618311882,
    -0.01928674802184105,
    0.00690176896750927,
    0.01509828306734562,
    0.03749807924032211,
    -0.010174007155001163,
    -0.023446911945939064,
    -0.024960985407233238,
    -0.0009737118962220848,
    0.00015775281644891948,
    0.013640809804201126,
    0.007556216325610876,
    -0.04055452346801758,
    0.0064878747798502445,
    -0.014645475894212723,
    -0.002117226365953684,
    0.004825224168598652,
    0.0009171109995804727,
    0.0006973404088057578,
    -0.02803158201277256,
    0.022229991853237152,
    0.006367598194628954,
    0.014617174863815308,
    0.021225327625870705,
    -0.004418405704200268,
    -0.028569290414452553,
    -0.03186628967523575,
    0.0211262758821249,
    0.01891884207725525,
    -0.01903204247355461,
    -0.012494642287492752,
    0.011532427743077278,
    0.014404921792447567,
    -0.0017678928561508656,
    -0.013669110834598541,
    -0.008242501877248287,
    0.004450243432074785,
    0.0008680274477228522,
    0.016739707440137863,
    0.00756329158321023,
    -0.002761061303317547,
    0.02340446040034294,
    0.023885568603873253,
    0.01706516370177269,
    0.004181389231234789,
    0.0028300436679273844,
    -0.014037015847861767,
    0.009091515094041824,
    0.01392381452023983,
    0.03534724563360214,
    -0.030139964073896408,
    -0.00036215715226717293,
    -0.004966726526618004,
    0.030960677191615105,
    -0.01167393010109663,
    -0.012027685530483723,
    -0.01022353209555149,
    0.009997129440307617,
    0.013732786290347576,
    -0.021168725565075874,
    0.012487567029893398,
    0.01025890838354826,
    -0.008242501877248287,
    0.018027378246188164,
    -0.0018731351010501385,
    0.0164425540715456,
    0.010761240497231483,
    0.011023019440472126,
    0.0067921048030257225,
    0.014327095821499825,
    -0.010605588555335999,
    -0.011023019440472126,
    -0.03246060013771057,
    0.008136375807225704,
    -0.015041681937873363,
    0.01019523199647665,
    -0.035517048090696335,
    0.03438502922654152,
    -0.01509828306734562,
    0.03147008642554283,
    -0.03353601694107056,
    0.010244757868349552,
    -0.02334786020219326,
    -0.003657831344753504,
    0.001086913631297648,
    0.014730377122759819,
    -0.021366829052567482,
    0.004956113640218973,
    -0.0025700333062559366,
    0.011652704328298569,
    0.04700702428817749,
    -0.007683568634092808,
    -0.027762727811932564,
    0.0066046142019331455,
    -0.004117713309824467,
    -0.02650335803627968,
    0.011136221699416637,
    0.007924121804535389,
    -0.01873488910496235,
    0.006763804238289595,
    -0.009643374010920525,
    0.03735657408833504,
    0.003795796073973179,
    -0.012119662016630173,
    -0.005348782520741224,
    0.027762727811932564,
    0.035460446029901505,
    0.0321492962539196,
    -0.025116637349128723,
    0.01121404767036438,
    -0.019753703847527504,
    0.01037918496876955,
    -0.007938272319734097,
    -0.0393093042075634,
    -0.04644101485610008,
    -0.04035642370581627,
    0.005928941536694765,
    0.031158780679106712,
    0.0047686235047876835,
    0.003187336726114154,
    0.035460446029901505,
    0.011355550028383732,
    -0.0036366060376167297,
    -0.0265458095818758,
    -0.03155498579144478,
    0.027196718379855156,
    0.0019934119191020727,
    -0.00782507099211216,
    -0.008610407821834087,
    -0.012176262214779854,
    0.014376621693372726,
    0.0010683414293453097,
    -0.011051320470869541,
    0.0016900666523724794,
    -0.010237682610750198,
    -0.0005120610003359616,
    0.01976785436272621,
    -0.008971238508820534,
    -0.010633888654410839,
    0.018253780901432037,
    -0.016216149553656578,
    -0.0012885542819276452,
    -0.003809946123510599,
    4.9359940021531656e-05,
    -0.004068187903612852,
    -0.025838298723101616,
    -0.005012714769691229,
    0.06571361422538757,
    -0.005589336156845093,
    -0.01186495739966631,
    -0.006664752494543791,
    -0.01804152876138687,
    -0.027380671352148056,
    0.01158195361495018,
    0.013775236904621124,
    -0.023828966543078423,
    -0.005002101883292198,
    0.032375697046518326,
    -0.0017643553437665105,
    0.01855093613266945,
    -0.018649987876415253,
    0.04196954518556595,
    0.0029344013892114162,
    0.00394083559513092,
    -0.03302660956978798,
    -0.011256498284637928,
    0.030026761814951897,
    0.031809691339731216,
    0.0014610099606215954,
    -0.005723763257265091,
    0.028696641325950623,
    -0.02402707003057003,
    0.0025894897989928722,
    0.0057768262922763824,
    2.0092204067623243e-05,
    0.021763036027550697,
    0.003450884483754635,
    0.007386413868516684,
    0.028243836015462875,
    -0.0018412971403449774,
    0.01136970054358244,
    0.0270976684987545,
    0.02624865435063839,
    -0.015579390339553356,
    0.0017944244900718331,
    0.005055165383964777,
    -0.016994411125779152,
    0.0042627532966434956,
    -0.019569750875234604,
    0.02865419164299965,
    0.003976211417466402,
    0.031696487218141556,
    0.0009790181647986174,
    0.02847023867070675,
    -0.010782466270029545,
    -0.00812930054962635,
    -0.038969699293375015,
    -0.03240399807691574,
    0.009671674109995365,
    0.02575339749455452,
    0.025668496266007423,
    0.0020146372262388468,
    0.024876084178686142,
    0.03616795688867569,
    0.008921712636947632,
    -0.003440271830186248,
    -0.005486747249960899,
    0.008051473647356033,
    -0.017334017902612686,
    -0.001245219144038856,
    -0.00774724455550313,
    0.0068168677389621735,
    -0.027805179357528687,
    -0.014093616977334023,
    0.03568685054779053,
    -0.009714124724268913,
    0.008079774677753448,
    -0.002789361635223031,
    -0.022810151800513268,
    -0.03645096346735954,
    -0.02834288589656353,
    0.008058548904955387,
    0.029828660190105438,
    0.01494263019412756,
    0.019541451707482338,
    -0.01638595201075077,
    -0.03463973477482796,
    -0.005660087335854769,
    -0.026998616755008698,
    -0.004046962130814791,
    -0.010336734354496002,
    -0.008299103006720543,
    0.0065586259588599205,
    -0.026659009978175163,
    0.017348166555166245,
    -0.022512996569275856,
    0.010584362782537937,
    0.013081876561045647,
    -0.029375853016972542,
    -0.01945655047893524,
    -0.029347551986575127,
    -0.0024568315129727125,
    0.007534991018474102,
    -0.010181081481277943,
    0.015239784494042397,
    0.013612509705126286,
    -0.02847023867070675,
    0.0036472186911851168,
    -0.04123373702168465,
    -0.00420615216717124,
    -0.03432842716574669,
    0.0348944365978241,
    -0.018154729157686234,
    0.032573800534009933,
    0.031809691339731216,
    0.005808664485812187,
    0.028045732527971268,
    0.025767546147108078,
    -0.002761061303317547,
    -0.014369546435773373,
    0.023928018286824226,
    -0.008511356078088284,
    0.022102640941739082,
    0.0045811329036951065,
    0.007071571424603462,
    0.014673775993287563,
    0.0026938477531075478,
    0.010096180252730846,
    -0.021536631509661674,
    -0.026701461523771286,
    -0.006052755750715733,
    0.02249884605407715,
    -0.027338221669197083,
    0.010025429539382458,
    0.024564778432250023,
    -0.018140578642487526,
    -0.016187848523259163,
    0.03313980996608734,
    -0.017036862671375275,
    -0.013725711964070797,
    0.01386013813316822,
    -0.01287669874727726,
    0.0018359908135607839,
    -0.0017723147757351398,
    0.03413032740354538,
    0.005426608491688967,
    -0.006586926523596048,
    -0.028682492673397064,
    -0.016315201297402382,
    0.01780097372829914,
    0.027394821867346764,
    0.010499461553990841,
    0.010697565041482449,
    -0.0029556266963481903,
    -0.013541758991777897,
    -0.0382055900990963,
    0.02968715690076351,
    0.004015124402940273,
    -0.006590464152395725,
    -0.010683414526283741,
    -0.008277877233922482,
    -0.0009383363067172468,
    0.002044706605374813,
    -0.0002998077543452382,
    -0.003447346854954958,
    -0.004987951833754778,
    0.005773289129137993,
    0.01269274577498436,
    -0.005164829548448324,
    -0.0299418605864048,
    -0.0003285503771621734,
    -0.033422816544771194,
    -0.015791643410921097,
    0.006328685209155083,
    0.006976057309657335,
    -0.009169341064989567,
    0.009190566837787628,
    -0.016102947294712067,
    0.009558471851050854,
    -0.006643527187407017,
    -0.03322471305727959,
    -0.0028972572181373835,
    0.005104691255837679,
    0.014546424150466919,
    0.019541451707482338,
    0.018338682129979134,
    0.044573187828063965,
    0.009777801111340523,
    0.00285657518543303,
    0.01656990498304367,
    0.01136970054358244,
    -0.0013973340392112732,
    0.0028937195893377066,
    -0.051591694355010986,
    0.01688121072947979,
    -0.017178364098072052,
    -0.0014061778783798218,
    0.009473570622503757,
    0.01632935181260109,
    -0.014673775993287563,
    -0.034102026373147964,
    -0.008674083277583122,
    -0.0030422969721257687,
    -0.0030865164007991552,
    -0.006119969300925732,
    -0.013902589678764343,
    -0.021918687969446182,
    0.009806101210415363,
    0.009211791679263115,
    -0.005688387434929609,
    0.03432842716574669,
    -0.014588874764740467,
    -0.0250741858035326,
    0.013782312162220478,
    -0.018013227730989456,
    0.0052461931481957436,
    0.021734734997153282,
    0.0061022816225886345,
    0.003841784317046404,
    0.023008255288004875,
    0.00896416325122118,
    0.008886337280273438,
    -0.01195693388581276,
    0.007181235589087009,
    -0.02839948795735836,
    -0.016003897413611412,
    -0.036139655858278275,
    -0.028371186926960945,
    0.029913561418652534,
    0.020475365221500397,
    -0.01509828306734562,
    -0.008511356078088284,
    0.029856959357857704,
    -0.02582414820790291,
    -0.027380671352148056,
    0.015437887981534004,
    -0.005783901549875736,
    -0.00859625730663538,
    0.014305870048701763,
    -0.025159087032079697,
    -0.04723342880606651,
    0.0025771085638552904,
    -0.014659625478088856,
    0.01959805190563202,
    0.006859318353235722,
    -0.019739553332328796,
    -0.0019934119191020727,
    -0.018437733873724937,
    0.001783811836503446,
    0.03854519501328468,
    0.021112125366926193,
    0.03809238597750664,
    0.021267777308821678,
    -0.02046121470630169,
    -0.03390392288565636,
    -0.020291412249207497,
    0.004411330446600914,
    0.005278031341731548,
    0.042677056044340134,
    0.005072853062301874,
    -0.01084614172577858,
    -0.02968715690076351,
    0.017220815643668175,
    -8.009244629647583e-05,
    -0.03350771591067314,
    -0.033422816544771194,
    0.03574345260858536,
    0.03664906322956085,
    0.02834288589656353,
    -0.03333791345357895,
    0.018833940848708153,
    -0.011447526514530182,
    0.025088336318731308,
    -0.00908443983644247,
    -0.007641117554157972,
    3.5458455386105925e-05,
    0.006059831008315086,
    0.0014786977553740144,
    0.02162153273820877,
    0.02360256388783455,
    0.024777032434940338,
    0.03735657408833504,
    -0.001959805143997073,
    -0.0014008715515956283,
    -0.04369587451219559,
    0.003884234931319952,
    0.004450243432074785,
    0.005490284413099289,
    -0.0016750320792198181,
    0.00439010513946414,
    -0.020843271166086197,
    0.04754473268985748,
    0.004337041638791561,
    0.002550576813519001,
    -0.014128992334008217,
    -0.03234739974141121,
    0.0396772101521492,
    -0.010881518013775349,
    -0.021239478141069412,
    -0.01336488127708435,
    0.023800667375326157,
    -0.04092242941260338,
    -0.00220212759450078,
    -0.026828814297914505,
    0.014461522921919823,
    -0.012409741058945656,
    0.012742271646857262,
    0.02569679543375969,
    -0.013874288648366928,
    -0.022895053029060364,
    0.006183645222336054,
    -0.013032350689172745,
    -0.0017139451811090112,
    -0.028116483241319656,
    -0.001629043836146593,
    0.010096180252730846,
    -0.010280133225023746,
    -0.01886224001646042,
    -0.027210868895053864,
    0.0054832096211612225,
    -0.004156626760959625,
    0.0045811329036951065,
    -0.0035092539619654417,
    0.0009073827532120049,
    0.06752484291791916,
    0.001403524773195386,
    0.029177749529480934,
    -0.0196546521037817,
    0.0031802614685148,
    -0.03149838373064995,
    0.012459266930818558,
    -0.016725556924939156,
    0.00116739294026047,
    0.05518585070967674,
    0.003144885879009962,
    -0.01781512424349785,
    0.0045811329036951065,
    -0.02740897238254547,
    0.003771033138036728,
    0.01996595785021782,
    -0.0129049988463521,
    -0.009487721137702465,
    0.0036259933840483427,
    0.008051473647356033,
    -0.02305070497095585,
    -0.010591438040137291,
    0.011638554744422436,
    -0.010004203766584396,
    -0.006035068072378635,
    0.006367598194628954,
    0.0005549538764171302,
    0.007733094040304422,
    -0.009459421038627625,
    0.009806101210415363,
    -0.006565701216459274,
    -0.045620303601026535,
    -0.03645096346735954,
    -0.009721199981868267,
    -0.0034668033476918936,
    -0.0026230965740978718,
    -0.0008047936717048287,
    -0.011617328971624374,
    0.00270976684987545,
    -0.029856959357857704,
    0.0007035311427898705,
    -0.018749039620161057,
    -0.010018354281783104,
    -0.010145706124603748,
    0.025668496266007423,
    0.021593233570456505,
    -0.017461368814110756,
    -0.012367290444672108,
    -0.022017739713191986,
    0.0009268393041566014,
    0.01450397353619337,
    -0.007499615661799908,
    -0.021777184680104256,
    0.0020004871767014265,
    0.032743602991104126,
    0.018706588074564934,
    -0.02206018939614296,
    -0.02421102300286293,
    0.003806408727541566,
    -0.027012765407562256,
    -0.01281302236020565,
    -0.04816734045743942,
    0.025725096464157104,
    -0.004128326196223497,
    0.017758524045348167,
    0.005819277372211218,
    -0.013103102333843708,
    -0.01996595785021782,
    0.01855093613266945,
    -0.0250741858035326,
    -0.009225942194461823,
    0.015381286852061749,
    0.03192289173603058,
    0.00952309649437666,
    -0.0011072545312345028,
    -0.029658857733011246,
    0.007421789225190878,
    0.015268085524439812,
    -0.008334478363394737,
    0.009763650596141815,
    0.015140733681619167,
    0.0211262758821249,
    -0.0006973404088057578,
    -0.010556062683463097,
    0.00016781274462118745,
    0.002571802120655775,
    0.015069982036948204,
    0.0017068700399249792,
    -0.019385797902941704,
    -0.020291412249207497,
    0.001280594733543694,
    0.008164675906300545,
    -0.028597591444849968,
    -0.008681158535182476,
    -0.006647064816206694,
    -0.016867060214281082,
    -0.017574571073055267,
    -0.01890469156205654,
    -0.03659246489405632,
    0.016216149553656578,
    0.0015777492662891746,
    0.028243836015462875,
    -0.01093104388564825,
    0.011744680814445019,
    0.036932069808244705,
    0.006615227088332176,
    -0.0049101258628070354,
    -0.004956113640218973,
    0.01632935181260109,
    -0.020008407533168793,
    0.0020783133804798126,
    0.003374827094376087,
    -0.0029556266963481903,
    -0.011037169955670834,
    -0.01682460866868496,
    0.05722348019480705,
    -0.030904076993465424,
    0.0080373240634799,
    -0.0214941818267107,
    -0.03959231078624725,
    -0.019173545762896538,
    -0.0023666240740567446,
    0.02218754217028618,
    -0.030479568988084793,
    0.02218754217028618,
    0.01161025371402502,
    0.01223286334425211,
    0.02828628569841385,
    -0.025526992976665497,
    -0.028795693069696426,
    -0.020928172394633293,
    -0.005087003577500582,
    0.011079620569944382,
    0.013159702531993389,
    -0.030536171048879623,
    0.00794534757733345,
    -0.023560112342238426,
    -0.03531894460320473,
    -0.016668956726789474,
    0.16867059469223022,
    0.005217893049120903,
    0.026517508551478386,
    0.021041374653577805,
    0.018409432843327522,
    0.01596144586801529,
    -0.006756728980690241,
    0.007839220575988293,
    -0.02310730516910553,
    -0.006555088330060244,
    0.01056313794106245,
    -0.006374673452228308,
    -0.0015352986520156264,
    0.012310689315199852,
    0.03172478824853897,
    -0.011681005358695984,
    -0.009947603568434715,
    -0.07063788920640945,
    0.003725044894963503,
    0.007450089789927006,
    0.007648192811757326,
    -0.013152627274394035,
    -0.025031736120581627,
    -0.0363660603761673,
    0.0059855422005057335,
    0.0031537299510091543,
    -0.019739553332328796,
    -0.015324685722589493,
    0.009537247009575367,
    -0.009607997722923756,
    -0.008638707920908928,
    0.006395898759365082,
    -0.0010258908150717616,
    0.015239784494042397,
    -0.025343040004372597,
    -0.004071725066751242,
    0.01601804606616497,
    0.01404409110546112,
    0.0065586259588599205,
    0.025102486833930016,
    -0.013428556732833385,
    -0.049865368753671646,
    0.010343809612095356,
    -0.010768315754830837,
    0.013124327175319195,
    0.004213227424770594,
    -0.0030051525682210922,
    -0.006052755750715733,
    -0.017206665128469467,
    0.041799742728471756,
    -0.04259215667843819,
    -0.02668731100857258,
    0.009784875437617302,
    -0.010067880153656006,
    -0.018451884388923645,
    -0.01706516370177269,
    -0.016003897413611412,
    0.0031537299510091543,
    0.019541451707482338,
    0.02254129759967327,
    0.0021313766483217478,
    0.028116483241319656,
    0.005638862028717995,
    -0.003134273225441575,
    -0.04963896423578262,
    0.014546424150466919,
    -0.05385572835803032,
    0.0010639195097610354,
    0.017164213582873344,
    0.021706433966755867,
    -0.015381286852061749,
    -0.03087577596306801,
    -0.017588721588253975,
    -0.005150679498910904,
    -0.026942014694213867,
    -0.034526530653238297,
    0.04406378045678139,
    0.0021897463593631983,
    0.02593735046684742,
    0.05688387528061867,
    -0.009133965708315372,
    0.004457318689674139,
    -0.003986823838204145,
    0.012897923588752747,
    -0.011129146441817284,
    -0.00018152076518163085,
    -0.010556062683463097,
    -0.009664598852396011,
    0.0005673352861776948,
    -0.027437273412942886,
    -0.005957241635769606,
    -0.022343194112181664,
    0.013301204890012741,
    -0.030762573704123497,
    0.010853216983377934,
    0.010280133225023746,
    0.021946988999843597,
    0.0068840812891721725,
    -0.0026460906956344843,
    -0.005660087335854769,
    -0.02132437936961651,
    0.03795088455080986,
    0.015848243609070778,
    -2.000929271162022e-05,
    0.013265829533338547,
    -0.020857421681284904,
    0.008058548904955387,
    0.007704793941229582,
    0.0009692899184301496,
    -0.006774417124688625,
    0.021154576912522316,
    -0.03630945831537247,
    -0.004980876576155424,
    -0.013980415649712086,
    0.013152627274394035,
    0.014999231323599815,
    -0.014327095821499825,
    -0.01364788506180048,
    0.009317918680608273,
    0.012834248133003712,
    0.025555294007062912,
    -0.019201846793293953,
    0.00023856383631937206,
    0.0017015637131407857,
    -0.0007238721009343863,
    -0.020107459276914597,
    -0.03466803580522537,
    0.03118707984685898,
    -0.01818303018808365,
    -0.0007862214697524905,
    -0.014334171079099178,
    -0.015423737466335297,
    0.02606470137834549,
    0.014716226607561111,
    -0.04332796856760979,
    -0.016980262473225594,
    -0.013110176660120487,
    -0.001959805143997073,
    0.004881825298070908,
    -0.013294129632413387,
    -0.015989746898412704,
    0.014150218106806278,
    0.012190412729978561,
    0.012204563245177269,
    0.03503594174981117,
    -0.008235426619648933,
    0.00856795720756054,
    0.011298948898911476,
    -0.00045678671449422836,
    -0.01577749289572239,
    0.018706588074564934,
    -0.00440425518900156,
    0.029828660190105438,
    -0.004598821047693491,
    -0.01121404767036438,
    -0.005801589228212833,
    -0.025173237547278404,
    -0.03302660956978798,
    0.012586618773639202,
    0.01756042055785656,
    -0.017900025472044945,
    0.001319507835432887,
    0.00020197225967422128,
    -0.008893411606550217,
    -0.007938272319734097,
    -0.03531894460320473,
    -0.176707923412323,
    0.007393489126116037,
    0.009820251725614071,
    -0.034526530653238297,
    -0.01419974397867918,
    -0.013853063806891441,
    0.004641271661967039,
    0.009940528310835361,
    0.021480031311511993,
    -0.004315816331654787,
    0.022965803742408752,
    -0.005281568970531225,
    -0.005706075578927994,
    -0.01361958496272564,
    -0.02494683489203453,
    -0.01371156144887209,
    0.00690176896750927,
    -0.011999384500086308,
    0.026630710810422897,
    0.009791950695216656,
    0.01989520713686943,
    -0.024380825459957123,
    0.0153388362377882,
    0.021267777308821678,
    0.010365034453570843,
    -0.028229685500264168,
    0.016739707440137863,
    0.007372263818979263,
    0.006367598194628954,
    -0.004418405704200268,
    0.03947910666465759,
    0.005904178600758314,
    0.012551243416965008,
    0.011468751356005669,
    0.029234349727630615,
    0.02655996009707451,
    0.020560266450047493,
    -0.021027224138379097,
    -0.0003427006013225764,
    0.011362625285983086,
    0.036620765924453735,
    0.0321492962539196,
    0.02494683489203453,
    -0.03800748661160469,
    -0.02481948211789131,
    -0.017178364098072052,
    0.023871418088674545,
    -0.02457892894744873,
    0.011589028872549534,
    -0.03161158785223961,
    0.019739553332328796,
    -0.024663830175995827,
    -0.00756329158321023,
    0.01750382035970688,
    0.027451423928141594,
    0.007768469862639904,
    0.011921558529138565,
    -0.003675519023090601,
    -0.0021207639947533607,
    0.006204870529472828,
    -0.006480799987912178,
    -0.04250725358724594,
    0.029404152184724808,
    -0.005858190357685089,
    -0.009324993938207626,
    -0.02353181317448616,
    -0.027805179357528687,
    0.0015662522055208683,
    -0.027805179357528687,
    0.008270802907645702,
    -0.00859625730663538,
    0.026220353320240974,
    0.02181963622570038,
    0.01867828704416752,
    0.030847474932670593,
    -0.0024249935522675514,
    -0.037667881697416306,
    0.007121097296476364,
    0.0097353495657444,
    0.029715457931160927,
    -0.03812068700790405,
    0.02791837975382805,
    -0.0003995225706603378,
    -0.009324993938207626,
    0.02692786417901516,
    0.0006933606928214431,
    0.003788720816373825,
    -0.009862702339887619,
    -0.013032350689172745,
    0.01419974397867918,
    0.012190412729978561,
    -0.030592771247029305,
    0.002690310124307871,
    -0.007029120810329914,
    0.00571315037086606,
    0.008928787894546986,
    -0.012119662016630173,
    -0.005186054855585098,
    0.015579390339553356,
    -0.03877159580588341,
    0.016032196581363678,
    0.00012071905075572431,
    -0.018579237163066864,
    0.022102640941739082,
    0.01921599544584751,
    0.04952576383948326,
    -0.020220661535859108,
    -0.0022321969736367464,
    0.013039425946772099,
    0.004634196404367685,
    -0.014801127836108208,
    0.03916780278086662,
    0.002272878773510456,
    0.03769618272781372,
    -0.020687619224190712,
    0.02784762904047966,
    0.008610407821834087,
    -0.006272084079682827,
    0.03537554666399956,
    -0.02433837577700615,
    0.029432453215122223,
    -0.015112432651221752,
    -0.025866597890853882,
    0.003567623673006892,
    0.020772520452737808,
    -0.04293176159262657,
    -0.12135227024555206,
    -0.024111971259117126,
    0.0011311330599710345,
    0.051478493958711624,
    -0.05994032323360443,
    0.02169228345155716,
    -0.012820097617805004,
    0.021409280598163605,
    -0.011383850127458572,
    0.02845608815550804,
    0.008192976005375385,
    -0.008766059763729572,
    -0.01682460866868496,
    0.00634637288749218,
    -0.017093462869524956,
    -0.0008910215692594647,
    -0.03633775934576988,
    -0.039818715304136276,
    0.005062240641564131,
    0.0162586010992527,
    -0.0034809536300599575,
    -0.014588874764740467,
    0.024621378630399704,
    0.009898077696561813,
    -0.011935709044337273,
    0.004690797068178654,
    -0.03591325506567955,
    0.012395591475069523,
    0.012204563245177269,
    0.005154217127710581,
    -0.010089105926454067,
    -0.020560266450047493,
    -0.025343040004372597,
    -0.030592771247029305,
    -0.008766059763729572,
    0.0023613176308572292,
    -0.009409895166754723,
    -0.00634637288749218,
    0.028569290414452553,
    -0.004273365717381239,
    -0.0006071327952668071,
    -0.018197180703282356,
    0.014801127836108208,
    0.008483055979013443,
    0.0011072545312345028,
    0.0001990979944821447,
    0.0026620097924023867,
    0.024720430374145508,
    0.021607382223010063,
    -0.01763117127120495,
    -0.007280287332832813,
    0.009119815193116665,
    -0.012388516217470169,
    -0.006611689459532499,
    0.028540989384055138,
    -0.0016476160380989313,
    -0.0015008074697107077,
    0.005440759006887674,
    -0.003944373223930597,
    -0.004039887338876724,
    0.010867367498576641,
    0.04250725358724594,
    -0.003251012647524476,
    0.01823963038623333,
    0.017291566357016563,
    0.018437733873724937,
    0.013039425946772099,
    0.021267777308821678,
    0.03265870362520218,
    -0.024409126490354538,
    -0.007959498092532158,
    0.016414253041148186,
    -0.03469633311033249,
    0.025173237547278404,
    -0.01792832650244236,
    0.032432299107313156,
    -0.007733094040304422,
    -0.02531474083662033,
    0.01364788506180048,
    -0.005228505469858646,
    -0.005734375678002834,
    0.0065338630229234695,
    -0.01890469156205654,
    -0.00954432226717472,
    -0.0270976684987545,
    -0.0031855679117143154,
    0.0010718790581449866,
    -0.0008547616307623684,
    0.020531967282295227,
    -0.054987747222185135,
    0.03647926077246666,
    -0.012084286659955978,
    0.012423891574144363,
    0.017900025472044945,
    0.026446757838129997,
    -0.0029715457931160927,
    -0.00179796211887151,
    -0.006003229878842831,
    -0.009197642095386982,
    -0.018451884388923645,
    -0.02711181715130806,
    0.006643527187407017,
    -0.06531740725040436,
    0.011780056171119213,
    0.0203904639929533,
    -0.004941963590681553,
    0.010718789882957935,
    -0.015055832453072071,
    0.010895667597651482,
    -0.02476288191974163,
    0.005440759006887674,
    -0.010209382511675358,
    -0.03990361467003822,
    0.002412612084299326,
    -0.038290489464998245,
    -0.01432002056390047,
    0.02532888948917389,
    -0.0028105871751904488,
    0.041063934564590454,
    -0.012855472974479198,
    0.031639888882637024,
    -0.016810458153486252,
    0.002046475186944008,
    -0.02268279902637005,
    0.0317813903093338,
    0.0016688413452357054,
    -0.004892437718808651,
    0.005377083085477352,
    -0.005019790027290583,
    0.018819790333509445,
    -0.008192976005375385,
    -0.021833786740899086,
    0.019003743305802345,
    0.0031077417079359293,
    -0.012395591475069523,
    -0.010966419242322445,
    0.020164061337709427,
    0.013909664005041122,
    0.023800667375326157,
    -0.004291053395718336,
    0.013754012063145638,
    0.00699374545365572,
    -0.020305562764406204,
    -0.026276955381035805,
    0.024805331602692604,
    0.007605742197483778,
    -0.008560881949961185,
    0.005925403907895088,
    0.000863605469930917,
    0.02389971911907196,
    0.017588721588253975,
    -0.017093462869524956,
    0.03789428249001503,
    0.024310074746608734,
    -0.020036708563566208,
    -0.03568685054779053,
    -0.004956113640218973,
    -0.02372991479933262,
    0.01337195560336113,
    0.01093104388564825,
    0.001287669874727726,
    -0.017150064930319786,
    0.030083363875746727,
    0.019697103649377823,
    0.009020764380693436,
    0.015607690438628197,
    -0.014815278351306915,
    -0.02858344092965126,
    -0.043526072055101395,
    0.001751973875798285,
    -0.0054336837492883205,
    -0.018466034904122353,
    0.0046058958396315575,
    -0.020687619224190712,
    0.0005907716113142669,
    0.016541605815291405,
    0.034158624708652496,
    -0.0014220968587324023,
    -0.0317813903093338,
    -0.005235580727458,
    -0.03645096346735954,
    0.025045886635780334,
    0.01161025371402502,
    0.004980876576155424,
    -0.01664065569639206,
    0.008263727650046349,
    0.02303655445575714,
    -0.024777032434940338,
    -0.014603025279939175,
    0.0001489089336246252,
    0.00841230433434248,
    0.011143296957015991,
    -0.003553473623469472,
    0.0007190079777501523,
    -0.021904537454247475,
    0.0026160215493291616,
    0.024975134059786797,
    0.017716072499752045,
    -0.009013689123094082,
    0.017517970874905586,
    0.016980262473225594,
    -0.01823963038623333,
    -0.014716226607561111,
    -0.0009577928576618433,
    -0.013414407148957253,
    -0.007145860232412815,
    0.018098128959536552,
    0.01798492670059204,
    -0.018098128959536552,
    -0.017574571073055267,
    -0.00041743143810890615,
    0.012975749559700489,
    0.0006398551631718874,
    -0.008928787894546986,
    -0.01354883424937725,
    0.031102178618311882,
    -0.027946680784225464,
    0.02810233272612095,
    0.010046654380857944,
    -0.004471468739211559,
    -0.017900025472044945,
    0.017206665128469467,
    0.0028229684103280306,
    0.012374365702271461,
    0.04924275726079941,
    -0.012982824817299843,
    0.013124327175319195,
    0.010421635583043098,
    0.02514493837952614,
    0.0021755960769951344,
    -0.008532581850886345,
    -0.007170623168349266,
    -0.03407372534275055,
    -0.0032244808971881866,
    -0.011206972412765026,
    -0.015918996185064316,
    0.011879107914865017,
    -0.02327710948884487,
    0.019074494019150734,
    -0.012169187888503075,
    -0.006233171094208956,
    0.07409054040908813,
    0.005256806034594774,
    -0.009530171751976013,
    0.006144732236862183,
    -0.0021189951803535223,
    0.036932069808244705,
    0.01768777333199978,
    -0.01693781092762947,
    0.012055985629558563,
    0.006845167838037014,
    -0.0036118431016802788,
    -0.0053204819560050964,
    -0.012820097617805004,
    -0.017348166555166245,
    0.0200225580483675,
    0.01706516370177269,
    -0.024168573319911957,
    0.013499308377504349,
    -0.004998564720153809,
    0.017970776185393333,
    0.025031736120581627,
    0.006052755750715733,
    0.010265983641147614,
    0.004641271661967039,
    -0.009254242293536663,
    0.005401845555752516,
    0.025357190519571304,
    0.015466188080608845,
    -0.017588721588253975,
    -0.05099738761782646,
    0.005239118356257677,
    0.009395744651556015,
    -0.020107459276914597,
    -0.011907408945262432,
    -0.022626198828220367,
    0.008277877233922482,
    -0.01170223020017147,
    -0.017107613384723663,
    0.02114042639732361,
    0.036196257919073105,
    -0.003258087672293186,
    -0.010633888654410839,
    -0.011242348700761795,
    -0.021607382223010063,
    0.010251833125948906,
    0.006325147580355406,
    0.0001628380559850484,
    0.0006703665712848306,
    -0.05614806339144707
  ]
}
{
  "classifiers": [
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "repository of pre-trained nlp transformer models: bert & roberta, gpt & gpt-2, transformer-xl, xlnet and xlm\n# \ud83d\udc7e pytorch-transformers\n\n[![circleci](https://circleci.com/gh/huggingface/pytorch-transformers.svg?style=svg)](https://circleci.com/gh/huggingface/pytorch-transformers)\n\npytorch-transformers (formerly known as `pytorch-pretrained-bert`) is a library of state-of-the-art pre-trained models for natural language processing (nlp).\n\nthe library currently contains pytorch implementations, pre-trained model weights, usage scripts and conversion utilities for the following models:\n\n1. **[bert](https://github.com/google-research/bert)** (from google) released with the paper [bert: pre-training of deep bidirectional transformers for language understanding](https://arxiv.org/abs/1810.04805) by jacob devlin, ming-wei chang, kenton lee and kristina toutanova.\n2. **[gpt](https://github.com/openai/finetune-transformer-lm)** (from openai) released with the paper [improving language understanding by generative pre-training](https://blog.openai.com/language-unsupervised/) by alec radford, karthik narasimhan, tim salimans and ilya sutskever.\n3. **[gpt-2](https://blog.openai.com/better-language-models/)** (from openai) released with the paper [language models are unsupervised multitask learners](https://blog.openai.com/better-language-models/) by alec radford*, jeffrey wu*, rewon child, david luan, dario amodei** and ilya sutskever**.\n4. **[transformer-xl](https://github.com/kimiyoung/transformer-xl)** (from google/cmu) released with the paper [transformer-xl: attentive language models beyond a fixed-length context](https://arxiv.org/abs/1901.02860) by zihang dai*, zhilin yang*, yiming yang, jaime carbonell, quoc v. le, ruslan salakhutdinov.\n5. **[xlnet](https://github.com/zihangdai/xlnet/)** (from google/cmu) released with the paper [\u200bxlnet: generalized autoregressive pretraining for language understanding](https://arxiv.org/abs/1906.08237) by zhilin yang*, zihang dai*, yiming yang, jaime carbonell, ruslan salakhutdinov, quoc v. le.\n6. **[xlm](https://github.com/facebookresearch/xlm/)** (from facebook) released together with the paper [cross-lingual language model pretraining](https://arxiv.org/abs/1901.07291) by guillaume lample and alexis conneau.\n7. **[roberta](https://github.com/pytorch/fairseq/tree/master/examples/roberta)** (from facebook), released together with the paper a [robustly optimized bert pretraining approach](https://arxiv.org/abs/1907.11692) by yinhan liu, myle ott, naman goyal, jingfei du, mandar joshi, danqi chen, omer levy, mike lewis, luke zettlemoyer, veselin stoyanov.\n8. **[distilbert](https://github.com/huggingface/pytorch-transformers/tree/master/examples/distillation)** (from huggingface), released together with the blogpost [smaller, faster, cheaper, lighter: introducing distilbert, a distilled version of\u00a0bert](https://medium.com/huggingface/distilbert-8cf3380435b5\n) by victor sanh, lysandre debut and thomas wolf.\n\nthese implementations have been tested on several datasets (see the example scripts) and should match the performances of the original implementations (e.g. ~93 f1 on squad for bert whole-word-masking, ~88 f1 on rocstories for openai gpt, ~18.3 perplexity on wikitext 103 for transformer-xl, ~0.916 peason r coefficient on sts-b for xlnet). you can find more details on the performances in the examples section of the [documentation](https://huggingface.co/pytorch-transformers/examples.html).\n\n| section | description |\n|-|-|\n| [installation](#installation) | how to install the package |\n| [quick tour: usage](#quick-tour) | tokenizers & models usage: bert and gpt-2 |\n| [quick tour: fine-tuning/usage scripts](#quick-tour-of-the-fine-tuningusage-scripts) | using provided scripts: glue, squad and text generation |\n| [migrating from pytorch-pretrained-bert to pytorch-transformers](#migrating-from-pytorch-pretrained-bert-to-pytorch-transformers) | migrating your code from pytorch-pretrained-bert to pytorch-transformers |\n| [documentation](https://huggingface.co/pytorch-transformers/) | full api documentation and more |\n\n## installation\n\nthis repo is tested on python 2.7 and 3.5+ (examples are tested only on python 3.5+) and pytorch 1.0.0+\n\n### with pip\n\npytorch-transformers can be installed by pip as follows:\n\n```bash\npip install pytorch-transformers\n```\n\n### from source\n\nclone the repository and run:\n\n```bash\npip install [--editable] .\n```\n\n### tests\n\na series of tests is included for the library and the example scripts. library tests can be found in the [tests folder](https://github.com/huggingface/pytorch-transformers/tree/master/pytorch_transformers/tests) and examples tests in the [examples folder](https://github.com/huggingface/pytorch-transformers/tree/master/examples).\n\nthese tests can be run using `pytest` (install pytest if needed with `pip install pytest`).\n\nyou can run the tests from the root of the cloned repository with the commands:\n\n```bash\npython -m pytest -sv ./pytorch_transformers/tests/\npython -m pytest -sv ./examples/\n```\n\n### do you want to run a transformer model on a mobile device?\n\nyou should check out our [`swift-coreml-transformers`](https://github.com/huggingface/swift-coreml-transformers) repo.\n\nit contains an example of a conversion script from a pytorch trained transformer model (here, `gpt-2`) to a coreml model that runs on ios devices.\n\nat some point in the future, you'll be able to seamlessly move from pre-training or fine-tuning models in pytorch to productizing them in coreml,\nor prototype a model or an app in coreml then research its hyperparameters or architecture from pytorch. super exciting!\n\n\n## quick tour\n\nlet's do a very quick overview of pytorch-transformers. detailed examples for each model architecture (bert, gpt, gpt-2, transformer-xl, xlnet and xlm) can be found in the [full documentation](https://huggingface.co/pytorch-transformers/).\n\n```python\nimport torch\nfrom pytorch_transformers import *\n\n# pytorch-transformers has a unified api\n# for 7 transformer architectures and 30 pretrained weights.\n#          model          | tokenizer          | pretrained weights shortcut\nmodels = [(bertmodel,       berttokenizer,      'bert-base-uncased'),\n          (openaigptmodel,  openaigpttokenizer, 'openai-gpt'),\n          (gpt2model,       gpt2tokenizer,      'gpt2'),\n          (transfoxlmodel,  transfoxltokenizer, 'transfo-xl-wt103'),\n          (xlnetmodel,      xlnettokenizer,     'xlnet-base-cased'),\n          (xlmmodel,        xlmtokenizer,       'xlm-mlm-enfr-1024'),\n          (robertamodel,    robertatokenizer,   'roberta-base')]\n\n# let's encode some text in a sequence of hidden-states using each model:\nfor model_class, tokenizer_class, pretrained_weights in models:\n    # load pretrained model/tokenizer\n    tokenizer = tokenizer_class.from_pretrained(pretrained_weights)\n    model = model_class.from_pretrained(pretrained_weights)\n\n    # encode text\n    input_ids = torch.tensor([tokenizer.encode(\"here is some text to encode\", add_special_tokens=true)])  # add special tokens takes care of adding [cls], [sep], <s>... tokens in the right way for each model.\n    with torch.no_grad():\n        last_hidden_states = model(input_ids)[0]  # models outputs are now tuples\n\n# each architecture is provided with several class for fine-tuning on down-stream tasks, e.g.\nbert_model_classes = [bertmodel, bertforpretraining, bertformaskedlm, bertfornextsentenceprediction,\n                      bertforsequenceclassification, bertformultiplechoice, bertfortokenclassification,\n                      bertforquestionanswering]\n\n# all the classes for an architecture can be initiated from pretrained weights for this architecture\n# note that additional weights added for fine-tuning are only initialized\n# and need to be trained on the down-stream task\ntokenizer = berttokenizer.from_pretrained('bert-base-uncased')\nfor model_class in bert_model_classes:\n    # load pretrained model/tokenizer\n    model = model_class.from_pretrained('bert-base-uncased')\n\n# models can return full list of hidden-states & attentions weights at each layer\nmodel = model_class.from_pretrained(pretrained_weights,\n                                    output_hidden_states=true,\n                                    output_attentions=true)\ninput_ids = torch.tensor([tokenizer.encode(\"let's see all hidden-states and attentions on this text\")])\nall_hidden_states, all_attentions = model(input_ids)[-2:]\n\n# models are compatible with torchscript\nmodel = model_class.from_pretrained(pretrained_weights, torchscript=true)\ntraced_model = torch.jit.trace(model, (input_ids,))\n\n# simple serialization for models and tokenizers\nmodel.save_pretrained('./directory/to/save/')  # save\nmodel = model_class.from_pretrained('./directory/to/save/')  # re-load\ntokenizer.save_pretrained('./directory/to/save/')  # save\ntokenizer = tokenizer_class.from_pretrained('./directory/to/save/')  # re-load\n\n# sota examples for glue, squad, text generation...\n```\n\n## quick tour of the fine-tuning/usage scripts\n\nthe library comprises several example scripts with sota performances for nlu and nlg tasks:\n\n- `run_glue.py`: an example fine-tuning bert, xlnet and xlm on nine different glue tasks (*sequence-level classification*)\n- `run_squad.py`: an example fine-tuning bert, xlnet and xlm on the question answering dataset squad 2.0 (*token-level classification*)\n- `run_generation.py`: an example using gpt, gpt-2, transformer-xl and xlnet for conditional language generation\n- other model-specific examples (see the documentation).\n\nhere are three quick usage examples for these scripts:\n\n### `run_glue.py`: fine-tuning on glue tasks for sequence classification\n\nthe [general language understanding evaluation (glue) benchmark](https://gluebenchmark.com/) is a collection of nine sentence- or sentence-pair language understanding tasks for evaluating and analyzing natural language understanding systems.\n\nbefore running anyone of these glue tasks you should download the\n[glue data](https://gluebenchmark.com/tasks) by running\n[this script](https://gist.github.com/w4ngatang/60c2bdb54d156a41194446737ce03e2e)\nand unpack it to some directory `$glue_dir`.\n\nyou should also install the additional packages required by the examples:\n\n```shell\npip install -r ./examples/requirements.txt\n```\n\n```shell\nexport glue_dir=/path/to/glue\nexport task_name=mrpc\n\npython ./examples/run_glue.py \\\n    --model_type bert \\\n    --model_name_or_path bert-base-uncased \\\n    --task_name $task_name \\\n    --do_train \\\n    --do_eval \\\n    --do_lower_case \\\n    --data_dir $glue_dir/$task_name \\\n    --max_seq_length 128 \\\n    --per_gpu_eval_batch_size=8   \\\n    --per_gpu_train_batch_size=8   \\\n    --learning_rate 2e-5 \\\n    --num_train_epochs 3.0 \\\n    --output_dir /tmp/$task_name/\n```\n\nwhere task name can be one of cola, sst-2, mrpc, sts-b, qqp, mnli, qnli, rte, wnli.\n\nthe dev set results will be present within the text file 'eval_results.txt' in the specified output_dir. in case of mnli, since there are two separate dev sets, matched and mismatched, there will be a separate output folder called '/tmp/mnli-mm/' in addition to '/tmp/mnli/'.\n\n#### fine-tuning xlnet model on the sts-b regression task\n\nthis example code fine-tunes xlnet on the sts-b corpus using parallel training on a server with 4 v100 gpus.\nparallel training is a simple way to use several gpus (but is slower and less flexible than distributed training, see below).\n\n```shell\nexport glue_dir=/path/to/glue\n\npython ./examples/run_glue.py \\\n    --model_type xlnet \\\n    --model_name_or_path xlnet-large-cased \\\n    --do_train  \\\n    --do_eval   \\\n    --task_name=sts-b     \\\n    --data_dir=${glue_dir}/sts-b  \\\n    --output_dir=./proc_data/sts-b-110   \\\n    --max_seq_length=128   \\\n    --per_gpu_eval_batch_size=8   \\\n    --per_gpu_train_batch_size=8   \\\n    --gradient_accumulation_steps=1 \\\n    --max_steps=1200  \\\n    --model_name=xlnet-large-cased   \\\n    --overwrite_output_dir   \\\n    --overwrite_cache \\\n    --warmup_steps=120\n```\n\non this machine we thus have a batch size of 32, please increase `gradient_accumulation_steps` to reach the same batch size if you have a smaller machine. these hyper-parameters should result in a pearson correlation coefficient of `+0.917` on the development set.\n\n#### fine-tuning bert model on the mrpc classification task\n\nthis example code fine-tunes the bert whole word masking model on the microsoft research paraphrase corpus (mrpc) corpus using distributed training on 8 v100 gpus to reach a f1 > 92.\n\n```bash\npython -m torch.distributed.launch --nproc_per_node 8 ./examples/run_glue.py   \\\n    --model_type bert \\\n    --model_name_or_path bert-large-uncased-whole-word-masking \\\n    --task_name mrpc \\\n    --do_train   \\\n    --do_eval   \\\n    --do_lower_case   \\\n    --data_dir $glue_dir/mrpc/   \\\n    --max_seq_length 128   \\\n    --per_gpu_eval_batch_size=8   \\\n    --per_gpu_train_batch_size=8   \\\n    --learning_rate 2e-5   \\\n    --num_train_epochs 3.0  \\\n    --output_dir /tmp/mrpc_output/ \\\n    --overwrite_output_dir   \\\n    --overwrite_cache \\\n```\n\ntraining with these hyper-parameters gave us the following results:\n\n```bash\n  acc = 0.8823529411764706\n  acc_and_f1 = 0.901702786377709\n  eval_loss = 0.3418912578906332\n  f1 = 0.9210526315789473\n  global_step = 174\n  loss = 0.07231863956341798\n```\n\n### `run_squad.py`: fine-tuning on squad for question-answering\n\nthis example code fine-tunes bert on the squad dataset using distributed training on 8 v100 gpus and bert whole word masking uncased model to reach a f1 > 93 on squad:\n\n```bash\npython -m torch.distributed.launch --nproc_per_node=8 ./examples/run_squad.py \\\n    --model_type bert \\\n    --model_name_or_path bert-large-uncased-whole-word-masking \\\n    --do_train \\\n    --do_eval \\\n    --do_lower_case \\\n    --train_file $squad_dir/train-v1.1.json \\\n    --predict_file $squad_dir/dev-v1.1.json \\\n    --learning_rate 3e-5 \\\n    --num_train_epochs 2 \\\n    --max_seq_length 384 \\\n    --doc_stride 128 \\\n    --output_dir ../models/wwm_uncased_finetuned_squad/ \\\n    --per_gpu_eval_batch_size=3   \\\n    --per_gpu_train_batch_size=3   \\\n```\n\ntraining with these hyper-parameters gave us the following results:\n\n```bash\npython $squad_dir/evaluate-v1.1.py $squad_dir/dev-v1.1.json ../models/wwm_uncased_finetuned_squad/predictions.json\n{\"exact_match\": 86.91579943235573, \"f1\": 93.1532499015869}\n```\n\nthis is the model provided as `bert-large-uncased-whole-word-masking-finetuned-squad`.\n\n### `run_generation.py`: text generation with gpt, gpt-2, transformer-xl and xlnet\n\na conditional generation script is also included to generate text from a prompt.\nthe generation script includes the [tricks](https://github.com/rusiaaman/xlnet-gen#methodology) proposed by by aman rusia to get high quality generation with memory models like transformer-xl and xlnet (include a predefined text to make short inputs longer).\n\nhere is how to run the script with the small version of openai gpt-2 model:\n\n```shell\npython ./examples/run_generation.py \\\n    --model_type=gpt2 \\\n    --length=20 \\\n    --model_name_or_path=gpt2 \\\n```\n\n## migrating from pytorch-pretrained-bert to pytorch-transformers\n\nhere is a quick summary of what you should take care of when migrating from `pytorch-pretrained-bert` to `pytorch-transformers`\n\n### models always output `tuples`\n\nthe main breaking change when migrating from `pytorch-pretrained-bert` to `pytorch-transformers` is that the models forward method always outputs a `tuple` with various elements depending on the model and the configuration parameters.\n\nthe exact content of the tuples for each model are detailed in the models' docstrings and the [documentation](https://huggingface.co/pytorch-transformers/).\n\nin pretty much every case, you will be fine by taking the first element of the output as the output you previously used in `pytorch-pretrained-bert`.\n\nhere is a `pytorch-pretrained-bert` to `pytorch-transformers` conversion example for a `bertforsequenceclassification` classification model:\n\n```python\n# let's load our model\nmodel = bertforsequenceclassification.from_pretrained('bert-base-uncased')\n\n# if you used to have this line in pytorch-pretrained-bert:\nloss = model(input_ids, labels=labels)\n\n# now just use this line in pytorch-transformers to extract the loss from the output tuple:\noutputs = model(input_ids, labels=labels)\nloss = outputs[0]\n\n# in pytorch-transformers you can also have access to the logits:\nloss, logits = outputs[:2]\n\n# and even the attention weights if you configure the model to output them (and other outputs too, see the docstrings and documentation)\nmodel = bertforsequenceclassification.from_pretrained('bert-base-uncased', output_attentions=true)\noutputs = model(input_ids, labels=labels)\nloss, logits, attentions = outputs\n```\n\n### serialization\n\nbreaking change in the `from_pretrained()`method:\n\n1. models are now set in evaluation mode by default when instantiated with the `from_pretrained()` method. to train them don't forget to set them back in training mode (`model.train()`) to activate the dropout modules.\n\n2. the additional `*input` and `**kwargs` arguments supplied to the `from_pretrained()` method used to be directly passed to the underlying model's class `__init__()` method. they are now used to update the model configuration attribute instead which can break derived model classes build based on the previous `bertforsequenceclassification` examples. we are working on a way to mitigate this breaking change in [#866](https://github.com/huggingface/pytorch-transformers/pull/866) by forwarding the the model `__init__()` method (i) the provided positional arguments and (ii) the keyword arguments which do not match any configuration class attributes.\n\nalso, while not a breaking change, the serialization methods have been standardized and you probably should switch to the new method `save_pretrained(save_directory)` if you were using any other serialization method before.\n\nhere is an example:\n\n```python\n### let's load a model and tokenizer\nmodel = bertforsequenceclassification.from_pretrained('bert-base-uncased')\ntokenizer = berttokenizer.from_pretrained('bert-base-uncased')\n\n### do some stuff to our model and tokenizer\n# ex: add new tokens to the vocabulary and embeddings of our model\ntokenizer.add_tokens(['[special_token_1]', '[special_token_2]'])\nmodel.resize_token_embeddings(len(tokenizer))\n# train our model\ntrain(model)\n\n### now let's save our model and tokenizer to a directory\nmodel.save_pretrained('./my_saved_model_directory/')\ntokenizer.save_pretrained('./my_saved_model_directory/')\n\n### reload the model and the tokenizer\nmodel = bertforsequenceclassification.from_pretrained('./my_saved_model_directory/')\ntokenizer = berttokenizer.from_pretrained('./my_saved_model_directory/')\n```\n\n### optimizers: bertadam & openaiadam are now adamw, schedules are standard pytorch schedules\n\nthe two optimizers previously included, `bertadam` and `openaiadam`, have been replaced by a single `adamw` optimizer which has a few differences:\n\n- it only implements weights decay correction,\n- schedules are now externals (see below),\n- gradient clipping is now also external (see below).\n\nthe new optimizer `adamw` matches pytorch `adam` optimizer api and let you use standard pytorch or apex methods for the schedule and clipping.\n\nthe schedules are now standard [pytorch learning rate schedulers](https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate) and not part of the optimizer anymore.\n\nhere is a conversion examples from `bertadam` with a linear warmup and decay schedule to `adamw` and the same schedule:\n\n```python\n# parameters:\nlr = 1e-3\nmax_grad_norm = 1.0\nnum_total_steps = 1000\nnum_warmup_steps = 100\nwarmup_proportion = float(num_warmup_steps) / float(num_total_steps)  # 0.1\n\n### previously bertadam optimizer was instantiated like this:\noptimizer = bertadam(model.parameters(), lr=lr, schedule='warmup_linear', warmup=warmup_proportion, t_total=num_total_steps)\n### and used like this:\nfor batch in train_data:\n    loss = model(batch)\n    loss.backward()\n    optimizer.step()\n\n### in pytorch-transformers, optimizer and schedules are splitted and instantiated like this:\noptimizer = adamw(model.parameters(), lr=lr, correct_bias=false)  # to reproduce bertadam specific behavior set correct_bias=false\nscheduler = warmuplinearschedule(optimizer, warmup_steps=num_warmup_steps, t_total=num_total_steps)  # pytorch scheduler\n### and used like this:\nfor batch in train_data:\n    loss = model(batch)\n    loss.backward()\n    torch.nn.utils.clip_grad_norm_(model.parameters(), max_grad_norm)  # gradient clipping is not in adamw anymore (so you can use amp without issue)\n    optimizer.step()\n    scheduler.step()\n    optimizer.zero_grad()\n```\n\n## citation\n\nat the moment, there is no paper associated to pytorch-transformers but we are working on preparing one. in the meantime, please include a mention of the library and a link to the present repository if you use this work in a published or open-source project.\n\n\n",
  "docs_url": null,
  "keywords": "nlp deep learning transformer pytorch bert gpt gpt-2 google openai cmu",
  "license": "apache",
  "name": "pytorch-transformers",
  "package_url": "https://pypi.org/project/pytorch-transformers/",
  "project_url": "https://pypi.org/project/pytorch-transformers/",
  "project_urls": {
    "Homepage": "https://github.com/huggingface/pytorch-transformers"
  },
  "release_url": "https://pypi.org/project/pytorch-transformers/1.2.0/",
  "requires_dist": [
    "torch (>=1.0.0)",
    "numpy",
    "boto3",
    "requests",
    "tqdm",
    "regex",
    "sentencepiece",
    "sacremoses"
  ],
  "requires_python": "",
  "summary": "repository of pre-trained nlp transformer models: bert & roberta, gpt & gpt-2, transformer-xl, xlnet and xlm",
  "version": "1.2.0",
  "releases": [],
  "developers": [
    "thomas@huggingface.co",
    "thomas_wolf"
  ],
  "kwds": "bertforpretraining pytorch_transformers bert_model_classes bert bertfornextsentenceprediction",
  "license_kwds": "apache",
  "libtype": "pypi",
  "id": "pypi_pytorch_transformers",
  "homepage": "https://github.com/huggingface/pytorch-transformers",
  "release_count": 4,
  "dependency_ids": [
    "pypi_boto3",
    "pypi_numpy",
    "pypi_regex",
    "pypi_requests",
    "pypi_sacremoses",
    "pypi_sentencepiece",
    "pypi_torch",
    "pypi_tqdm"
  ],
  "documentation_summary": "The GitHub repository \"huggingface/transformers\" provides a comprehensive library for state-of-the-art machine learning using PyTorch, TensorFlow, and JAX. It offers thousands of pre-trained models for various modalities such as text, vision, and audio, supporting tasks like text classification, information extraction, question answering, image classification, object detection, and speech recognition. The library enables easy downloading and use of these models, fine-tuning on custom datasets, and sharing models within the community. It supports seamless integration across the three major deep learning libraries, allowing for easy model training and inference. The repository also includes documentation, examples, and tools for code review, issue tracking, and project management, making it a valuable resource for developers, researchers, and educators in the machine learning field.",
  "embedding": [
    -0.01055575255304575,
    -0.0024090036749839783,
    -0.001792603055946529,
    -0.015437433496117592,
    -0.0010311668738722801,
    -0.002126007806509733,
    0.019753122702240944,
    0.013576734811067581,
    -0.0099260862916708,
    -0.03922325000166893,
    0.02856845036149025,
    0.01990877091884613,
    -0.04140232130885124,
    0.007704567164182663,
    -0.006484146695584059,
    -0.018281543627381325,
    0.022073691710829735,
    -0.017630653455853462,
    0.013329113833606243,
    -0.007768241222947836,
    0.017418406903743744,
    -0.022002942860126495,
    -0.034270819276571274,
    -0.02330472320318222,
    -0.018083447590470314,
    -0.0008498724782839417,
    0.03800636902451515,
    -0.029884381219744682,
    -0.0033340470399707556,
    -0.006133939139544964,
    0.01838059350848198,
    0.020729459822177887,
    -0.02343207225203514,
    -0.018083447590470314,
    0.01651281863451004,
    -0.007039526477456093,
    0.023757517337799072,
    -0.014630895107984543,
    0.01570628024637699,
    -0.002783973468467593,
    0.008079537190496922,
    0.02429521083831787,
    0.00759136863052845,
    0.0008193619432859123,
    -0.020262517035007477,
    0.009600640274584293,
    -0.0126216234639287,
    -0.022215189412236214,
    -0.014857292175292969,
    0.00919029675424099,
    0.00692279078066349,
    0.023403773084282875,
    -0.005175290163606405,
    -0.008348383009433746,
    -0.02957308664917946,
    -0.0013380406890064478,
    0.0030722757801413536,
    0.020757758989930153,
    -0.0042449408210814,
    0.013138091191649437,
    0.0017572285141795874,
    0.01038595475256443,
    -0.04460017755627632,
    -0.008864850737154484,
    -0.0066327196545898914,
    -0.010067583993077278,
    -0.009331794455647469,
    0.02123885229229927,
    -0.0005452095647342503,
    -0.020149318501353264,
    0.027577964588999748,
    0.037666771560907364,
    0.017092959955334663,
    -0.01188583392649889,
    0.037044182419776917,
    -0.017333507537841797,
    -0.010166632942855358,
    0.002085327170789242,
    -0.03277094289660454,
    0.006607957649976015,
    0.01408612821251154,
    0.009183221496641636,
    -0.008313008584082127,
    0.01904563419520855,
    0.005744819529354572,
    0.014503546990454197,
    -0.007846064865589142,
    0.0006495643174275756,
    -0.03390292450785637,
    0.009133697487413883,
    0.03769507259130478,
    0.006066727451980114,
    0.011744335293769836,
    0.006187000777572393,
    0.0071244253776967525,
    0.020191768184304237,
    -0.032318148761987686,
    0.022950978949666023,
    0.001887229853309691,
    -0.023007577285170555,
    -0.005794344004243612,
    0.01850794069468975,
    -0.007930964231491089,
    -0.00969261396676302,
    -0.02542719431221485,
    -0.0066185700707137585,
    0.0018359367968514562,
    0.02003611996769905,
    -0.011800934560596943,
    0.023474521934986115,
    -0.005143452901393175,
    0.025073448196053505,
    -0.011645287275314331,
    -0.03981754183769226,
    0.004460725001990795,
    0.0031518684700131416,
    0.030308876186609268,
    -0.02023421600461006,
    0.007106738165020943,
    -0.004973655566573143,
    0.018012698739767075,
    0.028610900044441223,
    -0.0008644644403830171,
    -0.015932677313685417,
    0.01185045950114727,
    0.0010037515312433243,
    -0.010173707269132137,
    0.006600882392376661,
    -0.0007101431838236749,
    -0.02769116312265396,
    0.012465975247323513,
    0.005896930117160082,
    0.015819478780031204,
    -0.005889854859560728,
    -0.015508183278143406,
    0.0111854188144207,
    -0.006477071903645992,
    -0.030393773689866066,
    -0.037666771560907364,
    -0.020418163388967514,
    0.00981996301561594,
    0.017078811302781105,
    -0.008482806384563446,
    -0.01938522793352604,
    -0.012197129428386688,
    0.030874866992235184,
    0.0036170431412756443,
    0.0033499656710773706,
    0.011836308985948563,
    0.0016714453231543303,
    0.019951220601797104,
    -0.030733369290828705,
    -0.012572099454700947,
    0.00985533744096756,
    0.004856919404119253,
    0.0008299743058159947,
    -0.001765187829732895,
    0.005794344004243612,
    -0.029997579753398895,
    0.004545623902231455,
    -0.01294706854969263,
    0.018069297075271606,
    -0.01804099790751934,
    -0.005720057524740696,
    -0.0033252034336328506,
    0.02883729711174965,
    0.01471579447388649,
    -0.004612835589796305,
    -0.017885349690914154,
    -0.013406937010586262,
    0.010265680961310863,
    0.0014255925780162215,
    -0.04593025892972946,
    0.005681145470589399,
    0.010548677295446396,
    0.007265923079103231,
    0.01712126098573208,
    -0.0022303625009953976,
    -0.021224703639745712,
    0.0012487199855968356,
    0.022342536598443985,
    -0.014531846158206463,
    0.006438159849494696,
    0.05065629258751869,
    -0.0010258606635034084,
    -0.03095976635813713,
    -0.01298244297504425,
    -0.0011196030536666512,
    -0.003753234865143895,
    -0.00025469643878750503,
    0.01139059104025364,
    0.03820446506142616,
    0.007117350585758686,
    -0.005016104783862829,
    -0.5890845656394958,
    -0.01724860817193985,
    -0.018281543627381325,
    -0.027351567521691322,
    0.012869244441390038,
    0.0038735081907361746,
    0.002987376879900694,
    0.023983914405107498,
    -0.041458919644355774,
    0.03367652744054794,
    -0.030846567824482918,
    -0.005776656791567802,
    -0.0009887174237519503,
    -0.005270801018923521,
    -0.01384558156132698,
    -0.023078326135873795,
    -0.008022937923669815,
    -0.02258308418095112,
    -0.0005071819759905338,
    0.01122079323977232,
    -0.019526727497577667,
    0.032855838537216187,
    -0.01997951976954937,
    0.00023877790954429656,
    -0.010131258517503738,
    0.023545270785689354,
    0.00426262803375721,
    -0.0004912634612992406,
    0.04293049871921539,
    -0.013605034910142422,
    -0.027082720771431923,
    0.02184729464352131,
    0.01838059350848198,
    -0.013208840042352676,
    0.04086462780833244,
    0.006406323052942753,
    -0.02835620380938053,
    0.033535029739141464,
    0.024281060323119164,
    0.04044013470411301,
    -0.031865354627370834,
    -0.01597512699663639,
    -0.009749213233590126,
    0.007407421246170998,
    0.030874866992235184,
    0.019498426467180252,
    -0.0015379065880551934,
    0.02324812486767769,
    -0.004598685540258884,
    0.011050995439291,
    0.0006619454361498356,
    -0.005072704050689936,
    0.008808251470327377,
    -0.019668225198984146,
    0.022271787747740746,
    -0.0007764704059809446,
    0.030252275988459587,
    -0.029063692316412926,
    0.010329355485737324,
    -0.006756530608981848,
    0.012770196422934532,
    0.040128838270902634,
    0.007106738165020943,
    -0.02409711293876171,
    -0.013923404738307,
    0.006636257283389568,
    -0.009508666582405567,
    -0.015366684645414352,
    0.004266165196895599,
    -0.01645622029900551,
    0.022484036162495613,
    0.0023470984306186438,
    0.0025239710230380297,
    -0.014645044691860676,
    0.015097838826477528,
    0.045845359563827515,
    0.01778630167245865,
    0.02563944086432457,
    0.008794101886451244,
    0.033393532037734985,
    0.03410102427005768,
    -0.001301781740039587,
    0.01102269534021616,
    -0.014956341125071049,
    0.035063210874795914,
    0.0195833258330822,
    0.009933160617947578,
    0.009593565948307514,
    0.0008542942814528942,
    0.008277634158730507,
    0.004761408548802137,
    0.037723373621702194,
    -0.024988550692796707,
    -0.05108078569173813,
    0.011001471430063248,
    0.009862411767244339,
    -0.010605276562273502,
    9.346607112092897e-05,
    -0.0004682700091507286,
    -0.018408892676234245,
    0.012671147473156452,
    -0.006547820754349232,
    -0.000966608349699527,
    0.021054904907941818,
    0.01192120835185051,
    0.016003426164388657,
    -0.01645622029900551,
    -0.008631379343569279,
    0.0011116438545286655,
    -0.020290816202759743,
    -0.02457820624113083,
    -0.0019013796700164676,
    -0.028398651629686356,
    0.0012602166971191764,
    0.0058226436376571655,
    -0.026516728103160858,
    0.014758243225514889,
    0.00490998150780797,
    -0.000504528870806098,
    -0.022851930931210518,
    0.015324235893785954,
    -0.0006362989079207182,
    0.00769041758030653,
    -0.01059112697839737,
    0.03311053663492203,
    0.0036329615395516157,
    0.01818249560892582,
    -0.02563944086432457,
    -0.007499394938349724,
    0.017687251791357994,
    0.026785574853420258,
    0.0038062967360019684,
    0.020092718303203583,
    -0.012699447572231293,
    0.02531399577856064,
    0.031242763623595238,
    0.01965407468378544,
    0.00550781050696969,
    0.0303654745221138,
    0.0027910484932363033,
    -0.010534527711570263,
    0.019540876150131226,
    0.008539405651390553,
    -0.02171994559466839,
    -0.021210553124547005,
    -0.007393271662294865,
    -0.005486585665494204,
    -0.00035971449688076973,
    0.009529891423881054,
    -0.011107594706118107,
    -0.014079052954912186,
    0.00025292771169915795,
    -0.021267151460051537,
    0.008942674845457077,
    0.0020163466688245535,
    0.002366554457694292,
    -0.02050306275486946,
    -0.03630839288234711,
    -0.024139562621712685,
    -0.018168345093727112,
    0.017460854724049568,
    0.03135596215724945,
    -0.007152725011110306,
    0.007265923079103231,
    -0.029261790215969086,
    0.013201764784753323,
    -0.020389864221215248,
    0.04842062294483185,
    -0.01511198841035366,
    -0.047967828810214996,
    0.018833385780453682,
    -0.038062967360019684,
    -0.007662117946892977,
    0.010223232209682465,
    0.009317644871771336,
    0.013824356719851494,
    -0.025130048394203186,
    0.011843384243547916,
    -0.005521960090845823,
    -0.005330937914550304,
    -0.012890469282865524,
    0.02382826618850231,
    -0.040977828204631805,
    0.0020994767546653748,
    0.026332780718803406,
    0.02217273972928524,
    0.015196886844933033,
    -0.008829476311802864,
    -0.015027089975774288,
    -0.013392787426710129,
    -0.013194690458476543,
    0.002982070669531822,
    -0.013718233443796635,
    0.015409134328365326,
    -0.013067342340946198,
    0.0016820577438920736,
    0.03195025399327278,
    -0.007209324277937412,
    -0.0099260862916708,
    0.030450373888015747,
    0.0037603098899126053,
    0.0325162447988987,
    -0.007619668263942003,
    -0.03016737848520279,
    -0.01845134235918522,
    -0.024153711274266243,
    0.0154515840113163,
    -0.01717785932123661,
    0.0034755452070385218,
    -0.004690659232437611,
    0.03155405819416046,
    -0.0029555398505181074,
    -0.03814786672592163,
    -0.025950737297534943,
    -0.004683584440499544,
    0.024917801842093468,
    -0.002271043136715889,
    0.02476215362548828,
    -0.03461041674017906,
    -0.005808493588119745,
    0.009841186925768852,
    0.021988792344927788,
    0.008744577877223492,
    0.006657481659203768,
    -0.007980488240718842,
    0.008433282375335693,
    0.010605276562273502,
    0.004701271653175354,
    0.005514885298907757,
    -0.01638547144830227,
    -0.0024072350934147835,
    0.027677012607455254,
    0.0022356687113642693,
    -0.011319841258227825,
    0.012274953536689281,
    0.018805086612701416,
    0.028582600876688957,
    -0.022795330733060837,
    0.022130290046334267,
    -0.015805328264832497,
    0.022554785013198853,
    -0.010209081694483757,
    0.017998548224568367,
    -0.0034348643384873867,
    0.028794847428798676,
    0.014454022981226444,
    0.021352050825953484,
    0.02104075625538826,
    -0.02704027108848095,
    -0.0031624806579202414,
    -0.018960734829306602,
    0.004662359599024057,
    0.0064416974782943726,
    -0.007966338656842709,
    0.0323464460670948,
    -0.01055575255304575,
    0.015833629295229912,
    -0.006250674836337566,
    0.03834596276283264,
    0.0053627751767635345,
    0.013505985960364342,
    -0.0029466962441802025,
    0.020814359188079834,
    -0.012274953536689281,
    0.0325162447988987,
    -0.008631379343569279,
    -0.002897172002121806,
    -0.02171994559466839,
    -0.012388152070343494,
    0.007966338656842709,
    -0.019625775516033173,
    -0.010463778860867023,
    0.005734207108616829,
    -0.034384019672870636,
    0.04723203927278519,
    0.01181508507579565,
    0.007768241222947836,
    0.043128594756126404,
    0.003661261172965169,
    0.02670067548751831,
    0.004496099427342415,
    -0.04839232191443443,
    0.02343207225203514,
    0.003990244120359421,
    0.0013389249797910452,
    -0.017092959955334663,
    -0.04233620688319206,
    -0.005288488697260618,
    -0.001691785641014576,
    0.004881681874394417,
    0.008978049270808697,
    0.018564540892839432,
    0.0034773137886077166,
    0.01757405325770378,
    -0.009975610300898552,
    -0.011708960868418217,
    0.03741207718849182,
    -0.014326674863696098,
    0.00024054663663264364,
    -0.008171510882675648,
    -0.0014689263189211488,
    -0.0016511050052940845,
    -0.03800636902451515,
    0.013024892657995224,
    0.03410102427005768,
    -0.021988792344927788,
    -0.0014671576209366322,
    0.0044218129478394985,
    -0.008143210783600807,
    0.0021295452024787664,
    0.008511105552315712,
    -0.0060455030761659145,
    -0.0024160786997526884,
    -0.023290574550628662,
    0.004099905025213957,
    0.0015007633483037353,
    0.023064177483320236,
    -0.00034136397880502045,
    0.014772392809391022,
    -0.008744577877223492,
    -0.019696524366736412,
    -0.02464895509183407,
    -0.011135893873870373,
    0.006321424152702093,
    0.0513920821249485,
    0.028016608208417892,
    -0.0126216234639287,
    0.004237865563482046,
    -0.055835120379924774,
    -0.0005098350229673088,
    -0.023333024233579636,
    -0.002401928883045912,
    -0.017220309004187584,
    0.02163504809141159,
    -0.011963657103478909,
    -0.0007057213806547225,
    -0.00312180002219975,
    0.004252015613019466,
    0.018338143825531006,
    0.012939994223415852,
    0.003820446552708745,
    -0.01458844542503357,
    -0.0015272942837327719,
    -0.0082210348919034,
    0.006388635374605656,
    -0.015027089975774288,
    0.018394742161035538,
    -0.004566848743706942,
    0.04066653177142143,
    0.007152725011110306,
    0.03537450358271599,
    0.022059541195631027,
    -0.01658356748521328,
    -0.01656941883265972,
    -0.00812198594212532,
    -0.02929008938372135,
    -0.01584777794778347,
    0.006540745962411165,
    -0.01944182813167572,
    0.02337547205388546,
    0.01830984465777874,
    0.053769245743751526,
    -0.009388393722474575,
    0.0018518553115427494,
    0.004252015613019466,
    0.03746867552399635,
    0.002966152271255851,
    -0.017998548224568367,
    -0.00892145000398159,
    -0.013314963318407536,
    -0.005850943271070719,
    0.008051237091422081,
    -0.008143210783600807,
    -0.0029254716355353594,
    0.021281301975250244,
    0.007810690905898809,
    -0.049977101385593414,
    -0.019738974049687386,
    0.037525273859500885,
    0.00825640931725502,
    0.0218331441283226,
    -0.018479641526937485,
    -0.015324235893785954,
    -0.04227960854768753,
    -0.0016855951398611069,
    -0.042392805218696594,
    -0.005023179575800896,
    0.004559773486107588,
    0.02010686881840229,
    0.00557502219453454,
    -0.011128819547593594,
    -0.0024585281498730183,
    -0.019470127299427986,
    0.02562529221177101,
    -0.012529649771749973,
    -0.03228984773159027,
    -0.004591610748320818,
    -0.007718716748058796,
    0.027422316372394562,
    -0.002607101108878851,
    0.01245182566344738,
    0.02890804596245289,
    0.02718176878988743,
    0.018352292478084564,
    -0.023757517337799072,
    -0.02630448155105114,
    0.014192251488566399,
    -0.03976094350218773,
    0.0370158813893795,
    -0.02890804596245289,
    0.012805570848286152,
    -0.001631649094633758,
    -0.0039124200120568275,
    0.021408651024103165,
    0.010576977394521236,
    0.009628940373659134,
    -0.014383274130523205,
    -0.01171603612601757,
    0.0025133586023002863,
    0.03214835003018379,
    0.024465007707476616,
    0.0015511719975620508,
    0.006324961315840483,
    -0.015621381811797619,
    -0.017673103138804436,
    -0.019625775516033173,
    -0.002729143016040325,
    -0.019470127299427986,
    0.013336188159883022,
    0.005069166421890259,
    0.024394258856773376,
    0.02350282110273838,
    -0.003311053616926074,
    0.00010905296949204057,
    0.013074416667222977,
    -0.003390646306797862,
    0.003546294057741761,
    0.001200964441522956,
    0.002269274555146694,
    -0.015692129731178284,
    -0.005058554001152515,
    0.014277149923145771,
    -0.006133939139544964,
    -0.025681890547275543,
    -0.008794101886451244,
    -0.024479158222675323,
    0.03050697222352028,
    0.03347843140363693,
    0.004616372752934694,
    0.025993186980485916,
    -0.008171510882675648,
    -0.011744335293769836,
    -0.04386438429355621,
    0.02730911783874035,
    -0.007294222712516785,
    0.014298374764621258,
    -0.007853140123188496,
    -0.016159074380993843,
    -0.018224945291876793,
    -0.009713838808238506,
    -0.01723445951938629,
    0.0029130904003977776,
    -0.018606988713145256,
    0.0019367540953680873,
    -0.014984640292823315,
    -0.00856063049286604,
    -0.03710078075528145,
    0.0061728511936962605,
    0.006982927210628986,
    -0.02278118208050728,
    -0.013796056620776653,
    0.009508666582405567,
    0.009466217830777168,
    0.021932192146778107,
    -0.005398149602115154,
    0.008857776410877705,
    -0.03189365193247795,
    -0.02463480457663536,
    -0.0037709223106503487,
    0.00846158154308796,
    0.004924131091684103,
    -0.00559624657034874,
    0.013477686792612076,
    0.03758187219500542,
    0.04768483340740204,
    0.01035765465348959,
    -0.012246653437614441,
    0.03616689518094063,
    -0.009437917731702328,
    0.003919495269656181,
    -0.015423283912241459,
    0.02278118208050728,
    -0.0265025794506073,
    0.00016084345406852663,
    -0.009947311133146286,
    0.02330472320318222,
    0.005932304542511702,
    -0.023134926334023476,
    0.002707918407395482,
    0.0008211306994780898,
    -0.012133454903960228,
    0.00894975010305643,
    -0.01045670360326767,
    -0.034270819276571274,
    -0.021196402609348297,
    2.3836335458327085e-05,
    -0.01898903399705887,
    0.013605034910142422,
    -0.03695928305387497,
    -0.02177654579281807,
    0.02743646688759327,
    0.007244698703289032,
    0.029601385816931725,
    0.016555268317461014,
    0.02097000740468502,
    -0.014454022981226444,
    0.013067342340946198,
    0.012649922631680965,
    0.018267394974827766,
    -0.002387779066339135,
    0.010697250254452229,
    -0.047118838876485825,
    -0.021139804273843765,
    0.00832008384168148,
    -0.005369849968701601,
    0.0004625216533895582,
    0.008970974013209343,
    -0.011991957202553749,
    0.009119546972215176,
    0.01181508507579565,
    0.009169071912765503,
    -0.01771555282175541,
    0.01168066170066595,
    -0.012536724098026752,
    -0.004375826101750135,
    -0.004595148377120495,
    -0.017616502940654755,
    -0.005242501851171255,
    -0.022738732397556305,
    -0.012763121165335178,
    0.00789558980613947,
    0.02310662716627121,
    -0.002936083823442459,
    0.001055044587701559,
    0.014404498040676117,
    -0.002472677966579795,
    0.04426058009266853,
    0.03814786672592163,
    0.0391666516661644,
    0.016668466851115227,
    0.010081733576953411,
    -0.011326916515827179,
    -0.004602223169058561,
    -0.008588929660618305,
    -0.0034277895465493202,
    0.015578932128846645,
    0.004018543753772974,
    -0.023941464722156525,
    -0.03817616403102875,
    0.0164420697838068,
    -0.0041246674954891205,
    -0.03562920168042183,
    -0.02702612243592739,
    0.02078605815768242,
    0.01188583392649889,
    0.01971067488193512,
    -0.02476215362548828,
    -0.018069297075271606,
    -0.030054179951548576,
    0.00557855935767293,
    -0.004340451676398516,
    0.007272998336702585,
    0.021253002807497978,
    -0.002539889421314001,
    -0.017559904605150223,
    0.02977118268609047,
    0.0013919867342337966,
    0.0048286197707057,
    0.005518422927707434,
    -0.003686023410409689,
    0.002278118161484599,
    -0.029884381219744682,
    -0.024931950494647026,
    0.004418275784701109,
    0.030874866992235184,
    0.043383292853832245,
    -0.004266165196895599,
    0.005804956424981356,
    0.05741989612579346,
    -0.0014052522601559758,
    -0.006530133541673422,
    0.008843625895678997,
    0.014333749189972878,
    0.037921469658613205,
    -0.03690268471837044,
    -0.006264824885874987,
    -0.021606747061014175,
    -0.024889500811696053,
    0.0025345832109451294,
    -0.022682132199406624,
    -0.013562585227191448,
    -0.007421571295708418,
    -0.00878702662885189,
    0.008369607850909233,
    0.004609297960996628,
    -0.0031996238976716995,
    -0.022795330733060837,
    0.0032880601938813925,
    0.0076479678973555565,
    -0.010364729911088943,
    -0.013803131878376007,
    -0.011369366198778152,
    0.01705051213502884,
    -0.03347843140363693,
    -0.04227960854768753,
    -0.017432555556297302,
    -0.00832008384168148,
    0.016343021765351295,
    -0.00702537689357996,
    0.005957066547125578,
    -0.028808996081352234,
    0.04774143174290657,
    -0.00912662222981453,
    -0.00557855935767293,
    0.00559624657034874,
    -0.002796354703605175,
    -0.021323751658201218,
    0.009699689224362373,
    -0.009437917731702328,
    -0.006197613198310137,
    0.020007820799946785,
    -0.007039526477456093,
    -0.032459646463394165,
    0.005323863122612238,
    -0.002511589787900448,
    0.022356687113642693,
    0.022936828434467316,
    -0.02909199334681034,
    -0.0053627751767635345,
    -0.000652659626211971,
    -0.003234998555853963,
    -0.0032332297414541245,
    0.009713838808238506,
    0.011914133094251156,
    0.009841186925768852,
    0.011036845855414867,
    0.009388393722474575,
    -0.017857050523161888,
    0.015423283912241459,
    -0.0012787883169949055,
    0.0062966616824269295,
    0.01521103736013174,
    -0.02917689085006714,
    -0.015168587677180767,
    0.0017289288807660341,
    0.00414235470816493,
    -0.0024160786997526884,
    0.014772392809391022,
    0.005882780067622662,
    -0.003040438750758767,
    -0.023064177483320236,
    0.03282754123210907,
    -0.004680046811699867,
    0.0006362989079207182,
    0.010902422480285168,
    0.021196402609348297,
    0.024479158222675323,
    -0.005720057524740696,
    -0.015522332862019539,
    -0.023007577285170555,
    -0.0044854870066046715,
    0.005815568380057812,
    -0.03274264186620712,
    -0.021663347259163857,
    -0.02982778288424015,
    0.0205738116055727,
    0.01945597678422928,
    -0.04177021607756615,
    -0.005447673611342907,
    -0.04409078136086464,
    -0.018140045925974846,
    -0.0013389249797910452,
    -0.022073691710829735,
    0.023092476651072502,
    0.0011284466600045562,
    0.005228351801633835,
    0.02402636408805847,
    0.0028158104978501797,
    0.026516728103160858,
    0.023219825699925423,
    -0.00243907212279737,
    0.028002457693219185,
    0.011935357935726643,
    0.006427547428756952,
    -0.0012089237570762634,
    -0.007308372762054205,
    -0.05325985327363014,
    -0.013102716766297817,
    0.012465975247323513,
    0.011836308985948563,
    0.004570385906845331,
    0.03783657029271126,
    -0.02423861064016819,
    0.003024520119652152,
    -0.009919011034071445,
    0.004287390038371086,
    0.0061091771349310875,
    0.014928041025996208,
    0.02730911783874035,
    -0.02968628518283367,
    -0.007817765697836876,
    0.006484146695584059,
    0.010343505069613457,
    0.00825640931725502,
    -0.01656941883265972,
    0.001088650431483984,
    0.008794101886451244,
    0.010131258517503738,
    0.0016873638378456235,
    -0.0021578448358923197,
    0.007527694571763277,
    -0.0019119919743388891,
    0.015635531395673752,
    0.0006597345345653594,
    0.0035569064784795046,
    0.018762636929750443,
    0.004301539622247219,
    0.006211763247847557,
    -0.012402301654219627,
    0.01501293946057558,
    -0.0035922809038311243,
    -0.0015096069546416402,
    0.035317905247211456,
    -0.035714101046323776,
    0.0012513730907812715,
    -0.035261306911706924,
    0.030620170757174492,
    -0.01461674552410841,
    0.011270317249000072,
    -0.006501833908259869,
    -0.003406564937904477,
    -0.03554430231451988,
    0.028936345130205154,
    0.002194988075643778,
    -0.0262337327003479,
    -0.0005872167530469596,
    0.0012814414221793413,
    0.02204539068043232,
    0.005564409773796797,
    -0.014645044691860676,
    0.0016962075605988503,
    -0.007287147920578718,
    0.00912662222981453,
    0.010732624679803848,
    -0.018889985978603363,
    -0.038996852934360504,
    -0.011829234659671783,
    0.015635531395673752,
    -0.011631136760115623,
    -0.004687122069299221,
    0.1994556039571762,
    -0.013739457353949547,
    0.028342053294181824,
    0.03195025399327278,
    0.02783266082406044,
    0.006215300410985947,
    -0.0015750498278066516,
    0.016937313601374626,
    -0.009565265849232674,
    0.010187857784330845,
    0.00975628849118948,
    0.0018730800366029143,
    -0.005079778842628002,
    -0.005529035348445177,
    0.012161755003035069,
    -0.019059782847762108,
    -0.028469402343034744,
    -0.04706224054098129,
    -0.022866079583764076,
    0.014857292175292969,
    0.0012434138916432858,
    -0.016809964552521706,
    -0.012289103120565414,
    -0.03169555589556694,
    0.012918769381940365,
    -0.016597718000411987,
    -0.012289103120565414,
    -1.6222526028286666e-05,
    0.02769116312265396,
    0.009268119931221008,
    -0.013293739408254623,
    0.01918713189661503,
    0.007184561807662249,
    -0.01245182566344738,
    -0.02943158894777298,
    -0.021125653758645058,
    -0.007916814647614956,
    0.0069051035679876804,
    0.006112714298069477,
    0.019470127299427986,
    0.01710711047053337,
    -0.012961218133568764,
    -0.008829476311802864,
    -0.02163504809141159,
    -0.00969261396676302,
    -0.02409711293876171,
    -0.011333991773426533,
    -0.0011169499484822154,
    0.011949507519602776,
    0.03469531610608101,
    -0.015593081712722778,
    -0.0029113218188285828,
    0.010881197638809681,
    0.003947794903069735,
    0.0017784532392397523,
    -0.006073802709579468,
    -0.01789950020611286,
    0.019951220601797104,
    0.043043699115514755,
    0.011369366198778152,
    -0.02729496732354164,
    0.007846064865589142,
    -0.014432798139750957,
    0.010598201304674149,
    -0.014100277796387672,
    0.011609912849962711,
    -0.02278118208050728,
    0.0008122870931401849,
    0.01658356748521328,
    -0.005776656791567802,
    -0.020856808871030807,
    -0.01645622029900551,
    -0.021479399874806404,
    -0.018366442993283272,
    -0.03169555589556694,
    -0.030478673055768013,
    0.042109809815883636,
    0.016555268317461014,
    0.027266668155789375,
    0.028271304443478584,
    0.00417772913351655,
    -0.0020057344809174538,
    -0.004053918179124594,
    -0.0023700918536633253,
    -0.01255794893950224,
    -0.025936586782336235,
    0.002872409764677286,
    -0.027210069820284843,
    -0.02889389544725418,
    -0.021804844960570335,
    -0.01897488534450531,
    -0.03373312950134277,
    0.012260803021490574,
    0.0033888774923980236,
    0.004425350576639175,
    0.014885591343045235,
    -0.00307935057207942,
    0.02476215362548828,
    -0.02129545249044895,
    0.004170654341578484,
    -0.037185680121183395,
    0.05668410658836365,
    0.022328387945890427,
    -0.011234942823648453,
    -0.020927557721734047,
    0.012267878279089928,
    0.007230548653751612,
    0.008475731126964092,
    -0.0026637001428753138,
    0.005688220262527466,
    0.0021808382589370012,
    -0.01944182813167572,
    0.006731768138706684,
    -0.007159799803048372,
    0.014871441759169102,
    0.00016460199549328536,
    -0.031525757163763046,
    0.01272067241370678,
    0.0193144790828228,
    0.007803615648299456,
    -0.00241430988535285,
    -0.010194932110607624,
    0.007478170562535524,
    -0.023941464722156525,
    -0.027351567521691322,
    -0.02815810590982437,
    -0.014503546990454197,
    0.0031447934452444315,
    -0.022866079583764076,
    0.009777513332664967,
    0.005355699919164181,
    -0.0319785512983799,
    0.024210311472415924,
    -0.00048684162902645767,
    -0.014270075596868992,
    -0.03735547885298729,
    -0.019342780113220215,
    -0.0111854188144207,
    -0.008893150836229324,
    0.01115004438906908,
    -0.03551600128412247,
    -0.006300199311226606,
    -0.004319226834923029,
    -0.01258624903857708,
    0.009784587658941746,
    -0.01864943839609623,
    -0.012954143807291985,
    0.0009763363632373512,
    0.024082962423563004,
    -0.012501349672675133,
    -0.004499637056142092,
    0.007612593472003937,
    -0.0024249223060905933,
    -0.015508183278143406,
    0.03291244059801102,
    -0.027337417006492615,
    -0.014857292175292969,
    -0.03562920168042183,
    0.008482806384563446,
    0.007096125744283199,
    -0.0355726033449173,
    -0.012161755003035069,
    -0.003862896002829075,
    -0.005334475543349981,
    -0.012529649771749973,
    -0.021748244762420654,
    -0.18032507598400116,
    0.009409618563950062,
    0.019073933362960815,
    -0.043581388890743256,
    0.01258624903857708,
    -0.012091006152331829,
    0.01897488534450531,
    -0.004856919404119253,
    -0.024493306875228882,
    -0.010046359151601791,
    0.03302563726902008,
    -0.00832008384168148,
    -0.015239336527884007,
    -0.02962968498468399,
    -0.014234701171517372,
    0.010194932110607624,
    -0.02409711293876171,
    0.010209081694483757,
    0.026658227667212486,
    -0.004747258499264717,
    0.04247770458459854,
    -0.026728976517915726,
    0.025016849860548973,
    0.002377166645601392,
    -0.013088567182421684,
    -0.009593565948307514,
    0.007379121612757444,
    0.039987340569496155,
    -0.006427547428756952,
    -0.01478654332458973,
    -0.008206885308027267,
    -0.012869244441390038,
    0.025342294946312904,
    -0.019880471751093864,
    0.005118690896779299,
    0.017687251791357994,
    0.025795089080929756,
    -0.027606263756752014,
    -0.015677981078624725,
    0.03016737848520279,
    0.030620170757174492,
    0.01035058032721281,
    -0.0010983783286064863,
    -0.030308876186609268,
    -0.024521606042981148,
    0.008801177144050598,
    0.023686768487095833,
    -0.028483550995588303,
    0.025653591379523277,
    -0.018960734829306602,
    0.027266668155789375,
    0.011772635392844677,
    -0.004266165196895599,
    -0.000843239773530513,
    0.0007853140123188496,
    0.01165236160159111,
    0.007393271662294865,
    0.005483048036694527,
    0.01579117961227894,
    -0.013053192757070065,
    -0.006211763247847557,
    -0.02943158894777298,
    0.022851930931210518,
    -0.010435478761792183,
    -0.0063921730034053326,
    -0.03296903893351555,
    0.00038845627568662167,
    0.01125616766512394,
    -0.027747761458158493,
    0.010782148689031601,
    0.007039526477456093,
    0.013739457353949547,
    -0.032459646463394165,
    -0.004068068228662014,
    0.03670458495616913,
    0.03095976635813713,
    -0.03942134976387024,
    0.010060508735477924,
    0.034384019672870636,
    -0.011043920181691647,
    -0.01683826372027397,
    0.03715737909078598,
    0.01168066170066595,
    0.009996835142374039,
    0.008136136457324028,
    0.012112230062484741,
    0.006420472636818886,
    0.005939379334449768,
    -0.018875835463404655,
    0.008334233425557613,
    0.012741896323859692,
    -0.005320325493812561,
    0.009197371080517769,
    -0.0008361648651771247,
    -0.021408651024103165,
    0.019017333164811134,
    0.0016696766251698136,
    -0.011079294607043266,
    0.01606002449989319,
    -0.022087840363383293,
    0.007449870929121971,
    0.016229823231697083,
    -0.001807637163437903,
    0.0030634321738034487,
    0.045845359563827515,
    0.025823388248682022,
    -0.05023179575800896,
    0.01904563419520855,
    0.007619668263942003,
    0.0017961404519155622,
    -0.002101245569065213,
    0.006866191513836384,
    0.011503788642585278,
    0.008871925994753838,
    -0.0025522704236209393,
    0.006077339872717857,
    -0.00490998150780797,
    -0.018734337761998177,
    0.03095976635813713,
    -0.005150527693331242,
    0.02763456292450428,
    0.0016086555551737547,
    -0.015097838826477528,
    0.013704082928597927,
    -0.005957066547125578,
    -0.051363781094551086,
    -0.09921841323375702,
    -0.014772392809391022,
    0.017729701474308968,
    0.02445085719227791,
    -0.040525034070014954,
    0.003668336197733879,
    0.014369123615324497,
    0.049382809549570084,
    -0.013378637842833996,
    0.011128819547593594,
    -0.016357170417904854,
    0.01584777794778347,
    0.017361806705594063,
    0.0015096069546416402,
    -0.0036930982023477554,
    0.0084898816421628,
    -0.0052672638557851315,
    0.0016484519001096487,
    -0.016696766018867493,
    0.012593323364853859,
    -0.013937555253505707,
    0.004570385906845331,
    -0.0005323863006196916,
    -0.0041352794505655766,
    -0.017192009836435318,
    -0.006689318921416998,
    -0.03291244059801102,
    0.02023421600461006,
    -0.0006858232081867754,
    -0.009070022962987423,
    0.01511198841035366,
    -0.025130048394203186,
    -0.015041239559650421,
    -0.015861928462982178,
    0.00767626753076911,
    0.0028317291289567947,
    -0.03769507259130478,
    -0.011178343556821346,
    0.019257880747318268,
    -0.015423283912241459,
    0.004464262630790472,
    -0.0001723401655908674,
    0.018663588911294937,
    0.01252257451415062,
    -0.04041183367371559,
    -0.005787269212305546,
    -0.008596004918217659,
    0.019526727497577667,
    0.01564968004822731,
    -0.030931467190384865,
    -0.016626017168164253,
    0.0015812403289601207,
    -0.024139562621712685,
    0.0017766845412552357,
    0.03254454582929611,
    0.008836551569402218,
    0.005401686765253544,
    0.005889854859560728,
    -0.0048073953948915005,
    -0.03056357242166996,
    -0.0021030143834650517,
    0.004414738155901432,
    -0.0006225912948139012,
    0.015494032762944698,
    0.003335815854370594,
    0.007541844621300697,
    0.015366684645414352,
    0.0012885163305327296,
    0.0157204307615757,
    -0.04256260395050049,
    -0.01879093609750271,
    0.00985533744096756,
    0.0036966358311474323,
    0.016399620100855827,
    -0.037383776158094406,
    0.004885219037532806,
    -0.012458900921046734,
    -0.024535756558179855,
    0.009770438075065613,
    -0.02483290247619152,
    -0.00624006288126111,
    0.0025505018420517445,
    -0.011348141357302666,
    -0.010725550353527069,
    0.0009117778390645981,
    0.0028547225520014763,
    0.0036506489850580692,
    -0.019272029399871826,
    0.005086853634566069,
    -0.038713857531547546,
    0.0328841395676136,
    0.007464020512998104,
    0.01757405325770378,
    -0.024719703942537308,
    -0.0011302154744043946,
    -0.011043920181691647,
    -0.01171603612601757,
    0.0080866115167737,
    -0.004156504292041063,
    0.029856082051992416,
    -0.027648713439702988,
    0.0003013465611729771,
    -0.084446020424366,
    0.023007577285170555,
    0.006307274103164673,
    -0.02790340967476368,
    0.0009719145018607378,
    -0.012211279012262821,
    -0.0014901510439813137,
    0.001686479547061026,
    0.013272514566779137,
    0.01764480397105217,
    -0.03896855562925339,
    -0.02436595968902111,
    0.0051045408472418785,
    -0.00916199665516615,
    -0.011723111383616924,
    -0.02269628271460533,
    0.03076167032122612,
    -0.010449628345668316,
    0.03741207718849182,
    0.004099905025213957,
    -0.007513544987887144,
    -0.006837891880422831,
    0.010626501403748989,
    0.02043231390416622,
    -0.04154381901025772,
    -0.0024620655458420515,
    -0.028978794813156128,
    0.019555026665329933,
    0.003066969569772482,
    -0.021677495911717415,
    0.015663830563426018,
    -0.019017333164811134,
    0.0034490141551941633,
    0.011624062433838844,
    0.013873880729079247,
    0.003353503067046404,
    0.029459888115525246,
    -0.004959505517035723,
    0.004662359599024057,
    0.0259648859500885,
    -0.03361992910504341,
    -0.05065629258751869,
    0.010209081694483757,
    0.016682617366313934,
    -0.015593081712722778,
    -0.010859972797334194,
    0.017291057854890823,
    -0.009006349369883537,
    0.0151827372610569,
    0.024182012304663658,
    0.057702891528606415,
    0.01451769657433033,
    -0.012961218133568764,
    -0.03922325000166893,
    -0.010562826879322529,
    0.0036471113562583923,
    0.03786487132310867,
    -0.0031094190198928118,
    -0.011517939157783985,
    -0.0009108934900723398,
    0.0515618771314621,
    0.009480367414653301,
    0.014758243225514889,
    0.0032066989224404097,
    0.002852953737601638,
    -0.021535998210310936,
    -0.02344622276723385,
    -0.0164420697838068,
    0.006003053393214941,
    -0.030082479119300842,
    -0.016074175015091896,
    -0.02023421600461006,
    0.015196886844933033,
    0.019526727497577667,
    0.031921952962875366,
    -0.005659920629113913,
    -0.0009436149266548455,
    -0.020205916836857796,
    -0.017432555556297302,
    0.013307888992130756,
    0.007612593472003937,
    -0.02790340967476368,
    -0.007824840024113655,
    0.010683100670576096,
    0.028469402343034744,
    0.003042207332327962,
    -0.014206401072442532,
    -0.0007309257052838802,
    -0.02043231390416622,
    0.01298244297504425,
    0.001691785641014576,
    0.009940235875546932,
    0.008504031226038933,
    0.010088808834552765,
    -0.0034684701822698116,
    0.007945113815367222,
    0.009777513332664967,
    0.012458900921046734,
    0.023729218170046806,
    -0.0002876389480661601,
    0.00905587337911129,
    -0.008914375677704811,
    -0.00025956041645258665,
    -0.026601627469062805,
    -0.007166874594986439,
    -0.01161698717623949,
    -0.016215672716498375,
    -0.02576678991317749,
    0.014475247822701931,
    0.01730520837008953,
    0.016866564750671387,
    -0.020743610337376595,
    -0.00554318493232131,
    0.018677739426493645,
    -0.007471095304936171,
    0.023686768487095833,
    0.02043231390416622,
    -0.021620897576212883,
    -0.00486045703291893,
    0.011440115049481392,
    0.0021932192612439394,
    -0.011836308985948563,
    0.043185196816921234,
    -0.005468898452818394,
    0.025738488882780075,
    0.01937107928097248,
    0.007191637065261602,
    0.007198711857199669,
    0.0218331441283226,
    -0.0021507698111236095,
    -0.017489155754446983,
    0.012006106786429882,
    -0.02824300527572632,
    -0.015508183278143406,
    -0.014404498040676117,
    -0.014800692908465862,
    -0.02238498628139496,
    -0.003318128641694784,
    0.013704082928597927,
    0.08037087321281433,
    0.016894863918423653,
    -0.01664016768336296,
    -0.00915492232888937,
    -0.022993428632616997,
    0.019003184512257576,
    -0.006887415889650583,
    0.021988792344927788,
    0.004768483340740204,
    -0.002654856536537409,
    -0.04346819221973419,
    0.0027132246177643538,
    -0.019286179915070534,
    -0.020488914102315903,
    -0.03407272323966026,
    -0.0017696096329018474,
    -0.01598927564918995,
    -0.006512446328997612,
    0.0066185700707137585,
    0.0036294241435825825,
    0.03050697222352028,
    -0.01195658277720213,
    0.0033428906463086605,
    -0.020389864221215248,
    -0.01730520837008953,
    -0.016682617366313934,
    0.0438360869884491,
    0.021889744326472282,
    -0.009395468048751354,
    -0.02842695266008377,
    0.020488914102315903,
    0.016413770616054535,
    -0.02797415852546692,
    -0.02476215362548828,
    0.0044218129478394985,
    0.014015378430485725,
    -0.013138091191649437,
    0.011298616416752338,
    0.024351809173822403,
    -0.0061091771349310875,
    0.010739699937403202,
    -0.006572583224624395,
    -0.00012370022886898369,
    -0.04094952717423439,
    0.01161698717623949,
    0.0019084545783698559,
    -0.008440356701612473,
    -0.011517939157783985,
    -0.03882705792784691
  ]
}
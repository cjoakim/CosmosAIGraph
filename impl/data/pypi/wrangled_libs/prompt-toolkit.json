{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development"
  ],
  "description": "python prompt toolkit\n=====================\n\n|appveyor|  |pypi|  |rtd|  |license|  |codecov|\n\n.. image :: https://github.com/prompt-toolkit/python-prompt-toolkit/raw/master/docs/images/logo_400px.png\n\n``prompt_toolkit`` *is a library for building powerful interactive command line applications in python.*\n\nread the `documentation on readthedocs\n<http://python-prompt-toolkit.readthedocs.io/en/stable/>`_.\n\n\ngallery\n*******\n\n`ptpython <http://github.com/prompt-toolkit/ptpython/>`_ is an interactive\npython shell, build on top of ``prompt_toolkit``.\n\n.. image :: https://github.com/prompt-toolkit/python-prompt-toolkit/raw/master/docs/images/ptpython.png\n\n`more examples <https://python-prompt-toolkit.readthedocs.io/en/stable/pages/gallery.html>`_\n\n\nprompt_toolkit features\n***********************\n\n``prompt_toolkit`` could be a replacement for `gnu readline\n<https://tiswww.case.edu/php/chet/readline/rltop.html>`_, but it can be much\nmore than that.\n\nsome features:\n\n- **pure python**.\n- syntax highlighting of the input while typing. (for instance, with a pygments lexer.)\n- multi-line input editing.\n- advanced code completion.\n- both emacs and vi key bindings. (similar to readline.)\n- even some advanced vi functionality, like named registers and digraphs.\n- reverse and forward incremental search.\n- works well with unicode double width characters. (chinese input.)\n- selecting text for copy/paste. (both emacs and vi style.)\n- support for `bracketed paste <https://cirw.in/blog/bracketed-paste>`_.\n- mouse support for cursor positioning and scrolling.\n- auto suggestions. (like `fish shell <http://fishshell.com/>`_.)\n- multiple input buffers.\n- no global state.\n- lightweight, the only dependencies are pygments and wcwidth.\n- runs on linux, os x, freebsd, openbsd and windows systems.\n- and much more...\n\nfeel free to create tickets for bugs and feature requests, and create pull\nrequests if you have nice patches that you would like to share with others.\n\n\ninstallation\n************\n\n::\n\n    pip install prompt_toolkit\n\nfor conda, do:\n\n::\n\n    conda install -c https://conda.anaconda.org/conda-forge prompt_toolkit\n\n\nabout windows support\n*********************\n\n``prompt_toolkit`` is cross platform, and everything that you build on top\nshould run fine on both unix and windows systems. windows support is best on\nrecent windows 10 builds, for which the command line window supports vt100\nescape sequences. (if not supported, we fall back to using win32 apis for color\nand cursor movements).\n\nit's worth noting that the implementation is a \"best effort of what is\npossible\". both unix and windows terminals have their limitations. but in\ngeneral, the unix experience will still be a little better.\n\nfor windows, it's recommended to use either `cmder\n<http://cmder.net/>`_ or `conemu <https://conemu.github.io/>`_.\n\ngetting started\n***************\n\nthe most simple example of the library would look like this:\n\n.. code:: python\n\n    from prompt_toolkit import prompt\n\n    if __name__ == '__main__':\n        answer = prompt('give me some input: ')\n        print('you said: %s' % answer)\n\nfor more complex examples, have a look in the ``examples`` directory. all\nexamples are chosen to demonstrate only one thing. also, don't be afraid to\nlook at the source code. the implementation of the ``prompt`` function could be\na good start.\n\nphilosophy\n**********\n\nthe source code of ``prompt_toolkit`` should be **readable**, **concise** and\n**efficient**. we prefer short functions focusing each on one task and for which\nthe input and output types are clearly specified. we mostly prefer composition\nover inheritance, because inheritance can result in too much functionality in\nthe same object. we prefer immutable objects where possible (objects don't\nchange after initialization). reusability is important. we absolutely refrain\nfrom having a changing global state, it should be possible to have multiple\nindependent instances of the same code in the same process. the architecture\nshould be layered: the lower levels operate on primitive operations and data\nstructures giving -- when correctly combined -- all the possible flexibility;\nwhile at the higher level, there should be a simpler api, ready-to-use and\nsufficient for most use cases. thinking about algorithms and efficiency is\nimportant, but avoid premature optimization.\n\n\n`projects using prompt_toolkit <projects.rst>`_\n***********************************************\n\nspecial thanks to\n*****************\n\n- `pygments <http://pygments.org/>`_: syntax highlighter.\n- `wcwidth <https://github.com/jquast/wcwidth>`_: determine columns needed for a wide characters.\n\n.. |pypi| image:: https://img.shields.io/pypi/v/prompt_toolkit.svg\n    :target: https://pypi.python.org/pypi/prompt-toolkit/\n    :alt: latest version\n\n.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva?svg=true\n    :target: https://ci.appveyor.com/project/prompt-toolkit/python-prompt-toolkit/\n\n.. |rtd| image:: https://readthedocs.org/projects/python-prompt-toolkit/badge/\n    :target: https://python-prompt-toolkit.readthedocs.io/en/master/\n\n.. |license| image:: https://img.shields.io/github/license/prompt-toolkit/python-prompt-toolkit.svg\n    :target: https://github.com/prompt-toolkit/python-prompt-toolkit/blob/master/license\n\n.. |codecov| image:: https://codecov.io/gh/prompt-toolkit/python-prompt-toolkit/branch/master/graphs/badge.svg?style=flat\n    :target: https://codecov.io/gh/prompt-toolkit/python-prompt-toolkit/\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "prompt-toolkit",
  "package_url": "https://pypi.org/project/prompt-toolkit/",
  "project_url": "https://pypi.org/project/prompt-toolkit/",
  "project_urls": {
    "Homepage": "https://github.com/prompt-toolkit/python-prompt-toolkit"
  },
  "release_url": "https://pypi.org/project/prompt-toolkit/3.0.43/",
  "requires_dist": [
    "wcwidth"
  ],
  "requires_python": ">=3.7.0",
  "summary": "library for building powerful interactive command lines in python",
  "version": "3.0.43",
  "releases": [],
  "developers": [
    "jonathan_slenders"
  ],
  "kwds": "prompt_toolkit prompt ptpython python interactive",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_prompt_toolkit",
  "homepage": "https://github.com/prompt-toolkit/python-prompt-toolkit",
  "release_count": 127,
  "dependency_ids": [
    "pypi_wcwidth"
  ]
}
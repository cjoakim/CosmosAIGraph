{
  "classifiers": [
    "development status :: 6 - mature",
    "intended audience :: developers",
    "license :: osi approved :: gnu general public license (gpl)",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "package releasing made easy: zest.releaser overview and installation\n====================================================================\n\nzest.releaser is collection of command-line programs to help you automate the\ntask of releasing a python project.\n\nit does away with all the boring bits. this is what zest.releaser automates\nfor you:\n\n* it updates the version number. the version number can either be in\n  ``setup.py`` or ``version.txt`` or in a ``__version__`` attribute in a\n  python file or in ``setup.cfg``. for example, it switches you from\n  ``0.3.dev0`` (current development version) to ``0.3`` (release) to\n  ``0.4.dev0`` (new development version).\n\n* it updates the history/changes file. it logs the release date on release and\n  adds a new heading for the upcoming changes (new development version).\n\n* it tags the release. it creates a tag in your version control system named\n  after the released version number.\n\n* it optionally uploads a source release to pypi. it will only do this if the\n  package is already registered there (else it will ask, defaulting to 'no');\n  zest releaser is careful not to publish your private projects!\n\n\nmost important urls\n-------------------\n\nfirst the three most important links:\n\n- the full documentation is at `zestreleaser.readthedocs.io\n  <https://zestreleaser.readthedocs.io>`_.\n\n- we're `on pypi <https://pypi.org/project/zest.releaser>`_, so we're only\n  an ``pip install zest.releaser`` away from installation on your computer.\n\n- the code is at `github.com/zestsoftware/zest.releaser\n  <https://github.com/zestsoftware/zest.releaser>`_.\n\n\ncompatibility / dependencies\n----------------------------\n\n.. image:: https://img.shields.io/pypi/pyversions/zest.releaser?   :alt: pypi - python version\n.. image:: https://img.shields.io/pypi/implementation/zest.releaser?   :alt: pypi - implementation\n\n``zest.releaser`` works on python 3.8+, including pypy3.\ntested until python 3.11, but see ``tox.ini`` for the canonical place for that.\n\nto be sure: the packages that you release with ``zest.releaser`` may\nvery well work on other python versions: that totally depends on your\npackage.\n\nwe depend on:\n\n- ``setuptools`` for the entrypoint hooks that we offer.\n\n- ``colorama`` for colorized output (some errors printed in red).\n\n- ``twine`` for secure uploading via https to pypi. plain setuptools doesn't\n  support this.\n\nsince version 4.0 there is a ``recommended`` extra that you can get by\ninstalling ``zest.releaser[recommended]`` instead of ``zest.releaser``.  it\ncontains a few trusted add-ons that we feel are useful for the great majority\nof ``zest.releaser`` users:\n\n- wheel_ for creating a python wheel that we upload to pypi next to\n  the standard source distribution.  wheels are the official binary\n  distribution format for python.\n  since version 8.0.0a2 we always create wheels, except when you\n  explicitly switch this off in the config:\n  ``create-wheel = false``.\n  if you are sure you want \"universal\" wheels, follow the directions from the\n  `wheel documentation <https://wheel.readthedocs.io/en/stable/user_guide.html>`_.\n\n- `check-manifest`_ checks your ``manifest.in`` file for completeness,\n  or tells you that you need such a file.  it basically checks if all\n  version controlled files are ending up the the distribution that we\n  will upload.  this may avoid 'brown bag' releases that are missing\n  files.\n\n- pyroma_ checks if the package follows best practices of python\n  packaging.  mostly it performs checks on the ``setup.py`` file, like\n  checking for python version classifiers.\n\n- readme_renderer_ to check your long description in the same way as pypi does. no more\n  unformatted restructured text on your pypi page just because there was a\n  small error somewhere. handy.\n\n.. _wheel: https://pypi.org/project/wheel\n.. _`check-manifest`: https://pypi.org/project/check-manifest\n.. _pyroma: https://pypi.org/project/pyroma\n.. _readme_renderer: https://pypi.org/project/readme_renderer\n\n\ninstallation\n------------\n\njust a simple ``pip install zest.releaser`` or ``easy_install zest.releaser`` is\nenough. if you want the recommended extra utilities, do a ``pip install\nzest.releaser[recommended]``.\n\nalternatively, buildout users can install zest.releaser as part of a specific\nproject's buildout, by having a buildout configuration such as::\n\n    [buildout]\n    parts =\n        scripts\n\n    [scripts]\n    recipe = zc.recipe.egg\n    eggs = zest.releaser[recommended]\n\n\nversion control systems: git\n----------------------------\n\nof course you must have a version control system installed.\nsince version 7, zest.releaser only supports git.\n\nif you use subversion (svn), mercurial (hg), git-svn, or bazaar (bzr), please use version 6.\nif you really want, you can probably copy the relevant parts from the old code to a new package,\nand release this as an add-on package for zest.releaser.\ni suspect that currently it would only work with a monkey patch.\nif you are planning something, please open an issue, and we can see about making this part pluggable.\n\n\navailable commands\n------------------\n\nzest.releaser gives you four commands to help in releasing python\npackages.  they must be run in a version controlled checkout.  the commands\nare:\n\n- **prerelease**: asks you for a version number (defaults to the current\n  version minus a 'dev' or so), updates the setup.py or version.txt and the\n  changes/history/changelog file (with either .rst/.txt/.md/.markdown or no\n  extension) with this new version number and offers to commit those changes\n  to subversion (or bzr or hg or git).\n\n- **release**: copies the the trunk or branch of the current checkout and\n  creates a version control tag of it.  makes a checkout of the tag in a\n  temporary directory.  offers to register and upload a source dist\n  of this package to pypi (python package index).  note: if the package has\n  not been registered yet, it will not do that for you.  you must register the\n  package manually (``python setup.py register``) so this remains a conscious\n  decision.  the main reason is that you want to avoid having to say: \"oops, i\n  uploaded our client code to the internet; and this is the initial version\n  with the plaintext root passwords.\"\n\n- **postrelease**: asks you for a version number (gives a sane default), adds\n  a development marker to it, updates the setup.py or version.txt and the\n  changes/history/changelog file with this and offers to commit those changes\n  to version control. note that with git and hg, you'd also be asked to push\n  your changes (since 3.27). otherwise the release and tag only live in your\n  local hg/git repository and not on the server.\n\n- **fullrelease**: all of the above in order.\n\nnote: markdown files should use the \"underline\" style of headings, not the\n\"atx\" style where you prefix the headers with ``#`` signs.\n\nthere are some additional tools:\n\n- **longtest**: small tool that renders the long description and opens it in a\n  web browser. handy for debugging formatting issues locally before uploading\n  it to pypi.\n\n- **lasttagdiff**: small tool that shows the *diff* of the current\n  branch with the last released tag.  handy for checking whether all\n  the changes are adequately described in the changes file.\n\n- **lasttaglog**: small tool that shows the *log* of the current\n  branch since the last released tag.  handy for checking whether all\n  the changes are adequately described in the changes file.\n\n- **addchangelogentry**: pass this a text on the command line and it\n  will add this as an entry in the changelog.  this is probably mostly\n  useful when you are making the same change in a batch of packages.\n  the same text is used as commit message.  in the changelog, the text\n  is indented and the first line is started with a dash.  the command\n  detects it if you use for example a star as first character of an\n  entry.\n\n- **bumpversion**: do not release, only bump the version.  a\n  development marker is kept when it is there.  with ``--feature`` we\n  update the minor version.  with option ``--breaking`` we update the\n  major version.\n\ncredits\n=======\n\n* `reinout van rees <http://reinout.vanrees.org>`_ (nelen & schuurmans) is the\n  original author. he's still maintaining it, together with maurits.\n\n* `maurits van rees <http://maurits.vanrees.org>`_ (zest software) added\n  a heapload of improvements and is the maintainer, together with reinout.\n\n* `kevin teague <http://bud.ca>`_ (canada's michael smith genome sciences\n  center) added support for multiple version control systems, most notable\n  mercurial.\n\n* `wouter vanden hove <http://ugent.be>`_ (university of gent) added\n  support for uploading to multiple servers, using collective.dist.\n\n* `godefroid chapelle <http://bubblenet.be>`_ (bubblenet) added /tag besides\n  /tags for subversion.\n\n* `richard mitchell <https://github.com/mitchellrj>`_\n  (`isotoma <https://www.isotoma.com/>`_) added python 3 support.\n\n* `mateusz legi\u0119cki <https://github.com/behoston>`_ added a dockerfile for\n  much easier testing.\n\n* `eli sall\u00e9 <https://github.com/elisallenens>`_ added pyproject.toml support\n  for zest.releaser's own options. we're modern now!\n\nchangelog for zest.releaser\n===========================\n\n9.1.1 (2023-10-11)\n------------------\n\n- when reading ``~/.pypirc`` config, read ``setup.cfg`` as well, as it might\n  override some of these values, like ``[distutils] index-servers``.\n  fixes issue #436.  [maurits]\n\n\n9.1.0 (2023-10-03)\n------------------\n\n- using newer 'build' (``>=1.0.0``) including a slight api change, fixes\n  #433. [reinout]\n\n- typo fix in the readme: we look at ``__version__`` instead of\n  the previously-documented ``__versions__``... [reinout]\n\n\n9.0.0 (2023-09-11)\n------------------\n\n- make final release.  nothing changed since the last beta.  [maurits]\n\n\n9.0.0b1 (2023-07-31)\n--------------------\n\n- when a command we call exits with a non-zero exit code, clearly state this in the output.\n  ask the user if she wants to continue or not.\n  note that this is tricky to do right.  some commands like ``git`` seem to print everything to stderr,\n  leading us to think there are errors, but the exit code is zero, so it should be fine.\n  we do not want to ask too many questions, but we do not want to silently swallow important errors either.\n  [maurits]\n\n\n9.0.0a3 (2023-07-25)\n--------------------\n\n- updated contributors list.\n\n- documenting ``hook_package_dir`` setting for entry points (which isn't\n  needed for most entry points, btw).\n  fixes `issue 370 <https://github.com/zestsoftware/zest.releaser/issues/370>`_.\n\n- allowing for retry for ``git push``, which might fail because of a protected\n  branch. also displaying that possible cause when it occurs. fixes `issue 385\n  <https://github.com/zestsoftware/zest.releaser/issues/385>`_.\n\n\n9.0.0a2 (2023-07-19)\n--------------------\n\n- ignore error output when calling `build`.\n  we only need to look at the exit code to see if it worked.\n  you can call zest.releaser with ``--verbose`` if you want\n  to see the possible warnings.\n\n- removed ``encoding`` config option as nobody is using it anymore (using the\n  option would result in a crash). apparently it isn't needed anymore now that\n  we don't use python 2 anymore. fixes `issue 391\n  <https://github.com/zestsoftware/zest.releaser/issues/391>`_.\n\n- the ``longtest`` is now simpler. it runs readme_renderer and just displays\n  the result in the browser, without error handling. ``twine check`` should be\n  used if you want a real hard check (``longtest --headless`` is\n  deprecated). the advantage is that longtest now also renders markdown\n  correctly.  this adds `readme_renderer[md]` as dependency.\n  fixes `issue 363 <https://github.com/zestsoftware/zest.releaser/issues/363>`_.\n\n\n9.0.0a1 (2023-07-13)\n--------------------\n\n- changed build system to pypa/build instead of explicitly using\n  setuptools.\n\n- zest.releaser's settings can now also be placed in ``pyproject.toml``.\n\n- use native namespace packages for ``zest.releaser``, instead of\n  deprecated ``pkg_resources`` based ones.\n\n- added pre-commit config for neater code (black, flake8, isort).\n\n- dropped support for python 3.7. together with switching to ``build`` and\n  ``pyproject.toml``, this warrants a major version bump.\n\n\n8.0.0 (2023-05-05)\n------------------\n\n- make final release, no changes since latest alpha.  [maurits]\n\n\n8.0.0a2 (2023-04-06)\n--------------------\n\n- always create wheels, except when you explicitly switch this off in the config:\n  ``[zest.releaser] create-wheel = no``.\n  if the ``wheel`` package is not available, we still do not create wheels.\n  fixes `issue 406 <https://github.com/zestsoftware/zest.releaser/issues/406>`_.\n  [maurits]\n\n- do not fail when tag versions cannot be parsed.\n  this can happen in ``lasttaglog``, ``lasttagdiff``, and ``bumpversion``, with ``setuptools`` 66 or higher.\n  fixes `issue 408 <https://github.com/zestsoftware/zest.releaser/issues/408>`_.\n  [maurits]\n\n\n8.0.0a1 (2023-02-08)\n--------------------\n\n- drop support for python 3.6.  [maurits]\n\n- support reading and writing the version in ``pyproject.toml``.\n  see `issue 295 <https://github.com/zestsoftware/zest.releaser/issues/295>`_,\n  `issue 373 <https://github.com/zestsoftware/zest.releaser/issues/373>`_,\n  and `pep-621 <https://peps.python.org/pep-0621/>`_,\n  [maurits]\n\n\n7.3.0 (2023-02-07)\n------------------\n\n- add option ``run-pre-commit = yes / no``.\n  default: no.\n  when set to true, pre commit hooks are run.\n  this may interfere with releasing when they fail.\n  [maurits]\n\n\n7.2.0 (2022-12-09)\n------------------\n\n- auto-detect ``history_format`` based on history filename.\n  [ericof]\n\n- add ``history_format`` option, to explicitly set changelogs\n  entries in markdown.\n  [ericof]\n\n\n7.1.0 (2022-11-23)\n------------------\n\n- add the ``bumpversion`` options to the ``postrelease`` command.\n  this means ``feature``, ``breaking``, and ``final``.\n  [rnc, maurits]\n\n- add ``--final`` option to ``bumpversion`` command.\n  this removes alpha / beta / rc markers from the version.\n  [maurits]\n\n- add support for python 3.11, remove ``z3c.testsetup`` from test dependencies.  [maurits]\n\n\n7.0.0 (2022-09-09)\n------------------\n\n- optionally add prefix text to commit messages.  this can be used ensure your messages follow some regular expression.\n  to activate this, add ``prefix-message = [tag]`` to a ``[zest.releaser]``\n  section in the ``setup.cfg`` of your package, or your global\n  ``~/.pypirc``.  or add your favorite geeky quotes there.\n  [lvffy]\n\n\n7.0.0a3 (2022-04-04)\n--------------------\n\n- bug 381: in ``prerelease``, check with ``pep440`` if the version is canonical.\n  added ``pep440`` to the ``recommended`` extra, not to the core dependencies:\n  ``zest.releaser`` can also be used for non-python projects.\n  [maurits]\n\n\n7.0.0a2 (2022-02-10)\n--------------------\n\n- add ``--headless`` option to ``longtest``.\n\n\n7.0.0a1 (2021-12-01)\n--------------------\n\nbig cleanup to ease future development:\n\n- removed support for subversion (``svn``), bazaar (``bzr``), mercurial (``hg``).\n\n- removed support for python 2 and 3.5.\n\n- added support for python 3.9 and 3.10.\n\n- tested with python 3.6-3.10 plus pypy3.\n\n- switched from travis to github actions.\n\n- simplified running commands by using ``subprocess.run``.\n\n\n.. # note: for older changes see ``doc/sources/changelog.rst``.\n",
  "docs_url": null,
  "keywords": "releasing,packaging,pypi",
  "license": "gpl",
  "name": "zest.releaser",
  "package_url": "https://pypi.org/project/zest.releaser/",
  "project_url": "https://pypi.org/project/zest.releaser/",
  "project_urls": {
    "changelog": "https://github.com/zestsoftware/zest.releaser/blob/master/CHANGES.rst",
    "documentation": "https://zestreleaser.readthedocs.io",
    "repository": "https://github.com/zestsoftware/zest.releaser/"
  },
  "release_url": "https://pypi.org/project/zest.releaser/9.1.1/",
  "requires_dist": [
    "build (>=1.0.0)",
    "colorama",
    "readme-renderer[md] (>=40)",
    "requests",
    "setuptools (>=61.0.0)",
    "twine (>=1.6.0)",
    "tomli ; python_version < \"3.11\"",
    "check-manifest ; extra == 'recommended'",
    "pep440 ; extra == 'recommended'",
    "pyroma ; extra == 'recommended'",
    "wheel ; extra == 'recommended'",
    "wheel ; extra == 'test'",
    "zope.testing ; extra == 'test'",
    "zope.testrunner ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "software releasing made easy and repeatable",
  "version": "9.1.1",
  "releases": [],
  "developers": [
    "maurits@vanrees.org",
    "reinout@vanrees.org"
  ],
  "kwds": "pyversions releases releaser release releasing",
  "license_kwds": "gpl",
  "libtype": "pypi",
  "id": "pypi_zest.releaser",
  "homepage": "",
  "release_count": 165,
  "dependency_ids": [
    "pypi_build",
    "pypi_check_manifest",
    "pypi_colorama",
    "pypi_pep440",
    "pypi_pyroma",
    "pypi_readme_renderer",
    "pypi_requests",
    "pypi_setuptools",
    "pypi_tomli",
    "pypi_twine",
    "pypi_wheel",
    "pypi_zope.testing",
    "pypi_zope.testrunner"
  ]
}
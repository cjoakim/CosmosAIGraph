{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: internet :: proxy servers"
  ],
  "description": "maxmind geoip2 api\n=========================\nmaxmind geoip2 python api\n=========================\n\ndescription\n-----------\n\nthis package provides an api for the geoip2 and geolite2 `web services\n<https://dev.maxmind.com/geoip/docs/web-services?lang=en>`_ and `databases\n<https://dev.maxmind.com/geoip/docs/databases?lang=en>`_.\n\ninstallation\n------------\n\nto install the ``geoip2`` module, type:\n\n.. code-block:: bash\n\n    $ pip install geoip2\n\nif you are not able to use pip, you may also use easy_install from the\nsource directory:\n\n.. code-block:: bash\n\n    $ easy_install .\n\ndatabase reader extension\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nif you wish to use the c extension for the database reader, you must first\ninstall the `libmaxminddb c api <https://github.com/maxmind/libmaxminddb>`_.\nplease `see the instructions distributed with it\n<https://github.com/maxmind/libmaxminddb/blob/main/readme.md>`_.\n\nip geolocation usage\n--------------------\n\nip geolocation is inherently imprecise. locations are often near the center of\nthe population. any location provided by a geoip2 database or web service\nshould not be used to identify a particular address or household.\n\nweb service usage\n-----------------\n\nto use this api, you first construct either a ``geoip2.webservice.client`` or\n``geoip2.webservice.asyncclient``, passing your maxmind ``account_id`` and\n``license_key`` to the constructor. to use the geolite2 web service instead of\nthe geoip2 web service, set the optional ``host`` keyword argument to\n``geolite.info``. to use the sandbox geoip2 web service instead of the\nproduction geoip2 web service, set the optional ``host`` keyword argument to\n``sandbox.maxmind.com``.\n\nafter doing this, you may call the method corresponding to request type\n(e.g., ``city`` or ``country``), passing it the ip address you want to look up.\n\nif the request succeeds, the method call will return a model class for the\nendpoint you called. this model in turn contains multiple record classes,\neach of which represents part of the data returned by the web service.\n\nif the request fails, the client class throws an exception.\n\nsync web service example\n------------------------\n\n.. code-block:: pycon\n\n    >>> import geoip2.webservice\n    >>>\n    >>> # this creates a client object that can be reused across requests.\n    >>> # replace \"42\" with your account id and \"license_key\" with your license\n    >>> # key. set the \"host\" keyword argument to \"geolite.info\" to use the\n    >>> # geolite2 web service instead of the geoip2 web service. set the\n    >>> # \"host\" keyword argument to \"sandbox.maxmind.com\" to use the sandbox\n    >>> # geoip2 web service instead of the production geoip2 web service.\n    >>> with geoip2.webservice.client(42, 'license_key') as client:\n    >>>\n    >>>     # replace \"city\" with the method corresponding to the web service\n    >>>     # that you are using, i.e., \"country\", \"city\", or \"insights\". please\n    >>>     # note that insights is not supported by the geolite2 web service.\n    >>>     response = client.city('203.0.113.0')\n    >>>\n    >>>     response.country.iso_code\n    'us'\n    >>>     response.country.name\n    'united states'\n    >>>     response.country.names['zh-cn']\n    u'\u7f8e\u56fd'\n    >>>\n    >>>     response.subdivisions.most_specific.name\n    'minnesota'\n    >>>     response.subdivisions.most_specific.iso_code\n    'mn'\n    >>>\n    >>>     response.city.name\n    'minneapolis'\n    >>>\n    >>>     response.postal.code\n    '55455'\n    >>>\n    >>>     response.location.latitude\n    44.9733\n    >>>     response.location.longitude\n    -93.2323\n    >>>\n    >>>     response.traits.network\n    ipv4network('203.0.113.0/32')\n\nasync web service example\n-------------------------\n\n.. code-block:: pycon\n\n    >>> import asyncio\n    >>>\n    >>> import geoip2.webservice\n    >>>\n    >>> async def main():\n    >>>     # this creates an asyncclient object that can be reused across\n    >>>     # requests on the running event loop. if you are using multiple event\n    >>>     # loops, you must ensure the object is not used on another loop.\n    >>>     #\n    >>>     # replace \"42\" with your account id and \"license_key\" with your license\n    >>>     # key. set the \"host\" keyword argument to \"geolite.info\" to use the\n    >>>     # geolite2 web service instead of the geoip2 web service. set the\n    >>>     # \"host\" keyword argument to \"sandbox.maxmind.com\" to use the sandbox\n    >>>     # geoip2 web service instead of the production geoip2 web service.\n    >>>     async with geoip2.webservice.asyncclient(42, 'license_key') as client:\n    >>>\n    >>>         # replace \"city\" with the method corresponding to the web service\n    >>>         # that you are using, i.e., \"country\", \"city\", or \"insights\". please\n    >>>         # note that insights is not supported by the geolite2 web service.\n    >>>         response = await client.city('203.0.113.0')\n    >>>\n    >>>         response.country.iso_code\n    'us'\n    >>>         response.country.name\n    'united states'\n    >>>         response.country.names['zh-cn']\n    u'\u7f8e\u56fd'\n    >>>\n    >>>         response.subdivisions.most_specific.name\n    'minnesota'\n    >>>         response.subdivisions.most_specific.iso_code\n    'mn'\n    >>>\n    >>>         response.city.name\n    'minneapolis'\n    >>>\n    >>>         response.postal.code\n    '55455'\n    >>>\n    >>>         response.location.latitude\n    44.9733\n    >>>         response.location.longitude\n    -93.2323\n    >>>\n    >>>         response.traits.network\n    ipv4network('203.0.113.0/32')\n    >>>\n    >>> asyncio.run(main())\n\nweb service client exceptions\n-----------------------------\n\nfor details on the possible errors returned by the web service itself, see\nhttps://dev.maxmind.com/geoip/docs/web-services?lang=en for the geoip2 web\nservice docs.\n\nif the web service returns an explicit error document, this is thrown as a\n``addressnotfounderror``, ``authenticationerror``, ``invalidrequesterror``, or\n``outofquerieserror`` as appropriate. these all subclass ``geoip2error``.\n\nif some other sort of error occurs, this is thrown as an ``httperror``. this\nis thrown when some sort of unanticipated error occurs, such as the web\nservice returning a 500 or an invalid error document. if the web service\nreturns any status code besides 200, 4xx, or 5xx, this also becomes an\n``httperror``.\n\nfinally, if the web service returns a 200 but the body is invalid, the client\nthrows a ``geoip2error``.\n\ndatabase usage\n--------------\n\nto use the database api, you first construct a ``geoip2.database.reader`` using\nthe path to the file as the first argument. after doing this, you may call the\nmethod corresponding to database type (e.g., ``city`` or ``country``), passing it\nthe ip address you want to look up.\n\nif the lookup succeeds, the method call will return a model class for the\ndatabase method you called. this model in turn contains multiple record classes,\neach of which represents part of the data for the record.\n\nif the request fails, the reader class throws an exception.\n\ndatabase example\n----------------\n\ncity database\n^^^^^^^^^^^^^\n\n.. code-block:: pycon\n\n    >>> import geoip2.database\n    >>>\n    >>> # this creates a reader object. you should use the same object\n    >>> # across multiple requests as creation of it is expensive.\n    >>> with geoip2.database.reader('/path/to/geolite2-city.mmdb') as reader:\n    >>>\n    >>>     # replace \"city\" with the method corresponding to the database\n    >>>     # that you are using, e.g., \"country\".\n    >>>     response = reader.city('203.0.113.0')\n    >>>\n    >>>     response.country.iso_code\n    'us'\n    >>>     response.country.name\n    'united states'\n    >>>     response.country.names['zh-cn']\n    u'\u7f8e\u56fd'\n    >>>\n    >>>     response.subdivisions.most_specific.name\n    'minnesota'\n    >>>     response.subdivisions.most_specific.iso_code\n    'mn'\n    >>>\n    >>>     response.city.name\n    'minneapolis'\n    >>>\n    >>>     response.postal.code\n    '55455'\n    >>>\n    >>>     response.location.latitude\n    44.9733\n    >>>     response.location.longitude\n    -93.2323\n    >>>\n    >>>     response.traits.network\n    ipv4network('203.0.113.0/24')\n\nanonymous ip database\n^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: pycon\n\n    >>> import geoip2.database\n    >>>\n    >>> # this creates a reader object. you should use the same object\n    >>> # across multiple requests as creation of it is expensive.\n    >>> with geoip2.database.reader('/path/to/geoip2-anonymous-ip.mmdb') as reader:\n    >>>\n    >>>     response = reader.anonymous_ip('203.0.113.0')\n    >>>\n    >>>     response.is_anonymous\n    true\n    >>>     response.is_anonymous_vpn\n    false\n    >>>     response.is_hosting_provider\n    false\n    >>>     response.is_public_proxy\n    false\n    >>>     response.is_residential_proxy\n    false\n    >>>     response.is_tor_exit_node\n    true\n    >>>     response.ip_address\n    '203.0.113.0'\n    >>>     response.network\n    ipv4network('203.0.113.0/24')\n\nasn database\n^^^^^^^^^^^^\n\n.. code-block:: pycon\n\n    >>> import geoip2.database\n    >>>\n    >>> # this creates a reader object. you should use the same object\n    >>> # across multiple requests as creation of it is expensive.\n    >>> with geoip2.database.reader('/path/to/geolite2-asn.mmdb') as reader:\n    >>>     response = reader.asn('203.0.113.0')\n    >>>     response.autonomous_system_number\n    1221\n    >>>     response.autonomous_system_organization\n    'telstra pty ltd'\n    >>>     response.ip_address\n    '203.0.113.0'\n    >>>     response.network\n    ipv4network('203.0.113.0/24')\n\nconnection-type database\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: pycon\n\n    >>> import geoip2.database\n    >>>\n    >>> # this creates a reader object. you should use the same object\n    >>> # across multiple requests as creation of it is expensive.\n    >>> with geoip2.database.reader('/path/to/geoip2-connection-type.mmdb') as reader:\n    >>>     response = reader.connection_type('203.0.113.0')\n    >>>     response.connection_type\n    'corporate'\n    >>>     response.ip_address\n    '203.0.113.0'\n    >>>     response.network\n    ipv4network('203.0.113.0/24')\n\n\ndomain database\n^^^^^^^^^^^^^^^\n\n.. code-block:: pycon\n\n    >>> import geoip2.database\n    >>>\n    >>> # this creates a reader object. you should use the same object\n    >>> # across multiple requests as creation of it is expensive.\n    >>> with geoip2.database.reader('/path/to/geoip2-domain.mmdb') as reader:\n    >>>     response = reader.domain('203.0.113.0')\n    >>>     response.domain\n    'umn.edu'\n    >>>     response.ip_address\n    '203.0.113.0'\n\nenterprise database\n^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: pycon\n\n    >>> import geoip2.database\n    >>>\n    >>> # this creates a reader object. you should use the same object\n    >>> # across multiple requests as creation of it is expensive.\n    >>> with geoip2.database.reader('/path/to/geoip2-enterprise.mmdb') as reader:\n    >>>\n    >>>     # use the .enterprise method to do a lookup in the enterprise database\n    >>>     response = reader.enterprise('203.0.113.0')\n    >>>\n    >>>     response.country.confidence\n    99\n    >>>     response.country.iso_code\n    'us'\n    >>>     response.country.name\n    'united states'\n    >>>     response.country.names['zh-cn']\n    u'\u7f8e\u56fd'\n    >>>\n    >>>     response.subdivisions.most_specific.name\n    'minnesota'\n    >>>     response.subdivisions.most_specific.iso_code\n    'mn'\n    >>>     response.subdivisions.most_specific.confidence\n    77\n    >>>\n    >>>     response.city.name\n    'minneapolis'\n    >>>     response.country.confidence\n    11\n    >>>\n    >>>     response.postal.code\n    '55455'\n    >>>\n    >>>     response.location.accuracy_radius\n    50\n    >>>     response.location.latitude\n    44.9733\n    >>>     response.location.longitude\n    -93.2323\n    >>>\n    >>>     response.traits.network\n    ipv4network('203.0.113.0/24')\n\n\nisp database\n^^^^^^^^^^^^\n\n.. code-block:: pycon\n\n    >>> import geoip2.database\n    >>>\n    >>> # this creates a reader object. you should use the same object\n    >>> # across multiple requests as creation of it is expensive.\n    >>> with geoip2.database.reader('/path/to/geoip2-isp.mmdb') as reader:\n    >>>     response = reader.isp('203.0.113.0')\n    >>>     response.autonomous_system_number\n    1221\n    >>>     response.autonomous_system_organization\n    'telstra pty ltd'\n    >>>     response.isp\n    'telstra internet'\n    >>>     response.organization\n    'telstra internet'\n    >>>     response.ip_address\n    '203.0.113.0'\n    >>>     response.network\n    ipv4network('203.0.113.0/24')\n\ndatabase reader exceptions\n--------------------------\n\nif the database file does not exist or is not readable, the constructor will\nraise a ``filenotfounderror`` or a ``permissionerror``. if the ip address passed\nto a method is invalid, a ``valueerror`` will be raised. if the file is invalid\nor there is a bug in the reader, a ``maxminddb.invaliddatabaseerror`` will be\nraised with a description of the problem. if an ip address is not in the\ndatabase, a ``addressnotfounderror`` will be raised.\n\n``addressnotfounderror`` references the largest subnet where no address would be\nfound. this can be used to efficiently enumerate entire subnets:\n\n.. code-block:: python\n\n    import geoip2.database\n    import geoip2.errors\n    import ipaddress\n\n    # this creates a reader object. you should use the same object\n    # across multiple requests as creation of it is expensive.\n    with geoip2.database.reader('/path/to/geolite2-asn.mmdb') as reader:\n        network = ipaddress.ip_network(\"192.128.0.0/15\")\n\n        ip_address = network[0]\n        while ip_address in network:\n            try:\n                response = reader.asn(ip_address)\n                response_network = response.network\n            except geoip2.errors.addressnotfounderror as e:\n                response = none\n                response_network = e.network\n            print(f\"{response_network}: {response!r}\")\n            ip_address = response_network[-1] + 1  # move to next subnet\n\nvalues to use for database or dictionary keys\n---------------------------------------------\n\n**we strongly discourage you from using a value from any ``names`` property as\na key in a database or dictionaries.**\n\nthese names may change between releases. instead we recommend using one of the\nfollowing:\n\n* ``geoip2.records.city`` - ``city.geoname_id``\n* ``geoip2.records.continent`` - ``continent.code`` or ``continent.geoname_id``\n* ``geoip2.records.country`` and ``geoip2.records.representedcountry`` - ``country.iso_code`` or ``country.geoname_id``\n* ``geoip2.records.subdivision`` - ``subdivision.iso_code`` or ``subdivision.geoname_id``\n\nwhat data is returned?\n----------------------\n\nwhile many of the models contain the same basic records, the attributes which\ncan be populated vary between web service endpoints or databases. in\naddition, while a model may offer a particular piece of data, maxmind does not\nalways have every piece of data for any given ip address.\n\nbecause of these factors, it is possible for any request to return a record\nwhere some or all of the attributes are unpopulated.\n\nthe only piece of data which is always returned is the ``ip_address``\nattribute in the ``geoip2.records.traits`` record.\n\nintegration with geonames\n-------------------------\n\n`geonames <https://www.geonames.org/>`_ offers web services and downloadable\ndatabases with data on geographical features around the world, including\npopulated places. they offer both free and paid premium data. each feature is\nuniquely identified by a ``geoname_id``, which is an integer.\n\nmany of the records returned by the geoip web services and databases include a\n``geoname_id`` field. this is the id of a geographical feature (city, region,\ncountry, etc.) in the geonames database.\n\nsome of the data that maxmind provides is also sourced from geonames. we\nsource things like place names, iso codes, and other similar data from the\ngeonames premium data set.\n\nreporting data problems\n-----------------------\n\nif the problem you find is that an ip address is incorrectly mapped, please\n`submit your correction to maxmind <https://www.maxmind.com/en/correction>`_.\n\nif you find some other sort of mistake, like an incorrect spelling, please\ncheck the `geonames site <https://www.geonames.org/>`_ first. once you've\nsearched for a place and found it on the geonames map view, there are a\nnumber of links you can use to correct data (\"move\", \"edit\", \"alternate\nnames\", etc.). once the correction is part of the geonames data set, it\nwill be automatically incorporated into future maxmind releases.\n\nif you are a paying maxmind customer and you're not sure where to submit a\ncorrection, please `contact maxmind support\n<https://www.maxmind.com/en/support>`_ for help.\n\nrequirements\n------------\n\npython 3.8 or greater is required. older versions are not supported.\n\nthe requests http library is also required. see\n<https://pypi.org/project/requests/> for details.\n\nversioning\n----------\n\nthe geoip2 python api uses `semantic versioning <https://semver.org/>`_.\n\nsupport\n-------\n\nplease report all issues with this code using the `github issue tracker\n<https://github.com/maxmind/geoip2-python/issues>`_\n\nif you are having an issue with a maxmind service that is not specific to the\nclient api, please contact `maxmind support\n<https://www.maxmind.com/en/support>`_ for assistance.\n",
  "docs_url": "https://pythonhosted.org/geoip2/",
  "keywords": "",
  "license": "apache license, version 2.0",
  "name": "geoip2",
  "package_url": "https://pypi.org/project/geoip2/",
  "project_url": "https://pypi.org/project/geoip2/",
  "project_urls": {
    "Documentation": "https://geoip2.readthedocs.org/",
    "Homepage": "https://www.maxmind.com/",
    "Issue Tracker": "https://github.com/maxmind/GeoIP2-python/issues",
    "Source Code": "https://github.com/maxmind/GeoIP2-python"
  },
  "release_url": "https://pypi.org/project/geoip2/4.8.0/",
  "requires_dist": [
    "aiohttp <4.0.0,>=3.6.2",
    "maxminddb <3.0.0,>=2.5.1",
    "requests <3.0.0,>=2.24.0",
    "setuptools >=60.0.0",
    "mocket >=3.11.1 ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "maxmind geoip2 api",
  "version": "4.8.0",
  "releases": [],
  "developers": [
    "goschwald@maxmind.com"
  ],
  "kwds": "geoip2error geoip2 geoip maxminddb geolite2",
  "license_kwds": "apache license, version 2.0",
  "libtype": "pypi",
  "id": "pypi_geoip2",
  "homepage": "",
  "release_count": 39,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_maxminddb",
    "pypi_mocket",
    "pypi_requests",
    "pypi_setuptools"
  ],
  "documentation_summary": "The HTML text provides information about the `geoip2` package version 4.8.0, available on PyPI for installation. This package offers an API for GeoIP2 and GeoLite2 web services and databases, enabling users to perform IP geolocation. It requires Python version 3.8 or higher and the Requests HTTP library. The package, licensed under the Apache License, Version 2.0, is maintained by Gregory Oschwald and others. It supports various Python versions from 3.8 to 3.12 and is intended for developers and system administrators. The package allows for both synchronous and asynchronous web service calls, database API usage, and handles various types of databases including City, ASN, and ISP databases. It also includes handling for exceptions and advises against using names as database keys due to potential changes. The documentation highlights the imprecision of IP geolocation and the various data returned by the service, integrating with GeoNames for geographical feature data.",
  "embedding": [
    -0.012084235437214375,
    0.011952357366681099,
    0.0023182854056358337,
    -0.03181742504239082,
    -0.011667776852846146,
    0.03575989603996277,
    -0.00882891844958067,
    -0.011834360659122467,
    0.00946054793894291,
    -0.04911433160305023,
    -0.012111999094486237,
    0.016408462077379227,
    -0.026000889018177986,
    0.011980121023952961,
    0.0071561443619430065,
    0.012181409634649754,
    0.024765394628047943,
    -0.009585484862327576,
    0.021947359666228294,
    0.01202870812267065,
    0.039480261504650116,
    0.006927092093974352,
    0.0003195017052348703,
    -0.036231882870197296,
    0.001496647484600544,
    0.009078794158995152,
    -0.0068507413379848,
    -0.016713865101337433,
    0.017810538411140442,
    0.0040812925435602665,
    0.019865067675709724,
    -0.031345438212156296,
    -0.03278915956616402,
    0.012091176584362984,
    -0.004695568699389696,
    -0.0031477317679673433,
    0.01288938894867897,
    -0.006295463535934687,
    0.017755011096596718,
    0.02776389569044113,
    0.007093675434589386,
    0.0019434726564213634,
    0.0060629406943917274,
    -0.014326170086860657,
    0.004497751127928495,
    0.019934477284550667,
    0.027458492666482925,
    -0.05599977821111679,
    -0.026889333501458168,
    -0.008287522941827774,
    0.0013691071653738618,
    0.030012771487236023,
    0.02459881082177162,
    -0.006069881841540337,
    -0.0005826079868711531,
    -0.0032501111272722483,
    0.013403020799160004,
    0.006212171632796526,
    -0.03459381312131882,
    -0.005615247879177332,
    0.022322172299027443,
    0.0016866566147655249,
    -0.025639958679676056,
    0.0018428285839036107,
    -0.030096063390374184,
    0.00579224294051528,
    -0.016977623105049133,
    0.016352934762835503,
    -0.0043207560665905476,
    -0.0014515311922878027,
    0.04064634442329407,
    0.024029651656746864,
    -0.013000444509088993,
    -0.031095562502741814,
    0.03667610511183739,
    -0.02632017247378826,
    -0.004202759824693203,
    0.010369814932346344,
    -0.004223582800477743,
    -0.007697540335357189,
    0.0035780721809715033,
    -0.034427229315042496,
    0.0041541727259755135,
    0.029790660366415977,
    0.024945860728621483,
    0.013514076359570026,
    -0.011362374760210514,
    0.013833360746502876,
    0.000459839531686157,
    0.00014586890756618232,
    0.014992503449320793,
    0.011098617687821388,
    0.010286523029208183,
    0.01708867773413658,
    -0.013639014214277267,
    0.030179355293512344,
    0.0003717759100254625,
    0.007121439091861248,
    -0.02323838137090206,
    -0.02061469294130802,
    -0.022113943472504616,
    0.024390581995248795,
    -0.01068215910345316,
    -0.01682492159307003,
    -0.0475873164832592,
    0.0019382670288905501,
    -0.004525515250861645,
    -0.02269698493182659,
    0.018393581733107567,
    0.011605308391153812,
    5.921518459217623e-05,
    0.02179465815424919,
    0.017407963052392006,
    -0.0128546841442585,
    0.009148203767836094,
    0.012910211458802223,
    0.04458881542086601,
    0.004699039272964001,
    0.0011027472792193294,
    0.0070173246785998344,
    -0.02090621367096901,
    0.01411100011318922,
    0.0013092411682009697,
    -0.003503456711769104,
    0.011188849806785583,
    -0.0103559335693717,
    -0.026750514283776283,
    -0.01881003938615322,
    -0.003949414007365704,
    -0.002084027510136366,
    -0.011612249538302422,
    0.011015325784683228,
    0.0033733132295310497,
    0.005171025637537241,
    -0.014270642772316933,
    -0.013097617775201797,
    0.006007412914186716,
    -0.015811538323760033,
    -0.008120939135551453,
    -0.03281692415475845,
    0.003911238629370928,
    0.018254760652780533,
    -0.01682492159307003,
    0.0027225969824939966,
    -0.00011777965119108558,
    0.041479259729385376,
    0.00014803795784246176,
    0.004251346457749605,
    0.0033681076020002365,
    -0.0066737462766468525,
    0.0006190481362864375,
    -0.025403965264558792,
    -0.022113943472504616,
    0.0031911127734929323,
    -0.016339052468538284,
    0.003689127741381526,
    -0.0074823698960244656,
    0.01031428761780262,
    -0.010786273516714573,
    -0.01828252524137497,
    -0.00887056440114975,
    0.013139263726770878,
    -0.045366205275058746,
    -0.015950357541441917,
    0.03076239675283432,
    0.03312232717871666,
    0.018226997926831245,
    -0.02380754053592682,
    -0.026625575497746468,
    -0.0024137236177921295,
    0.009592426009476185,
    0.008474929258227348,
    -0.04245099797844887,
    -0.004018824081867933,
    0.02397412434220314,
    0.03004053607583046,
    0.028263645246624947,
    0.009779832325875759,
    -0.019656838849186897,
    -0.008863624185323715,
    0.019198734313249588,
    0.009516075253486633,
    -0.007517074700444937,
    0.04072963446378708,
    -0.003175495658069849,
    -0.012965739704668522,
    0.004594924859702587,
    0.016436226665973663,
    0.016172468662261963,
    -0.0005344550008885562,
    0.0002325226232642308,
    0.017491254955530167,
    0.02705591730773449,
    -0.005521544720977545,
    -0.584596574306488,
    -0.005278610624372959,
    -0.01280609704554081,
    -0.020059414207935333,
    -0.014367816038429737,
    0.012125881388783455,
    0.006052529439330101,
    0.028985507786273956,
    -2.4090060833259486e-05,
    0.03917485848069191,
    -0.019212616607546806,
    0.010293464176356792,
    -0.018754512071609497,
    -0.0030002358835190535,
    -0.0019677660893648863,
    -0.027652841061353683,
    0.0010350727243348956,
    -0.017685601487755775,
    0.004681686870753765,
    0.009523016400635242,
    -0.0048100948333740234,
    0.03112332709133625,
    -0.012896329164505005,
    0.025306791067123413,
    -0.0035988949239253998,
    0.02487645111978054,
    -0.0013465489028021693,
    -0.019226497039198875,
    0.007524015847593546,
    0.03942473232746124,
    -0.02197512425482273,
    0.03628741204738617,
    0.02154478244483471,
    -0.026472873985767365,
    0.046920984983444214,
    -0.004119467921555042,
    -0.01157754473388195,
    0.045282915234565735,
    0.014242878183722496,
    0.031151091679930687,
    -0.0063024042174220085,
    -0.040868453681468964,
    -0.01415958721190691,
    0.027666721493005753,
    0.030817924067378044,
    0.005250846967101097,
    0.02261369302868843,
    0.03981342539191246,
    0.002514367923140526,
    -0.021572547033429146,
    -0.00011078445095336065,
    -0.011438725516200066,
    0.013236436992883682,
    -0.029207618907094002,
    0.03825864940881729,
    0.015492253936827183,
    0.010348992422223091,
    -0.0006815168890170753,
    0.004410989116877317,
    -0.014034649357199669,
    -0.003253581468015909,
    0.001992059638723731,
    0.01782442070543766,
    -0.027486257255077362,
    -0.010696040466427803,
    0.02064245566725731,
    0.009634071961045265,
    -0.03456604853272438,
    0.01708867773413658,
    -0.007940473966300488,
    0.0298461876809597,
    0.009342551231384277,
    0.00635793199762702,
    -0.0298461876809597,
    0.015117441304028034,
    0.05411183461546898,
    0.01818535104393959,
    0.009134321473538876,
    -0.001546101993881166,
    0.021392080932855606,
    0.011459548026323318,
    0.008759508840739727,
    0.008710922673344612,
    -0.03095674328505993,
    0.029096562415361404,
    -0.01846299134194851,
    -0.011480370536446571,
    -0.012743628583848476,
    -0.004056999459862709,
    0.0014541340060532093,
    0.013104558922350407,
    0.0023408434353768826,
    -0.011563662439584732,
    -0.03737020492553711,
    -0.002798947738483548,
    0.007392137311398983,
    -0.03337220102548599,
    -0.009169026277959347,
    0.00027568681980483234,
    -0.02794436179101467,
    -0.004959325771778822,
    -0.015131323598325253,
    -0.025001388043165207,
    0.014013826847076416,
    0.023946359753608704,
    0.009030207060277462,
    -0.015978122130036354,
    -0.008697040379047394,
    0.01882392168045044,
    0.007399078458547592,
    -0.0022367287892848253,
    -0.029735133051872253,
    -0.023585429415106773,
    -0.011424843221902847,
    -0.009606308303773403,
    -0.02498750574886799,
    0.007097146008163691,
    -0.008759508840739727,
    -0.014867566525936127,
    0.03681492432951927,
    -0.023196734488010406,
    0.003052293322980404,
    0.013014325872063637,
    0.011876006610691547,
    0.005608306732028723,
    0.0017196262488141656,
    0.0007344417972490191,
    -0.008724804036319256,
    -0.033427730202674866,
    -0.018046531826257706,
    -0.006708451546728611,
    0.007072852458804846,
    0.016214115545153618,
    -0.01068215910345316,
    0.030817924067378044,
    0.01158448588103056,
    0.018851684406399727,
    0.002538661239668727,
    -0.012771392241120338,
    -0.007808595895767212,
    0.009342551231384277,
    0.009342551231384277,
    0.00891221035271883,
    -0.01746349036693573,
    -0.012625631876289845,
    -0.026847686618566513,
    -0.00642040092498064,
    0.007780831772834063,
    -0.011091676540672779,
    -0.005014853551983833,
    -0.004341579042375088,
    -0.02025376260280609,
    -0.011660836637020111,
    0.02507079765200615,
    -0.0015434990637004375,
    -0.005820006597787142,
    0.031234383583068848,
    -0.011251319199800491,
    -0.009259259328246117,
    -0.005847770720720291,
    0.007787772919982672,
    -0.006236465182155371,
    -0.0059449439868330956,
    0.017074795439839363,
    -0.021669721230864525,
    -0.014714865013957024,
    -0.009384197182953358,
    0.03409406542778015,
    0.007878005504608154,
    -0.03195624426007271,
    -0.0009535162826068699,
    0.012403520755469799,
    -0.006555750034749508,
    -0.01483980193734169,
    -0.013229496777057648,
    0.0017578016268089414,
    -0.020212115719914436,
    0.012556222267448902,
    -0.016214115545153618,
    -0.0011860389495268464,
    0.013881947845220566,
    0.027361318469047546,
    -0.031151091679930687,
    -0.019406963139772415,
    0.020586928352713585,
    -0.007364373188465834,
    0.017338553443551064,
    -0.005042617674916983,
    -0.02126714400947094,
    0.020212115719914436,
    -0.014409461989998817,
    0.006496751680970192,
    -0.016352934762835503,
    -0.0013777833664789796,
    -0.008891387842595577,
    0.02659781277179718,
    -0.001355225220322609,
    0.0014255024725571275,
    0.01154283992946148,
    0.023460492491722107,
    0.004535926505923271,
    0.031012272462248802,
    -0.02298850566148758,
    0.013604309409856796,
    -0.010335110127925873,
    -0.01654728129506111,
    0.007871064357459545,
    -0.03517685458064079,
    0.01357654482126236,
    -0.014423344284296036,
    0.027527902275323868,
    -0.03431617468595505,
    -0.015034149400889874,
    -0.01782442070543766,
    -0.0013543575769290328,
    0.017407963052392006,
    0.004768448881804943,
    0.0171025600284338,
    -0.030262647196650505,
    0.021877950057387352,
    0.01152895763516426,
    0.021655838936567307,
    0.013812538236379623,
    0.0118968291208148,
    0.009356432594358921,
    -0.008648453280329704,
    -0.005330667831003666,
    0.021045032888650894,
    0.024223998188972473,
    -0.03617635741829872,
    0.004230523481965065,
    0.009988061152398586,
    0.005059970077127218,
    -0.014687101356685162,
    0.018574045971035957,
    -0.012236936949193478,
    0.05069687217473984,
    -0.013396079652011395,
    0.0043797544203698635,
    -0.0463101789355278,
    0.005400077905505896,
    0.03192847967147827,
    0.0334554947912693,
    -0.04711532965302467,
    0.03023488260805607,
    0.0020510577596724033,
    0.009911710396409035,
    -0.011556721292436123,
    -0.014812038280069828,
    0.018324172124266624,
    -0.007447665091603994,
    0.015533899888396263,
    -0.013409961946308613,
    0.010827919468283653,
    0.012105058878660202,
    -0.012924093753099442,
    -0.007996002212166786,
    0.02207229658961296,
    0.026292409747838974,
    0.009425842203199863,
    0.019434727728366852,
    0.010612749494612217,
    0.021128324791789055,
    -0.00850963406264782,
    0.015617191791534424,
    -0.004060469567775726,
    0.00010248782200505957,
    -0.02904103510081768,
    0.017768893390893936,
    -0.024751512333750725,
    -0.00019326274923514575,
    -0.041312675923109055,
    0.0010966738918796182,
    -0.016130823642015457,
    0.022835804149508476,
    -0.013090676628053188,
    0.0037064801435917616,
    0.019837303087115288,
    0.007739185821264982,
    -0.0019347964553162456,
    -0.01564495451748371,
    -0.031178854405879974,
    0.022238880395889282,
    0.010841801762580872,
    0.002713920781388879,
    -0.004570631310343742,
    -0.017074795439839363,
    0.0045775724574923515,
    -0.007267199922353029,
    0.013486312702298164,
    -0.0013821214670315385,
    0.0032032595481723547,
    -0.018338052555918694,
    0.0031078211031854153,
    -0.013826420530676842,
    -0.01190377026796341,
    0.03798101097345352,
    -0.011063912883400917,
    -0.021336553618311882,
    0.018948858603835106,
    0.011390138417482376,
    -0.007510134018957615,
    -0.009259259328246117,
    0.014534399844706059,
    0.06446776539087296,
    -0.008287522941827774,
    -0.005611777305603027,
    0.003998001106083393,
    -0.015145204961299896,
    -0.023557664826512337,
    -0.008641512133181095,
    0.02632017247378826,
    -0.018296407535672188,
    0.011730246245861053,
    0.015186850912868977,
    0.001081056660041213,
    -0.006552279461175203,
    -0.014714865013957024,
    0.03898051008582115,
    0.008204231038689613,
    -0.009446665644645691,
    -0.030012771487236023,
    -0.011466489173471928,
    -0.01203564926981926,
    0.02625076286494732,
    0.00246578105725348,
    0.015783775597810745,
    0.004990560468286276,
    -0.02722249925136566,
    -0.04941973462700844,
    -0.014659336768090725,
    -0.006517574656754732,
    0.008794213645160198,
    0.0026340996846556664,
    -0.03412182629108429,
    0.019115442410111427,
    0.013937476091086864,
    0.02287745103240013,
    0.03184518963098526,
    0.020059414207935333,
    0.005767949391156435,
    -0.000826843548566103,
    -0.0037168916314840317,
    -0.020323172211647034,
    -0.028791159391403198,
    -0.005851240828633308,
    -0.007565661799162626,
    0.003897356800734997,
    0.05202954262495041,
    0.012646454386413097,
    0.02407129853963852,
    0.01140401978045702,
    -3.616220283220173e-06,
    -0.009252318181097507,
    -0.0015304847620427608,
    -0.018948858603835106,
    0.012750568799674511,
    0.04236770421266556,
    -0.013680659234523773,
    0.04025764763355255,
    0.015075795352458954,
    0.020975623279809952,
    0.01190377026796341,
    -0.005153673235327005,
    0.038508523255586624,
    -0.008301405236124992,
    -0.012542339973151684,
    -0.0047233328223228455,
    0.028902215883135796,
    -0.01590871252119541,
    -0.0044248709455132484,
    0.050002776086330414,
    -0.002568160416558385,
    -0.004702509846538305,
    0.00845410581678152,
    0.016408462077379227,
    -0.036703869700431824,
    -0.03881392627954483,
    0.010425343178212643,
    0.009252318181097507,
    -0.0024293409660458565,
    -0.007058970630168915,
    -0.013895830139517784,
    -0.02017047069966793,
    -0.02208617888391018,
    -0.02750013954937458,
    -0.0031130267307162285,
    -0.00486215204000473,
    -0.013451607897877693,
    -0.007412960287183523,
    -0.017588427290320396,
    0.021586429327726364,
    -0.019420845434069633,
    0.004817035980522633,
    0.030262647196650505,
    -0.03251152113080025,
    -0.012750568799674511,
    0.016061414033174515,
    0.03151202201843262,
    0.012528457678854465,
    0.002960325451567769,
    -0.001218140940181911,
    0.003106085816398263,
    0.003998001106083393,
    0.010925092734396458,
    -0.03709256649017334,
    -0.0035242794547230005,
    -0.023127324879169464,
    0.017519017681479454,
    -0.004730273969471455,
    0.02271086722612381,
    0.01999000459909439,
    0.011646954342722893,
    0.02959631383419037,
    -0.012292465195059776,
    0.012181409634649754,
    0.031178854405879974,
    -0.005875534377992153,
    0.018504636362195015,
    0.02398800663650036,
    0.021058915182948112,
    -0.009793714620172977,
    -0.0050356765277683735,
    -0.000621651008259505,
    -0.0021950830705463886,
    -0.015450607985258102,
    -0.006344050168991089,
    0.010057471692562103,
    0.031067799776792526,
    0.01892109587788582,
    -0.0062156422063708305,
    -0.016852684319019318,
    -0.015978122130036354,
    0.011771892197430134,
    0.019254261627793312,
    -0.005077322479337454,
    -0.003692598082125187,
    -0.0055597200989723206,
    0.0038904158864170313,
    -0.002812829799950123,
    0.0014176939148455858,
    0.011091676540672779,
    -0.007975178770720959,
    -0.011216613464057446,
    -0.013881947845220566,
    -0.021031150594353676,
    0.014950857497751713,
    0.027000388130545616,
    -0.00904408935457468,
    0.0009821477578952909,
    -0.0036578932777047157,
    -0.013062912970781326,
    -0.029985006898641586,
    0.005073851905763149,
    0.028083181008696556,
    -0.011834360659122467,
    -0.005125909112393856,
    -0.004823977127671242,
    0.03667610511183739,
    0.006073352415114641,
    -0.008752568624913692,
    0.021836303174495697,
    -0.017324671149253845,
    -0.005053028929978609,
    -0.009169026277959347,
    -0.022585928440093994,
    -0.0009656629990786314,
    -0.004546337760984898,
    0.00896079745143652,
    -0.017574546858668327,
    -0.026264645159244537,
    -0.0026688044890761375,
    0.011792714707553387,
    0.02441834658384323,
    -0.008211172185838223,
    -0.0006927959620952606,
    0.0028006830252707005,
    -0.02307179756462574,
    -0.029513021931052208,
    0.024459991604089737,
    -0.005608306732028723,
    0.00699303112924099,
    0.01910156011581421,
    0.03898051008582115,
    0.008676217868924141,
    0.030540285632014275,
    0.009571603499352932,
    0.01565883681178093,
    -0.011306846514344215,
    -0.002613276708871126,
    -0.005514604039490223,
    0.015853185206651688,
    -0.012403520755469799,
    -0.021753013134002686,
    0.0037585373502224684,
    0.01312538143247366,
    -0.011827419511973858,
    -0.0040222941897809505,
    -0.026403464376926422,
    0.020114943385124207,
    0.010453106835484505,
    -0.004258287604898214,
    -0.012521517463028431,
    -0.019934477284550667,
    -0.018796157091856003,
    -0.0028336525429040194,
    -0.007621189579367638,
    0.004771919455379248,
    -0.016214115545153618,
    -0.010237936861813068,
    0.038869455456733704,
    -0.030512521043419838,
    0.018587928265333176,
    0.004331167787313461,
    -0.006968738045543432,
    0.007510134018957615,
    0.041118331253528595,
    0.02343272790312767,
    0.017324671149253845,
    -0.00513632083311677,
    0.012590927071869373,
    -0.039036039263010025,
    0.0010289993369951844,
    0.008412460796535015,
    -0.026542283594608307,
    0.014145704917609692,
    -0.013597368262708187,
    0.01647787168622017,
    0.003928591031581163,
    0.01533955242484808,
    0.019129324704408646,
    -0.024293409660458565,
    -0.015728246420621872,
    -0.02912432700395584,
    0.0090024434030056,
    -0.01017546746879816,
    -0.03720362111926079,
    -0.01989283226430416,
    0.007947415113449097,
    0.0016120411455631256,
    0.025626076385378838,
    0.025931479409337044,
    -0.018712865188717842,
    -0.0213504359126091,
    0.011438725516200066,
    -0.03509356454014778,
    0.03581542521715164,
    0.02054528333246708,
    0.05302904173731804,
    0.047087568789720535,
    0.0005856446805410087,
    -0.016949858516454697,
    -0.004334638360887766,
    -0.021045032888650894,
    0.001653687097132206,
    0.03259481489658356,
    0.011889887973666191,
    -0.028180353343486786,
    -0.017116442322731018,
    0.016672220081090927,
    -0.021641956642270088,
    -0.004157643299549818,
    -0.0008251082617789507,
    0.023224499076604843,
    0.01747737266123295,
    0.031151091679930687,
    -0.024210117757320404,
    0.01226470060646534,
    -0.005958826281130314,
    0.013805597089231014,
    -0.04414459317922592,
    0.008259759284555912,
    -0.011917652562260628,
    -0.010397578589618206,
    -0.01538119837641716,
    0.013840301893651485,
    0.02216947078704834,
    -0.015159087255597115,
    0.022419346496462822,
    0.0012372286291792989,
    -0.004497751127928495,
    -0.01989283226430416,
    0.0050946748815476894,
    -0.0008693569689057767,
    0.023502137511968613,
    0.009328668937087059,
    -0.00680909538641572,
    -0.015783775597810745,
    0.019240379333496094,
    -0.0014055472565814853,
    -0.002172524807974696,
    0.0013560927473008633,
    0.016033649444580078,
    0.039230383932590485,
    -0.018865566700696945,
    -0.028707867488265038,
    -0.03004053607583046,
    -0.028263645246624947,
    -0.016686100512742996,
    0.021058915182948112,
    -0.017588427290320396,
    0.006982619874179363,
    0.008287522941827774,
    0.006160114426165819,
    0.014812038280069828,
    -0.011792714707553387,
    -0.018143706023693085,
    -0.014673219062387943,
    -0.006475928705185652,
    -0.029207618907094002,
    -0.02261369302868843,
    0.020573046058416367,
    0.017047032713890076,
    0.0008533059735782444,
    -0.018893331289291382,
    -0.006628630217164755,
    -0.023418845608830452,
    0.003184171859174967,
    0.019406963139772415,
    0.0033351380843669176,
    0.004469987004995346,
    0.02923538163304329,
    -0.008120939135551453,
    0.004987089894711971,
    0.005493781063705683,
    0.01447887159883976,
    -0.03140096738934517,
    -0.00016875243454705924,
    -0.022683102637529373,
    -0.017074795439839363,
    0.026042534038424492,
    0.011612249538302422,
    -0.015145204961299896,
    -0.030623577535152435,
    -0.0008112263167276978,
    0.010578044690191746,
    0.017963239923119545,
    -0.006094174925237894,
    -0.011966238729655743,
    0.010744627565145493,
    0.014589927159249783,
    -0.031012272462248802,
    1.2526288628578186e-05,
    0.022502638399600983,
    0.010820978321135044,
    -0.012417402118444443,
    -0.00809317547827959,
    -0.0030158532317727804,
    0.018712865188717842,
    -0.008343050256371498,
    0.015575545839965343,
    0.011341551318764687,
    -0.026764394715428352,
    -0.04733744263648987,
    -0.017310788854956627,
    0.020559165626764297,
    -0.011522016488015652,
    0.03487145155668259,
    0.014895330183207989,
    -0.009502192959189415,
    -0.015894830226898193,
    0.05466711148619652,
    -0.0016059678746387362,
    0.0009214142919518054,
    0.024543283507227898,
    0.023113442584872246,
    -0.01693597622215748,
    -0.001974707003682852,
    0.016852684319019318,
    -0.014895330183207989,
    -0.01497862208634615,
    -0.011279082857072353,
    -0.04983619228005409,
    -0.007447665091603994,
    -0.010369814932346344,
    0.04233993962407112,
    -0.0019087678520008922,
    -0.022488756105303764,
    -0.014548281207680702,
    -0.01601976715028286,
    -0.04125715047121048,
    -0.008648453280329704,
    -0.011091676540672779,
    0.021753013134002686,
    0.012153645046055317,
    0.01918485201895237,
    0.0029863540548831224,
    -0.0009604572551324964,
    0.005719362758100033,
    0.03914709389209747,
    -0.029707368463277817,
    0.023418845608830452,
    -0.02459881082177162,
    -0.002299197716638446,
    0.017810538411140442,
    -0.008440224453806877,
    -0.0390915647149086,
    -0.011834360659122467,
    0.01320867333561182,
    0.01854628324508667,
    -0.006989560555666685,
    0.03756454959511757,
    0.006663335021585226,
    -0.03928591310977936,
    0.008481870405375957,
    -0.01964295655488968,
    0.005674246232956648,
    -0.0013621661346405745,
    -0.011848242953419685,
    -0.02162807434797287,
    -0.0058304183185100555,
    0.016949858516454697,
    -0.00031125929672271013,
    -0.006111527793109417,
    -0.01590871252119541,
    0.026195235550403595,
    -0.02189183235168457,
    -0.00040474554407410324,
    -0.005129379685968161,
    -0.01145260687917471,
    0.009148203767836094,
    0.002097909338772297,
    0.00592759158462286,
    0.01397912111133337,
    0.004258287604898214,
    0.046643346548080444,
    0.0030106473714113235,
    0.018518518656492233,
    -0.02497362345457077,
    0.024223998188972473,
    -0.02507079765200615,
    0.013416903093457222,
    0.002549072727560997,
    -0.012861624360084534,
    -0.0022662279661744833,
    -0.0022176411002874374,
    0.02143372781574726,
    -0.009620189666748047,
    -0.005820006597787142,
    -0.03140096738934517,
    -0.0022124354727566242,
    -0.028985507786273956,
    -0.014041590504348278,
    0.04222888499498367,
    -0.046920984983444214,
    -0.0021898772101849318,
    0.015256260521709919,
    0.0057054804638028145,
    0.0037446555215865374,
    -0.018351934850215912,
    -0.016436226665973663,
    -0.02098950557410717,
    0.0019243850838392973,
    0.004161113873124123,
    0.002611541422083974,
    -0.045005276799201965,
    0.00021798996021971107,
    -0.012271641753613949,
    -0.0011730246478691697,
    0.024307290092110634,
    0.18790604174137115,
    0.02062857523560524,
    0.007537897676229477,
    -0.011383197270333767,
    -0.009488311596214771,
    0.01198706217110157,
    -0.0007123174727894366,
    0.02823588252067566,
    -0.0006632968434132636,
    0.029624076560139656,
    -0.016158588230609894,
    -0.03356654942035675,
    -0.00036440114490687847,
    0.0007869329419918358,
    0.016977623105049133,
    -0.026556165888905525,
    -0.03784219175577164,
    -0.03276139870285988,
    -0.005858181975781918,
    0.011681659147143364,
    0.008120939135551453,
    -0.006691098678857088,
    -0.02561219409108162,
    -0.028485756367444992,
    0.01592259481549263,
    -0.012729746289551258,
    0.009592426009476185,
    -0.015408962033689022,
    0.008481870405375957,
    0.007364373188465834,
    0.017796657979488373,
    0.008037648163735867,
    0.009037148207426071,
    -0.005563190672546625,
    -0.06402354687452316,
    -0.01690821163356304,
    0.02851352095603943,
    -0.008495751768350601,
    0.014326170086860657,
    0.023849187418818474,
    -0.022294407710433006,
    -0.05411183461546898,
    -0.010751568712294102,
    -0.04639346897602081,
    0.004896857310086489,
    -0.005823477171361446,
    -0.0014220320153981447,
    0.017782775685191154,
    0.01321561448276043,
    0.03625964745879173,
    -0.018310289829969406,
    -0.042673107236623764,
    -0.0024640457704663277,
    -0.003699539229273796,
    -0.0009040618315339088,
    -0.02064245566725731,
    0.0039806487038731575,
    -0.006226053461432457,
    -0.010064411908388138,
    -0.02254428341984749,
    -0.0007704481249675155,
    0.019295908510684967,
    -0.04022988677024841,
    0.02615359053015709,
    -0.031539786607027054,
    0.02190571464598179,
    -0.021017268300056458,
    -0.013493252918124199,
    -0.011105557903647423,
    -0.013951357454061508,
    -0.00896079745143652,
    -0.017879948019981384,
    -0.020392581820487976,
    -0.0036648341920226812,
    -0.021294908598065376,
    -0.019143206998705864,
    0.024501638486981392,
    0.006371814291924238,
    0.028735632076859474,
    0.01153589878231287,
    -0.0031442611943930387,
    0.0012597867753356695,
    0.00850269291549921,
    0.013583485968410969,
    -0.018421344459056854,
    -0.01736631616950035,
    0.02768060378730297,
    -0.031900715082883835,
    -0.03537120297551155,
    -0.027472374960780144,
    -0.009627130813896656,
    -0.041673608124256134,
    0.00805152952671051,
    -0.001462810207158327,
    -0.008016824722290039,
    0.02262757532298565,
    -0.011549781076610088,
    0.016811039298772812,
    -0.028374701738357544,
    0.0009960298193618655,
    -0.021877950057387352,
    0.06346826255321503,
    0.0031633488833904266,
    -0.02523738145828247,
    -0.018671220168471336,
    -0.0007253317744471133,
    0.015478371642529964,
    0.015672719106078148,
    0.0019070325652137399,
    -0.013639014214277267,
    -0.011660836637020111,
    -0.0228913314640522,
    -0.01072380505502224,
    -0.00985618308186531,
    -0.0038071242161095142,
    0.0076142484322190285,
    0.009300905279815197,
    -0.01744960807263851,
    -0.01854628324508667,
    0.007697540335357189,
    -0.013916652649641037,
    -0.0180048868060112,
    -0.0012450371868908405,
    0.0017925065476447344,
    -0.005611777305603027,
    -0.009523016400635242,
    -0.02695874311029911,
    0.009384197182953358,
    -0.007843300700187683,
    -0.007683658041059971,
    -0.009779832325875759,
    -0.022849686443805695,
    0.021336553618311882,
    0.02915208972990513,
    -0.005733244586735964,
    -0.0016059678746387362,
    0.0030488227494060993,
    -0.026819923892617226,
    -0.013521017506718636,
    0.021961241960525513,
    -0.002939502475783229,
    -0.015048031695187092,
    0.007058970630168915,
    -0.006052529439330101,
    0.00769059918820858,
    0.008356932550668716,
    0.004355461336672306,
    -0.002783330623060465,
    -0.0017595369135960937,
    0.01366677787154913,
    -0.01701926812529564,
    -0.013444666750729084,
    0.014909212477505207,
    -0.0006073352415114641,
    0.01366677787154913,
    -0.02189183235168457,
    -0.01583930291235447,
    -0.019795658066868782,
    0.005656893830746412,
    0.015714364126324654,
    -0.024765394628047943,
    -0.005118968430906534,
    -0.022322172299027443,
    0.007121439091861248,
    -0.02769448608160019,
    0.012243878096342087,
    -0.17480148375034332,
    0.009342551231384277,
    0.025376200675964355,
    -0.025570547208189964,
    -0.0076003666035830975,
    -0.010446165688335896,
    0.003987589385360479,
    -0.014298406429588795,
    -0.003272669157013297,
    -0.006951385643333197,
    0.03256705030798912,
    0.0014497959055006504,
    0.0062885223887860775,
    -0.017491254955530167,
    -0.003765478264540434,
    -0.003644011216238141,
    -0.010022765956819057,
    -0.001972971949726343,
    0.024640457704663277,
    -0.0034756928216665983,
    0.053251150995492935,
    0.005868593696504831,
    0.014756510965526104,
    -0.013923593796789646,
    0.014617690816521645,
    -0.017421845346689224,
    -0.016227997839450836,
    -0.004136820323765278,
    -0.026806041598320007,
    -0.03273363411426544,
    0.006055999547243118,
    0.011438725516200066,
    0.0447276346385479,
    0.020156588405370712,
    0.032983507961034775,
    0.036065299063920975,
    0.03228941187262535,
    -0.0006515839486382902,
    -0.0272502638399601,
    0.0035850130952894688,
    0.03625964745879173,
    0.017755011096596718,
    0.0001753680408000946,
    -0.005649952683597803,
    -0.011348492465913296,
    -0.009668776765465736,
    -0.00017807936819735914,
    -0.00940501969307661,
    0.028818923979997635,
    -0.016130823642015457,
    0.01646398939192295,
    -0.004126409068703651,
    0.004841329529881477,
    -0.006486339960247278,
    0.020142706111073494,
    0.027291908860206604,
    -0.002094438998028636,
    0.025390082970261574,
    0.002559484215453267,
    0.0014150911010801792,
    -0.023030150681734085,
    -0.006611277814954519,
    0.0023911655880510807,
    -0.020684102550148964,
    0.01700538583099842,
    -0.024043533951044083,
    -0.006996501702815294,
    0.02080903947353363,
    -0.003463546046987176,
    0.03104003518819809,
    0.003283080644905567,
    0.035426732152700424,
    0.004612277261912823,
    0.0004589719173964113,
    0.030096063390374184,
    -0.0006190481362864375,
    -0.03917485848069191,
    0.017241379246115685,
    0.03748125955462456,
    0.00513632083311677,
    -0.043034039437770844,
    0.017352435737848282,
    0.0013508870033547282,
    0.02153090201318264,
    -0.023849187418818474,
    0.00635793199762702,
    0.004445693921297789,
    0.0010940710781142116,
    0.006642512045800686,
    0.0006264228723011911,
    0.01992059499025345,
    -0.033261146396398544,
    -0.01654728129506111,
    -0.01308373548090458,
    0.022946860641241074,
    0.009467488154768944,
    0.02162807434797287,
    0.025306791067123413,
    0.014867566525936127,
    -0.02668110467493534,
    0.020059414207935333,
    0.025445610284805298,
    -0.00809317547827959,
    0.00023794526350684464,
    0.0385640524327755,
    0.010348992422223091,
    -0.020017769187688828,
    -0.014950857497751713,
    0.00617399625480175,
    0.03309456259012222,
    -0.001726567279547453,
    -0.00468515744432807,
    0.016033649444580078,
    0.011827419511973858,
    -0.03798101097345352,
    0.00908573530614376,
    -0.007815537042915821,
    -0.004584513138979673,
    0.0021933477837592363,
    0.019934477284550667,
    0.009877005591988564,
    0.0005704612703993917,
    -0.004025764763355255,
    0.018115941435098648,
    -0.007794713601469994,
    -0.02154478244483471,
    -0.08723416179418564,
    -0.02307179756462574,
    0.02587595023214817,
    -0.007989061065018177,
    -0.0065279859118163586,
    -0.01116802729666233,
    0.004633100237697363,
    0.0132503192871809,
    -0.014631573110818863,
    0.011730246245861053,
    -0.019656838849186897,
    -0.0016502165235579014,
    -0.023044032976031303,
    0.012216114439070225,
    -0.024834804236888885,
    -0.004980148747563362,
    -0.02787495218217373,
    0.008127880282700062,
    -0.0018914154497906566,
    -0.0018636515596881509,
    -0.006187878083437681,
    -0.004157643299549818,
    -0.006816036533564329,
    0.006149702705442905,
    -0.01836581714451313,
    0.0021152617409825325,
    -0.03389971703290939,
    0.011140263639390469,
    0.007062441203743219,
    -0.01366677787154913,
    0.008197289891541004,
    -0.03323338180780411,
    -0.01565883681178093,
    0.010411460883915424,
    0.0008884446579031646,
    0.01982342079281807,
    -0.024473873898386955,
    -0.0035329556558281183,
    0.045005276799201965,
    -0.007322727702558041,
    0.00298461876809597,
    -0.0031286440789699554,
    0.0018220056081190705,
    -0.004095174837857485,
    -0.02154478244483471,
    -0.01199400331825018,
    -0.00491073913872242,
    0.035510022193193436,
    0.028374701738357544,
    -0.032150592654943466,
    -0.01593647710978985,
    0.0012441695434972644,
    0.00045376617345027626,
    0.01023099571466446,
    0.0032900215592235327,
    0.013888888992369175,
    -0.015478371642529964,
    -0.023321673274040222,
    -0.004143761470913887,
    0.009870065376162529,
    -0.002411988563835621,
    -0.0014445901615545154,
    -0.0132503192871809,
    0.014381698332726955,
    0.011848242953419685,
    0.014936976134777069,
    0.00946054793894291,
    0.01756066456437111,
    0.019809540361166,
    -0.013444666750729084,
    -0.024015769362449646,
    -0.0031529373954981565,
    -0.020878449082374573,
    -0.0008697907906025648,
    -0.016769392415881157,
    0.008849741891026497,
    0.004376284312456846,
    -0.013888888992369175,
    0.02089233137667179,
    0.002377283526584506,
    -0.00407088128849864,
    0.009939474985003471,
    -0.04097951203584671,
    -0.04381142929196358,
    -0.0011070853797718883,
    0.003668304765596986,
    0.015533899888396263,
    0.012667277827858925,
    0.030790161341428757,
    -0.05363984778523445,
    0.009897829033434391,
    0.008037648163735867,
    0.042034536600112915,
    -0.0013118440983816981,
    0.01161919068545103,
    -0.013798655942082405,
    -0.031234383583068848,
    0.010057471692562103,
    -0.017755011096596718,
    -0.025806540623307228,
    -0.05447276309132576,
    -0.0017300377367064357,
    -0.08245877176523209,
    0.009897829033434391,
    0.019420845434069633,
    -0.02733355574309826,
    0.010807096026837826,
    -0.04950302466750145,
    0.0059171803295612335,
    -0.014423344284296036,
    0.006913210265338421,
    -0.0068507413379848,
    -0.017755011096596718,
    0.014617690816521645,
    -0.022863568738102913,
    -0.011466489173471928,
    -0.004258287604898214,
    0.01316702738404274,
    0.039952244609594345,
    0.0038071242161095142,
    0.04858681932091713,
    -0.027999889105558395,
    0.0036023654974997044,
    0.011612249538302422,
    0.03412182629108429,
    0.0016424079658463597,
    -0.015589427202939987,
    0.014825920574367046,
    -0.028902215883135796,
    0.017435725778341293,
    0.00642734207212925,
    -0.036231882870197296,
    0.023391082882881165,
    -0.002333902521058917,
    -0.00017634412506595254,
    0.004879504907876253,
    0.005625659599900246,
    -0.008738686330616474,
    0.015311788767576218,
    0.010404519736766815,
    0.010897329077124596,
    0.009474429301917553,
    -0.03467710688710213,
    -0.017782775685191154,
    0.03373313322663307,
    -0.008648453280329704,
    -0.0022818450815975666,
    -0.009092675521969795,
    0.022558165714144707,
    -0.007982119917869568,
    0.017532899975776672,
    -0.016061414033174515,
    0.031067799776792526,
    0.013819479383528233,
    -0.037397969514131546,
    -0.018587928265333176,
    0.013923593796789646,
    -0.01999000459909439,
    0.037675607949495316,
    0.014312288723886013,
    0.0011461282847449183,
    -0.003413223894312978,
    0.04667110741138458,
    0.033427730202674866,
    0.02171136625111103,
    -0.009793714620172977,
    0.022752512246370316,
    -0.005584013648331165,
    -0.06324615329504013,
    -0.009939474985003471,
    -0.010064411908388138,
    -0.0009092675754800439,
    0.009641013108193874,
    -0.0383419394493103,
    0.013451607897877693,
    0.012514576315879822,
    0.03753678873181343,
    -0.01856016367673874,
    0.02859681285917759,
    -0.01497862208634615,
    -0.015853185206651688,
    0.01964295655488968,
    0.01808817870914936,
    -0.014381698332726955,
    -0.03203953430056572,
    -0.005826947744935751,
    0.014964739792048931,
    0.003751596435904503,
    -0.025403965264558792,
    0.006219112779945135,
    -0.001535690505988896,
    0.006368343718349934,
    -0.0005240435129962862,
    -0.0065279859118163586,
    0.0010914681479334831,
    -0.004414459224790335,
    0.0006784801953472197,
    -0.020975623279809952,
    0.007836359553039074,
    -0.010841801762580872,
    0.041395969688892365,
    0.006902798544615507,
    0.018574045971035957,
    -0.016061414033174515,
    0.010064411908388138,
    -0.009995002299547195,
    -0.015520017594099045,
    0.016422344371676445,
    -0.0258620698004961,
    -0.02298850566148758,
    -0.013278082944452763,
    0.02441834658384323,
    0.0007478899206034839,
    -4.812589395442046e-06,
    -0.007989061065018177,
    0.021503137424588203,
    -0.007364373188465834,
    0.00968959927558899,
    0.00423399405553937,
    0.00127193343359977,
    -0.013236436992883682,
    -0.0056915986351668835,
    -0.0060039423406124115,
    0.004168055020272732,
    0.025834305211901665,
    -0.05336220934987068,
    0.015436725690960884,
    0.012375756166875362,
    0.012903270311653614,
    0.024223998188972473,
    0.015242379158735275,
    -0.012125881388783455,
    -0.006531456485390663,
    0.00159468874335289,
    -0.026278527453541756,
    -0.0053480202332139015,
    -0.014895330183207989,
    0.006708451546728611,
    0.009904770180583,
    -0.01738019846379757,
    -0.011723305098712444,
    0.08356932550668716,
    -0.006177466828376055,
    -0.019240379333496094,
    0.003605836071074009,
    -0.018407462164759636,
    0.014312288723886013,
    -0.0004481266369111836,
    0.0071700261905789375,
    0.01575601100921631,
    -0.019837303087115288,
    -0.014770392328500748,
    -0.012958798557519913,
    -0.00423399405553937,
    -0.034704871475696564,
    -0.011431784369051456,
    0.00822505448013544,
    -0.03784219175577164,
    0.0029429730493575335,
    -0.018074296414852142,
    0.03281692415475845,
    0.021850185468792915,
    -0.005643012002110481,
    0.018948858603835106,
    -0.012577044777572155,
    -0.017519017681479454,
    0.024751512333750725,
    0.015270142816007137,
    0.010050530545413494,
    -0.01682492159307003,
    -0.050807930529117584,
    0.03620412200689316,
    0.015436725690960884,
    -0.028277527540922165,
    -0.009113498963415623,
    -0.0189072135835886,
    -0.0010801890166476369,
    -0.005042617674916983,
    -0.019934477284550667,
    0.019559664651751518,
    0.03184518963098526,
    -0.015631074085831642,
    -0.00599700165912509,
    -0.03692598268389702,
    -0.039036039263010025,
    0.032622575759887695,
    -0.021100560203194618,
    -0.0171025600284338,
    -0.021419845521450043,
    -0.021919595077633858
  ]
}
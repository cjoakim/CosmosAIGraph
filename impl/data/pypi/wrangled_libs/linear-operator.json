{
  "classifiers": [
    "development status :: 2 - pre-alpha",
    "programming language :: python :: 3"
  ],
  "description": "a linear operator implementation, primarily designed for finite-dimensional positive definite operators (i.e. kernel matrices).\n# linearoperator\n\n[![test](https://github.com/cornellius-gp/linear_operator/actions/workflows/run_test_suite.yml/badge.svg)](https://github.com/cornellius-gp/linear_operator/actions/workflows/run_test_suite.yml)\n[![documentation](https://readthedocs.org/projects/linear-operator/badge/?version=latest)](https://linear-operator.readthedocs.io/en/latest/?badge=latest)\n[![license](https://img.shields.io/badge/license-mit-green.svg)](license)\n\n[![python version](https://img.shields.io/badge/python-3.8+-blue.svg)](https://www.python.org/downloads/)\n[![conda](https://img.shields.io/conda/v/gpytorch/linear_operator.svg)](https://anaconda.org/gpytorch/linear_operator)\n[![pypi](https://img.shields.io/pypi/v/linear_operator.svg)](https://pypi.org/project/linear_operator)\n\n\n<!-- docs_intro_start -->\n\nlinearoperator is a pytorch package for abstracting away the linear algebra routines needed for structured matrices (or operators).\n\n**this package is in beta.**\ncurrently, most of the functionality only supports positive semi-definite and triangular matrices.\npackage development todos:\n - [x] support psd operators\n - [x] support triangular operators\n - [ ] interface to specify structure (i.e. symmetric, triangular, psd, etc.)\n - [ ] add algebraic routines for symmetric operators\n - [ ] add algebraic routines for generic square operators\n - [ ] add algebraic routines for generic rectangular operators\n - [ ] add sparse operators\n\n<!-- docs_intro_end -->\n\nto get started, run either\n```sh\npip install linear_operator\n# or\nconda install linear_operator -c gpytorch\n```\nor [see below](#installation) for more detailed instructions.\n\n\n<!-- docs_index_start -->\n\n\n## why linearoperator\nbefore describing what linear operators are and why they make a useful abstraction, it's easiest to see an example.\nlet's say you wanted to compute a matrix solve:\n\n$$\\boldsymbol a^{-1} \\boldsymbol b.$$\n\nif you didn't know anything about the matrix $\\boldsymbol a$, the simplest (and best) way to accomplish this in code is:\n\n```python\n# a = torch.randn(1000, 1000)\n# b = torch.randn(1000)\ntorch.linalg.solve(a, b)  # computes a^{-1} b\n```\n\nwhile this is easy, the `solve` routine is $\\mathcal o(n^3)$, which gets very slow as $n$ grows large.\n\nhowever, let's imagine that we knew that $\\boldsymbol a$ was equal to a low rank matrix plus a diagonal\n(i.e. $\\boldsymbol a = \\boldsymbol c \\boldsymbol c^\\top + \\boldsymbol d$\nfor some skinny matrix $\\boldsymbol c$ and some diagonal matrix $\\boldsymbol d$.)\nthere's now a very efficient $\\boldsymbol o(n)$ routine to compute $\\boldsymbol a^{-1}$ (the [woodbury formula](https://en.wikipedia.org/wiki/woodbury_matrix_identity)).\n**in general**, if we know that $\\boldsymbol a$ has structure,\nwe want to use efficient linear algebra routines - rather than the general routines -\nthat exploit this structure.\n\n\n### without linearoperator\n\nimplementing the efficient solve that exploits $\\boldsymbol a$'s low-rank-plus-diagonal structure would look something like this:\n\n```python\ndef low_rank_plus_diagonal_solve(c, d, b):\n    # a = c c^t + diag(d)\n    # a^{-1} b = d^{-1} b - d^{-1} c (i + c^t d^{-1} c)^{-1} c^t d^{-1} b\n    #   where d = diag(d)\n\n    d_inv_b = b / d\n    d_inv_c = c / d.unsqueeze(-1)\n    eye = torch.eye(c.size(-2))\n    return (\n        d_inv_b - d_inv_c @ torch.cholesky_solve(\n            c.mt @ d_inv_b,\n            torch.linalg.cholesky(eye + c.mt @ d_inv_c, upper=false),\n            upper=false\n        )\n    )\n\n\n# c = torch.randn(1000, 20)\n# d = torch.randn(1000)\n# b = torch.randn(1000)\nlow_rank_plus_diagonal_solve(c, d, b)  # computes a^{-1} b in o(n) time, instead of o(n^3)\n```\n\nwhile this is efficient code, it's not ideal for a number of reasons:\n1. it's a lot more complicated than `torch.linalg.solve(a, b)`.\n2. there's no object that represents $\\boldsymbol a$.\n   to perform any math with $\\boldsymbol a$, we have to pass around the matrix `c` and the vector `d`.\n\n\n### with linearoperator\n\nthe linearoperator package offers the best of both worlds:\n\n```python\nfrom linear_operator.operators import diaglinearoperator, lowrankrootlinearoperator\n# c = torch.randn(1000, 20)\n# d = torch.randn(1000)\n# b = torch.randn(1000)\na = lowrankrootlinearoperator(c) + diaglinearoperator(d)  # represents c c^t + diag(d)\n```\n\nit provides an interface that lets us treat $\\boldsymbol a$ as if it were a generic tensor,\nusing the standard pytorch api:\n\n```python\ntorch.linalg.solve(a, b)  # computes a^{-1} b efficiently!\n```\n\nunder-the-hood, the `linearoperator` object keeps track of the algebraic structure of $\\boldsymbol a$ (low rank plus diagonal)\nand determines the most efficient routine to use (the woodbury formula).\nthis way, we can get a efficient $\\mathcal o(n)$ solve while abstracting away all of the details.\n\ncrucially, $\\boldsymbol a$ is never explicitly instantiated as a matrix, which makes it possible to scale\nto very large operators without running out of memory:\n\n```python\n# c = torch.randn(10000000, 20)\n# d = torch.randn(10000000)\n# b = torch.randn(10000000)\na = lowrankrootlinearoperator(c) + diaglinearoperator(d)  # represents a 10m x 10m matrix!\ntorch.linalg.solve(a, b)  # computes a^{-1} b efficiently!\n```\n\n\n<!-- docs_index_end -->\n<!-- docs_about_start -->\n\n\n## what is a linear operator?\na linear operator is a generalization of a matrix.\nit is a linear function that is defined in by its application to a vector.\nthe most common linear operators are (potentially structured) matrices,\nwhere the function applying them to a vector are (potentially efficient)\nmatrix-vector multiplication routines.\n\nin code, a `linearoperator` is a class that\n1. specifies the tensor(s) needed to define the linearoperator,\n1. specifies a `_matmul` function (how the linearoperator is applied to a vector),\n1. specifies a `_size` function (how big is the linearoperator if it is represented as a matrix, or batch of matrices), and\n1. specifies a `_transpose_nonbatch` function (the adjoint of the linearoperator).\n1. (optionally) defines other functions (e.g. `logdet`, `eigh`, etc.) to accelerate computations for which efficient sturcture-exploiting routines exist.\n\nfor example:\n\n```python\nclass diaglinearoperator(linear_operator.linearoperator):\n    r\"\"\"\n    a linearoperator representing a diagonal matrix.\n    \"\"\"\n    def __init__(self, diag):\n        # diag: the vector that defines the diagonal of the matrix\n        self.diag = diag\n\n    def _matmul(self, v):\n        return self.diag.unsqueeze(-1) * v\n\n    def _size(self):\n        return torch.size([*self.diag.shape, self.diag.size(-1)])\n\n    def _transpose_nonbatch(self):\n        return self  # diagonal matrices are symmetric\n\n    # this function is optional, but it will accelerate computation\n    def logdet(self):\n        return self.diag.log().sum(dim=-1)\n# ...\n\nd = diaglinearoperator(torch.tensor([1., 2., 3.])\n# represents the matrix\n#   [[1., 0., 0.],\n#    [0., 2., 0.],\n#    [0., 0., 3.]]\ntorch.matmul(d, torch.tensor([4., 5., 6.])\n# returns [4., 10., 18.]\n```\n\nwhile `_matmul`, `_size`, and `_transpose_nonbatch` might seem like a limited set of functions,\nit turns out that most functions on the `torch` and `torch.linalg` namespaces can be efficiently implemented\nusing only these three primitative functions.\n\nmoreover, because `_matmul` is a linear function, it is very easy to compose linear operators in various ways.\nfor example: adding two linear operators (`sumlinearoperator`) just requires adding the output of their `_matmul` functions.\nthis makes it possible to define very complex compositional structures that still yield efficient linear algebraic routines.\n\nfinally, `linearoperator` objects can be composed with one another, yielding new `linearoperator` objects and automatically keeping track of algebraic structure after each computation.\nas a result, users never need to reason about what efficient linear algebra routines to use  (so long as the input elements defined by the user encode known input structure).\n<!-- docs_about_end -->\nsee the [using linearoperator objects](#using-linearoperator-objects) section for more details.\n\n\n<!-- docs_usecases_start -->\n\n\n## use cases\n\nthere are several use cases for the linearoperator package.\nhere we highlight two general themes:\n\n### modular code for structured matrices\n\nfor example, let's say that you have a generative model that involves\nsampling from a high-dimensional multivariate gaussian.\nthis sampling operation will require storing and manipulating a large covariance matrix,\nso to speed things up you might want to experiment with different structured\napproximations of that covariance matrix.\nthis is easy with the linearoperator package.\n\n```python\nfrom gpytorch.distributions import multivariatenormal\n\n# variance = torch.randn(10000)\ncov = diaglinearoperator(variance)\n# or\n# cov = lowrankrootlinearoperator(...) + diaglinearoperator(...)\n# or\n# cov = kroneckerproductlinearoperator(...)\n# or\n# cov = toeplitzlinearoperator(...)\n# or\n# ...\n\nmvn = multivariatenormal(torch.zeros(cov.size(-1), cov) # 10000-dimensional mvn\nmvn.rsample()  # returns a 10000-dimensional vector\n```\n\n### efficient routines for complex operators\n\nmany of the efficient linear algebra routines in linearoperator are iterative algorithms\nbased on matrix-vector multiplication.\nsince matrix-vector multiplication obeys many nice compositional properties\nit is possible to obtain efficient routines for extremely complex compositional lienaroperators:\n\n```python\nfrom linear_operator.operators import kroneckerproductlinearoperator, rootlinearoperator, toeplitzlinearoperator\n\n# mat1 = 200 x 200 psd matrix\n# mat2 = 100 x 100 psd matrix\n# vec3 = 20000 vector\n\na = kroneckerproductlinearoperator(mat1, mat2) + rootlinearoperator(toeplitzlinearoperator(vec3))\n# represents a 20000 x 20000 matrix\n\ntorch.linalg.solve(a, torch.randn(20000))  # sub o(n^3) routine!\n```\n\n\n<!-- docs_usecases_end -->\n<!-- docs_using_start -->\n\n\n## using linearoperator objects\n\nlinearoperator objects share (mostly) the same api as `torch.tensor` objects.\nunder the hood, these objects use `__torch_function__` to dispatch all efficient linear algebra operations\nto the `torch` and `torch.linalg` namespaces.\nthis includes\n- `torch.add`\n- `torch.cat`\n- `torch.clone`\n- `torch.diagonal`\n- `torch.dim`\n- `torch.div`\n- `torch.expand`\n- `torch.logdet`\n- `torch.matmul`\n- `torch.numel`\n- `torch.permute`\n- `torch.prod`\n- `torch.squeeze`\n- `torch.sub`\n- `torch.sum`\n- `torch.transpose`\n- `torch.unsqueeze`\n- `torch.linalg.cholesky`\n- `torch.linalg.eigh`\n- `torch.linalg.eigvalsh`\n- `torch.linalg.solve`\n- `torch.linalg.svd`\n\neach of these functions will either return a `torch.tensor`, or a new `linearoperator` object,\ndepending on the function.\nfor example:\n\n```python\n# a = rootlinearoperator(...)\n# b = toeplitzlinearoperator(...)\n# d = vec\n\nc = torch.matmul(a, b)  # a new lienearoperator representing the product of a and b\ntorch.linalg.solve(c, d)  # a torch.tensor\n```\n\nfor more examples, see the [examples folder](https://github.com/cornellius-gp/linear_operator/blob/main/examples/).\n\n### batch support and broadcasting\n\n`linearoperator` objects operate naturally in batch mode.\nfor example, to represent a batch of 3 `100 x 100` diagonal matrices:\n\n```python\n# d = torch.randn(3, 100)\nd = diaglinearoperator(d)  # reprents an operator of size 3 x 100 x 100\n```\n\nthese objects fully support broadcasted operations:\n\n```python\nd @ torch.randn(100, 2)  # returns a tensor of size 3 x 100 x 2\n\nd2 = diaglinearoperator(torch.randn([2, 1, 100]))  # represents an operator of size 2 x 1 x 100 x 100\nd2 + d  # represents an operator of size 2 x 3 x 100 x 100\n```\n\n### indexing\n\n`linearoperator` objects can be indexed in ways similar to torch tensors. this includes:\n- integer indexing (get a row, column, or batch)\n- slice indexing (get a subset of rows, columns, or batches)\n- longtensor indexing (get a set of individual entries by index)\n- ellipses (support indexing operations with arbitrary batch dimensions)\n\n```python\nd = diaglinearoperator(torch.randn(2, 3, 100))  # represents an operator of size 2 x 3 x 100 x 100\nd[-1]  # returns a 3 x 100 x 100 operator\nd[..., :10, -5:]  # returns a 2 x 3 x 10 x 5 operator\nd[..., torch.longtensor([0, 1, 2, 3]), torch.longtensor([0, 1, 2, 3])]  # returns a 2 x 3 x 4 tensor\n```\n\n### composition and decoration\nlinearoperators can be composed with one another in various ways.\nthis includes\n- addition (`linearopa + linearopb`)\n- matrix multiplication (`linearopa @ linearopb`)\n- concatenation (`torch.cat([linearopa, linearopb], dim=-2)`)\n- kronecker product (`torch.kron(linearopa, linearopb)`)\n\nin addition, there are many ways to \"decorate\" linearoperator objects.\nthis includes:\n- elementwise multiplying by constants (`torch.mul(2., linearopa)`)\n- summing over batches (`torch.sum(linearopa, dim=-3)`)\n- elementwise multiplying over batches (`torch.prod(linearopa, dim=-3)`)\n\nsee the documentation for a [full list of supported composition and decoration operations](https://linear-operator.readthedocs.io/en/latest/composition_decoration_operators.html).\n\n\n<!-- docs_using_end -->\n<!-- docs_install_start -->\n\n\n## installation\n\nlinearoperator requires python >= 3.8.\n\n### standard installation (most recent stable version)\nwe recommend installing via `pip` or anaconda:\n\n```sh\npip install linear_operator\n# or\nconda install linear_operator -c gpytorch\n```\n\nthe installation requires the following packages:\n- pytorch >= 1.11\n- scipy\n\nyou can customize your pytorch installation (i.e. cuda version, cpu only option)\nby following the [pytorch installation instructions](https://pytorch.org/get-started/locally/).\n\n### installing from the `main` branch (latest unsable version)\nto install what is currently on the `main` branch (potentially buggy and unstable):\n\n```sh\npip install --upgrade git+https://github.com/cornellius-gp/linear_operator.git\n```\n\n\n<!-- docs_install_end -->\n\n\n### development installation\nif you are contributing a pull request, it is best to perform a manual installation:\n\n```sh\ngit clone https://github.com/cornellius-gp/linear_operator.git\ncd linear_operator\npip install -e \".[dev,docs,test]\"\n```\n\n\n## contributing\n\nsee the contributing guidelines [contributing.md](https://github.com/cornellius-gp/linear_operator/blob/main/contributing.md)\nfor information on submitting issues and pull requests.\n\n\n## license\n\nlinearoperator is [mit licensed](https://github.com/cornellius-gp/linear_operator/blob/main/license).\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "linear-operator",
  "package_url": "https://pypi.org/project/linear-operator/",
  "project_url": "https://pypi.org/project/linear-operator/",
  "project_urls": {
    "Documentation": "https://linear_operator.readthedocs.io",
    "Source": "https://github.com/cornellius-gp/linear_operator/"
  },
  "release_url": "https://pypi.org/project/linear-operator/0.5.2/",
  "requires_dist": [
    "torch >=1.11",
    "scipy",
    "jaxtyping >=0.2.9",
    "typeguard ~=2.13.3",
    "pre-commit ; extra == 'dev'",
    "setuptools-scm ; extra == 'dev'",
    "ufmt ; extra == 'dev'",
    "twine ; extra == 'dev'",
    "myst-parser ; extra == 'docs'",
    "setuptools-scm ; extra == 'docs'",
    "sphinx ; extra == 'docs'",
    "six ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "sphinx-autodoc-typehints ; extra == 'docs'",
    "uncompyle6 ; extra == 'docs'",
    "flake8 ==5.0.4 ; extra == 'test'",
    "flake8-print ==5.0.0 ; extra == 'test'",
    "pytest ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "a linear operator implementation, primarily designed for finite-dimensional positive definite operators (i.e. kernel matrices).",
  "version": "0.5.2",
  "releases": [],
  "developers": [
    "geoff_pleiss",
    "gpleiss@gmail.com"
  ],
  "kwds": "linearoperator linearoperators linear_operator operators composition_decoration_operators",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_linear_operator",
  "homepage": "",
  "release_count": 8,
  "dependency_ids": [
    "pypi_flake8",
    "pypi_flake8_print",
    "pypi_jaxtyping",
    "pypi_myst_parser",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_scipy",
    "pypi_setuptools_scm",
    "pypi_six",
    "pypi_sphinx",
    "pypi_sphinx_autodoc_typehints",
    "pypi_sphinx_rtd_theme",
    "pypi_torch",
    "pypi_twine",
    "pypi_typeguard",
    "pypi_ufmt",
    "pypi_uncompyle6"
  ],
  "documentation_summary": "The HTML text describes the \"linear-operator\" package version 0.5.2, released on August 25, 2023, available on PyPI for Python versions 3.8 and above. It's a PyTorch package designed for handling linear algebra routines with structured matrices, particularly positive semi-definite and triangular matrices. The package is in beta and aims to abstract complex linear algebra operations, making them more efficient by exploiting the structure of matrices. It includes features like support for PSD and triangular operators, and interfaces for specifying matrix structure. The package is licensed under MIT, developed by Geoff Pleiss and other maintainers, and is classified as Pre-Alpha. Installation can be done via pip or conda, and it requires PyTorch >= 1.11 and Scipy. The document also highlights the package's utility in making code modular for structured matrices and providing efficient routines for complex operators, with examples provided for better understanding.",
  "embedding": [
    -0.009959803894162178,
    0.024778740480542183,
    -0.009590395726263523,
    -0.017120633274316788,
    -0.039952877908945084,
    0.024309877306222916,
    -0.004621149972081184,
    -0.015614585019648075,
    -0.032280560582876205,
    -0.015714041888713837,
    0.012971898540854454,
    0.01301452238112688,
    -0.012424890883266926,
    0.03222373127937317,
    -0.013284473679959774,
    -0.01293637789785862,
    0.014534777961671352,
    -0.01277298666536808,
    0.015770873054862022,
    0.008219324052333832,
    0.018370935693383217,
    -0.0027012948412448168,
    -0.02421042136847973,
    -0.013220538385212421,
    4.279048152966425e-05,
    0.035122159868478775,
    -0.0014474393101409078,
    -0.025943797081708908,
    0.0015238072955980897,
    0.018740342929959297,
    0.024451958015561104,
    -0.009114428423345089,
    -0.030518770217895508,
    -0.013177914544939995,
    -0.007395260501652956,
    -0.01683647185564041,
    0.027449844405055046,
    -0.008368507958948612,
    0.010989882983267307,
    0.007111100945621729,
    0.047227371484041214,
    0.018626680597662926,
    0.013980666175484657,
    0.00023842789232730865,
    0.0061556133441627026,
    0.009341755881905556,
    -0.010933050885796547,
    -0.053876712918281555,
    0.006365181412547827,
    0.0044684140011668205,
    -0.002136527094990015,
    0.05774128809571266,
    -0.0013213434722274542,
    -0.009405692107975483,
    0.016708601266145706,
    0.00926361232995987,
    0.007764668669551611,
    0.025204980745911598,
    -0.018115192651748657,
    -0.027478259056806564,
    -0.015742456540465355,
    -0.02538968436419964,
    -0.034894831478595734,
    -0.012723258696496487,
    -0.011025402694940567,
    0.003598174313083291,
    -0.015699833631515503,
    0.03728177398443222,
    -0.00646818894892931,
    -0.002189807128161192,
    0.043760620057582855,
    0.024267252534627914,
    0.0033228944521397352,
    -0.010229755192995071,
    0.01852722465991974,
    -0.03605988621711731,
    -0.009917180053889751,
    -0.0009421675931662321,
    -0.005256957840174437,
    -0.016808057203888893,
    0.00987455528229475,
    -0.02277541346848011,
    0.005438109394162893,
    0.020345846191048622,
    0.012851130217313766,
    0.025531765073537827,
    -0.01434296928346157,
    0.01764632761478424,
    -0.051177192479372025,
    -0.016665976494550705,
    0.011799738742411137,
    0.0027279348578304052,
    0.012424890883266926,
    0.015785081312060356,
    -0.0013399914605543017,
    0.0234431903809309,
    -0.008261947892606258,
    0.02591538056731224,
    -0.01535884104669094,
    0.009199676103889942,
    0.017660535871982574,
    0.01292217057198286,
    -0.010386043228209019,
    -0.020459510385990143,
    -0.03336036950349808,
    -0.029922034591436386,
    -0.013781754299998283,
    0.01188498642295599,
    0.03787850961089134,
    0.03273521736264229,
    -0.02598641999065876,
    0.049074411392211914,
    0.008063036017119884,
    -0.03432651236653328,
    0.011579514481127262,
    -0.008737916126847267,
    0.028558067977428436,
    -0.008539004251360893,
    -0.009100220166146755,
    -0.010876218788325787,
    0.030888177454471588,
    0.010393147356808186,
    0.035122159868478775,
    -0.0027261588256806135,
    0.008865787647664547,
    -0.010933050885796547,
    0.000828947639092803,
    -0.0046140458434820175,
    -0.020686838775873184,
    -0.027037812396883965,
    -0.0020104311406612396,
    0.018541431054472923,
    0.009036283940076828,
    0.0023904950357973576,
    -0.011224314570426941,
    -0.00950514804571867,
    -0.006187581457197666,
    -0.014207993634045124,
    -0.0014057033695280552,
    -0.047454699873924255,
    0.0028966546524316072,
    0.019294455647468567,
    -0.03273521736264229,
    0.0017591272480785847,
    -0.008034620434045792,
    0.03827633336186409,
    -0.0032287666108459234,
    -0.002040622988715768,
    -0.017845239490270615,
    -0.02166718989610672,
    0.01209100242704153,
    -0.0031595025211572647,
    -0.004965693689882755,
    0.010258171707391739,
    0.008475068025290966,
    -0.004685085732489824,
    0.0032465264666825533,
    0.014293241314589977,
    -0.006802076939493418,
    -0.0004994997871108353,
    0.02557438798248768,
    0.01852722465991974,
    -0.031655408442020416,
    0.004873341880738735,
    -0.002410030923783779,
    0.02864331565797329,
    0.009981115348637104,
    0.011778426356613636,
    -0.019976438954472542,
    0.0015460073482245207,
    0.02115570195019245,
    0.014563193544745445,
    -0.040407534688711166,
    0.005960253532975912,
    0.0002783878881018609,
    -0.003255406627431512,
    0.02129778265953064,
    -0.007991996593773365,
    -0.02365630865097046,
    0.0170211773365736,
    0.040407534688711166,
    0.003489838447421789,
    -0.0019216311629861593,
    0.03509374335408211,
    -0.009732475504279137,
    0.002275055041536689,
    -0.0013222313718870282,
    0.029581042006611824,
    -0.0011952475178986788,
    -0.0004835157888010144,
    0.016225527971982956,
    0.019649654626846313,
    0.00989586766809225,
    -0.02266174927353859,
    -0.5574080348014832,
    -0.019024504348635674,
    -0.015429881401360035,
    -0.04879024997353554,
    0.010805179364979267,
    0.012368058785796165,
    0.007352636661380529,
    -0.0008351636352017522,
    -0.03594622388482094,
    0.026441076770424843,
    -0.025276020169258118,
    -0.0001167719456134364,
    0.001058495487086475,
    -0.01085490733385086,
    -0.00530668580904603,
    -0.03989604488015175,
    0.008929723873734474,
    -0.007849916815757751,
    -0.013625466264784336,
    0.004802301991730928,
    0.008098556660115719,
    0.02683890052139759,
    -0.04665905237197876,
    0.011451642960309982,
    0.01852722465991974,
    0.022718582302331924,
    0.03620196878910065,
    0.0003134638536721468,
    0.04589182138442993,
    0.010528123006224632,
    0.01683647185564041,
    0.027705587446689606,
    -0.0036159344017505646,
    0.00659961299970746,
    0.050438378006219864,
    -0.010116091929376125,
    -0.02270437404513359,
    0.029296882450580597,
    0.03159857913851738,
    0.030802929773926735,
    -0.0032465264666825533,
    -0.03972554951906204,
    0.002632030751556158,
    0.005622813478112221,
    0.014591609127819538,
    -0.002250191057100892,
    0.010378939099609852,
    0.010712827555835247,
    0.013646777719259262,
    -0.01672280766069889,
    -0.001558439340442419,
    0.019763318821787834,
    -0.0008222876349464059,
    -0.027961332350969315,
    0.01783103123307228,
    -0.025645429268479347,
    0.0039036462549120188,
    -0.030547186732292175,
    0.015841912478208542,
    -0.010087675414979458,
    0.0021631671115756035,
    0.010009531863033772,
    -0.011593722738325596,
    -0.0001476299366913736,
    -0.020061686635017395,
    -0.014307449571788311,
    -0.011991546489298344,
    -0.013930938206613064,
    -0.018811384215950966,
    0.009242299944162369,
    0.046346474438905716,
    0.01046418771147728,
    0.03776484727859497,
    -0.02402571775019169,
    0.0321953147649765,
    0.037480685859918594,
    0.03000728227198124,
    0.021169910207390785,
    0.01623973622918129,
    0.02790449932217598,
    0.03515057638287544,
    -0.005260509438812733,
    -0.003551998408511281,
    -0.012055482715368271,
    0.053876712918281555,
    0.03230897709727287,
    -0.0020903509575873613,
    0.016992760822176933,
    -0.010265275835990906,
    -0.01098277885466814,
    0.01371071394532919,
    0.030831346288323402,
    -0.014257721602916718,
    -0.04245348647236824,
    0.003864574246108532,
    0.016808057203888893,
    -0.01107513066381216,
    0.007100444752722979,
    -0.00028726787422783673,
    -0.021127287298440933,
    -0.005015421658754349,
    -0.010400251485407352,
    -0.007004540879279375,
    0.024977652356028557,
    -0.005391933489590883,
    0.018910840153694153,
    -0.020402679219841957,
    0.01623973622918129,
    -0.006684861145913601,
    -0.017220089212059975,
    -0.01299320999532938,
    -0.030888177454471588,
    -0.008986555971205235,
    -0.009178363718092442,
    0.04393111541867256,
    -0.03384344279766083,
    0.016893304884433746,
    0.020985206589102745,
    -0.02446616441011429,
    -0.018655095249414444,
    -0.0056476774625480175,
    -0.008716603741049767,
    0.024153590202331543,
    -0.0010132075985893607,
    0.026412660256028175,
    0.003892990294843912,
    0.01775999180972576,
    -0.00983903557062149,
    -0.04293655604124069,
    -0.013518906198441982,
    -0.003999550361186266,
    -0.016765432432293892,
    0.007764668669551611,
    -7.858796743676066e-05,
    0.028728563338518143,
    0.003871678374707699,
    -0.0007876556483097374,
    0.015529337339103222,
    -0.008645564317703247,
    -0.006706173066049814,
    -0.010251067578792572,
    -0.012858234345912933,
    0.010506811551749706,
    -0.025886964052915573,
    -0.02989361807703972,
    -0.04853450506925583,
    -0.013774650171399117,
    0.029154803603887558,
    0.021610358729958534,
    0.012446202337741852,
    0.0008031956385821104,
    0.0031079985201358795,
    -0.02055896632373333,
    0.012588282115757465,
    0.001863023149780929,
    -0.010208443738520145,
    -0.00944831594824791,
    -0.021084662526845932,
    -0.025901172310113907,
    -0.019535990431904793,
    0.01197733823210001,
    0.011785530485212803,
    -0.03185432031750679,
    -0.007686524651944637,
    -0.04020862281322479,
    -0.02469349279999733,
    -0.008347196504473686,
    0.02300274185836315,
    -0.02381259761750698,
    -0.0394129753112793,
    -0.018740342929959297,
    -0.021823478862643242,
    0.0036834224592894316,
    0.003612382337450981,
    0.0025698707904666662,
    -0.014719481579959393,
    0.01481893751770258,
    0.019720695912837982,
    -0.008808956481516361,
    -0.011231418699026108,
    0.015543544664978981,
    0.011082234792411327,
    -0.05404720827937126,
    -0.005082909949123859,
    0.01783103123307228,
    0.023457396775484085,
    -0.00533510185778141,
    0.03023461066186428,
    0.0170211773365736,
    -0.0085105886682868,
    -0.002250191057100892,
    0.03111550584435463,
    -0.02938213013112545,
    0.018186232075095177,
    -0.006759453099220991,
    0.010222651064395905,
    0.018470391631126404,
    0.0025503349024802446,
    -0.01764632761478424,
    0.025276020169258118,
    0.012154938653111458,
    0.005740029271692038,
    0.008759228512644768,
    -0.019578615203499794,
    0.01376754604279995,
    -0.02480715699493885,
    0.010052155703306198,
    -0.02303115837275982,
    0.02938213013112545,
    0.005001213867217302,
    0.009320443496108055,
    -0.012382266111671925,
    -0.032166898250579834,
    -0.0280181635171175,
    0.011046715080738068,
    0.05075095221400261,
    -0.015500920824706554,
    0.02099941484630108,
    0.0012467514025047421,
    -0.012559866532683372,
    0.002866462804377079,
    0.024167796596884727,
    0.02399730123579502,
    0.00941279623657465,
    -0.00948383565992117,
    0.008965243585407734,
    0.011139066889882088,
    0.0006580076878890395,
    0.021724022924900055,
    -0.03100184164941311,
    -0.026071667671203613,
    0.02938213013112545,
    0.006549885030835867,
    0.0029641427099704742,
    -0.014691065065562725,
    0.005242749582976103,
    0.03884465619921684,
    -0.01831410452723503,
    0.03444017842411995,
    -0.040435951203107834,
    -0.004326334223151207,
    0.03378660976886749,
    0.001224551466293633,
    -0.019479159265756607,
    -0.006148509215563536,
    -0.01605503261089325,
    0.008475068025290966,
    -0.004035070072859526,
    -0.009810619987547398,
    0.01385989785194397,
    0.006191133055835962,
    0.012154938653111458,
    -0.016381816938519478,
    0.0006180477212183177,
    0.018186232075095177,
    -0.0015726472483947873,
    0.0016623352421447635,
    0.03267838433384895,
    0.034383345395326614,
    0.0058394852094352245,
    0.0033122384920716286,
    -0.007331324741244316,
    0.022647542878985405,
    -0.013817274011671543,
    0.01660914532840252,
    -0.002767006866633892,
    0.013795961625874043,
    -0.0197917353361845,
    -0.011586618609726429,
    -0.002207566983997822,
    -0.019166583195328712,
    -0.024977652356028557,
    0.00133821542840451,
    -0.028188658878207207,
    0.025602804496884346,
    -0.006674204953014851,
    -0.0028966546524316072,
    0.05075095221400261,
    -0.00014984993322286755,
    0.013462074100971222,
    -0.020360054448246956,
    -0.053024232387542725,
    0.018214648589491844,
    0.032763633877038956,
    0.015600376762449741,
    -0.0085105886682868,
    -0.02975153923034668,
    0.008844476193189621,
    0.011359291151165962,
    -0.018797175958752632,
    0.021510902792215347,
    0.010272379033267498,
    -0.0006073917029425502,
    0.018669303506612778,
    0.002624926855787635,
    0.005217885598540306,
    0.040038127452135086,
    -0.01107513066381216,
    -0.020246390253305435,
    -0.006049053277820349,
    0.003825502237305045,
    0.0006895316764712334,
    -0.008361403830349445,
    0.01970648765563965,
    0.04441418871283531,
    -0.0011952475178986788,
    -0.008020412176847458,
    -0.0126238027587533,
    0.009348860010504723,
    -0.01434296928346157,
    0.012552762404084206,
    -0.006794972810894251,
    -0.024721909314393997,
    -0.02328690141439438,
    0.027250932529568672,
    -0.029154803603887558,
    0.011764219030737877,
    0.0031328625045716763,
    0.002591182943433523,
    0.013945145532488823,
    0.0008280596230179071,
    0.002926846733316779,
    0.00273681478574872,
    0.006333213299512863,
    0.014428217895328999,
    0.042766060680150986,
    -0.029438963159918785,
    0.018626680597662926,
    -0.043135467916727066,
    0.009704059921205044,
    -0.013454969972372055,
    -0.02136882208287716,
    0.012019963003695011,
    0.025588596239686012,
    -0.004511037841439247,
    5.622147364192642e-05,
    0.004706398118287325,
    0.005224989727139473,
    0.01727692037820816,
    0.02889905869960785,
    0.0028096307069063187,
    0.01524517685174942,
    0.01635340042412281,
    0.023528438061475754,
    0.016438648104667664,
    0.014421113766729832,
    0.012964794412255287,
    -0.004511037841439247,
    0.017220089212059975,
    -0.02203659899532795,
    0.017546871677041054,
    0.017291128635406494,
    -0.006184029392898083,
    -0.01778840832412243,
    -0.02455141395330429,
    0.008702396415174007,
    0.02092837542295456,
    0.01587032899260521,
    -0.029723122715950012,
    0.025901172310113907,
    0.02004747837781906,
    0.019535990431904793,
    -0.006883773021399975,
    0.003445438574999571,
    0.005058045964688063,
    0.03620196878910065,
    0.002965918742120266,
    -0.00045354579924605787,
    0.000623819709289819,
    -0.026583155617117882,
    -0.011366395279765129,
    0.010009531863033772,
    0.00322521454654634,
    0.05094986408948898,
    0.018996087834239006,
    -0.003633694490417838,
    -0.013028730638325214,
    -0.011742906644940376,
    0.012801402248442173,
    -0.0028540308121591806,
    0.009185467846691608,
    -0.02085733413696289,
    -0.01568562537431717,
    -0.016637559980154037,
    -0.020175350829958916,
    -0.04736945033073425,
    0.017475832253694534,
    -0.0174616239964962,
    0.016481272876262665,
    -0.004809405654668808,
    -0.04555082693696022,
    0.012048378586769104,
    -0.011487162671983242,
    -0.00887999590486288,
    -0.0021418549586087465,
    -0.03358769789338112,
    -0.018697720021009445,
    -0.013810169883072376,
    0.03171224147081375,
    0.009981115348637104,
    0.007963580079376698,
    0.012439098209142685,
    0.016111865639686584,
    0.0013497594045475125,
    0.002884222660213709,
    -0.05563850328326225,
    0.007565756794065237,
    -0.04074852541089058,
    0.01889663189649582,
    0.01653810404241085,
    0.038560494780540466,
    -0.00026040588272735476,
    -0.011018299497663975,
    0.02779083512723446,
    0.00980351585894823,
    -0.0035324625205248594,
    -0.021979765966534615,
    -0.002031743060797453,
    -0.011394810862839222,
    -0.0020654869731515646,
    -0.0014323433861136436,
    0.030092529952526093,
    0.021581942215561867,
    -0.014293241314589977,
    -0.02376997284591198,
    -0.017362168058753014,
    -0.002731486689299345,
    -0.01382437814027071,
    -0.014399801380932331,
    0.0007525796536356211,
    0.00269419071264565,
    -0.00211343914270401,
    -0.031655408442020416,
    0.005562429316341877,
    0.017546871677041054,
    -0.008404028601944447,
    -0.014563193544745445,
    0.010620475746691227,
    -0.006503709126263857,
    0.0025876308791339397,
    0.005605053622275591,
    0.006969020701944828,
    -0.0023141270503401756,
    -0.013888313435018063,
    -0.01070572342723608,
    -0.002791870851069689,
    0.014406905509531498,
    0.008943932130932808,
    0.014776313677430153,
    0.023897845298051834,
    0.01623973622918129,
    -0.003679870394989848,
    -0.023670516908168793,
    0.031399667263031006,
    0.014215097762644291,
    -0.005917629227042198,
    -0.01575666479766369,
    -0.015373049303889275,
    -0.022874869406223297,
    0.007814396172761917,
    -0.03225214406847954,
    -0.005494941491633654,
    0.0033974864054471254,
    -0.020459510385990143,
    -0.016751224175095558,
    0.013689401559531689,
    -0.007352636661380529,
    -0.008169596083462238,
    0.020843125879764557,
    -0.022278133779764175,
    -0.02794712409377098,
    0.013795961625874043,
    -0.023059573024511337,
    0.030575603246688843,
    0.01864088699221611,
    0.01716325618326664,
    -0.0085105886682868,
    -0.0257306769490242,
    -0.002365631051361561,
    -0.006706173066049814,
    -0.01827147975564003,
    -0.00767942052334547,
    0.010933050885796547,
    0.03310462459921837,
    0.0377364307641983,
    -0.008141180500388145,
    0.011252731084823608,
    0.036486126482486725,
    -0.0013399914605543017,
    0.011060923337936401,
    -0.025489140301942825,
    -0.002287487033754587,
    -0.0026959667447954416,
    -0.012140730395913124,
    0.02536126784980297,
    0.002495278837159276,
    0.015032057650387287,
    -0.05163184925913811,
    -0.010172923095524311,
    0.00539903761819005,
    -0.0128653384745121,
    0.009675643406808376,
    0.010457083582878113,
    -0.012424890883266926,
    -0.010251067578792572,
    -0.024721909314393997,
    -0.016253944486379623,
    -0.01908133551478386,
    -0.03793534263968468,
    0.01727692037820816,
    0.002092126989737153,
    0.007423676550388336,
    0.04089060425758362,
    0.021695606410503387,
    -0.017617912963032722,
    0.010350523516535759,
    0.03296254575252533,
    0.012282810173928738,
    0.01352601032704115,
    -0.0029232946690171957,
    -0.012204666621983051,
    -0.02989361807703972,
    -0.008119868114590645,
    0.011615035124123096,
    0.007160828914493322,
    0.027776626870036125,
    -0.007079132832586765,
    -0.005946045275777578,
    -0.017191672697663307,
    0.007359740789979696,
    -0.008496380411088467,
    -0.029552627354860306,
    0.015742456540465355,
    -0.022548086941242218,
    -0.0021631671115756035,
    -0.018612472340464592,
    -0.04023703932762146,
    -0.030177779495716095,
    0.0032198866829276085,
    0.013561530038714409,
    -0.011558203026652336,
    0.0036407983861863613,
    -0.009036283940076828,
    -0.011920507065951824,
    0.0037082864437252283,
    -0.003591070417314768,
    0.0432775504887104,
    0.0084892762824893,
    0.031143922358751297,
    0.0002905978763010353,
    0.0019145271508023143,
    0.02041688747704029,
    -0.015586169436573982,
    0.0016028393292799592,
    -0.0029250707011669874,
    -0.006482397206127644,
    -0.0036834224592894316,
    -0.052029673010110855,
    -0.027307763695716858,
    0.020061686635017395,
    -0.016296569257974625,
    -0.02702360413968563,
    -0.0027492467779666185,
    0.025233397260308266,
    0.021326199173927307,
    0.031087089329957962,
    -2.7597363441600464e-05,
    0.01275167427957058,
    -0.021240951493382454,
    0.016751224175095558,
    -0.0022697269450873137,
    0.008553212508559227,
    -0.017688952386379242,
    -0.010144507512450218,
    -0.00323942257091403,
    0.009441211819648743,
    0.0279755387455225,
    0.009057596325874329,
    0.019905399531126022,
    -0.028430195525288582,
    -0.01893925480544567,
    -0.026384243741631508,
    -0.026185331866145134,
    0.019763318821787834,
    0.01397356204688549,
    0.030206194147467613,
    -0.008759228512644768,
    -0.0073881568387150764,
    0.034610673785209656,
    0.0149326017126441,
    -0.01092594675719738,
    -0.03591780737042427,
    -0.03435492888092995,
    0.040691692382097244,
    -0.009014971554279327,
    -0.015699833631515503,
    0.0024277910124510527,
    -0.009377275593578815,
    0.009945595636963844,
    -0.015032057650387287,
    -0.03415601700544357,
    0.003892990294843912,
    0.00935596413910389,
    -0.001902095158584416,
    0.007224764674901962,
    -0.0007579076918773353,
    -0.032394226640462875,
    0.02196555770933628,
    -0.020544758066534996,
    0.005509149748831987,
    -0.014215097762644291,
    -0.022988533601164818,
    0.008063036017119884,
    -0.03188273683190346,
    -0.023159028962254524,
    -0.04307863861322403,
    -0.01612607203423977,
    0.012382266111671925,
    0.014513465575873852,
    -0.017447415739297867,
    0.002996110590174794,
    0.038588911294937134,
    0.001863023149780929,
    0.018839798867702484,
    0.01070572342723608,
    0.009910075925290585,
    -0.030263027176260948,
    0.011842362582683563,
    -0.015401464886963367,
    -0.002426014980301261,
    0.009867452085018158,
    -0.016140280291438103,
    -0.008041724562644958,
    -0.010677306912839413,
    -0.04259556531906128,
    0.013945145532488823,
    0.004635357763618231,
    -0.013064250349998474,
    -0.02506290003657341,
    0.033047791570425034,
    0.024537205696105957,
    -0.009157052263617516,
    0.0024384469725191593,
    -0.004709949716925621,
    -0.011210107244551182,
    -0.0015167032834142447,
    0.007395260501652956,
    0.002912638708949089,
    -0.0011295354925096035,
    -0.01764632761478424,
    0.0016596713103353977,
    -0.013994873501360416,
    -0.026554740965366364,
    -0.022065013647079468,
    0.004049278330057859,
    -0.02115570195019245,
    -0.0022928148973733187,
    0.03554840013384819,
    -0.02457982860505581,
    0.020956790074706078,
    -0.022121846675872803,
    0.020502135157585144,
    -0.008318779990077019,
    -0.017490040510892868,
    0.001543343299999833,
    0.0034489904064685106,
    0.0056121572852134705,
    0.01524517685174942,
    -0.020573174580931664,
    -0.033275119960308075,
    0.022803829982876778,
    -0.027961332350969315,
    -0.015643000602722168,
    -0.025006068870425224,
    -0.01963544823229313,
    0.02783345989882946,
    0.01679384894669056,
    -0.015387257561087608,
    -0.0018701271619647741,
    -0.013185017742216587,
    -0.025531765073537827,
    0.021866101771593094,
    -0.019848566502332687,
    0.017958903685212135,
    0.0006753237103112042,
    -0.002903758781030774,
    -0.024778740480542183,
    0.0021471830550581217,
    -0.03049035370349884,
    0.026483699679374695,
    -0.025204980745911598,
    0.019621239975094795,
    0.010492603294551373,
    0.004908862058073282,
    0.00041735981358215213,
    -0.024636661633849144,
    -0.0348380021750927,
    -0.02007589489221573,
    0.0067274849861860275,
    0.026753652840852737,
    0.02092837542295456,
    0.019578615203499794,
    -0.00441158190369606,
    -0.005224989727139473,
    -0.010350523516535759,
    0.010108987800776958,
    0.012559866532683372,
    0.02735038846731186,
    -0.007015197072178125,
    -0.027407219633460045,
    -0.003255406627431512,
    0.014747897163033485,
    0.0078072925098240376,
    0.013383929617702961,
    -0.00038361584302037954,
    -0.0007832156261429191,
    -0.014243513345718384,
    0.0197917353361845,
    0.0013062474317848682,
    0.010421562939882278,
    6.310347089311108e-05,
    -0.014435322023928165,
    0.008063036017119884,
    -0.00867397990077734,
    0.03225214406847954,
    0.03236581012606621,
    -0.003063598647713661,
    0.014456633478403091,
    -0.03779326379299164,
    -0.017632119357585907,
    -0.036855537444353104,
    0.0025414549745619297,
    0.033644530922174454,
    0.010393147356808186,
    -0.0003412138612475246,
    -0.011593722738325596,
    0.03472433611750603,
    0.0005572197260335088,
    -0.004990557674318552,
    0.0031452944967895746,
    0.0007472516736015677,
    -0.009846139699220657,
    0.0004564317932818085,
    -0.010755451396107674,
    -0.002184479031711817,
    0.004763229750096798,
    -0.022249717265367508,
    0.011799738742411137,
    0.019976438954472542,
    0.004539453890174627,
    0.025091316550970078,
    0.003804190317168832,
    0.0012565194629132748,
    0.0012991434196010232,
    0.005097117740660906,
    -0.03551998361945152,
    -0.008063036017119884,
    -0.009306236170232296,
    -0.0229174941778183,
    0.016296569257974625,
    0.16788165271282196,
    0.018484599888324738,
    0.02716568484902382,
    0.031797491014003754,
    -0.013391033746302128,
    -0.004489725921303034,
    -0.0002974798553623259,
    -0.011877882294356823,
    -0.027364596724510193,
    0.019024504348635674,
    0.035747312009334564,
    0.0044684140011668205,
    -0.010116091929376125,
    -0.005047389771789312,
    0.013078458607196808,
    -0.020942581817507744,
    -0.038333166390657425,
    -0.05455869436264038,
    -0.0036763183306902647,
    0.028188658878207207,
    0.014691065065562725,
    -0.007658108603209257,
    -0.01524517685174942,
    -0.02587275579571724,
    0.01734795980155468,
    0.003383278613910079,
    -0.017120633274316788,
    -0.007178588770329952,
    0.04035070165991783,
    -0.006464637350291014,
    -0.013668090105056763,
    0.024707701057195663,
    0.004955037962645292,
    0.012538554146885872,
    -0.011799738742411137,
    -0.012609594501554966,
    0.01380306575447321,
    -0.019663862884044647,
    -5.261397745925933e-05,
    0.01949336752295494,
    -0.013092665933072567,
    -0.025276020169258118,
    -0.01182815432548523,
    -0.024835573509335518,
    0.01956440694630146,
    -0.02492082118988037,
    -0.013256058096885681,
    0.003017422743141651,
    0.012986105866730213,
    0.027222516015172005,
    -0.014001977629959583,
    -0.00537062156945467,
    0.026199540123343468,
    0.010400251485407352,
    -0.006823388859629631,
    0.005345757585018873,
    -0.017816824838519096,
    0.03097342699766159,
    0.026441076770424843,
    -0.008475068025290966,
    -0.039327725768089294,
    0.023940470069646835,
    -0.003992446232587099,
    0.002724382793530822,
    -0.009519355371594429,
    0.011224314570426941,
    0.007402364630252123,
    0.014506361447274685,
    -0.01412274595350027,
    0.0034560945350676775,
    -0.01665176823735237,
    -0.004326334223151207,
    -0.01849880814552307,
    -0.01933707855641842,
    -0.022121846675872803,
    -0.016623351722955704,
    0.03233739361166954,
    0.01358284242451191,
    0.03594622388482094,
    0.010954363271594048,
    -0.02510552480816841,
    0.0006877557025291026,
    0.007263836916536093,
    0.008531900122761726,
    -0.014605817385017872,
    0.006983228959143162,
    0.014499257318675518,
    0.003051166655495763,
    -0.002457982860505581,
    -0.0151741374284029,
    -0.021084662526845932,
    -0.04484042897820473,
    0.02173823118209839,
    0.009284923784434795,
    0.00319679849781096,
    -0.012005754746496677,
    0.01609765738248825,
    0.029410546645522118,
    -0.028430195525288582,
    0.016026616096496582,
    -0.027080435305833817,
    0.05464394390583038,
    0.03478116914629936,
    -0.01064889132976532,
    -0.019479159265756607,
    0.002585854846984148,
    0.006233757361769676,
    0.019237622618675232,
    0.0062550692819058895,
    -0.012126523070037365,
    0.0008387156412936747,
    -0.018811384215950966,
    -0.016921721398830414,
    -0.008993660099804401,
    0.008610044606029987,
    0.013319994322955608,
    0.026767859235405922,
    -0.003623038297519088,
    -0.0019003191264346242,
    0.008411132730543613,
    -0.008411132730543613,
    -0.017177464440464973,
    0.008951036259531975,
    -0.016708601266145706,
    -0.020360054448246956,
    0.009348860010504723,
    -0.022306550294160843,
    0.02484978176653385,
    -0.0008471516193822026,
    0.00427305418998003,
    -0.00017249392112717032,
    -0.013504697941243649,
    0.03708286210894585,
    0.00104961555916816,
    -0.0050402856431901455,
    -0.0007312676752917469,
    0.0010984555119648576,
    -0.0036248143296688795,
    0.002671102760359645,
    0.0065427809022367,
    -0.00424463814124465,
    -0.0018070791848003864,
    0.014918393455445766,
    -0.007011645007878542,
    -1.2764994608005509e-06,
    -0.015628792345523834,
    -0.021454069763422012,
    0.014719481579959393,
    0.012872442603111267,
    -0.0357188954949379,
    -0.0413452610373497,
    -0.001772447256371379,
    0.0025201428215950727,
    -0.029410546645522118,
    0.012289914302527905,
    -0.03324670344591141,
    -0.025332853198051453,
    -0.03287729620933533,
    0.05075095221400261,
    0.00033788385917432606,
    -0.005239197518676519,
    -0.01808677613735199,
    -0.010606267489492893,
    -0.002335438970476389,
    -0.023670516908168793,
    -0.04378903657197952,
    -0.17867973446846008,
    0.01775999180972576,
    0.023798389360308647,
    -0.0421409085392952,
    0.011117755435407162,
    -0.00544521352276206,
    0.013604153878986835,
    -0.012879546731710434,
    -0.004511037841439247,
    -0.02834494784474373,
    0.023556852713227272,
    -0.014719481579959393,
    -0.01886821538209915,
    -0.025759093463420868,
    -0.02912638708949089,
    0.001818623160943389,
    0.0031595025211572647,
    0.015884537249803543,
    0.037338607013225555,
    0.014449529349803925,
    0.04631805792450905,
    -0.03250788897275925,
    0.012005754746496677,
    0.005629917606711388,
    0.007835708558559418,
    -0.022249717265367508,
    0.01660914532840252,
    0.030461939051747322,
    -0.007565756794065237,
    -0.02668261155486107,
    -0.007281596772372723,
    -0.031911153346300125,
    0.00267643085680902,
    -0.010130299255251884,
    0.011416123248636723,
    0.0006566757219843566,
    0.012027067132294178,
    -0.0257306769490242,
    -0.01295769028365612,
    0.010904635302722454,
    0.023613685742020607,
    0.015500920824706554,
    -0.0015912953531369567,
    -0.00755865266546607,
    -0.007707836572080851,
    0.021567733958363533,
    0.02605746127665043,
    -0.02960945852100849,
    0.002557438798248768,
    0.0005993997328914702,
    0.04268081486225128,
    -0.017490040510892868,
    0.01199865061789751,
    0.014975225552916527,
    0.02831653133034706,
    -0.012517242692410946,
    0.007373948581516743,
    0.03321829065680504,
    -0.00217382307164371,
    0.008084348402917385,
    -0.015472505241632462,
    -0.021056246012449265,
    -0.02284645475447178,
    0.01463423389941454,
    -0.012169146910309792,
    0.004475518129765987,
    -0.013206330128014088,
    0.018797175958752632,
    -0.0020015512127429247,
    -0.005434557795524597,
    0.002951710717752576,
    0.024494580924510956,
    0.015955576673150063,
    0.02166718989610672,
    0.024196213111281395,
    0.020331639796495438,
    -0.003523582359775901,
    -0.003967582248151302,
    0.017674744129180908,
    -0.007743356749415398,
    -0.023343734443187714,
    0.031030258163809776,
    -0.004812957718968391,
    0.0008649115916341543,
    0.017504248768091202,
    -0.018541431054472923,
    0.02300274185836315,
    0.005303133744746447,
    -0.015998201444745064,
    -0.01280850637704134,
    0.03159857913851738,
    -0.015103097073733807,
    -0.011913402937352657,
    -0.006333213299512863,
    0.0084892762824893,
    -0.010002427734434605,
    0.006656445097178221,
    -0.004070590250194073,
    0.013653881847858429,
    -0.026071667671203613,
    -0.003141742665320635,
    0.01511730533093214,
    -0.025517556816339493,
    -0.0022910390980541706,
    0.020146934315562248,
    0.023755764588713646,
    -0.04333437979221344,
    -0.0004084798274561763,
    0.030660850927233696,
    -0.0017244952032342553,
    -0.010812283493578434,
    -0.018726136535406113,
    0.015827704221010208,
    0.02178085409104824,
    -0.02547493204474449,
    0.008098556660115719,
    -0.013071354478597641,
    -0.016268152743577957,
    0.01753266341984272,
    -0.01506047323346138,
    0.03188273683190346,
    -0.004209117963910103,
    -0.01247461885213852,
    0.007324220612645149,
    -0.0065463329665362835,
    -0.004976349882781506,
    -0.09945595264434814,
    -0.044613100588321686,
    0.01790207251906395,
    0.014456633478403091,
    -0.01187077909708023,
    -0.022803829982876778,
    -0.02499186061322689,
    0.009640123695135117,
    -0.024707701057195663,
    0.024906612932682037,
    0.009419899433851242,
    -0.022874869406223297,
    -0.0066813090816140175,
    0.017845239490270615,
    -0.014087225310504436,
    0.012780090793967247,
    -0.02695256471633911,
    -0.013483386486768723,
    -0.013440761715173721,
    0.0013675193767994642,
    -0.014975225552916527,
    -0.01912396028637886,
    0.028558067977428436,
    0.015486713498830795,
    -0.023230070248246193,
    0.005835933610796928,
    -0.023755764588713646,
    0.0011526234447956085,
    -0.00843244418501854,
    0.0019305110909044743,
    0.04654538631439209,
    -0.011337978765368462,
    -0.00043245579581707716,
    0.010918843559920788,
    0.03816267102956772,
    -0.010883322916924953,
    -0.024167796596884727,
    -0.02060159109532833,
    0.033502448350191116,
    -0.02469349279999733,
    0.019436534494161606,
    -0.01425061747431755,
    -0.016665976494550705,
    0.015998201444745064,
    -0.030518770217895508,
    0.010457083582878113,
    -0.015827704221010208,
    0.026568947359919548,
    0.022434422746300697,
    -0.01739058457314968,
    -0.013469178229570389,
    -0.026554740965366364,
    -0.028998514637351036,
    0.004237534012645483,
    0.02085733413696289,
    -0.017134839668869972,
    0.01203417032957077,
    0.020061686635017395,
    0.0011535114608705044,
    -0.04305022209882736,
    -0.031683824956417084,
    0.006091677118092775,
    -0.009057596325874329,
    0.00956198014318943,
    -0.012289914302527905,
    -0.004720605909824371,
    0.0051752617582678795,
    -0.00882316380739212,
    0.010258171707391739,
    -0.04492567479610443,
    -0.01587032899260521,
    0.03614513576030731,
    -0.025276020169258118,
    0.013334201648831367,
    -0.030064115300774574,
    -0.000904871616512537,
    -0.014207993634045124,
    -0.019138166680932045,
    0.024267252534627914,
    -0.009320443496108055,
    -0.020956790074706078,
    -0.013298681937158108,
    0.008958140388131142,
    -0.010386043228209019,
    -0.018001528456807137,
    0.00972537137567997,
    -0.012012858875095844,
    0.010357627645134926,
    0.04813668131828308,
    -0.032166898250579834,
    0.009718267247080803,
    -0.017447415739297867,
    0.025418100878596306,
    -0.008958140388131142,
    -0.006258621346205473,
    -0.0024988309014588594,
    -0.011167483404278755,
    -0.006180477328598499,
    0.021652981638908386,
    0.012119418941438198,
    -0.05640573427081108,
    -0.0005234757554717362,
    -0.07587068527936935,
    0.033047791570425034,
    0.005441661458462477,
    -0.016779640689492226,
    -0.010393147356808186,
    -0.02776242047548294,
    0.018655095249414444,
    -0.02476453222334385,
    0.007835708558559418,
    0.032138481736183167,
    -0.006191133055835962,
    0.0011348634725436568,
    0.013334201648831367,
    -0.008688188157975674,
    -0.03310462459921837,
    -0.03637246415019035,
    0.01757528819143772,
    -0.006716828793287277,
    0.03824792057275772,
    0.01834251917898655,
    -0.01731954514980316,
    0.02148248627781868,
    0.0394129753112793,
    0.03503691405057907,
    -0.03432651236653328,
    -0.0028646867722272873,
    -0.009462524205446243,
    0.024380916729569435,
    -0.005970909260213375,
    -0.01901029609143734,
    -0.0005527797620743513,
    -0.010172923095524311,
    -0.016182905063033104,
    0.02484978176653385,
    0.002150735119357705,
    -0.028799602761864662,
    0.03358769789338112,
    0.013113978318870068,
    0.003385054413229227,
    0.020800502970814705,
    -0.007430780678987503,
    -0.02690993994474411,
    0.00926361232995987,
    0.017745783552527428,
    -0.02004747837781906,
    -0.011892090551555157,
    0.0058927652426064014,
    -0.015373049303889275,
    0.005832381546497345,
    0.01145874708890915,
    0.02078629471361637,
    -0.008404028601944447,
    -0.023912053555250168,
    -0.03409918397665024,
    0.0321953147649765,
    -0.009128635749220848,
    0.03605988621711731,
    -0.015458296984434128,
    0.004699293989688158,
    0.0011020074598491192,
    0.039668720215559006,
    -2.454486457281746e-05,
    0.008553212508559227,
    0.02695256471633911,
    0.01949336752295494,
    -0.034013938158750534,
    -0.04731261730194092,
    -0.005523357540369034,
    0.010180027224123478,
    -0.01790207251906395,
    -0.03432651236653328,
    -0.02226392552256584,
    0.023869428783655167,
    -0.0071537247858941555,
    0.027108851820230484,
    0.008048828691244125,
    0.03282046690583229,
    -0.030149362981319427,
    -0.0210704542696476,
    0.016253944486379623,
    0.03495166450738907,
    -0.023372149094939232,
    0.020587382838129997,
    0.03049035370349884,
    0.024863988161087036,
    0.0016481272177770734,
    -0.034752752631902695,
    0.0068162851966917515,
    0.005143293645232916,
    0.03279205039143562,
    0.006979676894843578,
    0.015188345685601234,
    -0.004415133967995644,
    -0.0024846228770911694,
    0.006017085164785385,
    -0.002365631051361561,
    -0.007693628780543804,
    0.0197917353361845,
    0.039441391825675964,
    -0.00028571387520059943,
    0.018029943108558655,
    -0.01587032899260521,
    -0.02026059851050377,
    -0.02492082118988037,
    -0.0441584438085556,
    0.008389820344746113,
    -0.014414009638130665,
    0.007913852110505104,
    0.0021045589819550514,
    0.051177192479372025,
    0.04072010889649391,
    -0.032394226640462875,
    0.005835933610796928,
    0.011558203026652336,
    -0.008070140145719051,
    0.03222373127937317,
    0.03378660976886749,
    -0.026711028069257736,
    -0.026114292442798615,
    -0.005480733700096607,
    -0.008709500543773174,
    0.0013879433972761035,
    0.0366850383579731,
    -0.011565307155251503,
    0.0004138078074902296,
    0.04739786684513092,
    0.022448629140853882,
    -0.007722044363617897,
    0.02325848489999771,
    0.00957618746906519,
    -0.02376997284591198,
    -0.020630007609725,
    -0.009810619987547398,
    -0.03776484727859497,
    -0.006368733011186123,
    0.011615035124123096,
    -0.00012320994574110955,
    -0.006006429437547922,
    0.016964344307780266,
    0.08519113063812256,
    0.0156572088599205,
    -0.0007721156580373645,
    0.010940155014395714,
    -0.014889976941049099,
    -0.017845239490270615,
    -0.012005754746496677,
    0.013639673590660095,
    -0.0018878871342167258,
    -0.01410143356770277,
    -0.007537340745329857,
    -0.008176700212061405,
    -0.026824692264199257,
    -0.006081021390855312,
    -0.016182905063033104,
    -0.006670652888715267,
    -0.01605503261089325,
    -0.005864349193871021,
    -0.005750685464590788,
    -0.024480372667312622,
    0.007373948581516743,
    0.030945010483264923,
    -0.010471290908753872,
    0.015827704221010208,
    -0.007015197072178125,
    -0.014620025642216206,
    0.026568947359919548,
    0.015202553011476994,
    -0.004159389995038509,
    -0.062401507049798965,
    0.005246301647275686,
    0.0039498223923146725,
    -0.022065013647079468,
    -0.03804900869727135,
    0.015543544664978981,
    -0.004326334223151207,
    -0.02513394132256508,
    0.0030245266389101744,
    0.027620339766144753,
    0.003910750150680542,
    0.006052605342119932,
    0.006560541223734617,
    -0.00971116404980421,
    -0.04748311638832092,
    0.003028078703209758,
    -0.0034596463665366173,
    -0.020146934315562248,
    -0.007913852110505104,
    -0.045977067202329636
  ]
}
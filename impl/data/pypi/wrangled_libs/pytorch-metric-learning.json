{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "the easiest way to use deep metric learning in your application. modular, flexible, and extensible. written in pytorch.\n<h1>\n<a href=\"https://github.com/kevinmusgrave/pytorch-metric-learning\">\n<img alt=\"pytorch metric learning\" src=\"https://github.com/kevinmusgrave/pytorch-metric-learning/blob/master/docs/imgs/logo2.png\">\n</a>\n</h1>\n\n<p align=\"center\">\n <a href=\"https://pypi.org/project/pytorch-metric-learning\">\n     <img alt=\"pypi version\" src=\"https://img.shields.io/pypi/v/pytorch-metric-learning?color=bright-green\">\n </a>\n\n\n\n <a href=\"https://anaconda.org/conda-forge/pytorch-metric-learning\">\n     <img alt=\"anaconda version\" src=\"https://img.shields.io/conda/v/conda-forge/pytorch-metric-learning?color=bright-green\">\n </a>\n</p>\n\n## news\n\n**july 25**: v2.3.0\n- added [histogramloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#histogramloss)\n- thank you [domenicomuscill0](https://github.com/domenicomuscill0).\n\n**june 18**: v2.2.0\n- added [manifoldloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#manifoldloss) and [p2sgradloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#p2sgradloss).\n- added a `symmetric` flag to [selfsupervisedloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#selfsupervisedloss).\n- see the [release notes](https://github.com/kevinmusgrave/pytorch-metric-learning/releases/tag/v2.2.0).\n- thank you [domenicomuscill0](https://github.com/domenicomuscill0).\n\n\n## documentation\n- [**view the documentation here**](https://kevinmusgrave.github.io/pytorch-metric-learning/)\n- [**view the installation instructions here**](https://github.com/kevinmusgrave/pytorch-metric-learning#installation)\n- [**view the available losses, miners etc. here**](https://github.com/kevinmusgrave/pytorch-metric-learning/blob/master/contents.md) \n\n\n## google colab examples\nsee the [examples folder](https://github.com/kevinmusgrave/pytorch-metric-learning/blob/master/examples/readme.md) for notebooks you can download or run on google colab.\n\n\n## pytorch metric learning overview\nthis library contains 9 modules, each of which can be used independently within your existing codebase, or combined together for a complete train/test workflow.\n\n![high_level_module_overview](docs/imgs/high_level_module_overview.png)\n\n\n\n## how loss functions work\n\n### using losses and miners in your training loop\nlet\u2019s initialize a plain [tripletmarginloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#tripletmarginloss):\n```python\nfrom pytorch_metric_learning import losses\nloss_func = losses.tripletmarginloss()\n```\n\nto compute the loss in your training loop, pass in the embeddings computed by your model, and the corresponding labels. the embeddings should have size (n, embedding_size), and the labels should have size (n), where n is the batch size.\n\n```python\n# your training loop\nfor i, (data, labels) in enumerate(dataloader):\n\toptimizer.zero_grad()\n\tembeddings = model(data)\n\tloss = loss_func(embeddings, labels)\n\tloss.backward()\n\toptimizer.step()\n```\n\nthe tripletmarginloss computes all possible triplets within the batch, based on the labels you pass into it. anchor-positive pairs are formed by embeddings that share the same label, and anchor-negative pairs are formed by embeddings that have different labels. \n\nsometimes it can help to add a mining function:\n```python\nfrom pytorch_metric_learning import miners, losses\nminer = miners.multisimilarityminer()\nloss_func = losses.tripletmarginloss()\n\n# your training loop\nfor i, (data, labels) in enumerate(dataloader):\n\toptimizer.zero_grad()\n\tembeddings = model(data)\n\thard_pairs = miner(embeddings, labels)\n\tloss = loss_func(embeddings, labels, hard_pairs)\n\tloss.backward()\n\toptimizer.step()\n```\nin the above code, the miner finds positive and negative pairs that it thinks are particularly difficult. note that even though the tripletmarginloss operates on triplets, it\u2019s still possible to pass in pairs. this is because the library automatically converts pairs to triplets and triplets to pairs, when necessary.\n\n### customizing loss functions\nloss functions can be customized using [distances](https://kevinmusgrave.github.io/pytorch-metric-learning/distances/), [reducers](https://kevinmusgrave.github.io/pytorch-metric-learning/reducers/), and [regularizers](https://kevinmusgrave.github.io/pytorch-metric-learning/regularizers/). in the diagram below, a miner finds the indices of hard pairs within a batch. these are used to index into the distance matrix, computed by the distance object. for this diagram, the loss function is pair-based, so it computes a loss per pair. in addition, a regularizer has been supplied, so a regularization loss is computed for each embedding in the batch. the per-pair and per-element losses are passed to the reducer, which (in this diagram) only keeps losses with a high value. the averages are computed for the high-valued pair and element losses, and are then added together to obtain the final loss.\n\n![high_level_loss_function_overview](docs/imgs/high_level_loss_function_overview.png)\n\nnow here's an example of a customized tripletmarginloss:\n```python\nfrom pytorch_metric_learning.distances import cosinesimilarity\nfrom pytorch_metric_learning.reducers import thresholdreducer\nfrom pytorch_metric_learning.regularizers import lpregularizer\nfrom pytorch_metric_learning import losses\nloss_func = losses.tripletmarginloss(distance = cosinesimilarity(), \n\t\t\t\t     reducer = thresholdreducer(high=0.3), \n\t\t\t \t     embedding_regularizer = lpregularizer())\n```\nthis customized triplet loss has the following properties:\n\n - the loss will be computed using cosine similarity instead of euclidean distance.\n - all triplet losses that are higher than 0.3 will be discarded.\n - the embeddings will be l2 regularized.  \n\n### using loss functions for unsupervised / self-supervised learning\n\na `selfsupervisedloss` wrapper is provided for self-supervised learning:\n\n```python\nfrom pytorch_metric_learning.losses import selfsupervisedloss\nloss_func = selfsupervisedloss(tripletmarginloss())\n\n# your training for-loop\nfor i, data in enumerate(dataloader):\n\toptimizer.zero_grad()\n\tembeddings = your_model(data)\n\taugmented = your_model(your_augmentation(data))\n\tloss = loss_func(embeddings, augmented)\n\tloss.backward()\n\toptimizer.step()\n```\n\nif you're interested in [moco](https://arxiv.org/pdf/1911.05722.pdf)-style self-supervision, take a look at the [moco on cifar10](https://github.com/kevinmusgrave/pytorch-metric-learning/tree/master/examples#simple-examples) notebook. it uses crossbatchmemory to implement the momentum encoder queue, which means you can use any tuple loss, and any tuple miner to extract hard samples from the queue.\n\n\n## highlights of the rest of the library\n\n- for a convenient way to train your model, take a look at the [trainers](https://kevinmusgrave.github.io/pytorch-metric-learning/trainers/).\n- want to test your model's accuracy on a dataset? try the [testers](https://kevinmusgrave.github.io/pytorch-metric-learning/testers/).\n- to compute the accuracy of an embedding space directly, use [accuracycalculator](https://kevinmusgrave.github.io/pytorch-metric-learning/accuracy_calculation/).\n\nif you're short of time and want a complete train/test workflow, check out the [example google colab notebooks](https://github.com/kevinmusgrave/pytorch-metric-learning/tree/master/examples).\n\nto learn more about all of the above, [see the documentation](https://kevinmusgrave.github.io/pytorch-metric-learning). \n\n\n## installation\n\n### required pytorch version\n - ```pytorch-metric-learning >= v0.9.90``` requires ```torch >= 1.6```\n - ```pytorch-metric-learning < v0.9.90``` doesn't have a version requirement, but was tested with ```torch >= 1.2```\n\nother dependencies: ```numpy, scikit-learn, tqdm, torchvision```\n\n### pip\n```\npip install pytorch-metric-learning\n```\n\n**to get the latest dev version**:\n```\npip install pytorch-metric-learning --pre\n```\n\n**to install on windows**:\n```\npip install torch===1.6.0 torchvision===0.7.0 -f https://download.pytorch.org/whl/torch_stable.html\npip install pytorch-metric-learning\n```\n\n**to install with evaluation and logging capabilities**\n\n(this will install the unofficial pypi version of faiss-gpu, plus record-keeper and tensorboard):\n```\npip install pytorch-metric-learning[with-hooks]\n```\n\n**to install with evaluation and logging capabilities (cpu)**\n\n(this will install the unofficial pypi version of faiss-cpu, plus record-keeper and tensorboard):\n```\npip install pytorch-metric-learning[with-hooks-cpu]\n```\n\n### conda\n```\nconda install -c conda-forge pytorch-metric-learning\n```\n\n**to use the testing module, you'll need faiss, which can be installed via conda as well. see the [installation instructions for faiss](https://github.com/facebookresearch/faiss/blob/master/install.md).**\n\n</details>\n\n\n\n## benchmark results\nsee [powerful-benchmarker](https://github.com/kevinmusgrave/powerful-benchmarker/) to view benchmark results and to use the benchmarking tool.\n\n\n## development\ndevelopment is done on the ```dev``` branch:\n```\ngit checkout dev\n```\n\nunit tests can be run with the default ```unittest``` library:\n```bash\npython -m unittest discover\n```\n\nyou can specify the test datatypes and test device as environment variables. for example, to test using float32 and float64 on the cpu:\n```bash\ntest_dtypes=float32,float64 test_device=cpu python -m unittest discover\n```\n\nto run a single test file instead of the entire test suite, specify the file name:\n```bash\npython -m unittest tests/losses/test_angular_loss.py\n```\n\ncode is formatted using ```black``` and ```isort```:\n```bash\npip install black isort\n./format_code.sh\n```\n\n\n## acknowledgements\n\n### contributors\nthanks to the contributors who made pull requests!\n\n| contributor | highlights |\n| -- | -- |\n|[domenicomuscill0](https://github.com/domenicomuscill0)| - [manifoldloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#manifoldloss) <br/> - [p2sgradloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#p2sgradloss) <br/> - [histogramloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#histogramloss)\n|[mlopezantequera](https://github.com/mlopezantequera) | - made the [testers](https://kevinmusgrave.github.io/pytorch-metric-learning/testers) work on any combination of query and reference sets <br/> - made [accuracycalculator](https://kevinmusgrave.github.io/pytorch-metric-learning/accuracy_calculation/) work with arbitrary label comparisons |\n|[cwkeam](https://github.com/cwkeam) | - [selfsupervisedloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#selfsupervisedloss) <br/> - [vicregloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#vicregloss) <br/> - added mean reciprocal rank accuracy to [accuracycalculator](https://kevinmusgrave.github.io/pytorch-metric-learning/accuracy_calculation/) <br/> - baselosswrapper|\n|[marijnl](https://github.com/marijnl)| - [batcheasyhardminer](https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#batcheasyhardminer) <br/> - [twostreammetricloss](https://kevinmusgrave.github.io/pytorch-metric-learning/trainers/#twostreammetricloss) <br/> - [globaltwostreamembeddingspacetester](https://kevinmusgrave.github.io/pytorch-metric-learning/testers/#globaltwostreamembeddingspacetester) <br/> - [example using trainers.twostreammetricloss](https://github.com/kevinmusgrave/pytorch-metric-learning/blob/master/examples/notebooks/twostreammetricloss.ipynb) |\n| [chingisooinar](https://github.com/chingisooinar) | [subcenterarcfaceloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#subcenterarcfaceloss) |\n| [elias-ramzi](https://github.com/elias-ramzi) | [hierarchicalsampler](https://kevinmusgrave.github.io/pytorch-metric-learning/samplers/#hierarchicalsampler) |\n| [fjsj](https://github.com/fjsj) | [supconloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#supconloss) |\n| [alenubuntu](https://github.com/alenubuntu) | [circleloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#circleloss) |\n| [interestingzhuo](https://github.com/interestingzhuo) | [pnploss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#pnploss) |\n| [wconnell](https://github.com/wconnell) | [learning a scrnaseq metric embedding](https://github.com/kevinmusgrave/pytorch-metric-learning/blob/master/examples/notebooks/scrnaseq_metricembedding.ipynb) |\n| [alexschuy](https://github.com/alexschuy) | optimized ```utils.loss_and_miner_utils.get_random_triplet_indices``` |\n| [johngiorgi](https://github.com/johngiorgi) | ```all_gather``` in [utils.distributed](https://kevinmusgrave.github.io/pytorch-metric-learning/distributed) |\n| [hummer12007](https://github.com/hummer12007) | ```utils.key_checker``` |\n| [vltanh](https://github.com/vltanh) | made ```inferencemodel.train_indexer``` accept datasets |\n| [btseytlin](https://github.com/btseytlin) | ```get_nearest_neighbors``` in [inferencemodel](https://kevinmusgrave.github.io/pytorch-metric-learning/inference_models) |\n| [mlw214](https://github.com/mlw214) | added ```return_per_class``` to [accuracycalculator](https://kevinmusgrave.github.io/pytorch-metric-learning/accuracy_calculation/) |\n| [layumi](https://github.com/layumi) | [instanceloss](https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#instanceloss) |\n| [notody](https://github.com/notody) | helped add `ref_emb` and `ref_labels` to the distributed wrappers. |\n| [elisonsherton](https://github.com/elisonsherton) | fixed an edge case in arcfaceloss. |\n| [stompsjo](https://github.com/stompsjo) | improved documentation for ntxentloss |\n| [z1w](https://github.com/z1w) | |\n| [thinline72](https://github.com/thinline72) | |\n| [tpanum](https://github.com/tpanum) | |\n| [fralik](https://github.com/fralik) | |\n| [joaqo](https://github.com/joaqo) | |\n| [jookuma](https://github.com/jookuma) | |\n| [gkouros](https://github.com/gkouros) | |\n| [yutanakamura-tky](https://github.com/yutanakamura-tky) | |\n| [kinglittleq](https://github.com/kinglittleq) | |\n| [martin0258](https://github.com/martin0258) | |\n| [michaeldeyzel](https://github.com/michaeldeyzel) | |\n| [hsinger04](https://github.com/hsinger04) | |\n| [rheum](https://github.com/rheum) | |\n| [bot66](https://github.com/bot66) | |\n\n\n\n### facebook ai\nthank you to [ser-nam lim](https://research.fb.com/people/lim-ser-nam/) at [facebook ai](https://ai.facebook.com/), and my research advisor, [professor serge belongie](https://vision.cornell.edu/se3/people/serge-belongie/). this project began during my internship at facebook ai where i received valuable feedback from ser-nam, and his team of computer vision and machine learning engineers and research scientists. in particular, thanks to [ashish shah](https://www.linkedin.com/in/ashish217/) and [austin reiter](https://www.linkedin.com/in/austin-reiter-3962aa7/) for reviewing my code during its early stages of development.\n\n### open-source repos\nthis library contains code that has been adapted and modified from the following great open-source repos:\n- https://github.com/bnu-wangxun/deep_metric\n- https://github.com/chaoyuaw/incubator-mxnet/blob/master/example/gluon/embedding_learning\n- https://github.com/facebookresearch/deepcluster\n- https://github.com/geonm/proxy-anchor-loss\n- https://github.com/idstcv/softtriple\n- https://github.com/kunhe/fastap-metric-learning\n- https://github.com/ronekko/deep_metric_learning\n- https://github.com/tjddus9597/proxy-anchor-cvpr2020\n- http://kaizhao.net/regularface\n- https://github.com/nii-yamagishilab/project-nn-pytorch-scripts\n\n### logo\nthanks to [jeff musgrave](https://www.designgenius.ca/) for designing the logo.\n\n## citing this library\nif you'd like to cite pytorch-metric-learning in your paper, you can use this bibtex:\n```latex\n@article{musgrave2020pytorchml,\n  title={pytorch metric learning},\n  author={kevin musgrave and serge j. belongie and ser-nam lim},\n  journal={arxiv},\n  year={2020},\n  volume={abs/2008.09164}\n}\n```\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "pytorch-metric-learning",
  "package_url": "https://pypi.org/project/pytorch-metric-learning/",
  "project_url": "https://pypi.org/project/pytorch-metric-learning/",
  "project_urls": {
    "Homepage": "https://github.com/KevinMusgrave/pytorch-metric-learning"
  },
  "release_url": "https://pypi.org/project/pytorch-metric-learning/2.4.1/",
  "requires_dist": [
    "numpy",
    "scikit-learn",
    "torch (>=1.6.0)",
    "tqdm",
    "black ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "isort ; extra == 'dev'",
    "nbqa ; extra == 'dev'",
    "mkdocs-material ; extra == 'docs'",
    "faiss-gpu (>=1.6.3) ; extra == 'with-hooks'",
    "record-keeper (>=0.9.32) ; extra == 'with-hooks'",
    "tensorboard ; extra == 'with-hooks'",
    "faiss-cpu (>=1.6.3) ; extra == 'with-hooks-cpu'",
    "record-keeper (>=0.9.32) ; extra == 'with-hooks-cpu'",
    "tensorboard ; extra == 'with-hooks-cpu'"
  ],
  "requires_python": ">=3.0",
  "summary": "the easiest way to use deep metric learning in your application. modular, flexible, and extensible. written in pytorch.",
  "version": "2.4.1",
  "releases": [],
  "developers": [
    "kevin_musgrave"
  ],
  "kwds": "pytorch_metric_learning pytorch deep_metric_learning deep_metric metric",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pytorch_metric_learning",
  "homepage": "https://github.com/kevinmusgrave/pytorch-metric-learning",
  "release_count": 206,
  "dependency_ids": [
    "pypi_black",
    "pypi_faiss_cpu",
    "pypi_faiss_gpu",
    "pypi_flake8",
    "pypi_isort",
    "pypi_mkdocs_material",
    "pypi_nbqa",
    "pypi_numpy",
    "pypi_record_keeper",
    "pypi_scikit_learn",
    "pypi_tensorboard",
    "pypi_torch",
    "pypi_tqdm"
  ],
  "documentation_summary": "The HTML text provides information about \"pytorch-metric-learning,\" a Python package available on PyPI for implementing deep metric learning in applications. The latest version, 2.4.1, was released on December 16, 2023. It is designed to be modular, flexible, and extensible, and is written in PyTorch. The package requires Python version 3.0 or higher and is licensed under the MIT License. It includes features like HistogramLoss, ManifoldLoss, and P2SGradLoss, among others, and supports customization of loss functions using distances, reducers, and regularizers. The package also offers a SelfSupervisedLoss wrapper for self-supervised learning and provides Google Colab examples for practical implementation. Installation instructions are provided for both pip and conda, and the package supports various dependencies including numpy, scikit-learn, tqdm, and torchvision.",
  "embedding": [
    -0.01668582670390606,
    0.006683490704745054,
    0.01877155341207981,
    -0.021984703838825226,
    0.007370512466877699,
    0.040615327656269073,
    0.02026538737118244,
    -0.013874320313334465,
    -0.016939494758844376,
    -0.025014646351337433,
    0.023661741986870766,
    0.023267144337296486,
    -0.029059268534183502,
    0.006944206543266773,
    -0.008857298642396927,
    -0.0009036981500685215,
    0.020998209714889526,
    -0.012627111747860909,
    0.012669390067458153,
    -0.004076330456882715,
    0.0339917317032814,
    0.0014524349244311452,
    -0.02418317273259163,
    -0.041038110852241516,
    -0.009251896291971207,
    0.0012947721406817436,
    0.024154987186193466,
    -0.022971196100115776,
    -0.002392245689406991,
    -0.002439808798953891,
    0.024225451052188873,
    -0.015657054260373116,
    -0.016277136281132698,
    -0.014839674346148968,
    -0.026240715757012367,
    -0.0031779170967638493,
    0.03624657541513443,
    -0.004678795579820871,
    0.046083319932222366,
    -0.010590707883238792,
    0.007906037382781506,
    0.017150886356830597,
    0.006260707974433899,
    -0.01036522351205349,
    -0.02408452332019806,
    -0.001951846992596984,
    0.027114467695355415,
    -0.025648819282650948,
    -0.008258356712758541,
    0.014367567375302315,
    0.009498518891632557,
    0.03190600499510765,
    -0.019180243834853172,
    0.010492058470845222,
    0.006584841292351484,
    0.0015960049349814653,
    0.03582379221916199,
    0.03272338584065437,
    -0.0038120911922305822,
    -0.01698177307844162,
    0.00013630339526571333,
    -0.013197868131101131,
    -0.03509096801280975,
    0.0014577197143808007,
    0.006162058562040329,
    -0.03100406751036644,
    -0.012965337373316288,
    0.009752188809216022,
    0.0007284194580279291,
    0.005785077344626188,
    0.020899560302495956,
    0.019814418628811836,
    -0.0045977625995874405,
    -0.04456130042672157,
    0.04394122213125229,
    -0.04109448194503784,
    -0.024535492062568665,
    0.011119185946881771,
    0.0016523759113624692,
    -0.012711668387055397,
    0.002549027558416128,
    -0.009611261077225208,
    -0.005006452556699514,
    0.01906750164926052,
    -0.0002829561708495021,
    0.008554304018616676,
    -0.0075255329720675945,
    -0.017150886356830597,
    -0.014156175777316093,
    -0.0018831448396667838,
    0.022266557440161705,
    0.005482083186507225,
    0.018095102161169052,
    0.009660585783421993,
    -0.01357837300747633,
    0.030045760795474052,
    -0.002735756803303957,
    0.012500276789069176,
    0.02973571978509426,
    -0.006789186503738165,
    -0.004174979869276285,
    0.01338812056928873,
    -0.007920130155980587,
    -0.022759804502129555,
    -0.02934112213551998,
    -0.010456826537847519,
    -0.010752774775028229,
    -0.011654711328446865,
    0.00466822599992156,
    0.021547827869653702,
    -0.03182144835591316,
    0.03444270044565201,
    -0.0013546664267778397,
    -0.033146169036626816,
    0.0024081000592559576,
    0.006503807846456766,
    0.03190600499510765,
    -0.005256598815321922,
    0.004079853650182486,
    -0.013465630821883678,
    0.003056366927921772,
    -0.014332335442304611,
    0.014614189974963665,
    0.006109210662543774,
    0.012831456027925014,
    -0.012662343680858612,
    0.00016735150711610913,
    -0.005140333436429501,
    -0.0059753293171525,
    -0.021970611065626144,
    0.0030898372642695904,
    0.011027582921087742,
    0.017305906862020493,
    0.007997640408575535,
    -0.01629122905433178,
    0.012584833428263664,
    -0.001532587455585599,
    -0.04146089404821396,
    -0.02884787693619728,
    -0.009667632170021534,
    -0.02191423997282982,
    0.036500245332717896,
    -0.01017497107386589,
    -0.010985305532813072,
    -0.03810681775212288,
    0.052988771349191666,
    -0.005852018017321825,
    0.00021733675384894013,
    -0.001153844641521573,
    -0.009738096036016941,
    -0.0014726932859048247,
    -0.031793262809515,
    -0.03824774548411369,
    0.02330942265689373,
    0.013240146450698376,
    -0.004322953522205353,
    0.012655297294259071,
    0.009604214690625668,
    -0.013247192837297916,
    -0.011450366117060184,
    -0.013677021488547325,
    0.029594792053103447,
    -0.009879023768007755,
    0.01179563906043768,
    -0.004643563646823168,
    0.020011717453598976,
    0.036782100796699524,
    -0.009998812340199947,
    -0.012944198213517666,
    -0.010146785527467728,
    0.03258245810866356,
    0.008913669735193253,
    -0.032159674912691116,
    -0.0011001159437000751,
    -0.0042313504964113235,
    0.004315907135605812,
    0.013049894012510777,
    0.00932940561324358,
    -0.026931261643767357,
    0.002556073945015669,
    0.0032061024103313684,
    0.011140325106680393,
    -0.005654719192534685,
    0.05856950208544731,
    -0.015093344263732433,
    0.010823238641023636,
    0.0014092758065089583,
    0.006179674528539181,
    0.01796826720237732,
    -0.009590121917426586,
    0.02490190416574478,
    0.012563694268465042,
    -0.004146794322878122,
    -0.006228999234735966,
    -0.5939251780509949,
    0.0025507891550660133,
    0.004435695707798004,
    -0.02805868163704872,
    -0.007419837173074484,
    -0.0035319975577294827,
    -0.008237217552959919,
    -0.00042366355773992836,
    -0.027509063482284546,
    0.025141481310129166,
    -0.0169958658516407,
    0.00020764798682648689,
    -0.007162644527852535,
    -0.022083351388573647,
    -0.00020731768745463341,
    -0.017108608037233353,
    -0.003005280625075102,
    -0.03805044665932655,
    -0.005164995789527893,
    -0.005291830748319626,
    -0.025803839787840843,
    0.04053077474236488,
    -0.009688771329820156,
    0.02054724097251892,
    0.004203164950013161,
    0.006598934065550566,
    0.02608569525182247,
    0.019377542659640312,
    0.04100992530584335,
    -0.0034597720950841904,
    -0.02398587390780449,
    0.01288782712072134,
    0.007293002214282751,
    -0.009907209314405918,
    0.05312969908118248,
    -0.00035628254408948123,
    -0.01243685930967331,
    0.0440821498632431,
    0.01244390569627285,
    0.02903108298778534,
    -0.032046932727098465,
    -0.008406329900026321,
    -0.005013498943299055,
    0.016911309212446213,
    0.01391659863293171,
    0.011668804101645947,
    0.011859056539833546,
    0.012415720149874687,
    0.017813246697187424,
    -0.013712253421545029,
    0.007236631587147713,
    0.0019553701858967543,
    0.00379095203243196,
    0.0017078662058338523,
    0.011091000400483608,
    -0.010583661496639252,
    0.03774040564894676,
    0.0008737510070204735,
    -0.010337037965655327,
    0.0034315865486860275,
    -0.009766281582415104,
    0.001792422728613019,
    0.024817347526550293,
    -0.019236614927649498,
    -0.010421594604849815,
    -0.00466117961332202,
    -0.015093344263732433,
    -0.022675247862935066,
    -0.01056956872344017,
    -0.02123778685927391,
    0.03720488026738167,
    -0.027819104492664337,
    0.02615615911781788,
    -0.005612440872937441,
    0.055356353521347046,
    0.04613969102501869,
    0.030863141641020775,
    0.0009036981500685215,
    0.00737755885347724,
    0.03506278246641159,
    0.022238371893763542,
    0.020800910890102386,
    0.0009230756550095975,
    -0.0297075342386961,
    0.029284751042723656,
    0.010583661496639252,
    0.007349373307079077,
    -0.0037169649731367826,
    0.0224215779453516,
    0.010139740072190762,
    0.009273034520447254,
    0.025648819282650948,
    -0.011013491079211235,
    -0.05079030245542526,
    -0.000886522582732141,
    0.022745711728930473,
    -0.020519055426120758,
    0.005422188900411129,
    -2.197864705522079e-05,
    -0.03627476096153259,
    -0.021886054426431656,
    -0.013162636198103428,
    -0.00021634585573337972,
    -0.009688771329820156,
    0.0069371601566672325,
    0.012274792417883873,
    0.0008486483129672706,
    0.005844971630722284,
    0.021364621818065643,
    -0.01668582670390606,
    -0.022830268368124962,
    -0.020857281982898712,
    -0.02161829173564911,
    0.0005165876937098801,
    0.017024051398038864,
    -0.03091951087117195,
    0.013402213342487812,
    0.028284166008234024,
    -0.003290659049525857,
    0.013599512167274952,
    0.012070447206497192,
    -0.011330577544867992,
    0.024915996938943863,
    0.024126801639795303,
    -0.0002534494560677558,
    -1.9033481294172816e-05,
    0.00506282364949584,
    -0.01392364501953125,
    -0.021886054426431656,
    0.011091000400483608,
    0.005823832470923662,
    0.009505565278232098,
    0.010344084352254868,
    -0.007215492427349091,
    0.05589187890291214,
    0.027494970709085464,
    0.012563694268465042,
    -0.014741024933755398,
    0.01328242477029562,
    0.006528470199555159,
    -0.0006619192427024245,
    0.010146785527467728,
    0.011626525782048702,
    -0.005763938184827566,
    -0.01560068316757679,
    -0.020462684333324432,
    0.0009468572097830474,
    0.015290643088519573,
    0.031229551881551743,
    -0.015304735861718655,
    -0.030045760795474052,
    -0.017305906862020493,
    -0.03387898951768875,
    0.0011115663219243288,
    -0.009815606288611889,
    0.0014233685797080398,
    -0.01757366955280304,
    -0.011379902251064777,
    -0.02054724097251892,
    -0.03878327086567879,
    -0.011260113678872585,
    0.003681733040139079,
    -0.00674338499084115,
    0.01046387292444706,
    -0.022393392398953438,
    -0.0006707272259518504,
    -0.040840812027454376,
    0.028692856431007385,
    -0.011422180570662022,
    -0.02557835541665554,
    -0.005048730876296759,
    -0.019095687195658684,
    -0.010379316285252571,
    -0.00768055347725749,
    0.013987062498927116,
    0.016573084518313408,
    -0.004185549449175596,
    0.003269519889727235,
    -0.02824188768863678,
    -0.01506515871733427,
    -0.005679381545633078,
    0.024366378784179688,
    -0.0327797569334507,
    -0.006204336881637573,
    0.03495004028081894,
    0.020110366865992546,
    0.020068088546395302,
    0.009766281582415104,
    -0.002920724218711257,
    -0.0015255410689860582,
    -0.020786818116903305,
    0.020885467529296875,
    -0.021801497787237167,
    0.009343498386442661,
    -0.02250613458454609,
    0.0047492594458162785,
    0.0007843500934541225,
    -0.007127412594854832,
    0.010978259146213531,
    0.038557786494493484,
    0.032948870211839676,
    0.013536094687879086,
    -0.008237217552959919,
    -0.016939494758844376,
    -0.01140808779746294,
    -0.010788006708025932,
    0.012232514098286629,
    -0.028213702142238617,
    -0.007772156037390232,
    0.018137380480766296,
    0.01716497913002968,
    -0.022647062316536903,
    -0.05360885336995125,
    -0.022083351388573647,
    0.0024186696391552687,
    0.0245073065161705,
    0.008089243434369564,
    0.003565467894077301,
    -0.02786138281226158,
    -0.006317079067230225,
    -0.002624776214361191,
    0.011767453514039516,
    0.0008283899514935911,
    -0.013338795863091946,
    0.01130239199846983,
    -0.002538457978516817,
    -0.017207257449626923,
    -0.0015634153969585896,
    -0.0021209600381553173,
    -0.03432995826005936,
    -0.012408673763275146,
    0.016643548384308815,
    0.028918340802192688,
    -0.01629122905433178,
    0.013458584435284138,
    0.0008636218262836337,
    0.02073044702410698,
    -0.005341155454516411,
    0.019772140309214592,
    -0.019222522154450417,
    0.008878437802195549,
    0.002032880438491702,
    0.005200227722525597,
    -0.005869633983820677,
    0.02370402030646801,
    0.0029665257316082716,
    -0.004421602934598923,
    -0.005675858352333307,
    -0.01393069140613079,
    -0.0023270666133612394,
    -0.010752774775028229,
    0.010428640991449356,
    -0.0016884886426851153,
    0.009378730319440365,
    0.016516713425517082,
    -0.007314141374081373,
    -0.0006469456711784005,
    0.00878683477640152,
    0.02342216484248638,
    0.011929519474506378,
    -0.0013934214366599917,
    -0.0036958258133381605,
    0.011915426701307297,
    -0.011168510653078556,
    0.046055134385824203,
    -0.02390131726861,
    0.01097121275961399,
    -0.014409845694899559,
    -0.01660127006471157,
    -0.007173214107751846,
    -0.02312621660530567,
    -0.013761578127741814,
    -0.003780382452532649,
    -0.021547827869653702,
    0.03647205978631973,
    -0.01087256334722042,
    0.031962376087903976,
    0.03937516734004021,
    0.00839223712682724,
    0.013007615692913532,
    -0.040840812027454376,
    -0.0297075342386961,
    0.02371811307966709,
    0.00849793292582035,
    0.0013793286634609103,
    -0.01442393846809864,
    -0.040136177092790604,
    0.014628282748162746,
    -0.011182603426277637,
    0.010513197630643845,
    0.03714850917458534,
    0.001532587455585599,
    -0.01648852787911892,
    -0.014445077627897263,
    -0.01688312366604805,
    -0.0003824862651526928,
    0.01877155341207981,
    -0.0071943532675504684,
    0.0036077462136745453,
    -0.014445077627897263,
    -0.0034826728515326977,
    -0.004418079741299152,
    -0.02743859961628914,
    -0.011549015529453754,
    0.04365936666727066,
    -0.010055183432996273,
    -0.009815606288611889,
    -0.014170268550515175,
    -0.024042245000600815,
    0.005682904738932848,
    0.006764524150639772,
    0.015572497621178627,
    -0.0033752156887203455,
    -0.011267160065472126,
    0.03137047961354256,
    0.010358177125453949,
    0.026198437437415123,
    0.01130943838506937,
    0.016178486868739128,
    0.0033840236719697714,
    -0.009110968559980392,
    -0.0005117433029226959,
    0.009787420742213726,
    -0.0021526687778532505,
    0.03833230212330818,
    0.04622424766421318,
    -0.01579798199236393,
    0.011739267967641354,
    -0.04777444899082184,
    -0.011119185946881771,
    -0.04134815186262131,
    0.011647664941847324,
    -0.0018302969401702285,
    0.019673490896821022,
    -0.020913653075695038,
    0.016263043507933617,
    -0.005006452556699514,
    0.016418064013123512,
    0.026212530210614204,
    0.009808559902012348,
    -0.0002054459910141304,
    0.00932940561324358,
    0.004301814362406731,
    0.01827830821275711,
    0.024422749876976013,
    -0.00560187129303813,
    0.030750399455428123,
    0.00429829116910696,
    0.009251896291971207,
    -0.0068772658705711365,
    0.04050258919596672,
    0.010583661496639252,
    -0.011971797794103622,
    -0.010752774775028229,
    -0.007567811291664839,
    0.008124475367367268,
    0.004005866590887308,
    0.03176507726311684,
    -0.03385080397129059,
    0.0367257297039032,
    0.004788014572113752,
    0.030694028362631798,
    0.011591293849050999,
    0.008504979312419891,
    0.015671147033572197,
    0.020321756601333618,
    -0.006415728013962507,
    0.014600097201764584,
    -0.0029647641349583864,
    0.0034333481453359127,
    -0.0033857852686196566,
    0.022858453914523125,
    -0.0071450285613536835,
    0.003514381591230631,
    0.016150301322340965,
    0.02311212383210659,
    -0.04394122213125229,
    -0.01906750164926052,
    0.024070430546998978,
    -0.00560187129303813,
    0.01075982116162777,
    -0.017446834594011307,
    -0.0032061024103313684,
    -0.022548412904143333,
    0.006482668686658144,
    -0.034724555909633636,
    -0.007694646250456572,
    -0.014642375521361828,
    0.004248966462910175,
    0.008406329900026321,
    -0.01817965880036354,
    0.015332921408116817,
    -0.029989389702677727,
    0.01327537838369608,
    -0.033033426851034164,
    -0.018095102161169052,
    -0.01087256334722042,
    -0.00848384015262127,
    0.01087256334722042,
    0.007983547635376453,
    0.004044621717184782,
    -0.0038120911922305822,
    -0.024253636598587036,
    0.013409259729087353,
    0.003398116445168853,
    0.002929532201960683,
    -0.018250122666358948,
    -0.03709213808178902,
    0.02112504467368126,
    -0.020702261477708817,
    -0.006130349822342396,
    -0.001732528442516923,
    0.0009336452349089086,
    0.024126801639795303,
    0.009519658051431179,
    -0.00392483314499259,
    0.0038437999319285154,
    -0.0012516131391748786,
    0.019335264340043068,
    -0.00040208399877883494,
    0.004407510161399841,
    0.003107453230768442,
    0.01739046350121498,
    -0.0173763707280159,
    0.018630625680088997,
    -0.038755085319280624,
    -0.00015336884825956076,
    -0.021251879632472992,
    0.02191423997282982,
    0.01767231896519661,
    0.012394580990076065,
    0.009456240572035313,
    -0.014712839387357235,
    0.014001155272126198,
    -0.0040692840702831745,
    -0.0005359651986509562,
    0.003535520751029253,
    -0.0031603011302649975,
    0.02102639526128769,
    -0.009005272760987282,
    0.01609393022954464,
    0.008772742003202438,
    -0.007877851836383343,
    -0.019786233082413673,
    0.0016241903649643064,
    -0.025507893413305283,
    0.010069276206195354,
    0.0254938006401062,
    -0.002344682579860091,
    0.026536663994193077,
    -0.018940666690468788,
    -0.005422188900411129,
    -0.04887368530035019,
    0.011859056539833546,
    0.039657022804021835,
    0.024732790887355804,
    -0.006605980452150106,
    -0.009484426118433475,
    -0.009745142422616482,
    -0.005644149612635374,
    -0.023055752739310265,
    0.005143856629729271,
    -0.010935980826616287,
    0.0031215460039675236,
    -0.013317656703293324,
    -0.0056582423858344555,
    -0.006598934065550566,
    0.0006654424360021949,
    0.005623010452836752,
    -0.02666349895298481,
    -0.032131489366292953,
    0.011513783596456051,
    0.0001662505092099309,
    0.010146785527467728,
    -0.0004093505849596113,
    0.0252683162689209,
    -0.03238515928387642,
    -0.02743859961628914,
    -0.03108862414956093,
    0.017940081655979156,
    -0.01619257964193821,
    0.0194620992988348,
    0.023732205852866173,
    0.03655661642551422,
    0.038952384144067764,
    0.00022724573500454426,
    0.021998796612024307,
    0.021561920642852783,
    0.0027199024334549904,
    -0.0104709193110466,
    0.005640626419335604,
    0.013296517543494701,
    9.463066817261279e-05,
    -0.012218421325087547,
    0.0134867699816823,
    0.002977095078676939,
    0.013007615692913532,
    -0.014529634267091751,
    0.012422766536474228,
    0.02447912096977234,
    -0.012584833428263664,
    -0.008321774192154408,
    -0.023041659966111183,
    -0.04098173975944519,
    -0.0016303559532389045,
    0.015332921408116817,
    -0.013761578127741814,
    0.0389241985976696,
    -0.03072221390902996,
    -0.026395736262202263,
    0.013324703089892864,
    0.004143271129578352,
    0.022069258615374565,
    0.03712032362818718,
    0.01328242477029562,
    -0.0016717534745112062,
    0.02399996668100357,
    0.01837695762515068,
    0.015614775940775871,
    -0.01204226166009903,
    0.002286550123244524,
    -0.04523775354027748,
    -0.018799738958477974,
    0.011760407127439976,
    -0.010513197630643845,
    0.0183628648519516,
    0.00419964175671339,
    0.00466822599992156,
    -0.0072648171335458755,
    0.031144995242357254,
    -0.006834987550973892,
    -0.009801513515412807,
    0.0026441537775099277,
    -0.017925988882780075,
    -0.018743367865681648,
    -0.002332351403310895,
    -0.02951023541390896,
    -0.01599528081715107,
    -0.0014304149663075805,
    0.012105679139494896,
    0.001708746887743473,
    0.005612440872937441,
    -0.022759804502129555,
    -0.004403986968100071,
    0.011196696199476719,
    0.017404556274414062,
    0.043123841285705566,
    0.01319082174450159,
    0.018236029893159866,
    -0.0026793857105076313,
    0.017545484006404877,
    0.00044568348675966263,
    -0.00035496134660206735,
    0.010745728388428688,
    -0.003850846318528056,
    0.018982945010066032,
    0.018489699810743332,
    -0.03968520835042,
    -0.018207844346761703,
    0.035992905497550964,
    -0.016136208549141884,
    -0.03506278246641159,
    -0.02586021088063717,
    0.02805868163704872,
    0.02418317273259163,
    -0.00020368439436424524,
    -0.03562649339437485,
    -0.004132701549679041,
    -0.0213223434984684,
    0.007370512466877699,
    -0.015248364768922329,
    0.01698177307844162,
    0.01620667241513729,
    -0.002971810521557927,
    -0.017235442996025085,
    0.04078444093465805,
    0.01974395476281643,
    0.007250724360346794,
    0.0031884866766631603,
    -0.019236614927649498,
    0.011464458890259266,
    -0.01817965880036354,
    -0.03523189574480057,
    0.023534907028079033,
    0.017658226191997528,
    0.027790918946266174,
    -0.017911896109580994,
    0.014339381828904152,
    0.03266701474785805,
    0.004939511884003878,
    -0.01568523980677128,
    -0.009843791835010052,
    -0.024648234248161316,
    0.03852960094809532,
    -0.003290659049525857,
    0.013691114261746407,
    -0.02311212383210659,
    -0.03714850917458534,
    -0.0018637672765180469,
    -0.0083851907402277,
    -0.009512611664831638,
    -0.026311179623007774,
    0.009068690240383148,
    0.009780374355614185,
    -0.00654256297275424,
    -0.017799153923988342,
    -0.02064589038491249,
    -0.0041291783563792706,
    0.012169096618890762,
    -0.003056366927921772,
    -0.014050479978322983,
    -0.017728690057992935,
    0.014980602078139782,
    -0.04081262648105621,
    -0.0004234433581586927,
    -0.015953002497553825,
    -0.026522571220993996,
    0.004513205960392952,
    0.01159834023565054,
    -0.014402799308300018,
    -0.01827830821275711,
    0.03810681775212288,
    -0.011880195699632168,
    0.028890155255794525,
    0.0052284132689237595,
    0.004714027512818575,
    -0.037655849009752274,
    -0.006317079067230225,
    -0.011767453514039516,
    -0.011154417879879475,
    0.011076907627284527,
    -0.003359361318871379,
    -0.04453311488032341,
    -0.008279495872557163,
    -0.011859056539833546,
    0.013987062498927116,
    0.005915435496717691,
    -0.0041679334826767445,
    -0.011436273343861103,
    0.0009838506812229753,
    0.00784966628998518,
    -0.026733962818980217,
    0.011570154689252377,
    0.009308266453444958,
    -0.006623596418648958,
    -0.010724589228630066,
    0.014008201658725739,
    -0.005566639360040426,
    0.014402799308300018,
    -0.03365350514650345,
    0.0008059295942075551,
    -0.005813262891024351,
    -0.040925368666648865,
    -0.009716956876218319,
    -0.0003307394217699766,
    -0.0011106855235993862,
    0.018982945010066032,
    0.03743036463856697,
    0.015741610899567604,
    -0.011386948637664318,
    -0.016629455611109734,
    0.0288337841629982,
    0.015614775940775871,
    -0.025127388536930084,
    0.016502620652318,
    0.011429226957261562,
    0.009033458307385445,
    -0.0018866680329665542,
    -0.004206688143312931,
    -0.025944767519831657,
    -0.003135638777166605,
    0.04453311488032341,
    -0.018813831731677055,
    -0.0339917317032814,
    -0.0011009967420250177,
    0.02942567877471447,
    0.011823824606835842,
    -0.027114467695355415,
    -0.019081594422459602,
    -0.023859038949012756,
    -0.010682310909032822,
    -0.010499104857444763,
    -0.007962408475577831,
    0.01016792468726635,
    -0.00868818536400795,
    0.03142685070633888,
    -7.39869792596437e-05,
    0.01179563906043768,
    0.007102750241756439,
    0.02082909643650055,
    -0.011577201075851917,
    0.012105679139494896,
    0.004840862471610308,
    0.0016920118359848857,
    0.007469161879271269,
    -0.01371929980814457,
    -0.040728069841861725,
    0.003269519889727235,
    0.017108608037233353,
    0.015107437036931515,
    0.0014480309328064322,
    0.04909916967153549,
    -0.0028537835460156202,
    -0.018926573917269707,
    0.003487957641482353,
    -0.005753368604928255,
    0.008807973936200142,
    -0.0015228986740112305,
    0.022196093574166298,
    -0.023238958790898323,
    -0.015628868713974953,
    -0.007729877717792988,
    0.013240146450698376,
    -0.0009336452349089086,
    -0.007779202423989773,
    0.03585197776556015,
    -0.023436257615685463,
    0.00654608616605401,
    -0.024958275258541107,
    0.002586021088063717,
    0.0011617717100307345,
    -0.009209617972373962,
    0.01915205828845501,
    -0.00849088653922081,
    0.014586004428565502,
    0.025352872908115387,
    -0.01796826720237732,
    0.0071062734350562096,
    -0.032159674912691116,
    0.02311212383210659,
    -0.0259870458394289,
    -0.018320586532354355,
    0.01411389745771885,
    -0.011224881745874882,
    -0.00196417816914618,
    -0.007162644527852535,
    0.035795606672763824,
    0.009118014946579933,
    -0.0037240113597363234,
    -0.01465646829456091,
    -0.028002310544252396,
    -0.04619606211781502,
    0.0024257160257548094,
    -0.007990594021975994,
    -0.0219283327460289,
    0.0011265398934483528,
    -0.01383204199373722,
    0.021153230220079422,
    -0.007920130155980587,
    -0.027607712894678116,
    -0.006461529526859522,
    -0.006334695033729076,
    0.0008662642212584615,
    -0.0007755421102046967,
    0.00313740037381649,
    -0.027579527348279953,
    -0.015431570820510387,
    -0.010329991579055786,
    -0.024014059454202652,
    0.01095711998641491,
    0.20225927233695984,
    0.003752196906134486,
    0.01916615106165409,
    0.020688168704509735,
    0.01442393846809864,
    0.017813246697187424,
    0.00345624890178442,
    0.01402934081852436,
    0.011048722080886364,
    0.009886070154607296,
    0.031173180788755417,
    -0.008829113095998764,
    -0.0179823599755764,
    -0.0007469161646440625,
    0.005989422090351582,
    -0.009907209314405918,
    -0.02832644432783127,
    -0.057047486305236816,
    -0.010442733764648438,
    -0.006095117889344692,
    0.0048584784381091595,
    0.011098046787083149,
    -0.015417478047311306,
    -0.032046932727098465,
    0.01234525628387928,
    -0.005270691588521004,
    0.0008728702086955309,
    0.01640397123992443,
    0.026987632736563683,
    0.006489715073257685,
    -0.020688168704509735,
    0.013867273926734924,
    -0.005217843689024448,
    -0.016474435105919838,
    -0.034217216074466705,
    -0.01180973183363676,
    0.01190133485943079,
    -0.018517885357141495,
    0.018785646185278893,
    0.04134815186262131,
    0.01826421543955803,
    -0.03585197776556015,
    0.016432156786322594,
    -0.02625480853021145,
    0.0023094508796930313,
    -0.020279480144381523,
    -0.0063981120474636555,
    0.024014059454202652,
    0.0021720463410019875,
    0.010329991579055786,
    -0.02914382331073284,
    -0.002615968231111765,
    0.032751571387052536,
    0.0007266578613780439,
    -0.003604223020374775,
    -0.021054580807685852,
    -0.02084318920969963,
    0.012218421325087547,
    0.015755703672766685,
    0.010294759646058083,
    -0.029172008857131004,
    -0.009230757132172585,
    0.009836745448410511,
    0.0012419243576005101,
    -0.03199056163430214,
    0.017052236944437027,
    -0.024070430546998978,
    -0.0035002888180315495,
    0.0026230146177113056,
    -0.003176155500113964,
    -0.027875475585460663,
    -0.034414514899253845,
    -0.03210330381989479,
    -0.011238974519073963,
    -0.014910138212144375,
    -0.03455544263124466,
    0.02082909643650055,
    0.015614775940775871,
    0.016911309212446213,
    0.0267480555921793,
    -0.012591879814863205,
    -0.0011564870364964008,
    -0.008279495872557163,
    0.00738460524007678,
    -0.020209016278386116,
    -0.01905340887606144,
    0.010041090659797192,
    -0.02667759172618389,
    -0.0040692840702831745,
    -0.008533164858818054,
    -0.024662327021360397,
    -0.029369307681918144,
    0.016418064013123512,
    0.024549584835767746,
    -0.0004470046842470765,
    0.0060387467965483665,
    0.01777096837759018,
    0.02319668047130108,
    -0.021195508539676666,
    0.005175565369427204,
    -0.04836634546518326,
    0.03824774548411369,
    0.03108862414956093,
    0.01002699788659811,
    -0.018348772078752518,
    -0.005013498943299055,
    -0.02161829173564911,
    -0.0019588933791965246,
    -0.0033382221590727568,
    0.004544914700090885,
    -0.012591879814863205,
    -0.02664940617978573,
    0.009970626793801785,
    0.008899576961994171,
    0.0006645616376772523,
    0.007025239989161491,
    -0.00748325465247035,
    0.016418064013123512,
    -0.0044392189010977745,
    0.003847323125228286,
    0.00637345016002655,
    -0.008300635032355785,
    0.0023006428964436054,
    -0.01944800652563572,
    -0.02319668047130108,
    -0.015332921408116817,
    -0.00513681024312973,
    -0.0001941057271324098,
    -0.010449780151247978,
    0.01729181408882141,
    -0.0012903681490570307,
    -0.03785314783453941,
    0.03001757524907589,
    -0.005157949402928352,
    0.007152074947953224,
    -0.01630532182753086,
    -0.002258364576846361,
    -0.011577201075851917,
    -0.0017571907956153154,
    0.01729181408882141,
    -0.03526008129119873,
    0.010541383177042007,
    0.0035408055409789085,
    -0.004706981126219034,
    0.002725187223404646,
    -0.01235230267047882,
    0.00849088653922081,
    0.024070430546998978,
    0.005031114909797907,
    -0.010541383177042007,
    0.0036746866535395384,
    -0.01719316467642784,
    -0.014543727040290833,
    -0.03621838986873627,
    0.01817965880036354,
    -0.029482049867510796,
    -0.0054468512535095215,
    -0.02934112213551998,
    0.01739046350121498,
    0.0007046379032544792,
    -0.019588934257626534,
    -0.006746908184140921,
    -0.008807973936200142,
    0.006577794905751944,
    -0.02390131726861,
    -0.008512025699019432,
    -0.1789216548204422,
    0.005964759737253189,
    0.026931261643767357,
    -0.04081262648105621,
    0.007293002214282751,
    -0.0025736899115145206,
    0.00449206680059433,
    -0.009576029144227505,
    -0.024310007691383362,
    -0.027790918946266174,
    0.020716354250907898,
    -0.009019365534186363,
    0.008638860657811165,
    -0.030694028362631798,
    -0.03032761625945568,
    0.0010543144308030605,
    0.0018796216463670135,
    0.0018989992095157504,
    0.019490284845232964,
    0.020364034920930862,
    0.027382228523492813,
    -0.023633556440472603,
    0.0008134163799695671,
    -0.0052284132689237595,
    -0.011069861240684986,
    -0.016629455611109734,
    -0.0019500853959470987,
    0.02271752618253231,
    -0.008117428980767727,
    -0.032046932727098465,
    -0.0257615614682436,
    -0.016530806198716164,
    0.011725175194442272,
    0.013648836873471737,
    0.012521415948867798,
    0.018193751573562622,
    0.026888983324170113,
    -0.02951023541390896,
    -0.016728105023503304,
    0.015544312074780464,
    0.03675391525030136,
    0.02409861609339714,
    0.006690537091344595,
    -0.008314727805554867,
    -0.017841432243585587,
    0.011732221581041813,
    0.00021469435887411237,
    -0.038275931030511856,
    0.03819137439131737,
    -0.008744556456804276,
    0.012302977964282036,
    0.005883726757019758,
    0.018010545521974564,
    -0.012218421325087547,
    0.04227827489376068,
    -0.008032872341573238,
    0.008554304018616676,
    0.004421602934598923,
    0.03407628834247589,
    -0.002918962622061372,
    -0.024366378784179688,
    -0.02863648533821106,
    0.012894873507320881,
    -0.019588934257626534,
    -0.008025825954973698,
    -0.03878327086567879,
    -0.02005399577319622,
    0.0011256590951234102,
    -0.008624767884612083,
    0.010654125362634659,
    0.009470333345234394,
    0.009251896291971207,
    -0.02113913744688034,
    0.009843791835010052,
    0.01130239199846983,
    0.04078444093465805,
    0.0149665093049407,
    0.009745142422616482,
    0.025437429547309875,
    0.0025137958582490683,
    -0.021082766354084015,
    0.015642961487174034,
    -0.00014852445747237653,
    0.004086900036782026,
    0.010189063847064972,
    0.0015563690103590488,
    -0.01233820989727974,
    -0.006933636963367462,
    -0.024338193237781525,
    0.015544312074780464,
    -0.010456826537847519,
    -0.01826421543955803,
    0.011746314354240894,
    -0.01777096837759018,
    0.004999406170099974,
    0.015473848208785057,
    -0.019997624680399895,
    -0.0007130054873414338,
    0.01235230267047882,
    -0.01847560703754425,
    -0.0029383401852101088,
    0.026987632736563683,
    -0.030271245166659355,
    0.007779202423989773,
    0.056230105459690094,
    0.014409845694899559,
    -0.03740217909216881,
    -0.016051651909947395,
    0.006919544190168381,
    -0.016573084518313408,
    -0.006496761459857225,
    0.00017417767958249897,
    0.02250613458454609,
    0.02133643627166748,
    -0.013155589811503887,
    0.012620065361261368,
    0.014698746614158154,
    -0.015389292500913143,
    0.022365206852555275,
    0.02470460534095764,
    0.03001757524907589,
    -0.02329532988369465,
    -0.018898388370871544,
    0.02211153693497181,
    -0.01588253863155842,
    -0.015628868713974953,
    -0.10146786272525787,
    -0.018743367865681648,
    0.006183197721838951,
    0.020307663828134537,
    -0.015981188043951988,
    0.009512611664831638,
    -0.0071450285613536835,
    -0.00011197137064300478,
    0.004382847808301449,
    0.009371683932840824,
    -0.02766408398747444,
    0.0033435069490224123,
    -0.010153831914067268,
    0.028072774410247803,
    -0.01926480047404766,
    -0.03850141540169716,
    -0.01046387292444706,
    -0.016840845346450806,
    -0.013796810060739517,
    0.017813246697187424,
    0.0032149103935807943,
    0.009977673180401325,
    0.004467404447495937,
    0.0051896581426262856,
    0.0069864848628640175,
    0.003103930037468672,
    -0.02301347441971302,
    0.025620633736252785,
    0.008441561833024025,
    0.015304735861718655,
    0.029594792053103447,
    -0.006250138394534588,
    0.009463286958634853,
    0.0005201108870096505,
    0.01358541939407587,
    -0.011062814854085445,
    -0.008434515446424484,
    -0.022773897275328636,
    0.01865881122648716,
    -0.013902505859732628,
    0.016277136281132698,
    0.016812659800052643,
    -0.001216381206177175,
    0.007560764905065298,
    -0.00932940561324358,
    -0.014839674346148968,
    -0.03478092700242996,
    0.03427358716726303,
    0.01516380812972784,
    -0.0219283327460289,
    -0.010442733764648438,
    -0.02309803105890751,
    -0.02191423997282982,
    -0.006380496546626091,
    0.013331749476492405,
    -0.024634141474962234,
    0.0060281772166490555,
    0.005443328060209751,
    -0.01086551696062088,
    -0.003903693985193968,
    -0.004400463774800301,
    0.007976501248776913,
    0.005369341000914574,
    0.011224881745874882,
    0.0064403903670609,
    0.008547257632017136,
    -0.003269519889727235,
    -0.003681733040139079,
    0.014952416531741619,
    -0.015375199727714062,
    -0.016544898971915245,
    0.022379299625754356,
    -0.03418903052806854,
    0.0071555981412529945,
    -0.040925368666648865,
    -0.01679856702685356,
    -0.014586004428565502,
    -0.02694535441696644,
    -0.0029630025383085012,
    -0.01956074871122837,
    0.001513209892436862,
    0.007870805449783802,
    -0.017799153923988342,
    -0.017108608037233353,
    -0.012401627376675606,
    0.001835581730119884,
    -0.0016083359951153398,
    0.01130943838506937,
    0.014994694851338863,
    -0.02717083878815174,
    0.04329295456409454,
    -0.011055768467485905,
    0.028622392565011978,
    -0.00794831570237875,
    -0.007092180661857128,
    -0.013606558553874493,
    -0.007666460704058409,
    -0.009547843597829342,
    0.0009785658912733197,
    0.015206086449325085,
    -0.034724555909633636,
    -0.0242818221449852,
    -0.07655186206102371,
    0.02556426450610161,
    0.022196093574166298,
    -0.01243685930967331,
    0.00815266091376543,
    -0.028974711894989014,
    0.002961240941658616,
    0.00014334978186525404,
    0.009470333345234394,
    0.01225365325808525,
    -0.03373806178569794,
    0.003614792600274086,
    0.0060880715027451515,
    -0.010731635615229607,
    -0.009745142422616482,
    -0.013430398888885975,
    0.03557012230157852,
    0.018997037783265114,
    0.027100374922156334,
    -0.0010322945890948176,
    0.009977673180401325,
    -0.006031700409948826,
    0.024056337773799896,
    0.019983531907200813,
    -0.04377210885286331,
    -0.023337608203291893,
    -0.0066764443181455135,
    0.03962883725762367,
    -0.018024638295173645,
    -0.007018193602561951,
    0.022167908027768135,
    -0.002344682579860091,
    -0.010943027213215828,
    0.013416306115686893,
    -0.01026657409965992,
    -0.014881952665746212,
    0.029876647517085075,
    -0.0007451545679941773,
    0.03517552465200424,
    0.010731635615229607,
    -0.015191993676126003,
    -0.008631814271211624,
    0.008018779568374157,
    0.025832025334239006,
    -0.024859625846147537,
    0.01630532182753086,
    0.005524361040443182,
    -0.0071943532675504684,
    0.01856016181409359,
    0.014078665524721146,
    0.05442623421549797,
    -0.0014453885378316045,
    -0.026395736262202263,
    -0.04038984701037407,
    0.004523775540292263,
    -0.008772742003202438,
    0.009061643853783607,
    -0.006761000957340002,
    -0.018095102161169052,
    -0.0016048128018155694,
    0.035795606672763824,
    0.012768039479851723,
    0.028396908193826675,
    0.014698746614158154,
    0.004421602934598923,
    -0.031257737427949905,
    -0.030863141641020775,
    0.010555475950241089,
    -0.010012905113399029,
    -0.028185516595840454,
    -0.024070430546998978,
    -0.01916615106165409,
    0.020885467529296875,
    0.000871549011208117,
    0.012098632752895355,
    -0.006683490704745054,
    0.004132701549679041,
    -0.01864471845328808,
    -0.02645210735499859,
    0.04213734716176987,
    0.017841432243585587,
    -0.01442393846809864,
    0.003625362180173397,
    0.013613604940474033,
    0.01786961778998375,
    -0.0014630045043304563,
    -0.02805868163704872,
    0.004876094404608011,
    0.0070358095690608025,
    0.017108608037233353,
    -0.011471505276858807,
    0.013853181153535843,
    -0.00024133847909979522,
    0.011429226957261562,
    -0.001981794135645032,
    0.006299463100731373,
    -0.010492058470845222,
    -0.010541383177042007,
    0.04219371825456619,
    -0.004263059236109257,
    0.02648029290139675,
    -0.005517314653843641,
    0.004534345120191574,
    0.005545500200241804,
    -0.014896045438945293,
    -0.005221366882324219,
    -0.021561920642852783,
    -0.015234271995723248,
    0.002314735669642687,
    0.02457777038216591,
    0.015516126528382301,
    -0.00963240023702383,
    -0.018151473253965378,
    0.01526245754212141,
    -0.025042831897735596,
    0.01630532182753086,
    0.0173763707280159,
    -0.005210797302424908,
    -0.0029647641349583864,
    0.020293571054935455,
    0.005774507764726877,
    0.001143275061622262,
    0.03523189574480057,
    0.0032677582930773497,
    0.02044859156012535,
    0.04120722413063049,
    0.016544898971915245,
    -0.02607160247862339,
    0.03568286448717117,
    -0.01016792468726635,
    -0.0069864848628640175,
    0.002106867264956236,
    -0.018898388370871544,
    -0.017024051398038864,
    -0.01739046350121498,
    -0.009977673180401325,
    -0.010717542842030525,
    -0.002892538672313094,
    -0.010252481326460838,
    0.08962994068861008,
    -0.0007315022521652281,
    -0.01847560703754425,
    -0.006281847134232521,
    -0.0021121520549058914,
    0.018588347360491753,
    -0.0004734286048915237,
    -0.00017814127204474062,
    -0.01225365325808525,
    -0.002422192832455039,
    -0.03404810279607773,
    0.003970634657889605,
    -0.043715737760066986,
    -0.014924230985343456,
    -0.023548999801278114,
    0.006454483140259981,
    -0.016516713425517082,
    0.003748673712834716,
    0.0034386329352855682,
    0.0059365746565163136,
    0.018193751573562622,
    0.016939494758844376,
    -0.0025419811718165874,
    0.012521415948867798,
    -0.0025895442813634872,
    0.0009239564533345401,
    0.043800294399261475,
    0.034809112548828125,
    0.0016426871297881007,
    -0.04760533943772316,
    0.03852960094809532,
    0.00015017595433164388,
    -0.036782100796699524,
    -0.013063986785709858,
    -0.005115671083331108,
    0.020223109051585197,
    0.008321774192154408,
    -0.008871391415596008,
    0.018038731068372726,
    0.0169958658516407,
    0.0014920707326382399,
    0.0008539331029169261,
    -0.009512611664831638,
    -0.030834956094622612,
    0.015671147033572197,
    0.002718140836805105,
    -0.0029471481684595346,
    -0.006944206543266773,
    -0.037768591195344925
  ]
}
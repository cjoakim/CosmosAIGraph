{
  "classifiers": [],
  "description": "## rocketchat_api\npython api wrapper for [rocket.chat](https://developer.rocket.chat/reference/api/rest-api/)\n\n[![codacy badge](https://api.codacy.com/project/badge/grade/fff725d9a0974c6597c2dd007daaa86e)](https://www.codacy.com/app/jadolg/rocketchat_api?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=jadolg/rocketchat_api&amp;utm_campaign=badge_grade) ![test and publish](https://github.com/jadolg/rocketchat_api/workflows/test%20and%20publish/badge.svg?branch=master) [![codecov](https://codecov.io/gh/jadolg/rocketchat_api/branch/master/graph/badge.svg)](https://codecov.io/gh/jadolg/rocketchat_api) ![pypi](https://img.shields.io/pypi/v/rocketchat_api.svg) ![](https://img.shields.io/pypi/dm/rocketchat-api.svg)\n\n### installation\n- from pypi:\n`pip3 install rocketchat_api`\n- from github:\nclone our repository and `python3 setup.py install`\n\n### requirements\n- [requests](https://github.com/kennethreitz/requests)\n\n### usage\n```python\nfrom pprint import pprint\nfrom rocketchat_api.rocketchat import rocketchat\n\nproxy_dict = {\n    \"http\"  : \"http://127.0.0.1:3128\",\n    \"https\" : \"https://127.0.0.1:3128\",\n}\n\nrocket = rocketchat('user', 'pass', server_url='https://demo.rocket.chat', proxies=proxy_dict)\npprint(rocket.me().json())\npprint(rocket.channels_list().json())\npprint(rocket.chat_post_message('good news everyone!', channel='general', alias='farnsworth').json())\npprint(rocket.channels_history('general', count=5).json())\n```\n\n*note*: every method returns a [requests](https://github.com/kennethreitz/requests) response object.\n\n#### connection pooling\nif you are going to make a couple of request, you can user connection pooling provided by `requests`. this will save significant time by avoiding re-negotiation of tls (ssl) with the chat server on each call.\n\n```python\nfrom requests import sessions\nfrom pprint import pprint\nfrom rocketchat_api.rocketchat import rocketchat\n\nwith sessions.session() as session:\n    rocket = rocketchat('user', 'pass', server_url='https://demo.rocket.chat', session=session)\n    pprint(rocket.me().json())\n    pprint(rocket.channels_list().json())\n    pprint(rocket.chat_post_message('good news everyone!', channel='general', alias='farnsworth').json())\n    pprint(rocket.channels_history('general', count=5).json())\n```\n \n#### using a token for authentication instead of user and password\n\n```python\nfrom pprint import pprint\nfrom rocketchat_api.rocketchat import rocketchat\n\nrocket = rocketchat(user_id='wpxgmq64s3bxdcrb6', auth_token='jvnyoyw2f0ykwtifs06fk21hbrbbuv7zi43hmknzi_s', server_url='https://demo.rocket.chat')\npprint(rocket.me().json())\n```\n\n### method parameters\nonly required parameters are explicit on the rocketchat class but you can still use all other parameters. for a detailed parameters list check the [rocket chat api](https://developer.rocket.chat/reference/api/rest-api)\n\n### api coverage\nmost of the api methods are already implemented. if you are interested in a specific call just open an issue or open a pull request.\n\n### tests\nwe are actively testing :) \n\ntests run on a rocket.chat docker container so install docker and docker-compose. \n1. to start test server do `docker-compose up` and to take test server down `docker-compose down`\n2. to run the tests run `pytest` \n\n### contributing\nyou can contribute by doing pull requests. (it may take a while to merge your code but if it's good it will be merged). please, try to implement tests for all your code and use a pep8 compliant code style.\n\nreporting bugs and asking for features is also contributing ;) feel free to help us grow by registering issues.\n\nwe hang out [here](https://open.rocket.chat/channel/python_rocketchat_api) if you want to talk. \n\n### supporters\n![jetbrains](https://www.jetbrains.com/company/brand/img/logo6.svg) [jetbrains](https://www.jetbrains.com/) supports this project by providing us with licenses for their fantastic products.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "rocketchat-api",
  "package_url": "https://pypi.org/project/rocketchat-API/",
  "project_url": "https://pypi.org/project/rocketchat-API/",
  "project_urls": {
    "Homepage": "https://github.com/jadolg/rocketchat_API"
  },
  "release_url": "https://pypi.org/project/rocketchat-API/1.31.0/",
  "requires_dist": [
    "requests",
    "packaging"
  ],
  "requires_python": "",
  "summary": "python api wrapper for rocket.chat",
  "version": "1.31.0",
  "releases": [],
  "developers": [
    "diazorozcoj@gmail.com"
  ],
  "kwds": "python_rocketchat_api rocketchat_api badge_grade badge rocketchat",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_rocketchat_api",
  "homepage": "https://github.com/jadolg/rocketchat_api",
  "release_count": 81,
  "dependency_ids": [
    "pypi_packaging",
    "pypi_requests"
  ]
}
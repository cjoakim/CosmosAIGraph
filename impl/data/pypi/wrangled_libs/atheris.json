{
  "classifiers": [],
  "description": "a coverage-guided fuzzer for python and python extensions.\n# atheris: a coverage-guided, native python fuzzer\n\natheris is a coverage-guided python fuzzing engine. it supports fuzzing of python code, but also native extensions written for cpython. atheris is based off of libfuzzer. when fuzzing native code, atheris can be used in combination with address sanitizer or undefined behavior sanitizer to catch extra bugs.\n\n## installation instructions\n\natheris supports linux (32- and 64-bit) and mac os x, python versions 3.6-3.10.\n\nyou can install prebuilt versions of atheris with pip:\n\n```bash\npip3 install atheris\n```\n\nthese wheels come with a built-in libfuzzer, which is fine for fuzzing python\ncode. if you plan to fuzz native extensions, you may need to build from source\nto ensure the libfuzzer version in atheris matches your clang version.\n\n### building from source\n\natheris relies on libfuzzer, which is distributed with clang. if you have a sufficiently new version of `clang` on your path, installation from source is as simple as:\n\n```bash\n# build latest release from source\npip3 install --no-binary atheris atheris\n# build development code from source\ngit clone https://github.com/google/atheris.git\ncd atheris\npip3 install .\n```\n\nif you don't have `clang` installed or it's too old, you'll need to download and build the latest version of llvm. follow the instructions in installing against new llvm below.\n\n#### mac\n\napple clang doesn't come with libfuzzer, so you'll need to install a new version of llvm from head. follow the instructions in installing against new llvm below.\n\n#### installing against new llvm\n\n```bash\n# building llvm\ngit clone https://github.com/llvm/llvm-project.git\ncd llvm-project\nmkdir build\ncd build\ncmake -dllvm_enable_projects='clang;compiler-rt' -g \"unix makefiles\" ../llvm\nmake -j 10  # this step is very slow\n\n# installing atheris\nclang_bin=\"$(pwd)/bin/clang\" pip3 install <whatever>\n```\n\n## using atheris\n\n### example\n\n```python\n#!/usr/bin/python3\n\nimport atheris\n\nwith atheris.instrument_imports():\n  import some_library\n  import sys\n\ndef testoneinput(data):\n  some_library.parse(data)\n\natheris.setup(sys.argv, testoneinput)\natheris.fuzz()\n```\n\nwhen fuzzing python, atheris will report a failure if the python code under test throws an uncaught exception.\n\n### python coverage\n\natheris collects python coverage information by instrumenting bytecode.\nthere are 3 options for adding this instrumentation to the bytecode:\n\n - you can instrument the libraries you import:\n\n   ```python\n   with atheris.instrument_imports():\n     import foo\n     from bar import baz\n   ```\n   this will cause instrumentation to be added to `foo` and `bar`, as well as\n   any libraries they import.\n - or, you can instrument individual functions:\n\n   ```python\n   @atheris.instrument_func\n   def my_function(foo, bar):\n     print(\"instrumented\")\n   ```\n - or finally, you can instrument everything:\n\n   ```python\n   atheris.instrument_all()\n   ```\n   put this right before `atheris.setup()`. this will find every python function\n   currently loaded in the interpreter, and instrument it.\n   this might take a while.\n\natheris can additionally instrument regular expression checks, e.g. `re.search`.\nto enable this feature, you will need to add:\n`atheris.enabled_hooks.add(\"regex\")`\nto your script before your code calls `re.compile`.\ninternally this will import the `re` module and instrument the necessary functions.\nthis is currently an experimental feature.\n\nsimilarly, atheris can instrument str methods; currently only `str.startswith`\nand `str.endswith` are supported. to enable this feature, add\n`atheris.enabled_hooks.add(\"str\")`. this is currently an experimental feature.\n\n#### why am i getting \"no interesting inputs were found\"?\n\nyou might see this error:\n\n```\nerror: no interesting inputs were found. is the code instrumented for coverage? exiting.\n```\n\nyou'll get this error if the first 2 calls to `testoneinput` didn't produce any\ncoverage events. even if you have instrumented some python code,\nthis can happen if the instrumentation isn't reached in those first 2 calls.\n(for example, because you have a nontrivial `testoneinput`). you can resolve\nthis by adding an `atheris.instrument_func` decorator to `testoneinput`,\nusing `atheris.instrument_all()`, or moving your `testoneinput` function into an\ninstrumented module.\n\n\n### visualizing python code coverage\nexamining which lines are executed is helpful for understanding the\neffectiveness of your fuzzer. atheris is compatible with\n[`coverage.py`](https://coverage.readthedocs.io/): you can run your fuzzer using\nthe `coverage.py` module as you would for any other python program. here's an\nexample:\n\n```bash\npython3 -m coverage run your_fuzzer.py -atheris_runs=10000  # times to run\npython3 -m coverage html\n(cd htmlcov && python3 -m http.server 8000)\n```\n\ncoverage reports are only generated when your fuzzer exits gracefully. this\nhappens if:\n\n - you specify `-atheris_runs=<number>`, and that many runs have elapsed.\n - your fuzzer exits by python exception.\n - your fuzzer exits by `sys.exit()`.\n\nno coverage report will be generated if your fuzzer exits due to a\ncrash in native code, or due to libfuzzer's `-runs` flag (use `-atheris_runs`).\nif your fuzzer exits via other methods, such as sigint (ctrl+c), atheris will\nattempt to generate a report but may be unable to (depending on your code).\nfor consistent reports, we recommend always using\n`-atheris_runs=<number>`.\n\nif you'd like to examine coverage when running with your corpus, you can do\nthat with the following command:\n\n```\npython3 -m coverage run your_fuzzer.py corpus_dir/* -atheris_runs=$(( 1 + $(ls corpus_dir | wc -l) ))\n```\n\nthis will cause atheris to run on each file in `<corpus-dir>`, then exit.\nnote: atheris use empty data set as the first input even if there is no empty file in `<corpus_dir>`.\nimportantly, if you leave off the `-atheris_runs=$(ls corpus_dir | wc -l)`, no\ncoverage report will be generated.\n\nusing coverage.py will significantly slow down your fuzzer, so only use it for\nvisualizing coverage; don't use it all the time.\n\n### fuzzing native extensions\n\nin order for fuzzing native extensions to be effective, your native extensions\nmust be instrumented. see [native extension fuzzing](https://github.com/google/atheris/blob/master/native_extension_fuzzing.md)\nfor instructions.\n\n### structure-aware fuzzing\n\natheris is based on a coverage-guided mutation-based fuzzer (libfuzzer). this\nhas the advantage of not requiring any grammar definition for generating inputs,\nmaking its setup easier. the disadvantage is that it will be harder for the\nfuzzer to generate inputs for code that parses complex data types. often the\ninputs will be rejected early, resulting in low coverage.\n\natheris supports custom mutators\n[(as offered by libfuzzer)](https://github.com/google/fuzzing/blob/master/docs/structure-aware-fuzzing.md)\nto produce grammar-aware inputs.\n\nexample (atheris-equivalent of the\n[example in the libfuzzer docs](https://github.com/google/fuzzing/blob/master/docs/structure-aware-fuzzing.md#example-compression)):\n\n```python\n@atheris.instrument_func\ndef testoneinput(data):\n  try:\n    decompressed = zlib.decompress(data)\n  except zlib.error:\n    return\n\n  if len(decompressed) < 2:\n    return\n\n  try:\n    if decompressed.decode() == 'fu':\n      raise runtimeerror('boom')\n  except unicodedecodeerror:\n    pass\n```\n\nto reach the `runtimeerror` crash, the fuzzer needs to be able to produce inputs\nthat are valid compressed data and satisfy the checks after decompression.\nit is very unlikely that atheris will be able to produce such inputs: mutations\non the input data will most probably result in invalid data that will fail at\ndecompression-time.\n\nto overcome this issue, you can define a custom mutator function (equivalent to\n`llvmfuzzercustommutator`).\nthis example produces valid compressed data. to enable atheris to make use of\nit, pass the custom mutator function to the invocation of `atheris.setup`.\n\n```python\ndef custommutator(data, max_size, seed):\n  try:\n    decompressed = zlib.decompress(data)\n  except zlib.error:\n    decompressed = b'hi'\n  else:\n    decompressed = atheris.mutate(decompressed, len(decompressed))\n  return zlib.compress(decompressed)\n\natheris.setup(sys.argv, testoneinput, custom_mutator=custommutator)\natheris.fuzz()\n```\n\nas seen in the example, the custom mutator may request atheris to mutate data\nusing `atheris.mutate()` (this is equivalent to `llvmfuzzermutate`).\n\nyou can experiment with [custom_mutator_example.py](example_fuzzers/custom_mutator_example.py)\nand see that without the mutator atheris would not be able to find the crash,\nwhile with the mutator this is achieved in a matter of seconds.\n\n```shell\n$ python3 example_fuzzers/custom_mutator_example.py --no_mutator\n[...]\n#2      inited cov: 2 ft: 2 corp: 1/1b exec/s: 0 rss: 37mb\n#524288 pulse  cov: 2 ft: 2 corp: 1/1b lim: 4096 exec/s: 262144 rss: 37mb\n#1048576        pulse  cov: 2 ft: 2 corp: 1/1b lim: 4096 exec/s: 349525 rss: 37mb\n#2097152        pulse  cov: 2 ft: 2 corp: 1/1b lim: 4096 exec/s: 299593 rss: 37mb\n#4194304        pulse  cov: 2 ft: 2 corp: 1/1b lim: 4096 exec/s: 279620 rss: 37mb\n[...]\n\n$ python3 example_fuzzers/custom_mutator_example.py\n[...]\ninfo: found llvmfuzzercustommutator (0x7f9c989fb0d0). disabling -len_control by default.\n[...]\n#2      inited cov: 2 ft: 2 corp: 1/1b exec/s: 0 rss: 37mb\n#3      new    cov: 4 ft: 4 corp: 2/11b lim: 4096 exec/s: 0 rss: 37mb l: 10/10 ms: 1 custom-\n#12     new    cov: 5 ft: 5 corp: 3/21b lim: 4096 exec/s: 0 rss: 37mb l: 10/10 ms: 7 custom-crossover-custom-crossover-custom-changebit-custom-\n === uncaught python exception: ===\nruntimeerror: boom\ntraceback (most recent call last):\n  file \"example_fuzzers/custom_mutator_example.py\", line 62, in testoneinput\n    raise runtimeerror('boom')\n[...]\n```\n\ncustom crossover functions (equivalent to `llvmfuzzercustomcrossover`) are also\nsupported. you can pass the custom crossover function to the invocation of\n`atheris.setup`. see its usage in [custom_crossover_fuzz_test.py](src/custom_crossover_fuzz_test.py).\n\n#### structure-aware fuzzing with protocol buffers\n\n[libprotobuf-mutator](https://github.com/google/libprotobuf-mutator) has\nbindings to use it together with atheris to perform structure-aware fuzzing\nusing protocol buffers.\n\nsee the documentation for\n[atheris_libprotobuf_mutator](contrib/libprotobuf_mutator/readme.md).\n\n## integration with oss-fuzz\n\natheris is fully supported by [oss-fuzz](https://github.com/google/oss-fuzz), google's continuous fuzzing service for open source projects. for integrating with oss-fuzz, please see [https://google.github.io/oss-fuzz/getting-started/new-project-guide/python-lang](https://google.github.io/oss-fuzz/getting-started/new-project-guide/python-lang).\n\n## api\n\nthe `atheris` module provides three key functions: `instrument_imports()`, `setup()` and `fuzz()`.\n\nin your source file, import all libraries you wish to fuzz inside a `with atheris.instrument_imports():`-block, like this:\n\n```python\n# library_a will not get instrumented\nimport library_a\n\nwith atheris.instrument_imports():\n    # library_b will get instrumented\n    import library_b\n```\n\ngenerally, it's best to import `atheris` first and then import all other libraries inside of a `with atheris.instrument_imports()` block.\n\nnext, define a fuzzer entry point function and pass it to `atheris.setup()` along with the fuzzer's arguments (typically `sys.argv`). finally, call `atheris.fuzz()` to start fuzzing. you must call `atheris.setup()` before `atheris.fuzz()`.\n\n#### `instrument_imports(include=[], exclude=[])`\n- `include`: a list of fully-qualified module names that shall be instrumented.\n- `exclude`: a list of fully-qualified module names that shall not be instrumented.\n\nthis should be used together with a `with`-statement. all modules imported in\nsaid statement will be instrumented. however, because python imports all modules\nonly once, this cannot be used to instrument any previously imported module,\nincluding modules required by atheris. to add coverage to those modules, use\n`instrument_all()` instead.\n\na full list of unsupported modules can be retrieved as follows:\n\n```python\nimport sys\nimport atheris\nprint(sys.modules.keys())\n```\n\n\n#### `instrument_func(func)`\n - `func`: the function to instrument.\n\nthis will instrument the specified python function and then return `func`. this\nis typically used as a decorator, but can be used to instrument individual\nfunctions too. note that the `func` is instrumented in-place, so this will\naffect all call points of the function.\n\nthis cannot be called on a bound method - call it on the unbound version.\n\n#### `instrument_all()`\n\nthis will scan over all objects in the interpreter and call `instrument_func` on\nevery python function. this works even on core python interpreter functions,\nsomething which `instrument_imports` cannot do.\n\nthis function is experimental.\n\n\n#### `setup(args, test_one_input, internal_libfuzzer=none)`\n - `args`: a list of strings: the process arguments to pass to the fuzzer, typically `sys.argv`. this argument list may be modified in-place, to remove arguments consumed by the fuzzer.\n   see [the libfuzzer docs](https://llvm.org/docs/libfuzzer.html#options) for a list of such options.\n - `test_one_input`: your fuzzer's entry point. must take a single `bytes` argument. this will be repeatedly invoked with a single bytes container.\n - `internal_libfuzzer`: indicates whether libfuzzer will be provided by atheris or by an external library (see [native_extension_fuzzing.md](./native_extension_fuzzing.md)). if unspecified, atheris will determine this\n   automatically. if fuzzing pure python, leave this as `true`.\n\n#### `fuzz()`\n\nthis starts the fuzzer. you must have called `setup()` before calling this function. this function does not return.\n\nin many cases `setup()` and `fuzz()` could be combined into a single function, but they are\nseparated because you may want the fuzzer to consume the command-line arguments it handles\nbefore passing any remaining arguments to another setup function.\n\n#### `fuzzeddataprovider`\n\noften, a `bytes` object is not convenient input to your code being fuzzed. similar to libfuzzer, we provide a fuzzeddataprovider to translate these bytes into other input forms.\n\nyou can construct the fuzzeddataprovider with:\n\n```python\nfdp = atheris.fuzzeddataprovider(input_bytes)\n```\n\nthe fuzzeddataprovider then supports the following functions:\n\n```python\ndef consumebytes(count: int)\n```\nconsume `count` bytes.\n\n\n```python\ndef consumeunicode(count: int)\n```\n\nconsume unicode characters. might contain surrogate pair characters, which according to the specification are invalid in this situation. however, many core software tools (e.g. windows file paths) support them, so other software often needs to too.\n\n```python\ndef consumeunicodenosurrogates(count: int)\n```\n\nconsume unicode characters, but never generate surrogate pair characters.\n\n```python\ndef consumestring(count: int)\n```\n\nalias for `consumebytes` in python 2, or `consumeunicode` in python 3.\n\n```python\ndef consumeint(int: bytes)\n```\n\nconsume a signed integer of the specified size (when written in two's complement notation).\n\n```python\ndef consumeuint(int: bytes)\n```\n\nconsume an unsigned integer of the specified size.\n\n```python\ndef consumeintinrange(min: int, max: int)\n```\n\nconsume an integer in the range [`min`, `max`].\n\n```python\ndef consumeintlist(count: int, bytes: int)\n```\n\nconsume a list of `count` integers of `size` bytes.\n\n```python\ndef consumeintlistinrange(count: int, min: int, max: int)\n```\n\nconsume a list of `count` integers in the range [`min`, `max`].\n\n```python\ndef consumefloat()\n```\n\nconsume an arbitrary floating-point value. might produce weird values like `nan` and `inf`.\n\n```python\ndef consumeregularfloat()\n```\n\nconsume an arbitrary numeric floating-point value; never produces a special type like `nan` or `inf`.\n\n```python\ndef consumeprobability()\n```\n\nconsume a floating-point value in the range [0, 1].\n\n```python\ndef consumefloatinrange(min: float, max: float)\n```\n\nconsume a floating-point value in the range [`min`, `max`].\n\n```python\ndef consumefloatlist(count: int)\n```\n\nconsume a list of `count` arbitrary floating-point values. might produce weird values like `nan` and `inf`.\n\n```python\ndef consumeregularfloatlist(count: int)\n```\n\nconsume a list of `count` arbitrary numeric floating-point values; never produces special types like `nan` or `inf`.\n\n```python\ndef consumeprobabilitylist(count: int)\n```\n\nconsume a list of `count` floats in the range [0, 1].\n\n```python\ndef consumefloatlistinrange(count: int, min: float, max: float)\n```\n\nconsume a list of `count` floats in the range [`min`, `max`]\n\n```python\ndef pickvalueinlist(l: list)\n```\n\ngiven a list, pick a random value\n\n```python\ndef consumebool()\n```\n\nconsume either `true` or `false`.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "atheris",
  "package_url": "https://pypi.org/project/atheris/",
  "project_url": "https://pypi.org/project/atheris/",
  "project_urls": {
    "Homepage": "https://github.com/google/atheris/"
  },
  "release_url": "https://pypi.org/project/atheris/2.3.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a coverage-guided fuzzer for python and python extensions.",
  "version": "2.3.0",
  "releases": [],
  "developers": [
    "atheris@google.com",
    "bitshift"
  ],
  "kwds": "atheris_libprotobuf_mutator atheris_runs native_extension_fuzzing atheris fuzzing",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_atheris",
  "homepage": "https://github.com/google/atheris/",
  "release_count": 29,
  "dependency_ids": [],
  "documentation_summary": "Atheris is a coverage-guided fuzzer for Python and Python extensions, supporting Linux and Mac OS X for Python versions 3.6-3.10. It is designed for fuzzing both Python code and native extensions, utilizing libFuzzer and can be enhanced with Address Sanitizer or Undefined Behavior Sanitizer for catching additional bugs. Installation can be done via pip for prebuilt versions or from source to match specific Clang versions. Atheris allows for detailed instrumentation of Python bytecode for coverage information and supports structure-aware fuzzing with custom mutators. It is compatible with OSS-Fuzz for continuous fuzzing of open source projects and provides a comprehensive API for fuzzing setup and execution. The latest version, 2.3.0, was released on August 29, 2023.",
  "embedding": [
    -0.02197495847940445,
    0.0011257812147960067,
    -0.021350834518671036,
    -0.017040027305483818,
    0.007496741134673357,
    0.025327809154987335,
    -0.008236980997025967,
    -0.02412310615181923,
    0.014434673823416233,
    -0.012787277810275555,
    -0.001777119585312903,
    0.005617112852632999,
    -0.02159758284687996,
    0.0035959684755653143,
    0.017098085954785347,
    -0.017925413325428963,
    0.022163648158311844,
    -0.005475596524775028,
    0.005098219495266676,
    0.005508254282176495,
    0.03405102714896202,
    -0.0018460635328665376,
    -0.01692391186952591,
    -0.012337328866124153,
    -0.008012006059288979,
    0.009594087488949299,
    0.020015500485897064,
    -0.033615592867136,
    -0.009956949390470982,
    0.024674657732248306,
    0.02917415276169777,
    0.0014088141033425927,
    -0.024732714518904686,
    0.002215276239439845,
    -0.03625722974538803,
    -0.007794288452714682,
    0.031612589955329895,
    -0.009165909141302109,
    0.04508205130696297,
    -0.00705042015761137,
    0.015762751922011375,
    -0.00013063053484074771,
    0.004140262492001057,
    0.010914906859397888,
    -0.013585575856268406,
    0.0066403853707015514,
    -0.0034236086066812277,
    -0.017431918531656265,
    -0.024834316223859787,
    -0.0044740960001945496,
    0.015457946807146072,
    0.001591152511537075,
    -0.011466458439826965,
    -0.004045918118208647,
    0.022381365299224854,
    -0.026358339935541153,
    0.016314301639795303,
    0.025545526295900345,
    -0.039131101220846176,
    0.012939680367708206,
    0.0002549109631218016,
    0.015196685679256916,
    -0.04406603425741196,
    -0.0004417852032929659,
    0.005312308669090271,
    0.012010752223432064,
    -0.002369492780417204,
    0.008665159344673157,
    -0.005802173167467117,
    0.002313249045982957,
    0.03303501009941101,
    0.03474772348999977,
    -0.0022515624295920134,
    -0.012076067738234997,
    0.04505302011966705,
    -0.015835324302315712,
    -0.047781746834516525,
    0.02653251402080059,
    -0.01407181192189455,
    0.01176400575786829,
    0.002142703626304865,
    -0.0055118827149271965,
    -0.01654653437435627,
    0.03442840278148651,
    0.02615513652563095,
    0.01616915687918663,
    -0.015022511593997478,
    0.029682161286473274,
    -0.004869616124778986,
    -0.014187927357852459,
    0.030277255922555923,
    -0.014652391895651817,
    -0.0058420877903699875,
    0.022468451410531998,
    0.006023519206792116,
    0.018143130466341972,
    -0.0017880054656416178,
    0.005265136249363422,
    -0.018331818282604218,
    -0.016894882544875145,
    -0.010073065757751465,
    0.012119610793888569,
    -0.007750744931399822,
    -0.006321066524833441,
    -0.02577775903046131,
    -0.0016791466623544693,
    0.011872864328324795,
    -0.0013271699426695704,
    0.010893135331571102,
    -0.000864973699208349,
    0.000822337344288826,
    0.01682231016457081,
    0.000843655550852418,
    -0.07593988627195358,
    0.01698197051882744,
    -0.02364412695169449,
    0.051816780120134354,
    0.0003433587262406945,
    -0.014129869639873505,
    -0.009441684931516647,
    0.006114234682172537,
    0.012235727161169052,
    0.0024602084886282682,
    0.002378564327955246,
    0.02981279045343399,
    -0.010319812223315239,
    0.007268137764185667,
    -0.008585329167544842,
    -0.030596574768424034,
    -0.027693673968315125,
    0.010007750242948532,
    -0.0147685082629323,
    0.0385795533657074,
    -0.014369359239935875,
    -0.029449928551912308,
    -0.020000986754894257,
    -0.03254151716828346,
    -0.009949692524969578,
    -0.01015289593487978,
    -0.01762060821056366,
    0.004738985560834408,
    0.008752245455980301,
    -0.029290268197655678,
    0.0066476427018642426,
    -0.03309306874871254,
    0.04958154633641243,
    0.0066367569379508495,
    -0.005885631311684847,
    0.0007007783860899508,
    0.0013788779033347964,
    0.01595143973827362,
    -0.010784276761114597,
    -0.02394893206655979,
    0.010914906859397888,
    -0.031090067699551582,
    -0.00010834850399987772,
    -0.029638616368174553,
    0.004223720636218786,
    -0.0036032255738973618,
    0.010319812223315239,
    0.0043507227674126625,
    0.02841939963400364,
    -0.006088834255933762,
    -0.018564051017165184,
    0.009252996183931828,
    0.03088686428964138,
    0.008287781849503517,
    -0.005519140046089888,
    -0.01965263858437538,
    0.01013112347573042,
    0.017664151266217232,
    0.00967391673475504,
    -0.011829320341348648,
    0.010138381272554398,
    0.030712690204381943,
    0.013483974151313305,
    -0.01152451615780592,
    0.031090067699551582,
    -0.025763245299458504,
    0.019783269613981247,
    0.02374572865664959,
    -0.006016261875629425,
    0.04754951596260071,
    0.03219316899776459,
    -0.016778767108917236,
    -0.009920663200318813,
    -0.028433913365006447,
    0.016502991318702698,
    0.0013852280098944902,
    0.006847217213362455,
    0.018607594072818756,
    0.020552538335323334,
    0.007199193816632032,
    -0.015022511593997478,
    -0.5652528405189514,
    -0.007670915219932795,
    -0.007779774256050587,
    -0.019304290413856506,
    0.0042491210624575615,
    0.004390637390315533,
    0.011829320341348648,
    0.006302923429757357,
    -0.010341583751142025,
    0.03228025510907173,
    -0.0306256040930748,
    0.02486334554851055,
    0.009202195331454277,
    -0.016532020643353462,
    -0.0348057821393013,
    -0.02036384865641594,
    0.016691679134964943,
    -0.023165147751569748,
    -0.0021463322918862104,
    0.013491231016814709,
    -0.014108098112046719,
    0.02551649883389473,
    0.009376369416713715,
    -0.0037773996591567993,
    0.003987859934568405,
    0.03799897059798241,
    0.013469459488987923,
    -0.029420899227261543,
    0.03796994313597679,
    0.0030661888886243105,
    -0.03335433080792427,
    0.032483458518981934,
    0.02223622053861618,
    -0.009768261574208736,
    0.055358316749334335,
    -0.01944943517446518,
    0.009681174531579018,
    0.03968265280127525,
    0.01082781981676817,
    0.017954440787434578,
    -0.008846590295433998,
    0.001970343990251422,
    0.02304903231561184,
    0.030799778178334236,
    0.022860344499349594,
    -0.01696745492517948,
    0.02368767000734806,
    -0.0019159144721925259,
    0.025371352210640907,
    -0.01869468204677105,
    -0.021554037928581238,
    0.008744988590478897,
    0.03094492293894291,
    -0.021902386099100113,
    0.017548035830259323,
    0.0035088814329355955,
    0.026184165850281715,
    0.01534183043986559,
    0.004873244557529688,
    -0.007453197613358498,
    -0.025821302086114883,
    0.037679653614759445,
    0.00899899285286665,
    -0.030480459332466125,
    -0.01584983803331852,
    0.0008069156901910901,
    -0.009971464052796364,
    -0.021844329312443733,
    0.01147371530532837,
    -0.02541489712893963,
    0.025211693719029427,
    0.02450048364698887,
    0.006611356511712074,
    -0.018709195777773857,
    0.004956703167408705,
    0.04345642402768135,
    0.012888879515230656,
    0.018201187252998352,
    0.005127248354256153,
    0.022265249863266945,
    0.0044777244329452515,
    0.005105476826429367,
    -0.014877366833388805,
    -0.02122020535171032,
    0.0324254035949707,
    -0.0061940643936395645,
    -0.01911560259759426,
    -0.008374868892133236,
    0.004862358793616295,
    -0.006665785796940327,
    0.0035506105050444603,
    0.033267244696617126,
    -0.008657901547849178,
    -0.0346025787293911,
    0.014006496407091618,
    0.016532020643353462,
    -0.03100297972559929,
    -0.012388128787279129,
    0.00047807148075662553,
    -0.018651137128472328,
    -0.002578138839453459,
    -0.00581305893138051,
    -0.016299787908792496,
    0.011734976433217525,
    0.022976459935307503,
    0.0024311793968081474,
    -0.02030579186975956,
    0.0056025986559689045,
    -0.0028212566394358873,
    -0.02004452981054783,
    0.0010178296361118555,
    -0.03050948679447174,
    -0.009448941797018051,
    -0.018331818282604218,
    0.028941921889781952,
    -0.028375854715704918,
    0.049494460225105286,
    0.007685429882258177,
    0.003077074885368347,
    -0.008592586033046246,
    -0.010377869941294193,
    0.0025745101738721132,
    0.0048079295083880424,
    -0.0005833016475662589,
    0.04458855465054512,
    -0.007496741134673357,
    0.030422400683164597,
    -0.04302098974585533,
    -0.011807548813521862,
    -0.014028267934918404,
    -0.005475596524775028,
    0.011778520420193672,
    0.015240229666233063,
    -0.005522768944501877,
    0.03910207375884056,
    -0.002986359177157283,
    0.007300795521587133,
    0.008280524984002113,
    -6.741306424373761e-05,
    -0.017272260040044785,
    -0.042730700224637985,
    0.015066055580973625,
    0.03651849180459976,
    0.0069887335412204266,
    -0.025429410859942436,
    -0.03776673972606659,
    -0.00792491901665926,
    -0.002737798262387514,
    0.006027147639542818,
    -0.001554866204969585,
    0.009840833954513073,
    0.011183425784111023,
    -0.035212185233831406,
    -0.0002508287725504488,
    -0.024776257574558258,
    -0.016996484249830246,
    0.0038100574165582657,
    -0.012692933902144432,
    -0.02325223572552204,
    -0.0015485160984098911,
    0.013411401771008968,
    0.005780401173979044,
    0.0060598053969442844,
    0.008650644682347775,
    -0.021147632971405983,
    0.006317438092082739,
    -0.020857341587543488,
    0.02589387446641922,
    -0.006861731875687838,
    -0.03669266775250435,
    -0.014783021993935108,
    -0.003668540855869651,
    -0.02187335677444935,
    0.017214201390743256,
    0.007990234531462193,
    0.018389876931905746,
    -0.0254584401845932,
    0.008955448865890503,
    -0.03556053340435028,
    -0.015617606230080128,
    -0.007268137764185667,
    0.01420969981700182,
    -0.02283131517469883,
    -0.013549289666116238,
    0.042411379516124725,
    -0.012453444302082062,
    0.01654653437435627,
    -0.0019376862328499556,
    -0.00226244842633605,
    0.013737978413701057,
    -0.026605086401104927,
    -0.01323722768574953,
    -0.018230216577649117,
    0.008396640419960022,
    -0.028724202886223793,
    2.890143878175877e-05,
    0.02255553938448429,
    0.0035596820525825024,
    -0.006883503403514624,
    0.023353837430477142,
    0.02992890775203705,
    0.002019330393522978,
    0.009920663200318813,
    -0.0058312020264565945,
    0.001299048075452447,
    -0.0013861351180821657,
    0.020929913967847824,
    -0.01804152876138687,
    0.014420160092413425,
    -0.024456938728690147,
    0.019913898780941963,
    -0.04798495024442673,
    -0.03393490985035896,
    -0.0015494233230128884,
    0.005083704832941294,
    0.004307179246097803,
    0.0036612835247069597,
    0.01632881723344326,
    -0.005816687364131212,
    0.008628872223198414,
    -0.005696943029761314,
    0.029145123437047005,
    0.010334326885640621,
    0.005087333731353283,
    0.018868856132030487,
    -0.001184746390208602,
    0.0036086684558540583,
    0.023194177076220512,
    0.04548845440149307,
    -0.016372360289096832,
    0.004067689646035433,
    -0.00016510247951373458,
    0.020102588459849358,
    -0.00982631929218769,
    0.028753232210874557,
    -0.024079561233520508,
    0.01735934615135193,
    -0.011705947108566761,
    0.0179979857057333,
    -0.018201187252998352,
    0.026503484696149826,
    0.027359839528799057,
    0.025182664394378662,
    0.00405680388212204,
    0.025589071214199066,
    -0.004339836537837982,
    0.01574823632836342,
    0.03689586743712425,
    -0.018288275226950645,
    -0.0008041942492127419,
    -0.008744988590478897,
    0.011959951370954514,
    0.003933430649340153,
    0.0020900885574519634,
    0.00862161535769701,
    -0.016575563699007034,
    0.016401389613747597,
    0.0100440364331007,
    0.029841819778084755,
    0.02513912133872509,
    0.020987972617149353,
    0.009136879816651344,
    0.025284266099333763,
    0.012634876184165478,
    0.019638124853372574,
    -0.006622242275625467,
    -0.03291889652609825,
    -0.015806294977664948,
    -0.015603091567754745,
    -0.0022515624295920134,
    -0.0014369358541443944,
    -0.033702678978443146,
    -0.025023004040122032,
    -0.01718517206609249,
    0.04757854342460632,
    0.0167061947286129,
    -0.0002478805254213512,
    0.0457497164607048,
    0.022381365299224854,
    -0.00392254488542676,
    -0.02889837697148323,
    -0.03936333581805229,
    0.0318157933652401,
    0.0014142569852992892,
    0.003156904596835375,
    -0.001885071163997054,
    -0.012816307134926319,
    -0.0029337441083043814,
    -0.03463160619139671,
    0.0022406766656786203,
    -0.0019195431377738714,
    -0.00498210359364748,
    0.010385127738118172,
    -0.01589338108897209,
    0.0035868966951966286,
    -0.009151394478976727,
    0.043485455214977264,
    -0.0018923284951597452,
    -0.0037773996591567993,
    -0.008933677338063717,
    -0.01074073277413845,
    -0.0011956322705373168,
    -0.002169918268918991,
    0.0016192743787541986,
    0.03631528839468956,
    0.013099339790642262,
    -0.0032276627607643604,
    -0.013650891371071339,
    0.0008477377705276012,
    -0.021205689758062363,
    -0.012932423502206802,
    0.023934416472911835,
    -0.01410084031522274,
    0.013875865377485752,
    6.911398668307811e-05,
    -0.004263635724782944,
    -0.0037120843771845102,
    0.013549289666116238,
    0.017664151266217232,
    0.00023722142213955522,
    0.015428917482495308,
    -0.03611208498477936,
    -0.002206204691901803,
    -0.0009039814467541873,
    0.026880862191319466,
    0.011872864328324795,
    0.002084645675495267,
    0.007772516924887896,
    0.0062956660985946655,
    -0.014993482269346714,
    -0.006564184557646513,
    -0.01735934615135193,
    -0.008607100695371628,
    -0.007337081711739302,
    -0.010581073351204395,
    0.013752492144703865,
    0.009833576157689095,
    -0.013745235279202461,
    0.010871363803744316,
    0.00945619959384203,
    -0.013157397508621216,
    -0.01447821781039238,
    -0.0017553478246554732,
    -0.000264209316810593,
    0.015661150217056274,
    -0.004724470898509026,
    0.015878867357969284,
    -0.0010296226246282458,
    0.023397380486130714,
    -0.0030843322165310383,
    0.01837536133825779,
    0.01666264981031418,
    -0.01308482512831688,
    -0.01066090352833271,
    -0.023571554571390152,
    0.01397021021693945,
    0.0006536062574014068,
    0.02040739357471466,
    -0.041598569601774216,
    0.02187335677444935,
    0.010747990570962429,
    0.030712690204381943,
    0.011430172249674797,
    0.004840587265789509,
    0.009942435659468174,
    0.017533520236611366,
    -0.003231291426345706,
    0.008766760118305683,
    -0.010769762098789215,
    -0.021510494872927666,
    -0.024471454322338104,
    0.009565058164298534,
    -0.011959951370954514,
    -0.002416664967313409,
    0.010290782898664474,
    0.008527271449565887,
    -0.008607100695371628,
    -0.023223206400871277,
    0.012192183174192905,
    -0.007903147488832474,
    0.02627125196158886,
    0.0027232838328927755,
    -3.2260752050206065e-05,
    -0.03045143000781536,
    -0.003875372465699911,
    -0.011582573875784874,
    -0.024050533771514893,
    -0.0008432019385509193,
    -0.01944943517446518,
    -0.004989360924810171,
    -0.004528525285422802,
    0.017664151266217232,
    -0.020102588459849358,
    -0.004455952905118465,
    0.00530505133792758,
    -0.025313295423984528,
    -0.009223966859281063,
    0.0031968194525688887,
    0.035531505942344666,
    -0.0012219398049637675,
    0.0007679080008529127,
    0.0049095312133431435,
    0.026009991765022278,
    0.024050533771514893,
    0.014013753272593021,
    0.0020102588459849358,
    -0.00659321341663599,
    -0.028172653168439865,
    0.003165976144373417,
    0.005134505685418844,
    0.015356345102190971,
    -0.009470714256167412,
    -0.0009008063934743404,
    0.04305001720786095,
    0.004851473029702902,
    -0.01698197051882744,
    0.00014752632705494761,
    -0.01323722768574953,
    -0.015486976131796837,
    0.001065908931195736,
    0.024297280237078667,
    -0.008128122426569462,
    -0.01579178124666214,
    -0.018447933718562126,
    0.01407181192189455,
    -0.03393490985035896,
    -0.024239221587777138,
    -0.011734976433217525,
    -0.008295038715004921,
    0.019971957430243492,
    -0.002055616583675146,
    -0.013897637836635113,
    -0.03416714072227478,
    0.006923418492078781,
    -0.011031023226678371,
    0.002140889409929514,
    -0.0070939636789262295,
    0.009652145206928253,
    0.005675171036273241,
    -0.008752245455980301,
    -0.012598589062690735,
    0.01751900650560856,
    -0.024152135476469994,
    0.0003442658926360309,
    0.016778767108917236,
    -0.03216414153575897,
    0.015646634623408318,
    0.025023004040122032,
    0.01342591643333435,
    0.015545033849775791,
    -0.0064081535674631596,
    0.009086079895496368,
    -0.024906888604164124,
    0.010247239843010902,
    0.004670041613280773,
    0.039943914860486984,
    0.02412310615181923,
    -0.046446412801742554,
    0.014129869639873505,
    -0.013447687961161137,
    -0.028230709955096245,
    -0.0030280884820967913,
    0.0016746108885854483,
    0.0008459234377369285,
    -0.026996977627277374,
    0.011248740367591381,
    0.01837536133825779,
    -0.007460454944521189,
    -0.008832075633108616,
    -0.022758742794394493,
    -0.008062806911766529,
    0.019202688708901405,
    -0.010428670793771744,
    -0.005823944695293903,
    -0.01875273883342743,
    0.0133751155808568,
    0.0026597827672958374,
    -0.017533520236611366,
    -0.03149647265672684,
    0.00011543566506588832,
    0.002888386370614171,
    0.0038100574165582657,
    0.020668653771281242,
    0.06339935213327408,
    0.025748729705810547,
    0.01423872821033001,
    0.012105096131563187,
    0.02111860364675522,
    0.0049530742689967155,
    -0.006908903829753399,
    -0.026401882991194725,
    0.01783832535147667,
    1.4727118468726985e-05,
    0.0008286874508485198,
    0.0037556278984993696,
    0.0009615859016776085,
    -0.0015167656820267439,
    -0.03942139446735382,
    -0.007511255796998739,
    0.027954934164881706,
    -0.014376616105437279,
    -0.003947945311665535,
    -0.024732714518904686,
    -0.020073559135198593,
    -0.016880368813872337,
    -0.0002296239836141467,
    0.00044133164919912815,
    0.016561049968004227,
    -0.02631479501724243,
    -0.01471770741045475,
    0.011546287685632706,
    -0.03120618313550949,
    0.038869842886924744,
    0.004633755423128605,
    0.006945190019905567,
    0.004368865862488747,
    0.025342324748635292,
    0.00787411816418171,
    0.037621594965457916,
    0.0035469818394631147,
    -0.008055550046265125,
    -0.02380378730595112,
    0.005569940898567438,
    -0.003940687980502844,
    0.0040096319280564785,
    -0.018781768158078194,
    0.013389630243182182,
    0.025124605745077133,
    -0.004960331600159407,
    0.04409506171941757,
    0.01676425151526928,
    -0.03802800178527832,
    0.033499475568532944,
    -0.02611159346997738,
    -0.010385127738118172,
    -0.02239587903022766,
    -0.023658640682697296,
    -0.015051540918648243,
    0.003240362973883748,
    -0.010036779567599297,
    0.002768641570582986,
    0.012395386584103107,
    0.0050546759739518166,
    -0.009136879816651344,
    -0.010994737036526203,
    0.022047530859708786,
    0.0574774369597435,
    -0.013012252748012543,
    0.01313562598079443,
    0.03753450885415077,
    -0.005225221626460552,
    -0.03251248970627785,
    -0.02519717812538147,
    0.02245393767952919,
    0.015240229666233063,
    0.025603584945201874,
    0.016909396275877953,
    -0.012874364852905273,
    0.005838459357619286,
    0.01730128936469555,
    0.0019649008754640818,
    -0.044124092906713486,
    -0.03175773471593857,
    0.020276762545108795,
    0.01666264981031418,
    0.025531012564897537,
    -0.03158356249332428,
    -0.013846836984157562,
    -0.01584983803331852,
    0.012184926308691502,
    -0.025980962440371513,
    -0.017431918531656265,
    0.02030579186975956,
    -0.010348841547966003,
    0.015457946807146072,
    0.014572561718523502,
    0.025066548958420753,
    0.012068809941411018,
    0.002198947360739112,
    0.02197495847940445,
    -0.036344319581985474,
    -0.03254151716828346,
    0.00926751084625721,
    -0.010581073351204395,
    0.03100297972559929,
    0.016502991318702698,
    -0.01267841923981905,
    -0.016502991318702698,
    0.02857905812561512,
    -0.014187927357852459,
    -0.0042600068263709545,
    0.011321312747895718,
    -0.006146892439574003,
    0.05065561830997467,
    -0.011633374728262424,
    0.0016546534607186913,
    -0.03019016794860363,
    -0.010174667462706566,
    -0.02288937196135521,
    -0.014369359239935875,
    -0.0018215702148154378,
    -0.010239982977509499,
    0.0034617092460393906,
    0.02616965025663376,
    0.007482226938009262,
    -0.015878867357969284,
    -0.006117863580584526,
    -0.00996420718729496,
    -0.0053885094821453094,
    0.0106899319216609,
    0.012642133049666882,
    0.012322814203798771,
    0.03239637240767479,
    -0.009652145206928253,
    -0.023121604695916176,
    -0.013222713023424149,
    -0.013396887108683586,
    0.007351596374064684,
    0.02110408805310726,
    0.010566558688879013,
    -0.027838818728923798,
    0.04836232587695122,
    -0.03140938654541969,
    0.0006663064705207944,
    -0.018114101141691208,
    0.021742727607488632,
    -0.018781768158078194,
    0.014507247135043144,
    0.003521581646054983,
    -0.019681667909026146,
    0.010065808892250061,
    -0.004782529082149267,
    -0.031351327896118164,
    -0.035096071660518646,
    0.010457700118422508,
    0.026663143187761307,
    0.020276762545108795,
    -0.01676425151526928,
    -0.0009175888262689114,
    0.006379124708473682,
    0.0019376862328499556,
    -0.004209205973893404,
    -0.010602844879031181,
    -7.637123781023547e-05,
    -0.02915963903069496,
    -0.0021300034131854773,
    0.018114101141691208,
    -0.019681667909026146,
    0.010595588013529778,
    0.013636376708745956,
    0.004902273882180452,
    0.0026561543345451355,
    -0.018114101141691208,
    -0.032570548355579376,
    -0.01190189365297556,
    -0.02487785927951336,
    -0.004709956701844931,
    0.019536523148417473,
    0.01778026670217514,
    -0.019318804144859314,
    -0.04717213660478592,
    0.00576225807890296,
    -0.001557587762363255,
    -0.023136120289564133,
    -0.007489484269171953,
    0.03826023265719414,
    -0.012584075331687927,
    -0.013266257010400295,
    -0.017983470112085342,
    0.0035506105050444603,
    -0.014028267934918404,
    0.018331818282604218,
    -0.050626590847969055,
    -0.02364412695169449,
    -0.01184383500367403,
    0.06130926311016083,
    0.021495981141924858,
    -0.03149647265672684,
    -0.033499475568532944,
    -0.012642133049666882,
    -0.022207191213965416,
    -0.006244865246117115,
    -0.02949347160756588,
    0.027809789404273033,
    -0.005555426236242056,
    0.012939680367708206,
    0.01407181192189455,
    0.00415114825591445,
    0.009245739318430424,
    0.007126621436327696,
    -0.003684869734570384,
    -0.009332826361060143,
    0.0334123894572258,
    0.012242984026670456,
    -0.013999239541590214,
    -0.027214694768190384,
    -0.06177372857928276,
    -0.00824423786252737,
    0.01471770741045475,
    0.00013913512520957738,
    0.005174420773983002,
    0.042295265942811966,
    -0.001396113890223205,
    -0.004996617790311575,
    0.0031859336886554956,
    -0.021307291463017464,
    -0.006215836387127638,
    0.015414402820169926,
    -0.0022533766459673643,
    -0.024587569758296013,
    -0.016241729259490967,
    0.006201321724802256,
    0.013004995882511139,
    -0.0009035278926603496,
    -0.012148640118539333,
    0.00787411816418171,
    -0.017214201390743256,
    -0.008440184406936169,
    -0.015806294977664948,
    -0.009528771974146366,
    0.017388375476002693,
    -0.00996420718729496,
    0.013919409364461899,
    -0.004840587265789509,
    -0.011829320341348648,
    0.00833132490515709,
    0.003846343606710434,
    -0.0324254035949707,
    -0.009601344354450703,
    0.015617606230080128,
    -0.036982957273721695,
    0.0022787770722061396,
    0.026445426046848297,
    -0.012569560669362545,
    0.0009878934361040592,
    -0.011270512826740742,
    0.009528771974146366,
    -0.004354351200163364,
    0.021031515672802925,
    -0.015182171016931534,
    -0.020291276276111603,
    -0.029522500932216644,
    0.02219267748296261,
    -0.010675417259335518,
    0.006368238478899002,
    -0.018244732171297073,
    0.013476717285811901,
    -0.0015920596197247505,
    -0.004996617790311575,
    -0.010820562951266766,
    0.0035288387443870306,
    -0.03088686428964138,
    0.01460884790867567,
    0.02072671242058277,
    -0.006549669895321131,
    -0.0332091860473156,
    -0.011553545482456684,
    0.011096338741481304,
    -0.027142122387886047,
    -0.0019558293279260397,
    0.18938525021076202,
    -0.004833329934626818,
    0.02487785927951336,
    0.027113093063235283,
    -0.004412409383803606,
    -0.007257252000272274,
    0.005544540472328663,
    0.019522007554769516,
    -0.02034933492541313,
    0.048913877457380295,
    0.00304260291159153,
    -0.030422400683164597,
    -0.009666659869253635,
    -0.003127875505015254,
    0.009042535908520222,
    0.0043724942952394485,
    -0.027417898178100586,
    -0.006099720485508442,
    -0.037041015923023224,
    0.004437809810042381,
    0.02187335677444935,
    -0.018447933718562126,
    0.00889013335108757,
    -0.03254151716828346,
    0.022541025653481483,
    -0.0032439916394650936,
    -0.00030661889468319714,
    -0.02336835116147995,
    0.0055009969510138035,
    -0.0016083884984254837,
    -0.014572561718523502,
    0.017577065154910088,
    -0.005007504019886255,
    -0.015051540918648243,
    -0.024732714518904686,
    -0.00014684595225844532,
    -0.008730473928153515,
    0.005834830459207296,
    0.012330071069300175,
    0.0006826352910138667,
    0.03045143000781536,
    -0.040263235569000244,
    -0.0058275735937058926,
    -0.015066055580973625,
    -0.013367857784032822,
    -0.010602844879031181,
    -0.020450936630368233,
    0.007503998465836048,
    -0.03921819105744362,
    0.028346827253699303,
    -0.021408893167972565,
    -0.014485474675893784,
    -0.010958450846374035,
    0.025443926453590393,
    0.0008041942492127419,
    -0.04862358793616295,
    0.006836331449449062,
    0.014652391895651817,
    0.007355224806815386,
    0.021466951817274094,
    -0.007801545783877373,
    0.03312209993600845,
    -0.01595143973827362,
    -0.00019707974570337683,
    -0.052832793444395065,
    0.01114713866263628,
    -0.04322419315576553,
    0.007228223141282797,
    -0.011734976433217525,
    0.03518315777182579,
    -0.03114812634885311,
    -0.02857905812561512,
    -0.005969089921563864,
    -0.011248740367591381,
    -0.008469212800264359,
    -0.028404884040355682,
    0.027838818728923798,
    0.02551649883389473,
    0.047781746834516525,
    0.02756304293870926,
    0.03138035908341408,
    -0.02034933492541313,
    -0.0003966541844420135,
    0.025110092014074326,
    -0.02863711677491665,
    -0.02659057080745697,
    0.025008490309119225,
    0.005526397377252579,
    -0.0006966961664147675,
    -0.022715197876095772,
    -0.024848829954862595,
    -0.012707448564469814,
    0.022541025653481483,
    -0.03753450885415077,
    -0.0024094076361507177,
    0.0031042895279824734,
    0.0019122859230265021,
    0.012213954702019691,
    -0.002890200586989522,
    -0.00232957792468369,
    -0.045952919870615005,
    0.03744741901755333,
    -0.00945619959384203,
    -0.022787772119045258,
    -0.007326195947825909,
    0.01686585322022438,
    -0.013251742348074913,
    0.01286710798740387,
    -0.005370366387069225,
    -0.021075060591101646,
    -0.004586583469063044,
    -0.032570548355579376,
    -0.004049546550959349,
    -0.026227708905935287,
    0.028622601181268692,
    -0.004067689646035433,
    0.002784970449283719,
    -0.01152451615780592,
    0.009289282374083996,
    0.01971069723367691,
    0.0069560762494802475,
    -0.005424795672297478,
    0.01267841923981905,
    0.010849591344594955,
    -0.008120864629745483,
    -0.016619106754660606,
    -0.04441438242793083,
    0.01071170438081026,
    -0.02165563963353634,
    -0.015022511593997478,
    -0.015080569311976433,
    -0.01235184259712696,
    0.0027504984755069017,
    -0.015370859764516354,
    -0.015646634623408318,
    -0.00746771227568388,
    -0.011089080944657326,
    -0.024935917928814888,
    -0.03146744519472122,
    -0.007903147488832474,
    -0.01897045597434044,
    -0.011001993902027607,
    0.0041330051608383656,
    -0.008665159344673157,
    0.010885878466069698,
    -0.00756205664947629,
    0.013571061193943024,
    0.023237720131874084,
    -0.0018814426148310304,
    0.0016718894476071,
    -0.017330318689346313,
    0.004093090072274208,
    0.006520641036331654,
    -0.019899385049939156,
    -0.010762504301965237,
    -0.05323920026421547,
    0.0004388369561638683,
    -0.022976459935307503,
    0.028448427096009254,
    -0.0039080302231013775,
    -0.019942928105592728,
    0.008142637088894844,
    0.008200694806873798,
    0.02873871847987175,
    -0.01434032991528511,
    -0.002578138839453459,
    -0.18462449312210083,
    -0.005929174832999706,
    -0.003770142327994108,
    -0.030161138623952866,
    0.019101087003946304,
    -0.03750547766685486,
    0.00899899285286665,
    0.013767006807029247,
    -0.006582327652722597,
    -0.005936432164162397,
    0.014412902295589447,
    -0.03126424178481102,
    0.001198353711515665,
    -0.01308482512831688,
    -0.008607100695371628,
    0.00017848303832579404,
    -0.025589071214199066,
    0.0044777244329452515,
    0.045691657811403275,
    0.0070830779150128365,
    0.018186673521995544,
    -0.021031515672802925,
    0.0030843322165310383,
    0.031061038374900818,
    0.01821570284664631,
    -0.01793992705643177,
    -0.006092463154345751,
    -0.010094837285578251,
    0.006868989206850529,
    -0.022715197876095772,
    -0.011052794754505157,
    0.019057543948292732,
    0.01092942152172327,
    -0.009252996183931828,
    0.0213798638433218,
    0.00627026567235589,
    0.01345494482666254,
    -0.013897637836635113,
    -0.0017580692656338215,
    0.0038790011312812567,
    0.03657655045390129,
    0.009731975384056568,
    0.02095894329249859,
    -0.03068366087973118,
    -0.024935917928814888,
    0.0036794268526136875,
    0.019957443699240685,
    -0.0179979857057333,
    0.025385867804288864,
    -0.028825804591178894,
    0.033441416919231415,
    0.002783156232908368,
    0.003011759603396058,
    0.001875999616459012,
    0.031090067699551582,
    0.007997491396963596,
    0.017925413325428963,
    0.029246725142002106,
    0.017170658335089684,
    0.011749491095542908,
    -0.010022264905273914,
    -0.03277375176548958,
    0.006589584983885288,
    -0.014674163423478603,
    -0.008766760118305683,
    -0.016125613823533058,
    -0.018360847607254982,
    0.02217816188931465,
    0.005080076400190592,
    0.008324068039655685,
    -0.007670915219932795,
    0.018302788957953453,
    -0.007503998465836048,
    0.0020338448230177164,
    0.03799897059798241,
    0.014391130767762661,
    -0.03213511034846306,
    0.018709195777773857,
    0.02072671242058277,
    0.003617740236222744,
    -0.02207656018435955,
    0.030538516119122505,
    0.001350756036117673,
    0.008498242124915123,
    -0.010334326885640621,
    0.0013879494508728385,
    0.0037556278984993696,
    -0.015269258059561253,
    0.0004984824918210506,
    -0.009565058164298534,
    0.011161653324961662,
    0.0017499049426987767,
    -0.012721963226795197,
    -0.03251248970627785,
    0.015385374426841736,
    0.04577874392271042,
    -0.012954195030033588,
    0.007496741134673357,
    -0.00020479058730416,
    -0.0141226127743721,
    0.010414157062768936,
    0.024892374873161316,
    -0.017910897731781006,
    0.006125120911747217,
    0.007866861298680305,
    0.016749737784266472,
    -0.04946542903780937,
    0.005330451764166355,
    0.0483332984149456,
    0.013505745679140091,
    -0.016183672472834587,
    0.01698197051882744,
    0.03184482082724571,
    0.02992890775203705,
    -0.02185884304344654,
    0.03492189571261406,
    0.020886370912194252,
    -0.016575563699007034,
    0.022221704944968224,
    -0.025153635069727898,
    0.03442840278148651,
    0.013578318059444427,
    -0.010668160393834114,
    0.017112599685788155,
    -0.009906148537993431,
    -0.010080322623252869,
    -0.10967159271240234,
    -0.03910207375884056,
    -0.009985978715121746,
    0.002120931865647435,
    -0.014115354977548122,
    -0.006887132301926613,
    0.0037737709935754538,
    0.04110507667064667,
    -0.02368767000734806,
    0.009688431397080421,
    0.003722970373928547,
    -0.019522007554769516,
    -0.02857905812561512,
    0.02304903231561184,
    -0.047026991844177246,
    -0.0064008962363004684,
    0.0126276183873415,
    0.0030915893148630857,
    0.018143130466341972,
    0.015051540918648243,
    0.007496741134673357,
    0.007257252000272274,
    0.016851339489221573,
    -0.009390884079039097,
    -0.008055550046265125,
    0.0073298243805766106,
    -0.04496593400835991,
    0.016996484249830246,
    0.004688184708356857,
    0.014086326584219933,
    0.00714476453140378,
    0.005733229219913483,
    -0.015298287384212017,
    -0.009361854754388332,
    0.0014841080410405993,
    0.001133038429543376,
    0.0024892373476177454,
    -0.025255236774683,
    0.034892868250608444,
    -0.01686585322022438,
    -0.007685429882258177,
    0.00028189888689666986,
    0.013621862046420574,
    0.014057297259569168,
    0.009202195331454277,
    -0.014826565980911255,
    -0.012649389915168285,
    0.026793774217367172,
    0.014318558387458324,
    -0.035212185233831406,
    -0.026619600132107735,
    -0.034515488892793655,
    -0.0032458058558404446,
    -0.009688431397080421,
    0.00802652072161436,
    -0.005733229219913483,
    0.006622242275625467,
    -0.006669414695352316,
    -0.013991981744766235,
    -0.022279763594269753,
    0.013636376708745956,
    -0.002643454121425748,
    0.012105096131563187,
    0.0334123894572258,
    -0.006673043128103018,
    -0.004670041613280773,
    0.001339870155788958,
    -0.0024692800361663103,
    0.03373170644044876,
    -0.005069190636277199,
    -0.025531012564897537,
    0.0010223654098808765,
    -0.028666146099567413,
    0.019420405849814415,
    -0.006611356511712074,
    0.011379371397197247,
    -0.0009361855336464942,
    -0.007917662151157856,
    0.021031515672802925,
    -0.009470714256167412,
    -0.010239982977509499,
    0.004368865862488747,
    7.665472367079929e-05,
    -0.02378927171230316,
    -0.006941561587154865,
    0.013346086256206036,
    0.0024003360886126757,
    0.006680300459265709,
    0.01891239918768406,
    -0.05123619735240936,
    0.0113358274102211,
    0.015603091567754745,
    0.017533520236611366,
    -0.0006241236696951091,
    -7.586096035083756e-05,
    -0.004851473029702902,
    0.00016510247951373458,
    0.017809296026825905,
    -0.011539030820131302,
    0.007859603501856327,
    -0.03497995436191559,
    -0.013004995882511139,
    -0.08621615171432495,
    0.014949939213693142,
    0.040321290493011475,
    -0.030596574768424034,
    0.0017136186361312866,
    -0.0294354148209095,
    0.019797783344984055,
    -0.00881030410528183,
    -0.003980602603405714,
    0.02368767000734806,
    -0.032367344945669174,
    0.0009239388746209443,
    -0.0017489977180957794,
    0.007605600170791149,
    0.017664151266217232,
    -0.014412902295589447,
    0.024108590558171272,
    -0.02567615732550621,
    0.03721518814563751,
    0.01751900650560856,
    0.023774757981300354,
    0.022047530859708786,
    0.014456446282565594,
    -0.001396113890223205,
    -0.03312209993600845,
    -0.01714162901043892,
    0.005352223291993141,
    0.012337328866124153,
    -0.000317504775011912,
    -0.02026224695146084,
    0.008360354229807854,
    0.0031061037443578243,
    -0.004644641187041998,
    -0.00902802124619484,
    0.014028267934918404,
    0.0036032255738973618,
    0.04473370313644409,
    -0.01235910039395094,
    0.015762751922011375,
    0.0014931795885786414,
    -0.0035850824788212776,
    -0.02169918268918991,
    0.03712810203433037,
    0.002530966652557254,
    -0.009354597888886929,
    -0.006237607914954424,
    -0.005900145974010229,
    0.025545526295900345,
    0.016154643148183823,
    0.018288275226950645,
    0.030364342033863068,
    -0.015095083974301815,
    -0.029638616368174553,
    -0.03840537741780281,
    -0.010588330216705799,
    0.004016888793557882,
    0.004038660787045956,
    -0.011749491095542908,
    -0.012286528013646603,
    -0.03892790153622627,
    0.03788285702466965,
    0.0020973458886146545,
    -0.00535585219040513,
    -0.0037846569903194904,
    0.0057150861248373985,
    -0.017635121941566467,
    -0.04807203635573387,
    -0.02466014213860035,
    0.0007855975418351591,
    -0.013941180892288685,
    -0.031293269246816635,
    -0.02207656018435955,
    0.01370169222354889,
    0.009100593626499176,
    0.023542525246739388,
    -0.01825924590229988,
    -0.011045537889003754,
    0.0069887335412204266,
    0.015414402820169926,
    -0.000468999904114753,
    0.023716699331998825,
    -0.011096338741481304,
    -0.014296786859631538,
    -0.002166289836168289,
    0.034834809601306915,
    -0.00894093420356512,
    -0.010189182125031948,
    -0.003447194816544652,
    0.0013226341689005494,
    0.02213461883366108,
    -0.031931910663843155,
    0.026459941640496254,
    0.0014995296951383352,
    -0.0016437675803899765,
    0.01950749382376671,
    -0.003741113469004631,
    -0.0043616085313260555,
    -0.01018192432820797,
    0.019028514623641968,
    -0.004789786413311958,
    0.0015965953934937716,
    -0.020799284800887108,
    -0.010341583751142025,
    -0.0014822937082499266,
    -0.015472461469471455,
    -0.009187680669128895,
    0.003668540855869651,
    -0.010065808892250061,
    -0.006233979482203722,
    0.02181529998779297,
    -0.011539030820131302,
    -0.0044668386690318584,
    -0.014129869639873505,
    0.029029008001089096,
    -0.004641012754291296,
    0.021205689758062363,
    0.028448427096009254,
    -0.0027976706624031067,
    -0.0037773996591567993,
    0.008193437941372395,
    0.018883369863033295,
    0.008737731724977493,
    0.026009991765022278,
    -0.010065808892250061,
    0.011248740367591381,
    0.026764744892716408,
    0.030538516119122505,
    -0.029188668355345726,
    -0.0009525143541395664,
    -0.016720708459615707,
    0.01815764419734478,
    0.01522571500390768,
    -0.035328302532434464,
    -0.016038527712225914,
    0.013251742348074913,
    -0.02939186990261078,
    0.01525474339723587,
    -0.022860344499349594,
    -0.014536275528371334,
    0.10537529736757278,
    0.010225468315184116,
    -0.01243892963975668,
    -0.005704199895262718,
    -0.0021082316525280476,
    0.03172870725393295,
    -0.014630620367825031,
    -0.00953602883964777,
    -0.011052794754505157,
    -0.014732221141457558,
    -0.003222219878807664,
    -0.020015500485897064,
    -0.0072971670888364315,
    -0.015574063174426556,
    -0.02299097366631031,
    0.037418391555547714,
    -0.0027051407378166914,
    0.013578318059444427,
    0.001875999616459012,
    -0.00945619959384203,
    0.028158137574791908,
    0.016502991318702698,
    0.003400022629648447,
    -0.013549289666116238,
    -0.04737534001469612,
    0.00912962295114994,
    0.035154130309820175,
    0.0066403853707015514,
    -0.01114713866263628,
    -0.0348057821393013,
    0.0038028000853955746,
    -0.02348446659743786,
    -0.026517998427152634,
    -0.013273513875901699,
    -0.03701198473572731,
    -0.008062806911766529,
    0.003791914088651538,
    0.000695789058227092,
    0.028317797929048538,
    0.01179303415119648,
    -0.013629118911921978,
    0.005424795672297478,
    -0.03068366087973118,
    -0.04200497642159462,
    0.03100297972559929,
    0.015095083974301815,
    -0.010544787161052227,
    0.010261754505336285,
    -0.04110507667064667
  ]
}
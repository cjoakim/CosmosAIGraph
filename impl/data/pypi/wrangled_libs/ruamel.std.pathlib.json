{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python"
  ],
  "description": "improvements over the standard pathlib module and pathlib2 package\n\nruamel.std.pathlib\n==================\n\n`package ruamel.std.pathlib <https://bitbucket.org/ruamel/std.pathlib>`_ is a drop-in\nreplacement to extend the python standard `pathlib`` module.\n\nyou can just replace::\n\n  from pathlib import posixpath, path\n\nwith::\n\n  from ruamel.std.pathlib import posixpath, path\n\n.. image:: https://sourceforge.net/p/ruamel-std-pathlib/code/ci/default/tree/_doc/_static/pypi.svg?format=raw\n     :target: https://pypi.org/project/ruamel.std.pathlib\n\n.. image:: https://sourceforge.net/p/ruamel-std-pathlib/code/ci/default/tree/_doc/_static/license.svg?format=raw\n     :target: https://opensource.org/licenses/mit\n\n.. image:: https://sourceforge.net/p/oitnb/code/ci/default/tree/_doc/_static/oitnb.svg?format=raw\n   :target: https://pypi.org/project/oitnb/\n\nstarting with 0.8.0 `ruamel.std.pathlib` no longer supports python 2\n\nextra path functionality\n------------------------\n\n* alias ``remove`` for ``unlink`` on path\n* add ``copy()`` and ``rmtree()`` from shutil to path\n* add ``hash()`` to path return the ``hashlib.new()`` value on the\n  file content (defaults to 'sha224', other algorithms can be given as\n  parameter:  ``print(p.hash('md5').hexdigest())``)\n\nwhen you have `blake3` installed and do `import ruamel.std.pathlib.blake3`, you\ncan also use that method on `path` instances.\n\ntransition helper\n-----------------\n\nif you are starting to use the standard pathlib library, it is cumbersome to\nchange everything at once, and also to change all the arguments to calls to\n``os.path.join``, ``os.rename``, ``os.path.dirname`` to be made encapsulated in ``str()``\n\nby making an instance of ``pathlibconversionhelper`` named ``pl`` you can change\n``os.path.join()`` to ``pl.path.join()``, etc., and then start passing in path\ninstances instead of strings.\n\n``pathlibconversionhelper`` currently supports the following replacements for `os`,\n `os.path`, `shutil` and built-in functions::\n\n  .chdir()             replaces: os.chdir()\n  .copy()              replaces: shutil.copy()\n  .glob()              replaces: glob.glob()\n  .listdir()           replaces: os.listdir()\n  .makedirs()          replaces: os.makedirs()\n  .mkstemp()           replaces: tempfile.mkstemp()\n  .open()              replaces: built-in open()\n  .path.basename()     replaces: os.path.basename()\n  .path.dirname()      replaces: os.path.dirname()\n  .path.exists()       replaces: os.path.exists()\n  .path.expanduser()   replaces: os.path.expanduser()\n  .path.getmtime()     replaces: os.path.getmtime()\n  .path.isdir()        replaces: os.path.isdir()\n  .path.join()         replaces: os.path.join()\n  .path.splitext()     replaces: os.path.splitext()\n  .remove()            replaces: os.remove()\n  .rename()            replaces: os.rename()\n  .rmdir()             replaces: os.rmdir()\n  .rmtree()            replaces: shutil.rmtree()\n  .walk()              replaces: os.walk()\n\n\n.. example output methods.py\n\nyou can provide a check level when you create the\n`pathlibconversionhelper()` instance.\n\n- if check is non-zero, all calls are being logged and the invocations\n  can be dumped e.g. at the end of the program with\n  ``pl.dump(stream, show_all=false)`` this will include\n  the number of invocations not using path (and using path uniquely as well\n  if ``show_all=true``)\n- if check is greater than 1, first usage is dumped immediately.\n\n\nif you start with the following code::\n\n  # coding: utf-8\n  \n  import os\n  import glob\n  import tempfile\n  import shutil\n  import random\n  \n  \n  class tempdir(object):\n      \"\"\"self removing (unless keep=true) temporary directory\"\"\"\n      def __init__(self, keep=false, basedir=none, prefix=none):\n          self._keep = keep\n          # mkdtemp creates with permissions rwx------\n          kw = dict(dir=basedir)\n          if prefix is not none:\n              kw['prefix'] = prefix\n          # mkdtemp doesn't do the right thing if none is passed in\n          # as it has prefix=template in definition\n          self._tmpdir = tempfile.mkdtemp(**kw)\n  \n      def remove(self):\n          shutil.rmtree(self._tmpdir)\n  \n      def chdir(self):\n          os.chdir(self._tmpdir)\n  \n      def tempfilename(self, extension=''):\n          fd, name = tempfile.mkstemp(suffix=extension, dir=self._tmpdir)\n          os.close(fd)\n          return name\n  \n      def tempfilename2(self, extension=''):\n          while true:\n              name = os.path.join(\n                  self._tmpdir,\n                  '%08d' % random.randint(0, 100000) + extension\n              )\n              if not os.path.exists(name):\n                  break\n          return name\n  \n      @property\n      def directory(self):\n          return self._tmpdir\n  \n      def __enter__(self):\n          return self\n  \n      def __exit__(self, exc_type, exc_val, exc_tb):\n          if not self._keep:\n              self.remove()\n  \n  \n  def main():\n      \"\"\"contrived example using tempdir\"\"\"\n      org_dir = os.getcwd()\n      with tempdir() as td:\n          for n in range(3):\n              t1 = td.tempfilename(extension='.sample')\n              with open(t1, 'w') as fp:\n                  fp.write('content\\n')\n          t2 = td.tempfilename2(extension='.sample2')\n          with open(t2, 'w') as fp:\n              fp.write('content\\n')\n          os.chdir(td.directory)\n          count = 0\n          for file_name in glob.glob('*.samp*'):\n              full_name = os.path.join(os.getcwd(), file_name)  # noqa\n              # print(full_name)\n              count += 1\n          os.chdir('/tmp')  # not using path\n          os.chdir(org_dir)\n      print('{} files found in temporary directory'.format(count))\n  \n  main()\n\n.. example code original.py\n\nyou get::\n\n  4 files found in temporary directory\n\n\n.. example output original.py\n\nwhen you start to change ``tempdir()`` to store the\nactual directory as a path, things start to break immediately::\n\n  # coding: utf-8\n  \n  import os\n  import glob\n  import tempfile\n  import shutil\n  import random\n  \n  from ruamel.std.pathlib import path                                   # added\n  \n  \n  class tempdir(object):\n      \"\"\"self removing (unless keep=true) temporary directory\"\"\"\n      def __init__(self, keep=false, basedir=none, prefix=none):\n          self._keep = keep\n          # mkdtemp creates with permissions rwx------\n          kw = dict(dir=basedir)\n          if prefix is not none:\n              kw['prefix'] = prefix\n          # mkdtemp doesn't do the right thing if none is passed in\n          # as it has prefix=template in definition\n          self._tmpdir = path(tempfile.mkdtemp(**kw))                   # changed\n  \n      def remove(self):\n          shutil.rmtree(self._tmpdir)\n  \n      def chdir(self):\n          os.chdir(self._tmpdir)\n  \n      def tempfilename(self, extension=''):\n          fd, name = tempfile.mkstemp(suffix=extension, dir=self._tmpdir)\n          os.close(fd)\n          return name\n  \n      def tempfilename2(self, extension=''):\n          while true:\n              name = os.path.join(\n                  self._tmpdir,\n                  '%08d' % random.randint(0, 100000) + extension\n              )\n              if not os.path.exists(name):\n                  break\n          return name\n  \n      @property\n      def directory(self):\n          return self._tmpdir\n  \n      def __enter__(self):\n          return self\n  \n      def __exit__(self, exc_type, exc_val, exc_tb):\n          if not self._keep:\n              self.remove()\n  \n  \n  def main():\n      \"\"\"contrived example using tempdir\"\"\"\n      org_dir = os.getcwd()\n      with tempdir() as td:\n          for n in range(3):\n              t1 = td.tempfilename(extension='.sample')\n              with open(t1, 'w') as fp:\n                  fp.write('content\\n')\n          t2 = td.tempfilename2(extension='.sample2')\n          with open(t2, 'w') as fp:\n              fp.write('content\\n')\n          os.chdir(td.directory)\n          count = 0\n          for file_name in glob.glob('*.samp*'):\n              full_name = os.path.join(os.getcwd(), file_name)  # noqa\n              # print(full_name)\n              count += 1\n          os.chdir('/tmp')  # not using path\n          os.chdir(org_dir)\n      print('{} files found in temporary directory'.format(count))\n  \n  main()\n\n.. example code stage1.py\n\nwith some errors::\n\n  traceback (most recent call last):\n    file \"_example/stage1.py\", line 80, in <module>\n      main()\n    file \"_example/stage1.py\", line 77, in main\n      os.chdir(org_dir)\n    file \"_example/stage1.py\", line 56, in __exit__\n      self.remove()\n    file \"_example/stage1.py\", line 27, in remove\n      shutil.rmtree(self._tmpdir)\n    file \"/opt/python/2.7.13/lib/python2.7/shutil.py\", line 228, in rmtree\n      if os.path.islink(path):\n    file \"/home/venv/dev/lib/python2.7/posixpath.py\", line 135, in islink\n      st = os.lstat(path)\n  typeerror: coercing to unicode: need string or buffer, posixpath found\n\n\n.. example error_output stage1.py\n\ninstead of changing every usage in your program in one go, and\nhope it will work again, you replace the routines from the standard\nmodule::\n\n  # coding: utf-8\n  \n  import os\n  import glob\n  import tempfile\n  import shutil                       # noqa\n  import random\n  \n  from ruamel.std.pathlib import path, pathlibconversionhelper            # changed\n  pl = pathlibconversionhelper()                                          # added\n  \n  \n  class tempdir(object):\n      \"\"\"self removing (unless keep=true) temporary directory\"\"\"\n      def __init__(self, keep=false, basedir=none, prefix=none):\n          self._keep = keep\n          # mkdtemp creates with permissions rwx------\n          kw = dict(dir=basedir)\n          if prefix is not none:\n              kw['prefix'] = prefix\n          # mkdtemp doesn't do the right thing if none is passed in\n          # as it has prefix=template in definition\n          self._tmpdir = path(tempfile.mkdtemp(**kw))\n  \n      def remove(self):\n          pl.rmtree(self._tmpdir)\n  \n      def chdir(self):\n          os.chdir(self._tmpdir)\n  \n      def tempfilename(self, extension=''):\n          fd, name = pl.mkstemp(suffix=extension, dir=self._tmpdir)     # changed\n          os.close(fd)\n          return name\n  \n      def tempfilename2(self, extension=''):\n          while true:\n              name = pl.path.join(\n                  self._tmpdir,\n                  '%08d' % random.randint(0, 100000) + extension\n              )\n              if not pl.path.exists(name):                              # changed\n                  break\n          return name\n  \n      @property\n      def directory(self):\n          return self._tmpdir\n  \n      def __enter__(self):\n          return self\n  \n      def __exit__(self, exc_type, exc_val, exc_tb):\n          if not self._keep:\n              self.remove()\n  \n  \n  def main():\n      \"\"\"contrived example using tempdir\"\"\"\n      org_dir = os.getcwd()\n      with tempdir() as td:\n          for n in range(3):\n              t1 = td.tempfilename(extension='.sample')\n              with open(t1, 'w') as fp:\n                  fp.write('content\\n')\n          t2 = td.tempfilename2(extension='.sample2')\n          with pl.open(t2, 'w') as fp:\n              c = 'content\\n'                                           # added\n              if not isinstance(fp, file):                              # added\n                  c = unicode(c)                                        # added\n              fp.write(c)                                               # changed\n          pl.chdir(td.directory)\n          count = 0\n          for file_name in glob.glob('*.samp*'):\n              full_name = pl.path.join(os.getcwd(), file_name)  # noqa  # changed\n              # print(full_name)\n              count += 1\n          pl.chdir('/tmp')  # not using path\n          pl.chdir(org_dir)                                             # changed\n      print('{} files found in temporary directory'.format(count))\n  \n  main()\n\n.. example code stage2.py\n\ngiving (again)::\n\n  4 files found in temporary directory\n\n\n.. example output stage2.py\n\nchange back just the creation of ``self._tempdir`` to the original::\n\n  self._tmpdir = tempfile.mkdtemp(**kw)\n\nand the output stays::\n\n  4 files found in temporary directory\n\n\n.. example output stage2org.py\n\n\nif you now change the creation of ``pl`` to::\n\n  pl = pathlibconversionhelper(check=2)\n\nyou get as output::\n\n  update .mkstemp to use path.mkstemp() [_example/stage3.py:34 / path (true,)]\n  update .path.join to use \"/\" [_example/stage3.py:42 / path (true, false)]\n  update .exists to use path.exists() [_example/stage3.py:44 / path (true,)]\n  update .open to use path.open() [_example/stage3.py:69 / path (true,)]\n  update .chdir to use path.chdir() or os.chdir(str(path)) [_example/stage3.py:74 / path (true,)]\n  update .path.join to use \"/\" [_example/stage3.py:77 / path (false, false)]\n  update .chdir to use path.chdir() or os.chdir(str(path)) [_example/stage3.py:80 / path (false,)]\n  update .chdir to use path.chdir() or os.chdir(str(path)) [_example/stage3.py:81 / path (false,)]\n  update .rmtree to use path.rmtree() or shutil.rmtree(str(path)) [_example/stage3.py:28 / path (true,)]\n  4 files found in temporary directory\n\n\n.. example output stage3.py\n\nif you use ``check=1`` and at the end ``pl.dump()``, you get::\n\n  4 files found in temporary directory\n  update .path.join to use \"/\" [_example/stage4.py:42 / 1 / path (true, false)]\n  update .chdir to use path.chdir() or os.chdir(str(path)) [_example/stage4.py:81 / 1 / path (false,)]\n  update .path.join to use \"/\" [_example/stage4.py:77 / 4 / path (false, false)]\n  update .chdir to use path.chdir() or os.chdir(str(path)) [_example/stage4.py:80 / 1 / path (false,)]\n\n\n.. example output stage4.py\n\nshowing where you still use string based paths/filenames.\n\nthe message\npart ``file_name.py: 123 / 2 / path (true, false)`` means that there\nwere two calls on line 123 in ``file_name.py`` and that they were called with\nthe first parameter being a path, the second not being a path (when replacing\n``os.path.join()`` with path's ``\"/\"`` concatenation operator that would\nbe a good starting point, for other situation you might want to convert\nthe second parameter to a path instance as well).\n\nextending ``pathlibconversionhelper``\n-------------------------------------\n\nif ``pathlibconversionhelper`` doesn't contain a particular function (yet)\nyou can easily subclass it and add your own::\n\n  from ruamel.std.pathlib import path, pathlibconversionhelper\n  \n  \n  class myplch(pathlibconversionhelper):\n      # an example, ruamel.std.pathlib already adds mkstemp\n      def mkstemp(self, suffix=\"\", prefix=none, dir=none, text=false):\n          import tempfile\n          # would be much better if prefix defaults to built-in value (int, none, string)\n          if prefix is none:\n              prefix = tempfile.template\n          self.__add_usage(dir, 'update .mkstemp to use path.mkstemp()')\n          if isinstance(dir, path):\n              dir = str(dir)\n          return tempfile.mkstemp(suffix, prefix, dir, text)\n  \n  pl = myplch(check=1)\n\n.. example code extend.py\n\nthe first parameter for ``self.add_usage()`` is used to determine if\na path is used or not. this should be a list of all relevant variables\n(that could be ``path`` instances or not). if the list would only have a\nsingle element it doesn't have to be passed in as a list (as in the\nexample). the second parameter should be a string with some help on further\ngetting rid of the call to ``.mkstemp()``.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "ruamel.std.pathlib",
  "package_url": "https://pypi.org/project/ruamel.std.pathlib/",
  "project_url": "https://pypi.org/project/ruamel.std.pathlib/",
  "project_urls": {
    "Homepage": "https://sourceforge.net/p/ruamel-std-pathlib/code/ci/default/tree"
  },
  "release_url": "https://pypi.org/project/ruamel.std.pathlib/0.12.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "improvements over the standard pathlib module and pathlib2 package",
  "version": "0.12.0",
  "releases": [],
  "developers": [
    "a.van.der.neut@ruamel.eu",
    "anthon_van_der_neut"
  ],
  "kwds": "pathlib2 pathlib ruamel pathlibconversionhelper posixpath",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_ruamel.std.pathlib",
  "homepage": "https://sourceforge.net/p/ruamel-std-pathlib/code/ci/default/tree",
  "release_count": 16,
  "dependency_ids": [],
  "documentation_summary": "The HTML text describes the `ruamel.std.pathlib` package version 0.13.0, released on March 3, 2024, available on PyPI (Python Package Index). It is designed as an improvement and drop-in replacement for the standard Python `pathlib` module, offering additional functionalities such as `unlink` alias for `remove`, `copy()` and `rmtree()` from `shutil`, `hash()` for file content hashing, and directory management methods like `pushd()` and `popd()`. The package requires Python 3 or higher and is licensed under the MIT License. The author is Anthon van der Neut. The package also includes a `PathLibConversionHelper` for easing the transition from traditional file and directory handling functions to `pathlib`-based ones.",
  "embedding": [
    -0.01151407789438963,
    0.024944784119725227,
    -0.009747631847858429,
    -0.0292071383446455,
    -0.0011263771448284388,
    0.023986469954252243,
    0.0023314219433814287,
    -0.03724553808569908,
    -0.026346499100327492,
    -0.009668964892625809,
    -0.00559255201369524,
    -0.008925198577344418,
    -0.020296243950724602,
    0.03738857060670853,
    0.016777656972408295,
    0.008267250843346119,
    0.018508343026041985,
    -0.014789511449635029,
    0.010906191542744637,
    0.03292597085237503,
    0.027605179697275162,
    0.0008385252440348268,
    -0.006747535429894924,
    -0.02832034043967724,
    0.004973938688635826,
    0.008288705721497536,
    0.022141357883810997,
    -0.030294181779026985,
    0.026346499100327492,
    -0.013788286596536636,
    0.03261129930615425,
    -0.0031717349775135517,
    -0.039276592433452606,
    -0.02284221351146698,
    -0.02731911651790142,
    -0.030008118599653244,
    0.02454429492354393,
    -0.00497036287561059,
    0.01733548194169998,
    0.0168920811265707,
    0.009790541604161263,
    0.010033695958554745,
    0.0003897622518707067,
    0.01682056486606598,
    -0.0319533534348011,
    0.013695316389203072,
    0.016176922246813774,
    -0.01880871132016182,
    -0.007645061705261469,
    0.021225951611995697,
    0.004569873213768005,
    0.002724759979173541,
    0.01792191155254841,
    -0.019967271015048027,
    -0.010334063321352005,
    -0.0018191884737461805,
    0.01109213288873434,
    0.021683653816580772,
    -0.00978338997811079,
    0.0025835158303380013,
    0.003990593366324902,
    0.006103891413658857,
    -0.021840989589691162,
    0.005503157153725624,
    -0.00612892210483551,
    -0.018236583098769188,
    -0.014253141358494759,
    0.02545969933271408,
    0.016234135255217552,
    0.012973004020750523,
    0.02297094278037548,
    0.027676695957779884,
    -0.023271309211850166,
    -0.007330391090363264,
    0.03166728839278221,
    -0.016691837459802628,
    -0.016834868118166924,
    0.023872043937444687,
    -0.004695026203989983,
    -0.016834868118166924,
    0.005774918012320995,
    -0.034642357379198074,
    0.007001417689025402,
    0.024501385167241096,
    0.025288062170147896,
    0.00567837106063962,
    0.008059854619204998,
    0.018980348482728004,
    -0.03704529255628586,
    -0.010491399094462395,
    0.010527157224714756,
    0.011621351353824139,
    0.019166290760040283,
    0.009826299734413624,
    -0.017063720151782036,
    0.029221441596746445,
    0.009232716634869576,
    0.03206777945160866,
    0.009554538875818253,
    -0.027733908966183662,
    -0.0038940468803048134,
    0.008581921458244324,
    -0.018722891807556152,
    0.0011934234062209725,
    -0.02977926656603813,
    -0.017163842916488647,
    -0.02116873860359192,
    0.004870240576565266,
    0.0301225446164608,
    0.018708588555455208,
    -0.051720380783081055,
    0.03919077292084694,
    0.002535242587327957,
    -0.044854842126369476,
    0.010527157224714756,
    -0.01912338100373745,
    0.018236583098769188,
    -0.006393531337380409,
    -0.012851427309215069,
    -0.014088653959333897,
    -0.0048380582593381405,
    0.01574782468378544,
    0.0242296252399683,
    0.01991005800664425,
    0.0033451614435762167,
    -0.029350170865654945,
    6.257650966290385e-05,
    -0.016234135255217552,
    0.004012048244476318,
    -0.0205680038779974,
    -0.0002460597606841475,
    0.009411507286131382,
    0.010026544332504272,
    -0.016277045011520386,
    -0.00856761820614338,
    -0.0030465819872915745,
    -0.000962784281000495,
    -0.01893744058907032,
    -0.029149925336241722,
    -0.007931125350296497,
    0.023543071001768112,
    0.012543908320367336,
    -0.018894530832767487,
    -0.001665429095737636,
    -0.018351009115576744,
    0.046456798911094666,
    0.020596610382199287,
    0.007337542716413736,
    0.014589265920221806,
    -0.011692867614328861,
    0.024158108979463577,
    -0.04659983143210411,
    -0.017750274389982224,
    -0.02454429492354393,
    -0.0016752625815570354,
    0.0019094775198027492,
    -0.010963404551148415,
    0.02504490688443184,
    -0.004223020281642675,
    -0.007730880752205849,
    -0.009626055136322975,
    0.03223941847681999,
    -0.005267154425382614,
    -0.0037653180770576,
    0.0009744056733325124,
    0.028592100366950035,
    0.007881063967943192,
    -0.0001785665372153744,
    -0.00981199648231268,
    0.006919173989444971,
    0.02425823174417019,
    -0.0009131700498983264,
    -0.05197783559560776,
    0.014889633283019066,
    0.016620321199297905,
    0.010276850312948227,
    -0.010577217675745487,
    0.02171226032078266,
    -0.013931319117546082,
    -0.0004509978462010622,
    0.004051382187753916,
    -0.0023779072798788548,
    -0.0021115101408213377,
    0.054781265556812286,
    -0.012143418192863464,
    -0.018923137336969376,
    -0.0035114360507577658,
    0.006829779129475355,
    8.911565237212926e-05,
    0.026475226506590843,
    0.00863198284059763,
    0.03884749859571457,
    -0.01610540598630905,
    -0.04594188556075096,
    -0.5776205062866211,
    -0.0016573835164308548,
    -0.020782552659511566,
    -0.05629740282893181,
    0.003085915930569172,
    -0.0032468268182128668,
    0.0023957863450050354,
    0.01600528322160244,
    -0.024172412231564522,
    0.029064107686281204,
    -0.01255821157246828,
    0.03547194227576256,
    0.008388828486204147,
    -0.014775208197534084,
    0.0015375942457467318,
    -0.021354680880904198,
    -0.010813220404088497,
    -0.01991005800664425,
    -0.007630758453160524,
    -0.010434186086058617,
    -0.03049442730844021,
    0.02504490688443184,
    -0.01569061353802681,
    -0.006221892777830362,
    -0.006532987579703331,
    0.016806263476610184,
    0.028534889221191406,
    -0.005692674312740564,
    0.012858578935265541,
    0.030637459829449654,
    -0.04946047440171242,
    0.015619096346199512,
    -0.006951356306672096,
    -0.017750274389982224,
    0.05898640677332878,
    -0.003972714301198721,
    -0.03138122707605362,
    0.052950453013181686,
    0.026918627321720123,
    0.03421325981616974,
    -0.021855292841792107,
    -0.03046582080423832,
    -0.017621545121073723,
    0.012672637589275837,
    0.035872429609298706,
    -0.020525095984339714,
    0.03967708349227905,
    0.02583158388733864,
    -0.028377553448081017,
    -0.019495263695716858,
    0.012136267498135567,
    -0.009111139923334122,
    0.00578922126442194,
    -0.016119709238409996,
    0.03346949443221092,
    -0.00428380910307169,
    0.016877777874469757,
    -0.006443592719733715,
    0.02580297738313675,
    0.0030465819872915745,
    0.00026639713905751705,
    0.006747535429894924,
    0.009668964892625809,
    -0.0025406063068658113,
    -0.03192474693059921,
    0.014639327302575111,
    -0.010906191542744637,
    -0.013974228873848915,
    0.014489144086837769,
    -0.02092558518052101,
    0.01255821157246828,
    -0.011685715988278389,
    0.00841028243303299,
    -0.0176787581294775,
    0.022785000503063202,
    0.05283603072166443,
    0.022227175533771515,
    -0.00853901170194149,
    0.00042239142931066453,
    0.0208254624158144,
    0.04133625328540802,
    0.012272147461771965,
    -0.001495578559115529,
    -0.015190000645816326,
    0.052035048604011536,
    0.005567521322518587,
    0.0014017138164490461,
    -0.015805037692189217,
    0.019767025485634804,
    -0.00641141040250659,
    -0.0034148895647376776,
    0.006064557936042547,
    -0.025531215593218803,
    -0.038389794528484344,
    0.007323239464312792,
    0.022856516763567924,
    -0.03627292066812515,
    -0.010498550720512867,
    -0.025216545909643173,
    -0.03818954899907112,
    -0.025860190391540527,
    -0.017564332112669945,
    -0.008317312225699425,
    0.0301225446164608,
    0.022069841623306274,
    0.020782552659511566,
    -0.02627498283982277,
    0.015046969056129456,
    0.02048218622803688,
    -0.025316668674349785,
    0.00841028243303299,
    -0.01430320180952549,
    -0.006447168532758951,
    0.009175504557788372,
    -0.006422137841582298,
    -0.037731848657131195,
    0.03192474693059921,
    -0.011685715988278389,
    0.015175697393715382,
    -0.027991367504000664,
    0.01232220884412527,
    -0.02155492641031742,
    0.002267057541757822,
    -0.0007951686275191605,
    0.023714710026979446,
    0.009161201305687428,
    0.041221827268600464,
    -0.0011424683034420013,
    -0.028306037187576294,
    0.010999162681400776,
    0.029006894677877426,
    0.0011192255187779665,
    0.015933766961097717,
    -0.025073513388633728,
    0.02284221351146698,
    0.0157192200422287,
    -0.003203917294740677,
    -0.008925198577344418,
    -0.007276753894984722,
    -0.007666516583412886,
    -0.02807718515396118,
    0.006143225356936455,
    0.010133818723261356,
    -0.02221287228167057,
    -0.0014124412555247545,
    -0.04754384234547615,
    0.005224244669079781,
    0.013752528466284275,
    -0.00937574915587902,
    0.0002057202800642699,
    -0.02902119792997837,
    -0.013223310001194477,
    -0.0382467620074749,
    0.005327942781150341,
    -0.019495263695716858,
    -0.011228013783693314,
    -0.000391773646697402,
    -0.03939101845026016,
    -0.017292572185397148,
    0.009118291549384594,
    0.011728625744581223,
    0.0025155756156891584,
    0.02174086682498455,
    0.012172024697065353,
    -0.012930095195770264,
    0.0051670316606760025,
    -0.005199213977903128,
    0.022756393998861313,
    0.003994169179350138,
    -0.03575800731778145,
    -0.012307905592024326,
    -0.006322015542536974,
    0.005810675676912069,
    -0.02548830583691597,
    0.02530236542224884,
    0.02889246866106987,
    -0.012644031085073948,
    0.030637459829449654,
    -0.011950325220823288,
    0.007401907350867987,
    0.013516525737941265,
    0.01563340052962303,
    -0.02485896460711956,
    0.0015617308672517538,
    0.007409058511257172,
    0.013001610524952412,
    5.4167790949577466e-05,
    -0.011757232248783112,
    0.0034810418728739023,
    0.007201662287116051,
    0.011521229520440102,
    0.013816893100738525,
    -0.016462985426187515,
    0.012500998564064503,
    -0.019638296216726303,
    0.02001018077135086,
    0.011213710531592369,
    0.005320791155099869,
    0.027204690501093864,
    0.020625216886401176,
    -0.0032879486680030823,
    -0.019609689712524414,
    0.019638296216726303,
    -0.032782938331365585,
    -0.0035364667419344187,
    -0.0382467620074749,
    0.021354680880904198,
    -0.017907608300447464,
    0.00833161547780037,
    -0.001664535142481327,
    0.012343663722276688,
    -0.007888215593993664,
    -0.039276592433452606,
    -0.02287082001566887,
    0.009154049679636955,
    0.028120094910264015,
    -0.0205680038779974,
    0.028148701414465904,
    0.0027748211286962032,
    0.015447458252310753,
    0.011242317035794258,
    -0.005031151231378317,
    0.0035078602377325296,
    -0.004680722951889038,
    0.012336512096226215,
    0.003693802049383521,
    0.007559242192655802,
    0.005406610202044249,
    -0.0002639387676026672,
    -0.020410669967532158,
    0.01064873393625021,
    -0.00462350994348526,
    0.001711020595394075,
    -0.020124604925513268,
    0.0011657109716907144,
    0.003520375583320856,
    0.03080909699201584,
    -0.031209588050842285,
    0.023371431976556778,
    -0.06116049364209175,
    -0.00029545053257606924,
    0.013638103380799294,
    0.014975452795624733,
    -0.011807293631136417,
    -0.007351845968514681,
    0.024959087371826172,
    0.013781134970486164,
    0.03163868188858032,
    -0.03238245099782944,
    0.011764383874833584,
    -0.008617679588496685,
    0.02454429492354393,
    0.002381483092904091,
    0.020525095984339714,
    0.013888409361243248,
    -0.008045551367104053,
    -0.00250484817661345,
    0.023643193766474724,
    0.013280523009598255,
    -0.008760711178183556,
    0.007130146492272615,
    -0.0034113137517124414,
    0.0182079765945673,
    0.005517460405826569,
    0.03389858826994896,
    -0.023400038480758667,
    -0.015948070213198662,
    -0.04657122492790222,
    -0.005438792519271374,
    -0.010841826908290386,
    -0.0008403131505474448,
    -0.04079273343086243,
    -0.0067582628689706326,
    -0.016148315742611885,
    0.026518136262893677,
    0.013795438222587109,
    0.018765801563858986,
    0.03103794902563095,
    0.011864506639540195,
    -0.01613401249051094,
    -0.024143805727362633,
    -0.04408247023820877,
    0.024115199223160744,
    0.0032593421638011932,
    -0.019709812477231026,
    -0.025731461122632027,
    -0.04654261842370033,
    0.02365749701857567,
    0.012057599611580372,
    0.00814567320048809,
    -0.002365392167121172,
    0.014381869696080685,
    0.012872882187366486,
    0.03738857060670853,
    -0.01739269308745861,
    0.0016618532827124,
    0.022427421063184738,
    -0.0330117903649807,
    -0.0075520905666053295,
    -0.022198569029569626,
    -0.003661619732156396,
    -0.0025209393352270126,
    -0.0053672767244279385,
    0.01849403977394104,
    0.04791572690010071,
    -0.0024404837749898434,
    0.008610527962446213,
    -0.01034836657345295,
    -0.01660601794719696,
    -0.012486695311963558,
    0.0013319856952875853,
    -0.0038010759744793177,
    0.0055496422573924065,
    0.011928870342671871,
    0.0036508922930806875,
    -4.6401597501244396e-05,
    0.025416789576411247,
    -0.005749887321144342,
    0.030551640316843987,
    0.028306037187576294,
    -0.02577437087893486,
    -0.011907415464520454,
    -0.009454417042434216,
    0.016205528751015663,
    0.029435990378260612,
    0.0015054120449349284,
    0.02098279818892479,
    0.007233844604343176,
    -0.03384137526154518,
    -0.03947683796286583,
    -0.009511629119515419,
    -0.019509566947817802,
    0.00813137087970972,
    0.007673667743802071,
    -0.0008090248447842896,
    0.01890883408486843,
    0.016234135255217552,
    0.0068440823815763,
    -0.002490545157343149,
    0.016119709238409996,
    0.010455640964210033,
    -0.0025459700264036655,
    0.007240996230393648,
    -0.02287082001566887,
    0.007387604098767042,
    -0.00043691814062185585,
    0.0013346675550565124,
    0.009690419770777225,
    0.013995683752000332,
    0.02514502964913845,
    0.021040011197328568,
    -0.005946556106209755,
    -0.0014330020640045404,
    -0.016119709238409996,
    0.008202886208891869,
    0.006414986215531826,
    0.005499581340700388,
    0.04345312714576721,
    -0.03449932485818863,
    -0.013037368655204773,
    0.025688551366329193,
    0.0026961537078022957,
    -0.00790967047214508,
    0.009025320410728455,
    0.025187939405441284,
    0.018079247325658798,
    0.005474550649523735,
    0.0027748211286962032,
    0.0035096481442451477,
    0.0033684042282402515,
    -0.03704529255628586,
    0.025574125349521637,
    -0.005016847979277372,
    -0.03129540756344795,
    0.009819148108363152,
    0.013523677363991737,
    -0.036473166197538376,
    -0.008939501829445362,
    0.043653372675180435,
    0.010870433412492275,
    0.006668868009001017,
    -0.01312318816781044,
    0.004530539270490408,
    -0.01038412470370531,
    0.00012113024422433227,
    -0.04559860751032829,
    0.014861026778817177,
    -0.006736808456480503,
    0.008338767103850842,
    -0.011971780098974705,
    -0.010577217675745487,
    0.026074737310409546,
    -0.029250048100948334,
    0.02514502964913845,
    0.0005283245118334889,
    -0.012307905592024326,
    -0.03364112973213196,
    0.009583145380020142,
    0.02249893732368946,
    -0.006021648179739714,
    0.005245699547231197,
    -0.009068230167031288,
    0.004895270802080631,
    0.009561690501868725,
    -0.00550673296675086,
    -0.027404936030507088,
    -0.016048192977905273,
    -0.015676310285925865,
    0.027862638235092163,
    -0.015561884269118309,
    0.01312318816781044,
    0.0003122120979242027,
    -0.01584794744849205,
    0.04196559637784958,
    0.015118484385311604,
    0.007902518846094608,
    0.008338767103850842,
    -0.004441144410520792,
    0.0021276012994349003,
    0.01692068763077259,
    0.009390052407979965,
    0.018165066838264465,
    0.012186327949166298,
    -0.012779911048710346,
    -0.011685715988278389,
    0.011499774642288685,
    -0.006579473149031401,
    3.165142334182747e-05,
    -0.006089588161557913,
    0.029321564361453056,
    -0.0030787643045186996,
    0.030580246821045876,
    -0.0116571094840765,
    -0.010419882833957672,
    0.016405772417783737,
    -0.018865924328565598,
    -0.014689388684928417,
    0.02388634718954563,
    -0.005517460405826569,
    0.02700444497168064,
    0.0022348754573613405,
    -0.0002558932173997164,
    0.018436826765537262,
    -0.03358392044901848,
    -0.017693061381578445,
    -0.02561703510582447,
    -0.011742928996682167,
    0.04657122492790222,
    0.020239030942320824,
    0.006908446550369263,
    0.019023258239030838,
    -0.0294645968824625,
    -0.030923523008823395,
    0.022770697250962257,
    0.020782552659511566,
    -0.006089588161557913,
    -0.019967271015048027,
    -0.016076799482107162,
    0.008617679588496685,
    -0.012944397516548634,
    -0.0010226789163425565,
    0.022355904802680016,
    -0.019666902720928192,
    0.01846543326973915,
    -0.002799851819872856,
    -0.012901488691568375,
    -0.0024673023726791143,
    -0.0025119998026639223,
    -0.030551640316843987,
    -0.017621545121073723,
    0.010427034460008144,
    0.005993041675537825,
    0.027390632778406143,
    -0.003547194181010127,
    0.015919463708996773,
    -0.0031914019491523504,
    -0.014703691937029362,
    0.010205334983766079,
    -2.4276332624140196e-05,
    0.003398798406124115,
    0.009225565008819103,
    -0.006343469955027103,
    0.00709796417504549,
    0.007730880752205849,
    0.01959538646042347,
    -0.018393918871879578,
    0.02530236542224884,
    0.01392416749149561,
    0.017564332112669945,
    0.0038725920021533966,
    -0.019395142793655396,
    0.004158656112849712,
    -0.04385361820459366,
    0.000604310305789113,
    0.006450744345784187,
    0.028749436140060425,
    -0.007401907350867987,
    -0.0502900592982769,
    -0.002773033222183585,
    0.027462149038910866,
    0.010391276329755783,
    -0.00438750721514225,
    -0.01736408658325672,
    -0.027576573193073273,
    -0.007115843240171671,
    -0.008696346543729305,
    -0.014081502333283424,
    0.009618903510272503,
    -0.025288062170147896,
    -0.04039224237203598,
    -0.0015402761055156589,
    -0.025860190391540527,
    0.015776431187987328,
    0.0010638006497174501,
    0.005760614760220051,
    0.012408028356730938,
    0.030036725103855133,
    0.019423749297857285,
    0.00328079704195261,
    0.012722698040306568,
    0.017020810395479202,
    -0.030952129513025284,
    -0.00044965691631659865,
    -0.009397204034030437,
    -0.018122157081961632,
    0.003472102340310812,
    -0.01943805254995823,
    -0.02372901327908039,
    -0.0021097222343087196,
    0.014639327302575111,
    0.005499581340700388,
    -0.030666066333651543,
    0.028334643691778183,
    0.0005225138738751411,
    0.00937574915587902,
    -0.015075575560331345,
    -0.008431737311184406,
    -0.03924798592925072,
    0.000698175048455596,
    -0.023357128724455833,
    0.005163455847650766,
    0.00761645520105958,
    -0.007065781857818365,
    -0.004798724316060543,
    0.0104127312079072,
    0.010140970349311829,
    0.02274209074676037,
    0.030008118599653244,
    0.02464441768825054,
    0.037102505564689636,
    -0.028906771913170815,
    -0.03132401406764984,
    -0.017192449420690536,
    -0.01783609390258789,
    -0.008753559552133083,
    0.013244764879345894,
    0.020024482160806656,
    -0.01733548194169998,
    -0.01359519362449646,
    -0.006425713654607534,
    -0.00770227424800396,
    -0.0316958948969841,
    -0.024029379710555077,
    0.021183041855692863,
    0.03936241194605827,
    0.029407383874058723,
    -0.020296243950724602,
    1.690124554443173e-05,
    -0.035243090242147446,
    0.007745184004306793,
    -0.027147477492690086,
    0.016934990882873535,
    -0.009668964892625809,
    0.005767766386270523,
    -0.024372655898332596,
    0.021883899345993996,
    0.02444417215883732,
    0.007323239464312792,
    0.002435120288282633,
    -0.028506282716989517,
    -0.008288705721497536,
    -0.027104567736387253,
    -0.01802203431725502,
    -0.005331518594175577,
    -0.004273081663995981,
    0.0021401166450232267,
    0.008124219253659248,
    0.005757038947194815,
    0.02116873860359192,
    -0.03229663148522377,
    -0.03266851231455803,
    -0.022069841623306274,
    0.005299336276948452,
    0.030952129513025284,
    -0.03575800731778145,
    0.0019863571505993605,
    -0.0259317047894001,
    -0.0022599059157073498,
    0.00011263771739322692,
    0.001927356468513608,
    -0.002004236215725541,
    -0.013259068131446838,
    -0.03178171440958977,
    -0.005524612031877041,
    0.02038206346333027,
    -0.005571097135543823,
    -0.011199407279491425,
    -0.0066652921959757805,
    0.004201565869152546,
    -0.006182559300214052,
    -0.03881889209151268,
    0.004737935494631529,
    0.03049442730844021,
    -0.03075188398361206,
    -0.005542490631341934,
    -0.0033791314344853163,
    -0.006121770478785038,
    0.009096836671233177,
    -0.019266413524746895,
    0.01389556098729372,
    -0.016076799482107162,
    0.06882701069116592,
    -0.03138122707605362,
    0.022069841623306274,
    0.007240996230393648,
    0.02132607437670231,
    -0.027962760999798775,
    0.0038261066656559706,
    -0.006472198758274317,
    -0.01055576279759407,
    0.028091488406062126,
    -0.00839598011225462,
    -0.03753160312771797,
    -0.014746601693332195,
    -0.019109077751636505,
    0.03292597085237503,
    0.024143805727362633,
    -0.02614625357091427,
    -0.011607049033045769,
    -0.02839185670018196,
    0.012744152918457985,
    -0.02221287228167057,
    -0.022298691794276237,
    0.027805425226688385,
    -0.006418562028557062,
    -0.003693802049383521,
    0.009626055136322975,
    0.010248244740068913,
    -0.002991157118231058,
    -0.007416210137307644,
    0.010126667097210884,
    -0.016720443964004517,
    -0.019509566947817802,
    -0.009804844856262207,
    0.01991005800664425,
    -0.02980787307024002,
    -0.00221699639223516,
    0.005213517230004072,
    -0.006951356306672096,
    -0.0032200084533542395,
    -0.00839598011225462,
    0.02051079273223877,
    0.012615424580872059,
    -0.011792990379035473,
    0.02155492641031742,
    0.027576573193073273,
    0.0013802590547129512,
    0.01600528322160244,
    -0.018980348482728004,
    -0.013616648502647877,
    0.009390052407979965,
    -0.0010673764627426863,
    -0.01202184148132801,
    -0.006300560664385557,
    -0.0023975742515176535,
    0.02252754382789135,
    0.009175504557788372,
    -0.023328522220253944,
    -0.008202886208891869,
    -0.01726396568119526,
    -0.023199794813990593,
    -0.013645255006849766,
    -0.025159332901239395,
    0.023328522220253944,
    0.0035614974331110716,
    -0.012543908320367336,
    0.013323432765901089,
    0.009833451360464096,
    -0.0015027301851660013,
    0.04253772273659706,
    -0.010441337712109089,
    -0.00856761820614338,
    -0.01906616799533367,
    0.016591714695096016,
    0.013158946298062801,
    -0.002145480364561081,
    -0.01928071677684784,
    0.00924701988697052,
    0.01569061353802681,
    0.01930932328104973,
    0.012808517552912235,
    0.028663616627454758,
    -0.018422523513436317,
    -0.020868372172117233,
    -0.002220572205260396,
    0.008503253571689129,
    0.005817827302962542,
    0.01202184148132801,
    -0.002000660402700305,
    -0.01647728867828846,
    -0.03424186632037163,
    0.039333805441856384,
    0.04883113130927086,
    0.013480767607688904,
    -0.013516525737941265,
    0.02155492641031742,
    0.0015840796986594796,
    0.0064292894676327705,
    -0.015733523294329643,
    -0.016248438507318497,
    0.012801365926861763,
    -0.016520198434591293,
    0.02451568841934204,
    -0.01473229844123125,
    0.006289833225309849,
    0.02312827855348587,
    -0.026303589344024658,
    0.015318729914724827,
    -0.013938470743596554,
    0.0077237291261553764,
    -0.031581468880176544,
    -0.014610720798373222,
    0.02596031129360199,
    -0.018351009115576744,
    0.025474002584815025,
    -0.01071309857070446,
    0.04173674434423447,
    0.013902712613344193,
    0.009146898053586483,
    -0.0061360737308859825,
    -0.011063527315855026,
    -0.023543071001768112,
    0.011936021968722343,
    0.011456864885985851,
    -0.023843437433242798,
    0.010612975805997849,
    -0.013702468015253544,
    -0.00841028243303299,
    0.030322788283228874,
    -0.016391469165682793,
    -0.0016001707408577204,
    -0.014296050183475018,
    0.021755170077085495,
    -0.0216121394187212,
    0.001806673244573176,
    -0.027519360184669495,
    0.001492896699346602,
    -0.00699426606297493,
    -0.016706140711903572,
    0.0015483216848224401,
    0.17896166443824768,
    0.020610913634300232,
    0.04259493574500084,
    0.00578922126442194,
    -0.02590309828519821,
    -0.012100509367883205,
    0.023743316531181335,
    0.007262451108545065,
    -0.014045744203031063,
    0.026704078540205956,
    -0.009268474765121937,
    -0.007401907350867987,
    -0.0066938987001776695,
    0.009261323139071465,
    -0.006979962810873985,
    0.012172024697065353,
    -0.05706977844238281,
    -0.04874531179666519,
    -0.022484634071588516,
    0.0017449907027184963,
    0.009411507286131382,
    -0.005746311508119106,
    -0.02051079273223877,
    -0.01235081534832716,
    0.005109819117933512,
    0.010641582310199738,
    -0.016491591930389404,
    -0.0018129309173673391,
    0.022198569029569626,
    -0.014117260463535786,
    -0.014002835378050804,
    0.008896592073142529,
    -0.017750274389982224,
    -0.0017235358245670795,
    -0.01890883408486843,
    -0.015504671260714531,
    0.0014678661245852709,
    0.006046678870916367,
    0.010891888290643692,
    0.01704941689968109,
    0.0016189436428248882,
    -0.03318342939019203,
    -0.003994169179350138,
    -0.026947233825922012,
    0.0032146447338163853,
    -0.010899039916694164,
    -0.023900650441646576,
    -0.009146898053586483,
    0.013166097924113274,
    0.012665485963225365,
    0.0075306361541152,
    -0.005982314236462116,
    0.009297081269323826,
    -0.005971586797386408,
    -0.000661970057990402,
    -0.01666323095560074,
    -0.012701243162155151,
    0.0059608593583106995,
    0.0007245466113090515,
    0.015776431187987328,
    -0.02548830583691597,
    0.021998325362801552,
    0.0028838831931352615,
    0.01124946866184473,
    -0.04408247023820877,
    0.009475870989263058,
    -0.02457290142774582,
    -0.0059608593583106995,
    -0.017635848373174667,
    -0.01255821157246828,
    0.019609689712524414,
    -0.02719038724899292,
    -0.011950325220823288,
    -0.005982314236462116,
    -0.018665678799152374,
    -0.017321178689599037,
    0.023299915716052055,
    0.01975272223353386,
    0.018737195059657097,
    0.01875149831175804,
    -9.799928375286981e-05,
    0.0265896525233984,
    -0.024687327444553375,
    0.00567837106063962,
    -0.011521229520440102,
    -0.006872688420116901,
    0.0037009536754339933,
    -0.01805064082145691,
    0.007366149220615625,
    -0.005116970743983984,
    -0.022355904802680016,
    -0.01682056486606598,
    0.007959731854498386,
    -0.0062826815992593765,
    0.013495070859789848,
    0.03584382310509682,
    0.009511629119515419,
    0.0206967331469059,
    0.007745184004306793,
    0.01660601794719696,
    -0.026260679587721825,
    0.05289324000477791,
    0.022169962525367737,
    0.012064751237630844,
    -0.01666323095560074,
    -0.004004896618425846,
    0.005156304221600294,
    0.002097207121551037,
    0.023056762292981148,
    -0.010605824179947376,
    0.015032665804028511,
    -0.014381869696080685,
    -0.002719396259635687,
    0.006661716382950544,
    0.02347155474126339,
    -0.019180594012141228,
    -0.009132594801485538,
    0.003284372854977846,
    -0.015046969056129456,
    0.02079685591161251,
    0.002751578576862812,
    0.010784614831209183,
    -0.0039011985063552856,
    -2.254430546599906e-05,
    -0.018107853829860687,
    -0.020553700625896454,
    -0.046771470457315445,
    0.028277430683374405,
    0.0033326460979878902,
    0.0007477892795577645,
    -0.005674795247614384,
    -0.01663462445139885,
    0.024959087371826172,
    0.003093067556619644,
    0.012944397516548634,
    -0.012043296359479427,
    -0.003641952760517597,
    -0.019581083208322525,
    -0.012894337065517902,
    0.00554606644436717,
    -0.01930932328104973,
    0.024458475410938263,
    -0.005467399023473263,
    -0.009454417042434216,
    0.017020810395479202,
    -0.017478512600064278,
    0.0008805408724583685,
    -0.00913974642753601,
    -0.018422523513436317,
    0.006944204680621624,
    -0.023142581805586815,
    -0.00497036287561059,
    0.007802397012710571,
    -0.03358392044901848,
    -0.005792797077447176,
    -0.023042459040880203,
    -0.032754331827163696,
    -0.039047740399837494,
    0.01969550922513008,
    -0.003513223957270384,
    -0.019552476704120636,
    0.003911925945430994,
    -0.00880362093448639,
    0.0019345080945640802,
    -0.02797706425189972,
    -0.026704078540205956,
    -0.1820511519908905,
    0.0035382546484470367,
    0.0013579102233052254,
    -0.044625990092754364,
    0.0005019530071876943,
    0.004534115083515644,
    0.007809548173099756,
    0.0061646802350878716,
    -0.00883937906473875,
    -0.018765801563858986,
    0.021941112354397774,
    0.0034810418728739023,
    -0.021597836166620255,
    -0.026918627321720123,
    -0.005181334912776947,
    -0.004841634072363377,
    0.0015259728534147143,
    0.00044920993968844414,
    0.04004896432161331,
    0.006772566121071577,
    0.0268471110612154,
    -0.009032472036778927,
    0.006332742981612682,
    0.026203466579318047,
    -0.0064006829634308815,
    -0.024758843705058098,
    -0.017750274389982224,
    -0.001738733029924333,
    0.006979962810873985,
    -0.025388183072209358,
    -0.0035811641719192266,
    0.01008375734090805,
    0.002336785662919283,
    0.026289286091923714,
    0.010462792590260506,
    0.015304426662623882,
    0.0208254624158144,
    -0.03386998176574707,
    -0.00830300897359848,
    0.020739642903208733,
    0.03009393811225891,
    0.012086206115782261,
    0.03284015133976936,
    -0.015561884269118309,
    -0.034985631704330444,
    0.032468270510435104,
    0.012136267498135567,
    -0.03172450140118599,
    0.012436633929610252,
    -0.017793184146285057,
    0.005846433807164431,
    -0.0024440595880150795,
    -0.019423749297857285,
    0.00400132080540061,
    0.029950905591249466,
    0.030065331608057022,
    -0.006186135113239288,
    0.002315330784767866,
    0.015790734440088272,
    0.007494878023862839,
    -0.0020900554955005646,
    -0.029164228588342667,
    0.01865137554705143,
    -0.0034506474621593952,
    0.0077809421345591545,
    -0.02810579165816307,
    -0.01676335372030735,
    0.008910895325243473,
    -0.01707802340388298,
    0.019166290760040283,
    0.025559822097420692,
    -0.00981199648231268,
    0.004004896618425846,
    -0.0011701807379722595,
    0.022985246032476425,
    0.014818117022514343,
    -0.022541847079992294,
    0.01827949285507202,
    0.023671800270676613,
    -0.007945428602397442,
    -0.01846543326973915,
    0.04539836198091507,
    0.009132594801485538,
    0.00632559135556221,
    0.010362669825553894,
    0.005438792519271374,
    0.0018415373051539063,
    -0.01862276904284954,
    -0.018451130017638206,
    -0.012393725104629993,
    0.006182559300214052,
    0.006218316964805126,
    0.005685522686690092,
    -0.024315442889928818,
    0.0021097222343087196,
    0.02111152559518814,
    -0.004762966185808182,
    -0.006618806626647711,
    0.015948070213198662,
    -0.034842599183321,
    0.035614974796772,
    -0.002315330784767866,
    -0.01195747684687376,
    -0.011971780098974705,
    0.06516538560390472,
    0.021998325362801552,
    -0.02271348424255848,
    -0.015862250700592995,
    0.030236968770623207,
    -0.0024923330638557673,
    -0.011785838752985,
    0.007823851890861988,
    -0.007062206044793129,
    0.024558598175644875,
    -0.03444211184978485,
    0.015333033166825771,
    -0.0005341352079994977,
    -0.002769457409158349,
    0.01131383329629898,
    -0.028048578649759293,
    0.03793209046125412,
    -0.005942980293184519,
    -0.018136460334062576,
    0.022670576348900795,
    -0.02564564161002636,
    -0.010641582310199738,
    -0.09148328006267548,
    -0.035271696746349335,
    -0.0024494233075529337,
    0.015647703781723976,
    -0.03796069696545601,
    0.000736167945433408,
    -0.015933766961097717,
    0.010562914423644543,
    0.008152824826538563,
    0.001400819863192737,
    -0.004062109626829624,
    0.004795148503035307,
    -0.003768893890082836,
    0.017979124560952187,
    -0.010419882833957672,
    0.0004796042339876294,
    -0.037703242152929306,
    -0.016620321199297905,
    -0.0294645968824625,
    0.006086012348532677,
    0.011671412736177444,
    0.0024029379710555077,
    -0.005528187844902277,
    -0.01752142235636711,
    -0.0022277238313108683,
    0.0032718575093895197,
    -0.0364159531891346,
    0.011971780098974705,
    0.006633109878748655,
    -0.0038654403761029243,
    0.003886895254254341,
    -0.020625216886401176,
    0.0072517236694693565,
    -0.0048380582593381405,
    0.018737195059657097,
    0.0033844951540231705,
    -0.029950905591249466,
    -0.013516525737941265,
    0.01392416749149561,
    -0.01416017021983862,
    -0.0037224083207547665,
    0.019337929785251617,
    -0.009590297006070614,
    0.0035740125458687544,
    -0.0027086688205599785,
    -0.020811159163713455,
    0.003965562675148249,
    0.010848978534340858,
    0.03103794902563095,
    0.005796372890472412,
    0.019466659054160118,
    -0.01890883408486843,
    0.007294632960110903,
    -0.007945428602397442,
    0.019652599468827248,
    -0.016648927703499794,
    -0.009461568668484688,
    -0.013909864239394665,
    -0.0047558145597577095,
    -0.04668565094470978,
    -0.02983647957444191,
    0.018265189602971077,
    0.009475870989263058,
    0.019452355802059174,
    0.009633206762373447,
    -0.008581921458244324,
    0.016877777874469757,
    0.014338959939777851,
    0.03853282704949379,
    0.002790912287309766,
    -0.005034727044403553,
    0.010627279058098793,
    -0.028677919879555702,
    0.011363893747329712,
    -0.008581921458244324,
    0.04187977686524391,
    -0.005109819117933512,
    -0.005646189209073782,
    -0.004677147138863802,
    -0.03595824912190437,
    0.0034506474621593952,
    -0.0006204014061950147,
    -0.012708394788205624,
    -0.006969235371798277,
    0.0008371843141503632,
    0.022012628614902496,
    0.009797693230211735,
    0.012250692583620548,
    0.021340377628803253,
    -0.03827536851167679,
    0.003135977080091834,
    -0.006833354942500591,
    0.029350170865654945,
    -0.011521229520440102,
    0.003786772722378373,
    0.017693061381578445,
    -0.004577024839818478,
    -0.012486695311963558,
    0.0022312996443361044,
    0.024715933948755264,
    -0.05995902419090271,
    -0.00038104623672552407,
    -0.0678543895483017,
    0.02221287228167057,
    0.0003220455255359411,
    -0.009990787133574486,
    -0.03467096388339996,
    -0.04671425744891167,
    0.004748662933707237,
    -0.03610128164291382,
    0.022785000503063202,
    0.03126680105924606,
    -0.03238245099782944,
    0.004780845250934362,
    -0.006686747074127197,
    0.0030340668745338917,
    0.009862057864665985,
    -0.020882675424218178,
    0.025559822097420692,
    0.009668964892625809,
    0.033383674919605255,
    0.016391469165682793,
    0.016992203891277313,
    0.005785645451396704,
    0.01726396568119526,
    0.01634855940937996,
    -0.005081212613731623,
    0.009325687773525715,
    -0.010913343168795109,
    0.02794845774769783,
    0.007845306769013405,
    -0.021812383085489273,
    0.01969550922513008,
    -0.025874493643641472,
    -0.03438489884138107,
    0.004802300129085779,
    0.01318755280226469,
    0.008896592073142529,
    0.030923523008823395,
    -0.0005207259673625231,
    0.0024226049426943064,
    0.03226802498102188,
    -0.021283164620399475,
    0.00014381423534359783,
    0.037131112068891525,
    -0.0057784938253462315,
    -0.02533097192645073,
    -0.0074591198936104774,
    0.00473436014726758,
    0.009626055136322975,
    0.02066812664270401,
    -0.003321918658912182,
    0.052692998200654984,
    0.009969332255423069,
    -0.015089877881109715,
    -0.023228399455547333,
    0.033698342740535736,
    0.0023975742515176535,
    0.004115746356546879,
    -0.03249687701463699,
    -0.016877777874469757,
    0.018823014572262764,
    0.031810320913791656,
    0.030637459829449654,
    0.009676116518676281,
    -0.00836737360805273,
    -0.010684492066502571,
    -0.012779911048710346,
    -0.019681205973029137,
    -0.02239881455898285,
    -7.944981916807592e-05,
    0.007351845968514681,
    -0.028563493862748146,
    0.00017912525800056756,
    0.03315482288599014,
    0.027962760999798775,
    0.0241008959710598,
    -0.0028320341370999813,
    -0.005867888685315847,
    -0.025159332901239395,
    -0.041193220764398575,
    0.016877777874469757,
    -0.0012658333871513605,
    -0.02870652638375759,
    -0.010841826908290386,
    0.013402100652456284,
    0.020024482160806656,
    -0.01151407789438963,
    -0.027419239282608032,
    -0.011435410007834435,
    0.006368500646203756,
    0.021597836166620255,
    -0.011943173594772816,
    0.0061897109262645245,
    0.020053088665008545,
    -0.009432962164282799,
    0.014632175676524639,
    -0.004112170543521643,
    0.020367760211229324,
    -0.01195747684687376,
    0.017278268933296204,
    -0.0034524353686720133,
    0.0012568938545882702,
    -0.030923523008823395,
    0.0036097706761211157,
    -0.01490393653512001,
    -0.00970472302287817,
    0.0035847399849444628,
    -0.008109916001558304,
    -0.017693061381578445,
    -0.0015992767876014113,
    0.03853282704949379,
    0.0319533534348011,
    -0.013023065403103828,
    -0.018579859286546707,
    0.0183367058634758,
    -0.04125043377280235,
    0.014832420274615288,
    0.000771478982642293,
    -0.001085255411453545,
    -0.006035951431840658,
    0.0398201160132885,
    0.014002835378050804,
    0.027834031730890274,
    0.05063333734869957,
    -0.011535532772541046,
    -0.014288898557424545,
    0.023299915716052055,
    0.011306681670248508,
    0.005453095771372318,
    0.020181817933917046,
    0.008124219253659248,
    -0.02234160155057907,
    -0.0036830746103078127,
    -0.045226726680994034,
    -0.019352233037352562,
    -0.010169576853513718,
    -0.011564139276742935,
    -0.006815475877374411,
    -0.02101140469312668,
    0.002386846812441945,
    0.07025732845067978,
    0.006804748438298702,
    -0.017321178689599037,
    0.0014303202042356133,
    0.001158559345640242,
    0.009997938759624958,
    0.016091102734208107,
    0.0037724694702774286,
    0.01011236384510994,
    -0.0379893034696579,
    -3.6931316572008654e-05,
    -0.012744152918457985,
    0.020553700625896454,
    -0.017120933160185814,
    -0.02791985124349594,
    -0.0008581921574659646,
    -0.032468270510435104,
    0.017778880894184113,
    -0.0015965949278324842,
    0.02520224265754223,
    0.0201675146818161,
    0.025345275178551674,
    -0.004130049608647823,
    0.00981199648231268,
    -0.05275021120905876,
    -0.010863281786441803,
    0.03289736434817314,
    -0.0038940468803048134,
    0.010734553448855877,
    -0.01587655395269394,
    0.002243814757093787,
    0.011685715988278389,
    -0.01752142235636711,
    -0.02548830583691597,
    -0.0012971216347068548,
    -0.018236583098769188,
    -0.014410476200282574,
    0.015447458252310753,
    0.007995489984750748,
    0.036473166197538376,
    -0.005739159882068634,
    -0.002674698829650879,
    -0.01757863536477089,
    -0.042451903223991394,
    0.022155659273266792,
    -0.007587848696857691,
    -0.0012005750322714448,
    0.004298112355172634,
    -0.026804201304912567
  ]
}
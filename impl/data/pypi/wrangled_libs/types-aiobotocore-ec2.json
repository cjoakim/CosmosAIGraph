{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.13",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "typing :: typed"
  ],
  "description": "type annotations for aiobotocore.ec2 2.9.0 service generated with mypy-boto3-builder 7.21.0\n<a id=\"types-aiobotocore-ec2\"></a>\n\n# types-aiobotocore-ec2\n\n[![pypi - types-aiobotocore-ec2](https://img.shields.io/pypi/v/types-aiobotocore-ec2.svg?color=blue)](https://pypi.org/project/types-aiobotocore-ec2)\n[![pypi - python version](https://img.shields.io/pypi/pyversions/types-aiobotocore-ec2.svg?color=blue)](https://pypi.org/project/types-aiobotocore-ec2)\n[![docs](https://img.shields.io/readthedocs/types-aiobotocore.svg?color=blue)](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_ec2/)\n[![pypi - downloads](https://static.pepy.tech/badge/types-aiobotocore-ec2)](https://pepy.tech/project/types-aiobotocore-ec2)\n\n![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)\n\ntype annotations for\n[aiobotocore.ec2 2.9.0](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ec2.html#ec2)\nservice compatible with [vscode](https://code.visualstudio.com/),\n[pycharm](https://www.jetbrains.com/pycharm/),\n[emacs](https://www.gnu.org/software/emacs/),\n[sublime text](https://www.sublimetext.com/),\n[mypy](https://github.com/python/mypy),\n[pyright](https://github.com/microsoft/pyright) and other tools.\n\ngenerated by\n[mypy-boto3-builder 7.21.0](https://github.com/youtype/mypy_boto3_builder).\n\nmore information can be found on\n[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in\n[types-aiobotocore-ec2 docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_ec2/).\n\nsee how it helps to find and fix potential bugs:\n\n![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)\n\n- [types-aiobotocore-ec2](#types-aiobotocore-ec2)\n  - [how to install](#how-to-install)\n    - [from pypi with pip](#from-pypi-with-pip)\n  - [how to uninstall](#how-to-uninstall)\n  - [usage](#usage)\n    - [vscode](#vscode)\n    - [pycharm](#pycharm)\n    - [emacs](#emacs)\n    - [sublime text](#sublime-text)\n    - [other ides](#other-ides)\n    - [mypy](#mypy)\n    - [pyright](#pyright)\n  - [explicit type annotations](#explicit-type-annotations)\n    - [client annotations](#client-annotations)\n    - [paginators annotations](#paginators-annotations)\n    - [waiters annotations](#waiters-annotations)\n    - [service resource annotations](#service-resource-annotations)\n    - [other resources annotations](#other-resources-annotations)\n    - [collections annotations](#collections-annotations)\n    - [literals](#literals)\n    - [type definitions](#type-definitions)\n  - [how it works](#how-it-works)\n  - [what's new](#what's-new)\n    - [implemented features](#implemented-features)\n    - [latest changes](#latest-changes)\n  - [versioning](#versioning)\n  - [thank you](#thank-you)\n  - [documentation](#documentation)\n  - [support and contributing](#support-and-contributing)\n\n<a id=\"how-to-install\"></a>\n\n## how to install\n\n<a id=\"from-pypi-with-pip\"></a>\n\n### from pypi with pip\n\ninstall `types-aiobotocore` for `ec2` service.\n\n```bash\n# install with aiobotocore type annotations\npython -m pip install 'types-aiobotocore[ec2]'\n\n\n# lite version does not provide session.client/resource overloads\n# it is more ram-friendly, but requires explicit type annotations\npython -m pip install 'types-aiobotocore-lite[ec2]'\n\n\n# standalone installation\npython -m pip install types-aiobotocore-ec2\n```\n\n<a id=\"how-to-uninstall\"></a>\n\n## how to uninstall\n\n```bash\npython -m pip uninstall -y types-aiobotocore-ec2\n```\n\n<a id=\"usage\"></a>\n\n## usage\n\n<a id=\"vscode\"></a>\n\n### vscode\n\n- install\n  [python extension](https://marketplace.visualstudio.com/items?itemname=ms-python.python)\n- install\n  [pylance extension](https://marketplace.visualstudio.com/items?itemname=ms-python.vscode-pylance)\n- set `pylance` as your python language server\n- install `types-aiobotocore[ec2]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[ec2]'\n```\n\nboth type checking and code completion should now work. no explicit type\nannotations required, write your `aiobotocore` code as usual.\n\n<a id=\"pycharm\"></a>\n\n### pycharm\n\ninstall `types-aiobotocore-lite[ec2]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore-lite[ec2]'`\n```\n\nboth type checking and code completion should now work. explicit type\nannotations **are required**.\n\nuse `types-aiobotocore` package instead for implicit type discovery.\n\n<a id=\"emacs\"></a>\n\n### emacs\n\n- install `types-aiobotocore` with services you use in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[ec2]'\n```\n\n- install [use-package](https://github.com/jwiegley/use-package),\n  [lsp](https://github.com/emacs-lsp/lsp-mode/),\n  [company](https://github.com/company-mode/company-mode) and\n  [flycheck](https://github.com/flycheck/flycheck) packages\n- install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package\n\n```elisp\n(use-package lsp-pyright\n  :ensure t\n  :hook (python-mode . (lambda ()\n                          (require 'lsp-pyright)\n                          (lsp)))  ; or lsp-deferred\n  :init (when (executable-find \"python3\")\n          (setq lsp-pyright-python-executable-cmd \"python3\"))\n  )\n```\n\n- make sure emacs uses the environment where you have installed\n  `types-aiobotocore`\n\ntype checking should now work. no explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"sublime-text\"></a>\n\n### sublime text\n\n- install `types-aiobotocore[ec2]` with services you use in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[ec2]'\n```\n\n- install [lsp-pyright](https://github.com/sublimelsp/lsp-pyright) package\n\ntype checking should now work. no explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"other-ides\"></a>\n\n### other ides\n\nnot tested, but as long as your ide supports `mypy` or `pyright`, everything\nshould work.\n\n<a id=\"mypy\"></a>\n\n### mypy\n\n- install `mypy`: `python -m pip install mypy`\n- install `types-aiobotocore[ec2]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[ec2]'`\n```\n\ntype checking should now work. no explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"pyright\"></a>\n\n### pyright\n\n- install `pyright`: `npm i -g pyright`\n- install `types-aiobotocore[ec2]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[ec2]'\n```\n\noptionally, you can install `types-aiobotocore` to `typings` folder.\n\ntype checking should now work. no explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"explicit-type-annotations\"></a>\n\n## explicit type annotations\n\n<a id=\"client-annotations\"></a>\n\n### client annotations\n\n`ec2client` provides annotations for `session.create_client(\"ec2\")`.\n\n```python\nfrom aiobotocore.session import get_session\n\nfrom types_aiobotocore_ec2 import ec2client\n\nsession = get_session()\nasync with session.create_client(\"ec2\") as client:\n    client: ec2client\n    # now client usage is checked by mypy and ide should provide code completion\n```\n\n<a id=\"paginators-annotations\"></a>\n\n### paginators annotations\n\n`types_aiobotocore_ec2.paginator` module contains type annotations for all\npaginators.\n\n```python\nfrom aiobotocore.session import get_session\n\nfrom types_aiobotocore_ec2 import ec2client\nfrom types_aiobotocore_ec2.paginator import (\n    describeaddresstransferspaginator,\n    describeaddressesattributepaginator,\n    describeawsnetworkperformancemetricsubscriptionspaginator,\n    describebyoipcidrspaginator,\n    describecapacityblockofferingspaginator,\n    describecapacityreservationfleetspaginator,\n    describecapacityreservationspaginator,\n    describecarriergatewayspaginator,\n    describeclassiclinkinstancespaginator,\n    describeclientvpnauthorizationrulespaginator,\n    describeclientvpnconnectionspaginator,\n    describeclientvpnendpointspaginator,\n    describeclientvpnroutespaginator,\n    describeclientvpntargetnetworkspaginator,\n    describecoippoolspaginator,\n    describedhcpoptionspaginator,\n    describeegressonlyinternetgatewayspaginator,\n    describeexportimagetaskspaginator,\n    describefastlaunchimagespaginator,\n    describefastsnapshotrestorespaginator,\n    describefleetspaginator,\n    describeflowlogspaginator,\n    describefpgaimagespaginator,\n    describehostreservationofferingspaginator,\n    describehostreservationspaginator,\n    describehostspaginator,\n    describeiaminstanceprofileassociationspaginator,\n    describeimagespaginator,\n    describeimportimagetaskspaginator,\n    describeimportsnapshottaskspaginator,\n    describeinstanceconnectendpointspaginator,\n    describeinstancecreditspecificationspaginator,\n    describeinstanceeventwindowspaginator,\n    describeinstancestatuspaginator,\n    describeinstancetopologypaginator,\n    describeinstancetypeofferingspaginator,\n    describeinstancetypespaginator,\n    describeinstancespaginator,\n    describeinternetgatewayspaginator,\n    describeipampoolspaginator,\n    describeipamresourcediscoveriespaginator,\n    describeipamresourcediscoveryassociationspaginator,\n    describeipamscopespaginator,\n    describeipamspaginator,\n    describeipv6poolspaginator,\n    describelaunchtemplateversionspaginator,\n    describelaunchtemplatespaginator,\n    describelocalgatewayroutetablevirtualinterfacegroupassociationspaginator,\n    describelocalgatewayroutetablevpcassociationspaginator,\n    describelocalgatewayroutetablespaginator,\n    describelocalgatewayvirtualinterfacegroupspaginator,\n    describelocalgatewayvirtualinterfacespaginator,\n    describelocalgatewayspaginator,\n    describemanagedprefixlistspaginator,\n    describemovingaddressespaginator,\n    describenatgatewayspaginator,\n    describenetworkaclspaginator,\n    describenetworkinsightsaccessscopeanalysespaginator,\n    describenetworkinsightsaccessscopespaginator,\n    describenetworkinsightsanalysespaginator,\n    describenetworkinsightspathspaginator,\n    describenetworkinterfacepermissionspaginator,\n    describenetworkinterfacespaginator,\n    describeprefixlistspaginator,\n    describeprincipalidformatpaginator,\n    describepublicipv4poolspaginator,\n    describereplacerootvolumetaskspaginator,\n    describereservedinstancesmodificationspaginator,\n    describereservedinstancesofferingspaginator,\n    describeroutetablespaginator,\n    describescheduledinstanceavailabilitypaginator,\n    describescheduledinstancespaginator,\n    describesecuritygrouprulespaginator,\n    describesecuritygroupspaginator,\n    describesnapshottierstatuspaginator,\n    describesnapshotspaginator,\n    describespotfleetinstancespaginator,\n    describespotfleetrequestspaginator,\n    describespotinstancerequestspaginator,\n    describespotpricehistorypaginator,\n    describestalesecuritygroupspaginator,\n    describestoreimagetaskspaginator,\n    describesubnetspaginator,\n    describetagspaginator,\n    describetrafficmirrorfilterspaginator,\n    describetrafficmirrorsessionspaginator,\n    describetrafficmirrortargetspaginator,\n    describetransitgatewayattachmentspaginator,\n    describetransitgatewayconnectpeerspaginator,\n    describetransitgatewayconnectspaginator,\n    describetransitgatewaymulticastdomainspaginator,\n    describetransitgatewaypeeringattachmentspaginator,\n    describetransitgatewaypolicytablespaginator,\n    describetransitgatewayroutetableannouncementspaginator,\n    describetransitgatewayroutetablespaginator,\n    describetransitgatewayvpcattachmentspaginator,\n    describetransitgatewayspaginator,\n    describetrunkinterfaceassociationspaginator,\n    describeverifiedaccessendpointspaginator,\n    describeverifiedaccessgroupspaginator,\n    describeverifiedaccessinstanceloggingconfigurationspaginator,\n    describeverifiedaccessinstancespaginator,\n    describeverifiedaccesstrustproviderspaginator,\n    describevolumestatuspaginator,\n    describevolumespaginator,\n    describevolumesmodificationspaginator,\n    describevpcclassiclinkdnssupportpaginator,\n    describevpcendpointconnectionnotificationspaginator,\n    describevpcendpointconnectionspaginator,\n    describevpcendpointserviceconfigurationspaginator,\n    describevpcendpointservicepermissionspaginator,\n    describevpcendpointservicespaginator,\n    describevpcendpointspaginator,\n    describevpcpeeringconnectionspaginator,\n    describevpcspaginator,\n    getassociatedipv6poolcidrspaginator,\n    getawsnetworkperformancedatapaginator,\n    getgroupsforcapacityreservationpaginator,\n    getinstancetypesfrominstancerequirementspaginator,\n    getipamaddresshistorypaginator,\n    getipamdiscoveredaccountspaginator,\n    getipamdiscoveredresourcecidrspaginator,\n    getipampoolallocationspaginator,\n    getipampoolcidrspaginator,\n    getipamresourcecidrspaginator,\n    getmanagedprefixlistassociationspaginator,\n    getmanagedprefixlistentriespaginator,\n    getnetworkinsightsaccessscopeanalysisfindingspaginator,\n    getsecuritygroupsforvpcpaginator,\n    getspotplacementscorespaginator,\n    gettransitgatewayattachmentpropagationspaginator,\n    gettransitgatewaymulticastdomainassociationspaginator,\n    gettransitgatewaypolicytableassociationspaginator,\n    gettransitgatewayprefixlistreferencespaginator,\n    gettransitgatewayroutetableassociationspaginator,\n    gettransitgatewayroutetablepropagationspaginator,\n    getvpnconnectiondevicetypespaginator,\n    listimagesinrecyclebinpaginator,\n    listsnapshotsinrecyclebinpaginator,\n    searchlocalgatewayroutespaginator,\n    searchtransitgatewaymulticastgroupspaginator,\n)\n\nsession = get_session()\nasync with session.create_client(\"ec2\") as client:\n    client: ec2client\n\n    # explicit type annotations are optional here\n    # types should be correctly discovered by mypy and ides\n    describe_address_transfers_paginator: describeaddresstransferspaginator = client.get_paginator(\n        \"describe_address_transfers\"\n    )\n    describe_addresses_attribute_paginator: describeaddressesattributepaginator = (\n        client.get_paginator(\"describe_addresses_attribute\")\n    )\n    describe_aws_network_performance_metric_subscriptions_paginator: (\n        describeawsnetworkperformancemetricsubscriptionspaginator\n    ) = client.get_paginator(\"describe_aws_network_performance_metric_subscriptions\")\n    describe_byoip_cidrs_paginator: describebyoipcidrspaginator = client.get_paginator(\n        \"describe_byoip_cidrs\"\n    )\n    describe_capacity_block_offerings_paginator: describecapacityblockofferingspaginator = (\n        client.get_paginator(\"describe_capacity_block_offerings\")\n    )\n    describe_capacity_reservation_fleets_paginator: describecapacityreservationfleetspaginator = (\n        client.get_paginator(\"describe_capacity_reservation_fleets\")\n    )\n    describe_capacity_reservations_paginator: describecapacityreservationspaginator = (\n        client.get_paginator(\"describe_capacity_reservations\")\n    )\n    describe_carrier_gateways_paginator: describecarriergatewayspaginator = client.get_paginator(\n        \"describe_carrier_gateways\"\n    )\n    describe_classic_link_instances_paginator: describeclassiclinkinstancespaginator = (\n        client.get_paginator(\"describe_classic_link_instances\")\n    )\n    describe_client_vpn_authorization_rules_paginator: (\n        describeclientvpnauthorizationrulespaginator\n    ) = client.get_paginator(\"describe_client_vpn_authorization_rules\")\n    describe_client_vpn_connections_paginator: describeclientvpnconnectionspaginator = (\n        client.get_paginator(\"describe_client_vpn_connections\")\n    )\n    describe_client_vpn_endpoints_paginator: describeclientvpnendpointspaginator = (\n        client.get_paginator(\"describe_client_vpn_endpoints\")\n    )\n    describe_client_vpn_routes_paginator: describeclientvpnroutespaginator = client.get_paginator(\n        \"describe_client_vpn_routes\"\n    )\n    describe_client_vpn_target_networks_paginator: describeclientvpntargetnetworkspaginator = (\n        client.get_paginator(\"describe_client_vpn_target_networks\")\n    )\n    describe_coip_pools_paginator: describecoippoolspaginator = client.get_paginator(\n        \"describe_coip_pools\"\n    )\n    describe_dhcp_options_paginator: describedhcpoptionspaginator = client.get_paginator(\n        \"describe_dhcp_options\"\n    )\n    describe_egress_only_internet_gateways_paginator: (\n        describeegressonlyinternetgatewayspaginator\n    ) = client.get_paginator(\"describe_egress_only_internet_gateways\")\n    describe_export_image_tasks_paginator: describeexportimagetaskspaginator = client.get_paginator(\n        \"describe_export_image_tasks\"\n    )\n    describe_fast_launch_images_paginator: describefastlaunchimagespaginator = client.get_paginator(\n        \"describe_fast_launch_images\"\n    )\n    describe_fast_snapshot_restores_paginator: describefastsnapshotrestorespaginator = (\n        client.get_paginator(\"describe_fast_snapshot_restores\")\n    )\n    describe_fleets_paginator: describefleetspaginator = client.get_paginator(\"describe_fleets\")\n    describe_flow_logs_paginator: describeflowlogspaginator = client.get_paginator(\n        \"describe_flow_logs\"\n    )\n    describe_fpga_images_paginator: describefpgaimagespaginator = client.get_paginator(\n        \"describe_fpga_images\"\n    )\n    describe_host_reservation_offerings_paginator: describehostreservationofferingspaginator = (\n        client.get_paginator(\"describe_host_reservation_offerings\")\n    )\n    describe_host_reservations_paginator: describehostreservationspaginator = client.get_paginator(\n        \"describe_host_reservations\"\n    )\n    describe_hosts_paginator: describehostspaginator = client.get_paginator(\"describe_hosts\")\n    describe_iam_instance_profile_associations_paginator: (\n        describeiaminstanceprofileassociationspaginator\n    ) = client.get_paginator(\"describe_iam_instance_profile_associations\")\n    describe_images_paginator: describeimagespaginator = client.get_paginator(\"describe_images\")\n    describe_import_image_tasks_paginator: describeimportimagetaskspaginator = client.get_paginator(\n        \"describe_import_image_tasks\"\n    )\n    describe_import_snapshot_tasks_paginator: describeimportsnapshottaskspaginator = (\n        client.get_paginator(\"describe_import_snapshot_tasks\")\n    )\n    describe_instance_connect_endpoints_paginator: describeinstanceconnectendpointspaginator = (\n        client.get_paginator(\"describe_instance_connect_endpoints\")\n    )\n    describe_instance_credit_specifications_paginator: (\n        describeinstancecreditspecificationspaginator\n    ) = client.get_paginator(\"describe_instance_credit_specifications\")\n    describe_instance_event_windows_paginator: describeinstanceeventwindowspaginator = (\n        client.get_paginator(\"describe_instance_event_windows\")\n    )\n    describe_instance_status_paginator: describeinstancestatuspaginator = client.get_paginator(\n        \"describe_instance_status\"\n    )\n    describe_instance_topology_paginator: describeinstancetopologypaginator = client.get_paginator(\n        \"describe_instance_topology\"\n    )\n    describe_instance_type_offerings_paginator: describeinstancetypeofferingspaginator = (\n        client.get_paginator(\"describe_instance_type_offerings\")\n    )\n    describe_instance_types_paginator: describeinstancetypespaginator = client.get_paginator(\n        \"describe_instance_types\"\n    )\n    describe_instances_paginator: describeinstancespaginator = client.get_paginator(\n        \"describe_instances\"\n    )\n    describe_internet_gateways_paginator: describeinternetgatewayspaginator = client.get_paginator(\n        \"describe_internet_gateways\"\n    )\n    describe_ipam_pools_paginator: describeipampoolspaginator = client.get_paginator(\n        \"describe_ipam_pools\"\n    )\n    describe_ipam_resource_discoveries_paginator: describeipamresourcediscoveriespaginator = (\n        client.get_paginator(\"describe_ipam_resource_discoveries\")\n    )\n    describe_ipam_resource_discovery_associations_paginator: (\n        describeipamresourcediscoveryassociationspaginator\n    ) = client.get_paginator(\"describe_ipam_resource_discovery_associations\")\n    describe_ipam_scopes_paginator: describeipamscopespaginator = client.get_paginator(\n        \"describe_ipam_scopes\"\n    )\n    describe_ipams_paginator: describeipamspaginator = client.get_paginator(\"describe_ipams\")\n    describe_ipv6_pools_paginator: describeipv6poolspaginator = client.get_paginator(\n        \"describe_ipv6_pools\"\n    )\n    describe_launch_template_versions_paginator: describelaunchtemplateversionspaginator = (\n        client.get_paginator(\"describe_launch_template_versions\")\n    )\n    describe_launch_templates_paginator: describelaunchtemplatespaginator = client.get_paginator(\n        \"describe_launch_templates\"\n    )\n    describe_local_gateway_route_table_virtual_interface_group_associations_paginator: (\n        describelocalgatewayroutetablevirtualinterfacegroupassociationspaginator\n    ) = client.get_paginator(\n        \"describe_local_gateway_route_table_virtual_interface_group_associations\"\n    )\n    describe_local_gateway_route_table_vpc_associations_paginator: (\n        describelocalgatewayroutetablevpcassociationspaginator\n    ) = client.get_paginator(\"describe_local_gateway_route_table_vpc_associations\")\n    describe_local_gateway_route_tables_paginator: describelocalgatewayroutetablespaginator = (\n        client.get_paginator(\"describe_local_gateway_route_tables\")\n    )\n    describe_local_gateway_virtual_interface_groups_paginator: (\n        describelocalgatewayvirtualinterfacegroupspaginator\n    ) = client.get_paginator(\"describe_local_gateway_virtual_interface_groups\")\n    describe_local_gateway_virtual_interfaces_paginator: (\n        describelocalgatewayvirtualinterfacespaginator\n    ) = client.get_paginator(\"describe_local_gateway_virtual_interfaces\")\n    describe_local_gateways_paginator: describelocalgatewayspaginator = client.get_paginator(\n        \"describe_local_gateways\"\n    )\n    describe_managed_prefix_lists_paginator: describemanagedprefixlistspaginator = (\n        client.get_paginator(\"describe_managed_prefix_lists\")\n    )\n    describe_moving_addresses_paginator: describemovingaddressespaginator = client.get_paginator(\n        \"describe_moving_addresses\"\n    )\n    describe_nat_gateways_paginator: describenatgatewayspaginator = client.get_paginator(\n        \"describe_nat_gateways\"\n    )\n    describe_network_acls_paginator: describenetworkaclspaginator = client.get_paginator(\n        \"describe_network_acls\"\n    )\n    describe_network_insights_access_scope_analyses_paginator: (\n        describenetworkinsightsaccessscopeanalysespaginator\n    ) = client.get_paginator(\"describe_network_insights_access_scope_analyses\")\n    describe_network_insights_access_scopes_paginator: (\n        describenetworkinsightsaccessscopespaginator\n    ) = client.get_paginator(\"describe_network_insights_access_scopes\")\n    describe_network_insights_analyses_paginator: describenetworkinsightsanalysespaginator = (\n        client.get_paginator(\"describe_network_insights_analyses\")\n    )\n    describe_network_insights_paths_paginator: describenetworkinsightspathspaginator = (\n        client.get_paginator(\"describe_network_insights_paths\")\n    )\n    describe_network_interface_permissions_paginator: (\n        describenetworkinterfacepermissionspaginator\n    ) = client.get_paginator(\"describe_network_interface_permissions\")\n    describe_network_interfaces_paginator: describenetworkinterfacespaginator = (\n        client.get_paginator(\"describe_network_interfaces\")\n    )\n    describe_prefix_lists_paginator: describeprefixlistspaginator = client.get_paginator(\n        \"describe_prefix_lists\"\n    )\n    describe_principal_id_format_paginator: describeprincipalidformatpaginator = (\n        client.get_paginator(\"describe_principal_id_format\")\n    )\n    describe_public_ipv4_pools_paginator: describepublicipv4poolspaginator = client.get_paginator(\n        \"describe_public_ipv4_pools\"\n    )\n    describe_replace_root_volume_tasks_paginator: describereplacerootvolumetaskspaginator = (\n        client.get_paginator(\"describe_replace_root_volume_tasks\")\n    )\n    describe_reserved_instances_modifications_paginator: (\n        describereservedinstancesmodificationspaginator\n    ) = client.get_paginator(\"describe_reserved_instances_modifications\")\n    describe_reserved_instances_offerings_paginator: describereservedinstancesofferingspaginator = (\n        client.get_paginator(\"describe_reserved_instances_offerings\")\n    )\n    describe_route_tables_paginator: describeroutetablespaginator = client.get_paginator(\n        \"describe_route_tables\"\n    )\n    describe_scheduled_instance_availability_paginator: (\n        describescheduledinstanceavailabilitypaginator\n    ) = client.get_paginator(\"describe_scheduled_instance_availability\")\n    describe_scheduled_instances_paginator: describescheduledinstancespaginator = (\n        client.get_paginator(\"describe_scheduled_instances\")\n    )\n    describe_security_group_rules_paginator: describesecuritygrouprulespaginator = (\n        client.get_paginator(\"describe_security_group_rules\")\n    )\n    describe_security_groups_paginator: describesecuritygroupspaginator = client.get_paginator(\n        \"describe_security_groups\"\n    )\n    describe_snapshot_tier_status_paginator: describesnapshottierstatuspaginator = (\n        client.get_paginator(\"describe_snapshot_tier_status\")\n    )\n    describe_snapshots_paginator: describesnapshotspaginator = client.get_paginator(\n        \"describe_snapshots\"\n    )\n    describe_spot_fleet_instances_paginator: describespotfleetinstancespaginator = (\n        client.get_paginator(\"describe_spot_fleet_instances\")\n    )\n    describe_spot_fleet_requests_paginator: describespotfleetrequestspaginator = (\n        client.get_paginator(\"describe_spot_fleet_requests\")\n    )\n    describe_spot_instance_requests_paginator: describespotinstancerequestspaginator = (\n        client.get_paginator(\"describe_spot_instance_requests\")\n    )\n    describe_spot_price_history_paginator: describespotpricehistorypaginator = client.get_paginator(\n        \"describe_spot_price_history\"\n    )\n    describe_stale_security_groups_paginator: describestalesecuritygroupspaginator = (\n        client.get_paginator(\"describe_stale_security_groups\")\n    )\n    describe_store_image_tasks_paginator: describestoreimagetaskspaginator = client.get_paginator(\n        \"describe_store_image_tasks\"\n    )\n    describe_subnets_paginator: describesubnetspaginator = client.get_paginator(\"describe_subnets\")\n    describe_tags_paginator: describetagspaginator = client.get_paginator(\"describe_tags\")\n    describe_traffic_mirror_filters_paginator: describetrafficmirrorfilterspaginator = (\n        client.get_paginator(\"describe_traffic_mirror_filters\")\n    )\n    describe_traffic_mirror_sessions_paginator: describetrafficmirrorsessionspaginator = (\n        client.get_paginator(\"describe_traffic_mirror_sessions\")\n    )\n    describe_traffic_mirror_targets_paginator: describetrafficmirrortargetspaginator = (\n        client.get_paginator(\"describe_traffic_mirror_targets\")\n    )\n    describe_transit_gateway_attachments_paginator: describetransitgatewayattachmentspaginator = (\n        client.get_paginator(\"describe_transit_gateway_attachments\")\n    )\n    describe_transit_gateway_connect_peers_paginator: (\n        describetransitgatewayconnectpeerspaginator\n    ) = client.get_paginator(\"describe_transit_gateway_connect_peers\")\n    describe_transit_gateway_connects_paginator: describetransitgatewayconnectspaginator = (\n        client.get_paginator(\"describe_transit_gateway_connects\")\n    )\n    describe_transit_gateway_multicast_domains_paginator: (\n        describetransitgatewaymulticastdomainspaginator\n    ) = client.get_paginator(\"describe_transit_gateway_multicast_domains\")\n    describe_transit_gateway_peering_attachments_paginator: (\n        describetransitgatewaypeeringattachmentspaginator\n    ) = client.get_paginator(\"describe_transit_gateway_peering_attachments\")\n    describe_transit_gateway_policy_tables_paginator: (\n        describetransitgatewaypolicytablespaginator\n    ) = client.get_paginator(\"describe_transit_gateway_policy_tables\")\n    describe_transit_gateway_route_table_announcements_paginator: (\n        describetransitgatewayroutetableannouncementspaginator\n    ) = client.get_paginator(\"describe_transit_gateway_route_table_announcements\")\n    describe_transit_gateway_route_tables_paginator: describetransitgatewayroutetablespaginator = (\n        client.get_paginator(\"describe_transit_gateway_route_tables\")\n    )\n    describe_transit_gateway_vpc_attachments_paginator: (\n        describetransitgatewayvpcattachmentspaginator\n    ) = client.get_paginator(\"describe_transit_gateway_vpc_attachments\")\n    describe_transit_gateways_paginator: describetransitgatewayspaginator = client.get_paginator(\n        \"describe_transit_gateways\"\n    )\n    describe_trunk_interface_associations_paginator: describetrunkinterfaceassociationspaginator = (\n        client.get_paginator(\"describe_trunk_interface_associations\")\n    )\n    describe_verified_access_endpoints_paginator: describeverifiedaccessendpointspaginator = (\n        client.get_paginator(\"describe_verified_access_endpoints\")\n    )\n    describe_verified_access_groups_paginator: describeverifiedaccessgroupspaginator = (\n        client.get_paginator(\"describe_verified_access_groups\")\n    )\n    describe_verified_access_instance_logging_configurations_paginator: (\n        describeverifiedaccessinstanceloggingconfigurationspaginator\n    ) = client.get_paginator(\"describe_verified_access_instance_logging_configurations\")\n    describe_verified_access_instances_paginator: describeverifiedaccessinstancespaginator = (\n        client.get_paginator(\"describe_verified_access_instances\")\n    )\n    describe_verified_access_trust_providers_paginator: (\n        describeverifiedaccesstrustproviderspaginator\n    ) = client.get_paginator(\"describe_verified_access_trust_providers\")\n    describe_volume_status_paginator: describevolumestatuspaginator = client.get_paginator(\n        \"describe_volume_status\"\n    )\n    describe_volumes_paginator: describevolumespaginator = client.get_paginator(\"describe_volumes\")\n    describe_volumes_modifications_paginator: describevolumesmodificationspaginator = (\n        client.get_paginator(\"describe_volumes_modifications\")\n    )\n    describe_vpc_classic_link_dns_support_paginator: describevpcclassiclinkdnssupportpaginator = (\n        client.get_paginator(\"describe_vpc_classic_link_dns_support\")\n    )\n    describe_vpc_endpoint_connection_notifications_paginator: (\n        describevpcendpointconnectionnotificationspaginator\n    ) = client.get_paginator(\"describe_vpc_endpoint_connection_notifications\")\n    describe_vpc_endpoint_connections_paginator: describevpcendpointconnectionspaginator = (\n        client.get_paginator(\"describe_vpc_endpoint_connections\")\n    )\n    describe_vpc_endpoint_service_configurations_paginator: (\n        describevpcendpointserviceconfigurationspaginator\n    ) = client.get_paginator(\"describe_vpc_endpoint_service_configurations\")\n    describe_vpc_endpoint_service_permissions_paginator: (\n        describevpcendpointservicepermissionspaginator\n    ) = client.get_paginator(\"describe_vpc_endpoint_service_permissions\")\n    describe_vpc_endpoint_services_paginator: describevpcendpointservicespaginator = (\n        client.get_paginator(\"describe_vpc_endpoint_services\")\n    )\n    describe_vpc_endpoints_paginator: describevpcendpointspaginator = client.get_paginator(\n        \"describe_vpc_endpoints\"\n    )\n    describe_vpc_peering_connections_paginator: describevpcpeeringconnectionspaginator = (\n        client.get_paginator(\"describe_vpc_peering_connections\")\n    )\n    describe_vpcs_paginator: describevpcspaginator = client.get_paginator(\"describe_vpcs\")\n    get_associated_ipv6_pool_cidrs_paginator: getassociatedipv6poolcidrspaginator = (\n        client.get_paginator(\"get_associated_ipv6_pool_cidrs\")\n    )\n    get_aws_network_performance_data_paginator: getawsnetworkperformancedatapaginator = (\n        client.get_paginator(\"get_aws_network_performance_data\")\n    )\n    get_groups_for_capacity_reservation_paginator: getgroupsforcapacityreservationpaginator = (\n        client.get_paginator(\"get_groups_for_capacity_reservation\")\n    )\n    get_instance_types_from_instance_requirements_paginator: (\n        getinstancetypesfrominstancerequirementspaginator\n    ) = client.get_paginator(\"get_instance_types_from_instance_requirements\")\n    get_ipam_address_history_paginator: getipamaddresshistorypaginator = client.get_paginator(\n        \"get_ipam_address_history\"\n    )\n    get_ipam_discovered_accounts_paginator: getipamdiscoveredaccountspaginator = (\n        client.get_paginator(\"get_ipam_discovered_accounts\")\n    )\n    get_ipam_discovered_resource_cidrs_paginator: getipamdiscoveredresourcecidrspaginator = (\n        client.get_paginator(\"get_ipam_discovered_resource_cidrs\")\n    )\n    get_ipam_pool_allocations_paginator: getipampoolallocationspaginator = client.get_paginator(\n        \"get_ipam_pool_allocations\"\n    )\n    get_ipam_pool_cidrs_paginator: getipampoolcidrspaginator = client.get_paginator(\n        \"get_ipam_pool_cidrs\"\n    )\n    get_ipam_resource_cidrs_paginator: getipamresourcecidrspaginator = client.get_paginator(\n        \"get_ipam_resource_cidrs\"\n    )\n    get_managed_prefix_list_associations_paginator: getmanagedprefixlistassociationspaginator = (\n        client.get_paginator(\"get_managed_prefix_list_associations\")\n    )\n    get_managed_prefix_list_entries_paginator: getmanagedprefixlistentriespaginator = (\n        client.get_paginator(\"get_managed_prefix_list_entries\")\n    )\n    get_network_insights_access_scope_analysis_findings_paginator: (\n        getnetworkinsightsaccessscopeanalysisfindingspaginator\n    ) = client.get_paginator(\"get_network_insights_access_scope_analysis_findings\")\n    get_security_groups_for_vpc_paginator: getsecuritygroupsforvpcpaginator = client.get_paginator(\n        \"get_security_groups_for_vpc\"\n    )\n    get_spot_placement_scores_paginator: getspotplacementscorespaginator = client.get_paginator(\n        \"get_spot_placement_scores\"\n    )\n    get_transit_gateway_attachment_propagations_paginator: (\n        gettransitgatewayattachmentpropagationspaginator\n    ) = client.get_paginator(\"get_transit_gateway_attachment_propagations\")\n    get_transit_gateway_multicast_domain_associations_paginator: (\n        gettransitgatewaymulticastdomainassociationspaginator\n    ) = client.get_paginator(\"get_transit_gateway_multicast_domain_associations\")\n    get_transit_gateway_policy_table_associations_paginator: (\n        gettransitgatewaypolicytableassociationspaginator\n    ) = client.get_paginator(\"get_transit_gateway_policy_table_associations\")\n    get_transit_gateway_prefix_list_references_paginator: (\n        gettransitgatewayprefixlistreferencespaginator\n    ) = client.get_paginator(\"get_transit_gateway_prefix_list_references\")\n    get_transit_gateway_route_table_associations_paginator: (\n        gettransitgatewayroutetableassociationspaginator\n    ) = client.get_paginator(\"get_transit_gateway_route_table_associations\")\n    get_transit_gateway_route_table_propagations_paginator: (\n        gettransitgatewayroutetablepropagationspaginator\n    ) = client.get_paginator(\"get_transit_gateway_route_table_propagations\")\n    get_vpn_connection_device_types_paginator: getvpnconnectiondevicetypespaginator = (\n        client.get_paginator(\"get_vpn_connection_device_types\")\n    )\n    list_images_in_recycle_bin_paginator: listimagesinrecyclebinpaginator = client.get_paginator(\n        \"list_images_in_recycle_bin\"\n    )\n    list_snapshots_in_recycle_bin_paginator: listsnapshotsinrecyclebinpaginator = (\n        client.get_paginator(\"list_snapshots_in_recycle_bin\")\n    )\n    search_local_gateway_routes_paginator: searchlocalgatewayroutespaginator = client.get_paginator(\n        \"search_local_gateway_routes\"\n    )\n    search_transit_gateway_multicast_groups_paginator: (\n        searchtransitgatewaymulticastgroupspaginator\n    ) = client.get_paginator(\"search_transit_gateway_multicast_groups\")\n```\n\n<a id=\"waiters-annotations\"></a>\n\n### waiters annotations\n\n`types_aiobotocore_ec2.waiter` module contains type annotations for all\nwaiters.\n\n```python\nfrom aiobotocore.session import get_session\n\nfrom types_aiobotocore_ec2.client import ec2client\nfrom types_aiobotocore_ec2.waiter import (\n    bundletaskcompletewaiter,\n    conversiontaskcancelledwaiter,\n    conversiontaskcompletedwaiter,\n    conversiontaskdeletedwaiter,\n    customergatewayavailablewaiter,\n    exporttaskcancelledwaiter,\n    exporttaskcompletedwaiter,\n    imageavailablewaiter,\n    imageexistswaiter,\n    instanceexistswaiter,\n    instancerunningwaiter,\n    instancestatusokwaiter,\n    instancestoppedwaiter,\n    instanceterminatedwaiter,\n    internetgatewayexistswaiter,\n    keypairexistswaiter,\n    natgatewayavailablewaiter,\n    natgatewaydeletedwaiter,\n    networkinterfaceavailablewaiter,\n    passworddataavailablewaiter,\n    securitygroupexistswaiter,\n    snapshotcompletedwaiter,\n    snapshotimportedwaiter,\n    spotinstancerequestfulfilledwaiter,\n    storeimagetaskcompletewaiter,\n    subnetavailablewaiter,\n    systemstatusokwaiter,\n    volumeavailablewaiter,\n    volumedeletedwaiter,\n    volumeinusewaiter,\n    vpcavailablewaiter,\n    vpcexistswaiter,\n    vpcpeeringconnectiondeletedwaiter,\n    vpcpeeringconnectionexistswaiter,\n    vpnconnectionavailablewaiter,\n    vpnconnectiondeletedwaiter,\n)\n\nsession = get_session()\nasync with session.create_client(\"ec2\") as client:\n    client: ec2client\n\n    # explicit type annotations are optional here\n    # types should be correctly discovered by mypy and ides\n    bundle_task_complete_waiter: bundletaskcompletewaiter = client.get_waiter(\n        \"bundle_task_complete\"\n    )\n    conversion_task_cancelled_waiter: conversiontaskcancelledwaiter = client.get_waiter(\n        \"conversion_task_cancelled\"\n    )\n    conversion_task_completed_waiter: conversiontaskcompletedwaiter = client.get_waiter(\n        \"conversion_task_completed\"\n    )\n    conversion_task_deleted_waiter: conversiontaskdeletedwaiter = client.get_waiter(\n        \"conversion_task_deleted\"\n    )\n    customer_gateway_available_waiter: customergatewayavailablewaiter = client.get_waiter(\n        \"customer_gateway_available\"\n    )\n    export_task_cancelled_waiter: exporttaskcancelledwaiter = client.get_waiter(\n        \"export_task_cancelled\"\n    )\n    export_task_completed_waiter: exporttaskcompletedwaiter = client.get_waiter(\n        \"export_task_completed\"\n    )\n    image_available_waiter: imageavailablewaiter = client.get_waiter(\"image_available\")\n    image_exists_waiter: imageexistswaiter = client.get_waiter(\"image_exists\")\n    instance_exists_waiter: instanceexistswaiter = client.get_waiter(\"instance_exists\")\n    instance_running_waiter: instancerunningwaiter = client.get_waiter(\"instance_running\")\n    instance_status_ok_waiter: instancestatusokwaiter = client.get_waiter(\"instance_status_ok\")\n    instance_stopped_waiter: instancestoppedwaiter = client.get_waiter(\"instance_stopped\")\n    instance_terminated_waiter: instanceterminatedwaiter = client.get_waiter(\"instance_terminated\")\n    internet_gateway_exists_waiter: internetgatewayexistswaiter = client.get_waiter(\n        \"internet_gateway_exists\"\n    )\n    key_pair_exists_waiter: keypairexistswaiter = client.get_waiter(\"key_pair_exists\")\n    nat_gateway_available_waiter: natgatewayavailablewaiter = client.get_waiter(\n        \"nat_gateway_available\"\n    )\n    nat_gateway_deleted_waiter: natgatewaydeletedwaiter = client.get_waiter(\"nat_gateway_deleted\")\n    network_interface_available_waiter: networkinterfaceavailablewaiter = client.get_waiter(\n        \"network_interface_available\"\n    )\n    password_data_available_waiter: passworddataavailablewaiter = client.get_waiter(\n        \"password_data_available\"\n    )\n    security_group_exists_waiter: securitygroupexistswaiter = client.get_waiter(\n        \"security_group_exists\"\n    )\n    snapshot_completed_waiter: snapshotcompletedwaiter = client.get_waiter(\"snapshot_completed\")\n    snapshot_imported_waiter: snapshotimportedwaiter = client.get_waiter(\"snapshot_imported\")\n    spot_instance_request_fulfilled_waiter: spotinstancerequestfulfilledwaiter = client.get_waiter(\n        \"spot_instance_request_fulfilled\"\n    )\n    store_image_task_complete_waiter: storeimagetaskcompletewaiter = client.get_waiter(\n        \"store_image_task_complete\"\n    )\n    subnet_available_waiter: subnetavailablewaiter = client.get_waiter(\"subnet_available\")\n    system_status_ok_waiter: systemstatusokwaiter = client.get_waiter(\"system_status_ok\")\n    volume_available_waiter: volumeavailablewaiter = client.get_waiter(\"volume_available\")\n    volume_deleted_waiter: volumedeletedwaiter = client.get_waiter(\"volume_deleted\")\n    volume_in_use_waiter: volumeinusewaiter = client.get_waiter(\"volume_in_use\")\n    vpc_available_waiter: vpcavailablewaiter = client.get_waiter(\"vpc_available\")\n    vpc_exists_waiter: vpcexistswaiter = client.get_waiter(\"vpc_exists\")\n    vpc_peering_connection_deleted_waiter: vpcpeeringconnectiondeletedwaiter = client.get_waiter(\n        \"vpc_peering_connection_deleted\"\n    )\n    vpc_peering_connection_exists_waiter: vpcpeeringconnectionexistswaiter = client.get_waiter(\n        \"vpc_peering_connection_exists\"\n    )\n    vpn_connection_available_waiter: vpnconnectionavailablewaiter = client.get_waiter(\n        \"vpn_connection_available\"\n    )\n    vpn_connection_deleted_waiter: vpnconnectiondeletedwaiter = client.get_waiter(\n        \"vpn_connection_deleted\"\n    )\n```\n\n<a id=\"service-resource-annotations\"></a>\n\n### service resource annotations\n\n`ec2serviceresource` provides annotations for `aiobotocore.resource(\"ec2\")`.\n\n```python\nfrom aiobotocore.session import get_session\n\nfrom types_aiobotocore_ec2 import ec2serviceresource\n\nsession = get_session()\nasync with session.resource(\"ec2\") as resource:\n    resource: ec2serviceresource\n    # now resource usage is checked by mypy and ide should provide code completion\n```\n\n<a id=\"other-resources-annotations\"></a>\n\n### other resources annotations\n\n`types_aiobotocore_ec2.service_resource` module contains type annotations for\nall resources.\n\n```python\nfrom aiobotocore.session import get_session\n\nfrom types_aiobotocore_ec2 import ec2serviceresource\nfrom types_aiobotocore_ec2.service_resource import (\n    classicaddress,\n    dhcpoptions,\n    image,\n    instance,\n    internetgateway,\n    keypair,\n    keypairinfo,\n    networkacl,\n    networkinterface,\n    networkinterfaceassociation,\n    placementgroup,\n    route,\n    routetable,\n    routetableassociation,\n    securitygroup,\n    snapshot,\n    subnet,\n    tag,\n    volume,\n    vpc,\n    vpcpeeringconnection,\n    vpcaddress,\n)\n\nsession = get_session()\nasync with session.resource(\"ec2\") as resource:\n    resource: ec2serviceresource\n\n    # explicit type annotations are optional here\n    # type should be correctly discovered by mypy and ides\n    my_classic_address: classicaddress = resource.classicaddress(...)\n    my_dhcp_options: dhcpoptions = resource.dhcpoptions(...)\n    my_image: image = resource.image(...)\n    my_instance: instance = resource.instance(...)\n    my_internet_gateway: internetgateway = resource.internetgateway(...)\n    my_key_pair: keypair = resource.keypair(...)\n    my_key_pair_info: keypairinfo = resource.keypairinfo(...)\n    my_network_acl: networkacl = resource.networkacl(...)\n    my_network_interface: networkinterface = resource.networkinterface(...)\n    my_network_interface_association: networkinterfaceassociation = (\n        resource.networkinterfaceassociation(...)\n    )\n    my_placement_group: placementgroup = resource.placementgroup(...)\n    my_route: route = resource.route(...)\n    my_route_table: routetable = resource.routetable(...)\n    my_route_table_association: routetableassociation = resource.routetableassociation(...)\n    my_security_group: securitygroup = resource.securitygroup(...)\n    my_snapshot: snapshot = resource.snapshot(...)\n    my_subnet: subnet = resource.subnet(...)\n    my_tag: tag = resource.tag(...)\n    my_volume: volume = resource.volume(...)\n    my_vpc: vpc = resource.vpc(...)\n    my_vpc_peering_connection: vpcpeeringconnection = resource.vpcpeeringconnection(...)\n    my_vpc_address: vpcaddress = resource.vpcaddress(...)\n```\n\n<a id=\"collections-annotations\"></a>\n\n### collections annotations\n\n`types_aiobotocore_ec2.service_resource` module contains type annotations for\nall `ec2serviceresource` collections.\n\n```python\nfrom aiobotocore.session import get_session\n\nfrom types_aiobotocore_ec2 import ec2serviceresource\nfrom types_aiobotocore_ec2.service_resource import (\n    serviceresourceclassicaddressescollection,\n    serviceresourcedhcpoptionssetscollection,\n    serviceresourceimagescollection,\n    serviceresourceinstancescollection,\n    serviceresourceinternetgatewayscollection,\n    serviceresourcekeypairscollection,\n    serviceresourcenetworkaclscollection,\n    serviceresourcenetworkinterfacescollection,\n    serviceresourceplacementgroupscollection,\n    serviceresourceroutetablescollection,\n    serviceresourcesecuritygroupscollection,\n    serviceresourcesnapshotscollection,\n    serviceresourcesubnetscollection,\n    serviceresourcevolumescollection,\n    serviceresourcevpcaddressescollection,\n    serviceresourcevpcpeeringconnectionscollection,\n    serviceresourcevpcscollection,\n)\n\nsession = get_session()\nasync with session.resource(\"ec2\") as resource:\n    resource: ec2serviceresource\n\n    # explicit type annotations are optional here\n    # type should be correctly discovered by mypy and ides\n    classic_addresses: ec2_resources.serviceresourceclassicaddressescollection = (\n        resource.classic_addresses\n    )\n    dhcp_options_sets: ec2_resources.serviceresourcedhcpoptionssetscollection = (\n        resource.dhcp_options_sets\n    )\n    images: ec2_resources.serviceresourceimagescollection = resource.images\n    instances: ec2_resources.serviceresourceinstancescollection = resource.instances\n    internet_gateways: ec2_resources.serviceresourceinternetgatewayscollection = (\n        resource.internet_gateways\n    )\n    key_pairs: ec2_resources.serviceresourcekeypairscollection = resource.key_pairs\n    network_acls: ec2_resources.serviceresourcenetworkaclscollection = resource.network_acls\n    network_interfaces: ec2_resources.serviceresourcenetworkinterfacescollection = (\n        resource.network_interfaces\n    )\n    placement_groups: ec2_resources.serviceresourceplacementgroupscollection = (\n        resource.placement_groups\n    )\n    route_tables: ec2_resources.serviceresourceroutetablescollection = resource.route_tables\n    security_groups: ec2_resources.serviceresourcesecuritygroupscollection = (\n        resource.security_groups\n    )\n    snapshots: ec2_resources.serviceresourcesnapshotscollection = resource.snapshots\n    subnets: ec2_resources.serviceresourcesubnetscollection = resource.subnets\n    volumes: ec2_resources.serviceresourcevolumescollection = resource.volumes\n    vpc_addresses: ec2_resources.serviceresourcevpcaddressescollection = resource.vpc_addresses\n    vpc_peering_connections: ec2_resources.serviceresourcevpcpeeringconnectionscollection = (\n        resource.vpc_peering_connections\n    )\n    vpcs: ec2_resources.serviceresourcevpcscollection = resource.vpcs\n```\n\n<a id=\"literals\"></a>\n\n### literals\n\n`types_aiobotocore_ec2.literals` module contains literals extracted from shapes\nthat can be used in user code for type checking.\n\nfull list of `ec2` literals can be found in\n[docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_ec2/literals/).\n\n```python\nfrom types_aiobotocore_ec2.literals import acceleratormanufacturertype\n\n\ndef check_value(value: acceleratormanufacturertype) -> bool: ...\n```\n\n<a id=\"type-definitions\"></a>\n\n### type definitions\n\n`types_aiobotocore_ec2.type_defs` module contains structures and shapes\nassembled to typed dictionaries and unions for additional type checking.\n\nfull list of `ec2` typedefs can be found in\n[docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_ec2/type_defs/).\n\n```python\nfrom types_aiobotocore_ec2.type_defs import acceleratorcountrequesttypedef\n\n\ndef get_value() -> acceleratorcountrequesttypedef:\n    return {...}\n```\n\n<a id=\"how-it-works\"></a>\n\n## how it works\n\nfully automated\n[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully\ngenerates type annotations for each service, patiently waiting for\n`aiobotocore` updates. it delivers drop-in type annotations for you and makes\nsure that:\n\n- all available `aiobotocore` services are covered.\n- each public class and method of every `aiobotocore` service gets valid type\n  annotations extracted from `botocore` schemas.\n- type annotations include up-to-date documentation.\n- link to documentation is provided for every method.\n- code is processed by [black](https://github.com/psf/black) and\n  [isort](https://github.com/pycqa/isort) for readability.\n\n<a id=\"what's-new\"></a>\n\n## what's new\n\n<a id=\"implemented-features\"></a>\n\n### implemented features\n\n- fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`\n  libraries\n- `mypy`, `pyright`, `vscode`, `pycharm`, `sublime text` and `emacs`\n  compatibility\n- `client`, `serviceresource`, `resource`, `waiter` `paginator` type\n  annotations for each service\n- generated `typedefs` for each service\n- generated `literals` for each service\n- auto discovery of types for `boto3.client` and `boto3.resource` calls\n- auto discovery of types for `session.client` and `session.resource` calls\n- auto discovery of types for `client.get_waiter` and `client.get_paginator`\n  calls\n- auto discovery of types for `serviceresource` and `resource` collections\n- auto discovery of types for `aiobotocore.session.create_client` calls\n\n<a id=\"latest-changes\"></a>\n\n### latest changes\n\nbuilder changelog can be found in\n[releases](https://github.com/youtype/mypy_boto3_builder/releases).\n\n<a id=\"versioning\"></a>\n\n## versioning\n\n`types-aiobotocore-ec2` version is the same as related `aiobotocore` version\nand follows [pep 440](https://www.python.org/dev/peps/pep-0440/) format.\n\n<a id=\"thank-you\"></a>\n\n## thank you\n\n- [allie fitter](https://github.com/alliefitter) for\n  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),\n  this package is based on top of his work\n- [black](https://github.com/psf/black) developers for an awesome formatting\n  tool\n- [timothy edmund crosley](https://github.com/timothycrosley) for\n  [isort](https://github.com/pycqa/isort) and how flexible it is\n- [mypy](https://github.com/python/mypy) developers for doing all dirty work\n  for us\n- [pyright](https://github.com/microsoft/pyright) team for the new era of typed\n  python\n\n<a id=\"documentation\"></a>\n\n## documentation\n\nall services type annotations can be found in\n[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_ec2/)\n\n<a id=\"support-and-contributing\"></a>\n\n## support and contributing\n\nthis package is auto-generated. please reports any bugs or request new features\nin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)\nrepository.\n",
  "docs_url": null,
  "keywords": "aiobotocore ec2 type-annotations botocore mypy typeshed autocomplete",
  "license": "mit license",
  "name": "types-aiobotocore-ec2",
  "package_url": "https://pypi.org/project/types-aiobotocore-ec2/",
  "project_url": "https://pypi.org/project/types-aiobotocore-ec2/",
  "project_urls": {
    "Documentation": "https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_ec2/",
    "Homepage": "https://github.com/youtype/mypy_boto3_builder",
    "Source": "https://github.com/youtype/mypy_boto3_builder",
    "Tracker": "https://github.com/youtype/mypy_boto3_builder/issues"
  },
  "release_url": "https://pypi.org/project/types-aiobotocore-ec2/2.9.0/",
  "requires_dist": [
    "typing-extensions >=4.1.0 ; python_version < \"3.12\""
  ],
  "requires_python": ">=3.7",
  "summary": "type annotations for aiobotocore.ec2 2.9.0 service generated with mypy-boto3-builder 7.21.0",
  "version": "2.9.0",
  "releases": [],
  "developers": [
    "vlad.emelianov.nz@gmail.com",
    "vlad_emelianov"
  ],
  "kwds": "types_aiobotocore_ec2 types_aiobotocore_docs aiobotocore aioboto3 mypy_boto3_builder",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_types_aiobotocore_ec2",
  "homepage": "https://github.com/youtype/mypy_boto3_builder",
  "release_count": 33,
  "dependency_ids": [
    "pypi_typing_extensions"
  ],
  "documentation_summary": "The HTML text is about the \"types-aiobotocore-ec2\" package version 2.12.1, released on March 5, 2024, available on PyPI. It provides type annotations for the aiobotocore.EC2 service, facilitating compatibility with various IDEs and tools like VSCode, PyCharm, and mypy for better code completion and bug detection. The package, developed by Vlad Emelianov, requires Python version 3.8 or higher and is licensed under the MIT License. It supports a wide range of Python versions from 3.8 to 3.13 and is compatible with CPython. The package includes detailed instructions for installation, usage across different IDEs, and features extensive documentation on type annotations, paginators, waiters, service resource annotations, and more to enhance development with aiobotocore for EC2 services.",
  "embedding": [
    -0.016590218991041183,
    -0.007216467056423426,
    -0.003803085070103407,
    -0.014739129692316055,
    0.011336185969412327,
    0.020361989736557007,
    -0.013542183674871922,
    -0.00873352587223053,
    -0.011287473142147064,
    -0.014780883677303791,
    0.002261670073494315,
    0.0036360693629831076,
    -0.028030790388584137,
    -0.011635422706604004,
    -0.001596217043697834,
    -0.003056734101846814,
    0.020014040172100067,
    -0.008065463043749332,
    0.00446418859064579,
    0.02033415250480175,
    0.025149770081043243,
    0.028142133727669716,
    -0.03543515130877495,
    -0.012463541701436043,
    0.0019572144374251366,
    0.022588863968849182,
    0.007160795386880636,
    -0.04128069803118706,
    0.005817711353302002,
    -0.0236187931150198,
    0.049019087105989456,
    -0.0309813991189003,
    -0.03304125741124153,
    -0.017327871173620224,
    -0.023145582526922226,
    -0.014878309331834316,
    -0.0004832145059481263,
    0.012964588589966297,
    0.034878432750701904,
    0.011489283293485641,
    0.006840681657195091,
    0.014161533676087856,
    0.017439216375350952,
    -0.003263763850554824,
    -0.02839265763759613,
    0.014878309331834316,
    0.00020442016830202192,
    -0.018135113641619682,
    -0.020654266700148582,
    0.011962494812905788,
    0.016158761456608772,
    0.019039781764149666,
    -0.01885884813964367,
    -0.024760067462921143,
    0.0018545694183558226,
    -0.006868517957627773,
    -0.024426035583019257,
    0.02478790283203125,
    0.016200516372919083,
    0.010194912552833557,
    0.015866484493017197,
    0.004808658268302679,
    -0.014530359767377377,
    -0.023493532091379166,
    0.0055950237438082695,
    -0.006085631903260946,
    -0.021781621500849724,
    0.026666829362511635,
    0.005911657586693764,
    -0.019220715388655663,
    0.029116392135620117,
    0.014558196067810059,
    0.01315248105674982,
    -0.01576905883848667,
    0.03860844671726227,
    -0.019610418006777763,
    -0.032206181436777115,
    0.005212279502302408,
    -0.016590218991041183,
    -0.007508744485676289,
    -0.003848318476229906,
    -0.009248490445315838,
    -0.0016875537112355232,
    0.03078654780983925,
    0.024022415280342102,
    0.012616639025509357,
    -0.023674465715885162,
    -0.0127836549654603,
    -0.005650695413351059,
    0.016896415501832962,
    0.020473333075642586,
    -0.016297942027449608,
    -2.6136967790080234e-05,
    0.02719571255147457,
    0.005539351608604193,
    0.024217266589403152,
    -0.012484418228268623,
    0.030925728380680084,
    -0.004067526664584875,
    -0.036353737115859985,
    -0.015476781874895096,
    0.027432316914200783,
    -0.036353737115859985,
    -0.00933199841529131,
    -0.04573444649577141,
    -0.01409890316426754,
    -0.003185475245118141,
    0.007126000244170427,
    0.02416159398853779,
    0.024036332964897156,
    -0.023145582526922226,
    0.03869195282459259,
    0.002032023621723056,
    -0.010939523577690125,
    0.004154513590037823,
    -0.00724430289119482,
    0.010466312989592552,
    0.006203935015946627,
    -0.006280483677983284,
    0.01885884813964367,
    -0.012748859822750092,
    0.04406429082155228,
    -0.010633328929543495,
    -0.016604136675596237,
    0.004168431740254164,
    -0.006833722814917564,
    -0.011447529308497906,
    -0.03699396178126335,
    0.01770365610718727,
    -0.021906884387135506,
    0.013723117299377918,
    0.00536537729203701,
    0.022728044539690018,
    -0.02487141080200672,
    -0.016395367681980133,
    0.02141975425183773,
    -0.033681485801935196,
    -0.004519860725849867,
    -0.013834461569786072,
    -0.001826733467169106,
    0.0033733677119016647,
    0.0352402962744236,
    -0.015017488971352577,
    -0.007988913916051388,
    -0.003176776459440589,
    0.02398066036403179,
    0.008162888698279858,
    0.010083568282425404,
    0.02970094606280327,
    0.013472594320774078,
    0.013145522214472294,
    -0.010403681546449661,
    -0.032595884054899216,
    0.004178870469331741,
    -0.0011464926647022367,
    0.0015466343611478806,
    -0.006437060888856649,
    0.00280273100361228,
    -0.020194973796606064,
    -0.007731432095170021,
    0.008851828053593636,
    0.03323610872030258,
    -0.017522722482681274,
    -0.0205290038138628,
    0.036966126412153244,
    0.025497719645500183,
    0.028643181547522545,
    -0.029951469972729683,
    -0.012776696123182774,
    -0.013194235041737556,
    -0.005448884796351194,
    0.007112082093954086,
    -0.00650665070861578,
    -0.0012900218134745955,
    0.012623597867786884,
    0.028420493006706238,
    0.023423941805958748,
    0.007202548906207085,
    -0.015949992462992668,
    -0.0072373440489172935,
    0.021628525108098984,
    0.007011177018284798,
    0.009457260370254517,
    0.008865746669471264,
    -0.016798987984657288,
    0.00904668029397726,
    0.00475298659875989,
    0.019234633073210716,
    0.017327871173620224,
    0.02878236025571823,
    0.0008385576657019556,
    0.05043872073292732,
    -0.015574207529425621,
    -0.004860850982367992,
    -0.5838866233825684,
    -0.019624335691332817,
    -0.0026391949504613876,
    -0.028420493006706238,
    -0.0003114145656581968,
    0.004359804093837738,
    -0.007126000244170427,
    0.017286118119955063,
    -0.018566571176052094,
    0.03649291396141052,
    -0.026485895738005638,
    0.02432860992848873,
    -0.005003510043025017,
    0.01863616146147251,
    0.010862975381314754,
    -0.019373813644051552,
    -0.001272624358534813,
    -0.0015927376225590706,
    -0.007745349779725075,
    0.024857493117451668,
    -0.009575562551617622,
    0.0398888997733593,
    -0.01611700840294361,
    -0.004439832177013159,
    0.011364022269845009,
    -0.001621443429030478,
    -0.0017797603504732251,
    -0.00028357861447148025,
    -3.7445317957462976e-06,
    0.0034359986893832684,
    -0.022630618885159492,
    0.0348505936563015,
    0.020612511783838272,
    -0.013674404472112656,
    0.042895182967185974,
    0.0021259698551148176,
    -0.01727220043540001,
    0.041113682091236115,
    -0.008023709058761597,
    0.017300035804510117,
    -0.021670278161764145,
    -0.016214434057474136,
    -0.009707783348858356,
    -0.0011865068227052689,
    0.00782189890742302,
    -0.0006637131446041167,
    0.0011456228094175458,
    0.021586770191788673,
    -0.009116269648075104,
    -0.03248453885316849,
    0.008204642683267593,
    -0.017592312768101692,
    0.005417569540441036,
    -0.035852689296007156,
    -0.003465574234724045,
    -0.006475334987044334,
    0.02083520032465458,
    -0.012602721340954304,
    0.00741827767342329,
    0.007153836078941822,
    0.009018843993544579,
    0.023730138316750526,
    -0.019262470304965973,
    -0.013103768229484558,
    0.0012117332080379128,
    0.022630618885159492,
    0.00500698946416378,
    0.01303417794406414,
    -0.022908978164196014,
    -0.03287424147129059,
    0.00935287494212389,
    0.009763455018401146,
    -0.004154513590037823,
    0.0044537503272295,
    0.015574207529425621,
    0.030034977942705154,
    0.03159378841519356,
    -0.009972224943339825,
    -0.021934719756245613,
    0.009547727182507515,
    0.013535224832594395,
    0.011593668721616268,
    0.007564416155219078,
    -0.0457066111266613,
    0.03551865741610527,
    0.012366116046905518,
    -0.007557457312941551,
    -0.014975734986364841,
    0.0035630001220852137,
    -0.017926344648003578,
    0.007508744485676289,
    0.00771751394495368,
    -0.02029239945113659,
    -0.028754524886608124,
    0.019582582637667656,
    0.0070181358605623245,
    -0.0030654326546937227,
    -0.009631235152482986,
    -0.012748859822750092,
    -0.018496980890631676,
    -0.001760623068548739,
    0.018872765824198723,
    0.0014796541072428226,
    0.005988206248730421,
    0.015393273904919624,
    0.006040398497134447,
    -0.011106539517641068,
    0.015309765934944153,
    0.01614484377205372,
    0.009881758131086826,
    -0.01318727619946003,
    -0.02900504879653454,
    0.0004223233845550567,
    0.007870611734688282,
    0.028030790388584137,
    -0.027014778926968575,
    -0.007313892710953951,
    -0.0016788550419732928,
    -0.011071744374930859,
    0.004846932832151651,
    -0.0006558842724189162,
    0.014599950052797794,
    -0.010508066974580288,
    -0.009881758131086826,
    0.018385637551546097,
    0.012595762498676777,
    0.018817095085978508,
    -0.02617969922721386,
    -0.029840126633644104,
    -0.010515025816857815,
    0.010661164298653603,
    0.01369528193026781,
    -0.001051676576025784,
    0.0013709199847653508,
    0.02489924617111683,
    0.0026461537927389145,
    0.060793690383434296,
    0.0012848025653511286,
    -0.009269367903470993,
    -0.0037648107390850782,
    -0.0013361250748857856,
    -0.005219238344579935,
    0.006270044948905706,
    -0.014321590773761272,
    -0.006718899589031935,
    -0.003001062199473381,
    -0.0068998332135379314,
    0.0092972032725811,
    -0.006200455129146576,
    -0.004168431740254164,
    -0.018733587116003036,
    0.018872765824198723,
    -0.015755141153931618,
    0.01576905883848667,
    0.0026948668528348207,
    -0.03629806265234947,
    -0.022644536569714546,
    -0.021990390494465828,
    -0.005539351608604193,
    0.0002603095199447125,
    0.004801699426025152,
    0.020751692354679108,
    -0.007606170140206814,
    -0.008197683840990067,
    -0.03682694584131241,
    0.023688383400440216,
    -0.029144227504730225,
    0.03593619540333748,
    0.003477752674371004,
    -0.0472375862300396,
    -0.002771415514871478,
    -0.005476721096783876,
    -0.006663227919489145,
    -0.017341788858175278,
    0.015852566808462143,
    0.010716835968196392,
    -0.006461417302489281,
    0.019805269315838814,
    0.0205290038138628,
    0.0027140039019286633,
    -0.0034516563173383474,
    0.0007789713563397527,
    -0.014196328818798065,
    -0.021892964839935303,
    0.04228278994560242,
    0.016019582748413086,
    0.026541566476225853,
    -0.02754366025328636,
    -0.0010360188316553831,
    -0.016367532312870026,
    -0.00935287494212389,
    0.00018234713934361935,
    0.0015909979119896889,
    0.035379476845264435,
    -0.013277743011713028,
    -0.0005153997917659581,
    0.00044885449460707605,
    0.024384282529354095,
    -0.0033751074224710464,
    0.009387670084834099,
    0.006475334987044334,
    0.04133636876940727,
    0.006214373279362917,
    0.011746766045689583,
    -0.021238820627331734,
    -0.0036604260094463825,
    0.004408516921103001,
    -0.026291044428944588,
    0.018650079146027565,
    0.004610327538102865,
    0.03819090873003006,
    -0.012366116046905518,
    -0.015518535859882832,
    -0.019109372049570084,
    0.003192434087395668,
    0.022686289623379707,
    -0.012985465116798878,
    0.00875440239906311,
    -0.008093299344182014,
    0.006687584333121777,
    0.027835939079523087,
    0.02487141080200672,
    -0.005508036352694035,
    0.007731432095170021,
    0.0003675213665701449,
    0.002329520182684064,
    0.013138563372194767,
    -0.004864330403506756,
    -0.015254094265401363,
    -0.006698022596538067,
    0.0004897385369986296,
    0.04303435981273651,
    -0.002258190419524908,
    -0.020361989736557007,
    0.025998765602707863,
    -0.014599950052797794,
    0.03727232292294502,
    0.0015518536092713475,
    0.02722354792058468,
    -0.024495625868439674,
    0.003931826446205378,
    -0.008281191810965538,
    0.016506711021065712,
    -0.01720261014997959,
    0.024259019643068314,
    -0.0039527034386992455,
    0.010619410313665867,
    0.014029312878847122,
    0.01448860578238964,
    -0.006304840091615915,
    0.003114145714789629,
    -0.011983371339738369,
    0.005013948306441307,
    0.017049511894583702,
    0.024732232093811035,
    -0.005274910479784012,
    0.004920002073049545,
    0.007084246259182692,
    0.025386376306414604,
    0.01774541102349758,
    0.0028305670712143183,
    0.016325777396559715,
    0.03159378841519356,
    0.024342527613043785,
    0.017188692465424538,
    0.001621443429030478,
    -0.0012743640691041946,
    -0.030508188530802727,
    0.008302068337798119,
    -0.03234536200761795,
    -0.023841481655836105,
    -0.012651434168219566,
    -0.00981912761926651,
    -0.024760067462921143,
    0.03908165916800499,
    0.004283254966139793,
    0.019123289734125137,
    0.019624335691332817,
    -0.008343822322785854,
    0.002700085984542966,
    -0.017133019864559174,
    -0.04851803928613663,
    0.04197659343481064,
    0.007306933868676424,
    0.0059255752712488174,
    -0.011635422706604004,
    -0.0066075557842850685,
    0.01043847668915987,
    -0.03159378841519356,
    0.04662519693374634,
    0.012192141264677048,
    0.010862975381314754,
    -0.012867162935435772,
    0.03295775130391121,
    -0.04217144846916199,
    -0.008176807314157486,
    0.024217266589403152,
    -0.010153158567845821,
    -0.003545602550730109,
    -0.010473271831870079,
    0.02320125512778759,
    0.0013091589789837599,
    0.004742547869682312,
    0.02823955938220024,
    0.05945756286382675,
    -0.006450978573411703,
    -0.012700146995484829,
    0.0037021797616034746,
    -0.04058479890227318,
    -0.04089099541306496,
    -0.011531037278473377,
    -0.010034855455160141,
    -0.013723117299377918,
    -0.021447591483592987,
    0.008963172324001789,
    0.00958948116749525,
    0.01716085523366928,
    -0.03855277597904205,
    0.038636282086372375,
    0.008496920578181744,
    -0.008107217028737068,
    -0.017188692465424538,
    -0.001816294970922172,
    0.014001477509737015,
    0.02366054803133011,
    0.016172681003808975,
    0.022338340058922768,
    0.01607525534927845,
    -0.008698730729520321,
    -0.014321590773761272,
    -0.02715395763516426,
    0.0006119557074271142,
    -0.0013465635711327195,
    0.018538735806941986,
    -0.014516442082822323,
    0.055254336446523666,
    0.021892964839935303,
    -0.007710555102676153,
    0.02869885228574276,
    0.020542923361063004,
    -0.0025417690631002188,
    0.0017310474067926407,
    -0.007954119704663754,
    -0.04551175981760025,
    0.0067084613256156445,
    0.008907500654459,
    0.018844930455088615,
    0.02439820021390915,
    0.029951469972729683,
    0.011231801472604275,
    0.004732109606266022,
    0.009443341754376888,
    0.00025509027182124555,
    -0.036465078592300415,
    0.004283254966139793,
    -0.00898404885083437,
    0.0033072575461119413,
    0.04331272095441818,
    -0.011955535970628262,
    0.03304125741124153,
    0.003848318476229906,
    0.028615344315767288,
    -0.012734942138195038,
    -0.00040862287278287113,
    0.0056332978419959545,
    0.010403681546449661,
    0.0031367624178528786,
    0.013103768229484558,
    -0.017995934933423996,
    -0.03167729824781418,
    -0.002018105471506715,
    0.023298680782318115,
    -0.00958252139389515,
    -0.009575562551617622,
    0.01117612887173891,
    0.03095356374979019,
    -0.03423820436000824,
    -0.032790735363960266,
    0.017995934933423996,
    -0.011913781985640526,
    -0.004881727509200573,
    -0.003469053888693452,
    -0.008079380728304386,
    -0.037940382957458496,
    0.0003166338137816638,
    -0.012769736349582672,
    -0.0271122045814991,
    -0.0024460831191390753,
    -0.011336185969412327,
    -0.0017693218542262912,
    0.01266535185277462,
    0.019151125103235245,
    -0.009972224943339825,
    -0.01805160567164421,
    0.006103029474616051,
    -0.025803914293646812,
    -0.02196255512535572,
    0.003503848798573017,
    0.01038280501961708,
    0.010946482419967651,
    0.008719608187675476,
    -0.03156595304608345,
    -0.015949992462992668,
    -0.026750337332487106,
    0.010062691755592823,
    -0.02413375861942768,
    0.0014787842519581318,
    -0.03167729824781418,
    0.019805269315838814,
    0.0010394983692094684,
    0.007188631221652031,
    0.0030288980342447758,
    0.03938785195350647,
    0.04929744824767113,
    0.007522662170231342,
    0.01607525534927845,
    0.028671016916632652,
    -0.024648724123835564,
    0.03846926614642143,
    0.026444140821695328,
    0.0021016134414821863,
    -0.007807980757206678,
    -0.01994444988667965,
    -0.011085662059485912,
    -0.004645122215151787,
    -0.016993841156363487,
    -0.0007702726288698614,
    -0.013528265990316868,
    0.018455227836966515,
    0.0056646135635674,
    -0.005984726827591658,
    -0.007122520823031664,
    0.0030132404062896967,
    -0.0014709553215652704,
    0.007759267929941416,
    -0.02928340807557106,
    -0.011113498359918594,
    -0.008629141375422478,
    -0.007188631221652031,
    0.01564379781484604,
    -0.004860850982367992,
    -0.003726536175236106,
    -0.011635422706604004,
    -0.003963141702115536,
    0.009380711242556572,
    -0.03451656550168991,
    -0.00032033075694926083,
    -0.0010995195480063558,
    -0.0026026603300124407,
    0.03899814933538437,
    -0.0011021292302757502,
    0.003521246137097478,
    0.010779467411339283,
    0.005796834360808134,
    0.022602781653404236,
    -0.017383543774485588,
    0.01029929704964161,
    -0.020946543663740158,
    0.007181671913713217,
    -0.008643059059977531,
    -0.011537996120750904,
    -0.01001397892832756,
    -0.0038831133861094713,
    -0.022282669320702553,
    -0.014683457091450691,
    0.01169805321842432,
    -0.0348505936563015,
    0.0018093360122293234,
    -0.006273524835705757,
    -0.01878925785422325,
    -0.01378574874252081,
    0.04601280763745308,
    0.026708582416176796,
    0.03017415665090084,
    0.008302068337798119,
    0.01454427745193243,
    0.008239437825977802,
    -0.0185944065451622,
    -0.02559514530003071,
    0.0032846408430486917,
    0.027084367349743843,
    0.002874060533940792,
    0.01398060005158186,
    0.04899125173687935,
    0.019624335691332817,
    -0.0058385878801345825,
    0.02489924617111683,
    0.011398816481232643,
    -0.0007293885573744774,
    -0.012226936407387257,
    -0.02091870829463005,
    0.007446113508194685,
    -0.018190786242485046,
    -0.024996671825647354,
    -0.02041766047477722,
    0.0009481616434641182,
    0.01599174737930298,
    0.010278420522809029,
    -0.0042241038754582405,
    0.006109988316893578,
    0.0031750367488712072,
    0.006318758241832256,
    -0.01809336058795452,
    -0.03357014060020447,
    -0.009798250161111355,
    -0.001262185862287879,
    -0.003364669159054756,
    0.02583175152540207,
    -0.04208793863654137,
    -0.03267939016222954,
    0.04172607138752937,
    -0.018775340169668198,
    0.0003847013576887548,
    -0.0018963232869282365,
    0.02146150916814804,
    -0.013528265990316868,
    0.010876893065869808,
    -0.008594346232712269,
    0.019610418006777763,
    0.0191789623349905,
    -0.0002453041961416602,
    -0.012971547432243824,
    -0.017397461459040642,
    0.00506266113370657,
    0.018956273794174194,
    0.02250535599887371,
    0.025622980669140816,
    0.004352844785898924,
    0.024022415280342102,
    0.02830914966762066,
    0.004544217139482498,
    -0.005588064435869455,
    0.00017038638179656118,
    -0.012693188153207302,
    -0.023521367460489273,
    -0.03846926614642143,
    -0.024857493117451668,
    -0.023131664842367172,
    0.016993841156363487,
    0.0006489253137260675,
    0.02869885228574276,
    0.02463480643928051,
    -0.010758589953184128,
    0.002418247051537037,
    0.021447591483592987,
    -0.012359156273305416,
    0.03412685915827751,
    0.013194235041737556,
    0.045762281864881516,
    0.04798915609717369,
    0.006103029474616051,
    -0.0010812522377818823,
    -0.01320815272629261,
    -0.029366914182901382,
    -0.0025382896419614553,
    0.023604875430464745,
    0.01983310654759407,
    -0.008991007693111897,
    -8.198553405236453e-05,
    0.036966126412153244,
    0.00867785420268774,
    -0.0020511606708168983,
    -0.013110727071762085,
    0.026277126744389534,
    -0.010856015607714653,
    0.005368856713175774,
    -0.02509409934282303,
    -0.009784332476556301,
    0.010034855455160141,
    -0.003008021041750908,
    -0.022380094975233078,
    0.000105526480183471,
    0.022380094975233078,
    -0.014711293391883373,
    -0.00021029182244092226,
    0.013820543885231018,
    0.00875440239906311,
    0.032985586673021317,
    0.0309813991189003,
    -0.013333414681255817,
    -0.010354968719184399,
    -0.020208891481161118,
    0.010445435531437397,
    -0.011496242135763168,
    0.002418247051537037,
    0.02087695337831974,
    -0.01415457483381033,
    -0.008343822322785854,
    0.032206181436777115,
    -0.018079442903399467,
    -0.02509409934282303,
    -0.004457229748368263,
    -0.0007059019990265369,
    0.039025984704494476,
    -0.03535164147615433,
    -0.010744672268629074,
    -0.023326516151428223,
    -0.020389825105667114,
    0.003364669159054756,
    -0.023883234709501266,
    -0.006767612416297197,
    0.0034968897234648466,
    -0.01711910218000412,
    -0.011057826690375805,
    0.02528895065188408,
    -0.005414090119302273,
    -0.012185182422399521,
    -0.02684776298701763,
    -0.003429039614275098,
    -0.022672371938824654,
    -0.013917969539761543,
    0.00433892710134387,
    0.0001254791859537363,
    -0.01766190305352211,
    -0.016590218991041183,
    -0.006374429911375046,
    -0.027599332854151726,
    0.022282669320702553,
    0.02533070370554924,
    0.006791968829929829,
    -0.005842067766934633,
    0.0406683050096035,
    0.01661805436015129,
    -0.0005784655804745853,
    -0.020807363092899323,
    0.011496242135763168,
    -0.030313337221741676,
    -0.004986112471669912,
    -0.02281155064702034,
    -0.019373813644051552,
    0.0009846963221207261,
    0.013563061133027077,
    -0.04136420413851738,
    -0.03724448382854462,
    -0.0029540890827775,
    0.03574134409427643,
    -0.00026052698376588523,
    -0.022282669320702553,
    0.013340373523533344,
    -0.0003277246723882854,
    0.010515025816857815,
    -0.03432171046733856,
    -0.014586031436920166,
    0.05867815762758255,
    -0.010995195247232914,
    0.009714742191135883,
    -0.0005967329489067197,
    -0.022797632962465286,
    -0.021670278161764145,
    -0.011614545248448849,
    0.0013578719226643443,
    -0.036743439733982086,
    -0.041893087327480316,
    -0.011141334660351276,
    0.008309027180075645,
    0.025344621390104294,
    -0.008803115226328373,
    0.009533808566629887,
    -0.013904050923883915,
    -0.022143488749861717,
    -0.023479614406824112,
    0.007710555102676153,
    0.011336185969412327,
    -0.0016962524969130754,
    0.015268011949956417,
    0.02455129846930504,
    0.02037590742111206,
    0.009262408129870892,
    0.0056611341424286366,
    -0.03691045567393303,
    -0.01940164901316166,
    -0.007306933868676424,
    -0.032818570733070374,
    -0.00717471307143569,
    -0.021405836567282677,
    0.0391094945371151,
    0.00213466864079237,
    -0.017731493338942528,
    -0.02083520032465458,
    -0.01286020316183567,
    -0.01844131015241146,
    -0.003890072461217642,
    -0.014265918172895908,
    0.027794184163212776,
    0.010682041756808758,
    0.024760067462921143,
    0.016520628705620766,
    0.015546371228992939,
    -0.02002795785665512,
    0.027641087770462036,
    -0.02370230108499527,
    -0.02064034901559353,
    -0.008051545359194279,
    0.030341172590851784,
    -0.01653454825282097,
    -0.003411642275750637,
    -0.028072543442249298,
    0.00137005012948066,
    0.029728781431913376,
    0.021934719756245613,
    -0.03145461156964302,
    0.032985586673021317,
    -0.02048725076019764,
    -0.037745531648397446,
    -0.005013948306441307,
    -0.011426652781665325,
    -0.03295775130391121,
    0.014989652670919895,
    -0.000710251391865313,
    -0.02192080207169056,
    -0.011760683730244637,
    -0.02405025064945221,
    0.020125383511185646,
    -0.01272102352231741,
    -0.03529597073793411,
    0.016757234930992126,
    0.0018128155497834086,
    0.014961817301809788,
    -0.009791291318833828,
    -0.008865746669471264,
    -0.004227583296597004,
    0.0021050928626209497,
    0.02958960272371769,
    0.03955486789345741,
    0.019081536680459976,
    0.015574207529425621,
    0.012032084167003632,
    -0.002159025054425001,
    -0.029728781431913376,
    0.017787164077162743,
    -0.03087005577981472,
    0.01796809770166874,
    0.012456582859158516,
    -0.008963172324001789,
    -0.0021903403103351593,
    -0.017870672047138214,
    0.026861680671572685,
    -0.02796120010316372,
    -0.02029239945113659,
    0.007981955073773861,
    -0.003095008432865143,
    -0.008051545359194279,
    -0.004902604501694441,
    -0.006666707340627909,
    -0.009728660807013512,
    -0.01944340392947197,
    -0.0025487281382083893,
    0.006764132995158434,
    -0.006179578136652708,
    -0.023716218769550323,
    -0.004624245222657919,
    -0.02989579737186432,
    0.007954119704663754,
    -0.0065553635358810425,
    -0.023479614406824112,
    -0.016952086240053177,
    -0.0037648107390850782,
    -0.0051705255173146725,
    -0.018190786242485046,
    0.03156595304608345,
    0.16322994232177734,
    0.01295762974768877,
    0.010682041756808758,
    0.016089173033833504,
    -0.003907470032572746,
    0.009485095739364624,
    -0.0038344005588442087,
    0.011085662059485912,
    -0.008309027180075645,
    0.033291783183813095,
    -0.029728781431913376,
    0.011517119593918324,
    -0.012456582859158516,
    0.009485095739364624,
    0.009109310805797577,
    -0.008176807314157486,
    -0.021586770191788673,
    -0.02416159398853779,
    -0.03434954956173897,
    0.011357062496244907,
    0.01929030567407608,
    -0.014599950052797794,
    -0.002421726705506444,
    -0.021252738311886787,
    0.027710676193237305,
    -0.025622980669140816,
    -0.016284024342894554,
    -0.003869195468723774,
    0.021837294101715088,
    0.0016205735737457871,
    -0.02626320719718933,
    0.021934719756245613,
    -0.0016362312017008662,
    0.009366793558001518,
    -0.03404335305094719,
    -0.023187337443232536,
    0.022046063095331192,
    0.013249906711280346,
    0.02374405600130558,
    0.034683577716350555,
    -0.003211571369320154,
    -0.028211724013090134,
    -0.004213665146380663,
    -0.026444140821695328,
    -0.011795478872954845,
    -0.016005665063858032,
    -0.014599950052797794,
    -0.024509543552994728,
    -0.009408547542989254,
    0.012943711131811142,
    -0.028615344315767288,
    0.0033020381815731525,
    -0.0028862389735877514,
    0.0026652910746634007,
    -0.005706367548555136,
    -0.006141304038465023,
    0.026750337332487106,
    0.026082273572683334,
    0.00584902660921216,
    0.031231923028826714,
    -0.016840742900967598,
    0.036465078592300415,
    -0.03671560436487198,
    0.021155312657356262,
    -0.010396722704172134,
    -0.0007106863195076585,
    -0.011517119593918324,
    -0.016757234930992126,
    0.016325777396559715,
    0.011224842630326748,
    0.004130157176405191,
    -0.02455129846930504,
    0.004084923770278692,
    0.010528943501412868,
    -0.024885328486561775,
    -0.03846926614642143,
    0.03242886811494827,
    0.009116269648075104,
    0.007940201088786125,
    0.029339078813791275,
    0.009387670084834099,
    0.014530359767377377,
    0.010201871395111084,
    -0.0007454812293872237,
    0.0024652204010635614,
    -0.028531836345791817,
    0.04025076702237129,
    0.0002420421806164086,
    0.008427330292761326,
    -0.01809336058795452,
    -0.014008436352014542,
    -0.019902696833014488,
    -0.0065692816860973835,
    -0.012700146995484829,
    0.02517760545015335,
    0.041002336889505386,
    -0.0005884691490791738,
    -0.00482257641851902,
    -0.02350744977593422,
    0.009972224943339825,
    -0.013423881493508816,
    0.06881044059991837,
    0.008183766156435013,
    -0.0008137662662193179,
    -0.003274202346801758,
    -0.003597795031964779,
    -0.028671016916632652,
    0.013409963808953762,
    0.009812167845666409,
    0.013430840335786343,
    -0.017411379143595695,
    0.002402589423581958,
    -0.0007524401880800724,
    0.004718191456049681,
    0.0069659436121582985,
    0.0011612805537879467,
    -0.019373813644051552,
    -0.017091266810894012,
    0.0007167754229158163,
    0.004592929966747761,
    -0.012929793447256088,
    -0.030424680560827255,
    0.005215758923441172,
    0.009164982475340366,
    -0.04197659343481064,
    -0.0352402962744236,
    -0.026555486023426056,
    0.010716835968196392,
    0.000929024419747293,
    -0.017522722482681274,
    0.029116392135620117,
    -0.009311120957136154,
    0.009464219212532043,
    0.020626429468393326,
    -0.012032084167003632,
    0.0032289689406752586,
    0.01098127756267786,
    -0.00892837718129158,
    -0.0039213877171278,
    0.03075871244072914,
    0.0011769382981583476,
    0.010967359878122807,
    0.007094684988260269,
    -0.027599332854151726,
    -0.0028671016916632652,
    -0.03234536200761795,
    0.03354230523109436,
    0.00024225965898949653,
    -0.004551175981760025,
    0.0014031053287908435,
    -0.007564416155219078,
    0.005128771532326937,
    0.008726567029953003,
    0.002945390297099948,
    0.017091266810894012,
    -0.027014778926968575,
    -0.03423820436000824,
    -0.014753047376871109,
    -0.01264447532594204,
    0.0029210338834673166,
    -0.05313880741596222,
    -0.014961817301809788,
    -0.003963141702115536,
    0.009575562551617622,
    -0.0333196185529232,
    -0.003093268722295761,
    -0.17570044100284576,
    -0.008663935586810112,
    0.011447529308497906,
    -0.0261379461735487,
    0.023368271067738533,
    -0.005929054692387581,
    -0.010974318720400333,
    -0.016590218991041183,
    -0.01001397892832756,
    -0.01757839508354664,
    0.02048725076019764,
    0.01549069955945015,
    -0.020779527723789215,
    -0.021795539185404778,
    -0.0009533808915875852,
    0.006753694731742144,
    0.00048364943359047174,
    0.007703595794737339,
    0.0236187931150198,
    0.01672939956188202,
    0.035852689296007156,
    -0.006085631903260946,
    0.013215111568570137,
    0.0027140039019286633,
    -0.015337602235376835,
    0.023145582526922226,
    -0.011878986842930317,
    0.020709937438368797,
    0.0025783036835491657,
    -0.0020355030428618193,
    -0.006155221723020077,
    0.007856694050133228,
    0.04158689081668854,
    0.017815001308918,
    0.028058625757694244,
    0.005758559796959162,
    0.02048725076019764,
    -0.022185243666172028,
    -0.017105184495449066,
    0.02765500545501709,
    0.024732232093811035,
    0.014780883677303791,
    0.019763516262173653,
    -0.026082273572683334,
    -0.0018719668732956052,
    -0.003503848798573017,
    -0.0023051637690514326,
    -0.008823992684483528,
    0.0013022000202909112,
    -0.029339078813791275,
    0.02130841091275215,
    -0.013041136786341667,
    0.003054994158446789,
    0.005608941428363323,
    0.013229030184447765,
    0.00192937848623842,
    0.009457260370254517,
    0.02722354792058468,
    -0.0076479241251945496,
    -0.027056531980633736,
    -0.015281930565834045,
    -0.027933364734053612,
    -0.005810752045363188,
    -0.014036271721124649,
    -0.017675820738077164,
    -0.011656299233436584,
    -0.031315430998802185,
    0.0075296214781701565,
    -0.0018963232869282365,
    -0.004669478628784418,
    0.03365365043282509,
    0.006412704475224018,
    0.011865069158375263,
    -0.012874121777713299,
    0.022936813533306122,
    -0.0007989784353412688,
    -0.03660425916314125,
    0.04406429082155228,
    0.03819090873003006,
    -0.010793385095894337,
    -0.014655621722340584,
    0.02587350457906723,
    -0.033208273351192474,
    0.002353876596316695,
    0.007536580320447683,
    0.00446418859064579,
    -0.00530622573569417,
    -0.003289859974756837,
    -0.016673726961016655,
    0.0010690740309655666,
    0.010118363425135612,
    -0.03521246090531349,
    -0.0004997421056032181,
    -0.011433611623942852,
    -0.021043969318270683,
    0.017133019864559174,
    0.009742578491568565,
    -0.002842745278030634,
    -0.005883821286261082,
    0.01152407843619585,
    0.0053897337056696415,
    0.014572113752365112,
    -0.021364083513617516,
    0.013416922651231289,
    0.018413472920656204,
    0.03334745392203331,
    -0.010521984659135342,
    0.019039781764149666,
    0.03543515130877495,
    -0.010974318720400333,
    0.0006241339142434299,
    0.005327102728188038,
    0.026360632851719856,
    0.02359095774590969,
    -0.009986142627894878,
    0.032540213316679,
    -0.009359834715723991,
    -0.019025864079594612,
    0.009116269648075104,
    -0.004926960915327072,
    0.036353737115859985,
    0.006677145604044199,
    0.0015918677672743797,
    0.0025087138637900352,
    -0.0102645019069314,
    -0.04155905544757843,
    -0.08072422444820404,
    -0.027279220521450043,
    0.018844930455088615,
    0.00253307051025331,
    -0.046541690826416016,
    -0.026249289512634277,
    -0.011398816481232643,
    0.021169230341911316,
    -0.016047418117523193,
    -0.021795539185404778,
    -0.0006706721615046263,
    0.014989652670919895,
    -0.010528943501412868,
    -0.01901194639503956,
    0.0036778233479708433,
    -0.02370230108499527,
    -0.035769179463386536,
    -0.0019102413207292557,
    -0.01175372488796711,
    0.015198422595858574,
    -0.011203965172171593,
    0.003959662280976772,
    0.01839955523610115,
    0.007501785643398762,
    0.011106539517641068,
    -0.022018227726221085,
    -0.03891464322805405,
    0.015476781874895096,
    0.01774541102349758,
    0.0259570125490427,
    0.0017536641098558903,
    -0.03741149976849556,
    -0.009373752400279045,
    0.036548588424921036,
    -0.0043493653647601604,
    0.002000708132982254,
    -0.0014396399492397904,
    -0.025553392246365547,
    0.0519140250980854,
    -0.01004877407103777,
    -0.0030149801168590784,
    -0.014279836788773537,
    0.02591525949537754,
    -0.010619410313665867,
    -0.03234536200761795,
    -0.01883101277053356,
    -0.012943711131811142,
    0.012762777507305145,
    0.009478136897087097,
    -0.04662519693374634,
    -0.02645806036889553,
    0.0031280636321753263,
    -0.02180945686995983,
    0.0073626055382192135,
    0.007080766838043928,
    -0.004871289245784283,
    0.008058504201471806,
    0.035964030772447586,
    -0.016478875651955605,
    0.01429375447332859,
    -0.00984000414609909,
    -0.015337602235376835,
    -0.01968000829219818,
    0.014321590773761272,
    -0.0013161179376766086,
    -0.000789844780229032,
    0.00584902660921216,
    0.010723795741796494,
    0.012964588589966297,
    -0.03799605742096901,
    -0.007042492274194956,
    0.01392492838203907,
    -0.008232478983700275,
    0.003540383419021964,
    -0.02900504879653454,
    -0.003740454325452447,
    -0.0035630001220852137,
    0.010549820959568024,
    0.03629806265234947,
    -0.010076609440147877,
    -0.03351446986198425,
    0.019958367571234703,
    -0.031148415058851242,
    -0.01707734912633896,
    0.03245670348405838,
    0.016172681003808975,
    -0.004996550735086203,
    -0.0012656652834266424,
    0.005998644512146711,
    -0.028142133727669716,
    0.029756618663668633,
    0.00034664443228393793,
    0.05508732050657272,
    -0.0028931978158652782,
    -0.014043230563402176,
    -0.011565832421183586,
    -0.0037056594155728817,
    -0.0003312041808385402,
    -0.024606969207525253,
    0.006778051145374775,
    -0.06006995588541031,
    -0.006026480812579393,
    -0.087516188621521,
    0.021503262221813202,
    -0.0023434381000697613,
    -0.012971547432243824,
    0.003987498115748167,
    -0.028030790388584137,
    0.039944570511579514,
    -0.01831604726612568,
    -0.0027888130862265825,
    0.022324422374367714,
    -0.03017415665090084,
    -0.011322268284857273,
    -0.008705689571797848,
    0.009986142627894878,
    0.025929177179932594,
    0.01181635633111,
    0.027474071830511093,
    -0.018274294212460518,
    0.0391094945371151,
    -0.013444758020341396,
    -0.0006815455271862447,
    0.004446791019290686,
    0.03234536200761795,
    0.006019521504640579,
    -0.04356324300169945,
    -0.014078025706112385,
    -0.016840742900967598,
    -0.007599211297929287,
    -0.01681290753185749,
    -0.018149031326174736,
    0.010410641320049763,
    0.0001757143618306145,
    0.009227613918483257,
    0.05224805697798729,
    -0.007501785643398762,
    0.01583864912390709,
    0.026291044428944588,
    0.02691735327243805,
    0.01592215709388256,
    0.005842067766934633,
    -0.008420371450483799,
    -0.03440522029995918,
    0.014078025706112385,
    -0.01711910218000412,
    -0.01115525234490633,
    -0.016019582748413086,
    0.00014461639511864632,
    0.005414090119302273,
    0.013229030184447765,
    0.014794801361858845,
    0.011071744374930859,
    0.007968037389218807,
    -0.05260992422699928,
    -0.032595884054899216,
    -0.0016301420982927084,
    -0.016896415501832962,
    0.04718191549181938,
    -0.007425236515700817,
    -0.012693188153207302,
    0.010765548795461655,
    0.016451040282845497,
    0.008496920578181744,
    0.015866484493017197,
    -0.00043841602746397257,
    -0.005709846969693899,
    0.008914459496736526,
    -0.038719791918992996,
    -0.025052344426512718,
    0.007153836078941822,
    -0.03521246090531349,
    -0.011705012060701847,
    -0.05283261090517044,
    0.001992009347304702,
    0.02691735327243805,
    0.031315430998802185,
    -0.010647246614098549,
    0.0015727304853498936,
    0.013215111568570137,
    -0.016005665063858032,
    0.035574328154325485,
    0.015170586295425892,
    -0.015462864190340042,
    -0.012881080619990826,
    -0.009610357694327831,
    0.0352402962744236,
    -0.012032084167003632,
    -0.005000030621886253,
    -0.007265179883688688,
    0.0005710716941393912,
    -0.005403651390224695,
    -0.0062978812493383884,
    0.009672988206148148,
    0.009972224943339825,
    0.02385539934039116,
    -0.005198361352086067,
    -0.01138489879667759,
    0.0036291105207055807,
    -0.020167136564850807,
    0.01692425087094307,
    0.0009638193878345191,
    0.006844161543995142,
    -0.005254033487290144,
    0.005518474616110325,
    -0.03178864344954491,
    -0.009728660807013512,
    -0.0007293885573744774,
    -0.017940262332558632,
    -0.04267249256372452,
    -0.002597440965473652,
    -0.010201871395111084,
    0.009672988206148148,
    -0.00613782461732626,
    -0.014001477509737015,
    0.014975734986364841,
    -0.03727232292294502,
    0.0191650427877903,
    -0.003155899466946721,
    -0.0065553635358810425,
    -0.031315430998802185,
    0.019415566697716713,
    -0.013493470847606659,
    0.008162888698279858,
    0.02122490294277668,
    -0.028531836345791817,
    0.01283932663500309,
    0.007091205101460218,
    0.022324422374367714,
    0.0001139533706009388,
    -0.011127416044473648,
    0.016785070300102234,
    -0.020111465826630592,
    -0.007139918394386768,
    -0.041030172258615494,
    0.001924159238114953,
    -0.019039781764149666,
    0.0028514438308775425,
    0.0019589541479945183,
    0.00132394686806947,
    0.005205320660024881,
    0.08295109868049622,
    -0.0036151926033198833,
    -0.011217882856726646,
    -0.00754353916272521,
    -0.01983310654759407,
    0.031315430998802185,
    0.028671016916632652,
    -0.00012787134619429708,
    0.027404481545090675,
    0.01001397892832756,
    -0.02091870829463005,
    -0.035462986677885056,
    -0.03376499190926552,
    -0.005167046096175909,
    -0.015713388100266457,
    0.010410641320049763,
    -0.006757174152880907,
    0.017870672047138214,
    0.007446113508194685,
    -0.0007872351561672986,
    0.011781561188399792,
    0.02626320719718933,
    0.021252738311886787,
    -0.012331320904195309,
    -0.0375785157084465,
    -0.0041231983341276646,
    0.025344621390104294,
    0.017870672047138214,
    -0.01483655534684658,
    -0.05522650107741356,
    -0.0005841197562403977,
    -0.013256865553557873,
    -0.02746015414595604,
    -0.010974318720400333,
    0.0004075355245731771,
    0.021002216264605522,
    0.0018145552603527904,
    -0.02656940370798111,
    0.010828180238604546,
    -0.003514287294819951,
    -0.0006637131446041167,
    -0.024885328486561775,
    -0.01909545436501503,
    -0.023020321503281593,
    0.011593668721616268,
    -0.006193496286869049,
    0.008524755947291851,
    -0.010396722704172134,
    -0.025817833840847015
  ]
}
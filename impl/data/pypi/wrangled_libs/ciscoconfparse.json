{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: plugins",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "intended audience :: telecommunications industry",
    "license :: osi approved :: gnu general public license (gpl)",
    "license :: osi approved :: gnu general public license v3 (gplv3)",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: communications",
    "topic :: internet",
    "topic :: system :: networking",
    "topic :: system :: networking :: monitoring"
  ],
  "description": "parse, audit, query, build, and modify cisco ios-style and junos-style configs\n# ciscoconfparse\n\n[![git commits][41]][42] [![version][2]][3] [![downloads][6]][7] [![license][8]][9]\n\n[![sonarcloud][51]][52] [![sonarcloud maintainability rating][53]][54] [![sonarcloud lines of code][55]][56] [![sonarcloud bugs][59]][60] [![sonarcloud code smells][57]][58] [![sonarcloud tech debt][61]][62]\n\n[![snyk package health][37]][38]\n\n\n## introduction: what is ciscoconfparse?\n\nshort answer: ciscoconfparse is a [python][10] library\nthat helps you quickly answer questions like these about your\ncisco configurations:\n\n- what interfaces are shutdown?\n- which interfaces are in trunk mode?\n- what address and subnet mask is assigned to each interface?\n- which interfaces are missing a critical command?\n- is this configuration missing a standard config line?\n\nit can help you:\n\n- audit existing router / switch / firewall / wlc configurations\n- modify existing configurations\n- build new configurations\n\nspeaking generally, the library examines an ios-style config and breaks\nit into a set of linked parent / child relationships. you can perform\ncomplex queries about these relationships.\n\n[![cisco ios config: parent / child][11]][11]\n\n## generic usage\n\nthe following code will parse a configuration stored in\n`exampleswitch.conf` and select interfaces that are shutdown.\n\nin this case, the parent is a line containing `interface` and\nthe child is a line containing the word `shutdown`.\n\n```python\nfrom ciscoconfparse import ciscoconfparse\n\nparse = ciscoconfparse('exampleswitch.conf', syntax='ios')\n\nfor intf_obj in parse.find_parent_objects('^interface', '^\\s+shutdown'):\n    print(\"shutdown: \" + intf_obj.text)\n```\n\nthe next example will find the ip address assigned to interfaces.\n\n```python\nfrom ciscoconfparse import ciscoconfparse\n\nparse = ciscoconfparse('exampleswitch.conf', syntax='ios')\n\nfor ccp_obj in parse.find_objects('^interface'):\n\n    intf_name = ccp_obj.re_match_typed('^interface\\s+(\\s.+?)$')\n\n    # search children of all interfaces for a regex match and return\n    # the value matched in regex match group 1.  if there is no match,\n    # return a default value: ''\n    intf_ip_addr = ccp_obj.re_match_iter_typed(\n        r'ip\\saddress\\s(\\d+\\.\\d+\\.\\d+\\.\\d+)\\s', result_type=str,\n        group=1, default='')\n    print(f\"{intf_name}: {intf_ip_addr}\")\n```\n\n## cisco ios factory usage\n\nciscoconfparse has a special feature that abstracts common ios / nxos / asa / iosxr fields; at this time, it is only supported on those configuration types. you will see factory parsing in ciscoconfparse code as parsing the configuration with `factory=true`.  a fraction of these pre-parsed cisco ios fields follows; some variables are not used below, but simply called out for quick reference.\n\n```python\nfrom ciscoconfparse import ipv4obj, ipv6obj\nfrom ciscoconfparse import ciscoconfparse\n\n##############################################################################\n# parse an example cisco ios hsrp configuration from:\n#     tests/fixtures/configs/sample_08.ios\n#\n# !\n# interface fastethernet0/0\n#  ip address 172.16.2.1 255.255.255.0\n#  ipv6 dhcp server ipv6_2fl_north_lan\n#  ipv6 address fd01:ab00::/64 eui-64\n#  ipv6 address fe80::1 link-local\n#  ipv6 enable\n#  ipv6 ospf 11 area 0\n#  standby 110 ip 172.16.2.254\n#  standby 110 ipv6 autoconfig\n#  standby 110 priority 150\n#  standby 110 preempt delay minimum 15\n#  standby 110 track dialer1 75\n#  standby 110 track fastethernet 0/1\n#  standby 110 track fastethernet1/0 30\n#  standby 111 ip 172.16.2.253\n#  standby 111 priority 150\n#  standby 111 preempt delay minimum 15\n#  standby 111 track dialer1 50\n#\n##############################################################################\nparse = ciscoconfparse('tests/fixtures/configs/sample_08.ios', syntax='ios', factory=true)\nfor ccp_obj in parse.find_objects('^interface'):\n\n    # skip if there are no hsrpinterfacegroup() instances...\n    if len(ccp_obj.hsrp_interfaces) == 0:\n        continue\n\n    # interface name, such as 'fastethernet0/0'\n    intf_name = ccp_obj.name\n\n    # interface description\n    intf_description = ccp_obj.description\n\n    # ipv4obj\n    intf_v4obj = ccp_obj.ipv4_addr_object\n\n    # ipv4 address object: ipaddress.ipv4address()\n    intf_v4addr = ccp_obj.ipv4_addr_object.ip\n\n    # ipv4 netmask object: ipaddress.ipv4address()\n    intf_v4masklength = ccp_obj.ipv4_addr_object.masklength\n\n    # set() of ipv4 secondary address/prefixlen strings\n    intf_v4secondary_networks = ccp_obj.ip_secondary_networks\n\n    # set() of ipv4 secondary address strings\n    intf_v4secondary_addresses = ccp_obj.ip_secondary_addresses\n\n    # list of hsrp ipv4 addrs from the ciscoconfpasre/models_cisco.py hsrpinterfacegroup()\n    intf_hsrp_addresses = [hsrp_grp.ip for hsrp_grp in ccp_obj.hsrp_interfaces]\n\n    # a bool for using hsrp bia mac-address...\n    intf_hsrp_usebia = any([ii.use_bia for ii in ccp_obj.hsrp_interfaces])\n\n    ##########################################################################\n    # print a simple interface summary\n    ##########################################################################\n    print(\"----\")\n    print(f\"interface {ccp_obj.interface_object.name}: {intf_v4addr}/{intf_v4masklength}\")\n    print(f\"  interface {intf_name} description: {intf_description}\")\n\n    ##########################################################################\n    # print hsrp group interface tracking information\n    ##########################################################################\n    print(\"\")\n    print(f\"  hsrp tracking for {set([ii.interface_name for ii in ccp_obj.hsrp_interfaces])}\")\n    for hsrp_intf_group in ccp_obj.hsrp_interfaces:\n        group = hsrp_intf_group.hsrp_group\n        # hsrp_intf_group.interface_tracking is a list of dictionaries\n        if len(hsrp_intf_group.interface_tracking) > 0:\n            print(f\"  --- hsrp group {group} ---\")\n            for track_intf in hsrp_intf_group.interface_tracking:\n                print(f\"    --- tracking {track_intf.interface} ---\")\n                print(f\"    tracking interface: {track_intf.interface}\")\n                print(f\"    tracking decrement: {track_intf.decrement}\")\n                print(f\"    tracking weighting: {track_intf.weighting}\")\n\n\n    ##########################################################################\n    # break out inidividual interface name components\n    #   example: 'serial3/4/5.6:7 multipoint'\n    ##########################################################################\n    # the base ciscoconfparse/ccp_util.py ciscointerface() instance\n    intf_cisco_interface = ccp_obj.interface_object\n    # the ciscoconfparse/ccp_util.py ciscointerface() name, 'serial3/4/5.6:7 multipoint'\n    intf_name = ccp_obj.interface_object.name\n    # the ciscoconfparse/ccp_util.py ciscointerface() prefix, 'serial'\n    intf_prefix = ccp_obj.interface_object.prefix\n    # the ciscoconfparse/ccp_util.py ciscointerface() digit separator, '/'\n    digit_separator = ccp_obj.interface_object.digit_separator or \"\"\n    # the ciscoconfparse/ccp_util.py ciscointerface() slot, 3\n    intf_slot = ccp_obj.interface_object.slot or \"\"\n    # the ciscoconfparse/ccp_util.py ciscointerface() card, 4\n    intf_card = ccp_obj.interface_object.card or \"\"\n    # the ciscoconfparse/ccp_util.py ciscointerface() card, 5\n    intf_port = ccp_obj.interface_object.port\n    # the ciscoconfparse/ccp_util.py ciscointerface() subinterface, 6\n    intf_subinterface = ccp_obj.interface_object.subinterface or \"\"\n    # the ciscoconfparse/ccp_util.py ciscointerface() channel, 7\n    intf_channel = ccp_obj.interface_object.channel or \"\"\n    # the ciscoconfparse/ccp_util.py ciscointerface() interface_class, 'multipoint'\n    intf_class = ccp_obj.interface_object.interface_class or \"\"\n\n    ##########################################################################\n    # extract all ipv4obj() with re_match_iter_typed()\n    ##########################################################################\n    _default = none\n    for _obj in ccp_obj.children:\n        # get a dict() from re_match_iter_typed() by caling it with 'groupdict'\n        intf_dict = _obj.re_match_iter_typed(\n            # add a regex match-group called 'v4addr'\n            r\"ip\\s+address\\s+(?p<v4addr>\\s.+?\\d)\\s*(?p<secondary>secondary)*$\",\n            # cast the v4addr regex match group as an ipv4obj() type\n            groupdict={\"v4addr\": ipv4obj, \"secondary\": str},\n            # default to none if there is no regex match\n            default=_default,\n        )\n        intf_ipv4obj = intf_dict[\"v4addr\"]\n\n    ##########################################################################\n    # extract all ipv6obj() with re_match_iter_typed()\n    ##########################################################################\n    _default = none\n    for _obj in ccp_obj.children:\n        # get a dict() from re_match_iter_typed() by caling it with 'groupdict'\n        intf_dict = _obj.re_match_iter_typed(\n            # add regex match-groups called 'v6addr' and an optional 'ipv6type'\n            r\"ipv6\\s+address\\s+(?p<v6addr>\\s.+?\\d)\\s*(?p<v6type>eui.64|link.local)*$\",\n            # cast the v6addr regex match group as an ipv6obj() type\n            groupdict={\"v6addr\": ipv6obj, \"v6type\": str},\n            # default to none if there is no regex match\n            default=_default,\n        )\n        intf_ipv6obj = intf_dict[\"v6addr\"]\n        intf_ipv6type = intf_dict[\"v6type\"]\n        # skip this object if it has no ipv6 address\n        if intf_ipv6obj is _default:\n            continue\n```\n\nwhen that is run, you will see information similar to this...\n\n```\n----\ninterface fastethernet0/0: 172.16.2.1/24\n  interface fastethernet0/0 description: [ipv4 and ipv6 desktop / laptop hosts on 2nd-floor north lan]\n\n  hsrp group tracking for {'fastethernet0/0'}\n  --- hsrp group 110 ---\n    --- tracking dialer1 ---\n    tracking interface: dialer1\n    tracking decrement: 75\n    tracking weighting: none\n    --- tracking fastethernet 0/1 ---\n    tracking interface: fastethernet 0/1\n    tracking decrement: 10\n    tracking weighting: none\n    --- tracking fastethernet1/0 ---\n    tracking interface: fastethernet1/0\n    tracking decrement: 30\n    tracking weighting: none\n  --- hsrp group 111 ---\n    --- tracking dialer1 ---\n    tracking interface: dialer1\n    tracking decrement: 50\n    tracking weighting: none\ngrp {'addr': <ipv6obj fd01:ab00::/64>}\nresult <iosintfline # 231 'fastethernet0/0' primary_ipv4: '172.16.2.1/24'> <ipv6obj fd01:ab00::/64>\n```\n\n\n## are there private copies of ciscoconfparse()?\n\nyes.  [cisco systems][27] maintains their own copy of `ciscoconfparse()`. the terms of the gplv3\nlicense allow this as long as they don't distribute their modified private copy in\nbinary form.  also refer to this [gplv3 license primer / gplv3 101][45].  officially, [modified\ncopies of ciscoconfparse source-code must also be licensed as gplv3][45].\n\ndear [cisco systems][27]: please consider porting your improvements back into\nthe [`github ciscoconfparse repo`](https://github.com/mpenning/ciscoconfparse).\n\n## are you releasing licensing besides gplv3?\n\n[i will not](https://github.com/mpenning/ciscoconfparse/issues/270#issuecomment-1774035592); however, you can take the solution cisco does above as long as you comply with the gplv3 terms.  if it's truly a problem for your company, there are commercial solutions available (to include purchasing the project, or hiring me).\n\n## what if we don\\'t use cisco ios?\n\ndon\\'t let that stop you.\n\nas of ciscoconfparse 1.2.4, you can parse [brace-delimited configurations][13] into a cisco ios style (see [github issue \\#17][14]), which means that ciscoconfparse can parse these configurations:\n\n- juniper networks junos\n- palo alto networks firewall configurations\n- f5 networks configurations\n\nciscoconfparse also handles anything that has a cisco ios style of configuration, which includes:\n\n- cisco ios, cisco nexus, cisco ios-xr, cisco ios-xe, aironet os, cisco asa, cisco catos\n- arista eos\n- brocade\n- hp switches\n- force 10 switches\n- dell powerconnect switches\n- extreme networks\n- enterasys\n- screenos\n\n## docs\n\n- blogs\n  - kirk byers published [a ciscoconfparse blog piece](https://pynet.twb-tech.com/blog/parsing-configurations-w-ciscoconfparse.html)\n  - henry \u00f6lsner published [a ciscoconfparse blog piece](https://codingnetworker.com/2016/06/parse-cisco-ios-configuration-ciscoconfparse/)\n- the latest copy of the docs are [archived on the web][15]\n- there is also a [ciscoconfparse tutorial][16]\n\n## installation and downloads\n\n-   use `poetry` for python3.x\\... :\n\n        python -m pip install ciscoconfparse\n\nif you\\'re interested in the source, you can always pull from the [github repo][17]:\n\n- download from [the github repo][17]: :\n\n        git clone git://github.com/mpenning/ciscoconfparse\n        cd ciscoconfparse/\n        python -m pip install .\n\n## github star history\n\n[![github star history chart][40]][40]\n\n## what is the pythonic way of handling script credentials?\n\n1. never hard-code credentials\n2. use [python-dotenv](https://github.com/theskumar/python-dotenv)\n\n\n## is this a tool, or is it artwork?\n\nthat depends on who you ask.  many companies use ciscoconfparse as part of their\nnetwork engineering toolbox; others regard it as a form of artwork.\n\n## pre-requisites\n\n[the ciscoconfparse python package][3] requires python versions 3.7+ (note: python version 3.7.0 has a bug - ref [github issue \\#117][18], but version 3.7.1 works); the os should not matter.\n\n\n## other resources\n\n- [dive into python3](http://www.diveintopython3.net/) is a good way to learn python\n- [team cymru][30] has a [secure ios template][29], which is especially useful for external-facing routers / switches\n- [cisco\\'s guide to hardening ios devices][31]\n- [center for internet security benchmarks][32] (an email address, cookies, and javascript are required)\n\n## bug tracker and support\n\n- please report any suggestions, bug reports, or annoyances with a [github bug report][24].\n- if you\\'re having problems with general python issues, consider searching for a solution on [stack overflow][33].  if you can\\'t find a solution for your problem or need more help, you can [ask on stack overflow][34] or [reddit/r/python][39].\n- if you\\'re having problems with your cisco devices, you can contact:\n  - [cisco tac][28]\n  - [reddit/r/cisco][35]\n  - [reddit/r/networking][36]\n  - [networkengineering.se][23]\n\n## dependencies\n\n- [python 3](https://python.org/)\n- [passlib](https://github.com/glic3rinu/passlib)\n- [toml](https://github.com/uiri/toml)\n- [dnspython](https://github.com/rthalley/dnspython)\n- [loguru](https://github.com/delgan/loguru)\n- [deprecated](https://github.com/tantale/deprecated)\n\n\n## unit-tests and development\n\n- we are manually disabling some [sonarcloud](https://sonarcloud.io/) alerts with:\n  - `#pragma warning disable s1313`\n  - `#pragma warning restore s1313`\n  - where `s1313` is a false-positive that [sonarcloud](https://sonarcloud.io) flags in [ciscoconfparse](https://github.com/mpenning/ciscoconfparse/).\n  - those `#pragma warning` lines should be carefully-fenced to ensure that we don't disable a [sonarcloud](https://sonarcloud.io/) alert that is useful.\n\n### semantic versioning and conventional commits\n\n- at this point, [ciscoconfparse][3] does not adhere to [semantic versioning][49]\n- although we added [commitizen][48] as a dev dependency, we are not enforcing commit rules (such as [conventional commits][50]) yet.\n\n### execute unit tests\n\nthe project\\'s [test workflow][1] checks ciscoconfparse on python versions 3.7 and higher, as well as a [pypy jit][22] executable.\n\nif you already git cloned the repo and want to manually run tests either run with `make test` from the base directory, or manually run with [`pytest`][63] in a unix-like system...\n\n```shell\n$ cd tests\n$ pytest -vvs ./test_*py\n...\n```\n\n### execute miss report\n\nif you already have have `pytest` and `pytest-cov` installed, run a test line miss report as shown below.\n\n```shell\n$ cd tests\n$ pytest --cov-report=term-missing --cov=ciscoconfparse ./\n...\n```\n\n\n## editing the package\n\nthis uses the example of editing the package on a git branch called `develop`...\n\n-   `git clone https://github.com/mpenning/ciscoconfparse`\n-   `cd ciscoconfparse`\n-   `git branch develop`\n-   `git checkout develop`\n-   add / modify / delete on the `develop` branch\n-   `make test`\n-   if tests run clean, `git commit` all the pending changes on the `develop` branch\n-   if you plan to publish this as an official version rev, edit the version number in [pyproject.toml][12].  in the future, we want to integrate `commitizen` to manage versioning.\n-   `git checkout main`\n-   `git merge develop`\n-   `make test`\n-   `git push origin main`\n-   `make pypi`\n\n## sphinx documentation\n\nbuilding the ciscoconfparse documentation tarball comes down to this one wierd trick:\n\n- `cd sphinx-doc/`\n- `pip install -r ./requirements.txt;  # install sphinx dependencies`\n- `pip install -r ../requirements.txt; # install ccp dependencies`\n- `make html`\n\n## license and copyright\n\n[ciscoconfparse][3] is licensed [gplv3][21]\n\n- copyright (c) 2022-2023 david michael pennington\n- copyright (c) 2022 david michael pennington at wellsky\n- copyright (c) 2022 david michael pennington\n- copyright (c) 2019-2021 david michael pennington at cisco systems / thousandeyes\n- copyright (c) 2012-2019 david michael pennington at samsung data services\n- copyright (c) 2011-2012 david michael pennington at dell computer corp\n- copyright (c) 2007-2011 david michael pennington\n\nthe word \\\"cisco\\\" is a registered trademark of [cisco systems][27].\n\n## author\n\n[ciscoconfparse][3] was written by [david michael pennington][25] (mike \\[\\~at\\~\\] pennington \\[.dot.\\] net).\n\n## interesting users (and some downstream projects)\n\nthe following are featured [ciscoconfparse](https://github.com/mpenning/ciscoconfparse/) users / projects:\n\n- [salt](https://github.com/saltstack/salt)\n- [suzieq](https://github.com/netenglabs/suzieq):  suzieq collects, normalizes, and stores timestamped data that is otherwise only available to engineers by logging into each device, providing a rich data lake that can be queried and leveraged for next generation monitoring and alerting\n- [netwalk](https://github.com/icovada/netwalk): python library to discover, parse, analyze and change cisco switched networks\n- [netlint](https://github.com/kircheneer/netlint)\n- [cisco_switchport_auditor](https://github.com/corvese/cisco_switchport_auditor): parses cisco switch configuration into switch & interface objects to access configuration details of the aforementioned in a programatic manner. works with ssh, restconf, or with running/start-up config files.\n- [nipper-ng](https://github.com/arpitn30/nipper-ng): a network security analyzer\n- [pynipper-ng](https://github.com/syn-4ck/pynipper-ng): a network security analyzer\n- [build_fabric](https://github.com/sjhloco/build_fabric): build a declarative cisco nxos leaf and spine fabric using ansible\n- [junos-ansible](https://github.com/yzguy/junos-ansible)\n- [faddr](https://github.com/kido5217/faddr)\n- [netopsnornir](https://github.com/wangcongxing/netopsnornir/)\n- [adala](https://github.com/blindhog/adala): extract useful information about your cisco network\n- [xlina](https://github.com/blindhog/xlina):\n  - organize_acls.py: extract and organize access-list configurations and organizes associated objects and object-groups.\n  - organize_anyconnect.py: extract and organize anyconnect profiles and associated group policies, auth servers, access-lists, etc\n  - organize_static_nats.py: extract and organize static nat configurations and associated objects and object-groups\n  - organize_auto_nat.py: extract and organize auto nat configurations with associated objects\n  - organize_crypto_maps.py: extract and organize crypto map configurations and associated access-lists, transform-sets, tunnel-groups, etc\n- [catalyst_2_meraki_config_checker](https://github.com/fadysharobeem/catalyst_2_meraki_config_checker): check the cisco catalyst configuration text file and verify if they are supported by the meraki ms platform.\n- [parse_nxos_config](https://github.com/ocptech/parse_nxos_config): generates an excel file with the information gathered from running-config file from cisco nxos\n- [nornir3_cdp_map](https://github.com/nouse4it/nornir3_cdp_map): set interface descriptions by looking at the hostname of its cdp neighbor\n- [devicebanner](https://github.com/labeveryday/devicebanner/): update the banner message of the day on network devices\n- [iosconfigslicer](https://github.com/imanassypov/iosconfigslicer): simple script to slice cisco configuration file, and replicate sections of the config via ssh to another device\n- [ciscocfg](https://github.com/mareel-io/ciscocfg): a simple rpcd for ciscoconfparse\n- [confparser](https://github.com/yshornikov/confparser/): ssh with paramiko, and dump information about your configs into sqllite3 / excel\n- [parse_config](https://github.com/sergey-link/parse_config/): dump information about your vlans / vrfs to excel\n- finally, _[cisco systems](https://cisco.com/) product engineering and advanced services_\n\n## other useful network management projects\n\n- [netbox](https://github.com/netbox-community/netbox/): netbox is the source of truth for everything on your network, from physical components like power systems and cabling to virtual assets like ip addresses and vlans\n  - [ntc-netbox-plugin-onboarding](https://github.com/networktocode/ntc-netbox-plugin-onboarding): a plugin for netbox to easily onboard new devices.\n- [nautobot](https://github.com/nautobot/nautobot): network source of truth & network automation platform.\n- [nornir](https://github.com/nornir-automation/nornir): network automation via plugins - a pluggable multi-threaded framework with inventory management to help operate collections of devices\n- [network-importer](https://github.com/networktocode/network-importer/): the network importer is a tool/library to analyze and/or synchronize an existing network with a network source of truth (sot), it's designed to be idempotent and by default it's only showing the difference between the running network and the remote sot.\n- [nuts](https://github.com/network-unit-testing-system/nuts): nuts defines a desired network state and checks it against a real network using pytest and nornir.\n- [jerikan](https://vincent.bernat.ch/en/blog/2021-network-jerikan-ansible):\n- [nettowel](https://github.com/infrastructureascode-ch/nettowel/): collection of useful network automation functions\n- [napalm-panos](https://github.com/napalm-automation-community/napalm-panos)\n- [tacquito](https://github.com/facebookincubator/tacquito/): a go tacacs+ implementation\n- [assessment-cmds](https://github.com/blindhog/assessment-cmds/): useful show commands to check your cisco router's health\n- [learn-to-cloud](https://github.com/labeveryday/learn-to-cloud): primer for cloud-computing fundamentals\n\n\n\n  [1]: https://github.com/mpenning/ciscoconfparse/blob/main/.github/workflows/tests.yml\n  [2]: https://img.shields.io/pypi/v/ciscoconfparse.svg\n  [3]: https://pypi.python.org/pypi/ciscoconfparse/\n  [4]: https://github.com/mpenning/ciscoconfparse/actions/workflows/tests.yml/badge.svg\n  [5]: https://github.com/mpenning/ciscoconfparse/actions/workflows/tests.yml\n  [6]: https://pepy.tech/badge/ciscoconfparse\n  [7]: https://pepy.tech/project/ciscoconfparse\n  [8]: http://img.shields.io/badge/license-gplv3-blue.svg\n  [9]: https://www.gnu.org/copyleft/gpl.html\n  [10]: https://www.python.org\n  [11]: https://raw.githubusercontent.com/mpenning/ciscoconfparse/master/sphinx-doc/_static/ciscoconfparse_overview_75pct.png\n  [12]: https://github.com/mpenning/ciscoconfparse/blob/main/pyproject.toml\n  [13]: https://github.com/mpenning/ciscoconfparse/blob/master/configs/sample_01.junos\n  [14]: https://github.com/mpenning/ciscoconfparse/issues/17\n  [15]: http://www.pennington.net/py/ciscoconfparse/\n  [16]: http://pennington.net/tutorial/ciscoconfparse/ccp_tutorial.html\n  [17]: https://github.com/mpenning/ciscoconfparse\n  [18]: https://github.com/mpenning/ciscoconfparse/issues/117\n  [19]: https://github.com/mpenning/ciscoconfparse/issues/13\n  [20]: https://github.com/crackerjackmack/\n  [21]: http://www.gnu.org/licenses/gpl-3.0.html\n  [22]: https://pypy.org\n  [23]: https://networkengineering.stackexchange.com/\n  [24]: https://github.com/mpenning/ciscoconfparse/issues/new/choose\n  [25]: https://github.com/mpenning\n  [26]: https://github.com/muir\n  [27]: https://www.cisco.com/\n  [28]: https://www.cisco.com/go/support\n  [29]: https://www.cymru.com/documents/secure-ios-template.html\n  [30]: https://team-cymru.com/company/\n  [31]: http://www.cisco.com/c/en/us/support/docs/ip/access-lists/13608-21.html\n  [32]: https://learn.cisecurity.org/benchmarks\n  [33]: https://stackoverflow.com\n  [34]: http://stackoverflow.com/questions/ask\n  [35]: https://www.reddit.com/r/cisco/\n  [36]: https://www.reddit.com/r/networking\n  [37]: https://snyk.io/advisor/python/ciscoconfparse/badge.svg\n  [38]: https://snyk.io/advisor/python/ciscoconfparse\n  [39]: https://www.reddit.com/r/python/\n  [40]: https://api.star-history.com/svg?repos=mpenning/ciscoconfparse&type=date\n  [41]: https://img.shields.io/github/commit-activity/m/mpenning/ciscoconfparse\n  [42]: https://img.shields.io/github/commit-activity/m/mpenning/ciscoconfparse\n  [43]: https://www.codefactor.io/content/badges/b.svg\n  [44]: https://www.codefactor.io/repository/github/mpenning/ciscoconfparse/\n  [45]: https://fossa.com/blog/open-source-software-licenses-101-gpl-v3/\n  [46]: https://app.codacy.com/project/badge/grade/4774ebb0292d4e1d9dc30bf263d9df14\n  [47]: https://app.codacy.com/gh/mpenning/ciscoconfparse/dashboard\n  [48]: https://commitizen-tools.github.io/commitizen/\n  [49]: https://semver.org/\n  [50]: https://www.conventionalcommits.org/en/v1.0.0/\n  [51]: https://sonarcloud.io/api/project_badges/measure?project=mpenning_ciscoconfparse&metric=alert_status\n  [52]: https://sonarcloud.io/summary/new_code?id=mpenning_ciscoconfparse\n  [53]: https://sonarcloud.io/api/project_badges/measure?project=mpenning_ciscoconfparse&metric=sqale_rating\n  [54]: https://sonarcloud.io/summary/new_code?id=mpenning_ciscoconfparse\n  [55]: https://sonarcloud.io/api/project_badges/measure?project=mpenning_ciscoconfparse&metric=ncloc\n  [56]: https://sonarcloud.io/summary/new_code?id=mpenning_ciscoconfparse\n  [57]: https://sonarcloud.io/api/project_badges/measure?project=mpenning_ciscoconfparse&metric=code_smells\n  [58]: https://sonarcloud.io/summary/new_code?id=mpenning_ciscoconfparse\n  [59]: https://sonarcloud.io/api/project_badges/measure?project=mpenning_ciscoconfparse&metric=bugs\n  [60]: https://sonarcloud.io/summary/new_code?id=mpenning_ciscoconfparse\n  [61]: https://sonarcloud.io/api/project_badges/measure?project=mpenning_ciscoconfparse&metric=sqale_index\n  [62]: https://sonarcloud.io/summary/new_code?id=mpenning_ciscoconfparse\n  [63]: https://docs.pytest.org/en/\n\n",
  "docs_url": null,
  "keywords": "parse,audit,query,modify,cisco ios,cisco,nxos,asa,juniper",
  "license": "gpl-3.0-only",
  "name": "ciscoconfparse",
  "package_url": "https://pypi.org/project/ciscoconfparse/",
  "project_url": "https://pypi.org/project/ciscoconfparse/",
  "project_urls": {
    "documentation": "http://www.pennington.net/py/ciscoconfparse/",
    "homepage": "http://www.pennington.net/py/ciscoconfparse/",
    "repository": "https://github.com/mpenning/ciscoconfparse",
    "source": "https://github.com/mpenning/ciscoconfparse"
  },
  "release_url": "https://pypi.org/project/ciscoconfparse/1.9.41/",
  "requires_dist": [
    "deprecated (>=1.2.14)",
    "dnspython (>=2.4.2,<3.0.0)",
    "hier_config (>=2.2.2)",
    "loguru (==0.7.2)",
    "passlib (>=1.7.4,<2.0.0)",
    "toml (>=0.10.2)"
  ],
  "requires_python": ">=3.8,<4.0.0",
  "summary": "parse, audit, query, build, and modify cisco ios-style and junos-style configs",
  "version": "1.9.41",
  "releases": [],
  "developers": [
    "mike@pennington.net",
    "mike_pennington"
  ],
  "kwds": "ciscoconfparse ciscoconfparse_overview_75pct ciscocfg cisco ciscoconfpasre",
  "license_kwds": "gpl-3.0-only",
  "libtype": "pypi",
  "id": "pypi_ciscoconfparse",
  "homepage": "",
  "release_count": 334,
  "dependency_ids": [
    "pypi_deprecated",
    "pypi_dnspython",
    "pypi_hier_config",
    "pypi_loguru",
    "pypi_passlib",
    "pypi_toml"
  ],
  "documentation_summary": "CiscoConfParse is a Python library designed to help users parse, audit, query, build, and modify configurations for Cisco IOS-style and JunOS-style devices. It allows for complex queries about device configurations, identifying details such as interface statuses, IP addresses, and missing commands. The library supports Python versions 3.8 to less than 4.0.0 and is licensed under the GNU General Public License v3 (GPLv3). It provides features for both generic usage and specialized Cisco IOS factory usage, enabling detailed analysis and modification of network device configurations. CiscoConfParse is maintained by Mike Pennington and is suitable for developers, IT professionals, system administrators, and those in the telecommunications industry. The library is OS-independent and supports a range of Python versions from 3.8 to 3.12.",
  "embedding": [
    0.009270717389881611,
    0.04011588543653488,
    0.03416431322693825,
    -0.014735863544046879,
    -0.017096463590860367,
    0.03499409928917885,
    0.008977430872619152,
    -0.0011454272316768765,
    -0.021402768790721893,
    -0.03590972349047661,
    0.006856468506157398,
    0.023892126977443695,
    -0.03962945565581322,
    0.01917092874646187,
    0.00507171219214797,
    0.021631674841046333,
    0.003435387508943677,
    -0.022103793919086456,
    0.01578024961054325,
    0.013226510025560856,
    0.00020543474238365889,
    -0.007825745269656181,
    -0.055853214114904404,
    -0.0394577756524086,
    -0.011531170457601547,
    0.01788332872092724,
    -0.008433777838945389,
    0.0030365893617272377,
    -0.016767408698797226,
    -0.014979076571762562,
    0.028413033112883568,
    -0.006391501985490322,
    -0.025365713983774185,
    0.005100325681269169,
    0.02000071480870247,
    -0.008977430872619152,
    0.007389391772449017,
    -0.01002897135913372,
    0.012940376996994019,
    0.006559605244547129,
    0.023477233946323395,
    0.005683321971446276,
    -0.02672484703361988,
    -0.0061196754686534405,
    0.005204048939049244,
    0.030158447101712227,
    0.006999535020440817,
    -0.019471369683742523,
    -0.028527487069368362,
    0.023906433954834938,
    0.02060159482061863,
    -0.0004904503002762794,
    -0.0002664616040419787,
    -0.023462926968932152,
    -0.005597481969743967,
    0.020730355754494667,
    0.018341142684221268,
    0.00040349262417294085,
    -0.039343323558568954,
    0.0010032547870650887,
    0.035394683480262756,
    -0.005683321971446276,
    -0.03333452716469765,
    -0.010715690441429615,
    0.0048821489326655865,
    0.006184055004268885,
    0.0077613648027181625,
    0.024478701874613762,
    -0.002369541209191084,
    -0.004807038698345423,
    0.030101219192147255,
    0.05851425230503082,
    -0.0035713007673621178,
    -0.0010721056023612618,
    0.03831324353814125,
    0.0015075646806508303,
    -0.021717514842748642,
    -0.009420937858521938,
    -0.01918523572385311,
    0.0016416895668953657,
    0.0024303444661200047,
    -0.027354341000318527,
    -0.0004676490498241037,
    0.01673879660665989,
    0.017282448709011078,
    -0.0071426015347242355,
    -0.004213312175124884,
    0.007904431782662868,
    -0.014428270049393177,
    -0.008934510871767998,
    0.008569691330194473,
    0.029500339180231094,
    0.012103437446057796,
    0.009120497852563858,
    0.006938731763511896,
    0.015894703567028046,
    -0.033420365303754807,
    0.03376372531056404,
    -0.009285024367272854,
    -0.0069244252517819405,
    -0.0032261526212096214,
    0.03147466108202934,
    0.002700382610782981,
    -0.004925068933516741,
    -0.029414499178528786,
    -0.023906433954834938,
    0.006359311752021313,
    -0.01715368963778019,
    0.03528023138642311,
    -0.014571337029337883,
    -0.029929539188742638,
    0.033592045307159424,
    -0.020315462723374367,
    -0.018541434779763222,
    0.01023641787469387,
    -0.018884794786572456,
    0.020758967846632004,
    -1.9294435332994908e-05,
    -0.0037948423996567726,
    -0.03490825742483139,
    -0.008905897848308086,
    0.012682856991887093,
    0.027897993102669716,
    -0.020386995747685432,
    0.021402768790721893,
    -0.01605207659304142,
    -0.008519617840647697,
    -0.010107657872140408,
    -0.03425015136599541,
    -0.04291998967528343,
    0.021932115778326988,
    -0.018055008724331856,
    0.0238778218626976,
    0.016867555677890778,
    0.032676417380571365,
    -0.019070781767368317,
    0.004942952189594507,
    -0.011380950920283794,
    -0.010815837420523167,
    -0.025923673063516617,
    0.002092349575832486,
    0.015622876584529877,
    -0.023062340915203094,
    3.0401659387280233e-05,
    -0.009807217866182327,
    0.021603060886263847,
    0.049243535846471786,
    -0.015351049602031708,
    -0.015193676576018333,
    -0.0012607746757566929,
    0.01673879660665989,
    0.010250723920762539,
    -0.010722843930125237,
    0.00914911087602377,
    -0.005926535464823246,
    0.031760793179273605,
    0.00593368848785758,
    0.013891770504415035,
    0.011581243947148323,
    -0.01692478358745575,
    -0.015322436578571796,
    0.003837762400507927,
    -0.02879931405186653,
    0.00673843827098608,
    -0.011581243947148323,
    0.01885618269443512,
    0.0011436388595029712,
    -0.021674595773220062,
    -0.012225043959915638,
    -0.00024790765019133687,
    0.007546764798462391,
    0.007618298288434744,
    -0.003394255880266428,
    -0.005736972205340862,
    0.003830609144642949,
    0.012525483965873718,
    0.04498014971613884,
    0.004224042408168316,
    -0.02350584790110588,
    -0.01425659004598856,
    0.003920025657862425,
    0.009907363913953304,
    0.0054293787106871605,
    0.03250473737716675,
    -0.0023677528370171785,
    -0.03559497743844986,
    -0.0010864122305065393,
    0.03822740539908409,
    -0.02369183488190174,
    0.04120318964123726,
    0.010751457884907722,
    0.02267606183886528,
    -0.0346793532371521,
    -0.00871275831013918,
    -0.5663149356842041,
    0.00017995100643020123,
    -0.019027862697839737,
    -0.032075539231300354,
    0.019986407831311226,
    0.023806286975741386,
    0.019571514800190926,
    0.020816195756196976,
    -0.025408634915947914,
    0.030244287103414536,
    0.0007130977464839816,
    0.02884223312139511,
    0.018527129665017128,
    -0.027340034022927284,
    -0.017554275691509247,
    -0.00793304480612278,
    -0.017683036625385284,
    -0.01613791659474373,
    -0.000628599023912102,
    0.008383704349398613,
    -0.012496870011091232,
    0.03817017748951912,
    -0.006749168504029512,
    -0.011066203936934471,
    -0.00021281161752995104,
    -0.002739726100116968,
    0.017511356621980667,
    -0.030187059193849564,
    0.006430845241993666,
    0.011030437424778938,
    -0.027568940073251724,
    0.0238778218626976,
    0.007832897827029228,
    -0.005443685222417116,
    0.04801316186785698,
    0.008011731319129467,
    -0.01821238175034523,
    0.030272899195551872,
    0.018970634788274765,
    0.04294860363006592,
    -0.016638649627566338,
    -0.008705604821443558,
    -0.014041990041732788,
    0.011423870921134949,
    0.0005517007084563375,
    0.011166350916028023,
    -0.007904431782662868,
    0.01556564960628748,
    0.005289888940751553,
    -0.035480525344610214,
    -0.003977252636104822,
    -0.012732930481433868,
    -0.006252011749893427,
    -0.03190385922789574,
    0.03316284716129303,
    -0.010293643921613693,
    0.022161021828651428,
    -0.02847025915980339,
    0.0014923638664186,
    -0.01638112962245941,
    -0.013262276537716389,
    0.028756393119692802,
    -0.01619514264166355,
    -0.014542723074555397,
    -0.0004846382071264088,
    0.014614257030189037,
    0.017167996615171432,
    -0.035995565354824066,
    -0.023305553942918777,
    -0.01839836873114109,
    0.011667083948850632,
    0.007882971316576004,
    -0.033134233206510544,
    -0.045838549733161926,
    0.0022121677175164223,
    0.021402768790721893,
    0.008870131336152554,
    0.02672484703361988,
    0.0005181694868952036,
    0.03118852525949478,
    -0.0031474658753722906,
    0.012861690483987331,
    -0.02005794271826744,
    -0.04246217757463455,
    0.030616259202361107,
    -0.006602525245398283,
    0.0004761436430271715,
    0.009442397393286228,
    0.006802818272262812,
    -0.03310561925172806,
    0.007489538285881281,
    0.02819843403995037,
    -0.00014664330228697509,
    -0.021216781809926033,
    -0.00673843827098608,
    -0.0032672842498868704,
    -0.030559033155441284,
    -0.000375549920136109,
    -0.009621230885386467,
    -0.029700633138418198,
    -0.008705604821443558,
    -0.03118852525949478,
    -0.008390857838094234,
    -0.02525126002728939,
    0.027196966111660004,
    0.02226116880774498,
    0.02010086178779602,
    0.01582317054271698,
    0.0010488572297617793,
    -0.046840015798807144,
    -0.012511176988482475,
    -0.03430737927556038,
    -0.0240924209356308,
    0.008541078306734562,
    -0.0017570371273905039,
    -0.03178940713405609,
    0.014692943543195724,
    0.009914517402648926,
    0.02134554088115692,
    -0.004195428919047117,
    0.022146714851260185,
    0.009606924839317799,
    -0.00862691830843687,
    -0.008841518312692642,
    0.013512643054127693,
    -0.009120497852563858,
    0.009349404834210873,
    -0.016753103584051132,
    -0.0028666977304965258,
    0.0009871597867459059,
    0.009928824380040169,
    -0.013698630034923553,
    0.00248935935087502,
    -0.021417075768113136,
    0.028670553117990494,
    0.02088772878050804,
    0.016996316611766815,
    -0.004739082418382168,
    -0.011302264407277107,
    -0.010880217887461185,
    -0.006058871746063232,
    -0.01437104307115078,
    -0.0019725312013179064,
    -0.009163417853415012,
    -0.013505490496754646,
    -0.014077756553888321,
    -0.032962553203105927,
    0.022275473922491074,
    -0.022046567872166634,
    -0.009370864368975163,
    -0.019485674798488617,
    -0.004041632171720266,
    -0.008562537841498852,
    0.03133159130811691,
    -0.01041525136679411,
    -0.011981830932199955,
    -0.005697628483176231,
    -0.009549697861075401,
    -0.024349940940737724,
    -0.015165063552558422,
    0.01366286352276802,
    0.01871311478316784,
    -0.0013448263052850962,
    0.018455594778060913,
    -0.01835544966161251,
    -0.0024643228389322758,
    0.020544368773698807,
    0.011574090458452702,
    0.0015889337519183755,
    -0.024807754904031754,
    -0.0022837012074887753,
    -0.005776315461844206,
    -0.005794198717921972,
    0.011194963939487934,
    -0.026982367038726807,
    0.010272184386849403,
    -0.03090239316225052,
    -0.028069673106074333,
    -0.033134233206510544,
    -0.003258342621847987,
    -0.005343538708984852,
    0.04023033753037453,
    -0.026367180049419403,
    -0.020344074815511703,
    0.014220823533833027,
    0.014199363067746162,
    0.030473193153738976,
    -0.009764297865331173,
    -0.030702099204063416,
    0.04452233761548996,
    -0.002410672837868333,
    0.0015030938666313887,
    -0.016538502648472786,
    0.013898923061788082,
    -0.01761150173842907,
    0.033134233206510544,
    -0.003469365881755948,
    0.022790513932704926,
    -0.020129475742578506,
    0.02452162094414234,
    0.013498337008059025,
    0.005769161973148584,
    0.0030723558738827705,
    -0.02805536612868309,
    -0.01706784963607788,
    -0.029958153143525124,
    0.02433563396334648,
    0.005908651743084192,
    0.02203226089477539,
    0.011552630923688412,
    0.02051575481891632,
    -0.033048391342163086,
    -0.011137736961245537,
    -0.010315104387700558,
    0.01345541700720787,
    0.036997031420469284,
    -0.0034926142543554306,
    0.017167996615171432,
    -0.002671769354492426,
    0.02111663483083248,
    0.005694052204489708,
    0.00894881784915924,
    0.011996136978268623,
    0.02392074093222618,
    0.008605457842350006,
    0.017053542658686638,
    0.010973210446536541,
    0.019113702699542046,
    -0.022289780899882317,
    -0.028727779164910316,
    0.011101970449090004,
    0.007210558280348778,
    0.0029114061035215855,
    0.0029364426154643297,
    0.012339496985077858,
    -0.010129117406904697,
    0.04226188361644745,
    -0.014320969581604004,
    0.01908508874475956,
    -0.01582317054271698,
    0.033592045307159424,
    0.014149289578199387,
    0.028942380100488663,
    -0.012332343496382236,
    0.025265567004680634,
    0.009406630881130695,
    0.004034479148685932,
    0.009141958318650723,
    -0.006277048494666815,
    0.013920383527874947,
    0.007561071775853634,
    -0.010121963918209076,
    -0.006437998265028,
    0.013498337008059025,
    0.010930290445685387,
    -0.012210736982524395,
    -0.0003288297157268971,
    0.04346364364027977,
    0.02897099405527115,
    -0.004395722411572933,
    0.004284845665097237,
    -0.022547300904989243,
    0.033964019268751144,
    0.03825601935386658,
    0.02143138088285923,
    -0.012783003970980644,
    -0.025508780032396317,
    -0.010100504383444786,
    -0.003526592394337058,
    -0.01274008397012949,
    -0.03671089932322502,
    -0.014778783544898033,
    0.00023829536803532392,
    -0.007081798277795315,
    0.00411674240604043,
    0.021860580891370773,
    0.004270539153367281,
    -0.0049858721904456615,
    0.01356987003237009,
    -0.010379483923316002,
    -0.023806286975741386,
    -0.007954505272209644,
    0.048871561884880066,
    -0.008862977847456932,
    0.010408097878098488,
    -0.018970634788274765,
    -0.04151793569326401,
    0.022504381835460663,
    -0.006194785237312317,
    -4.60216288047377e-05,
    -0.008719910867512226,
    0.02741156704723835,
    0.005490181967616081,
    0.02419256791472435,
    -0.02754032611846924,
    0.014041990041732788,
    0.013240817002952099,
    -0.034421831369400024,
    -0.025351407006382942,
    0.02226116880774498,
    -0.015408276580274105,
    0.01253263745456934,
    -0.02392074093222618,
    0.013605636544525623,
    0.03376372531056404,
    -0.005443685222417116,
    -0.022504381835460663,
    -0.03450767323374748,
    -0.03356343135237694,
    -0.011008977890014648,
    0.01398476306349039,
    0.011667083948850632,
    -0.00952108483761549,
    0.008862977847456932,
    0.00035520762321539223,
    -0.020158087834715843,
    -0.009885904379189014,
    0.01094459742307663,
    0.03559497743844986,
    0.015522729605436325,
    -0.01669587567448616,
    -0.030873779207468033,
    -0.014993383549153805,
    0.010615544393658638,
    0.028713474050164223,
    0.021975034847855568,
    -0.0016103937523439527,
    -0.00914911087602377,
    -0.015165063552558422,
    -0.030101219192147255,
    -0.02410672791302204,
    -0.0069566150195896626,
    0.004456525668501854,
    -0.030931005254387856,
    0.0011355914175510406,
    0.015021996572613716,
    0.00871275831013918,
    -0.012267963960766792,
    0.00044462428195402026,
    0.025651847943663597,
    5.940618575550616e-05,
    0.020029328763484955,
    0.011967523954808712,
    0.029557567089796066,
    0.015765942633152008,
    0.012382416985929012,
    -0.01354125700891018,
    0.035852499306201935,
    0.03665367141366005,
    -0.0049858721904456615,
    0.004950105678290129,
    0.02404950186610222,
    0.007439464796334505,
    -0.018884794786572456,
    -0.01638112962245941,
    0.009614077396690845,
    0.03113129921257496,
    0.021688900887966156,
    -0.05199041590094566,
    0.010937443934381008,
    0.026295647025108337,
    0.02562323398888111,
    -0.002181766089051962,
    -0.0006420115241780877,
    0.035480525344610214,
    -0.010014664381742477,
    0.0017650845693424344,
    -0.009385171346366405,
    0.019113702699542046,
    -0.021002180874347687,
    -0.0217032078653574,
    0.03264780715107918,
    -0.0005038628005422652,
    -0.005307772196829319,
    0.005897921975702047,
    -0.007961657829582691,
    -0.02271898090839386,
    -0.015336742624640465,
    0.007747058290988207,
    -0.00168460956774652,
    -0.01775456964969635,
    -0.03307700529694557,
    -0.0010265030432492495,
    -0.020344074815511703,
    -0.013162130489945412,
    -0.04326334968209267,
    5.166605478734709e-05,
    0.016409743577241898,
    0.00034626596607267857,
    -0.025537393987178802,
    -0.02276190184056759,
    -0.012840230017900467,
    -0.045380737632513046,
    -6.678306090179831e-05,
    0.007239171769469976,
    -0.06237705051898956,
    -0.02093064785003662,
    -0.004581708926707506,
    0.04912908002734184,
    0.011617010459303856,
    0.013498337008059025,
    -0.005236238706856966,
    0.02386351488530636,
    -0.016853248700499535,
    0.005851425230503082,
    -0.025866447016596794,
    -0.006226975005120039,
    -0.028227046132087708,
    0.0379984974861145,
    -0.005704781971871853,
    -0.018384061753749847,
    0.026982367038726807,
    -0.0009433455998077989,
    0.0452662818133831,
    0.017411209642887115,
    0.01605207659304142,
    0.020673127844929695,
    0.006949461530894041,
    -0.003381737507879734,
    0.0285560991615057,
    -0.0031528309918940067,
    -0.001850924571044743,
    0.015207983553409576,
    0.003061625873669982,
    0.008641224354505539,
    -0.03485103324055672,
    -0.02566615492105484,
    -0.0165098886936903,
    0.0011516864178702235,
    0.021445687860250473,
    -0.019099395722150803,
    -0.017268141731619835,
    -0.021030794829130173,
    0.005153975449502468,
    0.025265567004680634,
    -0.00995743740350008,
    -0.02708251401782036,
    0.013076290488243103,
    0.00533638522028923,
    -0.010129117406904697,
    -0.02865624614059925,
    0.030415967106819153,
    0.007789978291839361,
    0.008183411322534084,
    0.020301155745983124,
    -0.004030902404338121,
    0.017268141731619835,
    0.02198934182524681,
    -0.01573733054101467,
    0.03204692527651787,
    -0.014936156570911407,
    -0.019213849678635597,
    -0.022289780899882317,
    0.018112236633896828,
    -0.021188167855143547,
    0.006373618729412556,
    0.0007806073408573866,
    -0.043120283633470535,
    0.022876353934407234,
    0.005858578719198704,
    0.0005043098935857415,
    0.011402410455048084,
    -0.0103294113650918,
    -0.009192030876874924,
    -0.023477233946323395,
    -0.024307021871209145,
    -0.000271826604148373,
    -0.021445687860250473,
    -0.004141779150813818,
    -0.01646696962416172,
    -0.016581423580646515,
    -0.005511641968041658,
    0.009091884829103947,
    0.030015379190444946,
    0.0010667406022548676,
    0.004073822405189276,
    0.0010980364168062806,
    -0.007568224798887968,
    -0.008591150864958763,
    -0.026009513065218925,
    -0.006513108499348164,
    0.01216781698167324,
    0.025723380967974663,
    0.01825530268251896,
    0.019056474789977074,
    -0.019070781767368317,
    -0.006731285247951746,
    0.019285382702946663,
    -0.00522193219512701,
    -0.007006688509136438,
    0.0006809077458456159,
    0.008569691330194473,
    -0.01752566173672676,
    0.012525483965873718,
    0.013433956541121006,
    0.013670017011463642,
    -0.008634070865809917,
    -0.03347759321331978,
    -0.017725955694913864,
    0.008362244814634323,
    0.0048106154426932335,
    -0.014428270049393177,
    -0.0037125791423022747,
    -0.015494116581976414,
    -0.0009791122283786535,
    -0.0051146321929991245,
    0.001373439677990973,
    0.023391393944621086,
    -0.021588755771517754,
    0.0007502056541852653,
    0.030845165252685547,
    -0.02147430181503296,
    0.016710182651877403,
    0.005751278717070818,
    0.011745770461857319,
    0.012411030009388924,
    0.008147644810378551,
    -0.0017543545691296458,
    0.021216781809926033,
    0.008905897848308086,
    0.003054472617805004,
    -0.023791981860995293,
    -0.004942952189594507,
    -0.007882971316576004,
    -0.007325011771172285,
    0.015894703567028046,
    -0.0018115811981260777,
    0.013283737003803253,
    -0.022289780899882317,
    0.020129475742578506,
    0.018827568739652634,
    -0.0027504561003297567,
    0.037082869559526443,
    -0.025537393987178802,
    0.006663328502327204,
    -0.02649594098329544,
    -0.02290496788918972,
    -0.013691476546227932,
    0.013898923061788082,
    -0.013677170500159264,
    -0.005289888940751553,
    0.017282448709011078,
    -0.007446618285030127,
    0.009585464373230934,
    0.0045209056697785854,
    0.01294753048568964,
    0.04065953567624092,
    -0.007596838288009167,
    0.030559033155441284,
    0.023019421845674515,
    -0.004113165661692619,
    -6.935378769412637e-05,
    -0.009735684841871262,
    0.005053828936070204,
    -0.01968596875667572,
    0.021645981818437576,
    0.03273364529013634,
    -0.011187810450792313,
    0.010000357404351234,
    -0.019614435732364655,
    0.0024875709787011147,
    -0.016896169632673264,
    -0.007468078285455704,
    0.005096748936921358,
    0.03141743317246437,
    0.026195500046014786,
    -0.02392074093222618,
    -0.007056761533021927,
    -0.01748274266719818,
    0.020386995747685432,
    -0.020129475742578506,
    -0.005622518714517355,
    0.006695518270134926,
    -0.021545834839344025,
    -0.014192209579050541,
    0.03499409928917885,
    0.011044744402170181,
    0.00814049132168293,
    -0.0012589864199981093,
    0.0212883148342371,
    -0.0036231623962521553,
    -0.004359955433756113,
    -0.0015227654948830605,
    0.012239350937306881,
    0.014456883072853088,
    0.032962553203105927,
    -0.006201938726007938,
    -0.0024178260937333107,
    0.038971349596977234,
    -0.0012348438613116741,
    -0.007121141534298658,
    -0.00611609872430563,
    0.0034800958819687366,
    0.03899996355175972,
    0.020773274824023247,
    -0.012303730472922325,
    -0.015136449597775936,
    -0.001850924571044743,
    0.02529418095946312,
    -0.009199184365570545,
    -0.013047676533460617,
    0.00331199262291193,
    0.007049608509987593,
    -0.001562108751386404,
    0.0357094332575798,
    -0.01455703005194664,
    -0.025451553985476494,
    -0.021645981818437576,
    -0.0017856503836810589,
    0.0042383489198982716,
    -0.026052433997392654,
    0.005729818716645241,
    0.0043098824098706245,
    -0.012604170478880405,
    -0.04409313574433327,
    -0.011273650452494621,
    -0.03370649740099907,
    -0.005200472194701433,
    0.01073715090751648,
    -0.004542365670204163,
    -0.009921670891344547,
    0.04369255155324936,
    -0.02354876697063446,
    0.016982009634375572,
    -0.011874530464410782,
    0.0338495671749115,
    -0.050988949835300446,
    0.022747594863176346,
    -0.021874887868762016,
    -0.01395615004003048,
    0.03611001744866371,
    0.018240995705127716,
    -0.006244858726859093,
    -0.023706141859292984,
    0.004957258701324463,
    0.02691083401441574,
    0.021231088787317276,
    -0.012318037450313568,
    -0.007661218289285898,
    0.04000142961740494,
    -0.028570406138896942,
    -0.022432848811149597,
    -0.009170571342110634,
    -0.029643407091498375,
    -0.007282091770321131,
    0.007940198294818401,
    -0.006606101989746094,
    -0.009192030876874924,
    0.02217532880604267,
    -0.012296576984226704,
    0.0025412209797650576,
    0.009106190875172615,
    -0.009535390883684158,
    -0.005450838711112738,
    -0.01103759091347456,
    -0.0018312529427930713,
    0.005343538708984852,
    0.0024839944671839476,
    0.00417396891862154,
    -0.025451553985476494,
    -0.008169104345142841,
    0.017182301729917526,
    0.010615544393658638,
    -0.007325011771172285,
    -0.00390929589048028,
    0.010708537884056568,
    0.02134554088115692,
    -0.004653242416679859,
    -0.006552451755851507,
    -0.0188991017639637,
    -0.010057584382593632,
    -0.014263743534684181,
    -0.02915697917342186,
    -0.0017132229404523969,
    -0.03218999132514,
    0.035165779292583466,
    0.019256768748164177,
    -0.02093064785003662,
    -0.032075539231300354,
    -0.04260524362325668,
    -0.015408276580274105,
    -0.0041238958947360516,
    -0.02176043577492237,
    0.03181802108883858,
    0.013226510025560856,
    0.032819487154483795,
    0.008934510871767998,
    0.03393540531396866,
    -0.002596659353002906,
    0.016853248700499535,
    -0.02998676709830761,
    0.01638112962245941,
    -0.0006044565234333277,
    0.005955148488283157,
    -0.0012321614194661379,
    -0.010079043917357922,
    -0.04186129570007324,
    -0.014385350048542023,
    0.03407847136259079,
    0.01304052397608757,
    0.020229622721672058,
    0.021960727870464325,
    0.012561250478029251,
    -0.032447513192892075,
    -0.007217711769044399,
    -0.01954290270805359,
    0.005622518714517355,
    -0.02419256791472435,
    0.008991737850010395,
    -0.03859937936067581,
    0.01154547743499279,
    0.01154547743499279,
    -0.007747058290988207,
    -0.01927107572555542,
    -0.004184699151664972,
    0.016309596598148346,
    -0.009206337854266167,
    -0.0014190421206876636,
    -0.01613791659474373,
    -0.026925140991806984,
    0.003830609144642949,
    -0.019299689680337906,
    -0.00608390849083662,
    -0.005654708482325077,
    0.010172037407755852,
    0.00892735831439495,
    0.029142674058675766,
    0.0070281485095620155,
    -0.026982367038726807,
    -0.005118208937346935,
    -0.014607103541493416,
    0.028413033112883568,
    0.01788332872092724,
    -0.017554275691509247,
    0.01455703005194664,
    -0.0039021424017846584,
    0.029142674058675766,
    -0.018112236633896828,
    0.006727708503603935,
    -0.038055725395679474,
    -0.02259022183716297,
    -0.03150327131152153,
    0.011380950920283794,
    0.02400658093392849,
    -0.013584177009761333,
    0.0011740406043827534,
    0.004399299155920744,
    0.005136092193424702,
    0.010150577872991562,
    -0.028227046132087708,
    0.014921849593520164,
    -0.038427699357271194,
    -0.00045334239257499576,
    0.02442147396504879,
    0.0029024642426520586,
    -0.029958153143525124,
    -0.009056118316948414,
    0.02226116880774498,
    -0.025322794914245605,
    0.010501090437173843,
    0.17511355876922607,
    0.01154547743499279,
    0.026195500046014786,
    0.012582710012793541,
    0.0005382882081903517,
    0.012353803962469101,
    0.014664329588413239,
    0.026553167030215263,
    0.0032815909944474697,
    0.04558102786540985,
    0.00486426567658782,
    -0.02645302005112171,
    -0.014363889582455158,
    -0.003937908913940191,
    0.007532458286732435,
    -0.005840695463120937,
    -0.030873779207468033,
    -0.012110590934753418,
    -0.009814371354877949,
    -0.009413784369826317,
    0.019757501780986786,
    -0.016023462638258934,
    -0.012017597444355488,
    -0.03204692527651787,
    0.01844128966331482,
    -0.012289423495531082,
    0.010873064398765564,
    -0.020630208775401115,
    0.0022479344625025988,
    0.03293393924832344,
    -0.01628098264336586,
    0.015079223550856113,
    -0.007596838288009167,
    -0.005264852195978165,
    -0.029786473140120506,
    0.0032064809929579496,
    0.009213491342961788,
    -0.0008445401908829808,
    -0.0007993848412297666,
    -0.003605279140174389,
    -0.019313994795084,
    -0.028341500088572502,
    0.029328659176826477,
    -0.0176544226706028,
    -0.009442397393286228,
    -0.03178940713405609,
    -0.021874887868762016,
    -0.003149254247546196,
    0.012182123959064484,
    0.022690368816256523,
    -0.03719732537865639,
    -0.016295289620757103,
    0.019113702699542046,
    0.010594083927571774,
    0.004739082418382168,
    -0.015994848683476448,
    -0.018684502691030502,
    0.0055581387132406235,
    0.04603884369134903,
    -0.020258234813809395,
    -0.0049393754452466965,
    0.043120283633470535,
    -0.025551700964570045,
    0.014642870053648949,
    -0.009621230885386467,
    0.024249793961644173,
    -0.0030348009895533323,
    0.013026216998696327,
    0.01075861044228077,
    -0.01738259568810463,
    -0.01752566173672676,
    -0.020029328763484955,
    -0.04157516360282898,
    -0.009943131357431412,
    -0.02649594098329544,
    -0.01196037046611309,
    0.024450087919831276,
    0.007553918287158012,
    0.041689615696668625,
    0.01784040965139866,
    -0.004245502408593893,
    0.012296576984226704,
    -0.014227977022528648,
    0.04552380368113518,
    -0.01632390357553959,
    -0.005822812207043171,
    0.0357094332575798,
    -0.03814156353473663,
    -0.009735684841871262,
    -0.027712006121873856,
    0.005955148488283157,
    -0.023377086967229843,
    0.0035337458830326796,
    0.012303730472922325,
    -0.005364998709410429,
    0.03625308349728584,
    -0.008698451332747936,
    0.00512893870472908,
    0.0054866052232682705,
    0.013162130489945412,
    -0.03522300347685814,
    0.0812046229839325,
    0.007024571765214205,
    -0.0027647626120597124,
    -0.020987875759601593,
    -0.010894523933529854,
    0.0307307131588459,
    0.0005324761150404811,
    -0.014077756553888321,
    0.01133803091943264,
    0.0009165205992758274,
    -0.007339318282902241,
    -0.0221181008964777,
    -0.0027504561003297567,
    0.0028953109867870808,
    -0.0011123430449515581,
    0.01156693696975708,
    -0.025823527947068214,
    0.007954505272209644,
    0.0030848742462694645,
    4.157873991061933e-05,
    0.009478164836764336,
    -0.01742551662027836,
    -0.0013144246768206358,
    -0.02018670178949833,
    -0.01092313788831234,
    -0.002800529357045889,
    -0.014721556566655636,
    0.0010658464161679149,
    -0.014907543547451496,
    0.03196108713746071,
    -0.018612969666719437,
    0.04000142961740494,
    0.023849207907915115,
    -0.007103258278220892,
    -0.01135949045419693,
    -0.00901319831609726,
    -0.03293393924832344,
    0.009885904379189014,
    0.003099180990830064,
    -0.003687542397528887,
    0.0007806073408573866,
    -0.014456883072853088,
    0.019142314791679382,
    0.02620980702340603,
    0.013813083060085773,
    0.00791158527135849,
    -0.005772738717496395,
    -0.019743194803595543,
    -0.011345184408128262,
    -0.027626166120171547,
    0.01393469050526619,
    0.008204871788620949,
    -0.02585214003920555,
    -0.003285167505964637,
    -0.031388819217681885,
    -0.014793089590966702,
    -0.011352336965501308,
    0.0421474315226078,
    0.00426696240901947,
    -0.04103150963783264,
    0.00030289890128187835,
    0.0034461175091564655,
    0.025122500956058502,
    -0.02369183488190174,
    -0.027926607057452202,
    -0.18083623051643372,
    0.02257591485977173,
    -0.002784434240311384,
    -0.02612396702170372,
    0.017167996615171432,
    0.027855074033141136,
    0.026610393077135086,
    -0.00653099175542593,
    0.01336242351680994,
    -0.017096463590860367,
    0.003959368914365768,
    -0.0021674595773220062,
    -0.0025877177249640226,
    -0.0240924209356308,
    -0.014678636565804482,
    0.008591150864958763,
    -0.004027325659990311,
    0.022046567872166634,
    0.025422940030694008,
    -0.0032815909944474697,
    0.04998748004436493,
    -0.03058764711022377,
    0.015036303550004959,
    0.023462926968932152,
    0.0056332484818995,
    -0.016338208690285683,
    -0.021631674841046333,
    -0.003000822616741061,
    -0.03316284716129303,
    -0.030015379190444946,
    -0.008662684820592403,
    -0.007718444801867008,
    0.018140848726034164,
    0.010279337875545025,
    0.008970278315246105,
    -0.016037769615650177,
    0.011609856970608234,
    0.02487928792834282,
    -0.014707249589264393,
    0.018455594778060913,
    0.037054259330034256,
    0.00022387692297343165,
    0.03293393924832344,
    -0.004989448934793472,
    -0.01619514264166355,
    -0.02359168790280819,
    0.005844271741807461,
    -0.01917092874646187,
    0.03081655316054821,
    0.010293643921613693,
    0.01738259568810463,
    -0.003435387508943677,
    0.004967988934367895,
    0.0022336277179419994,
    0.011352336965501308,
    0.014235129579901695,
    0.01908508874475956,
    0.029414499178528786,
    0.00793304480612278,
    0.013433956541121006,
    -0.007968811318278313,
    -0.023763367906212807,
    -0.0042633856646716595,
    0.023648913949728012,
    -0.005432955455034971,
    0.011237883940339088,
    0.01798347570002079,
    0.012303730472922325,
    0.005318501964211464,
    0.045323509722948074,
    0.007668371312320232,
    0.024221181869506836,
    0.015236596576869488,
    0.0019868379458785057,
    0.0357094332575798,
    0.009349404834210873,
    0.007339318282902241,
    0.017582889646291733,
    0.0003737615770660341,
    0.00608390849083662,
    0.0010989306028932333,
    0.013670017011463642,
    -0.015207983553409576,
    0.00596587872132659,
    0.01825530268251896,
    -0.02124539576470852,
    0.018283916637301445,
    -0.014385350048542023,
    0.00039320968789979815,
    -0.0022604528348892927,
    0.01895632967352867,
    -0.024221181869506836,
    0.0052541219629347324,
    -0.018412675708532333,
    -0.00045446009607985616,
    0.0047998856753110886,
    0.013276583515107632,
    -0.017167996615171432,
    0.02579491399228573,
    -0.030873779207468033,
    0.0006514002452604473,
    0.008047497831285,
    -0.01213920395821333,
    -0.00042048178147524595,
    0.026009513065218925,
    -0.00011082075798185542,
    -0.034479059278964996,
    -0.0044136056676507,
    0.019056474789977074,
    -0.014041990041732788,
    -0.00323688262142241,
    0.01991487480700016,
    0.0402875654399395,
    0.03276225924491882,
    -0.021088020876049995,
    0.008655531331896782,
    -0.0037161558866500854,
    -0.02078758180141449,
    -0.008126184344291687,
    -0.009556851349771023,
    0.045409347862005234,
    -0.0017865445697680116,
    -0.0010077256010845304,
    -0.004456525668501854,
    3.012223169207573e-05,
    -0.03739761933684349,
    -0.1113058403134346,
    -0.030759325250983238,
    0.0180693157017231,
    0.008634070865809917,
    -0.015537036582827568,
    0.009070424363017082,
    0.0027790693566203117,
    0.013605636544525623,
    -0.012690010480582714,
    0.002501877723261714,
    -0.0007037090254016221,
    0.004642512183636427,
    -0.038284629583358765,
    0.0021191744599491358,
    -0.03788404539227486,
    0.013219356536865234,
    0.0011990772327408195,
    0.006355735007673502,
    0.006534568499773741,
    0.026782073080539703,
    0.007389391772449017,
    -0.005715512204915285,
    0.007754211314022541,
    0.015007689595222473,
    -0.019113702699542046,
    -0.003730462398380041,
    -0.03728316351771355,
    0.007789978291839361,
    0.02897099405527115,
    0.011502557434141636,
    -0.007117564789950848,
    -0.032218605279922485,
    0.011445330455899239,
    0.005676168482750654,
    0.014285203069448471,
    0.012546943500638008,
    -0.016066383570432663,
    -7.05203956385958e-06,
    0.04157516360282898,
    -0.017439821735024452,
    0.001778497127816081,
    -0.031531885266304016,
    -0.0027111126109957695,
    -0.04120318964123726,
    -0.006205515004694462,
    0.018055008724331856,
    -0.00855538435280323,
    0.011380950920283794,
    0.013033370487391949,
    -0.014635716564953327,
    -0.01821238175034523,
    -0.007718444801867008,
    -0.013283737003803253,
    -0.004460102412849665,
    0.017125075682997704,
    -0.0040630921721458435,
    -0.0104367109015584,
    0.019013555720448494,
    -0.00012842465366702527,
    -0.024035194888710976,
    0.005422225221991539,
    0.0014020530506968498,
    0.0017543545691296458,
    0.008376551792025566,
    -0.008269251324236393,
    0.02967201918363571,
    -0.009099038317799568,
    -0.013941843062639236,
    -0.00024209557159338146,
    -0.03908580541610718,
    -0.03702564537525177,
    -0.00933509785681963,
    -0.01839836873114109,
    0.015765942633152008,
    -0.030931005254387856,
    -0.010472477413713932,
    0.018384061753749847,
    -0.019657354801893234,
    -0.012804463505744934,
    -0.027068207040429115,
    -0.0070853750221431255,
    -0.007178368512541056,
    0.013183590024709702,
    -0.01968596875667572,
    -0.030931005254387856,
    0.02176043577492237,
    0.036997031420469284,
    -0.02759755402803421,
    0.00356414751149714,
    -0.0011525806039571762,
    0.03273364529013634,
    -0.004774848930537701,
    0.024035194888710976,
    0.014707249589264393,
    -0.005021638702601194,
    -0.026553167030215263,
    4.166256985627115e-05,
    0.01733967661857605,
    -0.01688186265528202,
    0.01377731654793024,
    -0.0388282835483551,
    -0.0029275009874254465,
    -0.0660395547747612,
    0.013712937012314796,
    0.007596838288009167,
    -0.031846631318330765,
    0.010794377885758877,
    -0.03462212532758713,
    0.003154619364067912,
    -0.016867555677890778,
    0.008433777838945389,
    -0.011388104408979416,
    -0.04363532364368439,
    0.006201938726007938,
    0.0039021424017846584,
    0.0071676382794976234,
    0.00026735576102510095,
    -0.009721377864480019,
    0.014263743534684181,
    -0.038627989590168,
    0.061232518404722214,
    -0.005121785681694746,
    -0.007425158284604549,
    0.015050609596073627,
    0.0442362017929554,
    0.021731821820139885,
    -0.012031903490424156,
    0.00046988448593765497,
    -0.01683894358575344,
    0.021459994837641716,
    0.0015254479367285967,
    -0.02888515405356884,
    0.01798347570002079,
    -0.006631138268858194,
    -0.005075288936495781,
    0.011116277426481247,
    0.026338567957282066,
    0.006427268497645855,
    0.01016488391906023,
    0.013047676533460617,
    0.0075181517750024796,
    0.029872313141822815,
    -0.020501447841525078,
    -0.028684860095381737,
    0.006459458265453577,
    -0.019013555720448494,
    0.005944418720901012,
    -0.01586608961224556,
    -0.024893594905734062,
    0.02824135310947895,
    0.021402768790721893,
    0.0038771056570112705,
    0.030043993145227432,
    0.0030848742462694645,
    -0.020301155745983124,
    -0.015551342628896236,
    -0.0014941521221771836,
    -0.011588397435843945,
    0.03307700529694557,
    0.010021817870438099,
    -0.02115955576300621,
    -0.008562537841498852,
    0.018455594778060913,
    0.007904431782662868,
    0.016724489629268646,
    0.006970921531319618,
    0.013197897002100945,
    -0.022647447884082794,
    -0.049930255860090256,
    -0.02593798004090786,
    -0.029414499178528786,
    -0.013226510025560856,
    -0.022704673931002617,
    -0.012081976979970932,
    0.017625808715820312,
    0.021774740889668465,
    0.01688186265528202,
    -0.0008879072847776115,
    -0.02331986092031002,
    -0.006495225243270397,
    -0.0037376158870756626,
    0.01816946268081665,
    0.038198791444301605,
    -0.023019421845674515,
    -0.0119389109313488,
    0.014628563076257706,
    0.01719660870730877,
    -0.014270897023379803,
    0.015236596576869488,
    -0.010150577872991562,
    -0.007904431782662868,
    0.013798777014017105,
    0.008848670870065689,
    -0.00450659915804863,
    -0.018112236633896828,
    -0.0022336277179419994,
    -0.006069601979106665,
    0.01596623659133911,
    0.03682535141706467,
    -0.013355270028114319,
    0.012489717453718185,
    0.012904610484838486,
    -0.0030652026180177927,
    -0.015937622636556625,
    -0.017869021743535995,
    -0.02105940878391266,
    -0.017167996615171432,
    -0.0008557172841392457,
    -0.002208591205999255,
    -0.030530419200658798,
    -0.003224364249035716,
    0.04223326966166496,
    -0.001643477939069271,
    -0.014678636565804482,
    0.007482384797185659,
    0.01766872964799404,
    0.001053328043781221,
    -0.0001264127786271274,
    0.0068278550170362,
    0.009764297865331173,
    -0.01779748871922493,
    0.011237883940339088,
    0.01559426262974739,
    -0.004199005663394928,
    0.041088737547397614,
    -0.006720555014908314,
    -0.016581423580646515,
    0.01387031003832817,
    0.021746128797531128,
    -0.011316570453345776,
    0.0006487177452072501,
    -0.01885618269443512,
    0.002863120986148715,
    -0.023791981860995293,
    -0.031846631318330765,
    -0.03178940713405609,
    -0.013276583515107632,
    -0.00876283086836338,
    0.0077041382901370525,
    -0.032533351331949234,
    -0.031245753169059753,
    0.09963160008192062,
    -0.003431810764595866,
    -0.023019421845674515,
    -0.028584713116288185,
    0.010079043917357922,
    0.03648199141025543,
    0.007875817827880383,
    -0.014907543547451496,
    0.0016953395679593086,
    -0.015293823555111885,
    0.002435709349811077,
    -0.01243964396417141,
    -0.015708716586232185,
    -0.037369005382061005,
    -0.02603812702000141,
    0.00025461390032432973,
    -0.004184699151664972,
    0.01646696962416172,
    -0.006058871746063232,
    -0.0063521587289869785,
    0.023834900930523872,
    0.006463035009801388,
    0.023791981860995293,
    0.006370041985064745,
    -0.042662471532821655,
    -0.0056296722032129765,
    -0.003120640991255641,
    0.008018884807825089,
    -0.0025161844678223133,
    -0.0442362017929554,
    0.008569691330194473,
    -0.009585464373230934,
    -0.01696770265698433,
    -0.02130262181162834,
    -0.017282448709011078,
    0.01184591744095087,
    0.017697341740131378,
    0.0051718587055802345,
    0.035537753254175186,
    0.014778783544898033,
    -0.010722843930125237,
    0.005608212202787399,
    -0.035852499306201935,
    -0.04890017583966255,
    0.04332057759165764,
    0.0038484924007207155,
    0.005483028944581747,
    0.010064737871289253,
    -0.01733967661857605
  ]
}
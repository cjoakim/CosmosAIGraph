{
  "classifiers": [],
  "description": "a lightweight console printing and formatting toolkit\n# wasabi: a lightweight console printing and formatting toolkit\n\nover the years, i've written countless implementations of coloring and\nformatting utilities to output messages in our libraries like\n[spacy](https://spacy.io), [thinc](https://github.com/explosion/thinc) and\n[prodigy](https://prodi.gy). while there are many other great open-source\noptions, i've always ended up wanting something slightly different or slightly\ncustom.\n\nthis package is still a work in progress and aims to bundle those utilities in a\nstandardised way so they can be shared across our other projects. it's super\nlightweight, has zero dependencies and works with python 3.6+.\n\n[![tests](https://github.com/explosion/wasabi/actions/workflows/tests.yml/badge.svg)](https://github.com/explosion/wasabi/actions/workflows/tests.yml)\n[![pypi](https://img.shields.io/pypi/v/wasabi.svg?style=flat-square&logo=pypi&logocolor=white)](https://pypi.python.org/pypi/wasabi)\n[![conda](https://img.shields.io/conda/vn/conda-forge/wasabi.svg?style=flat-square&logo=conda-forge/logocolor=white)](https://anaconda.org/conda-forge/wasabi)\n[![github](https://img.shields.io/github/release/ines/wasabi/all.svg?style=flat-square&logo=github)](https://github.com/ines/wasabi)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/ambv/black)\n\n<img width=\"609\" src=\"https://user-images.githubusercontent.com/13643239/48663861-8c9ea000-ea96-11e8-8b04-d120c52276a8.png\">\n\n## \ud83d\udcac faq\n\n### are you going to add more features?\n\nyes, there's still a few of helpers and features to port over. however, the new\nfeatures will be heavily biased by what we (think we) need. i always appreciate\npull requests to improve the existing functionality \u2013 but i want to keep this\nlibrary as simple, lightweight and specific as possible.\n\n### can i use this for my projects?\n\nsure, if you like it, feel free to adopt it! just keep in mind that the package\nis very specific and not intended to be a full-featured and fully customisable\nformatting library. if that's what you're looking for, you might want to try\nother packages \u2013 for example, [`colored`](https://pypi.org/project/colored/),\n[`crayons`](https://github.com/kennethreitz/crayons),\n[`colorful`](https://github.com/timofurrer/colorful),\n[`tabulate`](https://bitbucket.org/astanin/python-tabulate),\n[`console`](https://github.com/mixmastamyk/console) or\n[`py-term`](https://github.com/gravmatt/py-term), to name a few.\n\n### why `wasabi`?\n\ni was looking for a short and descriptive name, but everything was already\ntaken. so i ended up naming this package after one of my rats, wasabi. \ud83d\udc00\n\n## \u231b\ufe0f installation\n\n```bash\npip install wasabi\n```\n\n## \ud83c\udf9b api\n\n### <kbd>function</kbd> `msg`\n\nan instance of `printer`, initialized with the default config. useful as a quick\nshortcut if you don't need to customize initialization.\n\n```python\nfrom wasabi import msg\n\nmsg.good(\"success!\")\n```\n\n### <kbd>class</kbd> `printer`\n\n#### <kbd>method</kbd> `printer.__init__`\n\n```python\nfrom wasabi import printer\n\nmsg = printer()\n```\n\n| argument          | type      | description                                                   | default       |\n| ----------------- | --------- | ------------------------------------------------------------- | ------------- |\n| `pretty`          | bool      | pretty-print output with colors and icons.                    | `true`        |\n| `no_print`        | bool      | don't actually print, just return.                            | `false`       |\n| `colors`          | dict      | add or overwrite color values, names mapped to `0`-`256`.     | `none`        |\n| `icons`           | dict      | add or overwrite icon. name mapped to unicode.                | `none`        |\n| `line_max`        | int       | maximum line length (for divider).                            | `80`          |\n| `animation`       | str       | steps of loading animation for `printer.loading`.             | `\"\u2819\u2839\u2838\u283c\u2834\u2826\u2827\u2807\u280f\"` |\n| `animation_ascii` | str       | alternative animation for ascii terminals.                    | `\"\\|/-\\\\\"`    |\n| `hide_animation`  | bool      | don't display animation, e.g. for logs.                       | `false`       |\n| `ignore_warnings` | bool      | don't output messages of type `message.warn`.                 | `false`       |\n| `env_prefix`      | str       | prefix for environment variables, e.g. `wasabi_log_friendly`. | `\"wasabi\"`    |\n| `timestamp`       | bool      | add timestamp before output.                                  | `false`       |\n| **returns**       | `printer` | the initialized printer.                                      | -             |\n\n#### <kbd>method</kbd> `printer.text`\n\n```python\nmsg = printer()\nmsg.text(\"hello world!\")\n```\n\n| argument   | type           | description                                                                                                            | default |\n| ---------- | -------------- | ---------------------------------------------------------------------------------------------------------------------- | ------- |\n| `title`    | str            | the main text to print.                                                                                                | `\"\"`    |\n| `text`     | str            | optional additional text to print.                                                                                     | `\"\"`    |\n| `color`    | \u00a0unicode / int | color name or value.                                                                                                   | `none`  |\n| `icon`     | str            | name of icon to add.                                                                                                   | `none`  |\n| `show`     | bool           | whether to print or not. can be used to only output messages under certain condition, e.g. if `--verbose` flag is set. | `true`  |\n| `spaced`   | bool           | whether to add newlines around the output.                                                                             | `false` |\n| `no_print` | bool           | don't actually print, just return. overwrites global setting.                                                          | `false` |\n| `exits`    | int            | if set, perform a system exit with the given code after printing.                                                      | `none`  |\n\n#### <kbd>method</kbd> `printer.good`, `printer.fail`, `printer.warn`, `printer.info`\n\nprint special formatted messages.\n\n```python\nmsg = printer()\nmsg.good(\"success\")\nmsg.fail(\"error\")\nmsg.warn(\"warning\")\nmsg.info(\"info\")\n```\n\n| argument | type | description                                                                                                            | default |\n| -------- | ---- | ---------------------------------------------------------------------------------------------------------------------- | ------- |\n| `title`  | str  | the main text to print.                                                                                                | `\"\"`    |\n| `text`   | str  | optional additional text to print.                                                                                     | `\"\"`    |\n| `show`   | bool | whether to print or not. can be used to only output messages under certain condition, e.g. if `--verbose` flag is set. | `true`  |\n| `exits`  | int  | if set, perform a system exit with the given code after printing.                                                      | `none`  |\n\n#### <kbd>method</kbd> `printer.divider`\n\nprint a formatted divider.\n\n```python\nmsg = printer()\nmsg.divider(\"heading\")\n```\n\n| argument | type | description                                                                                                            | default |\n| -------- | ---- | ---------------------------------------------------------------------------------------------------------------------- | ------- |\n| `text`   | str  | headline text. if empty, only the line is printed.                                                                     | `\"\"`    |\n| `char`   | str  | single line character to repeat.                                                                                       | `\"=\"`   |\n| `show`   | bool | whether to print or not. can be used to only output messages under certain condition, e.g. if `--verbose` flag is set. | `true`  |\n| `icon`   | str  | optional icon to use with title.                                                                                       | `none`  |\n\n#### <kbd>contextmanager</kbd> `printer.loading`\n\n```python\nmsg = printer()\nwith msg.loading(\"loading...\"):\n    # do something here that takes longer\n    time.sleep(10)\nmsg.good(\"successfully loaded something!\")\n```\n\n| argument | type | description                        | default        |\n| -------- | ---- | ---------------------------------- | -------------- |\n| `text`   | str  | the text to display while loading. | `\"loading...\"` |\n\n#### <kbd>method</kbd> `printer.table`, `printer.row`\n\nsee [tables](#tables).\n\n#### <kbd>property</kbd> `printer.counts`\n\nget the counts of how often the special printers were fired, e.g.\n`messages.good`. can be used to print an overview like \"x warnings\"\n\n```python\nmsg = printer()\nmsg.good(\"success\")\nmsg.fail(\"error\")\nmsg.warn(\"error\")\n\nprint(msg.counts)\n# counter({'good': 1, 'fail': 2, 'warn': 0, 'info': 0})\n```\n\n| argument    | type      | description                                          |\n| ----------- | --------- | ---------------------------------------------------- |\n| **returns** | `counter` | the counts for the individual special message types. |\n\n### tables\n\n#### <kbd>function</kbd> `table`\n\nlightweight helper to format tabular data.\n\n```python\nfrom wasabi import table\n\ndata = [(\"a1\", \"a2\", \"a3\"), (\"b1\", \"b2\", \"b3\")]\nheader = (\"column 1\", \"column 2\", \"column 3\")\nwidths = (8, 9, 10)\naligns = (\"r\", \"c\", \"l\")\nformatted = table(data, header=header, divider=true, widths=widths, aligns=aligns)\n```\n\n```\ncolumn 1   column 2    column 3\n--------   ---------   ----------\n      a1      a2       a3\n      b1      b2       b3\n```\n\n| argument       | type                | description                                                                                                                         | default    |\n| -------------- | ------------------- | ----------------------------------------------------------------------------------------------------------------------------------- | ---------- |\n| `data`         | iterable / dict     | the data to render. either a list of lists (one per row) or a dict for two-column tables.                                           |            |\n| `header`       | iterable            | optional header columns.                                                                                                            | `none`     |\n| `footer`       | iterable            | optional footer columns.                                                                                                            | `none`     |\n| `divider`      | bool                | show a divider line between header/footer and body.                                                                                 | `false`    |\n| `widths`       | iterable / `\"auto\"` | column widths in order. if `\"auto\"`, widths will be calculated automatically based on the largest value.                            | `\"auto\"`   |\n| `max_col`      | int                 | maximum column width.                                                                                                               | `30`       |\n| `spacing`      | int                 | number of spaces between columns.                                                                                                   | `3`        |\n| `aligns`       | iterable / unicode  | columns alignments in order. `\"l\"` (left, default), `\"r\"` (right) or `\"c\"` (center). if if a string, value is used for all columns. | `none`     |\n| `multiline`    | bool                | if a cell value is a list of a tuple, render it on multiple lines, with one value per line.                                         | `false`    |\n| `env_prefix`   | unicode             | prefix for environment variables, e.g. wasabi_log_friendly.                                                                         | `\"wasabi\"` |\n| `color_values` | dict                | add or overwrite color values, name mapped to value.                                                                                | `none`     |\n| `fg_colors`    | iterable            | foreground colors, one per column. none can be specified for individual columns to retain the default background color.             | `none`     |\n| `bg_colors`    | iterable            | background colors, one per column. none can be specified for individual columns to retain the default background color.             | `none`     |\n| **returns**    | str                 | the formatted table.                                                                                                                |            |\n\n#### <kbd>function</kbd> `row`\n\n```python\nfrom wasabi import row\n\ndata = (\"a1\", \"a2\", \"a3\")\nformatted = row(data)\n```\n\n```\na1   a2   a3\n```\n\n| argument     | type                  | description                                                                                                                                                | default    |\n| ------------ | --------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------- |\n| `data`       | iterable              | the individual columns to format.                                                                                                                          |            |\n| `widths`     | list / int / `\"auto\"` | column widths, either one integer for all columns or an iterable of values. if \"auto\", widths will be calculated automatically based on the largest value. | `\"auto\"`   |\n| `spacing`    | int                   | number of spaces between columns.                                                                                                                          | `3`        |\n| `aligns`     | list                  | columns alignments in order. `\"l\"` (left), `\"r\"` (right) or `\"c\"` (center).                                                                                | `none`     |\n| `env_prefix` | unicode               | prefix for environment variables, e.g. wasabi_log_friendly.                                                                                                | `\"wasabi\"` |\n| `fg_colors`  | list                  | foreground colors for the columns, in order. none can be specified for individual columns to retain the default foreground color.                          | `none`     |\n| `bg_colors`  | list                  | background colors for the columns, in order. none can be specified for individual columns to retain the default background color.                          | `none`     |\n| **returns**  | str                   | the formatted row.                                                                                                                                         |            |\n\n### <kbd>class</kbd> `tracebackprinter`\n\nhelper to output custom formatted tracebacks and error messages. currently used\nin [thinc](https://github.com/explosion/thinc).\n\n#### <kbd>method</kbd> `tracebackprinter.__init__`\n\ninitialize a traceback printer.\n\n```python\nfrom wasabi import tracebackprinter\n\ntb = tracebackprinter(tb_base=\"thinc\", tb_exclude=(\"check.py\",))\n```\n\n| argument          | type               | description                                                                                                                                                              | default    |\n| ----------------- | ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------- |\n| `color_error`     | str / int          | color name or code for errors (passed to `color` helper).                                                                                                                | `\"red\"`    |\n| `color_tb`        | str / int          | color name or code for traceback headline (passed to `color` helper).                                                                                                    | `\"blue\"`   |\n| `color_highlight` | str / int          | color name or code for highlighted text (passed to `color` helper).                                                                                                      | `\"yellow\"` |\n| `indent`          | int                | number of spaces to use for indentation.                                                                                                                                 | `2`        |\n| `tb_base`         | str                | name of directory to use to show relative paths. for example, `\"thinc\"` will look for the last occurence of `\"/thinc/\"` in a path and only show path to the right of it. | `none`     |\n| `tb_exclude`      | tuple              | list of filenames to exclude from traceback.                                                                                                                             | `tuple()`  |\n| **returns**       | `tracebackprinter` | the traceback printer.                                                                                                                                                   |            |\n\n#### <kbd>method</kbd> `tracebackprinter.__call__`\n\noutput custom formatted tracebacks and errors.\n\n```python\nfrom wasabi import tracebackprinter\nimport traceback\n\ntb = tracebackprinter(tb_base=\"thinc\", tb_exclude=(\"check.py\",))\n\nerror = tb(\"some error\", \"error description\", highlight=\"kwargs\", tb=traceback.extract_stack())\nraise valueerror(error)\n```\n\n```\n  some error\n  some error description\n\n  traceback:\n  \u251c\u2500 <lambda> [61] in .env/lib/python3.6/site-packages/pluggy/manager.py\n  \u251c\u2500\u2500\u2500 _multicall [187] in .env/lib/python3.6/site-packages/pluggy/callers.py\n  \u2514\u2500\u2500\u2500\u2500\u2500 pytest_fixture_setup [969] in .env/lib/python3.6/site-packages/_pytest/fixtures.py\n         >>> result = call_fixture_func(fixturefunc, request, kwargs)\n```\n\n| argument    | type     | description                                                                                | default |\n| ----------- | -------- | ------------------------------------------------------------------------------------------ | ------- |\n| `title`     | str      | the message title.                                                                         |         |\n| `*texts`    | str      | optional texts to print (one per line).                                                    |         |\n| `highlight` | str      | optional sequence to highlight in the traceback, e.g. the bad value that caused the error. | `false` |\n| `tb`        | iterable | the traceback, e.g. generated by `traceback.extract_stack()`.                              | `none`  |\n| **returns** | str      | the formatted traceback. can be printed or raised by custom exception.                     |         |\n\n### <kbd>class</kbd> `markdownrenderer`\n\nhelper to create markdown-formatted content. will store the blocks added to the\nmarkdown document in order.\n\n```python\nfrom wasabi import markdownrenderer\n\nmd = markdownrenderer()\nmd.add(md.title(1, \"hello world\"))\nmd.add(\"this is a paragraph\")\nprint(md.text)\n```\n\n### <kbd>method</kbd> `markdownrenderer.__init__`\n\ninitialize a markdown renderer.\n\n```python\nfrom wasabi import markdownrenderer\n\nmd = markdownrenderer()\n```\n\n| argument    | type               | description                    | default |\n| ----------- | ------------------ | ------------------------------ | ------- |\n| `no_emoji`  | bool               | don't include emoji in titles. | `false` |\n| **returns** | `markdownrenderer` | the renderer.                  |\n\n### <kbd>method</kbd> `markdownrenderer.add`\n\nadd a block to the markdown document.\n\n```python\nfrom wasabi import markdownrenderer\n\nmd = markdownrenderer()\nmd.add(\"this is a paragraph\")\n```\n\n| argument | type | description         | default |\n| -------- | ---- | ------------------- | ------- |\n| `text`   | str  | the content to add. |         |\n\n### <kbd>property</kbd> `markdownrenderer.text`\n\nthe rendered markdown document.\n\n```python\nmd = markdownrenderer()\nmd.add(\"this is a paragraph\")\nprint(md.text)\n```\n\n| argument    | type | description                      | default |\n| ----------- | ---- | -------------------------------- | ------- |\n| **returns** | str  | the document as a single string. |         |\n\n### <kbd>method</kbd> `markdownrenderer.table`\n\ncreate a markdown-formatted table.\n\n```python\nmd = markdownrenderer()\ntable = md.table([(\"a\", \"b\"), (\"c\", \"d\")], [\"column 1\", \"column 2\"])\nmd.add(table)\n```\n\n<!-- prettier-ignore -->\n```markdown\n| column 1 | column 2 |\n| --- | --- |\n| a | b |\n| c | d |\n```\n\n| argument    | type                    | description                                                                          | default |\n| ----------- | ----------------------- | ------------------------------------------------------------------------------------ | ------- |\n| `data`      | iterable[iterable[str]] | the body, one iterable per row, containig an interable of column contents.           |         |\n| `header`    | iterable[str]           | the column names.                                                                    |         |\n| `aligns`    | iterable[str]           | columns alignments in order. `\"l\"` (left, default), `\"r\"` (right) or `\"c\"` (center). | `none`  |\n| **returns** | str                     | the table.                                                                           |         |\n\n### <kbd>method</kbd> `markdownrenderer.title`\n\ncreate a markdown-formatted heading.\n\n```python\nmd = markdownrenderer()\nmd.add(md.title(1, \"hello world\"))\nmd.add(md.title(2, \"subheading\", \"\ud83d\udc96\"))\n```\n\n```markdown\n# hello world\n\n## \ud83d\udc96 subheading\n```\n\n| argument    | type | description                            | default |\n| ----------- | ---- | -------------------------------------- | ------- |\n| `level`     | int  | the heading level, e.g. `3` for `###`. |         |\n| `text`      | str  | the heading text.                      |         |\n| `emoji`     | str  | optional emoji to show before heading. | `none`  |\n| **returns** | str  | the rendered title.                    |         |\n\n### <kbd>method</kbd> `markdownrenderer.list`\n\ncreate a markdown-formatted non-nested list.\n\n```python\nmd = markdownrenderer()\nmd.add(md.list([\"item\", \"other item\"]))\nmd.add(md.list([\"first item\", \"second item\"], numbered=true))\n```\n\n```markdown\n- item\n- other item\n\n1. first item\n2. second item\n```\n\n| argument    | type          | description                     | default |\n| ----------- | ------------- | ------------------------------- | ------- |\n| `items`     | iterable[str] | the list items.                 |         |\n| `numbered`  | bool          | whether to use a numbered list. | `false` |\n| **returns** | str           | the rendered list.              |         |\n\n### <kbd>method</kbd> `markdownrenderer.link`\n\ncreate a markdown-formatted link.\n\n```python\nmd = markdownrenderer()\nmd.add(md.link(\"google\", \"https://google.com\"))\n```\n\n```markdown\n[google](https://google.com)\n```\n\n| argument    | type | description        | default |\n| ----------- | ---- | ------------------ | ------- |\n| `text`      | str  | the link text.     |         |\n| `url`       | str  | the link url.      |         |\n| **returns** | str  | the rendered link. |         |\n\n### <kbd>method</kbd> `markdownrenderer.code_block`\n\ncreate a markdown-formatted code block.\n\n```python\nmd = markdownrenderer()\nmd.add(md.code_block(\"import spacy\", \"python\"))\n```\n\n````markdown\n```python\nimport spacy\n```\n````\n\n| argument    | type | description              | default |\n| ----------- | ---- | ------------------------ | ------- |\n| `text`      | str  | the code text.           |         |\n| `lang`      | str  | optional code language.  | `\"\"`    |\n| **returns** | str  | the rendered code block. |         |\n\n### <kbd>method</kbd> `markdownrenderer.code`, `markdownrenderer.bold`, `markdownrenderer.italic`\n\ncreate a markdown-formatted text.\n\n```python\nmd = markdownrenderer()\nmd.add(md.code(\"import spacy\"))\nmd.add(md.bold(\"hello!\"))\nmd.add(md.italic(\"emphasis\"))\n```\n\n```markdown\n`import spacy`\n\n**hello!**\n\n_emphasis_\n```\n\n### utilities\n\n#### <kbd>function</kbd> `color`\n\n```python\nfrom wasabi import color\n\nformatted = color(\"this is a text\", fg=\"white\", bg=\"green\", bold=true)\n```\n\n| argument    | type      | description                                   | default |\n| ----------- | --------- | --------------------------------------------- | ------- |\n| `text`      | str       | the text to be formatted.                     | -       |\n| `fg`        | str / int | foreground color. string name or `0` - `256`. | `none`  |\n| `bg`        | str / int | background color. string name or `0` - `256`. | `none`  |\n| `bold`      | bool      | format the text in bold.                      | `false` |\n| `underline` | bool      | format the text by underlining.               | `false` |\n| **returns** | str       | the formatted string.                         |         |\n\n#### <kbd>function</kbd> `wrap`\n\n```python\nfrom wasabi import wrap\n\nwrapped = wrap(\"hello world, this is a text.\", indent=2)\n```\n\n| argument    | type | description                                | default |\n| ----------- | ---- | ------------------------------------------ | ------- |\n| `text`      | str  | the text to wrap.                          | -       |\n| `wrap_max`  | int  | maximum line width, including indentation. | `80`    |\n| `indent`    | int  | number of spaces used for indentation.     | `4`     |\n| **returns** | str  | the wrapped text with line breaks.         |         |\n\n#### <kbd>function</kbd> `diff_strings`\n\n```python\nfrom wasabi import diff_strings\n\ndiff = diff_strings(\"hello world!\", \"helloo world\")\n```\n\n| argument    | type      | description                                                                  | default            |\n| ----------- | --------- | ---------------------------------------------------------------------------- | ------------------ |\n| `a`         | str       | the first string to diff.                                                    |\n| `b`         | str       | the second string to diff.                                                   |\n| `fg`        | str / int | foreground color. string name or `0` - `256`.                                | `\"black\"`          |\n| `bg`        | tuple     | background colors as `(insert, delete)` tuple of string name or `0` - `256`. | `(\"green\", \"red\")` |\n| **returns** | str       | the formatted diff.                                                          |                    |\n\n### environment variables\n\nwasabi also respects the following environment variables. the prefix can be\ncustomised on the `printer` via the `env_prefix` argument. for example, setting\n`env_prefix=\"spacy\"` will expect the environment variable `spacy_log_friendly`.\n\n| name                   | description                                            |\n| ---------------------- | ------------------------------------------------------ |\n| `ansi_colors_disabled` | disable colors.                                        |\n| `wasabi_log_friendly`  | make output nicer for logs (no colors, no animations). |\n| `wasabi_no_pretty`     | disable pretty printing, e.g. colors and icons.        |\n\n## \ud83d\udd14 run tests\n\nfork or clone the repo, make sure you have `pytest` installed and then run it on\nthe package directory. the tests are located in\n[`/wasabi/tests`](/wasabi/tests).\n\n```bash\npip install pytest\ncd wasabi\npython -m pytest wasabi\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "wasabi",
  "package_url": "https://pypi.org/project/wasabi/",
  "project_url": "https://pypi.org/project/wasabi/",
  "project_urls": {
    "Homepage": "https://github.com/explosion/wasabi"
  },
  "release_url": "https://pypi.org/project/wasabi/1.1.2/",
  "requires_dist": [
    "typing-extensions (<4.5.0,>=3.7.4.1) ; python_version < \"3.8\"",
    "colorama (>=0.4.6) ; sys_platform == \"win32\" and python_version >= \"3.7\""
  ],
  "requires_python": ">=3.6",
  "summary": "a lightweight console printing and formatting toolkit",
  "version": "1.1.2",
  "releases": [],
  "developers": [
    "contact@explosion.ai",
    "explosion"
  ],
  "kwds": "toolkit wasabi_log_friendly python3 pip python",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_wasabi",
  "homepage": "https://github.com/explosion/wasabi",
  "release_count": 41,
  "dependency_ids": [
    "pypi_colorama",
    "pypi_typing_extensions"
  ],
  "documentation_summary": "Wasabi is a public GitHub repository by explosion, offering a lightweight console printing and formatting toolkit designed for simplicity and minimalism. It has zero dependencies and supports Python 3.6+. The toolkit is ideal for developers who need basic coloring and formatting utilities without the complexity of a full-featured library. Wasabi is named after one of the creator's rats and is still a work in progress, with plans to add more features based on the developers' needs. It includes various functionalities like message printing, table formatting, and custom tracebacks, aiming to standardize utilities across projects like spaCy, Thinc, and Prodigy. The toolkit is licensed under the MIT license and encourages contributions from the community.",
  "embedding": [
    -0.010330316610634327,
    0.0016692915232852101,
    -0.0025669375900179148,
    -0.00022680118854623288,
    0.005345903802663088,
    0.004542975686490536,
    -0.006016748957335949,
    -0.0298925694078207,
    0.005644829478114843,
    -0.020896991714835167,
    0.023121556267142296,
    -0.007285444997251034,
    -0.026319365948438644,
    0.030810203403234482,
    -0.012951130047440529,
    -0.004077207762748003,
    0.02709796279668808,
    -0.006131452973932028,
    0.002226301236078143,
    -0.0055301254615187645,
    0.015613654628396034,
    -0.005457132123410702,
    -0.013340428471565247,
    -0.004970508627593517,
    -0.030393097549676895,
    0.04126565158367157,
    -0.0003362914139870554,
    -0.021953659132122993,
    0.0017057881923392415,
    0.0028467460069805384,
    0.03370213508605957,
    -0.013041502796113491,
    -0.025401733815670013,
    -0.018811464309692383,
    -0.024386776611208916,
    -0.019756903871893883,
    0.007827682420611382,
    0.020924799144268036,
    0.027640199288725853,
    -0.009697705507278442,
    0.012958081439137459,
    -0.0043796091340482235,
    0.00010367899085395038,
    0.012798191048204899,
    -0.031366344541311264,
    -0.00041428147233091295,
    -0.0011018540244549513,
    -0.03804003447294235,
    -0.0021915424149483442,
    0.016878874972462654,
    0.03684433177113533,
    -0.008383823558688164,
    -0.015558039769530296,
    -0.021008219569921494,
    0.02263493277132511,
    0.0012000476708635688,
    0.012415844015777111,
    0.017101330682635307,
    -0.015196548774838448,
    -0.007827682420611382,
    0.020340850576758385,
    0.0061592599377036095,
    -0.01953444629907608,
    0.0003738743835128844,
    -0.014584793709218502,
    -0.014445758424699306,
    -0.017754796892404556,
    0.006503371987491846,
    -0.021480940282344818,
    0.007737309671938419,
    0.03211713209748268,
    0.03784538432955742,
    0.014793346635997295,
    -0.01922857016324997,
    0.02839099057018757,
    -0.012221194803714752,
    -0.04257258027791977,
    0.030003799125552177,
    -0.01497409213334322,
    -0.0074661909602582455,
    0.012422796338796616,
    -0.014793346635997295,
    0.009266696870326996,
    0.007431432139128447,
    0.022829581052064896,
    0.015989048406481743,
    -0.028154630213975906,
    0.027556778863072395,
    -0.028835901990532875,
    -0.012228147126734257,
    -0.002718138275668025,
    0.013159682974219322,
    -0.029809148982167244,
    0.0173098836094141,
    0.0028728151228278875,
    0.02395576611161232,
    -0.009218034334480762,
    0.0334518700838089,
    0.0014424902619794011,
    -0.026708664372563362,
    -0.005721298977732658,
    0.015154837630689144,
    -0.01979861408472061,
    -0.015877820551395416,
    -0.010177377611398697,
    0.0013503794325515628,
    0.02199537120759487,
    0.0056100706569850445,
    0.04515863582491875,
    0.019909841939806938,
    -0.03759511932730675,
    0.06707058846950531,
    0.009259745478630066,
    -0.032673273235559464,
    -0.017810409888625145,
    0.008564569056034088,
    0.03879082202911377,
    -0.022203922271728516,
    -0.006423426792025566,
    -0.003972931299358606,
    -0.013493367470800877,
    0.011936172842979431,
    0.014417950995266438,
    -0.009927114471793175,
    0.03181125596165657,
    -0.010135666467249393,
    -0.02705625258386135,
    -0.0037157160695642233,
    -0.012777335941791534,
    -0.00976722314953804,
    0.03934696316719055,
    -0.004344850312918425,
    0.0236359853297472,
    0.0014650835655629635,
    0.005126923322677612,
    0.006659786682575941,
    -0.028557831421494484,
    0.005620498210191727,
    -0.015238258987665176,
    -0.03247862681746483,
    0.015113127417862415,
    0.022926906123757362,
    -0.008390774950385094,
    0.009384877048432827,
    -0.025638092309236526,
    0.002155045745894313,
    0.025707609951496124,
    -0.0022089218255132437,
    -0.0008741838973946869,
    -0.010309460572898388,
    0.004591637756675482,
    -0.008119656704366207,
    -0.010010534897446632,
    -0.01828313060104847,
    -0.004369181580841541,
    0.0491628497838974,
    -0.012944177724421024,
    -0.01069875992834568,
    0.0033698659390211105,
    0.017421111464500427,
    0.0010749159846454859,
    0.03659406676888466,
    0.00022571497538592666,
    -0.009468297474086285,
    0.003778281854465604,
    0.040487054735422134,
    0.017435016110539436,
    -0.007980621419847012,
    0.002101169666275382,
    0.0003803916333708912,
    0.004574258346110582,
    0.009218034334480762,
    -0.02018791250884533,
    0.015196548774838448,
    -0.005060881841927767,
    -0.012902467511594296,
    0.00488361157476902,
    0.023802828043699265,
    0.0315609946846962,
    0.015989048406481743,
    0.002341005252674222,
    0.010573627427220345,
    -0.002855435712262988,
    0.026625242084264755,
    0.0002228908269898966,
    -0.030087219551205635,
    0.011435645632445812,
    -0.0008528940961696208,
    0.009503056295216084,
    0.011421742849051952,
    0.011665054596960545,
    0.036983367055654526,
    -0.009336214512586594,
    -0.025095855817198753,
    -0.5663738250732422,
    -0.021188966929912567,
    -0.0015067941276356578,
    -0.04032021015882492,
    0.02928081527352333,
    0.025137566030025482,
    0.017435016110539436,
    0.03820687532424927,
    -0.008036235347390175,
    0.03995871916413307,
    -0.013472512364387512,
    0.02232905477285385,
    -0.0017092641210183501,
    -0.02738993614912033,
    0.006969139911234379,
    -0.012144725769758224,
    -0.013973038643598557,
    -0.028585638850927353,
    -0.020855281502008438,
    0.012589638121426105,
    -0.005081736948341131,
    0.02837708592414856,
    -0.023858442902565002,
    -0.009023385122418404,
    -0.005902044475078583,
    0.02997599169611931,
    0.013166634365916252,
    -0.012054353021085262,
    -0.0003923399781342596,
    0.015585847198963165,
    -0.02453971467912197,
    0.024066995829343796,
    0.013618499040603638,
    -0.021578265354037285,
    0.0522216260433197,
    0.020299140363931656,
    -0.017504533752799034,
    0.0334518700838089,
    0.010643145069479942,
    0.05450180172920227,
    -0.022426379844546318,
    -0.030671168118715286,
    0.008870446123182774,
    0.0036010120529681444,
    0.022468090057373047,
    -0.0005852513131685555,
    0.031644415110349655,
    -0.001633663778193295,
    0.0003647501871455461,
    -0.025971777737140656,
    0.027584586292505264,
    -0.0009358807583339512,
    0.011407839134335518,
    0.0035593013744801283,
    0.02581883780658245,
    0.02423383668065071,
    0.00035519152879714966,
    0.0018908788915723562,
    0.007737309671938419,
    0.006899622268974781,
    -0.0033020861446857452,
    0.011769330129027367,
    0.007500949781388044,
    -0.028432700783014297,
    -0.02113335207104683,
    0.028530025854706764,
    0.011804088950157166,
    -0.025985680520534515,
    0.0010836056899279356,
    -0.03406362608075142,
    0.007980621419847012,
    -0.01954835094511509,
    -0.0023392674047499895,
    -0.0353427492082119,
    0.020910896360874176,
    0.06768234074115753,
    0.011894462630152702,
    -0.005203392822295427,
    -0.0018126715440303087,
    0.03061555325984955,
    0.006110597401857376,
    0.007285444997251034,
    -0.025693707168102264,
    -0.029836956411600113,
    0.03523152321577072,
    -0.009343165904283524,
    -0.012339374981820583,
    0.005582263693213463,
    0.016489576548337936,
    -0.020855281502008438,
    0.013653257861733437,
    0.022787870839238167,
    -0.04196082800626755,
    -0.006319150328636169,
    0.013159682974219322,
    0.006989995017647743,
    -0.0077025508508086205,
    0.00821002945303917,
    -0.02052159793674946,
    -0.016767647117376328,
    -0.013507271185517311,
    -0.011943124234676361,
    -0.007459239102900028,
    0.006771014537662268,
    -0.0025565100368112326,
    0.007660840172320604,
    -0.002080314327031374,
    0.017504533752799034,
    -0.0014642145251855254,
    0.0034515492152422667,
    0.009996632114052773,
    -0.019006112590432167,
    -0.018463876098394394,
    -0.022287344560027122,
    0.029113972559571266,
    -0.030782395973801613,
    0.052416276186704636,
    -0.0006082790205255151,
    0.0029232152737677097,
    0.018714139237999916,
    0.010782180353999138,
    -0.009857596829533577,
    0.003719191998243332,
    0.028557831421494484,
    0.04285065084695816,
    0.0010227777529507875,
    0.032617662101984024,
    -0.004508216865360737,
    -0.03948599845170975,
    0.0192007627338171,
    0.0064408062025904655,
    -0.015850013121962547,
    0.022301247343420982,
    -0.01572488248348236,
    0.008745314553380013,
    -0.00010346174531150609,
    0.013896569609642029,
    0.00947524979710579,
    0.009579526260495186,
    -0.014167687855660915,
    -0.027320418506860733,
    0.02333010919392109,
    -0.007452287245541811,
    -0.017115235328674316,
    -0.031421959400177,
    -0.032005906105041504,
    -0.008585424162447453,
    0.003962503280490637,
    0.004730673041194677,
    0.026305461302399635,
    -0.0033507486805319786,
    -0.00884263962507248,
    -0.022120501846075058,
    0.030393097549676895,
    0.018755849450826645,
    -0.014251109212636948,
    -0.016447866335511208,
    -0.015307776629924774,
    0.0005352855660021305,
    -0.001326917321421206,
    -0.000723417557310313,
    0.0029023599345237017,
    0.005154730286449194,
    -0.0006804035510867834,
    -0.0397084578871727,
    -0.027306515723466873,
    -0.02168949320912361,
    0.028780288994312286,
    0.010295557789504528,
    -0.033535294234752655,
    -0.015488522127270699,
    -9.737895743455738e-05,
    -0.027236998081207275,
    0.004233621992170811,
    -0.013924376107752323,
    0.00410849042236805,
    -0.0009628188563510776,
    -0.017212558537721634,
    -0.005474511533975601,
    0.0019204238196834922,
    0.017754796892404556,
    0.023232784122228622,
    -0.017838217318058014,
    -0.023733310401439667,
    0.026986734941601753,
    -0.0011748474789783359,
    0.016600804403424263,
    0.014960188418626785,
    0.005818623583763838,
    0.009370973333716393,
    -0.0006095825228840113,
    -0.014376240782439709,
    -0.01610027812421322,
    0.009711609221994877,
    -0.03061555325984955,
    0.011428694240748882,
    -0.005557932425290346,
    -0.02677818201482296,
    0.014487468637526035,
    0.02326059155166149,
    0.025415636599063873,
    0.02331620454788208,
    -0.0050886888056993484,
    -0.008564569056034088,
    -0.0019343274179846048,
    -0.029447657987475395,
    0.03058774583041668,
    -0.026597436517477036,
    0.011414790526032448,
    0.022843485698103905,
    0.0046959142200648785,
    -0.017713086679577827,
    -0.038012225180864334,
    -0.006472088862210512,
    0.02110554464161396,
    -0.013604595325887203,
    -0.01607247069478035,
    0.02588835544884205,
    -0.018394358456134796,
    -0.01979861408472061,
    0.01054582092911005,
    -0.002632979303598404,
    -0.00802233163267374,
    0.0041467249393463135,
    -0.005547504872083664,
    0.022801775485277176,
    0.01697620004415512,
    0.021508747711777687,
    0.009336214512586594,
    -0.021578265354037285,
    -0.013521173968911171,
    0.020368658006191254,
    0.024637039750814438,
    -0.02648620679974556,
    0.021300194784998894,
    -0.010031390003859997,
    0.02768191136419773,
    -0.043601442128419876,
    0.053445134311914444,
    -0.021536553278565407,
    0.016336636617779732,
    0.009704657830297947,
    0.021661685779690742,
    -0.013291765935719013,
    0.04137687757611275,
    0.019284183159470558,
    0.01580830290913582,
    0.01370192039757967,
    -0.02459532953798771,
    0.015933435410261154,
    -0.023802828043699265,
    0.02958669327199459,
    -0.013159682974219322,
    0.00046011965605430305,
    0.011088058352470398,
    -0.011421742849051952,
    0.00754961185157299,
    0.002909311791881919,
    0.020980414003133774,
    0.012867708690464497,
    0.010351171717047691,
    -0.01275648083537817,
    0.02020181529223919,
    0.004278808832168579,
    0.028224147856235504,
    -0.01761576160788536,
    -0.025040240958333015,
    -0.037344858050346375,
    -0.012568783015012741,
    -0.027473358437418938,
    -0.016308831050992012,
    -0.030365290120244026,
    -0.02804340235888958,
    0.011526019312441349,
    0.018783656880259514,
    0.006093217991292477,
    0.008717508055269718,
    0.04543670639395714,
    -0.02837708592414856,
    -0.008098800666630268,
    -0.0239279605448246,
    -0.03334064409136772,
    0.038568366318941116,
    -0.005297241732478142,
    0.00011307473323540762,
    -0.0298925694078207,
    -0.02113335207104683,
    0.0016345327021554112,
    -0.01989593915641308,
    0.00732715567573905,
    -0.01949273608624935,
    0.01733769103884697,
    0.002523489063605666,
    0.009016433730721474,
    -0.01260354183614254,
    -0.011519066989421844,
    0.01544681191444397,
    -0.004716769326478243,
    -0.00622182572260499,
    -0.009746368043124676,
    0.029086166992783546,
    -0.008606279268860817,
    -0.026013487949967384,
    -0.010976829566061497,
    0.018978307023644447,
    0.0022037080489099026,
    0.0014146832982078195,
    -0.005874237511307001,
    -0.015989048406481743,
    -0.018144095316529274,
    -0.012179484590888023,
    -0.0012808619067072868,
    -0.009739416651427746,
    -0.008001476526260376,
    0.0245814248919487,
    0.0034585008397698402,
    0.004351802170276642,
    -0.019061727449297905,
    0.02833537571132183,
    0.032562047243118286,
    -0.015516329556703568,
    -0.02077186107635498,
    -0.01953444629907608,
    0.005182537250220776,
    0.04062609001994133,
    0.020062780007719994,
    0.0005687408847734332,
    -0.01212387066334486,
    -0.014584793709218502,
    -9.01013336260803e-05,
    -0.026597436517477036,
    0.0030639884062111378,
    0.006190542597323656,
    -0.008766169659793377,
    -0.0014850698644295335,
    0.0005040026153437793,
    0.010670952498912811,
    0.011797137558460236,
    0.010156522504985332,
    -0.007181168533861637,
    -0.019993264228105545,
    -0.0022454187273979187,
    0.02490120567381382,
    -0.02615252323448658,
    0.0022801775485277176,
    0.004195387475192547,
    -0.0051373508758842945,
    -0.006691069342195988,
    0.03114388696849346,
    0.026222040876746178,
    0.017226463183760643,
    0.015989048406481743,
    0.009169371798634529,
    -0.050914693623781204,
    -0.007090795785188675,
    0.011734572239220142,
    0.003105699084699154,
    0.011713716201484203,
    -0.03122730925679207,
    0.02241247519850731,
    0.021008219569921494,
    0.00944049097597599,
    0.011720668524503708,
    -0.003204761538654566,
    0.037678543478250504,
    0.024400679394602776,
    -0.002956236246973276,
    -0.012325471267104149,
    -0.024511907249689102,
    -0.026569629088044167,
    -0.032562047243118286,
    0.0029266912024468184,
    -0.015697075054049492,
    -0.018199708312749863,
    0.0026712140534073114,
    0.00426142942160368,
    -0.03375774994492531,
    -0.033841170370578766,
    0.027362128719687462,
    0.016197601333260536,
    -0.004949653521180153,
    -0.00962818879634142,
    0.007528756745159626,
    -0.021911948919296265,
    0.005227724090218544,
    -0.03400801122188568,
    -0.00010188674059463665,
    -0.005870761815458536,
    -0.009503056295216084,
    -0.02395576611161232,
    -0.011852751486003399,
    0.02171730063855648,
    -0.02046598307788372,
    0.026541821658611298,
    -0.004021593369543552,
    -0.005929851904511452,
    -0.03058774583041668,
    0.00717421667650342,
    0.027668006718158722,
    0.0027424695435911417,
    -0.009336214512586594,
    -0.011352225206792355,
    0.011894462630152702,
    0.01039288192987442,
    0.026889409869909286,
    -0.01892269216477871,
    -0.010775228962302208,
    -0.05427934601902962,
    0.001170502626337111,
    -0.002518275287002325,
    0.020924799144268036,
    -0.009676850400865078,
    -0.027278708294034004,
    0.026555724442005157,
    0.007132506463676691,
    0.028293665498495102,
    0.0017414160538464785,
    -0.00479671498760581,
    0.005658733192831278,
    0.0026903313118964434,
    0.004873184021562338,
    0.007681695278733969,
    0.012707818299531937,
    0.003401148831471801,
    0.013688016682863235,
    0.012575734406709671,
    -0.015266066417098045,
    -0.006732780020684004,
    0.0007529625436291099,
    -0.0036114396061748266,
    -0.005491890944540501,
    -0.015182645060122013,
    -0.044936180114746094,
    0.012534024193882942,
    0.023469144478440285,
    -0.011442597955465317,
    0.004921846557408571,
    0.01985422894358635,
    -0.0034706664737313986,
    0.0036809572484344244,
    -0.0072298310697078705,
    0.041071001440286636,
    -0.005067833233624697,
    0.0026660002768039703,
    0.007605226244777441,
    -0.03161660581827164,
    0.011199286207556725,
    0.02547125145792961,
    0.010212136432528496,
    0.02143923006951809,
    -0.015655364841222763,
    -0.017087427899241447,
    -0.022509800270199776,
    0.010782180353999138,
    0.01858900859951973,
    0.006392143666744232,
    -0.005940279457718134,
    -0.019339798018336296,
    -0.008766169659793377,
    0.0004121090460103005,
    7.266762258950621e-05,
    0.028140727430582047,
    -0.01118538249284029,
    -0.027306515723466873,
    -0.03239520266652107,
    0.007111650891602039,
    -0.018102385103702545,
    -0.0028623873367905617,
    -0.03317379951477051,
    -0.032895732671022415,
    -0.016447866335511208,
    0.021633878350257874,
    0.014598697423934937,
    0.015863917768001556,
    0.011998739093542099,
    0.003979882691055536,
    -0.02042427286505699,
    0.01149126049131155,
    -0.011310514062643051,
    -0.0027581111062318087,
    -0.015252162702381611,
    0.0025200131349265575,
    0.012978936545550823,
    0.023691600188612938,
    0.00900948140770197,
    0.007108175195753574,
    0.019659578800201416,
    0.008258691057562828,
    0.007341058924794197,
    -0.002222825540229678,
    -0.0220370814204216,
    0.01085865031927824,
    -0.0029475465416908264,
    0.010323364287614822,
    -0.016016855835914612,
    0.013952183537185192,
    -0.005714347120374441,
    -0.05427934601902962,
    0.002240204717963934,
    0.009954920969903469,
    -0.004921846557408571,
    -0.0043761334381997585,
    -0.022440282627940178,
    -0.0183248408138752,
    0.014598697423934937,
    -0.0021793770138174295,
    -0.002311460440978408,
    0.0298925694078207,
    -0.018366551026701927,
    0.007396673317998648,
    0.021355807781219482,
    -0.005933327600359917,
    0.013208344578742981,
    0.03442511707544327,
    0.00866189319640398,
    0.0201462022960186,
    0.03581546992063522,
    0.028613446280360222,
    0.003774805925786495,
    -0.0013642830308526754,
    -0.008821784518659115,
    -0.026931120082736015,
    0.0004522989329416305,
    -0.0034237420186400414,
    0.04104319587349892,
    0.018130190670490265,
    0.010886456817388535,
    0.0034359076526015997,
    -0.0008550665224902332,
    0.041098807007074356,
    0.01197788305580616,
    -0.007925006560981274,
    0.027946077287197113,
    -0.01861681416630745,
    -0.0429062657058239,
    0.0041432492434978485,
    -0.023858442902565002,
    -0.02141142264008522,
    0.00535633135586977,
    -0.042377933859825134,
    -0.008953867480158806,
    0.013889617286622524,
    -0.0003034877881873399,
    -0.023149361833930016,
    0.006340005435049534,
    -0.00028024284983985126,
    0.03901328146457672,
    0.014960188418626785,
    0.010893409140408039,
    0.022231729701161385,
    -0.012784287333488464,
    0.005457132123410702,
    -0.023747213184833527,
    -0.03361871466040611,
    -0.009655995294451714,
    0.01957615837454796,
    0.03019844740629196,
    -0.008008427917957306,
    -0.0010740470606833696,
    -0.008154415525496006,
    -0.001321703428402543,
    -0.04810618236660957,
    -0.012714769691228867,
    0.02776533178985119,
    0.00896777119487524,
    0.0029614500235766172,
    -0.04451907426118851,
    0.0334518700838089,
    -0.03372994065284729,
    0.01672593504190445,
    -0.018700236454606056,
    -0.012853804975748062,
    0.015460715629160404,
    -0.015432908199727535,
    0.008634086698293686,
    0.010594483464956284,
    0.023747213184833527,
    0.0011496474035084248,
    0.0110185407102108,
    0.0002563461603131145,
    -0.023483047261834145,
    -0.02047988586127758,
    -0.020618921145796776,
    0.0008020593668334186,
    0.016253216192126274,
    0.021022124215960503,
    -0.006670214235782623,
    0.02650011144578457,
    0.05355636402964592,
    0.015947338193655014,
    -0.02676427736878395,
    -0.009231938049197197,
    0.005015695001929998,
    0.04009775444865227,
    -0.02490120567381382,
    -0.005081736948341131,
    -0.026666954159736633,
    -0.02456752210855484,
    0.020368658006191254,
    -0.011053299531340599,
    -0.0022940810304135084,
    -0.011581633239984512,
    -0.013632402755320072,
    -0.0033020861446857452,
    0.030170639976859093,
    -0.015363390557467937,
    -0.0012078683357685804,
    -0.014077315106987953,
    -0.011282707564532757,
    0.009336214512586594,
    -0.011672005988657475,
    -0.016628611832857132,
    0.012937226332724094,
    -0.019770806655287743,
    -0.02106383442878723,
    -0.02077186107635498,
    -0.014876767992973328,
    0.016906682401895523,
    0.000331512070260942,
    -0.007633033208549023,
    0.005912472493946552,
    0.03884643688797951,
    -0.021592168137431145,
    0.011386984027922153,
    -0.02328839711844921,
    0.007507901173084974,
    -0.017574051395058632,
    0.015947338193655014,
    0.0018960926681756973,
    -0.006805773358792067,
    0.013312621042132378,
    -0.0049009909853339195,
    -0.04293407127261162,
    -0.008098800666630268,
    -0.0002391840098425746,
    0.02459532953798771,
    0.04499179497361183,
    -0.015432908199727535,
    0.005078261252492666,
    -0.010246895253658295,
    -0.005623974371701479,
    -0.020966509357094765,
    -0.001201785635203123,
    0.01462650392204523,
    0.010434592142701149,
    0.006708448752760887,
    -0.0011687647784128785,
    0.008821784518659115,
    -0.001854382106103003,
    -0.013757534325122833,
    -0.0010627503506839275,
    -0.0012773859780281782,
    -0.023149361833930016,
    -0.04660460352897644,
    -0.019033920019865036,
    -0.005804719869047403,
    -0.004511692561209202,
    0.02554076910018921,
    0.002733779838308692,
    -0.009078999049961567,
    -0.0017631403170526028,
    0.026263751089572906,
    0.02708405815064907,
    -0.0005782995722256601,
    0.012561831623315811,
    0.03439731150865555,
    -0.0037365711759775877,
    0.012144725769758224,
    -0.0008646252099424601,
    -0.005742154084146023,
    -0.014960188418626785,
    0.013771438039839268,
    -0.04023678973317146,
    -0.03028186969459057,
    -0.025095855817198753,
    0.0311995018273592,
    0.03940257802605629,
    -0.014146832749247551,
    -0.040459245443344116,
    -0.024720460176467896,
    -0.004414367955178022,
    -0.008627134375274181,
    -0.044241003692150116,
    0.020563308149576187,
    0.01450137235224247,
    0.000318912003422156,
    -0.02333010919392109,
    -0.0029996847733855247,
    -0.018157998099923134,
    0.013402994722127914,
    -0.020090587437152863,
    0.011845800094306469,
    0.017421111464500427,
    0.006131452973932028,
    -0.010316412895917892,
    -0.020632825791835785,
    -0.017226463183760643,
    -0.02394186332821846,
    0.026875507086515427,
    0.010531917214393616,
    0.010935119353234768,
    0.01981251686811447,
    -0.0003743088454939425,
    0.00805709045380354,
    -0.030754588544368744,
    -0.0024852543137967587,
    0.002632979303598404,
    0.01761576160788536,
    0.010761325247585773,
    -0.02547125145792961,
    -0.017796507105231285,
    -0.005321572534739971,
    0.009426587261259556,
    0.009496104903519154,
    -0.011206237599253654,
    0.0226905457675457,
    0.0031752167269587517,
    -0.025276601314544678,
    -0.031644415110349655,
    -0.006659786682575941,
    -0.0016449603717774153,
    0.016531286761164665,
    0.038902051746845245,
    -0.013298718258738518,
    0.015891725197434425,
    0.028919324278831482,
    -0.012242049910128117,
    -0.022899098694324493,
    -0.03851275518536568,
    0.01213777344673872,
    -0.019325893372297287,
    0.014584793709218502,
    0.02997599169611931,
    -0.01610027812421322,
    -0.03478660807013512,
    -0.008592376485466957,
    0.04638214781880379,
    -0.008230884559452534,
    -0.003774805925786495,
    0.002026438247412443,
    -0.038651786744594574,
    -0.026083005592226982,
    0.008098800666630268,
    0.010928167961537838,
    -0.011984835378825665,
    -0.025735417380928993,
    -0.004396988544613123,
    -0.0005991548532620072,
    0.026680856943130493,
    -0.041098807007074356,
    -0.015224355272948742,
    -0.026680856943130493,
    0.016767647117376328,
    0.005617022514343262,
    0.001447704154998064,
    -0.02016010507941246,
    -0.0015363390557467937,
    0.006649359129369259,
    -0.00880788080394268,
    9.444618626730517e-05,
    0.18018963932991028,
    0.012249002233147621,
    0.022523704916238785,
    0.03367432951927185,
    -0.012401941232383251,
    0.021967563778162003,
    0.007744261063635349,
    0.004949653521180153,
    0.002587792929261923,
    0.026708664372563362,
    -0.02146703563630581,
    -0.003997262101620436,
    -0.005300717428326607,
    -5.6591674365336075e-05,
    0.03820687532424927,
    -0.016155891120433807,
    -0.016169795766472816,
    -0.04910723492503166,
    -0.03934696316719055,
    0.0002148528437828645,
    0.003719191998243332,
    -0.029836956411600113,
    -0.023566467687487602,
    -0.01482115313410759,
    0.012422796338796616,
    0.021175062283873558,
    -0.028780288994312286,
    0.0001959527435246855,
    0.02330230176448822,
    0.0009384876466356218,
    -0.0020090588368475437,
    0.0021324525587260723,
    -0.01243670005351305,
    0.011254900135099888,
    -0.021008219569921494,
    -0.026639146730303764,
    0.02580493502318859,
    -0.007528756745159626,
    0.014584793709218502,
    0.019339798018336296,
    0.0017301194602623582,
    -0.029141779989004135,
    -0.021328002214431763,
    -0.03153318539261818,
    -0.017713086679577827,
    -0.017782604321837425,
    -0.004101538565009832,
    -0.00852285884320736,
    0.01418159157037735,
    0.02199537120759487,
    -0.001341689727269113,
    8.108576730592176e-05,
    0.016002953052520752,
    -0.012325471267104149,
    0.0017414160538464785,
    -0.02520708367228508,
    0.00849505141377449,
    -0.00228191539645195,
    -0.004834949504584074,
    -0.011227093636989594,
    -0.017574051395058632,
    0.03753950819373131,
    -0.031032659113407135,
    0.0146543113514781,
    -0.06273268908262253,
    0.018755849450826645,
    -0.023177169263362885,
    -0.01978471130132675,
    0.009218034334480762,
    0.018658524379134178,
    -0.015530233271420002,
    -0.012242049910128117,
    -0.018366551026701927,
    0.0006552034174092114,
    -0.024053091183304787,
    -0.017254268750548363,
    0.02994818426668644,
    0.012457555159926414,
    0.006593744736164808,
    0.02549905702471733,
    0.0012991102412343025,
    0.004748052451759577,
    -0.0073549626395106316,
    0.01853339374065399,
    -0.02777923457324505,
    -0.014112073928117752,
    0.008919108659029007,
    -0.019617868587374687,
    0.011060250923037529,
    -0.028557831421494484,
    -0.021341904997825623,
    -0.036093540489673615,
    0.01165810227394104,
    0.0032482100650668144,
    -0.003176954574882984,
    0.018825367093086243,
    -0.014487468637526035,
    0.026931120082736015,
    -0.0029371187556535006,
    -0.0036913848016411066,
    -0.035175908356904984,
    0.03867959603667259,
    0.01800506003201008,
    -0.013542029075324535,
    -0.010837794281542301,
    0.003879082389175892,
    0.002895408309996128,
    0.006016748957335949,
    0.005119971465319395,
    -0.016475671902298927,
    -0.02430335432291031,
    -0.018199708312749863,
    0.014223301783204079,
    -0.005672636441886425,
    0.01165115088224411,
    0.01212387066334486,
    -0.021508747711777687,
    -0.006225301418453455,
    -0.003333369269967079,
    -0.008905204944312572,
    0.015460715629160404,
    0.007459239102900028,
    0.004650727845728397,
    -0.021244579926133156,
    -0.025638092309236526,
    0.007521804887801409,
    -0.03790099918842316,
    0.022843485698103905,
    0.00770950224250555,
    -0.004122394137084484,
    0.018032867461442947,
    0.0016319258138537407,
    0.010657048784196377,
    -0.02768191136419773,
    -0.019923746585845947,
    -0.018783656880259514,
    -0.025902260094881058,
    0.006527703255414963,
    0.0054467045702040195,
    0.0036601019091904163,
    -0.02709796279668808,
    -0.008439437486231327,
    -0.005505794193595648,
    -0.0034167903941124678,
    0.009183275513350964,
    -0.022815678268671036,
    0.0008620183216407895,
    0.006955236196517944,
    0.014251109212636948,
    -0.025582479313015938,
    -0.03028186969459057,
    0.008703604340553284,
    -0.016336636617779732,
    -0.012075208127498627,
    0.01858900859951973,
    -0.029531078413128853,
    -0.013799244537949562,
    -0.038874246180057526,
    0.022481992840766907,
    0.01529387291520834,
    -0.04379609227180481,
    0.010990733280777931,
    -0.003597536124289036,
    0.008119656704366207,
    -0.035732049494981766,
    -0.026416689157485962,
    -0.17451699078083038,
    0.027028445154428482,
    0.00013914382725488394,
    -0.05441838130354881,
    0.02737603336572647,
    -0.031338535249233246,
    0.01767137460410595,
    -0.0015737047651782632,
    0.01387571357190609,
    0.020062780007719994,
    -0.0004657679528463632,
    0.0004522989329416305,
    -0.010163473896682262,
    -0.01949273608624935,
    -0.00466115539893508,
    0.00853676162660122,
    0.015224355272948742,
    0.006155783776193857,
    0.03117169439792633,
    0.0283631831407547,
    0.03503687307238579,
    -0.026639146730303764,
    0.0036913848016411066,
    0.025693707168102264,
    -0.009294504299759865,
    -0.0012087373761460185,
    -0.015085319988429546,
    0.0045360238291323185,
    0.005231199786067009,
    -0.020966509357094765,
    0.0024487576447427273,
    0.0016397464787587523,
    -0.012408892624080181,
    -0.013368235900998116,
    0.019923746585845947,
    0.010330316610634327,
    0.01735159382224083,
    -0.026639146730303764,
    0.00040124691440723836,
    0.03372994065284729,
    0.03161660581827164,
    0.02584664523601532,
    0.012422796338796616,
    -0.03270108252763748,
    -0.0333128347992897,
    0.02010449208319187,
    0.030170639976859093,
    -0.011574680916965008,
    0.0017796506872400641,
    -0.014570889994502068,
    0.05322267860174179,
    -0.018074577674269676,
    0.004129345528781414,
    0.02335791476070881,
    0.04187740385532379,
    0.016267118975520134,
    0.002417474752292037,
    0.011164527386426926,
    0.026680856943130493,
    0.015697075054049492,
    0.00701432628557086,
    -0.032895732671022415,
    0.00853676162660122,
    0.03428608179092407,
    -0.016281023621559143,
    -0.00426838081330061,
    -0.03901328146457672,
    0.009565622545778751,
    -0.020702343434095383,
    0.018408261239528656,
    0.003508901223540306,
    0.0157804973423481,
    0.003618391463533044,
    -0.023788925260305405,
    -0.006673689931631088,
    0.0004996577627025545,
    -0.003607963677495718,
    0.0069934711791574955,
    -0.0032343065831810236,
    -0.0009185013477690518,
    -0.023719407618045807,
    0.02459532953798771,
    0.01953444629907608,
    0.0007560039521194994,
    0.011393935419619083,
    0.00044360922765918076,
    0.002627765526995063,
    -0.016322733834385872,
    -0.041154421865940094,
    -0.014202446676790714,
    0.05010829120874405,
    0.01700400561094284,
    0.009072047658264637,
    -0.015307776629924774,
    0.009336214512586594,
    0.022495897486805916,
    0.009906258434057236,
    0.019687386229634285,
    -0.009697705507278442,
    -0.029781341552734375,
    0.017838217318058014,
    0.016141988337039948,
    -0.020007167011499405,
    0.02295471355319023,
    0.023830635473132133,
    0.012825998477637768,
    -0.02173120342195034,
    0.018422165885567665,
    0.013535077683627605,
    0.010003583505749702,
    -0.025638092309236526,
    0.015933435410261154,
    0.02837708592414856,
    0.01799115538597107,
    -0.012999792583286762,
    0.008133559487760067,
    0.013528126291930676,
    -0.01853339374065399,
    0.015113127417862415,
    -0.007542659994214773,
    0.04273942485451698,
    -0.02520708367228508,
    -0.03559301421046257,
    0.012353278696537018,
    0.008439437486231327,
    -0.03904108703136444,
    -0.1021074578166008,
    -0.027278708294034004,
    -0.007348010782152414,
    0.009482201188802719,
    0.004640300292521715,
    -0.002627765526995063,
    0.014543083496391773,
    0.03242301195859909,
    0.0043830848298966885,
    0.01767137460410595,
    0.01370192039757967,
    -0.011859703809022903,
    -0.02925300784409046,
    0.010142618790268898,
    -0.011088058352470398,
    0.013041502796113491,
    -0.020048877224326134,
    0.023997478187084198,
    0.01949273608624935,
    0.039541613310575485,
    -0.010246895253658295,
    -0.004779335577040911,
    -0.013667161576449871,
    0.02107773721218109,
    -0.03689994663000107,
    0.004344850312918425,
    -0.023830635473132133,
    0.0013903521467000246,
    -0.007493997924029827,
    0.028891516849398613,
    0.0038130406755954027,
    -0.013319573365151882,
    0.00039972623926587403,
    0.007104699499905109,
    0.010601434856653214,
    0.007243734318763018,
    -0.025443444028496742,
    -0.011435645632445812,
    0.0201462022960186,
    -0.03183906152844429,
    0.013257007114589214,
    -0.01918685995042324,
    0.010907311923801899,
    -0.02616642601788044,
    -0.0056900158524513245,
    0.02395576611161232,
    0.0011392197338864207,
    0.0359266996383667,
    0.01243670005351305,
    -0.03459196165204048,
    -0.0264723040163517,
    -0.006235728971660137,
    -0.014362337067723274,
    0.016545189544558525,
    0.04913504421710968,
    -0.023107651621103287,
    0.007431432139128447,
    0.014709925279021263,
    -0.00789024867117405,
    -0.008140511810779572,
    -0.005985465832054615,
    0.0013816624414175749,
    -0.009961873292922974,
    0.026680856943130493,
    -0.0072298310697078705,
    -0.0026868553832173347,
    -0.005905520636588335,
    0.006371288560330868,
    0.0378175787627697,
    -0.021008219569921494,
    -0.021619975566864014,
    -0.010601434856653214,
    -0.04735539108514786,
    0.008432485163211823,
    -0.0035193287767469883,
    -0.00928060058504343,
    0.014431854709982872,
    -0.0008381216321140528,
    0.0006795345689170063,
    0.0042231944389641285,
    -0.010010534897446632,
    0.0012382823042571545,
    -0.007188120391219854,
    0.0013938279589638114,
    -0.007723405957221985,
    0.016141988337039948,
    -0.0011322679929435253,
    0.0038269441574811935,
    0.008321257308125496,
    -0.03270108252763748,
    0.019756903871893883,
    0.019909841939806938,
    0.013104069046676159,
    0.0027702765073627234,
    -0.030448710545897484,
    0.0035036872141063213,
    0.023496950045228004,
    0.0066319797188043594,
    0.0003680088266264647,
    -0.01854729652404785,
    -0.04532548040151596,
    -0.020924799144268036,
    -0.07129725813865662,
    0.015001899562776089,
    -0.008793977089226246,
    -0.024011380970478058,
    0.023496950045228004,
    -0.0146543113514781,
    -0.0023392674047499895,
    -0.027862656861543655,
    0.0059263757430016994,
    -0.003472404321655631,
    -0.03940257802605629,
    -0.005179061554372311,
    -0.01981251686811447,
    -0.03225616738200188,
    -0.014202446676790714,
    -0.006691069342195988,
    0.038929857313632965,
    -0.012881612405180931,
    0.03144976496696472,
    0.006242680829018354,
    -0.014779442921280861,
    -0.007410576567053795,
    0.04093196615576744,
    -0.017810409888625145,
    -0.04009775444865227,
    0.006333054043352604,
    -0.031088273972272873,
    0.01988203451037407,
    -0.00880788080394268,
    -0.020966509357094765,
    0.007431432139128447,
    0.0054467045702040195,
    -0.0008111835340969265,
    0.01790773496031761,
    -0.005801244173198938,
    0.009815885685384274,
    0.009586477652192116,
    0.01434843335300684,
    0.007299348711967468,
    -0.0003402017755433917,
    -0.01762966439127922,
    -0.010253846645355225,
    0.006419950630515814,
    -0.013020647689700127,
    0.00010824108176166192,
    -0.016878874972462654,
    0.01668422482907772,
    0.013027599081397057,
    0.02484559267759323,
    -0.01799115538597107,
    0.02398357354104519,
    0.01529387291520834,
    -0.02897493727505207,
    -0.002247156575322151,
    0.0013616761425510049,
    -0.03186687082052231,
    0.02177291363477707,
    0.0016214981442317367,
    -0.0061592599377036095,
    -0.0023149363696575165,
    0.02548515424132347,
    -0.007341058924794197,
    0.0011383508099243045,
    0.013521173968911171,
    0.0027633248828351498,
    -0.019979359582066536,
    -0.014139881357550621,
    -0.014709925279021263,
    -0.0007712109363637865,
    -0.009516960009932518,
    -0.0033038242254406214,
    -0.03364652022719383,
    0.007834633812308311,
    0.0038825583178550005,
    0.031394150108098984,
    1.3686278180102818e-05,
    0.0007872869027778506,
    0.0013981728116050363,
    -0.03233959153294563,
    0.04791153222322464,
    0.004556878935545683,
    -0.02326059155166149,
    -0.043962933123111725,
    0.014292819425463676,
    0.020340850576758385,
    0.0038165166042745113,
    -0.02768191136419773,
    -0.021981466561555862,
    -0.009273648262023926,
    0.02740384079515934,
    -0.011164527386426926,
    -0.01608637347817421,
    -0.028238050639629364,
    0.004351802170276642,
    0.013653257861733437,
    0.0056865401566028595,
    0.008356016129255295,
    -0.01133832149207592,
    0.01762966439127922,
    0.015335584059357643,
    -0.0050574056804180145,
    -0.011192334815859795,
    0.005460607819259167,
    -0.004018117673695087,
    0.001412076409906149,
    0.002234990941360593,
    -0.002919739345088601,
    -0.029392043128609657,
    0.027876559644937515,
    0.014987995848059654,
    -0.020243527367711067,
    -0.016586899757385254,
    -0.011706764809787273,
    0.03973626345396042,
    -0.025679802522063255,
    0.03225616738200188,
    -0.010107859969139099,
    0.005297241732478142,
    -0.005665685050189495,
    0.030003799125552177,
    0.017170848324894905,
    -0.010740470141172409,
    0.03728924319148064,
    -0.008328208699822426,
    0.00566916074603796,
    0.02488730289041996,
    0.025651996955275536,
    -0.03253423795104027,
    -0.007080368231981993,
    -0.022815678268671036,
    -0.015488522127270699,
    -0.0029788294341415167,
    -0.004591637756675482,
    -0.012867708690464497,
    0.010976829566061497,
    0.015460715629160404,
    0.001301717129535973,
    0.012520120479166508,
    0.00836991984397173,
    0.08492270857095718,
    -0.004473458044230938,
    -0.010677903890609741,
    0.015001899562776089,
    0.010615338571369648,
    0.027042347937822342,
    0.001998631050810218,
    0.0038512754254043102,
    0.001296503352932632,
    -0.016281023621559143,
    0.005026123020797968,
    -0.0016267119208350778,
    -0.008112704381346703,
    -0.02263493277132511,
    -0.022426379844546318,
    0.002539130626246333,
    -0.011845800094306469,
    0.035453978925943375,
    -0.01149821188300848,
    -0.005394566338509321,
    0.054696451872587204,
    0.01863071881234646,
    0.028265858069062233,
    0.022843485698103905,
    -0.03603792563080788,
    -0.008168318308889866,
    0.055280398577451706,
    0.025971777737140656,
    0.0031682648696005344,
    -0.02776533178985119,
    0.01667032204568386,
    -0.0030379192903637886,
    -0.02299642376601696,
    -0.025665899738669395,
    0.011741523630917072,
    -0.016281023621559143,
    -0.0283631831407547,
    0.009482201188802719,
    0.012985888868570328,
    0.019395411014556885,
    0.016586899757385254,
    -0.0022992948070168495,
    -0.03464757278561592,
    -0.0192702803760767,
    0.033201608806848526,
    0.0028415322303771973,
    -0.018088480457663536,
    0.020313045009970665,
    -0.04766127094626427
  ]
}
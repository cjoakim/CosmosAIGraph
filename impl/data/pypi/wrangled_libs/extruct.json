{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "extract embedded metadata from html markup\n=======\nextruct\n=======\n\n.. image:: https://github.com/scrapinghub/extruct/workflows/build/badge.svg?branch=master\n    :target: https://github.com/scrapinghub/extruct/actions\n    :alt: build status\n\n.. image:: https://img.shields.io/codecov/c/github/scrapinghub/extruct/master.svg?maxage=2592000\n    :target: https://codecov.io/gh/scrapinghub/extruct\n    :alt: coverage report\n\n.. image:: https://img.shields.io/pypi/v/extruct.svg\n   :target: https://pypi.python.org/pypi/extruct\n   :alt: pypi version\n\n\n*extruct* is a library for extracting embedded metadata from html markup.\n\ncurrently, *extruct* supports:\n\n- `w3c's html microdata`_\n- `embedded json-ld`_\n- `microformat`_ via `mf2py`_\n- `facebook's open graph`_\n- (experimental) `rdfa`_ via `rdflib`_\n- `dublin core metadata (dc-html-2003)`_\n\n.. _w3c's html microdata: http://www.w3.org/tr/microdata/\n.. _embedded json-ld: http://www.w3.org/tr/json-ld/#embedding-json-ld-in-html-documents\n.. _rdfa: https://www.w3.org/tr/html-rdfa/\n.. _rdflib: https://pypi.python.org/pypi/rdflib/\n.. _microformat: http://microformats.org/wiki/main_page\n.. _mf2py: https://github.com/microformats/mf2py\n.. _facebook's open graph: http://ogp.me/\n.. _dublin core metadata (dc-html-2003): https://www.dublincore.org/specifications/dublin-core/dcq-html/2003-11-30/\n\nthe microdata algorithm is a revisit of `this scrapinghub blog post`_ showing how to use exslt extensions.\n\n.. _this scrapinghub blog post: http://blog.scrapinghub.com/2014/06/18/extracting-schema-org-microdata-using-scrapy-selectors-and-xpath/\n\n\ninstallation\n------------\n\n::\n\n    pip install extruct\n\n\nusage\n-----\n\nall-in-one extraction\n+++++++++++++++++++++\n\nthe simplest example how to use extruct is to call\n``extruct.extract(htmlstring, base_url=base_url)``\nwith some html string and an optional base url.\n\nlet's try this on a webpage that uses all the syntaxes supported (rdfa with `ogp`_).\n\nfirst fetch the html using python-requests and then feed the response body to ``extruct``::\n\n  >>> import extruct\n  >>> import requests\n  >>> import pprint\n  >>> from w3lib.html import get_base_url\n  >>>\n  >>> pp = pprint.prettyprinter(indent=2)\n  >>> r = requests.get('https://www.optimizesmart.com/how-to-use-open-graph-protocol/')\n  >>> base_url = get_base_url(r.text, r.url)\n  >>> data = extruct.extract(r.text, base_url=base_url)\n  >>>\n  >>> pp.pprint(data)\n  { 'dublincore': [ { 'elements': [ { 'uri': 'http://purl.org/dc/elements/1.1/description',\n                                        'content': 'what is open graph protocol '\n                                                   'and why you need it? learn to '\n                                                   'implement open graph protocol '\n                                                   'for facebook on your website. '\n                                                   'open graph protocol meta tags.',\n                                        'name': 'description'}],\n                        'namespaces': {},\n                        'terms': []}],\n\n  'json-ld': [ { '@context': 'https://schema.org',\n                   '@id': '#organization',\n                   '@type': 'organization',\n                   'logo': 'https://www.optimizesmart.com/wp-content/uploads/2016/03/optimize-smart-twitter-logo.jpg',\n                   'name': 'optimize smart',\n                   'sameas': [ 'https://www.facebook.com/optimizesmart/',\n                               'https://uk.linkedin.com/in/analyticsnerd',\n                               'https://www.youtube.com/user/optimizesmart',\n                               'https://twitter.com/analyticsnerd'],\n                   'url': 'https://www.optimizesmart.com/'}],\n    'microdata': [ { 'properties': {'headline': ''},\n                     'type': 'http://schema.org/wpheader'}],\n    'microformat': [ { 'children': [ { 'properties': { 'category': [ 'specialized-tracking'],\n                                                       'name': [ 'open graph '\n                                                                 'protocol for '\n                                                                 'facebook '\n                                                                 'explained with '\n                                                                 'examples\\n'\n                                                                 '\\n'\n                                                                 'specialized '\n                                                                 'tracking\\n'\n                                                                 '\\n'\n                                                                 '\\n'\n                                                                 (...)\n                                                                 'follow '\n                                                                 '@analyticsnerd\\n'\n                                                                 '!function(d,s,id){var '\n                                                                 \"js,fjs=d.getelementsbytagname(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getelementbyid(id)){js=d.createelement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentnode.insertbefore(js,fjs);}}(document, \"\n                                                                 \"'script', \"\n                                                                 \"'twitter-wjs');\"]},\n                                       'type': ['h-entry']}],\n                       'properties': { 'name': [ 'open graph protocol for '\n                                                 'facebook explained with '\n                                                 'examples\\n'\n                                                 (...)\n                                                 'follow @analyticsnerd\\n'\n                                                 '!function(d,s,id){var '\n                                                 \"js,fjs=d.getelementsbytagname(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getelementbyid(id)){js=d.createelement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentnode.insertbefore(js,fjs);}}(document, \"\n                                                 \"'script', 'twitter-wjs');\"]},\n                       'type': ['h-feed']}],\n    'opengraph': [ { 'namespace': {'og': 'http://ogp.me/ns#'},\n                     'properties': [ ('og:locale', 'en_us'),\n                                     ('og:type', 'article'),\n                                     ( 'og:title',\n                                       'open graph protocol for facebook '\n                                       'explained with examples'),\n                                     ( 'og:description',\n                                       'what is open graph protocol and why you '\n                                       'need it? learn to implement open graph '\n                                       'protocol for facebook on your website. '\n                                       'open graph protocol meta tags.'),\n                                     ( 'og:url',\n                                       'https://www.optimizesmart.com/how-to-use-open-graph-protocol/'),\n                                     ('og:site_name', 'optimize smart'),\n                                     ( 'og:updated_time',\n                                       '2018-03-09t16:26:35+00:00'),\n                                     ( 'og:image',\n                                       'https://www.optimizesmart.com/wp-content/uploads/2010/07/open-graph-protocol.jpg'),\n                                     ( 'og:image:secure_url',\n                                       'https://www.optimizesmart.com/wp-content/uploads/2010/07/open-graph-protocol.jpg')]}],\n    'rdfa': [ { '@id': 'https://www.optimizesmart.com/how-to-use-open-graph-protocol/#header',\n                'http://www.w3.org/1999/xhtml/vocab#role': [ { '@id': 'http://www.w3.org/1999/xhtml/vocab#banner'}]},\n              { '@id': 'https://www.optimizesmart.com/how-to-use-open-graph-protocol/',\n                'article:modified_time': [ { '@value': '2018-03-09t16:26:35+00:00'}],\n                'article:published_time': [ { '@value': '2010-07-02t18:57:23+00:00'}],\n                'article:publisher': [ { '@value': 'https://www.facebook.com/optimizesmart/'}],\n                'article:section': [{'@value': 'specialized tracking'}],\n                'http://ogp.me/ns#description': [ { '@value': 'what is open '\n                                                              'graph protocol '\n                                                              'and why you need '\n                                                              'it? learn to '\n                                                              'implement open '\n                                                              'graph protocol '\n                                                              'for facebook on '\n                                                              'your website. '\n                                                              'open graph '\n                                                              'protocol meta '\n                                                              'tags.'}],\n                'http://ogp.me/ns#image': [ { '@value': 'https://www.optimizesmart.com/wp-content/uploads/2010/07/open-graph-protocol.jpg'}],\n                'http://ogp.me/ns#image:secure_url': [ { '@value': 'https://www.optimizesmart.com/wp-content/uploads/2010/07/open-graph-protocol.jpg'}],\n                'http://ogp.me/ns#locale': [{'@value': 'en_us'}],\n                'http://ogp.me/ns#site_name': [{'@value': 'optimize smart'}],\n                'http://ogp.me/ns#title': [ { '@value': 'open graph protocol for '\n                                                        'facebook explained with '\n                                                        'examples'}],\n                'http://ogp.me/ns#type': [{'@value': 'article'}],\n                'http://ogp.me/ns#updated_time': [ { '@value': '2018-03-09t16:26:35+00:00'}],\n                'http://ogp.me/ns#url': [ { '@value': 'https://www.optimizesmart.com/how-to-use-open-graph-protocol/'}],\n                'https://api.w.org/': [ { '@id': 'https://www.optimizesmart.com/wp-json/'}]}]}\n\nselect syntaxes\n+++++++++++++++\nit is possible to select which syntaxes to extract by passing a list with the desired ones to extract. valid values: 'microdata', 'json-ld', 'opengraph', 'microformat', 'rdfa' and 'dublincore'. if no list is passed all syntaxes will be extracted and returned::\n\n  >>> r = requests.get('http://www.songkick.com/artists/236156-elysian-fields')\n  >>> base_url = get_base_url(r.text, r.url)\n  >>> data = extruct.extract(r.text, base_url, syntaxes=['microdata', 'opengraph', 'rdfa'])\n  >>>\n  >>> pp.pprint(data)\n  { 'microdata': [],\n    'opengraph': [ { 'namespace': { 'concerts': 'http://ogp.me/ns/fb/songkick-concerts#',\n                                    'fb': 'http://www.facebook.com/2008/fbml',\n                                    'og': 'http://ogp.me/ns#'},\n                     'properties': [ ('fb:app_id', '308540029359'),\n                                     ('og:site_name', 'songkick'),\n                                     ('og:type', 'songkick-concerts:artist'),\n                                     ('og:title', 'elysian fields'),\n                                     ( 'og:description',\n                                       'find out when elysian fields is next '\n                                       'playing live near you. list of all '\n                                       'elysian fields tour dates and concerts.'),\n                                     ( 'og:url',\n                                       'https://www.songkick.com/artists/236156-elysian-fields'),\n                                     ( 'og:image',\n                                       'http://images.sk-static.com/images/media/img/col4/20100330-103600-169450.jpg')]}],\n    'rdfa': [ { '@id': 'https://www.songkick.com/artists/236156-elysian-fields',\n                'al:ios:app_name': [{'@value': 'songkick concerts'}],\n                'al:ios:app_store_id': [{'@value': '438690886'}],\n                'al:ios:url': [ { '@value': 'songkick://artists/236156-elysian-fields'}],\n                'http://ogp.me/ns#description': [ { '@value': 'find out when '\n                                                              'elysian fields is '\n                                                              'next playing live '\n                                                              'near you. list of '\n                                                              'all elysian '\n                                                              'fields tour dates '\n                                                              'and concerts.'}],\n                'http://ogp.me/ns#image': [ { '@value': 'http://images.sk-static.com/images/media/img/col4/20100330-103600-169450.jpg'}],\n                'http://ogp.me/ns#site_name': [{'@value': 'songkick'}],\n                'http://ogp.me/ns#title': [{'@value': 'elysian fields'}],\n                'http://ogp.me/ns#type': [{'@value': 'songkick-concerts:artist'}],\n                'http://ogp.me/ns#url': [ { '@value': 'https://www.songkick.com/artists/236156-elysian-fields'}],\n                'http://www.facebook.com/2008/fbmlapp_id': [ { '@value': '308540029359'}]}]}\n\nalternatively, if you already parsed the html before calling extruct, you can use the tree instead of the html string: ::\n\n  >>> # using the request from the previous example\n  >>> base_url = get_base_url(r.text, r.url)\n  >>> from extruct.utils import parse_html\n  >>> tree = parse_html(r.text)\n  >>> data = extruct.extract(tree, base_url, syntaxes=['microdata', 'opengraph', 'rdfa'])\n\nmicroformat format doesn't support the html tree, so you need to use a html string.\n\nuniform\n+++++++\nanother option is to uniform the output of microformat, opengraph, microdata, dublincore and json-ld syntaxes to the following structure: ::\n\n    {'@context': 'http://example.com',\n                 '@type': 'example_type',\n                 /* all other the properties in keys here */\n                 }\n\nto do so set ``uniform=true`` when calling ``extract``, it's false by default for backward compatibility. here the same example as before but with uniform set to true: ::\n\n  >>> r = requests.get('http://www.songkick.com/artists/236156-elysian-fields')\n  >>> base_url = get_base_url(r.text, r.url)\n  >>> data = extruct.extract(r.text, base_url, syntaxes=['microdata', 'opengraph', 'rdfa'], uniform=true)\n  >>>\n  >>> pp.pprint(data)\n  { 'microdata': [],\n    'opengraph': [ { '@context': { 'concerts': 'http://ogp.me/ns/fb/songkick-concerts#',\n                                 'fb': 'http://www.facebook.com/2008/fbml',\n                                 'og': 'http://ogp.me/ns#'},\n                   '@type': 'songkick-concerts:artist',\n                   'fb:app_id': '308540029359',\n                   'og:description': 'find out when elysian fields is next '\n                                     'playing live near you. list of all '\n                                     'elysian fields tour dates and concerts.',\n                   'og:image': 'http://images.sk-static.com/images/media/img/col4/20100330-103600-169450.jpg',\n                   'og:site_name': 'songkick',\n                   'og:title': 'elysian fields',\n                   'og:url': 'https://www.songkick.com/artists/236156-elysian-fields'}],\n    'rdfa': [ { '@id': 'https://www.songkick.com/artists/236156-elysian-fields',\n                'al:ios:app_name': [{'@value': 'songkick concerts'}],\n                'al:ios:app_store_id': [{'@value': '438690886'}],\n                'al:ios:url': [ { '@value': 'songkick://artists/236156-elysian-fields'}],\n                'http://ogp.me/ns#description': [ { '@value': 'find out when '\n                                                              'elysian fields is '\n                                                              'next playing live '\n                                                              'near you. list of '\n                                                              'all elysian '\n                                                              'fields tour dates '\n                                                              'and concerts.'}],\n                'http://ogp.me/ns#image': [ { '@value': 'http://images.sk-static.com/images/media/img/col4/20100330-103600-169450.jpg'}],\n                'http://ogp.me/ns#site_name': [{'@value': 'songkick'}],\n                'http://ogp.me/ns#title': [{'@value': 'elysian fields'}],\n                'http://ogp.me/ns#type': [{'@value': 'songkick-concerts:artist'}],\n                'http://ogp.me/ns#url': [ { '@value': 'https://www.songkick.com/artists/236156-elysian-fields'}],\n                'http://www.facebook.com/2008/fbmlapp_id': [ { '@value': '308540029359'}]}]}\n\nnb rdfa structure is not uniformed yet.\n\nreturning html node\n+++++++++++++++++++\n\nit is also possible to get references to html node for every extracted metadata item.\nthe feature is supported only by microdata syntax.\n\nto use that, just set the ``return_html_node`` option of ``extract`` method to ``true``.\nas the result, an additional key \"nodehtml\" will be included in the result for every\nitem. each node is of ``lxml.etree.element`` type: ::\n\n  >>> r = requests.get('http://www.rugpadcorner.com/shop/no-muv/')\n  >>> base_url = get_base_url(r.text, r.url)\n  >>> data = extruct.extract(r.text, base_url, syntaxes=['microdata'], return_html_node=true)\n  >>>\n  >>> pp.pprint(data)\n  { 'microdata': [ { 'htmlnode': <element div at 0x7f10f8e6d3b8>,\n                     'properties': { 'description': 'keep rugs flat on carpet!\\n'\n                                                    'not your thin sticky pad, '\n                                                    'no-muv is truly the best!',\n                                     'image': ['', ''],\n                                     'name': ['no-muv', 'no-muv'],\n                                     'offers': [ { 'htmlnode': <element div at 0x7f10f8e6d138>,\n                                                   'properties': { 'availability': 'http://schema.org/instock',\n                                                                   'price': 'price:  '\n                                                                            '$45'},\n                                                   'type': 'http://schema.org/offer'},\n                                                 { 'htmlnode': <element div at 0x7f10f8e60f48>,\n                                                   'properties': { 'availability': 'http://schema.org/instock',\n                                                                   'price': '(select '\n                                                                            'size/shape '\n                                                                            'for '\n                                                                            'pricing)'},\n                                                   'type': 'http://schema.org/offer'}],\n                                     'ratingvalue': ['5.00', '5.00']},\n                     'type': 'http://schema.org/product'}]}\n\nsingle extractors\n-----------------\n\nyou can also use each extractor individually. see below.\n\nmicrodata extraction\n++++++++++++++++++++\n::\n\n  >>> import pprint\n  >>> pp = pprint.prettyprinter(indent=2)\n  >>>\n  >>> from extruct.w3cmicrodata import microdataextractor\n  >>>\n  >>> # example from http://www.w3.org/tr/microdata/#associating-names-with-items\n  >>> html = \"\"\"<!doctype html>\n  ... <html>\n  ...  <head>\n  ...   <title>photo gallery</title>\n  ...  </head>\n  ...  <body>\n  ...   <h1>my photos</h1>\n  ...   <figure itemscope itemtype=\"http://n.whatwg.org/work\" itemref=\"licenses\">\n  ...    <img itemprop=\"work\" src=\"images/house.jpeg\" alt=\"a white house, boarded up, sits in a forest.\">\n  ...    <figcaption itemprop=\"title\">the house i found.</figcaption>\n  ...   </figure>\n  ...   <figure itemscope itemtype=\"http://n.whatwg.org/work\" itemref=\"licenses\">\n  ...    <img itemprop=\"work\" src=\"images/mailbox.jpeg\" alt=\"outside the house is a mailbox. it has a leaflet inside.\">\n  ...    <figcaption itemprop=\"title\">the mailbox.</figcaption>\n  ...   </figure>\n  ...   <footer>\n  ...    <p id=\"licenses\">all images licensed under the <a itemprop=\"license\"\n  ...    href=\"http://www.opensource.org/licenses/mit-license.php\">mit\n  ...    license</a>.</p>\n  ...   </footer>\n  ...  </body>\n  ... </html>\"\"\"\n  >>>\n  >>> mde = microdataextractor()\n  >>> data = mde.extract(html)\n  >>> pp.pprint(data)\n  [{'properties': {'license': 'http://www.opensource.org/licenses/mit-license.php',\n                   'title': 'the house i found.',\n                   'work': 'http://www.example.com/images/house.jpeg'},\n    'type': 'http://n.whatwg.org/work'},\n   {'properties': {'license': 'http://www.opensource.org/licenses/mit-license.php',\n                   'title': 'the mailbox.',\n                   'work': 'http://www.example.com/images/mailbox.jpeg'},\n    'type': 'http://n.whatwg.org/work'}]\n\njson-ld extraction\n++++++++++++++++++\n::\n\n  >>> import pprint\n  >>> pp = pprint.prettyprinter(indent=2)\n  >>>\n  >>> from extruct.jsonld import jsonldextractor\n  >>>\n  >>> html = \"\"\"<!doctype html>\n  ... <html>\n  ...  <head>\n  ...   <title>some person page</title>\n  ...  </head>\n  ...  <body>\n  ...   <h1>this guys</h1>\n  ...     <script type=\"application/ld+json\">\n  ...     {\n  ...       \"@context\": \"http://schema.org\",\n  ...       \"@type\": \"person\",\n  ...       \"name\": \"john doe\",\n  ...       \"jobtitle\": \"graduate research assistant\",\n  ...       \"affiliation\": \"university of dreams\",\n  ...       \"additionalname\": \"johnny\",\n  ...       \"url\": \"http://www.example.com\",\n  ...       \"address\": {\n  ...         \"@type\": \"postaladdress\",\n  ...         \"streetaddress\": \"1234 peach drive\",\n  ...         \"addresslocality\": \"wonderland\",\n  ...         \"addressregion\": \"georgia\"\n  ...       }\n  ...     }\n  ...     </script>\n  ...  </body>\n  ... </html>\"\"\"\n  >>>\n  >>> jslde = jsonldextractor()\n  >>>\n  >>> data = jslde.extract(html)\n  >>> pp.pprint(data)\n  [{'@context': 'http://schema.org',\n    '@type': 'person',\n    'additionalname': 'johnny',\n    'address': {'@type': 'postaladdress',\n                'addresslocality': 'wonderland',\n                'addressregion': 'georgia',\n                'streetaddress': '1234 peach drive'},\n    'affiliation': 'university of dreams',\n    'jobtitle': 'graduate research assistant',\n    'name': 'john doe',\n    'url': 'http://www.example.com'}]\n\n\nrdfa extraction (experimental)\n++++++++++++++++++++++++++++++\n\n::\n\n  >>> import pprint\n  >>> pp = pprint.prettyprinter(indent=2)\n  >>> from extruct.rdfa import rdfaextractor  # you can ignore the warning about html5lib not being available\n  info:rdflib:rdflib version: 4.2.1\n  /home/paul/.virtualenvs/extruct.wheel.test/lib/python3.5/site-packages/rdflib/plugins/parsers/structureddata.py:30: userwarning: html5lib not found! rdfa and microdata parsers will not be available.\n    'parsers will not be available.')\n  >>>\n  >>> html = \"\"\"<html>\n  ...  <head>\n  ...    ...\n  ...  </head>\n  ...  <body prefix=\"dc: http://purl.org/dc/terms/ schema: http://schema.org/\">\n  ...    <div resource=\"/alice/posts/trouble_with_bob\" typeof=\"schema:blogposting\">\n  ...       <h2 property=\"dc:title\">the trouble with bob</h2>\n  ...       ...\n  ...       <h3 property=\"dc:creator schema:creator\" resource=\"#me\">alice</h3>\n  ...       <div property=\"schema:articlebody\">\n  ...         <p>the trouble with bob is that he takes much better photos than i do:</p>\n  ...       </div>\n  ...      ...\n  ...    </div>\n  ...  </body>\n  ... </html>\n  ... \"\"\"\n  >>>\n  >>> rdfae = rdfaextractor()\n  >>> pp.pprint(rdfae.extract(html, base_url='http://www.example.com/index.html'))\n  [{'@id': 'http://www.example.com/alice/posts/trouble_with_bob',\n    '@type': ['http://schema.org/blogposting'],\n    'http://purl.org/dc/terms/creator': [{'@id': 'http://www.example.com/index.html#me'}],\n    'http://purl.org/dc/terms/title': [{'@value': 'the trouble with bob'}],\n    'http://schema.org/articlebody': [{'@value': '\\n'\n                                                 '        the trouble with bob '\n                                                 'is that he takes much better '\n                                                 'photos than i do:\\n'\n                                                 '      '}],\n    'http://schema.org/creator': [{'@id': 'http://www.example.com/index.html#me'}]}]\n\nyou'll get a list of expanded json-ld nodes.\n\n\nopen graph extraction\n++++++++++++++++++++++++++++++\n\n::\n\n  >>> import pprint\n  >>> pp = pprint.prettyprinter(indent=2)\n  >>>\n  >>> from extruct.opengraph import opengraphextractor\n  >>>\n  >>> html = \"\"\"<!doctype html public \"-//w3c//dtd xhtml 1.0 transitional//en\" \"https://www.w3.org/tr/xhtml1/dtd/xhtml1-transitional.dtd\">\n  ... <html xmlns=\"https://www.w3.org/1999/xhtml\" xmlns:og=\"https://ogp.me/ns#\" xmlns:fb=\"https://www.facebook.com/2008/fbml\">\n  ...  <head>\n  ...   <title>himanshu's open graph protocol</title>\n  ...   <meta http-equiv=\"content-type\" content=\"text/html;charset=windows-1252\" />\n  ...   <meta http-equiv=\"content-language\" content=\"en-us\" />\n  ...   <link rel=\"stylesheet\" type=\"text/css\" href=\"event-education.css\" />\n  ...   <meta name=\"verify-v1\" content=\"so4y/3alt7/7buub9f6ivxn0tv8uprwaccek7jkb1gs=\" >\n  ...   <meta property=\"og:title\" content=\"himanshu's open graph protocol\"/>\n  ...   <meta property=\"og:type\" content=\"article\"/>\n  ...   <meta property=\"og:url\" content=\"https://www.eventeducation.com/test.php\"/>\n  ...   <meta property=\"og:image\" content=\"https://www.eventeducation.com/images/982336_wedding_dayandouan_th.jpg\"/>\n  ...   <meta property=\"fb:admins\" content=\"himanshu160\"/>\n  ...   <meta property=\"og:site_name\" content=\"event education\"/>\n  ...   <meta property=\"og:description\" content=\"event education provides free courses on event planning and management to event professionals worldwide.\"/>\n  ...  </head>\n  ...  <body>\n  ...   <div id=\"fb-root\"></div>\n  ...   <script>(function(d, s, id) {\n  ...               var js, fjs = d.getelementsbytagname(s)[0];\n  ...               if (d.getelementbyid(id)) return;\n  ...                  js = d.createelement(s); js.id = id;\n  ...                  js.src = \"//connect.facebook.net/en_us/all.js#xfbml=1&appid=501839739845103\";\n  ...                  fjs.parentnode.insertbefore(js, fjs);\n  ...                  }(document, 'script', 'facebook-jssdk'));</script>\n  ...  </body>\n  ... </html>\"\"\"\n  >>>\n  >>> opengraphe = opengraphextractor()\n  >>> pp.pprint(opengraphe.extract(html))\n  [{\"namespace\": {\n        \"og\": \"http://ogp.me/ns#\"\n    },\n    \"properties\": [\n        [\n            \"og:title\",\n            \"himanshu's open graph protocol\"\n        ],\n        [\n            \"og:type\",\n            \"article\"\n        ],\n        [\n            \"og:url\",\n            \"https://www.eventeducation.com/test.php\"\n        ],\n        [\n            \"og:image\",\n            \"https://www.eventeducation.com/images/982336_wedding_dayandouan_th.jpg\"\n        ],\n        [\n            \"og:site_name\",\n            \"event education\"\n        ],\n        [\n            \"og:description\",\n            \"event education provides free courses on event planning and management to event professionals worldwide.\"\n        ]\n      ]\n   }]\n\n\nmicroformat extraction\n++++++++++++++++++++++++++++++\n\n::\n\n  >>> import pprint\n  >>> pp = pprint.prettyprinter(indent=2)\n  >>>\n  >>> from extruct.microformat import microformatextractor\n  >>>\n  >>> html = \"\"\"<!doctype html public \"-//w3c//dtd xhtml 1.0 transitional//en\" \"https://www.w3.org/tr/xhtml1/dtd/xhtml1-transitional.dtd\">\n  ... <html xmlns=\"https://www.w3.org/1999/xhtml\" xmlns:og=\"https://ogp.me/ns#\" xmlns:fb=\"https://www.facebook.com/2008/fbml\">\n  ...  <head>\n  ...   <title>himanshu's open graph protocol</title>\n  ...   <meta http-equiv=\"content-type\" content=\"text/html;charset=windows-1252\" />\n  ...   <meta http-equiv=\"content-language\" content=\"en-us\" />\n  ...   <link rel=\"stylesheet\" type=\"text/css\" href=\"event-education.css\" />\n  ...   <meta name=\"verify-v1\" content=\"so4y/3alt7/7buub9f6ivxn0tv8uprwaccek7jkb1gs=\" >\n  ...   <meta property=\"og:title\" content=\"himanshu's open graph protocol\"/>\n  ...   <article class=\"h-entry\">\n  ...    <h1 class=\"p-name\">microformats are amazing</h1>\n  ...    <p>published by <a class=\"p-author h-card\" href=\"http://example.com\">w. developer</a>\n  ...       on <time class=\"dt-published\" datetime=\"2013-06-13 12:00:00\">13<sup>th</sup> june 2013</time></p>\n  ...    <p class=\"p-summary\">in which i extoll the virtues of using microformats.</p>\n  ...    <div class=\"e-content\">\n  ...     <p>blah blah blah</p>\n  ...    </div>\n  ...   </article>\n  ...  </head>\n  ...  <body></body>\n  ... </html>\"\"\"\n  >>>\n  >>> microformate = microformatextractor()\n  >>> data = microformate.extract(html)\n  >>> pp.pprint(data)\n  [{\"type\": [\n        \"h-entry\"\n    ],\n    \"properties\": {\n        \"name\": [\n            \"microformats are amazing\"\n        ],\n        \"author\": [\n            {\n                \"type\": [\n                    \"h-card\"\n                ],\n                \"properties\": {\n                    \"name\": [\n                        \"w. developer\"\n                    ],\n                    \"url\": [\n                        \"http://example.com\"\n                    ]\n                },\n                \"value\": \"w. developer\"\n            }\n        ],\n        \"published\": [\n            \"2013-06-13 12:00:00\"\n        ],\n        \"summary\": [\n            \"in which i extoll the virtues of using microformats.\"\n        ],\n        \"content\": [\n            {\n                \"html\": \"\\n<p>blah blah blah</p>\\n\",\n                \"value\": \"\\nblah blah blah\\n\"\n            }\n        ]\n      }\n   }]\n\ndublincore extraction\n++++++++++++++++++++++++++++++\n::\n\n    >>> import pprint\n    >>> pp = pprint.prettyprinter(indent=2)\n    >>> from extruct.dublincore import dublincoreextractor\n    >>> html = '''<head profile=\"http://dublincore.org/documents/dcq-html/\">\n    ... <title>expressing dublin core in html/xhtml meta and link elements</title>\n    ... <link rel=\"schema.dc\" href=\"http://purl.org/dc/elements/1.1/\" />\n    ... <link rel=\"schema.dcterms\" href=\"http://purl.org/dc/terms/\" />\n    ...\n    ...\n    ... <meta name=\"dc.title\" lang=\"en\" content=\"expressing dublin core\n    ... in html/xhtml meta and link elements\" />\n    ... <meta name=\"dc.creator\" content=\"andy powell, ukoln, university of bath\" />\n    ... <meta name=\"dcterms.issued\" scheme=\"dcterms.w3cdtf\" content=\"2003-11-01\" />\n    ... <meta name=\"dc.identifier\" scheme=\"dcterms.uri\"\n    ... content=\"http://dublincore.org/documents/dcq-html/\" />\n    ... <link rel=\"dcterms.replaces\" hreflang=\"en\"\n    ... href=\"http://dublincore.org/documents/2000/08/15/dcq-html/\" />\n    ... <meta name=\"dcterms.abstract\" content=\"this document describes how\n    ... qualified dublin core metadata can be encoded\n    ... in html/xhtml &lt;meta&gt; elements\" />\n    ... <meta name=\"dc.format\" scheme=\"dcterms.imt\" content=\"text/html\" />\n    ... <meta name=\"dc.type\" scheme=\"dcterms.dcmitype\" content=\"text\" />\n    ... <meta name=\"dc.date.modified\" content=\"2001-07-18\" />\n    ... <meta name=\"dcterms.modified\" content=\"2001-07-18\" />'''\n    >>> dublinlde = dublincoreextractor()\n    >>> data = dublinlde.extract(html)\n    >>> pp.pprint(data)\n    [ { 'elements': [ { 'uri': 'http://purl.org/dc/elements/1.1/title',\n                        'content': 'expressing dublin core\\n'\n                                   'in html/xhtml meta and link elements',\n                        'lang': 'en',\n                        'name': 'dc.title'},\n                      { 'uri': 'http://purl.org/dc/elements/1.1/creator',\n                        'content': 'andy powell, ukoln, university of bath',\n                        'name': 'dc.creator'},\n                      { 'uri': 'http://purl.org/dc/elements/1.1/identifier',\n                        'content': 'http://dublincore.org/documents/dcq-html/',\n                        'name': 'dc.identifier',\n                        'scheme': 'dcterms.uri'},\n                      { 'uri': 'http://purl.org/dc/elements/1.1/format',\n                        'content': 'text/html',\n                        'name': 'dc.format',\n                        'scheme': 'dcterms.imt'},\n                      { 'uri': 'http://purl.org/dc/elements/1.1/type',\n                        'content': 'text',\n                        'name': 'dc.type',\n                        'scheme': 'dcterms.dcmitype'}],\n        'namespaces': { 'dc': 'http://purl.org/dc/elements/1.1/',\n                        'dcterms': 'http://purl.org/dc/terms/'},\n        'terms': [ { 'uri': 'http://purl.org/dc/terms/issued',\n                     'content': '2003-11-01',\n                     'name': 'dcterms.issued',\n                     'scheme': 'dcterms.w3cdtf'},\n                   { 'uri': 'http://purl.org/dc/terms/abstract',\n                     'content': 'this document describes how\\n'\n                                'qualified dublin core metadata can be encoded\\n'\n                                'in html/xhtml <meta> elements',\n                     'name': 'dcterms.abstract'},\n                   { 'uri': 'http://purl.org/dc/terms/modified',\n                     'content': '2001-07-18',\n                     'name': 'dc.date.modified'},\n                   { 'uri': 'http://purl.org/dc/terms/modified',\n                     'content': '2001-07-18',\n                     'name': 'dcterms.modified'},\n                   { 'uri': 'http://purl.org/dc/terms/replaces',\n                     'href': 'http://dublincore.org/documents/2000/08/15/dcq-html/',\n                     'hreflang': 'en',\n                     'rel': 'dcterms.replaces'}]}]\n\n\n\ncommand line tool\n-----------------\n\n*extruct* provides a command line tool that allows you to fetch a page and\nextract the metadata from it directly from the command line.\n\ndependencies\n++++++++++++\n\nthe command line tool depends on ``requests``, which is not installed by default\nwhen you install **extruct**. in order to use the command line tool, you can\ninstall **extruct** with the `cli` extra requirements::\n\n    pip install 'extruct[cli]'\n\n\nusage\n+++++\n\n::\n\n    extruct \"http://example.com\"\n\ndownloads \"http://example.com\" and outputs the microdata, json-ld and rdfa, open graph\nand microformat metadata to `stdout`.\n\nsupported parameters\n++++++++++++++++++++\n\nby default, the command line tool will try to extract all the supported\nmetadata formats from the page (currently microdata, json-ld, rdfa, open graph\nand microformat). if you want to restrict the output to just one or a subset of\nthose, you can pass their individual names collected in a list through 'syntaxes' argument.\n\nfor example, this command extracts only microdata and json-ld metadata from\n\"http://example.com\"::\n\n    extruct \"http://example.com\" --syntaxes microdata json-ld\n\nnb syntaxes names passed must correspond to these: microdata, json-ld, rdfa, opengraph, microformat\n\ndevelopment version\n-------------------\n\n::\n\n    mkvirtualenv extruct\n    pip install -r requirements-dev.txt\n\n\ntests\n-----\n\nrun tests in current environment::\n\n    py.test tests\n\n\nuse tox_ to run tests with different python versions::\n\n    tox\n\n\n.. _tox: https://testrun.org/tox/latest/\n.. _ogp: https://ogp.me/\n",
  "docs_url": null,
  "keywords": "extruct",
  "license": "",
  "name": "extruct",
  "package_url": "https://pypi.org/project/extruct/",
  "project_url": "https://pypi.org/project/extruct/",
  "project_urls": {
    "Homepage": "https://github.com/scrapinghub/extruct"
  },
  "release_url": "https://pypi.org/project/extruct/0.16.0/",
  "requires_dist": [
    "lxml",
    "pyrdfa3",
    "mf2py",
    "w3lib",
    "html-text (>=0.5.1)",
    "six",
    "jstyleson",
    "rdflib (<6.0.0) ; python_version < \"3.7\"",
    "rdflib-jsonld (<=0.5.0) ; python_version < \"3.7\"",
    "rdflib (>=6.0.0) ; python_version >= \"3.7\"",
    "requests ; extra == 'cli'"
  ],
  "requires_python": "",
  "summary": "extract embedded metadata from html markup",
  "version": "0.16.0",
  "releases": [],
  "developers": [
    "info@scrapinghub.com",
    "scrapinghub"
  ],
  "kwds": "scrapinghub extruct exslt xpath extracted",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_extruct",
  "homepage": "https://github.com/scrapinghub/extruct",
  "release_count": 24,
  "dependency_ids": [
    "pypi_html_text",
    "pypi_jstyleson",
    "pypi_lxml",
    "pypi_mf2py",
    "pypi_pyrdfa3",
    "pypi_rdflib",
    "pypi_rdflib_jsonld",
    "pypi_requests",
    "pypi_six",
    "pypi_w3lib"
  ],
  "documentation_summary": "The GitHub repository \"scrapinghub/extruct\" is a library designed to extract embedded metadata from HTML markup. It supports various metadata formats including W3C's HTML Microdata, JSON-LD, Microformat (via mf2py), Facebook's Open Graph (experimental), RDFa (via rdflib), and Dublin Core Metadata (DC-HTML-2003). The library offers features like all-in-one extraction, selecting specific syntaxes for extraction, uniform output structure, and retrieving HTML nodes for extracted metadata. It also provides individual extractors for each metadata format and a command-line tool for direct extraction from web pages. The project is licensed under the BSD-3-Clause license and has garnered 801 stars and 152 forks on GitHub.",
  "embedding": [
    -0.030572950839996338,
    0.04517662152647972,
    0.020205460488796234,
    -0.04958001896739006,
    0.012548287399113178,
    0.027354013174772263,
    -0.014673344790935516,
    -0.024302290752530098,
    -0.007838324643671513,
    -0.025862988084554672,
    0.013126581907272339,
    0.016791433095932007,
    -0.034112390130758286,
    0.013189287856221199,
    -0.011496209539473057,
    -0.0036230480764061213,
    0.010618317872285843,
    -0.014561865478754044,
    -0.01677749864757061,
    -0.022908810526132584,
    0.023856377229094505,
    0.004856277722865343,
    -0.023647354915738106,
    -0.006315947975963354,
    -0.013690941035747528,
    0.018463609740138054,
    0.0033582868054509163,
    -0.018045565113425255,
    -0.01177490595728159,
    0.012185982428491116,
    0.021375983953475952,
    -0.013934800401329994,
    -0.016763564199209213,
    -0.01530041079968214,
    -0.010221175849437714,
    -0.01167039480060339,
    -0.0012515191920101643,
    -0.009851903654634953,
    0.02437196485698223,
    0.03416812792420387,
    0.005706300493329763,
    0.010994557291269302,
    0.006692187860608101,
    -0.010778567753732204,
    -0.01776687055826187,
    0.007678074762225151,
    0.0026301934849470854,
    -0.010095763020217419,
    0.0014683795161545277,
    0.01702832616865635,
    0.014798757620155811,
    0.014338908717036247,
    -0.005054848734289408,
    -0.023410463705658913,
    -0.010646186769008636,
    -0.017948022112250328,
    0.017446368932724,
    0.03586817532777786,
    0.01822671853005886,
    -0.008590804412961006,
    0.026044141501188278,
    -0.00988674070686102,
    -0.04679305851459503,
    0.010325687006115913,
    -0.0016765305772423744,
    -0.0015276024350896478,
    -0.018839849159121513,
    0.0016408227384090424,
    -0.0064552961848676205,
    -0.006911660544574261,
    0.012882722541689873,
    0.03907318040728569,
    0.004856277722865343,
    0.011370796710252762,
    0.047489799559116364,
    -0.017516043037176132,
    -0.04386674985289574,
    0.0005948417820036411,
    0.02151533029973507,
    -0.015272540971636772,
    -0.004434749949723482,
    -0.005054848734289408,
    0.007336672395467758,
    0.032245125621557236,
    0.009475664235651493,
    0.022727658972144127,
    0.01082037203013897,
    0.03650917485356331,
    0.009419924579560757,
    -0.006754894275218248,
    0.0038773580454289913,
    -0.0017392372246831656,
    0.010994557291269302,
    0.02640644647181034,
    -0.01960626430809498,
    0.03185495361685753,
    -0.016763564199209213,
    0.012583124451339245,
    0.011572851799428463,
    0.0058700344525277615,
    -0.017084063962101936,
    0.023521943017840385,
    -0.02420474775135517,
    -0.017000455409288406,
    -0.026852359995245934,
    0.005399735178798437,
    0.017265217378735542,
    -0.017181608825922012,
    0.00016449595568701625,
    0.017418500036001205,
    -0.010674056597054005,
    0.040633875876665115,
    0.013948734849691391,
    -0.03355499729514122,
    -0.012464678846299648,
    -0.011252351105213165,
    0.027103185653686523,
    -0.01773899979889393,
    -0.00507575087249279,
    -0.007921934127807617,
    -0.014380713924765587,
    0.05100136622786522,
    0.00117574876639992,
    -0.025235923007130623,
    0.011635557748377323,
    -0.012966331094503403,
    0.0023079512175172567,
    -0.012583124451339245,
    -0.016707824543118477,
    -0.03227299824357033,
    0.022448962554335594,
    -0.023396529257297516,
    0.010590448044240475,
    0.011405633762478828,
    -0.03168773651123047,
    0.035199303179979324,
    -0.022184200584888458,
    0.006145246792584658,
    -0.025849053636193275,
    -0.026559729129076004,
    0.03715017810463905,
    0.019884958863258362,
    1.3295214557729196e-05,
    -0.002393301809206605,
    -0.006145246792584658,
    0.0006135666626505554,
    0.0010067892726510763,
    0.003220680635422468,
    0.03338778018951416,
    0.00701965531334281,
    0.038683004677295685,
    0.0007206904119811952,
    -0.03676000237464905,
    0.016470933333039284,
    0.0007211259217001498,
    0.011558916419744492,
    0.011238415725529194,
    0.014687279239296913,
    0.015606976114213467,
    -0.0011287188390269876,
    -0.0012706795241683722,
    0.013628234155476093,
    0.004382494371384382,
    -0.013795452192425728,
    0.019508719444274902,
    0.04456349089741707,
    0.0026423863600939512,
    -0.035227175801992416,
    -0.01581599749624729,
    0.010033056139945984,
    0.0031562321819365025,
    0.013732745312154293,
    -0.04002074524760246,
    -0.016512738540768623,
    0.019383307546377182,
    0.02250470221042633,
    0.022267811000347137,
    0.019968567416071892,
    -0.040968310087919235,
    -0.006364719942212105,
    -0.0007929772255010903,
    0.005807328037917614,
    0.015913542360067368,
    0.0026493538171052933,
    -0.003981869202107191,
    -0.012889689765870571,
    0.007378476671874523,
    -0.006368203554302454,
    0.008193662390112877,
    0.006601611617952585,
    0.014756953343749046,
    0.02537527121603489,
    -0.0008299915352836251,
    -0.0024472991935908794,
    -0.5939568877220154,
    0.00712068285793066,
    0.008611706085503101,
    -0.028259774670004845,
    0.0018324261764064431,
    -0.0035359554458409548,
    -0.005295224022120237,
    0.017000455409288406,
    -0.00627066008746624,
    0.02487361803650856,
    -0.022657984867691994,
    0.019383307546377182,
    0.020581699907779694,
    -0.025180183351039886,
    -0.0005469408934004605,
    -0.012980266474187374,
    -0.02292274497449398,
    -0.03575669601559639,
    0.03497634828090668,
    0.026587598025798798,
    -0.017098000273108482,
    0.029346689581871033,
    -0.004859761334955692,
    -0.003863423364236951,
    -0.029597515240311623,
    0.006504067685455084,
    0.004082896281033754,
    -0.01440858282148838,
    -0.0007912353612482548,
    -0.003978385590016842,
    -0.031074604019522667,
    0.026476120576262474,
    0.005114071536809206,
    0.0038773580454289913,
    0.05618511512875557,
    -0.009587142616510391,
    -0.028538471087813377,
    0.008681380189955235,
    0.0012924526818096638,
    0.042919185012578964,
    -0.0046820929273962975,
    0.003217197023332119,
    0.01707012951374054,
    -0.006894242484122515,
    0.0006671285373158753,
    0.0019230024190619588,
    0.011747036129236221,
    0.04406183585524559,
    -0.023898182436823845,
    -0.001015498535707593,
    -0.019466916099190712,
    -0.0008243304910138249,
    0.003184101777151227,
    -0.004431266337633133,
    -0.011893351562321186,
    -0.0055530178360641,
    0.031910691410303116,
    -0.00938508752733469,
    -0.00730880256742239,
    -0.013934800401329994,
    0.022323548793792725,
    0.025849053636193275,
    -0.02795320935547352,
    0.0003039528091903776,
    -0.004459136165678501,
    -0.005922290030866861,
    0.019494784995913506,
    0.007664139848202467,
    -0.010639219544827938,
    -0.016512738540768623,
    0.007747748866677284,
    0.033861562609672546,
    0.008110053837299347,
    -0.0024769105948507786,
    0.020567765459418297,
    0.02786960080265999,
    0.01719554327428341,
    -0.00817972794175148,
    0.004560163244605064,
    0.02856633998453617,
    0.01179580856114626,
    -0.02940242737531662,
    -0.01956445910036564,
    -0.020539894700050354,
    0.04620779678225517,
    -0.016136499121785164,
    -0.03963056951761246,
    -0.03076803870499134,
    0.020024307072162628,
    -0.014255300164222717,
    -0.005849132314324379,
    0.019007066264748573,
    0.016038954257965088,
    -0.014311039820313454,
    -0.025890858843922615,
    0.02308996394276619,
    -0.012262623757123947,
    0.01374667976051569,
    0.0009136003209277987,
    -0.01694471761584282,
    -0.019243959337472916,
    -0.01856115274131298,
    0.007162487134337425,
    -0.01860295794904232,
    0.034614041447639465,
    0.017961956560611725,
    -0.014561865478754044,
    -0.002403752878308296,
    0.008848598226904869,
    -0.029876211658120155,
    -0.01665208674967289,
    -0.010973654687404633,
    -0.020163655281066895,
    -0.011099068447947502,
    -0.008778924122452736,
    -0.02342439815402031,
    0.019550524652004242,
    -0.0003903921169694513,
    0.009907642379403114,
    -0.003908711485564709,
    0.00603028479963541,
    -0.0001502345548942685,
    -0.0131823206320405,
    0.010116664692759514,
    0.02745155617594719,
    0.00805431418120861,
    0.014185626059770584,
    -0.04294705390930176,
    -0.02038661204278469,
    0.0023723996710032225,
    0.020776785910129547,
    0.023884247988462448,
    0.029012253507971764,
    -0.01517499703913927,
    0.04506514221429825,
    0.03263530135154724,
    0.012820015661418438,
    0.003650917671620846,
    0.0007947190315462649,
    -0.016582412645220757,
    -0.005727202631533146,
    0.020693177357316017,
    0.03218938782811165,
    -0.021320244297385216,
    -0.01627584546804428,
    -0.011544981971383095,
    -0.0006558065069839358,
    -0.008402684703469276,
    0.017209477722644806,
    0.005354446824640036,
    -0.02466459572315216,
    0.014011441729962826,
    0.00038973893970251083,
    0.02254650555551052,
    -0.001228004228323698,
    -0.0332205630838871,
    -0.005375348962843418,
    -0.020539894700050354,
    -0.019536590203642845,
    0.0003067833313252777,
    0.0035585996229201555,
    0.026671206578612328,
    -0.014715149067342281,
    -0.02122269943356514,
    -0.023076029494404793,
    -0.0012741632526740432,
    -0.02113909088075161,
    0.010555610992014408,
    -0.01233229786157608,
    -0.030322125181555748,
    0.015579106286168098,
    0.0054728928953409195,
    -0.009566240012645721,
    -0.023494072258472443,
    0.007636270485818386,
    0.04576188325881958,
    -0.011600720696151257,
    -0.011412600986659527,
    -0.01752997748553753,
    -0.01910461112856865,
    0.017906218767166138,
    0.010987590067088604,
    0.00017015697085298598,
    0.0007485600071959198,
    0.003478474449366331,
    0.04489792510867119,
    0.009287544526159763,
    0.0020292552653700113,
    0.005215099081397057,
    -0.009475664235651493,
    -0.013781516812741756,
    -0.009231804870069027,
    -0.0014884108677506447,
    0.035812437534332275,
    0.01782260835170746,
    0.03007129766047001,
    0.0038947765715420246,
    0.005476376507431269,
    -0.011287188157439232,
    0.025068705901503563,
    0.00451487535610795,
    0.018547218292951584,
    -0.01694471761584282,
    -0.00794980302453041,
    0.012311396189033985,
    -0.0015032165683805943,
    0.0061731161549687386,
    -0.029012253507971764,
    -0.017181608825922012,
    0.008542031981050968,
    0.024817878380417824,
    -0.020957939326763153,
    -0.011983928270637989,
    0.008186695165932178,
    0.004253597464412451,
    0.0011670395033434033,
    0.007503889966756105,
    0.0023305953945964575,
    -0.011677362024784088,
    -0.0015728905564174056,
    0.04347657412290573,
    -0.014311039820313454,
    -0.006427426356822252,
    -0.009245739318430424,
    0.004981691017746925,
    0.020289069041609764,
    -0.0001456622121622786,
    0.001511925831437111,
    -0.011635557748377323,
    -0.05718841776251793,
    0.005072267260402441,
    0.031409040093421936,
    0.010883078910410404,
    -0.016206173226237297,
    0.010472002439200878,
    -0.0010930108837783337,
    0.01326592918485403,
    -0.02055382914841175,
    0.035812437534332275,
    -0.007110231555998325,
    -0.004337206482887268,
    0.035227175801992416,
    0.023577680811285973,
    -0.015105322934687138,
    0.012339265085756779,
    0.009998219087719917,
    0.04905049502849579,
    0.009621979668736458,
    -0.0026963837444782257,
    -0.016958652064204216,
    0.006483165547251701,
    0.01981528475880623,
    0.0030935255344957113,
    0.005483343731611967,
    0.02512444369494915,
    -0.001267195912078023,
    -0.0077338139526546,
    0.029207341372966766,
    0.01538401935249567,
    0.020080046728253365,
    0.001267195912078023,
    -0.019048871472477913,
    0.01698652096092701,
    0.021166961640119553,
    0.03742887079715729,
    -0.023452268913388252,
    -0.01355856005102396,
    -0.017906218767166138,
    -0.005960610695183277,
    -0.02363342046737671,
    -0.005758556071668863,
    -0.008771956898272038,
    -0.026364641264081,
    -0.004880663473159075,
    0.03221725672483444,
    0.00813792273402214,
    -0.012241722084581852,
    0.008792858570814133,
    0.0012192949652671814,
    0.013321668840944767,
    -0.02508264034986496,
    -0.011788840405642986,
    0.026517923921346664,
    0.019871024414896965,
    -0.010987590067088604,
    -0.01619223691523075,
    -0.012088438495993614,
    -0.023034224286675453,
    -0.01748817414045334,
    -0.0012079729931429029,
    0.0008953108917921782,
    0.003034302731975913,
    0.027590904384851456,
    -0.012750341556966305,
    0.002112864051014185,
    0.008096118457615376,
    0.03135329857468605,
    -0.011830645613372326,
    0.008855565451085567,
    -0.026671206578612328,
    0.03252382203936577,
    0.002874052384868264,
    -0.001870746840722859,
    0.01635945588350296,
    0.06705425679683685,
    0.0075596291571855545,
    -0.02400965988636017,
    -0.01015150174498558,
    0.02009398117661476,
    -0.006019833497703075,
    -0.024803943932056427,
    0.015523367561399937,
    0.0013725777389481664,
    0.0022330516949295998,
    -0.004859761334955692,
    0.013927832245826721,
    -0.003992320038378239,
    -0.0009257932542823255,
    0.023884247988462448,
    -0.003710140474140644,
    0.0112105468288064,
    -0.02367522567510605,
    -0.003259001299738884,
    -0.004588033072650433,
    0.01977348141372204,
    0.040633875876665115,
    0.007998575456440449,
    0.013816353864967823,
    -0.008632608689367771,
    0.003999287728220224,
    -0.027465490624308586,
    -0.0050269789062440395,
    -0.0197316762059927,
    -0.0024542666506022215,
    0.0011914253700524569,
    -0.005849132314324379,
    0.020024307072162628,
    0.0061731161549687386,
    0.009134260937571526,
    -0.0022678887471556664,
    0.000780348782427609,
    0.0028810198418796062,
    0.0012071020901203156,
    0.017878348007798195,
    0.008500227704644203,
    -0.0036125967744737864,
    0.023438332602381706,
    0.014631539583206177,
    0.017920153215527534,
    0.011475307866930962,
    0.008702282793819904,
    0.014046278782188892,
    -0.002030997071415186,
    -0.0076989769004285336,
    0.005347479600459337,
    -0.017948022112250328,
    -0.010938817635178566,
    0.031827084720134735,
    -0.049412801861763,
    0.01918821968138218,
    0.039435483515262604,
    0.020985808223485947,
    0.00608254037797451,
    0.018366066738963127,
    -0.006288078613579273,
    0.041051920503377914,
    0.006580709479749203,
    0.012882722541689873,
    0.0026040656957775354,
    -0.026754815131425858,
    -0.020442351698875427,
    0.01860295794904232,
    0.020790722221136093,
    -0.013112646527588367,
    0.011579819023609161,
    0.01084127463400364,
    -0.020902199670672417,
    -0.024734269827604294,
    0.003220680635422468,
    -0.023452268913388252,
    0.03126969188451767,
    0.008597771637141705,
    -0.006065121851861477,
    -0.05178171768784523,
    0.0067026386968791485,
    -0.0203448086977005,
    0.015049584209918976,
    -0.025180183351039886,
    0.0023497557267546654,
    0.007096296641975641,
    -0.001580728916451335,
    -0.014380713924765587,
    -0.037930525839328766,
    -0.0016599830705672503,
    -0.0134958541020751,
    -0.025221988558769226,
    -0.028050752356648445,
    0.018714435398578644,
    0.0012071020901203156,
    -0.0006179212941788137,
    0.02113909088075161,
    -0.018045565113425255,
    0.039017438888549805,
    -0.017794739454984665,
    -0.016122562810778618,
    -0.035728827118873596,
    0.011405633762478828,
    -0.050806280225515366,
    0.020247263833880424,
    -0.009141229093074799,
    -0.042166706174612045,
    -0.006315947975963354,
    0.01914641447365284,
    0.02529166266322136,
    -0.010242077521979809,
    -0.00730880256742239,
    0.026587598025798798,
    0.005525148008018732,
    0.026517923921346664,
    0.026754815131425858,
    0.04002074524760246,
    0.01564878039062023,
    0.01118964422494173,
    0.0027538647409528494,
    0.005908355116844177,
    -0.008785891346633434,
    -0.005493795033544302,
    -0.008625641465187073,
    0.01690291240811348,
    -0.0032799034379422665,
    -0.014095050282776356,
    0.0026702559553086758,
    0.0035638250410556793,
    -0.004601967521011829,
    0.022030917927622795,
    0.005821262486279011,
    0.0018359099049121141,
    0.0003270323504693806,
    0.006699155084788799,
    -0.006566774565726519,
    -0.006162665318697691,
    0.02437196485698223,
    -0.006336850114166737,
    -0.010200273245573044,
    -0.015453693456947803,
    -0.030963124707341194,
    0.002564003225415945,
    0.017836544662714005,
    -0.01254132017493248,
    0.024734269827604294,
    -0.02416294254362583,
    -0.022142397239804268,
    -0.012339265085756779,
    -0.0034924091305583715,
    -0.00940599013119936,
    0.01789228245615959,
    -0.010485936887562275,
    -0.004643772263079882,
    -0.004382494371384382,
    -0.030712299048900604,
    -0.0024873618967831135,
    -0.01023511029779911,
    -0.04498153552412987,
    0.0015223769005388021,
    0.006587676703929901,
    -0.005117555148899555,
    -0.02715892530977726,
    -0.0203448086977005,
    -0.021989114582538605,
    -0.02491542138159275,
    -0.02711712010204792,
    0.012854852713644505,
    0.003657884895801544,
    0.022058788686990738,
    -0.006514518987387419,
    0.023103898391127586,
    0.0033791889436542988,
    -0.0017192059895023704,
    -0.01517499703913927,
    -0.01015150174498558,
    -0.007141584996134043,
    0.005950159393250942,
    0.03302547708153725,
    0.012158112600445747,
    0.023076029494404793,
    -0.0010076601756736636,
    0.03965844213962555,
    0.004166505299508572,
    0.015606976114213467,
    0.00176710681989789,
    0.012938462197780609,
    0.006448328495025635,
    0.008583837188780308,
    -0.0010633993661031127,
    -0.0014318006578832865,
    0.02172435261309147,
    -0.00611389335244894,
    -0.010081827640533447,
    -0.01195605844259262,
    0.022602245211601257,
    -0.0011922962730750442,
    0.010701926425099373,
    0.008562934584915638,
    -0.00672702444717288,
    0.0026859326753765345,
    0.017725065350532532,
    0.0072879004292190075,
    0.027688447386026382,
    -0.05459654703736305,
    0.0011313315480947495,
    0.01789228245615959,
    0.01415775716304779,
    0.016331585124135017,
    0.021947309374809265,
    0.022825201973319054,
    -0.03684361279010773,
    -0.016052888706326485,
    -0.0019090676214545965,
    -0.007092813029885292,
    0.009621979668736458,
    0.015593040734529495,
    -0.018965262919664383,
    -0.02433016151189804,
    0.010625285096466541,
    0.01910461112856865,
    0.010701926425099373,
    0.020330872386693954,
    -0.0007246095919981599,
    0.003366996068507433,
    0.013467984274029732,
    0.023243246600031853,
    8.186695049516857e-05,
    0.017181608825922012,
    -0.01956445910036564,
    -0.03391730412840843,
    -0.020999742671847343,
    -0.0134958541020751,
    -0.0286499485373497,
    0.01757178269326687,
    -0.0024734269827604294,
    0.0034871837124228477,
    0.018881654366850853,
    -0.01673569530248642,
    4.384562998893671e-05,
    -0.015370083972811699,
    -0.0038947765715420246,
    0.05468015372753143,
    0.008709250018000603,
    0.02042841725051403,
    0.040689617395401,
    0.00042522914009168744,
    0.011322025209665298,
    0.010346588678658009,
    -0.017836544662714005,
    -0.005152392201125622,
    0.04177653044462204,
    0.026671206578612328,
    -0.031576257199048996,
    -0.0030691397842019796,
    -0.020818591117858887,
    0.003807684173807502,
    -0.008688347414135933,
    0.0016338552813977003,
    0.027883535251021385,
    0.005312642548233271,
    -0.010757665149867535,
    -0.011454405263066292,
    -0.02063743956387043,
    -0.011308089829981327,
    0.013837256468832493,
    -0.01931363344192505,
    -0.017906218767166138,
    -0.001940420945174992,
    0.016930781304836273,
    -0.00940599013119936,
    0.05167023837566376,
    -0.008778924122452736,
    0.026935968548059464,
    0.01768326200544834,
    0.011802775785326958,
    0.0011835871264338493,
    -0.002818313194438815,
    -0.01337044034153223,
    0.02940242737531662,
    -0.000914471223950386,
    0.03146477788686752,
    -0.010395361110568047,
    -0.009552305564284325,
    0.02375883422791958,
    0.0195226538926363,
    -0.01092488318681717,
    -0.020484155043959618,
    0.010694959200918674,
    0.03982565924525261,
    -0.005006076768040657,
    0.022574376314878464,
    -0.014115951955318451,
    3.227865818189457e-05,
    -0.016247976571321487,
    0.0003407493932172656,
    -0.015230736695230007,
    -0.006845470517873764,
    -0.013635201379656792,
    -0.03007129766047001,
    0.008033412508666515,
    -0.01025601290166378,
    -0.03425173833966255,
    -0.009893707931041718,
    -0.012555254623293877,
    0.008117021061480045,
    0.008026444353163242,
    -0.014952040277421474,
    0.02682448923587799,
    -0.013656103983521461,
    -0.03210577741265297,
    0.009454761631786823,
    -0.028928644955158234,
    0.018839849159121513,
    -0.000931018847040832,
    -0.0074272481724619865,
    -0.01585780270397663,
    0.03754035010933876,
    -0.014868431724607944,
    -0.003999287728220224,
    0.00826333649456501,
    -0.007845292799174786,
    -0.016303716227412224,
    -0.013537658378481865,
    0.013189287856221199,
    0.0054485066793859005,
    -0.0011452663457021117,
    -0.01727915182709694,
    -0.019285762682557106,
    0.0009745650459080935,
    0.008291206322610378,
    0.0014413808239623904,
    0.005065299570560455,
    -0.00787316169589758,
    0.002168603241443634,
    -0.022741593420505524,
    0.006106926128268242,
    0.01243680901825428,
    -0.029625384137034416,
    0.039769917726516724,
    -0.022894876077771187,
    -0.007482987362891436,
    0.015021714381873608,
    -0.009538370184600353,
    0.008590804412961006,
    -0.00911335926502943,
    0.004204825963824987,
    0.015788128599524498,
    -0.022602245211601257,
    -0.0005970190977677703,
    0.017543913796544075,
    0.037401001900434494,
    -0.030043428763747215,
    0.007587498519569635,
    -0.022267811000347137,
    -0.02623922750353813,
    -0.02661546878516674,
    0.0344746932387352,
    -0.015579106286168098,
    -0.017334891483187675,
    0.017878348007798195,
    0.010583480820059776,
    -0.007315769791603088,
    -3.7830803194083273e-05,
    -0.04796358197927475,
    -0.023354724049568176,
    -0.044619228690862656,
    0.004229211714118719,
    -0.008758021518588066,
    -0.004748282954096794,
    -0.02191944047808647,
    0.021125156432390213,
    0.005096653010696173,
    -0.04679305851459503,
    -0.035227175801992416,
    0.0014030601596459746,
    -0.04322575032711029,
    -0.029012253507971764,
    -0.02088826522231102,
    0.017585717141628265,
    0.019048871472477913,
    0.0026301934849470854,
    -0.0035742761101573706,
    0.025472814217209816,
    -0.008820728398859501,
    0.028622079640626907,
    -0.014352844096720219,
    0.016554541885852814,
    0.017641456797719002,
    0.0009075038251467049,
    0.012339265085756779,
    -0.020818591117858887,
    -0.031966432929039,
    -0.004103798419237137,
    -0.018672632053494453,
    0.019202154129743576,
    -0.003964450675994158,
    0.04314213991165161,
    -0.006106926128268242,
    -0.004957305267453194,
    -0.022908810526132584,
    0.00173401169013232,
    0.002593614626675844,
    0.0017644939944148064,
    0.01818491332232952,
    -0.022811267524957657,
    0.0035951784811913967,
    0.003772847121581435,
    0.015370083972811699,
    -0.021027613431215286,
    0.00706842727959156,
    -0.00035577284870669246,
    -0.01387209352105856,
    -0.0017235606210306287,
    -0.006176600232720375,
    -0.019884958863258362,
    -0.005479860119521618,
    -0.023480137810111046,
    0.00951050128787756,
    0.012485580518841743,
    0.004027157090604305,
    0.01948085054755211,
    0.0012384552974253893,
    -0.002321886131539941,
    -0.021166961640119553,
    0.01564878039062023,
    -0.01652667298913002,
    -0.01736276037991047,
    -0.006155698094516993,
    -0.026420380920171738,
    -0.011788840405642986,
    -0.01084127463400364,
    0.026044141501188278,
    0.0015084421029314399,
    0.04094044119119644,
    -0.008493260480463505,
    -0.015537302009761333,
    -0.007921934127807617,
    -0.029541775584220886,
    0.010311751626431942,
    -0.018407870084047318,
    -0.029346689581871033,
    0.01004699058830738,
    0.008103086613118649,
    -0.015593040734529495,
    -0.010478969663381577,
    0.002668514149263501,
    -0.02795320935547352,
    0.004034124780446291,
    0.0012071020901203156,
    -0.006110409740358591,
    -0.03745674341917038,
    0.014715149067342281,
    -0.00010331347584724426,
    0.0001133291152655147,
    0.027061382308602333,
    0.14681705832481384,
    -0.005887452978640795,
    0.003905227640643716,
    0.01677749864757061,
    0.0027225115336477757,
    -0.032579563558101654,
    0.0011391699081286788,
    0.01690291240811348,
    -0.0220030490309,
    -0.00019367194909136742,
    0.0018463609740138054,
    0.013363473117351532,
    -0.011071198619902134,
    -0.0005491182091645896,
    0.026880228891968727,
    0.00014304943033494055,
    -0.013481918722391129,
    -0.018714435398578644,
    -0.018449675291776657,
    -0.01499384455382824,
    0.008130955509841442,
    -0.006612062454223633,
    -0.020233329385519028,
    -0.040801092982292175,
    0.033694345504045486,
    -0.03929613530635834,
    0.006632964592427015,
    0.004452168475836515,
    -0.007462085224688053,
    0.021891571581363678,
    -0.005330061074346304,
    -0.010883078910410404,
    -0.0025796799454838037,
    -0.0010590448509901762,
    0.002175570698454976,
    -0.0026702559553086758,
    0.010276914574205875,
    0.017557848244905472,
    0.014234398491680622,
    0.029012253507971764,
    -0.0027904435992240906,
    -0.032328736037015915,
    -0.007852260023355484,
    -0.029430298134684563,
    0.012861819937825203,
    -0.0309352558106184,
    -0.015606976114213467,
    -0.00201880419626832,
    -0.0004010609700344503,
    0.020665308460593224,
    -0.043086402118206024,
    -0.007218226324766874,
    0.03483700007200241,
    0.031241821125149727,
    -0.019578393548727036,
    -0.021961243823170662,
    0.021153027191758156,
    0.03890595957636833,
    0.021320244297385216,
    0.016498802229762077,
    -0.02371702902019024,
    0.05320306494832039,
    0.0038669069763273,
    0.004197858273983002,
    -0.02898438461124897,
    0.018296392634510994,
    -0.00884163100272417,
    -0.028872905299067497,
    0.0109039805829525,
    0.007176422048360109,
    -0.003353061154484749,
    -0.004288434516638517,
    -0.018463609740138054,
    -0.005173294339329004,
    -0.007075394503772259,
    -0.03168773651123047,
    0.018742306157946587,
    0.011767938733100891,
    0.022226005792617798,
    0.03149264678359032,
    -0.003957482986152172,
    0.006138279568403959,
    -0.017669325694441795,
    0.00029393719159998,
    -0.025152314454317093,
    -0.032412346452474594,
    0.016289781779050827,
    -0.0028531502466648817,
    0.007531759329140186,
    -0.055376894772052765,
    -0.0023898181971162558,
    -0.029764732345938683,
    -0.008569901809096336,
    -0.002395043848082423,
    0.020832525566220284,
    0.029792603105306625,
    0.016596347093582153,
    0.029290949925780296,
    -0.03547799959778786,
    0.012534352950751781,
    -0.03210577741265297,
    0.07485774159431458,
    0.01960626430809498,
    0.021794026717543602,
    -0.006852437742054462,
    0.006200985983014107,
    -0.02761877328157425,
    0.0015371826011687517,
    -0.009656816720962524,
    0.014143821783363819,
    0.01740456558763981,
    -0.028677817434072495,
    -0.010325687006115913,
    -0.010646186769008636,
    0.004264048766344786,
    0.002746897516772151,
    0.005054848734289408,
    -0.025723639875650406,
    0.01893739402294159,
    -0.005016528069972992,
    -0.00494337035343051,
    -0.004633320961147547,
    0.0353107824921608,
    0.012764276936650276,
    0.0031126858666539192,
    -0.00669567147269845,
    -0.010053957812488079,
    0.012924526818096638,
    0.004138635471463203,
    -0.02711712010204792,
    0.00632291566580534,
    0.004448684863746166,
    0.020985808223485947,
    -0.01196302566677332,
    0.0009902417659759521,
    -0.021027613431215286,
    -0.017878348007798195,
    -0.0035742761101573706,
    0.0026528374291956425,
    0.01326592918485403,
    -0.008360880427062511,
    -0.01169129740446806,
    0.029708992689847946,
    -0.006340334191918373,
    -0.007775618229061365,
    -0.016847172752022743,
    0.003232873510569334,
    -0.0018794561037793756,
    -0.0005634884582832456,
    -0.0017566557507961988,
    0.006845470517873764,
    -0.008611706085503101,
    0.02325718104839325,
    -0.02233748510479927,
    0.015509432181715965,
    -0.029597515240311623,
    -0.006577225401997566,
    -0.01491023600101471,
    -0.015133192762732506,
    -0.034948479384183884,
    -0.048939015716314316,
    -0.004772669170051813,
    0.007754716090857983,
    0.002691158326342702,
    -0.0336386077105999,
    -0.00664341589435935,
    -0.17624734342098236,
    0.0195226538926363,
    0.021153027191758156,
    -0.04726684093475342,
    0.006887274794280529,
    -0.005413669627159834,
    0.006949981674551964,
    -0.002238277345895767,
    -0.010534708388149738,
    -0.00412121694535017,
    0.031046735122799873,
    0.004783120006322861,
    -0.056575287133455276,
    -0.04565040394663811,
    -0.01968987286090851,
    -0.0012680668151006103,
    0.0009057620191015303,
    -0.006636448670178652,
    0.03628621995449066,
    0.010297817178070545,
    0.03659278526902199,
    -0.008409651927649975,
    0.004668158013373613,
    0.011907286942005157,
    0.03701082989573479,
    -0.0199267640709877,
    0.001792363589629531,
    0.010966687463223934,
    0.0054728928953409195,
    -0.004873696248978376,
    -0.0019264861475676298,
    -0.014603670686483383,
    0.011301122605800629,
    -0.010576513595879078,
    0.011440470814704895,
    0.016791433095932007,
    0.02583511918783188,
    0.001078205183148384,
    -0.01415775716304779,
    0.02579331398010254,
    0.008339977823197842,
    0.011558916419744492,
    0.0010477227624505758,
    0.0009136003209277987,
    0.0024351063184440136,
    0.02088826522231102,
    -0.02088826522231102,
    -0.012443776242434978,
    0.017961956560611725,
    -0.024385899305343628,
    0.007914965972304344,
    -0.009649848565459251,
    0.011628590524196625,
    -0.013823321089148521,
    0.01665208674967289,
    0.018742306157946587,
    0.00036230479599907994,
    0.02491542138159275,
    0.012032699771225452,
    -0.02168254926800728,
    -0.013140516355633736,
    -0.03333204239606857,
    0.027772055938839912,
    -0.023354724049568176,
    -0.001949130091816187,
    -0.017711130902171135,
    -0.014756953343749046,
    0.006169632542878389,
    -0.003762396052479744,
    -0.004034124780446291,
    -0.008096118457615376,
    0.009350250475108624,
    2.291281134603196e-06,
    0.019452979788184166,
    -0.003995804116129875,
    0.03745674341917038,
    -0.028385186567902565,
    -0.00033116922713816166,
    0.004333722870796919,
    -0.004946853965520859,
    -0.032663170248270035,
    0.03483700007200241,
    0.005208131391555071,
    0.009036717936396599,
    0.026587598025798798,
    -0.012388037517666817,
    -0.0018272006418555975,
    -0.019174285233020782,
    -0.004169988911598921,
    0.013022070750594139,
    0.004678608849644661,
    -0.010973654687404633,
    0.004549712408334017,
    -0.00014805725368205458,
    0.02097187377512455,
    0.008813761174678802,
    0.004518358968198299,
    0.016875043511390686,
    0.013844223693013191,
    -0.0242883563041687,
    0.007928901351988316,
    -0.014603670686483383,
    -0.003950515761971474,
    0.01405324600636959,
    0.019299697130918503,
    0.024274421855807304,
    -0.022825201973319054,
    0.006855921354144812,
    0.03383369371294975,
    -0.019494784995913506,
    -0.009949447587132454,
    -0.013697908259928226,
    0.029792603105306625,
    -0.009907642379403114,
    0.003598662093281746,
    0.0369550883769989,
    0.017557848244905472,
    -0.01499384455382824,
    0.01291755959391594,
    -0.029681123793125153,
    0.029207341372966766,
    0.011788840405642986,
    -0.025486748665571213,
    0.0005447635776363313,
    -0.022239940240979195,
    -0.04999806359410286,
    -0.10529135167598724,
    -0.015147127211093903,
    0.0013090003049001098,
    -0.00940599013119936,
    -0.016247976571321487,
    -0.01686110720038414,
    -0.008723184466362,
    0.009475664235651493,
    0.017725065350532532,
    0.0154676279053092,
    -0.031241821125149727,
    0.028259774670004845,
    -0.00299075641669333,
    -0.009176066145300865,
    0.0030883001163601875,
    0.023354724049568176,
    0.016624215990304947,
    0.0010033055441454053,
    -0.005535599309951067,
    0.027772055938839912,
    -0.013036005198955536,
    -0.017627522349357605,
    -0.013467984274029732,
    -0.0024995547719299793,
    0.0035446647088974714,
    0.03227299824357033,
    -0.03815348073840141,
    0.02367522567510605,
    0.021738287061452866,
    -0.00959410984069109,
    -0.011015458963811398,
    -0.03168773651123047,
    0.026183489710092545,
    -0.017989827319979668,
    -0.003654401283711195,
    -0.01975954696536064,
    -0.028343383222818375,
    -0.016805369406938553,
    0.015425823628902435,
    -0.039714179933071136,
    0.00632291566580534,
    -0.009684685617685318,
    0.02300635538995266,
    -0.009733458049595356,
    -0.012631895951926708,
    0.007357574533671141,
    -0.014227430336177349,
    0.05005380138754845,
    0.01910461112856865,
    -0.01910461112856865,
    -0.03832070156931877,
    -0.015049584209918976,
    0.00018126126087736338,
    -0.03464191406965256,
    0.023312920704483986,
    -0.0018202331848442554,
    -0.001185328932479024,
    -0.0037902656476944685,
    -0.03676000237464905,
    -0.016540607437491417,
    -0.017181608825922012,
    -0.02973686344921589,
    -0.022198136895895004,
    0.007044041529297829,
    0.01864476315677166,
    -0.007768651004880667,
    0.007671107538044453,
    -0.004504424054175615,
    0.010569545440375805,
    -0.0220169834792614,
    0.011280220933258533,
    0.0023567229509353638,
    -0.028705688193440437,
    -0.00044438947224989533,
    -0.013997506350278854,
    -0.011043328791856766,
    -0.017293086275458336,
    -0.018087370321154594,
    -0.0020780269987881184,
    -0.03915678709745407,
    -0.0020466737914830446,
    -0.001577245187945664,
    -0.004605451598763466,
    -0.011976960115134716,
    0.019341502338647842,
    0.010026088915765285,
    0.007280932739377022,
    0.010569545440375805,
    0.003818135242909193,
    -0.045622535049915314,
    0.015370083972811699,
    0.01300116814672947,
    0.0481865368783474,
    -0.027270402759313583,
    -0.0021773125045001507,
    -8.317333413287997e-05,
    -0.017418500036001205,
    -0.0038216188549995422,
    -0.02816222980618477,
    0.00417347252368927,
    -0.04687666520476341,
    -0.025319531559944153,
    -0.0739101767539978,
    0.003668336197733879,
    -0.006340334191918373,
    -0.02175222337245941,
    -0.006420459132641554,
    -0.02665727213025093,
    -0.0032433245796710253,
    -0.01589960604906082,
    0.010388392955064774,
    0.03954696282744408,
    -0.031241821125149727,
    -0.008437521755695343,
    -0.013133549131453037,
    0.016247976571321487,
    -0.019787415862083435,
    -0.020832525566220284,
    0.0037798145785927773,
    -0.005953643471002579,
    0.01509138848632574,
    0.005281289108097553,
    0.0023758832830935717,
    0.00930147897452116,
    0.012910592369735241,
    0.009343283250927925,
    -0.018338195979595184,
    -0.0018237169133499265,
    -0.02175222337245941,
    -0.01148227509111166,
    -0.008876467123627663,
    -0.047155361622571945,
    -0.0009911126689985394,
    -0.029263079166412354,
    -0.009928544983267784,
    -0.003236357355490327,
    0.04169292002916336,
    -0.01877017505466938,
    0.00037689279997721314,
    0.004500940442085266,
    0.00951050128787756,
    0.020985808223485947,
    -0.011900318786501884,
    -0.02516624890267849,
    -0.020456286147236824,
    0.015509432181715965,
    0.002292274497449398,
    0.006235823035240173,
    -0.015523367561399937,
    -0.0048214406706392765,
    0.00597802922129631,
    0.023117832839488983,
    0.04729470983147621,
    0.005594822112470865,
    -0.02441377006471157,
    -0.030210645869374275,
    -0.00237762532196939,
    -0.0035707924980670214,
    0.012422874569892883,
    -0.007232161238789558,
    -0.011517112143337727,
    0.0023236279375851154,
    0.03812561184167862,
    0.004337206482887268,
    0.00911335926502943,
    -0.004135151859372854,
    0.021166961640119553,
    0.0033356426283717155,
    -0.026127750054001808,
    -0.018240652978420258,
    0.02665727213025093,
    -0.0064866491593420506,
    -0.015802063047885895,
    -0.019411176443099976,
    0.011454405263066292,
    0.010513806715607643,
    0.031409040093421936,
    -0.012262623757123947,
    -0.003131846198812127,
    0.016582412645220757,
    -0.01656847633421421,
    0.03152051568031311,
    -0.005873518064618111,
    -0.006103442516177893,
    -0.006423942744731903,
    0.01224868930876255,
    0.03285825997591019,
    0.003191069234162569,
    -0.021362047642469406,
    -0.00824243389070034,
    0.013488885946571827,
    0.02816222980618477,
    0.01665208674967289,
    0.026768751442432404,
    -0.004013222176581621,
    -0.007622335571795702,
    -0.016888977959752083,
    -0.03007129766047001,
    -0.007705944590270519,
    -0.006929079070687294,
    0.02998768910765648,
    0.010806437581777573,
    0.009789196774363518,
    0.00016395162674598396,
    0.018198849633336067,
    -0.040466658771038055,
    -0.0015397954266518354,
    0.007719879038631916,
    -0.029959820210933685,
    -0.025096574798226357,
    0.015314345248043537,
    0.0059362249448895454,
    0.022560441866517067,
    -0.008305140770971775,
    -0.03193856030702591,
    0.004521842580288649,
    -0.032077908515930176,
    -0.003584727179259062,
    0.013732745312154293,
    -0.009935512207448483,
    -0.008339977823197842,
    0.034112390130758286,
    -0.010513806715607643,
    0.011322025209665298,
    0.04617992788553238,
    -0.032997604459524155,
    0.02130630984902382,
    0.00220692390576005,
    0.02462279237806797,
    -0.020414482802152634,
    0.021891571581363678,
    -0.021459592506289482,
    -0.019466916099190712,
    0.00969862099736929,
    -0.035812437534332275,
    -0.022351419553160667,
    -0.015216801315546036,
    -0.0031928110402077436,
    -0.024567052721977234,
    -0.004905049689114094,
    0.006904693320393562,
    0.09665177017450333,
    0.04133061692118645,
    -0.007047525141388178,
    -0.001999643864110112,
    -0.003772847121581435,
    -0.001459670253098011,
    0.027479425072669983,
    -0.008165792562067509,
    -0.035227175801992416,
    -0.00957320723682642,
    0.01943904533982277,
    -0.001306387479417026,
    0.0015014746459200978,
    -0.011705231852829456,
    -0.029123730957508087,
    0.002426397055387497,
    -0.014924170449376106,
    0.04570614546537399,
    0.0073297047056257725,
    -0.0013168385485187173,
    0.021166961640119553,
    0.008165792562067509,
    0.01839393563568592,
    -0.011287188157439232,
    -0.03720591589808464,
    0.01507745310664177,
    0.043253619223833084,
    -0.007914965972304344,
    -0.009015815332531929,
    -0.019285762682557106,
    0.020790722221136093,
    0.012025732547044754,
    -0.01661028154194355,
    -0.023786703124642372,
    -0.004023673478513956,
    -0.0036718198098242283,
    -0.014965974725782871,
    -0.021710418164730072,
    0.01260402612388134,
    0.02915160171687603,
    0.007155519910156727,
    -0.004622869659215212,
    -0.003222422441467643,
    -0.005079234484583139,
    0.002504780190065503,
    -0.014645474962890148,
    -0.01652667298913002,
    -0.006054670549929142,
    -0.024608856067061424
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: web environment",
    "intended audience :: financial and insurance industry",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: office/business :: financial :: accounting"
  ],
  "description": "python api for accessing the rest api of the xero accounting tool.\npyxero\n======\n\n[![python versions](https://img.shields.io/pypi/pyversions/pyxero.svg)](https://pypi.python.org/pypi/pyxero) [![pypi version](https://img.shields.io/pypi/v/pyxero.svg)](https://pypi.python.org/pypi/pyxero) [![maturity](https://img.shields.io/pypi/status/pyxero.svg)](https://pypi.python.org/pypi/pyxero) [![bsd license](https://img.shields.io/pypi/l/pyxero.svg)](https://github.com/freakboy3742/pyxero/blob/master/license) [![build status](https://github.com/freakboy3742/pyxero/workflows/build%20status/badge.svg)](https://github.com/freakboy3742/pyxero/actions)\n\npyxero is a python api for accessing the rest api provided by the [xero](https://developer.xero.com)\naccounting tool. it allows access to both public, private and partner applications.\n\n## quickstart:\n\ninstall this library using the python package manager:\n\n```\npip install pyxero\n```\n\n### using oauth2 credentials\n\noauth2 is an open standard authorization protocol that allows users to\nprovide specific permissions to apps that want to use their account. oauth2\nauthentication is performed using *tokens* that are obtained using an api;\nthese tokens are then provided with each subsequent request.\n\noauth2 tokens have a 30 minute expiry, but can be swapped for a new token at any\ntime. xero documentation on the oauth2 process can be found\n[here](https://developer.xero.com/documentation/oauth2/overview/). the procedure\nfor creating and authenticating credentials is as follows *(with a django\nexample at the end)*:\n\n 1) [register your app](https://developer.xero.com/myapps) with xero, using a\n    redirect uri which will be served by your app in order to complete the\n    authorisation e.g. `https://mysite.com/oauth/xero/callback/`. see step 3 for\n    an example of what your app should do. generate a client secret, then store\n    it and the client id somewhere that your app can access them, such as a\n    config file.\n\n 2) construct an `oauth2credentials` instance using the details from the first\n    step.\n    ```python\n    >>> from xero.auth import oauth2credentials\n    >>>\n    >>> credentials = oauth2credentials(client_id, client_secret,\n    >>>                                 callback_uri=callback_uri)\n    ```\n    if neccessary pass in a list of scopes to define the scopes required by your\n    app. e.g. if write access is required to transactions and payroll employees:\n\n    ```python\n    >>> from xero.constants import xeroscopes\n    >>>\n    >>> my_scope = [xeroscopes.accounting_transactions,\n    >>>             xeroscopes.payroll_employees]\n    >>> credentials = oauth2credentials(client_id, client_secret, scope=my_scope\n    >>>                                 callback_uri=callback_uri)\n    ```\n    the default scopes are `['offline_access', 'accounting.transactions.read',\n    'accounting.contacts.read']`. `offline_access` is required in order for\n    tokens to be refreshable. for more details on scopes see xero's\n    [documentation]( https://developer.xero.com/documentation/oauth2/scopes).\n\n 3) generate a xero authorisation url which the user can visit to complete\n    authorisation. then store the state of the credentials object and redirect\n    the user to the url in their browser.\n    ```python\n    >>> authorisation_url = credentials.generate_url()\n    >>>\n    >>> # now store credentials.state somewhere accessible, e.g a cache\n    >>> mycache['xero_creds'] = credentials.state\n    >>>\n    >>> # then redirect the user to authorisation_url\n    ...\n    ```\n    the callback uri should be the redirect uri you used in step 1.\n\n 4) after authorization the user will be redirected from xero to the\n    callback uri provided in step 1, along with a querystring containing the\n    authentication secret. when your app processes this request, it should pass\n    the full uri including querystring to `verify()`:\n    ```python\n    >>> # recreate the credentials object\n    >>> credentials = oauth2credentials(**mycache['xero_creds'])\n    >>>\n    >>> # get the full redirect uri from the request including querystring\n    >>> # e.g. request_uri = 'https://mysite.com/oauth/xero/callback/?code=0123456789&scope=openid%20profile&state=87784234sdf5ds8ad546a8sd545ss6'\n    >>>\n    >>> credentials.verify(request_uri)\n    ```\n    a token will be fetched from xero and saved as `credentials.token`. if the\n    credentials object needs to be created again either dump the whole object\n    using:\n    ```python\n    >>> cred_state = credentials.state\n    >>> ...\n    >>> new_creds = oauth2credentials(**cred_state)\n    ```\n    or just use the client_id, client_secret and token (and optionally scopes\n    and tenant_id):\n    ```python\n    >>> token = credentials.token\n    >>> ...\n    >>> new_creds = oauth2credentials(client_id, client_secret, token=token)\n    ```\n\n 5) now the credentials may be used to authorize a xero session. as oauth2\n    allows authentication for multiple xero organisations, it is necessary to\n    set the tenant_id against which the xero client's queries will run.\n    ```python\n    >>> from xero import xero\n    >>> # use the first xero organisation (tenant) permitted\n    >>> credentials.set_default_tenant()\n    >>> xero = xero(credentials)\n    >>> xero.contacts.all()\n    >>> ...\n    ```\n    if the scopes supplied in step 2 did not require access to organisations\n    (e.g. when only requesting scopes for single sign) it will not be\n    possible to make requests with the xero api and `set_default_tenant()` will\n    raise an exception.\n\n    to pick from multiple possible xero organisations the `tenant_id` may be set\n    explicitly:\n    ```python\n    >>> tenants = credentials.get_tenants()\n    >>> credentials.tenant_id = tenants[1]['tenantid']\n    >>> xero = xero(credentials)\n    ```\n    `oauth2credentials.__init__()` accepts `tenant_id` as a keyword argument.\n\n 6) when using the api over an extended period, you will need to exchange tokens\n    when they expire. if a refresh token is available, it can be used to\n    generate a new token:\n    ```python\n    >>> if credentials.expired():\n    >>>     credentials.refresh()\n    >>>     # then store the new credentials or token somewhere for future use:\n    >>>     cred_state = credentials.state\n    >>>     # or\n    >>>     new_token = credentials.token\n\n    **important**: ``credentials.state`` changes after a token swap. be sure to\n    persist the new state.\n\n    ```\n #### django oauth2 app example\n this example shows authorisation, automatic token refreshing and api use in\n a django app which has read/write access to contacts and transactions. if the\n cache used is cleared on server restart, the token will be lost and\n verification will have to take place again.\n\n ```python\nfrom django.http import httpresponseredirect\nfrom django.core.cache import caches\n\nfrom xero import xero\nfrom xero.auth import oauth2credentials\nfrom xero.constants import xeroscopes\n\ndef start_xero_auth_view(request):\n    # get client_id, client_secret from config file or settings then\n    credentials = oauth2credentials(\n        client_id, client_secret, callback_uri=callback_uri,\n        scope=[xeroscopes.offline_access, xeroscopes.accounting_contacts,\n               xeroscopes.accounting_transactions]\n    )\n    authorization_url = credentials.generate_url()\n    caches['mycache'].set('xero_creds', credentials.state)\n    return httpresponseredirect(authorization_url)\n\ndef process_callback_view(request):\n    cred_state = caches['mycache'].get('xero_creds')\n    credentials = oauth2credentials(**cred_state)\n    auth_secret = request.build_absolute_uri()\n    credentials.verify(auth_secret)\n    credentials.set_default_tenant()\n    caches['mycache'].set('xero_creds', credentials.state)\n\ndef some_view_which_calls_xero(request):\n    cred_state = caches['mycache'].get('xero_creds')\n    credentials = oauth2credentials(**cred_state)\n    if credentials.expired():\n        credentials.refresh()\n        caches['mycache'].set('xero_creds', credentials.state)\n    xero = xero(credentials)\n\n    contacts = xero.contacts.all()\n    ...\n ```\n\n### using pkce credentials\n\npkce is an alternative flow for providing authentication via oauth2. it works\nlargely the same as the standard oauth2 mechanism, but unlike the normal flow is\ndesigned to work with applications which cannot keep private keys secure, such\nas desktop, mobile or single page apps where such secrets could be extracted. a\nclient id is still required.\n\nas elsewhere, oauth2 tokens have a 30 minute expiry, but can be only swapped for\na new token if the `offline_access` scope is requested.\n\nxero documentation on the pkce flow can be found\n[here](https://developer.xero.com/documentation/guides/oauth2/pkce-flow). the\nprocedure for creating and authenticating credentials is as follows *(with a cli\nexample at the end)*:\n\n 1) [register your app](https://developer.xero.com/myapps) with xero, using a\n    redirect uri which will be served by your app in order to complete the\n    authorisation e.g. `http://localhost:<port>/callback/`. you can chose any\n    port, anc can pass it to the credentials object on construction, allow with\n    the the client id you are provded with.\n\n 2) construct an `oauth2credentials` instance using the details from the first\n    step.\n\n    ```python\n    >>> from xero.auth import oauth2credentials\n    >>>\n    >>> credentials = oauth2pkcecredentials(client_id,   port=my_port)\n    ```\n\n    if neccessary, pass in a list of scopes to define the scopes required by\n    your app. e.g. if write access is required to transactions and payroll\n    employees:\n\n    ```python\n    >>> from xero.constants import xeroscopes\n    >>>\n    >>> my_scope = [xeroscopes.accounting_transactions,\n    >>>             xeroscopes.payroll_employees]\n    >>> credentials = oauth2credentials(client_id, scope=my_scope\n    >>>                                 port=my_port)\n    ```\n\n    the default scopes are `['offline_access', 'accounting.transactions.read',\n    'accounting.contacts.read']`. `offline_access` is required in order for\n    tokens to be refreshable. for more details on scopes see [xero's\n    documentation on oauth2\n    scopes](https://developer.xero.com/documentation/oauth2/scopes).\n\n 3) call `credentials.logon()` . this will open a browser window, an visit\n    a xero authentication page.\n\n    ```python\n    >>> credentials.logon()\n    ```\n\n    the authenticator will also start a local webserver on the provided port.\n    this webserver will be used to collect the tokens that xero returns.\n\n    the default `pckeauthreceiver` class has no reponse pages defined so the\n    browser will show an error, on empty page for all transactions. but the\n    application is now authorised and will continue. if you wish you can\n    override the `send_access_ok()` method, and the `send_error_page()` method\n    to create a more userfriendly experience.\n\n    in either case once the callback url has been visited the local server will\n    shutdown.\n\n 4) you can now continue as per the normal oauth2 flow. now the credentials may\n    be used to authorize a xero session. as oauth2 allows authentication for\n    multiple xero organisations, it is necessary to set the tenant_id against\n    which the xero client's queries will run.\n\n    ```python\n    >>> from xero import xero\n    >>> # use the first xero organisation (tenant) permitted\n    >>> credentials.set_default_tenant()\n    >>> xero = xero(credentials)\n    >>> xero.contacts.all()\n    >>> ...\n    ```\n    if the scopes supplied in step 2 did not require access to organisations\n    (e.g. when only requesting scopes for single sign) it will not be possible\n    to make requests with the xero api and `set_default_tenant()` will raise an\n    exception.\n\n    to pick from multiple possible xero organisations the `tenant_id` may be set\n    explicitly:\n\n    ```python\n    >>> tenants = credentials.get_tenants()\n    >>> credentials.tenant_id = tenants[1]['tenantid']\n    >>> xero = xero(credentials)\n    ```\n    `oauth2credentials.__init__()` accepts `tenant_id` as a keyword argument.\n\n 5) when using the api over an extended period, you will need to exchange tokens\n    when they expire. if a refresh token is available, it can be used to\n    generate a new token:\n\n    ```python\n    >>> if credentials.expired():\n    >>>     credentials.refresh()\n    >>>     # then store the new credentials or token somewhere for future use:\n    >>>     cred_state = credentials.state\n    >>>     # or\n    >>>     new_token = credentials.token\n\n    **important**: ``credentials.state`` changes after a token swap. be sure to\n    persist the new state.\n\n    ```\n\n#### cli oauth2 app example\n\nthis example shows authorisation, automatic token refreshing and api use in\na django app which has read/write access to contacts and transactions.\n\neach time this app starts it asks for authentication, but you\ncould consider using the user `keyring` to store tokens.\n\n```python\nfrom xero import xero\nfrom xero.auth import oauth2pkcecredentials\nfrom xero.constants import xeroscopes\n\n# get client_id, client_secret from config file or settings then\ncredentials = oauth2pkcecredentials(\n    client_id, port=8080,\n    scope=[xeroscopes.offline_access, xeroscopes.accounting_contacts,\n            xeroscopes.accounting_transactions]\n)\ncredentials.logon()\ncredentials.set_default_tenant()\n\nfor contacts in xero.contacts.all()\n    print contact[\"name\"]\n```\n\n### older authentication methods ###\n\nin the past, xero had the concept of \"public\", \"private\", and \"partner\"\napplications, which each had their own authentication procedures. however,\nthey removed access for public applications on 31 march 2021; private\napplications were removed on 30 september 2021. partner applications\nstill exist, but the only supported authentication method is oauth2; these\nare now referred to as \"oauth2 apps\". as xero no longer supports these older\nauthentication methods, neither does pyxero.\n\n## using the xero api\n\n*this api is a work in progress. at present, there is no wrapper layer\nto help create real objects, it just returns dictionaries in the exact\nformat provided by the xero api. this will change into a more useful api\nbefore 1.0*\n\nthe xero api object exposes a simple api for retrieving and updating objects.\nfor example, to deal with contacts::\n\n```python\n# retrieve all contact objects\n>>> xero.contacts.all()\n[{...contact info...}, {...contact info...}, {...contact info...}, ...]\n\n# retrieve a specific contact object\n>>> xero.contacts.get(u'b2b5333a-2546-4975-891f-d71a8a640d23')\n{...contact info...}\n\n# retrieve all contacts updated since 1 jan 2013\n>>> xero.contacts.filter(since=datetime(2013, 1, 1))\n[{...contact info...}, {...contact info...}, {...contact info...}]\n\n# retrieve all contacts whose name is 'john smith'\n>>> xero.contacts.filter(name='john smith')\n[{...contact info...}, {...contact info...}, {...contact info...}]\n\n# retrieve all contacts whose name starts with 'john'\n>>> xero.contacts.filter(name__startswith='john')\n[{...contact info...}, {...contact info...}, {...contact info...}]\n\n# retrieve all contacts whose name ends with 'smith'\n>>> xero.contacts.filter(name__endswith='smith')\n[{...contact info...}, {...contact info...}, {...contact info...}]\n\n# retrieve all contacts whose name starts with 'john' and ends with 'smith'\n>>> xero.contacts.filter(name__startswith='john', name__endswith='smith')\n[{...contact info...}, {...contact info...}, {...contact info...}]\n\n# retrieve all contacts whose name contains 'mit'\n>>> xero.contacts.filter(name__contains='mit')\n[{...contact info...}, {...contact info...}, {...contact info...}]\n\n# create a new object\n>>> xero.contacts.put({...contact info...})\n\n# create multiple new objects\n>>> xero.contacts.put([{...contact info...}, {...contact info...}, {...contact info...}])\n\n# save an update to an existing object\n>>> c = xero.contacts.get(u'b2b5333a-2546-4975-891f-d71a8a640d23')\n>>> c['name'] = 'john smith'\n>>> xero.contacts.save(c)\n\n# save multiple objects\n>>> xero.contacts.save([c1, c2])\n```\n\ncomplex filters can be constructed in the django-way, for example retrieving invoices for a contact:\n\n```python\n>>> xero.invoices.filter(contact_contactid='83ad77d8-48a7-4f77-9146-e6933b7fb63b')\n```\n\nfilters which aren't supported by this api can also be constructed using 'raw' mode like this:\n```python\n>>> xero.invoices.filter(raw='amountdue > 0')\n```\n\nbe careful when dealing with large amounts of data, the xero api will take an\nincreasingly long time to respond, or an error will be returned. if a query might\nreturn more than 100 results, you should make use of the ``page`` parameter::\n\n```python\n# grab 100 invoices created after 01-01-2013\n>>> xero.invoices.filter(since=datetime(2013, 1, 1), page=1)\n```\n\nyou can also order the results to be returned::\n\n```python\n# grab contacts ordered by emailaddress\n>>> xero.contacts.filter(order='emailaddress desc')\n```\n\nfor invoices (and other objects that can be retrieved as pdfs), accessing the pdf is done\nvia setting the accept header:\n\n```python\n# fetch a pdf\ninvoice = xero.invoices.get('af722e93-b64f-482d-9955-1b027bfec896', \\\n    headers={'accept': 'application/pdf'})\n# stream the pdf to the user (django specific example)\nresponse = httpresponse(invoice, content_type='application/pdf')\nresponse['content-disposition'] = 'attachment; filename=\"invoice.pdf\"'\nreturn response\n```\n\ndownload and uploading attachments is supported using the xero guid of the relevant object::\n\n```python\n# list attachments on a contact\n>>> xero.contacts.get_attachments(c['contactid'])\n[{...attachment info...}, {...attachment info...}]\n\n# attach a pdf to a contact\n>>> f = open('form.pdf', 'rb')\n>>> xero.contacts.put_attachment(c['contactid'], 'form.pdf', f, 'application/pdf')\n>>> f.close()\n\n>>> xero.contacts.put_attachment_data(c['contactid'], 'form.pdf', data, 'application/pdf')\n\n# download an attachment\n>>> f = open('form.pdf', 'wb')\n>>> xero.contacts.get_attachment(c['contactid'], 'form.pdf', f)\n>>> f.close()\n\n>>> data = xero.contacts.get_attachment_data(c['contactid'], 'form.pdf')\n```\n\nthis same api pattern exists for the following api objects:\n\n* accounts\n* attachments\n* banktransactions\n* banktransfers\n* brandingthemes\n* contactgroups\n* contacts\n* creditnotes\n* currencies\n* employees\n* expenseclaims\n* invoices\n* items\n* journals\n* manualjournals\n* organisation\n* overpayments\n* payments\n* prepayments\n* purchase orders\n* receipts\n* repeatinginvoices\n* reports\n* taxrates\n* trackingcategories\n* users\n\n\n## payroll\n\nin order to access the payroll methods from xero, you can do it like this:\n\n```\nxero.payrollapi.payruns.all()\n```\n\nwithin the payrollapi you have access to:\n\n* employees\n* leaveapplications\n* payitems\n* payrollcalendars\n* payruns\n* payslip\n* superfunds\n* timesheets\n\n\n## projects\n\nin order to access the projects methods from xero, you can do it like this:\n\n```\nxero.projectsapi.projects.all()\n```\n\nwithin the projectsapi you have access to:\n\n* projects\n* projectsusers\n* tasks\n* time\n\n\n## under the hood\n\nusing a wrapper around xero api is a really nice feature, but it's also interesting to understand what is exactly\nhappening under the hood.\n\n### filter operator\n\n``filter`` operator wraps the \"where\" keyword in xero api.\n\n```python\n# retrieves all contacts whose name is \"john\"\n>>> xero.contacts.filter(name=\"john\")\n\n# triggers this get request:\nhtml encoded: <xero_api_url>/contacts?where=name%3d%3d%22john%22\nnon encoded:  <xero_api_url>/contacts?where=name==\"john\"\n```\n\nseveral parameters are separated with encoded '&&' characters:\n\n```python\n# retrieves all contacts whose first name is \"john\" and last name is \"doe\"\n>>> xero.contacts.filter(firstname=\"john\", lastname=\"doe\")\n\n# triggers this get request:\nhtml encoded: <xero_api_url>/contacts?where=lastname%3d%3d%22doe%22%26%26firstname%3d%3d%22john%22\nnon encoded:  <xero_api_url>/contacts?where=lastname==\"doe\"&&firstname==\"john\"\n\n```\n\nunderscores are automatically converted as \"dots\":\n```python\n# retrieves all contacts whose name is \"john\"\n>>> xero.contacts.filter(first_name=\"john\")\n\n# triggers this get request:\nhtml encoded: <xero_api_url>/contacts?where=first.name%3d%3d%22john%22%\nnon encoded:  <xero_api_url>/contacts?where=first.name==\"john\"\n```\n\n## contributing\n\nif you're going to run the pyxero test suite, in addition to the dependencies\nfor pyxero, you need to add the following dependency to your environment:\n\n    mock >= 1.0\n\nmock isn't included in the formal dependencies because they aren't required\nfor normal operation of pyxero. it's only required for testing purposes.\n\nonce you've installed these dependencies, you can run the test suite by\nrunning the following from the root directory of the project:\n\n    $ python setup.py test\n\nif you find any problems with pyxero, you can log them on [github issues](https://github.com/freakboy3742/pyxero/issues).\nwhen reporting problems, it's extremely helpful if you can provide\nreproduction instructions -- the sequence of calls and/or test data that\ncan be used to reproduce the issue.\n\nnew features or bug fixes can be submitted via a pull request. if you want\nyour pull request to be merged quickly, make sure you either include\nregression test(s) for the behavior you are adding/fixing, or provide a\ngood explanation of why a regression test isn't possible.\n",
  "docs_url": null,
  "keywords": "",
  "license": "new bsd",
  "name": "pyxero",
  "package_url": "https://pypi.org/project/pyxero/",
  "project_url": "https://pypi.org/project/pyxero/",
  "project_urls": {
    "Homepage": "http://github.com/freakboy3742/pyxero"
  },
  "release_url": "https://pypi.org/project/pyxero/0.9.4/",
  "requires_dist": [
    "requests <3,>=1.1.0",
    "requests-oauthlib <2,>=0.3.0",
    "python-dateutil <3,>=2.8",
    "PyJWT <3,>=1.6.4",
    "cryptography >=1.3.1",
    "pre-commit ==3.0.2 ; extra == 'dev'",
    "pytest ==7.2.1 ; extra == 'dev'",
    "pytest-tldr ==0.2.5 ; extra == 'dev'",
    "tox ==4.4.2 ; extra == 'dev'"
  ],
  "requires_python": ">=3.8",
  "summary": "python api for accessing the rest api of the xero accounting tool.",
  "version": "0.9.4",
  "releases": [],
  "developers": [
    "russell@keith-magee.com",
    "russell_keith"
  ],
  "kwds": "pyxero pyversions pypi build cli",
  "license_kwds": "new bsd",
  "libtype": "pypi",
  "id": "pypi_pyxero",
  "homepage": "http://github.com/freakboy3742/pyxero",
  "release_count": 11,
  "dependency_ids": [
    "pypi_cryptography",
    "pypi_pre_commit",
    "pypi_pyjwt",
    "pypi_pytest",
    "pypi_pytest_tldr",
    "pypi_python_dateutil",
    "pypi_requests",
    "pypi_requests_oauthlib",
    "pypi_tox"
  ],
  "documentation_summary": "PyXero is a Python API designed for interacting with the Xero accounting tool's REST API. It supports OAuth2 for authentication, allowing access to Public, Private, and Partner applications. The library facilitates operations like generating authorization URLs, refreshing tokens, and setting default tenants for Xero sessions. It also includes examples for Django and CLI OAuth2 apps, highlighting authorization, token refreshing, and API usage. PyXero is transitioning away from older authentication methods (Public, Private, and Partner applications) in favor of OAuth2. The API currently returns dictionaries in the format provided by Xero but aims to offer a more user-friendly interface in the future. The project is open-source under the BSD-3-Clause license, with contributions welcomed.",
  "embedding": [
    -0.00328030320815742,
    -0.005483018700033426,
    -0.008536183275282383,
    -0.03563786298036575,
    -0.018326031044125557,
    0.03149654343724251,
    0.020889703184366226,
    -0.03025696612894535,
    -0.01786118932068348,
    -0.03453914448618889,
    0.031045788899064064,
    -0.01393116358667612,
    -0.015072138980031013,
    0.009874364361166954,
    -0.011318190023303032,
    -0.02779189683496952,
    0.011677386239171028,
    -0.019326144829392433,
    0.015424291603267193,
    0.0014526302693411708,
    0.01988958939909935,
    -0.008324891328811646,
    -0.051414307206869125,
    -0.015508808195590973,
    -0.01962195336818695,
    0.013163470663130283,
    -0.0019315580138936639,
    -0.008951723575592041,
    0.01817108318209648,
    -0.0030989444348961115,
    0.018523236736655235,
    0.012480294331908226,
    -0.04099058359861374,
    -0.0027309448923915625,
    -0.007261390332132578,
    -0.011120985262095928,
    0.020551636815071106,
    -0.005278770346194506,
    0.018311943858861923,
    0.008353063836693764,
    0.027087591588497162,
    0.012832446955144405,
    -0.01143087912350893,
    0.029468145221471786,
    -0.013233901932835579,
    0.001402448397129774,
    0.007261390332132578,
    -0.05761219561100006,
    0.007543112616986036,
    0.011853463016450405,
    -0.0023418159689754248,
    0.007254347205162048,
    -0.009754631668329239,
    -0.023242084309458733,
    0.006574692204594612,
    -0.04279360547661781,
    0.012578897178173065,
    0.013797345571219921,
    -0.026524147018790245,
    0.008029083721339703,
    0.01114211417734623,
    0.0218475591391325,
    -0.0232279971241951,
    -0.015987737104296684,
    -0.0020231176167726517,
    0.008655915036797523,
    0.0034968771506100893,
    0.001373395905829966,
    0.022833585739135742,
    -0.0026851650327444077,
    0.042089302092790604,
    0.028270825743675232,
    0.013621269725263119,
    0.0012897595297545195,
    0.025791669264435768,
    -0.005321028642356396,
    -0.00970533024519682,
    0.008860164321959019,
    -0.014276273548603058,
    0.002127002691850066,
    -0.0034475757274776697,
    -0.01176894549280405,
    -0.03397570177912712,
    0.015931392088532448,
    0.01657935231924057,
    0.005141430534422398,
    -0.007550155743956566,
    0.0135719683021307,
    0.007338863797485828,
    0.014198800548911095,
    0.03042600117623806,
    0.017466777935624123,
    0.011001252569258213,
    0.020537549629807472,
    -0.011437922716140747,
    0.030848583206534386,
    -0.02015722543001175,
    0.028101792559027672,
    0.011459051631391048,
    -0.033722151070833206,
    -0.01722731441259384,
    0.032736122608184814,
    -0.008198116905987263,
    -0.016368061304092407,
    -0.0504564493894577,
    -0.020199483260512352,
    0.0006642481894232333,
    -0.013029652647674084,
    0.04082155227661133,
    0.023580150678753853,
    0.0012677500490099192,
    0.046653199940919876,
    -0.0011797117767855525,
    -0.03769443556666374,
    0.01803022250533104,
    -0.008923551067709923,
    0.04792094975709915,
    -0.0059971618466079235,
    -0.01161399856209755,
    0.002965126419439912,
    -0.017509035766124725,
    0.008226289413869381,
    -0.006430309731513262,
    -0.01347336545586586,
    0.02424219809472561,
    -0.02731296978890896,
    0.0014896062202751637,
    -0.015269344672560692,
    0.0221574530005455,
    -0.01843871921300888,
    0.0018822565907612443,
    -0.023932302370667458,
    0.013262073509395123,
    -0.002834829967468977,
    -0.005859822500497103,
    0.010966037400066853,
    -0.008317848667502403,
    -0.007028969470411539,
    -0.0010071569122374058,
    -0.04383597895503044,
    0.008303762413561344,
    0.02356606349349022,
    -0.003083097515627742,
    0.012261959724128246,
    -0.004690675064921379,
    0.03930025175213814,
    0.014248101972043514,
    -0.03183460980653763,
    0.002656992757692933,
    0.010353291407227516,
    0.026425544172525406,
    0.0025355000980198383,
    -0.019495178014039993,
    -0.02438305877149105,
    -0.004711804445832968,
    0.01502988114953041,
    0.01360718347132206,
    0.017213227227330208,
    -0.025749411433935165,
    0.01161399856209755,
    -0.03191912919282913,
    0.030003417283296585,
    -0.014790416695177555,
    -0.003301432356238365,
    -0.016973763704299927,
    0.03707464411854744,
    0.012550724670290947,
    0.00857844203710556,
    -0.024692952632904053,
    0.005845736246556044,
    0.007606500294059515,
    -0.00330495391972363,
    -0.020875615999102592,
    -0.00862774346023798,
    0.019227541983127594,
    0.010430765338242054,
    0.007606500294059515,
    -0.007733275182545185,
    -0.009008068591356277,
    0.010395550169050694,
    0.02627059817314148,
    0.01556515321135521,
    0.015424291603267193,
    0.03431376814842224,
    -0.011205501854419708,
    -0.02066432498395443,
    -0.016424406319856644,
    -0.009127800352871418,
    0.0037011257372796535,
    0.013409977778792381,
    0.025383172556757927,
    0.025200052186846733,
    -0.0011295300209894776,
    -0.01367761380970478,
    -0.5634444355964661,
    -0.007416337728500366,
    -0.031721923500299454,
    -0.010881520807743073,
    -0.018396461382508278,
    -0.001699137152172625,
    -0.010360334999859333,
    0.014128369279205799,
    -0.0307922400534153,
    0.022368744015693665,
    -0.0073952083475887775,
    -0.00668738130480051,
    -0.014734072610735893,
    -0.023002618923783302,
    0.0011251281248405576,
    -0.024171767756342888,
    0.012578897178173065,
    -0.026693180203437805,
    0.0027045332826673985,
    0.011726687662303448,
    0.007212088909000158,
    0.035609688609838486,
    -0.04639964923262596,
    0.03225719556212425,
    -0.024566177278757095,
    0.003003863152116537,
    0.004694196395576,
    -0.025974789634346962,
    0.033046018332242966,
    -0.003926503472030163,
    -0.009177101776003838,
    0.021903902292251587,
    0.022326486185193062,
    -0.0024122465401887894,
    0.05197774991393089,
    0.014550953172147274,
    -0.006028855685144663,
    0.05504852160811424,
    -0.0017308308742940426,
    0.03366580605506897,
    -0.016269458457827568,
    0.01996001973748207,
    0.010726573877036572,
    0.004690675064921379,
    0.023678753525018692,
    -0.01310008391737938,
    0.013487451709806919,
    0.04068068787455559,
    0.003834943752735853,
    0.0031412027310580015,
    -0.010578669607639313,
    -0.018917648121714592,
    0.014191756956279278,
    -0.03200364485383034,
    0.03879315033555031,
    0.008824949152767658,
    -0.007028969470411539,
    -0.010515281930565834,
    -0.02339703030884266,
    -0.003930025268346071,
    0.008120642974972725,
    0.015058052726089954,
    0.011557654477655888,
    -0.05456959456205368,
    -0.018903560936450958,
    0.041384994983673096,
    0.006028855685144663,
    -0.018382376059889793,
    -0.013804389163851738,
    -0.019002163782715797,
    0.029496317729353905,
    0.014889019541442394,
    0.002109395107254386,
    -0.001977337757125497,
    0.0014270991086959839,
    0.04656868427991867,
    0.03498990088701248,
    0.023890044540166855,
    0.007000797428190708,
    0.02073475532233715,
    0.0043631731532514095,
    0.02373509667813778,
    -0.005342157557606697,
    -0.019424747675657272,
    0.026143822818994522,
    0.018227428197860718,
    -0.021763041615486145,
    -0.020777015015482903,
    0.03059503436088562,
    -0.015367947518825531,
    0.02356606349349022,
    -0.0043913451954722404,
    -0.002898217411711812,
    -0.031045788899064064,
    -0.001712342957034707,
    0.015015794895589352,
    -0.017973877489566803,
    -0.0226927250623703,
    -0.007944567129015923,
    -0.03687743842601776,
    0.0027555956039577723,
    -0.009430651552975178,
    -0.017170969396829605,
    0.004394866526126862,
    0.02958083339035511,
    0.004408952780067921,
    -0.002655231859534979,
    -0.014959449879825115,
    0.01826968602836132,
    -0.03828604891896248,
    -0.024538006633520126,
    -0.05096355080604553,
    -0.010437807999551296,
    0.00471884710714221,
    0.0016788883367553353,
    -0.031862784177064896,
    0.05887994542717934,
    0.009120756760239601,
    0.007127572316676378,
    -0.005662616807967424,
    0.008113600313663483,
    0.0027186195366084576,
    -0.002105873543769121,
    -0.002105873543769121,
    0.010402592830359936,
    0.007117007859051228,
    0.009381350129842758,
    -0.023326599970459938,
    0.001339060952886939,
    -0.0077262320555746555,
    -0.0016982568195089698,
    -0.017565380781888962,
    0.007585370913147926,
    -0.007088835351169109,
    0.03335591033101082,
    0.01870635524392128,
    0.023326599970459938,
    0.00917005818337202,
    -0.004401909653097391,
    -0.005549927707761526,
    -0.009895493276417255,
    0.008233332075178623,
    0.0014675967395305634,
    -0.005947860423475504,
    -0.005637966096401215,
    -0.023002618923783302,
    0.00884607806801796,
    0.011557654477655888,
    0.007550155743956566,
    0.00023043998226057738,
    -0.024256283417344093,
    -0.02015722543001175,
    -0.004754062741994858,
    0.014649556018412113,
    -0.007845964282751083,
    0.010465980507433414,
    0.008937637321650982,
    -0.0009516928694210947,
    -0.021213684231042862,
    -0.00669442443177104,
    0.00874747522175312,
    0.014565039426088333,
    -0.01393116358667612,
    -0.011754860170185566,
    -0.03267977759242058,
    -0.015846874564886093,
    -0.007194481324404478,
    0.04115961864590645,
    -0.018495064228773117,
    -0.03913121670484543,
    -0.0024756339844316244,
    0.01136044878512621,
    -0.014973536133766174,
    0.0007188318413682282,
    0.019706469029188156,
    0.01546655036509037,
    -0.024467574432492256,
    0.017987964674830437,
    0.011282974854111671,
    -0.016297630965709686,
    0.013515624217689037,
    0.025411345064640045,
    -0.047526538372039795,
    -0.01948109269142151,
    0.0016753668896853924,
    -0.010423722676932812,
    0.012846533209085464,
    0.02738340012729168,
    -0.05454142391681671,
    0.028003189712762833,
    -0.03642668202519417,
    -0.011691472493112087,
    -0.01295217964798212,
    0.02748200297355652,
    -0.027904586866497993,
    -0.013480408117175102,
    0.006673295050859451,
    0.015818702057003975,
    -0.009994096122682095,
    0.01600182242691517,
    0.016325803473591805,
    -0.01556515321135521,
    -0.0009552144329063594,
    -0.004968875553458929,
    -0.023847786709666252,
    -0.0022520171478390694,
    0.026890385895967484,
    -0.025270484387874603,
    0.025580378249287605,
    -0.012860619463026524,
    0.047019440680742264,
    -0.0013795584673061967,
    -0.013628312386572361,
    0.001109281205572188,
    -0.011747816577553749,
    0.00666977372020483,
    0.007937523536384106,
    0.033919356763362885,
    -0.03267977759242058,
    -0.008007953874766827,
    0.002516131615266204,
    0.007916394621133804,
    0.01163512747734785,
    0.005194253753870726,
    -0.004419517237693071,
    -0.02025582827627659,
    0.0018963427282869816,
    0.010635013692080975,
    0.004190618172287941,
    -0.010374421253800392,
    -0.007472681812942028,
    0.014663642272353172,
    -0.0019509263802319765,
    -0.002961604855954647,
    0.02805953286588192,
    0.022749070078134537,
    0.036652062088251114,
    -0.029665350914001465,
    0.01688924804329872,
    -0.03828604891896248,
    0.0013998072827234864,
    0.006067592650651932,
    0.027129849418997765,
    -0.021974334493279457,
    0.01749495044350624,
    0.004968875553458929,
    -0.013924120925366879,
    -0.01173373032361269,
    -0.01945292018353939,
    0.0314120277762413,
    -0.0007932241423986852,
    0.006574692204594612,
    -0.014536866918206215,
    0.011064640246331692,
    0.016255373135209084,
    -0.005549927707761526,
    -0.0010388507507741451,
    0.0025319785345345736,
    0.029017388820648193,
    0.0071874381974339485,
    0.00350744160823524,
    -0.011459051631391048,
    0.024735210463404655,
    0.0038102930411696434,
    0.06254233419895172,
    0.002109395107254386,
    -0.024538006633520126,
    -0.04724481701850891,
    0.002352380659431219,
    -0.025721238926053047,
    -0.008141771890223026,
    -0.023073051124811172,
    -8.341619104612619e-05,
    -0.011099855415523052,
    0.01783301681280136,
    0.01100829616189003,
    -0.0016577591886743903,
    0.010966037400066853,
    0.0019051465205848217,
    -0.00857844203710556,
    -0.023749183863401413,
    -0.006060549523681402,
    0.02856663428246975,
    -0.009613770991563797,
    0.0043209148570895195,
    -0.030538689345121384,
    -0.03777895122766495,
    0.01305078249424696,
    0.001343462849035859,
    0.028961045667529106,
    0.0007386404322460294,
    -0.0014341422356665134,
    0.010726573877036572,
    -0.00434908689931035,
    -0.01398046500980854,
    8.066499867709354e-05,
    0.02941180020570755,
    -0.025678981095552444,
    -0.007261390332132578,
    0.01587504707276821,
    0.02438305877149105,
    0.014424177818000317,
    0.007740318309515715,
    0.01624128594994545,
    0.054513249546289444,
    0.005546406377106905,
    -0.0012087643845006824,
    -0.017635811120271683,
    -0.009796890430152416,
    -0.02063615247607231,
    0.03231354057788849,
    -0.004366694483906031,
    -0.0009332048939540982,
    -0.0008574920357204974,
    -2.7305595722282305e-05,
    -0.0013549078721553087,
    -0.0018118260195478797,
    -0.03332773968577385,
    0.012114055454730988,
    -0.016029994934797287,
    -0.010001138783991337,
    -0.039694663137197495,
    -0.01657935231924057,
    0.004680110607296228,
    0.031862784177064896,
    0.007803705520927906,
    -0.016692042350769043,
    0.015818702057003975,
    -0.04558265581727028,
    0.0038736804854124784,
    -0.013902992010116577,
    -0.007451552897691727,
    -0.0017361132195219398,
    0.00048332969890907407,
    -0.003269738517701626,
    0.009578555822372437,
    0.026059305295348167,
    0.018255600705742836,
    0.02542543038725853,
    0.0031922650523483753,
    -0.01138157770037651,
    0.0012360562104731798,
    -0.013867776840925217,
    7.285160972969607e-05,
    0.005109736695885658,
    0.013670571148395538,
    0.013311374932527542,
    0.018762700259685516,
    0.05425969883799553,
    0.010381463915109634,
    0.03583506867289543,
    -0.002600648207589984,
    0.0005321908975020051,
    -0.04932956025004387,
    -0.0063281855545938015,
    0.005539363250136375,
    -0.005637966096401215,
    0.007993868552148342,
    -0.025678981095552444,
    0.028144050389528275,
    0.014396005310118198,
    0.018114738166332245,
    0.003771556308493018,
    0.03251074627041817,
    0.023847786709666252,
    0.024735210463404655,
    -0.014550953172147274,
    -0.004335000645369291,
    -0.007578327786177397,
    -0.032876983284950256,
    -0.012099969200789928,
    0.006810634862631559,
    -0.0010441329795867205,
    -0.012776102870702744,
    -0.015649668872356415,
    0.011592869646847248,
    -0.02090378850698471,
    -0.0018611274426802993,
    0.02370692603290081,
    0.0017017782665789127,
    0.01122663076967001,
    -0.029806211590766907,
    -0.009325006045401096,
    -0.03197547420859337,
    -0.022495519369840622,
    -0.014917192049324512,
    -0.0043103499338030815,
    -0.011825290508568287,
    0.01998819224536419,
    -0.0042716134339571,
    -0.010282861068844795,
    0.020889703184366226,
    -0.025439517572522163,
    0.020269913598895073,
    0.01621311344206333,
    -0.018227428197860718,
    0.01088856440037489,
    -0.010987167246639729,
    0.049047838896512985,
    0.022537777200341225,
    0.017720328643918037,
    0.0011937979143112898,
    0.02552403323352337,
    -0.0027256624307483435,
    0.011339319869875908,
    -0.02907373383641243,
    0.0025055669248104095,
    -0.0068247211165726185,
    0.0025900837499648333,
    0.00441599590703845,
    0.023749183863401413,
    0.0017634050454944372,
    0.0170864537358284,
    0.03659571707248688,
    -0.0020988306496292353,
    0.010437807999551296,
    -0.011085769161581993,
    -0.018114738166332245,
    0.008043169975280762,
    0.025636723265051842,
    -0.00862774346023798,
    -0.0006928605725988746,
    0.028510289266705513,
    0.018861303105950356,
    -0.019086681306362152,
    -0.0173540897667408,
    0.012071797624230385,
    0.015438377857208252,
    0.003343690652400255,
    0.021565835922956467,
    0.015128483064472675,
    0.02721436694264412,
    0.0024967631325125694,
    0.011501309461891651,
    0.016353975981473923,
    -0.012628198601305485,
    0.007437466643750668,
    -0.003912417218089104,
    -0.017283659428358078,
    -0.004898445215076208,
    0.0015116158174350858,
    0.05547110736370087,
    -0.014593211002647877,
    -0.009592642076313496,
    0.02114325389266014,
    -0.019326144829392433,
    0.0011577022960409522,
    0.025538120418787003,
    0.00680359173566103,
    0.010494153015315533,
    -0.00669442443177104,
    -0.016551179811358452,
    -0.004408952780067921,
    0.008402365259826183,
    0.018382376059889793,
    -0.004637852311134338,
    -0.014255144633352757,
    -0.0072402614168822765,
    -0.014691813848912716,
    0.012107012793421745,
    -0.03129933774471283,
    0.000817874853964895,
    0.0020072709303349257,
    -0.010085655376315117,
    -0.00953629706054926,
    -0.0016938549233600497,
    0.004916052799671888,
    -0.010987167246639729,
    0.02363649383187294,
    -0.02805953286588192,
    -0.03583506867289543,
    -0.014536866918206215,
    -0.020143138244748116,
    0.021298199892044067,
    -0.006381008308380842,
    0.016762472689151764,
    -0.02293218858540058,
    -0.03811701759696007,
    -0.018593667075037956,
    0.011325233615934849,
    -0.007986824959516525,
    -0.005173124372959137,
    0.012754973955452442,
    0.03166557848453522,
    0.017072366550564766,
    -0.008036126382648945,
    0.021298199892044067,
    -0.007247304078191519,
    -0.008261504583060741,
    0.0023242083843797445,
    -0.022537777200341225,
    0.019086681306362152,
    -0.009916622191667557,
    -0.004577985964715481,
    -0.004944224841892719,
    0.022537777200341225,
    -0.00463433051481843,
    -0.041413165628910065,
    -0.002539021661505103,
    0.012924007140100002,
    -0.017551295459270477,
    0.022650467231869698,
    -0.01795979216694832,
    -0.02907373383641243,
    -0.006025333888828754,
    0.0017149840714409947,
    -0.00921935960650444,
    -0.007159266155213118,
    -0.03380666673183441,
    -0.007500854320824146,
    0.022044764831662178,
    -0.016368061304092407,
    0.02336885780096054,
    0.012571854516863823,
    0.0067437258549034595,
    -0.004880837630480528,
    0.034285593777894974,
    0.024833813309669495,
    0.007338863797485828,
    -0.0013056064490228891,
    0.005993640515953302,
    -0.027129849418997765,
    -0.019762814044952393,
    -0.00329615012742579,
    -0.02114325389266014,
    0.011797118000686169,
    0.015241172164678574,
    0.00862774346023798,
    -0.013593097217381,
    0.010522325523197651,
    0.04417404532432556,
    -0.04059617221355438,
    -0.002114677568897605,
    -0.019875502213835716,
    -0.035440657287836075,
    0.0054689329117536545,
    -0.01711462438106537,
    -0.006331706885248423,
    -0.004680110607296228,
    0.000521186098922044,
    -0.009508125483989716,
    0.020100880414247513,
    -0.010733616538345814,
    0.0021921510342508554,
    0.014177670702338219,
    -0.0030531645752489567,
    0.038652289658784866,
    0.02731296978890896,
    0.02143906056880951,
    0.006895151454955339,
    0.0215799231082201,
    0.0038490300066769123,
    0.01107872650027275,
    -0.009529254399240017,
    -0.014804502949118614,
    0.02793275937438011,
    0.01186754833906889,
    -0.02445348910987377,
    -0.03397570177912712,
    0.005630922969430685,
    -0.0221151951700449,
    -0.03676475211977959,
    -0.01364239864051342,
    0.03242622688412666,
    0.0034845517948269844,
    0.015860961750149727,
    -0.01580461673438549,
    -0.03251074627041817,
    0.004623766057193279,
    0.006159152369946241,
    -0.03284881263971329,
    0.02174895629286766,
    -0.008169944398105145,
    -0.022129280492663383,
    -0.020438946783542633,
    0.026495974510908127,
    -0.0024597870651632547,
    -0.00671907514333725,
    0.01897399127483368,
    -0.0031218344811350107,
    -0.024495746940374374,
    -0.028932873159646988,
    -0.026481889188289642,
    0.01759355328977108,
    0.014452350325882435,
    0.003236284013837576,
    -0.002910542767494917,
    0.016029994934797287,
    0.03284881263971329,
    -0.007423380855470896,
    -0.0053456793539226055,
    -0.006250712089240551,
    0.016790645197033882,
    0.031524717807769775,
    -0.03200364485383034,
    -0.01156469713896513,
    -0.008972852490842342,
    -0.016818817704916,
    -0.0035162456333637238,
    -0.012473251670598984,
    -0.014290359802544117,
    -0.007011361885815859,
    -0.010261732153594494,
    0.0044336034916341305,
    0.000226698350161314,
    -0.005525276996195316,
    -0.016452578827738762,
    -0.015424291603267193,
    -0.0033366475254297256,
    -0.002602409105747938,
    0.0048491437919437885,
    0.023340687155723572,
    -0.0014623143943026662,
    -0.010691358707845211,
    -0.027129849418997765,
    -0.03758174553513527,
    -0.008684087544679642,
    0.00031385617330670357,
    -0.021720783784985542,
    0.01163512747734785,
    -0.02498876117169857,
    0.01563558354973793,
    -0.017269572243094444,
    0.029496317729353905,
    0.004673067480325699,
    -0.013325461186468601,
    -0.03166557848453522,
    -0.005852779373526573,
    -0.015043966472148895,
    0.004856186918914318,
    0.0335531160235405,
    -0.0015028120251372457,
    -0.050766345113515854,
    -0.008641829714179039,
    -0.0012008410412818193,
    0.021889816969633102,
    0.002711576409637928,
    0.00032265999470837414,
    -0.004408952780067921,
    0.03344042971730232,
    0.008381236344575882,
    -0.008853120729327202,
    -0.01075474638491869,
    0.011642171069979668,
    0.023495633155107498,
    -0.0054689329117536545,
    0.023242084309458733,
    -0.02539725787937641,
    0.01168442890048027,
    0.007627629209309816,
    0.022749070078134537,
    0.011860505677759647,
    -0.014191756956279278,
    -0.022298313677310944,
    -0.009360221214592457,
    0.015283430926501751,
    -0.00947290938347578,
    0.019058508798480034,
    -0.02627059817314148,
    -0.008219245821237564,
    -0.026791783049702644,
    0.044117700308561325,
    0.014156541787087917,
    0.0050569139420986176,
    -0.0018223905935883522,
    0.02252369187772274,
    0.012423950247466564,
    -0.004053278360515833,
    0.010867434553802013,
    -0.0065359557047486305,
    -0.012064754031598568,
    0.021889816969633102,
    -0.015649668872356415,
    -0.026721352711319923,
    -0.011811204254627228,
    0.017452692613005638,
    0.03349677100777626,
    -0.06468342244625092,
    -0.023002618923783302,
    -0.026186080649495125,
    -0.03670840710401535,
    -0.001389242708683014,
    -0.04417404532432556,
    0.039553798735141754,
    0.014903105795383453,
    0.013874819502234459,
    0.012395777739584446,
    0.009796890430152416,
    -0.01087447814643383,
    0.04893514886498451,
    -0.02583392895758152,
    -0.0024087249767035246,
    0.014734072610735893,
    0.0023224474862217903,
    0.019340230152010918,
    -0.027467917650938034,
    -0.04741385206580162,
    0.022636380046606064,
    0.03820153325796127,
    0.000601300853304565,
    0.031158478930592537,
    0.043807804584503174,
    0.001448228256776929,
    -0.014438264071941376,
    -0.006757812108844519,
    0.0009578555473126471,
    0.012959222309291363,
    0.030735895037651062,
    -0.0020178353879600763,
    -0.03642668202519417,
    -0.022678639739751816,
    0.016663869842886925,
    0.01173373032361269,
    0.03225719556212425,
    0.005891515873372555,
    0.019227541983127594,
    -0.010036353953182697,
    0.0226927250623703,
    -0.005296377930790186,
    -0.003982848022133112,
    -0.0031588105484843254,
    0.011775989085435867,
    0.023791441693902016,
    0.01587504707276821,
    0.024932416155934334,
    0.021875731647014618,
    0.001516898162662983,
    0.00891650840640068,
    0.008817905560135841,
    0.03803250193595886,
    -0.012346476316452026,
    0.020100880414247513,
    0.03352494537830353,
    -0.03217267990112305,
    0.01972055621445179,
    -0.03930025175213814,
    0.034567318856716156,
    -0.0069796680472791195,
    0.02653823420405388,
    -0.00691275903955102,
    -0.012839490547776222,
    0.020946048200130463,
    -0.009451780468225479,
    0.01786118932068348,
    -0.01650892198085785,
    0.008817905560135841,
    0.0181992556899786,
    0.027876414358615875,
    -0.00861365720629692,
    -0.029017388820648193,
    -0.025890272110700607,
    -0.013804389163851738,
    -0.004278656095266342,
    0.0011726687662303448,
    0.0029175858944654465,
    -0.06564127653837204,
    -0.007916394621133804,
    0.004201182629913092,
    -0.022819500416517258,
    0.008620699867606163,
    0.18300676345825195,
    0.02097421884536743,
    0.01295217964798212,
    0.015748271718621254,
    0.013022609986364841,
    0.03465183451771736,
    -0.014522780664265156,
    -0.00454277079552412,
    -0.01381143182516098,
    0.01810065284371376,
    -0.014804502949118614,
    -0.014889019541442394,
    0.008775647729635239,
    -0.007124050986021757,
    -0.005835171788930893,
    -0.0036835181526839733,
    -0.02279132790863514,
    -0.01935431733727455,
    0.012163356877863407,
    0.010099741630256176,
    -0.003070772159844637,
    -0.010818133130669594,
    0.008092470467090607,
    -0.02305896393954754,
    0.024326713755726814,
    -0.0013531470904126763,
    -0.010296947322785854,
    -0.009832105599343777,
    0.015931392088532448,
    0.022030677646398544,
    0.0035725899506360292,
    0.025045106187462807,
    0.0032679778523743153,
    0.00691275903955102,
    -0.03656754642724991,
    0.0006153869908303022,
    0.013614226132631302,
    -0.008381236344575882,
    0.013142341747879982,
    0.007099400274455547,
    0.005109736695885658,
    -0.039525628089904785,
    0.004025106318295002,
    -0.027411572635173798,
    -0.0032943892292678356,
    -0.002419289667159319,
    -0.022467346861958504,
    0.0020477683283388615,
    0.006842328701168299,
    0.026467803865671158,
    -0.030707722529768944,
    -0.016184940934181213,
    0.0016031755367293954,
    0.0031112697906792164,
    -0.005711918231099844,
    -0.02994707226753235,
    -0.010402592830359936,
    0.014508694410324097,
    0.005282291676849127,
    0.0028788489289581776,
    -0.0035144847352057695,
    0.025707153603434563,
    -0.023763269186019897,
    0.02245326153934002,
    -0.04403318464756012,
    0.008071341551840305,
    -0.02498876117169857,
    0.0038736804854124784,
    0.008127686567604542,
    0.019931847229599953,
    -0.005356243811547756,
    0.010381463915109634,
    -0.020917875692248344,
    -0.0028383515309542418,
    -0.019579695537686348,
    -0.01752312295138836,
    0.017410432919859886,
    0.018382376059889793,
    0.04203295707702637,
    0.007557198870927095,
    -0.004303306806832552,
    0.028552547097206116,
    0.017706241458654404,
    -0.010092698968946934,
    -0.04507555440068245,
    -0.02387595921754837,
    0.011339319869875908,
    -0.007430423516780138,
    -0.01511439774185419,
    -0.005046349484473467,
    -0.00874747522175312,
    -0.03879315033555031,
    0.0016700845444574952,
    -0.009691244922578335,
    -0.029101906344294548,
    0.004997048061341047,
    -0.0031235951464623213,
    0.019171196967363358,
    -0.021086908876895905,
    0.010881520807743073,
    -0.03837056830525398,
    0.05113258212804794,
    -0.03284881263971329,
    0.010465980507433414,
    -0.01897399127483368,
    -0.010015225037932396,
    -0.022636380046606064,
    0.049554940313100815,
    0.012881748378276825,
    0.002612973563373089,
    -0.001275673508644104,
    -0.007402251474559307,
    -0.0022731462959200144,
    -0.024678867310285568,
    0.006395094562321901,
    0.009874364361166954,
    -0.008184030652046204,
    0.0024421794805675745,
    -0.005690788850188255,
    0.012994437478482723,
    0.008007953874766827,
    -0.009155971929430962,
    0.0025830406229943037,
    -0.018480977043509483,
    -0.0064831324853003025,
    -0.0221574530005455,
    -0.027270711958408356,
    -0.020114967599511147,
    0.005423152819275856,
    0.0017722088377922773,
    0.01566375605762005,
    -0.03025696612894535,
    0.028115877881646156,
    0.0041554030030965805,
    -0.026974903419613838,
    -2.5022105546668172e-05,
    0.014135412871837616,
    -0.012508466839790344,
    0.010282861068844795,
    0.007937523536384106,
    -0.030341483652591705,
    0.005697831977158785,
    -0.0009138364694081247,
    -0.018959905952215195,
    0.010296947322785854,
    -0.024059077724814415,
    0.008479839190840721,
    -0.008092470467090607,
    0.01664978265762329,
    0.007071227766573429,
    -0.018692269921302795,
    -0.007937523536384106,
    0.007018405012786388,
    -0.01529751718044281,
    0.022241970524191856,
    -0.021622180938720703,
    -0.011268888600170612,
    -0.0232279971241951,
    0.038849495351314545,
    0.021805299445986748,
    -0.005025220103561878,
    -0.01367761380970478,
    0.013480408117175102,
    -0.023594236001372337,
    -0.018480977043509483,
    -0.019368402659893036,
    -0.17680886387825012,
    0.005726004019379616,
    0.017917534336447716,
    -0.04724481701850891,
    0.01300148107111454,
    -0.02472112514078617,
    -0.013107126578688622,
    -0.0007566882995888591,
    -0.00668738130480051,
    -0.020354431122541428,
    0.03042600117623806,
    -0.0022766676265746355,
    0.005606272257864475,
    -0.021551750600337982,
    0.0012862380826845765,
    0.009163015522062778,
    0.0003140762564726174,
    -0.012092926539480686,
    0.03335591033101082,
    0.011452008038759232,
    0.028932873159646988,
    -0.01648074947297573,
    0.022326486185193062,
    0.008733388967812061,
    0.015593324787914753,
    -0.011437922716140747,
    -0.018988078460097313,
    0.01705828122794628,
    -0.007254347205162048,
    -0.02924276702105999,
    -0.015283430926501751,
    0.019368402659893036,
    0.049723971635103226,
    0.00676133343949914,
    0.014593211002647877,
    0.006148587446659803,
    0.03803250193595886,
    -0.01631171628832817,
    -0.0011260085739195347,
    0.020199483260512352,
    0.023650581017136574,
    0.01580461673438549,
    0.008740431629121304,
    -0.014093154110014439,
    -0.009585598483681679,
    0.013600140810012817,
    0.03758174553513527,
    -0.01998819224536419,
    0.007166309282183647,
    0.0018100653542205691,
    0.032876983284950256,
    -0.004968875553458929,
    0.004000455606728792,
    -0.01338884886354208,
    0.0013549078721553087,
    0.005567535292357206,
    0.015945477411150932,
    0.0020072709303349257,
    -0.0019104288658127189,
    0.0007720949943177402,
    0.0185091495513916,
    -0.007254347205162048,
    -0.005028741899877787,
    -0.005063957069069147,
    -0.03437011316418648,
    0.004940703511238098,
    0.01083926297724247,
    0.02015722543001175,
    -0.01631171628832817,
    0.01863592490553856,
    0.010423722676932812,
    0.021565835922956467,
    0.012628198601305485,
    0.004000455606728792,
    0.0029123034328222275,
    0.02711576409637928,
    -0.031890954822301865,
    0.034285593777894974,
    0.030003417283296585,
    -0.01880495809018612,
    0.0007390806567855179,
    0.03445462882518768,
    -0.013276159763336182,
    0.03369397670030594,
    -0.007536069490015507,
    0.013057825155556202,
    0.001516898162662983,
    -0.011825290508568287,
    0.00043600916978903115,
    -0.007669887505471706,
    0.008050212636590004,
    -0.010761789046227932,
    0.007585370913147926,
    0.0010115588083863258,
    -0.018579579889774323,
    0.01705828122794628,
    0.012853576801717281,
    -0.019467005506157875,
    0.018650012090802193,
    -0.0018628882244229317,
    -0.0001591290347278118,
    0.02569306641817093,
    -0.011437922716140747,
    -0.016593439504504204,
    0.03191912919282913,
    0.022946275770664215,
    -0.01672021485865116,
    0.018523236736655235,
    0.014494608156383038,
    -0.012008409947156906,
    -0.023847786709666252,
    0.008402365259826183,
    0.015508808195590973,
    0.01573418639600277,
    -0.03228536620736122,
    0.018480977043509483,
    0.0038666375912725925,
    0.001542429206892848,
    0.018480977043509483,
    0.007514940574765205,
    0.03386301174759865,
    0.00170706061180681,
    0.007131093647330999,
    0.013938207179307938,
    -0.029665350914001465,
    -0.03180643916130066,
    -0.10192710161209106,
    -0.033046018332242966,
    0.01867818273603916,
    0.004581507761031389,
    -0.000703425204847008,
    -0.0019209934398531914,
    0.0005704875220544636,
    0.00683880690485239,
    -0.023354772478342056,
    0.013748044148087502,
    -0.011895720846951008,
    0.002132285153493285,
    -0.02181938663125038,
    -0.004056800156831741,
    -0.021523578092455864,
    -0.002579519059509039,
    -0.01310008391737938,
    0.010388507507741451,
    0.0021551749669015408,
    0.007493811193853617,
    -0.005247076507657766,
    -0.0014359030174091458,
    0.0005960185662843287,
    0.040398966521024704,
    -0.036792922765016556,
    -0.0003930905368179083,
    -0.03163740411400795,
    0.013445192947983742,
    0.016706127673387527,
    -0.0010106784757226706,
    0.018903560936450958,
    -0.007514940574765205,
    0.004680110607296228,
    -0.0139945512637496,
    0.02731296978890896,
    0.029721694067120552,
    -0.030397828668355942,
    -0.041892096400260925,
    0.029693523421883583,
    -0.03346860036253929,
    0.005271727219223976,
    0.004715325776487589,
    0.005134387407451868,
    -0.03538431227207184,
    -0.019861416891217232,
    0.008564355783164501,
    -0.00028986576944589615,
    0.015748271718621254,
    0.0005185449845157564,
    -0.0055111912079155445,
    -0.036652062088251114,
    0.0015133765991777182,
    -0.016297630965709686,
    -0.013755087740719318,
    0.02414359524846077,
    0.008233332075178623,
    -0.014691813848912716,
    0.005817563738673925,
    -0.011747816577553749,
    -0.01694559119641781,
    0.025890272110700607,
    -0.012614112347364426,
    -0.00018609073595143855,
    0.039159391075372696,
    -0.024439403787255287,
    0.007067706435918808,
    0.016029994934797287,
    0.0032345233485102654,
    -0.012501424178481102,
    -0.02667909488081932,
    -0.014762244187295437,
    0.018819045275449753,
    -0.01352266687899828,
    0.013318418525159359,
    -0.043695118278265,
    0.011409750208258629,
    0.003278542309999466,
    -0.01752312295138836,
    0.03296149894595146,
    -0.028679322451353073,
    -0.021424975246191025,
    -0.0036042837891727686,
    -0.03572237864136696,
    -0.014550953172147274,
    -0.008057255297899246,
    0.01981915906071663,
    0.03879315033555031,
    0.00163134781178087,
    0.0025636721402406693,
    -0.05814746767282486,
    0.0070219263434410095,
    0.00926866102963686,
    0.035947754979133606,
    -0.02627059817314148,
    0.007719188928604126,
    -0.022988533601164818,
    -0.020678412169218063,
    0.014438264071941376,
    -0.029721694067120552,
    0.006278884131461382,
    -0.029834384098649025,
    -0.01633988879621029,
    -0.06986711174249649,
    -0.005018176976591349,
    0.0011753098806366324,
    -0.03420107811689377,
    0.010296947322785854,
    -0.02489015832543373,
    0.02305896393954754,
    -0.009578555822372437,
    -0.0024245718959718943,
    0.008367150090634823,
    -0.02842577174305916,
    0.02134045772254467,
    -0.02066432498395443,
    -0.014973536133766174,
    0.012480294331908226,
    -0.009761675260961056,
    0.05510486662387848,
    -0.016973763704299927,
    0.03315870463848114,
    0.0047223689034581184,
    0.02677769772708416,
    -0.0006048224167898297,
    0.02815813571214676,
    -0.004588550888001919,
    -0.030172450467944145,
    0.018311943858861923,
    -0.033074188977479935,
    0.02842577174305916,
    -0.004430082160979509,
    -0.02559446357190609,
    0.012691586278378963,
    -0.010430765338242054,
    -0.000518985150847584,
    0.04296264052391052,
    0.028721580281853676,
    -0.023411117494106293,
    0.00914892926812172,
    -0.00438078073784709,
    0.003736340906471014,
    -0.00845871027559042,
    -0.03549699857831001,
    -0.035130761563777924,
    0.02653823420405388,
    -0.027172109112143517,
    -0.02370692603290081,
    -0.01938248984515667,
    0.008331934921443462,
    0.02134045772254467,
    0.001520419609732926,
    0.0068141561932861805,
    0.025101449340581894,
    -0.011959108524024487,
    -0.035130761563777924,
    -0.019368402659893036,
    0.003266216954216361,
    -0.023382944986224174,
    0.030369656160473824,
    -0.024509834125638008,
    -0.01573418639600277,
    -0.004975918680429459,
    0.03515893220901489,
    0.018410546705126762,
    0.001241338555701077,
    -0.014903105795383453,
    -0.012297174893319607,
    -0.024960588663816452,
    -0.050569139420986176,
    -0.027510175481438637,
    0.016903333365917206,
    -0.04879428818821907,
    -0.03608861565589905,
    -0.03786346688866615,
    0.011825290508568287,
    0.022199710831046104,
    0.024467574432492256,
    -0.022495519369840622,
    -0.013586054556071758,
    -0.01725548692047596,
    -0.00654299883171916,
    0.04724481701850891,
    0.023016706109046936,
    -0.021833471953868866,
    -0.019748728722333908,
    0.014987622387707233,
    0.043244361877441406,
    0.013177556917071342,
    -0.003859594464302063,
    -0.006268319673836231,
    -0.0137269152328372,
    0.008043169975280762,
    0.0039898911491036415,
    0.0185091495513916,
    -0.003718733321875334,
    -0.017621725797653198,
    0.007557198870927095,
    0.0026200166903436184,
    -0.010360334999859333,
    -0.008395322598516941,
    0.009409522637724876,
    0.008155858144164085,
    0.006574692204594612,
    0.003982848022133112,
    0.02887652814388275,
    -0.02174895629286766,
    -0.0020019884686917067,
    -0.022509606555104256,
    -0.01691742055118084,
    -0.01384664699435234,
    -0.026467803865671158,
    0.0335531160235405,
    0.0058739082887768745,
    -0.019255714491009712,
    -0.005183688830584288,
    0.00871226005256176,
    0.008670001290738583,
    0.002009031595662236,
    0.02590435929596424,
    -0.0006761333206668496,
    -0.010691358707845211,
    0.005785870365798473,
    -0.003063729265704751,
    -0.0014174149837344885,
    0.020537549629807472,
    -0.018551409244537354,
    0.006074635311961174,
    0.013543795794248581,
    0.00445825420320034,
    -0.00438078073784709,
    0.00326269562356174,
    -0.007317734882235527,
    -0.0023224474862217903,
    -0.004968875553458929,
    -0.03853959962725639,
    -0.034764520823955536,
    0.0007263151346705854,
    -0.0235378909856081,
    -0.012276045978069305,
    -0.016523009166121483,
    -0.007423380855470896,
    0.0755579024553299,
    -0.012804275378584862,
    -0.025383172556757927,
    0.00019368402718100697,
    0.015339775010943413,
    0.02552403323352337,
    -0.0011444964911788702,
    -0.014790416695177555,
    -0.018819045275449753,
    -0.014931278303265572,
    0.014804502949118614,
    0.002458026399835944,
    0.0024421794805675745,
    -0.014565039426088333,
    -0.0055111912079155445,
    0.00666977372020483,
    -0.016015907749533653,
    -0.019438832998275757,
    0.017917534336447716,
    0.0015221803914755583,
    0.013529709540307522,
    0.012430992908775806,
    -0.007916394621133804,
    -0.03789163753390312,
    -0.02890470065176487,
    0.002100591314956546,
    0.011987281031906605,
    0.022706812247633934,
    -0.012367605231702328,
    -0.04025810584425926,
    0.02346746064722538,
    -0.0028735667001456022,
    -0.01082517672330141,
    -0.019255714491009712,
    0.008606613613665104,
    0.02474929764866829,
    0.0013487451942637563,
    -0.002826026175171137,
    -0.008839034475386143,
    0.02073475532233715,
    -0.023453375324606895,
    0.010015225037932396,
    -0.010198344476521015,
    -0.033412255346775055,
    0.011402706615626812,
    -0.023495633155107498,
    0.02803136222064495,
    0.009733502753078938,
    -0.04439942166209221
  ]
}
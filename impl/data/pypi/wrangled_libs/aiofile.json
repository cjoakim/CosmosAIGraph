{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: end users/desktop",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "natural language :: russian",
    "operating system :: macos :: macos x",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development :: libraries",
    "topic :: system",
    "topic :: system :: operating system"
  ],
  "description": "asynchronous file operations.\naiofile\n=======\n\n.. image:: https://github.com/mosquito/aiofile/workflows/tox/badge.svg\n    :target: https://github.com/mosquito/aiofile/actions?query=branch%3amaster\n    :alt: github actions\n\n.. image:: https://img.shields.io/pypi/v/aiofile.svg\n    :target: https://pypi.python.org/pypi/aiofile/\n    :alt: latest version\n\n.. image:: https://img.shields.io/pypi/wheel/aiofile.svg\n    :target: https://pypi.python.org/pypi/aiofile/\n\n.. image:: https://img.shields.io/pypi/pyversions/aiofile.svg\n    :target: https://pypi.python.org/pypi/aiofile/\n\n.. image:: https://img.shields.io/pypi/l/aiofile.svg\n    :target: https://pypi.python.org/pypi/aiofile/\n\n.. image:: https://coveralls.io/repos/github/mosquito/aiofile/badge.svg?branch=master\n    :target: https://coveralls.io/github/mosquito/aiofile?branch=master\n\n\n\nreal asynchronous file operations with asyncio support.\n\n\nstatus\n------\n\ndevelopment - stable\n\n\nfeatures\n--------\n\n* since version 2.0.0 using `caio`_, which contains linux ``libaio`` and two\n  thread-based implementations (c-based and pure-python).\n* aiofile has no internal pointer. you should pass ``offset`` and\n  ``chunk_size`` for each operation or use helpers (reader or writer).\n  the simples way is to use ``async_open`` for creating object with\n  file-like interface.\n* for linux using implementation based on `libaio`_.\n* for posix (macos x and optional linux) using implementation\n  based on `threadpool`_.\n* otherwise using pure-python thread-based implementation.\n* implementation chooses automatically depending on system compatibility.\n\n.. _caio: https://pypi.org/project/caio\n.. _libaio: https://pagure.io/libaio\n.. _threadpool: https://github.com/mbrossard/threadpool/\n\n\nlimitations\n-----------\n\n* linux native aio implementation is not able to open special files.\n  asynchronous operations against special fs like ``/proc/`` ``/sys/`` are not\n  supported by the kernel. it's not a `aiofile`s or `caio` issue.\n  in this cases, you might switch to thread-based implementations\n  (see troubleshooting_ section).\n  however, when used on supported file systems, the linux implementation has a\n  smaller overhead and is preferred but it's not a silver bullet.\n\ncode examples\n-------------\n\nall code examples requires python 3.6+.\n\nhigh-level api\n++++++++++++++\n\n``async_open`` helper\n~~~~~~~~~~~~~~~~~~~~~\n\nhelper mimics python file-like objects, it returns file-like\nobjects with similar but async methods.\n\nsupported methods:\n\n* ``async def read(length = -1)`` - reading chunk from file, when length is\n  ``-1``, will be reading file to the end.\n* ``async def write(data)`` - writing chunk to file\n* ``def seek(offset)`` - setting file pointer position\n* ``def tell()`` - returns current file pointer position\n* ``async def readline(size=-1, newline=\"\\n\")`` - read chunks until\n  newline or eof. since version 3.7.0 ``__aiter__`` returns ``linereader``.\n\n  this method is suboptimal for small lines because it doesn't reuse read buffer.\n  when you want to read file by lines please avoid using ``async_open``\n  use ``linereader`` instead.\n* ``def __aiter__() -> linereader`` - iterator over lines.\n* ``def iter_chunked(chunk_size: int = 32768) -> reader`` - iterator over\n  chunks.\n* ``.file`` property contains aiofile object\n\n\nbasic example:\n\n.. code-block:: python\n    :name: test_basic\n\n    import asyncio\n    from pathlib import path\n    from tempfile import gettempdir\n\n    from aiofile import async_open\n\n    tmp_filename = path(gettempdir()) / \"hello.txt\"\n\n    async def main():\n        async with async_open(tmp_filename, 'w+') as afp:\n            await afp.write(\"hello \")\n            await afp.write(\"world\")\n            afp.seek(0)\n\n            print(await afp.read())\n\n            await afp.write(\"hello from\\nasync world\")\n            print(await afp.readline())\n            print(await afp.readline())\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\nexample without context manager:\n\n.. code-block:: python\n    :name: test_no_context_manager\n\n    import asyncio\n    import atexit\n    import os\n    from tempfile import mktemp\n\n    from aiofile import async_open\n\n\n    tmp_name = mktemp()\n    atexit.register(os.unlink, tmp_name)\n\n\n    async def main():\n        afp = await async_open(tmp_name, \"w\")\n        await afp.write(\"hello\")\n        await afp.close()\n\n\n    asyncio.run(main())\n    assert open(tmp_name, \"r\").read() == \"hello\"\n\n\nconcatenate example program (``cat``):\n\n.. code-block:: python\n\n    import asyncio\n    import sys\n    from argparse import argumentparser\n    from pathlib import path\n\n    from aiofile import async_open\n\n    parser = argumentparser(\n        description=\"read files line by line using asynchronous io api\"\n    )\n    parser.add_argument(\"file_name\", nargs=\"+\", type=path)\n\n    async def main(arguments):\n        for src in arguments.file_name:\n            async with async_open(src, \"r\") as afp:\n                async for line in afp:\n                    sys.stdout.write(line)\n\n\n    asyncio.run(main(parser.parse_args()))\n\n\ncopy file example program (``cp``):\n\n.. code-block:: python\n\n    import asyncio\n    from argparse import argumentparser\n    from pathlib import path\n\n    from aiofile import async_open\n\n    parser = argumentparser(\n        description=\"copying files using asynchronous io api\"\n    )\n    parser.add_argument(\"source\", type=path)\n    parser.add_argument(\"dest\", type=path)\n    parser.add_argument(\"--chunk-size\", type=int, default=65535)\n\n\n    async def main(arguments):\n        async with async_open(arguments.source, \"rb\") as src, \\\n                   async_open(arguments.dest, \"wb\") as dest:\n            async for chunk in src.iter_chunked(arguments.chunk_size):\n                await dest.write(chunk)\n\n\n    asyncio.run(main(parser.parse_args()))\n\n\nexample with opening already open file pointer:\n\n.. code-block:: python\n    :name: test_opened\n\n    import asyncio\n    from typing import io, any\n    from aiofile import async_open\n\n\n    async def main(fp: io[any]):\n        async with async_open(fp) as afp:\n            await afp.write(\"hello from\\nasync world\")\n            print(await afp.readline())\n\n\n    with open(\"test.txt\", \"w+\") as fp:\n        asyncio.run(main(fp))\n\n\nlinux native aio doesn't support reading and writing special files\n(e.g. procfs/sysfs/unix pipes/etc.), so you can perform operations with\nthese files using compatible context objects.\n\n.. code-block:: python\n\n    import asyncio\n    from aiofile import async_open\n    from caio import thread_aio_asyncio\n    from contextlib import asyncexitstack\n\n\n    async def main():\n        async with asyncexitstack() as stack:\n\n            # custom context should be reused\n            ctx = await stack.enter_async_context(\n                thread_aio_asyncio.asynciocontext()\n            )\n\n            # open special file with custom context\n            src = await stack.enter_async_context(\n                async_open(\"/proc/cpuinfo\", \"r\", context=ctx)\n            )\n\n            # open regular file with default context\n            dest = await stack.enter_async_context(\n                async_open(\"/tmp/cpuinfo\", \"w\")\n            )\n\n            # copying file content line by line\n            async for line in src:\n                await dest.write(line)\n\n\n    asyncio.run(main())\n\nlow-level api\n++++++++++++++\n\nthe `aiofile` class is a low-level interface for asynchronous file operations, and the read and write methods accept\nan `offset=0` in bytes at which the operation will be performed.\n\nthis allows you to do many independent io operations on an once open file without moving the virtual carriage.\n\nfor example, you may make 10 concurrent http requests by specifying the `range` header, and asynchronously write\none opened file, while the offsets must either be calculated manually, or use 10 instances of `writer` with\nspecified initial offsets.\n\nin order to provide sequential reading and writing, there is `writer`, `reader` and `linereader`. keep in mind\n`async_open` is not the same as aiofile, it provides a similar interface for file operations, it simulates methods\nlike read or write as it is implemented in the built-in open.\n\n.. code-block:: python\n    :name: test_low_level_api\n\n    import asyncio\n    from aiofile import aiofile\n\n\n    async def main():\n        async with aiofile(\"hello.txt\", 'w+') as afp:\n            payload = \"hello world\\n\"\n\n            await asyncio.gather(\n                *[afp.write(payload, offset=i * len(payload)) for i in range(10)]\n            )\n\n            await afp.fsync()\n\n            assert await afp.read(len(payload) * 10) == payload * 10\n\n    asyncio.run(main())\n\nthe low-level api in fact is just little bit sugared ``caio`` api.\n\n.. code-block:: python\n\n    import asyncio\n    from aiofile import aiofile\n\n\n    async def main():\n        async with aiofile(\"/tmp/hello.txt\", 'w+') as afp:\n            await afp.write(\"hello \")\n            await afp.write(\"world\", offset=7)\n            await afp.fsync()\n\n            print(await afp.read())\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\n\n``reader`` and ``writer``\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nwhen you want to read or write file linearly following example\nmight be helpful.\n\n.. code-block:: python\n\n    import asyncio\n    from aiofile import aiofile, reader, writer\n\n\n    async def main():\n        async with aiofile(\"/tmp/hello.txt\", 'w+') as afp:\n            writer = writer(afp)\n            reader = reader(afp, chunk_size=8)\n\n            await writer(\"hello\")\n            await writer(\" \")\n            await writer(\"world\")\n            await afp.fsync()\n\n            async for chunk in reader:\n                print(chunk)\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\n\n\n``linereader`` - read file line by line\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nlinereader is a helper that is very effective when you want to read a file\nlinearly and line by line.\n\nit contains a buffer and will read the fragments of the file chunk by\nchunk into the buffer, where it will try to find lines.\n\nthe default chunk size is 4kb.\n\n.. code-block:: python\n\n    import asyncio\n    from aiofile import aiofile, linereader, writer\n\n\n    async def main():\n        async with aiofile(\"/tmp/hello.txt\", 'w+') as afp:\n            writer = writer(afp)\n\n            await writer(\"hello\")\n            await writer(\" \")\n            await writer(\"world\")\n            await writer(\"\\n\")\n            await writer(\"\\n\")\n            await writer(\"from async world\")\n            await afp.fsync()\n\n            async for line in linereader(afp):\n                print(line)\n\n\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n\n\nwhen you want to read file by lines please avoid to use ``async_open``\nuse ``linereader`` instead.\n\n\nmore examples\n-------------\n\nuseful examples with ``aiofile``\n\nasync csv dict reader\n+++++++++++++++++++++\n\n.. code-block:: python\n\n    import asyncio\n    import io\n    from csv import dictreader\n\n    from aiofile import aiofile, linereader\n\n\n    class asyncdictreader:\n        def __init__(self, afp, **kwargs):\n            self.buffer = io.bytesio()\n            self.file_reader = linereader(\n                afp, line_sep=kwargs.pop('line_sep', '\\n'),\n                chunk_size=kwargs.pop('chunk_size', 4096),\n                offset=kwargs.pop('offset', 0),\n            )\n            self.reader = dictreader(\n                io.textiowrapper(\n                    self.buffer,\n                    encoding=kwargs.pop('encoding', 'utf-8'),\n                    errors=kwargs.pop('errors', 'replace'),\n                ), **kwargs,\n            )\n            self.line_num = 0\n\n        def __aiter__(self):\n            return self\n\n        async def __anext__(self):\n            if self.line_num == 0:\n                header = await self.file_reader.readline()\n                self.buffer.write(header)\n\n            line = await self.file_reader.readline()\n\n            if not line:\n                raise stopasynciteration\n\n            self.buffer.write(line)\n            self.buffer.seek(0)\n\n            try:\n                result = next(self.reader)\n            except stopiteration as e:\n                raise stopasynciteration from e\n\n            self.buffer.seek(0)\n            self.buffer.truncate(0)\n            self.line_num = self.reader.line_num\n\n            return result\n\n\n    async def main():\n        async with aiofile('sample.csv', 'rb') as afp:\n            async for item in asyncdictreader(afp):\n                print(item)\n\n\n    asyncio.run(main())\n\n\n.. _troubleshooting:\n\ntroubleshooting\n---------------\n\nthe caio ``linux`` implementation works normal for modern linux kernel versions\nand file systems. so you may have problems specific for your environment.\nit's not a bug and might be resolved some ways:\n\n1. upgrade the kernel\n2. use compatible file systems\n3. use threads based or pure python implementation.\n\nthe caio since version 0.7.0 contains some ways to do this.\n\n1. in runtime use the environment variable ``caio_impl`` with\npossible values:\n\n* ``linux`` - use native linux kernels aio mechanism\n* ``thread`` - use thread based implementation written in c\n* ``python`` - use pure python implementation\n\n2. file ``default_implementation`` located near ``__init__.py`` in caio\ninstallation path. it's useful for distros package maintainers. this file\nmight contains comments (lines starts with ``#`` symbol) and the first line\nshould be one of ``linux`` ``thread`` or ``python``.\n\n3. you might manually manage contexts:\n\n.. code-block:: python\n\n    import asyncio\n\n    from aiofile import async_open\n    from caio import linux_aio_asyncio, thread_aio_asyncio\n\n\n    async def main():\n        linux_ctx = linux_aio_asyncio.asynciocontext()\n        threads_ctx = thread_aio_asyncio.asynciocontext()\n\n        async with async_open(\"/tmp/test.txt\", \"w\", context=linux_ctx) as afp:\n            await afp.write(\"hello\")\n\n        async with async_open(\"/tmp/test.txt\", \"r\", context=threads_ctx) as afp:\n            print(await afp.read())\n\n\n    asyncio.run(main())\n\n\n",
  "docs_url": null,
  "keywords": "aio,python,asyncio,fileio,io",
  "license": "apache 2",
  "name": "aiofile",
  "package_url": "https://pypi.org/project/aiofile/",
  "project_url": "https://pypi.org/project/aiofile/",
  "project_urls": {
    "Homepage": "http://github.com/mosquito/aiofile"
  },
  "release_url": "https://pypi.org/project/aiofile/3.8.8/",
  "requires_dist": [
    "caio (~=0.9.0)",
    "aiomisc-pytest ; extra == 'develop'",
    "pytest ; extra == 'develop'",
    "pytest-rst ; extra == 'develop'",
    "pytest-cov ; extra == 'develop'",
    "coveralls ; extra == 'develop'"
  ],
  "requires_python": ">=3.7, <4",
  "summary": "asynchronous file operations.",
  "version": "3.8.8",
  "releases": [],
  "developers": [
    "me@mosquito.su"
  ],
  "kwds": "aiofile linux_aio_asyncio pathlib fileio thread_aio_asyncio",
  "license_kwds": "apache 2",
  "libtype": "pypi",
  "id": "pypi_aiofile",
  "homepage": "http://github.com/mosquito/aiofile",
  "release_count": 43,
  "dependency_ids": [
    "pypi_aiomisc_pytest",
    "pypi_caio",
    "pypi_coveralls",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_rst"
  ],
  "documentation_summary": "The HTML text provides information about aiofile, a Python package available on PyPI for asynchronous file operations, compatible with asyncio. The latest version, 3.8.8, was released on August 22, 2023. It requires Python versions 3.7 to less than 4 and is licensed under the Apache Software License (Apache 2). The package, developed by Dmitry Orlov, supports various operating systems including MacOS X and Linux. It offers a high-level API with functions like `async_open` for file operations, and a low-level API for more granular control over asynchronous file I/O. The package also includes troubleshooting tips and examples for usage, such as reading files line by line or copying files asynchronously.",
  "embedding": [
    -0.013113626278936863,
    -0.013771038502454758,
    -0.011861084960401058,
    -0.011653481051325798,
    -0.005722939036786556,
    0.024054335430264473,
    -0.006193506997078657,
    -0.013058265671133995,
    -0.005387313198298216,
    -0.03313353285193443,
    -0.0005959952832199633,
    0.008158820681273937,
    -0.017507903277873993,
    0.02030363120138645,
    0.009383682161569595,
    -0.012276291847229004,
    0.008200341835618019,
    -0.015044339932501316,
    -0.0039029475301504135,
    0.003300897078588605,
    0.010214096866548061,
    0.030144041404128075,
    -0.02604733034968376,
    -0.0056917984038591385,
    -0.0054011535830795765,
    0.005390773061662912,
    0.008055019192397594,
    -0.01979154162108898,
    0.013701836578547955,
    -0.030393164604902267,
    0.02772199921309948,
    -0.0043181548826396465,
    -0.028151046484708786,
    -0.0004374813288450241,
    -0.01168116182088852,
    -0.021161725744605064,
    0.0077436137944459915,
    -0.010919949039816856,
    0.03233079984784126,
    -0.004269714001566172,
    0.040828704833984375,
    0.0034444895572960377,
    -0.010290217585861683,
    -0.005989363417029381,
    -0.04581119120121002,
    -0.007536010351032019,
    0.016026997938752174,
    -0.0341300293803215,
    0.0016400683671236038,
    0.0058232806622982025,
    0.0026365655940026045,
    0.021521572023630142,
    -0.0010821337345987558,
    -0.002221358474344015,
    0.012082529254257679,
    -0.0005851826281286776,
    -0.009750448167324066,
    0.011072191409766674,
    -0.025161555036902428,
    -0.004584579262882471,
    -0.015888594090938568,
    -0.005027466919273138,
    -0.010933789424598217,
    0.005788680166006088,
    -0.022351985797286034,
    0.020649636164307594,
    -0.019514737650752068,
    0.023957453668117523,
    0.0012127510271966457,
    -0.015404186211526394,
    0.04603263735771179,
    0.011874925345182419,
    -0.0045049977488815784,
    -0.0014860957162454724,
    0.03673199564218521,
    -0.004923664964735508,
    -0.026517897844314575,
    0.02720990963280201,
    0.0047887228429317474,
    -0.009003075771033764,
    -0.001788850873708725,
    -0.019777702167630196,
    0.005861341487616301,
    0.029396668076515198,
    0.016705168411135674,
    0.010663904249668121,
    0.00650491239503026,
    0.025161555036902428,
    -0.023376164957880974,
    -0.01854592002928257,
    0.012096368707716465,
    0.006103545427322388,
    0.015251943841576576,
    0.03653823211789131,
    0.0035742418840527534,
    0.02246270887553692,
    0.004844083916395903,
    0.012193250469863415,
    -0.0026694361586123705,
    0.0008494447101838887,
    0.01179188396781683,
    0.003550021443516016,
    -0.007805895060300827,
    -0.010234856978058815,
    -0.03692575916647911,
    -0.004947885405272245,
    0.02232430689036846,
    -0.006321529392153025,
    0.04417804256081581,
    0.00016943480295594782,
    -0.005989363417029381,
    0.03371482342481613,
    0.03634446859359741,
    -0.018850406631827354,
    -0.0006928769871592522,
    0.002280179411172867,
    0.026891585439443588,
    0.0016184429405257106,
    -0.008629389107227325,
    -0.0007837035227566957,
    -0.011321315541863441,
    0.015293464064598083,
    -0.00018673510930966586,
    0.01706501469016075,
    0.010989150032401085,
    -0.017992310225963593,
    -0.0037922256160527468,
    -0.012518496252596378,
    0.004453097004443407,
    -0.030144041404128075,
    0.0425448939204216,
    0.01664980873465538,
    0.02136932872235775,
    -0.00923835951834917,
    -0.01934865489602089,
    0.0006781717529520392,
    -0.004909825045615435,
    -0.012947543524205685,
    -0.026836223900318146,
    -0.005172789562493563,
    0.012373173609375954,
    0.02813720703125,
    -0.04260025545954704,
    -0.009805809706449509,
    -0.004605339840054512,
    0.028898419812321663,
    0.008594788610935211,
    -0.017757026478648186,
    -0.0018926527118310332,
    0.007660572417080402,
    0.03565245494246483,
    -0.017217257991433144,
    -0.02608885057270527,
    -0.036206066608428955,
    0.0006863893941044807,
    0.005017086863517761,
    -0.008816231973469257,
    0.009570525027811527,
    -0.011189833283424377,
    -0.00952900480479002,
    -0.0015198312466964126,
    0.0433199480175972,
    -0.0439012385904789,
    -0.00243415217846632,
    -0.02280871383845806,
    0.017369499430060387,
    0.0212724469602108,
    0.013141307048499584,
    -0.011397437192499638,
    -0.029535070061683655,
    0.009985732845962048,
    0.0018217215547338128,
    -0.039223238825798035,
    0.01613771915435791,
    0.02046971395611763,
    -0.0016314182430505753,
    0.011030671186745167,
    0.0205942764878273,
    -0.004370055627077818,
    0.012393934652209282,
    0.018103033304214478,
    -0.0049651856534183025,
    0.02806800603866577,
    0.0358739010989666,
    -0.014213926158845425,
    0.0032265058252960443,
    0.006781717296689749,
    0.022130543366074562,
    0.0010873237624764442,
    0.011847244575619698,
    0.015085861086845398,
    0.02723759040236473,
    -0.014878257177770138,
    -0.05311883985996246,
    -0.5784112811088562,
    0.018559761345386505,
    -0.036372147500514984,
    -0.03227543830871582,
    0.008221101947128773,
    0.011259034276008606,
    0.008601708337664604,
    0.0018615121953189373,
    0.020704997703433037,
    0.013604954816401005,
    -0.01652524620294571,
    0.026573259383440018,
    0.016677487641572952,
    -0.0018182614585384727,
    -0.007055061869323254,
    -0.015777872875332832,
    0.007563690654933453,
    -0.019265612587332726,
    -0.026836223900318146,
    -0.0006613039295189083,
    -7.264774382065298e-08,
    0.03152806684374809,
    -0.009362922050058842,
    -0.013272789306938648,
    -0.0027507476042956114,
    0.02460794523358345,
    0.023888252675533295,
    -0.01630380190908909,
    0.008151900954544544,
    0.016981974244117737,
    -0.018587442114949226,
    0.009605126455426216,
    0.020912600681185722,
    -0.007100042887032032,
    0.055333275347948074,
    -0.023182401433587074,
    -0.004574199207127094,
    0.0486345998942852,
    0.017812388017773628,
    0.02441418170928955,
    0.013404271565377712,
    -0.026351815089583397,
    -0.017189577221870422,
    0.0019341734005138278,
    0.040468860417604446,
    -0.024178897961974144,
    0.03997061029076576,
    -0.0014739854959771037,
    -0.0020985263399779797,
    -0.031555745750665665,
    -0.009362922050058842,
    -0.003037932561710477,
    0.01386099960654974,
    -0.035569414496421814,
    0.002728257095441222,
    -0.007293805945664644,
    0.026379495859146118,
    4.757582246384118e-06,
    0.007646732032299042,
    -0.0026677062269300222,
    -0.004816403146833181,
    -0.007279966026544571,
    -0.003006791928783059,
    -0.009944211691617966,
    0.006805937737226486,
    0.019846903160214424,
    0.0015648120315745473,
    -0.03789457678794861,
    -0.01569483056664467,
    -0.021424690261483192,
    0.014892097562551498,
    0.007051602005958557,
    0.0001536482886876911,
    -0.032386161386966705,
    0.02570132352411747,
    0.0637204647064209,
    0.02200598083436489,
    0.03180487081408501,
    -0.013321230188012123,
    0.004044809844344854,
    0.004913284908980131,
    0.010871508158743382,
    0.0031936352606862783,
    -0.03147270530462265,
    0.03709184005856514,
    0.03454523906111717,
    -0.024981632828712463,
    -0.009584365412592888,
    0.01113447267562151,
    -0.03166646882891655,
    0.002510273363441229,
    0.007383767515420914,
    -0.02618573233485222,
    -0.032552242279052734,
    0.016386844217777252,
    0.028026483952999115,
    -0.03487740457057953,
    -0.01074694562703371,
    -0.01569483056664467,
    -0.0005696123698726296,
    -0.003629602724686265,
    -0.0177431870251894,
    -0.014047842472791672,
    -0.009113797917962074,
    0.02345920540392399,
    0.002858009422197938,
    -0.0006600064225494862,
    -0.0018044211901724339,
    0.0065568131394684315,
    -0.0275559164583683,
    -0.004051730036735535,
    -0.04841315746307373,
    -0.00810346007347107,
    -0.023943614214658737,
    0.014698334038257599,
    -0.029922597110271454,
    0.03269064426422119,
    0.004207432735711336,
    0.03778385370969772,
    -0.01925177313387394,
    0.008830072358250618,
    -0.019653139635920525,
    0.00585442129522562,
    0.019071849063038826,
    0.005695258267223835,
    0.016802050173282623,
    0.01803383231163025,
    -0.004885604605078697,
    -0.04431644454598427,
    -0.010919949039816856,
    0.027445195242762566,
    -0.007231525145471096,
    0.013369671069085598,
    -0.016760529950261116,
    0.011079111136496067,
    0.004370055627077818,
    0.014158564619719982,
    0.008061939850449562,
    0.0020137547980993986,
    0.003435839433223009,
    -0.022573430091142654,
    0.008186501450836658,
    0.004394276067614555,
    0.014283127151429653,
    0.0037057241424918175,
    -0.03515420854091644,
    -0.013916360214352608,
    0.020123707130551338,
    -0.01883656531572342,
    -0.011556600220501423,
    -0.02903682179749012,
    0.004224732983857393,
    -0.02255959063768387,
    0.021106364205479622,
    -0.019362494349479675,
    -0.019597778096795082,
    0.011881845071911812,
    -0.02226894535124302,
    -0.02653173916041851,
    0.00012769782915711403,
    -0.003975608851760626,
    0.01681589148938656,
    -0.0016167130088433623,
    0.01973618194460869,
    -0.017494061961770058,
    0.011771123856306076,
    -0.00877471175044775,
    0.016774369403719902,
    0.009231439791619778,
    -0.008345664478838444,
    -0.0064910720102488995,
    -0.009729688055813313,
    -0.0038545066490769386,
    0.005480734631419182,
    0.026033490896224976,
    -0.0084840664640069,
    -0.02336232364177704,
    0.03435147553682327,
    -0.010795386508107185,
    -0.00898231565952301,
    0.0015648120315745473,
    0.01742486096918583,
    -0.010767705738544464,
    -0.014296967536211014,
    0.009058436378836632,
    0.007715933490544558,
    0.0028147585690021515,
    0.034600596874952316,
    -0.015030499547719955,
    0.02358376793563366,
    0.0034237292129546404,
    0.0044115763157606125,
    -0.0366489551961422,
    0.024428023025393486,
    -0.0002480430412106216,
    0.04154839739203453,
    0.026863904669880867,
    0.0036053822841495275,
    0.015736352652311325,
    0.00400328915566206,
    0.015238103456795216,
    0.0005843176040798426,
    -0.007529090158641338,
    -0.01764630526304245,
    -0.007992737926542759,
    -0.01847671903669834,
    0.024857070297002792,
    -0.011964886449277401,
    0.02044203318655491,
    -0.023832892999053,
    0.025452200323343277,
    -0.011314395815134048,
    -0.032386161386966705,
    0.00014510625624097884,
    -0.0012516765855252743,
    0.0212724469602108,
    0.005536095704883337,
    0.010324818082153797,
    0.000886640336830169,
    -0.006712515838444233,
    0.010788466781377792,
    0.0018649722915142775,
    -0.03083605319261551,
    0.019833063706755638,
    0.013355830684304237,
    -0.001199775724671781,
    0.028192566707730293,
    0.022421186789870262,
    0.013577274978160858,
    -0.02024826966226101,
    -0.0035707817878574133,
    0.010996069759130478,
    0.02069115824997425,
    -0.019362494349479675,
    0.0277496799826622,
    0.0004727306659333408,
    0.0549180693924427,
    -0.01302366517484188,
    0.018089191988110542,
    -0.046281758695840836,
    0.02053891494870186,
    0.03343801945447922,
    0.04301546514034271,
    -0.033188894391059875,
    0.011411277577280998,
    0.025742845609784126,
    0.0076121315360069275,
    0.013134387321770191,
    -0.022476548328995705,
    -0.005646817851811647,
    0.003107133787125349,
    0.00584058091044426,
    -0.007944297045469284,
    0.005345792509615421,
    0.004975566174834967,
    -0.010061853565275669,
    0.011099872179329395,
    -0.002593314740806818,
    0.030697651207447052,
    -0.006871678866446018,
    0.010068774223327637,
    0.011265954934060574,
    -0.01854592002928257,
    0.01415164489299059,
    0.032773688435554504,
    -0.014130884781479836,
    -0.024275779724121094,
    -0.022504229098558426,
    -0.023376164957880974,
    -0.002712687011808157,
    -0.026268774643540382,
    -0.026254933327436447,
    0.0018926527118310332,
    -0.03465595841407776,
    0.06338829547166824,
    0.01745254173874855,
    -0.008297223597764969,
    0.03166646882891655,
    0.0008433896000497043,
    -0.008290302939713001,
    -0.03972148522734642,
    -0.03188791126012802,
    0.032801367342472076,
    0.010483981110155582,
    0.0031469243112951517,
    -0.002499893307685852,
    -0.02986723557114601,
    0.031112857162952423,
    -0.009362922050058842,
    -0.010989150032401085,
    0.005892481654882431,
    0.011425117962062359,
    0.010982230305671692,
    0.015404186211526394,
    -0.03523724898695946,
    0.02791576273739338,
    0.04298778250813484,
    -0.0033251175191253424,
    -0.021839898079633713,
    -0.024178897961974144,
    -0.001447170041501522,
    -0.02130012772977352,
    -0.0060481843538582325,
    0.05062759667634964,
    0.04055190086364746,
    0.004549978766590357,
    0.007833575829863548,
    0.011812644079327583,
    -0.0019843443296849728,
    -0.026767022907733917,
    0.021521572023630142,
    0.0005812900490127504,
    -0.01633148267865181,
    0.005484194960445166,
    0.015888594090938568,
    0.0010596433421596885,
    -0.02845553122460842,
    -0.029119864106178284,
    0.0073214867152273655,
    0.01140435691922903,
    -0.016635967418551445,
    -0.019680820405483246,
    -0.006757496856153011,
    -0.011971807107329369,
    0.019113371148705482,
    0.018186073750257492,
    0.01562562957406044,
    0.004743741825222969,
    -0.038226742297410965,
    -0.03144502267241478,
    -0.01786774955689907,
    -0.0077436137944459915,
    0.005141648929566145,
    0.030808372423052788,
    -0.0016686138696968555,
    -0.0008901003748178482,
    0.018186073750257492,
    0.004684920888394117,
    0.015085861086845398,
    0.016179239377379417,
    0.00951516442000866,
    0.0018701623193919659,
    0.00453959871083498,
    -0.012940623797476292,
    0.01199948787689209,
    0.013044425286352634,
    0.0065568131394684315,
    0.016317641362547874,
    0.04578351229429245,
    0.004117471165955067,
    0.00943212304264307,
    0.03415771201252937,
    -0.03352105990052223,
    -0.014393849298357964,
    0.008698590099811554,
    -0.005491115152835846,
    0.029147544875741005,
    0.03911251574754715,
    -0.014961298555135727,
    0.03202631324529648,
    0.01029713824391365,
    0.011868005618453026,
    -0.004511917941272259,
    -0.004518838133662939,
    0.034019310027360916,
    0.014587611891329288,
    0.013272789306938648,
    -0.005740239284932613,
    -0.007965058088302612,
    -0.030116360634565353,
    -0.01355651393532753,
    0.025521401315927505,
    -0.013224348425865173,
    -0.004937505349516869,
    0.022836394608020782,
    0.021064843982458115,
    -0.02643485739827156,
    -0.008947715163230896,
    0.05486270785331726,
    0.027223750948905945,
    -0.0043389149941504,
    -0.021161725744605064,
    0.019168730825185776,
    -0.024248098954558372,
    0.006715976167470217,
    -0.032773688435554504,
    -0.008055019192397594,
    -0.003167684655636549,
    0.007238445337861776,
    -0.0212724469602108,
    -0.020608115941286087,
    0.008532507345080376,
    -0.009902691468596458,
    0.015182742848992348,
    0.03269064426422119,
    -0.0070377616211771965,
    -0.04149303585290909,
    -0.021120205521583557,
    0.031970951706171036,
    -0.011923366226255894,
    -0.011736523360013962,
    -0.0008269543177448213,
    -0.006722896359860897,
    0.01986074261367321,
    0.02005450613796711,
    -0.030808372423052788,
    0.0012110209790989757,
    -0.010241776704788208,
    -0.007577531039714813,
    0.03352105990052223,
    0.05123656615614891,
    -0.015251943841576576,
    0.018601281568408012,
    0.03454523906111717,
    0.008463306352496147,
    0.03905715420842171,
    0.0248985905200243,
    -0.006349209696054459,
    0.00837334431707859,
    0.00810346007347107,
    -0.005176249425858259,
    0.02845553122460842,
    0.0051174284890294075,
    -0.02297479659318924,
    -0.002939320867881179,
    -0.011771123856306076,
    -0.001986074261367321,
    -0.010615463368594646,
    0.00019019516184926033,
    0.006542973220348358,
    0.007861255668103695,
    0.042240411043167114,
    -0.01918257214128971,
    -0.0022300085984170437,
    0.026199573650956154,
    -0.008179581724107265,
    0.005068987607955933,
    0.0028926099184900522,
    -0.034185390919446945,
    0.020843399688601494,
    -0.000673846632707864,
    0.03263528272509575,
    0.000139483658131212,
    0.0014549551997333765,
    0.006975480820983648,
    -0.02377753145992756,
    0.012124049477279186,
    0.007328406907618046,
    0.010580862872302532,
    0.0247048269957304,
    0.012345493771135807,
    -0.04356907308101654,
    -0.03150038421154022,
    0.013833318836987019,
    0.012290132232010365,
    0.012691499665379524,
    0.002037975238636136,
    -0.04439948871731758,
    0.0006811992498114705,
    -0.009771209210157394,
    -0.004954805597662926,
    0.029950277879834175,
    -0.02015138790011406,
    -0.0006323259440250695,
    -0.013999402523040771,
    -0.011466638185083866,
    0.00233035022392869,
    -0.0026002349331974983,
    -0.011072191409766674,
    -0.02422041818499565,
    -0.015224263072013855,
    0.01366723608225584,
    -0.014933617785573006,
    0.01275378093123436,
    0.010096454992890358,
    -0.02088492177426815,
    0.0006011853693053126,
    0.0011850704904645681,
    -0.020746517926454544,
    0.0004126121348235756,
    0.009376762434840202,
    -0.030697651207447052,
    0.014601452276110649,
    0.002034515142440796,
    0.02046971395611763,
    -0.00574369914829731,
    0.015514908358454704,
    0.001050128135830164,
    -0.006155446637421846,
    0.015501067973673344,
    -0.017092695459723473,
    -0.016566766425967216,
    -0.0016504485392943025,
    -0.008574028499424458,
    0.00847022607922554,
    0.026296455413103104,
    -0.013362751342356205,
    -0.06510448455810547,
    -0.00010455868323333561,
    0.02550756186246872,
    0.0026331054978072643,
    -0.025867408141493797,
    -0.02772199921309948,
    -0.014559932053089142,
    0.014670653268694878,
    -0.029119864106178284,
    -0.00561567721888423,
    -0.002100256271660328,
    -0.004525758326053619,
    -0.01752174273133278,
    0.014892097562551498,
    -0.003285326762124896,
    0.03426843136548996,
    0.01049090176820755,
    0.006345749832689762,
    0.0250923540443182,
    0.008304143324494362,
    0.020704997703433037,
    0.02640717662870884,
    -0.005937462672591209,
    0.009113797917962074,
    -0.03343801945447922,
    0.0068128579296171665,
    0.01017257571220398,
    -0.0049651856534183025,
    0.00542191369459033,
    0.0062004271894693375,
    -0.006587953772395849,
    -0.025839727371931076,
    0.022241264581680298,
    -0.014975138939917088,
    -0.01472601480782032,
    0.015985475853085518,
    -0.010248697362840176,
    -0.0012750320602208376,
    -0.045672789216041565,
    -0.014200085774064064,
    -0.04713985323905945,
    -0.0031797948759049177,
    -0.0024220419581979513,
    0.007238445337861776,
    0.00907919742166996,
    -0.013175907544791698,
    0.010331738740205765,
    0.013854079879820347,
    -0.005127808544784784,
    0.045036137104034424,
    0.004169371910393238,
    0.029285946860909462,
    0.015058180317282677,
    0.011840324848890305,
    -0.010331738740205765,
    -0.02046971395611763,
    -0.014947458170354366,
    -0.002615805249661207,
    0.011099872179329395,
    -0.006290388759225607,
    -0.004335455130785704,
    -0.017217257991433144,
    -0.013701836578547955,
    -0.009217599406838417,
    -0.016469884663820267,
    -0.014061682857573032,
    -0.002960081212222576,
    0.037396326661109924,
    0.020123707130551338,
    -0.02049739472568035,
    -0.0011720953043550253,
    -0.009390602819621563,
    0.01976386085152626,
    -0.03429611399769783,
    0.0009428663179278374,
    0.008290302939713001,
    -0.022407347336411476,
    -0.036372147500514984,
    0.02261495031416416,
    0.029396668076515198,
    0.004138231743127108,
    0.02390209399163723,
    0.02762511745095253,
    -0.0027057668194174767,
    -0.05630209296941757,
    -0.026324134320020676,
    -0.0026036950293928385,
    0.01158428005874157,
    0.022130543366074562,
    -0.006743656471371651,
    -0.010276378132402897,
    0.020940281450748444,
    -0.0009515164420008659,
    -0.008248782716691494,
    -0.029756514355540276,
    -0.011964886449277401,
    0.043679796159267426,
    -0.041216231882572174,
    0.001266381936147809,
    -0.02502315305173397,
    -0.007695172913372517,
    -0.007068902254104614,
    -0.010400939732789993,
    -0.019625458866357803,
    -0.029285946860909462,
    -0.018490560352802277,
    -0.01440768875181675,
    0.029590431600809097,
    0.004875224083662033,
    -0.01471217442303896,
    -0.010345579124987125,
    -0.004024049732834101,
    -0.006065485067665577,
    -0.01934865489602089,
    0.00989577081054449,
    0.0409947894513607,
    -0.004079410340636969,
    -0.0074529689736664295,
    -0.00021711875160690397,
    -0.017217257991433144,
    -0.015072020702064037,
    0.026199573650956154,
    0.021535411477088928,
    -0.008795471861958504,
    0.047056812793016434,
    -0.0145045705139637,
    0.014040922746062279,
    -0.015058180317282677,
    0.03346569836139679,
    -0.009106877259910107,
    0.01835215650498867,
    -0.012400854378938675,
    -0.008926954120397568,
    0.004902904853224754,
    0.006411490961909294,
    -0.017217257991433144,
    -0.02660094015300274,
    -0.017604785040020943,
    0.04340299218893051,
    -0.027320632711052895,
    -0.0039029475301504135,
    -0.017369499430060387,
    -0.0017308949027210474,
    -0.013611875474452972,
    -0.029119864106178284,
    -0.009487483650445938,
    0.00877471175044775,
    -0.022130543366074562,
    -0.0017992311622947454,
    0.038392823189496994,
    0.0017499253153800964,
    0.003985988907516003,
    0.023569926619529724,
    0.012179411016404629,
    -0.013480393216013908,
    -0.009404442273080349,
    -0.030559249222278595,
    0.02329312264919281,
    -0.011348996311426163,
    -0.021521572023630142,
    0.023030158132314682,
    0.017604785040020943,
    -0.02107868529856205,
    -0.031970951706171036,
    0.025978129357099533,
    0.01748022250831127,
    0.00017516552179586142,
    -0.02961811237037182,
    0.009964972734451294,
    -0.018421359360218048,
    -0.013051345944404602,
    -0.0005834525800310075,
    0.023500725626945496,
    0.007729773875325918,
    -0.007882016710937023,
    -0.022185903042554855,
    0.004287014249712229,
    0.002233468694612384,
    0.03150038421154022,
    0.001742140157148242,
    -0.011238274164497852,
    -0.028787698596715927,
    -0.002335540484637022,
    -0.021922938525676727,
    -0.009861170314252377,
    -0.03385322540998459,
    0.04492541775107384,
    0.008546347729861736,
    -7.585099956486374e-05,
    0.019611619412899017,
    0.03047620691359043,
    -0.0015838423278182745,
    0.015127381309866905,
    -0.031168218702077866,
    -0.010871508158743382,
    -0.009397522546350956,
    0.03343801945447922,
    -0.0009817919926717877,
    -0.03028244338929653,
    -0.039638444781303406,
    -0.017341820523142815,
    -0.0037057241424918175,
    0.0011219243751838803,
    0.0020743058994412422,
    0.028760017827153206,
    0.010449380613863468,
    -0.024344980716705322,
    -0.005788680166006088,
    -0.006857838481664658,
    0.007542930543422699,
    0.010774626396596432,
    -0.011861084960401058,
    -0.02845553122460842,
    -0.01440768875181675,
    0.019500896334648132,
    0.014449209906160831,
    0.015487227588891983,
    0.0059167020954191685,
    0.0071692438796162605,
    0.0008109515183605254,
    -0.0043458351865410805,
    -0.016954293474555016,
    -0.03205399587750435,
    0.02049739472568035,
    -0.0052489107474684715,
    0.010850748047232628,
    -0.005556856282055378,
    -0.0007075822213664651,
    0.026254933327436447,
    -0.007978897541761398,
    -0.003219585632905364,
    -0.006017044186592102,
    0.012124049477279186,
    -0.01224169135093689,
    -0.008359504863619804,
    0.0183244775980711,
    -0.007293805945664644,
    -0.002280179411172867,
    0.008899274282157421,
    0.037839215248823166,
    0.006933959666639566,
    0.005581076722592115,
    -0.012739940546452999,
    -0.030531568452715874,
    -0.01168116182088852,
    -0.011667321436107159,
    0.012442375533282757,
    -0.011930285952985287,
    0.008954634889960289,
    0.020511234179139137,
    0.015085861086845398,
    0.015418026596307755,
    -0.021480051800608635,
    -0.008442546240985394,
    -0.03426843136548996,
    0.017784707248210907,
    0.003074263222515583,
    -0.0044565568678081036,
    -0.031361982226371765,
    0.006269628182053566,
    -0.002249038778245449,
    -0.015141221694648266,
    -0.006567193660885096,
    0.1686294823884964,
    -0.001871892367489636,
    0.017992310225963593,
    0.0017006193520501256,
    -0.042351134121418,
    0.021992139518260956,
    0.02665630169212818,
    0.00033259825431741774,
    -0.0279434435069561,
    0.06560273468494415,
    0.00137969886418432,
    -0.02156309224665165,
    -0.0004779207520186901,
    -0.004304314497858286,
    -0.015542589128017426,
    -0.012705340050160885,
    -0.025645963847637177,
    -0.019805382937192917,
    -0.02049739472568035,
    0.016193080693483353,
    -0.0020293251145631075,
    -0.034766681492328644,
    -0.033991627395153046,
    -0.017244938760995865,
    0.007833575829863548,
    0.010082614608108997,
    -0.002264609094709158,
    -0.023113200441002846,
    0.024109696969389915,
    -0.011355916038155556,
    -0.003415079088881612,
    0.021798375993967056,
    -0.018725844100117683,
    0.014753694646060467,
    -0.04885604605078697,
    -0.0017706856597214937,
    -0.00232689012773335,
    -0.002363220788538456,
    0.0022040579933673143,
    -0.01350807398557663,
    -0.0045326785184443,
    -0.033770184963941574,
    -0.005370012950152159,
    -0.01300982479006052,
    0.0075844512321054935,
    -0.0008252242696471512,
    -0.020732678472995758,
    -0.004871764220297337,
    -0.020926441997289658,
    0.025175394490361214,
    -0.02740367315709591,
    -0.029285946860909462,
    0.001986074261367321,
    -0.018822725862264633,
    -0.006034344434738159,
    -0.014117044396698475,
    -0.006802477408200502,
    0.02492627128958702,
    0.011542759835720062,
    0.006598334293812513,
    -0.015957795083522797,
    0.03424075245857239,
    -0.03590158000588417,
    0.017300298437476158,
    -0.056357454508543015,
    0.019362494349479675,
    -0.04093942791223526,
    -0.007522169966250658,
    -0.016442203894257545,
    0.014006322249770164,
    0.007722853682935238,
    -0.016732849180698395,
    -0.030310124158859253,
    -0.02188141830265522,
    -0.011189833283424377,
    -0.01720341667532921,
    0.06084169074892998,
    0.014449209906160831,
    0.015141221694648266,
    0.008186501450836658,
    -0.01236625388264656,
    0.002579474588856101,
    0.006324989255517721,
    0.039195556193590164,
    -0.008830072358250618,
    -0.023306962102651596,
    0.008816231973469257,
    0.006158906500786543,
    -0.016594447195529938,
    -0.022836394608020782,
    -0.017632463946938515,
    -0.025881247594952583,
    0.0029687313362956047,
    -0.0054668947122991085,
    0.012691499665379524,
    -0.004359675571322441,
    -0.02903682179749012,
    -0.012663818895816803,
    0.003985988907516003,
    0.0071554034948349,
    -0.012359334155917168,
    0.04777650535106659,
    0.01256001740694046,
    -0.03623374551534653,
    -0.00725920544937253,
    0.007093122694641352,
    -0.025618283078074455,
    0.01355651393532753,
    0.00988193042576313,
    -0.010663904249668121,
    0.001982614165171981,
    -0.015002819709479809,
    -0.0038475864566862583,
    -0.015099701471626759,
    0.007847415283322334,
    0.002728257095441222,
    0.002200598130002618,
    -0.021383170038461685,
    0.0036226825322955847,
    0.018213754519820213,
    -0.00184075185097754,
    0.003480820218101144,
    -0.0039963689632713795,
    -0.007902776822447777,
    -0.029811875894665718,
    -0.022435028105974197,
    -0.03271832689642906,
    0.007570610847324133,
    -0.004297394305467606,
    -0.00021009051124565303,
    0.008048099465668201,
    -0.027611277997493744,
    0.013079025782644749,
    0.02049739472568035,
    -0.014172405004501343,
    0.016981974244117737,
    -0.01472601480782032,
    -0.015777872875332832,
    0.010608543641865253,
    -0.009757368825376034,
    -0.011992567218840122,
    -0.016981974244117737,
    0.007314566522836685,
    0.005020546726882458,
    0.01408244390040636,
    -0.010850748047232628,
    0.010816146619617939,
    0.007020461373031139,
    -0.002577744657173753,
    0.005992823746055365,
    -0.020801879465579987,
    -0.009660487063229084,
    0.03125125914812088,
    0.01501666009426117,
    -0.004916745238006115,
    -0.017300298437476158,
    -0.0004316424601711333,
    -0.003236885881051421,
    0.0030310123693197966,
    0.006715976167470217,
    -0.018282955512404442,
    -0.02190909907221794,
    -0.010345579124987125,
    -0.011252114549279213,
    -0.029285946860909462,
    -0.03462827950716019,
    -0.1732797920703888,
    0.012809141539037228,
    0.0007417503511533141,
    -0.015362665988504887,
    0.024621786549687386,
    0.000574369914829731,
    0.00888543389737606,
    -0.004255873616784811,
    0.01159812044352293,
    -0.021258607506752014,
    0.02402665466070175,
    -0.033991627395153046,
    0.012041008099913597,
    -0.009099957533180714,
    0.008892353624105453,
    -0.012663818895816803,
    0.0062661683186888695,
    3.3357140637235716e-05,
    0.007224604953080416,
    0.022310465574264526,
    0.03772849217057228,
    -0.038614269345998764,
    0.007847415283322334,
    -0.0027576677966862917,
    0.028095684945583344,
    -0.00912763737142086,
    -0.016608286648988724,
    -0.004103630781173706,
    0.003626142628490925,
    -0.04893908649682999,
    0.015279624611139297,
    -0.0028822298627346754,
    0.015376505441963673,
    0.015072020702064037,
    0.04376283660531044,
    0.00916223879903555,
    0.013404271565377712,
    -0.021037163212895393,
    -0.016788210719823837,
    0.01357035432010889,
    0.020414352416992188,
    0.05289739370346069,
    0.024082016199827194,
    -0.03244151920080185,
    -0.0006755766808055341,
    0.002378791105002165,
    0.020414352416992188,
    -0.028081845492124557,
    0.008331824094057083,
    -0.01214480958878994,
    0.01462913304567337,
    -0.02402665466070175,
    -0.009923451580107212,
    -0.0033597180154174566,
    0.011667321436107159,
    0.014027082361280918,
    -0.015210422687232494,
    0.015251943841576576,
    -0.0020916061475872993,
    -0.018725844100117683,
    0.0012629218399524689,
    -0.0015890324721112847,
    0.0026036950293928385,
    0.01957009918987751,
    0.004785262513905764,
    -0.016608286648988724,
    -0.003729944583028555,
    0.03728560358285904,
    0.003287056926637888,
    0.004370055627077818,
    0.015265784226357937,
    0.016691328957676888,
    -0.0013831589603796601,
    -0.0070343017578125,
    0.020677316933870316,
    -0.004681461025029421,
    -0.028317129239439964,
    0.032579924911260605,
    0.013404271565377712,
    0.013383511453866959,
    -0.01199948787689209,
    0.0549180693924427,
    -0.009356001392006874,
    0.010124134831130505,
    0.0018372917547821999,
    -0.0010371529497206211,
    -0.020234430208802223,
    -0.019528577104210854,
    -0.018656643107533455,
    -0.008643229492008686,
    0.028704656288027763,
    -0.006795557681471109,
    -0.01591627486050129,
    -0.010227937251329422,
    0.006875138729810715,
    0.011259034276008606,
    0.018075352534651756,
    -0.008061939850449562,
    0.0002990789071191102,
    -0.018213754519820213,
    0.005875181406736374,
    0.01028329785913229,
    -0.009888851083815098,
    8.931279444368556e-05,
    0.04511918127536774,
    0.03997061029076576,
    -0.02297479659318924,
    -0.015127381309866905,
    0.03130662068724632,
    -0.007231525145471096,
    -0.02236582711338997,
    -0.001133169629611075,
    -0.008331824094057083,
    0.018850406631827354,
    -0.04027509689331055,
    0.02361144870519638,
    -0.00357770174741745,
    -0.0252861175686121,
    -0.00037195644108578563,
    -0.03972148522734642,
    0.03695343807339668,
    -0.019611619412899017,
    -0.00832490436732769,
    0.026351815089583397,
    -0.021120205521583557,
    0.0003648200654424727,
    -0.08409329503774643,
    -0.01655292697250843,
    -0.020677316933870316,
    0.022227425128221512,
    -0.01854592002928257,
    -0.017244938760995865,
    -0.008878513239324093,
    0.041852883994579315,
    -0.00944596342742443,
    0.007715933490544558,
    -0.001987804425880313,
    0.007141563575714827,
    -0.009951132349669933,
    0.0036434431094676256,
    -0.01565331034362316,
    -0.0016815890558063984,
    -0.04110551252961159,
    -0.0009272960596717894,
    -0.03291209042072296,
    0.016026997938752174,
    0.011189833283424377,
    0.012345493771135807,
    0.022725673392415047,
    -0.006155446637421846,
    -0.028926100581884384,
    0.006259248126298189,
    -0.0341300293803215,
    0.008366424590349197,
    0.004802563227713108,
    0.026102691888809204,
    0.01309286616742611,
    -0.023791370913386345,
    -0.008110379800200462,
    -0.007224604953080416,
    0.03269064426422119,
    -0.009293721057474613,
    -0.030559249222278595,
    -0.03144502267241478,
    0.025064673274755478,
    -0.008594788610935211,
    -0.002809568541124463,
    0.0061139254830777645,
    0.0022767193149775267,
    -0.021936779841780663,
    0.01330047007650137,
    0.009072276763617992,
    -0.0026331054978072643,
    -0.0027040366549044847,
    0.005027466919273138,
    -0.004439256619662046,
    0.013701836578547955,
    -0.0031936352606862783,
    -0.009944211691617966,
    0.0024756728671491146,
    0.01159812044352293,
    -0.037645451724529266,
    0.00683361804112792,
    -0.006193506997078657,
    -0.016788210719823837,
    -0.03161110728979111,
    -0.0025344938039779663,
    -0.007937377318739891,
    0.0070377616211771965,
    0.013618795201182365,
    0.005546475760638714,
    -0.02178453654050827,
    0.02332080341875553,
    0.018144553527235985,
    0.007515249773859978,
    -0.005830200854688883,
    -0.0039306278340518475,
    0.005435754079371691,
    -0.013888680376112461,
    0.002069115871563554,
    -0.0056641180999577045,
    0.012214011512696743,
    -0.017978470772504807,
    -0.008304143324494362,
    0.015708671882748604,
    0.016539085656404495,
    -0.02784656174480915,
    -0.011328236199915409,
    -0.015348825603723526,
    -0.026988467201590538,
    0.012615378014743328,
    0.007702093105763197,
    0.009508244693279266,
    -0.0052765910513699055,
    0.035375650972127914,
    -0.04755506291985512,
    -0.01896112784743309,
    0.015639470890164375,
    0.05145800858736038,
    0.02967347390949726,
    -0.0026832763105630875,
    0.00282686878927052,
    0.0006764417048543692,
    0.013819479383528233,
    -0.025978129357099533,
    0.0018788124434649944,
    -0.04639248177409172,
    -0.00037671401514671743,
    -0.07041914016008377,
    0.012276291847229004,
    0.027057668194174767,
    0.005601836834102869,
    0.012781460769474506,
    0.001939363544806838,
    0.01966698095202446,
    -0.018919607624411583,
    -1.666505340836011e-05,
    0.0003641712828539312,
    -0.021106364205479622,
    0.011833404190838337,
    -0.016954293474555016,
    0.017051175236701965,
    0.020746517926454544,
    0.0021244767121970654,
    0.042683299630880356,
    0.006830158177763224,
    0.02711302787065506,
    -0.01616539992392063,
    0.03133430331945419,
    0.00183902180287987,
    0.032579924911260605,
    0.020096028223633766,
    -0.029922597110271454,
    0.011058351024985313,
    -0.0013900790363550186,
    0.019929945468902588,
    -0.006674455478787422,
    -0.02759743668138981,
    0.0173556599766016,
    -0.0016980243381112814,
    0.017729345709085464,
    0.00932140089571476,
    0.010158735327422619,
    0.030088679865002632,
    0.03988756984472275,
    0.006695215590298176,
    0.005992823746055365,
    0.01299598440527916,
    -0.016774369403719902,
    -0.01927945390343666,
    0.03728560358285904,
    -0.010726185515522957,
    -0.003484280314296484,
    0.0010942439548671246,
    0.008940794505178928,
    0.011618880555033684,
    0.028926100581884384,
    0.004197052679955959,
    0.04492541775107384,
    -0.00584750110283494,
    -0.03958308324217796,
    -0.010124134831130505,
    0.014753694646060467,
    -0.014476890675723553,
    0.021743016317486763,
    -0.021549252793192863,
    -0.008830072358250618,
    -0.014269286766648293,
    0.04210200905799866,
    0.02168765477836132,
    0.020774198696017265,
    0.013341990299522877,
    -0.00837334431707859,
    -0.027472874149680138,
    -0.035375650972127914,
    -0.03138966113328934,
    -0.003534451127052307,
    -0.02608885057270527,
    -0.045285262167453766,
    -0.020012985914945602,
    0.01265689916908741,
    -0.014601452276110649,
    0.019556257873773575,
    -0.003743784734979272,
    -0.008463306352496147,
    -0.0018926527118310332,
    -0.01710653491318226,
    0.003236885881051421,
    0.02621341310441494,
    -0.030337804928421974,
    -0.029119864106178284,
    0.0054080733098089695,
    0.014670653268694878,
    -0.025106193497776985,
    -0.023403843864798546,
    0.00020673857943620533,
    -0.02499547228217125,
    0.02008218690752983,
    -0.012795301154255867,
    0.0026850064750760794,
    0.0013018475146964192,
    0.01784006878733635,
    0.01472601480782032,
    0.005394233390688896,
    -0.00832490436732769,
    0.006013583857566118,
    0.009791969321668148,
    0.0063319094479084015,
    0.010684664361178875,
    0.00047532570897601545,
    -0.00014986384485382587,
    -0.004750662017613649,
    -0.03515420854091644,
    -0.004664160776883364,
    -0.008456386625766754,
    -0.01867048256099224,
    0.0038683468010276556,
    0.05024006962776184,
    0.0017611704533919692,
    -0.002477402798831463,
    -0.009653567336499691,
    0.026683980599045753,
    -0.025784365832805634,
    0.012414694763720036,
    0.011459718458354473,
    -0.005020546726882458,
    -0.01480905618518591,
    0.0014912857441231608,
    0.0053423321805894375,
    0.016566766425967216,
    0.03329961746931076,
    -0.022988637909293175,
    -0.012649978511035442,
    0.015431866981089115,
    0.019334813579916954,
    -0.02156309224665165,
    0.01742486096918583,
    0.015265784226357937,
    -0.0046295602805912495,
    -0.0005678823217749596,
    -0.041825201362371445,
    -0.01908569037914276,
    0.0025863947812467813,
    -0.02618573233485222,
    0.005020546726882458,
    -0.00048700341721996665,
    -0.00010466681123944,
    0.0713602751493454,
    0.020525075495243073,
    -0.023043997585773468,
    0.002382251201197505,
    0.007100042887032032,
    0.009688167832791805,
    0.00292375055141747,
    -0.00510012824088335,
    0.00423511303961277,
    -0.014767535030841827,
    0.0033078172709792852,
    -0.0275559164583683,
    -0.03352105990052223,
    -0.03421306982636452,
    -0.007722853682935238,
    0.003546561347320676,
    -0.025521401315927505,
    0.004432336427271366,
    -0.0009999573230743408,
    0.016954293474555016,
    0.017300298437476158,
    0.012456214986741543,
    0.009840410202741623,
    -0.0019618538208305836,
    -0.04700145125389099,
    0.006453011650592089,
    -0.00912763737142086,
    0.013722597621381283,
    0.00669867591932416,
    -0.05361708626151085,
    0.0063595897518098354,
    0.008186501450836658,
    -0.005044767167419195,
    -0.019819222390651703,
    -0.0052696713246405125,
    -0.013757198117673397,
    -0.01246313564479351,
    0.0065291328355669975,
    0.007224604953080416,
    0.00896847527474165,
    -0.03991524875164032,
    0.0009333511115983129,
    -0.019750021398067474,
    -0.016539085656404495,
    0.0007292075897566974,
    -0.0006526538054458797,
    -0.008740111254155636,
    0.019196411594748497,
    -0.06432943046092987
  ]
}
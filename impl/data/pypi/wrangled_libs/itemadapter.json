{
  "classifiers": [
    "development status :: 3 - alpha",
    "framework :: scrapy",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http",
    "topic :: software development :: libraries :: application frameworks",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "common interface for data container classes\n# itemadapter\n[![version](https://img.shields.io/pypi/v/itemadapter.svg)](https://pypi.python.org/pypi/itemadapter)\n[![pyversions](https://img.shields.io/pypi/pyversions/itemadapter.svg)](https://pypi.python.org/pypi/itemadapter)\n[![actions](https://github.com/scrapy/itemadapter/workflows/tests/badge.svg)](https://github.com/scrapy/itemadapter/actions)\n[![codecov](https://codecov.io/gh/scrapy/itemadapter/branch/master/graph/badge.svg)](https://codecov.io/gh/scrapy/itemadapter)\n\n\nthe `itemadapter` class is a wrapper for data container objects, providing a\ncommon interface to handle objects of different types in an uniform manner,\nregardless of their underlying implementation.\n\ncurrently supported types are:\n\n* [`scrapy.item.item`](https://docs.scrapy.org/en/latest/topics/items.html#scrapy.item.item)\n* [`dict`](https://docs.python.org/3/library/stdtypes.html#dict)\n* [`dataclass`](https://docs.python.org/3/library/dataclasses.html)-based classes\n* [`attrs`](https://www.attrs.org)-based classes\n* [`pydantic`](https://pydantic-docs.helpmanual.io/)-based classes\n\nadditionally, interaction with arbitrary types is supported, by implementing\na pre-defined interface (see [extending `itemadapter`](#extending-itemadapter)).\n\n---\n\n## requirements\n\n* python 3.7+\n* [`scrapy`](https://scrapy.org/): optional, needed to interact with `scrapy` items\n* [`attrs`](https://pypi.org/project/attrs/): optional, needed to interact with `attrs`-based items\n* [`pydantic`](https://pypi.org/project/pydantic/): optional, needed to interact with `pydantic`-based items\n\n---\n\n## installation\n\n`itemadapter` is available on [`pypi`](https://pypi.python.org/pypi/itemadapter), it can be installed with `pip`:\n\n```\npip install itemadapter\n```\n\n---\n\n## license\n\n`itemadapter` is distributed under a [bsd-3](https://opensource.org/licenses/bsd-3-clause) license.\n\n---\n\n## basic usage\n\nthe following is a simple example using a `dataclass` object.\nconsider the following type definition:\n\n```python\n>>> from dataclasses import dataclass\n>>> from itemadapter import itemadapter\n>>> @dataclass\n... class inventoryitem:\n...     name: str\n...     price: float\n...     stock: int\n>>>\n```\n\nan `itemadapter` object can be treated much like a dictionary:\n\n```python\n>>> obj = inventoryitem(name='foo', price=20.5, stock=10)\n>>> itemadapter.is_item(obj)\ntrue\n>>> adapter = itemadapter(obj)\n>>> len(adapter)\n3\n>>> adapter[\"name\"]\n'foo'\n>>> adapter.get(\"price\")\n20.5\n>>>\n```\n\nthe wrapped object is modified in-place:\n```python\n>>> adapter[\"name\"] = \"bar\"\n>>> adapter.update({\"price\": 12.7, \"stock\": 9})\n>>> adapter.item\ninventoryitem(name='bar', price=12.7, stock=9)\n>>> adapter.item is obj\ntrue\n>>>\n```\n\n### converting to dict\n\nthe `itemadapter` class provides the `asdict` method, which converts\nnested items recursively. consider the following example:\n\n```python\n>>> from dataclasses import dataclass\n>>> from itemadapter import itemadapter\n>>> @dataclass\n... class price:\n...     value: int\n...     currency: str\n>>> @dataclass\n... class product:\n...     name: str\n...     price: price\n>>>\n```\n\n```python\n>>> item = product(\"stuff\", price(42, \"uyu\"))\n>>> adapter = itemadapter(item)\n>>> adapter.asdict()\n{'name': 'stuff', 'price': {'value': 42, 'currency': 'uyu'}}\n>>>\n```\n\nnote that just passing an adapter object to the `dict` built-in also works,\nbut it doesn't traverse the object recursively converting nested items:\n\n```python\n>>> dict(adapter)\n{'name': 'stuff', 'price': price(value=42, currency='uyu')}\n>>>\n```\n\n---\n\n## api reference\n\n### built-in adapters\n\nthe following adapters are included by default:\n\n* `itemadapter.adapter.scrapyitemadapter`: handles `scrapy` items\n* `itemadapter.adapter.dictadapter`: handles `python` dictionaries\n* `itemadapter.adapter.dataclassadapter`: handles `dataclass` objects\n* `itemadapter.adapter.attrsadapter`: handles `attrs` objects\n* `itemadapter.adapter.pydanticadapter`: handles `pydantic` objects\n\n### class `itemadapter.adapter.itemadapter(item: any)`\n\nthis is the main entrypoint for the package. tipically, user code\nwraps an item using this class, and proceeds to handle it with the provided interface.\n`itemadapter` implements the\n[`mutablemapping`](https://docs.python.org/3/library/collections.abc.html#collections.abc.mutablemapping)\ninterface, providing a `dict`-like api to manipulate data for the object it wraps\n(which is modified in-place).\n\n**attributes**\n\n#### class attribute `adapter_classes: collections.deque`\n\nstores the currently registered adapter classes. being a\n[`collections.deque`](https://docs.python.org/3/library/collections.html#collections.deque),\nit supports efficient addition/deletion of adapters classes to both ends.\n\nthe order in which the adapters are registered is important. when an `itemadapter` object is\ncreated for a specific item, the registered adapters are traversed in order and the first\nadapter class to return `true` for the `is_item` class method is used for all subsequent\noperations. the default order is the one defined in the\n[built-in adapters](#built-in-adapters) section.\n\nsee the section on [extending itemadapter](#extending-itemadapter) for additional information.\n\n**methods**\n\n#### class method `is_item(item: any) -> bool`\n\nreturn `true` if any of the registed adapters can handle the item\n(i.e. if any of them returns `true` for its `is_item` method with\n`item` as argument), `false` otherwise.\n\n#### class method `is_item_class(item_class: type) -> bool`\n\nreturn `true` if any of the registered adapters can handle the item class\n(i.e. if any of them returns `true` for its `is_item_class` method with\n`item_class` as argument), `false` otherwise.\n\n#### class method `get_field_meta_from_class(item_class: type, field_name: str) -> mappingproxytype`\n\nreturn a [`types.mappingproxytype`](https://docs.python.org/3/library/types.html#types.mappingproxytype)\nobject, which is a read-only mapping with metadata about the given field. if the item class does not\nsupport field metadata, or there is no metadata for the given field, an empty object is returned.\n\nthe returned value is taken from the following sources, depending on the item type:\n\n  * [`scrapy.item.field`](https://docs.scrapy.org/en/latest/topics/items.html#item-fields)\n    for `scrapy.item.item`s\n  * [`dataclasses.field.metadata`](https://docs.python.org/3/library/dataclasses.html#dataclasses.field)\n    for `dataclass`-based items\n  * [`attr.attribute.metadata`](https://www.attrs.org/en/stable/examples.html#metadata)\n    for `attrs`-based items\n  * [`pydantic.fields.fieldinfo`](https://pydantic-docs.helpmanual.io/usage/schema/#field-customisation)\n    for `pydantic`-based items\n\n#### class method `get_field_names_from_class(item_class: type) -> optional[list[str]]`\n\nreturn a list with the names of all the fields defined for the item class.\nif an item class doesn't support defining fields upfront, none is returned.\n\n#### `get_field_meta(field_name: str) -> mappingproxytype`\n\nreturn metadata for the given field, if available. unless overriden in a custom adapter class, by default\nthis method calls the adapter's `get_field_meta_from_class` method, passing the wrapped item's class.\n\n#### `field_names() -> collections.abc.keysview`\n\nreturn a [keys view](https://docs.python.org/3/library/collections.abc.html#collections.abc.keysview)\nwith the names of all the defined fields for the item.\n\n#### `asdict() -> dict`\n\nreturn a `dict` object with the contents of the adapter. this works slightly different than\ncalling `dict(adapter)`, because it's applied recursively to nested items (if there are any).\n\n\n### function `itemadapter.utils.is_item(obj: any) -> bool`\n\nreturn `true` if the given object belongs to (at least) one of the supported types,\n`false` otherwise. this is an alias, using the `itemadapter.adapter.itemadapter.is_item`\nclass method is encouraged for better performance.\n\n\n### function `itemadapter.utils.get_field_meta_from_class(item_class: type, field_name: str) -> types.mappingproxytype`\n\nalias for `itemadapter.adapter.itemadapter.get_field_meta_from_class`\n\n---\n\n## metadata support\n\n`scrapy.item.item`, `dataclass`, `attrs`, and `pydantic` objects allow the definition of\narbitrary field metadata. this can be accessed through a\n[`mappingproxytype`](https://docs.python.org/3/library/types.html#types.mappingproxytype)\nobject, which can be retrieved from an item instance with\n`itemadapter.adapter.itemadapter.get_field_meta`, or from an item class\nwith the `itemadapter.adapter.itemadapter.get_field_meta_from_class`\nmethod (or its alias `itemadapter.utils.get_field_meta_from_class`).\nthe source of the data depends on the underlying type (see the docs for\n`itemadapter.get_field_meta_from_class`).\n\n#### `scrapy.item.item` objects\n\n```python\n>>> from scrapy.item import item, field\n>>> from itemadapter import itemadapter\n>>> class inventoryitem(item):\n...     name = field(serializer=str)\n...     value = field(serializer=int, limit=100)\n...\n>>> adapter = itemadapter(inventoryitem(name=\"foo\", value=10))\n>>> adapter.get_field_meta(\"name\")\nmappingproxy({'serializer': <class 'str'>})\n>>> adapter.get_field_meta(\"value\")\nmappingproxy({'serializer': <class 'int'>, 'limit': 100})\n>>>\n```\n\n#### `dataclass` objects\n\n```python\n>>> from dataclasses import dataclass, field\n>>> @dataclass\n... class inventoryitem:\n...     name: str = field(metadata={\"serializer\": str})\n...     value: int = field(metadata={\"serializer\": int, \"limit\": 100})\n...\n>>> adapter = itemadapter(inventoryitem(name=\"foo\", value=10))\n>>> adapter.get_field_meta(\"name\")\nmappingproxy({'serializer': <class 'str'>})\n>>> adapter.get_field_meta(\"value\")\nmappingproxy({'serializer': <class 'int'>, 'limit': 100})\n>>>\n```\n\n#### `attrs` objects\n\n```python\n>>> import attr\n>>> @attr.s\n... class inventoryitem:\n...     name = attr.ib(metadata={\"serializer\": str})\n...     value = attr.ib(metadata={\"serializer\": int, \"limit\": 100})\n...\n>>> adapter = itemadapter(inventoryitem(name=\"foo\", value=10))\n>>> adapter.get_field_meta(\"name\")\nmappingproxy({'serializer': <class 'str'>})\n>>> adapter.get_field_meta(\"value\")\nmappingproxy({'serializer': <class 'int'>, 'limit': 100})\n>>>\n```\n\n#### `pydantic` objects\n\n```python\n>>> from pydantic import basemodel, field\n>>> class inventoryitem(basemodel):\n...     name: str = field(serializer=str)\n...     value: int = field(serializer=int, limit=100)\n...\n>>> adapter = itemadapter(inventoryitem(name=\"foo\", value=10))\n>>> adapter.get_field_meta(\"name\")\nmappingproxy({'serializer': <class 'str'>})\n>>> adapter.get_field_meta(\"value\")\nmappingproxy({'serializer': <class 'int'>, 'limit': 100})\n>>>\n```\n\n---\n\n## extending `itemadapter`\n\nthis package allows to handle arbitrary item classes, by implementing an adapter interface:\n\n_class `itemadapter.adapter.adapterinterface(item: any)`_\n\nabstract base class for adapters. an adapter that handles a specific type of item must\ninherit from this class and implement the abstract methods defined on it. `adapterinterface`\ninherits from [`collections.abc.mutablemapping`](https://docs.python.org/3/library/collections.abc.html#collections.abc.mutablemapping),\nso all methods from the `mutablemapping` interface must be implemented as well.\n\n* _class method `is_item_class(cls, item_class: type) -> bool`_\n\n    return `true` if the adapter can handle the given item class, `false` otherwise. abstract (mandatory).\n\n* _class method `is_item(cls, item: any) -> bool`_\n\n    return `true` if the adapter can handle the given item, `false` otherwise.\n    the default implementation calls `cls.is_item_class(item.__class__)`.\n\n* _class method `get_field_meta_from_class(cls, item_class: type) -> bool`_\n\n    return metadata for the given item class and field name, if available.\n    by default, this method returns an empty `mappingproxytype` object. please supply your\n    own method definition if you want to handle field metadata based on custom logic.\n    see the [section on metadata support](#metadata-support) for additional information.\n\n* _method `get_field_meta(self, field_name: str) -> types.mappingproxytype`_\n\n    return metadata for the given field name, if available. it's usually not necessary to\n    override this method, since the `itemadapter.adapter.adapterinterface` base class\n    provides a default implementation that calls `itemadapter.get_field_meta_from_class`\n    with the wrapped item's class as argument.\n    see the [section on metadata support](#metadata-support) for additional information.\n\n* _method `field_names(self) -> collections.abc.keysview`_:\n\n    return a [dynamic view](https://docs.python.org/3/library/collections.abc.html#collections.abc.keysview)\n    of the item's field names. by default, this method returns the result of calling `keys()` on\n    the current adapter, i.e., its return value depends on the implementation of the methods from the\n    `mutablemapping` interface (more specifically, it depends on the return value of `__iter__`).\n\n    you might want to override this method if you want a way to get all fields for an item, whether or not\n    they are populated. for instance, scrapy uses this method to define column names when exporting items to csv.\n\n### registering an adapter\n\nadd your custom adapter class to the `itemadapter.adapter.itemadapter.adapter_classes`\nclass attribute in order to handle custom item classes:\n\n**example**\n```python\n>>> from itemadapter.adapter import itemadapter\n>>> from tests.test_interface import basefakeitemadapter, fakeitemclass\n>>>\n>>> itemadapter.adapter_classes.appendleft(basefakeitemadapter)\n>>> item = fakeitemclass()\n>>> adapter = itemadapter(item)\n>>> adapter\n<itemadapter for fakeitemclass()>\n>>>\n```\n\n### multiple adapter classes\n\nif you need to have different handlers and/or priorities for different cases\nyou can subclass the `itemadapter` class and set the `adapter_classes`\nattribute as needed:\n\n\n**example**\n```python\n>>> from collections import deque\n>>> from itemadapter.adapter import (\n...     itemadapter,\n...     attrsadapter,\n...     dataclassadapter,\n...     dictadapter,\n...     pydanticadapter,\n...     scrapyitemadapter,\n... )\n>>> from scrapy.item import item, field\n>>>\n>>> class builtintypesitemadapter(itemadapter):\n...     adapter_classes = deque([dictadapter, dataclassadapter])\n...\n>>> class thirdpartytypesitemadapter(itemadapter):\n...     adapter_classes = deque([attrsadapter, pydanticadapter, scrapyitemadapter])\n...\n>>> class scrapyitem(item):\n...     foo = field()\n...\n>>> builtintypesitemadapter.is_item(dict())\ntrue\n>>> thirdpartytypesitemadapter.is_item(dict())\nfalse\n>>> builtintypesitemadapter.is_item(scrapyitem(foo=\"bar\"))\nfalse\n>>> thirdpartytypesitemadapter.is_item(scrapyitem(foo=\"bar\"))\ntrue\n>>>\n```\n\n---\n\n## more examples\n\n### `scrapy.item.item` objects\n\n```python\n>>> from scrapy.item import item, field\n>>> from itemadapter import itemadapter\n>>> class inventoryitem(item):\n...     name = field()\n...     price = field()\n...\n>>> item = inventoryitem(name=\"foo\", price=10)\n>>> adapter = itemadapter(item)\n>>> adapter.item is item\ntrue\n>>> adapter[\"name\"]\n'foo'\n>>> adapter[\"name\"] = \"bar\"\n>>> adapter[\"price\"] = 5\n>>> item\n{'name': 'bar', 'price': 5}\n>>>\n```\n\n### `dict`\n\n```python\n>>> from itemadapter import itemadapter\n>>> item = dict(name=\"foo\", price=10)\n>>> adapter = itemadapter(item)\n>>> adapter.item is item\ntrue\n>>> adapter[\"name\"]\n'foo'\n>>> adapter[\"name\"] = \"bar\"\n>>> adapter[\"price\"] = 5\n>>> item\n{'name': 'bar', 'price': 5}\n>>>\n```\n\n### `dataclass` objects\n\n```python\n>>> from dataclasses import dataclass\n>>> from itemadapter import itemadapter\n>>> @dataclass\n... class inventoryitem:\n...     name: str\n...     price: int\n...\n>>> item = inventoryitem(name=\"foo\", price=10)\n>>> adapter = itemadapter(item)\n>>> adapter.item is item\ntrue\n>>> adapter[\"name\"]\n'foo'\n>>> adapter[\"name\"] = \"bar\"\n>>> adapter[\"price\"] = 5\n>>> item\ninventoryitem(name='bar', price=5)\n>>>\n```\n\n### `attrs` objects\n\n```python\n>>> import attr\n>>> from itemadapter import itemadapter\n>>> @attr.s\n... class inventoryitem:\n...     name = attr.ib()\n...     price = attr.ib()\n...\n>>> item = inventoryitem(name=\"foo\", price=10)\n>>> adapter = itemadapter(item)\n>>> adapter.item is item\ntrue\n>>> adapter[\"name\"]\n'foo'\n>>> adapter[\"name\"] = \"bar\"\n>>> adapter[\"price\"] = 5\n>>> item\ninventoryitem(name='bar', price=5)\n>>>\n```\n\n### `pydantic` objects\n\n```python\n>>> from pydantic import basemodel\n>>> from itemadapter import itemadapter\n>>> class inventoryitem(basemodel):\n...     name: str\n...     price: int\n...\n>>> item = inventoryitem(name=\"foo\", price=10)\n>>> adapter = itemadapter(item)\n>>> adapter.item is item\ntrue\n>>> adapter[\"name\"]\n'foo'\n>>> adapter[\"name\"] = \"bar\"\n>>> adapter[\"price\"] = 5\n>>> item\ninventoryitem(name='bar', price=5)\n>>>\n```\n\n\n## changelog\n\nsee the [full changelog](changelog.md)\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "itemadapter",
  "package_url": "https://pypi.org/project/itemadapter/",
  "project_url": "https://pypi.org/project/itemadapter/",
  "project_urls": {
    "Homepage": "https://github.com/scrapy/itemadapter"
  },
  "release_url": "https://pypi.org/project/itemadapter/0.8.0/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "common interface for data container classes",
  "version": "0.8.0",
  "releases": [],
  "developers": [
    "eugenio.lacuesta@gmail.com",
    "eugenio_lacuesta"
  ],
  "kwds": "scrapyitemadapter scrapyitem item_class itemadapter is_item_class",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_itemadapter",
  "homepage": "https://github.com/scrapy/itemadapter",
  "release_count": 17,
  "dependency_ids": [],
  "documentation_summary": "The HTML text provides information about \"itemadapter,\" a Python package available on PyPI, designed to offer a common interface for different data container classes. The latest version, 0.8.0, was released on March 30, 2023. It supports Python versions 3.7 and above and optionally integrates with Scrapy, attrs, and pydantic for handling their respective item types. The package allows for uniform handling of various data types, including dictionaries, dataclass-based classes, attrs-based classes, and pydantic-based classes, by providing a dictionary-like API. It is distributed under the BSD license and developed by Eugenio Lacuesta. The package can be installed via pip. The documentation also covers basic usage, converting to dict, API reference, metadata support, extending itemadapter with custom classes, and provides examples for different supported types.",
  "embedding": [
    -0.02866142988204956,
    -0.008255588822066784,
    -0.007535624783486128,
    -0.038233526051044464,
    -0.01945960335433483,
    0.020776107907295227,
    0.007035078480839729,
    -0.03252866491675377,
    0.011478285305202007,
    -0.03710900992155075,
    -0.012451951391994953,
    0.018952200189232826,
    -0.0010748036438599229,
    0.020433267578482628,
    0.012424523942172527,
    0.00040690830792300403,
    0.014221006073057652,
    -0.004672910086810589,
    -0.02021385170519352,
    -0.003342690644785762,
    0.016140909865498543,
    0.0163603276014328,
    -0.04061969369649887,
    -0.022600017488002777,
    -0.033845171332359314,
    0.02346397377550602,
    0.010120638646185398,
    -0.008385867811739445,
    0.0010130924638360739,
    -0.0048203314654529095,
    0.02136579342186451,
    -0.0012196535244584084,
    -0.03368061035871506,
    -0.016730595380067825,
    0.0012796506052836776,
    -0.021955478936433792,
    0.01362446416169405,
    -0.020913245156407356,
    0.02934711053967476,
    0.010552617721259594,
    0.016140909865498543,
    -0.0003582678909879178,
    0.012650799006223679,
    1.8320515664527193e-05,
    -0.016003774479031563,
    0.013425617478787899,
    -0.029456818476319313,
    -0.019857296720147133,
    0.004895756486803293,
    -0.003416401334106922,
    0.0007782469619996846,
    0.03008764423429966,
    -0.019829869270324707,
    -0.018609359860420227,
    0.029155120253562927,
    -0.009798369370400906,
    0.021928051486611366,
    0.011553710326552391,
    -0.005163171328604221,
    -0.03162356838583946,
    0.004532345570623875,
    -0.008461292833089828,
    -0.043773822486400604,
    0.001026806072331965,
    -0.01933618076145649,
    -0.026618102565407753,
    -0.009997216984629631,
    0.00780989695340395,
    0.009626949205994606,
    0.018417369574308395,
    0.04522746428847313,
    0.05326363444328308,
    0.017320280894637108,
    -0.019308753311634064,
    0.04004371911287308,
    -0.00899612344801426,
    -0.002982708625495434,
    0.028853420168161392,
    -0.039166051894426346,
    -0.0018873346270993352,
    0.0008982410072349012,
    -0.013309051282703876,
    -0.019775016233325005,
    0.013741030357778072,
    0.025726718828082085,
    0.04061969369649887,
    -0.0037780976854264736,
    0.01142343133687973,
    -0.006956225261092186,
    0.006921940948814154,
    0.024355359375476837,
    -0.010854316875338554,
    0.00031177018536254764,
    0.04210076108574867,
    -0.008420152589678764,
    0.03225439414381981,
    0.015249526128172874,
    0.049176979809999466,
    0.0130827771499753,
    -0.020392127335071564,
    -0.008200734853744507,
    0.013158202171325684,
    -0.05098717659711838,
    -0.018499650061130524,
    -0.04805246368050575,
    -0.00868756789714098,
    -0.00881784688681364,
    -0.012397097423672676,
    0.0038295236881822348,
    0.03436628729104996,
    -0.038370661437511444,
    0.040701974183321,
    0.008187021128833294,
    -0.01811566948890686,
    -0.01711457595229149,
    0.0023501687683165073,
    0.023409120738506317,
    -0.008865844458341599,
    0.011971975676715374,
    0.01799224689602852,
    0.012019973248243332,
    0.033433765172958374,
    0.02589128166437149,
    0.00432664155960083,
    0.015057535842061043,
    0.0011210869997739792,
    -0.018088242039084435,
    0.011601707898080349,
    0.016854017972946167,
    -0.0001765626366250217,
    0.00882470328360796,
    0.004947182256728411,
    0.013096490874886513,
    0.0043334984220564365,
    -0.02142064832150936,
    0.0032209823839366436,
    -0.01677173562347889,
    -0.011539996601641178,
    -0.0048203314654529095,
    -0.031047597527503967,
    0.018815062940120697,
    0.021859483793377876,
    -0.015180958434939384,
    -0.015414089895784855,
    -0.004127794411033392,
    0.015098677016794682,
    0.03129444271326065,
    -0.016332902014255524,
    -0.015990061685442924,
    -0.01048404909670353,
    -0.006253403145819902,
    -0.01378902792930603,
    -0.025575868785381317,
    0.003109559416770935,
    -0.0008476721122860909,
    0.027495773509144783,
    -0.013425617478787899,
    -0.0004343355249147862,
    -0.00881784688681364,
    0.0058008539490401745,
    0.00778932636603713,
    0.005389445926994085,
    -0.005797425750643015,
    -0.01040862500667572,
    -0.014783264137804508,
    0.02265487238764763,
    -0.010703466832637787,
    -0.016662027686834335,
    -0.03088303469121456,
    0.0103743402287364,
    -0.007912748493254185,
    0.0167031679302454,
    -0.007076219189912081,
    -0.0009950932580977678,
    -0.0035141108091920614,
    0.008303586393594742,
    0.009284108877182007,
    0.011444001458585262,
    -0.011135445907711983,
    -0.008269302546977997,
    0.031404152512550354,
    -0.0037266716826707125,
    -0.003620391245931387,
    0.011841695755720139,
    -0.017745401710271835,
    -0.014920400455594063,
    -0.0413876548409462,
    0.024574777111411095,
    -0.0035243958700448275,
    0.00787846464663744,
    0.03000536374747753,
    0.03993401303887367,
    -0.027536915615200996,
    -0.018211664631962776,
    -0.5573208332061768,
    -0.014851831831037998,
    -0.03614905849099159,
    -0.03132186830043793,
    0.0028987128753215075,
    0.0029312826227396727,
    -0.0022370314691215754,
    0.00787160824984312,
    -0.003454113844782114,
    0.02210632711648941,
    -0.013782170601189137,
    0.02441021241247654,
    0.027866041287779808,
    -0.003346119076013565,
    -0.032556094229221344,
    0.0017236284911632538,
    0.01608605682849884,
    -0.01663460023701191,
    -0.01616833731532097,
    -0.0002055969089269638,
    -0.014248433522880077,
    0.02150292880833149,
    -0.016648314893245697,
    -0.011526282876729965,
    -0.045666299760341644,
    0.009894364513456821,
    -0.0019336179830133915,
    0.0081801638007164,
    0.018348800018429756,
    -0.001211082562804222,
    -0.018005961552262306,
    0.02270972728729248,
    0.010264631360769272,
    -0.024437639862298965,
    0.038425516337156296,
    0.006363111548125744,
    -0.016648314893245697,
    0.060394708067178726,
    0.04706508666276932,
    0.02866142988204956,
    -0.018170524388551712,
    -0.02866142988204956,
    -0.01777282916009426,
    0.012019973248243332,
    0.010134352371096611,
    0.0083515839651227,
    -0.012424523942172527,
    0.03359832614660263,
    0.012445094995200634,
    -0.02866142988204956,
    0.006308257579803467,
    0.005310592707246542,
    0.005488869734108448,
    -0.03082817979156971,
    0.05241338908672333,
    -0.011649705469608307,
    0.008749278262257576,
    0.012465665116906166,
    0.009112688712775707,
    -0.003572393674403429,
    0.03894663229584694,
    0.005159743130207062,
    -0.00912640243768692,
    -0.024711912497878075,
    -0.0037540988996624947,
    0.020049287006258965,
    -0.0012170822592452168,
    -0.004439779091626406,
    -0.01159485150128603,
    -0.06637383997440338,
    0.012170822359621525,
    0.012273674830794334,
    0.0018821919802576303,
    -0.011457715183496475,
    0.011464572511613369,
    0.020803535357117653,
    0.03102017007768154,
    0.03436628729104996,
    -0.0021187516395002604,
    0.05345562472939491,
    0.029621383175253868,
    -0.010134352371096611,
    -0.0037369567435234785,
    -0.03697187453508377,
    0.03422915190458298,
    0.021283511072397232,
    0.022545162588357925,
    -0.0031404150649905205,
    0.01622319221496582,
    -0.006551673635840416,
    0.013535326346755028,
    0.02155778370797634,
    -0.014810691587626934,
    -0.028963129967451096,
    -0.013309051282703876,
    0.03313206508755684,
    -0.039988867938518524,
    -0.007912748493254185,
    -0.04509032517671585,
    0.00035612512147054076,
    0.0019199043745175004,
    0.004031799267977476,
    -0.02176348865032196,
    0.006424822844564915,
    0.018019674345850945,
    0.021461788564920425,
    -0.005636290647089481,
    0.019925864413380623,
    -0.0016773450188338757,
    -0.02454734966158867,
    0.016538605093955994,
    -0.01567464880645275,
    -0.002537016524001956,
    0.003867235966026783,
    -0.004899184685200453,
    -0.02785232849419117,
    0.06083354353904724,
    0.011875980533659458,
    0.022188609465956688,
    -0.018348800018429756,
    -0.008104739710688591,
    -0.015002681873738766,
    -0.01603120192885399,
    0.03859007731080055,
    0.006270545069128275,
    0.007974459789693356,
    0.0062979720532894135,
    -0.015660934150218964,
    -0.01751227118074894,
    -0.008303586393594742,
    0.01642889715731144,
    0.003966659773141146,
    0.0064762490801513195,
    -0.0030032789800316095,
    0.036478184163570404,
    0.03252866491675377,
    0.0026861520018428564,
    0.01243823766708374,
    -0.007830467075109482,
    -0.011368576437234879,
    0.003634104738011956,
    -0.010196063667535782,
    0.024711912497878075,
    -0.012547946535050869,
    -0.014275860972702503,
    -0.020913245156407356,
    -0.012746794149279594,
    -0.003337548114359379,
    0.0029175691306591034,
    -0.0019233328057453036,
    -0.009016693569719791,
    0.004398638382554054,
    -0.006709380075335503,
    0.012794791720807552,
    -0.0026244407054036856,
    -0.014892973005771637,
    -0.01219824980944395,
    -0.003484969260171056,
    -0.01763569377362728,
    -0.005307164508849382,
    0.0045837718062102795,
    0.03291264548897743,
    -0.006099124904721975,
    -6.058626968297176e-05,
    -0.047833047807216644,
    -0.0009170972043648362,
    -0.02096809819340706,
    0.03346119076013565,
    -0.01622319221496582,
    -0.04914955422282219,
    -0.015537512488663197,
    -0.01756712608039379,
    -0.01623690500855446,
    0.0036786741111427546,
    0.010024643503129482,
    -0.0034489710815250874,
    -0.011375433765351772,
    0.0008836702909320593,
    0.006637383718043566,
    -0.008694424293935299,
    -0.013569610193371773,
    0.014056443236768246,
    -0.01811566948890686,
    -0.02250402234494686,
    0.02995050884783268,
    0.01001092977821827,
    0.006177978124469519,
    0.012246247380971909,
    -0.002811288693919778,
    0.008022457361221313,
    -0.021873196586966515,
    0.016716882586479187,
    -0.040263138711452484,
    0.009688660502433777,
    -0.029429392889142036,
    0.006788233295083046,
    0.0030649902764707804,
    0.018636787310242653,
    -0.006376825273036957,
    0.017827684059739113,
    0.013192486017942429,
    -0.000305127672618255,
    -0.0003085560747422278,
    -0.012143395841121674,
    0.02563072368502617,
    -0.012945640832185745,
    0.023642251268029213,
    -0.022133754566311836,
    0.037492990493774414,
    0.008529861457645893,
    0.035929638892412186,
    -0.011032593436539173,
    -0.019308753311634064,
    -0.019281325861811638,
    -0.00780989695340395,
    0.03368061035871506,
    -0.015235813334584236,
    0.04212818667292595,
    -0.007857894524931908,
    -0.007295636925846338,
    0.010298916138708591,
    0.01409758348017931,
    -0.009894364513456821,
    -0.00851614773273468,
    0.015359234996140003,
    -0.02778375893831253,
    0.00983265321701765,
    0.023093707859516144,
    -0.012458808720111847,
    -0.05178256332874298,
    0.0017930535832419991,
    -0.0030889890622347593,
    0.027824901044368744,
    -0.015030109323561192,
    0.027152933180332184,
    0.009688660502433777,
    0.046269696205854416,
    -0.009263538755476475,
    0.034092016518116,
    -0.0008288158569484949,
    0.00031027026125229895,
    0.03102017007768154,
    0.015180958434939384,
    -0.014179865829646587,
    0.02358739636838436,
    -0.006260259542614222,
    0.0018890488427132368,
    0.026069559156894684,
    -0.035792503505945206,
    0.027893468737602234,
    0.015660934150218964,
    -0.014508991502225399,
    0.006380253937095404,
    -0.003952946048229933,
    0.017251713201403618,
    -0.023642251268029213,
    0.01588035188615322,
    0.034174297004938126,
    0.018952200189232826,
    -0.003832952119410038,
    0.010573187842965126,
    -0.043444693088531494,
    0.018156809732317924,
    -0.011224583722651005,
    0.06341169774532318,
    -0.005242024548351765,
    -0.01219824980944395,
    -0.04034541919827461,
    0.017292853444814682,
    0.003431829158216715,
    -0.036258764564991,
    -0.04495318979024887,
    -0.04399323835968971,
    -0.034503426402807236,
    0.02860657498240471,
    -0.007364204619079828,
    -0.008543574251234531,
    0.023889096453785896,
    -0.02129722572863102,
    0.004278643988072872,
    -0.019253898411989212,
    -0.04278644174337387,
    0.017827684059739113,
    0.012403953820466995,
    0.016401469707489014,
    -0.015523798763751984,
    -0.037959251552820206,
    0.006897942163050175,
    -0.008536717854440212,
    -0.01095031201839447,
    -0.01852707751095295,
    0.013171915896236897,
    0.021434361115098,
    -0.002389595378190279,
    -0.0018924771575257182,
    0.0001374574494548142,
    0.04541945457458496,
    -0.0094623863697052,
    -0.01871906779706478,
    -0.003819238394498825,
    0.009558381512761116,
    0.010916028171777725,
    -0.007350491359829903,
    0.03466798737645149,
    0.044322364032268524,
    -0.014454137533903122,
    0.0024033088702708483,
    -0.0035895355977118015,
    -0.01190340705215931,
    -0.013165058568120003,
    -0.006668239366263151,
    0.0024975899141281843,
    -0.026933515444397926,
    0.0008879557717591524,
    -0.0008879557717591524,
    -0.00763847678899765,
    0.018636787310242653,
    0.04177163541316986,
    0.015660934150218964,
    0.011992545798420906,
    -0.0032209823839366436,
    -0.004237503279000521,
    -0.023614823818206787,
    0.007974459789693356,
    0.015057535842061043,
    0.013034779578447342,
    -0.009482956491410732,
    0.01179369818419218,
    -0.03543594852089882,
    -0.011368576437234879,
    -0.006352826487272978,
    0.02576785907149315,
    0.020063001662492752,
    -0.0015830640913918614,
    -0.02135208062827587,
    0.013610751368105412,
    0.012424523942172527,
    0.00692879781126976,
    0.016058629378676414,
    0.0335160456597805,
    -0.031952694058418274,
    -0.007563052233308554,
    0.021173803135752678,
    -0.017155718058347702,
    0.025438733398914337,
    -0.009825796820223331,
    0.014248433522880077,
    0.02556215599179268,
    0.03206240385770798,
    -0.014056443236768246,
    0.04171678051352501,
    0.034311436116695404,
    0.0050226072780787945,
    -0.022353172302246094,
    0.007343634497374296,
    0.01785511150956154,
    0.025397593155503273,
    0.028743712231516838,
    -0.040317993611097336,
    0.018033387139439583,
    0.017800256609916687,
    0.03880949690937996,
    0.017621979117393494,
    0.0077276150695979595,
    0.022051474079489708,
    0.01730656623840332,
    0.031733278185129166,
    -0.00014174294483382255,
    0.013363906182348728,
    -0.00014870688028167933,
    -0.002703293925151229,
    0.0045357742346823215,
    0.013946734368801117,
    -0.01859564520418644,
    0.020035574212670326,
    0.01568836160004139,
    -0.02556215599179268,
    0.0036169628147035837,
    0.04078425467014313,
    -0.001040519680827856,
    -0.0010585187701508403,
    -0.014152438379824162,
    0.005348305217921734,
    -0.024849047884345055,
    0.009016693569719791,
    -0.023505115881562233,
    0.009688660502433777,
    -0.01338447630405426,
    -0.0005279736942611635,
    -0.00440892344340682,
    -0.00888641458004713,
    -0.006411109585314989,
    -0.0207486804574728,
    0.019555598497390747,
    -0.022147469222545624,
    -0.015715789049863815,
    0.03008764423429966,
    -0.02521931566298008,
    0.013926164247095585,
    0.00449806172400713,
    0.013089634478092194,
    -0.009818939492106438,
    0.036203913390636444,
    -0.001751055708155036,
    0.027742618694901466,
    -0.023985091596841812,
    -0.011265724897384644,
    -0.03442114219069481,
    0.040674544870853424,
    -0.0030409914907068014,
    0.014111297205090523,
    -0.0036135343834757805,
    -0.010065784677863121,
    0.039851728826761246,
    -0.007206498179584742,
    0.019637878984212875,
    0.0059791309759020805,
    -0.0004092653398402035,
    0.0012145109940320253,
    0.022490309551358223,
    -0.007748185656964779,
    -0.007364204619079828,
    0.007905892096459866,
    -0.006870515178889036,
    -0.005341448355466127,
    0.004631769377738237,
    -0.011848553083837032,
    -0.02155778370797634,
    0.028442012146115303,
    0.0020570403430610895,
    -0.014440423808991909,
    0.006582529284060001,
    -0.02148921601474285,
    0.00299127958714962,
    0.016195764765143394,
    0.0014133582590147853,
    -0.021818341687321663,
    -0.02427307702600956,
    -0.01230795867741108,
    0.02711179293692112,
    -0.02379310131072998,
    0.04251217097043991,
    -0.009592665359377861,
    -0.017320280894637108,
    -0.011635991744697094,
    -0.02576785907149315,
    0.007892178371548653,
    0.007295636925846338,
    0.0020416127517819405,
    0.03219953924417496,
    -0.00959952175617218,
    0.01095716841518879,
    0.0025284455623477697,
    0.00983265321701765,
    0.028743712231516838,
    -0.007899035699665546,
    -0.02096809819340706,
    -0.01520838588476181,
    -0.006140265613794327,
    0.019267613068223,
    0.0024770195595920086,
    0.007473913487046957,
    0.0012667940463870764,
    -0.026000991463661194,
    -0.014166152104735374,
    -0.014070156961679459,
    -0.014440423808991909,
    -0.015852924436330795,
    -0.020241277292370796,
    -0.028743712231516838,
    -0.025027325376868248,
    -0.0052694519981741905,
    0.0012907928321510553,
    0.039659738540649414,
    0.021214943379163742,
    -0.02055669017136097,
    0.013885023072361946,
    -0.008982409723103046,
    -0.012355956248939037,
    0.02819516696035862,
    -0.0054717278108000755,
    0.0035895355977118015,
    0.023162275552749634,
    0.010943455621600151,
    0.019720161333680153,
    -0.01885620318353176,
    0.02535645104944706,
    0.004278643988072872,
    0.015263239853084087,
    0.005605434998869896,
    -0.018760208040475845,
    0.017759116366505623,
    -0.013802741654217243,
    0.0022267461754381657,
    -0.02852429449558258,
    0.02757805585861206,
    -0.022325744852423668,
    -0.011553710326552391,
    -0.004244360141456127,
    -0.004789475817233324,
    -0.008228161372244358,
    0.006846516393125057,
    -0.027879754081368446,
    -0.022558877244591713,
    0.0028507153037935495,
    -0.013638177886605263,
    0.013734173029661179,
    0.01622319221496582,
    -0.04385610297322273,
    0.002252459293231368,
    0.007576765492558479,
    0.00016702739230822772,
    0.02318970300257206,
    0.009606379084289074,
    -0.0004941182560287416,
    -0.023422833532094955,
    0.012925070710480213,
    0.024081086739897728,
    0.027413493022322655,
    0.01684030517935753,
    0.001959331100806594,
    -0.031952694058418274,
    -0.03176070377230644,
    0.0030032789800316095,
    0.0007731043733656406,
    -0.0009770941687747836,
    0.014920400455594063,
    -0.004741478245705366,
    0.020981812849640846,
    0.007960746064782143,
    0.03041677176952362,
    -0.014522705227136612,
    0.010538903996348381,
    -0.03400973603129387,
    -0.020337272435426712,
    -0.038507796823978424,
    -0.04679081216454506,
    -0.044240083545446396,
    0.0116565627977252,
    0.00020570404012687504,
    -0.010264631360769272,
    0.020323559641838074,
    -0.004717479459941387,
    -0.01980244182050228,
    0.0040626549161970615,
    0.0019541883375495672,
    0.03414687141776085,
    0.012211963534355164,
    0.07185927778482437,
    0.015071249566972256,
    -0.03206240385770798,
    0.0027187217492610216,
    -0.027879754081368446,
    -0.017800256609916687,
    -0.00464548310264945,
    0.018746495246887207,
    0.0020313274580985308,
    0.0027855755761265755,
    -0.005427158437669277,
    0.009345820173621178,
    -0.024711912497878075,
    -0.006071697920560837,
    -0.026330117136240005,
    0.018609359860420227,
    0.01771797426044941,
    0.0072339256294071674,
    -0.03143157809972763,
    -0.01959673874080181,
    -0.016250619664788246,
    0.02088581770658493,
    -0.014714696444571018,
    0.005132315680384636,
    0.018554504960775375,
    -0.01967902109026909,
    -0.003928947262465954,
    0.04226532578468323,
    0.02940196543931961,
    0.014125010930001736,
    0.02948424592614174,
    0.0035278243012726307,
    -0.004100367426872253,
    -0.02805803157389164,
    -0.023614823818206787,
    -0.01711457595229149,
    0.030745897442102432,
    -0.003949517849832773,
    -0.005632862448692322,
    0.00024963042233139277,
    0.014440423808991909,
    -0.006825945805758238,
    -0.02731749787926674,
    -0.01474212296307087,
    -0.020323559641838074,
    0.03211725875735283,
    -0.01919904351234436,
    -0.012349099852144718,
    -0.016922585666179657,
    -0.01716943085193634,
    -0.0029604239389300346,
    -0.0013610750902444124,
    -0.031267013400793076,
    -0.014536418952047825,
    -0.016936300322413445,
    -0.013576466590166092,
    -0.02434164471924305,
    -0.011279438622295856,
    0.007412202190607786,
    -0.031678423285484314,
    -0.003133558202534914,
    -0.0053585902787745,
    -0.01758083887398243,
    -0.01737513579428196,
    0.01981615647673607,
    -0.015729501843452454,
    -0.026755239814519882,
    -0.03014249913394451,
    -0.004216932691633701,
    -0.01723799854516983,
    0.009688660502433777,
    0.011039450764656067,
    -0.005636290647089481,
    0.03628619387745857,
    -0.003160985419526696,
    0.0181293822824955,
    -0.012616515159606934,
    0.039851728826761246,
    -0.03845294192433357,
    0.011519426479935646,
    -0.006705951876938343,
    -0.008571001701056957,
    0.013871309347450733,
    0.01460498757660389,
    -0.06401509791612625,
    -0.040263138711452484,
    -0.012561660259962082,
    0.034037161618471146,
    -0.01954188384115696,
    -0.016922585666179657,
    0.018335087224841118,
    0.02825002186000347,
    0.0014879258815199137,
    -0.03198012337088585,
    -0.029895653948187828,
    0.0108886007219553,
    -0.039659738540649414,
    -0.005605434998869896,
    0.007371061481535435,
    -0.017731688916683197,
    0.006719665601849556,
    0.00859157182276249,
    -0.0020261849276721478,
    -0.005769998300820589,
    -0.05940732732415199,
    -0.002514731837436557,
    -0.013535326346755028,
    -0.02575414627790451,
    0.0015264954417943954,
    0.018005961552262306,
    0.0015264954417943954,
    -0.015715789049863815,
    -0.017059722915291786,
    -0.013055349700152874,
    -0.014385569840669632,
    0.007343634497374296,
    -0.015907779335975647,
    0.018074529245495796,
    0.024780480191111565,
    0.03225439414381981,
    -0.0017536269733682275,
    0.00402494240552187,
    -0.03291264548897743,
    -0.006047699134796858,
    -0.023162275552749634,
    -0.010799461975693703,
    -0.00458034360781312,
    0.01034691371023655,
    0.003454113844782114,
    -0.03875464200973511,
    -0.0037883827462792397,
    0.00994236208498478,
    -0.029593955725431442,
    -0.028825992718338966,
    -0.006318542640656233,
    0.019912151619791985,
    -0.007494484074413776,
    0.0016670598415657878,
    0.024725625291466713,
    0.025575868785381317,
    0.02061154507100582,
    0.029593955725431442,
    -0.01893848553299904,
    0.007679617498070002,
    0.00015642077778466046,
    0.029731091111898422,
    0.01372046023607254,
    -0.009620092809200287,
    -0.038370661437511444,
    -0.02630268968641758,
    0.025452446192502975,
    0.01967902109026909,
    0.025191888213157654,
    0.03996143862605095,
    0.011649705469608307,
    -0.016140909865498543,
    -0.025603296235203743,
    0.00811845250427723,
    0.002021042164415121,
    -0.014920400455594063,
    0.02515074796974659,
    -0.01952817104756832,
    -0.011300008744001389,
    -0.020529262721538544,
    -0.00027941467124037445,
    0.018293946981430054,
    -0.01945960335433483,
    0.006383682135492563,
    0.012321672402322292,
    -0.0008592429221607745,
    -0.013837025500833988,
    -0.02366967871785164,
    0.0008639569859951735,
    -0.012458808720111847,
    0.0010070927673950791,
    -0.019706446677446365,
    0.025054752826690674,
    0.02637125924229622,
    -0.011923978105187416,
    0.002096466952934861,
    -0.025233030319213867,
    0.0010859459871426225,
    0.0012222249060869217,
    0.02061154507100582,
    0.04794275760650635,
    -0.008694424293935299,
    0.009716087952256203,
    -0.024231936782598495,
    0.03982430323958397,
    -0.017347708344459534,
    0.008139023557305336,
    -0.008721851743757725,
    -0.012931928038597107,
    -0.002418736694380641,
    0.00598255917429924,
    0.009222397580742836,
    -0.022874290123581886,
    0.004847758449614048,
    0.01677173562347889,
    -0.007563052233308554,
    -0.013158202171325684,
    -0.01301420945674181,
    0.019020767882466316,
    -0.003805524902418256,
    -0.021393220871686935,
    -0.016511177644133568,
    -0.023971378803253174,
    -0.011066877283155918,
    -0.017004868015646935,
    -0.00946924276649952,
    -0.011204013600945473,
    -0.008385867811739445,
    0.1658797413110733,
    0.004018085543066263,
    0.03812381625175476,
    -0.0023295984137803316,
    -0.017224285751581192,
    0.020104141905903816,
    0.0042649307288229465,
    0.03535366803407669,
    -0.007988173514604568,
    0.02210632711648941,
    0.01980244182050228,
    0.007350491359829903,
    -0.0021221800707280636,
    0.009414388798177242,
    -0.005166599992662668,
    -0.013000495731830597,
    -0.03178813308477402,
    -0.0450354740023613,
    -0.01677173562347889,
    -0.0005948275211267173,
    0.035874783992767334,
    -0.021996619179844856,
    -0.016182051971554756,
    -0.05139858275651932,
    0.021173803135752678,
    -0.008132166229188442,
    -0.011389147490262985,
    -0.012013115920126438,
    0.02244916744530201,
    0.004168935120105743,
    -0.011738844215869904,
    0.014659841544926167,
    0.007323063910007477,
    -0.0006779662217013538,
    -0.04733935743570328,
    3.92926849599462e-05,
    -0.0048203314654529095,
    -0.02757805585861206,
    -0.001585635356605053,
    0.019912151619791985,
    -0.0022353173699229956,
    -0.03425658121705055,
    -0.0116565627977252,
    -0.021982906386256218,
    -0.014289574697613716,
    0.0030684187076985836,
    -0.003867235966026783,
    0.0024067373014986515,
    0.022613732144236565,
    0.024986185133457184,
    0.011327436193823814,
    -0.017937391996383667,
    0.0006591100245714188,
    0.01183483935892582,
    -0.005094603635370731,
    -0.013597037643194199,
    -0.003198697930201888,
    0.00899612344801426,
    0.030252208933234215,
    -0.027015797793865204,
    -0.03746556490659714,
    0.04665367677807808,
    -0.010367483831942081,
    0.03008764423429966,
    -0.016264332458376884,
    0.029895653948187828,
    -0.03151385858654976,
    -0.010436051525175571,
    0.007837324403226376,
    -0.012959354557096958,
    -0.0010293773375451565,
    -0.0007208212628029287,
    -0.020158996805548668,
    -0.0018564789788797498,
    -0.01851336471736431,
    -0.014035872183740139,
    0.01851336471736431,
    -0.007069362327456474,
    0.03963231295347214,
    0.009606379084289074,
    -0.001111658988520503,
    -0.0156197939068079,
    -0.0007298208074644208,
    0.018554504960775375,
    -0.006095696706324816,
    -0.03645075485110283,
    0.014536418952047825,
    -0.017320280894637108,
    -0.0027152933180332184,
    -0.028853420168161392,
    -0.008858987130224705,
    -0.025397593155503273,
    0.005416873376816511,
    0.010998309589922428,
    0.028030604124069214,
    0.021406933665275574,
    -0.003911805339157581,
    0.025836428627371788,
    -9.738800872582942e-05,
    0.01001092977821827,
    -0.016072342172265053,
    0.07098160684108734,
    0.001135657774284482,
    -0.017690548673272133,
    -0.038644932210445404,
    0.011821125634014606,
    -0.004748335108160973,
    0.005752856377512217,
    0.007137930486351252,
    -0.026247836649417877,
    0.02893570251762867,
    -0.0038878065533936024,
    0.0005026892758905888,
    0.008481863886117935,
    0.006945939734578133,
    0.015606080181896687,
    0.010319486260414124,
    -0.018499650061130524,
    0.0053277346305549145,
    0.025123320519924164,
    -0.011519426479935646,
    0.003394116647541523,
    0.003454113844782114,
    -0.014988968148827553,
    -0.015427803620696068,
    -0.0067573776468634605,
    -0.02231203205883503,
    0.019048195332288742,
    0.022558877244591713,
    -0.008749278262257576,
    0.010024643503129482,
    -0.01372731663286686,
    0.010724037885665894,
    -0.013919306918978691,
    -0.021242370828986168,
    0.0033546900376677513,
    0.00638711079955101,
    -0.0011947976890951395,
    0.01663460023701191,
    -0.008324157446622849,
    -0.01675802282989025,
    -0.0028181453235447407,
    0.05329106003046036,
    -0.002725578611716628,
    -0.0010893743019551039,
    -0.014275860972702503,
    0.010463478974997997,
    0.006544817239046097,
    0.023642251268029213,
    -0.0001879192132037133,
    0.006599671207368374,
    0.02554844319820404,
    0.003274122718721628,
    -0.015057535842061043,
    -0.01071032416075468,
    -0.004124366212636232,
    -0.01426214724779129,
    -0.02711179293692112,
    -0.001803338760510087,
    0.00639053899794817,
    -0.014070156961679459,
    -0.023546256124973297,
    0.029374537989497185,
    0.03008764423429966,
    -0.011601707898080349,
    -0.03324177488684654,
    -0.16917100548744202,
    0.014755836687982082,
    0.022339459508657455,
    -0.03318691998720169,
    0.03831580653786659,
    0.01047719269990921,
    -0.008502434007823467,
    -0.010566331446170807,
    -0.01852707751095295,
    -0.015839211642742157,
    0.023299410939216614,
    -0.01125201117247343,
    -0.012054257094860077,
    -0.01945960335433483,
    -0.005382589064538479,
    0.0019661877304315567,
    0.005807710811495781,
    -0.012170822359621525,
    -0.00677452003583312,
    -0.002153035718947649,
    0.007172214332967997,
    -0.020117854699492455,
    0.018074529245495796,
    0.013898736797273159,
    0.030032791197299957,
    0.011416574940085411,
    0.005152886267751455,
    -0.014796977862715721,
    -0.01426214724779129,
    -0.017553411424160004,
    0.01885620318353176,
    -0.012685082852840424,
    0.033296629786491394,
    0.011224583722651005,
    0.015564939007163048,
    0.008015600964426994,
    0.013377619907259941,
    0.0031678422819823027,
    -0.0017913393676280975,
    0.03379031643271446,
    0.0052934507839381695,
    0.025726718828082085,
    0.012253104709088802,
    -0.02893570251762867,
    -0.016127197071909904,
    0.00527288019657135,
    0.01880135014653206,
    -0.026412399485707283,
    -0.013850739225745201,
    -0.025095893070101738,
    0.020035574212670326,
    0.002929568523541093,
    -0.027605483308434486,
    0.007323063910007477,
    0.030992742627859116,
    0.009757228195667267,
    0.02419079653918743,
    0.018540790304541588,
    0.019487028941512108,
    0.01866421289741993,
    -0.012054257094860077,
    -0.022229749709367752,
    0.0010773749090731144,
    -0.004000943619757891,
    -0.003928947262465954,
    0.0001424929068889469,
    -0.02778375893831253,
    0.046873096376657486,
    0.014947826974093914,
    0.007473913487046957,
    -0.029429392889142036,
    0.0006899656727910042,
    -0.013480471447110176,
    0.012527376413345337,
    0.0019010482355952263,
    0.03650560975074768,
    -0.029840800911188126,
    0.023779386654496193,
    0.002872999757528305,
    -0.0026912945322692394,
    -0.025932423770427704,
    0.03779469057917595,
    -0.011300008744001389,
    -0.004676338750869036,
    0.0018084814073517919,
    -0.019048195332288742,
    0.006160836201161146,
    -0.031267013400793076,
    -0.0035621083807200193,
    -0.009798369370400906,
    0.013158202171325684,
    -0.03719129040837288,
    -0.002249030862003565,
    -0.018170524388551712,
    0.0021838913671672344,
    0.02176348865032196,
    0.0004396924050524831,
    -0.010970882140100002,
    0.010271488688886166,
    -0.011080591008067131,
    -0.013110204599797726,
    0.009887508116662502,
    -0.006459107156842947,
    -0.0004334784171078354,
    -0.009380104020237923,
    -0.0058282813988626,
    -0.030032791197299957,
    -0.0033204061910510063,
    0.015098677016794682,
    -0.0006179692572914064,
    0.016250619664788246,
    0.0016910586273297668,
    0.017608266323804855,
    0.03027963452041149,
    -0.011910264380276203,
    0.021681206300854683,
    -0.02346397377550602,
    -0.019418461248278618,
    0.017004868015646935,
    -0.02150292880833149,
    0.03132186830043793,
    -0.002986137056723237,
    0.0096338065341115,
    0.0038535224739462137,
    -0.01663460023701191,
    -0.012890786863863468,
    -0.09615978598594666,
    -0.02609698660671711,
    0.007179071195423603,
    0.005488869734108448,
    -0.03036191686987877,
    -0.03466798737645149,
    -0.004230646416544914,
    0.020652685314416885,
    -0.04125051945447922,
    0.0036409616004675627,
    0.012355956248939037,
    -0.0023261699825525284,
    -0.02217489667236805,
    0.008639570325613022,
    0.0048306165263056755,
    -0.012808505445718765,
    0.0034489710815250874,
    0.027015797793865204,
    -0.021283511072397232,
    0.022133754566311836,
    0.005859137047082186,
    0.0013130775187164545,
    0.006085411179810762,
    0.006633955519646406,
    -0.024849047884345055,
    0.02609698660671711,
    -0.033708035945892334,
    0.01806081458926201,
    0.019432175904512405,
    0.021132662892341614,
    0.014824404381215572,
    -0.029100265353918076,
    -0.01318562962114811,
    -0.011032593436539173,
    -0.008900128304958344,
    0.027495773509144783,
    -0.01001092977821827,
    -0.010470336303114891,
    0.044788628816604614,
    -0.034722842276096344,
    0.01603120192885399,
    0.020666399970650673,
    -0.00464548310264945,
    -0.0045357742346823215,
    -0.0096338065341115,
    -0.010031500831246376,
    0.017073435708880424,
    0.03392745554447174,
    0.008879558183252811,
    -0.010230347514152527,
    -0.022257177159190178,
    -0.008145879954099655,
    -0.021064093336462975,
    -0.0032055547926574945,
    0.011574280448257923,
    -0.04196362569928169,
    -0.003771240822970867,
    -0.022120041772723198,
    0.021036667749285698,
    0.01048404909670353,
    -0.000307698966935277,
    -0.018156809732317924,
    -0.004148364998400211,
    0.0003638390335254371,
    -0.006016843486577272,
    0.012253104709088802,
    0.012863359414041042,
    0.031212160363793373,
    0.012225677259266376,
    -0.008365297690033913,
    0.000581971020437777,
    -0.010998309589922428,
    -0.024053659290075302,
    0.019857296720147133,
    -0.002938139485195279,
    -0.010840603150427341,
    0.02054297737777233,
    0.01756712608039379,
    0.021653778851032257,
    -0.03365318104624748,
    -0.029593955725431442,
    -0.0016996297053992748,
    -0.03603934869170189,
    -0.025644438341259956,
    0.01993957906961441,
    0.011053163558244705,
    0.0050431773997843266,
    0.012582230381667614,
    0.03746556490659714,
    -0.05419616028666496,
    -0.003647818462923169,
    0.0008939554682001472,
    0.053702469915151596,
    -0.012294244952499866,
    -0.03250123932957649,
    0.006472820416092873,
    -0.0033015499357134104,
    0.01409758348017931,
    0.002626155037432909,
    0.015194672159850597,
    -0.028716284781694412,
    -0.01919904351234436,
    -0.06363111734390259,
    0.019720161333680153,
    0.009805225767195225,
    -0.010813175700604916,
    0.0012410810450091958,
    -0.02771519124507904,
    0.02615184150636196,
    -0.024300504475831985,
    0.009242968633770943,
    0.011279438622295856,
    -0.02258630469441414,
    -0.006849944591522217,
    0.006359683349728584,
    0.005252310074865818,
    -0.014838118106126785,
    -0.017128290608525276,
    0.03469541668891907,
    -0.013343336060643196,
    0.023203415796160698,
    0.028716284781694412,
    0.00684308772906661,
    0.022339459508657455,
    0.03861750662326813,
    0.016346614807844162,
    -0.034640561789274216,
    -0.00787846464663744,
    -0.001571064698509872,
    0.04210076108574867,
    -0.011951404623687267,
    -0.016511177644133568,
    0.016950013116002083,
    0.0008138166158460081,
    -0.01859564520418644,
    0.013418760150671005,
    0.021064093336462975,
    0.019240185618400574,
    0.032144684344530106,
    0.013446187600493431,
    0.020337272435426712,
    -0.0008905270951800048,
    -0.002655296353623271,
    -0.025233030319213867,
    0.017759116366505623,
    -0.022051474079489708,
    -0.016511177644133568,
    -0.004539202433079481,
    -0.0004589771560858935,
    0.02054297737777233,
    0.025041038170456886,
    -0.005608863662928343,
    0.04835416376590729,
    -0.0028575719334185123,
    -0.007775613106787205,
    -0.02028241939842701,
    -0.018568217754364014,
    -0.006342541426420212,
    0.015990061685442924,
    -0.023573683574795723,
    -0.033900026232004166,
    -0.011149159632623196,
    0.028771139681339264,
    -0.0037335283122956753,
    0.0006042556487955153,
    0.010161779820919037,
    -0.018623072654008865,
    -0.022874290123581886,
    -0.038562651723623276,
    0.00086609972640872,
    -0.009016693569719791,
    0.03469541668891907,
    -0.017347708344459534,
    -0.01987101137638092,
    0.011114874854683876,
    -0.003582678735256195,
    0.032885219901800156,
    -0.014700982719659805,
    -0.005656861234456301,
    -0.01084745954722166,
    -0.015647221356630325,
    0.02528788335621357,
    0.015386662445962429,
    -0.04196362569928169,
    -0.012232533656060696,
    0.008399581536650658,
    0.04042770341038704,
    -0.019322466105222702,
    -0.03022478148341179,
    0.002446163911372423,
    -0.013377619907259941,
    0.0026004419196397066,
    -0.024451354518532753,
    0.009188113734126091,
    -0.00638711079955101,
    0.006760806310921907,
    0.012472521513700485,
    0.018019674345850945,
    0.003488397691398859,
    0.013425617478787899,
    0.028716284781694412,
    -0.01718314364552498,
    0.027495773509144783,
    -0.02899055741727352,
    0.0018547647632658482,
    -0.0006239689537324011,
    -0.02353254333138466,
    -0.019144190475344658,
    -0.021324653178453445,
    0.013775314204394817,
    0.004642054438591003,
    0.04075682908296585,
    0.006870515178889036,
    -0.03765755519270897,
    -0.03000536374747753,
    0.010360627435147762,
    -0.012445094995200634,
    -0.0009856652468442917,
    0.02893570251762867,
    -0.004189505707472563,
    -0.011348006315529346,
    -0.008296729996800423,
    -0.008022457361221313,
    0.005132315680384636,
    0.029593955725431442,
    0.005159743130207062,
    0.008461292833089828,
    0.04204590618610382,
    -0.011210869997739792,
    -0.011066877283155918,
    0.015633506700396538,
    0.03137672320008278,
    -0.014934113249182701,
    -0.017745401710271835,
    -0.014687268994748592,
    -0.03628619387745857,
    -0.00993550568819046,
    -0.015606080181896687,
    0.020776107907295227,
    -0.0007448200485669076,
    -0.021941764280200005,
    0.07191413640975952,
    0.018828777596354485,
    0.009736658073961735,
    0.02089953050017357,
    -0.021105235442519188,
    0.00193018966820091,
    0.01770426146686077,
    -0.03395488113164902,
    0.004282072652131319,
    0.013521612621843815,
    0.005218025762587786,
    -0.011025737039744854,
    -0.02236688695847988,
    -0.04264930635690689,
    -0.007329920772463083,
    -0.010984595865011215,
    -0.0011913692578673363,
    -0.00748762721195817,
    -0.015167244710028172,
    0.0034386860206723213,
    0.005128887481987476,
    0.017937391996383667,
    0.00892755575478077,
    0.004988322965800762,
    -0.029045410454273224,
    0.0012127967784181237,
    -0.001339647569693625,
    0.018842490389943123,
    -0.0033478334080427885,
    -0.022833149880170822,
    0.024506209418177605,
    0.011368576437234879,
    -0.01906190812587738,
    -0.0371638648211956,
    -0.005029463674873114,
    0.005807710811495781,
    -0.012897643260657787,
    -0.011046307161450386,
    0.012170822359621525,
    -0.0018993340199813247,
    -0.0167031679302454,
    0.0048066177405416965,
    -0.022078901529312134,
    -0.03480512276291847,
    0.026055846363306046,
    0.0029604239389300346,
    -0.015318094752728939,
    -0.01143028773367405,
    -0.013480471447110176
  ]
}
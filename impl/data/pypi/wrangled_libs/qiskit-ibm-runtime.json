{
  "classifiers": [
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering"
  ],
  "description": "ibm quantum client for qiskit runtime.\n# qiskit runtime ibm client\n[![license](https://img.shields.io/github/license/qiskit/qiskit-ibm-runtime.svg?style=popout-square)](https://opensource.org/licenses/apache-2.0)\n[![ci](https://github.com/qiskit/qiskit-ibm-runtime/actions/workflows/ci.yml/badge.svg)](https://github.com/qiskit/qiskit-ibm-runtime/actions/workflows/ci.yml)\n[![](https://img.shields.io/github/release/qiskit/qiskit-ibm-runtime.svg?style=popout-square)](https://github.com/qiskit/qiskit-ibm-runtime/releases)\n[![](https://img.shields.io/pypi/dm/qiskit-ibm-runtime.svg?style=popout-square)](https://pypi.org/project/qiskit-ibm-runtime/)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![coverage status](https://coveralls.io/repos/github/qiskit/qiskit-ibm-runtime/badge.svg?branch=main)](https://coveralls.io/github/qiskit/qiskit-ibm-runtime?branch=main)\n\n\n**qiskit** is an open-source sdk for working with quantum computers at the level of extended quantum circuits, operators, and primitives.\n\n**qiskit ibm runtime** is a new environment offered by ibm quantum that streamlines quantum computations and provides optimal\nimplementations of the qiskit primitives `sampler` and `estimator` for ibm quantum hardware. it is designed to use additional classical compute resources to execute quantum circuits with more efficiency on quantum processors, by including near-time computations such as error suppression and error mitigation. examples of error suppression include dynamical decoupling, noise-aware compilation, error mitigation including readout mitigation, zero-noise extrapolation (zne), and probabilistic error cancellation (pec).\n\nusing the runtime service, a research team at ibm quantum was able to achieve a 120x speedup\nin their lithium hydride simulation. for more information, see the\n[ibm research blog](https://research.ibm.com/blog/120x-quantum-speedup).\n\nthis module provides the interface to access the qiskit runtime service on ibm quantum platform or ibm cloud.\n\n## installation\n\nyou can install this package using pip:\n\n```bash\npip install qiskit-ibm-runtime\n```\n\n## account setup\n\n### qiskit runtime service on ibm quantum platform\n\nyou will need your ibm quantum api token to authenticate with the runtime service:\n\n1. create an ibm quantum account or log in to your existing account by visiting the [ibm quantum login page].\n\n1. copy (and optionally regenerate) your api token from your\n   [ibm quantum account page].\n\n### qiskit runtime service on ibm cloud\n\nthe runtime service is now part of the ibm quantum services on ibm cloud. to use this service, you'll\nneed to create an ibm cloud account and a quantum service instance.\n[this guide](https://cloud.ibm.com/docs/quantum-computing?topic=quantum-computing-get-started)\ncontains step-by-step instructions, including how to find your\nibm cloud api key and cloud resource name (crn), which you will need for authentication.\n\n\n### save your account on disk\n\nonce you have the account credentials, you can save them on disk, so you won't have to input\nthem each time. the credentials are saved in the `$home/.qiskit/qiskit-ibm.json` file, where `$home` is your home directory.\n\n| :warning: account credentials are saved in plain text, so only do so if you are using a trusted device. |\n|:---------------------------|\n\n ```python\nfrom qiskit_ibm_runtime import qiskitruntimeservice\n\n# save an ibm cloud account.\nqiskitruntimeservice.save_account(channel=\"ibm_cloud\", token=\"my_ibm_cloud_api_key\", instance=\"my_ibm_cloud_crn\")\n\n# save an ibm quantum account.\nqiskitruntimeservice.save_account(channel=\"ibm_quantum\", token=\"my_ibm_quantum_token\")\n```\n\nonce the account is saved on disk, you can instantiate the service without any arguments:\n\n```python\nfrom qiskit_ibm_runtime import qiskitruntimeservice\nservice = qiskitruntimeservice()\n```\n\n### loading account from environment variables\n\nalternatively, the service can discover credentials from environment variables:\n```bash\nexport qiskit_ibm_token=\"my_ibm_cloud_api_key\"\nexport qiskit_ibm_instance=\"my_ibm_cloud_crn\"\nexport qiskit_ibm_channel=\"ibm_cloud\"\n```\n\nthen instantiate the service without any arguments:\n```python\nfrom qiskit_ibm_runtime import qiskitruntimeservice\nservice = qiskitruntimeservice()\n```\n\n### enabling account for current python session\n\nas another alternative, you can also enable an account just for the current session by instantiating the\nservice with your credentials.\n\n```python\nfrom qiskit_ibm_runtime import qiskitruntimeservice\n\n# for an ibm cloud account.\nibm_cloud_service = qiskitruntimeservice(channel=\"ibm_cloud\", token=\"my_ibm_cloud_api_key\", instance=\"my_ibm_cloud_crn\")\n\n# for an ibm quantum account.\nibm_quantum_service = qiskitruntimeservice(channel=\"ibm_quantum\", token=\"my_ibm_quantum_token\")\n```\n\n## primitives\n\nall quantum applications and algorithms level are fundamentally built using three steps:\n1. choose a quantum circuit to encode the quantum state.\n2. define the observable or the classical register to be measured.\n4. execute the quantum circuits by using a primitive (estimator or sampler).\n\n**primitives** are base-level functions that serve as building blocks for many quantum algorithms and applications. the [primitive interfaces](https://qiskit.org/documentation/apidoc/primitives.html) are defined in qiskit.\n\nthe ibm runtime service offers these primitives with additional features, such as built-in error suppression and mitigation.\n\nthere are several different options you can specify when calling the primitives. see [`qiskit_ibm_runtime.options`](https://github.com/qiskit/qiskit-ibm-runtime/blob/main/qiskit_ibm_runtime/options/options.py#l33) class for more information.\n\n### sampler\n\nthis primitive takes a list of user circuits (including measurements) as input and generates an error-mitigated readout of quasi-probability distributions. this provides users a way to better evaluate shot results using error mitigation, and enables them to more efficiently evaluate the possibility of multiple relevant data points in the context of destructive interference.\n\nto invoke the `sampler` primitive\n\n```python\nfrom qiskit_ibm_runtime import qiskitruntimeservice, options, sampler\nfrom qiskit import quantumcircuit\n\nservice = qiskitruntimeservice()\noptions = options(optimization_level=1)\noptions.execution.shots = 1024  # options can be set using auto-complete.\n\n# 1. a quantum circuit for preparing the quantum state (|00> + |11>)/rt{2}\nbell = quantumcircuit(2)\nbell.h(0)\nbell.cx(0, 1)\n\n# 2. map the qubits to a classical register in ascending order\nbell.measure_all()\n\n# 3. execute using the sampler primitive\nbackend = service.get_backend('ibmq_qasm_simulator')\nsampler = sampler(backend=backend, options=options)\njob = sampler.run(circuits=bell)\nprint(f\"job id is {job.job_id()}\")\nprint(f\"job result is {job.result()}\")\n```\n\n### estimator\n\nthis primitive takes circuits and observables as input, to evaluate expectation values and variances for a given parameter input. this estimator allows users to efficiently calculate and interpret expectation values of quantum operators required for many algorithms.\n\nto invoke the `estimator` primitive:\n\n```python\nfrom qiskit_ibm_runtime import qiskitruntimeservice, options, estimator\nfrom qiskit.quantum_info import sparsepauliop\nfrom qiskit import quantumcircuit\nfrom qiskit.circuit import parameter\nimport numpy as np\n\nservice = qiskitruntimeservice()\noptions = options(optimization_level=1)\noptions.execution.shots = 1024  # options can be set using auto-complete.\n\n# 1. a quantum circuit for preparing the quantum state (|000> + e^{itheta} |111>)/rt{2}\ntheta = parameter('\u03b8')\nqc_example = quantumcircuit(3)\nqc_example.h(0) # generate superposition\nqc_example.p(theta, 0) # add quantum phase\nqc_example.cx(0, 1) # condition 1st qubit on 0th qubit\nqc_example.cx(0, 2) # condition 2nd qubit on 0th qubit\n\n# 2. the observable to be measured\nm1 = sparsepauliop.from_list([(\"xxy\", 1), (\"xyx\", 1), (\"yxx\", 1), (\"yyy\", -1)])\n\n# batch of theta parameters to be executed\npoints = 50\ntheta1 = []\nfor x in range(points):\n    theta = [x*2.0*np.pi/50]\n    theta1.append(theta)\n\n# 3. execute using the estimator primitive\nbackend = service.get_backend('ibmq_qasm_simulator')\nestimator = estimator(backend, options=options)\njob = estimator.run(circuits=[qc_example]*points, observables=[m1]*points, parameter_values=theta1)\nprint(f\"job id is {job.job_id()}\")\nprint(f\"job result is {job.result().values}\")\n```\n\nthis code batches together 50 parameters to be executed in a single job. if a user wanted to find the `theta` that optimized the observable, they could plot and observe it occurs at `theta=np.pi/2`. for speed we recommend batching results together (note that depending on your access, there may be limits on the number of circuits, objects, and parameters that you can send).\n\n\n## session\n\nin many algorithms and applications, an estimator needs to be called iteratively without incurring queuing delays on each iteration. to solve this, the ibm runtime service provides a **session**. a session starts when the first job within the session is started, and subsequent jobs within the session are prioritized by the scheduler.\n\nyou can use the [`qiskit_ibm_runtime.session`](https://github.com/qiskit/qiskit-ibm-runtime/blob/main/qiskit_ibm_runtime/session.py) class to start a\nsession. consider the same example above and try to find the optimal `theta`. the following example uses the [golden search method](https://en.wikipedia.org/wiki/golden-section_search) to iteratively find the optimal theta that maximizes the observable.\n\nto invoke the `estimator` primitive within a session:\n\n```python\nfrom qiskit_ibm_runtime import qiskitruntimeservice, session, options, estimator\nfrom qiskit.quantum_info import sparsepauliop\nfrom qiskit import quantumcircuit\nfrom qiskit.circuit import parameter\nimport numpy as np\n\nservice = qiskitruntimeservice()\noptions = options(optimization_level=1)\noptions.execution.shots = 1024  # options can be set using auto-complete.\n\n# 1. a quantum circuit for preparing the quantum state (|000> + e^{itheta} |111>)/rt{2}\ntheta = parameter('\u03b8')\nqc_example = quantumcircuit(3)\nqc_example.h(0) # generate superpostion\nqc_example.p(theta,0) # add quantum phase\nqc_example.cx(0, 1) # condition 1st qubit on 0th qubit\nqc_example.cx(0, 2) # condition 2nd qubit on 0th qubit\n\n# 2. the observable to be measured\nm1 = sparsepauliop.from_list([(\"xxy\", 1), (\"xyx\", 1), (\"yxx\", 1), (\"yyy\", -1)])\n\n\ngr = (np.sqrt(5) + 1) / 2 # golden ratio\nthetaa = 0 # lower range of theta\nthetab = 2*np.pi # upper range of theta\ntol = 1e-1 # tol\n\n# 3. execute iteratively using the estimator primitive\nwith session(service=service, backend=\"ibmq_qasm_simulator\") as session:\n    estimator = estimator(session=session, options=options)\n    #next test range\n    thetac = thetab - (thetab - thetaa) / gr\n    thetad = thetaa + (thetab - thetaa) / gr\n    while abs(thetab - thetaa) > tol:\n        print(f\"max value of m1 is in the range theta = {[thetaa, thetab]}\")\n        job = estimator.run(circuits=[qc_example]*2, observables=[m1]*2, parameter_values=[[thetac],[thetad]])\n        test =job.result().values\n        if test[0] > test[1]:\n            thetab = thetad\n        else:\n            thetaa = thetac\n        thetac = thetab - (thetab - thetaa) / gr\n        thetad = thetaa + (thetab - thetaa) / gr\n\n    # final job to evaluate estimator at midpoint found using golden search method\n    theta_mid = (thetab + thetaa) / 2\n    job = estimator.run(circuits=qc_example, observables=m1, parameter_values=theta_mid)\n    print(f\"session id is {session.session_id}\")\n    print(f\"final job id is {job.job_id()}\")\n    print(f\"job result is {job.result().values} at theta = {theta_mid}\")\n```\n\nthis code returns `job result is [4.] at theta = 1.575674623307102` using only nine iterations. this is a very powerful extension to the primitives. however, using too much code between iterative calls can lock the qpu and use excessive qpu time, which is expensive. we recommend only using sessions when needed. the sampler can also be used within a session, but there are not any well-defined examples for this.\n\n## instances\n\naccess to ibm quantum platform channel is controlled by the instances (previously called providers) to which you are assigned. an instance is defined by a hierarchical organization of hub, group, and project. a hub is the top level of a given hierarchy (organization) and contains within it one or more groups. these groups are in turn populated with projects. the combination of hub/group/project is called an instance. users can belong to more than one instance at any time.\n\n> **_note:_** ibm cloud instances are different from ibm quantum platform instances.  ibm cloud does not use the hub/group/project structure for user management. to view and create ibm cloud instances, visit the [ibm cloud quantum instances page](https://cloud.ibm.com/quantum/instances).\n\nto view a list of your instances, visit your [account settings page](https://www.quantum-computing.ibm.com/account) or use the `instances()` method.\n\nyou can specify an instance when initializing the service or provider, or when picking a backend:\n\n```python\n# optional: list all the instances you can access.\nservice = qiskitruntimeservice(channel='ibm_quantum')\nprint(service.instances())\n\n# optional: specify the instance at service level. this becomes the default unless overwritten.\nservice = qiskitruntimeservice(channel='ibm_quantum', instance=\"hub1/group1/project1\")\nbackend1 = service.backend(\"ibmq_manila\")\n\n# optional: specify the instance at the backend level, which overwrites the service-level specification when this backend is used.\nbackend2 = service.backend(\"ibmq_manila\", instance=\"hub2/group2/project2\")\n\nsampler1 = sampler(backend=backend1)    # this will use hub1/group1/project1\nsampler2 = sampler(backend=backend2)    # this will use hub2/group2/project2\n```\n\nif you do not specify an instance, then the code will select one in the following order:\n\n1. if your account only has access to one instance, it is selected by default.\n2. if your account has access to multiple instances, but only one can access the requested backend, the instance with access is selected.\n3. in all other cases, the code selects the first instance other than ibm-q/open/main that has access to the backend.\n\n## access your ibm quantum backends\n\na **backend** is a quantum device or simulator capable of running quantum circuits or pulse schedules.\n\nyou can query for the backends you have access to. attributes and methods of the returned instances\nprovide information, such as qubit counts, error rates, and statuses, of the backends.\n\n```python\nfrom qiskit_ibm_runtime import qiskitruntimeservice\nservice = qiskitruntimeservice()\n\n# display all backends you have access.\nprint(service.backends())\n\n# get a specific backend.\nbackend = service.backend('ibmq_qasm_simulator')\n\n# print backend coupling map.\nprint(backend.coupling_map)\n```\n\n## next steps\n\nnow you're set up and ready to check out some of the [tutorials].\n\n## contribution guidelines\n\nif you'd like to contribute to qiskit-ibm-runtime, please take a look at our\n[contribution guidelines]. this project adheres to qiskit's [code of conduct].\nby participating, you are expected to uphold to this code.\n\nwe use [github issues] for tracking requests and bugs. please use our [slack]\nfor discussion and simple questions. to join our slack community use the\ninvite link at [qiskit.org]. for questions that are more suited for a forum we\nuse the `qiskit` tag in [stack exchange].\n\n## license\n\n[apache license 2.0].\n\n\n[ibm quantum]: https://www.ibm.com/quantum-computing/\n[ibm quantum login page]:  https://quantum-computing.ibm.com/login\n[ibm quantum account page]: https://quantum-computing.ibm.com/account\n[contribution guidelines]: https://github.com/qiskit/qiskit-ibm-runtime/blob/main/contributing.md\n[code of conduct]: https://github.com/qiskit/qiskit-ibm-runtime/blob/main/code_of_conduct.md\n[github issues]: https://github.com/qiskit/qiskit-ibm-runtime/issues\n[slack]: https://qiskit.slack.com\n[qiskit.org]: https://qiskit.org\n[stack exchange]: https://quantumcomputing.stackexchange.com/questions/tagged/qiskit\n[many people]: https://github.com/qiskit/qiskit-ibm-runtime/graphs/contributors\n[bibtex file]: https://github.com/qiskit/qiskit/blob/master/qiskit.bib\n[apache license 2.0]: https://github.com/qiskit/qiskit-ibm-runtime/blob/main/license.txt\n[tutorials]: https://github.com/qiskit/qiskit-ibm-runtime/tree/main/docs/tutorials\n",
  "docs_url": null,
  "keywords": "qiskit sdk quantum api runtime ibm",
  "license": "apache 2.0",
  "name": "qiskit-ibm-runtime",
  "package_url": "https://pypi.org/project/qiskit-ibm-runtime/",
  "project_url": "https://pypi.org/project/qiskit-ibm-runtime/",
  "project_urls": {
    "Bug Tracker": "https://github.com/Qiskit/qiskit-ibm-runtime/issues",
    "Documentation": "https://qiskit.org/documentation/",
    "Homepage": "https://github.com/Qiskit/qiskit-ibm-runtime",
    "Source Code": "https://github.com/Qiskit/qiskit-ibm-runtime"
  },
  "release_url": "https://pypi.org/project/qiskit-ibm-runtime/0.17.0/",
  "requires_dist": [
    "qiskit >=0.44.1",
    "requests >=2.19",
    "requests-ntlm >=1.1.0",
    "numpy >=1.13",
    "urllib3 >=1.21.1",
    "python-dateutil >=2.8.0",
    "websocket-client >=1.5.1",
    "ibm-platform-services >=0.22.6",
    "qiskit-ibm-provider >=0.7.2"
  ],
  "requires_python": ">=3.8",
  "summary": "ibm quantum client for qiskit runtime.",
  "version": "0.17.0",
  "releases": [],
  "developers": [
    "hello@qiskit.org",
    "qiskit_development_team"
  ],
  "kwds": "qiskit_ibm_token qiskit_ibm_runtime ibm_quantum ibm_quantum_service qiskit_ibm_instance",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_qiskit_ibm_runtime",
  "homepage": "https://github.com/qiskit/qiskit-ibm-runtime",
  "release_count": 35,
  "dependency_ids": [
    "pypi_ibm_platform_services",
    "pypi_numpy",
    "pypi_python_dateutil",
    "pypi_qiskit",
    "pypi_qiskit_ibm_provider",
    "pypi_requests",
    "pypi_requests_ntlm",
    "pypi_urllib3",
    "pypi_websocket_client"
  ],
  "documentation_summary": "The HTML text provides information about the `qiskit-ibm-runtime` package version 0.20.0, available on PyPI for installation. This package serves as an IBM Quantum client for Qiskit Runtime, designed to streamline quantum computations and provide efficient implementations of Qiskit primitives for IBM Quantum hardware. It supports Python versions 3.8 and above and is licensed under the Apache Software License 2.0. The package facilitates access to the Qiskit Runtime service on both IBM Quantum Platform and IBM Cloud, offering features like error suppression and mitigation to enhance quantum circuit execution. Users can install the package via pip and need an IBM Quantum API token or an IBM Cloud account for authentication. The document also outlines how to save account credentials, use environment variables for authentication, and details on using primitives like Sampler and Estimator for quantum computations. Additionally, it mentions the ability to access IBM Quantum backends and manage instances for executing quantum circuits.",
  "embedding": [
    -0.01109395083039999,
    -0.02387486770749092,
    -0.007569905836135149,
    -0.01668381504714489,
    -0.00842053722590208,
    0.032023776322603226,
    0.015840331092476845,
    -0.009206835180521011,
    -0.010336245410144329,
    -0.020972713828086853,
    -0.0049179368652403355,
    -0.01618344336748123,
    -0.02393205277621746,
    0.012144730426371098,
    -0.007391201797872782,
    -0.015840331092476845,
    0.01529707107692957,
    -0.014953958801925182,
    0.024718351662158966,
    0.0031201737001538277,
    0.015039737336337566,
    -0.005225307773798704,
    -0.0009399835835210979,
    -0.01618344336748123,
    0.0018549485830590129,
    0.023731904104351997,
    0.029135916382074356,
    -0.0032613498624414206,
    -0.008892316371202469,
    0.004078027792274952,
    0.013152621686458588,
    -0.013860289938747883,
    -0.0458054356276989,
    -0.02121574990451336,
    0.001661948161199689,
    0.005382567644119263,
    0.022388050332665443,
    0.006519125774502754,
    0.026848504319787025,
    -0.008513463661074638,
    0.0187996719032526,
    0.02470405399799347,
    0.0076413871720433235,
    0.016426481306552887,
    -0.00683007063344121,
    0.020257897675037384,
    -0.004710640292614698,
    -0.00867072306573391,
    0.0010186133440583944,
    -0.0034793687518686056,
    0.007748609874397516,
    0.016540851444005966,
    -0.031709253787994385,
    0.009471317753195763,
    0.011658655479550362,
    -0.009721502661705017,
    -0.028478285297751427,
    0.012323434464633465,
    0.004853603430092335,
    0.018828263506293297,
    0.0092711690813303,
    0.009056723676621914,
    -0.02077256515622139,
    -0.011580025777220726,
    -0.0028592655435204506,
    0.020701082423329353,
    -0.018142040818929672,
    0.00671927398070693,
    0.022917013615369797,
    -0.00576499430462718,
    0.03525474667549133,
    0.01529707107692957,
    -0.007791498675942421,
    0.004303194582462311,
    0.03642704337835312,
    -0.030393993481993675,
    -0.047463808208703995,
    -0.002476838883012533,
    -0.0058722165413200855,
    0.013738770969212055,
    -0.001334026106633246,
    -0.015154107473790646,
    -0.02311716228723526,
    0.033453408628702164,
    0.007301849313080311,
    0.022545309737324715,
    -0.017698854207992554,
    0.028178062289953232,
    -0.015440034680068493,
    0.005468345247209072,
    0.024117905646562576,
    -0.016755295917391777,
    0.019114190712571144,
    0.02436094358563423,
    0.006104532163590193,
    0.038399938493967056,
    -0.020586712285876274,
    0.02175901085138321,
    -0.014753810130059719,
    -0.007223219610750675,
    0.0012875630054622889,
    0.021401602774858475,
    -0.036226894706487656,
    -0.012423508800566196,
    -0.024732647463679314,
    -0.020844046026468277,
    -0.021959159523248672,
    -0.007577053736895323,
    0.022473827004432678,
    0.018399374559521675,
    -0.018556633964180946,
    0.024275165051221848,
    -0.019886191934347153,
    -0.0332532599568367,
    0.004900066647678614,
    0.008978093974292278,
    0.025590427219867706,
    0.00029441501828841865,
    0.003817119635641575,
    -0.019099894911050797,
    -0.001441248576156795,
    0.006483384873718023,
    0.003080858616158366,
    -0.01678388938307762,
    0.01221621222794056,
    -0.0043996949680149555,
    -0.0152684785425663,
    -0.0288928784430027,
    -0.00452478788793087,
    -0.024889906868338585,
    -0.011265506036579609,
    -0.008863723836839199,
    0.006243921350687742,
    0.008020239882171154,
    -0.013174066320061684,
    -0.002290986478328705,
    -0.022287975996732712,
    -0.004603417590260506,
    -0.009528502821922302,
    -0.01466803252696991,
    -0.010479208081960678,
    0.014353513717651367,
    -0.011901693418622017,
    -0.014710921794176102,
    -0.01340995542705059,
    0.039229124784469604,
    0.010629319585859776,
    0.012687991373240948,
    0.0014162299921736121,
    -0.018056262284517288,
    0.0248041283339262,
    0.010186133906245232,
    -0.04180246219038963,
    -0.01569736748933792,
    0.006765737198293209,
    -0.001628887839615345,
    -0.005268197041004896,
    0.009828725829720497,
    -0.02594783529639244,
    0.0032220350112766027,
    0.006022328045219183,
    0.028978656977415085,
    -0.024875611066818237,
    -0.016883963719010353,
    0.00795590691268444,
    0.028092283755540848,
    0.015854626893997192,
    -0.04045860841870308,
    -0.005725679453462362,
    -0.013803104870021343,
    0.02681991085410118,
    0.003252414520829916,
    -0.022473827004432678,
    0.010893802158534527,
    -0.0021015601232647896,
    0.0015752766048535705,
    0.01164435874670744,
    0.012616509571671486,
    -0.021029898896813393,
    -0.016640925779938698,
    0.040744535624980927,
    -0.0012580768670886755,
    -0.011830211617052555,
    0.042717427015304565,
    -0.034597113728523254,
    -0.023360200226306915,
    -0.004249583464115858,
    -0.00913535337895155,
    0.010850912891328335,
    0.011508543975651264,
    0.018685299903154373,
    0.04303194582462311,
    -0.015096922405064106,
    -0.015054033137857914,
    -0.5723106265068054,
    -0.02263108640909195,
    -0.03405385464429855,
    -0.034111037850379944,
    -0.011708692647516727,
    0.012466398067772388,
    0.0052467524074018,
    0.01343854796141386,
    -0.009792984463274479,
    0.04786410555243492,
    -0.02982214093208313,
    0.025447463616728783,
    -0.0020104211289435625,
    -0.02388916350901127,
    -0.010707949288189411,
    -0.017541594803333282,
    0.02327442169189453,
    -0.007241090293973684,
    -0.03474007546901703,
    -0.027334578335285187,
    -0.018842561170458794,
    0.03551207855343819,
    -0.040858905762434006,
    0.012795213609933853,
    0.0008055087528191507,
    0.02120145410299301,
    0.012080397456884384,
    -0.010014577768743038,
    0.00910676084458828,
    0.010843764990568161,
    -0.011479951441287994,
    0.005947272293269634,
    0.035683635622262955,
    0.024017831310629845,
    0.05146678164601326,
    0.008920908905565739,
    -0.03299592435359955,
    0.03005088120698929,
    -0.0009721503010950983,
    0.04703491926193237,
    -0.005293215624988079,
    -0.01777033507823944,
    0.02720591239631176,
    0.012852398678660393,
    0.037542156875133514,
    0.012502138502895832,
    0.01175158191472292,
    0.018728189170360565,
    -0.02001485973596573,
    -0.03005088120698929,
    0.006322551053017378,
    0.006737144663929939,
    0.018513744696974754,
    0.006969459820538759,
    0.048664700239896774,
    -0.015096922405064106,
    0.007141015958040953,
    -0.018656708300113678,
    0.016726704314351082,
    0.021901974454522133,
    0.024732647463679314,
    0.006065217312425375,
    -0.009128205478191376,
    -0.03259562700986862,
    0.0024303756654262543,
    0.02174471504986286,
    0.0017218140419572592,
    -0.019228560850024223,
    -0.0041923983953893185,
    -0.026834208518266678,
    0.027020059525966644,
    -0.01060787495225668,
    0.0018227818654850125,
    -0.02187338098883629,
    0.030565548688173294,
    0.02819235809147358,
    0.014453588053584099,
    0.004231713246554136,
    -0.0013769151410087943,
    0.023131458088755608,
    0.0020515231881290674,
    -0.005761420354247093,
    0.01749870553612709,
    -0.041945427656173706,
    0.0066549405455589294,
    0.0010659699328243732,
    0.009549947455525398,
    -0.007898720912635326,
    0.01815633662045002,
    0.027606209740042686,
    0.00942842848598957,
    0.01887115277349949,
    0.0021712547168135643,
    -0.026977170258760452,
    0.0013483224902302027,
    0.007691424340009689,
    0.01592610962688923,
    -0.0193572286516428,
    -0.020100636407732964,
    0.004531935788691044,
    0.010271911509335041,
    0.01071509812027216,
    0.008756500668823719,
    0.008592093363404274,
    0.017298556864261627,
    0.01144421100616455,
    0.013066844083368778,
    -0.019986266270279884,
    0.003356063039973378,
    -0.01586892455816269,
    -0.006765737198293209,
    -0.056013014167547226,
    -0.010693653486669064,
    0.0030826458241790533,
    0.012194767594337463,
    -0.04180246219038963,
    0.036341264843940735,
    0.019257154315710068,
    -0.011186876334249973,
    -0.002353532938286662,
    -0.009843021631240845,
    -0.006744292564690113,
    0.019557377323508263,
    0.02530450001358986,
    0.006211754400283098,
    0.01313832588493824,
    0.03811401128768921,
    -0.017598779872059822,
    -0.026977170258760452,
    0.016097664833068848,
    0.0061795879155397415,
    0.02933606505393982,
    0.021001305431127548,
    -0.009714354760944843,
    0.030737105756998062,
    0.02208782732486725,
    0.020901231095194817,
    0.0027163024060428143,
    -0.001044525415636599,
    -0.00885657500475645,
    0.0022105698008090258,
    -0.024875611066818237,
    0.0051145111210644245,
    -0.021129973232746124,
    -0.015840331092476845,
    -0.029507620260119438,
    -0.017370037734508514,
    -0.009442724287509918,
    0.017641669139266014,
    -0.012037508189678192,
    -0.02906443551182747,
    0.010786579921841621,
    -0.025476057082414627,
    0.02792072854936123,
    -0.0004340275772847235,
    -0.008299018256366253,
    -0.007920165546238422,
    -0.04160231351852417,
    -0.012902435846626759,
    -0.0061259763315320015,
    0.002891432261094451,
    0.025747686624526978,
    -0.0025429592933505774,
    0.011787322349846363,
    -0.029421843588352203,
    -0.018513744696974754,
    -0.025761982426047325,
    -0.0025858483277261257,
    -0.03185221925377846,
    -0.035569265484809875,
    -0.03785667568445206,
    -0.015768850222229958,
    0.0022695420775562525,
    0.006100958213210106,
    0.011015321128070354,
    -0.0013322390150278807,
    0.008492019027471542,
    0.02742035686969757,
    -0.018199225887656212,
    -0.009321206249296665,
    0.0023606810718774796,
    0.02388916350901127,
    -0.030022289603948593,
    -0.03150910884141922,
    0.03482585400342941,
    0.010858060792088509,
    0.009685762226581573,
    -0.00279493210837245,
    0.00576499430462718,
    -0.0024375240318477154,
    -0.015196996740996838,
    0.018070558086037636,
    -0.01799907721579075,
    0.042831797152757645,
    -0.02060100808739662,
    0.0054111601784825325,
    0.0185423381626606,
    -0.009156798012554646,
    0.03582659736275673,
    -0.00031876342836767435,
    0.028664138168096542,
    0.015840331092476845,
    0.026019316166639328,
    -0.00547906756401062,
    -0.0051145111210644245,
    -0.014939663000404835,
    0.04114483296871185,
    -0.030765697360038757,
    0.02927887998521328,
    -0.004771399311721325,
    0.025004277005791664,
    0.0093998359516263,
    -0.03239547833800316,
    -0.024032127112150192,
    -0.02474694326519966,
    0.009657169692218304,
    -0.021458787843585014,
    0.018899746239185333,
    -0.015054033137857914,
    0.025547537952661514,
    -0.00014452694449573755,
    0.010379133746027946,
    0.014682329259812832,
    -0.02181619592010975,
    0.011265506036579609,
    -0.0008774371235631406,
    0.0017164528835564852,
    -0.015611589886248112,
    0.021901974454522133,
    -0.004749955143779516,
    0.0027127282228320837,
    0.010622171685099602,
    0.009728651493787766,
    -0.010693653486669064,
    0.0008711824775673449,
    -0.003180932952091098,
    0.0392577163875103,
    -0.013524326495826244,
    0.06221761927008629,
    -0.04820721969008446,
    -0.004585547372698784,
    -0.009063871577382088,
    0.020086340606212616,
    -0.018899746239185333,
    0.006955163553357124,
    -0.006808625999838114,
    -0.02203064225614071,
    0.02606220543384552,
    0.0001386073708999902,
    -0.007176756858825684,
    -0.019199969246983528,
    0.03534052148461342,
    -0.020858341827988625,
    0.03396807610988617,
    0.01995767466723919,
    -0.010979579761624336,
    -0.00017613523232284933,
    -0.0016994760371744633,
    0.030651327222585678,
    -0.011294099502265453,
    0.013931771740317345,
    0.03005088120698929,
    0.019014116376638412,
    -0.004042286891490221,
    0.028149470686912537,
    -0.014303476549685001,
    0.0059151058085262775,
    -0.04185964912176132,
    0.0059294020757079124,
    0.007223219610750675,
    0.006826496683061123,
    -0.017541594803333282,
    -0.03834275156259537,
    -0.022230790928006172,
    0.020643897354602814,
    -0.0016628416487947106,
    0.0005548762273974717,
    0.0507233701646328,
    0.024561092257499695,
    0.0034543501678854227,
    -0.019829006865620613,
    -0.020529527217149734,
    0.030880069360136986,
    -0.014539365656673908,
    -0.0030844327993690968,
    -0.011408469639718533,
    -0.0037885268684476614,
    0.0011687248479574919,
    -0.006547718308866024,
    0.020915528759360313,
    0.0011285163927823305,
    -0.0174558162689209,
    0.01164435874670744,
    0.012952473014593124,
    -0.017212778329849243,
    -0.01447503175586462,
    0.03894319757819176,
    0.0002450479951221496,
    0.0025733390357345343,
    0.0030326086562126875,
    0.02158745564520359,
    -0.007051663938909769,
    -0.015039737336337566,
    0.03419681638479233,
    0.051609743386507034,
    -0.0005973184597678483,
    -0.00847772229462862,
    -0.011236913502216339,
    0.0017763187643140554,
    -0.008156055584549904,
    0.0185423381626606,
    -0.0023249404039233923,
    -0.004346083849668503,
    0.008377647958695889,
    0.02573339082300663,
    0.007920165546238422,
    0.017370037734508514,
    -0.027277393266558647,
    0.0061474209651350975,
    -0.005489789880812168,
    0.0006880107684992254,
    -0.0010909885168075562,
    -0.030737105756998062,
    -0.0024017831310629845,
    0.026648355647921562,
    0.006111680064350367,
    0.004667751025408506,
    0.008999538607895374,
    -0.02786354348063469,
    -0.03030821494758129,
    -0.03250984847545624,
    -0.0023428108543157578,
    0.003952934872359037,
    -0.0019031986594200134,
    0.0016431842232123017,
    0.009192539379000664,
    0.008549204096198082,
    0.023360200226306915,
    0.00861353799700737,
    0.012766621075570583,
    -0.015125514939427376,
    0.010164689272642136,
    0.020701082423329353,
    -0.011687248013913631,
    0.02147308550775051,
    0.015554404817521572,
    -0.00839194469153881,
    0.021272936835885048,
    0.03336763009428978,
    0.0020908380392938852,
    0.02846398949623108,
    0.016426481306552887,
    0.006919422652572393,
    -0.05884368717670441,
    0.015382848680019379,
    -0.012452101334929466,
    -0.009914503432810307,
    0.01891404204070568,
    -0.015468627214431763,
    0.030651327222585678,
    0.021601751446723938,
    0.03774230554699898,
    -0.006919422652572393,
    0.008427685126662254,
    0.0061581432819366455,
    0.0018183141946792603,
    0.007476979400962591,
    -0.009671465493738651,
    0.018356485292315483,
    -0.037799492478370667,
    -0.010064614936709404,
    0.0016279943520203233,
    -0.003777804784476757,
    -0.0008233791450038552,
    0.02055811882019043,
    0.040372829884290695,
    -0.059129614382982254,
    -0.03408244624733925,
    0.017055518925189972,
    0.030880069360136986,
    0.0007300062570720911,
    -0.02158745564520359,
    -0.009071020409464836,
    -0.02720591239631176,
    -0.010808023624122143,
    -0.024789832532405853,
    0.005897235125303268,
    0.0012187620159238577,
    -0.011687248013913631,
    0.012830954045057297,
    -0.011251210235059261,
    -0.00182992999907583,
    -0.00046775798546150327,
    0.03468289226293564,
    -0.0038349900860339403,
    -0.01032909657806158,
    -0.033767927438020706,
    0.0018889023922383785,
    0.036341264843940735,
    -0.0011857016943395138,
    0.006837218999862671,
    -0.00035070680314674973,
    0.0052038636058568954,
    -0.007476979400962591,
    -0.009128205478191376,
    -0.03711326792836189,
    -0.009306909516453743,
    -0.043432243168354034,
    -0.014682329259812832,
    -0.009599984623491764,
    0.0006987330270931125,
    0.026791319251060486,
    -0.014825291931629181,
    0.022859828546643257,
    0.002676987322047353,
    -0.008349055424332619,
    0.030565548688173294,
    0.004106620326638222,
    0.04188824072480202,
    0.03837134316563606,
    0.02257390134036541,
    0.011479951441287994,
    -0.00432106526568532,
    -0.0018209947738796473,
    -0.00035182369174435735,
    -0.03499741107225418,
    0.028206655755639076,
    -0.006018754094839096,
    0.020801156759262085,
    -0.01799907721579075,
    -0.0061581432819366455,
    -0.0033542760647833347,
    -0.01161576621234417,
    -0.015725960955023766,
    0.03228110820055008,
    -0.025318797677755356,
    -0.015111219137907028,
    -0.020429452881217003,
    0.0004967973800376058,
    0.003527618944644928,
    0.001683392678387463,
    0.005636327434331179,
    -0.022145012393593788,
    0.008148906752467155,
    0.012151879258453846,
    -0.016812480986118317,
    0.034968819469213486,
    0.0250757597386837,
    0.001824568840675056,
    0.019714636728167534,
    -0.007266108877956867,
    0.01565448008477688,
    -0.04177387058734894,
    0.01685537025332451,
    0.015025440603494644,
    0.012995362281799316,
    -0.018456559628248215,
    -0.03805682435631752,
    -0.022202197462320328,
    -0.0069623119197785854,
    -0.00867072306573391,
    -0.0006330593023449183,
    0.017956187948584557,
    -0.0028503304347395897,
    -0.039772383868694305,
    -0.009728651493787766,
    -0.01303110271692276,
    0.012030360288918018,
    -0.009692910127341747,
    -0.020643897354602814,
    0.004925085231661797,
    0.01619773916900158,
    0.0029629140626639128,
    0.006940867286175489,
    0.0006071471725590527,
    0.007712868973612785,
    -0.029050137847661972,
    -0.021344417706131935,
    -0.016826778650283813,
    -0.010350541211664677,
    -0.007362608797848225,
    0.006790755782276392,
    0.022116418927907944,
    0.03951505199074745,
    0.03908615931868553,
    0.018070558086037636,
    -0.015311366878449917,
    0.0024625426158308983,
    0.0024017831310629845,
    -0.007212497293949127,
    -0.004024416208267212,
    0.014196253381669521,
    -0.006944441236555576,
    0.0011910628527402878,
    0.00942842848598957,
    -0.010672208853065968,
    -0.0025590427685528994,
    -0.02148738130927086,
    -0.015225589275360107,
    0.023803386837244034,
    -0.008792242035269737,
    0.020958416163921356,
    -0.013474289327859879,
    -0.03865727037191391,
    -0.009442724287509918,
    0.015883220359683037,
    -0.02857835963368416,
    0.007884425111114979,
    -0.03614111617207527,
    -0.005500512197613716,
    0.006812200415879488,
    -0.01055068988353014,
    0.033339038491249084,
    0.003781378734856844,
    0.010336245410144329,
    -0.02115856483578682,
    0.027062948793172836,
    0.02774917334318161,
    0.013016806915402412,
    0.00250721862539649,
    -0.017184186726808548,
    -0.04165950044989586,
    -0.002896793419495225,
    0.005060900002717972,
    -0.0033471276983618736,
    0.003518683835864067,
    0.008370500057935715,
    -0.015597294084727764,
    0.001636929577216506,
    0.02877850830554962,
    -0.00659775547683239,
    -0.031480513513088226,
    0.04051579535007477,
    -0.01892833784222603,
    -0.03188081085681915,
    -0.03722763806581497,
    -0.020586712285876274,
    -0.009557095356285572,
    -0.0035490633454173803,
    -0.00864213053137064,
    0.0177131500095129,
    0.0010454190196469426,
    -0.026977170258760452,
    -0.002053310163319111,
    0.027163023129105568,
    -0.006647792644798756,
    0.032138146460056305,
    0.008906612172722816,
    0.025004277005791664,
    0.02650539204478264,
    -0.002576913218945265,
    -0.001783466897904873,
    -0.023588940501213074,
    -0.013695882633328438,
    -0.00929976161569357,
    0.02671983651816845,
    0.03648423030972481,
    -0.007598498370498419,
    -0.034539926797151566,
    0.021058490499854088,
    -0.0182707067579031,
    -0.04863610863685608,
    -0.04737802967429161,
    0.011565729044377804,
    0.015068329870700836,
    0.00869931560009718,
    -0.01668381504714489,
    -0.023574644699692726,
    -0.010343393310904503,
    0.02443242445588112,
    -0.039800975471735,
    0.009421280585229397,
    -0.0015136237489059567,
    -0.025661908090114594,
    -0.021015603095293045,
    -0.0018638838082551956,
    0.02104419469833374,
    0.036398451775312424,
    0.028664138168096542,
    0.0005142210284247994,
    -0.01656944490969181,
    -0.01739863120019436,
    -0.01809915155172348,
    -0.00807027705013752,
    0.006065217312425375,
    0.03136614337563515,
    -0.03534052148461342,
    -0.0074126459658145905,
    0.056241754442453384,
    -0.01691255532205105,
    0.003014738205820322,
    0.004353231750428677,
    -0.01152998860925436,
    0.03516896814107895,
    -0.012209064327180386,
    -0.010128948837518692,
    -0.010965283960103989,
    -0.027234503999352455,
    0.0011633636895567179,
    0.0006040198495611548,
    0.013152621686458588,
    0.013216955587267876,
    0.013567215763032436,
    0.023431681096553802,
    0.003202377585694194,
    0.012559324502944946,
    0.01313832588493824,
    -0.020586712285876274,
    0.0007313465466722846,
    -0.009557095356285572,
    -0.021687529981136322,
    0.0011937434319406748,
    0.0037170452997088432,
    -0.03248125687241554,
    -0.032166738063097,
    -0.03228110820055008,
    -0.006612051744014025,
    0.019528783857822418,
    0.013452844694256783,
    0.030937254428863525,
    -0.005236030090600252,
    0.035683635622262955,
    -0.012444953434169292,
    0.015125514939427376,
    -0.022202197462320328,
    0.006604903377592564,
    -0.011322692036628723,
    -0.012866695411503315,
    -0.016097664833068848,
    0.00039627632941119373,
    0.011901693418622017,
    -0.00400654599070549,
    -0.033167481422424316,
    -0.03005088120698929,
    -0.009449873119592667,
    0.020543823018670082,
    0.017841817811131477,
    0.005025159101933241,
    -0.011158283799886703,
    0.05266767367720604,
    0.007548461202532053,
    0.0008631407981738448,
    -0.01322410348802805,
    0.020801156759262085,
    0.01629781350493431,
    -0.01832789182662964,
    -0.0006125083309598267,
    -0.029507620260119438,
    0.010507801547646523,
    -0.03551207855343819,
    0.021515972912311554,
    0.0021230047568678856,
    -0.04449017345905304,
    -0.0338251106441021,
    0.012966769747436047,
    -0.00807027705013752,
    -0.02551894634962082,
    0.01354577112942934,
    0.025104351341724396,
    -0.021458787843585014,
    -0.042831797152757645,
    0.011043913662433624,
    -0.021959159523248672,
    0.017841817811131477,
    0.002532237209379673,
    0.020200710743665695,
    0.029264584183692932,
    -0.0030826458241790533,
    -0.009449873119592667,
    0.014053290709853172,
    -0.020629601553082466,
    0.0015565126668661833,
    -0.00406373105943203,
    -0.02137301117181778,
    0.013681585900485516,
    0.02501857466995716,
    0.017841817811131477,
    -0.03173784911632538,
    -0.04832158982753754,
    -0.005586290266364813,
    -0.028278136625885963,
    -0.004013693891465664,
    -0.013345622457563877,
    0.026090798899531364,
    0.005050177685916424,
    0.02404642291367054,
    0.006018754094839096,
    9.063648758456111e-05,
    0.00314161810092628,
    0.040258459746837616,
    -0.03282437101006508,
    0.0014296327717602253,
    0.02381768263876438,
    -0.013145473785698414,
    0.014653735794126987,
    -0.00227669021114707,
    -0.0027270244900137186,
    0.012444953434169292,
    0.015954701229929924,
    0.020472342148423195,
    0.02709154225885868,
    0.034854449331760406,
    0.0028217376675456762,
    -0.020743971690535545,
    -0.00022192815958987921,
    -0.010593579150736332,
    -0.0024125054478645325,
    0.013231251388788223,
    0.01343854796141386,
    -0.025690501555800438,
    -0.006140273064374924,
    0.007187478709965944,
    -0.02873561903834343,
    0.005296789575368166,
    0.007834387943148613,
    0.021601751446723938,
    -0.005118085537105799,
    -0.006983756087720394,
    -0.015740256756544113,
    -0.023160051554441452,
    0.009385539218783379,
    -0.011143987998366356,
    0.0381711944937706,
    0.007691424340009689,
    0.028707027435302734,
    0.027120133861899376,
    -0.023674719035625458,
    -0.01940011791884899,
    -0.01662662997841835,
    0.027777764946222305,
    -0.0022856255527585745,
    -0.026319539174437523,
    0.019071301445364952,
    -0.028063692152500153,
    -0.008677870966494083,
    -0.009414131753146648,
    0.021144269034266472,
    0.012108989991247654,
    -0.007762906141579151,
    0.009128205478191376,
    -0.01924285665154457,
    -0.014653735794126987,
    0.0018692448502406478,
    -0.009507058188319206,
    -0.003014738205820322,
    0.004935807082802057,
    -0.011022469028830528,
    0.0015207718824967742,
    -0.0021926993504166603,
    -0.005865068640559912,
    -0.020758267492055893,
    -0.006669236812740564,
    0.003309600055217743,
    -0.011372729204595089,
    -0.006065217312425375,
    -0.041945427656173706,
    -0.031223179772496223,
    0.01265225000679493,
    0.0008863723487593234,
    0.013481437228620052,
    0.17372897267341614,
    0.015368552878499031,
    0.017484409734606743,
    0.021844789385795593,
    -0.0008425898267887533,
    0.009685762226581573,
    -0.006983756087720394,
    -0.008735056035220623,
    -0.026233762502670288,
    0.0458054356276989,
    -0.003967231139540672,
    0.024875611066818237,
    -0.010457764379680157,
    -0.0032452663872390985,
    0.010271911509335041,
    -0.008120314218103886,
    -0.03528333827853203,
    -0.02621946483850479,
    -0.02774917334318161,
    0.025218723341822624,
    0.02088693529367447,
    -0.021029898896813393,
    -0.005725679453462362,
    -0.030451178550720215,
    0.02534738928079605,
    -0.028363915160298347,
    -0.0015064756153151393,
    0.006558440625667572,
    0.013853142037987709,
    0.022473827004432678,
    -0.014496476389467716,
    0.027706284075975418,
    -0.00620103208348155,
    -0.021773308515548706,
    -0.013838845305144787,
    0.0011758729815483093,
    0.01466803252696991,
    -0.004639158491045237,
    -0.015783146023750305,
    0.021716121584177017,
    -0.005711383186280727,
    -0.0019907637033611536,
    -0.0009632150758989155,
    -0.025661908090114594,
    -0.014160512946546078,
    0.0038206935860216618,
    -0.02153027057647705,
    -0.008906612172722816,
    0.004460454452782869,
    0.030336808413267136,
    -0.025204425677657127,
    -0.011730137281119823,
    0.03880023583769798,
    0.007655683439224958,
    0.005311085842549801,
    0.00190141168422997,
    -0.02087263949215412,
    0.0092711690813303,
    0.01668381504714489,
    -0.008084573782980442,
    -0.02218790166079998,
    0.030822882428765297,
    -0.033453408628702164,
    0.019600266590714455,
    -0.04317491129040718,
    0.01646937057375908,
    -0.029507620260119438,
    0.013681585900485516,
    0.024603979662060738,
    0.003018312156200409,
    -0.011701544746756554,
    0.019986266270279884,
    -0.02852117456495762,
    -0.012645102106034756,
    0.011058209463953972,
    -0.01804196648299694,
    0.024889906868338585,
    -0.006258217617869377,
    0.03625548630952835,
    0.009142502211034298,
    0.014868181198835373,
    0.019671747460961342,
    -0.011008172295987606,
    0.011815914884209633,
    -0.029965102672576904,
    -0.010093207471072674,
    0.03571222722530365,
    -0.005371845327317715,
    -0.006965885870158672,
    -0.003096942091360688,
    -0.005489789880812168,
    -0.013288436457514763,
    0.0008850320591591299,
    -0.014539365656673908,
    -0.01005746703594923,
    -0.013174066320061684,
    0.01379595696926117,
    0.012394916266202927,
    0.008963797241449356,
    -0.004510491620749235,
    -0.017913298681378365,
    0.05747123807668686,
    0.018656708300113678,
    -0.01761307567358017,
    -0.01892833784222603,
    0.009564243257045746,
    -0.016826778650283813,
    0.017527299001812935,
    0.006494107190519571,
    -0.012702287174761295,
    -0.0044461581856012344,
    -0.04100186750292778,
    0.016054775565862656,
    -0.022816939279437065,
    0.014346364885568619,
    -0.003695600898936391,
    -0.010564986616373062,
    0.0007443025824613869,
    0.0010489930864423513,
    -0.00014542046119458973,
    -0.009900206699967384,
    0.005843624006956816,
    -0.013231251388788223,
    -0.02050093375146389,
    -0.022159308195114136,
    -0.04540513828396797,
    0.010343393310904503,
    0.025533242151141167,
    -0.013045399449765682,
    -0.012838102877140045,
    0.014482180587947369,
    0.013745919801294804,
    0.013116881251335144,
    -0.007266108877956867,
    0.0177131500095129,
    -0.009213983081281185,
    0.002846756251528859,
    -0.012416360899806023,
    -0.00904957577586174,
    0.04437580332159996,
    -0.014982551336288452,
    -0.00945702102035284,
    -0.011894544586539268,
    -0.012309138663113117,
    -0.004567676689475775,
    -0.025990724563598633,
    0.01542573794722557,
    -0.018027668818831444,
    0.005943698342889547,
    -0.010207578539848328,
    0.0049072145484387875,
    0.0030272474978119135,
    0.0013241973938420415,
    -0.04672040045261383,
    0.020215008407831192,
    -0.01529707107692957,
    -0.02534738928079605,
    -0.019171375781297684,
    -0.022002048790454865,
    0.013095436617732048,
    -0.01366014126688242,
    -0.01371732633560896,
    0.011487099342048168,
    0.02780635841190815,
    -0.024232275784015656,
    0.006869385484606028,
    -0.18093432486057281,
    0.006336847320199013,
    0.017212778329849243,
    -0.03439696505665779,
    0.011244062334299088,
    -0.014410698786377907,
    -0.005207437556236982,
    -0.030765697360038757,
    -0.027792062610387802,
    -0.006797904148697853,
    -0.0006978395394980907,
    -0.012830954045057297,
    -0.011737285181879997,
    -0.024117905646562576,
    0.010557838715612888,
    -0.005211011506617069,
    -0.022774050012230873,
    -0.006236772984266281,
    0.04140216484665871,
    -0.004356806166470051,
    0.039829570800065994,
    -0.01248069480061531,
    0.0066620889119803905,
    0.017684558406472206,
    0.016941148787736893,
    -0.015554404817521572,
    -0.040372829884290695,
    -0.000834994891192764,
    0.000587042944971472,
    -0.02873561903834343,
    0.005368271376937628,
    -0.004253157414495945,
    0.021558862179517746,
    -0.009635725058615208,
    0.03931490331888199,
    0.0022052086424082518,
    0.01052209734916687,
    -0.010850912891328335,
    -0.0018192077986896038,
    0.01684107445180416,
    0.02267397567629814,
    0.03734200820326805,
    0.008256128989160061,
    -0.0022588197607547045,
    0.0024303756654262543,
    0.01338136289268732,
    0.02987932600080967,
    -0.03005088120698929,
    -0.0022695420775562525,
    -0.03113740310072899,
    0.03942927345633507,
    -0.0059151058085262775,
    -0.01842796616256237,
    -0.009685762226581573,
    0.0018442262662574649,
    0.024503905326128006,
    0.007369757164269686,
    -2.7517638955032453e-05,
    0.001524345949292183,
    -0.007055237889289856,
    0.000587042944971472,
    -0.023088570684194565,
    0.008770797401666641,
    -0.006047346629202366,
    -0.004585547372698784,
    -0.0026644780300557613,
    -0.016440777108073235,
    0.01656944490969181,
    -0.00820609275251627,
    0.015768850222229958,
    0.014839588664472103,
    0.010643616318702698,
    -0.014953958801925182,
    0.011515691876411438,
    0.010650764219462872,
    0.001182127627544105,
    -0.017570186406373978,
    0.009900206699967384,
    0.016555147245526314,
    -0.01684107445180416,
    -0.014467883855104446,
    0.04534795135259628,
    0.014825291931629181,
    -0.015082625672221184,
    -0.007491275668144226,
    0.004989418666809797,
    0.012773768976330757,
    -0.02654828131198883,
    -0.0015261330408975482,
    -0.0071696084924042225,
    0.019228560850024223,
    -0.0375993438065052,
    0.01618344336748123,
    -0.01668381504714489,
    -0.009371243417263031,
    0.01360295619815588,
    -0.002328514354303479,
    0.012880991213023663,
    0.01619773916900158,
    -0.026047909632325172,
    -0.01215902715921402,
    0.033996667712926865,
    0.0004376016731839627,
    -0.008177499286830425,
    0.033767927438020706,
    -0.0016217397060245275,
    -0.02982214093208313,
    0.020586712285876274,
    0.013881734572350979,
    -0.011923137120902538,
    -0.019014116376638412,
    -0.0021069212816655636,
    0.018956931307911873,
    0.021230047568678856,
    -0.01043631974607706,
    0.015468627214431763,
    -0.010557838715612888,
    -0.004682047292590141,
    0.0007510039722546935,
    -0.0006209967541508377,
    0.037542156875133514,
    -0.001201785053126514,
    -0.04237431660294533,
    0.02213071659207344,
    -0.012008915655314922,
    -0.007105275057256222,
    -0.09664317965507507,
    -0.015468627214431763,
    0.004217416979372501,
    0.025447463616728783,
    -0.006619200110435486,
    0.0017977632815018296,
    -0.0014617994893342257,
    0.031165994703769684,
    -0.02579057589173317,
    0.012201916426420212,
    -0.014868181198835373,
    -0.015611589886248112,
    -0.013917475007474422,
    0.02497568540275097,
    -0.04034423828125,
    -1.1497096238599624e-05,
    -0.013288436457514763,
    -0.018728189170360565,
    -0.0034329057671129704,
    0.011401321738958359,
    -0.0027109412476420403,
    -0.022874124348163605,
    -0.009857318364083767,
    0.018528040498495102,
    0.010486356914043427,
    -0.008720760233700275,
    -0.012709436006844044,
    0.0049179368652403355,
    0.009728651493787766,
    0.023760497570037842,
    0.03811401128768921,
    -0.02534738928079605,
    -0.014896773733198643,
    -0.012387768365442753,
    0.018785374239087105,
    0.009585687890648842,
    -0.014267735183238983,
    -0.02153027057647705,
    0.06370443850755692,
    -0.01134413667023182,
    -0.004535510204732418,
    -0.019557377323508263,
    0.015711665153503418,
    0.023846274241805077,
    0.004353231750428677,
    0.008163203485310078,
    -0.0256333164870739,
    0.03362496197223663,
    0.0016771380323916674,
    -0.028864286839962006,
    -0.032681405544281006,
    -0.007083830423653126,
    -0.018513744696974754,
    -0.02388916350901127,
    0.034968819469213486,
    0.003620545146986842,
    0.01420340221375227,
    0.02360323816537857,
    -0.015540109016001225,
    -0.025761982426047325,
    0.014353513717651367,
    0.004807140212506056,
    -0.006297532469034195,
    0.0018513745162636042,
    -0.025161536410450935,
    -0.030108066275715828,
    -0.012459250167012215,
    0.0018370781326666474,
    -0.004571251105517149,
    -0.013538622297346592,
    -0.020186414942145348,
    0.014024698175489902,
    -0.01136558037251234,
    -0.003609822830185294,
    -0.01190884131938219,
    -0.010979579761624336,
    0.007334016263484955,
    -0.025375982746481895,
    0.011794470250606537,
    -0.012151879258453846,
    -0.023946348577737808,
    0.010443467646837234,
    -0.021687529981136322,
    -0.009471317753195763,
    -0.0066871074959635735,
    0.022874124348163605,
    0.018456559628248215,
    0.0056291790679097176,
    -0.004578399006277323,
    -0.04057297855615616,
    0.03139473497867584,
    -1.1664630619634409e-05,
    0.015225589275360107,
    -0.022259382531046867,
    0.010393430478870869,
    0.021844789385795593,
    -0.026205169036984444,
    -0.018999820575118065,
    0.0009444511961191893,
    0.012923880480229855,
    -0.037313416600227356,
    -0.018227817490696907,
    -0.07165319472551346,
    0.02038656361401081,
    0.01109395083039999,
    -0.027663394808769226,
    0.00040722195990383625,
    -0.020186414942145348,
    0.019057005643844604,
    -0.028278136625885963,
    0.008606389164924622,
    0.02431805431842804,
    -0.030336808413267136,
    0.0007755758124403656,
    0.020172119140625,
    0.014925366267561913,
    -0.010600727051496506,
    -0.026348132640123367,
    0.041459351778030396,
    -0.031108809635043144,
    0.03125177323818207,
    0.00651555135846138,
    0.019371524453163147,
    -0.003767082467675209,
    0.026362428441643715,
    0.02732028253376484,
    0.002830673009157181,
    -0.0034221834503114223,
    0.005500512197613716,
    0.02687709592282772,
    -0.026019316166639328,
    -0.00659775547683239,
    0.00731971999630332,
    0.03133755177259445,
    -0.0015699155628681183,
    0.03128036484122276,
    0.0030022289138287306,
    0.023145755752921104,
    0.034597113728523254,
    0.010207578539848328,
    0.0168982595205307,
    0.007927313446998596,
    -0.03239547833800316,
    -0.01147280354052782,
    0.02844969369471073,
    0.01210184209048748,
    -0.01832789182662964,
    0.0010874144500121474,
    -0.001006104052066803,
    -0.00469991797581315,
    0.024075016379356384,
    0.02443242445588112,
    0.017212778329849243,
    0.01804196648299694,
    -0.028306730091571808,
    -0.01542573794722557,
    0.007362608797848225,
    -0.014239142648875713,
    -0.004574825055897236,
    0.007569905836135149,
    -0.029078731313347816,
    -0.010357690043747425,
    0.04837877303361893,
    -0.0061688655987381935,
    0.007920165546238422,
    0.007512720301747322,
    0.0034650724846869707,
    -0.005582716315984726,
    -0.039886754006147385,
    -0.006165291648358107,
    0.015125514939427376,
    -0.026405317708849907,
    -0.017513001337647438,
    -0.01968604326248169,
    0.02284553274512291,
    -0.009971688501536846,
    0.008592093363404274,
    -0.01972893252968788,
    0.01438925415277481,
    -0.017184186726808548,
    -0.0280779879540205,
    0.007355460897088051,
    0.0365414135158062,
    -0.01371732633560896,
    -0.01466803252696991,
    8.985465683508664e-05,
    0.025661908090114594,
    0.010979579761624336,
    -0.02453249879181385,
    -0.014911070466041565,
    -0.015668775886297226,
    -0.010822320356965065,
    0.001466267160139978,
    0.0023606810718774796,
    0.004206694662570953,
    0.00025063249631784856,
    0.033453408628702164,
    -0.004464028403162956,
    -0.004692769609391689,
    -0.01011465210467577,
    0.02786354348063469,
    -0.0059258281253278255,
    0.01354577112942934,
    -0.0003904684563167393,
    0.009328354150056839,
    -0.016312111169099808,
    -0.01379595696926117,
    -0.002206995617598295,
    1.7214231775142252e-05,
    -0.026705540716648102,
    -0.0009230066789314151,
    -0.007026645354926586,
    -0.010800875723361969,
    -0.0025197279173880816,
    -0.008820834569633007,
    0.018227817490696907,
    -0.017727447673678398,
    0.012988214381039143,
    0.010808023624122143,
    -0.010021725669503212,
    -0.02245953120291233,
    -0.010357690043747425,
    0.0028753490187227726,
    -0.003777804784476757,
    -0.00839194469153881,
    -0.013395659625530243,
    0.02055811882019043,
    0.01144421100616455,
    0.013259843923151493,
    -0.005983013194054365,
    0.005961568560451269,
    0.024847017601132393,
    -0.004303194582462311,
    -9.052479435922578e-05,
    -0.010593579150736332,
    -0.027763469144701958,
    0.004942955449223518,
    -0.014710921794176102,
    -0.011186876334249973,
    -0.024718351662158966,
    -0.015625886619091034,
    0.09681473672389984,
    -0.0018281429074704647,
    0.004714214242994785,
    0.012330583296716213,
    -0.030165251344442368,
    0.00547906756401062,
    -0.0003216673794668168,
    0.020200710743665695,
    -0.019328635185956955,
    -0.03139473497867584,
    0.006004457827657461,
    0.00010258732072543353,
    0.00951420608907938,
    -0.004682047292590141,
    -0.017312852665781975,
    -0.00308621977455914,
    -0.0032452663872390985,
    0.03025102987885475,
    -0.0025626167189329863,
    -0.019271450117230415,
    0.030708512291312218,
    0.03239547833800316,
    0.015725960955023766,
    -0.015054033137857914,
    -0.015954701229929924,
    -0.015897516161203384,
    0.014603698626160622,
    0.0209870096296072,
    -0.0007711081998422742,
    -0.04815003275871277,
    0.0430605411529541,
    -0.015382848680019379,
    -0.019671747460961342,
    -0.026591170579195023,
    0.011236913502216339,
    0.01095813512802124,
    -0.029264584183692932,
    0.008492019027471542,
    0.007023070938885212,
    0.0006352930795401335,
    -0.00850631482899189,
    -0.0005093066720291972,
    -0.02884998917579651,
    -0.028435396030545235,
    0.0231743473559618,
    0.014396402053534985,
    -0.004356806166470051,
    -0.0022195049095898867,
    -0.04603417590260506
  ]
}
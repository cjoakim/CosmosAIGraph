{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development"
  ],
  "description": "generate avro schemas from python classes. serialize/deserialize python instances with avro schemas\n# dataclasses avro schema generator\n\ngenerate [avro schemas](https://avro.apache.org/docs/1.8.2/spec.html) from python dataclasses. [code generation](https://marcosschroh.github.io/dataclasses-avroschema/model_generator/) from avro schemas. [serialize/deserialize](https://marcosschroh.github.io/dataclasses-avroschema/serialization/) python instances with avro schemas\n\n[![tests](https://github.com/marcosschroh/dataclasses-avroschema/actions/workflows/tests.yaml/badge.svg)](https://github.com/marcosschroh/dataclasses-avroschema/actions/workflows/tests.yaml)\n[![github license](https://img.shields.io/github/license/marcosschroh/dataclasses-avroschema.svg)](https://github.com/marcosschroh/dataclasses-avroschema/blob/master/license)\n[![codecov](https://codecov.io/gh/marcosschroh/dataclasses-avroschema/branch/master/graph/badge.svg)](https://codecov.io/gh/marcosschroh/dataclasses-avroschema)\n![python version](https://img.shields.io/badge/python-3.8%2b-yellowgreen)\n\n## requirements\n\n`python 3.8+`\n\n## installation\n\nwith `pip` or `poetry`:\n\n`pip install dataclasses-avroschema` or `poetry install`\n\n### extras\n\n- [pydantic](https://docs.pydantic.dev/): `pip install 'dataclasses-avroschema[pydantic]'` or `poetry install --extras \"pydantic\"`\n- [faust-streaming](https://github.com/faust-streaming/faust): `pip install 'dataclasses-avroschema[faust]'` or `poetry install --extras \"faust\"`\n- [faker](https://github.com/joke2k/faker): `pip install 'dataclasses-avroschema[faker]'` or `poetry install --extras \"faker\"`\n\n*note*: you can install all extra dependencies with `pip install dataclasses-avroschema[faust, pydantic, faker]` or `poetry install --extras \"pydantic faust faker\"`\n\n### cli\n\nto add `avro schemas cli` install [dc-avro](https://marcosschroh.github.io/dc-avro/)\n\n`pip install 'dataclasses-avroschema[cli]'` or `poetry install --with cli`\n\n## documentation\n\nhttps://marcosschroh.github.io/dataclasses-avroschema/\n\n## usage\n\n### generating the avro schema\n\n```python\nfrom dataclasses import dataclass\nimport enum\n\nimport typing\n\nfrom dataclasses_avroschema import avromodel, types\n\n\nclass favoritecolor(enum.enum):\n    blue = \"blue\"\n    yellow = \"yellow\"\n    green = \"green\"\n\n\n@dataclass\nclass user(avromodel):\n    \"an user\"\n    name: str\n    age: int\n    pets: typing.list[str]\n    accounts: typing.dict[str, int]\n    favorite_colors: favoritecolor\n    country: str = \"argentina\"\n    address: str = none\n\n    class meta:\n        namespace = \"user.v1\"\n        aliases = [\"user-v1\", \"super user\"]\n\nuser.avro_schema()\n\n'{\n    \"type\": \"record\",\n    \"name\": \"user\",\n    \"doc\": \"an user\",\n    \"namespace\": \"user.v1\",\n    \"aliases\": [\"user-v1\", \"super user\"],\n    \"fields\": [\n        {\"name\": \"name\", \"type\": \"string\"},\n        {\"name\": \"age\", \"type\": \"long\"},\n        {\"name\": \"pets\", \"type\": \"array\", \"items\": \"string\"},\n        {\"name\": \"accounts\", \"type\": \"map\", \"values\": \"long\"},\n        {\"name\": \"favorite_color\", \"type\": {\"type\": \"enum\", \"name\": \"favoritecolor\", \"symbols\": [\"blue\", \"yellow\", \"green\"]}}\n        {\"name\": \"country\", \"type\": \"string\", \"default\": \"argentina\"},\n        {\"name\": \"address\", \"type\": [\"null\", \"string\"], \"default\": null}\n    ]\n}'\n\nuser.avro_schema_to_python()\n\n{\n    \"type\": \"record\",\n    \"name\": \"user\",\n    \"doc\": \"an user\",\n    \"namespace\": \"user.v1\",\n    \"aliases\": [\"user-v1\", \"super user\"],\n    \"fields\": [\n        {\"name\": \"name\", \"type\": \"string\"},\n        {\"name\": \"age\", \"type\": \"long\"},\n        {\"name\": \"pets\", \"type\": {\"type\": \"array\", \"items\": \"string\", \"name\": \"pet\"}},\n        {\"name\": \"accounts\", \"type\": {\"type\": \"map\", \"values\": \"long\", \"name\": \"account\"}},\n        {\"name\": \"favorite_colors\", \"type\": {\"type\": \"enum\", \"name\": \"favoritecolor\", \"symbols\": [\"blue\", \"yellow\", \"green\"]}},\n        {\"name\": \"country\", \"type\": \"string\", \"default\": \"argentina\"},\n        {\"name\": \"address\", \"type\": [\"null\", \"string\"], \"default\": none}\n    ],\n}\n```\n\n### serialization to avro or avro-json and json payload\n\nfor serialization is neccesary to use python class/dataclasses instance\n\n```python\nfrom dataclasses import dataclass\n\nimport typing\n\nfrom dataclasses_avroschema import avromodel\n\n\n@dataclass\nclass address(avromodel):\n    \"an address\"\n    street: str\n    street_number: int\n\n\n@dataclass\nclass user(avromodel):\n    \"user with multiple address\"\n    name: str\n    age: int\n    addresses: typing.list[address]\n\naddress_data = {\n    \"street\": \"test\",\n    \"street_number\": 10,\n}\n\n# create an address instance\naddress = address(**address_data)\n\ndata_user = {\n    \"name\": \"john\",\n    \"age\": 20,\n    \"addresses\": [address],\n}\n\n# create an user instance\nuser = user(**data_user)\n\nuser.serialize()\n# >>> b\"\\x08john(\\x02\\x08test\\x14\\x00\"\n\nuser.serialize(serialization_type=\"avro-json\")\n# >>> b'{\"name\": \"john\", \"age\": 20, \"addresses\": [{\"street\": \"test\", \"street_number\": 10}]}'\n\n# get the json from the instance\nuser.to_json()\n# >>> '{\"name\": \"john\", \"age\": 20, \"addresses\": [{\"street\": \"test\", \"street_number\": 10}]}'\n\n# get a python dict\nuser.to_dict()\n# >>> {\"name\": \"john\", \"age\": 20, \"addresses\": [{\"street\": \"test\", \"street_number\": 10}]}\n\n```\n\n### deserialization\n\ndeserialization could take place with an instance dataclass or the dataclass itself. can return the dict representation or a new class instance\n\n```python\nimport typing\nimport dataclasses\n\nfrom dataclasses_avroschema import avromodel\n\n\n@dataclasses.dataclass\nclass address(avromodel):\n    \"an address\"\n    street: str\n    street_number: int\n\n@dataclasses.dataclass\nclass user(avromodel):\n    \"user with multiple address\"\n    name: str\n    age: int\n    addresses: typing.list[address]\n\navro_binary = b\"\\x08john(\\x02\\x08test\\x14\\x00\"\navro_json_binary = b'{\"name\": \"john\", \"age\": 20, \"addresses\": [{\"street\": \"test\", \"street_number\": 10}]}'\n\n# return a new class instance!!\nuser.deserialize(avro_binary)\n# >>>> user(name='john', age=20, addresses=[address(street='test', street_number=10)])\n\n# return a python dict\nuser.deserialize(avro_binary, create_instance=false)\n# >>> {\"name\": \"john\", \"age\": 20, \"addresses\": [{\"street\": \"test\", \"street_number\": 10}]}\n\n# return a new class instance!!\nuser.deserialize(avro_json_binary, serialization_type=\"avro-json\")\n# >>>> user(name='john', age=20, addresses=[address(street='test', street_number=10)])\n\n# return a python dict\nuser.deserialize(avro_json_binary, serialization_type=\"avro-json\", create_instance=false)\n# >>> {\"name\": \"john\", \"age\": 20, \"addresses\": [{\"street\": \"test\", \"street_number\": 10}]}\n```\n\n## pydantic integration\n\nto add `dataclasses-avroschema` functionality to `pydantic` you only need to replace `basemodel` by `avrobasemodel`:\n\n```python\nimport typing\nimport enum\nimport dataclasses\n\nfrom dataclasses_avroschema.avrodantic import avrobasemodel\n\nfrom pydantic import field\n\n\nclass favoritecolor(str, enum.enum):\n    blue = \"blue\"\n    yellow = \"yellow\"\n    green = \"green\"\n\n\n@dataclasses.dataclass\nclass useradvance(avrobasemodel):\n    name: str\n    age: int\n    pets: typing.list[str] = field(default_factory=lambda: [\"dog\", \"cat\"])\n    accounts: typing.dict[str, int] = field(default_factory=lambda: {\"key\": 1})\n    has_car: bool = false\n    favorite_colors: favoritecolor = favoritecolor.blue\n    country: str = \"argentina\"\n    address: str = none\n\n    class meta:\n        schema_doc = false\n\n\n# avro schema\nuseradvance.avro_schema()\n'{\n    \"type\": \"record\",\n    \"name\": \"useradvance\",\n    \"fields\": [\n        {\"name\": \"name\", \"type\": \"string\"},\n        {\"name\": \"age\", \"type\": \"long\"},\n        {\"name\": \"pets\", \"type\": {\"type\": \"array\", \"items\": \"string\", \"name\": \"pet\"}, \"default\": [\"dog\", \"cat\"]},\n        {\"name\": \"accounts\", \"type\": {\"type\": \"map\", \"values\": \"long\", \"name\": \"account\"}, \"default\": {\"key\": 1}},\n        {\"name\": \"has_car\", \"type\": \"boolean\", \"default\": false},\n        {\"name\": \"favorite_colors\", \"type\": {\"type\": \"enum\", \"name\": \"favorite_color\", \"symbols\": [\"blue\", \"yellow\", \"green\"]}, \"default\": \"blue\"},\n        {\"name\": \"country\", \"type\": \"string\", \"default\": \"argentina\"},\n        {\"name\": \"address\", \"type\": [\"null\", \"string\"], \"default\": null}\n    ]\n}'\n\n# json schema\nuseradvance.json_schema()\n\n{\n    \"title\": \"useradvance\",\n    \"description\": \"useradvance(*, name: str, age: int, pets: list[str] = none, ...\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\"title\": \"name\", \"type\": \"string\"},\n        \"age\": {\"title\": \"age\", \"type\": \"integer\"},\n        \"pets\": {\"title\": \"pets\", \"type\": \"array\", \"items\": {\"type\": \"string\"}},\n        \"accounts\": {\"title\": \"accounts\", \"type\": \"object\", \"additionalproperties\": {\"type\": \"integer\"}},\n        \"has_car\": {\"title\": \"has car\", \"default\": false, \"type\": \"boolean\"},\n        \"favorite_colors\": {\"default\": \"blue\", \"allof\": [{\"$ref\": \"#/definitions/favoritecolor\"}]},\n        \"country\": {\"title\": \"country\", \"default\": \"argentina\", \"type\": \"string\"},\n        \"address\": {\"title\": \"address\", \"type\": \"string\"}}, \"required\": [\"name\", \"age\"], \"definitions\": {\"favoritecolor\": {\"title\": \"favoritecolor\", \"description\": \"an enumeration.\", \"enum\": [\"blue\", \"yellow\", \"green\"], \"type\": \"string\"}}\n}\n\nuser = useradvance(name=\"bond\", age=50)\n\n# pydantic\nuser.dict()\n# >>> {'name': 'bond', 'age': 50, 'pets': ['dog', 'cat'], 'accounts': {'key': 1}, 'has_car': false, 'favorite_colors': <favoritecolor.blue: 'blue'>, 'country': 'argentina', 'address': none}\n\n# pydantic\nuser.json()\n# >>> '{\"name\": \"bond\", \"age\": 50, \"pets\": [\"dog\", \"cat\"], \"accounts\": {\"key\": 1}, \"has_car\": false, \"favorite_colors\": \"blue\", \"country\": \"argentina\", \"address\": null}'\n\n# pydantic\nuser = useradvance(name=\"bond\")\n\n# validationerror: 1 validation error for useradvance\n# age\n# field required (type=value_error.missing)\n\n\n# dataclasses-avroschema\nevent = user.serialize()\nprint(event)\n# >>> b'\\x08bondd\\x04\\x06dog\\x06cat\\x00\\x02\\x06key\\x02\\x00\\x00\\x00\\x12argentina\\x00'\n\nuseradvance.deserialize(data=event)\n# >>> useradvance(name='bond', age=50, pets=['dog', 'cat'], accounts={'key': 1}, has_car=false, favorite_colors=<favoritecolor.blue: 'blue'>, country='argentina', address=none)\n```\n\n## examples with python streaming drivers (kafka and redis)\n\nunder [examples](https://github.com/marcosschroh/dataclasses-avroschema/tree/master/examples) folder you can find 3 differents kafka examples, one with [aiokafka](https://github.com/aio-libs/aiokafka) (`async`) showing the simplest use case when a `avromodel` instance is serialized and sent it thorught kafka, and the event is consumed.\nthe other two examples are `sync` using the [kafka-python](https://github.com/dpkp/kafka-python) driver, where the `avro-json` serialization and `schema evolution` (`full` compatibility) is shown.\nalso, there are two `redis` examples using `redis streams` with [walrus](https://github.com/coleifer/walrus) and [redisgears-py](https://github.com/redisgears/redisgears-py)\n\n## factory and fixtures\n\n[dataclasses avro schema](https://github.com/marcosschroh/dataclasses-avroschema) also includes a `factory` feature, so you can generate `fast` python instances and use them, for example, to test your data streaming pipelines. instances can be generated using the `fake` method.\n\n*note*: this feature is not enabled by default and requires you have the `faker` extra installed. you may install it with `pip install 'dataclasses-avroschema[faker]'`\n\n\n```python\nimport typing\nimport dataclasses\n\nfrom dataclasses_avroschema import avromodel\n\n\n@dataclasses.dataclass\nclass address(avromodel):\n    \"an address\"\n    street: str\n    street_number: int\n\n\n@dataclasses.dataclass\nclass user(avromodel):\n    \"user with multiple address\"\n    name: str\n    age: int\n    addresses: typing.list[address]\n\n\naddress.fake()\n# >>>> address(street='pxzjildrgbxyhwrrpwxq', street_number=2067)\n\nuser.fake()\n# >>>> user(name='vgsbbogfsgjkmdnefhiz', age=8974, addresses=[address(street='vnppygesihuwwzgcmmis', street_number=4790)])\n```\n\n## features\n\n* [x] primitive types: int, long, double, float, boolean, string and null support\n* [x] complex types: enum, array, map, fixed, unions and records support\n* [x] `typing.annotated` supported\n* [x] `typing.literal` supported\n* [x] logical types: date, time (millis and micro), datetime (millis and micro), uuid support\n* [x] schema relations (onetoone, onetomany)\n* [x] recursive schemas\n* [x] generate avro schemas from `faust.record`\n* [x] instance serialization correspondent to `avro schema` generated\n* [x] data deserialization. return python dict or class instance\n* [x] generate json from python class instance\n* [x] case schemas\n* [x] generate models from `avsc` files\n* [x] examples of integration with `kafka` drivers: [aiokafka](https://github.com/aio-libs/aiokafka), [kafka-python](https://github.com/dpkp/kafka-python)\n* [x] example of integration  with `redis` drivers: [walrus](https://github.com/coleifer/walrus) and [redisgears-py](https://github.com/redisgears/redisgears-py)\n* [x] factory instances\n* [x] [pydantic](https://pydantic-docs.helpmanual.io/) integration\n\n## development\n\n[poetry](https://python-poetry.org/docs/) is needed to install the dependencies and develope locally\n\n1. install dependencies: `poetry install --all-extras`\n2. code linting: `./scripts/format`\n3. run tests: `./scripts/test`\n\nfor commit messages we use [commitizen](https://commitizen-tools.github.io/commitizen/) in order to standardize a way of committing rules\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "dataclasses-avroschema",
  "package_url": "https://pypi.org/project/dataclasses-avroschema/",
  "project_url": "https://pypi.org/project/dataclasses-avroschema/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/dataclasses-avroschema/0.54.2/",
  "requires_dist": [
    "fastavro (>=1.7.3,<2.0.0)",
    "dacite (>=1.8.0,<2.0.0)",
    "faker (>=18.3.1,<21.0.0) ; extra == \"faker\"",
    "inflector (>=3.1.0,<4.0.0)",
    "faust-streaming (>=0.10.11,<0.11.0) ; extra == \"faust\"",
    "casefy (>=0.1.7,<0.2.0)",
    "typing-extensions (>=4.2.0,<5.0.0) ; python_version < \"3.9\"",
    "pydantic[email] (>=2.4.2,<3.0.0) ; extra == \"pydantic\""
  ],
  "requires_python": ">=3.8,<4.0",
  "summary": "generate avro schemas from python classes. serialize/deserialize python instances with avro schemas",
  "version": "0.54.2",
  "releases": [],
  "developers": [
    "marcos_schroh",
    "schrohm@gmail.com"
  ],
  "kwds": "avro_schema avro_schema_to_python dataclasses_avroschema avrobasemodel avro_json_binary",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_dataclasses_avroschema",
  "homepage": "",
  "release_count": 142,
  "dependency_ids": [
    "pypi_casefy",
    "pypi_dacite",
    "pypi_faker",
    "pypi_fastavro",
    "pypi_faust_streaming",
    "pypi_inflector",
    "pypi_pydantic",
    "pypi_typing_extensions"
  ],
  "documentation_summary": "The HTML text is about the `dataclasses-avroschema` package available on PyPI, which is designed for generating Avro Schemas from Python classes and serializing/deserializing Python instances with Avro schemas. The latest version, 0.57.1, was released on February 22, 2024. It requires Python versions 3.8 to less than 4.0 and is licensed under the MIT License. The package supports generating schemas from data classes, serialization and deserialization of data, and integration with Pydantic for additional functionality. It also includes features for working with primitive and complex types, logical types, schema relations, and recursive schemas. Additionally, it provides examples for integration with Kafka and Redis drivers, and a factory feature for generating instances for testing. The package is maintained by Marcos Schroh and can be installed using pip or poetry.",
  "embedding": [
    -0.02288019098341465,
    -0.0010800795862451196,
    0.0003812664363067597,
    -0.0377388559281826,
    -0.005474422127008438,
    0.019959602504968643,
    0.003849255619570613,
    -0.0316823348402977,
    -0.017335109412670135,
    -0.019838470965623856,
    0.013371452689170837,
    0.018277235329151154,
    -0.03380884602665901,
    0.0014367414405569434,
    -0.00932704284787178,
    -0.0021870771888643503,
    0.020497959107160568,
    -0.024966325610876083,
    0.01675637625157833,
    -0.002338490216061473,
    0.04613723233342171,
    0.01826377585530281,
    -0.004027586430311203,
    0.0003736957733053714,
    -0.017254356294870377,
    0.02305515669286251,
    -0.009098241105675697,
    -0.006827045232057571,
    -0.017631206661462784,
    0.014643322676420212,
    0.044522158801555634,
    -0.023687727749347687,
    -0.0031493911519646645,
    -0.03537008538842201,
    -5.788393900729716e-05,
    -0.023822316899895668,
    0.02094210498034954,
    0.004212647210806608,
    0.001897710026241839,
    0.01808881014585495,
    0.004367424640804529,
    0.007294743321835995,
    -0.01040375791490078,
    -0.012557187117636204,
    -0.017994597554206848,
    0.00645355973392725,
    -0.003953562583774328,
    -0.018842510879039764,
    -0.004727451130747795,
    -0.011265129782259464,
    0.04080749303102493,
    0.01181021612137556,
    0.0016840493772178888,
    -0.010693124495446682,
    0.020646007731556892,
    -0.0048351227305829525,
    0.003946832846850157,
    0.03884248808026314,
    -0.024145331233739853,
    0.003536335425451398,
    0.018842510879039764,
    0.01562582515180111,
    -0.04277249798178673,
    0.003536335425451398,
    -0.011265129782259464,
    -0.0292328093200922,
    -0.01713322475552559,
    -0.00759756937623024,
    0.014899042434990406,
    -0.0021887593902647495,
    0.030013427138328552,
    0.031790006905794144,
    0.0030635902658104897,
    0.015450858511030674,
    0.028263766318559647,
    -0.014899042434990406,
    -0.007624487392604351,
    0.010592183098196983,
    -0.030767127871513367,
    -0.010646018199622631,
    -0.008606989867985249,
    -0.018236858770251274,
    -0.01697171851992607,
    0.0324629545211792,
    0.007180342450737953,
    0.03588152304291725,
    -0.04320318624377251,
    -0.001703396555967629,
    -0.01752353459596634,
    -0.006621796637773514,
    0.009226100519299507,
    -0.017886925488710403,
    -0.013371452689170837,
    -0.0003614986198954284,
    -0.0038694441318511963,
    0.03469713777303696,
    -0.0047510042786598206,
    0.04148044064640999,
    -0.007234178017824888,
    -0.03130548447370529,
    -0.022543717175722122,
    0.039300091564655304,
    -0.019878849387168884,
    -0.023432007059454918,
    -0.03784652799367905,
    -0.016177641227841377,
    0.024118414148688316,
    0.01397037599235773,
    0.027563901618123055,
    0.006392994429916143,
    -0.026796741411089897,
    0.060726720839738846,
    0.013008061796426773,
    -0.047294702380895615,
    -0.009360689669847488,
    -0.00334118097089231,
    0.01044413447380066,
    0.012765800580382347,
    -0.012516810558736324,
    0.019703881815075874,
    0.008930004201829433,
    0.029475070536136627,
    0.00610699225217104,
    -0.009999989531934261,
    -0.0007541209924966097,
    -0.0292328093200922,
    -0.01773887686431408,
    -0.01593538001179695,
    -0.007954231463372707,
    0.0071130478754639626,
    0.0009244606480933726,
    0.015518153086304665,
    0.04834449663758278,
    -0.010181684978306293,
    -0.015531612560153008,
    0.012314926832914352,
    -0.015100926160812378,
    0.028371436521410942,
    -0.01816956326365471,
    -0.012139960192143917,
    -0.0038324319757521152,
    0.014952877536416054,
    -0.018290694802999496,
    -0.016594868153333664,
    -0.02952890656888485,
    0.029798084869980812,
    0.02401074208319187,
    -0.009959612973034382,
    0.012752342037856579,
    -0.0025757038965821266,
    0.036285292357206345,
    -0.014212636277079582,
    0.004232835490256548,
    -0.013310887850821018,
    -0.005491246003657579,
    0.01697171851992607,
    0.010652747936546803,
    0.020040355622768402,
    -0.007927313446998596,
    0.018761757761240005,
    -0.01619110070168972,
    0.04169578477740288,
    -0.03130548447370529,
    -0.02029607631266117,
    -0.0165275726467371,
    0.01695825904607773,
    0.015545071102678776,
    -0.028290683403611183,
    -0.022301457822322845,
    0.0011440095258876681,
    -0.0022425951901823282,
    0.025962287560105324,
    -0.011164187453687191,
    0.006944810971617699,
    -0.02399728260934353,
    0.036204539239406586,
    0.019501999020576477,
    -0.0046601565554738045,
    -0.03254370763897896,
    0.004256388638168573,
    0.032059185206890106,
    0.01006055437028408,
    0.020228780806064606,
    0.023862693458795547,
    -0.014912500977516174,
    0.0032772510312497616,
    0.008055172860622406,
    -0.014226095750927925,
    0.009764458052814007,
    0.009986530989408493,
    0.02598920464515686,
    0.03426644951105118,
    -0.01597575657069683,
    -0.02292056754231453,
    -0.5775498747825623,
    -0.007550463080406189,
    0.0018001326825469732,
    -0.036715976893901825,
    0.0007583269034512341,
    0.00021681505313608795,
    -0.009266477078199387,
    -0.011453554965555668,
    0.0060329679399728775,
    0.015477776527404785,
    -0.0110968928784132,
    0.011016138829290867,
    0.02465677075088024,
    0.0016975082689896226,
    0.00470389798283577,
    -0.01951545663177967,
    0.03386268392205238,
    -0.0211170706897974,
    -0.01921936124563217,
    0.01236876193434,
    -0.0008256215951405466,
    0.032355282455682755,
    -0.0292328093200922,
    0.004014127887785435,
    -0.012462974525988102,
    -0.00264468090608716,
    0.021359331905841827,
    0.003177991369739175,
    0.018236858770251274,
    -0.005592187866568565,
    -0.04320318624377251,
    0.02016148529946804,
    -0.005292726680636406,
    -0.017900384962558746,
    0.0481022372841835,
    0.019488539546728134,
    -0.02253025956451893,
    0.0676715299487114,
    0.019717341288924217,
    0.03625837340950966,
    -0.006833774968981743,
    -0.01120456401258707,
    -0.004081422463059425,
    0.04010763019323349,
    0.021991901099681854,
    -0.011440095491707325,
    -0.019098229706287384,
    0.017254356294870377,
    0.02348584309220314,
    0.0016798434080556035,
    0.006177651695907116,
    -0.013115732930600643,
    0.016029592603445053,
    -0.01172273326665163,
    0.030201852321624756,
    -0.0065881493501365185,
    0.030767127871513367,
    0.006594878621399403,
    -0.00699191726744175,
    -0.0022880190517753363,
    0.006113721523433924,
    0.019757717847824097,
    0.030982470139861107,
    -0.012234172783792019,
    -0.007725429255515337,
    0.031924597918987274,
    0.0077859945595264435,
    -0.010100931860506535,
    -0.018573332577943802,
    -0.0369582399725914,
    0.003132567275315523,
    0.013573337346315384,
    0.006234852131456137,
    -0.02115744724869728,
    0.0174024049192667,
    0.01222071424126625,
    -0.0018623803043738008,
    0.024064578115940094,
    -0.010302815586328506,
    0.02866753377020359,
    0.008795415051281452,
    0.019609669223427773,
    -0.015060549601912498,
    -0.009999989531934261,
    -0.0020289346575737,
    -0.004118434619158506,
    -0.013183027505874634,
    -0.0024495264515280724,
    0.021076694130897522,
    0.015464317984879017,
    0.018102269619703293,
    0.026715988293290138,
    0.004259753040969372,
    -0.025222046300768852,
    0.005023547913879156,
    0.03418569639325142,
    0.0036473716609179974,
    0.0011675626737996936,
    -0.027617737650871277,
    -0.02694479003548622,
    -0.0014451532624661922,
    -0.011170917190611362,
    0.0008916545193642378,
    0.009831752628087997,
    0.009946153499186039,
    -0.011103622615337372,
    -0.02504708059132099,
    0.012685047462582588,
    0.008445482701063156,
    -0.023714644834399223,
    -0.003973750863224268,
    -0.042153388261795044,
    -0.025060538202524185,
    -0.010296085849404335,
    -0.015397022478282452,
    -0.033781930804252625,
    0.023472383618354797,
    -0.00927993655204773,
    0.0077321589924395084,
    -0.02176309935748577,
    -0.010659477673470974,
    0.031197814270853996,
    -0.007133236154913902,
    0.006581419613212347,
    0.01094211544841528,
    0.007153424434363842,
    0.005713318474590778,
    -0.009320313110947609,
    -0.0032419213093817234,
    -0.024199167266488075,
    0.008398376405239105,
    0.0062281228601932526,
    0.006776574533432722,
    -0.019663505256175995,
    0.029475070536136627,
    -0.003802149323746562,
    0.006056521087884903,
    0.006403089035302401,
    -0.008909815922379494,
    0.014750993810594082,
    0.0020659465808421373,
    0.009441443718969822,
    -0.0076648639515042305,
    -0.013674278743565083,
    -0.016069969162344933,
    -0.018021514639258385,
    -0.022422587499022484,
    -0.007826371118426323,
    -0.01222071424126625,
    -0.0007789359078742564,
    -0.01761774718761444,
    0.0015351598849520087,
    -0.0232705008238554,
    0.005228796508163214,
    -0.007846559397876263,
    -0.007711970247328281,
    -0.011964994482696056,
    -0.02469714730978012,
    -0.034643299877643585,
    -0.013142650946974754,
    0.028344519436359406,
    0.018411824479699135,
    -0.005982497241348028,
    0.021386248990893364,
    -0.033647339791059494,
    0.0007515974575653672,
    -0.03518166020512581,
    0.035639263689517975,
    -0.006554502062499523,
    -0.01279944833368063,
    -0.027442770078778267,
    -0.02145354449748993,
    -0.010565265081822872,
    0.006315605714917183,
    0.0021281943190842867,
    0.015908462926745415,
    -0.03138623759150505,
    0.03176308795809746,
    -0.010497970506548882,
    -0.010928655974566936,
    -0.0039030914194881916,
    0.008418564684689045,
    -0.043149348348379135,
    -0.00680012721568346,
    0.038869407027959824,
    0.029986510053277016,
    0.021897688508033752,
    0.013849245384335518,
    0.010215332731604576,
    0.012718694284558296,
    -0.0077321589924395084,
    0.02530279941856861,
    -0.015531612560153008,
    0.002340172417461872,
    -0.013203216716647148,
    0.016473738476634026,
    0.013755032792687416,
    0.0036271833814680576,
    -0.009966341778635979,
    0.024939408525824547,
    0.014629863202571869,
    -0.0017412498127669096,
    -0.0005572840454988182,
    -0.015020173043012619,
    0.030982470139861107,
    0.0027927292976528406,
    0.029071301221847534,
    -0.032274529337882996,
    -0.0030299429781734943,
    0.01472407579421997,
    0.03146699070930481,
    -0.029475070536136627,
    -0.019838470965623856,
    -0.001897710026241839,
    0.013230133801698685,
    0.024253003299236298,
    0.00923955999314785,
    0.01508746761828661,
    -0.0014998301630839705,
    0.001345052383840084,
    0.02788691595196724,
    0.012893660925328732,
    0.004411166068166494,
    0.0036944779567420483,
    0.011769839562475681,
    0.011951535008847713,
    0.0008096391102299094,
    0.030040346086025238,
    0.006874151527881622,
    -0.011823675595223904,
    0.007590840104967356,
    0.03682364895939827,
    0.028479108586907387,
    -0.024764442816376686,
    0.027039002627134323,
    0.010847902856767178,
    0.007395685184746981,
    -0.012092853896319866,
    0.030148016288876534,
    -0.046083398163318634,
    0.02676982432603836,
    -0.015127844177186489,
    0.0479138121008873,
    -0.003129202639684081,
    0.0346163846552372,
    -0.01640644297003746,
    -0.0022762424778193235,
    0.014441438019275665,
    -0.009986530989408493,
    -0.005208608228713274,
    -0.024024201557040215,
    0.013620443642139435,
    -0.004737545270472765,
    0.018290694802999496,
    0.017213979735970497,
    -0.016164181753993034,
    -0.0040511395782232285,
    0.029125137254595757,
    0.025531601160764694,
    -0.0048721348866820335,
    -0.014670240692794323,
    -0.008606989867985249,
    0.017631206661462784,
    0.024925949051976204,
    0.02845219150185585,
    0.0022812895476818085,
    -0.011244941502809525,
    -0.027173591777682304,
    0.013822327367961407,
    -0.014858664944767952,
    -0.019178984686732292,
    -0.028694450855255127,
    -0.028829041868448257,
    -0.022570636123418808,
    0.015383563935756683,
    -0.023122452199459076,
    -0.007368767634034157,
    0.03488556295633316,
    0.010282627306878567,
    0.0045592146925628185,
    -0.03281288594007492,
    -0.005259079392999411,
    0.010518158785998821,
    -0.005104301497340202,
    0.02753698267042637,
    -0.024629853665828705,
    -0.02090172842144966,
    -0.0021012763027101755,
    -0.008418564684689045,
    0.016742916777729988,
    0.013115732930600643,
    0.007590840104967356,
    0.011460283771157265,
    -0.005770518910139799,
    -0.027994586154818535,
    -0.010410486720502377,
    0.018183022737503052,
    -0.0187752153724432,
    -0.009044405072927475,
    -0.009650057181715965,
    0.006103627383708954,
    0.034347206354141235,
    -0.0003991415724158287,
    0.01275907177478075,
    0.03808878734707832,
    -0.017456240952014923,
    -0.0008681013714522123,
    -0.014427979476749897,
    -0.029501987621188164,
    -0.05970384180545807,
    0.029340481385588646,
    0.01693134196102619,
    -0.013593525625765324,
    0.018425283953547478,
    0.001983510795980692,
    -0.0067631155252456665,
    -0.0005421427777037024,
    -0.0005261602927930653,
    0.04549120366573334,
    0.010720042511820793,
    -0.020484501495957375,
    -0.012375491671264172,
    -0.023728104308247566,
    -0.00807536207139492,
    0.0033361336681991816,
    0.01895018108189106,
    0.012611023150384426,
    -0.0006464495090767741,
    -0.03612378612160683,
    -0.003443805268034339,
    -0.009004028514027596,
    0.011480472050607204,
    -0.00816284492611885,
    -0.007624487392604351,
    -0.016298770904541016,
    0.026433350518345833,
    0.02123820036649704,
    -0.0011465330608189106,
    0.032274529337882996,
    0.021641969680786133,
    0.003943468444049358,
    0.0070390235632658005,
    -0.005864731501787901,
    -0.004845216870307922,
    -0.0027590817771852016,
    0.001860697870142758,
    0.03082096390426159,
    0.015814250335097313,
    0.0508478619158268,
    0.02149392105638981,
    0.040511395782232285,
    0.007045752834528685,
    0.004451543092727661,
    -0.021830394864082336,
    -0.00822340976446867,
    0.030713291838765144,
    0.0187752153724432,
    0.04274557903409004,
    -0.010713312774896622,
    0.019878849387168884,
    0.0073351203463971615,
    0.03154774755239487,
    -0.0067429267801344395,
    0.01757737062871456,
    0.028425272554159164,
    0.01111708115786314,
    -0.0017917208606377244,
    -0.010659477673470974,
    -0.018236858770251274,
    -0.02141316793859005,
    -0.002518503461033106,
    -0.012254361063241959,
    -0.021359331905841827,
    -0.022718684747815132,
    0.006362712010741234,
    0.01358006615191698,
    -0.012772530317306519,
    -0.008149385452270508,
    0.019057853147387505,
    -0.01338491216301918,
    -0.002959283534437418,
    -0.0014073000056669116,
    -0.01934049092233181,
    -0.018532954156398773,
    -0.01709284819662571,
    -0.016258394345641136,
    0.0016016133595257998,
    -0.019757717847824097,
    -0.011662168428301811,
    0.013304158113896847,
    -0.011870781891047955,
    0.023068616166710854,
    -0.048452168703079224,
    0.027012085542082787,
    0.017429322004318237,
    -0.015356645919382572,
    -0.004091516602784395,
    -0.025477765128016472,
    0.015787331387400627,
    0.01916552521288395,
    0.02248988300561905,
    0.000625419954303652,
    0.010895009152591228,
    -0.007187071722000837,
    0.01752353459596634,
    -0.047160111367702484,
    0.005605646874755621,
    -0.04678326100111008,
    -0.008257057517766953,
    -0.013694467023015022,
    0.006911163683980703,
    0.0036843838170170784,
    0.0019279925618320704,
    0.05275902897119522,
    0.006477112881839275,
    0.0015174950240179896,
    0.016783293336629868,
    -0.01469715777784586,
    0.006749656517058611,
    0.004293400794267654,
    0.009219370782375336,
    0.005242255516350269,
    -0.0005635929410345852,
    -0.01055180560797453,
    -0.001435900223441422,
    -0.029421234503388405,
    -0.010605641640722752,
    -0.01523551531136036,
    -0.0006809380720369518,
    -0.0021231472492218018,
    -0.006544407457113266,
    0.012651399709284306,
    -0.005380209535360336,
    -0.012160148471593857,
    0.027644654735922813,
    -0.01042394619435072,
    -0.018075350672006607,
    -0.0017530263867229223,
    -0.01998651959002018,
    -0.003482499625533819,
    -0.019744258373975754,
    0.01172273326665163,
    -0.010713312774896622,
    0.009858670644462109,
    0.026689069345593452,
    -0.041211262345314026,
    0.04624490439891815,
    0.03668905794620514,
    0.005605646874755621,
    0.04861367866396904,
    0.0026379514019936323,
    -0.0012045748298987746,
    0.006658808793872595,
    0.015047090128064156,
    0.009643327444791794,
    -0.0013332758098840714,
    -0.018882887437939644,
    -0.028990548104047775,
    -0.0022005359642207623,
    -0.005050465930253267,
    -0.002471397165209055,
    0.002881894586607814,
    -0.008068632334470749,
    0.01654103212058544,
    -0.0016941436333581805,
    -0.017752336338162422,
    -0.012920578941702843,
    -0.002382231643423438,
    0.010652747936546803,
    -0.02236875146627426,
    -0.015208597294986248,
    0.0075100865215063095,
    0.0016916199820116162,
    0.02888287603855133,
    -0.006500666029751301,
    0.007294743321835995,
    -0.0025555153843015432,
    -0.014522192068397999,
    -0.009401067160069942,
    0.01816956326365471,
    0.00380887882784009,
    -0.011736191809177399,
    -0.0012180337216705084,
    0.012624481692910194,
    0.0441991463303566,
    -0.009737540036439896,
    0.005174960941076279,
    0.020349910482764244,
    0.002385596511885524,
    -0.010168226435780525,
    -0.016850588843226433,
    -0.010114390403032303,
    -0.02620454877614975,
    0.006234852131456137,
    -0.018761757761240005,
    0.015127844177186489,
    0.004532296676188707,
    -0.026366055011749268,
    0.01122475229203701,
    -0.0004832599370274693,
    -0.020134568214416504,
    -0.0151547621935606,
    -0.014979795552790165,
    -0.03432028740644455,
    -0.005504705011844635,
    0.00802825577557087,
    0.013835785910487175,
    0.024979785084724426,
    -0.028829041868448257,
    -0.018936723470687866,
    0.037146665155887604,
    0.010269167833030224,
    0.001983510795980692,
    0.02577386237680912,
    0.018977100029587746,
    -0.0071130478754639626,
    0.031117059290409088,
    -0.0034353933297097683,
    0.028263766318559647,
    0.004700533580034971,
    0.011244941502809525,
    -0.022166866809129715,
    -0.012072665616869926,
    0.003973750863224268,
    -0.009071323089301586,
    0.020390288904309273,
    0.025006704032421112,
    0.00809555035084486,
    -0.0026581399142742157,
    0.02387615293264389,
    0.02292056754231453,
    -0.03316281735897064,
    0.021170906722545624,
    -0.03504706919193268,
    -0.028048422187566757,
    -0.03948851674795151,
    -0.004118434619158506,
    -0.03415878117084503,
    0.006897704675793648,
    0.011493931524455547,
    0.017039012163877487,
    0.03152082860469818,
    0.005508069414645433,
    -0.009872129186987877,
    0.0028903065249323845,
    -0.017981138080358505,
    0.048156071454286575,
    0.021076694130897522,
    0.0188694279640913,
    0.01165543869137764,
    -0.010504699312150478,
    -0.003127520205453038,
    -0.018465660512447357,
    -0.004915876314043999,
    -0.016419902443885803,
    0.013929998502135277,
    0.007193801458925009,
    -0.0008967015892267227,
    -0.017752336338162422,
    0.02123820036649704,
    -0.02794075198471546,
    -0.02567964978516102,
    -0.009313583374023438,
    0.0076648639515042305,
    0.021991901099681854,
    0.01851949654519558,
    -0.033566586673259735,
    -0.00206762901507318,
    -0.013519501313567162,
    0.019313573837280273,
    -0.012160148471593857,
    -0.007839830592274666,
    0.02047104202210903,
    -0.02318974770605564,
    -0.017294732853770256,
    0.029771165922284126,
    0.026958249509334564,
    0.00822340976446867,
    0.013795409351587296,
    -0.002560562686994672,
    -1.014677582134027e-05,
    -0.021224742755293846,
    -0.0013214992359280586,
    0.010100931860506535,
    0.0244414284825325,
    0.020444123074412346,
    0.0054811518639326096,
    -0.006127180531620979,
    0.03340508043766022,
    -0.01523551531136036,
    -0.01830415241420269,
    0.0009210959542542696,
    0.01469715777784586,
    0.033001311123371124,
    -0.027617737650871277,
    -0.0210228580981493,
    -0.03216685727238655,
    0.012940767221152782,
    0.0013425288489088416,
    -0.011433365754783154,
    -0.014145341701805592,
    -0.02966349571943283,
    -0.02567964978516102,
    -0.021938065066933632,
    -0.004471731372177601,
    -0.02127857878804207,
    0.004720721859484911,
    -0.0049562533386051655,
    -0.0038694441318511963,
    0.006362712010741234,
    0.005575364455580711,
    0.019488539546728134,
    0.02162851020693779,
    -0.022220702841877937,
    -0.015343187376856804,
    -0.004905782174319029,
    -0.02313591167330742,
    0.005360021255910397,
    0.0008003861294128001,
    -0.007187071722000837,
    -0.0183849073946476,
    0.016258394345641136,
    -0.005255714524537325,
    -0.0018792039481922984,
    -0.011251670308411121,
    -0.010343192145228386,
    -0.019030936062335968,
    0.007792723830789328,
    -0.009596221148967743,
    0.009138617664575577,
    0.010181684978306293,
    0.013055168092250824,
    -0.040780577808618546,
    -0.020040355622768402,
    -0.002649727975949645,
    -0.0030736844055354595,
    0.005989226512610912,
    -0.008512777276337147,
    0.023283960297703743,
    0.024535641074180603,
    0.0324629545211792,
    -0.017671583220362663,
    -0.007779264822602272,
    0.01757737062871456,
    -0.015948839485645294,
    0.012705235742032528,
    -0.015612365677952766,
    -0.03135932236909866,
    -0.011890970170497894,
    0.017752336338162422,
    0.0013357993448153138,
    0.01113726943731308,
    -0.03415878117084503,
    -0.0033226748928427696,
    0.018977100029587746,
    -0.012160148471593857,
    -0.016594868153333664,
    0.024750983342528343,
    0.007806182838976383,
    0.0009076370042748749,
    -0.019071312621235847,
    0.028613697737455368,
    -0.01284655462950468,
    -0.02516821026802063,
    0.010343192145228386,
    0.02728126384317875,
    0.03561234474182129,
    0.00925974827259779,
    -0.00232671364210546,
    -0.005245620384812355,
    -0.018102269619703293,
    -0.00802825577557087,
    -0.026406433433294296,
    -0.02301478013396263,
    0.013075356371700764,
    0.032920558005571365,
    0.012012100778520107,
    -0.002686740132048726,
    0.014872124418616295,
    -0.030578702688217163,
    -0.013526231050491333,
    -0.019192442297935486,
    -0.03811570629477501,
    0.029286645352840424,
    0.0020003344397991896,
    0.0035632532089948654,
    0.014145341701805592,
    -6.79518552715308e-06,
    0.007476438768208027,
    0.025195129215717316,
    -0.01605651155114174,
    0.005097572226077318,
    0.003051813691854477,
    0.0015343186678364873,
    0.004549120552837849,
    -0.034078024327754974,
    -0.04026913642883301,
    -0.005137948784977198,
    0.03176308795809746,
    0.013808868825435638,
    -0.003129202639684081,
    0.015639282763004303,
    0.0037651374004781246,
    -0.0083108926191926,
    0.0016041368944570422,
    -0.015868086367845535,
    -0.018357988446950912,
    -0.0010447498643770814,
    0.009508738294243813,
    -0.03082096390426159,
    -0.01648719608783722,
    -0.011379530653357506,
    -0.00021460694551933557,
    0.0003697001375257969,
    -0.015168220736086369,
    -0.006645349785685539,
    -0.016689080744981766,
    0.011440095491707325,
    -0.00932704284787178,
    -0.018425283953547478,
    0.0040881517343223095,
    -0.0038997267838567495,
    0.02339163050055504,
    0.01631223037838936,
    0.013876163400709629,
    0.05009416118264198,
    0.0007272031507454813,
    0.003048449056223035,
    -0.009380878880620003,
    -0.0024865383747965097,
    0.00699191726744175,
    -0.009273206815123558,
    0.016675621271133423,
    -0.022853273898363113,
    -0.009138617664575577,
    -0.024279920384287834,
    0.03997303918004036,
    -0.01934049092233181,
    0.02888287603855133,
    -0.022395670413970947,
    0.010915197432041168,
    -0.00990577694028616,
    0.01640644297003746,
    -0.00019599575898610055,
    -0.018196482211351395,
    -0.003048449056223035,
    -0.007476438768208027,
    0.0010228791506960988,
    -0.004959617741405964,
    -0.0033327690325677395,
    0.010948844254016876,
    -0.01154776755720377,
    -0.010740230791270733,
    -0.004293400794267654,
    -0.021170906722545624,
    -0.03440104052424431,
    0.0071601541712880135,
    -0.0009993260027840734,
    -0.003482499625533819,
    0.02231491543352604,
    0.18433359265327454,
    0.02033645287156105,
    0.021426625549793243,
    0.01826377585530281,
    0.010592183098196983,
    0.007873477414250374,
    -0.01752353459596634,
    0.0034623113460838795,
    -0.01865408569574356,
    0.039434682577848434,
    -0.010733501054346561,
    -0.02728126384317875,
    0.02417224831879139,
    -0.0025504683144390583,
    0.02387615293264389,
    -0.013102274388074875,
    -0.004851946607232094,
    -0.05321663245558739,
    -0.00882906187325716,
    -0.005238890647888184,
    0.010625829920172691,
    -0.008384916931390762,
    -0.011500661261379719,
    -0.041292015463113785,
    0.018977100029587746,
    -0.01912514865398407,
    -2.998359150296892e-06,
    3.1386658520204946e-05,
    0.024899031966924667,
    0.014374143444001675,
    -0.020444123074412346,
    0.018506037071347237,
    0.013714656233787537,
    -0.0017395674949511886,
    -0.05076710507273674,
    -0.01986538991332054,
    0.008452211506664753,
    -0.028425272554159164,
    -0.016864046454429626,
    0.021695805713534355,
    -0.0001176605437649414,
    -0.0492866225540638,
    0.020013438537716866,
    -0.018963640555739403,
    -0.018492577597498894,
    -0.019582752138376236,
    -0.010652747936546803,
    0.02205919660627842,
    0.00945490226149559,
    0.017469698563218117,
    -0.028613697737455368,
    -0.01275907177478075,
    0.018667545169591904,
    -0.005003359634429216,
    0.005706588737666607,
    -0.0067227385006845,
    0.013876163400709629,
    0.004108340013772249,
    0.006860692519694567,
    0.006810221821069717,
    -0.023499302566051483,
    0.04317626729607582,
    0.000672526191920042,
    0.024104954674839973,
    -0.033431995660066605,
    0.008613718673586845,
    -0.025827698409557343,
    -0.025275882333517075,
    0.012086124159395695,
    -0.001593201537616551,
    -0.01045086421072483,
    0.002695151837542653,
    -0.001904439413920045,
    -0.011890970170497894,
    -0.012597564607858658,
    -0.04648716375231743,
    0.02417224831879139,
    0.010706583969295025,
    0.036850567907094955,
    0.030363360419869423,
    -0.0013652407797053456,
    0.005464327987283468,
    0.005942120216786861,
    0.005969038233160973,
    -0.02794075198471546,
    -0.026958249509334564,
    0.03940776363015175,
    -0.016783293336629868,
    -0.013183027505874634,
    -0.008707931265234947,
    -0.00034509552642703056,
    -0.01161506213247776,
    0.013667549937963486,
    -0.008129197172820568,
    -0.018640626221895218,
    -0.012072665616869926,
    0.022113032639026642,
    0.02749660611152649,
    -0.007860018871724606,
    -0.003011436900123954,
    -0.03924625739455223,
    0.07655442506074905,
    0.026662152260541916,
    -0.0029004006646573544,
    -0.026702528819441795,
    0.026487186551094055,
    -0.0028936711605638266,
    0.024670230224728584,
    0.005003359634429216,
    -0.010195144452154636,
    -0.0013509406708180904,
    -0.013660820201039314,
    -0.01636606641113758,
    -0.010888279415667057,
    0.02405111864209175,
    -0.01951545663177967,
    0.004666886292397976,
    -0.020928645506501198,
    -0.002064264379441738,
    0.017604287713766098,
    -0.0016184370033442974,
    -0.016864046454429626,
    -0.0005513957585208118,
    0.005114395637065172,
    -0.0019986520055681467,
    -0.031924597918987274,
    -0.055504653602838516,
    0.033351242542266846,
    -0.00932704284787178,
    -0.004407801665365696,
    0.013283969834446907,
    -0.014683699235320091,
    0.015356645919382572,
    0.013216675259172916,
    -0.011790027841925621,
    0.014522192068397999,
    4.229575642966665e-05,
    0.002372137503698468,
    0.01670254021883011,
    -0.0027742232196033,
    -0.022557176649570465,
    -0.014750993810594082,
    0.025625813752412796,
    0.0033798753283917904,
    -0.0077859945595264435,
    -0.005413856822997332,
    0.018398365005850792,
    -0.01530280988663435,
    -0.005733506754040718,
    -0.013559877872467041,
    -0.006396359298378229,
    -0.003388287266716361,
    0.012738882564008236,
    -0.030148016288876534,
    -0.004828393459320068,
    -0.028613697737455368,
    -0.0006645349785685539,
    -0.022113032639026642,
    -0.008021526038646698,
    -0.0034522172063589096,
    -0.015356645919382572,
    0.018034974113106728,
    0.010376839898526669,
    0.013849245384335518,
    -0.02045758254826069,
    -0.04632565751671791,
    -0.16613709926605225,
    0.013916539959609509,
    -0.005383574403822422,
    -0.057873424142599106,
    0.008196491748094559,
    0.0048351227305829525,
    0.008337810635566711,
    -0.036150701344013214,
    -0.017388945445418358,
    -0.025222046300768852,
    0.030013427138328552,
    0.006557866465300322,
    -0.013028250075876713,
    -0.03154774755239487,
    -0.0017866737907752395,
    -0.0054071275517344475,
    -0.013546419329941273,
    -0.010948844254016876,
    0.0316823348402977,
    0.03197843208909035,
    0.027994586154818535,
    -0.03722741827368736,
    0.016904423013329506,
    0.030847880989313126,
    0.003980480134487152,
    -0.01726781576871872,
    -0.014939418993890285,
    0.011392989195883274,
    -0.006419912446290255,
    -0.009555844590067863,
    -0.013674278743565083,
    0.004182364325970411,
    0.0198519304394722,
    -0.008324352093040943,
    0.030417194589972496,
    0.025921911001205444,
    0.02426646091043949,
    -0.01588154397904873,
    -0.024683687835931778,
    0.027994586154818535,
    0.004165540914982557,
    0.00981829408556223,
    0.02974424883723259,
    -0.033216655254364014,
    0.002743940567597747,
    0.0070390235632658005,
    0.026514103636145592,
    -0.02512783370912075,
    -0.007792723830789328,
    -0.025073997676372528,
    0.052382178604602814,
    -0.012530269101262093,
    0.00045171554666012526,
    -0.0020154756493866444,
    0.016944799572229385,
    0.022691765800118446,
    0.0027187049854546785,
    0.02305515669286251,
    0.015787331387400627,
    -0.031574662774801254,
    0.009589492343366146,
    -0.01170254498720169,
    0.004290035925805569,
    -0.011958264745771885,
    -0.008088820613920689,
    -0.006278593558818102,
    -0.026783281937241554,
    0.0093876076862216,
    0.009683704935014248,
    0.019623128697276115,
    0.003876173635944724,
    0.021399708464741707,
    -0.004862040746957064,
    0.000526580901350826,
    0.0013576701749116182,
    0.004784651566296816,
    -0.03631221130490303,
    0.02253025956451893,
    0.011924616992473602,
    -0.011776569299399853,
    -0.00431695394217968,
    0.04347236454486847,
    -0.018236858770251274,
    0.0014687064103782177,
    0.020053815096616745,
    -0.007321661338210106,
    -0.008398376405239105,
    -0.019004017114639282,
    -0.0174024049192667,
    0.02323012426495552,
    0.013243593275547028,
    -0.015289351344108582,
    -0.0065208543092012405,
    0.0246433112770319,
    0.0014224413316696882,
    0.009253018535673618,
    0.0005661164759658277,
    0.020820973441004753,
    -0.021440085023641586,
    -0.04069982096552849,
    0.021897688508033752,
    0.03981153294444084,
    -0.030067263171076775,
    0.017725419253110886,
    0.02244950458407402,
    0.02174963988363743,
    -0.015289351344108582,
    -0.005723412614315748,
    0.010457593016326427,
    0.016554491594433784,
    -0.01342528872191906,
    0.01601613312959671,
    0.028829041868448257,
    -0.0075100865215063095,
    0.009777916595339775,
    0.030847880989313126,
    0.017819631844758987,
    -0.016823669895529747,
    0.00016623889678157866,
    -0.020834432914853096,
    0.02767157182097435,
    -0.013041708618402481,
    -0.0064670187421143055,
    0.01588154397904873,
    0.005686400458216667,
    -0.026864036917686462,
    -0.10627175867557526,
    -0.02362043224275112,
    -0.0023670904338359833,
    -0.008250327780842781,
    -0.0198519304394722,
    -0.019273197278380394,
    0.0011827039998024702,
    0.048075318336486816,
    -0.034912481904029846,
    -0.003442122833803296,
    -0.018963640555739403,
    -0.003704572096467018,
    -0.01448181550949812,
    0.004020857159048319,
    -0.02150738053023815,
    -0.01679675281047821,
    -0.023418549448251724,
    0.03230144828557968,
    -0.007032294292002916,
    0.01695825904607773,
    -0.02399728260934353,
    0.0038627146277576685,
    0.008647366426885128,
    0.010255709290504456,
    -0.0006624319939874113,
    0.007402414921671152,
    -0.02374156378209591,
    0.008687742985785007,
    0.022732142359018326,
    0.02213994972407818,
    -0.005060560069978237,
    -0.035073988139629364,
    -0.010652747936546803,
    0.009266477078199387,
    -0.013660820201039314,
    -0.0006914528203196824,
    -0.013916539959609509,
    -0.033351242542266846,
    0.02874828688800335,
    -0.01169581525027752,
    -0.000281165586784482,
    0.01469715777784586,
    0.013048438355326653,
    -0.021292036399245262,
    0.0035901712253689766,
    0.016769833862781525,
    -0.016110345721244812,
    -0.0015385246369987726,
    0.029636576771736145,
    -0.0375504307448864,
    -0.0099259652197361,
    -0.01648719608783722,
    -0.01572003774344921,
    -0.02966349571943283,
    0.011332424357533455,
    -0.022785978391766548,
    -0.003660830669105053,
    -0.002922271378338337,
    -0.0007932360167615116,
    -0.0013669232139363885,
    0.0040881517343223095,
    -0.011534308083355427,
    0.009057863615453243,
    -0.0015688072890043259,
    -0.008283975534141064,
    0.013183027505874634,
    -0.011574684642255306,
    -0.010275897569954395,
    0.042072635143995285,
    -0.005521528422832489,
    -0.03633912652730942,
    -0.0033327690325677395,
    -0.02301478013396263,
    0.00012113042612327263,
    -0.0028785299509763718,
    -0.012745612300932407,
    -0.01593538001179695,
    0.0036877484526485205,
    0.002604304114356637,
    -0.013781950809061527,
    0.0060699800960719585,
    0.007005376275628805,
    -0.022503340616822243,
    -0.020255697891116142,
    0.03690440207719803,
    0.01912514865398407,
    0.0044212606735527515,
    0.02944815158843994,
    0.01178329810500145,
    -0.04885593801736832,
    0.004165540914982557,
    0.01722743734717369,
    0.014078047126531601,
    -0.019407786428928375,
    -0.01761774718761444,
    0.004757734015583992,
    -0.008230139501392841,
    0.011500661261379719,
    0.0022106303367763758,
    0.011958264745771885,
    -0.03994612395763397,
    -0.01981155388057232,
    -0.07477784901857376,
    0.028694450855255127,
    0.023257041350007057,
    -0.01181021612137556,
    0.015746954828500748,
    -0.008613718673586845,
    0.011601602658629417,
    -0.018411824479699135,
    -0.001563760102726519,
    -0.0012129866518080235,
    -0.015652742236852646,
    -0.019663505256175995,
    0.0003406793111935258,
    0.0018926628399640322,
    -0.01773887686431408,
    0.004862040746957064,
    0.02426646091043949,
    -0.010605641640722752,
    0.02966349571943283,
    -0.01156795583665371,
    0.005474422127008438,
    -0.0017134908121079206,
    0.038008034229278564,
    0.023822316899895668,
    -0.032139938324689865,
    -0.023216664791107178,
    -0.013257051818072796,
    0.02215340919792652,
    -0.01219379622489214,
    -0.011446825228631496,
    0.0009454902610741556,
    0.0003066113858949393,
    -0.004986535757780075,
    0.019367409870028496,
    0.036285292357206345,
    0.0176985003054142,
    0.02258409559726715,
    0.008903086185455322,
    0.025397012010216713,
    0.022436046972870827,
    -0.023593515157699585,
    -0.008640636689960957,
    0.03819645941257477,
    -0.027644654735922813,
    -0.008950192481279373,
    -0.002641316270455718,
    -0.00829070433974266,
    -0.00734857888892293,
    0.01654103212058544,
    -0.019098229706287384,
    0.021870771422982216,
    0.011211293749511242,
    -0.016002675518393517,
    -0.03655447065830231,
    -0.0026530928444117308,
    -0.027617737650871277,
    0.01675637625157833,
    0.0028869418893009424,
    0.013862703926861286,
    -0.007133236154913902,
    0.03860022872686386,
    -0.013324346393346786,
    0.009138617664575577,
    0.015289351344108582,
    0.003923279698938131,
    -0.021386248990893364,
    -0.03397035598754883,
    -0.03273213282227516,
    -0.011480472050607204,
    -0.02084789238870144,
    -0.015343187376856804,
    -0.0018438742263242602,
    0.018317611888051033,
    0.015585447661578655,
    0.02831760235130787,
    -0.0028835770208388567,
    -0.03738892450928688,
    -0.0026715986896306276,
    0.005319644697010517,
    0.032274529337882996,
    0.012826366350054741,
    -0.008580071851611137,
    0.008250327780842781,
    0.03830413147807121,
    0.05555848777294159,
    -0.01718706078827381,
    -0.035289328545331955,
    -0.013929998502135277,
    -0.009784646332263947,
    -0.0006868263590149581,
    -0.010888279415667057,
    -0.0036440070252865553,
    -0.03380884602665901,
    0.010847902856767178,
    0.020659467205405235,
    0.0012474751565605402,
    -0.0006964999483898282,
    -0.030040346086025238,
    0.018681002780795097,
    -0.01925973780453205,
    0.01938086748123169,
    -0.012456245720386505,
    0.016729457303881645,
    -0.04018838331103325,
    -0.026312220841646194,
    -0.014064588584005833,
    -0.00443471921607852,
    -0.019501999020576477,
    0.00021071646187920123,
    0.01609688811004162,
    0.012092853896319866,
    -0.019892306998372078,
    -0.025464307516813278,
    0.010201873257756233,
    -0.012738882564008236,
    -0.003849255619570613,
    0.010269167833030224,
    -0.007106318138539791,
    -0.004512108396738768,
    0.007812912575900555,
    0.0036978425923734903,
    0.010067284107208252,
    0.02939431555569172,
    0.01636606641113758,
    0.022974403575062752,
    0.04269174486398697,
    0.009353960864245892,
    -0.010888279415667057,
    -0.009676975198090076,
    -0.0022341834846884012,
    -0.016715997830033302,
    -0.017590830102562904,
    -0.038142625242471695,
    -0.010195144452154636,
    -0.01115745771676302,
    -0.017119767144322395,
    -0.003916550427675247,
    -0.033566586673259735,
    -0.026742905378341675,
    0.08963651210069656,
    0.01472407579421997,
    0.004444813821464777,
    -0.00035771328839473426,
    -0.014226095750927925,
    0.03604302927851677,
    0.03458946570754051,
    -0.0013408465310931206,
    0.028263766318559647,
    -0.008196491748094559,
    -0.004771193023771048,
    0.008613718673586845,
    -0.01855987310409546,
    -0.027779243886470795,
    -0.018936723470687866,
    0.018425283953547478,
    -0.020497959107160568,
    -0.005339832976460457,
    -0.009576032869517803,
    0.022772518917918205,
    0.0012811224441975355,
    0.0064131831750273705,
    0.014710617251694202,
    -0.0046601565554738045,
    -0.026689069345593452,
    0.009010757319629192,
    0.014858664944767952,
    0.023512762039899826,
    -0.01107670459896326,
    -0.019488539546728134,
    -4.9840124120237306e-05,
    -0.004862040746957064,
    -0.024401051923632622,
    -0.008384916931390762,
    -0.03711974620819092,
    0.005386939272284508,
    -0.023243581876158714,
    -0.03316281735897064,
    0.010329733602702618,
    -0.013667549937963486,
    -0.0091924536973238,
    0.009515468031167984,
    -0.0012979460880160332,
    -0.0303095243871212,
    0.019057853147387505,
    0.00503027718514204,
    0.011002680286765099,
    -0.01409150566905737,
    -0.019717341288924217
  ]
}
{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: database",
    "topic :: database :: front-ends",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "a library to filter sqlalchemy queries.\nsqlalchemy filters\n==================\n\n.. pull-quote::\n\n    filter, sort and paginate sqlalchemy query objects. ideal for\n    exposing these actions over a rest api.\n\n\n.. image:: https://img.shields.io/pypi/v/sqlalchemy-filters.svg\n    :target: https://pypi.org/project/sqlalchemy-filters/\n\n.. image:: https://img.shields.io/pypi/pyversions/sqlalchemy-filters.svg\n    :target: https://pypi.org/project/sqlalchemy-filters/\n\n.. image:: https://img.shields.io/pypi/format/sqlalchemy-filters.svg\n    :target: https://pypi.org/project/sqlalchemy-filters/\n\n.. image:: https://github.com/juliotrigo/sqlalchemy-filters/actions/workflows/tests.yml/badge.svg\n    :target: https://github.com/juliotrigo/sqlalchemy-filters/actions\n\n\nfiltering\n---------\n\nassuming that we have a sqlalchemy_ ``query`` object:\n\n.. code-block:: python\n\n    from sqlalchemy import column, integer, string\n    from sqlalchemy.ext.declarative import declarative_base\n\n\n    class base(object):\n        id = column(integer, primary_key=true)\n        name = column(string(50), nullable=false)\n        count = column(integer, nullable=true)\n\n        @hybrid_property\n        def count_square(self):\n            return self.count * self.count\n\n        @hybrid_method\n        def three_times_count(self):\n            return self.count * 3\n\n\n    base = declarative_base(cls=base)\n\n\n    class foo(base):\n\n        __tablename__ = 'foo'\n\n    # ...\n\n    query = session.query(foo)\n\nthen we can apply filters to that ``query`` object (multiple times):\n\n.. code-block:: python\n\n    from sqlalchemy_filters import apply_filters\n\n\n    # `query` should be a sqlalchemy query object\n\n    filter_spec = [{'field': 'name', 'op': '==', 'value': 'name_1'}]\n    filtered_query = apply_filters(query, filter_spec)\n\n    more_filters = [{'field': 'foo_id', 'op': 'is_not_null'}]\n    filtered_query = apply_filters(filtered_query, more_filters)\n\n    result = filtered_query.all()\n\nit is also possible to filter queries that contain multiple models,\nincluding joins:\n\n.. code-block:: python\n\n    class bar(base):\n\n        __tablename__ = 'bar'\n\n        foo_id = column(integer, foreignkey('foo.id'))\n\n\n.. code-block:: python\n\n    query = session.query(foo).join(bar)\n\n    filter_spec = [\n        {'model': 'foo', 'field': 'name', 'op': '==', 'value': 'name_1'},\n        {'model': 'bar', 'field': 'count', 'op': '>=', 'value': 5},\n    ]\n    filtered_query = apply_filters(query, filter_spec)\n\n    result = filtered_query.all()\n\n\n``apply_filters`` will attempt to automatically join models to ``query``\nif they're not already present and a model-specific filter is supplied.\nfor example, the value of ``filtered_query`` in the following two code\nblocks is identical:\n\n.. code-block:: python\n\n    query = session.query(foo).join(bar)  # join pre-applied to query\n\n    filter_spec = [\n        {'model': 'foo', 'field': 'name', 'op': '==', 'value': 'name_1'},\n        {'model': 'bar', 'field': 'count', 'op': '>=', 'value': 5},\n    ]\n    filtered_query = apply_filters(query, filter_spec)\n\n.. code-block:: python\n\n    query = session.query(foo)  # join to bar will be automatically applied\n\n    filter_spec = [\n        {field': 'name', 'op': '==', 'value': 'name_1'},\n        {'model': 'bar', 'field': 'count', 'op': '>=', 'value': 5},\n    ]\n    filtered_query = apply_filters(query, filter_spec)\n\nthe automatic join is only possible if sqlalchemy_ can implictly\ndetermine the condition for the join, for example because of a foreign\nkey relationship.\n\nautomatic joins allow flexibility for clients to filter and sort by related\nobjects without specifying all possible joins on the server beforehand. feature\ncan be explicitly disabled by passing ``do_auto_join=false`` argument to the\n``apply_filters`` call.\n\nnote that first filter of the second block does not specify a model.\nit is implictly applied to the ``foo`` model because that is the only\nmodel in the original query passed to ``apply_filters``.\n\nit is also possible to apply filters to queries defined by fields, functions or\n``select_from`` clause:\n\n.. code-block:: python\n\n    query_alt_1 = session.query(foo.id, foo.name)\n    query_alt_2 = session.query(func.count(foo.id))\n    query_alt_3 = session.query().select_from(foo).add_column(foo.id)\n\nhybrid attributes\n^^^^^^^^^^^^^^^^^\n\nyou can filter by a `hybrid attribute`_: a `hybrid property`_ or a `hybrid method`_.\n\n.. code-block:: python\n\n    query = session.query(foo)\n\n    filter_spec = [{'field': 'count_square', 'op': '>=', 'value': 25}]\n    filter_spec = [{'field': 'three_times_count', 'op': '>=', 'value': 15}]\n\n    filtered_query = apply_filters(query, filter_spec)\n    result = filtered_query.all()\n\n\nrestricted loads\n----------------\n\nyou can restrict the fields that sqlalchemy_ loads from the database by\nusing the ``apply_loads`` function:\n\n.. code-block:: python\n\n    query = session.query(foo, bar).join(bar)\n    load_spec = [\n        {'model': 'foo', 'fields': ['name']},\n        {'model': 'bar', 'fields': ['count']}\n    ]\n    query = apply_loads(query, load_spec)  # will load only foo.name and bar.count\n\n\nthe effect of the ``apply_loads`` function is to ``_defer_`` the load\nof any other fields to when/if they're accessed, rather than loading\nthem when the query is executed. it only applies to fields that would be\nloaded during normal query execution.\n\n\neffect on joined queries\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nthe default sqlalchemy_ join is lazy, meaning that columns from the\njoined table are loaded only when required. therefore ``apply_loads``\nhas limited effect in the following scenario:\n\n.. code-block:: python\n\n    query = session.query(foo).join(bar)\n    load_spec = [\n        {'model': 'foo', 'fields': ['name']}\n        {'model': 'bar', 'fields': ['count']}  # ignored\n    ]\n    query = apply_loads(query, load_spec)  # will load only foo.name\n\n\n``apply_loads`` cannot be applied to columns that are loaded as\n`joined eager loads <http://docs.sqlalchemy.org/en/latest/orm/loading_relationships.html#joined-eager-loading>`_.\nthis is because a joined eager load does not add the joined model to the\noriginal query, as explained\n`here <http://docs.sqlalchemy.org/en/latest/orm/loading_relationships.html#the-zen-of-joined-eager-loading>`_\n\nthe following would not prevent all columns from ``bar`` being eagerly\nloaded:\n\n.. code-block:: python\n\n    query = session.query(foo).options(joinedload(foo.bar))\n    load_spec = [\n        {'model': 'foo', 'fields': ['name']}\n        {'model': 'bar', 'fields': ['count']}\n    ]\n    query = apply_loads(query, load_spec)\n\n.. sidebar:: automatic join\n\n    in fact, what happens here is that ``bar`` is automatically joined\n    to ``query``, because it is determined that ``bar`` is not part of\n    the original query. the ``load_spec`` therefore has no effect\n    because the automatic join results in lazy evaluation.\n\nif you wish to perform a joined load with restricted columns, you must\nspecify the columns as part of the joined load, rather than with\n``apply_loads``:\n\n.. code-block:: python\n\n    query = session.query(foo).options(joinedload(bar).load_only('count'))\n    load_spec = [\n        {'model': 'foo', 'fields': ['name']}\n    ]\n    query = apply_loads(query. load_spec)  # will load ony foo.name and bar.count\n\n\nsort\n----\n\n.. code-block:: python\n\n    from sqlalchemy_filters import apply_sort\n\n\n    # `query` should be a sqlalchemy query object\n\n    sort_spec = [\n        {'model': 'foo', 'field': 'name', 'direction': 'asc'},\n        {'model': 'bar', 'field': 'id', 'direction': 'desc'},\n    ]\n    sorted_query = apply_sort(query, sort_spec)\n\n    result = sorted_query.all()\n\n\n``apply_sort`` will attempt to automatically join models to ``query`` if\nthey're not already present and a model-specific sort is supplied.\nthe behaviour is the same as in ``apply_filters``.\n\nthis allows flexibility for clients to sort by fields on related objects\nwithout specifying all possible joins on the server beforehand.\n\nhybrid attributes\n^^^^^^^^^^^^^^^^^\n\nyou can sort by a `hybrid attribute`_: a `hybrid property`_ or a `hybrid method`_.\n\n\npagination\n----------\n\n.. code-block:: python\n\n    from sqlalchemy_filters import apply_pagination\n\n\n    # `query` should be a sqlalchemy query object\n\n    query, pagination = apply_pagination(query, page_number=1, page_size=10)\n\n    page_size, page_number, num_pages, total_results = pagination\n\n    assert 10 == len(query)\n    assert 10 == page_size == pagination.page_size\n    assert 1 == page_number == pagination.page_number\n    assert 3 == num_pages == pagination.num_pages\n    assert 22 == total_results == pagination.total_results\n\nfilters format\n--------------\n\nfilters must be provided in a list and will be applied sequentially.\neach filter will be a dictionary element in that list, using the\nfollowing format:\n\n.. code-block:: python\n\n    filter_spec = [\n        {'model': 'model_name', 'field': 'field_name', 'op': '==', 'value': 'field_value'},\n        {'model': 'model_name', 'field': 'field_2_name', 'op': '!=', 'value': 'field_2_value'},\n        # ...\n    ]\n\nthe ``model`` key is optional if the original query being filtered only\napplies to one model.\n\nif there is only one filter, the containing list may be omitted:\n\n.. code-block:: python\n\n    filter_spec = {'field': 'field_name', 'op': '==', 'value': 'field_value'}\n\nwhere ``field`` is the name of the field that will be filtered using the\noperator provided in ``op`` (optional, defaults to ``==``) and the\nprovided ``value`` (optional, depending on the operator).\n\nthis is the list of operators that can be used:\n\n- ``is_null``\n- ``is_not_null``\n- ``==``, ``eq``\n- ``!=``, ``ne``\n- ``>``, ``gt``\n- ``<``, ``lt``\n- ``>=``, ``ge``\n- ``<=``, ``le``\n- ``like``\n- ``ilike``\n- ``not_ilike``\n- ``in``\n- ``not_in``\n- ``any``\n- ``not_any``\n\nany / not_any\n^^^^^^^^^^^^^\n\npostgresql specific operators allow to filter queries on columns of type ``array``.\nuse ``any`` to filter if a value is present in an array and ``not_any`` if it's not.\n\nboolean functions\n^^^^^^^^^^^^^^^^^\n``and``, ``or``, and ``not`` functions can be used and nested within the\nfilter specification:\n\n.. code-block:: python\n\n    filter_spec = [\n        {\n            'or': [\n                {\n                    'and': [\n                        {'field': 'field_name', 'op': '==', 'value': 'field_value'},\n                        {'field': 'field_2_name', 'op': '!=', 'value': 'field_2_value'},\n                    ]\n                },\n                {\n                    'not': [\n                        {'field': 'field_3_name', 'op': '==', 'value': 'field_3_value'}\n                    ]\n                },\n            ],\n        }\n    ]\n\n\nnote: ``or`` and ``and`` must reference a list of at least one element.\n``not`` must reference a list of exactly one element.\n\nsort format\n-----------\n\nsort elements must be provided as dictionaries in a list and will be\napplied sequentially:\n\n.. code-block:: python\n\n    sort_spec = [\n        {'model': 'foo', 'field': 'name', 'direction': 'asc'},\n        {'model': 'bar', 'field': 'id', 'direction': 'desc'},\n        # ...\n    ]\n\nwhere ``field`` is the name of the field that will be sorted using the\nprovided ``direction``.\n\nthe ``model`` key is optional if the original query being sorted only\napplies to one model.\n\nnullsfirst / nullslast\n^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    sort_spec = [\n        {'model': 'baz', 'field': 'count', 'direction': 'asc', 'nullsfirst': true},\n        {'model': 'qux', 'field': 'city', 'direction': 'desc', 'nullslast': true},\n        # ...\n    ]\n\n``nullsfirst`` is an optional attribute that will place ``null`` values first\nif set to ``true``, according to the `sqlalchemy documentation <https://docs.sqlalchemy.org/en/latest/core/sqlelement.html#sqlalchemy.sql.expression.nullsfirst>`__.\n\n``nullslast`` is an optional attribute that will place ``null`` values last\nif set to ``true``, according to the `sqlalchemy documentation <https://docs.sqlalchemy.org/en/latest/core/sqlelement.html#sqlalchemy.sql.expression.nullslast>`__.\n\nif none of them are provided, then ``null`` values will be sorted according\nto the rdbms being used. sql defines that ``null`` values should be placed\ntogether when sorting, but it does not specify whether they should be placed\nfirst or last.\n\neven though both ``nullsfirst`` and ``nullslast`` are part of sqlalchemy_,\nthey will raise an unexpected exception if the rdbms that is being used does\nnot support them.\n\nat the moment they are\n`supported by postgresql <https://www.postgresql.org/docs/current/queries-order.html>`_,\nbut they are **not** supported by sqlite and mysql.\n\n\n\nrunning tests\n-------------\n\nthe default configuration uses **sqlite**, **mysql** (if the driver is\ninstalled, which is the case when ``tox`` is used) and **postgresql**\n(if the driver is installed, which is the case when ``tox`` is used) to\nrun the tests, with the following uris:\n\n.. code-block:: shell\n\n    sqlite+pysqlite:///test_sqlalchemy_filters.db\n    mysql+mysqlconnector://root:@localhost:3306/test_sqlalchemy_filters\n    postgresql+psycopg2://postgres:@localhost:5432/test_sqlalchemy_filters?client_encoding=utf8'\n\na test database will be created, used during the tests and destroyed\nafterwards for each rdbms configured.\n\nthere are makefile targets to run docker containers locally for both\n**mysql** and **postgresql**, using the default ports and configuration:\n\n.. code-block:: shell\n\n    $ make mysql-container\n    $ make postgres-container\n\nto run the tests locally:\n\n.. code-block:: shell\n\n    $ # create/activate a virtual environment\n    $ pip install tox\n    $ tox\n\nthere are some other makefile targets that can be used to run the tests:\n\nthere are other makefile targets to run the tests, but extra\ndependencies will have to be installed:\n\n.. code-block:: shell\n\n    $ pip install -u --editable \".[dev,mysql,postgresql]\"\n    $ # using default settings\n    $ make test\n    $ make coverage\n\n    $ # overriding db parameters\n    $ args='--mysql-test-db-uri mysql+mysqlconnector://root:@192.168.99.100:3340/test_sqlalchemy_filters' make test\n    $ args='--sqlite-test-db-uri sqlite+pysqlite:///test_sqlalchemy_filters.db' make test\n\n    $ args='--mysql-test-db-uri mysql+mysqlconnector://root:@192.168.99.100:3340/test_sqlalchemy_filters' make coverage\n    $ args='--sqlite-test-db-uri sqlite+pysqlite:///test_sqlalchemy_filters.db' make coverage\n\n\n\ndatabase management systems\n---------------------------\n\nthe following rdbms are supported (tested):\n\n- sqlite\n- mysql\n- postgresql\n\n\nsqlalchemy support\n------------------\n\nthe following sqlalchemy_ versions are supported: ``1.0``, ``1.1``,\n``1.2``, ``1.3``, ``1.4``.\n\n\nchangelog\n---------\n\nconsult the `changelog <https://github.com/juliotrigo/sqlalchemy-filters/blob/master/changelog.rst>`_\ndocument for fixes and enhancements of each version.\n\n\nlicense\n-------\n\napache 2.0. see `license <https://github.com/juliotrigo/sqlalchemy-filters/blob/master/license>`_\nfor details.\n\n\n.. _sqlalchemy: https://www.sqlalchemy.org/\n.. _hybrid attribute: https://docs.sqlalchemy.org/en/13/orm/extensions/hybrid.html\n.. _hybrid property: https://docs.sqlalchemy.org/en/13/orm/extensions/hybrid.html#sqlalchemy.ext.hybrid.hybrid_property\n.. _hybrid method: https://docs.sqlalchemy.org/en/13/orm/extensions/hybrid.html#sqlalchemy.ext.hybrid.hybrid_method\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license, version 2.0",
  "name": "sqlalchemy-filters",
  "package_url": "https://pypi.org/project/sqlalchemy-filters/",
  "project_url": "https://pypi.org/project/sqlalchemy-filters/",
  "project_urls": {
    "Homepage": "https://github.com/juliotrigo/sqlalchemy-filters"
  },
  "release_url": "https://pypi.org/project/sqlalchemy-filters/0.13.0/",
  "requires_dist": [
    "sqlalchemy (>=1.0.16)",
    "six (>=1.10.0)",
    "pytest (>=4.6.9) ; extra == 'dev'",
    "coverage (~=5.0.4) ; extra == 'dev'",
    "sqlalchemy-utils (>=0.37) ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "restructuredtext-lint ; extra == 'dev'",
    "Pygments ; extra == 'dev'",
    "coverage-conditional-plugin ; extra == 'dev'",
    "mysql-connector-python-rf (==2.2.2) ; extra == 'mysql'",
    "psycopg2 (==2.8.4) ; extra == 'postgresql'"
  ],
  "requires_python": ">=3.7",
  "summary": "a library to filter sqlalchemy queries.",
  "version": "0.13.0",
  "releases": [],
  "developers": [
    "student",
    "wearehiring@student.com"
  ],
  "kwds": "sqlalchemy_filters test_sqlalchemy_filters sqlalchemy sqlalchemy_ _sqlalchemy",
  "license_kwds": "apache license, version 2.0",
  "libtype": "pypi",
  "id": "pypi_sqlalchemy_filters",
  "homepage": "https://github.com/juliotrigo/sqlalchemy-filters",
  "release_count": 12,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_coverage_conditional_plugin",
    "pypi_flake8",
    "pypi_mysql_connector_python_rf",
    "pypi_psycopg2",
    "pypi_pygments",
    "pypi_pytest",
    "pypi_restructuredtext_lint",
    "pypi_six",
    "pypi_sqlalchemy",
    "pypi_sqlalchemy_utils"
  ],
  "documentation_summary": "The GitHub repository \"juliotrigo/sqlalchemy-filters\" provides a tool for filtering, sorting, and paginating SQLAlchemy query objects, making it particularly useful for REST API development. It allows for complex queries involving multiple models, including automatic joining and hybrid attributes. The library supports a variety of filter and sort operations, including PostgreSQL-specific array operations and SQL-standard null handling. It also offers functionality to restrict loaded fields for efficiency. Compatible with several SQLAlchemy versions, it is licensed under Apache 2.0. The repository includes detailed documentation on usage, including examples for filtering, sorting, and pagination, as well as running tests across different database management systems like SQLite, MySQL, and PostgreSQL.",
  "embedding": [
    0.0037345984019339085,
    0.022596951574087143,
    -0.022007830440998077,
    -0.02909129485487938,
    -0.0007100997027009726,
    0.00483919819816947,
    -0.016803938895463943,
    -0.015555567108094692,
    -0.01366898138076067,
    -0.04230440780520439,
    0.002919298829510808,
    0.019931884482502937,
    -0.01136860903352499,
    0.010800529271364212,
    0.021783404052257538,
    -0.02428014948964119,
    0.022021858021616936,
    -0.029904840514063835,
    0.011852528899908066,
    -0.008170530200004578,
    0.028488148003816605,
    -0.013079861178994179,
    -0.025093697011470795,
    -0.027730708941817284,
    -0.036805957555770874,
    0.03663763776421547,
    0.013493647798895836,
    -0.01988980546593666,
    -0.022554870694875717,
    0.004614771343767643,
    0.0304098017513752,
    0.008275729604065418,
    -0.03203689306974411,
    -0.013227141462266445,
    -0.02580905705690384,
    -0.011088075116276741,
    -0.007072943728417158,
    0.018122445791959763,
    0.020464899018406868,
    -0.004776078276336193,
    0.02601945586502552,
    -0.02406975068151951,
    -0.011768369004130363,
    -0.013437541201710701,
    -0.005561571102589369,
    0.008927969262003899,
    0.022793324664235115,
    -0.02690313570201397,
    -0.006375117227435112,
    0.003843305166810751,
    0.03683401271700859,
    0.018388953059911728,
    -0.025823082774877548,
    -0.029596254229545593,
    0.013900420628488064,
    -0.015415300615131855,
    0.002798318862915039,
    0.012329434975981712,
    -0.00042277234024368227,
    0.02447652257978916,
    0.016313007101416588,
    0.019525112584233284,
    -0.02973652072250843,
    -0.025738922879099846,
    -0.03444948047399521,
    0.0014096794184297323,
    -0.011943701654672623,
    0.03018537349998951,
    -0.0033453586511313915,
    0.0008565029711462557,
    0.03287849202752113,
    0.03610462695360184,
    0.020927777513861656,
    0.006673183757811785,
    0.029455987736582756,
    -0.03621684014797211,
    -0.010800529271364212,
    0.007574397139251232,
    -0.023115936666727066,
    -0.0020338657777756453,
    0.01458772737532854,
    -0.01174732856452465,
    -0.0170564204454422,
    0.03792808949947357,
    0.029455987736582756,
    0.025654762983322144,
    -0.008086370304226875,
    0.01039375551044941,
    -0.005985877476632595,
    -0.009769569151103497,
    -0.008303782902657986,
    0.024686923250555992,
    0.030998921021819115,
    0.009320716373622417,
    -0.01902015134692192,
    0.03377620130777359,
    -0.011579008772969246,
    0.016439246013760567,
    -0.009475009515881538,
    -0.015794020146131516,
    -0.021404685452580452,
    0.020801538601517677,
    -0.009867755696177483,
    -0.004158904775977135,
    -0.03192467987537384,
    -0.02207796461880207,
    -0.00798818375915289,
    -0.0069221570156514645,
    0.030465908348560333,
    -0.002524798968806863,
    -0.01671977899968624,
    0.03386035934090614,
    0.01758943311870098,
    -0.04729790240526199,
    0.008822769857943058,
    -0.03172830864787102,
    0.024210017174482346,
    -0.0025002523325383663,
    -0.00824767630547285,
    -0.02101193740963936,
    -0.00836690329015255,
    -0.0070519037544727325,
    0.02809540182352066,
    -0.01944095268845558,
    0.019048206508159637,
    -0.036777906119823456,
    -0.023256203159689903,
    -0.012504768557846546,
    -0.024224042892456055,
    -0.03321513161063194,
    0.003248925320804119,
    0.022653058171272278,
    0.002419599099084735,
    0.018276739865541458,
    -0.01535919401794672,
    -0.0003776240046136081,
    -0.03116724081337452,
    0.013493647798895836,
    -0.01737903244793415,
    -0.024434443563222885,
    -0.005067131482064724,
    0.02962430752813816,
    -0.013304287567734718,
    -0.01944095268845558,
    0.003092878730967641,
    0.014216020703315735,
    -0.0012808095198124647,
    -0.010134262964129448,
    0.012140074744820595,
    -0.014342260546982288,
    0.011775381863117218,
    -0.031335558742284775,
    -0.026931189000606537,
    -0.02305983006954193,
    -0.00012262370728421956,
    0.0017954126233235002,
    -0.03391646593809128,
    0.015232954174280167,
    0.002589672338217497,
    0.018290765583515167,
    -0.009685409255325794,
    0.01937081851065159,
    -0.005498451180756092,
    -0.008668476715683937,
    0.0036399185191839933,
    0.02513577602803707,
    0.033635932952165604,
    -0.014328233897686005,
    -0.03203689306974411,
    0.03313097357749939,
    0.009061222895979881,
    0.02516382932662964,
    -0.011102101765573025,
    0.0022021858021616936,
    0.007560370024293661,
    -0.0028193588368594646,
    0.007279837038367987,
    -0.005249477922916412,
    -0.02645428292453289,
    -0.014244074001908302,
    0.01350767444819212,
    -0.0066696773283183575,
    0.014124847948551178,
    0.0382927842438221,
    -0.004534118343144655,
    -0.021348578855395317,
    -0.0067503307946026325,
    0.03192467987537384,
    -0.040817584842443466,
    -0.00017511409532744437,
    -0.0013903927756473422,
    0.033944521099328995,
    0.00036184402415528893,
    -0.014405380934476852,
    -0.5722877383232117,
    -0.02392948418855667,
    -0.02370505779981613,
    -0.04813950136303902,
    0.02338244393467903,
    0.015317114070057869,
    -0.021166231483221054,
    0.009503062814474106,
    -0.027043402194976807,
    0.017252793535590172,
    -0.018978072330355644,
    0.05203891173005104,
    0.0032576920930296183,
    0.00161306606605649,
    -0.0016148193972185254,
    -0.01770164631307125,
    0.019216526299715042,
    -0.04227635636925697,
    -0.005095184780657291,
    0.013100901618599892,
    -0.018318818882107735,
    0.03916243836283684,
    -0.002680845558643341,
    0.036441266536712646,
    -0.00979060959070921,
    0.017449166625738144,
    -0.0016244626604020596,
    0.003790705231949687,
    0.019497059285640717,
    -0.014938393607735634,
    -0.03192467987537384,
    0.011515888385474682,
    0.018753645941615105,
    -0.00967839639633894,
    0.05868754908442497,
    -0.005926264449954033,
    -0.007356983609497547,
    0.049037206918001175,
    0.02611764334142208,
    0.0450536347925663,
    0.004919851198792458,
    -0.010092183016240597,
    0.0022968656849116087,
    0.010618181899189949,
    0.009152396582067013,
    -0.0020250992383807898,
    0.03324318677186966,
    0.02437833696603775,
    -0.011691221967339516,
    -0.02460276335477829,
    0.012659061700105667,
    0.007108010351657867,
    0.01868351176381111,
    0.000563258130569011,
    0.015667779371142387,
    -0.024224042892456055,
    0.012413594871759415,
    -0.0119086354970932,
    0.005091677885502577,
    0.009446956217288971,
    0.018459085375070572,
    0.019525112584233284,
    0.0020619190763682127,
    -0.022007830440998077,
    0.0067994240671396255,
    0.036777906119823456,
    0.021362604573369026,
    -0.024644842371344566,
    0.0032156119123101234,
    -0.019076259806752205,
    0.017533326521515846,
    0.00579301081597805,
    -0.0027211722917854786,
    -0.015162820927798748,
    0.017028367146849632,
    0.03425310552120209,
    0.04177139699459076,
    0.01246970146894455,
    -0.008016237057745457,
    0.010190369561314583,
    0.036918170750141144,
    0.005109211429953575,
    0.005361691117286682,
    -0.008296770043671131,
    0.026875082403421402,
    0.016256900504231453,
    -0.04788701981306076,
    0.0019269125768914819,
    0.010162316262722015,
    -0.011529915034770966,
    0.007132557220757008,
    0.020044097676873207,
    -0.006333037279546261,
    -0.02360687032341957,
    -0.0035838119219988585,
    0.006031464319676161,
    -0.0170564204454422,
    0.019721485674381256,
    -0.004078251775354147,
    -0.051449790596961975,
    -0.01432122103869915,
    -0.009264609776437283,
    -0.010197382420301437,
    0.013816260732710361,
    0.006859037093818188,
    0.008240663446485996,
    0.0038783717900514603,
    -0.01405471470206976,
    -0.0164953526109457,
    -0.016986286267638206,
    0.03038174845278263,
    -0.030437855049967766,
    -0.02897908166050911,
    -0.004733997862786055,
    0.027394069358706474,
    -0.029792627319693565,
    0.01684601977467537,
    -0.010162316262722015,
    -0.012687114998698235,
    -0.03094281442463398,
    0.007483223453164101,
    -0.00022486491070594639,
    -0.0017007326241582632,
    -0.025556575506925583,
    0.0031261921394616365,
    0.028474122285842896,
    -0.0009476763079874218,
    -0.006596037186682224,
    -0.019973965361714363,
    0.007371010258793831,
    0.03256990760564804,
    0.009594236500561237,
    0.007861943915486336,
    0.013654954731464386,
    0.009951915591955185,
    -0.006918650586158037,
    0.009531116113066673,
    0.03944297134876251,
    -0.006059517618268728,
    -0.009909835644066334,
    0.003396205371245742,
    0.007178143598139286,
    0.01934276521205902,
    -0.012315408326685429,
    -0.02056308463215828,
    -0.010512982495129108,
    -0.017084473744034767,
    -0.0005720247863791883,
    -0.006003411021083593,
    -0.011600048281252384,
    -0.004425411578267813,
    0.004972451366484165,
    -0.036132678389549255,
    0.036357104778289795,
    -0.002635258948430419,
    -0.004551651421934366,
    0.010611169040203094,
    -0.02242863178253174,
    -0.02405572310090065,
    -0.017673593014478683,
    0.02732393518090248,
    0.019875777885317802,
    -0.005775477737188339,
    -0.001035342924296856,
    -0.028053322806954384,
    -0.015808047726750374,
    -0.004576198291033506,
    0.035487450659275055,
    -0.013114928267896175,
    -0.03071838803589344,
    0.018543245270848274,
    -0.019875777885317802,
    -0.009587222710251808,
    0.013192074373364449,
    0.0017051160102710128,
    0.0010327128693461418,
    -0.016369113698601723,
    0.017687618732452393,
    0.0032962653785943985,
    0.01338844746351242,
    0.023803243413567543,
    -0.014405380934476852,
    -0.02219017781317234,
    -0.01652340590953827,
    0.03203689306974411,
    0.010519995354115963,
    -0.003036772133782506,
    0.014938393607735634,
    -0.027366016060113907,
    0.027814868837594986,
    -0.004744518082588911,
    -0.017757752910256386,
    -0.013570794835686684,
    0.012112021446228027,
    -0.016481326892971992,
    0.02658052183687687,
    0.017407085746526718,
    -0.013149994425475597,
    -0.0032664586324244738,
    0.020506978034973145,
    0.007623490411788225,
    0.002559865592047572,
    -0.0030683320946991444,
    -0.014377327635884285,
    -0.0012957127764821053,
    -0.003997598309069872,
    -0.0015113727422431111,
    -0.008731596171855927,
    0.02122233808040619,
    0.0006180497584864497,
    0.04252883419394493,
    -0.009734502993524075,
    -0.021236363798379898,
    -0.018978072330355644,
    0.000532136473339051,
    0.015064633451402187,
    -0.0029210520442575216,
    0.012953621335327625,
    -0.02962430752813816,
    0.013311301358044147,
    0.03256990760564804,
    -0.017112527042627335,
    0.023691030219197273,
    0.006662664003670216,
    -0.021825484931468964,
    -0.0005159181309863925,
    0.0019058726029470563,
    0.027716681361198425,
    0.027590442448854446,
    -0.01617274060845375,
    0.0005926263984292746,
    0.012329434975981712,
    0.0026212322991341352,
    -0.019384846091270447,
    -0.002158352406695485,
    0.03478612005710602,
    0.03969544917345047,
    -0.03192467987537384,
    0.04480115324258804,
    -0.031026974320411682,
    0.012112021446228027,
    0.03621684014797211,
    0.02754836156964302,
    0.0011905129067599773,
    0.00696774385869503,
    0.02022644504904747,
    0.015232954174280167,
    0.017547352239489555,
    -0.015541540458798409,
    0.017883991822600365,
    0.018122445791959763,
    0.012287355028092861,
    0.00015604660438839346,
    0.004257091786712408,
    0.015527513809502125,
    -0.010730396024882793,
    -0.0032927587162703276,
    0.0016919659683480859,
    0.01911833882331848,
    0.002158352406695485,
    0.01934276521205902,
    0.0022775791585445404,
    0.027716681361198425,
    -0.012525808066129684,
    0.04381928965449333,
    -0.0015727393329143524,
    -0.01334636751562357,
    -0.029119348153471947,
    -0.013248180970549583,
    0.005999904125928879,
    -0.009222529828548431,
    -0.040508996695280075,
    -0.012820367701351643,
    -0.027618495747447014,
    0.02165716513991356,
    0.011172235012054443,
    -0.0035785518120974302,
    0.02833385579288006,
    -0.0033593853004276752,
    0.01469994056969881,
    -0.016972260549664497,
    -0.031195294111967087,
    0.014685913920402527,
    0.004800624679774046,
    -0.006417197175323963,
    -0.010744422674179077,
    -0.01535919401794672,
    0.0115860216319561,
    -0.009012130089104176,
    -0.0007789180381223559,
    0.0032313920091837645,
    0.020731404423713684,
    0.02537422999739647,
    -0.0035943319089710712,
    -0.03060617484152317,
    0.010807542130351067,
    0.04491337016224861,
    0.0015341660473495722,
    0.0005615047994069755,
    -0.003906425088644028,
    -0.017435139045119286,
    -0.020268525928258896,
    -0.0018900925060734153,
    0.005999904125928879,
    0.05226333811879158,
    -0.00798116996884346,
    0.0036749851424247026,
    -0.025514496490359306,
    -0.002900012070313096,
    -0.030353695154190063,
    0.020633218809962273,
    0.008303782902657986,
    -0.018206605687737465,
    0.00014223910693544894,
    0.007100997027009726,
    -0.0002811907324939966,
    0.004628797993063927,
    0.0034961451310664415,
    0.026496361941099167,
    -0.01465786062180996,
    -0.012645035050809383,
    -0.04819560796022415,
    0.0010379728628322482,
    0.006034970749169588,
    0.015373220667243004,
    -0.0076094637624919415,
    0.007925063371658325,
    0.014489540830254555,
    -0.032541852444410324,
    0.009734502993524075,
    -0.0075393300503492355,
    0.005838597659021616,
    0.00011204891052329913,
    0.004751531407237053,
    -0.010078155435621738,
    0.01469994056969881,
    0.005158304702490568,
    0.008626396767795086,
    0.005361691117286682,
    0.0043026781640946865,
    -0.027366016060113907,
    0.00030266903922893107,
    -0.02505161613225937,
    -0.0015490694204345345,
    -0.005256491247564554,
    -0.006192770786583424,
    0.024532629176974297,
    -0.007385036908090115,
    0.04813950136303902,
    0.012399568222463131,
    0.017912045121192932,
    -0.0029596255626529455,
    -0.0019041192717850208,
    -0.02756238915026188,
    -0.007840903475880623,
    -0.00885783601552248,
    0.001946199219673872,
    0.007055410649627447,
    0.005950810853391886,
    0.022372523322701454,
    0.025949323549866676,
    0.002978912089020014,
    -0.0016472559655085206,
    0.012476715259253979,
    0.027842922136187553,
    0.01847311295568943,
    0.01350767444819212,
    -0.004828677978366613,
    0.007897010073065758,
    -0.013633914291858673,
    -0.009460982866585255,
    0.01382327452301979,
    -0.014005620963871479,
    0.004593731369823217,
    0.006806437391787767,
    0.007076450623571873,
    -0.029652360826730728,
    -0.016888100653886795,
    0.02174132503569126,
    0.006711757276207209,
    0.019090285524725914,
    -0.017224740236997604,
    -0.013339354656636715,
    -0.03489833325147629,
    0.004898811224848032,
    -0.014643833972513676,
    0.0167338065803051,
    0.014145887456834316,
    0.00017040201055351645,
    0.02209199033677578,
    -0.00902615673840046,
    -0.0019900326151400805,
    -0.022106017917394638,
    0.01859935186803341,
    -0.005866650957614183,
    -0.028516201302409172,
    -0.010120236314833164,
    -0.02917545475065708,
    0.04351070150732994,
    0.011186261661350727,
    0.0012457427801564336,
    0.014461487531661987,
    -0.001662159338593483,
    -0.000418827316025272,
    0.00956618320196867,
    -0.027913054451346397,
    -0.016775885596871376,
    -0.039835717529058456,
    0.00495141139253974,
    -0.02307385765016079,
    0.02547241561114788,
    0.0014324727235361934,
    -0.015232954174280167,
    0.03083060123026371,
    -0.009390849620103836,
    0.010583115741610527,
    -0.001224702806212008,
    -0.003094632178544998,
    -0.004130851477384567,
    0.02088569849729538,
    0.008822769857943058,
    -0.011845515109598637,
    0.009313702583312988,
    0.004022145178169012,
    -0.028810761868953705,
    -0.02318607084453106,
    -0.0031787920743227005,
    -0.025500468909740448,
    0.002794812200590968,
    -0.00994490273296833,
    0.013486634939908981,
    0.016537433490157127,
    -0.007553356699645519,
    0.01802426017820835,
    0.027281856164336205,
    -0.023256203159689903,
    -0.011950715444982052,
    -0.007770770229399204,
    -0.014447460882365704,
    -0.02251279167830944,
    0.01294660847634077,
    0.03366398811340332,
    -0.01737903244793415,
    0.0012352227931842208,
    0.023115936666727066,
    -0.003255938645452261,
    0.020801538601517677,
    0.020492952316999435,
    -0.006746823899447918,
    0.005961331073194742,
    -0.02101193740963936,
    -0.013640928082168102,
    -0.04244467616081238,
    0.0234104972332716,
    0.010127249173820019,
    0.011130155064165592,
    -0.013374420814216137,
    -0.019160419702529907,
    -0.02808137610554695,
    -0.00038989735185168684,
    -0.014601754024624825,
    -0.0006610063719563186,
    -0.023101910948753357,
    -0.014826180413365364,
    -0.010751435533165932,
    -0.019763564690947533,
    -0.024630816653370857,
    -0.02219017781317234,
    0.010162316262722015,
    -0.02120831049978733,
    0.00046200313954614103,
    -0.013072848320007324,
    -0.0005347664700821042,
    0.01695823296904564,
    -0.012392555363476276,
    0.007314903661608696,
    0.016214819625020027,
    -0.004267611540853977,
    -0.016341060400009155,
    0.0037696650251746178,
    -0.023691030219197273,
    -0.029147401452064514,
    0.010758449323475361,
    0.04308990389108658,
    0.0016209559980779886,
    -0.0035119252279400826,
    0.0456988625228405,
    0.009496049024164677,
    4.7531750169582665e-05,
    -0.0036819984670728445,
    0.008941995911300182,
    0.01562570035457611,
    0.009257595986127853,
    0.0007425363874062896,
    0.019497059285640717,
    -0.0062804375775158405,
    -0.00445346487686038,
    -0.03787198290228844,
    -0.015513487160205841,
    0.04844808578491211,
    0.008724583312869072,
    0.020492952316999435,
    -0.009089276194572449,
    -0.010884689167141914,
    -0.013304287567734718,
    0.019721485674381256,
    0.0007188663585111499,
    -0.013213114812970161,
    -0.03150388225913048,
    -0.008380929939448833,
    0.008542236872017384,
    -0.013023754581809044,
    0.007889997214078903,
    -0.006052504293620586,
    0.009299675934016705,
    -0.009040183387696743,
    0.014742020517587662,
    0.009846716187894344,
    0.02165716513991356,
    -0.00885783601552248,
    -0.003312045242637396,
    -0.03223326802253723,
    -0.048924993723630905,
    -0.020310604944825172,
    0.009124343283474445,
    0.033832307904958725,
    0.01131951529532671,
    0.011726288124918938,
    -0.002624738961458206,
    0.010379728861153126,
    0.012525808066129684,
    -0.006108610890805721,
    0.013711061328649521,
    -0.014489540830254555,
    0.0050285579636693,
    -0.012182154692709446,
    -0.006217317655682564,
    -0.018627405166625977,
    -0.004425411578267813,
    -0.0036960251163691282,
    0.011382635682821274,
    0.035796038806438446,
    -0.010835595428943634,
    -0.017575405538082123,
    0.0007587546715512872,
    0.0010248229373246431,
    0.052852459251880646,
    0.008654450066387653,
    0.02516382932662964,
    0.03543134406208992,
    -0.01652340590953827,
    -0.0253461766988039,
    -0.013830287382006645,
    -0.009776582941412926,
    0.012055914849042892,
    0.029568200930953026,
    -0.0028491655830293894,
    -0.03576798364520073,
    -0.03795614466071129,
    0.015990393236279488,
    -0.011529915034770966,
    -0.00426410511136055,
    0.004681398160755634,
    0.03268212080001831,
    0.025823082774877548,
    0.030970867723226547,
    -0.02634206973016262,
    -0.012147088535130024,
    0.0009581962949596345,
    0.007335943635553122,
    -0.014307194389402866,
    0.01694420725107193,
    0.01565375365316868,
    -0.0009880029829218984,
    -0.008822769857943058,
    -0.0005790381110273302,
    0.017350979149341583,
    0.017799831926822662,
    0.01944095268845558,
    -0.009594236500561237,
    -0.011333541944622993,
    -0.056892137974500656,
    -0.00370303844101727,
    -0.0069537172093987465,
    -0.003362891962751746,
    0.00946799572557211,
    -0.0031665186397731304,
    -2.9423112209769897e-05,
    0.04726984724402428,
    -0.0018848325125873089,
    0.006070037372410297,
    -0.011375621892511845,
    -0.011186261661350727,
    0.03890995681285858,
    -0.02297567017376423,
    -0.0019076259341090918,
    -0.02527604252099991,
    0.0024143389891833067,
    -0.00489179790019989,
    -0.036553479731082916,
    -0.030634228140115738,
    0.01737903244793415,
    0.01373210083693266,
    0.020296579226851463,
    0.005940291099250317,
    0.005736904218792915,
    -0.019048206508159637,
    -0.004863744601607323,
    0.0032927587162703276,
    -0.014896313659846783,
    0.023368416354060173,
    -0.004737504757940769,
    0.01695823296904564,
    -0.021558977663517,
    -0.04090174287557602,
    -0.03444948047399521,
    -0.01251879520714283,
    0.030353695154190063,
    0.008149489760398865,
    -0.010800529271364212,
    0.007946103811264038,
    0.019525112584233284,
    -0.019497059285640717,
    -0.008486130274832249,
    -0.0069712502881884575,
    -0.026636628434062004,
    -0.013795221224427223,
    0.023129964247345924,
    -0.02362089790403843,
    -0.007777783554047346,
    0.006673183757811785,
    -0.013416500762104988,
    -0.023326337337493896,
    -0.02754836156964302,
    -0.013086874969303608,
    0.005957824178040028,
    0.0025914255529642105,
    -0.018879884853959084,
    -0.006655650679022074,
    0.02822164259850979,
    0.012890501879155636,
    -0.008766663260757923,
    -0.011466795578598976,
    0.03512275964021683,
    -0.001916392589919269,
    -0.014377327635884285,
    0.029652360826730728,
    -0.012827381491661072,
    0.025823082774877548,
    0.003895905101671815,
    0.024252096191048622,
    -0.011242369189858437,
    -0.021615084260702133,
    -0.03147582709789276,
    -0.02219017781317234,
    -0.0016639126697555184,
    0.006364597473293543,
    0.02162911184132099,
    -0.007623490411788225,
    0.01934276521205902,
    -0.021615084260702133,
    0.023564791306853294,
    0.006511877290904522,
    -0.0005487931193783879,
    0.0028035789728164673,
    0.008387942798435688,
    0.03279433399438858,
    0.010856635868549347,
    -0.015779994428157806,
    -0.011024955660104752,
    -0.006087570916861296,
    -0.0013334094546735287,
    -0.028684521093964577,
    -0.03287849202752113,
    -0.03158804029226303,
    0.0395832359790802,
    0.027295881882309914,
    0.007742716930806637,
    -0.01758943311870098,
    -0.0010423562489449978,
    -0.022218231111764908,
    -0.005814050789922476,
    -0.021601058542728424,
    0.025444362312555313,
    -0.0036293985322117805,
    -0.014938393607735634,
    -0.01805231347680092,
    0.002067179186269641,
    0.01361988764256239,
    0.012553861364722252,
    -0.011656154878437519,
    -0.004919851198792458,
    -0.011579008772969246,
    0.02405572310090065,
    0.01802426017820835,
    -0.010519995354115963,
    -0.06575698405504227,
    -0.011614074930548668,
    0.041154224425554276,
    0.0023705055937170982,
    0.029820680618286133,
    0.022218231111764908,
    -0.008086370304226875,
    -0.012967647984623909,
    -0.008984076790511608,
    -0.010365702211856842,
    0.004446451552212238,
    0.02492537721991539,
    -0.009804636240005493,
    -0.040845636278390884,
    -0.009762556292116642,
    0.017000313848257065,
    0.017196686938405037,
    0.02360687032341957,
    0.010751435533165932,
    0.01990383118391037,
    -0.01857129856944084,
    0.014314207248389721,
    -0.03105502761900425,
    -0.028403988108038902,
    0.021601058542728424,
    0.006883583962917328,
    0.005961331073194742,
    0.004004611633718014,
    0.019637325778603554,
    0.017000313848257065,
    -0.002861438784748316,
    -0.006557464133948088,
    0.004993491340428591,
    0.00042211482650600374,
    -0.02021241933107376,
    0.027730708941817284,
    0.006196277681738138,
    -0.010288556106388569,
    0.018879884853959084,
    -0.01882377825677395,
    0.0197916179895401,
    0.0007911913562566042,
    -0.004299171734601259,
    0.008696530014276505,
    -0.002700132317841053,
    0.019847724586725235,
    -0.013605860993266106,
    0.019160419702529907,
    -0.048504192382097244,
    0.0321771614253521,
    0.007469196803867817,
    -0.00710450392216444,
    -0.0017743726493790746,
    -0.0014000360388308764,
    0.0020794523879885674,
    -0.015176847577095032,
    0.02209199033677578,
    -0.01055506244301796,
    -0.006704743951559067,
    -0.044015660881996155,
    -0.0032419119961559772,
    0.005771970842033625,
    -0.020044097676873207,
    0.0068555306643247604,
    0.20232056081295013,
    0.0066205840557813644,
    0.03360787779092789,
    0.009418902918696404,
    -0.003646931843832135,
    0.02939988113939762,
    -0.0007214963552542031,
    0.004614771343767643,
    -0.04449256882071495,
    0.00445346487686038,
    -0.02601945586502552,
    -0.04252883419394493,
    -0.0017349226400256157,
    0.012105008587241173,
    -0.0017252792604267597,
    0.011564982123672962,
    -0.022765271365642548,
    -0.04494142159819603,
    -0.023999616503715515,
    0.004751531407237053,
    -0.015934286639094353,
    0.00437631830573082,
    -0.032626014202833176,
    -0.013093887828290462,
    0.03660958632826805,
    -0.004425411578267813,
    0.0011633362155407667,
    -0.0032997720409184694,
    0.017112527042627335,
    0.009538129903376102,
    0.006115624215453863,
    0.01847311295568943,
    -0.007897010073065758,
    0.005687810946255922,
    -0.014244074001908302,
    -0.017350979149341583,
    -0.0031367121264338493,
    -0.007202690467238426,
    -0.00043329232721589506,
    0.021587030962109566,
    -0.019637325778603554,
    -0.03840499743819237,
    -0.003073591971769929,
    -0.018332846462726593,
    0.013514688238501549,
    -0.019398871809244156,
    -0.02928766794502735,
    0.02176937833428383,
    -0.007181650493294001,
    0.007882983423769474,
    -0.038320839405059814,
    0.001893599284812808,
    0.023158017545938492,
    0.008934983052313328,
    -0.004986478015780449,
    -0.013612874783575535,
    0.031644146889448166,
    0.02054905891418457,
    0.017954126000404358,
    -0.004330731462687254,
    0.0011238862061873078,
    0.02033865824341774,
    -0.0017261559842154384,
    0.02033865824341774,
    -0.043903447687625885,
    0.002733445493504405,
    -0.05605053901672363,
    0.004653344862163067,
    0.015345167368650436,
    -0.007132557220757008,
    -0.0069537172093987465,
    -0.0007407830562442541,
    -0.03551550582051277,
    -0.027183668687939644,
    -0.011088075116276741,
    -0.020268525928258896,
    0.02087167091667652,
    0.010688316076993942,
    0.012090981937944889,
    0.029989000409841537,
    -0.01378119457513094,
    0.0027965654153376818,
    -0.009187462739646435,
    0.012231248430907726,
    -0.013851327821612358,
    -0.0040186382830142975,
    0.030550068244338036,
    -0.008458076976239681,
    -0.010807542130351067,
    -0.01562570035457611,
    -0.017112527042627335,
    -0.025851136073470116,
    -0.005708850920200348,
    -0.024729004129767418,
    0.019076259806752205,
    0.007178143598139286,
    -0.0023073856718838215,
    0.0009590729605406523,
    -0.032850440591573715,
    -0.004653344862163067,
    -0.006592530757188797,
    0.06777682900428772,
    -0.018529219552874565,
    0.006143677514046431,
    -0.012126048095524311,
    0.02830580249428749,
    0.006760850548744202,
    0.009664369747042656,
    0.021264417096972466,
    -0.012546848505735397,
    0.01573791354894638,
    -0.03195273503661156,
    -0.0058280774392187595,
    -0.012119035236537457,
    -0.002018085913732648,
    -0.019609272480010986,
    -0.008310796692967415,
    0.007399063557386398,
    0.016481326892971992,
    -0.0152049008756876,
    -0.004705944564193487,
    0.014230047352612019,
    0.028600361198186874,
    -0.016411192715168,
    -0.029764574021100998,
    0.0034961451310664415,
    -0.033523719757795334,
    0.02578100375831127,
    0.0009573196293786168,
    -0.0323454812169075,
    0.016874073073267937,
    -0.02297567017376423,
    0.006655650679022074,
    0.023592844605445862,
    0.001893599284812808,
    -0.02099791169166565,
    -0.03321513161063194,
    -0.01454564742743969,
    -0.015190874226391315,
    0.005337144713848829,
    -0.02327023074030876,
    0.010064128786325455,
    0.02516382932662964,
    0.0132341543212533,
    0.0132341543212533,
    -0.027380041778087616,
    0.015218927524983883,
    -0.01716863363981247,
    0.005302077624946833,
    0.005659757647663355,
    0.00238979235291481,
    0.011466795578598976,
    0.016355086117982864,
    -0.036553479731082916,
    0.019426925107836723,
    -0.01857129856944084,
    2.2587855710298754e-05,
    0.006932677235454321,
    0.00434125168249011,
    0.01837492547929287,
    0.002288099145516753,
    -0.009818662889301777,
    0.00836690329015255,
    -0.0012878228444606066,
    -0.009545142762362957,
    -0.048167552798986435,
    -0.1765114963054657,
    0.005677291192114353,
    0.02286345697939396,
    -0.03933075815439224,
    0.02416793629527092,
    -0.009250583127140999,
    0.004653344862163067,
    0.0038222651928663254,
    -0.010190369561314583,
    -0.007427116855978966,
    0.013900420628488064,
    -0.013753141276538372,
    -0.017771778628230095,
    -0.04090174287557602,
    0.006431223824620247,
    -0.0182627122849226,
    -0.006020944099873304,
    0.01684601977467537,
    0.05055208504199982,
    0.0006189264240674675,
    0.03860137239098549,
    -0.02077348530292511,
    0.00956618320196867,
    -0.011508875526487827,
    -0.0010967095149680972,
    -0.008016237057745457,
    -0.01055506244301796,
    -0.015162820927798748,
    -0.003790705231949687,
    -0.005943797528743744,
    0.021025964990258217,
    0.011333541944622993,
    0.03167220205068588,
    0.008219623006880283,
    -0.0035084185656160116,
    0.025823082774877548,
    -0.0031682720873504877,
    -0.016004420816898346,
    -0.0029859254136681557,
    0.03837694600224495,
    0.02305983006954193,
    0.02513577602803707,
    0.006399664096534252,
    -0.013809247873723507,
    -0.029876787215471268,
    0.01900612562894821,
    0.03245769441127777,
    -0.020577112212777138,
    0.004467491526156664,
    -0.024224042892456055,
    0.025556575506925583,
    -0.02721172198653221,
    -0.00787597056478262,
    -0.000671088055241853,
    0.00013588328147307038,
    -0.006876570638269186,
    -0.009432929567992687,
    -0.01059714239090681,
    0.003134958678856492,
    -0.020044097676873207,
    -0.017028367146849632,
    -0.02634206973016262,
    0.003923958633095026,
    -0.0056632645428180695,
    -0.011270422488451004,
    -0.004281638190150261,
    -0.02405572310090065,
    0.03697427734732628,
    -0.011768369004130363,
    0.013374420814216137,
    0.0015630960697308183,
    0.021825484931468964,
    -0.023242177441716194,
    0.02144676446914673,
    -0.02099791169166565,
    0.00631550420075655,
    -0.013837301172316074,
    0.004653344862163067,
    0.001681445981375873,
    0.007967143319547176,
    -0.025233963504433632,
    0.03818057104945183,
    0.015906233340501785,
    0.005172331351786852,
    0.022162124514579773,
    -0.011614074930548668,
    0.007897010073065758,
    -0.011985781602561474,
    -0.010912742465734482,
    -0.010225435718894005,
    0.03804030269384384,
    -0.0085282102227211,
    -0.00549143785610795,
    -0.00890692975372076,
    -3.355988155817613e-05,
    0.02067529782652855,
    -0.008184556849300861,
    -0.004004611633718014,
    0.005221424624323845,
    -0.0384611040353775,
    0.010232449509203434,
    0.015555567108094692,
    -0.021348578855395317,
    0.013248180970549583,
    0.016355086117982864,
    0.012680101208388805,
    -0.005021544639021158,
    -0.0007048397092148662,
    0.046175766736269,
    0.0004041431820951402,
    -0.005698331166058779,
    0.015317114070057869,
    0.021180257201194763,
    0.0030455386731773615,
    -0.025738922879099846,
    0.012294367887079716,
    0.008170530200004578,
    -0.014117834158241749,
    0.02830580249428749,
    -0.005905224476009607,
    0.042472727596759796,
    -0.004414891358464956,
    0.02416793629527092,
    0.01575194112956524,
    -0.006511877290904522,
    -0.03139166906476021,
    -0.10626598447561264,
    -0.03630099818110466,
    0.017954126000404358,
    0.015920260921120644,
    -0.023662976920604706,
    0.0019111325964331627,
    0.009362796321511269,
    -0.0018655458698049188,
    -0.04154697060585022,
    0.0011913895141333342,
    0.007735703606158495,
    0.015611673705279827,
    -0.02032463252544403,
    0.002123285783454776,
    -0.022723190486431122,
    0.033720094710588455,
    -0.03739507868885994,
    0.0023705055937170982,
    0.011130155064165592,
    0.0023126457817852497,
    -0.028446068987250328,
    -0.029792627319693565,
    -0.002505512209609151,
    0.0167338065803051,
    -0.01524698082357645,
    -0.0007219347171485424,
    -0.031531933695077896,
    0.039414916187524796,
    -0.003846811829134822,
    8.350246935151517e-05,
    0.007048397324979305,
    -0.0347580648958683,
    -0.01859935186803341,
    -0.011557968333363533,
    0.00836690329015255,
    -0.007434130180627108,
    -0.008998103439807892,
    -0.0152049008756876,
    0.047185689210891724,
    -0.02318607084453106,
    0.006469797343015671,
    -0.020577112212777138,
    0.015148794278502464,
    0.003532965201884508,
    -0.0034663386177271605,
    0.009341755881905556,
    0.01575194112956524,
    0.021895617246627808,
    0.04045289009809494,
    -0.01000802218914032,
    -0.0023687523789703846,
    -0.02579502947628498,
    0.0031647654250264168,
    -0.020044097676873207,
    0.024883296340703964,
    -0.0009625796228647232,
    -0.0019146392587572336,
    -0.0031595053151249886,
    -0.011038982309401035,
    0.01758943311870098,
    -0.010674289427697659,
    0.01143172848969698,
    0.008268716745078564,
    0.02405572310090065,
    0.006487330887466669,
    -0.013942500576376915,
    0.01794010028243065,
    -0.005179344676434994,
    0.030129266902804375,
    -0.03753534331917763,
    -0.01707044616341591,
    -0.0012878228444606066,
    -0.02658052183687687,
    0.032317426055669785,
    -0.003070085309445858,
    -0.00036272068973630667,
    0.011557968333363533,
    -0.020464899018406868,
    -0.005042584612965584,
    -0.008998103439807892,
    -0.028277749195694923,
    0.016270926222205162,
    -0.007136063650250435,
    -0.012820367701351643,
    0.009650343097746372,
    0.0109828757122159,
    0.027941107749938965,
    -0.008696530014276505,
    -0.0021302991081029177,
    -0.036805957555770874,
    0.009909835644066334,
    -0.012076955288648605,
    0.025093697011470795,
    0.003585565136745572,
    -0.01988980546593666,
    -0.006087570916861296,
    -0.0003802540013566613,
    -0.007455170154571533,
    0.0019514592131599784,
    -0.0006798547110520303,
    -0.022120043635368347,
    -0.008493143133819103,
    -0.07905425876379013,
    0.009573196060955524,
    -0.013984580524265766,
    0.0010861895279958844,
    -0.0013237660750746727,
    -0.04928968474268913,
    0.008401969447731972,
    -0.008956022560596466,
    0.005782491061836481,
    0.0058982111513614655,
    -0.03313097357749939,
    -0.0012168128741905093,
    0.003934478387236595,
    -0.018388953059911728,
    -0.01010620966553688,
    -0.003790705231949687,
    0.03565577045083046,
    0.009089276194572449,
    0.03442142531275749,
    0.000315161538310349,
    -0.015415300615131855,
    0.004348265007138252,
    0.002821112284436822,
    0.009187462739646435,
    -0.030437855049967766,
    0.005558064207434654,
    0.004046691581606865,
    0.02928766794502735,
    -0.029259614646434784,
    -0.016327032819390297,
    0.02603348344564438,
    -0.001741059240885079,
    -0.002105752471834421,
    0.0014219527365639806,
    0.004555158317089081,
    -0.01824868656694889,
    0.019861752167344093,
    -0.02165716513991356,
    0.02133455127477646,
    -0.009299675934016705,
    -0.00956618320196867,
    -0.04362291470170021,
    0.026384148746728897,
    -0.018753645941615105,
    0.003615371882915497,
    0.0234104972332716,
    0.010344662703573704,
    0.025963349267840385,
    0.013542741537094116,
    0.005351171363145113,
    0.008654450066387653,
    0.008037276566028595,
    -0.039751555770635605,
    -0.023648951202630997,
    0.014293167740106583,
    -0.015008526854217052,
    0.024799136444926262,
    0.008913942612707615,
    -0.029596254229545593,
    0.015078660100698471,
    0.03641321137547493,
    0.02603348344564438,
    0.014391354285180569,
    -0.009215516038239002,
    -0.011193275451660156,
    -0.03747923672199249,
    -0.018220633268356323,
    -0.011137168854475021,
    0.02153092436492443,
    -0.009685409255325794,
    -0.023326337337493896,
    -0.02568281628191471,
    0.012301381677389145,
    0.027366016060113907,
    0.027309909462928772,
    0.006070037372410297,
    -0.008871862664818764,
    -0.0032910052686929703,
    -0.0023266724310815334,
    0.025752948597073555,
    0.041378650814294815,
    -0.02996094711124897,
    -0.03223326802253723,
    0.014882287010550499,
    0.03212105482816696,
    0.010323622263967991,
    -0.016130659729242325,
    -0.014742020517587662,
    0.0016104360111057758,
    0.014475514180958271,
    -0.0031244386918842793,
    -0.002608958864584565,
    -0.008205596357584,
    0.008135463111102581,
    -0.00035285818739794195,
    0.007939090020954609,
    0.015345167368650436,
    -0.02174132503569126,
    -0.0024827190209180117,
    0.010583115741610527,
    0.005957824178040028,
    0.0085282102227211,
    0.016313007101416588,
    0.008219623006880283,
    -0.023662976920604706,
    -0.009334743022918701,
    -0.009362796321511269,
    -0.03310291841626167,
    0.0017550860065966845,
    0.04407176747918129,
    0.020969858393073082,
    -0.026973269879817963,
    0.003759145038202405,
    0.02294761687517166,
    -0.027618495747447014,
    0.03304681181907654,
    0.006957223638892174,
    -0.012483728118240833,
    -0.006732797250151634,
    -0.006894103717058897,
    0.0011221328750252724,
    0.01284842099994421,
    0.020619191229343414,
    -0.0022390056401491165,
    0.022063937038183212,
    0.04867251217365265,
    0.026384148746728897,
    -0.013991594314575195,
    -0.010954822413623333,
    0.020352685824036598,
    -0.01382327452301979,
    -0.005151291377842426,
    -0.010905728675425053,
    -0.014910340309143066,
    -0.0018076859414577484,
    -0.021558977663517,
    0.008268716745078564,
    -0.04474504664540291,
    -0.022288363426923752,
    0.07170429080724716,
    -0.0009625796228647232,
    -0.014180954545736313,
    -0.0060945842415094376,
    -0.011600048281252384,
    0.006294464226812124,
    0.002100492361932993,
    0.0035540051758289337,
    -0.0026825990062206984,
    -0.01290452852845192,
    0.022358497604727745,
    -0.00370303844101727,
    -0.026636628434062004,
    -0.0494019016623497,
    -0.0022091991268098354,
    -0.004534118343144655,
    -0.030241480097174644,
    -0.016411192715168,
    0.009348769672214985,
    0.021054018288850784,
    0.01923055201768875,
    0.03259795904159546,
    -0.01782788522541523,
    0.010421808809041977,
    -0.026187775656580925,
    -0.016705753281712532,
    0.02753433585166931,
    0.002791305538266897,
    0.016327032819390297,
    -0.059192508459091187,
    0.021376632153987885,
    0.01803828589618206,
    -0.01562570035457611,
    -0.03697427734732628,
    0.0009932629764080048,
    0.006771370768547058,
    -0.01197175495326519,
    -0.012483728118240833,
    0.012006822042167187,
    0.031139187514781952,
    0.007525303401052952,
    0.018865859135985374,
    -0.030437855049967766,
    -0.008486130274832249,
    0.006003411021083593,
    0.015513487160205841,
    -0.0020198391284793615,
    0.0013544494286179543,
    -0.024546656757593155
  ]
}
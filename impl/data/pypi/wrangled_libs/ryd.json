{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python"
  ],
  "description": "ruamel yaml doc preprocessor (pronounced: /r\u0251\u026at/, like the verb \"write\")\n\n# ryd\n\n[![image](https://sourceforge.net/p/ryd/code/ci/default/tree/_doc/_static/license.svg?format=raw)](https://opensource.org/licenses/mit)\n[![image](https://sourceforge.net/p/ryd/code/ci/default/tree/_doc/_static/pypi.svg?format=raw)](https://pypi.org/project/ryd/)\n[![image](https://sourceforge.net/p/oitnb/code/ci/default/tree/_doc/_static/oitnb.svg?format=raw)](https://pypi.org/project/oitnb/)\n[![image](https://sourceforge.net/p/ryd/code/ci/default/tree/_doc/_static/ryd.svg?format=raw)](https://pypi.org/project/ryd/)\n\n`ryd` ( /r\u0251\u026at/, pronounced like the verb \\\"write\\\" ) is a preprocessor\nfor text based documents, that builds upon the multi-document\ncapabilities of yaml files/streams.\n\nthe use of multiple-documents in `ryd` allows for clear separation\nbetween document text and any programs referenced in those text. thereby\nmaking it possible to run (c.q. compile) the program parts of a\ndocument, e.g. to check whether they are syntactically correct. it can\nalso capture the *actual* output of those programs to be included in the\ndocument. it is also possible to recognise different documents and thus\nrun different formatters then recombining the documents.\n\nthis allows for easier maintenance of (correct) program sources, in\ndocument source texts like restructuredtext, latex, markdown, etc.\n\nthe first of the documents in a `ryd` file has, at the root-level, a\nmapping. this mapping is the **ryd configuration metadata** for the rest\nof the stream of documents in the file. the metadata is used to define\n`ryd` document version used, what the basic **text style** is (currently\n`rst` for restructuredtext, `so` for stackoverflow-markdown), if any\npostprocessing (pdf, html) needs to be done, and other configuration\ninformation. this first document doesn\\'t normally have any directives.\nthat the document is yaml 1.2 is implicit, so no `%yaml 1.2` directive\nis needed and without directive and no preceding document, you do not\nhave a directives-end marker line (`---`) at the top.\n\nthe documents following the first document are normally block style\nliteral scalars with an optional tag. the tag influences how the scalar\nstring is processed within the selected output text style.\n\n## example\n\n    version: 0.2\n    text: rst\n    fix_inline_single_backquotes: true\n    --- |\n    example python program\n    ++++++++++++++++++++++\n\n    this is an example of a python program:\n    --- !python |\n    n = 7\n    print(n**2 - n)\n    --- !stdout |\n    the answer is:\n\nthis will generate (using: `ryd convert test.ryd`) the following\n`test.rst`:\n\n    example python program\n    ++++++++++++++++++++++\n\n    this is an example of a python program:\n\n    .. code:: python\n\n      n = 7\n      print(n**2 - n)\n\n    the answer is:\n\n    .. code::\n\n      42\n\n## postprocessing\n\nthe output can be converted to pdf using `rst2pdf` or html using\n`rst2html` with images embedded using `webpage2html`. invocation of\nthese programs can be specified in the metatada (e.g. `post: pdf`).\n\nthe (image embedded) html output has the indent of indented lines of\nincluded code fragments inserted as actual spaces. so you copy and paste\nprogram code (or yaml) from html without a problem, something not\npossible with pdf files generated by `rst2pdf`.\n\n`ryd` generates its text output stand-alone, but the programs actually\nused for postprocessing have to be installed seperately and available in\nyour path.\n\n(there is currently no postprocessing for markdown, as pandoc is not\nworking on arch (mark 2022))\n\n## config\n\nyou can create a file `~/.config/ryd/ryd.yaml` with defaults for the\ncommandline options. to always embed images when converting to html and\nalways run the (global) verbose option:\n\n> global:\n>\n> :   verbose: true\n>\n> convert:\n>\n> :   embed: true\n\n### command-line options\n\nthe command-line of `ryd` consists of multiple components:\n\n    ryd [--global-option] command [--options] [arguments]\n\nalthough not indicated most global options can occur after the command\nas well.\n\n#### commands\n\n    convert             generate output as per first yaml document\n    roundtrip           roundtrip .ryd file, updating sections\n    from-rst (fromrst)  convert .rst to .ryd\n\nyou\\'ll most often use `convert` it takes one or more filenames as\nargument and generates output as specified in the ryd configuration\ndata. some options allow you to override settings there (e.g. `--pdf`\nand `-no-pdf`)\n\nthe command `from-rst` converts a `.rst` file into `.ryd` doing some\nsection underline checking and adding the ryd configuration data\ndocument.\n\nthe `roundtrip` command updates sections by running in place\ncode-formatting on the `!python` (using `oitnb`) and `!zig` sections of\nthe `.ryd` file. ( there is currently no config option to use `blue` or\n`black`, but you can copy `ryd/_tag/python.tag` to your\n`.config/ryd/tag` directory and make the minor adjustment to use those,\nsee the section on making our own tag).\n\ndoing `ryd command --help` might indicate extra options that have not\nyet made it into the documentation and/or that are incompletely\nimplemented.\n\n# documents and document tags\n\neach yaml document has to be separated from other documents in the\nstream by at least the end of directive marker `---`. apart from the\nfirst document, most documents contain a single, multi-line,\nnon-indented, scalar. the end of directives marker is therefor followed\nby the pipe (`|`) symbol, which is the yaml indication for a multi-line\nliteral scalar.\n\nthat scalar can be \\\"typed\\\" in the normal way of yaml by inserting a\ntag before the `|`. e.g. a document that is a type of python program has\na tag `!python` and thus starts with:\n\n    --- !python |\n\nwhat a document tag exactly does, depends on the tag, but, potentially,\nalso, on the output file format selected, on previously processed tagged\ndocuments, other `.ryd` files processed previously and the environment.\n\nin addition to the basic tag (like `!python`), a tag can have\nsubfunctions such as `!python-pre`. if an unknown subfunction is\nspecified you\\'ll get a runtime error.\n\nthe following are short descriptions for all tags, independent of the selected\noutput format:\n\n`!changelog`<br>  input is a mapping keys are (version, date) tuples, or the word next\n\n`!code`<br>  include program in text. do not mark as executable, doesn't influence ``!stdout``.\n\n`!comment`<br>  the whole document will be discarded, i.e. not included in the output.\n\n`!inc`<br>  include the content of the listed files (indented), without other processing,          into the output. preceed with ``::`` if necessary\n\n`!inc-raw`<br>  include the content of the listed files (indented), without other processing,          into the output. preceed with ``::`` if necessary\n\n`!lastcompile`<br>  include output from last compilation as code.\n\n`!nim`<br>  include nim program in text. prefix and mark as executable.\n\n`!nim-pre`<br>  include nim program in text. prefix and mark as executable.\n\n`!python`<br>  include python program in text. prefix and mark as executable.\n\n`!python-hidden`<br>  include python program in text. prefix and mark as executable.\n\n`!python-hiddenstdoutraw`<br>  include python program in text. prefix and mark as executable.\n\n`!python-pre`<br>  include python program in text. prefix and mark as executable.\n\n`!stdout`<br>  include output from last executable document (e.g. ``!python``) as code.\n\n`!stdout-raw`<br>  include output from last executable document (e.g. ``!python``) as code.\n\n`!table`<br>  create a table, for now headerless\n\n`!toc`<br>  insert an index\n\n`!yamlout`<br>  include output from last executable document (e.g. ``!python``) as code tagged as         yaml document.\n\n`!zig`<br>  include zig program in text. prefix and execute setting !stdout.\n\n`!zig-pre`<br>  include zig program in text. prefix and execute setting !stdout.\n\n`!zsh`<br>  run each line in zsh, interspacing the lines with the output\n\n# md\n\nthe output to `.md` expects non-code yaml documents to be valid\nmarkdown.\n\nbecause of the special meaning of `---` (and `...`) at the beginning of\na line, followed by newline or space, these should not be used. either\nuse a longer sequence ( e.g. for divider lines use `----` ), or\nindent the whole document:\n\n```\n  --- |\n    line followed by divider\n    ---\n    another line\n```\n\n## mkdocs\n\nif you have a file `_doc/readme.ryd`, you can use `ryd serve` to\nconvert and serve this with mkdocs. the contents of the necessary\nmkdocs configuration file will be written from the mkdocs entry in the metadata\nof the `readme.ryd` file (so you don't need to put more cruft in your packages root\ndirectory):\n\n```\n version: 0.2\n text: md\n pdf: false\n mkdocs:\n   # if site_name key not provided set to current directory name\n   site_name: your_project_name\n   docs_dir: _doc\n   site_author: anthon van der neut\n\n   theme:\n     name: readthedocs\n\n   exclude_docs: |\n     *.ryd\n     *.rst\n\n   markdown_extensions:\n   - toc:\n       permalink: true\n```\n\n \n# rst\n\nthe output to `.rst` expects non-code yaml documents to be valid\nrestructuredtext. any non-tagged documents, i.e. those starting with:\n\n    --- |\n\nare assumed to be text input, in the format specified in the ryd\nconfiguration data.\n\n## section underlining\n\nbecause of the special meaning of `---` (and `...`) at the beginning of\na line, followed by newline or space, the section under/over-line\ncharacters used in `.ryd` files that are source for `.rst` should not\nuse `-` or `.` sequences if a any of those section names consist of\nthree letters (e.g. a section named api or rst). it is recommended to\nuse the following scheme:\n\n    sections, subsections, etc. in .ryd files\n     # with over-line, for parts\n     * with over-line, for chapters\n     =, for sections\n     +, for subsections\n     ^, for sub-subsections\n     \", for paragraphs\n\n## single backquotes\n\nthe `fix_inline_single_backquotes: true` tells `ryd` to indicate lines\nthat have single backquotes, that need fixing (by replacing them with\ndouble backquotes):\n\n    readme.ryd\n    47: this will generate (`ryd convert test.ryd`) the following\n                          --^\n                                               --^\n\n(if you are used to other inline code markup editing e.g. on stack\noverflow, that uses single backquotes, you\\'ll come to appreciate this.)\n\n## python\n\npython code is indicated by:\n\n    --- !python |\n\nthe document is inserted into the `.rst` preceded by `.. code:: python`\nand each line with a two space indent.\n\nif your program relies on specific packages, those packages, need to be\navailable in the environment in which `ryd` is started (which can e.g.\nbe a specifically set up `virtualenv`)\n\nit is possible to have \\\"partial programs\\\" by preceding a python\ndocument with e.g.:\n\n    --- !python-pre |\n    from __future__ import print_function\n    import sys\n    import ruamel.yaml\n    from ruamel.std.pathlib import path, pushd, popd, pathlibconversionhelper\n    pl = pathlibconversionhelper()\n\nsuch a block is pre-pended to all following `--- !python |` documents\n(until superseded by another `--- !python-pre |` block)\n\n## captured output\n\nthe output from the last program that was run (`--- !python |`) is\nstored and can be post-pended to a restructuredtext document by tagging\nit with `!stdout` (i.e. `--- !stdout |`)\n\n## non-running code\n\na document tagged `!code` will be represented as one tagged `!python`,\nbut the code will not be run (and hence the output used for `!stdout`\nnot changed).\n\n## zig\n\nzig code is indicated by:\n\n    --- !zig |\n\nthe document is inserted as with python, there can be a `!zig-pre`\ndocument, and output is captured and displayed with `--- !stdout |`):\n\n```zig\n// const std = @import(\"std\");   is defined in zig-pre\n\npub fn main() !void {\n    const stdout = std.io.getstdout().writer();\n    try stdout.print(\"hello, {s}!\\n\", .{\"world\"});\n}\n```\n\nwhich outputs:\n\n```lang-none\nhello, world!\n```\n\nthe compilation is done with option `build-exe`.\n\n\ncompiler output\n^^^^^^^^^^^^^^^\n\nif you are interested in the textual output of the compiler you can use\n``--- !lastcompile |``:\n\n# nim\n\nnim code is indicated by:\n\n    --- !nim |\n\nthe document is inserted as with python, there can be a `!nim-pre`\ndocument, and output is captured and displayed with `--- !stdout |`):\n\n```lang-none\nlet a = 123\nlet x = 0b0010_1010\necho(fmt\"the answer to the question: {x}\")\n```\n\nwhich outputs:\n\n    the answer to the question: 42\n\nthe compilation is done with options\n`--verbosity:0 --hint[processing]:off` .\n\n# compiler output\n\nif you are interested in the textual output of the compiler you can use\n`--- !lastcompile |`:\n\n    /tmp/ryd-of-anthon/ryd-1169/tmp_02.nim(4, 5) hint: 'a' is declared but not used [xdeclaredbutnotused]\n\n# comments\n\nblock style literal scalars do not allow yaml comments. to insert\ncomments in a text, either use the format acceptable by the output, e.g.\nwhen generating `.rst` use:\n\n    ..\n       this will show up in the resulting .rst file, but will\n       not render\n\nalternatively you can create a comment yaml document (`--- !comment |`),\nfor which the text will not be represented in the output file format\n**at all**.\n\nif you already have a tagged document, e.g. `--- !python |` document,\nyou can make it into a comment by inserting `comment-`:\n\n    --- !comment-python |\n\nthis has been implemented by **not** reporting an error when an unkown\nsubfunction on `!comment` is invoked.\n\n# tasklists\n\nif you set `tasklist: true` in the metadata, then lines that *start*\nwith one of the following tasklist patterns, are transformed to their\nunicode counterpart:\n\n    [ ] not done yet\n    [v] done\n    [x] no longer going to do\n\nresulting in\n\n\u2610 not done yet\n\n\u2611 done\n\n\u2612 no longer going to do\n\n(it would be nice to know if there is a way to create a real list with\nuser specified bullet items)\n\n# making your own tag\n\nbefore trying to load a tag `!yourtag` from its know files, `ryd` tries\nto load them from `~/.config/ryd/tag/`. this mechanism can be used to\nimplement your improvements over existing tags or extendeding the tags\nwith your own.\n\nlet\\'s assume you want to explain the use of `mypy` in your `ryd`\ndocument, including output of a `mypy` run on some source. first create\na file `~/.config/ryd/tag/mypy.tag` with the following content:\n\n    # coding: 'utf-8'\n\n    from __future__ import annotations\n\n    import os\n    import subprocess\n    from typing import any, type_checking\n    from ryd._tag._handler import programhandler\n\n    if type_checking:\n        from ryd._convertor._base import convertorbase\n    else:\n        convertorbase = any\n\n\n    class mypy(programhandler):   # class name is capitalization of the stem of the filename\n        def __init__(self, convertor: convertorbase) -> none:\n            super().__init__(convertor)\n            self._pre = ''\n\n        def pre(self, d: any) -> none:  # like !python-pre you can have !mypy-pre\n            self._pre = str(d)\n\n        def __call__(self, d: any) -> none:\n            \"\"\"\n            include python program in text. prefix, save and run mypy, setting !stdout.\n            \"\"\"\n            s = str(d)\n            # depending on the util, you may not need to do a chdir to the tempdir\n            old_dir = os.getcwd()\n            self.c.temp_dir.chdir()\n            path = self.c.temp_file_path('.py')\n            path.write_text(self._pre + s)\n            self.c.last_output = subprocess.run([\n                'mypy',\n                '--strict', '--follow-imports', 'silent', '--implicit-reexport',\n                str(path),\n            ], stderr=subprocess.stdout, stdout=subprocess.pipe, encoding='utf-8').stdout\n            os.chdir(old_dir)\n            self.c.add_code(s, 'python')  # format the code as python\n\nand you include in your `ryd` document:\n\n    --- !mypy |\n    def main(arg1, arg2):\n        return arg1\n\n    --- !stdout |\n    which gives:\n\n    --- |\n\n    from the mypy output you can see ....\n\nyour `.rst` will then contain the python source and the mypy output:\n\n    .. code:: python\n\n      def main(arg1, arg2):\n          return arg1\n\n    which gives:\n\n    .. code::\n\n      tmp_03.py:2: error: function is missing a type annotation\n      found 1 error in 1 file (checked 1 source file)\n\n    from the mypy output you can see ....\n\n# history\n\n`ryd` grew out of a in-house solution where sections of restructuredtext\nfiles were updated, in-place, by running python programs specified in\nseparate files. also allowing the inclusion of the (error) output.\n\nan example of this can be seen in\n[this](https://bitbucket.org/ruamel/yaml/raw/0be7d3cb8449b15d9ac9b097322f09e52b92f868/_doc/example.rst)\nold version of the `example.rst` file of the `ruamel.yaml` package:\n\n    basic round trip of parsing yaml to python objects, modifying\n    and generating yaml::\n\n      import sys\n      from ruamel.yaml import yaml\n\n      inp = \"\"\"\\\n      # example\n      name:\n        # details\n        family: smith   # very common\n        given: alice    # one of the siblings\n      \"\"\"\n\n      yaml = yaml()\n      code = yaml.load(inp)\n      code['name']['given'] = 'bob'\n\n      yaml.dump(code, sys.stdout)\n\n    .. example code small.py\n\n    resulting in ::\n\n      # example\n      name:\n        # details\n        family: smith   # very common\n        given: bob      # one of the siblings\n\n\n    .. example output small.py\n\nthe program was inserted before the `.. example code` line and its\noutput before `.. example output`, replacing all the text starting after\nthe previous `::`\n\nthe `small.py` referenced a separate file for this piece of code. this\nresulted in multiple source files that were associated with a single\n`.rst` file. there was no mechanism to have partial programs that could\nbe tested by execution, which precluded getting output from such program\nas well.\n\nalthough the code could have been edited in place, and used to get the\noutput, this would force one to use the extra indentation required for\nlines following rest\\'s `::`.\n\nonce this system came under review, the solution with a structured yaml\nheader, as used with various file formats, combined with multiple\ndocument consisting of (tagged) top level, non-indented, block style\nliteral scalars, was chosen instead.\n\nin early 2022 an update of the 0.1 format was implemented to make tags\nand convertors into seperate files, thereby making them more easily\nupgradable and extensible.\n",
  "docs_url": null,
  "keywords": "restructuredtext markdown markup preprocessing",
  "license": "mit",
  "name": "ryd",
  "package_url": "https://pypi.org/project/ryd/",
  "project_url": "https://pypi.org/project/ryd/",
  "project_urls": {
    "Home": "https://sourceforge.net/p/ryd/",
    "Source": "https://sourceforge.net/p/ryd/code/ci/default/tree/",
    "Tracker": "https://sourceforge.net/p/ryd/tickets/"
  },
  "release_url": "https://pypi.org/project/ryd/0.9.2/",
  "requires_dist": [
    "ruamel.std.pathlib",
    "ruamel.yaml",
    "ruamel.yaml.split"
  ],
  "requires_python": ">=3",
  "summary": "ruamel yaml doc preprocessor (pronounced: /r\u0251\u026at/, like the verb \"write\")",
  "version": "0.9.2",
  "releases": [],
  "developers": [
    "a.van.der.neut@ruamel.eu",
    "anthon_van_der_neut"
  ],
  "kwds": "markdown markup markdown_extensions restructuredtext svg",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_ryd",
  "homepage": "",
  "release_count": 20,
  "dependency_ids": [
    "pypi_ruamel.std.pathlib",
    "pypi_ruamel.yaml",
    "pypi_ruamel.yaml.split"
  ],
  "documentation_summary": "The HTML text describes \"ryd,\" a Python package available on PyPI, released on November 21, 2023, with version 0.9.2. Ryd, pronounced like \"write,\" is a preprocessor for text-based documents that leverages YAML files/streams' multi-document capabilities. It allows for a clear separation between document text and referenced programs, enabling the running and syntax checking of program parts within documents. Ryd supports various text formats like reStructuredText, LaTeX, and Markdown, and can include the output of programs directly in the document. It uses a YAML configuration metadata for document processing instructions, including postprocessing options like PDF and HTML conversion. The package is licensed under the MIT License, developed by Anthon van der Neut, and requires Python 3 or higher.",
  "embedding": [
    -0.010552242398262024,
    0.014254036359488964,
    -0.012495329603552818,
    -0.013608704321086407,
    0.01707647740840912,
    0.015417052432894707,
    -0.0020920103415846825,
    -0.050577010959386826,
    -0.025742365047335625,
    -0.003618468763306737,
    0.016239672899246216,
    0.004960546735674143,
    -0.0207357220351696,
    0.022849008440971375,
    -0.019274860620498657,
    0.010233121924102306,
    0.00900628138333559,
    0.010686981491744518,
    0.029699455946683884,
    -0.010077107697725296,
    0.023118486627936363,
    -0.0077865333296358585,
    -0.0342380553483963,
    -0.021771090105175972,
    -0.022678811103105545,
    0.016608433797955513,
    0.030522076413035393,
    -0.008729711174964905,
    0.018196944147348404,
    0.006963912397623062,
    0.020537158474326134,
    -0.01504829153418541,
    0.005588149651885033,
    -0.005846991669386625,
    -0.004722979385405779,
    -0.016622617840766907,
    0.02172854170203209,
    -0.011566335335373878,
    0.023260317742824554,
    -0.012105293571949005,
    0.01065861526876688,
    -0.01339595764875412,
    0.010247305035591125,
    -0.018622437492012978,
    -0.01897701621055603,
    -0.006453319918364286,
    0.024026207625865936,
    -0.05227898433804512,
    0.005620061885565519,
    0.01537450309842825,
    0.03667755052447319,
    0.00654196459800005,
    0.0005996800609864295,
    -0.022466063499450684,
    0.009176479652523994,
    -0.008587880060076714,
    -0.008963732048869133,
    0.0405069924890995,
    -0.006722799502313137,
    -0.01416893769055605,
    0.0016922235954552889,
    -0.002258661901578307,
    -0.021303048357367516,
    0.027600353583693504,
    0.03474864736199379,
    -0.001783527433872223,
    -0.003102557733654976,
    0.02389855869114399,
    -0.009580697864294052,
    -0.014679529704153538,
    0.031259600073099136,
    0.01399874035269022,
    -0.00579380476847291,
    0.0009777488885447383,
    0.031174499541521072,
    -0.006758257281035185,
    -0.013339225202798843,
    -0.007552511990070343,
    0.01334631722420454,
    -0.018267860636115074,
    0.0026664268225431442,
    -0.017019744962453842,
    0.006315034814178944,
    0.038719918578863144,
    0.02104775235056877,
    0.0035652820952236652,
    -0.0031061035115271807,
    0.02558634988963604,
    -0.02331705018877983,
    -0.011516693979501724,
    0.014934826642274857,
    0.04901686683297157,
    0.009722528979182243,
    0.04830770939588547,
    -0.011318130418658257,
    0.00852405559271574,
    -0.003583010984584689,
    0.02011166512966156,
    -0.01065861526876688,
    -0.02855062298476696,
    -0.001217975514009595,
    0.022125668823719025,
    -0.015076657757163048,
    -0.013559063896536827,
    -0.03463518247008324,
    0.001163902343250811,
    0.008942457847297192,
    0.006013643462210894,
    0.03199712187051773,
    0.0046059684827923775,
    -0.013927824795246124,
    0.05644882097840309,
    0.0063504925929009914,
    -0.03372746333479881,
    0.01907629705965519,
    -0.030124949291348457,
    0.05071884021162987,
    -0.0005788486450910568,
    -0.04022333025932312,
    0.012814450077712536,
    -0.02138814702630043,
    0.02348724752664566,
    0.009715437889099121,
    -0.019430875778198242,
    0.031004302203655243,
    -0.012977555394172668,
    0.0021150580141693354,
    -0.02442333474755287,
    0.006602242588996887,
    -0.015643982216715813,
    0.015445418655872345,
    -0.005393131636083126,
    0.014977375976741314,
    -0.004644972272217274,
    -0.018097661435604095,
    0.02348724752664566,
    -0.0313446968793869,
    0.022466063499450684,
    -0.03460681438446045,
    -0.027146494016051292,
    0.02944415993988514,
    0.00957360677421093,
    -0.033387064933776855,
    -0.017743084579706192,
    -0.011637250892817974,
    0.022154035046696663,
    0.0033472166396677494,
    0.008531147614121437,
    -0.003061781171709299,
    -0.015799997374415398,
    0.0006315921200439334,
    -0.0177289005368948,
    -0.01987055316567421,
    -0.004747799597680569,
    -0.024196404963731766,
    0.028196044266223907,
    -0.0011922685662284493,
    -0.0025423243641853333,
    -0.005066920071840286,
    0.022749725729227066,
    0.019090481102466583,
    0.028493890538811684,
    -0.014792995527386665,
    -0.008793534711003304,
    -0.0012188619002699852,
    0.02406875602900982,
    0.017501970753073692,
    -0.019062114879488945,
    -0.021600892767310143,
    -0.018863551318645477,
    0.00869425293058157,
    0.02438078448176384,
    -0.051881857216358185,
    0.010772080160677433,
    0.002299438463523984,
    0.005318670533597469,
    0.020721539855003357,
    0.004946363624185324,
    -0.01921812817454338,
    0.003079510061070323,
    0.012807358056306839,
    0.0026061483658850193,
    -0.01611202582716942,
    0.05454828217625618,
    -0.01416893769055605,
    -0.031117767095565796,
    -0.0016416962025687099,
    0.013608704321086407,
    -0.0015663483645766973,
    0.009410500526428223,
    0.0075950613245368,
    0.047087959945201874,
    0.011786173097789288,
    -0.01839550770819187,
    -0.5700479745864868,
    -0.023203585296869278,
    -0.007637610659003258,
    -0.038180962204933167,
    -0.009289944544434547,
    0.006676704157143831,
    0.001756934099830687,
    0.022395148873329163,
    -0.00807728711515665,
    0.036422256380319595,
    -0.0022923469077795744,
    -0.005456955637782812,
    0.005807987879961729,
    -0.008424773812294006,
    -0.01832459308207035,
    -0.01659425161778927,
    0.011935096234083176,
    -0.02025349624454975,
    -0.01979963667690754,
    0.005683885887265205,
    -0.034011125564575195,
    0.045953311026096344,
    -0.01962943933904171,
    0.00012642922229133546,
    -0.012651343829929829,
    -0.01310520339757204,
    0.0021256953477859497,
    -0.004485412035137415,
    0.02500484138727188,
    0.017516154795885086,
    -0.051910221576690674,
    -0.0014254036359488964,
    0.010282762348651886,
    -0.012495329603552818,
    0.05562619864940643,
    -0.003403949085623026,
    0.0015229126438498497,
    0.026465702801942825,
    0.005212296731770039,
    0.021161217242479324,
    -0.004747799597680569,
    0.0043045771308243275,
    0.0024980022571980953,
    0.0020920103415846825,
    0.014005832374095917,
    -0.006137745454907417,
    0.03148652985692024,
    0.006229935679584742,
    -0.0006635041208937764,
    -0.0014519969699904323,
    -0.01728922501206398,
    0.012084019370377064,
    0.029160495847463608,
    -0.028394607827067375,
    0.013339225202798843,
    0.0008483279380016029,
    0.0237567275762558,
    -0.004063464235514402,
    -0.009871452115476131,
    -0.004751345608383417,
    -0.008360949344933033,
    0.046236973255872726,
    0.013750535435974598,
    -0.011339405551552773,
    -0.011077017523348331,
    0.012381864711642265,
    -0.005644882097840309,
    0.0031043305061757565,
    -0.022267499938607216,
    -0.0011949279578402638,
    0.0029784555081278086,
    0.003932270221412182,
    0.007821991108357906,
    -0.039343979209661484,
    0.009970733895897865,
    0.051087602972984314,
    0.029359059408307076,
    0.04873320460319519,
    0.013282492756843567,
    0.04036516323685646,
    -0.0040031857788562775,
    0.000930767331738025,
    -0.03653572127223015,
    -0.01416893769055605,
    0.042407531291246414,
    -0.005354128312319517,
    -0.00731849018484354,
    0.0010734850075095892,
    0.016282223165035248,
    -0.015643982216715813,
    -0.019955651834607124,
    0.02647988684475422,
    -0.017516154795885086,
    -0.03358563035726547,
    0.016140392050147057,
    0.01801256276667118,
    -0.01866498775780201,
    0.018721720203757286,
    0.022636260837316513,
    -0.012041470035910606,
    -0.0070702857337892056,
    0.007031282410025597,
    -0.0009325402206741273,
    0.01811184547841549,
    -0.003061781171709299,
    0.025217588990926743,
    -0.02889101766049862,
    0.007361039984971285,
    -0.004176929127424955,
    -0.0037443439941853285,
    -0.001656765816733241,
    -0.029472526162862778,
    -0.022565346211194992,
    -0.012800266966223717,
    -0.017005562782287598,
    -0.040960852056741714,
    0.036138590425252914,
    0.007417772430926561,
    0.01787073165178299,
    -0.006740528158843517,
    0.01567234843969345,
    -0.04149981215596199,
    -0.015402869321405888,
    0.02228168211877346,
    0.01663680002093315,
    0.008793534711003304,
    0.03860645368695259,
    -0.026465702801942825,
    -0.013459782116115093,
    0.024196404963731766,
    -0.003551098983734846,
    0.00547468475997448,
    0.03735833987593651,
    -0.02500484138727188,
    0.013580338098108768,
    0.022253315895795822,
    -0.00835385825484991,
    -0.005290304310619831,
    -0.012396047823131084,
    -0.0221824012696743,
    -0.010041649453341961,
    0.026011843234300613,
    0.008623337373137474,
    -0.02751525491476059,
    -0.01022602990269661,
    -0.013254126533865929,
    -0.008602063171565533,
    -0.012268399819731712,
    0.0014590885257348418,
    0.02372836135327816,
    -0.015729080885648727,
    0.003450044197961688,
    -0.03923051431775093,
    0.0033064400777220726,
    -0.0261678583920002,
    -0.02662171795964241,
    -0.015799997374415398,
    -0.004506686702370644,
    -0.0025015480350703,
    0.0030263233929872513,
    0.009070105850696564,
    0.014679529704153538,
    -0.008708436042070389,
    0.031628359109163284,
    -0.031798556447029114,
    -0.013856909237802029,
    -0.021430695429444313,
    0.03891848400235176,
    0.0016532200388610363,
    -0.02317521907389164,
    0.005244208965450525,
    0.007524145767092705,
    0.006783077493309975,
    0.0030546896159648895,
    -0.004403858911246061,
    0.014778812415897846,
    -0.010048741474747658,
    0.015487967990338802,
    -0.03350052982568741,
    -0.022366780787706375,
    -0.008254576474428177,
    0.03395439311861992,
    -0.020537158474326134,
    -0.03222405165433884,
    0.005995914340019226,
    0.019232312217354774,
    -0.0118783637881279,
    0.018367141485214233,
    0.023997841402888298,
    0.0038400799967348576,
    -1.7631946320761926e-05,
    0.024224771186709404,
    -0.014608614146709442,
    0.021572526544332504,
    -0.014402959495782852,
    -0.0017356594325974584,
    0.006623517256230116,
    -0.0004184020799584687,
    -8.238398731919006e-05,
    0.017998380586504936,
    0.006995824631303549,
    -0.009396317414939404,
    -0.00945304986089468,
    0.0026912472676485777,
    -0.023260317742824554,
    -0.011197574436664581,
    0.036932848393917084,
    -0.0031787920743227005,
    0.013112295418977737,
    0.009219028986990452,
    0.016934646293520927,
    -0.027940748259425163,
    -0.032564446330070496,
    0.012240033596754074,
    -0.005829262547194958,
    0.037244874984025955,
    -0.014268219470977783,
    0.013254126533865929,
    -0.03188365697860718,
    -0.004503140691667795,
    -0.006939091719686985,
    -0.0006493210094049573,
    0.033358700573444366,
    -0.005534962750971317,
    0.017998380586504936,
    -0.0019005382200703025,
    -0.008495689369738102,
    -0.0006058851722627878,
    -0.014254036359488964,
    -0.03781219944357872,
    0.009992009028792381,
    0.024607714265584946,
    0.012225850485265255,
    -0.005088194739073515,
    -0.0004527518176473677,
    0.0030777372885495424,
    0.01960107311606407,
    -0.009034647606313229,
    0.027770550921559334,
    -0.035202506929636,
    -0.004957000724971294,
    -0.0008297125459648669,
    0.033216867595911026,
    -0.017785632982850075,
    0.010587699711322784,
    0.013282492756843567,
    0.02341633290052414,
    0.0151901226490736,
    -0.007201479747891426,
    0.023430515080690384,
    -0.024366602301597595,
    0.04620860889554024,
    -0.0037585271056741476,
    -0.015729080885648727,
    -0.005868266336619854,
    0.010296945460140705,
    0.040790654718875885,
    -0.0029181770514696836,
    0.02645152062177658,
    0.007637610659003258,
    0.0016487877583131194,
    0.0027036573737859726,
    0.029983118176460266,
    0.02655080147087574,
    0.01808347925543785,
    -0.024962292984128,
    0.0020051386673003435,
    -0.04535762220621109,
    -0.0011248987866565585,
    -0.006201569456607103,
    -0.008566604927182198,
    -0.02913212962448597,
    -0.021373962983489037,
    -0.020948469638824463,
    -0.0024625444784760475,
    0.02049461007118225,
    -0.006240573246032,
    0.01835295930504799,
    -0.017232492566108704,
    0.01339595764875412,
    -0.018438057973980904,
    0.006811443716287613,
    0.03199712187051773,
    0.0011240122839808464,
    0.0034837289713323116,
    -0.0034890477545559406,
    -0.025387786328792572,
    0.0063504925929009914,
    0.02379927784204483,
    0.038549721240997314,
    0.013176118955016136,
    0.010041649453341961,
    0.014863911084830761,
    0.025572167709469795,
    0.004336489364504814,
    -0.01503410842269659,
    0.01002037525177002,
    -0.019203945994377136,
    0.003377355635166168,
    -0.003366718301549554,
    0.00472652493044734,
    0.018126027658581734,
    -0.012084019370377064,
    -0.013403049670159817,
    0.049158696085214615,
    -0.00848859827965498,
    0.00924739520996809,
    -0.005527871195226908,
    -0.014395867474377155,
    0.0057618930004537106,
    0.004967638291418552,
    -0.0008509872714057565,
    -0.03174182400107384,
    -0.012488237582147121,
    0.015814179554581642,
    0.012474054470658302,
    0.02266462706029415,
    -0.014360410161316395,
    0.01472207996994257,
    0.008651703596115112,
    -0.003914541564881802,
    -0.01663680002093315,
    0.0006196250906214118,
    0.02544451877474785,
    0.029642723500728607,
    0.029812920838594437,
    -0.005754801444709301,
    -0.0032603449653834105,
    -0.014963192865252495,
    -0.007041919510811567,
    -0.02362907864153385,
    -0.030181681737303734,
    0.00028454887797124684,
    0.030351879075169563,
    0.009254486300051212,
    0.002964272163808346,
    0.017331773415207863,
    0.0019767724443227053,
    -0.000244215625571087,
    -0.007247574627399445,
    0.00502791628241539,
    -0.005176838953047991,
    0.004403858911246061,
    -0.0036911573261022568,
    0.013920732773840427,
    0.017473604530096054,
    0.00760215288028121,
    0.0044003133662045,
    0.04087575525045395,
    -0.006428499706089497,
    0.016310589388012886,
    -0.0017994834342971444,
    -0.005113014951348305,
    -0.017090661451220512,
    0.0057512554340064526,
    0.011325222440063953,
    0.012693893164396286,
    0.0037230693269521,
    -0.008899908512830734,
    -0.002632741816341877,
    0.04686103016138077,
    0.0060384636744856834,
    -0.003308212850242853,
    -0.00016066816169768572,
    0.01755870319902897,
    0.008105653338134289,
    -0.00020897942886222154,
    0.007474504876881838,
    -0.010339494794607162,
    -0.002285255352035165,
    -0.03006821684539318,
    0.002760389819741249,
    -0.005378948524594307,
    -0.04618024080991745,
    0.021927105262875557,
    0.013856909237802029,
    -0.031940389424562454,
    -0.014807178638875484,
    0.009197753854095936,
    -0.008992098271846771,
    0.014374593272805214,
    -0.021856188774108887,
    -0.017643801867961884,
    -0.010630249045789242,
    0.000616079312749207,
    -0.023997841402888298,
    0.019133029505610466,
    0.0006138632306829095,
    -0.001181631232611835,
    0.01470789685845375,
    -0.005666156765073538,
    0.010438776575028896,
    -0.033869292587041855,
    0.027813099324703217,
    0.008417682722210884,
    -0.010736622847616673,
    -0.04246426373720169,
    -0.012935006059706211,
    -0.00686108460649848,
    0.012878273613750935,
    -0.005836354102939367,
    -0.013466873206198215,
    0.01611202582716942,
    -0.027742184698581696,
    -0.005105923395603895,
    -0.015629800036549568,
    0.015019925311207771,
    -0.023685811087489128,
    -0.008403499610722065,
    -0.009438866749405861,
    0.0015867366455495358,
    -0.01642405427992344,
    -0.013906549662351608,
    0.03165672719478607,
    0.01718994230031967,
    0.025600533932447433,
    0.00010216279042651877,
    -0.056080061942338943,
    0.025742365047335625,
    0.010481325909495354,
    0.0022019294556230307,
    -0.012225850485265255,
    -0.00440740492194891,
    -0.016934646293520927,
    0.003925178665667772,
    0.010183480568230152,
    -0.013147752732038498,
    -0.00787163246423006,
    0.024409150704741478,
    -0.003705340437591076,
    -0.005591695196926594,
    0.01432495191693306,
    -0.002021094784140587,
    -0.009502691216766834,
    0.02331705018877983,
    0.0005699842004105449,
    -0.00410601356998086,
    0.02179945632815361,
    0.0016647438751533628,
    -0.009715437889099121,
    -0.028224410489201546,
    0.031628359109163284,
    0.021714357659220695,
    -0.008800626732409,
    0.020920103415846825,
    -0.03219568356871605,
    0.003645061980932951,
    0.013147752732038498,
    0.004332943353801966,
    0.02944415993988514,
    0.0023845371324568987,
    -0.009041739627718925,
    -0.02899029850959778,
    0.018891917541623116,
    0.03245098143815994,
    0.012183301150798798,
    -0.015558883547782898,
    -0.02575654722750187,
    -0.021998019888997078,
    -0.00881480984389782,
    -0.012878273613750935,
    -0.008169477805495262,
    -0.02035277895629406,
    0.004506686702370644,
    -0.005871811881661415,
    -0.005432135425508022,
    -0.027472704648971558,
    0.004811623599380255,
    -0.011438687331974506,
    -0.023770909756422043,
    -0.005694522988051176,
    -0.006283122580498457,
    -0.009226120077073574,
    0.021232131868600845,
    -0.005495959427207708,
    0.001606238423846662,
    -0.0077865333296358585,
    -0.008531147614121437,
    -0.014424233697354794,
    -0.006506506819278002,
    0.002801166381686926,
    0.009992009028792381,
    0.012247124686837196,
    0.009431775659322739,
    0.03344379737973213,
    0.01911884732544422,
    0.003203612519428134,
    0.020650623366236687,
    0.00865879561752081,
    -0.005478230305016041,
    -0.019927285611629486,
    -0.026678450405597687,
    -0.02201220393180847,
    -0.006864630617201328,
    -0.0015096159186214209,
    0.030834104865789413,
    -0.004457045812159777,
    -0.03557126596570015,
    0.0034145864192396402,
    0.014055472798645496,
    0.026536619290709496,
    0.0007641156553290784,
    0.016197124496102333,
    -0.020267680287361145,
    -0.0127789918333292,
    0.010835904628038406,
    -0.024664446711540222,
    -0.0071199266240000725,
    -0.03341543301939964,
    -0.02655080147087574,
    0.026366421952843666,
    -0.008892816491425037,
    0.034011125564575195,
    0.0063646757043898106,
    -0.0038613546639680862,
    0.00881480984389782,
    0.004439316689968109,
    0.03287647292017937,
    0.014977375976741314,
    -0.003786893328651786,
    0.006283122580498457,
    -0.021998019888997078,
    -0.011296856217086315,
    0.0209768358618021,
    0.032082218676805496,
    -0.00136867118999362,
    0.016509152948856354,
    -0.00532930763438344,
    -0.004184020683169365,
    0.027543621137738228,
    -0.013949098996818066,
    -0.01114084105938673,
    0.03358563035726547,
    -0.021189583465456963,
    -0.017246674746274948,
    -0.03040861152112484,
    -0.02066480740904808,
    -0.03174182400107384,
    -0.006946183275431395,
    -0.001113374950364232,
    0.015346136875450611,
    0.005481776315718889,
    -0.02213985100388527,
    -0.015147573314607143,
    -0.013282492756843567,
    -0.02621040679514408,
    0.021912921220064163,
    -0.01955852285027504,
    0.007970914244651794,
    0.039173781871795654,
    -0.0023561709094792604,
    -0.018707536160945892,
    -0.01791328191757202,
    -0.016679350286722183,
    -0.021189583465456963,
    0.0424358993768692,
    0.017019744962453842,
    -0.01755870319902897,
    -0.008843176066875458,
    -0.010913911275565624,
    0.0008682729094289243,
    -0.027628719806671143,
    -0.02628132328391075,
    0.02245188131928444,
    0.02469281293451786,
    0.00025529618142172694,
    -0.031146133318543434,
    -0.017005562782287598,
    0.011495419777929783,
    0.006910725496709347,
    -0.035003941506147385,
    -0.006868176162242889,
    -0.006786623504012823,
    -0.0019927285611629486,
    -0.02864990383386612,
    0.04132961481809616,
    -0.0034695458598434925,
    0.00715538440272212,
    0.024749545380473137,
    0.011516693979501724,
    -0.021331414580345154,
    -0.026579169556498528,
    -0.010545150376856327,
    0.004549236036837101,
    0.017246674746274948,
    0.038039129227399826,
    0.007616335991770029,
    -0.011637250892817974,
    0.03222405165433884,
    -0.02286319062113762,
    -0.004652063827961683,
    0.0020335048902779818,
    -0.023742543533444405,
    0.025529617443680763,
    -0.012091110460460186,
    0.024650264531373978,
    -0.020054932683706284,
    -0.012729351408779621,
    -0.016750264912843704,
    0.009672888554632664,
    -0.022891556844115257,
    0.027770550921559334,
    -0.026054393500089645,
    -0.002716067712754011,
    0.01753033697605133,
    -0.04541435465216637,
    -0.001962589332833886,
    0.012573336251080036,
    -0.007517054211348295,
    -0.01866498775780201,
    0.0018810364417731762,
    0.011899638921022415,
    0.024636080488562584,
    -0.024877194315195084,
    -0.04331525042653084,
    -0.012552062049508095,
    -0.0025033208075910807,
    0.009509782306849957,
    -0.010871361941099167,
    0.017828183248639107,
    0.014849727973341942,
    0.03585492819547653,
    -0.026437336578965187,
    0.003200066741555929,
    -0.014736263081431389,
    -0.012452780269086361,
    -0.013466873206198215,
    0.02179945632815361,
    -0.0050350078381598,
    -0.004676884040236473,
    0.02672100067138672,
    -0.004230116028338671,
    -0.02575654722750187,
    0.0032461618538945913,
    -0.020820820704102516,
    0.022948289290070534,
    0.0068823592737317085,
    -0.00655969325453043,
    -0.010750805959105492,
    -0.003499685088172555,
    0.008750985376536846,
    -0.017927464097738266,
    -0.027713818475604057,
    0.02799748070538044,
    0.011942188255488873,
    0.015161756426095963,
    0.011885454878211021,
    -0.004949909169226885,
    0.03006821684539318,
    0.022778091952204704,
    0.013254126533865929,
    -0.006034918129444122,
    -0.025955110788345337,
    -0.02421058714389801,
    0.00144224613904953,
    0.006428499706089497,
    0.0033188501838594675,
    0.019671989604830742,
    0.0007202366250567138,
    0.0060491012409329414,
    -0.01625385694205761,
    0.026664268225431442,
    0.014381684362888336,
    -0.0030919204000383615,
    -0.0070064617320895195,
    0.021260498091578484,
    -0.016835365444421768,
    -0.00349613931030035,
    -0.010374953038990498,
    -0.018168577924370766,
    0.005666156765073538,
    -0.0036521535366773605,
    -0.03247934579849243,
    -0.03673428297042847,
    -0.0235156137496233,
    0.05375402793288231,
    0.03880501911044121,
    -0.02565726637840271,
    -0.023288683965802193,
    0.003226659959182143,
    -0.0395425409078598,
    -0.007729800883680582,
    -0.009793445467948914,
    0.035174138844013214,
    0.013183210976421833,
    0.005846991669386625,
    0.012162026017904282,
    0.017714718356728554,
    -0.0015362092526629567,
    0.05097413808107376,
    -0.008495689369738102,
    0.0012055652914568782,
    -0.0020866915583610535,
    0.00623348169028759,
    -0.0034748646430671215,
    -0.022224949672818184,
    -0.02510412409901619,
    -5.856077768839896e-05,
    -0.01784236542880535,
    -0.0052087511867284775,
    0.030295146629214287,
    0.030522076413035393,
    -0.0053966776467859745,
    -0.013211577199399471,
    -0.010999009944498539,
    -0.002613239921629429,
    0.015899278223514557,
    0.008417682722210884,
    0.020466243848204613,
    -0.015331953763961792,
    -0.016140392050147057,
    0.02534523792564869,
    0.021118666976690292,
    0.005534962750971317,
    0.0025582804810255766,
    0.027387605980038643,
    -0.01594182848930359,
    -0.010084198787808418,
    -0.007453230209648609,
    0.007311398629099131,
    -0.012481146492064,
    -0.027501070871949196,
    0.020239314064383507,
    -0.020026566460728645,
    -0.010304037481546402,
    0.020962651818990707,
    0.012750625610351562,
    -0.017657985910773277,
    0.00334898941218853,
    0.012509512715041637,
    -0.04827934503555298,
    -0.014112205244600773,
    0.010665707290172577,
    -0.013991649262607098,
    0.020962651818990707,
    -0.007850357331335545,
    0.06580968201160431,
    -0.014963192865252495,
    -0.001136422622948885,
    -0.00824748445302248,
    -0.0064036790281534195,
    -0.0016266267048195004,
    -0.004137925338000059,
    0.010424593463540077,
    -0.011906730011105537,
    0.012438597157597542,
    -0.02021094784140587,
    0.015658166259527206,
    0.012091110460460186,
    0.0002634958073031157,
    -0.0019218128873035312,
    -0.02276390977203846,
    0.005520779639482498,
    -0.009878544136881828,
    -0.003412813413888216,
    -0.026267139241099358,
    0.0259267445653677,
    0.006616425700485706,
    -0.00775816710665822,
    0.01050260104238987,
    0.18222473561763763,
    0.018849367275834084,
    0.03219568356871605,
    0.030947569757699966,
    -0.0030263233929872513,
    0.018849367275834084,
    0.011835814453661442,
    -0.0016266267048195004,
    -0.01738850586116314,
    0.03216731920838356,
    0.011176299303770065,
    0.0054498640820384026,
    -0.004506686702370644,
    0.003907450009137392,
    0.0043152146972715855,
    -0.00197145389392972,
    -0.021813640370965004,
    -0.0436556451022625,
    -0.03236588090658188,
    0.0007468299590982497,
    0.027302507311105728,
    -0.009438866749405861,
    -0.04201040416955948,
    -0.00985017791390419,
    0.03469191491603851,
    -0.00743904709815979,
    -0.005942727439105511,
    -0.0013030741829425097,
    0.018579889088869095,
    -0.0173601396381855,
    0.00020033658074680716,
    -0.00669797882437706,
    -0.014502241276204586,
    0.0019129484426230192,
    -0.01791328191757202,
    0.0040670097805559635,
    0.0054356809705495834,
    -0.000798686989583075,
    0.02235259860754013,
    0.0130839291960001,
    0.015161756426095963,
    -0.04328688606619835,
    -0.009750895202159882,
    -0.03358563035726547,
    -0.008793534711003304,
    0.00885026715695858,
    -0.03443661704659462,
    -0.010254396125674248,
    -0.01594182848930359,
    -0.0017560477135702968,
    -0.014438416808843613,
    -0.00986436102539301,
    0.031004302203655243,
    -0.0177289005368948,
    0.020551342517137527,
    -0.026593351736664772,
    -0.021132851019501686,
    0.038067497313022614,
    -0.0015229126438498497,
    0.014906460419297218,
    -0.026806099340319633,
    0.040138233453035355,
    -0.010105473920702934,
    -0.008325492031872272,
    -0.054917044937610626,
    0.03653572127223015,
    -0.012367681600153446,
    0.0024660902563482523,
    0.006910725496709347,
    0.005162655841559172,
    0.0016824727645143867,
    -0.014551881700754166,
    -0.011183390393853188,
    -0.020537158474326134,
    -0.01231094915419817,
    -0.0207357220351696,
    0.02669263444840908,
    0.0412445142865181,
    0.031287964433431625,
    0.061838407069444656,
    -0.025543801486492157,
    0.008438956923782825,
    0.014977375976741314,
    -0.013764718547463417,
    0.00228170957416296,
    -0.03313177078962326,
    -0.014225670136511326,
    -0.005428589414805174,
    -0.013147752732038498,
    -0.03006821684539318,
    -0.0261678583920002,
    -0.022083118557929993,
    -0.021373962983489037,
    -0.005077557172626257,
    0.020579708740115166,
    -0.013481056317687035,
    -0.00623348169028759,
    0.001241909572854638,
    0.013629979453980923,
    -0.012275490909814835,
    -0.04782548546791077,
    0.04796731472015381,
    0.017275040969252586,
    0.011147933080792427,
    -0.020154215395450592,
    0.03123123198747635,
    -0.012105293571949005,
    0.00743904709815979,
    0.020026566460728645,
    0.0013571473537012935,
    -0.014381684362888336,
    -0.015927644446492195,
    0.011644341982901096,
    -0.012828633189201355,
    0.009800536558032036,
    0.01034658681601286,
    0.01234640646725893,
    -0.0059994603507220745,
    -0.002615012926980853,
    0.0031734732910990715,
    0.012495329603552818,
    0.0009316537762060761,
    -0.009219028986990452,
    -0.018579889088869095,
    -0.02679191529750824,
    -0.010850087739527225,
    -0.0297845546156168,
    0.018608255311846733,
    -0.012091110460460186,
    -0.008843176066875458,
    -0.008396407589316368,
    0.001820758101530373,
    0.02758616954088211,
    0.005421497859060764,
    -0.011183390393853188,
    0.007836174219846725,
    0.00019867450464516878,
    -0.012325132265686989,
    0.005144927185028791,
    -0.011509602889418602,
    -0.021288864314556122,
    0.006751165725290775,
    0.026947930455207825,
    -0.0016097842017188668,
    0.02170017547905445,
    -0.006091650575399399,
    0.0029820012860000134,
    -0.008311308920383453,
    -0.015005742199718952,
    -0.017133209854364395,
    -0.012552062049508095,
    0.007236937526613474,
    0.016863731667399406,
    -0.01960107311606407,
    -0.0012126568472012877,
    -0.04246426373720169,
    -0.007201479747891426,
    -0.017204126343131065,
    -0.006850447505712509,
    0.002331350464373827,
    -0.04552781954407692,
    -0.0012037924025207758,
    0.0008868883014656603,
    -0.009630339220166206,
    -0.014807178638875484,
    -0.030436977744102478,
    -0.1793881207704544,
    0.01017638947814703,
    0.026749366894364357,
    -0.031429797410964966,
    0.014402959495782852,
    0.010913911275565624,
    0.025302687659859657,
    0.014225670136511326,
    -0.017473604530096054,
    -0.015544700436294079,
    0.00357769220136106,
    -0.0027125219348818064,
    -0.04118778184056282,
    -0.019643623381853104,
    0.005676794331520796,
    0.03801076486706734,
    0.013062654063105583,
    -0.006985187064856291,
    0.015105023980140686,
    0.022097302600741386,
    0.021473245695233345,
    -0.025870012119412422,
    0.025870012119412422,
    -0.020565524697303772,
    -0.013126478530466557,
    -0.03877665102481842,
    -0.013027196750044823,
    0.023600712418556213,
    -0.01718994230031967,
    -0.003974819555878639,
    -0.002021094784140587,
    0.013530697673559189,
    0.014835544861853123,
    0.008743894286453724,
    0.044960495084524155,
    0.009757987223565578,
    0.021912921220064163,
    -0.0042655738070607185,
    -0.009956550784409046,
    0.011771989986300468,
    0.015133390203118324,
    0.012069836258888245,
    0.026593351736664772,
    -0.011913822032511234,
    -0.024848828092217445,
    0.025118306279182434,
    0.0006803465657867491,
    -0.01618294045329094,
    0.022154035046696663,
    -0.014920643530786037,
    0.039826203137636185,
    0.001428063027560711,
    -0.0009883862221613526,
    -0.01721830852329731,
    0.025940928608179092,
    0.014863911084830761,
    -0.0040776473470032215,
    0.03262117877602577,
    -0.0030405065044760704,
    -0.014977375976741314,
    -0.03253607824444771,
    -0.01372216921299696,
    0.006315034814178944,
    0.01718994230031967,
    -0.006669612601399422,
    -0.017927464097738266,
    -0.035486169159412384,
    0.020707355812191963,
    0.0015778722008690238,
    0.008226210251450539,
    0.020239314064383507,
    -0.009353768080472946,
    -0.0016115570906549692,
    0.00029873198946006596,
    -0.010800446383655071,
    0.0012800266267731786,
    -0.03863482177257538,
    0.022508613765239716,
    0.02221076749265194,
    -0.020948469638824463,
    -0.008921182714402676,
    0.03344379737973213,
    0.014197303913533688,
    -0.009055922739207745,
    0.010445868596434593,
    -0.013629979453980923,
    0.00852405559271574,
    -0.014395867474377155,
    -0.0014519969699904323,
    -0.008977915160357952,
    0.01697719655930996,
    -0.023402148857712746,
    0.020820820704102516,
    -0.005410860758274794,
    -0.014005832374095917,
    0.014388776384294033,
    0.000962679332587868,
    0.02104775235056877,
    -0.016764448955655098,
    -0.03298993781208992,
    0.018480606377124786,
    -0.022919923067092896,
    -0.02958599105477333,
    -0.021359780803322792,
    0.02992638573050499,
    0.008545330725610256,
    -0.00960906408727169,
    0.02283482439815998,
    0.044478267431259155,
    -0.013970374129712582,
    -0.0067050703801214695,
    0.02961435727775097,
    0.018367141485214233,
    0.016211306676268578,
    -0.018452240154147148,
    0.02293410710990429,
    0.01656588539481163,
    -0.018877733498811722,
    -0.001756934099830687,
    0.003786893328651786,
    0.047399990260601044,
    0.008006371557712555,
    -0.013750535435974598,
    0.027983298525214195,
    0.0036060584243386984,
    -0.05066210776567459,
    -0.10892637073993683,
    0.0056058787740767,
    0.0016390369273722172,
    -0.006201569456607103,
    -0.0052087511867284775,
    -0.009169387631118298,
    -0.004754891153424978,
    0.02358653023838997,
    0.0023792185820639133,
    0.00869425293058157,
    -0.003946453332901001,
    0.012055653147399426,
    -0.023841826245188713,
    0.020721539855003357,
    -0.013601613231003284,
    -0.007907089777290821,
    -0.007219208404421806,
    -0.029004482552409172,
    -0.02138814702630043,
    0.0233879666775465,
    -0.003932270221412182,
    -0.0022746180184185505,
    -0.013736352324485779,
    0.009992009028792381,
    -0.020338594913482666,
    0.01503410842269659,
    -0.04005313292145729,
    -0.0094672329723835,
    -0.012147842906415462,
    0.008587880060076714,
    0.0008319286862388253,
    -0.019175579771399498,
    0.0034057218581438065,
    -0.004705250263214111,
    0.02093428559601307,
    0.026877013966441154,
    -0.004531506914645433,
    -0.0177289005368948,
    0.023061754181981087,
    -0.03140142932534218,
    0.005971094127744436,
    0.006637700367718935,
    0.0022427060175687075,
    0.0029944113921374083,
    -0.0068929968401789665,
    0.013750535435974598,
    -0.0025299142580479383,
    0.029359059408307076,
    0.013899458572268486,
    -0.02348724752664566,
    -0.021785274147987366,
    -0.007410680875182152,
    0.00036787468707188964,
    -0.004361309576779604,
    0.013693802990019321,
    -0.021671809256076813,
    -0.0009724302217364311,
    0.01115502417087555,
    -0.04357054829597473,
    -0.001966135110706091,
    -0.013800176791846752,
    -0.01215493492782116,
    -0.009353768080472946,
    0.02785564959049225,
    -0.007637610659003258,
    -0.01900538243353367,
    0.0005438340594992042,
    -0.00941759254783392,
    0.014438416808843613,
    -0.026706816628575325,
    -0.03296157345175743,
    0.013048470951616764,
    -0.01811184547841549,
    -0.002974909730255604,
    -0.014693713746964931,
    0.003701794659718871,
    -0.01215493492782116,
    -0.00029629425262100995,
    0.02734505757689476,
    -0.009070105850696564,
    -0.03622369095683098,
    -0.009587789885699749,
    -0.0020069116726517677,
    -0.021232131868600845,
    0.010105473920702934,
    0.031940389424562454,
    0.0005207864451222122,
    -0.00977926142513752,
    0.010374953038990498,
    -0.05420788750052452,
    0.028493890538811684,
    0.009013373404741287,
    0.004336489364504814,
    -0.006814989726990461,
    0.0017099524848163128,
    0.0245935320854187,
    0.0025157311465591192,
    0.00488253915682435,
    -0.029004482552409172,
    0.008226210251450539,
    -0.04742835462093353,
    -0.02517504058778286,
    -0.07709944248199463,
    0.020778272300958633,
    0.01731759123504162,
    -0.03750017285346985,
    0.026678450405597687,
    -0.04711632803082466,
    -0.0038294426631182432,
    -0.005017279181629419,
    0.001916494220495224,
    0.027884015813469887,
    -0.015573066659271717,
    -0.005942727439105511,
    -0.00327630084939301,
    -0.02152997814118862,
    -0.012325132265686989,
    -0.02341633290052414,
    0.04212386906147003,
    0.005205205176025629,
    0.010268579237163067,
    0.013183210976421833,
    -0.0035475532058626413,
    0.008495689369738102,
    0.002368581248447299,
    0.04022333025932312,
    -0.025401970371603966,
    0.012119476683437824,
    -0.03389766067266464,
    0.0151901226490736,
    0.014551881700754166,
    -0.01155215222388506,
    0.002017549006268382,
    -0.033075038343667984,
    0.005595241207629442,
    0.0049179974012076855,
    0.020962651818990707,
    0.028564805164933205,
    -0.006623517256230116,
    0.00655969325453043,
    -0.011268489994108677,
    0.0188068188726902,
    -0.03202548623085022,
    -0.025685632601380348,
    0.005070465616881847,
    -0.024253137409687042,
    -0.005981731228530407,
    0.015317770652472973,
    -0.031259600073099136,
    -0.006545510143041611,
    0.013289584778249264,
    0.01587091200053692,
    0.051711659878492355,
    0.0006604015943594277,
    -0.03406785801053047,
    -0.03602512553334236,
    -0.002519276924431324,
    -0.03673428297042847,
    0.013906549662351608,
    -0.015544700436294079,
    -0.017544521018862724,
    0.015005742199718952,
    0.025061573833227158,
    -0.004091830458492041,
    -0.002299438463523984,
    -0.006066829897463322,
    0.007052557077258825,
    -0.025699814781546593,
    -0.038351159542798996,
    -0.004559873603284359,
    -0.008126928471028805,
    -0.011630158871412277,
    -0.034209687262773514,
    -0.02355816401541233,
    0.012849907390773296,
    0.013303767889738083,
    0.041584908962249756,
    -0.007552511990070343,
    -0.03506067395210266,
    0.015473784878849983,
    -0.023685811087489128,
    0.02989801950752735,
    0.004035098012536764,
    -0.009460141882300377,
    0.010644432157278061,
    0.01355197187513113,
    0.00024488044437021017,
    -0.009084288962185383,
    -0.00869425293058157,
    -0.021856188774108887,
    -0.007187296636402607,
    0.02744433842599392,
    -0.001985637005418539,
    0.0106727983802557,
    -0.00547468475997448,
    -0.019260678440332413,
    0.018721720203757286,
    -0.01711902767419815,
    0.010913911275565624,
    -0.004609514493495226,
    0.007899998687207699,
    0.020381145179271698,
    0.02534523792564869,
    -0.005694522988051176,
    -0.004949909169226885,
    -0.026352237910032272,
    -0.009793445467948914,
    0.035486169159412384,
    -0.017657985910773277,
    -0.02665008418262005,
    0.0109706437215209,
    0.00929703563451767,
    -0.006134199909865856,
    -0.019303226843476295,
    -0.01738850586116314,
    0.03696121275424957,
    -0.011821631342172623,
    0.013417232781648636,
    0.0012844589073210955,
    -0.037216510623693466,
    -0.01186418067663908,
    0.02527432143688202,
    0.006293760146945715,
    0.0057512554340064526,
    0.05440645292401314,
    0.012410230934619904,
    0.011112474836409092,
    0.0031912021804600954,
    0.017615435644984245,
    -0.0017321136547252536,
    0.018920283764600754,
    -0.02049461007118225,
    -0.010892637073993683,
    0.006588059477508068,
    -0.02341633290052414,
    -0.02179945632815361,
    -0.018849367275834084,
    -0.003783347550779581,
    0.004942817613482475,
    0.01594182848930359,
    -0.01728922501206398,
    0.10228867083787918,
    -0.005556237418204546,
    -0.02348724752664566,
    0.018877733498811722,
    0.0032372972927987576,
    0.02307593822479248,
    0.0008235074346885085,
    -0.009460141882300377,
    -0.008821900933980942,
    -0.016452420502901077,
    -0.0027674813754856586,
    0.0010628476738929749,
    -0.007151838857680559,
    0.0016000333707779646,
    -0.018126027658581734,
    0.0024377238005399704,
    -0.008240393362939358,
    0.025288505479693413,
    0.0006289327866397798,
    -0.00426911935210228,
    0.034521717578172684,
    0.0165233351290226,
    0.012268399819731712,
    -0.004659155383706093,
    -0.03605349361896515,
    -0.008722619153559208,
    0.033216867595911026,
    0.018537338823080063,
    0.003847171552479267,
    -0.04008150100708008,
    -0.0006816762615926564,
    0.01804092898964882,
    -0.001264070626348257,
    -0.019898919388651848,
    -0.006914271507412195,
    -0.008396407589316368,
    0.007219208404421806,
    -0.008906999602913857,
    -0.006162566132843494,
    0.03168509155511856,
    0.025061573833227158,
    -0.0219412874430418,
    -0.016580067574977875,
    -0.022466063499450684,
    0.014083839021623135,
    0.006148383021354675,
    0.0009928185027092695,
    -0.00013717736874241382,
    -0.041272882372140884
  ]
}
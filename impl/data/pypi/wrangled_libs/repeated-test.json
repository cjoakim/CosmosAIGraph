{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing"
  ],
  "description": "a quick unittest-compatible framework for repeating a test function over many fixtures\n.. |ut| replace:: unittest\n.. _ut: http://docs.python.org/3/library/unittest.html\n\n.. |tc| replace:: unittest.testcase\n.. _tc: http://docs.python.org/3/library/unittest.html#unittest.testcase\n\n.. |subtests| replace:: subtests\n.. _subtests: https://docs.python.org/3/library/unittest.html#subtests\n\n.. |pyt| replace:: pytest\n.. _pyt: https://docs.pytest.org/en/stable/contents.html\n\n.. |pytest-subtests| replace:: pytest-subtests\n.. _pytest-subtests: https://pypi.org/project/pytest-subtests/\n\n.. _repeated_test:\n\n*************\nrepeated_test\n*************\n\n.. image:: https://badges.gitter.im/epsy/repeated_test.svg\n   :alt: join the chat at https://gitter.im/epsy/repeated_test\n   :target: https://gitter.im/epsy/repeated_test?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n.. image:: https://github.com/epsy/repeated_test/actions/workflows/ci.yml/badge.svg?branch=master\n    :target: https://github.com/epsy/repeated_test/actions/workflows/ci.yml\n.. image:: https://coveralls.io/repos/github/epsy/repeated_test/badge.svg?branch=master\n    :target: https://coveralls.io/github/epsy/repeated_test?branch=master\n\n``repeated_test`` lets you write tests that apply the same function to\nmany sets of parameters.\n\n\n.. _example:\n\nfor instance:\n\n.. code-block:: python\n\n    from repeated_test import fixtures\n\n    class myfixtures(fixtures):\n        def _test(self, expected, *terms):\n            self.assertequal(expected, sum(terms))\n\n        a = 10, 5, 5\n        b = 15, 7, 8\n        c = 42, 1, 1\n\nthe result is unittest-compatible, and provides useful context in the\ntraceback in case of errors:\n\n.. code-block:: console\n\n    $ python -m unittest my_tests\n    ..f\n    ======================================================================\n    fail: test_c (my_tests.myfixtures)\n    ----------------------------------------------------------------------\n    traceback (most recent call last):\n      file \"my_tests.py\", line 9, in myfixtures\n        c = 42, 1, 1\n      file \"my_tests.py\", line 5, in _test\n        self.assertequal(expected, sum(terms))\n    assertionerror: 42 != 2\n\n    ----------------------------------------------------------------------\n    ran 3 tests in 0.002s\n\n    failed (failures=1)\n\n.. _install:\n\nyou can install it using:\n\n.. code-block:: console\n\n    $ pip install --user repeated_test\n\n\n.. _help:\n\nhelp / issues\n=============\n\nyou can get help in the\n`gitter.im chatroom <https://gitter.im/epsy/repeated_test>`_.\n\nif you find any issues or have any requests, use\n`github issues <https://github.com/epsy/repeated_test/issues>`_.\n\n\n.. _reference:\n\nreference\n=========\n\n.. _intro:\n\nintroduction\n------------\n\npython's |ut|_ modules helps in performing various forms of automated testing.\none writes a class deriving from |tc|_ and adds various ``test_xyz`` methods.\ntest runners run these tests, keeping count of successful and failed tests,\nand produces a trace with the causes of these failures.\n\nsometimes it makes sense to have one test be carried out for a large amount\nof different inputs.\nthis module aims to provide an efficient way to do this.\n\nit allows you to write fixtures (inputs) as plain members of a\nclass, and bind a test function to them. this test function is called for each\nfixture as you will see below. the produced class is a |tc|_ subclass, so it is\ncompatible with |ut|_ and other |ut|-compatible test runners.\n\n\n.. _testcase:\n\nbuilding a test case\n--------------------\n\nin order to produce a |tc|_, ``repeated_test`` requires you to:\n\n* subclass ``repeated_test.fixtures``\n* write a ``_test`` method that takes a few parameters, making use of any\n  |tc|_ method it needs\n* assign fixtures directly in the class body, which are then unpacked as\n  arguments to the ``_test`` method (as in ``_test(*args)``)\n\nyou can use any |tc|_ methods in your test function, such as ``assertequal()``\nand so forth.\n\n.. code-block:: python\n\n    from repeated_test import fixtures\n\n    class myfixtures(fixtures):\n        def _test(self, arg1, arg2, arg3):\n            self.assertequal(..., ...)\n\n        ps = 'p1', 'p2', 'p3'\n        # _test(*ps) will be called, ie. _test('p1', p2', 'p3')\n\n        qs = 'q1', 'q2', 'q3'\n        # _test(*qs) will be called, ie. _test('q1', q2', 'q3')\n\nmake sure that your fixture tuples provide the correct amount of arguments\nfor your ``_test`` method, unless it has an ``*args`` parameter.\n\n\n.. _running:\n\nrunning a test case\n-------------------\n\nyou can run a ``repeated_test`` test case like any other |tc|_ class:\n\n.. code-block:: shell\n\n    python -m unittest\n    python -m unittest my_test_module\n    python -m unittest my_test_module.myfixtures\n\n    # to refer to an individual test, prefix the name of the fixture with \"test_\"\n    python -m unittest my_test_module.myfixtures.test_ps\n\nlearn more in the `official unittest docs <https://docs.python.org/3/library/unittest.html#command-line-interface>`_.\n\nyou can also use a |ut|-compatible test runer, like |pyt|_:\n\n.. code-block:: shell\n\n    python -m pytest\n    python -m pytest my_test_module.py\n    python -m pytest my_test_module.py -k myfixtures\n    python -m pytest my_test_module.py -k test_ps\n    python -m pytest my_test_module.py::myfixtures::test_ps\n\nlearn more in the `official pytest docs <https://docs.pytest.org/en/stable/how-to/usage.html>`_\n\n.. _options:\n\npassing in keyword arguments\n----------------------------\n\nyou can pass in keyword arguments using ``repeated_test.options``:\n\n.. code-block:: python\n\n    import sys\n\n    from repeated_test import fixtures, options\n\n    class myfixtures(fixtures):\n        def _test(self, arg1, arg2, *, min_version=none, max_version=none):\n            ...\n\n        not_using_versions = \"abc\", \"abc\"\n        # -> _test(\"abc\", \"abc\")\n\n        using_max_version = \"abc\", \"abc\", options(max_version=(3, 9))\n        # -> _test(\"abc\", \"abc\", max_version=(3, 9))\n\n        using_both_versions = \"abc\", \"abc\", options(min_version=(3, 8), max_version=(3, 9))\n        # -> _test(\"abc\", \"abc\", min_version=(3, 8), max_version=(3, 9))\n\n        using_both_versions_2 = \"abc\", \"abc\", options(min_version=(3, 8)), options(max_version=(3, 9))\n        # same, but by specifying options separately\n\nthis can be useful if you have multiple options that are only used some of the time.\n\n.. _manage-options:\n\npassing in keyword arguments to multiple tests\n----------------------------------------------\n\nif you are re-using the same keyword arguments across multiple tests,\nthere are several ways to do so:\n\n- using ``@repeated_test.with_options(...)`` lets you\n  specify options for every fixture within a class.\n- using ``with repeated_test.options(...)`` lets you\n  specify options for every fixture within the ``with`` block.\n- you can continue using ``options()`` on individual fixtures,\n  and override values provided by surrounding code.\n- you can use ``repeated_test.skip_option`` to stop supplying any argument.\n  the argument won't be supplied to the function,\n  which is useful for using a default value,\n  or for removing common options from a class whose test function doesn't handle\n\n.. code-block:: python\n\n    from repeated_test import fixtures, options, with_options\n\n    @with_options(kwarg1=\"value from decorator\")\n    class myfixtures(fixtures):\n        def _test(self, arg1, arg2, *, kwarg1, kwarg2=\"default\"):\n            ...\n\n        using_provided_values = \"arg1\", \"arg2\"\n        # -> _test(\"arg1\", \"arg2\", kwarg1=\"value from decorator\", kwarg2=\"default\")\n\n        overriding_provided_values = \"arg1\", \"arg2\", options(kwarg1=\"kwarg1\", kwarg2=\"kwarg2\")\n        # -> _test(\"arg1\", \"arg2\", kwarg1=\"kwarg1\", kwarg2=\"kwarg2\")\n\n        with options(kwarg1=\"value from context manager\"):\n            using_value_from_context_manager = \"arg1\", \"arg2\"\n            # -> _test(\"arg1\", \"arg2\", kwarg1=\"value from context manager\", kwarg2=\"default\")\n\n            overriding_value_from_context_manager = \"arg1\", \"arg2\", options(kwarg1=\"kwarg1\")\n            # -> _test(\"arg1\", \"arg2\", kwarg1=\"kwarg1\", kwarg2=\"default\")\n\n        with options(kwarg2=\"value from context manager\"):\n            removing_value = \"arg1\", \"arg2\"\n            # -> _test(\"arg1\", \"arg2\", kwarg1=\"value from decorator\", kwarg2=\"value from context manager\")\n            removing_value = \"arg1\", \"arg2\", options(kwarg2=skip_option)\n            # -> _test(\"arg1\", \"arg2\", kwarg1=\"value from decorator\", kwarg2=\"default\")\n\n.. _options-matrix:\n\ntesting multiple values for a keyword parameter\n-----------------------------------------------\n\nyou can also use ``@with_options_matrix``\nto provide multiple values for a keyword parameter.\n``repeated_test`` will run every combination\nexcept for parameters that are overridden.\n\n.. code-block:: python\n\n    from repeated_test import fixtures, options, with_options_matrix\n\n\n    @with_options_matrix(\n        spam=[\"spam1\", \"spam2\"],\n        ham=[\"ham1\", \"ham2\"],\n    )\n    class myfixtures(fixtures):\n        def _test(self, arg1, arg2, *, spam, ham):\n            ...\n\n        using_provided_values = \"arg1\", \"arg2\"\n        # -> _test(\"arg1\", \"arg2\", spam=\"spam1\", ham=\"ham1\")\n        # -> _test(\"arg1\", \"arg2\", spam=\"spam1\", ham=\"ham2\")\n        # -> _test(\"arg1\", \"arg2\", spam=\"spam2\", ham=\"ham1\")\n        # -> _test(\"arg1\", \"arg2\", spam=\"spam2\", ham=\"ham2\")\n\n        with options(spam=\"spam\"):\n            overriding_one_value = \"arg1\", \"arg2\"\n            # -> _test(\"arg1\", \"arg2\", spam=\"spam\", ham=\"ham1\")\n            # -> _test(\"arg1\", \"arg2\", spam=\"spam\", ham=\"ham2\")\n\n``repeated_test`` will report each combination using unittest's |subtests|_ feature.\n|pyt| does not have this feature built-in, but the |pytest-subtests|_ plugin adds support.\n\n.. code-block:: console\n\n    ======================================================================\n    fail: test_overriding_one_value (example_options._test) (ham='ham1')\n    ----------------------------------------------------------------------\n    traceback (most recent call last):\n      file \"/home/myself/repeated_test/example_options.py\", line 41, in myfixtures\n        overriding_one_value = \"arg1\", \"arg2\"\n      file \"/home/myself/repeated_test/example_options.py\", line 32, in _test\n        self.fail(\"example failure\")\n    assertionerror: example failure\n\n    ======================================================================\n    fail: test_overriding_one_value (example_options._test) (ham='ham2')\n    ----------------------------------------------------------------------\n    traceback (most recent call last):\n      file \"/home/myself/repeated_test/example_options.py\", line 41, in myfixtures\n        overriding_one_value = \"arg1\", \"arg2\"\n      file \"/home/myself/repeated_test/example_options.py\", line 32, in _test\n        self.fail(\"example failure\")\n    assertionerror: example failure\n\n.. _evaluated:\n\nevaluated test case input\n-------------------------\n\nyou can use ``@evaluated`` to make\na function that can be inserted in a test case tuple.\nwhen running the test,\nthe function will be called,\nand the result will be spliced into the test case tuple:\n\n.. code-block:: python\n\n    from repeated_test import fixtures, evaluated\n\n    class evaluatedfixtures(fixtures):\n        def _test(self, a, b, c):\n            pass\n\n        @evaluated\n        def fully_evaluated(self):\n            return (1 + 1, 2, 3)\n        # -> _test(2, 2, 3)\n\n        @evaluated\n        def _helper():\n            return (1 + 2, 3)\n        partly_evaluated = _helper(), 4\n        # -> _test(3, 3, 4)\n\nthe wrapped function must always return a tuple.\n\nthe wrapped function will also receive options as keyword arguments:\n\n.. code-block:: python\n\n    from repeated_test import fixtures, evaluated, with_options_matrix\n\n    @with_options_matrix(\n        option=[\n            \"option 1\",\n            \"option 2\",\n        ],\n    )\n    class evaluatedfixtureswithoptions(fixtures):\n        def _test(self, a, *, option):\n            pass\n\n        @evaluated\n        def _helper(arg, *, option):\n            return (f\"{arg}-{option}\",)\n\n        using_option_in_evaluated = _helper(\"arg\")\n        # -> _test(\"arg-option 1\", option=\"option 1\")\n        # -> _test(\"arg-option 2\", option=\"option 2\")\n\n.. _named alternative:\n\nnamed alternatives\n------------------\n\nwhen using ``with_options_matrix``,\nsometimes the repr generated by those options is difficult to read.\nthis can be the case with functions,\nwhich can end up showing as something like\n``<function myfunc at 0x7f9f5e506280>``.\n\nyou can use ``namedalternative`` to give them a name:\n\n.. code-block:: python\n\n    from repeated_test import namedalternative\n\n    value1 = namedalternative(\"name for value1\", \"value1\")\n\n    @namedalternative(\"name for func1\")\n    def func1():\n        pass\n\n.. _naming:\n.. _escaping:\n\nnaming and escaping\n-------------------\n\nyou may name your test tuples however you like, though they may not start with\n``test_`` or ``_``. they are copied to the resulting |tc|_ class, and test\nmethods are created for them. their name is that of the tuple, prefixed with\n``test_``.\n\n.. _regular test methods:\n.. _regular:\n\nmembers starting with ``test_`` or ``_`` are directly copied over to the\nresulting |tc|_ class, without being treated as fixtures. you can use this to\ninsert regular tests amongst your fixtures, or constants that you do not wish\nto be treated as tests:\n\n.. code-block:: python\n\n    from repeated_test import fixtures\n\n    class myfixtures(fixtures):\n        def _test(self, arg1, arg2, arg3):\n            self.assertequal(..., ...)\n\n        def test_other(self):\n            self.assertequal(3, 1+2)\n\n        _spam = 'spam, bacon and eggs'\n        # _spam won't be treated as a fixture, so _test(*_spam) won't be called\n\n        ham = _spam, _spam, _spam\n\nyou may even call the test function using ``self._test(...)`` if necessary.\n\n\n.. _separate:\n\nseparating tests and fixtures\n-----------------------------\n\nyou can apply a fixtures class to a different test function using its\n``with_test`` method:\n\n.. code-block:: python\n\n    class myfixtures(fixtures):\n        _test = none\n        ...\n\n    @myfixtures.with_test\n    def other_test(self, arg1, arg2, arg3):\n        self.assertequal(..., ...)\n\nwhile the function appears out of any class, it will be used as a method of\nthe resulting |tc|_ class, so keep in mind that it takes a ``self`` parameter.\n\nyou can reuse a fixture class however many times you like.\n\nif you specify a test function this way, you can set ``_test = none``\nin your fixtures definition. however, it will not be discovered by |ut|_,\nso `regular test methods`_ won't be run.\nomitting ``_test`` completely raises an error in order to prevent accidentally\ndisabling your tests.\n\n\n.. _decorator:\n\nworking with functions as fixtures\n----------------------------------\n\nit can be fairly impractical to use functions in your fixture tuples in this\nscheme. if your fixture tuple is meant to have one function in it, you can\nuse the ``tup`` decorator:\n\n.. code-block:: python\n\n    from repeated_test import fixtures, tup\n\n    class my_tests(fixtures):\n        def _test(self, func, arg1, arg2):\n            self.assertequal(..., ...)\n\n        @tup('arg1', 'arg2')\n        def ham():\n            pass\n        # equivalent to\n        def _ham():\n            pass\n        ham = _ham, 'arg1', 'arg2'\n\n\n.. _non-unittest:\n\nreplacing |tc| with another class\n---------------------------------\n\nyou can replace |tc| with another class using ``withtestclass(cls)``.\n\nfor instance, if you wish to use ``unittest2``:\n\n.. code-block:: python\n\n    import unittest2\n    from repeated_test import withtestclass\n\n    class my_tests(withtestclass(unittest2.testcase)):\n        ...\n",
  "docs_url": null,
  "keywords": "test,testing,unittest,fixtures",
  "license": "mit",
  "name": "repeated-test",
  "package_url": "https://pypi.org/project/repeated-test/",
  "project_url": "https://pypi.org/project/repeated-test/",
  "project_urls": {
    "Homepage": "https://github.com/epsy/repeated_test"
  },
  "release_url": "https://pypi.org/project/repeated-test/2.3.3/",
  "requires_dist": [],
  "requires_python": ">=3.5",
  "summary": "a quick unittest-compatible framework for repeating a test function over many fixtures",
  "version": "2.3.3",
  "releases": [],
  "developers": [
    "kaiser.yann@gmail.com",
    "yann_kaiser"
  ],
  "kwds": "pytest _subtests _pytest my_test_module subtests",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_repeated_test",
  "homepage": "https://github.com/epsy/repeated_test",
  "release_count": 18,
  "dependency_ids": [],
  "documentation_summary": "The HTML text describes \"repeated_test,\" a GitHub project by epsy. It is a quick, unittest-compatible framework designed for applying a single test function across multiple fixtures. This tool allows for efficient testing with various inputs by writing fixtures as class members and binding a test function to them. The framework is compatible with Python's unittest and other similar test runners, facilitating the execution of tests with different parameters or options. The project is open-source, licensed under MIT, and supports various features like passing keyword arguments, testing multiple values for a keyword parameter, and using functions as fixtures. It aims to simplify and streamline the process of automated testing in Python.",
  "embedding": [
    -0.013499966822564602,
    -0.001371868303976953,
    -0.005089160520583391,
    0.0073332274332642555,
    0.0104414913803339,
    0.0018688705749809742,
    0.018365075811743736,
    -0.024965692311525345,
    -0.012461507692933083,
    -0.003862213809043169,
    0.02227707952260971,
    -0.0013976519694551826,
    -0.009410145692527294,
    0.0004083153326064348,
    -0.0006952696130611002,
    -0.008300559595227242,
    0.023770753294229507,
    0.009275003336369991,
    0.001108697266317904,
    -0.006778434384614229,
    0.025819219648838043,
    -0.010327688418328762,
    -0.03490929305553436,
    -0.00883401371538639,
    -0.01061219722032547,
    0.023358214646577835,
    0.029446713626384735,
    -0.0317227877676487,
    0.006010259035974741,
    0.010775790549814701,
    0.006447692401707172,
    -0.01742619462311268,
    -0.050671108067035675,
    -0.023685399442911148,
    -0.029332909733057022,
    0.0007952924352139235,
    -0.00020149038755334914,
    -0.003076256951317191,
    0.03442562744021416,
    -0.01020677201449871,
    0.021295521408319473,
    0.002421885496005416,
    0.007475482299923897,
    -1.3683675206266344e-05,
    -0.011423048563301563,
    -0.015519983135163784,
    -0.002640601946040988,
    -0.04808207228779793,
    -0.026857679709792137,
    0.008215206675231457,
    0.02054157294332981,
    0.0014874502085149288,
    -0.028806567192077637,
    0.012305027805268764,
    0.013386162929236889,
    -0.02231975644826889,
    0.011259456165134907,
    0.011444387026131153,
    -0.021622708067297935,
    -0.013115879148244858,
    -0.008272108621895313,
    0.002194278175011277,
    -0.030727006494998932,
    0.005266978871077299,
    0.0033536534756422043,
    -0.00030540296575054526,
    0.011807136237621307,
    0.005629728082567453,
    -0.025008369237184525,
    0.016217030584812164,
    0.0026085947174578905,
    0.027924589812755585,
    0.014595327898859978,
    -0.00707005662843585,
    0.048338133841753006,
    -0.017682254314422607,
    -0.009146974422037601,
    0.016074776649475098,
    -0.0103348009288311,
    -0.01665802113711834,
    -0.007094950880855322,
    0.007902245968580246,
    -0.01610322669148445,
    0.023770753294229507,
    -0.0038266503252089024,
    0.001364755560643971,
    -0.014780258759856224,
    0.022376656532287598,
    0.005562156904488802,
    -0.029446713626384735,
    -0.008734435774385929,
    0.012852707877755165,
    -0.004136054310947657,
    -0.005320324096828699,
    -0.025136398151516914,
    0.04412739351391792,
    -0.018421977758407593,
    0.038750167936086655,
    -0.0010011171689257026,
    -0.007041605655103922,
    -0.010114305652678013,
    0.010349025949835777,
    -0.00437433086335659,
    -0.011359034106135368,
    -0.013948068954050541,
    -0.019417760893702507,
    -0.0073687913827598095,
    0.005064265802502632,
    0.0007335005793720484,
    0.022049471735954285,
    -0.02227707952260971,
    0.02223440259695053,
    -0.0186922624707222,
    -0.03670170158147812,
    0.00817964319139719,
    -0.023742301389575005,
    0.02461005561053753,
    -0.014168564230203629,
    -0.02012903429567814,
    -0.00885535217821598,
    -0.011785798706114292,
    -0.02819487266242504,
    0.03311688452959061,
    -0.0037448538932949305,
    0.03436872363090515,
    -0.0014332156861200929,
    -0.0056439535692334175,
    -0.005153174977749586,
    -0.011337695643305779,
    -0.01901944726705551,
    0.025847671553492546,
    0.011131427250802517,
    0.021210169419646263,
    0.016117451712489128,
    -0.0073687913827598095,
    -0.008755774237215519,
    -0.009687541984021664,
    0.014609552919864655,
    -0.03485238924622536,
    -0.015207022428512573,
    0.017355067655444145,
    0.0016608231235295534,
    -0.01065487414598465,
    -0.008969156071543694,
    -0.009801345877349377,
    0.03877861797809601,
    0.0014892284525558352,
    -0.01092515792697668,
    0.0021676053293049335,
    -0.019929876551032066,
    -0.0007792887627147138,
    -0.009900923818349838,
    0.01597519777715206,
    0.01150128897279501,
    -0.01665802113711834,
    -0.021082140505313873,
    -0.010790015570819378,
    -0.00841436255723238,
    -0.037725936621427536,
    3.7314064684323967e-05,
    -0.0024343328550457954,
    0.035535212606191635,
    -0.02122439444065094,
    -0.0008806452387943864,
    -0.009395919740200043,
    0.026146406307816505,
    0.041794419288635254,
    0.01557688508182764,
    -0.0037270719185471535,
    0.003698621178045869,
    0.013727574609220028,
    0.013094540685415268,
    -0.04387133568525314,
    0.016131678596138954,
    -0.0029535621870309114,
    -0.008976268582046032,
    0.005313211586326361,
    -0.005647509824484587,
    -0.020598474889993668,
    -0.005711524281650782,
    0.011728896759450436,
    0.007208754774183035,
    0.02135242335498333,
    0.047626860439777374,
    -0.009410145692527294,
    -0.02037086710333824,
    -0.012212562374770641,
    0.005099829286336899,
    0.003188282484188676,
    0.03462478518486023,
    0.005526593420654535,
    0.023073704913258553,
    -0.010491280816495419,
    -0.01732661761343479,
    -0.5453474521636963,
    0.02473808452486992,
    -0.0019897869788110256,
    -0.012404605746269226,
    0.021764962002635002,
    0.028081068769097328,
    0.004015137441456318,
    0.0024272201117128134,
    -0.03880707174539566,
    0.015349277295172215,
    -0.024282868951559067,
    -0.0017986323218792677,
    -0.005907124374061823,
    -0.02562006376683712,
    -0.010235222056508064,
    -0.024069488048553467,
    0.013279472477734089,
    -0.018109017983078957,
    -0.0017932977061718702,
    0.02909107692539692,
    -0.012632213532924652,
    0.03894932568073273,
    -0.012176998890936375,
    -0.000126584418467246,
    -0.002405881881713867,
    0.022561589255928993,
    -0.016544217243790627,
    -0.008641970343887806,
    0.003602599259465933,
    -0.006572165060788393,
    -0.024410899728536606,
    0.003472791751846671,
    0.012098758481442928,
    -0.012945173308253288,
    0.05243506655097008,
    0.0012500628363341093,
    -0.027369795367121696,
    0.008336123079061508,
    0.00588578637689352,
    0.020441994071006775,
    -0.0014767810935154557,
    -0.02802416682243347,
    0.017255490645766258,
    0.024638505652546883,
    0.0027650748379528522,
    -0.00039342304808087647,
    0.018706487491726875,
    0.0024201073683798313,
    0.012994962744414806,
    0.00031362706795334816,
    0.004996694624423981,
    -0.007080725394189358,
    0.01852155663073063,
    -0.013201232068240643,
    0.005914237350225449,
    -0.010832692496478558,
    0.0023934345226734877,
    0.023813430219888687,
    0.0010011171689257026,
    0.002059136051684618,
    -0.015406179241836071,
    0.026957256719470024,
    0.030641652643680573,
    -0.0034194462932646275,
    -0.018407752737402916,
    0.03280392289161682,
    0.006607729010283947,
    -0.005928462836891413,
    0.02840825542807579,
    -0.03974594920873642,
    0.01103896088898182,
    0.006447692401707172,
    -0.0008535279193893075,
    -0.01456687692552805,
    0.028863469138741493,
    0.06299035996198654,
    0.03801044449210167,
    0.0008468597661703825,
    -0.006262761075049639,
    0.02958896942436695,
    0.022902999073266983,
    0.0007290550856851041,
    -0.0011967172613367438,
    -0.018720712512731552,
    0.02219172567129135,
    -0.0003903112083207816,
    -0.016259707510471344,
    0.008869578130543232,
    0.01105318684130907,
    0.030812358483672142,
    0.011337695643305779,
    0.017369292676448822,
    -0.02345779351890087,
    -0.027341345325112343,
    0.0003165166126564145,
    0.018663810566067696,
    -0.0409124381840229,
    0.030641652643680573,
    -0.000424318976001814,
    -0.03820960223674774,
    -0.003451453521847725,
    -0.03052784875035286,
    -0.009033170528709888,
    0.015207022428512573,
    -0.006006702780723572,
    -0.0030122422613203526,
    0.03078390844166279,
    0.01856423355638981,
    0.003085147822275758,
    0.000561016786377877,
    -0.009104298427700996,
    -0.041879769414663315,
    -0.026117954403162003,
    -0.017056332901120186,
    0.004118272103369236,
    -0.04142455756664276,
    0.01103184837847948,
    -0.013820040039718151,
    0.013834265060722828,
    -0.033429842442274094,
    0.00043498806189745665,
    -0.019787622615695,
    -0.014325044117867947,
    0.00887669064104557,
    0.034767039120197296,
    0.009829796850681305,
    0.04139610379934311,
    -0.015519983135163784,
    0.002590812975540757,
    -0.0017835177714005113,
    -0.012909609824419022,
    -0.0036559447180479765,
    0.0267581008374691,
    -0.008805563673377037,
    0.015477306209504604,
    -0.006682412698864937,
    0.041794419288635254,
    -0.013962294906377792,
    0.003406998934224248,
    -0.05343084782361984,
    0.007212311029434204,
    0.021281296387314796,
    0.012632213532924652,
    -0.007824006490409374,
    -0.02384188026189804,
    -0.032149553298950195,
    -0.02017170935869217,
    -0.007710202597081661,
    0.006223641335964203,
    0.0011264790082350373,
    -0.00811562780290842,
    0.0020751398988068104,
    -0.03573437035083771,
    0.002487678313627839,
    -0.026999933645129204,
    -0.015448855236172676,
    -0.015605336055159569,
    -0.012724678963422775,
    -0.011565303429961205,
    -0.0361042320728302,
    0.02105368860065937,
    0.016003649681806564,
    -0.005405677016824484,
    -0.0048259892500936985,
    -0.020982561632990837,
    0.0007850679103285074,
    -0.018592683598399162,
    0.04082708805799484,
    -0.012148547917604446,
    -0.022348206490278244,
    -0.0024485583417117596,
    -0.032064199447631836,
    -0.008954931050539017,
    0.007525271270424128,
    0.0056083896197378635,
    0.020356642082333565,
    -0.024254418909549713,
    0.016586892306804657,
    -0.006931358017027378,
    -0.006088499445468187,
    0.012312140315771103,
    0.016131678596138954,
    -0.027113737538456917,
    -0.014325044117867947,
    0.019631141796708107,
    0.010733113624155521,
    -0.011728896759450436,
    -0.0007326114573515952,
    0.019560014829039574,
    0.014282367192208767,
    -0.02274652011692524,
    -0.01880606636404991,
    -0.03408421576023102,
    0.023642724379897118,
    0.018279723823070526,
    0.02012903429567814,
    0.023642724379897118,
    0.014894062653183937,
    0.007432805839926004,
    0.035108450800180435,
    0.008080064319074154,
    -0.026644296944141388,
    -0.0003978684835601598,
    -0.04865109175443649,
    -0.0010277898982167244,
    -0.026985708624124527,
    0.01953156478703022,
    -0.007603511214256287,
    0.029332909733057022,
    -0.019645368680357933,
    0.013905392959713936,
    -0.05678805708885193,
    -0.03328758850693703,
    0.0018075231928378344,
    0.006440579425543547,
    0.028351353481411934,
    -0.012596650049090385,
    0.01847887970507145,
    0.01749732345342636,
    -0.014467298984527588,
    0.015178571455180645,
    0.001984452363103628,
    0.024681182578206062,
    0.043017808347940445,
    0.013777363114058971,
    0.0013229682808741927,
    0.019503112882375717,
    -0.0044667962938547134,
    0.03260476887226105,
    6.256982305785641e-05,
    0.01691407896578312,
    0.019517339766025543,
    0.015932520851492882,
    -0.025378230959177017,
    0.031039966270327568,
    0.010846917517483234,
    0.03974594920873642,
    -0.01762535236775875,
    0.009353243745863438,
    -0.025349779054522514,
    0.028223324567079544,
    0.012312140315771103,
    0.0025054600555449724,
    0.006358783226460218,
    0.02984502725303173,
    -0.014822934754192829,
    0.011444387026131153,
    -0.009908037260174751,
    -0.006188077386468649,
    0.0029482278041541576,
    0.030072635039687157,
    0.028009941801428795,
    -0.011864038184285164,
    0.0024556710850447416,
    0.015093219466507435,
    0.0035296936985105276,
    0.005341662559658289,
    0.010491280816495419,
    0.033458296209573746,
    0.017397744581103325,
    0.019986778497695923,
    0.0009015388786792755,
    0.017113234847784042,
    0.030727006494998932,
    0.026445141062140465,
    -0.037270721048116684,
    0.00987247284501791,
    -0.029076851904392242,
    0.004296090453863144,
    0.0037661921232938766,
    -0.0007179414969868958,
    -0.03749832883477211,
    -0.040229618549346924,
    -0.002052023308351636,
    0.02025706321001053,
    0.0031011514365673065,
    0.008193868212401867,
    0.022006794810295105,
    -0.019901426509022713,
    -0.028479382395744324,
    -0.026772325858473778,
    -0.012269464321434498,
    0.018578458577394485,
    0.0010011171689257026,
    0.015719139948487282,
    -0.01910480111837387,
    -0.029190655797719955,
    -0.014623778872191906,
    -0.003321646247059107,
    -0.0034745698794722557,
    0.017141686752438545,
    0.000807295145932585,
    0.014381946064531803,
    -0.007802668027579784,
    -0.015960972756147385,
    0.021195944398641586,
    0.047029390931129456,
    0.0038017556071281433,
    -0.007283438462764025,
    -0.016586892306804657,
    0.019303957000374794,
    -0.007525271270424128,
    0.00222450727596879,
    0.0010224553989246488,
    0.02583344466984272,
    0.0012305027339607477,
    -0.022646941244602203,
    -0.031893495470285416,
    -0.013820040039718151,
    -0.027341345325112343,
    0.014061872847378254,
    0.009538174606859684,
    -0.013485741801559925,
    -0.016757598146796227,
    0.023343989625573158,
    -0.018066341057419777,
    0.007973373867571354,
    0.008087176829576492,
    0.025591611862182617,
    0.007674638647586107,
    -0.0034550100099295378,
    -0.03547831252217293,
    -0.023272862657904625,
    0.0015487975906580687,
    0.04452570900321007,
    0.06060048192739487,
    -0.021992569789290428,
    0.023514695465564728,
    -0.04825277999043465,
    -0.014822934754192829,
    -0.0006530378013849258,
    -0.010498393326997757,
    0.0017932977061718702,
    -0.019204378128051758,
    -0.014332156628370285,
    0.023358214646577835,
    0.01234770379960537,
    -0.009481272660195827,
    -0.02465273253619671,
    0.011849813163280487,
    -0.03761213272809982,
    0.013912505470216274,
    -0.01065487414598465,
    0.005000251345336437,
    -0.005572826135903597,
    -0.010071629658341408,
    0.026331337168812752,
    0.016117451712489128,
    0.025179075077176094,
    0.00707005662843585,
    0.022974127903580666,
    0.04099779203534126,
    0.008300559595227242,
    -0.021039463579654694,
    -0.0042107379995286465,
    -0.001597697613760829,
    0.016302384436130524,
    0.05786919593811035,
    -0.015918295830488205,
    0.035449858754873276,
    -0.0011211445089429617,
    0.03673015162348747,
    0.0189056433737278,
    -0.02206369675695896,
    -0.024581603705883026,
    0.013464403338730335,
    0.00919676385819912,
    0.009531062096357346,
    0.008691759780049324,
    -0.029560517519712448,
    0.010583746246993542,
    -0.020598474889993668,
    -0.019972553476691246,
    -0.008613519370555878,
    0.016259707510471344,
    0.00778844254091382,
    -0.033885058015584946,
    -0.01991565153002739,
    0.024211741983890533,
    -0.013713348656892776,
    0.017909862101078033,
    -0.01691407896578312,
    -0.0352507047355175,
    -0.021380875259637833,
    -0.004392112605273724,
    -0.022504687309265137,
    0.017852960154414177,
    -0.005914237350225449,
    -0.009097184985876083,
    -0.0015203466173261404,
    -0.01610322669148445,
    0.0033447626046836376,
    -0.03741297498345375,
    0.0017168358899652958,
    -0.013940956443548203,
    -0.018421977758407593,
    -0.003113598795607686,
    -0.0003856434777844697,
    0.004840214736759663,
    -0.002843315014615655,
    -0.017824508249759674,
    0.009886698797345161,
    -0.023742301389575005,
    -0.0009415480308234692,
    -0.016928303986787796,
    -0.0252359751611948,
    -0.0213097482919693,
    -0.018123243004083633,
    0.016174353659152985,
    0.013841378502547741,
    0.03303153067827225,
    -0.015477306209504604,
    -0.0013327483320608735,
    0.034226469695568085,
    -0.013926730491220951,
    0.004420563578605652,
    0.006252092309296131,
    -0.02684345282614231,
    -0.016814500093460083,
    0.007752878591418266,
    -0.03018643893301487,
    -0.006088499445468187,
    -0.0019097687909379601,
    -0.020996786653995514,
    -0.012817144393920898,
    -0.03838030621409416,
    0.014851385727524757,
    -0.01308742817491293,
    -0.007496820297092199,
    0.007173190824687481,
    0.0010784681653603911,
    0.019730720669031143,
    -0.016416186466813087,
    -0.0024112164974212646,
    0.03246251121163368,
    -0.012305027805268764,
    -0.00596047006547451,
    0.006077830214053392,
    0.001314077409915626,
    0.015249699354171753,
    -0.029247557744383812,
    0.031125318259000778,
    -0.015406179241836071,
    0.016217030584812164,
    0.02515062317252159,
    -0.03237716108560562,
    0.007809780538082123,
    -0.0013772029196843505,
    -0.004555705469101667,
    0.022689618170261383,
    -0.0024183292407542467,
    -0.03764058277010918,
    -0.018251271918416023,
    0.036132682114839554,
    0.018109017983078957,
    0.01704210788011551,
    -0.017013655975461006,
    -0.03286082670092583,
    -0.02823754958808422,
    -0.01367778517305851,
    -0.022163275629281998,
    0.0125112971290946,
    0.005949800834059715,
    0.013855603523552418,
    0.0025001256726682186,
    0.004324541427195072,
    -0.021295521408319473,
    -0.017227038741111755,
    0.010156982578337193,
    -0.03394196182489395,
    -0.0208829827606678,
    0.00786668248474598,
    0.014502862468361855,
    0.017070557922124863,
    0.022205952554941177,
    -0.016942529007792473,
    -0.01970227062702179,
    0.014389058575034142,
    -0.009822684340178967,
    -0.017440421506762505,
    0.025520484894514084,
    0.001950667006894946,
    0.01839352771639824,
    0.022120598703622818,
    0.04717164486646652,
    0.014154338277876377,
    0.018749164417386055,
    0.010946495458483696,
    0.0023720962926745415,
    0.015434630215168,
    -0.015078993514180183,
    0.011821362189948559,
    0.0009028725326061249,
    -0.005996033549308777,
    -0.004296090453863144,
    0.004438345320522785,
    0.00444901455193758,
    -0.04190822318196297,
    0.019560014829039574,
    0.03931918740272522,
    -0.02135242335498333,
    0.016117451712489128,
    -0.004249857738614082,
    -0.03098306432366371,
    -0.0016359285218641162,
    0.015932520851492882,
    0.015349277295172215,
    0.015107444487512112,
    -0.017184361815452576,
    0.0029997951351106167,
    0.007660413160920143,
    0.01500786654651165,
    -0.0018670923309400678,
    0.05317478999495506,
    0.01965959370136261,
    -0.015335052274167538,
    0.029119528830051422,
    -0.005178069695830345,
    0.0343402735888958,
    -0.01944621093571186,
    -0.014445960521697998,
    -0.042050477117300034,
    -0.012881158851087093,
    -0.01295939926058054,
    -0.007297663949429989,
    0.033970411866903305,
    0.004292534198611975,
    0.03627493605017662,
    -0.02084030769765377,
    0.019929876551032066,
    -0.03479548916220665,
    -0.023770753294229507,
    0.04853728786110878,
    0.0030673660803586245,
    -0.015093219466507435,
    0.013514192774891853,
    -0.008094290271401405,
    -0.021124815568327904,
    0.007311889436095953,
    0.007824006490409374,
    -0.024937240406870842,
    0.01211298443377018,
    0.007262099999934435,
    -0.016003649681806564,
    -0.013243908062577248,
    -0.016131678596138954,
    0.04338767006993294,
    0.0312960259616375,
    0.015078993514180183,
    0.03325913846492767,
    0.024169066920876503,
    -0.014502862468361855,
    -0.023998361080884933,
    -0.008755774237215519,
    0.012674889527261257,
    0.03123912215232849,
    0.021366650238633156,
    -0.003976017702370882,
    -0.026274435222148895,
    0.012717566452920437,
    -0.020740728825330734,
    -0.026743875816464424,
    -0.02375652827322483,
    0.03655944764614105,
    0.019602691754698753,
    0.012361929751932621,
    -0.040229618549346924,
    0.020285513252019882,
    -0.00046543945791199803,
    -2.635323107824661e-05,
    -0.009189650416374207,
    -0.017867185175418854,
    0.016771823167800903,
    0.0007677305839024484,
    -0.029560517519712448,
    0.04802517220377922,
    0.003150940639898181,
    0.005359444301575422,
    -0.0018599795876070857,
    -0.000537011306732893,
    0.0011353699956089258,
    -0.041538361459970474,
    -0.02295990101993084,
    -0.002761518582701683,
    0.019460437819361687,
    0.025776544585824013,
    -0.030897710472345352,
    -0.031096868216991425,
    0.04808207228779793,
    -0.02185031585395336,
    -0.01961691677570343,
    -0.019588466733694077,
    -0.02231975644826889,
    0.04620431363582611,
    -0.0378681905567646,
    0.005199407692998648,
    -0.0018830960616469383,
    0.009068734012544155,
    0.002525020157918334,
    -0.007667526137083769,
    -0.016814500093460083,
    0.008649082854390144,
    -0.006945583503693342,
    0.018877193331718445,
    0.01665802113711834,
    0.0009539952734485269,
    0.0028931039851158857,
    -0.004587712697684765,
    0.00327719165943563,
    0.01687140204012394,
    0.009182537905871868,
    -0.009068734012544155,
    0.029788125306367874,
    -0.023201733827590942,
    -0.009118523448705673,
    -0.022803422063589096,
    -0.0015994757413864136,
    0.011415936052799225,
    -0.014019195921719074,
    -0.01249707117676735,
    -0.010178321041166782,
    0.030755456537008286,
    -0.023699626326560974,
    0.013478628359735012,
    -0.03698620945215225,
    0.011166990734636784,
    0.0004260971618350595,
    0.004719298332929611,
    -0.00010513508459553123,
    0.04344457387924194,
    0.0365309938788414,
    -0.02617485634982586,
    -0.028394028544425964,
    -0.03880707174539566,
    -0.02287454903125763,
    0.0247807614505291,
    -0.00613117590546608,
    -0.008350348100066185,
    0.005878673866391182,
    0.0037733048666268587,
    0.020299740135669708,
    -0.02465273253619671,
    -0.034226469695568085,
    0.004388556350022554,
    -0.012141434475779533,
    0.010370364412665367,
    0.020242838189005852,
    -0.015235473401844501,
    0.015036317519843578,
    0.004893559962511063,
    -0.02909107692539692,
    0.022760745137929916,
    -0.05860891938209534,
    0.01209164597094059,
    -0.02025706321001053,
    -0.016117451712489128,
    -0.026957256719470024,
    -0.007575060240924358,
    -0.010448604822158813,
    -0.003417668165639043,
    -0.009161199443042278,
    0.021082140505313873,
    0.017027882859110832,
    -0.025819219648838043,
    -0.019218603149056435,
    0.009787119925022125,
    -0.015107444487512112,
    -0.00847837794572115,
    -0.00494690565392375,
    0.005779095459729433,
    -0.011081637814640999,
    0.018763389438390732,
    -0.01411877479404211,
    -0.031182220205664635,
    -0.02185031585395336,
    0.055194806307554245,
    0.02658739499747753,
    -0.023784978315234184,
    -0.022092148661613464,
    0.0022565145045518875,
    -0.01209164597094059,
    -0.006657517980784178,
    -0.01365644671022892,
    0.008357460610568523,
    0.00018982106121256948,
    -0.007290550973266363,
    -0.016558442264795303,
    0.013542642816901207,
    -0.007546609733253717,
    0.04290400445461273,
    -0.05027279630303383,
    0.010839805006980896,
    0.03920538350939751,
    0.017611127346754074,
    -3.5591448977356777e-05,
    -0.009246552363038063,
    -0.06515263020992279,
    -0.0005956913810223341,
    -0.008371686562895775,
    -0.00161459029186517,
    0.0317796915769577,
    0.023187508806586266,
    0.009694654494524002,
    0.006579278036952019,
    -0.02422596886754036,
    -0.011088750325143337,
    -0.011145652271807194,
    0.004833101760596037,
    -0.006878012791275978,
    0.003527915570884943,
    -0.030755456537008286,
    -0.002935780445113778,
    0.011280794627964497,
    -0.007667526137083769,
    -0.011999180540442467,
    0.019247055053710938,
    -0.008962043561041355,
    0.02313060685992241,
    -0.022035246714949608,
    -0.022220177575945854,
    -0.004584156442433596,
    -0.02156580612063408,
    0.015633786097168922,
    0.004328098148107529,
    0.04574909806251526,
    0.012333478778600693,
    0.011764460243284702,
    0.003028246108442545,
    -0.016942529007792473,
    0.0047477493062615395,
    -0.045976705849170685,
    0.006049379240721464,
    -0.0049931383691728115,
    -0.008058725856244564,
    0.004189399536699057,
    -0.012987850233912468,
    0.026032602414488792,
    0.0037946428637951612,
    0.0024236636236310005,
    0.004164505284279585,
    -0.03581972420215607,
    0.0016679358668625355,
    -0.004481021780520678,
    0.03436872363090515,
    0.0013967629056423903,
    0.007752878591418266,
    -0.012027631513774395,
    -0.00015570216055493802,
    0.01813746802508831,
    -0.0103348009288311,
    -0.015591110102832317,
    -0.04082708805799484,
    0.02613218128681183,
    0.004495247267186642,
    -0.010939382947981358,
    -0.03340139240026474,
    -0.0070522744208574295,
    0.015491532161831856,
    -0.006547270342707634,
    0.0025445802602916956,
    0.17992368340492249,
    0.022291304543614388,
    0.0061560701578855515,
    0.032234903424978256,
    0.006906463764607906,
    0.017070557922124863,
    0.006739314179867506,
    0.001026011654175818,
    -0.01822282187640667,
    0.0322064533829689,
    0.03280392289161682,
    -0.02371385134756565,
    0.00036452754284255207,
    0.004847327247262001,
    -0.008393025025725365,
    0.0059249065816402435,
    -0.01657266728579998,
    -0.029731223359704018,
    -0.029276007786393166,
    0.007290550973266363,
    0.002295634476467967,
    -0.011714670807123184,
    -0.011380372568964958,
    -0.035279154777526855,
    0.03328758850693703,
    -0.0073332274332642555,
    -0.019560014829039574,
    -0.03721381723880768,
    0.028265999630093575,
    -0.014581101946532726,
    -0.010370364412665367,
    0.010249448008835316,
    0.005423458758741617,
    0.01779605820775032,
    -0.026317112147808075,
    0.02135242335498333,
    0.028294451534748077,
    -0.005956913810223341,
    0.011536852456629276,
    -0.004861552733927965,
    0.0062556485645473,
    -0.02975967340171337,
    -0.01771070435643196,
    -0.04224963113665581,
    -0.016473088413476944,
    -0.01020677201449871,
    -0.009104298427700996,
    0.009125635959208012,
    -0.000355858908733353,
    0.013585319742560387,
    -0.033429842442274094,
    -0.020015230402350426,
    0.0049397931434214115,
    0.013613770715892315,
    -0.004584156442433596,
    -0.023230185732245445,
    0.021907217800617218,
    0.008186755701899529,
    0.010142756626009941,
    0.029731223359704018,
    -0.0235004685819149,
    0.023472018539905548,
    -0.02231975644826889,
    0.026871904730796814,
    -0.0652095377445221,
    0.04677332937717438,
    -0.021594256162643433,
    0.0057221935130655766,
    0.020157484337687492,
    0.0014189901994541287,
    -0.0020875870250165462,
    -0.02021438628435135,
    -0.013784476555883884,
    0.0025819221045821905,
    -0.004758418072015047,
    -0.005523037165403366,
    0.031352926045656204,
    0.018877193331718445,
    0.03516535088419914,
    0.009474160149693489,
    -0.005636840593069792,
    -0.014211240224540234,
    0.01745464652776718,
    0.016387736424803734,
    -0.011664881370961666,
    0.02396990917623043,
    -0.008762886747717857,
    -0.024197516962885857,
    -0.006863787304610014,
    -0.023059479892253876,
    -0.03408421576023102,
    -0.026857679709792137,
    0.007959147915244102,
    -0.028948822990059853,
    0.004242745228111744,
    0.006710863206535578,
    0.008677533827722073,
    0.006042266730219126,
    0.013300810009241104,
    -0.005341662559658289,
    -0.028692763298749924,
    0.04543613642454147,
    -0.002052023308351636,
    0.015064768493175507,
    0.02172228693962097,
    -0.006817554589360952,
    -0.0010580189991742373,
    0.0058359974063932896,
    0.0053630005568265915,
    -0.022419333457946777,
    0.014808709733188152,
    -0.015619561076164246,
    -0.024553153663873672,
    -0.017355067655444145,
    0.02165115810930729,
    -0.0215231291949749,
    -0.008257882669568062,
    0.008762886747717857,
    0.011046074330806732,
    0.019887201488018036,
    0.013905392959713936,
    -0.002791747683659196,
    0.01093227043747902,
    -0.005633284337818623,
    -0.014581101946532726,
    -0.009545287117362022,
    -0.05670270696282387,
    0.01944621093571186,
    0.006077830214053392,
    -0.00776710407808423,
    0.020897209644317627,
    -0.014054760336875916,
    0.023329762741923332,
    0.013243908062577248,
    0.011607980355620384,
    -0.0230452548712492,
    -0.020911434665322304,
    -0.006899350788444281,
    -0.030727006494998932,
    0.031011514365673065,
    -0.017824508249759674,
    0.01906212419271469,
    0.008428588509559631,
    0.016174353659152985,
    -0.0058146589435637,
    -0.015704914927482605,
    0.002548136515542865,
    0.021836088970303535,
    0.0180521160364151,
    -0.0008126297034323215,
    0.00900471955537796,
    0.001070466241799295,
    -0.00044632397475652397,
    -0.020811855792999268,
    0.008172529749572277,
    -0.0456637442111969,
    -0.025250202044844627,
    -0.02879234217107296,
    0.014132999815046787,
    -0.015875618904829025,
    -0.04330231621861458,
    0.00251079467125237,
    -0.003872883040457964,
    0.02465273253619671,
    -0.04646037146449089,
    -0.022675391286611557,
    -0.17810283601284027,
    0.015875618904829025,
    0.039006225764751434,
    -0.02900572493672371,
    0.005323880352079868,
    -0.013258134014904499,
    0.039262283593416214,
    0.009737331420183182,
    -0.011387485079467297,
    -0.0006765986909158528,
    0.018919868394732475,
    -0.017653802409768105,
    -0.01734084263443947,
    0.013329260982573032,
    -0.01120255421847105,
    -0.003392773447558284,
    0.01020677201449871,
    0.00502158934250474,
    0.03673015162348747,
    0.029190655797719955,
    0.05141083151102066,
    -0.013684897683560848,
    0.0239272341132164,
    0.006799772381782532,
    0.03175123780965805,
    -0.03149517998099327,
    -0.026900354772806168,
    -0.007952035404741764,
    0.028891921043395996,
    -0.012120096944272518,
    -0.008997607044875622,
    -0.0022565145045518875,
    0.029247557744383812,
    -0.006227197591215372,
    -0.0011380373034626245,
    0.014211240224540234,
    0.026274435222148895,
    -0.002532132901251316,
    0.001057129935361445,
    0.026317112147808075,
    0.012297915294766426,
    0.013770250603556633,
    0.0001361421454930678,
    -0.012333478778600693,
    -0.012006293050944805,
    0.012561086565256119,
    0.014175676740705967,
    -0.01818014495074749,
    0.009253665804862976,
    -0.00843570102006197,
    0.03994510695338249,
    -0.01179291121661663,
    0.019047899171710014,
    0.014424622058868408,
    0.04156681150197983,
    -0.01564801298081875,
    0.007731540594249964,
    0.002818420296534896,
    -0.0034052208065986633,
    0.02718486450612545,
    -0.013770250603556633,
    -0.011586641892790794,
    0.03018643893301487,
    0.005544375162571669,
    -0.00784534402191639,
    -0.03630338981747627,
    -0.03488084301352501,
    0.015406179241836071,
    0.014481524005532265,
    -0.0014741139020770788,
    0.014111662283539772,
    0.0016857177251949906,
    0.01903367228806019,
    0.004619719926267862,
    -5.940243136137724e-05,
    0.0256627406924963,
    -0.02769698202610016,
    0.012027631513774395,
    0.0005827995482832193,
    -0.002864653244614601,
    -0.038664814084768295,
    0.0456637442111969,
    0.01091093197464943,
    0.01635928638279438,
    0.015719139948487282,
    -0.008542392402887344,
    -0.005281203892081976,
    0.02207792177796364,
    -0.022774970158934593,
    -0.003355431603267789,
    0.015505757182836533,
    -0.018151694908738136,
    -0.02904839999973774,
    -0.016117451712489128,
    -0.005512367933988571,
    0.010071629658341408,
    -0.011152764782309532,
    -0.003862213809043169,
    -0.00400446867570281,
    -0.021466227248311043,
    -0.0014598884154111147,
    0.013364825397729874,
    -0.02515062317252159,
    -0.005291873123496771,
    0.01923283003270626,
    0.015292375348508358,
    -0.022092148661613464,
    0.01704210788011551,
    0.0215231291949749,
    0.013414613902568817,
    -0.014282367192208767,
    -0.004417006857693195,
    0.02557738684117794,
    0.02604682743549347,
    -0.006230753846466541,
    0.0206696018576622,
    0.035279154777526855,
    -0.005409233272075653,
    0.007084282115101814,
    -0.014609552919864655,
    0.02823754958808422,
    0.008428588509559631,
    0.0014963411958888173,
    0.014083211310207844,
    0.004498803522437811,
    -0.028265999630093575,
    -0.11300709843635559,
    -0.0300157330930233,
    0.0036257156170904636,
    0.04358682781457901,
    -0.00539145153015852,
    -0.023514695465564728,
    -0.007731540594249964,
    0.03311688452959061,
    0.009488385170698166,
    0.005231414921581745,
    -0.0002011569740716368,
    -0.007674638647586107,
    -0.014509974978864193,
    0.002976678777486086,
    -0.040656380355358124,
    -0.010683325119316578,
    -0.008065839298069477,
    -0.016686471179127693,
    -0.020911434665322304,
    0.029446713626384735,
    -0.007383016869425774,
    -0.0036843956913799047,
    0.009310566820204258,
    -0.009118523448705673,
    -0.014033421874046326,
    0.02295990101993084,
    -0.04705784097313881,
    0.012290801852941513,
    -0.009836909361183643,
    0.003465679008513689,
    -0.021423550322651863,
    -0.00101978809107095,
    0.00042276305612176657,
    -0.05417057126760483,
    0.025890346616506577,
    -0.012169885449111462,
    -0.02186454087495804,
    -0.01584716886281967,
    0.0249941423535347,
    -0.030072635039687157,
    0.003887108527123928,
    0.006970478221774101,
    0.01384849101305008,
    0.007681751623749733,
    0.007809780538082123,
    -0.0077813295647501945,
    0.00036363847902975976,
    0.013898279517889023,
    0.02084030769765377,
    -0.022419333457946777,
    -0.025804994627833366,
    -0.0019897869788110256,
    -0.00013869829126633704,
    0.003986686933785677,
    0.012269464321434498,
    0.005750644486397505,
    0.000964664388448,
    -0.0021711615845561028,
    -0.010960721410810947,
    -0.005434127990156412,
    -0.03169433772563934,
    0.015676463022828102,
    -0.0037270719185471535,
    0.029475165531039238,
    0.004669508896768093,
    0.02950361557304859,
    -0.007816893048584461,
    -0.0005192295066080987,
    0.0049397931434214115,
    -0.009275003336369991,
    -0.024211741983890533,
    0.011302132159471512,
    -0.028522059321403503,
    0.0017097231466323137,
    -0.02185031585395336,
    0.015562659129500389,
    0.008976268582046032,
    -0.019816074520349503,
    0.031011514365673065,
    -0.01627393253147602,
    -0.02958896942436695,
    0.011159878224134445,
    -0.020854532718658447,
    -0.023742301389575005,
    -0.02709951251745224,
    0.01601787470281124,
    0.0115226274356246,
    0.0056083896197378635,
    0.018450429663062096,
    -0.04503782466053963,
    0.023343989625573158,
    -0.004847327247262001,
    0.018293948844075203,
    0.0007139405352063477,
    -0.030385594815015793,
    0.02118171751499176,
    0.017255490645766258,
    0.009260778315365314,
    0.004029362928122282,
    0.0040329196490347385,
    -0.04532233253121376,
    -0.03132447600364685,
    -0.07021690160036087,
    0.0413392037153244,
    0.009097184985876083,
    -0.027924589812755585,
    0.015477306209504604,
    -0.011856925673782825,
    0.017184361815452576,
    -0.01092515792697668,
    -0.018862968310713768,
    0.012874046340584755,
    -0.02883501909673214,
    0.0011691554682329297,
    -0.015192797407507896,
    -0.03712846711277962,
    -0.004740636330097914,
    0.0030460278503596783,
    0.029475165531039238,
    -0.012596650049090385,
    0.03647409379482269,
    0.02173651196062565,
    0.007105620112270117,
    -0.003380326321348548,
    0.02645936608314514,
    0.012525522150099277,
    -0.051467735320329666,
    -0.0018048560013994575,
    0.013862716034054756,
    0.020143259316682816,
    -0.02194989286363125,
    -0.03314533457159996,
    0.018507331609725952,
    -0.004669508896768093,
    -0.025378230959177017,
    0.024823438376188278,
    0.033173784613609314,
    0.03166588768362999,
    0.016544217243790627,
    0.004609050694853067,
    0.02806684374809265,
    -0.019375083968043327,
    -0.017070557922124863,
    -0.01422546524554491,
    0.010135644115507603,
    -0.025605838745832443,
    -0.04412739351391792,
    -0.005298986099660397,
    -0.02338666468858719,
    0.013414613902568817,
    0.007980486378073692,
    0.026018377393484116,
    0.0037128464318811893,
    -0.0054519097320735455,
    -0.013421726413071156,
    -0.007482594810426235,
    -0.004392112605273724,
    -0.019602691754698753,
    -0.021338198333978653,
    -0.021836088970303535,
    -0.0008970934431999922,
    -0.00568663002923131,
    0.03163743391633034,
    0.00860640686005354,
    -0.00014603330055251718,
    0.027768108993768692,
    -0.00320250797085464,
    -0.029731223359704018,
    -0.025890346616506577,
    -0.009339017793536186,
    0.014197014272212982,
    -0.003225624328479171,
    -0.005750644486397505,
    -0.028607411310076714,
    0.016160128638148308,
    0.03340139240026474,
    0.01076156459748745,
    0.0013300810242071748,
    -0.01965959370136261,
    0.00697759073227644,
    -0.03269011899828911,
    0.03251941502094269,
    0.028692763298749924,
    6.9293579144869e-05,
    -0.04279020056128502,
    -0.009018945507705212,
    0.022177500650286674,
    -0.005402120761573315,
    -0.004345879890024662,
    -0.015662238001823425,
    -0.014189901761710644,
    0.008101402781903744,
    0.008350348100066185,
    0.01775338128209114,
    -0.018421977758407593,
    -0.0008708652458153665,
    -0.0049397931434214115,
    0.02109636552631855,
    0.002407660009339452,
    -0.014509974978864193,
    0.004516585264354944,
    -0.014751807786524296,
    0.020072132349014282,
    -0.015349277295172215,
    0.0024201073683798313,
    -0.022333981469273567,
    -0.015093219466507435,
    0.0013949847780168056,
    -0.003915559500455856,
    -0.026558944955468178,
    0.007002485450357199,
    0.03687240555882454,
    0.020015230402350426,
    0.00883401371538639,
    0.004719298332929611,
    0.030300240963697433,
    -0.03556366264820099,
    0.012866933830082417,
    -0.0007326114573515952,
    -0.014012083411216736,
    -0.01732661761343479,
    0.022945675998926163,
    -0.006045822985470295,
    0.0008032942423596978,
    0.04663107544183731,
    0.0074114673770964146,
    0.03052784875035286,
    0.005601277109235525,
    0.01852155663073063,
    -0.018279723823070526,
    0.008471264503896236,
    0.0031829478684812784,
    0.003976017702370882,
    0.01753999851644039,
    -0.021153267472982407,
    -0.026359787210822105,
    -0.012440169230103493,
    -0.0361042320728302,
    0.003997355699539185,
    -0.007959147915244102,
    -0.0038551012985408306,
    0.058950331062078476,
    0.004644614644348621,
    -0.05906413495540619,
    0.003243406070396304,
    -0.0006974923890084028,
    0.02193566784262657,
    0.018720712512731552,
    -0.0017719595925882459,
    0.006906463764607906,
    -0.007425692863762379,
    0.005544375162571669,
    0.009836909361183643,
    0.0018297504866495728,
    -0.006846005562692881,
    -0.02731289342045784,
    0.00845703948289156,
    0.004384999629110098,
    0.026573169976472855,
    -0.00472641084343195,
    0.020200161263346672,
    0.02473808452486992,
    0.012105870991945267,
    -0.00028406476485542953,
    0.018550006672739983,
    -0.02388455718755722,
    0.0010188990272581577,
    0.03428337350487709,
    0.00697759073227644,
    -0.014467298984527588,
    -0.02135242335498333,
    0.004352992400527,
    -0.004104046616703272,
    -0.010818466544151306,
    -0.0029855696484446526,
    0.007269212976098061,
    0.018877193331718445,
    0.016302384436130524,
    -0.01635928638279438,
    0.02317328378558159,
    0.0033465407323092222,
    0.0009353243513032794,
    0.014936738647520542,
    -0.02096833661198616,
    -0.03838030621409416,
    -0.016202805563807487,
    0.00682822335511446,
    0.0019097687909379601,
    0.007667526137083769,
    -0.04125384986400604
  ]
}
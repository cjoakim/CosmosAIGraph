{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "<p align=\"center\">\n  <br/>\n    <img alt=\"huggingface_hub library logo\" src=\"https://huggingface.co/datasets/huggingface/documentation-images/raw/main/huggingface_hub.svg\" width=\"376\" height=\"59\" style=\"max-width: 100%;\">\n  <br/>\n</p>\n\n<p align=\"center\">\n    <i>the official python client for the huggingface hub.</i>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://huggingface.co/docs/huggingface_hub/en/index\"><img alt=\"documentation\" src=\"https://img.shields.io/website/http/huggingface.co/docs/huggingface_hub/index.svg?down_color=red&down_message=offline&up_message=online&label=doc\"></a>\n    <a href=\"https://github.com/huggingface/huggingface_hub/releases\"><img alt=\"github release\" src=\"https://img.shields.io/github/release/huggingface/huggingface_hub.svg\"></a>\n    <a href=\"https://github.com/huggingface/huggingface_hub\"><img alt=\"pypi version\" src=\"https://img.shields.io/pypi/pyversions/huggingface_hub.svg\"></a>\n    <a href=\"https://pypi.org/project/huggingface-hub\"><img alt=\"downloads\" src=\"https://static.pepy.tech/badge/huggingface_hub/month\"></a>\n    <a href=\"https://codecov.io/gh/huggingface/huggingface_hub\"><img alt=\"code coverage\" src=\"https://codecov.io/gh/huggingface/huggingface_hub/branch/main/graph/badge.svg?token=rxp95le2xl\"></a>\n</p>\n\n<h4 align=\"center\">\n    <p>\n        <b>english</b> |\n        <a href=\"https://github.com/huggingface/huggingface_hub/blob/main/readme_de.md\">deutsch</a> |\n        <a href=\"https://github.com/huggingface/huggingface_hub/blob/main/readme_hi.md\">\u0939\u093f\u0902\u0926\u0940</a> | \n        <a href=\"https://github.com/huggingface/huggingface_hub/blob/main/readme_ko.md\">\ud55c\uad6d\uc5b4</a>\n    <p>\n</h4>\n---\n\n**documentation**: <a href=\"https://hf.co/docs/huggingface_hub\" target=\"_blank\">https://hf.co/docs/huggingface_hub</a>\n\n**source code**: <a href=\"https://github.com/huggingface/huggingface_hub\" target=\"_blank\">https://github.com/huggingface/huggingface_hub</a>\n\n---\n\n## welcome to the huggingface_hub library\n\nthe `huggingface_hub` library allows you to interact with the [hugging face hub](https://huggingface.co/), a platform democratizing open-source machine learning for creators and collaborators. discover pre-trained models and datasets for your projects or play with the thousands of machine learning apps hosted on the hub. you can also create and share your own models, datasets and demos with the community. the `huggingface_hub` library provides a simple way to do all these things with python.\n\n## key features\n\n- [download files](https://huggingface.co/docs/huggingface_hub/en/guides/download) from the hub.\n- [upload files](https://huggingface.co/docs/huggingface_hub/en/guides/upload) to the hub.\n- [manage your repositories](https://huggingface.co/docs/huggingface_hub/en/guides/repository).\n- [run inference](https://huggingface.co/docs/huggingface_hub/en/guides/inference) on deployed models.\n- [search](https://huggingface.co/docs/huggingface_hub/en/guides/search) for models, datasets and spaces.\n- [share model cards](https://huggingface.co/docs/huggingface_hub/en/guides/model-cards) to document your models.\n- [engage with the community](https://huggingface.co/docs/huggingface_hub/en/guides/community) through prs and comments.\n\n## installation\n\ninstall the `huggingface_hub` package with [pip](https://pypi.org/project/huggingface-hub/):\n\n```bash\npip install huggingface_hub\n```\n\nif you prefer, you can also install it with [conda](https://huggingface.co/docs/huggingface_hub/en/installation#install-with-conda).\n\nin order to keep the package minimal by default, `huggingface_hub` comes with optional dependencies useful for some use cases. for example, if you want have a complete experience for inference, run:\n\n```bash\npip install huggingface_hub[inference]\n```\n\nto learn more installation and optional dependencies, check out the [installation guide](https://huggingface.co/docs/huggingface_hub/en/installation).\n\n## quick start\n\n### download files\n\ndownload a single file\n\n```py\nfrom huggingface_hub import hf_hub_download\n\nhf_hub_download(repo_id=\"tiiuae/falcon-7b-instruct\", filename=\"config.json\")\n```\n\nor an entire repository\n\n```py\nfrom huggingface_hub import snapshot_download\n\nsnapshot_download(\"stabilityai/stable-diffusion-2-1\")\n```\n\nfiles will be downloaded in a local cache folder. more details in [this guide](https://huggingface.co/docs/huggingface_hub/en/guides/manage-cache).\n\n### login\n\nthe hugging face hub uses tokens to authenticate applications (see [docs](https://huggingface.co/docs/hub/security-tokens)). to login your machine, run the following cli:\n\n```bash\nhuggingface-cli login\n# or using an environment variable\nhuggingface-cli login --token $huggingface_token\n```\n\n### create a repository\n\n```py\nfrom huggingface_hub import create_repo\n\ncreate_repo(repo_id=\"super-cool-model\")\n```\n\n### upload files\n\nupload a single file\n\n```py\nfrom huggingface_hub import upload_file\n\nupload_file(\n    path_or_fileobj=\"/home/lysandre/dummy-test/readme.md\",\n    path_in_repo=\"readme.md\",\n    repo_id=\"lysandre/test-model\",\n)\n```\n\nor an entire folder\n\n```py\nfrom huggingface_hub import upload_folder\n\nupload_folder(\n    folder_path=\"/path/to/local/space\",\n    repo_id=\"username/my-cool-space\",\n    repo_type=\"space\",\n)\n```\n\nfor details in the [upload guide](https://huggingface.co/docs/huggingface_hub/en/guides/upload).\n\n## integrating to the hub.\n\nwe're partnering with cool open source ml libraries to provide free model hosting and versioning. you can find the existing integrations [here](https://huggingface.co/docs/hub/libraries).\n\nthe advantages are:\n\n- free model or dataset hosting for libraries and their users.\n- built-in file versioning, even with very large files, thanks to a git-based approach.\n- hosted inference api for all models publicly available.\n- in-browser widgets to play with the uploaded models.\n- anyone can upload a new model for your library, they just need to add the corresponding tag for the model to be discoverable.\n- fast downloads! we use cloudfront (a cdn) to geo-replicate downloads so they're blazing fast from anywhere on the globe.\n- usage stats and more features to come.\n\nif you would like to integrate your library, feel free to open an issue to begin the discussion. we wrote a [step-by-step guide](https://huggingface.co/docs/hub/adding-a-library) with \u2764\ufe0f showing how to do this integration.\n\n## contributions (feature requests, bugs, etc.) are super welcome \ud83d\udc99\ud83d\udc9a\ud83d\udc9b\ud83d\udc9c\ud83e\udde1\u2764\ufe0f\n\neveryone is welcome to contribute, and we value everybody's contribution. code is not the only way to help the community.\nanswering questions, helping others, reaching out and improving the documentations are immensely valuable to the community.\nwe wrote a [contribution guide](https://github.com/huggingface/huggingface_hub/blob/main/contributing.md) to summarize\nhow to get started to contribute to this repository.\n\n\n",
  "docs_url": null,
  "keywords": "model-hub machine-learning models natural-language-processing deep-learning pytorch pretrained-models",
  "license": "apache",
  "name": "huggingface-hub",
  "package_url": "https://pypi.org/project/huggingface-hub/",
  "project_url": "https://pypi.org/project/huggingface-hub/",
  "project_urls": {
    "Homepage": "https://github.com/huggingface/huggingface_hub"
  },
  "release_url": "https://pypi.org/project/huggingface-hub/0.20.1/",
  "requires_dist": [
    "filelock",
    "fsspec >=2023.5.0",
    "requests",
    "tqdm >=4.42.1",
    "pyyaml >=5.1",
    "typing-extensions >=3.7.4.3",
    "packaging >=20.9",
    "InquirerPy ==0.3.4 ; extra == 'all'",
    "aiohttp ; extra == 'all'",
    "jedi ; extra == 'all'",
    "Jinja2 ; extra == 'all'",
    "pytest ; extra == 'all'",
    "pytest-cov ; extra == 'all'",
    "pytest-env ; extra == 'all'",
    "pytest-xdist ; extra == 'all'",
    "pytest-vcr ; extra == 'all'",
    "pytest-asyncio ; extra == 'all'",
    "pytest-rerunfailures ; extra == 'all'",
    "urllib3 <2.0 ; extra == 'all'",
    "soundfile ; extra == 'all'",
    "Pillow ; extra == 'all'",
    "gradio ; extra == 'all'",
    "numpy ; extra == 'all'",
    "ruff >=0.1.3 ; extra == 'all'",
    "mypy ==1.5.1 ; extra == 'all'",
    "typing-extensions >=4.8.0 ; extra == 'all'",
    "types-PyYAML ; extra == 'all'",
    "types-requests ; extra == 'all'",
    "types-simplejson ; extra == 'all'",
    "types-toml ; extra == 'all'",
    "types-tqdm ; extra == 'all'",
    "types-urllib3 ; extra == 'all'",
    "pydantic <2.0,>1.1 ; (python_version == \"3.8\") and extra == 'all'",
    "pydantic <3.0,>1.1 ; (python_version > \"3.8\") and extra == 'all'",
    "InquirerPy ==0.3.4 ; extra == 'cli'",
    "InquirerPy ==0.3.4 ; extra == 'dev'",
    "aiohttp ; extra == 'dev'",
    "jedi ; extra == 'dev'",
    "Jinja2 ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-env ; extra == 'dev'",
    "pytest-xdist ; extra == 'dev'",
    "pytest-vcr ; extra == 'dev'",
    "pytest-asyncio ; extra == 'dev'",
    "pytest-rerunfailures ; extra == 'dev'",
    "urllib3 <2.0 ; extra == 'dev'",
    "soundfile ; extra == 'dev'",
    "Pillow ; extra == 'dev'",
    "gradio ; extra == 'dev'",
    "numpy ; extra == 'dev'",
    "ruff >=0.1.3 ; extra == 'dev'",
    "mypy ==1.5.1 ; extra == 'dev'",
    "typing-extensions >=4.8.0 ; extra == 'dev'",
    "types-PyYAML ; extra == 'dev'",
    "types-requests ; extra == 'dev'",
    "types-simplejson ; extra == 'dev'",
    "types-toml ; extra == 'dev'",
    "types-tqdm ; extra == 'dev'",
    "types-urllib3 ; extra == 'dev'",
    "pydantic <2.0,>1.1 ; (python_version == \"3.8\") and extra == 'dev'",
    "pydantic <3.0,>1.1 ; (python_version > \"3.8\") and extra == 'dev'",
    "toml ; extra == 'fastai'",
    "fastai >=2.4 ; extra == 'fastai'",
    "fastcore >=1.3.27 ; extra == 'fastai'",
    "aiohttp ; extra == 'inference'",
    "pydantic <2.0,>1.1 ; (python_version == \"3.8\") and extra == 'inference'",
    "pydantic <3.0,>1.1 ; (python_version > \"3.8\") and extra == 'inference'",
    "ruff >=0.1.3 ; extra == 'quality'",
    "mypy ==1.5.1 ; extra == 'quality'",
    "tensorflow ; extra == 'tensorflow'",
    "pydot ; extra == 'tensorflow'",
    "graphviz ; extra == 'tensorflow'",
    "InquirerPy ==0.3.4 ; extra == 'testing'",
    "aiohttp ; extra == 'testing'",
    "jedi ; extra == 'testing'",
    "Jinja2 ; extra == 'testing'",
    "pytest ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pytest-env ; extra == 'testing'",
    "pytest-xdist ; extra == 'testing'",
    "pytest-vcr ; extra == 'testing'",
    "pytest-asyncio ; extra == 'testing'",
    "pytest-rerunfailures ; extra == 'testing'",
    "urllib3 <2.0 ; extra == 'testing'",
    "soundfile ; extra == 'testing'",
    "Pillow ; extra == 'testing'",
    "gradio ; extra == 'testing'",
    "numpy ; extra == 'testing'",
    "pydantic <2.0,>1.1 ; (python_version == \"3.8\") and extra == 'testing'",
    "pydantic <3.0,>1.1 ; (python_version > \"3.8\") and extra == 'testing'",
    "torch ; extra == 'torch'",
    "typing-extensions >=4.8.0 ; extra == 'typing'",
    "types-PyYAML ; extra == 'typing'",
    "types-requests ; extra == 'typing'",
    "types-simplejson ; extra == 'typing'",
    "types-toml ; extra == 'typing'",
    "types-tqdm ; extra == 'typing'",
    "types-urllib3 ; extra == 'typing'"
  ],
  "requires_python": ">=3.8.0",
  "summary": "client library to download and publish models, datasets and other repos on the huggingface.co hub",
  "version": "0.20.1",
  "releases": [],
  "developers": [
    "hugging_face",
    "julien@huggingface.co"
  ],
  "kwds": "huggingface_hub huggingface_token huggingface hugging models",
  "license_kwds": "apache",
  "libtype": "pypi",
  "id": "pypi_huggingface_hub",
  "homepage": "https://github.com/huggingface/huggingface_hub",
  "release_count": 92,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_fastai",
    "pypi_fastcore",
    "pypi_filelock",
    "pypi_fsspec",
    "pypi_gradio",
    "pypi_graphviz",
    "pypi_inquirerpy",
    "pypi_jedi",
    "pypi_jinja2",
    "pypi_mypy",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pillow",
    "pypi_pydantic",
    "pypi_pydot",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_pytest_env",
    "pypi_pytest_rerunfailures",
    "pypi_pytest_vcr",
    "pypi_pytest_xdist",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_ruff",
    "pypi_soundfile",
    "pypi_tensorflow",
    "pypi_toml",
    "pypi_torch",
    "pypi_tqdm",
    "pypi_types_pyyaml",
    "pypi_types_requests",
    "pypi_types_simplejson",
    "pypi_types_toml",
    "pypi_types_tqdm",
    "pypi_types_urllib3",
    "pypi_typing_extensions",
    "pypi_urllib3"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3 :: only",
    "programming language :: sql"
  ],
  "description": "an easily customizable sql parser and transpiler\nan easily customizable sql parser and transpiler\n![sqlglot logo](sqlglot.svg)\n\nsqlglot is a no-dependency sql parser, transpiler, optimizer, and engine. it can be used to format sql or translate between [20 different dialects](https://github.com/tobymao/sqlglot/blob/main/sqlglot/dialects/__init__.py) like [duckdb](https://duckdb.org/), [presto](https://prestodb.io/) / [trino](https://trino.io/), [spark](https://spark.apache.org/) / [databricks](https://www.databricks.com/), [snowflake](https://www.snowflake.com/en/), and [bigquery](https://cloud.google.com/bigquery/). it aims to read a wide variety of sql inputs and output syntactically and semantically correct sql in the targeted dialects.\n\nit is a very comprehensive generic sql parser with a robust [test suite](https://github.com/tobymao/sqlglot/blob/main/tests/). it is also quite [performant](#benchmarks), while being written purely in python.\n\nyou can easily [customize](#custom-dialects) the parser, [analyze](#metadata) queries, traverse expression trees, and programmatically [build](#build-and-modify-sql) sql.\n\nsyntax [errors](#parser-errors) are highlighted and dialect incompatibilities can warn or raise depending on configurations. however, it should be noted that sql validation is not sqlglot\u2019s goal, so some syntax errors may go unnoticed.\n\nlearn more about sqlglot in the api [documentation](https://sqlglot.com/) and the expression tree [primer](https://github.com/tobymao/sqlglot/blob/main/posts/ast_primer.md).\n\ncontributions are very welcome in sqlglot; read the [contribution guide](https://github.com/tobymao/sqlglot/blob/main/contributing.md) to get started!\n\n## table of contents\n\n* [install](#install)\n* [versioning](#versioning)\n* [get in touch](#get-in-touch)\n* [faq](#faq)\n* [examples](#examples)\n   * [formatting and transpiling](#formatting-and-transpiling)\n   * [metadata](#metadata)\n   * [parser errors](#parser-errors)\n   * [unsupported errors](#unsupported-errors)\n   * [build and modify sql](#build-and-modify-sql)\n   * [sql optimizer](#sql-optimizer)\n   * [ast introspection](#ast-introspection)\n   * [ast diff](#ast-diff)\n   * [custom dialects](#custom-dialects)\n   * [sql execution](#sql-execution)\n* [used by](#used-by)\n* [documentation](#documentation)\n* [run tests and lint](#run-tests-and-lint)\n* [benchmarks](#benchmarks)\n* [optional dependencies](#optional-dependencies)\n\n## install\n\nfrom pypi:\n\n```\npip3 install sqlglot\n```\n\nor with a local checkout:\n\n```\nmake install\n```\n\nrequirements for development (optional):\n\n```\nmake install-dev\n```\n\n## versioning\n\ngiven a version number `major`.`minor`.`patch`, sqlglot uses the following versioning strategy:\n\n- the `patch` version is incremented when there are backwards-compatible fixes or feature additions.\n- the `minor` version is incremented when there are backwards-incompatible fixes or feature additions.\n- the `major` version is incremented when there are significant backwards-incompatible fixes or feature additions.\n\n## get in touch\n\nwe'd love to hear from you. join our community [slack channel](https://tobikodata.com/slack)!\n\n## faq\n\ni tried to parse sql that should be valid but it failed, why did that happen?\n  \n* you need to specify the dialect to read the sql properly, by default it is sqlglot's dialect which is designed to be a superset of all dialects `parse_one(sql, dialect=\"spark\")`. if you tried specifying the dialect and it still doesn't work, please file an issue.\n\ni tried to output sql but it's not in the correct dialect!\n  \n* you need to specify the dialect to write the sql properly, by default it is in sqlglot's dialect `parse_one(sql, dialect=\"spark\").sql(dialect=\"spark\")`.\n\ni tried to parse invalid sql and it should raise an error but it worked! why didn't it validate my sql.\n  \n* sqlglot is not a validator and designed to be very forgiving, handling things like trailing commas.\n\n## examples\n\n### formatting and transpiling\n\neasily translate from one dialect to another. for example, date/time functions vary between dialects and can be hard to deal with:\n\n```python\nimport sqlglot\nsqlglot.transpile(\"select epoch_ms(1618088028295)\", read=\"duckdb\", write=\"hive\")[0]\n```\n\n```sql\n'select from_unixtime(1618088028295 / 1000)'\n```\n\nsqlglot can even translate custom time formats:\n\n```python\nimport sqlglot\nsqlglot.transpile(\"select strftime(x, '%y-%-m-%s')\", read=\"duckdb\", write=\"hive\")[0]\n```\n\n```sql\n\"select date_format(x, 'yy-m-ss')\"\n```\n\nas another example, let's suppose that we want to read in a sql query that contains a cte and a cast to `real`, and then transpile it to spark, which uses backticks for identifiers and `float` instead of `real`:\n\n```python\nimport sqlglot\n\nsql = \"\"\"with baz as (select a, c from foo where a = 1) select f.a, b.b, baz.c, cast(\"b\".\"a\" as real) d from foo f join bar b on f.a = b.a left join baz on f.a = baz.a\"\"\"\nprint(sqlglot.transpile(sql, write=\"spark\", identify=true, pretty=true)[0])\n```\n\n```sql\nwith `baz` as (\n  select\n    `a`,\n    `c`\n  from `foo`\n  where\n    `a` = 1\n)\nselect\n  `f`.`a`,\n  `b`.`b`,\n  `baz`.`c`,\n  cast(`b`.`a` as float) as `d`\nfrom `foo` as `f`\njoin `bar` as `b`\n  on `f`.`a` = `b`.`a`\nleft join `baz`\n  on `f`.`a` = `baz`.`a`\n```\n\ncomments are also preserved on a best-effort basis when transpiling sql code:\n\n```python\nsql = \"\"\"\n/* multi\n   line\n   comment\n*/\nselect\n  tbl.cola /* comment 1 */ + tbl.colb /* comment 2 */,\n  cast(x as int), # comment 3\n  y               -- comment 4\nfrom\n  bar /* comment 5 */,\n  tbl #          comment 6\n\"\"\"\n\nprint(sqlglot.transpile(sql, read='mysql', pretty=true)[0])\n```\n\n```sql\n/* multi\n   line\n   comment\n*/\nselect\n  tbl.cola /* comment 1 */ + tbl.colb /* comment 2 */,\n  cast(x as int), /* comment 3 */\n  y /* comment 4 */\nfrom bar /* comment 5 */, tbl /*          comment 6 */\n```\n\n\n### metadata\n\nyou can explore sql with expression helpers to do things like find columns and tables:\n\n```python\nfrom sqlglot import parse_one, exp\n\n# print all column references (a and b)\nfor column in parse_one(\"select a, b + 1 as c from d\").find_all(exp.column):\n    print(column.alias_or_name)\n\n# find all projections in select statements (a and c)\nfor select in parse_one(\"select a, b + 1 as c from d\").find_all(exp.select):\n    for projection in select.expressions:\n        print(projection.alias_or_name)\n\n# find all tables (x, y, z)\nfor table in parse_one(\"select * from x join y join z\").find_all(exp.table):\n    print(table.name)\n```\n\nread the [ast primer](https://github.com/tobymao/sqlglot/blob/main/posts/ast_primer.md) to learn more about sqlglot's internals.\n\n### parser errors\n\nwhen the parser detects an error in the syntax, it raises a parseerror:\n\n```python\nimport sqlglot\nsqlglot.transpile(\"select foo( from bar\")\n```\n\n```\nsqlglot.errors.parseerror: expecting ). line 1, col: 13.\n  select foo( from bar\n              ~~~~\n```\n\nstructured syntax errors are accessible for programmatic use:\n\n```python\nimport sqlglot\ntry:\n    sqlglot.transpile(\"select foo( from bar\")\nexcept sqlglot.errors.parseerror as e:\n    print(e.errors)\n```\n\n```python\n[{\n  'description': 'expecting )',\n  'line': 1,\n  'col': 16,\n  'start_context': 'select foo( ',\n  'highlight': 'from',\n  'end_context': ' bar',\n  'into_expression': none,\n}]\n```\n\n### unsupported errors\n\npresto `approx_distinct` supports the accuracy argument which is not supported in hive:\n\n```python\nimport sqlglot\nsqlglot.transpile(\"select approx_distinct(a, 0.1) from foo\", read=\"presto\", write=\"hive\")\n```\n\n```sql\napprox_count_distinct does not support accuracy\n'select approx_count_distinct(a) from foo'\n```\n\n### build and modify sql\n\nsqlglot supports incrementally building sql expressions:\n\n```python\nfrom sqlglot import select, condition\n\nwhere = condition(\"x=1\").and_(\"y=1\")\nselect(\"*\").from_(\"y\").where(where).sql()\n```\n\n```sql\n'select * from y where x = 1 and y = 1'\n```\n\nyou can also modify a parsed tree:\n\n```python\nfrom sqlglot import parse_one\nparse_one(\"select x from y\").from_(\"z\").sql()\n```\n\n```sql\n'select x from z'\n```\n\nthere is also a way to recursively transform the parsed tree by applying a mapping function to each tree node:\n\n```python\nfrom sqlglot import exp, parse_one\n\nexpression_tree = parse_one(\"select a from x\")\n\ndef transformer(node):\n    if isinstance(node, exp.column) and node.name == \"a\":\n        return parse_one(\"fun(a)\")\n    return node\n\ntransformed_tree = expression_tree.transform(transformer)\ntransformed_tree.sql()\n```\n\n```sql\n'select fun(a) from x'\n```\n\n### sql optimizer\n\nsqlglot can rewrite queries into an \"optimized\" form. it performs a variety of [techniques](https://github.com/tobymao/sqlglot/blob/main/sqlglot/optimizer/optimizer.py) to create a new canonical ast. this ast can be used to standardize queries or provide the foundations for implementing an actual engine. for example:\n\n```python\nimport sqlglot\nfrom sqlglot.optimizer import optimize\n\nprint(\n    optimize(\n        sqlglot.parse_one(\"\"\"\n            select a or (b or (c and d))\n            from x\n            where z = date '2021-01-01' + interval '1' month or 1 = 0\n        \"\"\"),\n        schema={\"x\": {\"a\": \"int\", \"b\": \"int\", \"c\": \"int\", \"d\": \"int\", \"z\": \"string\"}}\n    ).sql(pretty=true)\n)\n```\n\n```sql\nselect\n  (\n    \"x\".\"a\" <> 0 or \"x\".\"b\" <> 0 or \"x\".\"c\" <> 0\n  )\n  and (\n    \"x\".\"a\" <> 0 or \"x\".\"b\" <> 0 or \"x\".\"d\" <> 0\n  ) as \"_col_0\"\nfrom \"x\" as \"x\"\nwhere\n  cast(\"x\".\"z\" as date) = cast('2021-02-01' as date)\n```\n\n### ast introspection\n\nyou can see the ast version of the sql by calling `repr`:\n\n```python\nfrom sqlglot import parse_one\nprint(repr(parse_one(\"select a + 1 as z\")))\n```\n\n```python\n(select expressions:\n  (alias this:\n    (add this:\n      (column this:\n        (identifier this: a, quoted: false)), expression:\n      (literal this: 1, is_string: false)), alias:\n    (identifier this: z, quoted: false)))\n```\n\n### ast diff\n\nsqlglot can calculate the difference between two expressions and output changes in a form of a sequence of actions needed to transform a source expression into a target one:\n\n```python\nfrom sqlglot import diff, parse_one\ndiff(parse_one(\"select a + b, c, d\"), parse_one(\"select c, a - b, d\"))\n```\n\n```python\n[\n  remove(expression=(add this:\n    (column this:\n      (identifier this: a, quoted: false)), expression:\n    (column this:\n      (identifier this: b, quoted: false)))),\n  insert(expression=(sub this:\n    (column this:\n      (identifier this: a, quoted: false)), expression:\n    (column this:\n      (identifier this: b, quoted: false)))),\n  move(expression=(column this:\n    (identifier this: c, quoted: false))),\n  keep(source=(identifier this: b, quoted: false), target=(identifier this: b, quoted: false)),\n  ...\n]\n```\n\nsee also: [semantic diff for sql](https://github.com/tobymao/sqlglot/blob/main/posts/sql_diff.md).\n\n### custom dialects\n\n[dialects](https://github.com/tobymao/sqlglot/tree/main/sqlglot/dialects) can be added by subclassing `dialect`:\n\n```python\nfrom sqlglot import exp\nfrom sqlglot.dialects.dialect import dialect\nfrom sqlglot.generator import generator\nfrom sqlglot.tokens import tokenizer, tokentype\n\n\nclass custom(dialect):\n    class tokenizer(tokenizer):\n        quotes = [\"'\", '\"']\n        identifiers = [\"`\"]\n\n        keywords = {\n            **tokenizer.keywords,\n            \"int64\": tokentype.bigint,\n            \"float64\": tokentype.double,\n        }\n\n    class generator(generator):\n        transforms = {exp.array: lambda self, e: f\"[{self.expressions(e)}]\"}\n\n        type_mapping = {\n            exp.datatype.type.tinyint: \"int64\",\n            exp.datatype.type.smallint: \"int64\",\n            exp.datatype.type.int: \"int64\",\n            exp.datatype.type.bigint: \"int64\",\n            exp.datatype.type.decimal: \"numeric\",\n            exp.datatype.type.float: \"float64\",\n            exp.datatype.type.double: \"float64\",\n            exp.datatype.type.boolean: \"bool\",\n            exp.datatype.type.text: \"string\",\n        }\n\nprint(dialect[\"custom\"])\n```\n\n```\n<class '__main__.custom'>\n```\n\n### sql execution\n\none can even interpret sql queries using sqlglot, where the tables are represented as python dictionaries. although the engine is not very fast (it's not supposed to be) and is in a relatively early stage of development, it can be useful for unit testing and running sql natively across python objects. additionally, the foundation can be easily integrated with fast compute kernels (arrow, pandas). below is an example showcasing the execution of a select expression that involves aggregations and joins:\n\n```python\nfrom sqlglot.executor import execute\n\ntables = {\n    \"sushi\": [\n        {\"id\": 1, \"price\": 1.0},\n        {\"id\": 2, \"price\": 2.0},\n        {\"id\": 3, \"price\": 3.0},\n    ],\n    \"order_items\": [\n        {\"sushi_id\": 1, \"order_id\": 1},\n        {\"sushi_id\": 1, \"order_id\": 1},\n        {\"sushi_id\": 2, \"order_id\": 1},\n        {\"sushi_id\": 3, \"order_id\": 2},\n    ],\n    \"orders\": [\n        {\"id\": 1, \"user_id\": 1},\n        {\"id\": 2, \"user_id\": 2},\n    ],\n}\n\nexecute(\n    \"\"\"\n    select\n      o.user_id,\n      sum(s.price) as price\n    from orders o\n    join order_items i\n      on o.id = i.order_id\n    join sushi s\n      on i.sushi_id = s.id\n    group by o.user_id\n    \"\"\",\n    tables=tables\n)\n```\n\n```python\nuser_id price\n      1   4.0\n      2   3.0\n```\n\nsee also: [writing a python sql engine from scratch](https://github.com/tobymao/sqlglot/blob/main/posts/python_sql_engine.md).\n\n## used by\n\n* [sqlmesh](https://github.com/tobikodata/sqlmesh)\n* [fugue](https://github.com/fugue-project/fugue)\n* [ibis](https://github.com/ibis-project/ibis)\n* [mysql-mimic](https://github.com/kelsin/mysql-mimic)\n* [querybook](https://github.com/pinterest/querybook)\n* [quokka](https://github.com/marsupialtail/quokka)\n* [splink](https://github.com/moj-analytical-services/splink)\n\n## documentation\n\nsqlglot uses [pdoc](https://pdoc.dev/) to serve its api documentation.\n\na hosted version is on the [sqlglot website](https://sqlglot.com/), or you can build locally with:\n\n```\nmake docs-serve\n```\n\n## run tests and lint\n\n```\nmake style  # only linter checks\nmake unit   # only unit tests\nmake check  # full test suite & linter checks\n```\n\n## benchmarks\n\n[benchmarks](https://github.com/tobymao/sqlglot/blob/main/benchmarks/bench.py) run on python 3.10.5 in seconds.\n\n|           query |         sqlglot |        sqlfluff |         sqltree |        sqlparse |  moz_sql_parser |        sqloxide |\n| --------------- | --------------- | --------------- | --------------- | --------------- | --------------- | --------------- |\n|            tpch |   0.01308 (1.0) | 1.60626 (122.7) | 0.01168 (0.893) | 0.04958 (3.791) | 0.08543 (6.531) | 0.00136 (0.104) |\n|           short |   0.00109 (1.0) | 0.14134 (129.2) | 0.00099 (0.906) | 0.00342 (3.131) | 0.00652 (5.970) | 8.76e-5 (0.080) |\n|            long |   0.01399 (1.0) | 2.12632 (151.9) | 0.01126 (0.805) | 0.04410 (3.151) | 0.06671 (4.767) | 0.00107 (0.076) |\n|           crazy |   0.03969 (1.0) | 24.3777 (614.1) | 0.03917 (0.987) | 11.7043 (294.8) | 1.03280 (26.02) | 0.00625 (0.157) |\n\n\n## optional dependencies\n\nsqlglot uses [dateutil](https://github.com/dateutil/dateutil) to simplify literal timedelta expressions. the optimizer will not simplify expressions like the following if the module cannot be found:\n\n```sql\nx + interval '1' month\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "acryl-sqlglot",
  "package_url": "https://pypi.org/project/acryl-sqlglot/",
  "project_url": "https://pypi.org/project/acryl-sqlglot/",
  "project_urls": {
    "Homepage": "https://github.com/tobymao/sqlglot"
  },
  "release_url": "https://pypi.org/project/acryl-sqlglot/20.4.1.dev14/",
  "requires_dist": [
    "autoflake ; extra == 'dev'",
    "black ; extra == 'dev'",
    "duckdb >=0.6 ; extra == 'dev'",
    "isort ; extra == 'dev'",
    "mypy >=0.990 ; extra == 'dev'",
    "pandas ; extra == 'dev'",
    "pyspark ; extra == 'dev'",
    "python-dateutil ; extra == 'dev'",
    "pdoc ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "types-python-dateutil ; extra == 'dev'",
    "maturin <2.0,>=1.4 ; extra == 'dev'",
    "sqlglotrs ==0.1.0 ; extra == 'rs'"
  ],
  "requires_python": ">=3.7",
  "summary": "an easily customizable sql parser and transpiler",
  "version": "20.4.1.dev14",
  "releases": [],
  "developers": [
    "toby.mao@gmail.com",
    "toby_mao"
  ],
  "kwds": "sqlglot sqlfluff sqlmesh python_sql_engine moz_sql_parser",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_acryl_sqlglot",
  "homepage": "https://github.com/tobymao/sqlglot",
  "release_count": 9,
  "dependency_ids": [
    "pypi_autoflake",
    "pypi_black",
    "pypi_duckdb",
    "pypi_isort",
    "pypi_maturin",
    "pypi_mypy",
    "pypi_pandas",
    "pypi_pdoc",
    "pypi_pre_commit",
    "pypi_pyspark",
    "pypi_python_dateutil",
    "pypi_sqlglotrs",
    "pypi_types_python_dateutil"
  ],
  "documentation_summary": "SQLGlot is a versatile, no-dependency SQL parser, transpiler, optimizer, and engine that supports formatting and translating SQL across 20 different dialects, including DuckDB, Presto/Trino, Spark/Databricks, Snowflake, and BigQuery. It aims to accurately parse a wide variety of SQL inputs and generate correct SQL for targeted dialects. Written entirely in Python and easily customizable, SQLGlot can analyze queries, traverse expression trees, and build SQL programmatically. It highlights syntax errors and dialect incompatibilities, although it is not designed as a SQL validator. The latest version, 21.1.2.dev10, was released on February 21, 2024, and requires Python 3.7 or higher. SQLGlot is licensed under the MIT License and welcomes contributions.",
  "embedding": [
    -0.0174794252961874,
    0.008274159394204617,
    0.01793087087571621,
    -0.037865035235881805,
    -0.011779919266700745,
    0.04511638730764389,
    -0.01635081134736538,
    -0.017225487157702446,
    -0.01697154901921749,
    -0.025351515039801598,
    0.043649185448884964,
    0.008513989858329296,
    -0.03653891384601593,
    0.03179872781038284,
    0.011201504617929459,
    -0.0012917352141812444,
    0.015603102743625641,
    -0.014121796004474163,
    0.01656242646276951,
    0.0025005878414958715,
    0.02736891433596611,
    -0.0035974604543298483,
    -0.022191394120454788,
    -0.01188572682440281,
    -0.007977897301316261,
    0.01787444017827511,
    0.017380671575665474,
    -0.014601456932723522,
    -0.009487420320510864,
    0.02468845434486866,
    0.028271807357668877,
    -0.013818481005728245,
    -0.019736655056476593,
    -0.010079943574965,
    -0.00315306824631989,
    -0.00618622126057744,
    -0.0007437397143803537,
    -0.011483658105134964,
    0.008062543347477913,
    0.009988242760300636,
    0.0347895585000515,
    -0.0009399247355759144,
    -0.006348459515720606,
    -0.021076885983347893,
    -0.01301434263586998,
    0.019934162497520447,
    0.005971079226583242,
    -0.01860804110765457,
    -0.01599811762571335,
    -0.011857511475682259,
    0.020258640870451927,
    0.01501058042049408,
    0.0040559605695307255,
    -0.02165530063211918,
    0.004059487488120794,
    0.010178697295486927,
    0.030726544559001923,
    0.023178931325674057,
    -0.003625675803050399,
    -0.005442040506750345,
    0.024787208065390587,
    -0.003609804669395089,
    -0.022910885512828827,
    0.016689395532011986,
    -0.00636609410867095,
    0.0004607041773851961,
    -0.021852808073163033,
    0.004175875801593065,
    -0.014418057166039944,
    -0.008245944045484066,
    0.038316480815410614,
    0.034620266407728195,
    0.007378321141004562,
    -0.019017163664102554,
    0.03385845199227333,
    -0.04252057150006294,
    -0.0160263329744339,
    0.0013605101266875863,
    -0.033068422228097916,
    0.007498236373066902,
    0.029287559911608696,
    0.012400657869875431,
    -0.0019733128137886524,
    0.031008698046207428,
    0.007963789626955986,
    0.023813778534531593,
    -0.018650364130735397,
    0.016689395532011986,
    -0.03972724825143814,
    -0.0254643764346838,
    -0.012294850312173367,
    0.018241241574287415,
    0.0215283315628767,
    0.035664234310388565,
    -0.02600046992301941,
    0.02600046992301941,
    -0.014354572631418705,
    0.026451915502548218,
    -0.002736891619861126,
    -0.026846930384635925,
    -0.033068422228097916,
    0.012950858101248741,
    -0.01685868762433529,
    -0.013374088332057,
    -0.029710792005062103,
    -0.010891134850680828,
    0.02436397783458233,
    0.002696331823244691,
    0.033632729202508926,
    0.002248412696644664,
    -0.00043557488243095577,
    0.038824357092380524,
    -0.00817540567368269,
    -0.02528097666800022,
    0.012189042754471302,
    -0.015701856464147568,
    0.04460851103067398,
    -0.005872325040400028,
    -0.007470021024346352,
    -0.026931576430797577,
    0.015264518558979034,
    0.011638842523097992,
    -0.00562896765768528,
    -0.029682576656341553,
    0.02310839295387268,
    0.008746766485273838,
    -0.0214719008654356,
    -0.010115212760865688,
    -0.020315071567893028,
    -0.019412178546190262,
    0.00923348218202591,
    0.006129790563136339,
    0.012809780426323414,
    -0.006672936491668224,
    -0.009494474157691002,
    0.008379966951906681,
    -0.024998823180794716,
    -0.01699976436793804,
    -0.025506699457764626,
    -0.01983540877699852,
    0.016491888090968132,
    0.008104867301881313,
    -0.011053374037146568,
    0.0030684222001582384,
    0.013543380424380302,
    0.017832117155194283,
    0.012273688800632954,
    0.02245943993330002,
    0.008245944045484066,
    -0.02034328691661358,
    0.017465317621827126,
    -0.012428873218595982,
    -0.0029044202528893948,
    0.009480366483330727,
    0.008478720672428608,
    0.013917234726250172,
    -0.029146483168005943,
    0.013769103214144707,
    -0.0034122969955205917,
    0.009282859042286873,
    0.007145544048398733,
    0.02087937854230404,
    0.003105454845353961,
    -0.0011762285139411688,
    -0.004711967892944813,
    0.016068655997514725,
    0.009332235902547836,
    -0.013063719496130943,
    -0.022826239466667175,
    -0.010679519735276699,
    0.010891134850680828,
    0.01599811762571335,
    0.0035904066171497107,
    -0.006210909690707922,
    0.017789794132113457,
    0.0038408180698752403,
    0.011815188452601433,
    0.004771925508975983,
    -0.0242087934166193,
    0.0024035973474383354,
    0.02066776342689991,
    0.02501293085515499,
    0.009988242760300636,
    0.03383023664355278,
    -0.012929696589708328,
    -0.011201504617929459,
    -0.0072725131176412106,
    0.014502703212201595,
    -0.0017652245005592704,
    -0.008168351836502552,
    -0.0007261050632223487,
    0.03879614174365997,
    -0.016802256926894188,
    -0.033604513853788376,
    -0.5792052745819092,
    -0.013084881007671356,
    -0.00515988701954484,
    -0.04672466218471527,
    -0.0120761813595891,
    -0.0031072183046489954,
    -0.02272748574614525,
    -0.007039736490696669,
    -0.029146483168005943,
    0.0069445096887648106,
    -0.030895836651325226,
    0.014284034259617329,
    0.0011938631068915129,
    -0.002828591503202915,
    0.00035181047860533,
    -0.0029820126947015524,
    0.005290383007377386,
    -0.016209734603762627,
    -0.004877733066678047,
    0.014030096121132374,
    -0.03275805339217186,
    0.01929931715130806,
    0.000757847388740629,
    0.02278391644358635,
    0.013486949726939201,
    0.04127909615635872,
    -0.006341405678540468,
    -0.01451681088656187,
    0.0067857978865504265,
    0.024067716673016548,
    -0.044777803122997284,
    0.007822712883353233,
    -0.0017361274221912026,
    -0.012901481240987778,
    0.058180104941129684,
    0.005964025389403105,
    -0.006270867306739092,
    0.02608511596918106,
    0.0013023159699514508,
    0.04204091057181358,
    -0.0004602633125614375,
    -0.01938396319746971,
    -0.010101105086505413,
    0.005678344517946243,
    0.017549963667988777,
    0.0028391722589731216,
    -0.0006097166333347559,
    -0.004923583008348942,
    -0.01766282506287098,
    -0.01833999529480934,
    0.0032394779846072197,
    0.006905713584274054,
    0.009713143110275269,
    -0.0040101101621985435,
    0.029851868748664856,
    -0.005505525507032871,
    0.0349024198949337,
    0.002615212695673108,
    -0.007127909455448389,
    -0.013479895889759064,
    -0.0012979073217138648,
    0.018170703202486038,
    0.027058545500040054,
    -0.008824358694255352,
    0.007201974745839834,
    -0.014206442050635815,
    -0.00042124674655497074,
    -0.014925934374332428,
    0.008118974976241589,
    -0.008478720672428608,
    0.01646367274224758,
    0.013204796239733696,
    -0.01774747110903263,
    -0.031855158507823944,
    0.013035504147410393,
    0.04869974032044411,
    0.028582176193594933,
    0.01697154901921749,
    0.018325887620449066,
    0.030275098979473114,
    0.0019398070871829987,
    -0.004655537195503712,
    -0.007709851488471031,
    -0.029823653399944305,
    0.04669644683599472,
    -0.0012714554322883487,
    -0.015701856464147568,
    8.459101809421554e-05,
    -0.001151540083810687,
    0.005068187136203051,
    0.005149306263774633,
    0.03978367894887924,
    -0.02048436366021633,
    -0.043762050569057465,
    0.014841288328170776,
    0.017437102273106575,
    -0.021246178075671196,
    -0.003369973972439766,
    0.010728896595537663,
    -0.03555137291550636,
    -0.005181048531085253,
    -0.021189747378230095,
    0.017521748319268227,
    0.02063954807817936,
    0.01801551692187786,
    0.030416175723075867,
    -0.00024886842584237456,
    -0.012351281009614468,
    -0.01683047227561474,
    -0.016901010647416115,
    0.012823888100683689,
    -0.030190452933311462,
    -0.017648717388510704,
    -0.01905948668718338,
    0.001597695634700358,
    -0.03225017338991165,
    0.007223136257380247,
    0.0008936338708736002,
    -0.010806488804519176,
    -0.0140724191442132,
    -0.005272748414427042,
    -0.015123441815376282,
    0.003904302604496479,
    -0.005706559866666794,
    0.009127674624323845,
    -0.004175875801593065,
    0.021133316680788994,
    -0.011540088802576065,
    -0.013451680541038513,
    0.025506699457764626,
    0.0187067948281765,
    0.008796143345534801,
    0.022050317376852036,
    -0.018128380179405212,
    0.010164589621126652,
    0.009367505088448524,
    0.013783210888504982,
    0.009057136252522469,
    -0.0008931930060498416,
    0.0011127438629046082,
    -0.006609451957046986,
    0.006207382772117853,
    -0.0030119915027171373,
    0.011723488569259644,
    -0.0160263329744339,
    -0.008387020789086819,
    -0.014728426001966,
    0.00900775846093893,
    0.016308488324284554,
    -0.0031160356011241674,
    -0.03230660408735275,
    -0.0004972959868609905,
    -0.03380202129483223,
    0.020498471334576607,
    -0.031347282230854034,
    0.0014927698066458106,
    0.0016990946605801582,
    -0.02677639201283455,
    -0.020004702731966972,
    -0.03151657432317734,
    0.014121796004474163,
    0.018142487853765488,
    0.018720902502536774,
    -0.008810251019895077,
    -0.03399952873587608,
    -0.01712673343718052,
    -0.043254170566797256,
    0.03346343711018562,
    0.0008627733332104981,
    -0.025055253878235817,
    0.017846224829554558,
    -0.015193980187177658,
    0.009550904855132103,
    0.02396896295249462,
    -0.012915588915348053,
    0.0010801198659464717,
    -0.016816364601254463,
    0.020117564126849174,
    0.0045814719051122665,
    -0.00042256934102624655,
    0.00475076399743557,
    0.01619562692940235,
    -0.010221020318567753,
    -0.019172348082065582,
    0.038316480815410614,
    0.043225955218076706,
    -0.0008050199830904603,
    0.024970607832074165,
    0.008958381600677967,
    0.01289442740380764,
    -0.006620032712817192,
    0.006274394225329161,
    -0.01352221891283989,
    0.00463084876537323,
    -0.02061133272945881,
    0.009699035435914993,
    0.0021814012434333563,
    -0.011857511475682259,
    -0.01131436601281166,
    0.02728426828980446,
    0.023757345974445343,
    0.01959557831287384,
    -0.0018798494711518288,
    -0.014714318327605724,
    -0.02120385505259037,
    -0.014432164840400219,
    0.029174698516726494,
    -0.021316716447472572,
    -0.012605219148099422,
    -0.005720667541027069,
    0.02117563970386982,
    -0.012915588915348053,
    -0.02176816202700138,
    -0.0008557194378226995,
    0.004845990799367428,
    0.025478484109044075,
    -0.0039007756859064102,
    0.01977897807955742,
    -0.031939804553985596,
    -0.021866915747523308,
    0.017549963667988777,
    0.0030049376655369997,
    0.028300022706389427,
    0.014982365071773529,
    0.00416176812723279,
    0.019905947148799896,
    -0.028596283867955208,
    -0.0001461468345951289,
    0.0062003289349377155,
    -0.05078767612576485,
    -0.0022783917374908924,
    0.006045144516974688,
    0.01646367274224758,
    -0.029964730143547058,
    0.0004168380983173847,
    0.008556312881410122,
    0.042605217546224594,
    -0.030726544559001923,
    0.025859393179416656,
    -0.020032918080687523,
    0.012605219148099422,
    0.014199388213455677,
    0.024758992716670036,
    -0.02793322317302227,
    0.012012696824967861,
    -0.006299082655459642,
    0.001863978337496519,
    -0.006768163293600082,
    -0.02195156365633011,
    0.006069832947105169,
    -0.013275334611535072,
    0.020738301798701286,
    -0.0013358216965571046,
    0.0020879379007965326,
    0.02037150226533413,
    0.01664707250893116,
    -0.015969902276992798,
    0.015885256230831146,
    0.03854220360517502,
    -0.0014698447193950415,
    -0.00765342079102993,
    0.0013137784553691745,
    0.017832117155194283,
    0.014354572631418705,
    0.036792851984500885,
    -0.01551845669746399,
    -0.0014142957516014576,
    -0.02712908387184143,
    -0.011455442756414413,
    -0.0028462260961532593,
    -0.02760874666273594,
    -0.04827651008963585,
    -0.02624030038714409,
    -0.03148835897445679,
    0.01554667204618454,
    0.006972725037485361,
    -0.00621796352788806,
    0.05352456867694855,
    0.019525039941072464,
    0.012203150428831577,
    -0.0007000940386205912,
    -0.04472137242555618,
    0.020540794357657433,
    -0.008789089508354664,
    -0.009423935785889626,
    -0.030924052000045776,
    -0.03879614174365997,
    -0.006256759632378817,
    -0.003883141092956066,
    0.005420878995209932,
    -0.0017925581196323037,
    0.01122971996665001,
    -1.1007854482159019e-05,
    0.01857982575893402,
    -0.0227557010948658,
    -0.005473783239722252,
    0.03699035942554474,
    -0.017606394365429878,
    -0.0008799670613370836,
    -0.004186456557363272,
    -0.008542205207049847,
    0.0027333644684404135,
    -0.03106512874364853,
    -0.014728426001966,
    0.04570890963077545,
    -0.0029714317061007023,
    -0.013536326587200165,
    -0.03064189851284027,
    -0.015363272279500961,
    -0.023489300161600113,
    -0.0036362565588206053,
    0.016788149252533913,
    -0.01673171855509281,
    -0.025111684575676918,
    0.009727250784635544,
    0.028878437355160713,
    0.0058088405057787895,
    0.01843874901533127,
    0.020272748544812202,
    -0.0005431459867395461,
    -0.02308017760515213,
    -0.03230660408735275,
    -0.007462967187166214,
    -0.0034634375479072332,
    0.02355983853340149,
    0.001046614139340818,
    0.004835410043597221,
    0.004507406149059534,
    -0.03857041895389557,
    -0.014030096121132374,
    -0.02522454597055912,
    -0.014869503676891327,
    -0.0013455207226797938,
    0.009713143110275269,
    0.008358805440366268,
    0.022318363189697266,
    -0.00609804829582572,
    0.005442040506750345,
    0.031375497579574585,
    0.007956735789775848,
    -0.00036349339643493295,
    0.002209616592153907,
    0.0032571125775575638,
    0.01557488739490509,
    0.003345285542309284,
    -0.012132612057030201,
    0.00724429776892066,
    -0.017267810180783272,
    0.04012226685881615,
    0.002280155196785927,
    0.02962614595890045,
    -0.006560075096786022,
    -0.004507406149059534,
    -0.026677638292312622,
    -0.012619326822459698,
    -0.005029391031712294,
    0.00979778915643692,
    0.016759933903813362,
    -0.002840935718268156,
    0.026197977364063263,
    0.0322783887386322,
    -0.003535739379003644,
    -0.00923348218202591,
    0.022050317376852036,
    0.028271807357668877,
    0.001476016826927662,
    -0.008690335787832737,
    -0.00475076399743557,
    -0.005124617833644152,
    -0.02504114620387554,
    -0.01992005482316017,
    0.015645425766706467,
    -0.021217962726950645,
    -0.010630142875015736,
    0.009226428344845772,
    0.03504349663853645,
    -0.02391253225505352,
    -0.00228544557467103,
    0.026607099920511246,
    0.005121090915054083,
    0.022261932492256165,
    -0.024222901090979576,
    0.024533269926905632,
    -0.02039971761405468,
    0.01155419647693634,
    -0.036200329661369324,
    0.012541734613478184,
    0.00457089114934206,
    -0.031826943159103394,
    0.0030613683629781008,
    -0.00671525951474905,
    0.012619326822459698,
    -0.01777568645775318,
    0.015123441815376282,
    0.007251351606100798,
    -0.05214201658964157,
    -0.022106748074293137,
    -0.025633668527007103,
    -0.0010095813777297735,
    -0.0034316950477659702,
    0.020921701565384865,
    -0.0019909474067389965,
    0.008006112650036812,
    0.02543616108596325,
    -0.012696919031441212,
    -0.011321419849991798,
    0.006193275097757578,
    -0.035128142684698105,
    -0.0013472841819748282,
    -0.018904302269220352,
    0.012132612057030201,
    0.0019644955173134804,
    -0.006722313351929188,
    0.008845520205795765,
    0.038852572441101074,
    0.012365388683974743,
    -0.013874911703169346,
    -0.03112155944108963,
    0.013726780191063881,
    -0.007681636139750481,
    0.025591345503926277,
    0.007321889977902174,
    0.01855161041021347,
    0.002832118421792984,
    -0.014559133909642696,
    -0.03346343711018562,
    -0.0007265459280461073,
    -0.02999294549226761,
    -0.005452621262520552,
    -0.008704443462193012,
    0.038429342210292816,
    0.0026681164745241404,
    0.015236303210258484,
    -0.009332235902547836,
    -0.0002360833459533751,
    -0.02058311738073826,
    -0.0214154701679945,
    -0.003883141092956066,
    -0.0009804842993617058,
    -0.014629672281444073,
    -0.009402774274349213,
    0.03538208082318306,
    -0.00424994109198451,
    -0.013247119262814522,
    0.008690335787832737,
    -0.04452386498451233,
    0.021697623655200005,
    0.007822712883353233,
    0.008753820322453976,
    0.018960732966661453,
    0.017973193898797035,
    -0.01219609659165144,
    -0.021133316680788994,
    0.008260051719844341,
    0.023461084812879562,
    0.0015253938036039472,
    -0.007554667070508003,
    -0.01249235775321722,
    -0.009148836135864258,
    -0.0074347518384456635,
    -0.011011051014065742,
    -0.003147777868434787,
    -0.009247589856386185,
    -0.0026592991780489683,
    -0.01369856484234333,
    -0.007688689976930618,
    -0.021542439237236977,
    0.011871619150042534,
    -0.03546672686934471,
    -0.021627085283398628,
    -0.015885256230831146,
    -0.021401362493634224,
    0.016125086694955826,
    0.004623794928193092,
    0.007131436374038458,
    0.005286856088787317,
    -0.00897954311221838,
    -0.03287091478705406,
    -0.00950152799487114,
    -0.007999058812856674,
    0.00030662177596241236,
    -0.005953444633632898,
    0.01525041088461876,
    0.01140606589615345,
    0.04472137242555618,
    0.0070044673047959805,
    0.024067716673016548,
    0.025379730388522148,
    -0.012845050543546677,
    -0.0004580589884426445,
    -0.0281448382884264,
    -0.007343051489442587,
    -0.011561250314116478,
    0.0032959086820483208,
    -0.012160827405750751,
    0.016985656693577766,
    -0.0006105983629822731,
    -0.0322219580411911,
    -0.02787679247558117,
    0.008401128463447094,
    -0.007085586432367563,
    0.011088643223047256,
    -0.01022807415574789,
    -0.027538206428289413,
    -0.02367269992828369,
    0.03241946920752525,
    0.0080413818359375,
    0.015504349023103714,
    -0.03061368316411972,
    0.006253232713788748,
    0.026437807828187943,
    -0.0018031388754025102,
    0.02635316178202629,
    0.004182929638773203,
    0.021937455981969833,
    -0.007731013000011444,
    0.022741593420505524,
    0.015800610184669495,
    0.017324240878224373,
    -0.01718316413462162,
    -0.010065835900604725,
    -0.036849282681941986,
    -0.00457089114934206,
    -0.014982365071773529,
    0.016308488324284554,
    0.04407241940498352,
    -0.013959557749330997,
    0.011935104615986347,
    -0.0022378319408744574,
    0.018749117851257324,
    0.009304020553827286,
    0.001381671754643321,
    0.022318363189697266,
    -0.028596283867955208,
    0.00712438253685832,
    -0.025605453178286552,
    -0.01448859553784132,
    -0.024970607832074165,
    -0.0032341876067221165,
    -0.013896073214709759,
    0.0038337642326951027,
    0.027481775730848312,
    -0.012626380659639835,
    -0.019101809710264206,
    0.015828825533390045,
    -0.015476133674383163,
    0.02305196225643158,
    0.004824829287827015,
    0.01884787157177925,
    0.014107688330113888,
    0.017408886924386024,
    -0.026705853641033173,
    -0.013719726353883743,
    -0.009304020553827286,
    -0.018368210643529892,
    0.007999058812856674,
    0.021429577842354774,
    -0.0255208071321249,
    -0.003084293333813548,
    0.025986362248659134,
    -0.006697624921798706,
    -0.046386078000068665,
    -0.011871619150042534,
    0.017521748319268227,
    0.025591345503926277,
    0.019976485520601273,
    -0.05262167751789093,
    0.001589760067872703,
    0.015363272279500961,
    0.017733363434672356,
    -0.01424876507371664,
    0.0019380436278879642,
    0.01643545739352703,
    -0.01436868030577898,
    -0.01325417309999466,
    0.015123441815376282,
    0.018452856689691544,
    -0.01557488739490509,
    0.01739477925002575,
    0.012273688800632954,
    0.013141311705112457,
    -0.0401504822075367,
    -0.00976957380771637,
    0.010961674153804779,
    0.03707500547170639,
    0.04308487847447395,
    -0.007142017129808664,
    0.022614624351263046,
    0.03919115662574768,
    0.0007516752812080085,
    0.007914412766695023,
    -0.001358746667392552,
    -0.00041882199002429843,
    0.03809075802564621,
    -0.020244533196091652,
    0.008450505323708057,
    0.006979778874665499,
    0.0005175758269615471,
    0.021302608773112297,
    -0.01804373227059841,
    -0.0050893486477434635,
    -0.002006818540394306,
    -0.0022748648189008236,
    0.026494238525629044,
    0.0215283315628767,
    -0.011462496593594551,
    -0.016223842278122902,
    0.01345873437821865,
    0.010136374272406101,
    -0.01076416578143835,
    0.013733834028244019,
    0.0030895837116986513,
    0.034592051059007645,
    -0.025111684575676918,
    -0.035071711987257004,
    -0.010072889737784863,
    -0.011751703917980194,
    0.0058088405057787895,
    0.018354102969169617,
    -0.03335057571530342,
    0.007512344047427177,
    0.03910651057958603,
    0.004606160335242748,
    0.0017572889337316155,
    0.0023013167083263397,
    0.014425111003220081,
    -0.021993886679410934,
    -0.0009646131657063961,
    -0.021937455981969833,
    0.01055960450321436,
    0.019172348082065582,
    -0.0002691482368391007,
    -0.000818686792626977,
    -0.0024124146439135075,
    0.0035851162392646074,
    0.0031371971126645803,
    0.002742181997746229,
    -0.0254643764346838,
    -0.010369150899350643,
    0.02865271456539631,
    0.016689395532011986,
    -0.01501058042049408,
    -0.0008967199246399105,
    -0.0002369650756008923,
    -0.003417587373405695,
    6.574403232662007e-05,
    -0.015165764838457108,
    0.026578884571790695,
    0.007759228348731995,
    0.018946625292301178,
    0.003967787139117718,
    -0.011173289269208908,
    -0.047486476600170135,
    -0.007857982069253922,
    -0.015659533441066742,
    -0.002597578102722764,
    -0.011504819616675377,
    0.02308017760515213,
    -0.0007653420907445252,
    -0.00662708654999733,
    -0.004256994929164648,
    0.03583352640271187,
    -0.011899835430085659,
    0.006013402249664068,
    0.01101810485124588,
    0.022685162723064423,
    0.006016929168254137,
    0.010862919501960278,
    -0.008133082650601864,
    0.001684986986219883,
    -0.010136374272406101,
    -0.0029414528980851173,
    -0.046893954277038574,
    -0.025647776201367378,
    -0.014545026235282421,
    0.026550669223070145,
    0.017338348552584648,
    -0.04886903241276741,
    -0.02889254502952099,
    0.008182459510862827,
    -0.01924288645386696,
    -0.02045614831149578,
    -0.028187161311507225,
    0.018946625292301178,
    0.02879379130899906,
    0.030190452933311462,
    3.88788030249998e-05,
    0.014925934374332428,
    -0.007716905325651169,
    0.030726544559001923,
    -0.042097341269254684,
    -0.006764636375010014,
    0.007547613233327866,
    -0.02367269992828369,
    0.006390782538801432,
    -0.0147707499563694,
    -0.044298142194747925,
    -0.013818481005728245,
    0.010094051249325275,
    -0.007427698001265526,
    0.0068422285839915276,
    0.015179872512817383,
    -0.008845520205795765,
    0.014545026235282421,
    -0.014030096121132374,
    -0.014319303445518017,
    -0.02798965387046337,
    0.016802256926894188,
    0.006648248061537743,
    -0.031375497579574585,
    -0.011293204501271248,
    0.00527980225160718,
    0.00895132776349783,
    -0.014728426001966,
    0.014375734142959118,
    0.01219609659165144,
    -0.014545026235282421,
    -0.016548318788409233,
    -0.022149071097373962,
    -0.009318128228187561,
    0.0018339994130656123,
    0.0201034564524889,
    0.004324006382375956,
    0.003087820252403617,
    0.010905242525041103,
    0.01037620473653078,
    0.005801786668598652,
    -0.008288267068564892,
    0.00015738890215288848,
    0.01070773508399725,
    -0.02364448457956314,
    0.006870443932712078,
    0.0028603337705135345,
    -0.036736421287059784,
    -0.001016635331325233,
    -0.02224782481789589,
    0.018086057156324387,
    -0.016237949952483177,
    -0.014079472981393337,
    -0.014305195771157742,
    -0.020117564126849174,
    -0.027538206428289413,
    0.013889019377529621,
    0.0347331278026104,
    -0.015320949256420135,
    0.01410063449293375,
    -0.006951563525944948,
    -0.0005828238790854812,
    0.012979073449969292,
    -0.031375497579574585,
    -0.00712438253685832,
    -0.01661885716021061,
    -0.0024512107484042645,
    -0.0034951798152178526,
    0.0019503878429532051,
    -0.030162237584590912,
    -0.0024212319403886795,
    -0.01905948668718338,
    -0.016012225300073624,
    -0.006076886784285307,
    0.21161532402038574,
    0.008845520205795765,
    0.027481775730848312,
    0.028878437355160713,
    0.007314836140722036,
    0.04500352591276169,
    0.012661649845540524,
    0.005191629286855459,
    -0.01911591738462448,
    0.010312720201909542,
    -0.017944978550076485,
    -0.0215283315628767,
    0.003101927926763892,
    -0.004990594461560249,
    0.009804842993617058,
    -0.005463202018290758,
    -0.019976485520601273,
    -0.05778509005904198,
    -0.02123207040131092,
    -0.013994826935231686,
    -3.121876943623647e-05,
    0.0038161296397447586,
    -0.02284034714102745,
    -0.02602868527173996,
    0.025661883875727654,
    -0.0029414528980851173,
    0.005290383007377386,
    -0.016294380649924278,
    0.014911826699972153,
    0.008111921139061451,
    0.008845520205795765,
    0.021810485050082207,
    0.0027598165906965733,
    -0.012569949962198734,
    -0.006531859748065472,
    -0.0009249353315681219,
    0.016901010647416115,
    -0.02662120759487152,
    0.0014213495887815952,
    0.02203620970249176,
    0.00671525951474905,
    -0.03416882082819939,
    0.004556783474981785,
    -0.029682576656341553,
    0.006408417131751776,
    -0.0032059720251709223,
    -0.010975781828165054,
    0.03969903290271759,
    -0.014079472981393337,
    0.006757582537829876,
    -0.026226192712783813,
    -0.008704443462193012,
    0.015673641115427017,
    0.019934162497520447,
    0.021401362493634224,
    -0.024039501324295998,
    0.007716905325651169,
    -0.007131436374038458,
    0.006993886549025774,
    -0.016872795298695564,
    -0.002029743744060397,
    0.03715965151786804,
    -0.005593698471784592,
    0.007201974745839834,
    -0.03851398825645447,
    0.008916058577597141,
    -0.04085586592555046,
    -0.0026081588584929705,
    0.005981659982353449,
    -0.02774982340633869,
    -0.011102750897407532,
    -0.023700915277004242,
    -0.016957441344857216,
    0.001915118657052517,
    0.0007335997652262449,
    -0.027002114802598953,
    0.02299553155899048,
    0.014389841817319393,
    0.005403244402259588,
    0.02573242411017418,
    -0.00166382547467947,
    0.012675757519900799,
    -0.02329179272055626,
    -6.59231318422826e-06,
    -0.006866917014122009,
    -0.030895836651325226,
    0.03013402223587036,
    -0.020837055519223213,
    -0.01434046495705843,
    -0.01860804110765457,
    -0.0007208146853372455,
    -0.0268610380589962,
    0.009861273691058159,
    0.002546437783166766,
    0.012527626939117908,
    -0.007759228348731995,
    -0.006267340388149023,
    0.02683282271027565,
    -0.02728426828980446,
    0.0007027392275631428,
    -0.029767222702503204,
    0.0483611561357975,
    0.020385609939694405,
    0.019412178546190262,
    0.0011920996475964785,
    0.016491888090968132,
    -0.01383258868008852,
    0.0013781448360532522,
    -0.011003997176885605,
    -0.00356219126842916,
    0.009311074391007423,
    -0.005805313587188721,
    0.0009214083547703922,
    -0.006471902132034302,
    -0.0026134492363780737,
    0.008379966951906681,
    0.007251351606100798,
    -0.002132024383172393,
    -9.67836967902258e-06,
    -0.008450505323708057,
    0.02221960946917534,
    0.00477897934615612,
    0.007029155734926462,
    -0.01034798938781023,
    -0.02412414737045765,
    -0.0188196562230587,
    -0.03487420454621315,
    0.012950858101248741,
    -0.015419702976942062,
    0.004468610044568777,
    -0.008062543347477913,
    -0.0322219580411911,
    0.015447918325662613,
    0.019214671105146408,
    -0.0036538911517709494,
    0.011116858571767807,
    -0.026071008294820786,
    0.0026610626373440027,
    -0.015617210417985916,
    0.00217082048766315,
    -0.011935104615986347,
    0.014897719025611877,
    -0.0016885139048099518,
    0.00689513236284256,
    0.028158945962786674,
    -0.018156595528125763,
    -0.006454267539083958,
    -0.003978367894887924,
    0.01605454832315445,
    -0.006736421026289463,
    0.0033382317051291466,
    0.015363272279500961,
    0.005664236843585968,
    -0.002879731822758913,
    0.031347282230854034,
    -0.03549494221806526,
    0.0050399717874825,
    -0.014629672281444073,
    -0.005202210042625666,
    0.01667528785765171,
    -0.03910651057958603,
    -0.00994591973721981,
    0.01790265552699566,
    -0.017267810180783272,
    -0.010362097062170506,
    -0.026409592479467392,
    -0.17843404412269592,
    0.011490711942315102,
    -0.0007005349034443498,
    -0.021274393424391747,
    0.029287559911608696,
    0.024349870160222054,
    0.014121796004474163,
    -0.022403009235858917,
    -0.00524805998429656,
    -0.010721842758357525,
    -0.0016267928294837475,
    -0.008626851253211498,
    -0.025986362248659134,
    -0.007194920908659697,
    0.0031671759206801653,
    -0.010277451016008854,
    0.010136374272406101,
    0.010531389154493809,
    0.014728426001966,
    0.006433106027543545,
    0.015673641115427017,
    -0.013296496123075485,
    0.009593227878212929,
    0.003426404669880867,
    0.003996002487838268,
    -0.022431224584579468,
    0.0010739477584138513,
    -0.016125086694955826,
    -0.010446743108332157,
    -0.002327768597751856,
    -0.0016902773641049862,
    -0.0018392897909507155,
    0.0041899834759533405,
    -0.006817540153861046,
    0.024194685742259026,
    0.010968727990984917,
    0.019793085753917694,
    -0.0035904066171497107,
    -0.02168351598083973,
    0.024067716673016548,
    0.024674346670508385,
    0.030359745025634766,
    -8.111920760711655e-05,
    -0.01575828716158867,
    -0.03574888035655022,
    0.029372205957770348,
    0.003339995164424181,
    -0.030416175723075867,
    0.04088408127427101,
    0.016802256926894188,
    0.04604749381542206,
    -0.022981423884630203,
    -0.01195626612752676,
    -0.00718434015288949,
    0.025859393179416656,
    0.007660474628210068,
    0.011582411825656891,
    0.00448977155610919,
    0.005960498470813036,
    0.016266165301203728,
    -0.006888078525662422,
    -0.013874911703169346,
    -0.001941570546478033,
    0.016901010647416115,
    -0.01345873437821865,
    -0.009106513112783432,
    -0.020032918080687523,
    0.013247119262814522,
    -0.019553255289793015,
    0.008372913114726543,
    0.013275334611535072,
    0.024490946903824806,
    -0.03371737524867058,
    0.016604749485850334,
    0.005590171553194523,
    -0.0033558662980794907,
    -0.020032918080687523,
    0.027566421777009964,
    0.03656712919473648,
    -0.016576534137129784,
    -0.031206205487251282,
    0.02117563970386982,
    0.0022660475224256516,
    0.003265929874032736,
    0.00471902173012495,
    0.01932753250002861,
    -0.014968257397413254,
    -0.0039007756859064102,
    -0.008923112414777279,
    -0.00988948903977871,
    0.027439452707767487,
    -0.0027157298754900694,
    -0.015941686928272247,
    -0.012795672751963139,
    -0.002280155196785927,
    0.02123207040131092,
    0.006672936491668224,
    -0.0007631377666257322,
    0.01304255798459053,
    -0.013204796239733696,
    0.03543851152062416,
    0.017916763201355934,
    -0.017027979716658592,
    -0.010743004269897938,
    0.009868327528238297,
    0.024110039696097374,
    -0.027114976197481155,
    0.009205266833305359,
    0.029739007353782654,
    -0.008789089508354664,
    -0.010206912644207478,
    0.016985656693577766,
    0.030359745025634766,
    0.013063719496130943,
    -0.01587114855647087,
    0.006369621027261019,
    0.008034327998757362,
    -0.020145779475569725,
    0.02326357737183571,
    -0.0006674699834547937,
    0.03690571337938309,
    -0.016308488324284554,
    0.020286856219172478,
    0.026071008294820786,
    0.0065353866666555405,
    -0.017916763201355934,
    -0.1235833466053009,
    -0.03862684965133667,
    0.019680224359035492,
    0.014269926585257053,
    -0.017648717388510704,
    -0.003625675803050399,
    0.00792146660387516,
    0.046950384974479675,
    -0.02468845434486866,
    0.004003056325018406,
    0.002985539613291621,
    0.00883141253143549,
    -0.02412414737045765,
    -0.0016691158525645733,
    -0.021514223888516426,
    -0.011596519500017166,
    0.0010677756508812308,
    -0.0025640723761171103,
    -0.030811190605163574,
    0.03526921942830086,
    0.01849517971277237,
    0.007237243931740522,
    -0.0011621208395808935,
    0.013367034494876862,
    -0.015800610184669495,
    -0.01843874901533127,
    -0.0376393124461174,
    0.017352456226944923,
    -0.012062073685228825,
    0.029259344562888145,
    0.015320949256420135,
    -0.03820361942052841,
    0.008852574042975903,
    -0.019581470638513565,
    0.0018146013608202338,
    -0.012450034730136395,
    -0.003766752779483795,
    -0.011660004034638405,
    0.0295979306101799,
    -0.015151657164096832,
    -0.0021602397318929434,
    -0.01656242646276951,
    0.010672465898096561,
    -0.011123912408947945,
    -0.01709851808845997,
    -0.022445332258939743,
    0.007230190094560385,
    0.01804373227059841,
    0.046357862651348114,
    -0.01422054972499609,
    -0.011159181594848633,
    -0.01846696436405182,
    -0.009388666599988937,
    -0.020738301798701286,
    0.025859393179416656,
    0.016505995765328407,
    0.00221490697003901,
    0.002336585894227028,
    -0.008824358694255352,
    0.02367269992828369,
    -0.00967787392437458,
    -0.005911121144890785,
    0.030218668282032013,
    0.010150481946766376,
    0.007907358929514885,
    0.007688689976930618,
    0.005717140622437,
    -0.0005572536610998213,
    -0.01204796601086855,
    -0.031855158507823944,
    -0.015984009951353073,
    0.008894897066056728,
    -0.006408417131751776,
    -0.007498236373066902,
    -0.008006112650036812,
    0.01843874901533127,
    0.020230425521731377,
    -0.013529272750020027,
    0.007343051489442587,
    -0.003541029756888747,
    -0.028638606891036034,
    0.0046908063814044,
    -0.005872325040400028,
    -0.04094051197171211,
    -0.010101105086505413,
    0.033068422228097916,
    0.00765342079102993,
    -0.01956736296415329,
    0.007618151605129242,
    -0.0484740175306797,
    0.014086526818573475,
    -0.015701856464147568,
    0.03106512874364853,
    -0.020272748544812202,
    -0.010213966481387615,
    0.003361156675964594,
    -0.004983540624380112,
    0.0029379259794950485,
    0.03112155944108963,
    -0.0012785092694684863,
    -0.04390312731266022,
    -0.0323348194360733,
    -0.06670115143060684,
    -0.009804842993617058,
    0.004253468010574579,
    0.005114037077873945,
    0.026339054107666016,
    -0.03112155944108963,
    -0.019877731800079346,
    -0.011751703917980194,
    -0.013719726353883743,
    0.008901950903236866,
    -0.03715965151786804,
    -0.011215612292289734,
    -0.01873501017689705,
    -0.01697154901921749,
    0.007307782303541899,
    0.007484128698706627,
    0.02900540642440319,
    0.013994826935231686,
    0.026282623410224915,
    -0.0031601220835000277,
    0.0007640194962732494,
    -0.018213026225566864,
    0.0007049435516819358,
    0.03106512874364853,
    -0.056092169135808945,
    0.007956735789775848,
    -0.022685162723064423,
    0.017578179016709328,
    -0.009783681482076645,
    -0.026183869689702988,
    -0.010101105086505413,
    -0.01750764064490795,
    0.02302374690771103,
    0.01170232705771923,
    -0.003791441209614277,
    -0.008923112414777279,
    0.05324241518974304,
    -0.006267340388149023,
    0.016421349719166756,
    0.016181519255042076,
    -0.009134728461503983,
    0.008838466368615627,
    0.04291558638215065,
    0.003188337432220578,
    0.000325799424899742,
    -0.004458029288798571,
    0.0009707852732390165,
    0.013077827170491219,
    0.026212085038423538,
    -0.0040101101621985435,
    0.03557958826422691,
    0.007279566954821348,
    -0.009607335552573204,
    -0.014418057166039944,
    -0.01584293320775032,
    -0.021852808073163033,
    0.025069361552596092,
    -0.0013702092692255974,
    0.0057524098083376884,
    0.016308488324284554,
    0.038429342210292816,
    0.015645425766706467,
    0.014142957516014576,
    -0.016364919021725655,
    0.001941570546478033,
    -0.006009875331073999,
    -0.04443921893835068,
    -0.009699035435914993,
    0.029739007353782654,
    0.010517281480133533,
    -0.007106747943907976,
    -0.028300022706389427,
    0.029682576656341553,
    0.01043968927115202,
    0.017380671575665474,
    -0.016717610880732536,
    0.00393251795321703,
    -0.015828825533390045,
    -0.009565012529492378,
    0.0321090966463089,
    0.049038324505090714,
    -0.035156358033418655,
    -0.003218316473066807,
    0.009656712412834167,
    0.03275805339217186,
    0.010094051249325275,
    -0.029259344562888145,
    -0.010503173805773258,
    0.018100164830684662,
    0.027086760848760605,
    -0.004803667776286602,
    0.0073853749781847,
    -0.026339054107666016,
    -0.0008782036020420492,
    0.016505995765328407,
    0.003830237314105034,
    0.009804842993617058,
    0.01667528785765171,
    0.007836820557713509,
    0.01292264275252819,
    -0.0017440629890188575,
    -0.01900305598974228,
    0.01581471785902977,
    -0.01058781985193491,
    -0.02382788620889187,
    0.02897719107568264,
    -0.036792851984500885,
    -0.017324240878224373,
    0.007843874394893646,
    0.009452151134610176,
    -0.003384081646800041,
    -0.0295414999127388,
    0.006951563525944948,
    0.031883373856544495,
    -0.024998823180794716,
    0.025125792250037193,
    0.011836349964141846,
    -0.024787208065390587,
    -0.012414765544235706,
    0.012337173335254192,
    -0.007300728466361761,
    0.010926404036581516,
    0.04494709521532059,
    -0.020300963893532753,
    0.0075687747448682785,
    0.00424994109198451,
    0.022431224584579468,
    -0.016774041578173637,
    -0.015715964138507843,
    -0.019877731800079346,
    -0.009847166016697884,
    0.011243827641010284,
    -0.024575592949986458,
    -0.02326357737183571,
    -0.002327768597751856,
    0.0037067951634526253,
    -0.00885962788015604,
    0.006235598120838404,
    0.008422289974987507,
    0.08927345275878906,
    0.007335997652262449,
    -0.021556546911597252,
    0.003454620251432061,
    -0.006189748179167509,
    0.035156358033418655,
    0.005075240973383188,
    0.020921701565384865,
    0.007695743814110756,
    -0.008182459510862827,
    0.0075687747448682785,
    -0.009000704623758793,
    -0.023461084812879562,
    -0.028666822239756584,
    -0.006778744049370289,
    0.005209263879805803,
    -0.004856571555137634,
    -0.023094285279512405,
    -0.010094051249325275,
    0.011053374037146568,
    0.04898189380764961,
    0.019962377846240997,
    -0.020780624821782112,
    0.0007410944672301412,
    -0.0347331278026104,
    -0.014869503676891327,
    0.036341406404972076,
    0.02173994667828083,
    0.0018481072038412094,
    -0.050731245428323746,
    0.022713378071784973,
    -0.0014733716379851103,
    -0.037300728261470795,
    -0.03636962175369263,
    -0.009459204971790314,
    0.00844345148652792,
    -0.009028919972479343,
    -0.039896540343761444,
    0.011102750897407532,
    0.03535386547446251,
    0.009600281715393066,
    0.005004702601581812,
    -0.02090759389102459,
    0.002980249235406518,
    0.025774747133255005,
    0.006821067072451115,
    0.0017079119570553303,
    0.014079472981393337,
    -0.04731718450784683
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "event dispatching library for fastapi\n# fastapi-events\n\nan event dispatching/handling library for fastapi, and starlette.\n\n[![](https://github.com/melvinkcx/fastapi-events/actions/workflows/tests.yml/badge.svg?branch=dev&event=push)](https://github.com/melvinkcx/fastapi-events/actions/workflows/tests.yml)\n![pypi - downloads](https://img.shields.io/pypi/dw/fastapi-events)\n\nfeatures:\n\n* straightforward api to emit events anywhere in your code\n* events are handled after responses are returned (doesn't affect response time)\n* supports event piping to remote queues\n* powerful built-in handlers to handle events locally and remotely\n* coroutine functions (`async def`) are the first-class citizen\n* write your handlers, never be limited to just what `fastapi_events` provides\n* (__>=0.3.0__) supports event payload validation via pydantic (see [here](#event-payload-validation-with-pydantic))\n* (__>=0.4.0__) supports event chaining: dispatching events within handlers (thank [@ndopj](https://github.com/ndopj)\n  for contributing to the idea)\n* (__>=0.7.0__) supports opentelemetry: see [this section](#opentelemetry-otel-support) for details\n* (__>=0.9.0__) supports dependencies in local handlers: see [this section](#using-dependencies-in-local-handler) for details\n* (__>=0.9.1__) supports pydantic v2\n\nif you use or like this project, please consider giving it a star so it can reach more developers. thanks =)\n\n## installation\n\n```shell\npip install fastapi-events\n```\n\nto use it with aws handlers, install:\n\n```shell\npip install fastapi-events[aws]\n```\n\nto use it with gcp handlers. install:\n\n```shell\npip install fastapi-events[google]\n```\n\nto enable opentelemetry (otel) support, install:\n\n```shell\npip install fastapi-events[otel]\n```\n\n# usage\n\n`fastapi-events` supports both fastapi and starlette. to use it, simply configure it as middleware.\n\n* configuring `fastapi-events` for fastapi:\n    ```python\n    from fastapi import fastapi\n    from fastapi.requests import request\n    from fastapi.responses import jsonresponse\n  \n    from fastapi_events.dispatcher import dispatch\n    from fastapi_events.middleware import eventhandlerasgimiddleware\n    from fastapi_events.handlers.local import local_handler\n\n    \n    app = fastapi()\n    app.add_middleware(eventhandlerasgimiddleware, \n                       handlers=[local_handler])   # registering handler(s)\n    \n    \n    @app.get(\"/\")\n    def index(request: request) -> jsonresponse:\n        dispatch(\"my-fancy-event\", payload={\"id\": 1})  # emit events anywhere in your code\n        return jsonresponse()    \n    ```\n\n* configuring `fastapi-events` for starlette:\n\n  ```python\n  from starlette.applications import starlette\n  from starlette.middleware import middleware\n  from starlette.requests import request\n  from starlette.responses import jsonresponse\n  \n  from fastapi_events.dispatcher import dispatch\n  from fastapi_events.handlers.local import local_handler\n  from fastapi_events.middleware import eventhandlerasgimiddleware\n  \n  app = starlette(middleware=[\n      middleware(eventhandlerasgimiddleware,\n                 handlers=[local_handler])  # registering handlers\n  ])\n  \n  @app.route(\"/\")\n  async def root(request: request) -> jsonresponse:\n      dispatch(\"new event\", payload={\"id\": 1})   # emit events anywhere in your code\n      return jsonresponse()\n  ```\n\n* configuring `fastapi-events` for starlite:\n\n  ```python\n  from starlite.app import starlite\n  from starlite.enums import mediatype\n  from starlite.handlers import get\n  from starlite.middleware import definemiddleware\n  \n  from fastapi_events.dispatcher import dispatch\n  from fastapi_events.handlers.local import local_handler\n  from fastapi_events.middleware import eventhandlerasgimiddleware\n  \n  @get(path=\"/\", media_type=mediatype.text)\n  async def root() -> str:\n      dispatch(\"new event\", payload={\"id\": 1})   # emit events anywhere in your code\n      return \"ok\"\n\n  app = starlite(middleware=[\n      definemiddleware(eventhandlerasgimiddleware,\n                 handlers=[local_handler])  # registering handlers\n      ],\n      route_handlers=[root],\n    )\n\n  ```\n\n## dispatching events\n\nevents can be dispatched anywhere in the code, as long as they are dispatched before a response is made.\n\n```python\n# anywhere in code\n\nfrom fastapi_events.dispatcher import dispatch\n\ndispatch(\n    \"cat-requested-a-fish\",  # event name, accepts any valid string\n    payload={\"cat_id\": \"fd375d23-b0c9-4271-a9e0-e028c4cd7230\"}  # event payload, accepts any arbitrary data\n)\n\ndispatch(\"a_cat_is_spotted\")  # this works too!\n```\n\n### event payload validation with pydantic\n\nevent payload validation is possible since version 0.3.0. to enable, simply register\na [pydantic models](https://pydantic-docs.helpmanual.io/usage/models/) with the corresponding event name.\n\n```python\nimport uuid\nfrom enum import enum\nfrom datetime import datetime\n\nfrom pydantic import basemodel\nfrom fastapi_events.registry.payload_schema import registry as payload_schema\n\n\nclass userevents(enum):\n    signed_up = \"user_signed_up\"\n    activated = \"user_activated\"\n\n\n# registering your event payload schema\n@payload_schema.register(event_name=userevents.signed_up)\nclass signuppayload(basemodel):\n    user_id: uuid.uuid\n    created_at: datetime\n```\n\n> wildcard in event name is currently not supported\n\npayload will be validated automatically without any changes made while invoking the dispatcher.\n\n```python\n# events with payload schema registered\ndispatch(userevents.signed_up)  # raises validationerror, missing payload\ndispatch(userevents.signed_up,\n         {\"user_id\": \"9e79cdbb-b216-40f7-9a05-20d223dee89a\"})  # raises validationerror, missing `created_at`\ndispatch(userevents.signed_up,\n         {\"user_id\": \"9e79cdbb-b216-40f7-9a05-20d223dee89a\", created_at: datetime.utcnow()})  # ok!\n\n# events without payload schema -> no validation will be performed\ndispatch(userevents.activated,\n         {\"user_id\": \"9e79cdbb-b216-40f7-9a05-20d223dee89a\"})  # ok! no validation will be performed\n```\n\n> reminder: payload validation is optional.\n> payload of events without its schema registered will not be validated.\n\n## handling events\n\n### handle events locally\n\nthe flexibility of `fastapi-events` allows us to customise how the events should be handled. for starters, you might\nwant to handle your events locally.\n\n```python\n# ex: in handlers.py\n\nfrom fastapi_events.handlers.local import local_handler\nfrom fastapi_events.typing import event\n\n\n@local_handler.register(event_name=\"cat*\")\ndef handle_all_cat_events(event: event):\n    \"\"\"\n    this handler will match with an events prefixed with `cat`.\n    ex: \"cat_eats_a_fish\", \"cat_is_cute\", etc\n    \"\"\"\n    # the `event` argument is nothing more than a tuple of event name and payload\n    event_name, payload = event\n\n    # todo do anything you'd like with the event\n\n\n@local_handler.register(event_name=\"cat*\")  # tip: you can register several handlers with the same event name\ndef handle_all_cat_events_another_way(event: event):\n    pass\n\n\n@local_handler.register(event_name=\"*\")\nasync def handle_all_events(event: event):\n    # event handlers can be coroutine function too (`async def`)\n    pass\n```\n\n#### using dependencies in local handler\n\n> new feature in fastapi-events>=0.9.0\n\ndependencies can now be used with local handler. sub-dependencies are also supported.\n\nhowever, dependencies using generator (with `yield` keyword) is not supported yet. i have the intention to support it in the future.\n\n\n```python\n# ex: in handlers.py\nfrom fastapi import depends\n\nfrom fastapi_events.handlers.local import local_handler\nfrom fastapi_events.typing import event\n\nasync def get_db_conn():\n    pass    # return a db conn\n\n\nasync def get_db_session(\n    db_conn=depends(get_db_conn)\n):\n    pass    # return a db session created from `db_conn`\n\n\n\n@local_handler.register(event_name=\"*\")\nasync def handle_all_events(\n    event: event, \n    db_session=depends(get_db_session)\n):\n    # use the `db_session` here\n    pass\n```\n\n### piping events to remote queues\n\nfor larger projects, you might have services dedicated to handling events separately.\n\nfor instance, `fastapi-events` comes with aws sqs forwarder to forward events to a remote queue.\n\n1. register `sqsforwardhandler` as handlers:\n    ```python\n    app = fastapi()\n    app.add_middleware(eventhandlerasgimiddleware, \n                       handlers=[sqsforwardhandler(queue_url=\"test-queue\",\n                                                   region_name=\"eu-central-1\")])   # registering handler(s)\n    ```\n\n2. start dispatching events! events will be serialised into json format by default:\n    ```python\n    [\"event name\", {\"payload\": \"here is the payload\"}]\n    ```\n\n> tip: to pipe events to multiple queues, provide multiple handlers while adding `eventhandlerasgimiddleware`.\n\n# built-in handlers\n\nhere is a list of built-in event handlers:\n\n* `localhandler` / `local_handler`:\n    * import from `fastapi_events.handlers.local`\n    * for handling events locally. see examples [above](#handle-events-locally)\n    * event name pattern matching is done using unix shell-style matching (`fnmatch`)\n\n* `sqsforwardhandler`:\n    * import from `fastapi_events.handlers.aws`\n    * to forward events to an aws sqs queue\n\n* `echohandler`:\n    * import from `fastapi_events.handlers.echo`\n    * to forward events to stdout with `pprint`. great for debugging purpose\n\n* `googlecloudsimplepubsubhandler`:\n    * import from `fastapi_events.handlers.gcp`\n    * to publish events to a single pubsub topic\n\n# creating your own handler\n\ncreating your own handler is nothing more than inheriting from the `baseeventhandler` class\nin `fastapi_events.handlers.base`.\n\nto handle events, `fastapi_events` calls one of these methods, in the following priority order:\n\n1. `handle_many(events)`:\n   the coroutine function should expect the backlog of the events collected.\n\n2. `handle(event)`:\n   in cases where `handle_many()` weren't defined in your custom handler, `handle()`\n   will be called by iterating through the events in the backlog.\n\n```python\nfrom typing import iterable\n\nfrom fastapi_events.typing import event\nfrom fastapi_events.handlers.base import baseeventhandler\n\n\nclass myowneventhandler(baseeventhandler):\n    async def handle(self, event: event) -> none:\n        \"\"\"\n        handle events one by one\n        \"\"\"\n        pass\n\n    async def handle_many(self, events: iterable[event]) -> none:\n        \"\"\"\n        handle events by batch\n        \"\"\"\n        pass\n```\n\n# opentelemetry (otel) support\n\nsince version 0.7.0, opentelemetry support has been added as an optional feature.\n\nto enable it, make sure you install the optional modules:\n\n```shell\npip install fastapi-events[otel]\n```\n\n> note that no instrumentation library is needed as fastapi_events supports otel natively\n\nspans will be created when:\n\n* `fastapi_events.dispatcher.dispatch` is invoked,\n* `fastapi_events.handlers.local.localhandler` is handling an event\n\nsupport for other handlers will be added in the future.\n\n# cookbook\n\n## 1) suppressing events / disabling `dispatch()` globally\n\nin case you want to suppress events globally especially during testing, you can do so without having to mock or patch\nthe `dispatch()` function. simple set the environment variable `fastapi_events_disable_dispatch` to `1`, `true` or any\ntruthy values.\n\n## 2) validating event payload during dispatch\n\n> requires pydantic, which comes with fastapi.\n> if you're using starlette, you might need to install pydantic\n\nsee [event payload validation with pydantic](#event-payload-validation-with-pydantic)\n\n## 3) dispatching events within handlers (event chaining)\n\nit is now possible to dispatch events within another event handlers. you'll need version 0.4 or above.\n\ncomparison between events dispatched within the request-response cycle and event handlers are:\n\n|                                                                 | dispatched within request-response cycle         | dispatched within event handlers                        |\n|-----------------------------------------------------------------|--------------------------------------------------|---------------------------------------------------------|\n| processing of events                                            | will be handled after the response has been made | will be scheduled to the running event loop immediately |\n| order of processing                                             | always after the response is made                | not guaranteed                                          |\n| supports payload schema validation with pydantic                | yes                                              | yes                                                     |\n| can be disabled globally with `fastapi_events_disable_dispatch` | yes                                              | yes                                                     |\n\n## 4) dispatching events outside of a request\n\none goal of `fastapi-events` is to dispatch events without having to manage which instance\nof `eventhandlerasgimiddleware` is being targeted. by default, this is handled using `contextvars`. there are occasions\nwhen a user may want to dispatch events outside of the standard request sequence though. this can be accomplished by\ngenerating a custom identifier for the middleware.\n\nby default, the middleware identifier is generated from the object id of the `eventhandlerasgimiddleware` instance and\nis managed internally without need for user intervention. if the user needs to dispatch events outside of a\nrequest-response lifecycle, a custom `middleware_id` value can be generated and passed to `eventhandlerasgimiddleware`\nduring its creation. this value can then be used with `dispatch()` to ensure the correct `eventhandlerasgimiddleware`\ninstance is selected.\n\ndispatching events during a request does ***not*** require the `middleware_id`. these will continue to automatically\ndiscover the event handler.\n\nin the following example, the id is being generated using the object id of the `fastapi` instance. the middleware\nidentifier must be unique `int` but there are no other restrictions.\n\n```python\nimport asyncio\n\nfrom fastapi import fastapi\nfrom fastapi.requests import request\nfrom fastapi.responses import jsonresponse\n\nfrom fastapi_events.dispatcher import dispatch\nfrom fastapi_events.middleware import eventhandlerasgimiddleware\nfrom fastapi_events.handlers.local import local_handler\n\napp = fastapi()\nevent_handler_id: int = id(app)\napp.add_middleware(eventhandlerasgimiddleware,\n                   handlers=[local_handler],  # registering handler(s)\n                   middleware_id=event_handler_id)  # register custom middleware id\n\n\nasync def dispatch_task() -> none:\n    \"\"\" background task to dispatch autonomous events \"\"\"\n\n    for i in range(100):\n        # without the middleware_id, this call would raise a lookuperror\n        dispatch(\"date\", payload={\"idx\": i}, middleware_id=event_handler_id)\n        await asyncio.sleep(1)\n\n\n@app.on_event(\"startup\")\nasync def startup_event() -> none:\n    asyncio.create_task(dispatch_task())\n\n\n@app.get(\"/\")\ndef index(request: request) -> jsonresponse:\n    dispatch(\"hello\", payload={\"id\": 1})  # emit events anywhere in your code\n    return jsonresponse({\"detail\": {\"msg\": \"hello world\"}})\n```\n\n# faqs:\n\n1. i'm getting `lookuperror` when `dispatch()` is used:\n    ```bash\n        def dispatch(event_name: str, payload: optional[any] = none) -> none:\n    >       q: deque[event] = event_store.get()\n    e       lookuperror: <contextvar name='fastapi_context' at 0x400a1f12b0>\n    ```\n\n   answer:\n\n   `dispatch()` relies on [contextvars](https://docs.python.org/3/library/contextvars.html) to work properly. there are\n   many reasons why `lookuperror` can occur. a common reason is `dispatch()` is called outside the request-response\n   lifecycle of fastapi/starlette, such as calling `dispatch()` after a response has been returned.\n\n   [this can be worked around by using a user-defined middleware_id.](#4-dispatching-events-outside-of-a-request)\n\n   if you're getting this during testing, you may consider disabling `dispatch()` during testing.\n   see [suppressing events / disabling `dispatch()` globally](#suppressing-events--disabling-dispatch-globally) for\n   details.\n\n2. my event handlers are not registered / local handlers are not being executed:\n\n   answer:\n\n   make sure the module where your local event handlers are defined is loaded during runtime. a simple fix is to import\n   the module in your `__init__.py`. this will ensure the modules are properly loaded during runtime.\n\n# feedback, questions?\n\nany form of feedback and questions are welcome! please create an\nissue [here](https://github.com/melvinkcx/fastapi-events/issues/new).\n",
  "docs_url": null,
  "keywords": "starlette,fastapi,starlite,pydantic",
  "license": "",
  "name": "fastapi-events",
  "package_url": "https://pypi.org/project/fastapi-events/",
  "project_url": "https://pypi.org/project/fastapi-events/",
  "project_urls": {
    "Homepage": "https://github.com/melvinkcx/fastapi-events"
  },
  "release_url": "https://pypi.org/project/fastapi-events/0.9.1/",
  "requires_dist": [
    "boto3 >=1.14 ; extra == 'aws'",
    "google-cloud-pubsub >=2.13.6 ; extra == 'google'",
    "opentelemetry-api <2.0,>=1.12.0 ; extra == 'otel'"
  ],
  "requires_python": ">=3.7",
  "summary": "event dispatching library for fastapi",
  "version": "0.9.1",
  "releases": [],
  "developers": [
    "melvin_koh",
    "melvinkcx@gmail.com"
  ],
  "kwds": "fastapi_events fastapi_events_disable_dispatch fastapi fastapi_context handle_all_cat_events",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_fastapi_events",
  "homepage": "https://github.com/melvinkcx/fastapi-events",
  "release_count": 17,
  "dependency_ids": [
    "pypi_boto3",
    "pypi_google_cloud_pubsub",
    "pypi_opentelemetry_api"
  ],
  "documentation_summary": "The HTML text describes the `fastapi-events` library, version 0.11.0, released on February 25, 2024, available on PyPI. It's an event dispatching library for FastAPI, supporting Python versions 3.7 and above. The library offers a straightforward API for emitting events, handling them after responses to ensure no impact on response time, and supports event piping to remote queues. Features include built-in handlers for local and remote event handling, coroutine function support, custom handler creation, event payload validation via Pydantic, event chaining, OpenTelemetry support, and FastAPI dependencies in local handlers. Installation instructions and usage examples for FastAPI, Starlette, and Starlite are provided, along with information on dispatching events, payload validation, handling events locally, piping events to remote queues, and creating custom handlers.",
  "embedding": [
    -0.03244463726878166,
    -0.0033508623018860817,
    -0.016595404595136642,
    -0.014577978290617466,
    0.00029104138957336545,
    0.023545853793621063,
    0.009748591110110283,
    -0.011690018698573112,
    -0.009451504796743393,
    -0.032113008201122284,
    0.016056504100561142,
    0.011710746213793755,
    -0.02401566505432129,
    0.02067171223461628,
    0.0060004619881510735,
    -0.0005009021260775626,
    0.03562277555465698,
    -0.04092888534069061,
    0.0077173467725515366,
    0.0019397002179175615,
    0.041868507862091064,
    -0.009928225539624691,
    -0.021625153720378876,
    -0.0012393009383231401,
    -0.020920434966683388,
    0.020063720643520355,
    0.012367100454866886,
    -0.01916555128991604,
    -0.005610103718936443,
    0.0212935209274292,
    0.01412198506295681,
    -0.016484860330820084,
    -0.004477028734982014,
    -0.009665683843195438,
    -0.01757648214697838,
    -0.02481710910797119,
    0.025991637259721756,
    -0.009914407506585121,
    0.03562277555465698,
    0.0025252376217395067,
    0.03899436444044113,
    0.00683299545198679,
    0.0071093556471168995,
    -0.010370400734245777,
    -0.027345800772309303,
    0.03891145810484886,
    0.005748283583670855,
    -0.04112233594059944,
    0.0015381149714812636,
    -0.014826702885329723,
    0.033301353454589844,
    0.012774731032550335,
    0.007523895241320133,
    0.0012712549651041627,
    0.016595404595136642,
    -0.002440602285787463,
    -0.003592677181586623,
    -0.006656816229224205,
    -0.0024026029277592897,
    -0.012892183847725391,
    -0.013196179643273354,
    0.003568495623767376,
    -0.04120524227619171,
    -0.021625153720378876,
    0.012104558758437634,
    -0.016581587493419647,
    -0.020353898406028748,
    0.016070321202278137,
    -0.023186586797237396,
    -0.003302499419078231,
    0.01973208785057068,
    0.02770506776869297,
    -0.0032800452318042517,
    -0.02398802898824215,
    0.031201019883155823,
    -0.030731208622455597,
    -0.01703757978975773,
    0.007516986224800348,
    0.00379994697868824,
    -0.013140907511115074,
    0.008318429812788963,
    -0.02067171223461628,
    -0.016885582357645035,
    0.0479760579764843,
    0.0002668599190656096,
    0.022620048373937607,
    0.0007530804141424596,
    0.016913218423724174,
    -0.02344912849366665,
    -0.006149005144834518,
    0.0034216796047985554,
    0.006138641852885485,
    -0.003820674028247595,
    0.002311058808118105,
    -0.007620621006935835,
    0.02350439876317978,
    -0.019469546154141426,
    0.02832687832415104,
    0.0009819408878684044,
    -0.01188347116112709,
    -0.015724871307611465,
    0.027387253940105438,
    -0.01036349218338728,
    -0.01222201157361269,
    0.0010622579138725996,
    0.002419875469058752,
    0.019345184788107872,
    -0.010121677070856094,
    0.009264961816370487,
    0.02563237026333809,
    -0.0420343242585659,
    0.008014434017241001,
    0.011289297603070736,
    -0.008359883911907673,
    -0.003893218468874693,
    -0.005164473317563534,
    0.00165556778665632,
    -0.02503819577395916,
    -0.019801178947091103,
    -0.0038241285365074873,
    -0.00871915090829134,
    0.028879597783088684,
    -0.004439028911292553,
    0.018612831830978394,
    0.014045986346900463,
    -0.02606072835624218,
    -0.008954057469964027,
    0.0010760759469121695,
    0.01108893658965826,
    -0.01757648214697838,
    0.01627759076654911,
    -0.01627759076654911,
    0.009251143783330917,
    -0.017452120780944824,
    -0.01743830181658268,
    0.02101716212928295,
    -0.025742914527654648,
    0.006760451011359692,
    -0.0358438640832901,
    -0.03595440834760666,
    -0.009043874219059944,
    0.0199393592774868,
    -0.028769053518772125,
    0.0011624383041635156,
    -0.01806011237204075,
    0.052757084369659424,
    0.010798758827149868,
    -0.020823709666728973,
    0.016429590061306953,
    0.005565195344388485,
    0.025452736765146255,
    -0.010854030959308147,
    -0.030123217031359673,
    -0.002749779960140586,
    -0.005240472499281168,
    0.01108893658965826,
    -0.018585195764899254,
    0.016263773664832115,
    0.01213910337537527,
    -0.004701570607721806,
    0.004045216366648674,
    0.03349480405449867,
    -0.009299506433308125,
    -0.0168441291898489,
    -0.012083831243216991,
    0.03509769216179848,
    0.030675936490297318,
    0.005433924496173859,
    -0.016236137598752975,
    -0.013541629537940025,
    -0.0027549616061151028,
    0.016263773664832115,
    -0.04424520209431648,
    -0.006715542636811733,
    -0.02293786220252514,
    -0.007510077208280563,
    0.010584579780697823,
    0.02614363469183445,
    -0.025107286870479584,
    -0.009251143783330917,
    0.008173340931534767,
    0.0021659699268639088,
    0.011489657685160637,
    0.03918781876564026,
    -0.027553070336580276,
    -0.004394120536744595,
    -0.026972714811563492,
    -0.020326262339949608,
    0.002027789829298854,
    -0.007468623109161854,
    -0.006629180163145065,
    0.016747402027249336,
    0.0027014168445020914,
    -0.0062388223595917225,
    -0.5743861794471741,
    -0.0020692439284175634,
    -0.014619432389736176,
    -0.031118111684918404,
    -0.022067328914999962,
    0.006788087077438831,
    -0.012063104659318924,
    -0.0007422851049341261,
    -0.005257744807749987,
    0.028257787227630615,
    -0.028547964990139008,
    0.025259284302592278,
    0.01416343916207552,
    -0.005230108741670847,
    -0.00625954894348979,
    -0.02724907547235489,
    -0.0009404869051650167,
    -0.019359003752470016,
    -0.01840556226670742,
    -0.00041583512211218476,
    -0.012995818629860878,
    0.05510614067316055,
    -0.01857137680053711,
    0.009658774361014366,
    0.005644648801535368,
    0.014550342224538326,
    0.013113271445035934,
    0.007516986224800348,
    0.023863667622208595,
    0.007758800871670246,
    -0.026917442679405212,
    0.02234368771314621,
    0.022523323073983192,
    -0.016540132462978363,
    0.05245308578014374,
    0.014757612720131874,
    -0.017562665045261383,
    0.04537827521562576,
    -0.008663879707455635,
    0.06273367255926132,
    -0.02293786220252514,
    -0.0015009790658950806,
    -0.00046031177043914795,
    0.014564160257577896,
    0.021417884156107903,
    0.008332247845828533,
    0.023670215159654617,
    0.0021607880480587482,
    0.01905500702559948,
    -0.015724871307611465,
    -0.00874678697437048,
    0.0025597824715077877,
    0.00625954894348979,
    0.012325646355748177,
    0.007917707785964012,
    0.005886463448405266,
    0.023490581661462784,
    0.006808814126998186,
    -0.004024489317089319,
    0.02010517381131649,
    0.010190767236053944,
    0.0066153621301054955,
    0.0021987876389175653,
    -0.02773270383477211,
    -0.01975972391664982,
    0.006591180805116892,
    0.0014716158621013165,
    -0.024057120084762573,
    0.007309716194868088,
    -0.02390512079000473,
    0.02344912849366665,
    0.008415155112743378,
    0.014895792119204998,
    -0.018364107236266136,
    0.06527618318796158,
    0.03985108062624931,
    0.03332899138331413,
    0.010743486694991589,
    -0.02296549826860428,
    0.04684298485517502,
    0.028630873188376427,
    0.01297509204596281,
    -0.039629992097616196,
    -0.022578595206141472,
    0.0237116701900959,
    0.010232221335172653,
    -0.025936365127563477,
    -0.021362612023949623,
    0.021735697984695435,
    0.003029594197869301,
    0.009133690968155861,
    0.02753925323486328,
    -0.008933329954743385,
    -0.008131886832416058,
    0.0009016238036565483,
    0.027608342468738556,
    -0.009016238152980804,
    0.022550959140062332,
    -0.02328331209719181,
    -0.0010881666094064713,
    -0.0030244123190641403,
    -0.013465630821883678,
    -0.007800254970788956,
    -0.01028058398514986,
    0.019068825989961624,
    0.008919511921703815,
    -0.0048846593126654625,
    -0.008159522898495197,
    0.020201900973916054,
    -0.011517293751239777,
    0.010681306011974812,
    -0.02478947304189205,
    -0.011669292114675045,
    -0.029515225440263748,
    -0.001820520032197237,
    -0.02592254802584648,
    -0.005285380873829126,
    0.019607726484537125,
    0.007240626495331526,
    -0.01329981442540884,
    -0.0026098727248609066,
    -0.01692703738808632,
    0.0023006952833384275,
    0.00017078171367757022,
    0.01757648214697838,
    0.014315436594188213,
    0.00036185860517434776,
    -0.009492958895862103,
    -0.008297702297568321,
    -0.0006649907445535064,
    0.01409434899687767,
    -0.005786282941699028,
    0.012304919771850109,
    0.0005440833047032356,
    0.015586691908538342,
    -0.012242738157510757,
    0.014128893613815308,
    0.019317548722028732,
    -0.005506468936800957,
    -0.01515833381563425,
    -0.008484245277941227,
    0.03230645880103111,
    0.014287800528109074,
    -0.0334118977189064,
    -0.0111165726557374,
    -0.01703757978975773,
    -0.01687176525592804,
    0.004103942774236202,
    0.004898477345705032,
    0.008684606291353703,
    -0.03885618597269058,
    -0.015835415571928024,
    -0.018198292702436447,
    0.0026288724038749933,
    -0.0006770814652554691,
    0.015434693545103073,
    -0.003951944876462221,
    -0.026074545457959175,
    -0.01595977693796158,
    -0.024996742606163025,
    0.009292597882449627,
    -0.011745290830731392,
    -0.01953863725066185,
    0.006449546664953232,
    -0.03443443030118942,
    -0.014398344792425632,
    -0.025991637259721756,
    0.01573869027197361,
    0.011973287910223007,
    -0.023048406466841698,
    -0.03454497456550598,
    -0.008221703581511974,
    0.008152613416314125,
    0.02078225649893284,
    0.005820828024297953,
    0.01897209882736206,
    -0.020948071032762527,
    0.008560243993997574,
    0.0010018042521551251,
    -0.001706521725282073,
    0.003288681386038661,
    -0.005009021144360304,
    -0.04054198041558266,
    0.003734311554580927,
    0.03888382017612457,
    0.006276821717619896,
    0.0028171425219625235,
    0.013824897818267345,
    -0.00574137456715107,
    0.016263773664832115,
    -0.005354471039026976,
    0.020422987639904022,
    -0.03822055831551552,
    0.031062839552760124,
    -0.025273101404309273,
    0.0016650677425786853,
    0.03822055831551552,
    -0.024181481450796127,
    -0.0025511463172733784,
    0.026364723220467567,
    0.012912911362946033,
    0.0009465322364121675,
    -0.0012911183293908834,
    -0.010584579780697823,
    -0.023462945595383644,
    -0.004922658670693636,
    0.028686145320534706,
    -0.01848847046494484,
    0.005979734938591719,
    0.00459448155015707,
    0.01148274913430214,
    0.009665683843195438,
    -0.01412198506295681,
    -0.016636859625577927,
    -0.014992518350481987,
    0.02325567603111267,
    -0.040763068944215775,
    -0.007406442426145077,
    -0.02271677367389202,
    0.0018239745404571295,
    0.025798186659812927,
    -0.01953863725066185,
    -0.002167697064578533,
    0.022191690281033516,
    -0.00947223138064146,
    -0.0071784453466534615,
    0.02069934830069542,
    0.0207546204328537,
    0.0048052058555185795,
    0.013500175438821316,
    -0.028465058654546738,
    0.032085370272397995,
    0.020422987639904022,
    -0.011282388120889664,
    0.01521360594779253,
    0.018737193197011948,
    0.030067944899201393,
    -0.012553643435239792,
    0.046290263533592224,
    -0.03156028687953949,
    0.021252067759633064,
    -0.010501671582460403,
    0.017203396186232567,
    0.007696620188653469,
    -0.00648063700646162,
    0.026585811749100685,
    -0.004784478805959225,
    0.014992518350481987,
    -0.0099696796387434,
    0.0019448819803074002,
    0.008214795030653477,
    0.007364988327026367,
    0.003010594518855214,
    -0.005344107281416655,
    0.0031505015213042498,
    -0.008981692604720592,
    -0.007841709069907665,
    -0.005793191958218813,
    0.022108782082796097,
    0.005948644131422043,
    0.013949260115623474,
    -0.01673358492553234,
    0.018612831830978394,
    -0.023352401331067085,
    0.030703572556376457,
    -0.017051398754119873,
    -0.023891303688287735,
    -0.012187466956675053,
    -0.0005021975375711918,
    -0.0304548479616642,
    -0.00264787208288908,
    -0.012429281137883663,
    -0.010218403302133083,
    -0.026157453656196594,
    0.01416343916207552,
    0.017756115645170212,
    -0.007883163169026375,
    0.02603309229016304,
    -0.013120180927217007,
    0.011800562962889671,
    -0.03413043171167374,
    -0.0173830296844244,
    0.016692131757736206,
    4.5259312173584476e-05,
    -0.003568495623767376,
    -0.010149313136935234,
    -0.015393240377306938,
    0.008090432733297348,
    -0.009631138294935226,
    0.004784478805959225,
    0.019331367686390877,
    0.03672821447253227,
    -0.010460217483341694,
    -0.006725906394422054,
    -0.006155914161354303,
    0.009700228460133076,
    0.055852312594652176,
    -0.012242738157510757,
    -0.006439182907342911,
    -0.029929764568805695,
    0.010225311852991581,
    0.007917707785964012,
    -0.03230645880103111,
    -0.0051230196841061115,
    0.019276095554232597,
    -0.014785248786211014,
    0.002539055421948433,
    0.0006697406643070281,
    -0.023725487291812897,
    -0.0018947917269542813,
    0.021390248090028763,
    0.021404065191745758,
    -0.024678928777575493,
    -0.04673244059085846,
    0.011544929817318916,
    0.004152305889874697,
    -0.005520286504179239,
    0.025825822725892067,
    0.02064407616853714,
    0.0054373787716031075,
    -0.010094041004776955,
    -0.006504818331450224,
    -0.003641040064394474,
    -0.02560473419725895,
    0.03349480405449867,
    -0.008028252050280571,
    0.007016084156930447,
    0.003404407063499093,
    -0.026903625577688217,
    -0.02719380334019661,
    -0.01517215184867382,
    0.02404330112040043,
    0.023352401331067085,
    -0.0063873655162751675,
    0.0004970157751813531,
    0.002611599862575531,
    -0.005568649619817734,
    0.007675893139094114,
    0.009651865810155869,
    4.7499339416390285e-05,
    -0.011835107579827309,
    -0.00873296894133091,
    0.019193187355995178,
    0.0014215256087481976,
    0.01962154544889927,
    -0.004090124741196632,
    0.024209117516875267,
    0.0009603502694517374,
    0.04225541278719902,
    -0.0021469700150191784,
    0.037363842129707336,
    0.03548459708690643,
    -0.011786744929850101,
    -0.03327371925115585,
    0.007282080128788948,
    0.013527811504900455,
    0.008249339647591114,
    0.03730856999754906,
    -0.022785864770412445,
    0.029902128502726555,
    -0.00793843436986208,
    0.022620048373937607,
    0.0220949649810791,
    0.006349366158246994,
    0.015476147644221783,
    0.010439490899443626,
    0.01703757978975773,
    0.007772618904709816,
    -0.0070229931734502316,
    -0.008808968588709831,
    -0.0050332024693489075,
    0.0212935209274292,
    -0.01414962112903595,
    0.016236137598752975,
    0.02498292364180088,
    0.022039692848920822,
    -0.040790703147649765,
    -0.03689403086900711,
    0.03349480405449867,
    -0.014370708726346493,
    0.016401953995227814,
    -0.03700457513332367,
    -0.015572873875498772,
    -0.017424484714865685,
    0.008580971509218216,
    -0.022841136902570724,
    0.004774115048348904,
    0.00838061049580574,
    0.022329870611429214,
    -0.0015432966174557805,
    -0.0007111946470104158,
    0.0036444945726543665,
    -0.011579475365579128,
    0.007523895241320133,
    -0.008629334159195423,
    -0.01718957908451557,
    -0.007323534227907658,
    -0.01689940132200718,
    0.03258281946182251,
    0.008062796667218208,
    0.002483783522620797,
    0.011696928180754185,
    0.012456917203962803,
    0.00512647395953536,
    0.01608414016664028,
    -0.022702956572175026,
    -0.012622733600437641,
    -0.028658509254455566,
    0.0011382568627595901,
    0.0002288604446221143,
    0.04349903017282486,
    0.0020761529449373484,
    -0.002331785624846816,
    0.0204782597720623,
    0.01329981442540884,
    -0.0012004377786070108,
    0.04098415747284889,
    -0.013527811504900455,
    0.013707445003092289,
    0.028036700561642647,
    0.003489042166620493,
    0.016374317929148674,
    0.018101565539836884,
    -0.013265269808471203,
    -0.009748591110110283,
    -0.025742914527654648,
    -0.006263003684580326,
    0.007468623109161854,
    -0.01186965312808752,
    -0.0015035700052976608,
    0.004283576738089323,
    0.00805588811635971,
    -0.008442791178822517,
    -0.00039057410322129726,
    0.023725487291812897,
    -0.010784940794110298,
    0.008954057469964027,
    0.005952098872512579,
    -0.007959161885082722,
    0.025991637259721756,
    -0.02098952606320381,
    0.02503819577395916,
    -0.014688522554934025,
    0.013320541940629482,
    -0.011434386484324932,
    -0.03888382017612457,
    0.010453308932483196,
    0.02169424295425415,
    0.0045806635171175,
    0.002734234556555748,
    -0.024941470474004745,
    -0.02344912849366665,
    -0.002447511302307248,
    0.0031505015213042498,
    0.03147738054394722,
    0.008373701013624668,
    -0.00015102631004992872,
    -0.007972979918122292,
    -0.01148274913430214,
    0.003989944234490395,
    0.010370400734245777,
    0.01781138777732849,
    -0.011710746213793755,
    -0.012311828322708607,
    -0.0339646190404892,
    -0.020395351573824883,
    -0.007358079310506582,
    0.006383911240845919,
    -0.015724871307611465,
    -0.03385407477617264,
    -0.036341313272714615,
    0.018239745870232582,
    -0.01026676595211029,
    0.016512496396899223,
    0.014412162825465202,
    -0.01176601741462946,
    -0.009727864526212215,
    -0.026530539616942406,
    -0.023725487291812897,
    -0.006314821075648069,
    0.0013938896590843797,
    -0.014937246218323708,
    0.021915331482887268,
    -0.0018913372186943889,
    0.02137642912566662,
    0.010024950839579105,
    0.024181481450796127,
    0.005779373925179243,
    0.017562665045261383,
    -0.0030485938768833876,
    -0.01616704650223255,
    -0.002406057436019182,
    0.029763948172330856,
    -0.0005725829396396875,
    0.0016063412185758352,
    0.03797183558344841,
    -0.0041799419559538364,
    -0.03683875873684883,
    0.00045253915595822036,
    0.013859443366527557,
    0.016263773664832115,
    -0.02279968187212944,
    -0.018502287566661835,
    -0.0487775020301342,
    -0.01135838683694601,
    0.023656398057937622,
    -0.005375197622925043,
    0.007903889752924442,
    -0.036368947476148605,
    0.006225004326552153,
    0.0044804830104112625,
    -0.010826394893229008,
    0.017023762688040733,
    0.009976588189601898,
    0.028465058654546738,
    -0.005471923854202032,
    0.030620664358139038,
    0.019248459488153458,
    0.026212725788354874,
    0.01741066575050354,
    -0.02447165921330452,
    -0.024858562275767326,
    -0.020395351573824883,
    -0.0035114965867251158,
    0.009030056186020374,
    0.012007832527160645,
    -0.019925540313124657,
    0.0323340930044651,
    -0.01218055747449398,
    0.03227882459759712,
    0.004404484294354916,
    0.012422372587025166,
    0.010550035163760185,
    -0.030067944899201393,
    -0.011524203233420849,
    -0.03343953564763069,
    -0.02188769541680813,
    -0.03139447048306465,
    0.03482133150100708,
    -0.0037619476206600666,
    -0.006086824461817741,
    0.019068825989961624,
    -0.04236595332622528,
    -0.008836603723466396,
    -0.004898477345705032,
    -0.021404065191745758,
    0.02427820675075054,
    0.014937246218323708,
    0.019359003752470016,
    0.009154417552053928,
    0.011973287910223007,
    -0.003886309452354908,
    -0.02700035087764263,
    -0.008850421756505966,
    0.016802674159407616,
    0.006908994633704424,
    0.00012479371798690408,
    -0.01851610466837883,
    -0.01229110173881054,
    0.040901247411966324,
    -0.006680998019874096,
    -0.058256641030311584,
    -0.004988294094800949,
    0.047229886054992676,
    0.05239781364798546,
    0.009914407506585121,
    -0.027995245531201363,
    -0.01409434899687767,
    0.021473154425621033,
    0.02705562300980091,
    -0.008850421756505966,
    0.007116264663636684,
    0.01962154544889927,
    -0.016885582357645035,
    -0.011323842220008373,
    0.0011261660838499665,
    0.004774115048348904,
    0.006421910598874092,
    0.014073622412979603,
    -0.01967681758105755,
    -0.01061912439763546,
    -0.0020485168788582087,
    -0.013914715498685837,
    0.006701724603772163,
    0.015545237809419632,
    0.02347676455974579,
    -0.008539517410099506,
    0.010536217130720615,
    0.06770814955234528,
    -0.004193759523332119,
    -0.007043720223009586,
    -0.006542817689478397,
    -0.015130697749555111,
    0.038552191108465195,
    -0.027497798204421997,
    0.012843821197748184,
    -0.015517601743340492,
    -0.01514451578259468,
    0.01573869027197361,
    -0.018930645659565926,
    -0.01366599090397358,
    -0.029708676040172577,
    -0.0038966729771345854,
    -0.010833303444087505,
    0.0069435397163033485,
    0.00038755140849389136,
    -0.0012116649886593223,
    -0.006477182265371084,
    0.007364988327026367,
    -0.008843513205647469,
    -0.03446206450462341,
    -0.020381534472107887,
    0.017369212582707405,
    -0.02514874003827572,
    -0.013569265604019165,
    -0.017604118213057518,
    -0.011980196461081505,
    0.007834799587726593,
    0.016830310225486755,
    0.028658509254455566,
    0.0020502442494034767,
    0.04253176972270012,
    -0.006487546022981405,
    -0.00032429094426333904,
    -0.015006336383521557,
    0.02665490098297596,
    -0.023601125925779343,
    0.0037550386041402817,
    -0.013424176722764969,
    0.0017583391163498163,
    0.011793653480708599,
    0.014716158621013165,
    -0.01223582960665226,
    -0.01417725719511509,
    -0.012498371303081512,
    0.007316625211387873,
    0.015918323770165443,
    -0.002010517520830035,
    -0.006750087719410658,
    0.008981692604720592,
    0.0007677620160393417,
    -0.023587306961417198,
    -0.018143020570278168,
    0.023628761991858482,
    -0.023297129198908806,
    0.0013403448974713683,
    0.025908729061484337,
    9.348733146907762e-05,
    -0.0009897134732455015,
    0.00624573091045022,
    0.0003793469804804772,
    -0.002893141470849514,
    -0.03816528618335724,
    -0.024651292711496353,
    -0.002404330065473914,
    -0.021362612023949623,
    -0.031947191804647446,
    0.036451853811740875,
    -0.01177983544766903,
    0.005361379589885473,
    -0.02328331209719181,
    0.020298626273870468,
    0.01689940132200718,
    -0.0018775193020701408,
    -4.7735484258737415e-06,
    0.012671096250414848,
    0.014536525122821331,
    0.02554946206510067,
    -0.013410358689725399,
    -0.02177715115249157,
    0.0029639587737619877,
    0.010480944998562336,
    -0.02773270383477211,
    -0.0266825370490551,
    -0.015545237809419632,
    0.024485476315021515,
    0.005962462164461613,
    -0.025825822725892067,
    -0.017452120780944824,
    -0.00669136131182313,
    -0.02818869799375534,
    -0.018737193197011948,
    -0.034268613904714584,
    0.023490581661462784,
    0.011931833811104298,
    0.01528269611299038,
    0.014647068455815315,
    -0.0019604272674769163,
    -0.0012418917613103986,
    0.010909302160143852,
    -0.02260623127222061,
    -0.008194067515432835,
    -0.01735539361834526,
    -0.012132194824516773,
    0.004097033757716417,
    -0.01587686873972416,
    -0.03053775615990162,
    0.007064446806907654,
    0.03343953564763069,
    5.683727431460284e-05,
    0.011254752054810524,
    0.043968841433525085,
    -0.026046909391880035,
    0.013410358689725399,
    -0.012850729748606682,
    -0.012664186768233776,
    -0.025964001193642616,
    0.024222934618592262,
    0.004532300401479006,
    -0.04698116332292557,
    -0.0027687796391546726,
    0.010612215846776962,
    -0.0024423296563327312,
    -0.006377002224326134,
    -0.007192263379693031,
    0.022329870611429214,
    -0.0006883086171001196,
    0.0152274239808321,
    -0.03296972066164017,
    -0.022924043238162994,
    0.010059496387839317,
    -0.0077242557890713215,
    0.029819220304489136,
    -0.035318780690431595,
    0.01959390938282013,
    0.02921122871339321,
    -0.008988602086901665,
    0.0048742955550551414,
    -0.024913834407925606,
    -0.009769318625330925,
    -0.021846240386366844,
    -0.011282388120889664,
    0.016913218423724174,
    -0.0062284586019814014,
    -0.005233563482761383,
    -0.0099696796387434,
    0.042310681194067,
    -0.0015821597771719098,
    0.010584579780697823,
    -0.027387253940105438,
    0.010943847708404064,
    -0.03272099792957306,
    -0.022136418148875237,
    0.010860939510166645,
    -0.03603731468319893,
    0.0024216026067733765,
    0.027884703129529953,
    0.020450623705983162,
    0.002029517199844122,
    -0.033190809190273285,
    0.008387519046664238,
    -0.0265443567186594,
    -0.009278779849410057,
    0.003837946569547057,
    -0.00032429094426333904,
    -0.04974476248025894,
    0.0036894031800329685,
    0.02021571807563305,
    -0.004819023888558149,
    0.036230769008398056,
    0.1986474096775055,
    0.017714662477374077,
    0.014840519987046719,
    0.017825206741690636,
    0.004960658028721809,
    0.012450008653104305,
    -0.0017643844475969672,
    -0.008636243641376495,
    -0.018239745870232582,
    0.02918359264731407,
    0.004532300401479006,
    -0.028769053518772125,
    0.007378806360065937,
    0.00419030524790287,
    0.01142747700214386,
    0.014895792119204998,
    -0.01692703738808632,
    -0.05079492926597595,
    -0.016802674159407616,
    -0.015462329611182213,
    0.017687026411294937,
    -0.008656970225274563,
    -0.01865428499877453,
    -0.007758800871670246,
    0.0008018751977942884,
    0.002114152302965522,
    0.014495071023702621,
    0.0014672977849841118,
    0.012760912999510765,
    0.01962154544889927,
    -0.024637475609779358,
    -0.004843205213546753,
    0.023297129198908806,
    0.018073929473757744,
    -0.030675936490297318,
    0.002763597760349512,
    0.0035650411155074835,
    -0.025300737470388412,
    0.01829501800239086,
    0.005813919007778168,
    0.013997622765600681,
    -0.04966185241937637,
    0.010515489615499973,
    -0.02592254802584648,
    -0.0017773389117792249,
    -0.031173383817076683,
    -0.00420412328094244,
    -0.008000615984201431,
    0.007288989145308733,
    -0.013361996039748192,
    -0.04372011870145798,
    0.000762580253649503,
    -0.013486357405781746,
    -0.009285688400268555,
    -0.010909302160143852,
    -0.003941581584513187,
    0.005547922570258379,
    -0.002627145266160369,
    0.005047020502388477,
    -0.013949260115623474,
    -0.02215023711323738,
    0.023297129198908806,
    -0.02776033990085125,
    0.0023006952833384275,
    -0.05753810703754425,
    0.011918015778064728,
    -0.03255518153309822,
    -0.02398802898824215,
    0.023269493132829666,
    -0.00795225240290165,
    -0.028409786522388458,
    -0.029155956581234932,
    -0.008415155112743378,
    -0.02169424295425415,
    0.0017557482933625579,
    -0.029708676040172577,
    0.02835451439023018,
    0.002808506367728114,
    0.040901247411966324,
    0.03667294234037399,
    -0.0004654935037251562,
    0.028686145320534706,
    -0.01023912988603115,
    -0.008940239436924458,
    -0.021556062623858452,
    -0.0038759459275752306,
    0.04888804629445076,
    -0.0015130698448047042,
    -0.018833918496966362,
    -0.01367980893701315,
    -0.014246347360312939,
    -0.008608607575297356,
    0.014495071023702621,
    -0.024209117516875267,
    0.007378806360065937,
    -0.0027186893858015537,
    0.008097341284155846,
    0.00044088021968491375,
    -0.005471923854202032,
    0.013873261399567127,
    -0.02659962885081768,
    0.05930681154131889,
    -0.007537713274359703,
    -0.021652789786458015,
    -0.03360534831881523,
    0.03020612522959709,
    0.0041730329394340515,
    0.010888575576245785,
    0.013589992187917233,
    -0.01068821456283331,
    -0.0032921358942985535,
    -0.019690634682774544,
    0.0010631215991452336,
    -0.0017928840825334191,
    0.0001014758599922061,
    -0.0063010030426084995,
    -0.007150809280574322,
    0.00757225789129734,
    -0.005807009991258383,
    -0.01329981442540884,
    -0.013741990551352501,
    -0.017535028979182243,
    0.00514029199257493,
    -0.00043591437861323357,
    -0.008442791178822517,
    0.0025960546918213367,
    -0.027470162138342857,
    -0.002231605350971222,
    0.010404946282505989,
    -0.010163131169974804,
    0.029874492436647415,
    -0.017535028979182243,
    0.010031860321760178,
    0.007869345135986805,
    -0.010757304728031158,
    -0.01797720417380333,
    0.02180478721857071,
    -0.0282992422580719,
    -0.0025874185375869274,
    0.009707137010991573,
    -0.007689711172133684,
    -0.0028119608759880066,
    0.03681112453341484,
    -0.006953903008252382,
    0.008207885548472404,
    -0.004684298299252987,
    0.021390248090028763,
    -0.0014914792263880372,
    -0.024651292711496353,
    -0.022813500836491585,
    -0.028851961717009544,
    0.011296206153929234,
    -0.003362953197211027,
    -0.028078153729438782,
    0.016567768529057503,
    -0.04112233594059944,
    -0.0034009525552392006,
    -0.019262276589870453,
    0.025397464632987976,
    0.0008454882190562785,
    -0.02934940904378891,
    -0.015517601743340492,
    -0.008276975713670254,
    -0.0005427878932096064,
    -0.008180249482393265,
    -0.03816528618335724,
    -0.17266958951950073,
    0.0065393634140491486,
    0.007744982838630676,
    -0.02379457652568817,
    0.017631754279136658,
    -0.0071715363301336765,
    0.009375506080687046,
    -0.017631754279136658,
    -0.005423560738563538,
    0.0017946113366633654,
    0.03399225324392319,
    -0.021224431693553925,
    -0.015572873875498772,
    -0.05328216776251793,
    0.012104558758437634,
    -0.011503475718200207,
    -0.009451504796743393,
    0.008373701013624668,
    0.0318090096116066,
    0.0211553405970335,
    0.03805474191904068,
    -0.0318090096116066,
    0.030675936490297318,
    -0.006321730092167854,
    -0.010031860321760178,
    -0.006121369078755379,
    -0.019068825989961624,
    -0.029155956581234932,
    -0.019441910088062286,
    -0.006881358567625284,
    -0.02098952606320381,
    0.00796607043594122,
    0.022868772968649864,
    0.002131424844264984,
    0.007890071719884872,
    0.016180865466594696,
    0.013887079432606697,
    -0.03191955387592316,
    -0.022053509950637817,
    0.02767743170261383,
    0.02325567603111267,
    0.033107902854681015,
    0.022108782082796097,
    -0.021445518359541893,
    -0.03374353051185608,
    -0.00664990721270442,
    0.0002271332050440833,
    -0.015047790482640266,
    0.0052024731412529945,
    -0.011351478286087513,
    0.03730856999754906,
    -0.00804207008332014,
    -0.01942809298634529,
    0.012512189336121082,
    0.011586383916437626,
    0.005793191958218813,
    0.0036237677559256554,
    0.005648103076964617,
    0.02773270383477211,
    -0.01115802675485611,
    0.018612831830978394,
    -0.040514346212148666,
    0.00257705501280725,
    0.007544622290879488,
    -0.026972714811563492,
    -0.021514609456062317,
    -0.017659390345215797,
    0.03413043171167374,
    -0.04225541278719902,
    0.012498371303081512,
    0.020008448511362076,
    0.014757612720131874,
    0.015614327974617481,
    -0.007219899445772171,
    0.01638813503086567,
    -0.0021625154186040163,
    -0.0265443567186594,
    0.018668103963136673,
    0.010356582701206207,
    -0.013140907511115074,
    -0.00571373850107193,
    0.055879946798086166,
    -0.005036657210439444,
    0.0039173997938632965,
    0.014536525122821331,
    0.0015726599376648664,
    0.0003080979804508388,
    -0.014025258831679821,
    -0.023656398057937622,
    0.01865428499877453,
    0.027428708970546722,
    -0.007157718297094107,
    0.014204893261194229,
    -0.01695467345416546,
    -0.001489751972258091,
    0.03269336372613907,
    0.007060992531478405,
    0.012678004801273346,
    0.012622733600437641,
    -0.027857067063450813,
    7.740232831565663e-05,
    0.023131314665079117,
    -0.016636859625577927,
    0.015379422344267368,
    0.027553070336580276,
    0.01970445178449154,
    -0.025231648236513138,
    0.013541629537940025,
    0.013900897465646267,
    -0.002383603248745203,
    -0.017673207446932793,
    0.0022056964226067066,
    0.022868772968649864,
    -0.0006740587996318936,
    -0.008290793746709824,
    0.03277627006173134,
    0.027608342468738556,
    -0.0033007722813636065,
    0.037667836993932724,
    -0.005254290532320738,
    0.04587572440505028,
    -0.017728479579091072,
    -0.010149313136935234,
    0.03600968047976494,
    -0.014591796323657036,
    -0.013216907158493996,
    -0.11374969035387039,
    -0.05657084658741951,
    0.014619432389736176,
    -0.013921624049544334,
    -0.007689711172133684,
    -0.009997314773499966,
    -0.0071024466305971146,
    0.02810578979551792,
    0.014370708726346493,
    0.03037193976342678,
    -0.005378652364015579,
    0.01622231863439083,
    -0.0022126054391264915,
    0.026157453656196594,
    -0.007696620188653469,
    -0.014771430753171444,
    -0.011676200665533543,
    0.00917514506727457,
    -0.004732661414891481,
    0.020063720643520355,
    -0.01582159847021103,
    -0.011019846424460411,
    -0.008214795030653477,
    0.00012911183875985444,
    -0.010860939510166645,
    0.008076614700257778,
    -0.030952295288443565,
    0.029515225440263748,
    0.0020761529449373484,
    0.027014169842004776,
    0.013424176722764969,
    -0.009921316057443619,
    -0.00568610243499279,
    0.00958277564495802,
    0.014301618561148643,
    0.00420412328094244,
    -0.020353898406028748,
    -0.02180478721857071,
    0.008228612132370472,
    -0.0034665879793465137,
    0.015572873875498772,
    -0.012643460184335709,
    0.014025258831679821,
    0.004680844023823738,
    -0.0015372512862086296,
    0.019068825989961624,
    -0.002735961927101016,
    0.01829501800239086,
    0.040735431015491486,
    -0.02121061272919178,
    -0.021500790491700172,
    -0.019151732325553894,
    -0.01216673944145441,
    -0.006442637648433447,
    0.02353203482925892,
    0.0015398422256112099,
    -0.017507392913103104,
    0.007378806360065937,
    -0.025618551298975945,
    -0.012304919771850109,
    0.007620621006935835,
    -0.021901512518525124,
    0.007295898161828518,
    0.009057692252099514,
    -0.009002420119941235,
    0.015863051638007164,
    0.0028672327753156424,
    -0.003109047655016184,
    0.02274440973997116,
    -0.015462329611182213,
    -0.046124447137117386,
    0.0004229600017424673,
    -0.012000923976302147,
    -0.0036237677559256554,
    -0.010722759179770947,
    -0.00569992046803236,
    0.018198292702436447,
    0.005682648159563541,
    -0.005454651080071926,
    -3.9888647734187543e-05,
    -0.02134879305958748,
    0.01741066575050354,
    -0.025480372831225395,
    -0.014039076864719391,
    0.01695467345416546,
    0.015075426548719406,
    0.027746522799134254,
    0.02733198180794716,
    0.01142747700214386,
    -0.05507850646972656,
    -0.005617012735456228,
    -0.008726060390472412,
    0.02781561203300953,
    0.00689863134175539,
    -0.009589684195816517,
    0.026530539616942406,
    -0.002734234556555748,
    -0.007316625211387873,
    0.008256248198449612,
    0.02921122871339321,
    -0.004553027451038361,
    -0.01647104322910309,
    -0.07251680642366409,
    0.017051398754119873,
    0.02390512079000473,
    0.003209227928891778,
    0.00796607043594122,
    -0.012422372587025166,
    0.016319045796990395,
    -0.017562665045261383,
    0.025079650804400444,
    0.01138602290302515,
    -0.012456917203962803,
    -0.010011132806539536,
    0.011531111784279346,
    0.006328639108687639,
    0.019773542881011963,
    -0.007219899445772171,
    0.026364723220467567,
    0.00236114882864058,
    0.020201900973916054,
    0.003390589030459523,
    -0.012380918487906456,
    0.012712550349533558,
    0.028686145320534706,
    0.020450623705983162,
    -0.02948758937418461,
    -0.006770814768970013,
    -0.01624995470046997,
    0.007551531307399273,
    -0.025563279166817665,
    -0.01862664893269539,
    0.029681039974093437,
    -0.006922812666743994,
    -0.01576632633805275,
    0.01219437550753355,
    0.026668719947338104,
    -0.0058346460573375225,
    0.010923120193183422,
    0.0016037503955885768,
    0.00987986195832491,
    0.0028551421128213406,
    -0.03133919835090637,
    -0.02705562300980091,
    0.014059804379940033,
    -0.00048319780034944415,
    -0.019041189923882484,
    0.0034665879793465137,
    -0.0026392359286546707,
    -0.0022143328096717596,
    0.037363842129707336,
    0.016553951427340508,
    0.04037616401910782,
    0.024084756150841713,
    -0.019041189923882484,
    -0.038552191108465195,
    -0.006553181447088718,
    -0.020340079441666603,
    0.017797570675611496,
    -0.010570761747658253,
    -0.00986604392528534,
    -0.010750395245850086,
    0.013548538088798523,
    0.022661501541733742,
    -0.0023196949623525143,
    0.02517637610435486,
    0.012760912999510765,
    -0.03156028687953949,
    -0.030897023156285286,
    -0.026696356013417244,
    0.00023555353982374072,
    -0.014909610152244568,
    -0.009209689684212208,
    -0.023670215159654617,
    0.013154725544154644,
    0.012684914283454418,
    0.03144974261522293,
    -0.0152274239808321,
    -0.011220207437872887,
    -0.004470119718462229,
    -0.02517637610435486,
    0.03553986921906471,
    0.026723992079496384,
    -0.039657630026340485,
    -0.005613557994365692,
    0.02827160619199276,
    0.028769053518772125,
    0.007579166907817125,
    -0.021362612023949623,
    0.004304303787648678,
    -0.018336471170186996,
    0.014370708726346493,
    -0.012346372939646244,
    -0.003390589030459523,
    -0.02398802898824215,
    0.030012672767043114,
    0.003470042487606406,
    -0.006736269686371088,
    0.000705581100191921,
    0.006394274532794952,
    0.0433884859085083,
    0.016857946291565895,
    0.021942967548966408,
    0.019289912655949593,
    0.02021571807563305,
    -0.0199393592774868,
    -0.01732775941491127,
    -0.0014638432767242193,
    -0.025618551298975945,
    -0.0040037622675299644,
    0.002107243286445737,
    0.008532607927918434,
    -0.008739878423511982,
    -0.008726060390472412,
    -0.016484860330820084,
    0.03142210841178894,
    -0.01622231863439083,
    0.021790968254208565,
    0.01254673395305872,
    -0.009624229744076729,
    -0.011531111784279346,
    -0.007247535511851311,
    0.0011909379390999675,
    0.004663571249693632,
    0.018612831830978394,
    -0.008297702297568321,
    0.026931261643767357,
    0.01718957908451557,
    0.008919511921703815,
    -0.0086915148422122,
    0.008636243641376495,
    0.006166277918964624,
    0.0033664077054709196,
    -0.0056653753854334354,
    -0.04211723059415817,
    -0.017880478873848915,
    -0.010308220051229,
    -0.009347870014607906,
    -0.0048052058555185795,
    -0.009050782769918442,
    0.0060004619881510735,
    0.08108396083116531,
    0.016996126621961594,
    -0.0013265269808471203,
    -0.001547614810988307,
    0.013811079785227776,
    0.010149313136935234,
    0.003913945518434048,
    0.011814380995929241,
    -0.0004290053911972791,
    -0.009845317341387272,
    0.0009767591254785657,
    -0.0019207005389034748,
    -0.014909610152244568,
    -0.048418235033750534,
    -0.02126588486135006,
    0.0005281062913127244,
    -0.010750395245850086,
    0.007516986224800348,
    -0.0168441291898489,
    0.016940854489803314,
    0.017659390345215797,
    0.008560243993997574,
    0.007447896059602499,
    -0.012456917203962803,
    -0.031145747750997543,
    0.010722759179770947,
    0.02514874003827572,
    0.03998925909399986,
    -0.021169159561395645,
    -0.04783787950873375,
    0.01829501800239086,
    -0.002727325540035963,
    -0.013804171234369278,
    -0.002742870943620801,
    -0.02382221259176731,
    -0.002419875469058752,
    -0.0016080684727057815,
    -0.018585195764899254,
    0.026875989511609077,
    0.015641963109374046,
    -0.0017177488189190626,
    -0.019814996048808098,
    -0.03493187576532364,
    -0.029681039974093437,
    0.019953176379203796,
    0.010681306011974812,
    -0.01902737095952034,
    0.002034698845818639,
    -0.06041225045919418
  ]
}
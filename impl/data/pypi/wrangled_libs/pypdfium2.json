{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: information technology",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: implementation :: cpython",
    "topic :: multimedia :: graphics",
    "topic :: software development :: libraries"
  ],
  "description": "python bindings to pdfium\n<!-- spdx-filecopyrighttext: 2023 geisserml <geisserml@gmail.com> -->\n<!-- spdx-license-identifier: cc-by-4.0 -->\n\n# pypdfium2\n\n[![downloads](https://pepy.tech/badge/pypdfium2/month)](https://pepy.tech/project/pypdfium2)\n\n[pypdfium2](https://github.com/pypdfium2-team/pypdfium2) is an [abi-level](#drawbacks-of-abi-level-bindings) python 3 binding to [pdfium](https://pdfium.googlesource.com/pdfium/+/refs/heads/main), a powerful and liberal-licensed library for pdf rendering, inspection, manipulation and creation.\n\nit is built with [ctypesgen](https://github.com/pypdfium2-team/ctypesgen) and external [pdfium binaries](https://github.com/bblanchon/pdfium-binaries/).\nthe custom setup infrastructure provides a seamless packaging and installation process. a wide range of platforms is supported with pre-built packages.\n\npypdfium2 includes helpers to simplify common use cases, while the raw pdfium/ctypes api remains accessible as well.\n\n\n## installation\n\n<!-- fixme is there a better/universal way to create linkable sub-sections without them being a heading? note, the current solution is specific to gh and doesn't work on rtd. -->\n\n* <a id=\"user-content-install-pypi\" class=\"anchor\" href=\"#install-pypi\">from pypi \ud83d\udd17</a> (recommended)\n  ```bash\n  python -m pip install -u pypdfium2\n  ```\n  this will use a pre-built wheel package, the easiest way of installing pypdfium2.\n\n\n* <a id=\"user-content-install-conda\" class=\"anchor\" href=\"#install-conda\">from conda \ud83d\udd17</a>\n  \n  _**beware:** any conda packages/recipes of pypdfium2 or pdfium-binaries that might be provided by other distributors, including `anaconda/main` or `conda-forge` default channels, are [unofficial](#install-unofficial)._\n  \n  + to install\n    \n    with permanent channel config (encouraged):\n    ```bash\n    conda config --add channels bblanchon\n    conda config --add channels pypdfium2-team\n    conda config --set channel_priority strict\n    conda install pypdfium2-team::pypdfium2_helpers\n    ```\n    \n    alternatively, with temporary channel config:\n    ```bash\n    conda install pypdfium2-team::pypdfium2_helpers --override-channels -c pypdfium2-team -c bblanchon\n    ```\n    \n    adding the channels permanently and tightening priority is encouraged to include pypdfium2 in `conda update` by default, and to avoid accidentally replacing the install with a different channel. (if desired, you may limit the channel config to the current environment by adding `--env`.)\n    otherwise, you should be cautious when making changes to the environment.\n  \n  + to depend on pypdfium2 in a `conda-build` recipe\n    ```yaml\n    requirements:\n      run:\n        - pypdfium2-team::pypdfium2_helpers\n    ```\n    you'll want to have downstream callers handle the custom channels as shown above, otherwise conda will not be able to satisfy requirements.\n  \n  + to set up channels in a gh workflow\n    ```yaml\n    - name: ...\n      uses: conda-incubator/setup-miniconda@v2\n      with:\n        # ... your options\n        channels: pypdfium2-team,bblanchon\n        channel-priority: strict\n    ```\n    this is just a suggestion, you can also call `conda config` manually, or pass channels on command basis using `-c`, as discussed above.\n  \n  + to verify the sources\n    ```bash\n    conda list --show-channel-urls \"pypdfium2|pdfium-binaries\"\n    conda config --show-sources\n    ```\n    the table should show `pypdfium2-team` and `bblanchon` in the channels column.\n    if added permanently, the config should also include these channels, ideally with top priority.\n    please check this before reporting any issue with a conda install of pypdfium2.\n  \n  _**note:** conda packages are normally managed using recipe feedstocks driven by third parties, in a linux repository like fashion. however, with some quirks it is also possible to do conda packaging within the original project and publish to a custom channel, which is what pypdfium2-team does, and the above instructions are referring to._\n\n\n* <a id=\"user-content-install-unofficial\" class=\"anchor\" href=\"#install-unofficial\">unofficial packages \ud83d\udd17</a>\n  \n  the authors of this project have no control over and are not responsible for possible third-party builds of pypdfium2, and we do not support them. please use the official packages where possible.\n  if you have an issue with a third-party build, either contact your distributor, or try to reproduce with an official build.\n  \n  do not expect us to help with the creation of unofficial builds or add/change code for downstream setup tasks. related issues or prs may be closed without further notice if we don't see fit for upstream.\n  \n  if you are a third-party distributor, please point out clearly and visibly in the description that your package is unofficial, i.e. not affiliated with or endorsed by pypdfium2 team.\n\n\n* <a id=\"user-content-install-source\" class=\"anchor\" href=\"#install-source\">from source \ud83d\udd17</a>\n  \n  * dependencies:\n    - system: git, c pre-processor (e.g. gcc, has to be in `$path`)\n    - python: ctypesgen (pypdfium2-team fork), wheel, setuptools. usually installed automatically.\n  \n  * get the code\n    ```\n    git clone \"https://github.com/pypdfium2-team/pypdfium2.git\"\n    cd pypdfium2/\n    ```\n  \n  * <a id=\"user-content-install-source-default\" class=\"anchor\" href=\"#install-source-default\">with pre-built binary \ud83d\udd17</a>\n    ```bash\n    # in the pypdfium2/ directory\n    python -m pip install -v .\n    ```\n    a binary is downloaded implicitly from `pdfium-binaries` and bundled into pypdfium2.\n  \n  * <a id=\"user-content-install-source-selfbuilt\" class=\"anchor\" href=\"#install-source-selfbuilt\">with self-built binary \ud83d\udd17</a>\n    ```bash\n    # call build script with --help to list options\n    python setupsrc/pypdfium2_setup/build_pdfium.py\n    pdfium_platform=\"sourcebuild\" python -m pip install -v .\n    ```\n    building pdfium may take a long time, as it comes with its bundled toolchain and deps, rather than taking them from the system.[^pdfium_buildsystem]\n    however, we can at least provide the `--use-syslibs` option to build against system-provided runtime libraries.\n  \n  * <a id=\"user-content-install-source-system\" class=\"anchor\" href=\"#install-source-system\">with system-provided binary \ud83d\udd17</a>\n    ```bash\n    # substitute $pdfium_ver with the system pdfium's build version.\n    # for abi safety reasons, you'll want to make sure `$pdfium_ver` is correct and the bindings are rebuilt whenever system pdfium is updated.\n    pdfium_platform=\"system:$pdfium_ver\" python -m pip install -v .\n    ```\n    link against external pdfium instead of bundling it.\n    note, this is basically a high-level convenience entry point to internal bindings generation, and intended for end users. therefore it is less flexible, supporting only the \"simple case\" for now.\n    for more sohpisticated use cases that need passing custom parameters to ctypesgen (e.g. runtime libdirs / headers / feature flags), consider [caller-provided data files](#install-source-caller).\n  \n  <!-- todo version.json: reconsider origin - should we add a new field for the packager? -->\n  * <a id=\"user-content-install-source-caller\" class=\"anchor\" href=\"#install-source-caller\">with caller-provided data files \ud83d\udd17</a> (this is expected to work offline)\n    ```bash\n    # call ctypesgen (see --help or packaging_base.py::run_ctypesgen() for further options)\n    # reminder: you'll want to use the pypdfium2-team fork of ctypesgen\n    ctypesgen --library pdfium --runtime-libdirs $my_libdirs --headers $my_include_dir/fpdf*.h -o src/pypdfium2_raw/bindings.py --strip-build-path=. --no-srcinfo [-d $my_flags]\n    \n    # write the version file (fill the placeholders).\n    # note, this is not a mature interface yet and might change!\n    # major/minor/build/patch: integers forming the pdfium version being packaged\n    # n_commits/hash: git describe like post-tag info (0/null for release commit)\n    # origin: a string to identify the build, consisting of binary source and package provider (e.g. \"system/debian\", \"pdfium-binaries/debian\")\n    # flags: a comma-delimited list of pdfium feature flag strings (e.g. \"v8\", \"xfa\") - may be empty for default build\n    cat >\"src/pypdfium2_raw/version.json\" <<end\n    {\n      \"major\": $pdfium_major,\n      \"minor\": $pdfium_minor,\n      \"build\": $pdfium_build,\n      \"patch\": $pdfium_patch,\n      \"n_commits\": $post_tag_commit_count,\n      \"hash\": $post_tag_hash,\n      \"origin\": \"$origin\",\n      \"flags\": [$my_flags]\n    }\n    end\n    \n    # optional: copy in a binary if bundling\n    cp \"$binary_path\" src/pypdfium2_raw/libpdfium.so\n    \n    # finally, install\n    # set $my_platform to \"system\" if building against system pdfium, \"auto\" or the platform name otherwise\n    pdfium_platform='prepared!$my_platform:$pdfium_build' python -m pip install --no-build-isolation -v .\n    ```\n  \n  see [setup magic](#setup-magic) for details.\n  \n  support for source installs (esp. with self-built/system pdfium) is limited, as their integrity depends somewhat on a correctly acting caller.\n  \n  installing an `sdist` does not implicitly trigger a sourcebuild if no pre-built binary is available. it is preferred to let callers decide consciously what to do, and run the build script without pip encapsulation.\n  \n  relevant pip options:\n  * `-v`: verbose logging output. useful for debugging.\n  * `-e`: install in editable mode, so the installation points to the source tree. this way, changes directly take effect without needing to re-install. recommended for development.\n  * `--no-build-isolation`: do not isolate setup in a virtual env; use the main env instead. this renders `pyproject.toml [build-system]` inactive, setup deps must be prepared by caller. useful to install custom versions of setup deps, or as speedup when installing repeatedly.\n  \n  [^pdfium_buildsystem]: this means pdfium may not compile on arbitrary hosts. the script is limited to build hosts supported by google's toolchain. ideally, we'd need an alternative build system that runs with system packages instead.\n\n\n### runtime dependencies\n\nas of this writing, pypdfium2 does not need any mandatory runtime dependencies apart from python itself.\n\nhowever, some optional support model features require additional packages:\n* [`pillow`](https://pillow.readthedocs.io/en/stable/) (module name `pil`) is a pouplar imaging library for python. pypdfium2 provides convenience methods to translate between raw bitmap buffers and pil images.\n* [`numpy`](https://numpy.org/doc/stable/index.html) is a library for scientific computing. similar to `pillow`, pypdfium2 provides helpers to get a numpy array view of a raw bitmap.\n\n\n### setup magic\n\nas pypdfium2 requires a c extension and has custom setup code, there are some special features to consider. note, the apis below may change any time and are mostly of internal interest.\n\n* binaries are stored in platform-specific sub-directories of `data/`, along with bindings and version information.\n\n* `$pdfium_platform` defines which binary to include on setup.\n  - format spec: `[$platform][-v8][:$version]` (`[]` = segments, `$caps` = variables).\n  - examples: `auto`, `auto:5975` `auto-v8:5975` (`auto` may be substituted by an explicit platform name, e.g. `linux_x64`).\n  - platform:\n    + if unset or `auto`, the host platform is detected and a corresponding binary will be selected.\n    + if an explicit platform identifier (e.g. `linux_x64`, `darwin_arm64`, ...), binaries for the requested platform will be used.[^platform_ids]\n    + if `system`, bind against system-provided pdfium instead of embedding a binary. version must be given explicitly so matching bindings can be generated.\n    + if `sourcebuild`, binaries will be taken from `data/sourcebuild/`, assuming a prior run of `build_pdfium.py`.\n    + if `none`, no platform-dependent files will be included, so as to create a source distribution.\n    `sourcebuild` and `none` are standalone, they cannot be followed by additional specifiers.\n  - v8: if given, use the v8 (javascript) and xfa enabled pdfium binaries. otherwise, use the regular (non-v8) binaries.\n  - version: if given, use the specified pdfium-binaries release. otherwise, use the latest one.\n  - it is possible to prepend `prepared!` to install with existing platform files instead of generating on the fly; the value will be used for metadata / file inclusion. this can be helpful when installing in an isolated env where ctypesgen is not available, but it is not desirable to use the reference bindings (e.g. conda).\n\n* `$pypdfium_modules=[raw,helpers]` defines the modules to include. metadata adapts dynamically.\n  - may be used by packagers to decouple raw bindings and helpers, which may be relevant if packaging against system pdfium.\n  - would also allow to install only the raw module without helpers, or only helpers with a custom raw module.\n\n* `$pdfium_bindings=reference` allows to override ctypesgen and use the reference bindings file `autorelease/bindings.py` instead.\n  - this is a convenience option to get pypdfium2 installed from source even if a working ctypesgen is not available in the install env.\n  - warning: this may not be abi-safe. please make sure binary/bindings build headers match to avoid abi issues.\n\n[^platform_ids]: intended for packaging, so that wheels can be crafted for any platform without access to a native host.\n\n\n## usage\n\n### [support model](https://pypdfium2.readthedocs.io/en/stable/python_api.html)\n\n<!-- todo demonstrate more apis (e. g. xobject placement, transform matrices, image extraction, ...) -->\n\nhere are some examples of using the support model api.\n\n* import the library\n  ```python\n  import pypdfium2 as pdfium\n  ```\n\n* open a pdf using the helper class `pdfdocument` (supports file path strings, bytes, and byte buffers)\n  ```python\n  pdf = pdfium.pdfdocument(\"./path/to/document.pdf\")\n  version = pdf.get_version()  # get the pdf standard version\n  n_pages = len(pdf)  # get the number of pages in the document\n  page = pdf[0]  # load a page\n  ```\n\n* render the page\n  ```python\n  bitmap = page.render(\n      scale = 1,    # 72dpi resolution\n      rotation = 0, # no additional rotation\n      # ... further rendering options\n  )\n  pil_image = bitmap.to_pil()\n  pil_image.show()\n  ```\n\n* try some page methods\n  ```python\n  # get page dimensions in pdf canvas units (1pt->1/72in by default)\n  width, height = page.get_size()\n  # set the absolute page rotation to 90\u00b0 clockwise\n  page.set_rotation(90)\n  \n  # locate objects on the page\n  for obj in page.get_objects():\n      print(obj.level, obj.type, obj.get_pos())\n  ```\n\n* extract and search text\n  ```python\n  # load a text page helper\n  textpage = page.get_textpage()\n  \n  # extract text from the whole page\n  text_all = textpage.get_text_range()\n  # extract text from a specific rectangular area\n  text_part = textpage.get_text_bounded(left=50, bottom=100, right=width-50, top=height-100)\n  \n  # locate text on the page\n  searcher = textpage.search(\"something\", match_case=false, match_whole_word=false)\n  # this returns the next occurrence as (char_index, char_count), or none if not found\n  first_occurrence = searcher.get_next()\n  ```\n\n<!-- toc api will change with the next major release -->\n* read the table of contents\n  ```python\n  for item in pdf.get_toc():\n      state = \"*\" if item.n_kids == 0 else \"-\" if item.is_closed else \"+\"\n      target = \"?\" if item.page_index is none else item.page_index+1\n      print(\n          \"    \" * item.level +\n          \"[%s] %s -> %s  # %s %s\" % (\n              state, item.title, target, item.view_mode, item.view_pos,\n          )\n      )\n  ```\n\n* create a new pdf with an empty a4 sized page\n  ```python\n  pdf = pdfium.pdfdocument.new()\n  width, height = (595, 842)\n  page_a = pdf.new_page(width, height)\n  ```\n\n* include a jpeg image in a pdf\n  ```python\n  pdf = pdfium.pdfdocument.new()\n  \n  image = pdfium.pdfimage.new(pdf)\n  image.load_jpeg(\"./tests/resources/mona_lisa.jpg\")\n  width, height = image.get_size()\n  \n  matrix = pdfium.pdfmatrix().scale(width, height)\n  image.set_matrix(matrix)\n  \n  page = pdf.new_page(width, height)\n  page.insert_obj(image)\n  page.gen_content()\n  ```\n\n* save the document\n  ```python\n  # pdf 1.7 standard\n  pdf.save(\"output.pdf\", version=17)\n  ```\n\n### raw pdfium api\n\nwhile helper classes conveniently wrap the raw pdfium api, it may still be accessed directly and is available in the namespace `pypdfium2.raw`. lower-level helpers that may aid with using the raw api are provided in `pypdfium2.internal`.\n\n```python\nimport pypdfium2.raw as pdfium_c\nimport pypdfium2.internal as pdfium_i\n```\n\nsince pdfium is a large library, many components are not covered by helpers yet. you may seamlessly interact with the raw api while still using helpers where available. when used as ctypes function parameter, helper objects automatically resolve to the underlying raw object (but you may still access it explicitly if desired):\n```python\npermission_flags = pdfium_c.fpdf_getdocpermission(pdf.raw)  # explicit\npermission_flags = pdfium_c.fpdf_getdocpermission(pdf)      # implicit\n```\n\nfor pdfium docs, please look at the comments in its [public header files](https://pdfium.googlesource.com/pdfium/+/refs/heads/main/public/).[^pdfium_docs]\na large variety of examples on how to interface with the raw api using [`ctypes`](https://docs.python.org/3/library/ctypes.html) is already provided with [support model source code](src/pypdfium2/_helpers).\nnonetheless, the following guide may be helpful to get started with the raw api, especially for developers who are not familiar with `ctypes` yet.\n\n[^pdfium_docs]: unfortunately, no recent html-rendered docs are available for pdfium at the moment.\n\n<!-- todo write something about weakref.finalize(); add example on creating a c page array -->\n\n* in general, pdfium functions can be called just like normal python functions.\n  however, parameters may only be passed positionally, i. e. it is not possible to use keyword arguments.\n  there are no defaults, so you always need to provide a value for each argument.\n  ```python\n  # arguments: filepath (bytes), password (bytes|none)\n  # null-terminate filepath and encode as utf-8\n  pdf = pdfium_c.fpdf_loaddocument((filepath+\"\\x00\").encode(\"utf-8\"), none)\n  ```\n  this is the underlying bindings declaration,[^bindings_decl] which loads the function from the binary and\n  contains the information required to convert python types to their c equivalents.\n  ```python\n  if _libs[\"pdfium\"].has(\"fpdf_loaddocument\", \"cdecl\"):\n      fpdf_loaddocument = _libs[\"pdfium\"].get(\"fpdf_loaddocument\", \"cdecl\")\n      fpdf_loaddocument.argtypes = [fpdf_string, fpdf_bytestring]\n      fpdf_loaddocument.restype = fpdf_document\n  ```\n  python `bytes` are converted to `fpdf_string` by ctypes autoconversion.\n  when passing a string to a c function, it must always be null-terminated, as the function merely receives a pointer to the first item and then continues to read memory until it finds a null terminator.\n  \n[^bindings_decl]: from the auto-generated bindings file. we maintain a reference copy at `autorelease/bindings.py`. or if you have an editable install, there will also be `src/pypdfium2_raw/bindings.py`.\n\n* while some functions are quite easy to use, things soon get more complex.\n  first of all, function parameters are not only used for input, but also for output:\n  ```python\n  # initialise an integer object (defaults to 0)\n  c_version = ctypes.c_int()\n  # let the function assign a value to the c_int object, and capture its return code (true for success, false for failure)\n  ok = pdfium_c.fpdf_getfileversion(pdf, c_version)\n  # if successful, get the python int by accessing the `value` attribute of the c_int object\n  # otherwise, set the variable to none (in other cases, it may be desired to raise an exception instead)\n  version = c_version.value if ok else none\n  ```\n\n* if an array is required as output parameter, you can initialise one like this (in general terms):\n  ```python\n  # long form\n  array_type = (c_type * array_length)\n  array_object = array_type()\n  # short form\n  array_object = (c_type * array_length)()\n  ```\n  example: getting view mode and target position from a destination object returned by some other function.\n  ```python\n  # (assuming `dest` is an fpdf_dest)\n  n_params = ctypes.c_ulong()\n  # create a c array to store up to four coordinates\n  view_pos = (pdfium_c.fs_float * 4)()\n  view_mode = pdfium_c.fpdfdest_getview(dest, n_params, view_pos)\n  # convert the c array to a python list and cut it down to the actual number of coordinates\n  view_pos = list(view_pos)[:n_params.value]\n  ```\n\n* for string output parameters, callers needs to provide a sufficiently long, pre-allocated buffer.\n  this may work differently depending on what type the function requires, which encoding is used, whether the number of bytes or characters is returned, and whether space for a null terminator is included or not. carefully review the documentation for the function in question to fulfill its requirements.\n  \n  example a: getting the title string of a bookmark.\n  ```python\n  # (assuming `bookmark` is an fpdf_bookmark)\n  # first call to get the required number of bytes (not characters!), including space for a null terminator\n  n_bytes = pdfium_c.fpdfbookmark_gettitle(bookmark, none, 0)\n  # initialise the output buffer\n  buffer = ctypes.create_string_buffer(n_bytes)\n  # second call with the actual buffer\n  pdfium_c.fpdfbookmark_gettitle(bookmark, buffer, n_bytes)\n  # decode to string, cutting off the null terminator\n  # encoding: utf-16le (2 bytes per character)\n  title = buffer.raw[:n_bytes-2].decode(\"utf-16-le\")\n  ```\n  \n  example b: extracting text in given boundaries.\n  ```python\n  # (assuming `textpage` is an fpdf_textpage and the boundary variables are set)\n  # store common arguments for the two calls\n  args = (textpage, left, top, right, bottom)\n  # first call to get the required number of characters (not bytes!) - a possible null terminator is not included\n  n_chars = pdfium_c.fpdftext_getboundedtext(*args, none, 0)\n  # if no characters were found, return an empty string\n  if n_chars <= 0:\n      return \"\"\n  # calculate the required number of bytes (utf-16le encoding again)\n  n_bytes = 2 * n_chars\n  # initialise the output buffer - this function can work without null terminator, so skip it\n  buffer = ctypes.create_string_buffer(n_bytes)\n  # re-interpret the type from char to unsigned short as required by the function\n  buffer_ptr = ctypes.cast(buffer, ctypes.pointer(ctypes.c_ushort))\n  # second call with the actual buffer\n  pdfium_c.fpdftext_getboundedtext(*args, buffer_ptr, n_chars)\n  # decode to string (you may want to pass `errors=\"ignore\"` to skip possible errors in the pdf's encoding)\n  text = buffer.raw.decode(\"utf-16-le\")\n  ```\n\n* not only are there different ways of string output that need to be handled according to the requirements of the function in question.\n  string input, too, can work differently depending on encoding and type.\n  we have already discussed `fpdf_loaddocument()`, which takes a utf-8 encoded string as `char *`.\n  a different examples is `fpdftext_findstart()`, which needs a utf-16le encoded string, given as `unsigned short *`:\n  ```python\n  # (assuming `text` is a str and `textpage` an fpdf_textpage)\n  # add the null terminator and encode as utf-16le\n  enc_text = (text + \"\\x00\").encode(\"utf-16-le\")\n  # cast `enc_text` to a c_ushort pointer\n  text_ptr = ctypes.cast(enc_text, ctypes.pointer(ctypes.c_ushort))\n  search = pdfium_c.fpdftext_findstart(textpage, text_ptr, 0, 0)\n  ```\n\n* leaving strings, let's suppose you have a c memory buffer allocated by pdfium and wish to read its data.\n  pdfium will provide you with a pointer to the first item of the byte array.\n  to access the data, you'll want to re-interpret the pointer using `ctypes.cast()` to encompass the whole array:\n  ```python\n  # (assuming `bitmap` is an fpdf_bitmap and `size` is the expected number of bytes in the buffer)\n  buffer_ptr = pdfium_c.fpdfbitmap_getbuffer(bitmap)\n  buffer_ptr = ctypes.cast(buffer_ptr, ctypes.pointer(ctypes.c_ubyte * size))\n  # buffer as ctypes array (referencing the original buffer, will be unavailable as soon as the bitmap is destroyed)\n  c_array = buffer_ptr.contents\n  # buffer as python bytes (independent copy)\n  data = bytes(c_array)\n  ```\n\n* writing data from python into a c buffer works in a similar fashion:\n  ```python\n  # (assuming `buffer_ptr` is a pointer to the first item of a c buffer to write into,\n  #  `size` the number of bytes it can store, and `py_buffer` a python byte buffer)\n  buffer_ptr = ctypes.cast(buffer_ptr, ctypes.pointer(ctypes.c_char * size))\n  # read from the python buffer, starting at its current position, directly into the c buffer\n  # (until the target is full or the end of the source is reached)\n  n_bytes = py_buffer.readinto(buffer_ptr.contents)  # returns the number of bytes read\n  ```\n\n* if you wish to check whether two objects returned by pdfium are the same, the `is` operator won't help because `ctypes` does not have original object return (oor), i. e. new, equivalent python objects are created each time, although they might represent one and the same c object.[^ctypes_no_oor]\n  that's why you'll want to use `ctypes.addressof()` to get the memory addresses of the underlying c object.\n  for instance, this is used to avoid infinite loops on circular bookmark references when iterating through the document outline:\n  ```python\n  # (assuming `pdf` is an fpdf_document)\n  seen = set()\n  bookmark = pdfium_c.fpdfbookmark_getfirstchild(pdf, none)\n  while bookmark:\n      # bookmark is a pointer, so we need to use its `contents` attribute to get the object the pointer refers to\n      # (otherwise we'd only get the memory address of the pointer itself, which would result in random behaviour)\n      address = ctypes.addressof(bookmark.contents)\n      if address in seen:\n          break  # circular reference detected\n      else:\n          seen.add(address)\n      bookmark = pdfium_c.fpdfbookmark_getnextsibling(pdf, bookmark)\n  ```\n  \n  [^ctypes_no_oor]: confer the [ctypes documentation on pointers](https://docs.python.org/3/library/ctypes.html#pointers).\n\n* in many situations, callback functions come in handy.[^callback_usecases] thanks to `ctypes`, it is seamlessly possible to use callbacks across python/c language boundaries.\n  \n  [^callback_usecases]: e. g. incremental read/write, management of progressive tasks, ...\n  \n  example: loading a document from a python buffer. this way, file access can be controlled in python while the whole data does not need to be in memory at once.\n  ```python\n  import os\n  \n  # factory class to create callable objects holding a reference to a python buffer\n  class _reader_class:\n    \n    def __init__(self, py_buffer):\n        self.py_buffer = py_buffer\n    \n    def __call__(self, _, position, p_buf, size):\n        # write data from python buffer into c buffer, as explained before\n        buffer_ptr = ctypes.cast(p_buf, ctypes.pointer(ctypes.c_char * size))\n        self.py_buffer.seek(position)\n        self.py_buffer.readinto(buffer_ptr.contents)\n        return 1  # non-zero return code for success\n  \n  # (assuming py_buffer is a python file buffer, e. g. io.bufferedreader)\n  # get the length of the buffer\n  py_buffer.seek(0, os.seek_end)\n  file_len = py_buffer.tell()\n  py_buffer.seek(0)\n  \n  # set up an interface structure for custom file access\n  fileaccess = pdfium_c.fpdf_fileaccess()\n  fileaccess.m_filelen = file_len\n  \n  # assign the callback, wrapped in its cfunctype\n  fileaccess.m_getblock = type(fileaccess.m_getblock)( _reader_class(py_buffer) )\n  \n  # finally, load the document\n  pdf = pdfium_c.fpdf_loadcustomdocument(fileaccess, none)\n  ```\n\n<!-- todo mention pdfium_i.get_bufreader() as a shortcut to set up an fpdf_fileaccess interface -->\n\n* when using the raw api, special care needs to be taken regarding object lifetime, considering that python may garbage collect objects as soon as their reference count reaches zero. however, the interpreter has no way of magically knowing how long the underlying resources of a python object might still be needed on the c side, so measures need to be taken to keep such objects referenced until pdfium does not depend on them anymore.\n  \n  if resources need to remain valid after the time of a function call, pdfium docs usually indicate this clearly. ignoring requirements on object lifetime will lead to memory corruption (commonly resulting in a segfault).\n  \n  for instance, the docs on `fpdf_loadcustomdocument()` state that\n  > the application must keep the file resources |pfileaccess| points to valid until the returned fpdf_document is closed. |pfileaccess| itself does not need to outlive the fpdf_document.\n  \n  this means that the callback function and the python buffer need to be kept alive as long as the `fpdf_document` is used.\n  this can be achieved by referencing these objects in an accompanying class, e. g.\n  \n  ```python\n  class pdfdataholder:\n      \n      def __init__(self, buffer, function):\n          self.buffer = buffer\n          self.function = function\n      \n      def close(self):\n          # make sure both objects remain available until this function is called\n          # no-op id() call to denote that the object needs to stay in memory up to this point\n          id(self.function)\n          self.buffer.close()\n  \n  # ... set up an fpdf_fileaccess structure\n  \n  # (assuming `py_buffer` is the buffer and `fileaccess` the fpdf_fileaccess interface)\n  data_holder = pdfdataholder(py_buffer, fileaccess.m_getblock)\n  pdf = pdfium_c.fpdf_loadcustomdocument(fileaccess, none)\n  \n  # ... work with the pdf\n  \n  # close the pdf to free resources\n  pdfium_c.fpdf_closedocument(pdf)\n  # close the data holder, to keep the object itself and thereby the objects it\n  # references alive up to this point, as well as to release the buffer\n  data_holder.close()\n  ```\n\n* finally, let's finish with an example how to render the first page of a document to a `pil` image in `rgba` color format.\n  ```python\n  import math\n  import ctypes\n  import os.path\n  import pil.image\n  import pypdfium2.raw as pdfium_c\n  \n  # load the document\n  filepath = os.path.abspath(\"tests/resources/render.pdf\")\n  pdf = pdfium_c.fpdf_loaddocument((filepath+\"\\x00\").encode(\"utf-8\"), none)\n  \n  # check page count to make sure it was loaded correctly\n  page_count = pdfium_c.fpdf_getpagecount(pdf)\n  assert page_count >= 1\n  \n  # load the first page and get its dimensions\n  page = pdfium_c.fpdf_loadpage(pdf, 0)\n  width  = math.ceil(pdfium_c.fpdf_getpagewidthf(page))\n  height = math.ceil(pdfium_c.fpdf_getpageheightf(page))\n  \n  # create a bitmap\n  use_alpha = false  # we don't render with transparent background\n  bitmap = pdfium_c.fpdfbitmap_create(width, height, int(use_alpha))\n  # fill the whole bitmap with a white background\n  # the color is given as a 32-bit integer in argb format (8 bits per channel)\n  pdfium_c.fpdfbitmap_fillrect(bitmap, 0, 0, width, height, 0xffffffff)\n  \n  # store common rendering arguments\n  render_args = (\n      bitmap,  # the bitmap\n      page,    # the page\n      # positions and sizes are to be given in pixels and may exceed the bitmap\n      0,       # left start position\n      0,       # top start position\n      width,   # horizontal size\n      height,  # vertical size\n      0,       # rotation (as constant, not in degrees!)\n      pdfium_c.fpdf_lcd_text | pdfium_c.fpdf_annot,  # rendering flags, combined with binary or\n  )\n  \n  # render the page\n  pdfium_c.fpdf_renderpagebitmap(*render_args)\n  \n  # get a pointer to the first item of the buffer\n  buffer_ptr = pdfium_c.fpdfbitmap_getbuffer(bitmap)\n  # re-interpret the pointer to encompass the whole buffer\n  buffer_ptr = ctypes.cast(buffer_ptr, ctypes.pointer(ctypes.c_ubyte * (width * height * 4)))\n  \n  # create a pil image from the buffer contents\n  img = pil.image.frombuffer(\"rgba\", (width, height), buffer_ptr.contents, \"raw\", \"bgra\", 0, 1)\n  # save it as file\n  img.save(\"out.png\")\n  \n  # free resources\n  pdfium_c.fpdfbitmap_destroy(bitmap)\n  pdfium_c.fpdf_closepage(page)\n  pdfium_c.fpdf_closedocument(pdf)\n  ```\n\n### [command-line interface](https://pypdfium2.readthedocs.io/en/stable/shell_api.html)\n\npypdfium2 also ships with a simple command-line interface, providing access to key features of the support model in a shell environment (e. g. rendering, content extraction, document inspection, page rearranging, ...).\n\nthe primary motivation behind this is to have a nice testing interface, but it may be helpful in a variety of other situations as well.\nusage should be largely self-explanatory, assuming a minimum of familiarity with the command-line.\n\n\n## licensing\n\npdfium and pypdfium2 are available by the terms and conditions of either [`apache-2.0`](licenses/apache-2.0.txt) or [`bsd-3-clause`](licenses/bsd-3-clause.txt), at your choice.\nvarious other open-source licenses apply to dependencies bundled with pdfium. verbatim copies of their respective licenses are contained in the file [`licenseref-pdfiumthirdparty.txt`](licenses/licenseref-pdfiumthirdparty.txt), which also has to be shipped with binary redistributions.\ndocumentation and examples of pypdfium2 are licensed under [`cc-by-4.0`](licenses/cc-by-4.0.txt).\n\npypdfium2 complies with the [reuse standard](https://reuse.software/spec/) by including [spdx](https://spdx.org/licenses/) headers in source files, and license information for data files in [`.reuse/dep5`](.reuse/dep5).\n\nto the author's knowledge, pypdfium2 is one of the rare python libraries that are capable of pdf rendering while not being covered by copyleft licenses (such as the `gpl`).[^liberal_pdf_renderlibs]\n\nas of early 2023, a single developer is author and rightsholder of the code base (apart from a few minor [code contributions](https://github.com/pypdfium2-team/pypdfium2/graphs/contributors)).\n\n[^liberal_pdf_renderlibs]: the only other liberal-licensed pdf rendering libraries known to the author are [`pdf.js`](https://github.com/mozilla/pdf.js/) (javascript) and [`apache pdfbox`](https://github.com/apache/pdfbox) (java), but python bindings packages don't exist yet or are unsatisfactory. however, we wrote some gists that show it'd be possible in principle: [pdfbox](https://gist.github.com/mara004/51c3216a9eabd3dcbc78a86d877a61dc) (+ [setup](https://gist.github.com/mara004/881d0c5a99b8444fd5d1d21a333b70f8)), [pdfjs](https://gist.github.com/mara004/87276da4f8be31c80c38036c6ab667d7).\n\n\n## issues\n\nwhile using pypdfium2, you might encounter bugs or missing features.\nin this case, feel free to file an issue. if applicable, include details such as tracebacks, os and cpu type, as well as the versions of pypdfium2 and used dependencies.\n\nroadmap:\n* pypdfium2\n  - [issues panel](https://github.com/pypdfium2-team/pypdfium2/issues): initial bug reports and feature requests. may need to be transferred to dependencies.\n  - [discussions page](https://github.com/pypdfium2-team/pypdfium2/discussions): general questions and suggestions.\n* pdfium\n  - [bug tracker](https://bugs.chromium.org/p/pdfium/issues/list): issues in pdfium.\n    beware: the bridge between python and c increases the probability of integration issues or api misuse. the symptoms can often make it look like a pdfium bug while it is not.\n  - [mailing list](https://groups.google.com/g/pdfium/): questions regarding pdfium usage.\n* [pdfium-binaries](https://github.com/bblanchon/pdfium-binaries/issues): binary builder.\n* [ctypesgen](https://github.com/ctypesgen/ctypesgen/issues): bindings generator.\n\n### known limitations\n\n#### incompatibility with cpython 3.7.6 and 3.8.1\n\npypdfium2 built with mainstream ctypesgen cannot be used with releases 3.7.6 and 3.8.1 of the cpython interpreter due to a [regression](https://github.com/python/cpython/pull/16799#issuecomment-612353119) that [broke](https://github.com/ctypesgen/ctypesgen/issues/77) ctypesgen-created string handling code.\n\nsince version 4, pypdfium2 is built with a patched fork of ctypesgen that removes ctypesgen's problematic string code.\n\n#### risk of unknown object lifetime violations\n\nas outlined in the raw api section, it is essential that python-managed resources remain available as long as they are needed by pdfium.\n\nthe problem is that the python interpreter may garbage collect objects with reference count zero at any time, so an unreferenced but still required object may either by chance stay around long enough or disappear too soon, resulting in non-deterministic memory issues that are hard to debug.\nif the timeframe between reaching reference count zero and removal is sufficiently large and roughly consistent across different runs, it is even possible that mistakes regarding object lifetime remain unnoticed for a long time.\n\nalthough we intend to develop helpers carefully, it cannot be fully excluded that unknown object lifetime violations are still lurking around somewhere, especially if unexpected requirements were not documented by the time the code was written.\n\n#### missing raw pdf access\n\nas of this writing, pdfium's public interface does not provide access to the raw pdf data structure (see [issue 1694](https://crbug.com/pdfium/1694)). it does not expose apis to read/write pdf dictionaries, streams, name/number trees, etc. instead, it merely offers a predefined set of abstracted functions. this considerably limits the library's potential, compared to other products such as `pikepdf`.\n\n#### limitations of abi bindings\n\npdfium's non-public backend would provide extended capabilities, including [raw access](#missing-raw-pdf-access), but it is not exported into the abi and written in c++ (not pure c), so we cannot use it with `ctypes`. this means it's out of scope for this project.\n\nalso, while abi bindings tend to be more convenient, they have some technical drawbacks compared to api bindings (see e.g. [1](https://cffi.readthedocs.io/en/latest/overview.html#abi-versus-api), [2](https://github.com/ocrmypdf/ocrmypdf/issues/541#issuecomment-1834684532))\n\n\n## development\n<!-- todo wheel tags, maintainer access, github peculiarities -->\n\nthis section contains some key information relevant for project maintainers.\n\n### long lines\n\nthe pypdfium2 codebase does not hard wrap long lines.\nit is recommended to set up automatic word wrap in your text editor, e.g. vs code:\n```\neditor.wordwrap = bounded\neditor.wordwrapcolumn = 100\n```\n\n### docs\n\npypdfium2 provides api documentation using [sphinx](https://github.com/sphinx-doc/sphinx/), which can be rendered to various formats, including html:\n```bash\nsphinx-build -b html ./docs/source ./docs/build/html/\n./run build  # short alias\n```\n\nbuilt docs are primarily hosted on [`readthedocs.org`](https://readthedocs.org/projects/pypdfium2/).\nit may be configured using a [`.readthedocs.yaml`](.readthedocs.yaml) file (see [instructions](https://docs.readthedocs.io/en/stable/config-file/v2.html)), and the administration page on the web interface.\nrtd supports hosting multiple versions, so we currently have one linked to the `main` branch and another to `stable`.\nnew builds are automatically triggered by a webhook whenever you push to a linked branch.\n\nadditionally, one doc build can also be hosted on [github pages](https://pypdfium2-team.github.io/pypdfium2/index.html).\nit is implemented with a ci workflow, which is supposed to be triggered automatically on release.\nthis provides us with full control over the build env and the used commands, whereas rtd may be less liberal in this regard.\n\n\n### testing\n\npypdfium2 contains a small test suite to verify the library's functionality. it is written with [pytest](https://github.com/pytest-dev/pytest/):\n```bash\n./run test\n```\n\nnote that ...\n* you can pass `-sv` to get more detailed output.\n* `$debug_autoclose=1` may be set to get debugging information on automatic object finalization.\n\nto get code coverage statistics, you may call\n```bash\n./run coverage\n```\n\nsometimes, it can also be helpful to test code on many pdfs.[^testing_corpora]\nin this case, the command-line interface and `find` come in handy:\n```bash\n# example a: analyse pdf images (in the current working directory)\nfind . -name '*.pdf' -exec bash -c \"echo \\\"{}\\\" && pypdfium2 pageobjects \\\"{}\\\" --filter image\" \\;\n# example b: parse pdf table of contents\nfind . -name '*.pdf' -exec bash -c \"echo \\\"{}\\\" && pypdfium2 toc \\\"{}\\\"\" \\;\n```\n\n[^testing_corpora]: for instance, one could use the testing corpora of open-source pdf libraries (pdfium, pikepdf/ocrmypdf, mupdf/ghostscript, tika/pdfbox, pdfjs, ...)\n\n### release workflow\n\nthe release process is fully automated using python scripts and scheduled release workflows.\nyou may also trigger the workflow manually using the github actions panel or the [`gh`](https://cli.github.com/) command-line tool.\n\npython release scripts are located in the folder `setupsrc/pypdfium2_setup`, along with custom setup code:\n* `update_pdfium.py` downloads binaries.\n* `craft_packages.py pypi` builds platform-specific wheel packages and a source distribution suitable for pypi upload.\n* `autorelease.py` takes care of versioning, changelog, release note generation and vcs checkin.\n\nthe autorelease script has some peculiarities maintainers should know about:\n* the changelog for the next release shall be written into `docs/devel/changelog_staging.md`.\n  on release, it will be moved into the main changelog under `docs/source/changelog.md`, annotated with the pdfium version update.\n  it will also be shown on the github release page.\n* pypdfium2 versioning uses the pattern `major.minor.patch`, optionally with an appended beta mark (e. g. `2.7.1`, `2.11.0`, `3.0.0b1`, ...).\n  version changes are based on the following logic:\n  * if pdfium was updated, the minor version is incremented.\n  * if only pypdfium2 code was updated, the patch version is incremented instead.\n  * major updates and beta marks are controlled via `autorelease/config.json`.\n    if `major` is true, the major version is incremented.\n    if `beta` is true, a new beta tag is set, or an existing one is incremented.\n    the control file is automatically reset when the versioning is finished.\n  * if switching from a beta release to a non-beta release, only the beta mark is removed while minor and patch versions remain unchanged.\n\nin case of necessity, you may also forego autorelease/ci and do the release manually, which will roughly work like this (though ideally it should never be needed):\n* commit changes to the version file\n  ```bash\n  git add src/pypdfium2/version.py\n  git commit -m \"increment version\"\n  git push\n  ```\n* create a new tag that matches the version file\n  ```bash\n  # substitute $version accordingly\n  git tag -a $version\n  git push --tags\n  ```\n* build the packages\n  ```bash\n  python setupsrc/pypdfium2_setup/update_pdfium.py\n  python setupsrc/pypdfium2_setup/craft_packages.py pypi\n  ```\n* upload to pypi\n  ```bash\n  # make sure the packages are valid\n  twine check dist/*\n  # upload to pypi (this will interactively ask for your username/password)\n  twine upload dist/*\n  ```\n* update the `stable` branch to trigger a documentation rebuild\n  ```bash\n  git checkout stable\n  git rebase origin/main  # alternatively: git reset --hard main\n  git checkout main\n  ```\n\nif something went wrong with commit or tag, you can still revert the changes:\n```bash\n# perform an interactive rebase to change history (substitute $n_commits with the number of commits to drop or modify)\ngit rebase -i head~$n_commits\ngit push --force\n# delete local tag (substitute $tagname accordingly)\ngit tag -d $tagname\n# delete remote tag\ngit push --delete origin $tagname\n```\nfaulty pypi releases may be yanked using the web interface.\n\n\n## thanks to[^thanks_to]\n\n<!-- order: alphabetical by surname -->\n\n* [beno\u00eet blanchon](https://github.com/bblanchon): author of [pdfium binaries](https://github.com/bblanchon/pdfium-binaries/) and [patches](sourcebuild/patches/).\n* [anderson bravalheri](https://github.com/abravalheri): help with pep 517/518 compliance. hint to use an environment variable rather than separate setup files.\n* [bastian germann](https://github.com/bgermann): help with inclusion of licenses for third-party components of pdfium.\n* [tim head](https://github.com/betatim): original idea for python bindings to pdfium with ctypesgen in `wowpng`.\n* [yinlin hu](https://github.com/yinlinhu): `pypdfium` prototype and `kuafu` pdf viewer.\n* [adam huganir](https://github.com/adam-huganir): help with maintenance and development decisions since the beginning of the project.\n* [kobaltcore](https://github.com/kobaltcore): bug fix for `pdfdocument.save()`.\n* [mike kroutikov](https://github.com/mkroutikov): examples on how to use pdfium with ctypes in `redstork` and `pdfbrain`.\n* [peter saalbrink](https://github.com/petersaalbrink): code style improvements to the multipage renderer.\n\n... and further [code contributors](https://github.com/pypdfium2-team/pypdfium2/graphs/contributors) (github stats).\n\n*if you have somehow contributed to this project but we forgot to mention you here, please let us know.*\n\n[^thanks_to]: people listed in this section may not necessarily have contributed any copyrightable code to the repository. some have rather helped with ideas, or contributions to dependencies of pypdfium2.\n\n\n## history\n\n### pdfium\n\nthe pdfium code base was originally developed as part of the commercial foxit sdk, before being acquired and open-sourced by google, who maintain pdfium independently ever since, while foxit continue to develop their sdk closed-source.\n\n### pypdfium2\n\npypdfium2 is the successor of *pypdfium* and *pypdfium-reboot*.\n\ninspired by *wowpng*, the first known proof of concept python binding to pdfium using ctypesgen, the initial *pypdfium* package was created. it had to be updated manually, which did not happen frequently. there were no platform-specific wheels, but only a single wheel that contained binaries for 64-bit linux, windows and macos.\n\n*pypdfium-reboot* then added a script to automate binary deployment and bindings generation to simplify regular updates. however, it was still not platform specific.\n\npypdfium2 is a full rewrite of *pypdfium-reboot* to build platform-specific wheels and consolidate the setup scripts. further additions include ...\n* a ci workflow to automatically release new wheels every tuesday\n* support models that conveniently wrap the raw pdfium/ctypes api\n* test code\n* a script to build pdfium from source\n",
  "docs_url": null,
  "keywords": "pdf,pdfium",
  "license": "(apache-2.0 or bsd-3-clause) and licenseref-pdfiumthirdparty",
  "name": "pypdfium2",
  "package_url": "https://pypi.org/project/pypdfium2/",
  "project_url": "https://pypi.org/project/pypdfium2/",
  "project_urls": {
    "Changelog": "https://pypdfium2.readthedocs.io/en/stable/changelog.html",
    "Documentation": "https://pypdfium2.readthedocs.io",
    "Homepage": "https://github.com/pypdfium2-team/pypdfium2",
    "Source": "https://github.com/pypdfium2-team/pypdfium2",
    "Tracker": "https://github.com/pypdfium2-team/pypdfium2/issues"
  },
  "release_url": "https://pypi.org/project/pypdfium2/4.25.0/",
  "requires_dist": [],
  "requires_python": ">= 3.6",
  "summary": "python bindings to pdfium",
  "version": "4.25.0",
  "releases": [],
  "developers": [
    "geisserml@gmail.com",
    "pypdfium2"
  ],
  "kwds": "pdfium pypdfium2 pypdfium2_helpers pypdfium pdfium_docs",
  "license_kwds": "(apache-2.0 or bsd-3-clause) and licenseref-pdfiumthirdparty",
  "libtype": "pypi",
  "id": "pypi_pypdfium2",
  "homepage": "https://github.com/pypdfium2-team/pypdfium2",
  "release_count": 104,
  "dependency_ids": [],
  "documentation_summary": "pypdfium2 is a Python package providing ABI-level bindings to PDFium, a comprehensive library for PDF rendering, inspection, manipulation, and creation. It supports Python 3.6 and above, offering pre-built packages for a wide range of platforms for easy installation. The package allows for both high-level operations via helper functions and direct access to the PDFium/ctypes API for more detailed control. Installation options include PyPI, source, and Conda, with various methods for integrating PDFium binaries. pypdfium2 is licensed under Apache-2.0 or BSD-3-Clause, making it a liberally licensed option for PDF handling in Python.",
  "embedding": [
    0.0017867648275569081,
    0.015809623524546623,
    0.005161962937563658,
    -0.01627921499311924,
    0.0007581966347061098,
    0.04838228225708008,
    -0.015297340229153633,
    -0.01468544639647007,
    0.0008395749027840793,
    -0.008609200827777386,
    0.019552133977413177,
    0.011398296803236008,
    -0.020818611606955528,
    0.04519474506378174,
    0.0018516896525397897,
    -0.013376278802752495,
    0.01787298545241356,
    0.0019121675286442041,
    -0.0032497954089194536,
    0.017417622730135918,
    0.02515878714621067,
    0.019637515768408775,
    -0.014571605250239372,
    -0.008851111866533756,
    -0.025585690513253212,
    0.04106802120804787,
    0.010416421107947826,
    -0.02202816866338253,
    -0.010686792433261871,
    0.0010503580560907722,
    0.034892164170742035,
    -0.003368972335010767,
    -0.019281763583421707,
    -0.012472668662667274,
    -0.023251956328749657,
    -0.0016311233630403876,
    0.009185519069433212,
    -0.012237871997058392,
    0.013561269268393517,
    -0.004809768404811621,
    0.025016486644744873,
    0.003909715451300144,
    0.010395076125860214,
    -0.01328378263860941,
    -0.031249264255166054,
    -0.02707984857261181,
    0.02407730184495449,
    0.008331714197993279,
    -0.020391710102558136,
    0.01006778422743082,
    0.0036927065812051296,
    0.008765731006860733,
    -0.000357308512320742,
    -0.030025476589798927,
    0.004560741595923901,
    -0.007168404757976532,
    -0.007890581153333187,
    0.015809623524546623,
    -0.027407141402363777,
    0.003998653497546911,
    0.012415748089551926,
    0.005976635031402111,
    -0.023550787940621376,
    -0.0158238522708416,
    -0.013006296008825302,
    -0.00842420943081379,
    -0.016179604455828667,
    0.035888269543647766,
    -0.0033671935088932514,
    -0.02575645036995411,
    0.02413422241806984,
    0.03449372202157974,
    -0.017944134771823883,
    -0.01962328515946865,
    0.045934710651636124,
    0.008957837708294392,
    -0.05609498918056488,
    0.003511273069307208,
    -0.04035651683807373,
    -0.018484879285097122,
    0.0021896541584283113,
    -0.03509138524532318,
    0.011625978164374828,
    0.02302427589893341,
    0.005756068974733353,
    0.001019229763187468,
    0.003842122619971633,
    0.017503002658486366,
    -0.02310965582728386,
    -0.01110658049583435,
    0.031704626977443695,
    0.004201432224363089,
    0.0027979901060462,
    0.05302129313349724,
    -0.0030559103470295668,
    0.045365504920482635,
    -0.019424064084887505,
    0.016023073345422745,
    -0.005432334262877703,
    -0.025984132662415504,
    -0.0006972741102799773,
    0.022198930382728577,
    -0.016435746103525162,
    -0.007115041837096214,
    -0.05825796350836754,
    -0.025386469438672066,
    -0.012280561961233616,
    -0.0023212824016809464,
    0.030025476589798927,
    0.02202816866338253,
    0.004685255233198404,
    0.028204025700688362,
    0.005983750335872173,
    -0.054899662733078,
    0.02079015225172043,
    0.01050180196762085,
    0.002422671765089035,
    0.001077928813174367,
    0.005866352003067732,
    0.00734983803704381,
    -0.005343396216630936,
    0.03731127828359604,
    0.008089802227914333,
    -0.016891108825802803,
    0.016136914491653442,
    0.02245507203042507,
    0.011369836516678333,
    -0.03247305005788803,
    -0.013603960163891315,
    -0.01275726966559887,
    0.02521570771932602,
    0.0056706881150603294,
    0.02847439795732498,
    -0.020576700568199158,
    -0.015638861805200577,
    -0.012223641388118267,
    -0.014045092277228832,
    0.003923945594578981,
    -0.024874186143279076,
    -0.020391710102558136,
    0.035489827394485474,
    0.03355453535914421,
    -0.027094079181551933,
    -0.0018534683622419834,
    0.010181624442338943,
    0.03605903312563896,
    0.01757415384054184,
    -0.03927503153681755,
    -0.010089129209518433,
    -0.01616537570953369,
    0.011896349489688873,
    -0.00842420943081379,
    -0.011184846051037312,
    0.0018427958711981773,
    -0.017559923231601715,
    -0.010416421107947826,
    -0.004944954067468643,
    0.00427969777956605,
    -0.0063644046895205975,
    -0.01275726966559887,
    -0.006958510726690292,
    0.012244987301528454,
    -0.020092878490686417,
    -0.023906540125608444,
    0.008296138606965542,
    0.032814573496580124,
    0.0158238522708416,
    -0.019125232473015785,
    -0.02175779826939106,
    -0.01649266667664051,
    0.01543964073061943,
    0.007260899990797043,
    -0.030224697664380074,
    0.0020473531913012266,
    0.008602085523307323,
    -0.01868410035967827,
    0.0031822023447602987,
    0.01351146399974823,
    0.005122830159962177,
    0.01736070215702057,
    0.00574895367026329,
    -0.007520599290728569,
    -0.00038865915848873556,
    0.03233075141906738,
    -0.038022782653570175,
    -0.024304982274770737,
    -0.014479110017418861,
    -0.012429977767169476,
    0.01373914536088705,
    0.01895447075366974,
    0.01169001404196024,
    0.02286774478852749,
    0.007940386421978474,
    -0.03679899498820305,
    -0.6010787487030029,
    -0.024817265570163727,
    -0.013177057728171349,
    -0.03523368760943413,
    -0.016905339434742928,
    0.015411180444061756,
    0.004098264034837484,
    0.013013411313295364,
    0.0021896541584283113,
    0.02931397221982479,
    0.007819430902600288,
    0.0183568075299263,
    -0.009790297597646713,
    -0.005877024494111538,
    -0.019480984658002853,
    -0.009889908134937286,
    -0.004966299049556255,
    -0.037482041865587234,
    -0.02251199260354042,
    0.003383202478289604,
    -0.008075572550296783,
    0.04547934606671333,
    -0.006940723396837711,
    0.011768278665840626,
    0.022184699773788452,
    0.013746260665357113,
    0.006837555207312107,
    -0.0023888752330094576,
    0.006496033165603876,
    0.013981057330965996,
    -0.044881682842969894,
    0.03415220230817795,
    0.0019779815338552,
    -0.016051534563302994,
    0.04004345461726189,
    -0.005172635428607464,
    -0.023821160197257996,
    0.027634821832180023,
    -0.002223450457677245,
    0.021231284365057945,
    -0.009939713403582573,
    -0.000988101470284164,
    0.0013394065899774432,
    0.01259362418204546,
    0.0024831495247781277,
    -0.001377649954520166,
    0.03309917449951172,
    0.020391710102558136,
    0.008730156347155571,
    -0.003153742291033268,
    -0.005236670840531588,
    -0.005581750068813562,
    0.014898897148668766,
    -0.01989365741610527,
    0.03825046494603157,
    0.012415748089551926,
    0.025286858901381493,
    -0.027620593085885048,
    -0.0004424666694831103,
    -0.005105042364448309,
    0.008602085523307323,
    0.011711359024047852,
    0.01008201390504837,
    -0.014770826324820518,
    0.003269361797720194,
    -0.0019299550913274288,
    0.01156905759125948,
    0.004592759534716606,
    0.00010061113425763324,
    -0.013226862996816635,
    0.011576172895729542,
    0.000619898026343435,
    -0.004767077974975109,
    -0.018186047673225403,
    0.026667175814509392,
    0.030025476589798927,
    0.021088983863592148,
    -0.020804382860660553,
    -0.0019637516234070063,
    0.022070860490202904,
    -0.0027090520597994328,
    0.009470121003687382,
    -0.016051534563302994,
    -0.004336617887020111,
    0.044824764132499695,
    0.00641065277159214,
    -0.021530115976929665,
    -0.0004473582375794649,
    -0.005571077577769756,
    0.008160952478647232,
    0.011312916874885559,
    -0.00932781957089901,
    -0.005528387613594532,
    -0.046361614018678665,
    -0.007075909059494734,
    0.022654293105006218,
    -0.020206717774271965,
    -0.010395076125860214,
    -0.010309695266187191,
    0.0026574681978672743,
    0.003191096242517233,
    -0.01169001404196024,
    -0.01492735743522644,
    -0.009000527672469616,
    0.021686647087335587,
    0.01892601139843464,
    -0.03551828861236572,
    -0.003336954629048705,
    0.036457475274801254,
    -0.012202296406030655,
    -0.0007839886820875108,
    -0.039132729172706604,
    -0.012195182032883167,
    -0.013411853462457657,
    0.03554674983024597,
    -0.03813662379980087,
    0.015695782378315926,
    -0.02639680542051792,
    -0.01058006752282381,
    0.0021487425547093153,
    -0.016649197787046432,
    0.0012068889336660504,
    -0.01709032990038395,
    0.0021149462554603815,
    0.019523674622178078,
    0.035945191979408264,
    0.02251199260354042,
    -0.037026677280664444,
    -0.03398143872618675,
    0.0039452905766665936,
    -0.0060050953179597855,
    0.02121705375611782,
    0.021074753254652023,
    -0.002822892740368843,
    0.02254045195877552,
    0.0028139990754425526,
    0.029570113867521286,
    -0.00955550093203783,
    0.00012651433644350618,
    -0.0011597517877817154,
    -0.008047112263739109,
    0.030623139813542366,
    0.013305128552019596,
    -0.019509444013237953,
    0.025258397683501244,
    -0.02064785175025463,
    -0.0069727408699691296,
    0.01992211677134037,
    0.007285802625119686,
    -0.0008177850977517664,
    -0.016834188252687454,
    -0.017830295488238335,
    -0.015525021590292454,
    0.020391710102558136,
    -0.0034863704349845648,
    -0.026553336530923843,
    0.00840997975319624,
    0.005997980013489723,
    0.02594144269824028,
    -0.02720792032778263,
    0.0002812664897646755,
    0.002408441621810198,
    -0.020548241212964058,
    0.0006479134899564087,
    -0.02037747949361801,
    -0.008815537206828594,
    -0.021601267158985138,
    0.01721840165555477,
    0.006645448971539736,
    -0.0446540005505085,
    -0.005229555536061525,
    0.0035592997446656227,
    -0.0005216214922256768,
    0.011839429847896099,
    0.020448630675673485,
    0.030253157019615173,
    0.011533482931554317,
    0.0019246188458055258,
    -0.022255850955843925,
    0.0015617517055943608,
    -0.00040822551818564534,
    0.00904321763664484,
    -0.002287485869601369,
    -0.016834188252687454,
    0.030736980959773064,
    0.013056101277470589,
    0.004414883442223072,
    -0.007755395490676165,
    -0.01020297035574913,
    -0.005535502452403307,
    -0.02510186657309532,
    0.00038354520802386105,
    -0.01721840165555477,
    0.03355453535914421,
    -0.02121705375611782,
    0.006976298522204161,
    -0.0045322817750275135,
    0.005983750335872173,
    0.014336809515953064,
    0.042747169733047485,
    0.007549059111624956,
    0.014102012850344181,
    0.0016311233630403876,
    -0.004920051433146,
    0.017531462013721466,
    -0.018527569249272346,
    0.0183283481746912,
    -0.034351423382759094,
    0.02302427589893341,
    0.014287004247307777,
    0.03472140431404114,
    -0.0013723137089982629,
    -0.033782217651605606,
    -0.027335990220308304,
    -0.0024618045426905155,
    0.023237725719809532,
    0.004212104715406895,
    0.020121337845921516,
    0.004671025089919567,
    0.01215960644185543,
    0.011241765692830086,
    -0.019452523440122604,
    0.02594144269824028,
    0.0035361757036298513,
    0.0013767605414614081,
    -0.018712559714913368,
    -0.000667479878757149,
    0.010530262254178524,
    0.008858227171003819,
    -0.009840102866292,
    -0.008680351078510284,
    0.01811489649116993,
    -0.015140809118747711,
    -0.026226043701171875,
    -0.0018943798495456576,
    -0.008153838105499744,
    0.04354405403137207,
    -0.03463602438569069,
    0.04254794865846634,
    -0.0022732559591531754,
    0.022554682567715645,
    0.023479638621211052,
    0.02019248902797699,
    -0.014955817721784115,
    0.009768952615559101,
    -0.0014656985877081752,
    0.033213015645742416,
    -0.005535502452403307,
    -0.0137960659340024,
    -0.001166866859421134,
    -0.005386086646467447,
    0.01573847234249115,
    -0.006734387017786503,
    0.004304600413888693,
    0.02335156686604023,
    0.0052580158226192,
    0.02732175961136818,
    0.013219747692346573,
    0.006592086050659418,
    0.02079015225172043,
    0.0010636987863108516,
    0.0015359596582129598,
    0.015083888545632362,
    0.01551079098135233,
    0.03196076676249504,
    -0.019964806735515594,
    0.007328493054956198,
    -0.0549565814435482,
    -0.01784452423453331,
    -0.01884063147008419,
    -0.02283928357064724,
    -0.008054227568209171,
    -0.002097158459946513,
    -0.009911253117024899,
    0.040584199130535126,
    -0.0017271763645112514,
    0.006158068776130676,
    0.019665975123643875,
    0.011988845653831959,
    0.009519926272332668,
    -0.03879120945930481,
    -0.023195035755634308,
    0.04237718880176544,
    -0.009783182293176651,
    0.0014683667104691267,
    0.0068731303326785564,
    -0.00354329077526927,
    -0.006784192286431789,
    -0.005613768007606268,
    0.0026610256172716618,
    0.0069620683789253235,
    -0.019779816269874573,
    0.017318012192845345,
    0.017189940437674522,
    -0.010658332146704197,
    0.018513338640332222,
    0.03190384805202484,
    -0.0008538049878552556,
    -0.011618862859904766,
    0.014087783172726631,
    0.030310077592730522,
    0.0036962642334401608,
    -0.009498580358922482,
    0.01430834922939539,
    0.054757360368967056,
    0.014379499480128288,
    -0.0008422430837526917,
    -0.02648218534886837,
    -0.0137249156832695,
    -0.022042399272322655,
    0.009064563550055027,
    -0.0016044419026002288,
    -0.015098118223249912,
    -0.03295687213540077,
    -0.005197538062930107,
    -0.012451322749257088,
    0.00799019169062376,
    -0.005051679443567991,
    0.034294500946998596,
    -0.010487571358680725,
    -0.01603730395436287,
    -0.023038504645228386,
    -0.005699148401618004,
    0.019993267953395844,
    0.021800488233566284,
    0.01606576517224312,
    0.02022094838321209,
    0.01023142971098423,
    -0.041608765721321106,
    -0.007243112660944462,
    -0.013710685074329376,
    -0.01255093328654766,
    -0.00399509584531188,
    -0.01730378158390522,
    0.007435218431055546,
    -0.0030256714671850204,
    -0.009427430108189583,
    0.020149799063801765,
    0.020235178992152214,
    -0.004340175539255142,
    -0.005727608688175678,
    -0.017346471548080444,
    -0.007762510795146227,
    -0.015340030193328857,
    -0.002689485903829336,
    0.015539251267910004,
    0.017503002658486366,
    -0.003895485308021307,
    0.01983673684298992,
    0.0002510275808162987,
    0.0197086650878191,
    0.019609054550528526,
    -0.0075775193981826305,
    -0.02386385016143322,
    -0.009946828708052635,
    -0.0051477327942848206,
    0.015055428259074688,
    0.04280409216880798,
    -0.0499475933611393,
    0.015140809118747711,
    0.01706187054514885,
    0.006510263308882713,
    -0.016293445602059364,
    0.01932445354759693,
    0.005894812289625406,
    0.024988027289509773,
    -0.0031839811708778143,
    -0.008737271651625633,
    0.006528050638735294,
    -0.025414928793907166,
    -0.03446526080369949,
    0.0029029371216893196,
    -0.0053220512345433235,
    -0.006140280980616808,
    0.0055070421658456326,
    0.00901475828140974,
    -0.030623139813542366,
    -0.036457475274801254,
    0.029143210500478745,
    -0.007549059111624956,
    0.028545547276735306,
    -0.021615497767925262,
    0.007442333735525608,
    -0.0367136150598526,
    -0.0076628997921943665,
    -0.015140809118747711,
    0.006801980081945658,
    -0.04653237387537956,
    -0.012465553358197212,
    0.01045911107212305,
    0.003276476636528969,
    0.01781606487929821,
    -0.001887264777906239,
    -0.0003148406103719026,
    0.00373183935880661,
    -0.011063889600336552,
    -0.011682898737490177,
    -0.007769625633955002,
    0.02140204608440399,
    -0.00303634419105947,
    0.0063501750119030476,
    -0.0008978293626569211,
    0.0010254554217681289,
    -0.01417316310107708,
    0.007563289254903793,
    -0.03679899498820305,
    -0.006300369277596474,
    -0.044824764132499695,
    0.019480984658002853,
    0.0026218928396701813,
    -0.002712609712034464,
    -0.018186047673225403,
    0.01087889913469553,
    0.029797794297337532,
    0.005386086646467447,
    -0.006154511123895645,
    -0.002376423915848136,
    -0.030793901532888412,
    0.019552133977413177,
    0.021202825009822845,
    0.0062790242955088615,
    -0.005738281179219484,
    -0.0024351230822503567,
    -0.009818757884204388,
    0.02524416893720627,
    -0.037425119429826736,
    0.010857554152607918,
    -0.029484733939170837,
    0.016151145100593567,
    0.011483677662909031,
    -6.514709821203724e-05,
    0.02040594071149826,
    -0.019552133977413177,
    0.02723637968301773,
    0.0030025476589798927,
    -0.02928551286458969,
    0.0008151169749908149,
    0.02675255760550499,
    0.033839140087366104,
    0.014151818118989468,
    -0.030680060386657715,
    0.01922484301030636,
    0.016321904957294464,
    -0.023422718048095703,
    0.014144702814519405,
    -0.004863130860030651,
    -0.013981057330965996,
    0.01619383506476879,
    -0.0025614150799810886,
    0.02416268177330494,
    -0.023422718048095703,
    -0.024091530591249466,
    -0.012316137552261353,
    0.014827746897935867,
    0.02326618693768978,
    0.0367705374956131,
    0.00023924327979329973,
    0.00954127125442028,
    0.0048844763077795506,
    0.00014841531810816377,
    -0.012807074934244156,
    -0.012693234719336033,
    -0.0274782907217741,
    0.0023034948389977217,
    0.010074899531900883,
    -0.002024229383096099,
    -0.008224988356232643,
    0.019537905231118202,
    -0.021914329379796982,
    -0.030224697664380074,
    -0.022099319845438004,
    0.03975885361433029,
    0.01267188973724842,
    0.020932452753186226,
    0.006058458238840103,
    -0.007919041439890862,
    0.009142829105257988,
    -0.014841977506875992,
    -0.0013838756131008267,
    -0.018001055344939232,
    0.0071292719803750515,
    -0.012273446656763554,
    -0.004244122188538313,
    0.04508090391755104,
    0.02022094838321209,
    0.033839140087366104,
    -0.0029669725336134434,
    -0.018982931971549988,
    -0.00889380183070898,
    0.009818757884204388,
    -0.007268015295267105,
    0.009050332941114902,
    -0.030253157019615173,
    -0.0008978293626569211,
    0.01652112789452076,
    0.012088456191122532,
    0.024959566071629524,
    -0.017019180580973625,
    0.013767605647444725,
    0.0057702986523509026,
    0.0007012762944214046,
    -0.004162299446761608,
    -0.014600065536797047,
    -0.01492735743522644,
    -0.01378183625638485,
    -0.005471467040479183,
    -0.006076245568692684,
    0.003215998876839876,
    -0.04755694046616554,
    -0.020107107236981392,
    0.014813517220318317,
    -0.00023635278921574354,
    -0.007036776281893253,
    0.011896349489688873,
    0.01141964178532362,
    -0.023237725719809532,
    0.03045237809419632,
    0.012529588304460049,
    0.016378825530409813,
    0.010772173292934895,
    0.00427969777956605,
    -0.009811642579734325,
    0.013589729554951191,
    -0.0008916036458685994,
    0.026610257104039192,
    0.02094668336212635,
    0.008972067385911942,
    0.01468544639647007,
    -0.002139848889783025,
    0.033241476863622665,
    0.03042391873896122,
    -0.0170334093272686,
    0.010387960821390152,
    -0.017830295488238335,
    -0.034892164170742035,
    -0.03315609320998192,
    -0.021373584866523743,
    -0.023209266364574432,
    0.0057596261613070965,
    0.004646122455596924,
    0.018100665882229805,
    0.0158238522708416,
    -0.01551079098135233,
    0.0018783709965646267,
    0.006343059707432985,
    -0.012003075331449509,
    0.0419502854347229,
    -0.0029047157149761915,
    -0.003191096242517233,
    0.0496629923582077,
    0.0048026531003415585,
    -0.009036103263497353,
    -0.013490119017660618,
    -0.016720348969101906,
    0.004080476239323616,
    0.02994009666144848,
    0.020747462287545204,
    0.006535165943205357,
    -0.019907886162400246,
    0.012152491137385368,
    0.002623671665787697,
    -0.009292244911193848,
    -0.0341806598007679,
    0.01751723326742649,
    0.02130243554711342,
    0.0006528050871565938,
    -0.009861447848379612,
    -0.007090139202773571,
    -0.019580595195293427,
    0.005460794549435377,
    -0.0391896516084671,
    0.0011268447851762176,
    -0.014486225321888924,
    -0.0031750875059515238,
    -0.0002262360940221697,
    0.00720042223110795,
    0.00014152262883726507,
    0.013895676471292973,
    0.033355314284563065,
    -0.03756742179393768,
    -0.0018641409697011113,
    -0.02194278873503208,
    -0.009840102866292,
    0.011092349886894226,
    -0.0013011632254347205,
    0.03409527987241745,
    -0.0029669725336134434,
    -0.006154511123895645,
    0.02572799101471901,
    -0.006496033165603876,
    -0.025301087647676468,
    0.009384740144014359,
    -0.012259216979146004,
    0.036457475274801254,
    -0.029484733939170837,
    -0.0027819813694804907,
    0.0006768183666281402,
    -0.01932445354759693,
    -0.005453679710626602,
    -0.005617325659841299,
    -0.005624440498650074,
    -0.01598038338124752,
    -0.018527569249272346,
    0.00452160881832242,
    0.005005431827157736,
    -0.010288350284099579,
    -0.01423719897866249,
    -0.011675783433020115,
    -0.019253302365541458,
    -0.006666793953627348,
    -0.030224697664380074,
    0.009968173690140247,
    0.006666793953627348,
    -0.0045393966138362885,
    -0.03472140431404114,
    0.005645785480737686,
    -0.012152491137385368,
    0.012152491137385368,
    0.016264986246824265,
    0.006286139599978924,
    0.0031199457589536905,
    0.042747169733047485,
    -0.03392452001571655,
    0.0249168761074543,
    -0.0015750923193991184,
    0.017673764377832413,
    -0.015240419656038284,
    -0.002929618349298835,
    -0.009064563550055027,
    -0.022682752460241318,
    0.024475743994116783,
    -0.01911100186407566,
    -0.024333443492650986,
    -0.012131146155297756,
    0.010658332146704197,
    0.027549441903829575,
    0.0079119261354208,
    -0.03622979298233986,
    -0.005161962937563658,
    0.026738326996564865,
    0.011440986767411232,
    0.0006950506358407438,
    -0.01787298545241356,
    0.019452523440122604,
    0.014642756432294846,
    0.017645303159952164,
    -9.182850772049278e-05,
    -0.009982403367757797,
    -0.016136914491653442,
    0.011768278665840626,
    0.006421325262635946,
    0.014294118620455265,
    -0.032188449054956436,
    -0.011291570961475372,
    -0.00616162596270442,
    0.0028851493261754513,
    -0.015539251267910004,
    -0.004496706183999777,
    -0.015866542235016823,
    0.0044611310586333275,
    -0.016919570043683052,
    0.03366837650537491,
    0.016321904957294464,
    -0.0005033892230130732,
    -0.0025685301516205072,
    0.017503002658486366,
    -0.01194615475833416,
    0.0012780394172295928,
    -0.03090774081647396,
    -0.027819814160466194,
    -0.0038599101826548576,
    -0.033269934356212616,
    -0.037595879286527634,
    -0.012052880600094795,
    -0.006976298522204161,
    0.02804749459028244,
    0.02551453933119774,
    -0.01060852687805891,
    -0.03950271010398865,
    -0.01378183625638485,
    -0.03241613134741783,
    -0.009064563550055027,
    0.005745396018028259,
    0.005969520192593336,
    0.015126578509807587,
    0.010309695266187191,
    0.017616843804717064,
    0.020263638347387314,
    0.01652112789452076,
    0.02994009666144848,
    -0.01997903734445572,
    -0.009904137812554836,
    0.0183568075299263,
    -0.017232630401849747,
    0.0018748134607449174,
    -0.006951395887881517,
    -0.03460756316781044,
    -0.004148069303482771,
    0.019722895696759224,
    -0.010473341681063175,
    0.009534155949950218,
    0.022924665361642838,
    -0.01814335584640503,
    -0.012429977767169476,
    0.010224315337836742,
    -0.005140617489814758,
    0.0183283481746912,
    0.007705590222030878,
    0.008303253911435604,
    -0.01275726966559887,
    -0.023821160197257996,
    -0.00961242150515318,
    0.015283109620213509,
    0.011469447053968906,
    -0.02861669845879078,
    -0.0008168957429006696,
    -0.011825199238955975,
    0.0009187297546304762,
    0.008459785021841526,
    -0.009057448245584965,
    0.010017978958785534,
    0.015083888545632362,
    0.01940983347594738,
    0.00014963821740821004,
    -0.0057702986523509026,
    0.017417622730135918,
    0.0076628997921943665,
    0.0025009370874613523,
    -0.03517676517367363,
    0.04251949116587639,
    -0.025856060907244682,
    -0.011021199636161327,
    0.036002110689878464,
    0.0014052207116037607,
    0.0056564584374427795,
    -0.009847218170762062,
    0.02283928357064724,
    -0.01997903734445572,
    -0.0008942718268372118,
    -0.0008395749027840793,
    -0.019310222938656807,
    0.0011339597404003143,
    -0.01267188973724842,
    0.010238545015454292,
    -0.010416421107947826,
    -0.021672416478395462,
    -0.017830295488238335,
    0.025358008220791817,
    -0.007068794220685959,
    -0.003689149161800742,
    -0.017531462013721466,
    -0.00887957215309143,
    0.012351712211966515,
    0.001919282483868301,
    -0.00016909341502469033,
    -0.018072206526994705,
    0.009448775090277195,
    0.00582366157323122,
    -0.011341376230120659,
    0.019338684156537056,
    0.17007796466350555,
    0.015553480945527554,
    0.04573548957705498,
    0.02537223882973194,
    0.013063216581940651,
    0.025030717253684998,
    0.011163500137627125,
    -0.001277150004170835,
    0.011369836516678333,
    0.027876732870936394,
    -0.011739819310605526,
    -0.00406980374827981,
    -0.012038650922477245,
    0.0019850966054946184,
    0.005887696985155344,
    -0.020662080496549606,
    -0.020562469959259033,
    -0.026681406423449516,
    -0.04547934606671333,
    0.01862717978656292,
    -0.0020562470890581608,
    -0.03975885361433029,
    0.018072206526994705,
    -0.01884063147008419,
    0.01913946308195591,
    -0.010451996698975563,
    -0.030167777091264725,
    0.0085593955591321,
    0.01913946308195591,
    0.003899042960256338,
    -0.006837555207312107,
    0.011939040385186672,
    -0.0013314022216945887,
    -0.017716454342007637,
    -0.029655493795871735,
    -0.011220420710742474,
    0.011803854256868362,
    -0.01206711120903492,
    0.007193307392299175,
    0.001098384615033865,
    -0.017047639936208725,
    -0.033355314284563065,
    -0.016563817858695984,
    -0.0223839208483696,
    -0.015624632127583027,
    -0.023764239624142647,
    -0.01829988695681095,
    0.0012362385168671608,
    -0.008445554412901402,
    0.01125599630177021,
    -0.011241765692830086,
    -0.007018988486379385,
    0.04126724228262901,
    0.00865189079195261,
    -0.02079015225172043,
    -0.033298395574092865,
    -0.0038456800393760204,
    0.021530115976929665,
    0.01193192508071661,
    -0.003041680436581373,
    -0.019239073619246483,
    0.018484879285097122,
    -0.01402374729514122,
    0.016094224527478218,
    -0.04249102994799614,
    0.0025365124456584454,
    -0.015169269405305386,
    0.003384981071576476,
    -0.024731885641813278,
    -0.015311569906771183,
    -0.019054081290960312,
    -0.0019584151450544596,
    -0.003899042960256338,
    0.018157586455345154,
    -0.032871492207050323,
    -0.029171671718358994,
    0.01859871856868267,
    0.020505551248788834,
    0.021202825009822845,
    0.016948029398918152,
    -0.004784865770488977,
    -0.0004395761643536389,
    -0.020206717774271965,
    -0.00939185544848442,
    -0.0033102731686085463,
    -0.014486225321888924,
    0.009256669320166111,
    0.005215325392782688,
    -0.004226334858685732,
    -0.029484733939170837,
    -0.004212104715406895,
    0.0007003869395703077,
    0.002958078635856509,
    0.008751501329243183,
    0.010017978958785534,
    0.010829093866050243,
    -0.026596026495099068,
    0.0017565259477123618,
    -0.012764384970068932,
    0.021658187732100487,
    -0.03557520732283592,
    0.06727983802556992,
    0.004368635825812817,
    -0.002470698207616806,
    -0.00863766111433506,
    -0.016592277213931084,
    -0.01781606487929821,
    0.02569953165948391,
    0.009256669320166111,
    -0.022184699773788452,
    -0.005980192683637142,
    -0.026738326996564865,
    0.0040128836408257484,
    -0.008794191293418407,
    0.0033351758029311895,
    -0.027193689718842506,
    -0.007776740472763777,
    -0.018826400861144066,
    0.00247959210537374,
    0.00040666910354048014,
    0.001309167710132897,
    -0.0035966536961495876,
    0.00506946723908186,
    0.003137733321636915,
    -0.01857025921344757,
    -0.006481803022325039,
    -0.0026503531262278557,
    0.012885340489447117,
    0.002677034353837371,
    0.0067094843834638596,
    0.011099465191364288,
    -0.014827746897935867,
    0.0235934779047966,
    -0.009093023836612701,
    -0.017986824735999107,
    -0.014094897545874119,
    -0.02308119460940361,
    0.004034228622913361,
    -0.0067877499386668205,
    0.012778614647686481,
    -0.028147105127573013,
    0.006471130531281233,
    0.011967500671744347,
    -0.007168404757976532,
    0.024475743994116783,
    -0.006691696587949991,
    0.01386010181158781,
    -0.01074371300637722,
    0.017773374915122986,
    0.00018910446669906378,
    -0.005667130928486586,
    -0.005706263706088066,
    0.010110474191606045,
    -0.012074225582182407,
    0.025799142196774483,
    -0.006378634832799435,
    -0.014443534426391125,
    -0.0249168761074543,
    0.00998951867222786,
    -0.009306474588811398,
    -0.011156385764479637,
    -0.011853659525513649,
    0.01349723432213068,
    0.002858468098565936,
    -0.0313631035387516,
    0.0036197775043547153,
    -0.18225890398025513,
    0.015553480945527554,
    0.027976343408226967,
    -0.028417477384209633,
    -0.00016787051572464406,
    -0.015937693417072296,
    0.003799432422965765,
    -0.007549059111624956,
    0.006001537665724754,
    -0.01727532222867012,
    0.019338684156537056,
    -0.013845871202647686,
    0.006076245568692684,
    -0.02245507203042507,
    0.039360411465168,
    0.019011391326785088,
    -0.021530115976929665,
    0.010316810570657253,
    0.025955673307180405,
    0.019509444013237953,
    0.022398151457309723,
    -0.01098562404513359,
    0.004375750664621592,
    0.006890918128192425,
    0.021928558126091957,
    -0.013091676868498325,
    -0.020847072824835777,
    -0.01829988695681095,
    -0.01519772969186306,
    -0.001755636534653604,
    0.009889908134937286,
    0.018556028604507446,
    0.03235920891165733,
    0.0038029898423701525,
    0.03631517291069031,
    -0.01619383506476879,
    0.005407431628555059,
    -0.009605306200683117,
    0.011006969958543777,
    0.034835245460271835,
    0.024447282776236534,
    0.024219602346420288,
    0.014785056933760643,
    -0.02567107044160366,
    -0.0030986007768660784,
    0.01892601139843464,
    0.017161481082439423,
    -0.019068311899900436,
    0.011291570961475372,
    -0.03181846812367439,
    0.04297485202550888,
    -0.01862717978656292,
    0.005236670840531588,
    -0.0034187776036560535,
    0.048496123403310776,
    0.013098792172968388,
    -0.01127022597938776,
    -0.004187202081084251,
    -0.012771500274538994,
    0.00544656440615654,
    -0.0009098359732888639,
    -0.022312771528959274,
    0.023693088442087173,
    -0.011291570961475372,
    -0.02483149617910385,
    -0.004155184607952833,
    -0.0018410170450806618,
    0.027421370148658752,
    0.007189749740064144,
    -0.0033298395574092865,
    -0.0013812074903398752,
    0.0011891013709828258,
    0.019025621935725212,
    -0.01551079098135233,
    0.0314200259745121,
    0.006930050905793905,
    -0.00782654620707035,
    -0.013233977369964123,
    0.013952597044408321,
    -0.012792845256626606,
    -0.009292244911193848,
    0.030281618237495422,
    0.005869909655302763,
    -0.004244122188538313,
    0.029171671718358994,
    0.022611603140830994,
    0.008047112263739109,
    -0.012714579701423645,
    0.002901158295571804,
    -0.016108455136418343,
    0.023465408012270927,
    -0.01164732314646244,
    0.02548607997596264,
    0.0019904328510165215,
    0.024760344997048378,
    0.02046285942196846,
    0.00045425095595419407,
    0.0003806547319982201,
    0.013205517083406448,
    -0.026197584345936775,
    0.02350809797644615,
    0.026339884847402573,
    -0.014066437259316444,
    -0.013803181238472462,
    0.036514393985271454,
    0.011668668128550053,
    -0.016094224527478218,
    0.024063071236014366,
    0.01209557056427002,
    -0.0024849283508956432,
    -0.010074899531900883,
    0.022142009809613228,
    0.011440986767411232,
    0.003328060731291771,
    -0.025614149868488312,
    0.03620133176445961,
    -0.004322387743741274,
    -0.0025614150799810886,
    -0.01519772969186306,
    -0.019523674622178078,
    0.04257640987634659,
    0.009939713403582573,
    0.00866612046957016,
    0.020107107236981392,
    -0.02931397221982479,
    -0.024518433958292007,
    -0.09243862330913544,
    -0.023251956328749657,
    0.02591298148036003,
    0.011440986767411232,
    -0.03705513849854469,
    -0.03102158196270466,
    -0.008836882188916206,
    0.024418823421001434,
    0.01995057798922062,
    -0.003112830687314272,
    -0.009484350681304932,
    0.013461658731102943,
    -0.0017849861178547144,
    0.006663236767053604,
    0.0023408487904816866,
    0.013390508480370045,
    -0.017189940437674522,
    0.0031039370223879814,
    -0.012010190635919571,
    -0.013902791775763035,
    -0.02777712233364582,
    0.005268688313663006,
    0.011533482931554317,
    -0.009007642976939678,
    -7.570849265903234e-05,
    0.00746367871761322,
    -0.035347528755664825,
    -0.0017093888018280268,
    0.02275390364229679,
    -0.005499927327036858,
    0.004272582475095987,
    -0.039616551250219345,
    0.0156815517693758,
    0.0054003167897462845,
    -0.0048844763077795506,
    -0.006581413559615612,
    -0.021473195403814316,
    -0.030025476589798927,
    0.033725298941135406,
    -0.02485995553433895,
    0.0031572997104376554,
    -0.004820440895855427,
    0.021743567660450935,
    -0.006659679114818573,
    -0.02172933705151081,
    0.018456418067216873,
    -0.006919377949088812,
    0.006581413559615612,
    0.046446993947029114,
    -0.048496123403310776,
    -0.03474986553192139,
    -0.0223554614931345,
    -0.006214988883584738,
    -0.01625075563788414,
    0.018285658210515976,
    -0.006983413361012936,
    0.007691360078752041,
    0.006745059508830309,
    -0.00027793130720965564,
    0.0072075375355780125,
    -0.02588452212512493,
    -0.014898897148668766,
    -0.004678139928728342,
    0.021828947588801384,
    -0.013824526220560074,
    -0.012052880600094795,
    0.011746933683753014,
    -0.027919424697756767,
    0.024532664567232132,
    -0.01499850768595934,
    -0.01125599630177021,
    0.010544491931796074,
    -0.025073407217860222,
    -0.00584500702098012,
    -0.03093620203435421,
    0.014628525823354721,
    -0.015325799584388733,
    -0.0062612369656562805,
    0.016108455136418343,
    -0.013717800378799438,
    -0.020320558920502663,
    -0.012330367229878902,
    -0.0033565210178494453,
    0.004791980609297752,
    0.01929599419236183,
    0.004998316988348961,
    0.0064462278969585896,
    -0.005008989479392767,
    0.031676165759563446,
    -0.0072359973564744,
    0.01351146399974823,
    -0.01679149828851223,
    0.05137060210108757,
    -0.01733224093914032,
    0.0027037158142775297,
    0.000470482133096084,
    0.01013893447816372,
    -0.0171187911182642,
    -0.01757415384054184,
    0.03241613134741783,
    -0.07103657722473145,
    -0.014870436862111092,
    -0.08799883723258972,
    0.025358008220791817,
    0.025955673307180405,
    -0.045963168144226074,
    0.0006127829547040164,
    -0.03244458884000778,
    0.015183499082922935,
    -0.02615489438176155,
    0.0048026531003415585,
    -0.003984423354268074,
    -0.03252997249364853,
    0.017318012192845345,
    -8.221208554459736e-05,
    -0.011818083934485912,
    -0.0063501750119030476,
    -0.013077447190880775,
    0.050545256584882736,
    0.007520599290728569,
    0.03867736831307411,
    0.00038932618917897344,
    -0.0009178403997793794,
    -0.01282130554318428,
    0.0157953929156065,
    0.005841449368745089,
    -0.04602009057998657,
    0.0009943271288648248,
    -0.031761545687913895,
    0.00893649272620678,
    -0.018072206526994705,
    -0.004027113784104586,
    0.003774529555812478,
    -0.00803288258612156,
    0.012188066728413105,
    0.012942261062562466,
    0.014422189444303513,
    0.002564972499385476,
    0.008573625236749649,
    0.006140280980616808,
    -0.0051477327942848206,
    0.011440986767411232,
    -0.0008933824137784541,
    -0.006848227698355913,
    0.009605306200683117,
    -0.021416274830698967,
    0.025443390011787415,
    0.011071004904806614,
    -0.0002563638554420322,
    0.00522244069725275,
    0.0496629923582077,
    0.013298013247549534,
    0.03304225578904152,
    -0.002001105574890971,
    -0.030281618237495422,
    -0.028360556811094284,
    0.015525021590292454,
    -0.012572279199957848,
    0.012636314146220684,
    -0.019964806735515594,
    -0.008431324735283852,
    -0.0056742457672953606,
    0.034977544099092484,
    0.017318012192845345,
    -0.006328829564154148,
    0.00597307737916708,
    0.007883465848863125,
    -0.013504349626600742,
    -0.05077293887734413,
    -0.0032515740022063255,
    -0.022369692102074623,
    -0.02076169103384018,
    -0.025073407217860222,
    -0.02901514060795307,
    0.01919638179242611,
    -0.006214988883584738,
    0.021900098770856857,
    0.006926493253558874,
    0.0010112252784892917,
    0.0005438560037873685,
    -0.01576693169772625,
    0.027222149074077606,
    0.028303636237978935,
    -0.020861301571130753,
    -0.034322962164878845,
    -0.007741165347397327,
    0.01415893342345953,
    -0.00880130659788847,
    -0.01622229442000389,
    0.006133166141808033,
    0.011021199636161327,
    0.00946300569921732,
    0.015581941232085228,
    0.015411180444061756,
    0.02133089490234852,
    0.02248353138566017,
    0.0007790970848873258,
    -0.009192634373903275,
    0.01321263238787651,
    -0.0222131609916687,
    0.017801834270358086,
    -0.01013893447816372,
    -0.0030256714671850204,
    -0.0007021657074801624,
    0.016094224527478218,
    -0.026169123128056526,
    -0.028488626703619957,
    -0.01633613556623459,
    -0.016620738431811333,
    -0.022170471027493477,
    -0.010473341681063175,
    0.010110474191606045,
    0.013084561564028263,
    -0.007833660580217838,
    -0.03045237809419632,
    0.011391181498765945,
    -0.022796593606472015,
    -0.004019998479634523,
    0.003842122619971633,
    0.012337482534348965,
    -0.008715925738215446,
    0.03807970508933067,
    -0.0035415119491517544,
    0.036457475274801254,
    0.02097514271736145,
    -0.018314117565751076,
    -0.00045113812666386366,
    -0.0006897143903188407,
    0.0024813709314912558,
    0.011789624579250813,
    0.02569953165948391,
    0.016478436067700386,
    -0.016023073345422745,
    0.013013411313295364,
    -0.02853131666779518,
    -0.013312242925167084,
    0.009171288460493088,
    -0.027364451438188553,
    -0.029797794297337532,
    0.018997160717844963,
    0.0197086650878191,
    0.05891254544258118,
    0.01721840165555477,
    -0.022526221349835396,
    -0.023237725719809532,
    -0.0314769446849823,
    0.00034930408583022654,
    -0.011241765692830086,
    0.016834188252687454,
    -0.010900244116783142,
    -0.003923945594578981,
    0.003785202279686928,
    -0.018755249679088593,
    -0.006908705458045006,
    -0.021060524508357048,
    -0.016378825530409813,
    0.015098118223249912,
    -0.03975885361433029,
    0.01751723326742649,
    -0.01619383506476879,
    0.023522328585386276,
    0.0367136150598526,
    0.006552953273057938,
    0.007065236568450928,
    -0.019566364586353302,
    -0.044340942054986954,
    -0.0019068311667069793,
    0.04943531006574631,
    0.022967355325818062,
    0.006545838434249163,
    -0.031761545687913895,
    0.0032355652656406164,
    0.020534010604023933,
    -0.013376278802752495,
    -0.03611595183610916,
    0.01773068495094776,
    -0.01600884459912777,
    -0.0021007161121815443,
    -0.0013233977369964123,
    -0.007755395490676165,
    0.0079119261354208,
    -0.006819767411798239,
    0.009278014302253723,
    -0.03466448187828064,
    -0.030281618237495422,
    0.011682898737490177,
    -0.0024884857703000307,
    -0.0003352963540237397,
    -0.015880772843956947,
    -0.03825046494603157
  ]
}
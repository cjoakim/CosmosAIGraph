{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "topic :: software development :: build tools"
  ],
  "description": "proxy server that can tunnel among remote servers by regex rules.\npython-proxy\n============\n\n|made-with-python| |pypi-version| |hit-count| |downloads| |downloads-month| |downloads-week|\n\n.. |made-with-python| image:: https://img.shields.io/badge/made%20with-python-1f425f.svg\n   :target: https://www.python.org/\n.. |pypi-version| image:: https://badge.fury.io/py/pproxy.svg\n   :target: https://pypi.python.org/pypi/pproxy/\n.. |hit-count| image:: http://hits.dwyl.io/qwj/python-proxy.svg\n   :target: https://pypi.python.org/pypi/pproxy/\n.. |downloads| image:: https://pepy.tech/badge/pproxy\n   :target: https://pepy.tech/project/pproxy\n.. |downloads-month| image:: https://pepy.tech/badge/pproxy/month\n   :target: https://pepy.tech/project/pproxy\n.. |downloads-week| image:: https://pepy.tech/badge/pproxy/week\n   :target: https://pepy.tech/project/pproxy\n\nhttp/http2/http3/socks4/socks5/shadowsocks/ssh/redirect/pf/quic tcp/udp asynchronous tunnel proxy implemented in python3 asyncio.\n\nquickstart\n----------\n\n.. code:: rst\n\n  $ pip3 install pproxy\n  successfully installed pproxy-1.9.5\n  $ pproxy\n  serving on :8080 by http,socks4,socks5\n  ^c\n  $ pproxy -l ss://chacha20:abc@:8080\n  serving on :8080 by ss (chacha20-py)\n\noptional: (better performance with c ciphers)\n\n.. code:: rst\n\n  $ pip3 install pproxy[accelerated]\n  successfully installed pycryptodome-3.6.4\n\napply os system-wide proxy: (macos, windows)\n\n.. code:: rst\n\n  $ pproxy -r ss://chacha20:abc@server_ip:8080 --sys -vv\n  serving on :8080 by http,socks4,socks5\n  system proxy setting -> socks5 localhost:8080\n  socks5 ::1:57345 -> ss server_ip:8080 -> slack.com:443\n  socks5 ::1:57345 -> ss server_ip:8080 -> www.google.com:443\n  ..... (all local traffic log) ......\n\napply cli proxy: (macos, linux)\n\n.. code:: rst\n\n  $ export http_proxy=http://localhost:8080\n  $ export https_proxy=http://localhost:8080\n\nrun with docker\n---------------\n\n`pproxy` docker container has both python3 (with cryptodome for performance optimizations) and `pypy` versions available.\n\npython3:\n\n``docker run -it -p 8080:8080 mosajjal/pproxy:latest -l http://:8080 -vv``\n\npypy3:\n\n``docker run -it -p 8080:8080 mosajjal/pproxy:latest-pypy -l http://:8080 -vv``\n\nfeatures\n--------\n\n- lightweight single-thread asynchronous io.\n- pure python, no additional library required.\n- proxy client/server for tcp/udp.\n- schedule (load balance) among remote servers.\n- incoming traffic auto-detect.\n- tunnel/jump/backward-jump support.\n- unix domain socket support.\n- http v2, http v3 (quic)\n- user/password authentication support.\n- filter/block hostname by regex patterns.\n- ssl/tls client/server support.\n- shadowsocks ota (one-time-auth_), ssr plugins.\n- statistics by bandwidth and traffic.\n- pac support for javascript configuration.\n- iptables/pf nat redirect packet tunnel.\n- system proxy auto-setting support.\n- client/server api provided.\n\n.. _one-time-auth: https://shadowsocks.org/en/spec/one-time-auth.html\n\nprotocols\n---------\n\n+-------------------+------------+------------+------------+------------+--------------+\n| name              | tcp server | tcp client | udp server | udp client | scheme       |\n+===================+============+============+============+============+==============+\n| http (connect)    | \u2714          | \u2714          |            |            | http://      |\n+-------------------+            +------------+------------+------------+--------------+\n| http              |            | \u2714          |            |            | httponly://  |\n| (get,post,etc)    |            |            |            |            | (as client)  |\n+-------------------+------------+------------+------------+------------+--------------+\n| http v2 (connect) | \u2714          | \u2714          |            |            | h2://        |\n+-------------------+------------+------------+------------+------------+--------------+\n| http v3 (connect) | \u2714 by udp   | \u2714 by udp   |            |            | h3://        |\n+-------------------+------------+------------+------------+------------+--------------+\n| https             | \u2714          | \u2714          |            |            | http+ssl://  |\n+-------------------+------------+------------+------------+------------+--------------+\n| socks4            | \u2714          | \u2714          |            |            | socks4://    |\n+-------------------+------------+------------+------------+------------+--------------+\n| socks5            | \u2714          | \u2714          | \u2714 udp-only | \u2714 udp-only | socks5://    |\n+-------------------+------------+------------+------------+------------+--------------+\n| socks5 over tls   | \u2714          | \u2714          |            |            | socks5+ssl://|\n+-------------------+------------+------------+------------+------------+--------------+\n| shadowsocks       | \u2714          | \u2714          | \u2714          | \u2714          | ss://        |\n+-------------------+------------+------------+------------+------------+--------------+\n| shadowsocks aead  | \u2714          | \u2714          |            |            | ss://        |\n+-------------------+------------+------------+------------+------------+--------------+\n| shadowsocksr      | \u2714          | \u2714          |            |            | ssr://       |\n+-------------------+------------+------------+------------+------------+--------------+\n| trojan            | \u2714          | \u2714          |            |            | trojan://    |\n+-------------------+------------+------------+------------+------------+--------------+\n| ssh tunnel        |            | \u2714          |            |            | ssh://       |\n+-------------------+------------+------------+------------+------------+--------------+\n| quic              | \u2714 by udp   | \u2714 by udp   | \u2714          | \u2714          | http+quic:// |\n+-------------------+------------+------------+------------+------------+--------------+\n| iptables nat      | \u2714          |            |            |            | redir://     |\n+-------------------+------------+------------+------------+------------+--------------+\n| pfctl nat (macos) | \u2714          |            |            |            | pf://        |\n+-------------------+------------+------------+------------+------------+--------------+\n| echo              | \u2714          |            | \u2714          |            | echo://      |\n+-------------------+------------+------------+------------+------------+--------------+\n| tunnel            | \u2714          | \u2714          | \u2714          | \u2714          | tunnel://    |\n| (raw socket)      |            |            |            |            | tunnel{ip}://|\n+-------------------+------------+------------+------------+------------+--------------+\n| websocket         | \u2714          | \u2714          |            |            | ws://        |\n| (simple tunnel)   |            |            |            |            | ws{dst_ip}://|\n+-------------------+------------+------------+------------+------------+--------------+\n| xxx over tls      | \u2714          | \u2714          |            |            | xxx+ssl://   |\n+-------------------+------------+------------+------------+------------+--------------+\n| auto detect       | \u2714          |            | \u2714          |            | a+b+c+d://   |\n+-------------------+------------+------------+------------+------------+--------------+\n\nscheduling algorithms\n---------------------\n\n+-------------------+------------+------------+------------+------------+\n| name              | tcp        | udp        | parameter  | default    |\n+===================+============+============+============+============+\n| first_available   | \u2714          | \u2714          | -s fa      | \u2714          |\n+-------------------+------------+------------+------------+------------+\n| round_robin       | \u2714          | \u2714          | -s rr      |            |\n+-------------------+------------+------------+------------+------------+\n| random_choice     | \u2714          | \u2714          | -s rc      |            |\n+-------------------+------------+------------+------------+------------+\n| least_connection  | \u2714          |            | -s lc      |            |\n+-------------------+------------+------------+------------+------------+\n\nrequirement\n-----------\n\npycryptodome_ is an optional library to enable faster (c version) cipher. **pproxy** has many built-in pure python ciphers. they are lightweight and stable, but slower than c ciphers. after speedup with pypy_, pure python ciphers can get similar performance as c version. if the performance is important and don't have pypy_, install pycryptodome_ instead.\n\nasyncssh_ is an optional library to enable ssh tunnel client support.\n\nthese are some performance benchmarks between python and c ciphers (dataset: 8m):\n\n+---------------------+----------------+\n| chacha20-c          | 0.64 secs      |\n+---------------------+----------------+\n| chacha20-py (pypy3) | 1.32 secs      |\n+---------------------+----------------+\n| chacha20-py         | 48.86 secs     |\n+---------------------+----------------+\n\npypy3 quickstart:\n\n.. code:: rst\n\n  $ pypy3 -m ensurepip\n  $ pypy3 -m pip install asyncio pproxy\n\n.. _pycryptodome: https://pycryptodome.readthedocs.io/en/latest/src/introduction.html\n.. _asyncssh: https://asyncssh.readthedocs.io/en/latest/\n.. _pypy: http://pypy.org\n\nusage\n-----\n\n.. code:: rst\n\n  $ pproxy -h\n  usage: pproxy [-h] [-l listen] [-r rserver] [-ul ulisten] [-ur urserver]\n                [-b block] [-a alived] [-v] [--ssl sslfile] [--pac pac]\n                [--get gets] [--sys] [--test testurl] [--version]\n\n  proxy server that can tunnel among remote servers by regex rules. supported\n  protocols: http,socks4,socks5,shadowsocks,shadowsocksr,redirect,pf,tunnel\n\n  optional arguments:\n    -h, --help        show this help message and exit\n    -l listen         tcp server uri (default: http+socks4+socks5://:8080/)\n    -r rserver        tcp remote server uri (default: direct)\n    -ul ulisten       udp server setting uri (default: none)\n    -ur urserver      udp remote server uri (default: direct)\n    -b block          block regex rules\n    -a alived         interval to check remote alive (default: no check)\n    -s {fa,rr,rc,lc}  scheduling algorithm (default: first_available)\n    -v                print verbose output\n    --ssl sslfile     certfile[,keyfile] if server listen in ssl mode\n    --pac pac         http pac path\n    --get gets        http custom {path,file}\n    --sys             change system proxy setting (mac, windows)\n    --test test       test this url for all remote proxies and exit\n    --version         show program's version number and exit\n\n  online help: <https://github.com/qwj/python-proxy>\n\nuri syntax\n----------\n\n.. code:: rst\n\n  {scheme}://[{cipher}@]{netloc}/[@{localbind}][,{plugins}][?{rules}][#{auth}]\n\n- scheme\n\n  - currently supported scheme: http, socks, ss, ssl, secure. you can use + to link multiple protocols together.\n\n    +----------+-----------------------------+\n    | http     | http protocol (connect)     |\n    +----------+-----------------------------+\n    | httponly | http protocol (get/post)    |\n    +----------+-----------------------------+\n    | socks4   | socks4 protocol             |\n    +----------+-----------------------------+\n    | socks5   | socks5 protocol             |\n    +----------+-----------------------------+\n    | ss       | shadowsocks protocol        |\n    +----------+-----------------------------+\n    | ssr      | shadowsocksr (ssr) protocol |\n    +----------+-----------------------------+\n    | trojan   | trojan_ protocol            |\n    +----------+-----------------------------+\n    | ssh      | ssh client tunnel           |\n    +----------+-----------------------------+\n    | redir    | redirect (iptables nat)     |\n    +----------+-----------------------------+\n    | pf       | pfctl (macos pf nat)        |\n    +----------+-----------------------------+\n    | ssl      | unsecured ssl/tls (no cert) |\n    +----------+-----------------------------+\n    | secure   | secured ssl/tls (cert)      |\n    +----------+-----------------------------+\n    | tunnel   | raw connection              |\n    +----------+-----------------------------+\n    | ws       | websocket connection        |\n    +----------+-----------------------------+\n    | echo     | echo-back service           |\n    +----------+-----------------------------+\n    | direct   | direct connection           |\n    +----------+-----------------------------+\n\n.. _trojan: https://trojan-gfw.github.io/trojan/protocol\n\n  - \"http://\" accepts get/post/connect as server, sends connect as client. \"httponly://\" sends \"get/post\" as client, works only on http traffic.\n\n  - valid schemes: http://, http+socks4+socks5://, http+ssl://, ss+secure://, http+socks5+ss://\n\n  - invalid schemes: ssl://, secure://\n\n- cipher\n\n  - cipher's format: \"cipher_name:cipher_key\". cipher can be base64-encoded. so cipher string with \"ywvzlteyoc1ny206dgvzda==\" is equal to \"aes-128-gcm:test\".\n\n  - full cipher support list:\n\n    +-----------------+------------+-----------+-------------+\n    | cipher          | key length | iv length | score (0-5) |\n    +=================+============+===========+=============+\n    | table-py        | any        | 0         | 0 (lowest)  |\n    +-----------------+------------+-----------+-------------+\n    | rc4             | 16         | 0         | 0 (lowest)  |\n    +-----------------+------------+-----------+-------------+\n    | rc4-md5         | 16         | 16        | 0.5         |\n    +-----------------+------------+-----------+-------------+\n    | chacha20        | 32         | 8         | 5 (highest) |\n    +-----------------+------------+-----------+-------------+\n    | chacha20-ietf   | 32         | 12        | 5           |\n    +-----------------+------------+-----------+-------------+\n    | chacha20-ietf-  |            |           |             |\n    | poly1305-py     | 32         | 32        | aead        |\n    +-----------------+------------+-----------+-------------+\n    | salsa20         | 32         | 8         | 4.5         |\n    +-----------------+------------+-----------+-------------+\n    | aes-128-cfb     | 16         | 16        | 3           |\n    |                 |            |           |             |\n    | aes-128-cfb8    |            |           |             |\n    |                 |            |           |             |\n    | aes-128-cfb1-py |            |           | slow        |\n    +-----------------+------------+-----------+-------------+\n    | aes-192-cfb     | 24         | 16        | 3.5         |\n    |                 |            |           |             |\n    | aes-192-cfb8    |            |           |             |\n    |                 |            |           |             |\n    | aes-192-cfb1-py |            |           | slow        |\n    +-----------------+------------+-----------+-------------+\n    | aes-256-cfb     | 32         | 16        | 4.5         |\n    |                 |            |           |             |\n    | aes-256-ctr     |            |           |             |\n    |                 |            |           |             |\n    | aes-256-ofb     |            |           |             |\n    |                 |            |           |             |\n    | aes-256-cfb8    |            |           |             |\n    |                 |            |           |             |\n    | aes-256-cfb1-py |            |           | slow        |\n    +-----------------+------------+-----------+-------------+\n    | aes-256-gcm     | 32         | 32        | aead        |\n    |                 |            |           |             |\n    | aes-192-gcm     | 24         | 24        | aead        |\n    |                 |            |           |             |\n    | aes-128-gcm     | 16         | 16        | aead        |\n    +-----------------+------------+-----------+-------------+\n    | camellia-256-cfb| 32         | 16        | 4           |\n    |                 |            |           |             |\n    | camellia-192-cfb| 24         | 16        | 4           |\n    |                 |            |           |             |\n    | camellia-128-cfb| 16         | 16        | 4           |\n    +-----------------+------------+-----------+-------------+\n    | bf-cfb          | 16         | 8         | 1           |\n    +-----------------+------------+-----------+-------------+\n    | cast5-cfb       | 16         | 8         | 2.5         |\n    +-----------------+------------+-----------+-------------+\n    | des-cfb         | 8          | 8         | 1.5         |\n    +-----------------+------------+-----------+-------------+\n    | rc2-cfb-py      | 16         | 8         | 2           |\n    +-----------------+------------+-----------+-------------+\n    | idea-cfb-py     | 16         | 8         | 2.5         |\n    +-----------------+------------+-----------+-------------+\n    | seed-cfb-py     | 16         | 16        | 2           |\n    +-----------------+------------+-----------+-------------+\n\n  - *pproxy* ciphers have pure python implementations. program will switch to c cipher if there is c implementation available within pycryptodome_. otherwise, use pure python cipher.\n\n  - aead ciphers use additional payload after each packet. the underlying protocol is different. specifications: aead_.\n\n  - some pure python ciphers (aes-256-cfb1-py) is quite slow, and is not recommended to use without pypy speedup. try install pycryptodome_ and use c version cipher instead.\n\n  - to enable ota encryption with shadowsocks, add '!' immediately after cipher name.\n\n- netloc\n\n  - it can be \"hostname:port\" or \"/unix_domain_socket\". if the hostname is empty, server will listen on all interfaces.\n\n  - valid netloc: localhost:8080, 0.0.0.0:8123, /tmp/domain_socket, :8123\n\n- localbind\n\n  - it can be \"@in\" or @ipv4_address or @ipv6_address\n\n  - valid localbind: @in, @192.168.1.15, @::1\n\n- plugins\n\n  - it can be multiple plugins joined by \",\". supported plugins: plain, origin, http_simple, tls1.2_ticket_auth, verify_simple, verify_deflate\n\n  - valid plugins: /,tls1.2_ticket_auth,verify_simple\n\n- rules\n\n  - the filename that contains regex rules\n\n- auth\n\n  - the username, colon ':', and the password\n\nuris can be joined by \"__\" to indicate tunneling by jump. for example, ss://1.2.3.4:1324__http://4.5.6.7:4321 make remote connection to the first shadowsocks proxy server, and then jump to the second http proxy server.\n\n.. _aead: http://shadowsocks.org/en/spec/aead-ciphers.html\n\nclient api\n----------\n\n- tcp client api\n\n  .. code:: rst\n\n    import asyncio, pproxy\n\n    async def test_tcp(proxy_uri):\n        conn = pproxy.connection(proxy_uri)\n        reader, writer = await conn.tcp_connect('google.com', 80)\n        writer.write(b'get / http/1.1\\r\\n\\r\\n')\n        data = await reader.read(1024*16)\n        print(data.decode())\n\n    asyncio.run(test_tcp('ss://aes-256-cfb:password@remote_host:remote_port'))\n\n- udp client api\n\n  .. code:: rst\n\n    import asyncio, pproxy\n\n    async def test_udp(proxy_uri):\n        conn = pproxy.connection(proxy_uri)\n        answer = asyncio.future()\n        await conn.udp_sendto('8.8.8.8', 53, b'hello the world', answer.set_result)\n        await answer\n        print(answer.result())\n\n    asyncio.run(test_udp('ss://chacha20:password@remote_host:remote_port'))\n\nserver api\n----------\n\n- server api example:\n\n  .. code:: rst\n\n    import asyncio\n    import pproxy\n\n    server = pproxy.server('ss://0.0.0.0:1234')\n    remote = pproxy.connection('ss://1.2.3.4:5678')\n    args = dict( rserver = [remote],\n                 verbose = print )\n\n    loop = asyncio.get_event_loop()\n    handler = loop.run_until_complete(server.start_server(args))\n    try:\n        loop.run_forever()\n    except keyboardinterrupt:\n        print('exit!')\n\n    handler.close()\n    loop.run_until_complete(handler.wait_closed())\n    loop.run_until_complete(loop.shutdown_asyncgens())\n    loop.close()\n\n\nexamples\n--------\n\n- regex rule\n\n  define regex file \"rules\" as follow:\n\n  .. code:: rst\n\n    #google domains\n    (?:.+\\.)?google.*\\.com\n    (?:.+\\.)?gstatic\\.com\n    (?:.+\\.)?gmail\\.com\n    (?:.+\\.)?ntp\\.org\n    (?:.+\\.)?glpals\\.com\n    (?:.+\\.)?akamai.*\\.net\n    (?:.+\\.)?ggpht\\.com\n    (?:.+\\.)?android\\.com\n    (?:.+\\.)?gvt1\\.com\n    (?:.+\\.)?youtube.*\\.com\n    (?:.+\\.)?ytimg\\.com\n    (?:.+\\.)?goo\\.gl\n    (?:.+\\.)?youtu\\.be\n    (?:.+\\.)?google\\..+\n\n  then start *pproxy*\n\n  .. code:: rst\n\n    $ pproxy -r http://aa.bb.cc.dd:8080?rules -vv\n    serving on :8080 by http,socks4,socks5\n    http ::1:57768 -> http aa.bb.cc.dd:8080 -> www.googleapis.com:443\n    http ::1:57772 -> www.yahoo.com:80\n    socks4 ::1:57770 -> http aa.bb.cc.dd:8080 -> www.youtube.com:443\n\n  *pproxy* will serve incoming traffic by http/socks4/socks5 auto-detect protocol, redirect all google traffic to http proxy aa.bb.cc.dd:8080, and visit all other traffic directly from local.\n\n- use cipher\n\n  add cipher encryption to make sure data can't be intercepted. run *pproxy* locally as:\n\n  .. code:: rst\n\n    $ pproxy -l ss://:8888 -r ss://chacha20:cipher_key@aa.bb.cc.dd:12345 -vv\n\n  next, run pproxy.py remotely on server \"aa.bb.cc.dd\". the base64 encoded string of \"chacha20:cipher_key\" is also supported:\n\n  .. code:: rst\n\n    $ pproxy -l ss://chacha20:cipher_key@:12345\n\n  the same as:\n\n  .. code:: rst\n\n    $ pproxy -l ss://y2hhy2hhmja6y2lwagvyx2tleq==@:12345\n\n  the traffic between local and aa.bb.cc.dd is encrypted by stream cipher chacha20 with secret key \"cipher_key\".\n\n- unix domain socket\n\n  a more complex example:\n\n  .. code:: rst\n\n    $ pproxy -l ss://salsa20!:complex_cipher_key@/tmp/pproxy_socket -r http+ssl://domain1.com:443#username:password\n\n  *pproxy* listen on the unix domain socket \"/tmp/pproxy_socket\" with cipher \"salsa20\" and key \"complex_cipher_key\". ota packet protocol is enabled by adding ! after cipher name. the traffic is tunneled to remote https proxy with simple http authentication.\n\n- ssl/tls server\n\n  if you want to listen in ssl/tls, you must specify ssl certificate and private key files by parameter \"--ssl\":\n\n  .. code:: rst\n\n    $ pproxy -l http+ssl://0.0.0.0:443 -l http://0.0.0.0:80 --ssl server.crt,server.key --pac /autopac\n\n  *pproxy* listen on both 80 http and 443 https ports, use the specified ssl/tls certificate and private key files. the \"--pac\" enable pac feature, so you can put \"https://yourdomain.com/autopac\" path in your device's auto-configure url.\n\n  simple guide for generating self-signed ssl certificates:\n\n  .. code:: rst\n\n    $ openssl genrsa -des3 -out server.key 1024\n    $ openssl req -new -key server.key -out server.csr\n    $ cp server.key server.key.org\n    $ openssl rsa -in server.key.org -out server.key\n    $ openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt\n\n- ssr plugins\n\n  shadowsocksr example with plugin \"tls1.2_ticket_auth\" to emulate common tls traffic:\n\n  .. code:: rst\n\n    $ pproxy -l ssr://chacha20:mypass@0.0.0.0:443/,tls1.2_ticket_auth,verify_simple\n\n- local bind ip\n\n  if you want to route the traffic by different local bind, use the @localbind uri syntax. for example, server has three ip interfaces: 192.168.1.15, 111.0.0.1, 112.0.0.1. you want to route traffic matched by \"rule1\" to 111.0.0.2 and traffic matched by \"rule2\" to 222.0.0.2, and the remaining traffic directly:\n\n  .. code:: rst\n\n    $ pproxy -l ss://:8000/@in -r ss://111.0.0.2:8000/@111.0.0.1?rule1 -r ss://222.0.0.2:8000/@222.0.0.1?rule2\n\n- redirect/pf protocol\n\n  iptable nat redirect example (ubuntu):\n\n  .. code:: rst\n\n    $ sudo iptables -t nat -a output -p tcp --dport 80 -j redirect --to-ports 5555\n    $ pproxy -l redir://:5555 -r http://remote_http_server:3128 -vv\n\n  the above example illustrates how to redirect all local output tcp traffic with destination port 80 to localhost port 5555 listened by **pproxy**, and then tunnel the traffic to remote http proxy.\n\n  pf redirect example (macos):\n\n  .. code:: rst\n\n    $ sudo pfctl -ef /dev/stdin\n    rdr pass on lo0 inet proto tcp from any to any port 80 -> 127.0.0.1 port 8080\n    pass out on en0 route-to lo0 inet proto tcp from any to any port 80 keep state\n    ^d\n    $ sudo pproxy -l pf://:8080 -r socks5://remote_socks5_server:1324 -vv\n\n  make sure **pproxy** runs in root mode (sudo), otherwise it cannot redirect pf packet.\n\n- multiple jumps example\n\n  .. code:: rst\n\n    $ pproxy -r http://server1__ss://server2__socks://server3\n\n  *pproxy* will connect to server1 first, tell server1 connect to server2, and tell server2 connect to server3, and make real traffic by server3.\n\n- raw connection tunnel\n\n  tcp raw connection tunnel example:\n\n  .. code:: rst\n\n    $ pproxy -l tunnel{google.com}://:80\n    $ curl -h \"host: google.com\" http://localhost\n\n  udp dns tunnel example:\n\n  .. code:: rst\n\n    $ pproxy -ul tunnel{8.8.8.8}://:53\n    $ nslookup google.com localhost\n\n- udp more complicated example\n\n  run the shadowsocks udp proxy on remote machine:\n\n  .. code:: rst\n\n    $ pproxy -ul ss://remote_server:13245\n\n  run the commands on local machine:\n\n  .. code:: rst\n\n    $ pproxy -ul tunnel{8.8.8.8}://:53 -ur ss://remote_server:13245 -vv\n    udp tunnel 127.0.0.1:60573 -> ss remote_server:13245 -> 8.8.8.8:53\n    udp tunnel 127.0.0.1:60574 -> ss remote_server:13245 -> 8.8.8.8:53\n    ...\n    $ nslookup google.com localhost\n\n- load balance example\n\n  specify multiple -r server, and a scheduling algorithm (rr = round_robin, rc = random_choice, lc = least_connection):\n\n  .. code:: rst\n\n    $ pproxy -r http://server1 -r ss://server2 -r socks5://server3 -s rr -vv\n    http ::1:42356 -> http server1 -> google.com:443\n    http ::1:42357 -> ss server2 -> google.com:443\n    http ::1:42358 -> socks5 server3 -> google.com:443\n    http ::1:42359 -> http server1 -> google.com:443\n    ...\n    $ pproxy -ul tunnel://:53 -ur tunnel://8.8.8.8:53 -ur tunnel://8.8.4.4:53 -s rc -vv\n    udp tunnel ::1:35378 -> tunnel 8.8.8.8:53\n    udp tunnel ::1:35378 -> tunnel 8.8.4.4:53\n    ...\n\n- websocket example\n\n  websocket protocol is similar to tunnel protocol. it is raw and doesn't support any proxy function. it can connect to other proxy like tunnel protocol.\n\n  first run pproxy on remote machine:\n\n  .. code:: rst\n\n    $ pproxy -l ws://:80 -r tunnel:///tmp/myproxy -v\n    $ pproxy -l ss://chacha20:abc@/tmp/myproxy -v\n\n  run pproxy on local machine:\n\n  .. code:: rst\n\n    $ pproxy -l tunnel://:1234 -r ws://remote_ip:80 -vv\n\n  then port :1234 on local machine is connected to the /tmp/myproxy on remote machine by websocket tunnel. you can specify any proxy protocol details on /tmp/myproxy.\n\n  it is a good practice to use some cdn in the middle of local/remote machines. cdn with websocket support can hide remote machine's real ip from public.\n\n- backward proxy\n\n  sometimes, the proxy server hides behind an nat router and doesn't have a public ip. the client side has a public ip \"client_ip\". backward proxy feature enables the server to connect backward to client and wait for proxy requests.\n\n  run **pproxy** client as follows:\n\n  .. code:: rst\n\n    $ pproxy -l http://:8080 -r http+in://:8081 -v\n\n  run **pproxy** server as follows:\n\n  .. code:: rst\n\n    $ pproxy -l http+in://client_ip:8081\n\n  server connects to client_ip:8081 and waits for client proxy requests. the protocol http specified is just an example. it can be any protocol and cipher **pproxy** supports. the scheme \"**in**\" should exist in uri to inform **pproxy** that it is a backward proxy.\n\n  .. code:: rst\n\n    $ pproxy -l http+in://jumpserver__http://client_ip:8081\n\n  it is a complicated example. server connects to client_ip:8081 by jump http://jumpserver. the backward proxy works through jumps.\n\n- ssh client tunnel\n\n  ssh client tunnel support is enabled by installing additional library asyncssh_. after \"pip3 install asyncssh\", you can specify \"**ssh**\" as scheme to proxy via ssh client tunnel.\n\n  .. code:: rst\n\n    $ pproxy -l http://:8080 -r ssh://remote_server.com/#login:password\n\n  if a client private key is used to authenticate, put double colon \"::\" between login and private key path.\n\n  .. code:: rst\n\n    $ pproxy -l http://:8080 -r ssh://remote_server.com/#login::private_key_path\n\n  ssh connection known_hosts feature is disabled by default.\n\n- ssh jump\n\n  ssh jump is supported by using \"__\" concatenation\n\n  .. code:: rst\n\n    $ pproxy -r ssh://server1__ssh://server2__ssh://server3\n\n  first connection to server1 is made. second, ssh connection to server2 is made from server1. finally, connect to server3, and use server3 for proxying traffic.\n\n- ssh remote forward\n\n  .. code:: rst\n\n    $ pproxy -l ssh://server__tunnel://0.0.0.0:1234 -r tunnel://127.0.0.1:1234\n\n  tcp :1234 on remote server is forwarded to 127.0.0.1:1234 on local server\n\n  .. code:: rst\n\n    $ pproxy -l ssh://server1__ssh://server2__ss://0.0.0.0:1234 -r ss://server3:1234\n\n  it is a complicated example. ssh server2 is jumped from ssh server1, and ss://0.0.0.0:1234 on server2 is listened. traffic is forwarded to ss://server3:1234.\n\n- trojan protocol example\n\n  normally trojan:// should be used together with ssl://. you should specify the ssl crt/key file for ssl usage. a typical trojan server would be:\n\n  .. code:: rst\n\n    $ pproxy --ssl ssl.crt,ssl.key -l trojan+tunnel{localhost:80}+ssl://:443#yourpassword -vv\n\n  if trojan password doesn't match, the tunnal{localhost:80} will be switched to. it looks exactly the same as a common https website.\n\n- quic protocol example\n\n  quic is a udp stream protocol used in http/3. library **aioquic** is required if you want to proxy via quic.\n  quic is listened on udp port, but can handle tcp or udp traffic. if you want to handle tcp traffic, you should use \"-l quic+http\" instead of \"-ul quic+http\".\n\n  .. code:: rst\n\n    $ pip3 install aioquic\n    $ pproxy --ssl ssl.crt,ssl.key -l quic+http://:1234\n\n  on the client:\n\n    $ pproxy -r quic+http://server:1234\n\n  quic protocol can transfer a lot of tcp streams on one single udp stream. if the connection number is hugh, quic can benefit by reducing tcp handshake time.\n\n- vpn server example\n\n  you can run vpn server simply by installing pvpn (python vpn), a lightweight vpn server with pproxy tunnel feature.\n\n  .. code:: rst\n\n    $ pip3 install pvpn\n    successfully installed pvpn-0.2.1\n    $ pvpn -wg 9999 -r http://remote_server:remote_port\n    serving on udp :500 :4500...\n    serving on udp :9000 (wireguard)...\n    tcp xx.xx.xx.xx:xx -> http xx.xx.xx.xx:xx -> xx.xx.xx.xx:xx\n\n\nprojects\n--------\n\n+ `python-vpn <https://github.com/qwj/python-vpn>`_ - vpn server (ipsec,ike,ikev2,l2tp,wireguard) in pure python\n+ `shadowproxy <https://github.com/guyingbo/shadowproxy>`_ - awesome python proxy implementation by guyingbo\n\n\n\n",
  "docs_url": null,
  "keywords": "proxy socks http shadowsocks shadowsocksr ssr redirect pf tunnel cipher ssl udp",
  "license": "mit",
  "name": "pproxy",
  "package_url": "https://pypi.org/project/pproxy/",
  "project_url": "https://pypi.org/project/pproxy/",
  "project_urls": {
    "Homepage": "https://github.com/qwj/python-proxy"
  },
  "release_url": "https://pypi.org/project/pproxy/2.7.8/",
  "requires_dist": [
    "pycryptodome (>=3.7.2) ; extra == 'accelerated'",
    "uvloop (>=0.13.0) ; extra == 'accelerated'",
    "python-daemon (>=2.2.3) ; extra == 'daemon'",
    "aioquic (>=0.9.7) ; extra == 'quic'",
    "asyncssh (>=2.5.0) ; extra == 'sshtunnel'"
  ],
  "requires_python": ">=3.6",
  "summary": "proxy server that can tunnel among remote servers by regex rules.",
  "version": "2.7.8",
  "releases": [],
  "developers": [
    "qian_wenjie",
    "qianwenjie@gmail.com"
  ],
  "kwds": "shadowproxy remote_socks5_server pproxy_socket https_proxy server2__socks",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pproxy",
  "homepage": "https://github.com/qwj/python-proxy",
  "release_count": 136,
  "dependency_ids": [
    "pypi_aioquic",
    "pypi_asyncssh",
    "pypi_pycryptodome",
    "pypi_python_daemon",
    "pypi_uvloop"
  ],
  "documentation_summary": "The HTML text describes \"pproxy,\" a proxy server software available on PyPI (Python Package Index) with the latest version 2.7.9 released on January 16, 2024. It supports tunneling among remote servers using regex rules and is implemented in Python3 asyncio, supporting various protocols like HTTP/HTTP2/HTTP3, Socks4/Socks5, Shadowsocks, SSH, and more. It offers features like lightweight asynchronous IO, traffic auto-detection, user/password authentication, and SSL/TLS support. The software requires Python >=3.6 and is licensed under the MIT License. It provides detailed instructions for installation, usage, and features like load balancing, encryption, and support for multiple proxy protocols.",
  "embedding": [
    -0.009432518854737282,
    -0.010874737054109573,
    0.011619769036769867,
    -0.023895712569355965,
    0.0009167655953206122,
    0.015638841316103935,
    0.001840366399846971,
    0.003735414007678628,
    0.0012303284602239728,
    -0.027709731832146645,
    0.006930850446224213,
    -0.002139404648914933,
    -0.01279541663825512,
    0.003995149862021208,
    -0.007402476388961077,
    -0.011701790615916252,
    0.0011397626949474216,
    -0.019165784120559692,
    0.0010346721392124891,
    -0.002580272266641259,
    0.018099499866366386,
    -0.002323953900486231,
    -0.03857763484120369,
    -0.04738131910562515,
    -0.01078587956726551,
    0.0034090352710336447,
    0.015174051746726036,
    -0.029937993735074997,
    0.012337461113929749,
    -0.013178185559809208,
    0.021120639517903328,
    -0.012932119891047478,
    -0.02598727121949196,
    -0.015105700120329857,
    0.006958191283047199,
    -0.005187885370105505,
    0.0038071831222623587,
    0.0153244249522686,
    0.023075494915246964,
    0.023307889699935913,
    0.016814488917589188,
    -0.016978533938527107,
    0.005122951231896877,
    -0.02470226213335991,
    -0.01878301426768303,
    -0.0005023841513320804,
    0.0037593371234834194,
    -0.035433460026979446,
    -0.018400246277451515,
    0.014148777350783348,
    0.02703988552093506,
    0.01700587384402752,
    -0.009541881270706654,
    -0.02950054407119751,
    0.03937051072716713,
    0.0029510795138776302,
    -0.010779044590890408,
    0.0281881932169199,
    -0.012091395445168018,
    -0.013704492710530758,
    0.026164986193180084,
    0.008619134314358234,
    -0.048064831644296646,
    -0.007846761494874954,
    -0.0003827688633464277,
    -0.0017250230303034186,
    -0.01069018803536892,
    0.03516005352139473,
    0.003909710329025984,
    -0.0010662847198545933,
    0.033957067877054214,
    0.028625642880797386,
    0.0005139184650033712,
    -0.04229595884680748,
    0.03611697629094124,
    -0.015433787368237972,
    -0.022966131567955017,
    0.02519439347088337,
    -0.03351961448788643,
    -0.013909547589719296,
    0.020409783348441124,
    -0.01756635680794716,
    0.03207056224346161,
    0.012316955253481865,
    0.034121111035346985,
    -0.003526941640302539,
    -0.013936887495219707,
    0.0024111021775752306,
    0.00289810704998672,
    -5.5482261814177036e-05,
    0.02133936434984207,
    0.01267921831458807,
    0.014066755771636963,
    0.021065957844257355,
    0.010006671771407127,
    0.037511348724365234,
    -0.03748400881886482,
    0.031168321147561073,
    -0.013280712999403477,
    -0.03658176586031914,
    0.006131136789917946,
    -0.0020727617666125298,
    -0.021981868892908096,
    -0.008393574506044388,
    -0.033820364624261856,
    -0.010437286458909512,
    -0.013690821826457977,
    -0.004012237768620253,
    0.0181268397718668,
    0.01607629284262657,
    -0.018072158098220825,
    0.03887838125228882,
    0.011018275283277035,
    -0.036034952849149704,
    0.0036089636851102114,
    -0.021435055881738663,
    0.02414177916944027,
    -0.006312268786132336,
    -0.004811951424926519,
    -0.001353361294604838,
    0.0030741123482584953,
    0.018865037709474564,
    0.024551888927817345,
    -0.02318485639989376,
    0.020478134974837303,
    -0.020669518038630486,
    -0.0032535353675484657,
    0.005560401361435652,
    0.018031148239970207,
    0.003964392002671957,
    0.02647940255701542,
    0.025249075144529343,
    -0.002899815794080496,
    0.013191855512559414,
    0.002094975905492902,
    -0.012877438217401505,
    -0.013130338862538338,
    -0.02781909517943859,
    -0.02140771597623825,
    -0.017224598675966263,
    0.01937083899974823,
    0.014599897898733616,
    -0.014135107398033142,
    -0.007710058707743883,
    -0.017607368528842926,
    0.041585102677345276,
    0.003677315078675747,
    -0.01562517136335373,
    0.007265773136168718,
    0.006185818463563919,
    0.008557618595659733,
    -0.01861897110939026,
    -0.03081289306282997,
    -0.006455807015299797,
    -0.0005105008604004979,
    0.024770613759756088,
    0.012474164366722107,
    0.028078829869627953,
    -0.02631535939872265,
    0.011257505975663662,
    -0.0034209967125207186,
    0.03141438588500023,
    -0.013492602854967117,
    -0.015092029236257076,
    -0.012248603627085686,
    0.019644245505332947,
    0.014845963567495346,
    0.007539179641753435,
    -0.011093461886048317,
    -0.005259654484689236,
    -0.022009210661053658,
    0.00541686313226819,
    -0.055993616580963135,
    -0.005437368527054787,
    0.011517241597175598,
    -0.01894705928862095,
    0.026000943034887314,
    0.0065993452444672585,
    -0.010526143945753574,
    -0.0037046559154987335,
    0.023868372663855553,
    -0.009439353831112385,
    -0.010567154735326767,
    0.04087424650788307,
    -0.032508011907339096,
    0.0029801290947943926,
    0.004101094789803028,
    0.001819860888645053,
    -0.008523442782461643,
    0.0064216312021017075,
    0.032808758318424225,
    0.044483210891485214,
    0.005174214951694012,
    -0.0302934218198061,
    -0.5835584998130798,
    -0.018263543024659157,
    -0.003203980391845107,
    -0.03130502626299858,
    -0.001491773291490972,
    0.015666183084249496,
    0.00545103894546628,
    0.00017760731861926615,
    -0.021681122481822968,
    0.03901508450508118,
    -0.007088059093803167,
    0.03253535181283951,
    -0.005608247593045235,
    -0.007744234520941973,
    -0.001078246277756989,
    -0.017744071781635284,
    -0.008947222493588924,
    0.002053965115919709,
    0.004381336271762848,
    0.013014141470193863,
    -0.012836427427828312,
    0.02341725304722786,
    -0.029691927134990692,
    0.012740734964609146,
    -0.0044018421322107315,
    0.022159583866596222,
    0.011722296476364136,
    -0.020109035074710846,
    0.003547447267919779,
    0.007785245310515165,
    -0.022515011951327324,
    0.02591891959309578,
    0.001410605851560831,
    -0.042706068605184555,
    0.044018421322107315,
    0.00286564021371305,
    -0.0033389749005436897,
    0.024674922227859497,
    0.0023700911551713943,
    0.052603378891944885,
    -0.021435055881738663,
    -0.005061434581875801,
    0.0058030495420098305,
    -0.007641707081347704,
    -0.0008860073867253959,
    0.01789444498717785,
    0.03130502626299858,
    0.004822204355150461,
    0.0007698097033426166,
    -0.019261475652456284,
    -0.020382441580295563,
    -0.014914315193891525,
    0.010826890356838703,
    -0.022515011951327324,
    0.02522173337638378,
    -0.008954057469964027,
    0.02259703353047371,
    -0.01614464446902275,
    0.0025204645935446024,
    -0.004685501102358103,
    0.015611501410603523,
    0.015638841316103935,
    0.013923217542469501,
    -0.035734206438064575,
    -0.0015310754533857107,
    -0.0037695898208767176,
    0.0061892359517514706,
    -0.026205996051430702,
    -0.011373703368008137,
    -0.008612299337983131,
    0.020245738327503204,
    0.00014631511294282973,
    -0.004121600650250912,
    -0.023567626252770424,
    -0.018509607762098312,
    0.02229628711938858,
    0.0258505679666996,
    0.026069294661283493,
    -0.026028282940387726,
    0.016623105853796005,
    0.0018386575393378735,
    0.02065584808588028,
    -0.010068188421428204,
    -0.018837695941329002,
    0.04590492323040962,
    0.00583722535520792,
    -0.02154441922903061,
    -0.02325320802628994,
    0.019575893878936768,
    -0.025823228061199188,
    0.02736797370016575,
    0.015351765789091587,
    -0.01434016227722168,
    -0.01267921831458807,
    0.0008757546311244369,
    0.023007143288850784,
    -0.03805816173553467,
    0.002640079939737916,
    0.006021774373948574,
    -0.03160577267408371,
    0.013889041729271412,
    -0.027354303747415543,
    0.010232231579720974,
    0.003626051591709256,
    0.015133040025830269,
    0.021038617938756943,
    -0.006442136596888304,
    -0.009582892060279846,
    0.009425682947039604,
    0.010068188421428204,
    -0.0034859308507293463,
    -0.020054355263710022,
    0.004784610588103533,
    -0.01198886800557375,
    -0.0002640079765114933,
    -0.030102036893367767,
    0.023294219747185707,
    -0.0025614756159484386,
    0.024770613759756088,
    -0.005898741539567709,
    0.01937083899974823,
    -0.002253893529996276,
    0.0007117108325473964,
    0.010731198824942112,
    0.014367503114044666,
    0.02325320802628994,
    0.03436717763543129,
    -0.016103632748126984,
    -0.0030792388133704662,
    0.010635506361722946,
    0.004436017945408821,
    0.009459858760237694,
    0.017210928723216057,
    0.004904225934296846,
    0.04002668708562851,
    -0.008872035890817642,
    0.05932917445898056,
    0.00014684911002404988,
    0.006756553892046213,
    0.0021769979503005743,
    0.004675248172134161,
    0.004945237189531326,
    0.0067155431024730206,
    -0.012952624820172787,
    0.012747569940984249,
    -0.017867103219032288,
    -0.03237130865454674,
    -0.008051816374063492,
    -0.01752534508705139,
    0.0068932571448385715,
    -0.025741206482052803,
    -0.004299314692616463,
    -0.004326655063778162,
    0.02194085903465748,
    -0.036718469113111496,
    -0.022911449894309044,
    -0.005341676063835621,
    -0.009617067873477936,
    -0.00874900259077549,
    -0.011455724947154522,
    0.0027340634260326624,
    0.007088059093803167,
    -0.0232805497944355,
    0.0027614040300250053,
    -0.013048317283391953,
    0.010717527940869331,
    0.0016814488917589188,
    0.03740198537707329,
    -0.013472096994519234,
    -0.041749145835638046,
    0.004094259813427925,
    0.002306865993887186,
    -0.005608247593045235,
    0.020833563059568405,
    -0.00517079746350646,
    0.007812585681676865,
    0.01323970127850771,
    -0.013403745368123055,
    -0.00846876110881567,
    -0.0010210017208009958,
    -0.01703321374952793,
    0.0250303503125906,
    -0.035570163279771805,
    -0.013971063308417797,
    0.022802088409662247,
    0.0010380896274000406,
    0.028570961207151413,
    0.0218725074082613,
    -0.03827688470482826,
    -0.0031185410916805267,
    0.007293113972991705,
    0.014695590361952782,
    -0.0018506190972402692,
    0.02440151572227478,
    -0.011120802722871304,
    -0.004398424178361893,
    0.007730564102530479,
    0.013212361373007298,
    0.011154978536069393,
    0.052083905786275864,
    0.01703321374952793,
    -0.023403581231832504,
    0.003960974048823118,
    -0.02667078748345375,
    -0.02381369099020958,
    -0.02667078748345375,
    0.015775544568896294,
    -0.0013072240399196744,
    0.004969160072505474,
    -0.0045863911509513855,
    0.030594168230891228,
    -0.025112371891736984,
    -0.026616105809807777,
    -0.02456555888056755,
    -0.005095610395073891,
    0.022747406736016273,
    0.016500072553753853,
    0.035433460026979446,
    -0.017539016902446747,
    -0.009159112349152565,
    0.005399775225669146,
    0.02091558463871479,
    0.017785081639885902,
    0.03472260385751724,
    0.004873468074947596,
    -0.017415983602404594,
    0.0121665820479393,
    0.01131218671798706,
    0.0008736186427995563,
    -0.024661250412464142,
    -0.01162660401314497,
    0.007067553699016571,
    0.02107962779700756,
    -0.010847396217286587,
    0.012549350969493389,
    -0.028926389291882515,
    0.029555223882198334,
    -0.017251940444111824,
    0.030676189810037613,
    -0.0010816637659445405,
    0.011729131452739239,
    0.014914315193891525,
    0.03226194903254509,
    -0.0005275887669995427,
    0.026916854083538055,
    0.0026486238930374384,
    0.03387504443526268,
    0.0008061215048655868,
    -0.016171984374523163,
    -0.003697820706292987,
    0.013513107784092426,
    0.01861897110939026,
    -0.008270541206002235,
    0.011934186331927776,
    0.01881035603582859,
    0.005874818656593561,
    0.008919881656765938,
    0.010122869163751602,
    0.041092973202466965,
    -0.006688202265650034,
    0.0184822678565979,
    -0.0002719111507758498,
    0.021981868892908096,
    0.011975197121500969,
    0.028488939628005028,
    -0.024442525580525398,
    -0.003096326719969511,
    -0.04893973469734192,
    0.011653944849967957,
    -0.0343945175409317,
    -0.003984897397458553,
    -0.0063669499941170216,
    -0.0024401515256613493,
    -0.021325694397091866,
    0.0253857783973217,
    -0.006411378271877766,
    0.005912411957979202,
    0.024196460843086243,
    -0.004712841473519802,
    0.010861066170036793,
    -0.033765681087970734,
    -0.012863768264651299,
    0.04904909431934357,
    0.009828957729041576,
    -0.007710058707743883,
    -0.04215925559401512,
    -0.02272006683051586,
    0.007819420658051968,
    -0.007176916114985943,
    -0.008038146421313286,
    0.010738033801317215,
    -0.002108646323904395,
    0.021694792434573174,
    0.025727536529302597,
    -0.041557762771844864,
    -0.04065551981329918,
    0.026260677725076675,
    -0.009876803494989872,
    -0.025836898013949394,
    -0.04371767118573189,
    0.005878236144781113,
    0.009371002204716206,
    -0.004087424837052822,
    -0.008557618595659733,
    0.0500607006251812,
    0.008653310127556324,
    -0.00953504629433155,
    -0.026752809062600136,
    -0.008215860463678837,
    0.00868065096437931,
    0.00342441420070827,
    0.024223800748586655,
    -0.01034159492701292,
    -0.008366233669221401,
    -0.0065446640364825726,
    -0.004675248172134161,
    -0.009111265651881695,
    -0.0025409699883311987,
    0.01062183640897274,
    0.008584958501160145,
    -0.011749637313187122,
    -0.035570163279771805,
    -0.008420915342867374,
    -0.000987680396065116,
    0.024155449122190475,
    0.008940387517213821,
    0.03794879838824272,
    0.0029083597473800182,
    -0.023663317784667015,
    -0.014148777350783348,
    -0.047080568969249725,
    -0.009863133542239666,
    0.031687792390584946,
    -0.003978061955422163,
    0.0023154099471867085,
    0.026657117530703545,
    -0.004490699153393507,
    0.022145912051200867,
    0.032508011907339096,
    0.0003616226022131741,
    0.009494034573435783,
    -0.0008578123524785042,
    -0.023540284484624863,
    0.007737399078905582,
    0.0067838947288692,
    -0.018044818192720413,
    0.016103632748126984,
    -0.00035606903838925064,
    0.035269416868686676,
    0.004090842325240374,
    0.01700587384402752,
    0.020642178133130074,
    -0.0057176100090146065,
    -0.012064054608345032,
    -0.022186923772096634,
    0.00325182662345469,
    0.018796686083078384,
    0.006548081524670124,
    -0.048721008002758026,
    0.030102036893367767,
    -0.0018762509571388364,
    0.01142838504165411,
    0.0033987825736403465,
    -0.0022453495766967535,
    0.024592898786067963,
    0.035734206438064575,
    -0.012856932356953621,
    0.00449753412976861,
    0.027203930541872978,
    -0.025153381749987602,
    -0.005543313454836607,
    0.011271175928413868,
    -0.009630737826228142,
    -0.012392141856253147,
    -0.005208390764892101,
    0.012474164366722107,
    -0.02025940828025341,
    -0.01950754225254059,
    0.025071360170841217,
    -0.016267675906419754,
    0.02664344757795334,
    -0.014845963567495346,
    -0.008598629385232925,
    -0.023143846541643143,
    -0.008776343427598476,
    -0.01588490791618824,
    -0.006845410913228989,
    -0.004907643888145685,
    0.005392939783632755,
    -0.016718797385692596,
    0.006794147193431854,
    -0.025577161461114883,
    -0.006872751750051975,
    -0.028652982786297798,
    0.021435055881738663,
    -0.03805816173553467,
    -0.009931485168635845,
    0.0068624988198280334,
    0.013355899602174759,
    0.0005263072089292109,
    -0.003978061955422163,
    -0.027449995279312134,
    0.007703223265707493,
    0.013540448620915413,
    0.014230799861252308,
    -0.036882515996694565,
    0.006069620605558157,
    -0.012357966043055058,
    0.011817988939583302,
    0.009056584909558296,
    0.01136003341525793,
    -0.020081695169210434,
    0.01574820466339588,
    0.041721805930137634,
    -0.020437123253941536,
    -0.0020146628376096487,
    -0.006794147193431854,
    -0.035406120121479034,
    -0.0007544305990450084,
    0.017634708434343338,
    0.005574071779847145,
    0.01425813976675272,
    -0.005652675870805979,
    -0.008427750319242477,
    0.009288979694247246,
    -0.02194085903465748,
    0.011305351741611958,
    -0.01565251313149929,
    0.028461599722504616,
    -0.002607612870633602,
    -0.02388204261660576,
    0.005505720153450966,
    -0.03310950845479965,
    0.0022556022740900517,
    0.034749943763017654,
    0.011776978150010109,
    0.0021171902772039175,
    0.009227463975548744,
    0.031660452485084534,
    -0.003943886142224073,
    -0.006818070542067289,
    0.029391180723905563,
    0.013212361373007298,
    -0.007012872491031885,
    0.0020197893027216196,
    0.008085992187261581,
    0.028570961207151413,
    0.013390075415372849,
    -0.014039414934813976,
    0.016787149012088776,
    -0.01211873535066843,
    -0.036062296479940414,
    0.013314888812601566,
    0.00520497327670455,
    0.004852962214499712,
    0.008127002976834774,
    -0.013930052518844604,
    -0.02423747070133686,
    -0.005765456240624189,
    -0.013526778668165207,
    -0.03876901790499687,
    0.0062439171597361565,
    -0.024770613759756088,
    -0.02154441922903061,
    -0.018495937809348106,
    -0.001615660497918725,
    0.00010306137119187042,
    0.008660146035254002,
    0.014750272035598755,
    -0.0163770392537117,
    -0.02299347333610058,
    0.0073751360177993774,
    0.005635587964206934,
    -0.005300665274262428,
    0.012385306879878044,
    0.01169495563954115,
    -0.004070336930453777,
    0.010109199211001396,
    -0.010491968132555485,
    -0.03551548346877098,
    -0.019480200484395027,
    -0.0037046559154987335,
    0.008981398306787014,
    0.03341025486588478,
    0.014203459024429321,
    0.02364964783191681,
    0.012098230421543121,
    0.013226031325757504,
    0.0011995702516287565,
    -0.02154441922903061,
    -0.009569221176207066,
    0.01647273078560829,
    -0.025467799976468086,
    -0.02753201685845852,
    -0.012221262790262699,
    0.0017164790770038962,
    0.018331894651055336,
    -0.02206389047205448,
    -0.006811235100030899,
    0.019972331821918488,
    0.009576057083904743,
    0.0281881932169199,
    -0.026329029351472855,
    -0.007402476388961077,
    0.0023427505511790514,
    0.0037866777274757624,
    0.001765179680660367,
    0.03748400881886482,
    -0.0191794540733099,
    -0.028625642880797386,
    0.01890604756772518,
    -0.011551417410373688,
    0.026205996051430702,
    0.011230165138840675,
    0.019890310242772102,
    0.001465287059545517,
    -0.0019070091657340527,
    0.03354695811867714,
    0.020478134974837303,
    -0.0008283357601612806,
    -0.005604829639196396,
    -0.01943919062614441,
    -0.008195354603230953,
    0.014681920409202576,
    0.005324588157236576,
    0.028106171637773514,
    -0.031031617894768715,
    0.03062150999903679,
    -0.002206047298386693,
    0.035242076963186264,
    0.0047504352405667305,
    -0.015611501410603523,
    0.02917245589196682,
    0.013670316897332668,
    -0.00477777561172843,
    0.007628036662936211,
    -0.02421013079583645,
    -0.04338958486914635,
    0.0014832293381914496,
    -0.013301217928528786,
    0.009726430289447308,
    0.014353832229971886,
    -0.0343945175409317,
    -0.0348593071103096,
    0.01871466264128685,
    0.0024640746414661407,
    0.032644715160131454,
    0.008147508837282658,
    0.028789686039090157,
    0.03111364133656025,
    0.008263706229627132,
    0.021298352628946304,
    -0.03373834118247032,
    -0.003909710329025984,
    -0.009740100242197514,
    0.021831495687365532,
    0.022583363577723503,
    0.030539486557245255,
    -0.016035281121730804,
    -0.03365631774067879,
    -0.007566520012915134,
    -0.015761874616146088,
    -0.029883312061429024,
    0.018632641062140465,
    0.030184058472514153,
    0.00930948555469513,
    -0.01736130192875862,
    -0.007299948949366808,
    -0.01029374822974205,
    0.016254005953669548,
    -0.02914511412382126,
    -0.017949124798178673,
    0.018659982830286026,
    -0.02437417395412922,
    -0.010826890356838703,
    0.01660943403840065,
    0.007689553312957287,
    0.005577489268034697,
    -0.008919881656765938,
    0.01271339412778616,
    -0.0030023432336747646,
    -0.045959603041410446,
    -0.017716730013489723,
    -0.01088840700685978,
    0.012884273193776608,
    0.026356371119618416,
    0.008892540819942951,
    -0.0034585900139063597,
    0.01740231364965439,
    0.001346526201814413,
    -0.004822204355150461,
    0.0013593421317636967,
    -0.021831495687365532,
    0.04697120934724808,
    0.0011474521597847342,
    -0.012686054222285748,
    -0.01818152144551277,
    -0.005721027497202158,
    0.011783813126385212,
    -0.019575893878936768,
    -0.001353361294604838,
    -0.014709260314702988,
    -0.0007975775515660644,
    -0.0016677785897627473,
    0.02105228789150715,
    -0.0002625127963256091,
    -0.0378941185772419,
    -0.014695590361952782,
    0.008865199983119965,
    -0.01409409660845995,
    -0.026493074372410774,
    -0.0017634708201512694,
    0.01979461871087551,
    -0.02416911907494068,
    -0.037675391882658005,
    -0.030238740146160126,
    -0.0002828046854119748,
    0.007436652202159166,
    0.009951990097761154,
    0.0378941185772419,
    -0.00825687125325203,
    0.030894914641976357,
    -0.024975668638944626,
    0.01299363560974598,
    0.004285644274204969,
    0.008475596085190773,
    -0.013260207138955593,
    0.012522010132670403,
    -0.004189951810985804,
    0.00028472705162130296,
    0.025331096723675728,
    -0.0031253760680556297,
    -0.03991732373833656,
    -0.04850228503346443,
    0.008304717019200325,
    0.03032076172530651,
    0.024647580459713936,
    -0.031168321147561073,
    0.0014755397569388151,
    0.014668249525129795,
    -0.006442136596888304,
    -0.014435854740440845,
    0.001497754012234509,
    0.015420117415487766,
    -0.0018711246084421873,
    0.0222279354929924,
    0.0025768547784537077,
    -0.010963593609631062,
    -0.0005143456510268152,
    -0.002323953900486231,
    -0.0014968996401876211,
    0.005423698108643293,
    -0.03967125713825226,
    -0.013267042115330696,
    -0.020778881385922432,
    0.003482513129711151,
    -0.030266080051660538,
    -0.003156134393066168,
    -0.006425048690289259,
    -0.0229251217097044,
    -0.005772291216999292,
    0.010027177631855011,
    0.012631372548639774,
    -0.0100613534450531,
    -0.01215291116386652,
    0.030512146651744843,
    -0.009097595699131489,
    -0.026561425998806953,
    -0.015843896195292473,
    -0.04166712611913681,
    -0.013793349266052246,
    -0.008079157210886478,
    -0.013294382952153683,
    -0.02519439347088337,
    -0.009562386199831963,
    0.04989665746688843,
    0.009562386199831963,
    -0.03146906942129135,
    -0.02542678825557232,
    -0.02315751649439335,
    -0.04068286344408989,
    0.0012055510887876153,
    -0.033984407782554626,
    0.01621299609541893,
    -0.0017856850754469633,
    0.018632641062140465,
    0.0067223780788481236,
    0.010478297248482704,
    0.006790729705244303,
    0.026301689445972443,
    -0.01611730270087719,
    -0.032480672001838684,
    -0.001427693641744554,
    -0.002479453571140766,
    0.00038725443300791085,
    -0.009562386199831963,
    -0.03852295130491257,
    0.007525509223341942,
    0.019616903737187386,
    0.011141307651996613,
    -0.013629306107759476,
    0.05394306778907776,
    0.0040600840002298355,
    -0.007628036662936211,
    -0.028160851448774338,
    0.002071053022518754,
    0.002457239432260394,
    -0.0075050038285553455,
    0.016295017674565315,
    -0.03354695811867714,
    -0.006548081524670124,
    0.0205874964594841,
    0.0190700925886631,
    -0.011086626909673214,
    -0.011339527554810047,
    0.01574820466339588,
    -0.002260728506371379,
    -0.0018847949104383588,
    -0.016089962795376778,
    -0.016992203891277313,
    0.009398343041539192,
    0.01815417967736721,
    0.007539179641753435,
    -0.010512473061680794,
    0.029937993735074997,
    0.029910651966929436,
    -0.005044346675276756,
    0.024524547159671783,
    -0.020464463159441948,
    0.005457873921841383,
    -0.03723794221878052,
    0.0009159112232737243,
    0.03447653725743294,
    0.020341431722044945,
    0.005840642843395472,
    -0.007764739915728569,
    0.029883312061429024,
    0.005297247786074877,
    -0.00853711273521185,
    -0.01507835928350687,
    -0.020860902965068817,
    -0.010683352127671242,
    -0.009671748615801334,
    0.006937685888260603,
    -0.003161260625347495,
    -0.006811235100030899,
    0.01188634056597948,
    0.017156247049570084,
    0.007559685036540031,
    -0.028297554701566696,
    -0.002211173763498664,
    -0.02798313833773136,
    0.0035132714547216892,
    -0.013034647330641747,
    -0.001395226689055562,
    -0.030430125072598457,
    0.0011303642531856894,
    -0.028735006228089333,
    -0.009740100242197514,
    -0.003347518853843212,
    0.16109101474285126,
    0.008427750319242477,
    0.0327540785074234,
    -0.009111265651881695,
    0.016459060832858086,
    0.0065139057114720345,
    -0.0007236723904497921,
    -0.0022453495766967535,
    -0.007395641412585974,
    0.016267675906419754,
    0.020505474880337715,
    -0.02016371674835682,
    -0.010963593609631062,
    0.012522010132670403,
    0.01775774173438549,
    -0.0020795969758182764,
    -0.02472960203886032,
    -0.03778475522994995,
    -0.016978533938527107,
    -0.032836101949214935,
    0.0009723012917675078,
    0.007990299724042416,
    -0.005673181265592575,
    -0.037374645471572876,
    0.006650608964264393,
    0.01142838504165411,
    -0.007956123910844326,
    0.007703223265707493,
    0.034285154193639755,
    0.024920986965298653,
    -0.007915113121271133,
    0.01401207409799099,
    -0.00670870766043663,
    -0.0038550293538719416,
    -0.017443323507905006,
    0.003499601036310196,
    -0.002496541477739811,
    -0.015092029236257076,
    0.016855500638484955,
    -0.0006993221468292177,
    -0.010765374638140202,
    -0.02554982155561447,
    0.007368300575762987,
    -0.04040945693850517,
    -0.014558887109160423,
    -0.02786010503768921,
    -0.012699724175035954,
    -0.001813025795854628,
    -0.015105700120329857,
    0.012720230035483837,
    -0.01874200440943241,
    0.0018899212591350079,
    0.044155120849609375,
    0.015584160573780537,
    -0.017156247049570084,
    -0.0281881932169199,
    0.0018215696327388287,
    0.023102834820747375,
    0.011291681788861752,
    0.028625642880797386,
    -0.01686917059123516,
    0.04128435626626015,
    -0.02344459295272827,
    0.021421385928988457,
    -0.022186923772096634,
    0.05186518281698227,
    0.0031834749970585108,
    -0.0223372969776392,
    -0.016418050974607468,
    -0.004343742970377207,
    -0.001953146420419216,
    -0.008598629385232925,
    0.013786514289677143,
    0.0018147345399484038,
    -0.023854702711105347,
    -0.033000145107507706,
    0.052439335733652115,
    0.017156247049570084,
    0.03466792404651642,
    0.026028282940387726,
    -0.01458622794598341,
    0.018140509724617004,
    -0.001658380264416337,
    0.004330073017627001,
    0.029199795797467232,
    -0.01822253130376339,
    0.03584356978535652,
    -0.0025529316626489162,
    -0.028297554701566696,
    -0.012228097766637802,
    0.014189789071679115,
    -0.01824987307190895,
    -0.010649176314473152,
    -0.02575487643480301,
    -0.006975279189646244,
    0.013294382952153683,
    -0.0019514376763254404,
    0.016732467338442802,
    0.001819860888645053,
    0.016500072553753853,
    -0.033957067877054214,
    0.06534411013126373,
    0.010245902463793755,
    -0.0058098845183849335,
    0.002597360173240304,
    0.020997606217861176,
    0.00649681780487299,
    0.021653780713677406,
    0.008981398306787014,
    -0.024196460843086243,
    -0.011373703368008137,
    -0.03483196720480919,
    0.025741206482052803,
    -0.015925919637084007,
    0.022938791662454605,
    -0.001180773600935936,
    -0.01025957241654396,
    -0.012371636927127838,
    -0.04322554171085358,
    0.02140771597623825,
    0.0065070707350969315,
    -0.01369765680283308,
    -0.0022624374832957983,
    -0.01634969934821129,
    -0.021722132340073586,
    -0.015966929495334625,
    -0.0030091784428805113,
    0.00980161689221859,
    0.00198561348952353,
    -0.005574071779847145,
    0.00973326526582241,
    -0.022091232240200043,
    0.027149248868227005,
    0.006872751750051975,
    -0.009562386199831963,
    -0.0017139159608632326,
    0.01401207409799099,
    -0.008140673860907555,
    -0.006595927756279707,
    0.017880775034427643,
    -0.017183588817715645,
    -0.012132406234741211,
    -0.021517077460885048,
    0.015351765789091587,
    0.013089328072965145,
    -0.006582257337868214,
    -0.015010007657110691,
    0.004982830490916967,
    0.0009142024209722877,
    0.010163879953324795,
    -0.02016371674835682,
    -0.010444121435284615,
    -0.012241768650710583,
    0.005618500057607889,
    -0.018509607762098312,
    -0.017019543796777725,
    -0.037210602313280106,
    -0.007224762346595526,
    0.033164188265800476,
    -0.002153074834495783,
    -0.05993066728115082,
    -0.01490064524114132,
    -0.015242403373122215,
    -0.005960258189588785,
    -0.04218659549951553,
    -0.012856932356953621,
    -0.17071491479873657,
    -0.011633438989520073,
    0.023622307926416397,
    -0.025112371891736984,
    -0.01032792404294014,
    -0.002023206790909171,
    0.006278092972934246,
    0.000402419944293797,
    -0.021995538845658302,
    -0.020232068374753,
    0.015802886337041855,
    0.00034325310843996704,
    -0.008250036276876926,
    -0.035734206438064575,
    0.023759011179208755,
    -0.0076758828945457935,
    0.0030331015586853027,
    0.03193385899066925,
    0.02505769021809101,
    -0.002805832540616393,
    0.03838624805212021,
    0.005932917352765799,
    0.010635506361722946,
    0.002886145608499646,
    0.015187721699476242,
    -0.032836101949214935,
    -0.0174296535551548,
    -0.010956758633255959,
    -0.002286360366269946,
    -0.004839292261749506,
    0.008571288548409939,
    0.01716991700232029,
    0.034749943763017654,
    0.03045746497809887,
    0.021749474108219147,
    -0.019972331821918488,
    0.03390238434076309,
    0.02236463874578476,
    0.006442136596888304,
    0.042377982288599014,
    0.021763144060969353,
    0.020245738327503204,
    0.016336027532815933,
    -0.021065957844257355,
    -0.01874200440943241,
    0.017935454845428467,
    -0.00646947743371129,
    -0.03015671856701374,
    0.02421013079583645,
    -0.005714192520827055,
    0.0191794540733099,
    -0.020109035074710846,
    -0.008981398306787014,
    -0.0026759644970297813,
    0.002194085856899619,
    0.0006954773562029004,
    0.02262437343597412,
    0.007990299724042416,
    0.020054355263710022,
    0.01789444498717785,
    -0.0075050038285553455,
    -0.03838624805212021,
    0.015105700120329857,
    0.013772844336926937,
    -0.045932263135910034,
    -0.033957067877054214,
    0.014845963567495346,
    0.03740198537707329,
    -0.014490535482764244,
    -0.0061892359517514706,
    -0.0009577765595167875,
    -0.0037764250300824642,
    0.002301739528775215,
    -0.01864631101489067,
    0.01986297033727169,
    -0.0006190090207383037,
    -0.036855172365903854,
    0.0341484509408474,
    0.009213793091475964,
    0.011790648102760315,
    0.02203655056655407,
    0.03163311257958412,
    0.016363369300961494,
    0.02285677008330822,
    0.00337144173681736,
    -0.024059757590293884,
    -0.02243299037218094,
    -0.01053981389850378,
    -0.02575487643480301,
    -0.007669047452509403,
    0.029609905555844307,
    -0.0016404379857704043,
    0.012111900374293327,
    -0.008325222879648209,
    0.01009552925825119,
    0.010799550451338291,
    0.007990299724042416,
    -0.0023752176202833652,
    0.0018386575393378735,
    -0.013130338862538338,
    0.013642976060509682,
    -0.0015276578487828374,
    -0.007826256565749645,
    -0.0051913028582930565,
    0.033328231424093246,
    0.027778083458542824,
    -0.006343027111142874,
    0.014654579572379589,
    0.031058959662914276,
    0.0037798425182700157,
    -0.0073888059705495834,
    -0.003031392814591527,
    0.035406120121479034,
    0.022733736783266068,
    -0.024879977107048035,
    0.04623300954699516,
    0.0281881932169199,
    0.004159193951636553,
    -0.02414177916944027,
    -0.010321089066565037,
    0.038823697715997696,
    0.010423616506159306,
    0.006804400123655796,
    -0.002414519665762782,
    -0.01967158541083336,
    -0.016554754227399826,
    -0.08880237489938736,
    -0.03611697629094124,
    0.01845492795109749,
    0.017580026760697365,
    -0.023171186447143555,
    -0.00579621409997344,
    -0.009159112349152565,
    0.02229628711938858,
    0.0036192163825035095,
    -0.005064852070063353,
    0.02611030451953411,
    0.03516005352139473,
    -0.015871237963438034,
    -0.006055950187146664,
    -0.008865199983119965,
    0.005256236530840397,
    -0.002978420117869973,
    0.0058884890750050545,
    -0.0007215364021249115,
    0.02194085903465748,
    -0.01218708697706461,
    0.017443323507905006,
    -0.009446188807487488,
    -0.012016207911074162,
    0.003277458483353257,
    0.0016908473335206509,
    -0.023635977879166603,
    -0.0139778982847929,
    0.018331894651055336,
    0.015707192942500114,
    -0.003868699539452791,
    -0.022309957072138786,
    0.0009201831999234855,
    -0.009993001818656921,
    0.0031834749970585108,
    -0.009876803494989872,
    -0.02039611153304577,
    -0.022282615303993225,
    0.03838624805212021,
    -0.012330625206232071,
    0.01595325954258442,
    -0.016130974516272545,
    0.009302650578320026,
    -0.003171513555571437,
    -0.0362536795437336,
    -0.009951990097761154,
    -0.0087148267775774,
    0.018632641062140465,
    0.010984099470078945,
    -0.009268474765121937,
    -0.045139387249946594,
    -0.00256489310413599,
    -0.002833173144608736,
    -0.006209741346538067,
    0.018564289435744286,
    -0.019534882158041,
    -0.009630737826228142,
    0.0132191963493824,
    -0.018536949530243874,
    0.007867267355322838,
    0.0038789522368460894,
    -0.01995866186916828,
    -0.02308916486799717,
    0.036554425954818726,
    0.019780948758125305,
    0.0442098043859005,
    0.02486630529165268,
    -0.002110355067998171,
    0.033164188265800476,
    -0.027600368484854698,
    -0.022938791662454605,
    0.014709260314702988,
    -0.013861700892448425,
    0.024715932086110115,
    -0.01604895107448101,
    -0.014804952777922153,
    -0.0019172618631273508,
    -0.01864631101489067,
    0.028078829869627953,
    -0.013656646013259888,
    -0.013820690102875233,
    -0.010615000501275063,
    -0.012371636927127838,
    -0.0402454137802124,
    0.004285644274204969,
    -0.0010594495106488466,
    0.005953422747552395,
    0.010157044976949692,
    0.005680016707628965,
    -0.030430125072598457,
    0.018304554745554924,
    -0.013827525079250336,
    0.026711799204349518,
    0.00902924407273531,
    0.006654026452451944,
    -0.01644539088010788,
    -0.00664377398788929,
    -0.009186453185975552,
    -0.01194102130830288,
    0.012371636927127838,
    -0.0587276816368103,
    -0.03291812166571617,
    -0.0865604430437088,
    -0.006141389720141888,
    0.020040683448314667,
    -0.00717008113861084,
    0.02252868190407753,
    -0.027942126616835594,
    0.011797483079135418,
    -0.021353034302592278,
    0.0014208585489541292,
    -0.02729962207376957,
    -0.04883037135004997,
    0.007060718722641468,
    0.014996337704360485,
    0.011783813126385212,
    -0.010731198824942112,
    0.02512604184448719,
    0.03535144031047821,
    -0.009165947325527668,
    0.034585900604724884,
    -0.013335393741726875,
    0.02414177916944027,
    -9.542521729599684e-05,
    0.03401174768805504,
    -0.00421729264780879,
    -0.02805148996412754,
    -0.004986247979104519,
    -0.007402476388961077,
    0.01995866186916828,
    -0.015310754999518394,
    -0.012952624820172787,
    0.002474327338859439,
    -0.014367503114044666,
    -0.006524158641695976,
    -0.003540612058714032,
    -0.0020334594883024693,
    0.010423616506159306,
    0.00024820168619044125,
    0.006141389720141888,
    0.011045616120100021,
    0.02295246161520481,
    -0.02061483822762966,
    -0.045959603041410446,
    0.014777611941099167,
    -0.001717333565466106,
    0.008448255248367786,
    -0.0012149494141340256,
    -0.004309567157179117,
    -0.01618565432727337,
    0.03062150999903679,
    -0.006353279575705528,
    0.044182464480400085,
    0.012638207525014877,
    -0.04363565146923065,
    -0.0279557965695858,
    -0.00692401546984911,
    -0.005338258575648069,
    0.02647940255701542,
    -0.013882206752896309,
    -0.023786351084709167,
    -0.01088840700685978,
    -0.0005237439763732255,
    0.02166745252907276,
    0.011995702981948853,
    0.0024914152454584837,
    -0.008694320917129517,
    -0.010751703754067421,
    -0.0211753211915493,
    -0.029555223882198334,
    0.0010372352553531528,
    -0.01647273078560829,
    -0.032508011907339096,
    -0.02519439347088337,
    0.009931485168635845,
    0.007867267355322838,
    0.01208455953747034,
    0.004641072358936071,
    -0.009931485168635845,
    0.0201227068901062,
    -0.04308883845806122,
    0.003653392195701599,
    0.02781909517943859,
    -0.02121633104979992,
    -0.023403581231832504,
    0.009658078663051128,
    0.04472927749156952,
    -0.01789444498717785,
    -0.027244940400123596,
    -0.01269288919866085,
    -0.009473529644310474,
    0.016855500638484955,
    -0.002211173763498664,
    0.0006108922534622252,
    -0.010738033801317215,
    0.01756635680794716,
    -0.010519308969378471,
    0.005249401554465294,
    0.01539277657866478,
    -0.014285480603575706,
    0.03327355161309242,
    0.011735966429114342,
    0.02325320802628994,
    0.0020693442784249783,
    0.013793349266052246,
    -0.006797565147280693,
    -0.02206389047205448,
    -0.021230001002550125,
    -0.018441257998347282,
    -0.0029117774683982134,
    0.007880937308073044,
    0.020929254591464996,
    -0.0011551417410373688,
    -0.027190260589122772,
    -0.005703939590603113,
    0.019685255363583565,
    0.011325857602059841,
    0.008181684650480747,
    -0.004480446223169565,
    -0.011510406620800495,
    -0.008817354217171669,
    0.005953422747552395,
    -0.0011397626949474216,
    0.004299314692616463,
    0.025495139881968498,
    -0.020136376842856407,
    0.00460347905755043,
    -0.0066095981746912,
    0.007094894535839558,
    -0.023827360942959785,
    0.008318387903273106,
    -0.017210928723216057,
    -0.03278141841292381,
    -0.019384508952498436,
    -0.021093297749757767,
    -0.04363565146923065,
    -0.031851839274168015,
    0.0012098230654373765,
    -0.001728440634906292,
    0.00463765487074852,
    0.004811951424926519,
    0.07759271562099457,
    -0.0010585951386019588,
    -0.01749800518155098,
    -0.02440151572227478,
    0.009131771512329578,
    -0.002517047105357051,
    0.029391180723905563,
    0.02440151572227478,
    -0.010546648874878883,
    -0.017183588817715645,
    0.01969892531633377,
    -0.005727862473577261,
    -0.013301217928528786,
    -0.008625970222055912,
    0.0022949043195694685,
    0.006141389720141888,
    -0.023991405963897705,
    0.010471462272107601,
    -0.022569693624973297,
    0.012316955253481865,
    0.039069764316082,
    -0.00317834853194654,
    -0.0021872506476938725,
    -0.0229251217097044,
    -0.027805423364043236,
    -0.004306149668991566,
    0.02788744680583477,
    0.016759807243943214,
    0.0030604421626776457,
    -0.04494800046086311,
    0.016404379159212112,
    0.028625642880797386,
    -0.014285480603575706,
    -0.020464463159441948,
    -0.002667420543730259,
    -0.002394014270976186,
    0.002998925745487213,
    -0.006079873535782099,
    0.011209659278392792,
    0.03245333209633827,
    0.004282226786017418,
    0.011120802722871304,
    -0.010075023397803307,
    -0.009302650578320026,
    0.024579228833317757,
    -0.027436325326561928,
    0.01058766059577465,
    0.005922664888203144,
    0.007573355454951525
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: utilities"
  ],
  "description": "automated image processing for django models.\n|build status|_\n\n.. |build status| image:: https://github.com/matthewwithanm/django-imagekit/actions/workflows/python.yml/badge.svg?branch=develop\n.. _build status: https://github.com/matthewwithanm/django-imagekit/actions/workflows/python.yml\n\nimagekit is a django app for processing images. need a thumbnail? a\nblack-and-white version of a user-uploaded image? imagekit will make them for\nyou. if you need to programmatically generate one image from another, you need\nimagekit.\n\nimagekit comes with a bunch of image processors for common tasks like resizing\nand cropping, but you can also create your own. for an idea of what's possible,\ncheck out the `instakit`__ project.\n\n**for the complete documentation on the latest stable version of imagekit, see**\n`imagekit on rtd`_.\n\n.. _`imagekit on rtd`: http://django-imagekit.readthedocs.org\n__ https://github.com/fish2000/instakit\n\n\ninstallation\n============\n\n1. install `pillow`_. (if you're using an ``imagefield`` in django,\n   you should have already done this.)\n2. ``pip install django-imagekit``\n3. add ``'imagekit'`` to your ``installed_apps`` list in your project's ``settings.py``\n\n.. _`pillow`: http://pypi.python.org/pypi/pillow\n\n\nusage overview\n==============\n\n.. _specs:\n\nspecs\n-----\n\nyou have one image and you want to do something to it to create another image.\nbut how do you tell imagekit what to do? by defining an image spec.\n\nan **image spec** is a type of **image generator** that generates a new image\nfrom a source image.\n\n\ndefining specs in models\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nthe easiest way to use define an image spec is by using an imagespecfield on\nyour model class:\n\n.. code-block:: python\n\n    from django.db import models\n    from imagekit.models import imagespecfield\n    from imagekit.processors import resizetofill\n\n    class profile(models.model):\n        avatar = models.imagefield(upload_to='avatars')\n        avatar_thumbnail = imagespecfield(source='avatar',\n                                          processors=[resizetofill(100, 50)],\n                                          format='jpeg',\n                                          options={'quality': 60})\n\n    profile = profile.objects.all()[0]\n    print(profile.avatar_thumbnail.url)    # > /media/cache/images/982d5af84cddddfd0fbf70892b4431e4.jpg\n    print(profile.avatar_thumbnail.width)  # > 100\n\nas you can probably tell, imagespecfields work a lot like django's\nimagefields. the difference is that they're automatically generated by\nimagekit based on the instructions you give. in the example above, the avatar\nthumbnail is a resized version of the avatar image, saved as a jpeg with a\nquality of 60.\n\nsometimes, however, you don't need to keep the original image (the avatar in\nthe above example); when the user uploads an image, you just want to process it\nand save the result. in those cases, you can use the ``processedimagefield``\nclass:\n\n.. code-block:: python\n\n    from django.db import models\n    from imagekit.models import processedimagefield\n    from imagekit.processors import resizetofill\n\n    class profile(models.model):\n        avatar_thumbnail = processedimagefield(upload_to='avatars',\n                                               processors=[resizetofill(100, 50)],\n                                               format='jpeg',\n                                               options={'quality': 60})\n\n    profile = profile.objects.all()[0]\n    print(profile.avatar_thumbnail.url)    # > /media/avatars/my-avatar.jpg\n    print(profile.avatar_thumbnail.width)  # > 100\n\nthis is pretty similar to our previous example. we don't need to specify a\n\"source\" any more since we're not processing another image field, but we do need\nto pass an \"upload_to\" argument. this behaves exactly as it does for django\nimagefields.\n\n.. note::\n\n    you might be wondering why we didn't need an \"upload_to\" argument for our\n    imagespecfield. the reason is that processedimagefields really are just like\n    imagefields\u2014they save the file path in the database and you need to run\n    syncdb (or create a migration) when you add one to your model.\n\n    imagespecfields, on the other hand, are virtual\u2014they add no fields to your\n    database and don't require a database. this is handy for a lot of reasons,\n    but it means that the path to the image file needs to be programmatically\n    constructed based on the source image and the spec.\n\n\ndefining specs outside of models\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ndefining specs as models fields is one very convenient way to process images,\nbut it isn't the only way. sometimes you can't (or don't want to) add fields to\nyour models, and that's okay. you can define image spec classes and use them\ndirectly. this can be especially useful for doing image processing in views\u2014\nparticularly when the processing being done depends on user input.\n\n.. code-block:: python\n\n    from imagekit import imagespec\n    from imagekit.processors import resizetofill\n\n    class thumbnail(imagespec):\n        processors = [resizetofill(100, 50)]\n        format = 'jpeg'\n        options = {'quality': 60}\n\nit's probably not surprising that this class is capable of processing an image\nin the exact same way as our imagespecfield above. however, unlike with the\nimage spec model field, this class doesn't define what source the spec is acting\non, or what should be done with the result; that's up to you:\n\n.. code-block:: python\n\n    source_file = open('/path/to/myimage.jpg', 'rb')\n    image_generator = thumbnail(source=source_file)\n    result = image_generator.generate()\n\n.. note::\n\n    you don't have to use ``open``! you can use whatever file-like object you\n    want\u2014including a model's ``imagefield``.\n\nthe result of calling ``generate()`` on an image spec is a file-like object\ncontaining our resized image, with which you can do whatever you want. for\nexample, if you wanted to save it to disk:\n\n.. code-block:: python\n\n    dest = open('/path/to/dest.jpg', 'wb')\n    dest.write(result.read())\n    dest.close()\n\n\nusing specs in templates\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nif you have a model with an imagespecfield or processedimagefield, you can\neasily use those processed image just as you would a normal image field:\n\n.. code-block:: html\n\n    <img src=\"{{ profile.avatar_thumbnail.url }}\" />\n\n(this is assuming you have a view that's setting a context variable named\n\"profile\" to an instance of our profile model.)\n\nbut you can also generate processed image files directly in your template\u2014from\nany image\u2014without adding anything to your model. in order to do this, you'll\nfirst have to define an image generator class (remember, specs are a type of\ngenerator) in your app somewhere, just as we did in the last section. you'll\nalso need a way of referring to the generator in your template, so you'll need\nto register it.\n\n.. code-block:: python\n\n    from imagekit import imagespec, register\n    from imagekit.processors import resizetofill\n\n    class thumbnail(imagespec):\n        processors = [resizetofill(100, 50)]\n        format = 'jpeg'\n        options = {'quality': 60}\n\n    register.generator('myapp:thumbnail', thumbnail)\n\n.. note::\n\n    you can register your generator with any id you want, but choose wisely!\n    if you pick something too generic, you could have a conflict with another\n    third-party app you're using. for this reason, it's a good idea to prefix\n    your generator ids with the name of your app. also, imagekit recognizes\n    colons as separators when doing pattern matching (e.g. in the generateimages\n    management command), so it's a good idea to use those too!\n\n.. warning::\n\n    this code can go in any file you want\u2014but you need to make sure it's loaded!\n    in order to keep things simple, imagekit will automatically try to load an\n    module named \"imagegenerators\" in each of your installed apps. so why don't\n    you just save yourself the headache and put your image specs in there?\n\nnow that we've created an image generator class and registered it with imagekit,\nwe can use it in our templates!\n\n\ngenerateimage\n\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nthe most generic template tag that imagekit gives you is called \"generateimage\".\nit requires at least one argument: the id of a registered image generator.\nadditional keyword-style arguments are passed to the registered generator class.\nas we saw above, image spec constructors expect a source keyword argument, so\nthat's what we need to pass to use our thumbnail spec:\n\n.. code-block:: html\n\n    {% load imagekit %}\n\n    {% generateimage 'myapp:thumbnail' source=source_file %}\n\nthis will output the following html:\n\n.. code-block:: html\n\n    <img src=\"/media/cache/images/982d5af84cddddfd0fbf70892b4431e4.jpg\" width=\"100\" height=\"50\" />\n\nyou can also add additional html attributes; just separate them from your\nkeyword args using two dashes:\n\n.. code-block:: html\n\n    {% load imagekit %}\n\n    {% generateimage 'myapp:thumbnail' source=source_file -- alt=\"a picture of me\" id=\"mypicture\" %}\n\nnot generating html image tags? no problem. the tag also functions as an\nassignment tag, providing access to the underlying file object:\n\n.. code-block:: html\n\n    {% load imagekit %}\n\n    {% generateimage 'myapp:thumbnail' source=source_file as th %}\n    <a href=\"{{ th.url }}\">click to download a cool {{ th.width }} x {{ th.height }} image!</a>\n\n\nthumbnail\n\"\"\"\"\"\"\"\"\"\n\nbecause it's such a common use case, imagekit also provides a \"thumbnail\"\ntemplate tag:\n\n.. code-block:: html\n\n    {% load imagekit %}\n\n    {% thumbnail '100x50' source_file %}\n\nlike the generateimage tag, the thumbnail tag outputs an <img> tag:\n\n.. code-block:: html\n\n    <img src=\"/media/cache/images/982d5af84cddddfd0fbf70892b4431e4.jpg\" width=\"100\" height=\"50\" />\n\ncomparing this syntax to the generateimage tag above, you'll notice a few\ndifferences.\n\nfirst, we didn't have to specify an image generator id; unless we tell it\notherwise, thumbnail tag uses the generator registered with the id\n\"imagekit:thumbnail\". **it's important to note that this tag is *not* using the\nthumbnail spec class we defined earlier**; it's using the generator registered\nwith the id \"imagekit:thumbnail\" which, by default, is\n``imagekit.generatorlibrary.thumbnail``.\n\nsecond, we're passing two positional arguments (the dimensions and the source\nimage) as opposed to the keyword arguments we used with the generateimage tag.\n\nlike with the generateimage tag, you can also specify additional html attributes\nfor the thumbnail tag, or use it as an assignment tag:\n\n.. code-block:: html\n\n    {% load imagekit %}\n\n    {% thumbnail '100x50' source_file -- alt=\"a picture of me\" id=\"mypicture\" %}\n    {% thumbnail '100x50' source_file as th %}\n\n\nusing specs in forms\n^^^^^^^^^^^^^^^^^^^^\n\nin addition to the model field above, there's also a form field version of the\n``processedimagefield`` class. the functionality is basically the same (it\nprocesses an image once and saves the result), but it's used in a form class:\n\n.. code-block:: python\n\n    from django import forms\n    from imagekit.forms import processedimagefield\n    from imagekit.processors import resizetofill\n\n    class profileform(forms.form):\n        avatar_thumbnail = processedimagefield(spec_id='myapp:profile:avatar_thumbnail',\n                                               processors=[resizetofill(100, 50)],\n                                               format='jpeg',\n                                               options={'quality': 60})\n\nthe benefit of using ``imagekit.forms.processedimagefield`` (as opposed to\n``imagekit.models.processedimagefield`` above) is that it keeps the logic for\ncreating the image outside of your model (in which you would use a normal django\nimagefield). you can even create multiple forms, each with their own\nprocessedimagefield, that all store their results in the same image field.\n\n\nprocessors\n----------\n\nso far, we've only seen one processor: ``imagekit.processors.resizetofill``. but\nimagekit is capable of far more than just resizing images, and that power comes\nfrom its processors.\n\nprocessors take a pil image object, do something to it, and return a new one.\na spec can make use of as many processors as you'd like, which will all be run\nin order.\n\n.. code-block:: python\n\n    from imagekit import imagespec\n    from imagekit.processors import trimbordercolor, adjust\n\n    class myspec(imagespec):\n        processors = [\n            trimbordercolor(),\n            adjust(contrast=1.2, sharpness=1.1),\n        ]\n        format = 'jpeg'\n        options = {'quality': 60}\n\nthe ``imagekit.processors`` module contains processors for many common\nimage manipulations, like resizing, rotating, and color adjustments. however,\nif they aren't up to the task, you can create your own. all you have to do is\ndefine a class that implements a ``process()`` method:\n\n.. code-block:: python\n\n    class watermark(object):\n        def process(self, image):\n            # code for adding the watermark goes here.\n            return image\n\nthat's all there is to it! to use your fancy new custom processor, just include\nit in your spec's ``processors`` list:\n\n.. code-block:: python\n\n    from imagekit import imagespec\n    from imagekit.processors import trimbordercolor, adjust\n    from myapp.processors import watermark\n\n    class myspec(imagespec):\n        processors = [\n            trimbordercolor(),\n            adjust(contrast=1.2, sharpness=1.1),\n            watermark(),\n        ]\n        format = 'jpeg'\n        options = {'quality': 60}\n\nnote that when you import a processor from ``imagekit.processors``, imagekit\nin turn imports the processor from `pilkit`_. so if you are looking for\navailable processors, look at pilkit.\n\n.. _`pilkit`: https://github.com/matthewwithanm/pilkit\n\n\nadmin\n-----\n\nimagekit also contains a class named ``imagekit.admin.adminthumbnail``\nfor displaying specs (or even regular imagefields) in the\n`django admin change list`_. adminthumbnail is used as a property on\ndjango admin classes:\n\n.. code-block:: python\n\n    from django.contrib import admin\n    from imagekit.admin import adminthumbnail\n    from .models import photo\n\n    class photoadmin(admin.modeladmin):\n        list_display = ('__str__', 'admin_thumbnail')\n        admin_thumbnail = adminthumbnail(image_field='thumbnail')\n\n    admin.site.register(photo, photoadmin)\n\nto use specs defined outside of models:\n\n.. code-block:: python\n    \n    from django.contrib import admin\n    from imagekit.admin import adminthumbnail\n    from imagekit import imagespec\n    from imagekit.processors import resizetofill\n    from imagekit.cachefiles import imagecachefile\n\n    from .models import photo\n\n    class adminthumbnailspec(imagespec):\n        processors = [resizetofill(100, 30)]\n        format = 'jpeg'\n        options = {'quality': 60 }\n\n    def cached_admin_thumb(instance):\n        # `image` is the name of the image field on the model\n        cached = imagecachefile(adminthumbnailspec(instance.image))\n        # only generates the first time, subsequent calls use cache\n        cached.generate()\n        return cached\n\n    class photoadmin(admin.modeladmin):\n        list_display = ('__str__', 'admin_thumbnail')\n        admin_thumbnail = adminthumbnail(image_field=cached_admin_thumb)\n\n    admin.site.register(photo, photoadmin)\n\n \nadminthumbnail can even use a custom template. for more information, see\n``imagekit.admin.adminthumbnail``.\n\n.. _`django admin change list`: https://docs.djangoproject.com/en/dev/intro/tutorial02/#customize-the-admin-change-list\n\n\nmanagement commands\n-------------------\n\nimagekit has one management command\u2014``generateimages``\u2014which will generate cache\nfiles for all of your registered image generators. you can also pass it a list\nof generator ids in order to generate images selectively.\n\n\ncommunity\n=========\n\nplease use `the github issue tracker <https://github.com/matthewwithanm/django-imagekit/issues>`_\nto report bugs with django-imagekit. `a mailing list <https://groups.google.com/forum/#!forum/django-imagekit>`_\nalso exists to discuss the project and ask questions, as well as the official\n`#imagekit <irc://irc.freenode.net/imagekit>`_ channel on freenode.\n\n\ncontributing\n============\n\nwe love contributions! and you don't have to be an expert with the library\u2014or\neven django\u2014to contribute either: imagekit's processors are standalone classes\nthat are completely separate from the more intimidating internals of django's\norm. if you've written a processor that you think might be useful to other\npeople, open a pull request so we can take a look!\n\nyou can also check out our list of `open, contributor-friendly issues`__ for\nideas.\n\ncheck out our `contributing guidelines`_ for more information about pitching in\nwith imagekit.\n\n__ https://github.com/matthewwithanm/django-imagekit/issues?labels=contributor-friendly&state=open\n.. _`contributing guidelines`: https://github.com/matthewwithanm/django-imagekit/blob/develop/contributing.rst\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "django-imagekit",
  "package_url": "https://pypi.org/project/django-imagekit/",
  "project_url": "https://pypi.org/project/django-imagekit/",
  "project_urls": {
    "Homepage": "http://github.com/matthewwithanm/django-imagekit/"
  },
  "release_url": "https://pypi.org/project/django-imagekit/5.0.0/",
  "requires_dist": [
    "django-appconf",
    "pilkit",
    "django-celery >=3.0 ; extra == 'async'",
    "django-dramatiq >=0.4.0 ; extra == 'async_dramatiq'",
    "django-rq >=0.6.0 ; extra == 'async_rq'"
  ],
  "requires_python": "",
  "summary": "automated image processing for django models.",
  "version": "5.0.0",
  "releases": [],
  "developers": [
    "m@tthewwithanm.com",
    "matthew_tretter",
    "venelin.stoykov@industria.tech",
    "venelin_stoykov"
  ],
  "kwds": "image_generator imagekit djangoproject generateimage generateimages",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_django_imagekit",
  "homepage": "http://github.com/matthewwithanm/django-imagekit/",
  "release_count": 41,
  "dependency_ids": [
    "pypi_django_appconf",
    "pypi_django_celery",
    "pypi_django_dramatiq",
    "pypi_django_rq",
    "pypi_pilkit"
  ],
  "documentation_summary": "The HTML text describes the GitHub repository for django-imagekit, a Django app for automated image processing, currently at version 4.0. It allows for easy creation of image variations like thumbnails or black-and-white versions from user-uploaded images. The app includes common image processors for tasks like resizing and cropping, and users can also create their own processors. Installation involves adding 'imagekit' to the INSTALLED_APPS in Django's settings.py and installing Pillow. Usage involves defining image specs in models or directly in code for processing images. The documentation provides examples of defining specs in models, outside models, and usage in templates and forms. It also mentions custom processors, admin integration, and a management command for generating cache files for all registered image generators. The repository has 2.2k stars, 278 forks, and is licensed under the BSD-3-Clause license.",
  "embedding": [
    -0.009751537814736366,
    0.005280324257910252,
    -0.014374020509421825,
    -0.012263298034667969,
    0.005294395610690117,
    0.029606401920318604,
    0.0011142856674268842,
    -0.029831545427441597,
    -0.015169059857726097,
    -0.02805853821337223,
    0.008893177844583988,
    0.0033472541254013777,
    -0.02600410208106041,
    0.015577132813632488,
    0.0006459690630435944,
    -0.00964600220322609,
    0.02593374438583851,
    -0.011426044628024101,
    -0.007802637759596109,
    -0.013775982894003391,
    0.02266916073858738,
    0.02396373637020588,
    -0.012199976481497288,
    -0.006451775319874287,
    -0.0160977765917778,
    0.027847466990351677,
    0.017828570678830147,
    -0.02663731947541237,
    -0.019643791019916534,
    0.007289028726518154,
    0.01139086578041315,
    -0.009202750399708748,
    -0.025596028193831444,
    -0.02475173957645893,
    -0.02876211330294609,
    -0.019474932923913002,
    0.01339605264365673,
    -0.014775058254599571,
    0.023035019636154175,
    0.0024167774245142937,
    0.026215175166726112,
    -0.004411410074681044,
    0.002946216845884919,
    -0.02732682228088379,
    -0.0077744945883750916,
    0.010131468065083027,
    0.012875407934188843,
    -0.024836169555783272,
    -0.004249588120728731,
    0.013487516902387142,
    0.0015399480471387506,
    0.030844692140817642,
    -0.016913924366235733,
    -0.02138865552842617,
    0.010518434457480907,
    -0.02406223677098751,
    -0.010863185860216618,
    -0.00796446017920971,
    0.00995557475835085,
    0.003234682371839881,
    0.01666063629090786,
    -0.014915772713720798,
    -0.026848390698432922,
    -0.034981708973646164,
    -0.031154265627264977,
    -0.00326458434574306,
    -0.03256141394376755,
    0.024343667551875114,
    -0.00733827892690897,
    -0.004541571252048016,
    0.05062919855117798,
    0.03886543959379196,
    -0.008597676642239094,
    -0.01033550500869751,
    0.034306276589632034,
    -0.020502151921391487,
    -0.022415874525904655,
    0.02262694574892521,
    -0.013600088655948639,
    0.00011312153947073966,
    0.013163872994482517,
    -0.026243317872285843,
    -0.012798014096915722,
    0.04654846712946892,
    0.02409037947654724,
    0.008386604487895966,
    -0.01867285929620266,
    0.03602299839258194,
    0.0066734012216329575,
    0.013994090259075165,
    0.0005070131737738848,
    0.007246814202517271,
    0.020206650719046593,
    0.01136975921690464,
    -0.01946086250245571,
    0.03070397675037384,
    0.0034738974645733833,
    0.014887630008161068,
    -0.00833031814545393,
    -0.011559723876416683,
    -0.011376794427633286,
    0.03073212131857872,
    -0.021627871319651604,
    -0.015197202563285828,
    -0.04522575065493584,
    -0.006958348676562309,
    -0.002603224478662014,
    0.005329574458301067,
    0.047814901918172836,
    -0.007457886356860399,
    -0.02614481747150421,
    0.045085035264492035,
    0.0020174989476799965,
    -0.05009448155760765,
    0.020544366911053658,
    -0.020966511219739914,
    0.007194045931100845,
    -0.019601576030254364,
    -0.015070559456944466,
    -0.02665138989686966,
    0.02081172540783882,
    0.013283480890095234,
    0.025539742782711983,
    -0.025103526189923286,
    0.012199976481497288,
    0.0028389219660311937,
    -0.0017694891430437565,
    -0.004594339523464441,
    -0.011538616381585598,
    -0.03199855238199234,
    0.020234793424606323,
    -0.0029743597842752934,
    -0.002573322504758835,
    0.008112210780382156,
    -0.003011297434568405,
    0.004903912078589201,
    -0.008168496191501617,
    0.029690830036997795,
    -0.02202187292277813,
    -0.03546014055609703,
    0.01536606065928936,
    0.02611667476594448,
    0.011742653325200081,
    -0.021346440538764,
    0.010933542624115944,
    0.02593374438583851,
    -0.0003341977426316589,
    0.02538495697081089,
    -0.014803200960159302,
    0.00752120791003108,
    0.018194427713751793,
    -0.015647489577531815,
    -0.02527238428592682,
    0.006096470169723034,
    0.01611184887588024,
    0.02064286731183529,
    0.0032382002100348473,
    -0.01878543011844158,
    -0.016548065468668938,
    0.029550116509199142,
    0.02078358083963394,
    0.01875728741288185,
    -0.02926868572831154,
    -0.006849294528365135,
    0.0357978530228138,
    0.018236642703413963,
    0.019531220197677612,
    -0.010828007012605667,
    -0.03816186264157295,
    0.01794114150106907,
    0.02272544614970684,
    0.00549139641225338,
    -0.0386684387922287,
    -0.00930125080049038,
    0.004597857128828764,
    0.003472138661891222,
    -0.024315524846315384,
    0.011580831371247768,
    -0.012601013295352459,
    -0.0009735708008520305,
    -0.003234682371839881,
    0.013487516902387142,
    -0.011250151321291924,
    0.047702331095933914,
    -0.01871507428586483,
    -0.015647489577531815,
    0.001340308808721602,
    0.0021494191605597734,
    -0.02133237011730671,
    0.013691553846001625,
    0.03070397675037384,
    0.01733606867492199,
    -0.016435492783784866,
    -0.03354641795158386,
    -0.5705142617225647,
    -0.008942428044974804,
    -0.0060401842929422855,
    -0.028368111699819565,
    0.007211635354906321,
    0.02327423356473446,
    0.013550838455557823,
    0.010251075960695744,
    -0.02393559366464615,
    0.015788204967975616,
    -0.01470470055937767,
    0.032336268573999405,
    0.00040015781996771693,
    -0.0070251883007586,
    -0.012952800840139389,
    -0.03489727899432182,
    0.0006741120014339685,
    -0.042298879474401474,
    -0.025778958573937416,
    0.00033903479925356805,
    -0.020474009215831757,
    0.002958529395982623,
    -0.01732199639081955,
    0.016491778194904327,
    -0.02475173957645893,
    0.021543441340327263,
    -0.0014177019475027919,
    0.006202006712555885,
    0.020459936931729317,
    0.01102500781416893,
    -0.03993486985564232,
    0.0247939545661211,
    0.0016595555935055017,
    -0.016984280198812485,
    0.053471639752388,
    -0.01605556346476078,
    -0.020572509616613388,
    0.02614481747150421,
    -0.013564910739660263,
    0.0412575900554657,
    -0.018996503204107285,
    -0.026355888694524765,
    0.018194427713751793,
    -0.0015891982475295663,
    0.03453142195940018,
    0.003602299839258194,
    0.02593374438583851,
    0.009139428846538067,
    -0.018546216189861298,
    -0.012002975679934025,
    0.008358461782336235,
    0.02137458324432373,
    -0.0022444017231464386,
    -0.002775600180029869,
    0.023499377071857452,
    -0.0074086361564695835,
    0.006968902423977852,
    0.0069090984761714935,
    0.010131468065083027,
    0.00940678734332323,
    0.01929200440645218,
    0.027805252000689507,
    0.006128131411969662,
    -0.010799863375723362,
    0.005899469368159771,
    0.030535120517015457,
    -0.01664656586945057,
    -0.02476581186056137,
    0.02411852404475212,
    -0.026566961780190468,
    0.01002593245357275,
    0.00011597980483202264,
    -0.00683522317558527,
    -0.005055180750787258,
    0.0035970229655504227,
    0.03247698396444321,
    0.012249226681888103,
    0.004165159072726965,
    0.0037922649644315243,
    0.021121297031641006,
    0.01198890432715416,
    -0.0033454953227192163,
    0.00515368115156889,
    -0.013628232292830944,
    0.020459936931729317,
    -0.000637614110019058,
    -0.022852089256048203,
    -0.008182567544281483,
    -0.013213123194873333,
    -0.0038591043557971716,
    0.013353838585317135,
    0.023049090057611465,
    -0.007514172233641148,
    -0.03326498717069626,
    -0.014141840860247612,
    0.017096852883696556,
    -0.01274172868579626,
    0.013234230689704418,
    0.0018468822818249464,
    -0.029550116509199142,
    -0.021149439737200737,
    0.0009357536910101771,
    -0.005966308992356062,
    0.036416999995708466,
    0.015239416621625423,
    -0.006096470169723034,
    -0.031182408332824707,
    0.005048144608736038,
    0.016463635489344597,
    -0.00752120791003108,
    0.010434005409479141,
    0.003602299839258194,
    -0.02469545416533947,
    0.008843927644193172,
    0.02871989831328392,
    -0.025708600878715515,
    0.030225547030568123,
    -0.0020579544361680746,
    0.03275841474533081,
    0.004049069248139858,
    0.014212198555469513,
    0.002050918759778142,
    0.018827645108103752,
    -0.02200780063867569,
    0.032955415546894073,
    0.02863547019660473,
    0.003915390465408564,
    0.006307542789727449,
    -0.02264101803302765,
    -0.0024695454631000757,
    -0.00833735428750515,
    -0.004749125801026821,
    0.027875609695911407,
    -0.025610100477933884,
    0.04083544760942459,
    0.03067583404481411,
    0.02611667476594448,
    0.003180155297741294,
    -0.007443815004080534,
    -0.0385277234017849,
    0.01370562519878149,
    0.013909662142395973,
    0.012917621992528439,
    0.0009111285908147693,
    0.0014810236170887947,
    -0.004777268972247839,
    -0.018180357292294502,
    -0.0012866612523794174,
    -0.006296989042311907,
    0.0027421803679317236,
    0.003127387259155512,
    -0.007197564002126455,
    -0.03281470015645027,
    0.006504543591290712,
    0.0036515500396490097,
    -0.010560648515820503,
    -0.010251075960695744,
    -0.04266474023461342,
    -0.020277008414268494,
    -0.011566760018467903,
    0.01675913669168949,
    0.04227073863148689,
    -0.02935311570763588,
    0.003352530999109149,
    -0.039597153663635254,
    -0.006726169027388096,
    -0.033658988773822784,
    0.02140272594988346,
    0.0053049493581056595,
    -0.04407188668847084,
    -0.0043691955506801605,
    -0.015506775118410587,
    -0.0066522941924631596,
    0.024864312261343002,
    0.014338841661810875,
    0.019601576030254364,
    0.01106018666177988,
    -0.0017985114827752113,
    -0.015337917022407055,
    0.01039882656186819,
    0.002314759185537696,
    0.003669139463454485,
    -0.03078840672969818,
    -0.008569533936679363,
    0.024906527251005173,
    0.033687133342027664,
    -0.00022778214770369232,
    0.014915772713720798,
    -0.011904475279152393,
    0.013515660539269447,
    -0.018307000398635864,
    0.008689140900969505,
    -0.003064065705984831,
    0.014775058254599571,
    -0.00010465666127856821,
    0.020445866510272026,
    0.008161460980772972,
    0.00013356916315387934,
    -0.010659148916602135,
    0.02601817436516285,
    0.014817272312939167,
    -0.002561009954661131,
    -0.001320081064477563,
    -0.027791179716587067,
    -0.0024167774245142937,
    -0.024568811058998108,
    0.022950589656829834,
    -0.01611184887588024,
    0.009814860299229622,
    0.011623045429587364,
    0.01860250160098076,
    -0.005378824658691883,
    -0.014205163344740868,
    -0.008161460980772972,
    0.0181099995970726,
    0.006068327464163303,
    -0.006793008651584387,
    0.010870221070945263,
    -0.04350902885198593,
    -0.004763197153806686,
    0.010905399918556213,
    -0.015788204967975616,
    0.01878543011844158,
    -0.004464178346097469,
    -0.006131649017333984,
    -0.0004938211059197783,
    0.02062879502773285,
    0.011137579567730427,
    0.030563263222575188,
    -0.06427853554487228,
    -0.025793028995394707,
    0.024428095668554306,
    0.009941503405570984,
    -0.02058658003807068,
    0.015703774988651276,
    0.029127972200512886,
    0.01606963388621807,
    -0.00967414490878582,
    0.04258031025528908,
    -0.017814498394727707,
    0.015816347673535347,
    0.019038718193769455,
    0.011890403926372528,
    -0.010729506611824036,
    -0.001878543058410287,
    0.00939271505922079,
    0.015506775118410587,
    0.013909662142395973,
    -0.02124794013798237,
    -0.006596007850021124,
    0.006536204367876053,
    0.007633780129253864,
    0.0007537038763985038,
    -0.0031115568708628416,
    0.024188879877328873,
    -0.012467334978282452,
    0.030253689736127853,
    -0.004231998696923256,
    0.02808668091893196,
    0.015760062262415886,
    0.006202006712555885,
    0.013951876200735569,
    0.02461102604866028,
    0.00806296057999134,
    0.023232020437717438,
    -0.0036902467254549265,
    -0.010588791221380234,
    -0.02331644855439663,
    -0.015098702162504196,
    -0.021740442141890526,
    -0.031126122921705246,
    -0.02345716394484043,
    0.002130070934072137,
    -0.041032448410987854,
    0.023724522441625595,
    0.007162385154515505,
    0.017153138294816017,
    0.018180357292294502,
    -0.00044720934238284826,
    0.012129618786275387,
    -0.009878181852400303,
    -0.02326016314327717,
    0.02538495697081089,
    -0.021881157532334328,
    0.006194970570504665,
    0.011116472072899342,
    -0.028297754004597664,
    -0.015858562663197517,
    0.009449001401662827,
    0.018883930519223213,
    -0.00041510877781547606,
    0.020192578434944153,
    0.008077031932771206,
    0.015197202563285828,
    -0.014957987703382969,
    -0.005857255309820175,
    0.02062879502773285,
    0.0018838199321180582,
    -0.012889479286968708,
    -0.0003388149489182979,
    0.012629156932234764,
    0.013614160940051079,
    -0.01005407515913248,
    -0.012256262823939323,
    0.027059463784098625,
    -0.006064809393137693,
    -0.014493628405034542,
    -0.00718349264934659,
    -0.02261287532746792,
    -0.005537129007279873,
    0.00768303032964468,
    0.008217746391892433,
    -0.02069915272295475,
    -0.01673099398612976,
    -0.006121095269918442,
    -0.005350681487470865,
    0.008421783335506916,
    0.0041792308911681175,
    0.015126844868063927,
    0.011067221872508526,
    -0.016505850479006767,
    -0.03819000720977783,
    -0.017715997993946075,
    0.014423270709812641,
    0.024357737973332405,
    0.011798938736319542,
    -0.0014977335231378675,
    0.016998352482914925,
    -0.05535721778869629,
    -0.019137218594551086,
    -0.007704137358814478,
    -0.011805974878370762,
    0.011932617984712124,
    0.017040567472577095,
    0.004263659473508596,
    0.008900213055312634,
    0.010356612503528595,
    0.00865396298468113,
    0.012411048635840416,
    -0.012150726281106472,
    0.0007752508390694857,
    0.03005668893456459,
    -0.033658988773822784,
    -0.04561975225806236,
    0.016154063865542412,
    -0.0028512345161288977,
    0.005589896813035011,
    -0.019601576030254364,
    0.039034295827150345,
    0.0023763219360262156,
    0.018475858494639397,
    0.028930971398949623,
    -0.013860411942005157,
    -0.0425521656870842,
    -0.002881136257201433,
    -0.011883367784321308,
    0.0032294054981321096,
    0.00012015728134429082,
    -0.01229847688227892,
    -0.00802778173238039,
    0.027636393904685974,
    0.015183131210505962,
    -4.5347555897023994e-06,
    -0.004298838321119547,
    0.010194789618253708,
    0.02531459927558899,
    0.015633419156074524,
    -0.024498453363776207,
    0.00234290212392807,
    -0.008534355089068413,
    -0.002063231309875846,
    0.022373659536242485,
    -0.015450488775968552,
    -0.01539420336484909,
    0.0066734012216329575,
    0.03154826536774635,
    -0.049756765365600586,
    0.004583785776048899,
    0.014409199357032776,
    0.013262373395264149,
    0.02058658003807068,
    -0.011855225078761578,
    -0.007549351081252098,
    -0.02531459927558899,
    0.00930125080049038,
    -0.007880031131207943,
    -0.005396414082497358,
    0.009153500199317932,
    -0.008182567544281483,
    0.02929682843387127,
    -0.01661842316389084,
    -0.020459936931729317,
    -0.029043542221188545,
    0.015478632412850857,
    0.01808185689151287,
    -0.027875609695911407,
    0.0008394519682042301,
    -0.028804326429963112,
    0.005231074057519436,
    -0.015436417423188686,
    -0.01432477030903101,
    -0.006057773716747761,
    0.002263749949634075,
    0.00453101797029376,
    0.001126598217524588,
    -0.023232020437717438,
    0.004893358331173658,
    -0.05403449758887291,
    -0.009216821752488613,
    -0.007063884753733873,
    -0.0026014656759798527,
    -0.011953725479543209,
    -0.01094761397689581,
    0.029747117310762405,
    -0.014620271511375904,
    0.02864954061806202,
    -0.004541571252048016,
    -0.028227396309375763,
    -0.0029233507812023163,
    0.00833735428750515,
    -0.011665260419249535,
    -0.017237568274140358,
    0.004235516767948866,
    -0.014972059056162834,
    -0.008421783335506916,
    -0.008597676642239094,
    0.001841605408117175,
    -0.008492140099406242,
    0.02393559366464615,
    -0.006163309793919325,
    -0.010117396712303162,
    -0.00805592443794012,
    -0.011475294828414917,
    0.010912436060607433,
    0.017012424767017365,
    0.002277821535244584,
    -0.011116472072899342,
    -0.009624894708395004,
    0.0035970229655504227,
    -0.004875768907368183,
    0.0012374110519886017,
    0.007317171432077885,
    0.02067101001739502,
    0.007331243250519037,
    -0.01432477030903101,
    -0.02393559366464615,
    0.012748763896524906,
    0.016435492783784866,
    0.002036847174167633,
    0.009575644508004189,
    0.011411973275244236,
    -0.022204801440238953,
    -0.0412575900554657,
    0.023794878274202347,
    0.006884473375976086,
    -0.0010738300625234842,
    -0.025230171158909798,
    -0.0003531062975525856,
    -0.029015399515628815,
    0.0026665462646633387,
    -0.017518997192382812,
    0.017504926770925522,
    0.004830036778002977,
    -0.005618039984256029,
    0.003510835114866495,
    0.002536384854465723,
    -0.0024044648744165897,
    -0.003968158271163702,
    0.0009489457006566226,
    -0.02189522795379162,
    -0.011383830569684505,
    0.0075282440520823,
    -0.007718208711594343,
    0.02071322500705719,
    -0.01802557148039341,
    0.0026243317406624556,
    0.015788204967975616,
    0.001415063627064228,
    -0.01005407515913248,
    -0.02212037332355976,
    -0.0016789039364084601,
    -0.01332569494843483,
    0.018335143104195595,
    0.036979857832193375,
    0.024554738774895668,
    0.02593374438583851,
    0.027228321880102158,
    -0.0029567705933004618,
    0.01602742075920105,
    -0.008288104087114334,
    -0.00664525805041194,
    0.013452338054776192,
    -0.028199253603816032,
    -0.014775058254599571,
    -0.003327905898913741,
    0.022261086851358414,
    -0.000555383856408298,
    -0.026201102882623672,
    -0.01198890432715416,
    0.03275841474533081,
    0.014092590659856796,
    -0.0013957152841612697,
    -0.010771720670163631,
    -0.020347366109490395,
    -0.010926507413387299,
    0.01739235408604145,
    -0.014760986901819706,
    0.019010575488209724,
    -0.03287098556756973,
    0.007443815004080534,
    0.03216741234064102,
    -0.008077031932771206,
    0.018250714987516403,
    0.027200177311897278,
    0.004464178346097469,
    -0.014275520108640194,
    0.02542717196047306,
    0.015028344467282295,
    0.026975033804774284,
    -0.008766534738242626,
    -0.0070392596535384655,
    -0.023513449355959892,
    0.002133588772267103,
    0.016421422362327576,
    0.031660839915275574,
    0.007464922033250332,
    8.327460091095418e-05,
    0.01032846886664629,
    -0.001656917273066938,
    0.029831545427441597,
    0.0063005066476762295,
    0.0003524466883391142,
    0.005765790585428476,
    -0.013790054246783257,
    -0.026904676109552383,
    -0.00070577283622697,
    -0.03202669695019722,
    -0.024357737973332405,
    0.01164415292441845,
    -0.007253849878907204,
    -0.0013860411709174514,
    0.015745989978313446,
    -0.004953162278980017,
    0.0012734693009406328,
    0.00031265077996067703,
    -0.02144494093954563,
    0.024990955367684364,
    0.01363526750355959,
    0.03678285703063011,
    0.029747117310762405,
    0.045647893100976944,
    -0.009596752002835274,
    0.0034000221639871597,
    -0.03213926777243614,
    0.012101476080715656,
    0.027495678514242172,
    0.012805050238966942,
    0.0029251095838844776,
    -0.02067101001739502,
    0.034362562000751495,
    -0.007922245189547539,
    -0.05262735113501549,
    -0.03526313975453377,
    0.019714148715138435,
    0.0028758596163243055,
    0.027031321078538895,
    -0.045056890696287155,
    -0.0010237004607915878,
    -0.019503075629472733,
    0.002485375851392746,
    0.010032967664301395,
    -0.0013165632262825966,
    0.010595827363431454,
    -0.020558437332510948,
    -0.012157762423157692,
    0.00452749989926815,
    0.023766735568642616,
    -0.0043093920685350895,
    0.03225184231996536,
    -0.006712097674608231,
    -0.025033170357346535,
    -0.0398222990334034,
    -0.03486913815140724,
    0.02864954061806202,
    0.02403409406542778,
    0.004056105390191078,
    -0.0032188519835472107,
    0.0051114666275680065,
    0.03810557723045349,
    0.0044817677699029446,
    -0.010229968465864658,
    -0.009322358295321465,
    0.0024097415152937174,
    0.037683434784412384,
    -0.007535279728472233,
    0.013424195349216461,
    -0.03154826536774635,
    -0.013086480088531971,
    -0.011939654126763344,
    -0.030985407531261444,
    -0.009864110499620438,
    0.004879286978393793,
    0.023020947352051735,
    -0.0025434207636862993,
    0.0076478514820337296,
    0.00011619967699516565,
    -0.00929421465843916,
    0.002407982712611556,
    -0.0053682709112763405,
    -0.0038555865176022053,
    -0.005656736437231302,
    -0.005487878806889057,
    0.03247698396444321,
    -0.03872472420334816,
    -0.03613556921482086,
    -0.024245167151093483,
    -0.003862622193992138,
    -0.006761347874999046,
    0.0246532391756773,
    0.01934828981757164,
    -0.0024378844536840916,
    0.053077638149261475,
    -0.020572509616613388,
    0.010546577163040638,
    -0.012819121591746807,
    -0.018489928916096687,
    -0.012488441541790962,
    -0.001815221388824284,
    0.0033085576724261045,
    -0.01373376790434122,
    0.01791299879550934,
    0.0036058176774531603,
    -0.033096130937337875,
    -0.028157038614153862,
    -0.0043058739975094795,
    0.027129821479320526,
    -0.004049069248139858,
    -0.015464561060070992,
    -0.015703774988651276,
    0.029240543022751808,
    0.01799742691218853,
    -0.0003577235038392246,
    -0.012840229086577892,
    0.02473766915500164,
    -0.004724500700831413,
    -0.00868210569024086,
    -0.005888916086405516,
    -0.011805974878370762,
    -0.014437342062592506,
    -0.021796727553009987,
    0.018883930519223213,
    0.022866161540150642,
    -0.019235718995332718,
    -0.03000040352344513,
    -0.010694327764213085,
    0.028565112501382828,
    -0.013825233094394207,
    0.036923572421073914,
    -0.022458087652921677,
    0.000845608243253082,
    -0.042439594864845276,
    0.03802115097641945,
    0.02662324719130993,
    -0.008780606091022491,
    -0.006441221572458744,
    0.02613074518740177,
    0.0025698046665638685,
    0.0247235968708992,
    0.002128311898559332,
    -0.008541390299797058,
    -0.032364413142204285,
    -0.02994411811232567,
    -0.013121658936142921,
    -0.02268323116004467,
    -0.028551040217280388,
    0.04407188668847084,
    0.02333052083849907,
    -0.001782681094482541,
    -0.03318055719137192,
    -0.03000040352344513,
    -0.059043947607278824,
    -0.017814498394727707,
    -0.0186165738850832,
    0.004784304648637772,
    -0.014845415018498898,
    0.00044918814091943204,
    0.01429662760347128,
    0.001596233923919499,
    -0.00019513189909048378,
    0.024470310658216476,
    -0.025525672361254692,
    0.01605556346476078,
    -0.009596752002835274,
    0.033827848732471466,
    0.004889840725809336,
    -0.021585656329989433,
    -0.019868934527039528,
    -0.008316246792674065,
    0.0017721274634823203,
    0.0074719577096402645,
    0.030366262421011925,
    0.0455634631216526,
    -0.012938729487359524,
    -0.001626135897822678,
    -0.002511759754270315,
    0.0008394519682042301,
    -0.00012873209198005497,
    0.047674186527729034,
    0.018855787813663483,
    -0.025202026590704918,
    -0.03470027819275856,
    0.011538616381585598,
    0.027143891900777817,
    0.030338119715452194,
    0.006708580069243908,
    0.013719696551561356,
    -0.02345716394484043,
    0.017870783805847168,
    -0.03408113494515419,
    -0.009596752002835274,
    0.010117396712303162,
    0.00030869318288750947,
    0.03199855238199234,
    -0.004823001101613045,
    -0.000663998129311949,
    0.010356612503528595,
    0.017476782202720642,
    -0.010201825760304928,
    -0.008569533936679363,
    0.02748160809278488,
    -0.026257388293743134,
    -0.003750050440430641,
    -0.005635629408061504,
    -0.023203875869512558,
    0.02337273396551609,
    -0.03731757402420044,
    0.04939090833067894,
    -0.010905399918556213,
    -0.02279580384492874,
    0.0349254235625267,
    -0.01802557148039341,
    -0.002840680768713355,
    -0.0023886344861239195,
    0.03517870977520943,
    0.0024941705632954836,
    0.012199976481497288,
    0.023175733163952827,
    0.008034816943109035,
    -0.011841153725981712,
    -0.00683522317558527,
    0.0041757128201425076,
    -0.023035019636154175,
    -0.002455473877489567,
    0.0021634907461702824,
    -0.020291078835725784,
    -0.029859688133001328,
    0.013184980489313602,
    -0.007661922834813595,
    -0.01737828180193901,
    0.01264322828501463,
    0.19655048847198486,
    0.0012928175274282694,
    0.029718974605202675,
    0.020868010818958282,
    0.007661922834813595,
    0.002515277825295925,
    0.023654164746403694,
    0.0199111495167017,
    -0.020966511219739914,
    0.024428095668554306,
    0.0011248391820117831,
    -0.023035019636154175,
    -0.030394405126571655,
    0.0029356633313000202,
    0.02280987612903118,
    -0.004386784974485636,
    -0.009843003004789352,
    -0.04609818011522293,
    0.008112210780382156,
    0.026862462982535362,
    0.014134805649518967,
    -0.028930971398949623,
    -0.03188598155975342,
    -0.017504926770925522,
    0.042355164885520935,
    -0.010961686260998249,
    -0.012910586781799793,
    0.030985407531261444,
    0.034475136548280716,
    -0.0026102601550519466,
    -0.014226269908249378,
    0.0009981958428397775,
    0.00932939350605011,
    0.019503075629472733,
    -0.036501429975032806,
    -0.018982430920004845,
    -0.01815221458673477,
    -0.008245889097452164,
    0.024287380278110504,
    0.03002854622900486,
    -0.0022373658139258623,
    -0.029043542221188545,
    0.001393076847307384,
    -0.030872834846377373,
    -0.013107587583363056,
    -0.0029532527551054955,
    -0.01139086578041315,
    -0.005322538781911135,
    0.005730611737817526,
    0.005009448155760765,
    -0.004731536377221346,
    -0.025680458173155785,
    0.028959114104509354,
    0.006849294528365135,
    -0.005129056051373482,
    -0.0053084674291312695,
    -0.0168154239654541,
    0.00192075758241117,
    0.03137940913438797,
    0.009160536341369152,
    -0.0019489005208015442,
    0.03422185033559799,
    -0.028551040217280388,
    0.015239416621625423,
    -0.04159530624747276,
    0.022218873724341393,
    -0.018869860097765923,
    -0.01504241582006216,
    -0.004826519172638655,
    0.013951876200735569,
    -0.005428074859082699,
    -0.010314397513866425,
    -0.03807743638753891,
    -0.013895589858293533,
    0.005319020710885525,
    -0.028846541419625282,
    0.00291983294300735,
    0.0009216821636073291,
    0.025553815066814423,
    0.042974311858415604,
    -0.007507136557251215,
    0.011953725479543209,
    -0.0010922988876700401,
    0.007507136557251215,
    0.00802778173238039,
    -0.007570458110421896,
    0.04871547594666481,
    -0.015633419156074524,
    0.010152575559914112,
    -0.01746271178126335,
    -0.022415874525904655,
    -0.0025838762521743774,
    0.00133415253367275,
    -0.020896153524518013,
    0.0073453146032989025,
    0.016238491982221603,
    -0.004105355590581894,
    0.027636393904685974,
    -0.006574900820851326,
    0.016927994787693024,
    -0.012762836180627346,
    0.03793672099709511,
    0.02202187292277813,
    0.011524545028805733,
    -0.005586379207670689,
    0.02469545416533947,
    -0.009667109698057175,
    0.017842641100287437,
    -0.00564618268981576,
    -0.0024150183890014887,
    -0.0007743713213130832,
    -0.021909300237894058,
    0.003078137058764696,
    -0.003813371993601322,
    0.0028477164451032877,
    0.008161460980772972,
    -0.010124432854354382,
    -0.0036656216252595186,
    -0.0015592962736263871,
    0.007753387559205294,
    0.004626000300049782,
    0.010314397513866425,
    0.007795602083206177,
    -0.009751537814736366,
    -0.020389579236507416,
    -0.02209222875535488,
    -0.02738310769200325,
    0.027720823884010315,
    -0.027059463784098625,
    -0.02065693773329258,
    0.009927432052791119,
    -0.010856149718165398,
    0.013170909136533737,
    0.04187673702836037,
    -0.01808185689151287,
    -0.028565112501382828,
    -0.021036868914961815,
    -0.023808950558304787,
    0.010616934858262539,
    0.03515056520700455,
    -0.02938125841319561,
    0.012558799237012863,
    0.02078358083963394,
    0.00042983985622413456,
    0.02879025600850582,
    -0.021810799837112427,
    0.0012215806636959314,
    0.01605556346476078,
    0.007887066341936588,
    -0.00418626656755805,
    -0.003194226883351803,
    0.0149861304089427,
    0.013445302844047546,
    -0.03275841474533081,
    0.01590077579021454,
    -0.01033550500869751,
    -0.015802275389432907,
    0.02273951843380928,
    0.012516585178673267,
    0.0013754875399172306,
    -0.0013121658703312278,
    0.007225706707686186,
    -0.0015021308790892363,
    0.012523620389401913,
    -0.034418851137161255,
    -0.026989106088876724,
    -0.17786355316638947,
    0.015183131210505962,
    0.04145459085702896,
    -0.037064287811517715,
    0.018574358895421028,
    -0.006560829468071461,
    0.0015742472605779767,
    -0.00714831380173564,
    0.0008495658403262496,
    -0.010201825760304928,
    -0.002895207842811942,
    -0.012066297233104706,
    -0.005041108932346106,
    -0.034953564405441284,
    0.004777268972247839,
    0.0029567705933004618,
    -0.0321955531835556,
    -0.006585454568266869,
    0.039090581238269806,
    0.008238853886723518,
    0.033658988773822784,
    -0.0024167774245142937,
    0.025666385889053345,
    0.011749688535928726,
    -0.011841153725981712,
    -0.011531581170856953,
    -0.008879106491804123,
    0.006307542789727449,
    -0.008471033535897732,
    -0.02407630905508995,
    -0.009012785740196705,
    0.007190528325736523,
    0.03461585193872452,
    0.0043727136217057705,
    -0.0005940804840065539,
    -0.021008726209402084,
    0.019615648314356804,
    -0.017012424767017365,
    -0.002355214674025774,
    0.036388855427503586,
    0.03146383911371231,
    0.024920597672462463,
    0.041060589253902435,
    -0.021346440538764,
    -0.004379749298095703,
    0.011897439137101173,
    0.030872834846377373,
    -0.016294777393341064,
    0.02943754382431507,
    -0.040497731417417526,
    0.0602259524166584,
    -0.008499176241457462,
    -0.017167210578918457,
    0.0014264966594055295,
    0.016294777393341064,
    0.024836169555783272,
    -0.010426969267427921,
    -0.009772645309567451,
    0.011186829768121243,
    -0.005206448957324028,
    0.01106018666177988,
    -0.02938125841319561,
    0.0006433306261897087,
    -0.017814498394727707,
    -0.034981708973646164,
    -0.03211112692952156,
    -0.04066658765077591,
    0.03467213734984398,
    0.002694689203053713,
    0.007936316542327404,
    0.011967796832323074,
    0.004400856327265501,
    -0.006381418090313673,
    0.011791903525590897,
    0.031717125326395035,
    -0.0012919381260871887,
    -0.003526665735989809,
    0.023794878274202347,
    0.00830921158194542,
    -0.00906203594058752,
    -0.016829494386911392,
    0.04336831346154213,
    -0.007851887494325638,
    -0.008745427243411541,
    0.012840229086577892,
    -0.015745989978313446,
    0.010075182653963566,
    -0.0074086361564695835,
    -0.019545290619134903,
    -0.02341494895517826,
    0.02535681426525116,
    -0.02463916875422001,
    -0.005213484633713961,
    0.004073694348335266,
    0.008238853886723518,
    0.02794596739113331,
    -0.018546216189861298,
    0.018954288214445114,
    -0.005079805850982666,
    -0.009350501000881195,
    0.02407630905508995,
    0.012207012623548508,
    -0.02081172540783882,
    0.013255338184535503,
    0.010518434457480907,
    0.03849957883358002,
    -0.006325131747871637,
    0.004063141066581011,
    0.01801149919629097,
    0.01332569494843483,
    -0.002882895292714238,
    -0.012277369387447834,
    0.027186106890439987,
    0.006757830269634724,
    -0.022866161540150642,
    0.03652957081794739,
    -0.0020597134716808796,
    -0.021853014826774597,
    0.01240401342511177,
    -0.017476782202720642,
    0.021853014826774597,
    -0.0015557784354314208,
    -0.031041692942380905,
    0.004101837519556284,
    -0.03540385141968727,
    -0.0599445216357708,
    -0.10418526828289032,
    -0.035122424364089966,
    0.00162261794321239,
    0.026904676109552383,
    -0.006624151021242142,
    -0.03813372179865837,
    0.0011204419424757361,
    -0.006486954167485237,
    -0.01993929222226143,
    -0.00833031814545393,
    -0.011524545028805733,
    -0.005389378406107426,
    -0.008393639698624611,
    0.00376412202604115,
    -0.00633568549528718,
    0.0062371850945055485,
    -0.018996503204107285,
    -0.003039440605789423,
    -0.0149861304089427,
    0.011995939537882805,
    -0.02399187907576561,
    -0.0064764004200696945,
    -0.012418084777891636,
    0.021149439737200737,
    -0.020319223403930664,
    0.004569714423269033,
    -0.033658988773822784,
    0.03655771538615227,
    0.0011010935995727777,
    0.011440115980803967,
    0.02126201242208481,
    -0.041145019233226776,
    -0.010553613305091858,
    -0.030872834846377373,
    -0.004017408471554518,
    0.028339968994259834,
    -0.024920597672462463,
    -0.03419370576739311,
    0.0334901325404644,
    -0.017490854486823082,
    -0.01878543011844158,
    -0.002367527224123478,
    0.013846339657902718,
    -0.014817272312939167,
    -0.004253106191754341,
    0.008780606091022491,
    0.007865959778428078,
    0.010011861100792885,
    0.031773410737514496,
    -0.02614481747150421,
    -0.025567885488271713,
    -0.006223113741725683,
    -0.028607327491044998,
    0.010476219467818737,
    0.02202187292277813,
    -0.01129940152168274,
    0.01594299077987671,
    -0.019221646711230278,
    0.0025223135016858578,
    -0.0018468822818249464,
    0.012150726281106472,
    0.01037068385630846,
    -0.021219797432422638,
    0.015774132683873177,
    0.004263659473508596,
    -0.008668034337460995,
    -0.0012849023332819343,
    -0.010237004607915878,
    0.009441965259611607,
    -0.009069071151316166,
    -0.005016483832150698,
    0.005955755710601807,
    -0.025680458173155785,
    0.009195714257657528,
    -0.01801149919629097,
    -0.004246070049703121,
    -0.009315322153270245,
    0.0029127970337867737,
    -0.018532143905758858,
    -0.01104611437767744,
    -0.018349215388298035,
    -0.002050918759778142,
    0.013009087182581425,
    -0.00649398984387517,
    0.011925582773983479,
    -0.011608974076807499,
    0.01744863949716091,
    0.00902685709297657,
    0.024245167151093483,
    -0.048349618911743164,
    0.01535198837518692,
    0.005885398015379906,
    0.04091987386345863,
    0.006708580069243908,
    -0.02000964991748333,
    0.010771720670163631,
    0.009878181852400303,
    -0.0007844851934351027,
    -0.0005791294970549643,
    0.026426246389746666,
    -0.02143087051808834,
    -0.01005407515913248,
    -0.07272142916917801,
    0.0004368755908217281,
    0.012720621190965176,
    -0.018954288214445114,
    0.0024501970037817955,
    -0.01439512800425291,
    -0.010595827363431454,
    -0.012762836180627346,
    0.016252564266324043,
    0.016857637092471123,
    -0.04336831346154213,
    0.0132975522428751,
    -0.018236642703413963,
    0.0014484833227470517,
    -0.02527238428592682,
    -0.009878181852400303,
    0.027256464585661888,
    -0.005881880410015583,
    0.011763760820031166,
    -0.015281631611287594,
    -0.03140754997730255,
    -0.017153138294816017,
    0.010750613175332546,
    0.017701925709843636,
    -0.026510676369071007,
    0.017786355689167976,
    -0.035854142159223557,
    0.013487516902387142,
    0.010595827363431454,
    -0.01744863949716091,
    0.01867285929620266,
    -0.003964640665799379,
    -0.021641941741108894,
    -0.006096470169723034,
    0.019109075888991356,
    0.010771720670163631,
    0.010265147313475609,
    -0.0007607396109960973,
    0.006247738841921091,
    0.0074086361564695835,
    -0.028255539014935493,
    -0.012312548235058784,
    0.005769308190792799,
    -0.007415671832859516,
    -0.0010140263475477695,
    -0.007922245189547539,
    -0.0006442101439461112,
    0.007612672634422779,
    0.017096852883696556,
    0.01670285128057003,
    0.043706029653549194,
    0.0015144434291869402,
    -0.033096130937337875,
    -0.027059463784098625,
    0.007661922834813595,
    -0.011172758415341377,
    0.027129821479320526,
    0.011123508214950562,
    -0.003067583544179797,
    0.01746271178126335,
    -0.017209425568580627,
    -0.0015469837235286832,
    0.017139067873358727,
    0.0049390909262001514,
    -0.00664525805041194,
    -0.025652315467596054,
    -0.04151087626814842,
    0.006089434493333101,
    -0.009688216261565685,
    -0.030394405126571655,
    -0.025497527793049812,
    -0.025736743584275246,
    0.008344389498233795,
    0.015534917823970318,
    0.025511600077152252,
    -0.025553815066814423,
    0.006212559994310141,
    -0.023189805448055267,
    -0.01742049679160118,
    0.026440318673849106,
    0.005100912880152464,
    -0.0056074862368404865,
    -0.015450488775968552,
    0.025807101279497147,
    0.03489727899432182,
    0.0032047803979367018,
    -0.023035019636154175,
    0.035037994384765625,
    -0.0031995035242289305,
    0.008801712654531002,
    -0.0022303301375359297,
    0.016927994787693024,
    -0.01795521378517151,
    0.01663249358534813,
    0.010117396712303162,
    -0.0013834027340635657,
    -0.002198669360950589,
    -0.010138504207134247,
    -0.005431592930108309,
    -0.005041108932346106,
    0.020319223403930664,
    -0.022303301841020584,
    0.006733205169439316,
    0.0012673130258917809,
    -0.028185181319713593,
    -0.0026999658439308405,
    -0.008154424838721752,
    -0.01673099398612976,
    -0.010659148916602135,
    0.02857918292284012,
    0.021205727010965347,
    -0.03610742837190628,
    0.015675632283091545,
    0.034446991980075836,
    -0.06298395991325378,
    0.03258955478668213,
    -0.0227817315608263,
    -0.027819324284791946,
    -0.008998713456094265,
    0.020375508815050125,
    -0.0008697935845702887,
    -0.02403409406542778,
    0.028185181319713593,
    0.001110767712816596,
    0.021079082041978836,
    0.010659148916602135,
    0.010820970870554447,
    -0.01595706306397915,
    0.006363828666508198,
    -0.009125357493758202,
    -0.013459374196827412,
    0.005463253706693649,
    -0.023006876930594444,
    -0.018489928916096687,
    -0.002210981911048293,
    -0.01858842931687832,
    0.014085555449128151,
    -0.012150726281106472,
    0.008351425640285015,
    0.0838097557425499,
    -0.02406223677098751,
    0.0034281653352081776,
    0.004590821452438831,
    -0.018208499997854233,
    0.015084630809724331,
    0.009252000600099564,
    -0.00036607845686376095,
    -0.01946086250245571,
    0.017715997993946075,
    -0.012601013295352459,
    0.0007550230366177857,
    -0.002233847975730896,
    -0.02209222875535488,
    -0.009526394307613373,
    -0.009322358295321465,
    -0.008245889097452164,
    0.01032846886664629,
    0.027031321078538895,
    -0.010237004607915878,
    0.019024645909667015,
    -0.0005918818060308695,
    0.010870221070945263,
    0.017561212182044983,
    -0.01865878701210022,
    -0.014141840860247612,
    0.024273309856653214,
    0.012748763896524906,
    -0.008274032734334469,
    -0.058481086045503616,
    0.017870783805847168,
    0.024540668353438377,
    -0.014775058254599571,
    -0.029634544625878334,
    0.0025821172166615725,
    0.0027175552677363157,
    -0.005487878806889057,
    -0.00024009469780139625,
    0.007619708310812712,
    0.012790978886187077,
    0.015098702162504196,
    -0.013754875399172306,
    -0.03543199598789215,
    -0.0009647760889492929,
    0.0006354154320433736,
    -0.012178868986666203,
    0.02258473075926304,
    -0.0013974742032587528,
    -0.03610742837190628
  ]
}
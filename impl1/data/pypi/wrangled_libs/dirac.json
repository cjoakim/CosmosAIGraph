{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: science/research",
    "license :: osi approved :: gnu general public license v3 (gplv3)",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: system :: distributed computing"
  ],
  "description": ".. -*- mode: rst -*-\n\ndirac\n=====\n\n.. image:: https://badge.fury.io/py/dirac.svg\n    :target: https://badge.fury.io/py/dirac\n.. image:: https://img.shields.io/conda/vn/conda-forge/dirac-grid\n    :target: https://github.com/conda-forge/dirac-grid-feedstock\n.. image:: https://zenodo.org/badge/doi/10.5281/zenodo.1451647.svg\n    :target: https://doi.org/10.5281/zenodo.1451647\n\ndirac is an interware, meaning a software framework for distributed computing.\n\ndirac provides a complete solution to one or more user community requiring access to distributed resources. dirac builds a layer between the users and the resources offering a common interface to a number of heterogeneous providers, integrating them in a seamless manner, providing interoperability, at the same time as an optimized, transparent and reliable usage of the resources.\n\ndirac has been started by the `lhcb collaboration <https://lhcb.web.cern.ch/lhcb/>`_ who still maintains it. it is now used by several communities (aka vo=virtual organizations) for their distributed computing workflows.\n\ndirac is written in python 3.9.\n\nstatus rel-v8r0 series (stable, recommended):\n\n.. image:: https://github.com/diracgrid/dirac/workflows/basic%20tests/badge.svg?branch=rel-v8r0\n   :target: https://github.com/diracgrid/dirac/actions?query=workflow%3a%22basic+tests%22+branch%3arel-v8r0\n   :alt: basic tests status\n\n.. image:: https://github.com/diracgrid/dirac/workflows/pilot%20wrapper/badge.svg?branch=rel-v8r0\n   :target: https://github.com/diracgrid/dirac/actions?query=workflow%3a%22pilot+wrapper%22+branch%3arel-v8r0\n   :alt: pilot wrapper status\n\n.. image:: https://github.com/diracgrid/dirac/workflows/integration%20tests/badge.svg?branch=rel-v8r0\n   :target: https://github.com/diracgrid/dirac/actions?query=workflow%3a%22integration+tests%22+branch%3arel-v8r0\n   :alt: integration tests status\n\n.. image:: https://readthedocs.org/projects/dirac/badge/?version=rel-v8r0\n   :target: http://dirac.readthedocs.io/en/rel-v8r0/\n   :alt: documentation status\n\n\nstatus integration branch (devel):\n\n.. image:: https://github.com/diracgrid/dirac/workflows/basic%20tests/badge.svg?branch=integration\n   :target: https://github.com/diracgrid/dirac/actions?query=workflow%3a%22basic+tests%22+branch%3aintegration\n   :alt: basic tests status\n\n.. image:: https://github.com/diracgrid/dirac/workflows/pilot%20wrapper/badge.svg?branch=integration\n   :target: https://github.com/diracgrid/dirac/actions?query=workflow%3a%22pilot+wrapper%22+branch%3aintegration\n   :alt: pilot wrapper status\n\n.. image:: https://github.com/diracgrid/dirac/workflows/integration%20tests/badge.svg?branch=integration\n   :target: https://github.com/diracgrid/dirac/actions?query=workflow%3a%22integration+tests%22+branch%3aintegration\n   :alt: integration tests status\n\n.. image:: https://readthedocs.org/projects/dirac/badge/?version=integration\n   :target: http://dirac.readthedocs.io/en/integration/\n   :alt: documentation status\n\nimportant links\n===============\n\n- official source code repo: https://github.com/diracgrid/dirac\n- html documentation (stable release): http://diracgrid.org (http://dirac.readthedocs.io/en/latest/index.html)\n- issue tracker: https://github.com/diracgrid/dirac/issues\n- discussions: https://github.com/diracgrid/dirac/discussions\n- [archived] support mailing list: https://groups.google.com/forum/#!forum/diracgrid-forum\n\ninstall\n=======\n\nthere are basically 2 types of installations: client, and server.\n\nfor dirac client installation instructions, see the `web page <http://dirac.readthedocs.io/en/latest/userguide/gettingstarted/installingclient/index.html>`__.\n\nfor dirac server installation instructions, see the `web page <https://dirac.readthedocs.io/en/latest/administratorguide/serverinstallations/installingdiracserver.html>`__.\n\ndirac 8.0 drops support for python 2 based clients and servers.\n\nthere are three available options for installation:\n\n.. _conda: https://conda.io/en/latest/index.html\n.. |conda| replace:: **conda**\n.. _mamba: https://github.com/mamba-org/mamba#the-fast-cross-platform-package-manager\n.. |mamba| replace:: **mamba**\n.. _condaforge: https://github.com/mamba-org/mamba#the-fast-cross-platform-package-manager\n.. |condaforge| replace:: **conda-forge**\n\n1. **diracos2:** this is the only fully supported method, see the `diracos 2 documentation <https://github.com/diracgrid/diracos2/#installing-diracos2>`__.\n2. |conda|_ **/** |mamba|_ **from** |condaforge|_ **:**\n   we recommend making a new environment for dirac using\n\n   .. code-block:: bash\n\n     mamba create --name my-dirac-env -c conda-forge dirac-grid\n     conda activate my-dirac-env\n\n3. **pip:** provided suitable dependencies are available dirac can be installed with ``pip install dirac``. support for installing the dependencies should be sought from the upstream projects.\n\ndevelopment\n===========\n\nfor the full development guide see `here <https://dirac.readthedocs.io/en/integration/developerguide/developmentenvironment/index.html>`__, some of the most important details are included below.\n\ncontributing\n~~~~~~~~~~~~\n\ndirac is a fully open source project, and you are welcome to contribute to it. a list of its main authors can be found `here <authors.rst>`__ a detailed explanation on how to contribute to dirac can be found in `this page <http://dirac.readthedocs.io/en/latest/developerguide/index.html>`_. for a quick'n dirty guide on how to contribute, simply:\n\n- `fork the project <https://docs.github.com/en/get-started/quickstart/fork-a-repo>`_ inside the github ui\n- clone locally and create a branch for each change\n\n   .. code-block:: bash\n\n      git clone git@github.com:$github_username/dirac.git\n      cd dirac\n      git remote add upstream git@github.com:diracgrid/dirac.git\n      git fetch --all\n      git checkout upstream/integration\n      git checkout -b my-feature-branch\n      git push -u origin my-feature-branch\n\n- `create a pull request <https://docs.github.com/en/articles/about-pull-requests>`_, targeting the \"integration\" branch.\n\ncode quality\n~~~~~~~~~~~~\n\nto ensure the code meets dirac's coding conventions we recommend installing ``pre-commit`` system wide using your operating system's package manager.\nalteratively, ``pre-commit`` is included in the python 3 development environment, see the `development guide <https://dirac.readthedocs.io/en/integration/developerguide/developmentenvironment/developerinstallation/editingcode.html>`_ for details on how to create one.\n\nonce ``pre-commit`` is installed you can enable it by running:\n\n.. code-block:: bash\n\n   pre-commit install --allow-missing-config\n\ncode formatting will now be automatically applied before each commit.\n\ntesting\n~~~~~~~\n\nunit tests are provided within the source code and can be ran using ``pytest``.\nintegration, regression and system tests are instead in the ``dirac/tests/`` directory.\n\nacknowledgements\n~~~~~~~~~~~~~~~~\n\nthis work is co-funded by the eosc-hub project (horizon 2020) under grant number 777536\n\n|eu-logo| |eosc-hub-web|\n\n.. |eu-logo| image:: https://raw.githubusercontent.com/diracgrid/dirac/integration/docs/source/_static/eu-logo.jpeg\n\n.. |eosc-hub-web| image:: https://raw.githubusercontent.com/diracgrid/dirac/integration/docs/source/_static/eosc-hub-web.png\n",
  "docs_url": null,
  "keywords": "",
  "license": "gpl-3.0-only",
  "name": "dirac",
  "package_url": "https://pypi.org/project/DIRAC/",
  "project_url": "https://pypi.org/project/DIRAC/",
  "project_urls": {
    "Homepage": "https://github.com/DIRACGrid/DIRAC/"
  },
  "release_url": "https://pypi.org/project/DIRAC/8.0.34/",
  "requires_dist": [
    "boto3",
    "botocore",
    "cachetools",
    "certifi",
    "diraccfg",
    "db12",
    "fts3",
    "gfal2-python",
    "importlib-metadata >=4.4",
    "importlib-resources",
    "M2Crypto >=0.36",
    "pexpect",
    "prompt-toolkit >=3",
    "psutil",
    "pyasn1",
    "pyasn1-modules",
    "pyparsing",
    "python-dateutil",
    "pytz",
    "requests",
    "rucio-clients",
    "setuptools",
    "sqlalchemy",
    "typing-extensions >=4.3.0",
    "Authlib >=1.0.0.a2",
    "pyjwt",
    "dominate",
    "CMRESHandler ; extra == 'server'",
    "elasticsearch <7.14 ; extra == 'server'",
    "elasticsearch-dsl ; extra == 'server'",
    "GitPython ; extra == 'server'",
    "ldap3 ; extra == 'server'",
    "apache-libcloud ; extra == 'server'",
    "matplotlib ; extra == 'server'",
    "mysqlclient ; extra == 'server'",
    "numpy ; extra == 'server'",
    "pillow ; extra == 'server'",
    "python-json-logger ; extra == 'server'",
    "pyyaml ; extra == 'server'",
    "stomp.py ; extra == 'server'",
    "suds ; extra == 'server'",
    "tornado ~=5.1.1 ; extra == 'server'",
    "tornado-m2crypto ; extra == 'server'",
    "importlib-resources ; extra == 'server'",
    "flaky ; extra == 'testing'",
    "hypothesis ; extra == 'testing'",
    "mock ; extra == 'testing'",
    "parameterized ; extra == 'testing'",
    "pytest ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pytest-mock ; extra == 'testing'",
    "pycodestyle ; extra == 'testing'"
  ],
  "requires_python": ">=3.9",
  "summary": "dirac is an interware, meaning a software framework for distributed computing.",
  "version": "8.0.34",
  "releases": [],
  "developers": [],
  "kwds": "diracgrid dirac interware diracos2 diracos",
  "license_kwds": "gpl-3.0-only",
  "libtype": "pypi",
  "id": "pypi_dirac",
  "homepage": "https://github.com/diracgrid/dirac/",
  "release_count": 215,
  "dependency_ids": [
    "pypi_apache_libcloud",
    "pypi_authlib",
    "pypi_boto3",
    "pypi_botocore",
    "pypi_cachetools",
    "pypi_certifi",
    "pypi_cmreshandler",
    "pypi_db12",
    "pypi_diraccfg",
    "pypi_dominate",
    "pypi_elasticsearch",
    "pypi_elasticsearch_dsl",
    "pypi_flaky",
    "pypi_fts3",
    "pypi_gfal2_python",
    "pypi_gitpython",
    "pypi_hypothesis",
    "pypi_importlib_metadata",
    "pypi_importlib_resources",
    "pypi_ldap3",
    "pypi_m2crypto",
    "pypi_matplotlib",
    "pypi_mock",
    "pypi_mysqlclient",
    "pypi_numpy",
    "pypi_parameterized",
    "pypi_pexpect",
    "pypi_pillow",
    "pypi_prompt_toolkit",
    "pypi_psutil",
    "pypi_pyasn1",
    "pypi_pyasn1_modules",
    "pypi_pycodestyle",
    "pypi_pyjwt",
    "pypi_pyparsing",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_mock",
    "pypi_python_dateutil",
    "pypi_python_json_logger",
    "pypi_pytz",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_rucio_clients",
    "pypi_setuptools",
    "pypi_sqlalchemy",
    "pypi_stomp.py",
    "pypi_suds",
    "pypi_tornado",
    "pypi_tornado_m2crypto",
    "pypi_typing_extensions"
  ]
}
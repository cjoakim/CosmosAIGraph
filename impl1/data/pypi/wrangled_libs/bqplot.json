{
  "classifiers": [],
  "description": "# bqplot\n\n[![travis](https://travis-ci.com/bqplot/bqplot.svg?branch=master)](https://travis-ci.com/bqplot/bqplot)\n[![documentation](https://readthedocs.org/projects/bqplot/badge/?version=latest)](http://bqplot.readthedocs.org)\n[![binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/bqplot/bqplot/stable?filepath=examples/index.ipynb)\n[![chat](https://badges.gitter.im/join%20chat.svg)](https://gitter.im/jupyter-widgets/lobby)\n\n2-d plotting library for project jupyter\n\n## introduction\n\n`bqplot` is a 2-d visualization system for jupyter, based on the constructs of\nthe *grammar of graphics*.\n\n## usage\n\n[![wealth of nations](./wealth-of-nations.gif)](https://github.com/bqplot/bqplot/blob/master/examples/applications/wealth%20of%20nations/bubble%20chart.ipynb)\n\nin bqplot, every component of a plot is an interactive widget. this allows the\nuser to integrate visualizations with other jupyter interactive widgets to\ncreate integrated guis with a few lines of python code.\n\n## goals\n\n-   provide a unified framework for 2-d visualizations with a pythonic api\n-   provide a sensible api for adding user interactions (panning, zooming, selection, etc)\n\ntwo apis are provided\n\n- `object model`, which\n  is inspired by the constructs of the grammar of graphics (figure, marks, axes,\n  scales). this api is verbose but is fully customizable\n- `pyplot`, which is a context-based api similar to matplotlib's pyplot. `pyplot` provides sensible default choices for most parameters\n\n## trying it online\n\nto try out bqplot interactively in your web browser, just click on the binder\nlink:\n\n[![binder](docs/source/binder-logo.svg)](https://mybinder.org/v2/gh/bqplot/bqplot/stable?filepath=examples/index.ipynb)\n\n### dependencies\n\nthis package depends on the following packages:\n\n- `ipywidgets` (version >=7.0.0, <8.0)\n- `traitlets` (version >=4.3.0, <5.0)\n- `traittypes` (version >=0.2.1, <0.3)\n- `numpy`\n- `pandas`\n\n### installation\n\nusing pip:\n\n```\n$ pip install bqplot\n```\n\nusing conda\n\n```\n$ conda install -c conda-forge bqplot\n```\n\nif you are using jupyterlab <=2:\n\n```\n$ jupyter labextension install @jupyter-widgets/jupyterlab-manager bqplot\n```\n\n##### development installation\n\nfor a development installation (requires jupyterlab (version >= 3) and yarn):\n\n```\n$ git clone https://github.com/bqplot/bqplot.git\n$ cd bqplot\n$ pip install -e .\n$ jupyter nbextension install --py --overwrite --symlink --sys-prefix bqplot\n$ jupyter nbextension enable --py --sys-prefix bqplot\n```\n\nnote for developers: the `--symlink` argument on linux or os x allows one to\nmodify the javascript code in-place. this feature is not available\nwith windows.\n\nfor the experimental jupyterlab extension, install the python package, make sure the jupyter widgets extension is installed, and install the bqplot extension:\n\n```\n$ pip install \"ipywidgets>=7.6\"\n$ jupyter labextension develop . --overwrite\n```\n\nwhenever you make a change of the javascript code, you will need to rebuild:\n\n```\ncd js\nyarn run build\n```\n\nthen refreshing the jupyterlab/jupyter notebook is enough to reload the changes.\n\n##### running tests\n\nyou can install the dependencies necessary to run the tests with:\n\n```bash\n    conda env update -f test-environment.yml\n```\n\nand run it with for python tests:\n\n```bash\n    pytest\n```\n\nand `cd js` to run the js tests with:\n\n```bash\nyarn run test\n```\n\nevery time you make a change on your tests it's necessary to rebuild the js side:\n\n```bash\nyarn run build\n```\n\n## examples\n\n### using the `pyplot` api\n\n[![pyplot screenshot](/pyplot.png)](https://github.com/bqplot/bqplot/blob/master/examples/basic%20plotting/pyplot.ipynb)\n\n### using the `object model` api\n\n[![bqplot screenshot](/bqplot.png)](https://github.com/bqplot/bqplot/blob/master/examples/advanced%20plotting/advanced%20plotting.ipynb)\n\n## documentation\n\nfull documentation is available at https://bqplot.readthedocs.io/\n\n## install a previous bqplot version (only for jupyterlab <= 2)\n\nin order to install a previous bqplot version, you need to know which front-end version (javascript) matches with the back-end version (python).\n\nfor example, in order to install bqplot `0.11.9`, you need the labextension version `0.4.9`.\n\n```\n$ pip install bqplot==0.11.9\n$ jupyter labextension install bqplot@0.4.9\n```\n\nversions lookup table:\n\n| `back-end (python)` | `front-end (javascript)` |\n|---------------------|--------------------------|\n| 0.12.14             | 0.5.14                   |\n| 0.12.13             | 0.5.13                   |\n| 0.12.12             | 0.5.12                   |\n| 0.12.11             | 0.5.11                   |\n| 0.12.10             | 0.5.10                   |\n| 0.12.9              | 0.5.9                    |\n| 0.12.8              | 0.5.8                    |\n| 0.12.7              | 0.5.7                    |\n| 0.12.6              | 0.5.6                    |\n| 0.12.4              | 0.5.4                    |\n| 0.12.3              | 0.5.3                    |\n| 0.12.2              | 0.5.2                    |\n| 0.12.1              | 0.5.1                    |\n| 0.12.0              | 0.5.0                    |\n| 0.11.9              | 0.4.9                    |\n| 0.11.8              | 0.4.8                    |\n| 0.11.7              | 0.4.7                    |\n| 0.11.6              | 0.4.6                    |\n| 0.11.5              | 0.4.5                    |\n| 0.11.4              | 0.4.5                    |\n| 0.11.3              | 0.4.4                    |\n| 0.11.2              | 0.4.3                    |\n| 0.11.1              | 0.4.1                    |\n| 0.11.0              | 0.4.0                    |\n\n## development\n\nsee our [contributing guidelines](contributing.md) to know how to contribute and set up a development environment.\n\n## license\n\nthis software is licensed under the apache 2.0 license. see the [license](license) file\nfor details.\n",
  "docs_url": null,
  "keywords": "ipython,jupyter,widgets,graphics,plotting,d3",
  "license": "apache",
  "name": "bqplot",
  "package_url": "https://pypi.org/project/bqplot/",
  "project_url": "https://pypi.org/project/bqplot/",
  "project_urls": {
    "Homepage": "https://github.com/bqplot/bqplot"
  },
  "release_url": "https://pypi.org/project/bqplot/0.12.42/",
  "requires_dist": [
    "numpy >=1.10.4",
    "ipywidgets <9,>=7.5.0",
    "traitlets >=4.3.0",
    "traittypes >=0.0.6",
    "pandas <3.0.0,>=1.0.0"
  ],
  "requires_python": ">=3.6",
  "summary": "interactive plotting for the jupyter notebook, using d3.js and ipywidgets.",
  "version": "0.12.42",
  "releases": [],
  "developers": [
    "the_bqplot_development_team"
  ],
  "kwds": "bqplot matplotlib ipywidgets pyplot visualizations",
  "license_kwds": "apache",
  "libtype": "pypi",
  "id": "pypi_bqplot",
  "homepage": "https://github.com/bqplot/bqplot",
  "release_count": 109,
  "dependency_ids": [
    "pypi_ipywidgets",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_traitlets",
    "pypi_traittypes"
  ]
}
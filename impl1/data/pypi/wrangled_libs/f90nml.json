{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "topic :: utilities"
  ],
  "description": "=========================================================\nf90nml - a fortran namelist parser, generator, and editor\n=========================================================\n\na python module and command line tool for parsing fortran namelist files\n\n.. image:: https://ci.appveyor.com/api/projects/status/bcugyoqxiyyvemy8?svg=true\n   :target: https://ci.appveyor.com/project/marshallward/f90nml\n\n.. image:: https://coveralls.io/repos/marshallward/f90nml/badge.svg?branch=master\n   :target: https://coveralls.io/r/marshallward/f90nml?branch=master\n\n.. image:: https://zenodo.org/badge/doi/10.5281/zenodo.3245482.svg\n   :target: https://doi.org/10.5281/zenodo.3245482\n\n\ndocumentation\n=============\n\nthe complete documentation for ``f90nml`` is available from read the docs.\n\n   http://f90nml.readthedocs.org/en/latest/\n\n\nabout f90nml\n============\n\n``f90nml`` is a python module and command line tool that provides a simple\ninterface for the reading, writing, and modifying fortran namelist files.\n\na namelist file is parsed and converted into an ``namelist`` object, which\nbehaves like a standard python ``dict``.  values are converted from fortran\ndata types to equivalent primitive python types.\n\nthe command line tool ``f90nml`` can be used to modify individual values inside\nof a shell environment.  it can also be used to convert the data between\nnamelists and other configuration formats.  json and yaml formats are currently\nsupported.\n\n\nquick usage guide\n=================\n\nto read a namelist file ``sample.nml`` which contains the following namelists:\n\n.. code-block:: fortran\n\n   &config_nml\n      input = 'wind.nc'\n      steps = 864\n      layout = 8, 16\n      visc = 1.0e-4\n      use_biharmonic = .false.\n   /\n\nwe would use the following script:\n\n.. code:: python\n\n   import f90nml\n   nml = f90nml.read('sample.nml')\n\nwhich would would point ``nml`` to the following ``dict``:\n\n.. code:: python\n\n   nml = {\n       'config_nml': {\n           'input': 'wind.nc',\n           'steps': 864,\n           'layout': [8, 16],\n           'visc': 0.0001,\n           'use_biharmonic': false\n       }\n   }\n\nfile objects can also be used as inputs:\n\n.. code:: python\n\n   with open('sample.nml') as nml_file:\n       nml = f90nml.read(nml_file)\n\nto modify one of the values, say ``steps``, and save the output, just\nmanipulate the ``nml`` contents and write to disk using the ``write`` function:\n\n.. code:: python\n\n   nml['config_nml']['steps'] = 432\n   nml.write('new_sample.nml')\n\nnamelists can also be saved to file objects:\n\n.. code:: python\n\n   with open('target.nml') as nml_file:\n      nml.write(nml_file)\n\nto modify a namelist but preserve its comments and formatting, create a\nnamelist patch and apply it to a target file using the ``patch`` function:\n\n.. code:: python\n\n   patch_nml = {'config_nml': {'visc': 1e-6}}\n   f90nml.patch('sample.nml', patch_nml, 'new_sample.nml')\n\n\ncommand line interface\n----------------------\n\na command line tool is provided to manipulate namelist files within the shell:\n\n.. code:: sh\n\n   $ f90nml config.nml -g config_nml -v steps=432\n\n.. code-block:: fortran\n\n   &config_nml\n      input = 'wind.nc'\n      steps = 432\n      layout = 8, 16\n      visc = 1.0e-4\n      use_biharmonic = .false.\n   /\n\nsee the documentation for details.\n\n\ninstallation\n============\n\n``f90nml`` is available on pypi and can be installed via pip::\n\n   $ pip install f90nml\n\nthe latest version of ``f90nml`` can be installed from source::\n\n   $ git clone https://github.com/marshallward/f90nml.git\n   $ cd f90nml\n   $ pip install .\n\n\npackage distribution\n--------------------\n\n``f90nml`` is not distributed through any official packaging tools, but it is\navailable on arch linux via the aur::\n\n   $ git clone https://aur.archlinux.org/python-f90nml.git\n   $ cd python-f90nml\n   $ makepkg -sri\n\nvolunteers are welcome to submit and maintain ``f90nml`` on other\ndistributions.\n\n\nlocal install\n-------------\n\nusers without install privileges can append the ``--user`` flag to ``pip`` from\nthe top ``f90nml`` directory::\n\n   $ pip install --user .\n\nif pip is not available, then ``setup.py`` can still be used::\n\n   $ python setup.py install --user\n\nwhen using ``setup.py`` locally, some users have reported that ``--prefix=``\nmay need to be appended to the command::\n\n   $ python setup.py install --user --prefix=\n\n\nyaml support\n------------\n\nthe command line tool offers support for conversion between namelists and yaml\nformatted output.  if pyyaml is already installed, then no other steps are\nrequired.  to require yaml support, install the ``yaml`` extras package::\n\n   $ pip install f90nml[yaml]\n\nto install as a user::\n\n   $ pip install --user .[yaml]\n\n\ncontributing to ``f90nml``\n==========================\n\nusers are welcome to submit bug reports, feature requests, and code\ncontributions to this project through github.  more information is available in\nthe `contributing`_ guidelines.\n\n.. _contributing: http://f90nml.readthedocs.org/en/latest/contributing.html\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "f90nml",
  "package_url": "https://pypi.org/project/f90nml/",
  "project_url": "https://pypi.org/project/f90nml/",
  "project_urls": {
    "Homepage": "http://github.com/marshallward/f90nml"
  },
  "release_url": "https://pypi.org/project/f90nml/1.4.4/",
  "requires_dist": [
    "PyYAML ; extra == 'yaml'"
  ],
  "requires_python": "",
  "summary": "fortran 90 namelist parser",
  "version": "1.4.4",
  "releases": [],
  "developers": [
    "f90nml@marshallward.org",
    "marshall_ward"
  ],
  "kwds": "fortran namelists nml_file namelist parsing",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_f90nml",
  "homepage": "http://github.com/marshallward/f90nml",
  "release_count": 44,
  "dependency_ids": [
    "pypi_pyyaml"
  ]
}
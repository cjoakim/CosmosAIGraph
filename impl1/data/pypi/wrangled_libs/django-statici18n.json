{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "django-statici18n\n=================\n\n.. image:: https://github.com/zyegfryed/django-statici18n/actions/workflows/build.yml/badge.svg?branch=main\n   :alt: build status\n   :target: https://github.com/zyegfryed/django-statici18n/actions\n\n.. image:: https://codecov.io/gh/zyegfryed/django-statici18n/branch/main/graph/badge.svg?token=xiadyar30f\n   :target: https://codecov.io/gh/zyegfryed/django-statici18n\n\noverview\n--------\n\nwhen dealing with internationalization in javascript code, django provides\nthe `jsoncatalog view`_ which sends out a javascript code library with\nfunctions that mimic the gettext interface, plus an array of translation\nstrings.\n\nat first glance, it works well and everything is fine. but, because\n`jsoncatalog view`_ is generating javascript catalog dynamically on each\nand every request, it's `adding an overhead`_ that can be an issue with\nsite growth.\n\nthat's what ``django-statici18n`` is for:\n\n    collecting javascript catalogs from each of your django apps (and any\n    other place you specify) into a single location that can easily be\n    served in production.\n\nthe main website for ``django-statici18n`` is\n`github.com/zyegfryed/django-statici18n`_ where you can also file tickets.\n\n.. _jsoncatalog view: https://docs.djangoproject.com/en/3.2/topics/i18n/translation/#the-jsoncatalog-view\n.. _adding an overhead: https://docs.djangoproject.com/en/3.2/topics/i18n/translation/#note-on-performance\n.. _github.com/zyegfryed/django-statici18n: https://github.com/zyegfryed/django-statici18n\n\nsupported django versions\n-------------------------\n\n``django-statici18n`` works with all the django versions officially\nsupported by the django project. at this time of writing, these are the\n3.2 (lts), 4.1, 4.2 series.\n\ninstallation\n------------\n\n1. use your favorite python packaging tool to install ``django-statici18n``\n   from `pypi`_, e.g.::\n\n    pip install django-statici18n\n\n2. add ``'statici18n'`` to your ``installed_apps`` setting::\n\n    installed_apps = [\n        # ...\n        'statici18n',\n    ]\n\n3. once you have `translated`_ and `compiled`_ your messages, use the\n   ``compilejsi18n`` management command::\n\n    python manage.py compilejsi18n\n\n4. add the `django.core.context_processors.i18n`_ context processor to the\n   ``context_processors`` section for your backend in the ``templates``\n   setting - it should have already been set by django::\n\n    templates = [\n      {\n        # ...\n        'options': {\n          'context_processors': {\n            # ...\n            'django.template.context_processors.i18n',\n          },\n        },\n      },\n    ]\n\n5. edit your template(s) and replace the `dynamically generated script`_ by the\n   statically generated one:\n\n  .. code-block:: html+django\n\n    <script src=\"{{ static_url }}jsi18n/{{ language_code }}/djangojs.js\"></script>\n\n.. note::\n\n    by default, the generated catalogs are stored to ``static_root/jsi18n``.\n    you can modify the output path and more options by tweaking\n    ``django-statici18n`` settings.\n\n**(optional)**\n\nthe following step assumes you're using `django.contrib.staticfiles`_.\n\n5. edit your template(s) and use the provided template tag:\n\n  .. code-block:: html+django\n\n    {% load statici18n %}\n    <script src=\"{% statici18n language_code %}\"></script>\n\n6. or inline the javascript directly in your template:\n\n  .. code-block:: html+django\n\n    {% load statici18n %}\n    <script>{% inlinei18n language_code %}</script>\n\n.. _pypi: http://pypi.python.org/pypi/django-statici18n\n.. _translated: https://docs.djangoproject.com/en/4.2/topics/i18n/translation/#message-files\n.. _compiled: https://docs.djangoproject.com/en/4.2/topics/i18n/translation/#compiling-message-files\n.. _django.core.context_processors.i18n: https://docs.djangoproject.com/en/4.2/ref/templates/api/#django-template-context-processors-i18n\n.. _upgrading templates to django 1.8: https://docs.djangoproject.com/en/2.2/ref/templates/upgrading/\n.. _dynamically generated script: https://docs.djangoproject.com/en/4.2/topics/i18n/translation/#using-the-javascript-translation-catalog\n.. _django.contrib.staticfiles: https://docs.djangoproject.com/en/4.2/ref/contrib/staticfiles/\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "django-statici18n",
  "package_url": "https://pypi.org/project/django-statici18n/",
  "project_url": "https://pypi.org/project/django-statici18n/",
  "project_urls": {
    "Homepage": "http://django-statici18n.readthedocs.org/",
    "Source": "https://github.com/zyegfryed/django-statici18n"
  },
  "release_url": "https://pypi.org/project/django-statici18n/2.4.0/",
  "requires_dist": [
    "Django (>=3.2)",
    "django-appconf (>=1.0)"
  ],
  "requires_python": "",
  "summary": "a django app that compiles i18n javascript catalogs to static files.",
  "version": "2.4.0",
  "releases": [],
  "developers": [
    "sebastien_fievet",
    "zyegfryed@gmail.com"
  ],
  "kwds": "djangojs _jsoncatalog _translated language_code internationalization",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_django_statici18n",
  "homepage": "http://django-statici18n.readthedocs.org/",
  "release_count": 40,
  "dependency_ids": [
    "pypi_django",
    "pypi_django_appconf"
  ]
}
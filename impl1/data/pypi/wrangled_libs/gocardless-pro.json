{
  "classifiers": [],
  "description": "a client library for the gocardless pro api.\n.. |pypi-badge| image:: https://badge.fury.io/py/gocardless_pro.svg\n    :target: https://pypi.python.org/pypi/gocardless_pro\n\ngocardless pro python client library\n============================================\n\na python client for interacting with the gocardless pro api.\n\n|pypi-badge|\n\ntested against python 3.8, 3.9, 3.10 and 3.11.\n\n- `\"getting started\" guide <https://developer.gocardless.com/getting-started/api/introduction/?lang=python>`_ with copy and paste python code samples\n- `api reference`_\n\n------------\n\ninstall from pypi:\n\n.. code:: bash\n\n    $ pip install gocardless_pro\n\n\nusage\n-----\n\ncreate a ``client`` instance, providing your access token and the environment\nyou want to use:\n\n.. code:: python\n\n    import gocardless_pro\n    token = os.environ['access_token']\n    client = gocardless_pro.client(access_token=token, environment='live')\n\naccess api endpoints using the corresponding methods on the client object:\n\n.. code:: python\n\n    # create a new customer. we automatically add idempotency keys to requests to create\n    # resources, stopping duplicates accidentally getting created if something goes wrong\n    # with the api (e.g. networking problems) - see https://developer.gocardless.com/api\n    # -reference/#making-requests-idempotency-keys for details\n    customer = client.customers.create(params={'email': 'jane@example.com'})\n\n    # fetch a payment by its id\n    payment = client.payments.get(\"pa123\")\n\n    # loop through a page of payments, printing each payment's amount\n    for payment in client.payments.list().records:\n        decimal_amount = decimal.decimal(payment.amount) / 100\n        print('payment for \u00a3{0}'.format(decimal_amount))\n\n    # create a mandate pdf in a specific language\n    client.mandate_pdfs.create(\n        params={'links': {'mandate': 'md00001234xyz'}},\n        headers={'accept-language': 'fr'}\n    )\n\nrate limit response headers can be read:\n\n.. code:: python\n\n    # note these properties will be none until you make an api request with the client\n    client.rate_limit.limit\n    client.rate_limit.remaining\n    client.rate_limit.reset\n\n\nfor full documentation, see our `api reference`_.\n\n.. _api reference: https://developer.gocardless.com/api-reference\n\n\navailable resources\n```````````````````\n\nbank authorisations\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a bank authorisation\n    client.bank_authorisations.create(params={...})\n\n    # get a bank authorisation\n    client.bank_authorisations.get('bau123', params={...})\n\nbank details lookups\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # perform a bank details lookup\n    client.bank_details_lookups.create(params={...})\n\nbilling requests\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a billing request\n    client.billing_requests.create(params={...})\n\n    # collect customer details\n    client.billing_requests.collect_customer_details('brq123', params={...})\n\n    # collect bank account details\n    client.billing_requests.collect_bank_account('brq123', params={...})\n\n    # confirm the payer details\n    client.billing_requests.confirm_payer_details('brq123', params={...})\n\n    # fulfil a billing request\n    client.billing_requests.fulfil('brq123', params={...})\n\n    # cancel a billing request\n    client.billing_requests.cancel('brq123', params={...})\n\n    # list billing requests\n    client.billing_requests.list(params={...})\n\n    # iterate through all billing_requests\n    client.billing_requests.all(params={...})\n\n    # get a single billing request\n    client.billing_requests.get('brq123', params={...})\n\n    # notify the customer\n    client.billing_requests.notify('brq123', params={...})\n\n    # trigger fallback\n    client.billing_requests.fallback('brq123', params={...})\n\n    # change currency\n    client.billing_requests.choose_currency('brq123', params={...})\n\n    # select institution for a billing request\n    client.billing_requests.select_institution('brq123', params={...})\n\nbilling request flows\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a billing request flow\n    client.billing_request_flows.create(params={...})\n\n    # initialise a billing request flow\n    client.billing_request_flows.initialise('brf123', params={...})\n\nbilling request templates\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # list billing request templates\n    client.billing_request_templates.list(params={...})\n\n    # iterate through all billing_request_templates\n    client.billing_request_templates.all(params={...})\n\n    # get a single billing request template\n    client.billing_request_templates.get('brt123', params={...})\n\n    # create a billing request template\n    client.billing_request_templates.create(params={...})\n\n    # update a billing request template\n    client.billing_request_templates.update('brq123', params={...})\n\nblocks\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a block\n    client.blocks.create(params={...})\n\n    # get a single block\n    client.blocks.get('blc123', params={...})\n\n    # list multiple blocks\n    client.blocks.list(params={...})\n\n    # iterate through all blocks\n    client.blocks.all(params={...})\n\n    # disable a block\n    client.blocks.disable('blc123', params={...})\n\n    # enable a block\n    client.blocks.enable('blc123', params={...})\n\n    # create blocks by reference\n    client.blocks.block_by_ref(params={...})\n\ncreditors\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a creditor\n    client.creditors.create(params={...})\n\n    # list creditors\n    client.creditors.list(params={...})\n\n    # iterate through all creditors\n    client.creditors.all(params={...})\n\n    # get a single creditor\n    client.creditors.get('cr123', params={...})\n\n    # update a creditor\n    client.creditors.update('cr123', params={...})\n\ncreditor bank accounts\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a creditor bank account\n    client.creditor_bank_accounts.create(params={...})\n\n    # list creditor bank accounts\n    client.creditor_bank_accounts.list(params={...})\n\n    # iterate through all creditor_bank_accounts\n    client.creditor_bank_accounts.all(params={...})\n\n    # get a single creditor bank account\n    client.creditor_bank_accounts.get('ba123', params={...})\n\n    # disable a creditor bank account\n    client.creditor_bank_accounts.disable('ba123', params={...})\n\ncurrency exchange rates\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # list exchange rates\n    client.currency_exchange_rates.list(params={...})\n\n    # iterate through all currency_exchange_rates\n    client.currency_exchange_rates.all(params={...})\n\ncustomers\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a customer\n    client.customers.create(params={...})\n\n    # list customers\n    client.customers.list(params={...})\n\n    # iterate through all customers\n    client.customers.all(params={...})\n\n    # get a single customer\n    client.customers.get('cu123', params={...})\n\n    # update a customer\n    client.customers.update('cu123', params={...})\n\n    # remove a customer\n    client.customers.remove('cu123', params={...})\n\ncustomer bank accounts\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a customer bank account\n    client.customer_bank_accounts.create(params={...})\n\n    # list customer bank accounts\n    client.customer_bank_accounts.list(params={...})\n\n    # iterate through all customer_bank_accounts\n    client.customer_bank_accounts.all(params={...})\n\n    # get a single customer bank account\n    client.customer_bank_accounts.get('ba123', params={...})\n\n    # update a customer bank account\n    client.customer_bank_accounts.update('ba123', params={...})\n\n    # disable a customer bank account\n    client.customer_bank_accounts.disable('ba123', params={...})\n\ncustomer notifications\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # handle a notification\n    client.customer_notifications.handle('pcn123', params={...})\n\nevents\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # list events\n    client.events.list(params={...})\n\n    # iterate through all events\n    client.events.all(params={...})\n\n    # get a single event\n    client.events.get('ev123', params={...})\n\ninstalment schedules\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create (with dates)\n    client.instalment_schedules.create_with_dates(params={...})\n\n    # create (with schedule)\n    client.instalment_schedules.create_with_schedule(params={...})\n\n    # list instalment schedules\n    client.instalment_schedules.list(params={...})\n\n    # iterate through all instalment_schedules\n    client.instalment_schedules.all(params={...})\n\n    # get a single instalment schedule\n    client.instalment_schedules.get('is123', params={...})\n\n    # update an instalment schedule\n    client.instalment_schedules.update('is123', params={...})\n\n    # cancel an instalment schedule\n    client.instalment_schedules.cancel('is123', params={...})\n\ninstitutions\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # list institutions\n    client.institutions.list(params={...})\n\n    # iterate through all institutions\n    client.institutions.all(params={...})\n\n    # list institutions for billing request\n    client.institutions.list_for_billing_request('brq123', params={...})\n\nmandates\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a mandate\n    client.mandates.create(params={...})\n\n    # list mandates\n    client.mandates.list(params={...})\n\n    # iterate through all mandates\n    client.mandates.all(params={...})\n\n    # get a single mandate\n    client.mandates.get('md123', params={...})\n\n    # update a mandate\n    client.mandates.update('md123', params={...})\n\n    # cancel a mandate\n    client.mandates.cancel('md123', params={...})\n\n    # reinstate a mandate\n    client.mandates.reinstate('md123', params={...})\n\nmandate imports\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a new mandate import\n    client.mandate_imports.create(params={...})\n\n    # get a mandate import\n    client.mandate_imports.get('im000010790wx1', params={...})\n\n    # submit a mandate import\n    client.mandate_imports.submit('im000010790wx1', params={...})\n\n    # cancel a mandate import\n    client.mandate_imports.cancel('im000010790wx1', params={...})\n\nmandate import entries\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # add a mandate import entry\n    client.mandate_import_entries.create(params={...})\n\n    # list all mandate import entries\n    client.mandate_import_entries.list(params={...})\n\n    # iterate through all mandate_import_entries\n    client.mandate_import_entries.all(params={...})\n\nmandate pdfs\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a mandate pdf\n    client.mandate_pdfs.create(params={...})\n\nnegative balance limits\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # list negative balance limits\n    client.negative_balance_limits.list(params={...})\n\n    # iterate through all negative_balance_limits\n    client.negative_balance_limits.all(params={...})\n\n    # create a negative balance limit\n    client.negative_balance_limits.create(params={...})\n\npayer authorisations\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # get a single payer authorisation\n    client.payer_authorisations.get('pa123', params={...})\n\n    # create a payer authorisation\n    client.payer_authorisations.create(params={...})\n\n    # update a payer authorisation\n    client.payer_authorisations.update('pa123', params={...})\n\n    # submit a payer authorisation\n    client.payer_authorisations.submit('pa123', params={...})\n\n    # confirm a payer authorisation\n    client.payer_authorisations.confirm('pa123', params={...})\n\npayments\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a payment\n    client.payments.create(params={...})\n\n    # list payments\n    client.payments.list(params={...})\n\n    # iterate through all payments\n    client.payments.all(params={...})\n\n    # get a single payment\n    client.payments.get('pm123', params={...})\n\n    # update a payment\n    client.payments.update('pm123', params={...})\n\n    # cancel a payment\n    client.payments.cancel('pm123', params={...})\n\n    # retry a payment\n    client.payments.retry('pm123', params={...})\n\npayouts\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # list payouts\n    client.payouts.list(params={...})\n\n    # iterate through all payouts\n    client.payouts.all(params={...})\n\n    # get a single payout\n    client.payouts.get('po123', params={...})\n\n    # update a payout\n    client.payouts.update('po123', params={...})\n\npayout items\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # get all payout items in a single payout\n    client.payout_items.list(params={...})\n\n    # iterate through all payout_items\n    client.payout_items.all(params={...})\n\nredirect flows\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a redirect flow\n    client.redirect_flows.create(params={...})\n\n    # get a single redirect flow\n    client.redirect_flows.get('re123456', params={...})\n\n    # complete a redirect flow\n    client.redirect_flows.complete('re123456', params={...})\n\nrefunds\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a refund\n    client.refunds.create(params={...})\n\n    # list refunds\n    client.refunds.list(params={...})\n\n    # iterate through all refunds\n    client.refunds.all(params={...})\n\n    # get a single refund\n    client.refunds.get('rf123', params={...})\n\n    # update a refund\n    client.refunds.update('rf123', params={...})\n\nscenario simulators\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # simulate a scenario\n    client.scenario_simulators.run('payment_failed', params={...})\n\nschemeentifiers\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a scheme identifier\n    client.scheme_identifiers.create(params={...})\n\n    # list scheme identifiers\n    client.scheme_identifiers.list(params={...})\n\n    # iterate through all scheme_identifiers\n    client.scheme_identifiers.all(params={...})\n\n    # get a single scheme identifier\n    client.scheme_identifiers.get('su123', params={...})\n\nsubscriptions\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a subscription\n    client.subscriptions.create(params={...})\n\n    # list subscriptions\n    client.subscriptions.list(params={...})\n\n    # iterate through all subscriptions\n    client.subscriptions.all(params={...})\n\n    # get a single subscription\n    client.subscriptions.get('sb123', params={...})\n\n    # update a subscription\n    client.subscriptions.update('sb123', params={...})\n\n    # pause a subscription\n    client.subscriptions.pause('sb123', params={...})\n\n    # resume a subscription\n    client.subscriptions.resume('sb123', params={...})\n\n    # cancel a subscription\n    client.subscriptions.cancel('sb123', params={...})\n\ntax rates\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # list tax rates\n    client.tax_rates.list(params={...})\n\n    # iterate through all tax_rates\n    client.tax_rates.all(params={...})\n\n    # get a single tax rate\n    client.tax_rates.get('gb_vat_1', params={...})\n\ntransferred mandates\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # get updated customer bank details\n    client.transferred_mandates.transferred_mandates('md123', params={...})\n\nverification details\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # create a verification detail\n    client.verification_details.create(params={...})\n\n    # list verification details\n    client.verification_details.list(params={...})\n\n    # iterate through all verification_details\n    client.verification_details.all(params={...})\n\nwebhooks\n''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    # list webhooks\n    client.webhooks.list(params={...})\n\n    # iterate through all webhooks\n    client.webhooks.all(params={...})\n\n    # get a single webhook\n    client.webhooks.get('wb123', params={...})\n\n    # retry a webhook\n    client.webhooks.retry('wb123', params={...})\n\n\n\nrunning tests\n-------------\n\nfirst, install the development dependencies:\n\n.. code:: bash\n\n    $ pip install -r requirements-dev.txt\n\nto run the test suite against the current python version, run ``pytest``.\n\nto run the test suite against multiple python versions, run ``tox``.\n\nif you don't have all versions of python installed, you can run the tests in\na docker container by running ``make``.\n",
  "docs_url": null,
  "keywords": "gocardless directdebit payments sepa bacs",
  "license": "mit",
  "name": "gocardless-pro",
  "package_url": "https://pypi.org/project/gocardless-pro/",
  "project_url": "https://pypi.org/project/gocardless-pro/",
  "project_urls": {
    "Homepage": "https://github.com/gocardless/gocardless-pro-python"
  },
  "release_url": "https://pypi.org/project/gocardless-pro/1.49.0/",
  "requires_dist": [
    "requests >=2.6",
    "six"
  ],
  "requires_python": "",
  "summary": "a client library for the gocardless pro api.",
  "version": "1.49.0",
  "releases": [],
  "developers": [
    "engineering@gocardless.com",
    "gocardless"
  ],
  "kwds": "gocardless_pro gocardless pypi pytest pip",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_gocardless_pro",
  "homepage": "https://github.com/gocardless/gocardless-pro-python",
  "release_count": 56,
  "dependency_ids": [
    "pypi_requests",
    "pypi_six"
  ],
  "documentation_summary": "The HTML text is a PyPI (Python Package Index) page for the \"gocardless-pro\" package, version 1.49.0, released on November 28, 2023. It's a client library for the GoCardless Pro API, designed for Python versions 3.8 to 3.11. The package facilitates various operations such as creating customers, payments, and mandates, among others, with the aim of simplifying interactions with the GoCardless Pro API for direct debit payments. The library supports idempotency keys to prevent duplicate creations due to API issues. It's licensed under MIT, with GoCardless as the author. The page also includes a warning about JavaScript requirement and unsupported browsers, specifically mentioning that it will show a warning for Internet Explorer 9 and below.",
  "embedding": [
    -0.005716418381780386,
    -0.03227445110678673,
    -0.01595761626958847,
    -0.03644691780209541,
    0.022451190277934074,
    0.01644117943942547,
    0.018347803503274918,
    -0.008400199003517628,
    -0.025172965601086617,
    -0.03937593474984169,
    0.01624775491654873,
    -0.020668910816311836,
    -0.026347335427999496,
    0.00045852240873500705,
    0.006669730879366398,
    0.0021069578360766172,
    0.02278277836740017,
    -0.04382472485303879,
    -0.0024333635810762644,
    0.012033837847411633,
    0.011909493245184422,
    0.009719638153910637,
    -0.030865205451846123,
    -0.020005738362669945,
    0.008731786161661148,
    -0.009823259897530079,
    0.013339461758732796,
    -0.00034777758992277086,
    0.008020255714654922,
    0.010507157072424889,
    0.009588385932147503,
    -0.018154378980398178,
    -0.04725112020969391,
    -0.008559084497392178,
    -0.012779908254742622,
    -0.011156515218317509,
    0.03633638843894005,
    -0.005484998691827059,
    0.030036238953471184,
    0.006611012388020754,
    0.025739427655935287,
    0.015404971316456795,
    0.0030896293465048075,
    0.017919505015015602,
    -0.015543132089078426,
    0.0021086849737912416,
    -0.016303017735481262,
    -0.031113896518945694,
    -0.026761818677186966,
    0.02694142982363701,
    0.011432836763560772,
    0.02334923855960369,
    0.0035369261167943478,
    -0.0027459533885121346,
    0.011045985855162144,
    -0.019757047295570374,
    0.00638650031760335,
    0.025103885680437088,
    -0.01264174748212099,
    -0.024869011715054512,
    -0.0027459533885121346,
    -0.002623335225507617,
    -0.015045751817524433,
    -0.0024402716662734747,
    -0.010742031037807465,
    0.01561221294105053,
    -0.03683377057313919,
    -0.002929016947746277,
    -0.009705822914838791,
    0.0011855955235660076,
    0.03738641366362572,
    0.0076610371470451355,
    -0.011094341985881329,
    -0.011653895489871502,
    0.028544098138809204,
    -0.030478354543447495,
    -0.0163444671779871,
    0.0008548722835257649,
    -0.007688669487833977,
    0.004072300624102354,
    0.005464274436235428,
    -0.009180810302495956,
    0.00475274445489049,
    0.033048152923583984,
    0.011481193825602531,
    0.0036543630994856358,
    -0.0207794401794672,
    0.02449597604572773,
    -0.0010854287538677454,
    0.003992857877165079,
    0.023501215502619743,
    0.00813769269734621,
    0.0042519099079072475,
    0.039044346660375595,
    0.001277990872040391,
    0.03208102285861969,
    -0.022768961265683174,
    0.03509293869137764,
    0.009242982603609562,
    -0.019812311977148056,
    -0.025518368929624557,
    0.019425461068749428,
    -0.01627538539469242,
    -0.018043849617242813,
    -0.03451266139745712,
    -0.02757696993649006,
    -0.009671282023191452,
    -0.015943799167871475,
    0.04490238055586815,
    0.013995726592838764,
    -0.010334455408155918,
    0.031583644449710846,
    -0.008800867013633251,
    -0.006579925771802664,
    -0.0019964289385825396,
    -0.02731446363031864,
    0.03174943849444389,
    0.010431168600916862,
    0.004086116794496775,
    -0.004320990759879351,
    -0.012323976494371891,
    -7.501719665015116e-05,
    0.014272049069404602,
    -0.015280625782907009,
    0.027424992993474007,
    -0.007695577573031187,
    0.011495009995996952,
    -0.018969528377056122,
    0.01798858493566513,
    -0.011916400864720345,
    0.011177239008247852,
    0.0009852618677541614,
    0.002711412962526083,
    0.010368996299803257,
    -0.007087668403983116,
    0.005295027047395706,
    -0.03829827904701233,
    0.028958581387996674,
    0.007654129061847925,
    -0.02567034587264061,
    -0.01029300782829523,
    0.039900947362184525,
    -0.008496912196278572,
    0.013443082571029663,
    -0.009484764188528061,
    0.03694429621100426,
    0.0076817614026367664,
    -0.022423557937145233,
    -0.008414015173912048,
    -0.010935456492006779,
    0.016510261222720146,
    0.013698680326342583,
    0.011971665546298027,
    -0.017601734027266502,
    -0.005972016602754593,
    0.0010612505720928311,
    0.00027070954092778265,
    0.006151626352220774,
    -0.01365723181515932,
    -0.008227498270571232,
    -0.010237743146717548,
    0.027742763981223106,
    0.006193074397742748,
    -0.0030136406421661377,
    0.010161754675209522,
    0.019936656579375267,
    0.0055126310326159,
    -0.0001516534830443561,
    3.588952313293703e-05,
    0.018776103854179382,
    -0.005118871573358774,
    -0.006293241400271654,
    -0.02138734981417656,
    -0.003473026445135474,
    0.0009291339083574712,
    0.029152007773518562,
    -0.015487867407500744,
    -0.014285865239799023,
    -0.010735123418271542,
    -0.015667477622628212,
    0.03279946371912956,
    0.0022261219564825296,
    0.00011268771049799398,
    0.04744454845786095,
    0.008123877458274364,
    -0.018568862229585648,
    0.006718087010085583,
    0.000493494444526732,
    -0.0012987150112167,
    0.012752275913953781,
    0.004355531185865402,
    0.057861898094415665,
    -0.002987735439091921,
    -0.017435939982533455,
    -0.5782874226570129,
    -0.016634605824947357,
    -0.018389252945780754,
    -0.01693855971097946,
    -0.004524778574705124,
    0.021981442347168922,
    0.015556948259472847,
    0.023045284673571587,
    -0.0018530867528170347,
    0.04285759478807449,
    -0.020834704861044884,
    2.1196407033130527e-05,
    -0.02890331670641899,
    -0.0015171824488788843,
    0.0049185375683009624,
    -0.020047185942530632,
    0.023846618831157684,
    -0.015474051237106323,
    -0.02865462750196457,
    -0.010728214867413044,
    0.007198197301477194,
    0.023749906569719315,
    -0.012241080403327942,
    0.010838744230568409,
    0.0034540293272584677,
    0.007930451072752476,
    0.010085765272378922,
    0.0015724468976259232,
    0.018872816115617752,
    0.025020988658070564,
    -0.020599830895662308,
    0.013539794832468033,
    0.01703527197241783,
    -0.004846003372222185,
    0.05924351140856743,
    0.002091414760798216,
    -0.010935456492006779,
    0.03318631276488304,
    -0.015142465010285378,
    0.03771800175309181,
    -0.02665129117667675,
    0.0002450202009640634,
    -0.013988818973302841,
    -0.008662705309689045,
    0.019370196387171745,
    0.02278277836740017,
    0.020475486293435097,
    -0.005049790721386671,
    -0.018679391592741013,
    0.012061470188200474,
    0.0005284664803184569,
    -0.011495009995996952,
    0.009401868097484112,
    -0.013733220286667347,
    0.02211960405111313,
    -0.02322489395737648,
    0.0029307438526302576,
    -0.0018859000410884619,
    -0.004341715015470982,
    0.004942716099321842,
    -0.011267043650150299,
    0.0030706319957971573,
    0.023929515853524208,
    -0.025615081191062927,
    -0.003251968650147319,
    0.028129614889621735,
    -0.028958581387996674,
    -0.029013846069574356,
    0.012068378739058971,
    -0.009919972158968449,
    0.024979541078209877,
    -0.014824694022536278,
    -0.010590054094791412,
    -0.03152837976813316,
    0.015999063849449158,
    0.05612106993794441,
    0.025490736588835716,
    -0.008068612776696682,
    0.00712220836430788,
    0.004849457181990147,
    -0.01424441672861576,
    0.017214883118867874,
    -0.00950548890978098,
    -0.018568862229585648,
    0.03127969056367874,
    0.01169534306973219,
    -0.029704652726650238,
    -0.010044317692518234,
    0.025463104248046875,
    -0.017021456733345985,
    0.01906624250113964,
    0.011218687519431114,
    0.005018704570829868,
    -0.01786424033343792,
    0.01757410168647766,
    0.0032951440662145615,
    -0.016206305474042892,
    -0.01796095259487629,
    -0.015142465010285378,
    -0.03343500569462776,
    0.007391622755676508,
    0.004158651456236839,
    0.0014342856593430042,
    0.007550508249551058,
    0.036474548280239105,
    -0.021014314144849777,
    -0.00909100566059351,
    -0.0016208032611757517,
    0.0011208325158804655,
    -0.015778006985783577,
    -0.024288734421133995,
    -0.048687998205423355,
    -0.011488101445138454,
    0.011702251620590687,
    -0.016330650076270103,
    -0.024316366761922836,
    0.019812311977148056,
    -0.007177473045885563,
    0.030008606612682343,
    0.015626028180122375,
    -0.007785382214933634,
    0.008821590803563595,
    -0.004932353738695383,
    0.02870989218354225,
    0.011854228563606739,
    0.006459034979343414,
    -0.005554079078137875,
    -0.004497146233916283,
    0.0007015996961854398,
    0.00476656062528491,
    0.024343999102711678,
    -0.004745836369693279,
    0.03644691780209541,
    -0.0011061528930440545,
    0.05222492292523384,
    0.024703217670321465,
    0.030008606612682343,
    0.00031561192008666694,
    0.01757410168647766,
    -0.0014576003886759281,
    0.00669390894472599,
    0.006642098538577557,
    -3.424346141400747e-05,
    -0.022824225947260857,
    -0.001771917100995779,
    -0.02075180783867836,
    -0.002409185515716672,
    -0.01729777827858925,
    -0.0033797677606344223,
    -0.0045385947450995445,
    -0.011888769455254078,
    -0.03600480034947395,
    -0.008559084497392178,
    3.4810138458851725e-05,
    -0.002685507759451866,
    -0.008863039314746857,
    -0.01945309340953827,
    0.004756198264658451,
    -0.014071715995669365,
    -0.0021846736781299114,
    0.005630068015307188,
    -0.012496678158640862,
    -0.021359717473387718,
    0.0006800120463594794,
    -0.03525873273611069,
    -0.0077784741297364235,
    -0.028101982548832893,
    0.029870444908738136,
    -0.04465369135141373,
    -0.02312817983329296,
    -0.00804098043590784,
    -0.016524076461791992,
    0.0016173492185771465,
    0.028323041275143623,
    0.039458829909563065,
    0.008310394361615181,
    -0.016413547098636627,
    0.03849170356988907,
    -0.013595059514045715,
    -0.023501215502619743,
    -0.005585165694355965,
    -0.005447004456073046,
    -0.0342639721930027,
    -0.003871966851875186,
    0.0390167161822319,
    0.005467728246003389,
    0.016413547098636627,
    0.024026228114962578,
    -0.022948570549488068,
    0.002794309752061963,
    -0.015335890464484692,
    0.022741328924894333,
    -0.016980009153485298,
    0.02579469047486782,
    -0.03249550983309746,
    0.0038028862327337265,
    0.010762755759060383,
    0.023473583161830902,
    -0.008379475213587284,
    0.01884518377482891,
    0.04263653978705406,
    -0.006880426313728094,
    0.013256564736366272,
    -0.019535990431904793,
    -0.0023729181848466396,
    0.0020085179712623358,
    0.02211960405111313,
    -0.009698914363980293,
    0.003599098650738597,
    -0.0015197729226201773,
    0.03266130015254021,
    0.020931417122483253,
    -0.025200597941875458,
    0.0004291631339583546,
    -0.003640546929091215,
    -0.020696543157100677,
    -0.013194392435252666,
    0.022768961265683174,
    -0.006745719350874424,
    -0.018707022070884705,
    0.010755847208201885,
    0.019466908648610115,
    0.0092015340924263,
    -0.014126979745924473,
    -0.035424526780843735,
    0.013698680326342583,
    -0.010610777884721756,
    0.003108626464381814,
    0.00041059774230234325,
    -0.0345955565571785,
    -0.013318737037479877,
    0.03279946371912956,
    -0.006421040743589401,
    -0.02246500737965107,
    0.014921407215297222,
    -0.018264906480908394,
    0.020378774031996727,
    -0.020793257281184196,
    0.025684162974357605,
    -0.028958581387996674,
    -0.001427377574145794,
    -8.338243060279638e-05,
    0.03589427471160889,
    -0.03191523253917694,
    0.018154378980398178,
    -0.011895677074790001,
    -0.005571349523961544,
    0.01992284134030342,
    -0.026734186336398125,
    0.006151626352220774,
    0.003640546929091215,
    0.020710360258817673,
    -0.04017727077007294,
    0.00909100566059351,
    0.013581243343651295,
    -0.0380772203207016,
    -0.0006908058421686292,
    0.01644117943942547,
    0.03921014070510864,
    0.0007732708472758532,
    -0.010576237924396992,
    0.00653502345085144,
    0.010907825082540512,
    0.017795158550143242,
    0.03462319076061249,
    0.021912362426519394,
    -0.010894008912146091,
    -0.02763223461806774,
    -0.0075643244199454784,
    -0.010016685351729393,
    0.0036267307586967945,
    -0.016330650076270103,
    -0.04260890558362007,
    -0.032854728400707245,
    0.025628898292779922,
    -0.0027390453033149242,
    0.012089102528989315,
    0.03163890913128853,
    0.025200597941875458,
    -0.0006731039611622691,
    -0.013456898741424084,
    -0.02672037109732628,
    0.017808975651860237,
    0.012724644504487514,
    0.014099347405135632,
    -0.022478822618722916,
    -0.0011527823517099023,
    -0.000919635291211307,
    -0.02180183306336403,
    0.030091503635048866,
    -0.0030654510483145714,
    0.023846618831157684,
    0.02449597604572773,
    -0.003837426658719778,
    -0.0075436001643538475,
    -0.01678658276796341,
    0.0045385947450995445,
    -0.0018133653793483973,
    -0.023570295423269272,
    -0.011163422837853432,
    0.02363937720656395,
    0.018320171162486076,
    -0.0058304015547037125,
    0.02515915036201477,
    0.04048122465610504,
    0.023335421457886696,
    -0.008987383916974068,
    -0.005833855364471674,
    -0.015114832669496536,
    -0.028184879571199417,
    0.026388784870505333,
    0.020710360258817673,
    -0.0012382694985717535,
    -0.00416555954143405,
    0.038629863411188126,
    0.013146035373210907,
    0.01659315638244152,
    -0.008476188406348228,
    0.02931780181825161,
    0.0033659515902400017,
    -0.010659134946763515,
    -0.01761554926633835,
    -0.015156281180679798,
    -0.030699413269758224,
    0.03951409459114075,
    0.006348506081849337,
    0.010113397613167763,
    0.0031880689784884453,
    -0.0418904684484005,
    -0.012254896573722363,
    -0.01852741278707981,
    -0.00017658724391367286,
    0.004590405151247978,
    0.006189620587974787,
    0.011405205354094505,
    0.012130551040172577,
    0.0012788543244823813,
    0.00028862731414847076,
    0.004984164144843817,
    0.026830900460481644,
    -0.016427364200353622,
    0.0020085179712623358,
    0.017270145937800407,
    -0.014741797000169754,
    0.01529444195330143,
    0.001395427854731679,
    0.005875303875654936,
    0.022064339369535446,
    0.03343500569462776,
    0.013553611002862453,
    0.029649388045072556,
    -0.004131019115447998,
    0.007667945232242346,
    -0.007861371152102947,
    -0.008552176877856255,
    -0.006908058654516935,
    -0.011052893474698067,
    0.016510261222720146,
    -0.020903784781694412,
    0.0249104592949152,
    0.025020988658070564,
    0.002849574200809002,
    0.02906911075115204,
    0.02868225984275341,
    0.04133782163262367,
    0.013028598390519619,
    -0.019522173330187798,
    -0.008372567594051361,
    0.002212305786088109,
    -0.030533619225025177,
    -0.02271369658410549,
    -0.0037476217839866877,
    0.009394959546625614,
    -0.005447004456073046,
    0.011370664462447166,
    0.026803268119692802,
    -0.019245851784944534,
    -0.015722742304205894,
    0.03932067006826401,
    -0.007350174244493246,
    0.02278277836740017,
    -0.01913532242178917,
    8.510944462614134e-05,
    -0.01948072575032711,
    -0.013664140366017818,
    -0.030865205451846123,
    -0.009733454324305058,
    -0.002818488050252199,
    -0.0029152007773518562,
    -0.00950548890978098,
    -0.003578374395146966,
    0.0074468874372541904,
    -0.021276820451021194,
    -0.006158534437417984,
    0.02865462750196457,
    -0.020641280338168144,
    0.010790388099849224,
    -0.009291338734328747,
    0.025518368929624557,
    0.0012538126902654767,
    0.006507391110062599,
    0.003141439752653241,
    0.029373066499829292,
    0.012192723341286182,
    0.016220122575759888,
    -0.03185996785759926,
    0.0019290753407403827,
    -0.011688435450196266,
    0.021221555769443512,
    0.011895677074790001,
    0.02772894687950611,
    0.020986681804060936,
    0.012399964965879917,
    0.024896644055843353,
    -0.010458800941705704,
    -0.014272049069404602,
    -0.0019118052441626787,
    -0.015004303306341171,
    0.0003058974689338356,
    0.01862412691116333,
    -0.0025404386688023806,
    -0.02684471569955349,
    0.0016441179905086756,
    0.0012848989572376013,
    -0.002802944742143154,
    -0.014783245511353016,
    -0.0009360419353470206,
    0.003754529869183898,
    0.012503586709499359,
    0.00785446260124445,
    0.020130082964897156,
    -0.004068846348673105,
    -0.005650791805237532,
    -0.0012279074871912599,
    0.012669379822909832,
    -0.020061003044247627,
    0.004113749135285616,
    -0.012710828334093094,
    -0.018886633217334747,
    -0.002764950506389141,
    -0.012020022608339787,
    0.03191523253917694,
    0.017629366368055344,
    -0.0035265639889985323,
    0.004842549096792936,
    -0.021691303700208664,
    0.015515499748289585,
    0.012489770539104939,
    -0.004089570604264736,
    0.008116968907415867,
    0.01172297541052103,
    -0.02992570959031582,
    0.0013358457945287228,
    0.006997863296419382,
    0.0033089600037783384,
    0.010742031037807465,
    -0.015543132089078426,
    -0.03185996785759926,
    0.00581313157454133,
    -0.008966660127043724,
    -0.003540380159392953,
    0.005433188285678625,
    -0.02684471569955349,
    -0.0041344729252159595,
    -0.0393483005464077,
    -0.013567427173256874,
    -0.010272283107042313,
    -0.0009351784246973693,
    0.0025490736588835716,
    -0.032854728400707245,
    -0.0177675262093544,
    -0.008704153820872307,
    -0.007022041827440262,
    0.019425461068749428,
    -0.007301818113774061,
    0.0068666101433336735,
    -0.027438810095191002,
    -0.031196793541312218,
    -0.003999765962362289,
    0.009968328289687634,
    -0.003200158243998885,
    -0.007398530840873718,
    0.0037718000821769238,
    0.03451266139745712,
    0.03169417381286621,
    0.015791822224855423,
    0.024537423625588417,
    0.009318971075117588,
    0.0033452273346483707,
    -0.012268711812794209,
    -0.006617920007556677,
    0.0038616047240793705,
    -0.004248456098139286,
    -0.007522875908762217,
    -0.015418787486851215,
    0.009899248369038105,
    0.011066709645092487,
    -0.03398764878511429,
    -0.012241080403327942,
    0.02703814208507538,
    -0.003435032209381461,
    0.011260136030614376,
    -0.029870444908738136,
    -0.006110177841037512,
    -0.03152837976813316,
    -0.009249890223145485,
    -0.01563984528183937,
    0.006728449370712042,
    -0.027203934267163277,
    -0.016192490234971046,
    0.03252314031124115,
    -0.008096245117485523,
    0.018955713137984276,
    0.012717735953629017,
    0.010583145543932915,
    -0.009139361791312695,
    0.03683377057313919,
    0.012690103612840176,
    0.021843282505869865,
    0.011308492161333561,
    -0.010859468020498753,
    -0.040564119815826416,
    0.0009809443727135658,
    -0.010161754675209522,
    -0.009139361791312695,
    0.008144601248204708,
    0.01786424033343792,
    0.014313497580587864,
    -0.03337974101305008,
    0.022920938208699226,
    0.004908175673335791,
    -0.02975991740822792,
    0.00980253517627716,
    -0.01487995870411396,
    -0.014783245511353016,
    -0.009443316608667374,
    0.0031017183791846037,
    -0.011384480632841587,
    -0.0016432544216513634,
    -0.0013090771390125155,
    0.009236074052751064,
    0.012655563652515411,
    -0.008275854401290417,
    -0.008662705309689045,
    0.018762286752462387,
    -0.027231566607952118,
    0.0460076704621315,
    0.005491906777024269,
    0.009194626472890377,
    0.008545268326997757,
    0.012420689687132835,
    0.0005103328148834407,
    -0.0016242573037743568,
    -0.0184030681848526,
    -0.0038408807013183832,
    0.016413547098636627,
    0.016758950427174568,
    -0.015087200328707695,
    -0.021967627108097076,
    -0.026471680030226707,
    -0.00288411439396441,
    -0.06432784348726273,
    -0.013940462842583656,
    0.0421944223344326,
    0.027424992993474007,
    0.00893212016671896,
    -0.024343999102711678,
    -0.008559084497392178,
    -0.012669379822909832,
    0.0045973132364451885,
    0.0038063402753323317,
    -0.0032916900236159563,
    0.0064175864681601524,
    -0.045482657849788666,
    -0.018762286752462387,
    0.01454837154597044,
    0.011778240092098713,
    0.0026924158446490765,
    0.01757410168647766,
    0.015543132089078426,
    -0.014506923034787178,
    -0.014824694022536278,
    -0.017781343311071396,
    -0.024261102080345154,
    0.011508826166391373,
    -0.0035956446081399918,
    -0.0015145918587222695,
    -0.009464040398597717,
    0.03216392174363136,
    -0.0066317361779510975,
    -0.004386617336422205,
    -0.004265726078301668,
    0.014783245511353016,
    0.03379422426223755,
    0.014949038624763489,
    -0.00886994693428278,
    0.009740362875163555,
    -0.02538020722568035,
    -0.009325879625976086,
    -0.026001932099461555,
    -0.02116629108786583,
    0.005170681979507208,
    -0.00980253517627716,
    0.011640079319477081,
    0.013263472355902195,
    -0.015101016499102116,
    -0.027466440573334694,
    0.0051257796585559845,
    0.0024489068891853094,
    -0.010541697964072227,
    -0.00698750140145421,
    0.01370558887720108,
    0.0329928882420063,
    -0.002799490699544549,
    0.0017088809981942177,
    -0.03318631276488304,
    -0.024799929931759834,
    -0.019149139523506165,
    -0.007322542369365692,
    0.013422357849776745,
    -0.010990721173584461,
    0.05885665863752365,
    -0.015584580600261688,
    0.022354478016495705,
    -0.0033124140463769436,
    0.008593625389039516,
    -0.015197728760540485,
    0.019245851784944534,
    0.006137810181826353,
    0.01530825812369585,
    0.02848883345723152,
    0.010928548872470856,
    -0.03898908197879791,
    -0.024316366761922836,
    -0.020503118634223938,
    0.010444984771311283,
    0.006849340163171291,
    0.012904253788292408,
    -0.004548956640064716,
    0.018928080797195435,
    -0.0021674034651368856,
    -0.013208208605647087,
    -0.007840646430850029,
    0.0062276148237288,
    0.030423089861869812,
    -0.01322893239557743,
    0.01649644412100315,
    -0.023045284673571587,
    0.009477856568992138,
    0.004635307472199202,
    0.0355350524187088,
    -0.003909961320459843,
    -0.02706577442586422,
    -0.024799929931759834,
    -0.0023193806409835815,
    0.0015370430191978812,
    -0.034346867352724075,
    -0.0032830548007041216,
    -0.03382185474038124,
    9.374451474286616e-05,
    -0.030257297679781914,
    0.017601734027266502,
    0.010244650766253471,
    -0.005491906777024269,
    0.014126979745924473,
    0.03503767400979996,
    0.01928729936480522,
    0.0003402218862902373,
    0.0012020021677017212,
    -0.007937359623610973,
    -0.024136757478117943,
    0.030091503635048866,
    -0.011349940672516823,
    -0.005681878421455622,
    -0.02256171964108944,
    0.024343999102711678,
    0.01624775491654873,
    -0.040785178542137146,
    -0.015681292861700058,
    -0.017850423231720924,
    -0.036695607006549835,
    0.014189152978360653,
    -0.021774200722575188,
    0.045261599123477936,
    0.0190386101603508,
    0.03277182951569557,
    0.007232737261801958,
    -0.005274302791804075,
    0.010514065623283386,
    0.045924775302410126,
    -0.043133918195962906,
    0.009553845040500164,
    0.04175230860710144,
    0.0008440784295089543,
    -0.008434739895164967,
    -0.006970231421291828,
    -0.05559605732560158,
    0.010811111889779568,
    0.014686533249914646,
    0.014341129921376705,
    0.021138658747076988,
    0.03597716987133026,
    0.0010983813554048538,
    -0.012676287442445755,
    -0.024482160806655884,
    -0.014126979745924473,
    0.002162222284823656,
    -0.0024454528465867043,
    0.00443497346714139,
    -0.004738928284496069,
    -0.023625560104846954,
    0.01865175925195217,
    0.004645669367164373,
    -0.00829657819122076,
    -0.002961830236017704,
    0.00443497346714139,
    -0.03407054394483566,
    0.02224394865334034,
    -0.00804098043590784,
    -0.031583644449710846,
    -0.011260136030614376,
    0.02975991740822792,
    0.008704153820872307,
    0.010334455408155918,
    0.031086264178156853,
    0.025366391986608505,
    0.006048005539923906,
    -0.006130902096629143,
    -0.01362959947437048,
    0.04020490124821663,
    -0.01424441672861576,
    0.0014912771293893456,
    0.003992857877165079,
    -0.03014676831662655,
    0.0032536955550312996,
    -0.011792056262493134,
    0.03572848066687584,
    0.004783830605447292,
    -0.002158768242225051,
    -0.023597927764058113,
    0.005650791805237532,
    0.006624828092753887,
    0.012089102528989315,
    -0.003422943176701665,
    -0.027742763981223106,
    0.01906624250113964,
    0.0032502415124326944,
    0.009070280939340591,
    -0.0043106283992528915,
    -0.049986712634563446,
    -0.03335210680961609,
    -0.02126300521194935,
    -0.0033314113970845938,
    0.008517635986208916,
    0.023846618831157684,
    -0.03757983818650246,
    0.008192957378923893,
    0.0007003044593147933,
    -0.007750841788947582,
    -0.003906507045030594,
    0.203704833984375,
    0.010631502605974674,
    0.01862412691116333,
    0.02170512080192566,
    0.018762286752462387,
    0.025311127305030823,
    0.0018720838706940413,
    -0.0013677956303581595,
    -0.015902351588010788,
    0.012227264232933521,
    -0.008303486742079258,
    -0.020130082964897156,
    0.0015508591895923018,
    -0.0009731727768667042,
    0.013090771622955799,
    -0.015004303306341171,
    -0.025849955156445503,
    -0.022326845675706863,
    -0.006082545500248671,
    0.025739427655935287,
    -0.006531569641083479,
    -0.015349706634879112,
    -0.011847320944070816,
    -0.021152475848793983,
    0.015252993442118168,
    -0.016579341143369675,
    0.004117202945053577,
    -0.017781343311071396,
    0.05349600687623024,
    0.022285398095846176,
    -0.009477856568992138,
    0.02620917558670044,
    -0.0107074910774827,
    -0.027715131640434265,
    -0.02973228506743908,
    -0.013408541679382324,
    0.010603870265185833,
    -0.011888769455254078,
    0.018886633217334747,
    0.01894189603626728,
    0.015322074294090271,
    -0.013961186632514,
    0.0017175161046907306,
    -0.04108913242816925,
    -0.0002489059988874942,
    -0.015004303306341171,
    -0.023846618831157684,
    0.005802769213914871,
    0.030533619225025177,
    0.03652981296181679,
    -0.02772894687950611,
    0.008179141208529472,
    0.036916665732860565,
    -0.009588385932147503,
    -0.02795000560581684,
    -0.02848883345723152,
    -0.009457132779061794,
    0.002129408996552229,
    -0.007958083413541317,
    0.0075436001643538475,
    -0.011218687519431114,
    0.02468940243124962,
    -0.006410678382962942,
    0.014617452397942543,
    -0.03431923687458038,
    0.008793958462774754,
    -0.0466432124376297,
    -0.00726727768778801,
    -0.002041331259533763,
    0.0019411644898355007,
    -0.006980593316257,
    0.008393291383981705,
    -0.023307790979743004,
    -0.014382578432559967,
    0.001972250873222947,
    -0.02287949062883854,
    0.042249687016010284,
    0.0031621637754142284,
    0.03343500569462776,
    0.02890331670641899,
    0.037110090255737305,
    0.046118199825286865,
    -0.00967819057404995,
    -0.024288734421133995,
    -0.017629366368055344,
    -0.024896644055843353,
    0.032633669674396515,
    -0.00447296816855669,
    -0.02427491918206215,
    -0.007080760318785906,
    -0.013684864155948162,
    -0.010645318776369095,
    0.016206305474042892,
    -0.004562772810459137,
    -0.011287768371403217,
    0.01612340845167637,
    0.0003564126673154533,
    0.014258232899010181,
    0.0037648919969797134,
    -0.014396394602954388,
    -0.023404503241181374,
    0.06488049030303955,
    -0.028060534968972206,
    0.009270614944398403,
    -0.0258637722581625,
    -0.014341129921376705,
    -0.024219654500484467,
    0.03249550983309746,
    -0.009636742062866688,
    -0.01989520899951458,
    -0.0032571495976299047,
    -0.020475486293435097,
    0.014161520637571812,
    -0.017601734027266502,
    0.0012425871100276709,
    -0.00017119033145718277,
    -0.004286450333893299,
    0.024067675694823265,
    -0.0072120134718716145,
    -0.005402102135121822,
    -0.015446418896317482,
    0.0029393790755420923,
    0.0011346486862748861,
    -0.014852326363325119,
    -0.01649644412100315,
    -0.005989287048578262,
    -0.025711795315146446,
    0.012918069958686829,
    -0.011819688603281975,
    -0.018140561878681183,
    0.005920206196606159,
    -0.013968094252049923,
    0.00288411439396441,
    -0.02525586262345314,
    -0.02890331670641899,
    0.002530076541006565,
    0.012848989106714725,
    -0.0018081843154504895,
    -0.002241665031760931,
    0.006293241400271654,
    -0.015432602725923061,
    0.016358282417058945,
    -0.0019912479910999537,
    -0.012545034289360046,
    0.021566959097981453,
    -0.01982612907886505,
    0.023653192445635796,
    -0.0048321872018277645,
    -0.004721658304333687,
    0.007536692079156637,
    -0.0184030681848526,
    -0.001442057196982205,
    0.009208442643284798,
    -0.02388806641101837,
    0.021691303700208664,
    -0.01170915924012661,
    -0.002723502228036523,
    -0.03868512809276581,
    0.018002400174736977,
    -0.006113632116466761,
    -0.03943119943141937,
    0.002208851743489504,
    0.00813769269734621,
    -0.019190587103366852,
    -0.01837543584406376,
    -0.0083311190828681,
    -0.17308831214904785,
    0.009954513050615788,
    0.029483594000339508,
    -0.03020203299820423,
    0.01529444195330143,
    -0.014368762262165546,
    -0.01894189603626728,
    -0.002761496463790536,
    -0.0036301848012953997,
    0.004386617336422205,
    0.027342095971107483,
    -0.010514065623283386,
    0.015529315918684006,
    -0.008752509951591492,
    -0.004504054319113493,
    0.005277757067233324,
    -0.02024061232805252,
    0.010569329373538494,
    0.02770131453871727,
    0.01852741278707981,
    0.052114393562078476,
    -0.025559816509485245,
    -0.008621256798505783,
    0.026803268119692802,
    -0.0016406639479100704,
    -0.025007173418998718,
    -0.029870444908738136,
    -0.002236484084278345,
    -0.02782566100358963,
    -0.03473372012376785,
    -0.02821251191198826,
    0.04509580880403519,
    0.03036782518029213,
    0.020378774031996727,
    0.004849457181990147,
    0.013664140366017818,
    0.04070228338241577,
    0.0021345901768654585,
    -0.006186166778206825,
    0.025214415043592453,
    0.013878289610147476,
    0.034125808626413345,
    0.018223458901047707,
    -0.021276820451021194,
    -0.017394492402672768,
    -0.002015426056459546,
    0.033490270376205444,
    -0.022520272061228752,
    0.0011035624193027616,
    -0.0020188800990581512,
    0.048881422728300095,
    -0.016026696190238,
    0.000849259493406862,
    -0.010679858736693859,
    0.0027390453033149242,
    0.012082194909453392,
    0.01052097324281931,
    -0.0051257796585559845,
    0.015031935647130013,
    -0.0017175161046907306,
    0.020475486293435097,
    -0.014700348488986492,
    -0.0009394959779456258,
    0.005909844301640987,
    0.004700934048742056,
    -0.01188186090439558,
    -0.0025041713379323483,
    0.004476421978324652,
    -0.0022433921694755554,
    0.03302052244544029,
    0.004732020199298859,
    0.008828499354422092,
    -0.014741797000169754,
    -0.0048321872018277645,
    0.025518368929624557,
    -0.016192490234971046,
    -0.03879565745592117,
    0.020254427567124367,
    0.05205912888050079,
    -0.004524778574705124,
    -0.015156281180679798,
    0.027452625334262848,
    -0.0017926412401720881,
    0.017656998708844185,
    0.010797295719385147,
    -0.014354946091771126,
    0.007419255096465349,
    -0.022727513685822487,
    0.008393291383981705,
    0.008241314440965652,
    0.02515915036201477,
    -0.013505254872143269,
    0.002246845979243517,
    0.0060652755200862885,
    0.008448556065559387,
    0.00891830399632454,
    0.00921535026282072,
    -0.006483213044703007,
    0.024993356317281723,
    -0.034788984805345535,
    0.012220355682075024,
    0.029152007773518562,
    -0.02138734981417656,
    -0.0014144249726086855,
    0.05780663341283798,
    0.02992570959031582,
    -0.018347803503274918,
    -0.002177765592932701,
    -0.0013177122455090284,
    -0.007467611227184534,
    -0.00534683745354414,
    0.0064279488287866116,
    0.025490736588835716,
    0.010507157072424889,
    -0.038408804684877396,
    0.03315868228673935,
    0.0004118930082768202,
    -0.017435939982533455,
    -0.006579925771802664,
    -0.002932470990344882,
    0.014410210773348808,
    -0.006946052890270948,
    -0.0018582678167149425,
    -0.013926646672189236,
    -0.02214723639190197,
    -0.013090771622955799,
    -0.10284718126058578,
    -0.04280233010649681,
    0.019715599715709686,
    0.012033837847411633,
    -0.0069184210151433945,
    -0.009422591887414455,
    0.0021086849737912416,
    0.020903784781694412,
    0.006113632116466761,
    0.0030412727501243353,
    -0.012835172936320305,
    0.017726078629493713,
    -0.02249263972043991,
    -0.012531218118965626,
    0.006576471962034702,
    -0.021497879177331924,
    0.0029341978952288628,
    -0.02008863538503647,
    0.01615104079246521,
    0.0053986478596925735,
    -0.01580563746392727,
    -0.01761554926633835,
    -0.004158651456236839,
    0.0046560317277908325,
    -0.028958581387996674,
    0.011508826166391373,
    -0.022603167220950127,
    0.01322893239557743,
    0.007771566044539213,
    0.016164857894182205,
    -0.011674619279801846,
    -0.011674619279801846,
    -0.009125545620918274,
    0.014852326363325119,
    0.010431168600916862,
    0.006452126894146204,
    -0.03722061961889267,
    -0.04208389297127724,
    0.05263940617442131,
    -0.0022865673527121544,
    0.015847086906433105,
    -0.012752275913953781,
    0.007743933703750372,
    -0.02351503260433674,
    -0.008006440475583076,
    -0.007453795522451401,
    0.011488101445138454,
    0.017463572323322296,
    -0.00039073708467185497,
    -0.023335421457886696,
    -0.02848883345723152,
    -0.011743700131773949,
    0.01370558887720108,
    0.0053019351325929165,
    0.014645084738731384,
    -0.008116968907415867,
    -0.006921874824911356,
    0.006531569641083479,
    -0.0020257881842553616,
    -0.03163890913128853,
    -0.00904264859855175,
    0.00994760449975729,
    -0.03122442588210106,
    0.03675087168812752,
    0.015349706634879112,
    0.021843282505869865,
    0.009747270494699478,
    -0.0033624975476413965,
    0.0163444671779871,
    -0.014741797000169754,
    -0.006787167862057686,
    0.010714398697018623,
    -0.022630799561738968,
    -0.006313965655863285,
    -0.031334955245256424,
    0.004058484453707933,
    0.00505324499681592,
    0.007709393743425608,
    0.024067675694823265,
    -0.00371998967602849,
    -0.029041478410363197,
    -0.010078857652842999,
    -0.02207815647125244,
    -0.02062746323645115,
    0.0032796007581055164,
    0.027121039107441902,
    0.02687234804034233,
    0.019439276307821274,
    0.01012030616402626,
    -0.038657497614622116,
    0.025946669280529022,
    0.0012063197791576385,
    0.005098147317767143,
    -0.022920938208699226,
    -0.0013582970714196563,
    0.0032122472766786814,
    -0.0249104592949152,
    -0.0061827125027775764,
    -0.032191552221775055,
    -0.009436408057808876,
    -0.034540291875600815,
    -0.013650324195623398,
    -0.08339408785104752,
    0.03572848066687584,
    0.0051844981499016285,
    -0.005643884185701609,
    0.004725112114101648,
    -0.029677020385861397,
    0.017118168994784355,
    -0.04001147672533989,
    -0.004196645691990852,
    -0.0005163773894309998,
    -0.02297620289027691,
    -0.016703685745596886,
    -0.008959752507507801,
    -0.015943799167871475,
    0.004718204028904438,
    0.0029929163865745068,
    0.04404578357934952,
    -0.0013436174485832453,
    0.03340737149119377,
    0.025007173418998718,
    0.004265726078301668,
    -0.02506243623793125,
    0.012531218118965626,
    -0.0003533903800416738,
    -0.007322542369365692,
    -0.003369405632838607,
    -0.018485965207219124,
    0.04531686380505562,
    -0.00844164751470089,
    -0.040315430611371994,
    0.014023358933627605,
    0.013608875684440136,
    -0.005153411999344826,
    0.0193563811480999,
    0.011315399780869484,
    0.006199982482939959,
    0.023943331092596054,
    0.0012175453593954444,
    0.01982612907886505,
    -0.0028271230403333902,
    -0.02846120111644268,
    0.007232737261801958,
    0.01353288721293211,
    -0.029704652726650238,
    -0.0063761379569768906,
    -0.0030015516094863415,
    0.006155080161988735,
    0.023266341537237167,
    0.04407341405749321,
    -0.0003538221353664994,
    0.014921407215297222,
    0.0007801788742654026,
    -0.017339227721095085,
    -0.009664374403655529,
    0.01693855971097946,
    -0.012662471272051334,
    0.04236021637916565,
    0.0011579632991924882,
    -0.015031935647130013,
    0.02258935198187828,
    0.024606505408883095,
    0.0058304015547037125,
    0.021566959097981453,
    0.006493575405329466,
    0.0024523609317839146,
    -0.008255130611360073,
    -0.050622254610061646,
    -0.03036782518029213,
    0.01218581572175026,
    -0.01700763963162899,
    -0.0039583174511790276,
    -0.06018300727009773,
    -0.002417820505797863,
    0.004700934048742056,
    0.03954172879457474,
    -0.026029564440250397,
    -0.004517870489507914,
    0.012178907170891762,
    -0.028544098138809204,
    0.038823291659355164,
    0.005284664686769247,
    0.002179492497816682,
    -0.027549337595701218,
    -0.004200099501758814,
    0.010161754675209522,
    0.016330650076270103,
    -0.007322542369365692,
    -0.01957743801176548,
    -0.015363522805273533,
    0.013332553207874298,
    0.0023988233879208565,
    0.008800867013633251,
    -0.0026699646841734648,
    0.0064866673201322556,
    0.01561221294105053,
    0.010417352430522442,
    -0.01637209951877594,
    0.006849340163171291,
    0.02738354541361332,
    0.011094341985881329,
    0.025407839566469193,
    -0.004341715015470982,
    0.001407517003826797,
    -0.0024661768693476915,
    -0.023335421457886696,
    -0.006383046042174101,
    -0.007101484574377537,
    -0.03592190518975258,
    -0.023901883512735367,
    -0.009084097109735012,
    0.004044668283313513,
    -0.02478611469268799,
    -0.012123643420636654,
    0.021995259448885918,
    -0.012102918699383736,
    -0.0014291045954450965,
    0.02176038548350334,
    -0.005547170992940664,
    -0.030312562361359596,
    -0.008538360707461834,
    -0.019397828727960587,
    0.004175921436399221,
    0.016454996541142464,
    -0.012448322027921677,
    0.023169629275798798,
    0.015999063849449158,
    0.01112197432667017,
    0.01487995870411396,
    0.01096308883279562,
    -0.01668987050652504,
    -0.007246553432196379,
    0.002726956270635128,
    -0.026899980381131172,
    -0.030423089861869812,
    -0.005153411999344826,
    -0.00652811536565423,
    -0.03506530448794365,
    0.0012158183380961418,
    -0.02068272791802883,
    0.051920969039201736,
    -0.034153442829847336,
    -0.03407054394483566,
    0.012848989106714725,
    0.01496285479515791,
    0.016897112131118774,
    0.008400199003517628,
    0.0029566490557044744,
    0.0004416840092744678,
    -0.02176038548350334,
    0.0035645582247525454,
    0.01088019274175167,
    -0.006818254012614489,
    -0.023280158638954163,
    -0.021580776199698448,
    0.02094523422420025,
    -0.0052812108770012856,
    0.010175570845603943,
    -0.0004498873313423246,
    0.0019584347028285265,
    0.0323573462665081,
    0.008911395445466042,
    -2.1574191123363562e-05,
    -0.020199162885546684,
    -0.03804958611726761,
    -0.004959986079484224,
    -0.0021397711243480444,
    0.010928548872470856,
    -0.017380675300955772,
    -0.0204616691917181,
    0.01042426098138094,
    0.01155027374625206,
    -0.009063373319804668,
    -0.017933320254087448,
    -0.0076817614026367664,
    0.010769663378596306,
    -0.005136141553521156,
    -0.039458829909563065,
    -0.00834493525326252,
    0.007536692079156637,
    -0.020185347646474838,
    0.010092673823237419,
    -0.017974767833948135,
    -0.047140590846538544,
    -0.00048140535363927484,
    0.0190386101603508,
    -0.0032243363093584776,
    0.010956181213259697,
    -0.05352363735437393
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "olefile\n=======\n\n[![test](https://github.com/decalage2/olefile/actions/workflows/test.yml/badge.svg)](https://github.com/decalage2/olefile/actions)\n[![build status appveyor](https://ci.appveyor.com/api/projects/status/github/decalage2/olefile?svg=true)](https://ci.appveyor.com/project/decalage2/olefile)\n[![codecov](https://codecov.io/gh/decalage2/olefile/branch/main/graph/badge.svg)](https://codecov.io/gh/decalage2/olefile)\n[![documentation status](http://readthedocs.org/projects/olefile/badge/?version=latest)](http://olefile.readthedocs.io/en/latest/?badge=latest)\n[![pypi](https://img.shields.io/pypi/v/olefile.svg)](https://pypi.org/project/olefile/)\n[![say thanks!](https://img.shields.io/badge/say%20thanks-!-1eaedb.svg)](https://saythanks.io/to/decalage2)\n\n[olefile](https://www.decalage.info/olefile) is a python package to parse, read and write\n[microsoft ole2 files](http://en.wikipedia.org/wiki/compound_file_binary_format)\n(also called structured storage, compound file binary format or compound document file format),\nsuch as microsoft office 97-2003 documents, vbaproject.bin in ms office 2007+ files, image composer\nand flashpix files, outlook messages, stickynotes, several microscopy file formats, mcafee antivirus quarantine files,\netc.\n\n\n**quick links:** [home page](https://www.decalage.info/olefile) -\n[download/install](http://olefile.readthedocs.io/en/latest/install.html) -\n[documentation](http://olefile.readthedocs.io/en/latest) -\n[report issues/suggestions/questions](https://github.com/decalage2/olefile/issues) -\n[contact the author](https://www.decalage.info/contact) -\n[repository](https://github.com/decalage2/olefile) -\n[updates on twitter](https://twitter.com/decalage2)\n\n\nnews\n----\n\nfollow all updates and news on twitter: <https://twitter.com/decalage2>\n\n- **2023-12-01 v0.47**: now distributed as wheel package, added vt_vector support for properties,\n  added get_userdefined_properties, fixed bugs in isolefile and write_sect, improved file closure\n- 2018-09-09 v0.46: olefileio can now be used as a context manager\n(with...as), to close the file automatically\n(see [doc](https://olefile.readthedocs.io/en/latest/howto.html#open-an-ole-file-from-disk)).\nimproved handling of malformed files, fixed several bugs.\n- 2018-01-24 v0.45: olefile can now overwrite streams of any size, improved handling of malformed files,\nfixed several [bugs](https://github.com/decalage2/olefile/milestone/4?closed=1), end of support for python 2.6 and 3.3.\n- 2017-01-06 v0.44: several bugfixes, removed support for python 2.5 (olefile2),\nadded support for incomplete streams and incorrect directory entries (to read malformed documents),\nadded getclsid, improved [documentation](http://olefile.readthedocs.io/en/latest) with api reference.\n- 2017-01-04: moved the documentation to [readthedocs](http://olefile.readthedocs.io/en/latest)\n- 2016-05-20: moved olefile repository to [github](https://github.com/decalage2/olefile)\n- 2016-02-02 v0.43: fixed issues [#26](https://github.com/decalage2/olefile/issues/26)\n    and [#27](https://github.com/decalage2/olefile/issues/27),\n    better handling of malformed files, use python logging.\n- see [changelog](https://github.com/decalage2/olefile/blob/master/changelog.md) for more detailed information and\nthe latest changes.\n\ndownload/install\n----------------\n\nif you have pip or setuptools installed (pip is included in python 2.7.9+), you may simply run **pip install olefile**\nor **easy_install olefile** for the first installation.\n\nto update olefile, run **pip install -u olefile**.\n\notherwise, see http://olefile.readthedocs.io/en/latest/install.html\n\nfeatures\n--------\n\n- parse, read and write any ole file such as microsoft office 97-2003 legacy document formats (word .doc, excel .xls,\n    powerpoint .ppt, visio .vsd, project .mpp), msi files, image composer and flashpix files, outlook messages, stickynotes,\n    zeiss axiovision zvi files, olympus fluoview oib files, etc\n- list all the streams and storages contained in an ole file\n- open streams as files\n- parse and read property streams, containing metadata of the file\n- portable, pure python module, no dependency\n\nolefile can be used as an independent package or with pil/pillow.\n\nolefile is mostly meant for developers. if you are looking for tools to analyze ole files or to extract data (especially\nfor security purposes such as malware analysis and forensics), then please also check my\n[python-oletools](https://www.decalage.info/python/oletools), which are built upon olefile and provide a higher-level interface.\n\n\ndocumentation\n-------------\n\nplease see the [online documentation](http://olefile.readthedocs.io/en/latest) for more information.\n\n\n## real-life examples ##\n\na real-life example: [using olefileio_pl for malware analysis and forensics](http://blog.gregback.net/2011/03/using-remnux-for-forensic-puzzle-6/).\n\nsee also [this paper](https://computer-forensics.sans.org/community/papers/gcfa/grow-forensic-tools-taxonomy-python-libraries-helpful-forensic-analysis_6879) about python tools for forensics, which features olefile.\n\n\nlicense\n-------\n\nolefile (formerly olefileio_pl) is copyright (c) 2005-2023 philippe lagadec\n([https://www.decalage.info](https://www.decalage.info))\n\nall rights reserved.\n\nredistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n * redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n * redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nthis software is provided by the copyright holders and contributors \"as is\" and\nany express or implied warranties, including, but not limited to, the implied\nwarranties of merchantability and fitness for a particular purpose are\ndisclaimed. in no event shall the copyright holder or contributors be liable\nfor any direct, indirect, incidental, special, exemplary, or consequential\ndamages (including, but not limited to, procurement of substitute goods or\nservices; loss of use, data, or profits; or business interruption) however\ncaused and on any theory of liability, whether in contract, strict liability,\nor tort (including negligence or otherwise) arising in any way out of the use\nof this software, even if advised of the possibility of such damage.\n\n\n----------\n\nolefile is based on source code from the olefileio module of the python imaging library (pil) published by fredrik\nlundh under the following license:\n\nthe python imaging library (pil) is\n\n- copyright (c) 1997-2009 by secret labs ab\n- copyright (c) 1995-2009 by fredrik lundh\n\nby obtaining, using, and/or copying this software and/or its associated documentation, you agree that you have read,\nunderstood, and will comply with the following terms and conditions:\n\npermission to use, copy, modify, and distribute this software and its associated documentation for any purpose and\nwithout fee is hereby granted, provided that the above copyright notice appears in all copies, and that both that\ncopyright notice and this permission notice appear in supporting documentation, and that the name of secret labs ab or\nthe author not be used in advertising or publicity pertaining to distribution of the software without specific, written\nprior permission.\n\nsecret labs ab and the author disclaims all warranties with regard to this software, including all implied warranties\nof merchantability and fitness. in no event shall secret labs ab or the author be liable for any special, indirect or\nconsequential damages or any damages whatsoever resulting from loss of use, data or profits, whether in an action of\ncontract, negligence or other tortious action, arising out of or in connection with the use or performance of this\nsoftware.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "olefile",
  "package_url": "https://pypi.org/project/olefile/",
  "project_url": "https://pypi.org/project/olefile/",
  "project_urls": {
    "Download": "https://github.com/decalage2/olefile/tarball/master",
    "Homepage": "https://www.decalage.info/python/olefileio"
  },
  "release_url": "https://pypi.org/project/olefile/0.47/",
  "requires_dist": [
    "pytest ; extra == 'tests'",
    "pytest-cov ; extra == 'tests'"
  ],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
  "summary": "python package to parse, read and write microsoft ole2 files (structured storage or compound document, microsoft office)",
  "version": "0.47",
  "releases": [],
  "developers": [
    "nospam@decalage.info",
    "philippe_lagadec"
  ],
  "kwds": "olefile olefile2 oletools ole documentation",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_olefile",
  "homepage": "https://www.decalage.info/python/olefileio",
  "release_count": 10,
  "dependency_ids": [
    "pypi_pytest",
    "pypi_pytest_cov"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: scientific/engineering :: mathematics",
    "topic :: software development",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# scooch\n\nscooch is a recursive acronym for **s**cooch **c**onfigures **o**bject \n**o**riented **c**lass **h**ierarchies, and that's exactly what this package \ndoes. it is a configuration package for python codebases that simplifies the \nproblem of configuring parameters in python code by translating yaml \nconfiguration files into object oriented class hierarchies.\n\n# who needs scooch?\n\nscooch is useful for people who need an accessible interface to enable \ntweakability in their code. ml practitioners are a good example. they \ntypically write code that is intended to be continuously experimented with and \nadjusted in response to observations from running the code. as such, it is useful \nto abstract these tweakable parameters from the code\u00a0into a config file, providing \nthree major benefits:\n\n - the config file provides a centralized location for adjustable parameters of \n interest in the code, improving iteration and workflow.\n - loading, saving and adjusting the configuration of your code is separated \n from the many other working variables and data structures that may exist in \n code.\n - the configuration of any part of the code can be hashed, logged, and indexed, \n to provide a record of the code configuration at any one time.\n\n# why use scooch?\n\nthere are many other projects out there that endeavor to translate config files \ninto parameters in python code, for example:\n\n - [gin](https://github.com/google/gin-config)\n - [sacred](https://sacred.readthedocs.io/en/stable/index.html)\n - [hydra](https://hydra.cc/)\n\nhowever, what makes scooch different is that it not only translates config \nparameters into variables in your code, but into object oriented class \nhierarchies. this means configurations can benefit from object oriented concepts \nsuch as inheretance, encapsulation, abstraction and polymorphism.\n\nfor more information about how to use, and why to use scooch. please refer to \nthe [documentation](http://www.mattcmccallum.com/scooch/docs).",
  "docs_url": null,
  "keywords": "scooch python configuration machine learning",
  "license": "apache 2.0",
  "name": "scooch",
  "package_url": "https://pypi.org/project/scooch/",
  "project_url": "https://pypi.org/project/scooch/",
  "project_urls": {
    "Bug Reports": "https://github.com/PandoraMedia/scooch/issues",
    "Documentation": "http://www.mattcmccallum.com/scooch/docs",
    "Homepage": "http://www.mattcmccallum.com/scooch/docs",
    "Source": "https://github.com/PandoraMedia/scooch"
  },
  "release_url": "https://pypi.org/project/scooch/1.0.2/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "a python module for configuring hierarchical class structures in yaml with defaults",
  "version": "1.0.2",
  "releases": [],
  "developers": [
    "matt_c",
    "scooch@mattcmccallum.com"
  ],
  "kwds": "python documentation config configuring configurations",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_scooch",
  "homepage": "http://www.mattcmccallum.com/scooch/docs",
  "release_count": 5,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "microsoft azure question answering client library for python\n# azure cognitive language service question answering client library for python\n\nquestion answering is a cloud-based api service that lets you create a conversational question-and-answer layer over your existing data. use it to build a knowledge base by extracting questions and answers from your semi-structured content, including faq, manuals, and documents. answer users\u2019 questions with the best answers from the qnas in your knowledge base\u2014automatically. your knowledge base gets smarter, too, as it continually learns from users' behavior.\n\n[source code][questionanswering_client_src] | [package (pypi)][questionanswering_pypi_package] | [api reference documentation][questionanswering_refdocs] | [product documentation][questionanswering_docs] | [samples][questionanswering_samples]\n\n## _disclaimer_\n\n_azure sdk python packages support for python 2.7 ended 01 january 2022. for more information and questions, please refer to https://github.com/azure/azure-sdk-for-python/issues/20691_\n\n## getting started\n\n### prerequisites\n\n- python 3.7 or later is required to use this package.\n- an [azure subscription][azure_subscription]\n- a [language service][language_service] resource\n\n### install the package\n\ninstall the azure question answering client library for python with [pip][pip_link]:\n\n```bash\npip install azure-ai-language-questionanswering\n```\n\n> note: this version of the client library defaults to the service api version `2021-10-01`.\n\n### authenticate the client\n\nin order to interact with the question answering service, you'll need to create an instance of the [questionansweringclient][questionanswering_client_class] class or an instance of the [authoringclient][authoring_client_class] for managing projects within your resource. you will need an **endpoint**, and an **api key** to instantiate a client object. for more information regarding authenticating with cognitive services, see [authenticate requests to azure cognitive services][cognitive_auth].\n\n#### get an api key\n\nyou can get the **endpoint** and an **api key** from the language resource in the [azure portal][azure_portal].\n\nalternatively, use the [azure cli][azure_cli] command shown below to get the api key from the language resource.\n\n```powershell\naz cognitiveservices account keys list --resource-group <resource-group-name> --name <resource-name>\n```\n\n#### create questionansweringclient\n\nonce you've determined your **endpoint** and **api key** you can instantiate a [questionansweringclient][questionanswering_client_class]:\n\n```python\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.questionanswering import questionansweringclient\n\nendpoint = \"https://{myaccount}.api.cognitive.microsoft.com\"\ncredential = azurekeycredential(\"{api-key}\")\n\nclient = questionansweringclient(endpoint, credential)\n```\n\n#### create authoringclient\nwith your endpoint and api key, you can instantiate a [authoringclient][authoring_client_class]:\n\n```python\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.questionanswering.authoring import authoringclient\n\nendpoint = \"https://{myaccount}.api.cognitive.microsoft.com\"\ncredential = azurekeycredential(\"{api-key}\")\n\nclient = authoringclient(endpoint, credential)\n```\n\n#### create a client with an azure active directory credential\n\nto use an [azure active directory (aad) token credential][cognitive_authentication_aad],\nprovide an instance of the desired credential type obtained from the\n[azure-identity][azure_identity_credentials] library.\nnote that regional endpoints do not support aad authentication. create a [custom subdomain][custom_subdomain]\nname for your resource in order to use this type of authentication.\n\nauthentication with aad requires some initial setup:\n\n- [install azure-identity][install_azure_identity]\n- [register a new aad application][register_aad_app]\n- [grant access][grant_role_access] to the language service by assigning the \"cognitive services language reader\" role to your service principal.\n\nafter setup, you can choose which type of [credential][azure_identity_credentials] from azure.identity to use.\nas an example, [defaultazurecredential][default_azure_credential]\ncan be used to authenticate the client:\n\nset the values of the client id, tenant id, and client secret of the aad application as environment variables:\n`azure_client_id`, `azure_tenant_id`, `azure_client_secret`\n\nuse the returned token credential to authenticate the client:\n\n```python\nfrom azure.ai.language.questionanswering import questionansweringclient\nfrom azure.identity import defaultazurecredential\n\ncredential = defaultazurecredential()\nclient = questionansweringclient(endpoint=\"https://<my-custom-subdomain>.cognitiveservices.azure.com/\", credential=credential)\n```\n\n## key concepts\n\n### questionansweringclient\n\nthe [questionansweringclient][questionanswering_client_class] is the primary interface for asking questions using a knowledge base with your own information, or text input using pre-trained models.\nfor asynchronous operations, an async `questionansweringclient` is in the `azure.ai.language.questionanswering.aio` namespace.\n\n### authoringclient\nthe [authoringclient][authoring_client_class] provides an interface for managing question answering projects. examples of the available operations include creating and deploying projects, updating your knowledge sources, and updating question and answer pairs. it provides both synchronous and asynchronous apis.\n\n## examples\n\n### questionansweringclient\nthe `azure-ai-language-questionanswering` client library provides both synchronous and asynchronous apis.\n\n- [ask a question](#ask-a-question \"ask a question\")\n- [ask a follow-up question](#ask-a-follow-up-question \"ask a follow-up question\")\n- [create a new project](#create-a-new-project \"create a new project\")\n- [add a knowledge source](#add-a-knowledge-source \"add a knowledge source\")\n- [deploy your project](#deploy-your-project \"deploy your project\")\n- [asynchronous operations](#asynchronous-operations \"asynchronous operations\")\n\n#### ask a question\n\nthe only input required to ask a question using a knowledge base is just the question itself:\n\n```python\nimport os\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.questionanswering import questionansweringclient\n\nendpoint = os.environ[\"azure_questionanswering_endpoint\"]\nkey = os.environ[\"azure_questionanswering_key\"]\n\nclient = questionansweringclient(endpoint, azurekeycredential(key))\n\noutput = client.get_answers(\n    question=\"how long should my surface battery last?\",\n    project_name=\"faq\",\n    deployment_name=\"test\"\n)\nfor candidate in output.answers:\n    print(\"({}) {}\".format(candidate.confidence, candidate.answer))\n    print(\"source: {}\".format(candidate.source))\n\n```\n\nyou can set additional keyword options to limit the number of answers, specify a minimum confidence score, and more.\n\n#### ask a follow-up question\n\nif your knowledge base is configured for [chit-chat][questionanswering_docs_chat], the answers from the knowledge base may include suggested [prompts for follow-up questions][questionanswering_refdocs_prompts] to initiate a conversation. you can ask a follow-up question by providing the id of your chosen answer as the context for the continued conversation:\n\n```python\nimport os\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.questionanswering import questionansweringclient\nfrom azure.ai.language.questionanswering import models\n\nendpoint = os.environ[\"azure_questionanswering_endpoint\"]\nkey = os.environ[\"azure_questionanswering_key\"]\n\nclient = questionansweringclient(endpoint, azurekeycredential(key))\n\noutput = client.get_answers(\n    question=\"how long should charging take?\",\n    answer_context=models.knowledgebaseanswercontext(\n        previous_qna_id=previous_answer.qna_id\n    ),\n    project_name=\"faq\",\n    deployment_name=\"live\"\n)\nfor candidate in output.answers:\n    print(\"({}) {}\".format(candidate.confidence, candidate.answer))\n    print(\"source: {}\".format(candidate.source))\n```\n\n#### create a new project\n\n```python\nimport os\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.questionanswering.authoring import authoringclient\n\n# get service secrets\nendpoint = os.environ[\"azure_questionanswering_endpoint\"]\nkey = os.environ[\"azure_questionanswering_key\"]\n\n# create client\nclient = authoringclient(endpoint, azurekeycredential(key))\nwith client:\n\n    # create project\n    project_name = \"issacnewton\"\n    project = client.create_project(\n        project_name=project_name,\n        options={\n            \"description\": \"biography of sir issac newton\",\n            \"language\": \"en\",\n            \"multilingualresource\": true,\n            \"settings\": {\n                \"defaultanswer\": \"no answer\"\n            }\n        })\n\n    print(\"view created project info:\")\n    print(\"\\tname: {}\".format(project[\"projectname\"]))\n    print(\"\\tlanguage: {}\".format(project[\"language\"]))\n    print(\"\\tdescription: {}\".format(project[\"description\"]))\n```\n\n#### add a knowledge source\n\n```python\nimport os\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.questionanswering.authoring import authoringclient\n\n# get service secrets\nendpoint = os.environ[\"azure_questionanswering_endpoint\"]\nkey = os.environ[\"azure_questionanswering_key\"]\n\n# create client\nclient = authoringclient(endpoint, azurekeycredential(key))\n\nproject_name = \"issacnewton\"\nupdate_sources_poller = client.begin_update_sources(\n    project_name=project_name,\n    sources=[\n        {\n            \"op\": \"add\",\n            \"value\": {\n                \"displayname\": \"issac newton bio\",\n                \"sourceuri\": \"https://wikipedia.org/wiki/isaac_newton\",\n                \"sourcekind\": \"url\"\n            }\n        }\n    ]\n)\nupdate_sources_poller.result()\n\n# list sources\nprint(\"list project sources\")\nsources = client.list_sources(\n    project_name=project_name\n)\nfor source in sources:\n    print(\"project: {}\".format(source[\"displayname\"]))\n    print(\"\\tsource: {}\".format(source[\"source\"]))\n    print(\"\\tsource uri: {}\".format(source[\"sourceuri\"]))\n    print(\"\\tsource kind: {}\".format(source[\"sourcekind\"]))\n```\n\n#### deploy your project\n\n\n```python\nimport os\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.questionanswering.authoring import authoringclient\n\n# get service secrets\nendpoint = os.environ[\"azure_questionanswering_endpoint\"]\nkey = os.environ[\"azure_questionanswering_key\"]\n\n# create client\nclient = authoringclient(endpoint, azurekeycredential(key))\n\nproject_name = \"issacnewton\"\n\n# deploy project\ndeployment_poller = client.begin_deploy_project(\n    project_name=project_name,\n    deployment_name=\"production\"\n)\ndeployment_poller.result()\n\n# list all deployments\ndeployments = client.list_deployments(\n    project_name=project_name\n)\n\nprint(\"view project deployments\")\nfor d in deployments:\n    print(d)\n```\n\n#### asynchronous operations\n\nthe above examples can also be run asynchronously using the clients in the `aio` namespace:\n\n```python\nimport os\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.questionanswering.aio import questionansweringclient\n\nendpoint = os.environ[\"azure_questionanswering_endpoint\"]\nkey = os.environ[\"azure_questionanswering_key\"]\n\nclient = questionansweringclient(endpoint, azurekeycredential(key))\n\noutput = await client.get_answers(\n    question=\"how long should my surface battery last?\",\n    project_name=\"faq\",\n    deployment_name=\"production\"\n)\n```\n\n## optional configuration\n\noptional keyword arguments can be passed in at the client and per-operation level. the azure-core [reference documentation][azure_core_ref_docs] describes available configurations for retries, logging, transport protocols, and more.\n\n## troubleshooting\n\n### general\n\nazure question answering clients raise exceptions defined in [azure core][azure_core_readme].\nwhen you interact with the cognitive language service question answering client library using the python sdk, errors returned by the service correspond to the same http status codes returned for [rest api][questionanswering_rest_docs] requests.\n\nfor example, if you submit a question to a non-existent knowledge base, a `400` error is returned indicating \"bad request\".\n\n```python\nfrom azure.core.exceptions import httpresponseerror\n\ntry:\n    client.get_answers(\n        question=\"why?\",\n        project_name=\"invalid-knowledge-base\",\n        deployment_name=\"test\"\n    )\nexcept httpresponseerror as error:\n    print(\"query failed: {}\".format(error.message))\n```\n\n### logging\n\nthis library uses the standard\n[logging][python_logging] library for logging.\nbasic information about http sessions (urls, headers, etc.) is logged at info\nlevel.\n\ndetailed debug level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the `logging_enable` argument.\n\nsee full sdk logging documentation with examples [here][sdk_logging_docs].\n\n## next steps\n\n- view our [samples][questionanswering_samples].\n- read about the different [features][questionanswering_docs_features] of the question answering service.\n- try our service [demos][questionanswering_docs_demos].\n\n## contributing\n\nsee the [contributing.md][contributing] for details on building, testing, and contributing to this library.\n\nthis project welcomes contributions and suggestions. most contributions require you to agree to a contributor license agreement (cla) declaring that you have the right to, and actually do, grant us the rights to use your contribution. for details, visit [cla.microsoft.com][cla].\n\nwhen you submit a pull request, a cla-bot will automatically determine whether you need to provide a cla and decorate the pr appropriately (e.g., label, comment). simply follow the instructions provided by the bot. you will only need to do this once across all repos using our cla.\n\nthis project has adopted the [microsoft open source code of conduct][code_of_conduct]. for more information see the [code of conduct faq][coc_faq] or contact [opencode@microsoft.com][coc_contact] with any additional questions or comments.\n\n<!-- links -->\n\n[azure_cli]: https://docs.microsoft.com/cli/azure/\n[azure_portal]: https://portal.azure.com/\n[azure_subscription]: https://azure.microsoft.com/free/\n[language_service]: https://ms.portal.azure.com/#create/microsoft.cognitiveservicestextanalytics\n[cla]: https://cla.microsoft.com\n[coc_contact]: mailto:opencode@microsoft.com\n[coc_faq]: https://opensource.microsoft.com/codeofconduct/faq/\n[code_of_conduct]: https://opensource.microsoft.com/codeofconduct/\n[cognitive_auth]: https://docs.microsoft.com/azure/cognitive-services/authentication/\n[contributing]: https://github.com/azure/azure-sdk-for-python/blob/main/contributing.md\n[python_logging]: https://docs.python.org/3/library/logging.html\n[sdk_logging_docs]: https://docs.microsoft.com/azure/developer/python/azure-sdk-logging\n[azure_core_ref_docs]: https://azuresdkdocs.blob.core.windows.net/$web/python/azure-core/latest/azure.core.html\n[azure_core_readme]: https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/readme.md\n[pip_link]: https://pypi.org/project/pip/\n[questionanswering_client_class]: https://azuresdkdocs.blob.core.windows.net/$web/python/azure-ai-language-questionanswering/latest/azure.ai.language.questionanswering.html#azure.ai.language.questionanswering.questionansweringclient\n[authoring_client_class]: https://aka.ms/azsdk/python/questionansweringauthoringclient\n[questionanswering_refdocs_prompts]: https://azuresdkdocs.blob.core.windows.net/$web/python/azure-ai-language-questionanswering/latest/azure.ai.language.questionanswering.models.html#azure.ai.language.questionanswering.models.knowledgebaseanswerdialog\n[questionanswering_client_src]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/cognitivelanguage/azure-ai-language-questionanswering/\n[questionanswering_docs]: https://azure.microsoft.com/services/cognitive-services/qna-maker/\n[questionanswering_docs_chat]: https://docs.microsoft.com/azure/cognitive-services/qnamaker/how-to/chit-chat-knowledge-base\n[questionanswering_docs_demos]: https://azure.microsoft.com/services/cognitive-services/qna-maker/#demo\n[questionanswering_docs_features]: https://azure.microsoft.com/services/cognitive-services/qna-maker/#features\n[questionanswering_pypi_package]: https://pypi.org/project/azure-ai-language-questionanswering/\n[questionanswering_refdocs]: https://azuresdkdocs.blob.core.windows.net/$web/python/azure-ai-language-questionanswering/latest/azure.ai.language.questionanswering.html\n[questionanswering_rest_docs]: https://learn.microsoft.com/rest/api/cognitiveservices/questionanswering/question-answering\n[questionanswering_samples]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/cognitivelanguage/azure-ai-language-questionanswering/samples/readme.md\n[cognitive_authentication_aad]: https://docs.microsoft.com/azure/cognitive-services/authentication#authenticate-with-azure-active-directory\n[azure_identity_credentials]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/identity/azure-identity#credentials\n[custom_subdomain]: https://docs.microsoft.com/azure/cognitive-services/authentication#create-a-resource-with-a-custom-subdomain\n[install_azure_identity]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/identity/azure-identity#install-the-package\n[register_aad_app]: https://docs.microsoft.com/azure/cognitive-services/authentication#assign-a-role-to-a-service-principal\n[grant_role_access]: https://docs.microsoft.com/azure/cognitive-services/authentication#assign-a-role-to-a-service-principal\n[default_azure_credential]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/identity/azure-identity#defaultazurecredential\n\n![impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2fsdk%2ftemplate%2fazure-template%2freadme.png)\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "azure-ai-language-questionanswering",
  "package_url": "https://pypi.org/project/azure-ai-language-questionanswering/",
  "project_url": "https://pypi.org/project/azure-ai-language-questionanswering/",
  "project_urls": {
    "Bug Reports": "https://github.com/Azure/azure-sdk-for-python/issues",
    "Homepage": "https://github.com/Azure/azure-sdk-for-python",
    "Source": "https://github.com/Azure/azure-sdk-python"
  },
  "release_url": "https://pypi.org/project/azure-ai-language-questionanswering/1.1.0/",
  "requires_dist": [
    "azure-core (<2.0.0,>=1.24.0)",
    "isodate (<1.0.0,>=0.6.1)"
  ],
  "requires_python": ">=3.7",
  "summary": "microsoft azure question answering client library for python",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "azuresdkengsysadmins@microsoft.com",
    "microsoft_corporation"
  ],
  "kwds": "azure_questionanswering_endpoint azure_questionanswering_key azuresdkdocs _azure azure",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_azure_ai_language_questionanswering",
  "homepage": "https://github.com/azure/azure-sdk-for-python",
  "release_count": 6,
  "dependency_ids": [
    "pypi_azure_core",
    "pypi_isodate"
  ],
  "documentation_summary": "The HTML text provides information about the \"azure-ai-language-questionanswering\" package version 1.1.0 available on PyPI (Python Package Index). This package, released on October 13, 2022, by Microsoft Corporation, is part of the Microsoft Azure Cognitive Language Service and offers a Question Answering client library for Python. It requires Python 3.7 or later and is licensed under the MIT License. The library enables the creation of a conversational question-and-answer layer over existing data, allowing users to build a knowledge base from semi-structured content like FAQs and documents to automatically provide the best answers from the knowledge base. It supports both synchronous and asynchronous operations and includes features for managing Question Answering projects, such as creating and deploying projects, updating knowledge sources, and handling question and answer pairs. The package supports authentication via Azure KeyCredential and Azure Active Directory Credential.",
  "embedding": [
    -0.0055671692825853825,
    0.00988214835524559,
    -0.0008841476519592106,
    -0.02894251048564911,
    -0.0044875782914459705,
    0.030539898201823235,
    -0.0014670928940176964,
    -0.03127090632915497,
    -0.023676544427871704,
    -0.03097308985888958,
    0.009760313667356968,
    0.02195732109248638,
    -0.04188406467437744,
    0.03552158549427986,
    -0.01608218066394329,
    -0.011317090131342411,
    0.025395767763257027,
    -0.027656476944684982,
    0.016285238787531853,
    -0.018681321293115616,
    0.026898395270109177,
    0.007844801060855389,
    -0.012400065548717976,
    -0.010721453465521336,
    -0.012386527843773365,
    -0.001316491630859673,
    0.014214049093425274,
    -0.037416789680719376,
    0.006799053400754929,
    0.005242276471108198,
    0.013510114513337612,
    -0.011472768150269985,
    -0.03917662426829338,
    -0.00342998537234962,
    -0.005502867512404919,
    0.0019273572834208608,
    0.013205528259277344,
    0.0036821155808866024,
    0.03359930217266083,
    0.011587833985686302,
    0.015378247015178204,
    0.019831981509923935,
    0.005864987149834633,
    0.0034621362574398518,
    -0.022295750677585602,
    -0.0010178274242207408,
    -0.010396561585366726,
    -0.025030262768268585,
    0.007926024496555328,
    0.02111801505088806,
    0.018329354003071785,
    0.016163403168320656,
    -0.02626214735209942,
    -0.005888677202165127,
    -0.0070393383502960205,
    -0.027575254440307617,
    -0.016948560252785683,
    0.016772577539086342,
    0.00030860560946166515,
    -0.015188726596534252,
    0.004007007926702499,
    -0.0019425866194069386,
    0.0003610622079577297,
    -0.005881908815354109,
    -0.000324257998727262,
    -0.005296425428241491,
    -0.011188486590981483,
    0.023365188390016556,
    0.006379400379955769,
    -0.013205528259277344,
    0.021997932344675064,
    0.029835965484380722,
    -0.01724637858569622,
    0.002057652687653899,
    0.051468394696712494,
    -0.008548734709620476,
    -0.020292246714234352,
    0.015865586698055267,
    -0.020901421085000038,
    -0.006037586368620396,
    0.007824495434761047,
    -0.006223722826689482,
    -0.006474160589277744,
    0.03292244300246239,
    0.01742236316204071,
    0.0374438650906086,
    -0.011350933462381363,
    0.005858218763023615,
    0.0012555742869153619,
    -0.014823222532868385,
    0.02377130463719368,
    -0.011032809503376484,
    0.024069122970104218,
    0.035250842571258545,
    -0.02446170151233673,
    0.028346873819828033,
    0.000837190542370081,
    0.025314543396234512,
    0.020698362961411476,
    0.0011692746775224805,
    -0.007804189808666706,
    0.02394728735089302,
    -0.019019750878214836,
    -0.021334610879421234,
    -0.03576525300741196,
    -0.0033081506844609976,
    -0.009333891794085503,
    -0.008183230645954609,
    0.03717312216758728,
    0.009178214706480503,
    -0.010504858568310738,
    0.03194776549935341,
    0.006355710327625275,
    -0.028834212571382523,
    -0.009827999398112297,
    -0.01623108983039856,
    0.013002470135688782,
    0.005797301419079304,
    0.008738256059587002,
    0.003736264305189252,
    0.009178214706480503,
    -0.003135551465675235,
    -0.020062115043401718,
    -0.002355471020564437,
    0.015960346907377243,
    0.018017999827861786,
    -0.007174710277467966,
    -0.009794156067073345,
    -0.010701147839426994,
    -0.017950313165783882,
    -0.0012098862789571285,
    -0.0100513631477952,
    0.029348626732826233,
    -0.004562032874673605,
    -0.017638957127928734,
    0.013036313466727734,
    -0.027534643188118935,
    0.013855312950909138,
    -0.018193982541561127,
    -0.004122074227780104,
    -0.018681321293115616,
    0.02997133694589138,
    0.005905598867684603,
    -0.010525165125727654,
    -0.006518156733363867,
    0.052470143884420395,
    0.0214158333837986,
    -0.005787148606032133,
    0.0032590783666819334,
    0.0118044288828969,
    0.018532412126660347,
    -0.02207915484905243,
    -0.023974362760782242,
    0.002145644510164857,
    0.018992677330970764,
    -0.008711181581020355,
    0.002915572142228484,
    0.004372511990368366,
    -0.014038065448403358,
    -0.01704332046210766,
    -0.024190956726670265,
    0.03227265924215317,
    -0.016813188791275024,
    -0.031920693814754486,
    0.00519489636644721,
    0.019033288583159447,
    0.0019950433634221554,
    -0.013171684928238392,
    -0.013117535971105099,
    -0.007831264287233353,
    -0.0064030904322862625,
    0.009990445338189602,
    -0.0040679252706468105,
    -0.0027565101627260447,
    0.01857302337884903,
    -0.004196528811007738,
    0.031189683824777603,
    -0.020711898803710938,
    -0.040259599685668945,
    0.003753185737878084,
    0.03833732008934021,
    0.012481288984417915,
    -0.0036381196696311235,
    0.025192709639668465,
    -0.011662288568913937,
    -0.026343369856476784,
    -0.0100513631477952,
    0.0033521465957164764,
    0.0184105783700943,
    0.01430880930274725,
    0.033734675496816635,
    0.06183788180351257,
    0.003902094904333353,
    -0.030837716534733772,
    -0.5748432278633118,
    -0.040259599685668945,
    -0.005455487407743931,
    0.0005579860298894346,
    0.010166428983211517,
    0.0007297390839084983,
    0.012488056905567646,
    0.02681717276573181,
    0.002086419379338622,
    0.0485985092818737,
    -0.022999685257673264,
    0.024610610678792,
    -0.03614429384469986,
    -0.0016769192880019546,
    -0.00234362599439919,
    0.008650263771414757,
    0.006687371525913477,
    -0.014444180764257908,
    0.012528669089078903,
    -0.03113553486764431,
    0.0028021982870996,
    0.025801882147789,
    -0.013279982842504978,
    0.00021331649622879922,
    -0.00938127189874649,
    0.0095504866912961,
    -0.01705685816705227,
    -0.005198280792683363,
    0.02243112213909626,
    0.016664279624819756,
    -0.018166907131671906,
    0.012088710442185402,
    0.008514892309904099,
    -0.013043082319200039,
    0.054311204701662064,
    0.0047210948541760445,
    -0.008629958145320415,
    0.06172958388924599,
    -0.010091974399983883,
    0.022363437339663506,
    -0.023676544427871704,
    -0.004230371676385403,
    -0.0016379998996853828,
    0.014186974614858627,
    0.027832461521029472,
    0.011120800860226154,
    -0.0008029245655052364,
    0.016826726496219635,
    -0.013022775761783123,
    -0.0032472333405166864,
    0.012014255858957767,
    0.008948082104325294,
    -0.006068045273423195,
    -0.03167702257633209,
    0.023690082132816315,
    0.00691073527559638,
    0.018180444836616516,
    -0.03267877548933029,
    0.005895446054637432,
    -0.0065215411596000195,
    -0.029429849237203598,
    -0.01472846232354641,
    -0.0036279666237533092,
    -0.05019589886069298,
    -0.039257850497961044,
    0.028157353401184082,
    0.00803432147949934,
    -0.027859535068273544,
    0.01122909877449274,
    -0.024069122970104218,
    0.039257850497961044,
    0.004748169332742691,
    0.006274487357586622,
    -0.02994426339864731,
    0.01414636243134737,
    0.03603599965572357,
    0.01430880930274725,
    0.007513139862567186,
    0.007303313817828894,
    0.020617138594388962,
    0.017625421285629272,
    -0.00514413183555007,
    -0.0042709833942353725,
    -0.02546345256268978,
    0.02508441172540188,
    -0.011195255443453789,
    -0.019845519214868546,
    -0.01464723888784647,
    1.3913956991018495e-06,
    0.01271142065525055,
    0.009706164710223675,
    -0.003242156933993101,
    -0.015418858267366886,
    -0.03923077508807182,
    0.013252908363938332,
    0.028049055486917496,
    0.0006028279894962907,
    -0.031243832781910896,
    0.0022573263850063086,
    -0.009178214706480503,
    0.007174710277467966,
    -0.01263019721955061,
    0.013367974199354649,
    -0.002834348939359188,
    0.04080108925700188,
    0.003076326334849,
    -0.006897198036313057,
    0.010592850856482983,
    -0.026153849437832832,
    -0.019317569211125374,
    -0.0014298656024038792,
    -0.030702345073223114,
    -0.005289656575769186,
    -0.0016566135454922915,
    0.015175188891589642,
    -0.015364710241556168,
    0.028509320691227913,
    -0.006020665168762207,
    0.01637999899685383,
    -0.0026955928187817335,
    -0.005648392252624035,
    -0.00037671459722332656,
    -0.002250557765364647,
    0.015567767433822155,
    0.021469982340931892,
    0.014078676700592041,
    -0.014457718469202518,
    -0.010031057521700859,
    -0.01625816524028778,
    -0.002203177660703659,
    8.16461761132814e-05,
    -0.015378247015178204,
    0.007052875589579344,
    -0.030187932774424553,
    0.01961538754403591,
    -0.003006948158144951,
    0.042452625930309296,
    -0.011939801275730133,
    0.0025737581308931112,
    0.004565417300909758,
    -0.013943305239081383,
    -0.01424112357199192,
    0.01055900752544403,
    0.007201784756034613,
    -0.011093726381659508,
    -0.030918940901756287,
    -0.024488775059580803,
    0.010971891693770885,
    -0.016542445868253708,
    -0.008514892309904099,
    -0.024339865893125534,
    -0.023013221099972725,
    -0.03175824508070946,
    0.030756494030356407,
    -0.007912486791610718,
    -0.004754937719553709,
    -0.01961538754403591,
    -0.0013875619042664766,
    0.008494586683809757,
    -0.009130834601819515,
    -0.0003965973446611315,
    0.011350933462381363,
    0.010653767734766006,
    0.02175426296889782,
    -0.02729097381234169,
    -0.01505335420370102,
    -0.020684825256466866,
    0.019371718168258667,
    -0.038608063012361526,
    -0.03400541841983795,
    0.021145090460777283,
    -0.014281734824180603,
    -0.0027429729234427214,
    0.0007957328925840557,
    0.006338788662105799,
    0.006579074077308178,
    -0.03950151801109314,
    0.036550410091876984,
    0.017138082534074783,
    -0.018451189622282982,
    -0.019182197749614716,
    0.04253384843468666,
    -0.010586082004010677,
    -0.0273045115172863,
    0.020644214004278183,
    -0.0010017519816756248,
    0.02443462610244751,
    0.03294951841235161,
    -0.0013875619042664766,
    0.008257685229182243,
    -0.007262702099978924,
    0.027521105483174324,
    -0.025490527972579002,
    0.02026517316699028,
    -0.014769073575735092,
    0.014755536802113056,
    0.010931280441582203,
    0.007973404601216316,
    0.0015779286623001099,
    0.01942586712539196,
    0.022864311933517456,
    0.02374422922730446,
    0.011120800860226154,
    0.011811197735369205,
    -0.027494031935930252,
    0.00920528918504715,
    0.019182197749614716,
    -0.008501354604959488,
    0.021361684426665306,
    -0.010646999813616276,
    0.028509320691227913,
    0.005631470587104559,
    -0.0035535122733563185,
    -0.030566973611712456,
    0.0007783884066157043,
    0.004501115530729294,
    -0.015676064416766167,
    -0.004044235218316317,
    -0.045945219695568085,
    -0.0026126776356250048,
    0.009401577524840832,
    0.0032912292517721653,
    0.0031998532358556986,
    -0.024651221930980682,
    -0.008000479079782963,
    0.004572185687720776,
    0.0026160618290305138,
    0.02596432901918888,
    0.01705685816705227,
    -0.00712056178599596,
    0.008264454081654549,
    0.02209269255399704,
    0.019520627334713936,
    -0.006196648348122835,
    0.02007565088570118,
    -0.01013935450464487,
    0.03303074091672897,
    -0.008142619393765926,
    0.027656476944684982,
    -0.0299984123557806,
    -0.010376255959272385,
    -0.006457239389419556,
    0.006098503712564707,
    -0.019222809001803398,
    0.03649626299738884,
    -0.0004911461728625,
    -0.0017479895614087582,
    0.004135611467063427,
    -0.0076688178814947605,
    0.004446966573596001,
    -0.008189999498426914,
    -0.00540472287684679,
    0.0019916589371860027,
    -0.006978421006351709,
    -0.019155122339725494,
    -0.0201027262955904,
    -0.012251156382262707,
    0.0032506175339221954,
    0.021727189421653748,
    0.01547300722450018,
    -0.009983677417039871,
    0.02073897421360016,
    0.025707121938467026,
    0.017814941704273224,
    0.05712693929672241,
    -0.008602883666753769,
    -0.01642061024904251,
    -0.025896642357110977,
    -0.02076604776084423,
    -0.017111007124185562,
    -0.009259437210857868,
    -0.038743436336517334,
    0.005005375947803259,
    -0.029429849237203598,
    0.023189205676317215,
    0.019128048792481422,
    0.00297141307964921,
    0.03167702257633209,
    0.002580526750534773,
    0.0048293923027813435,
    0.008142619393765926,
    -0.012528669089078903,
    0.045972295105457306,
    -0.008305065333843231,
    0.02126692421734333,
    -0.017801403999328613,
    -0.010484552942216396,
    0.03078356757760048,
    -0.03460105508565903,
    0.03579232841730118,
    0.0006260949885472655,
    0.02660057693719864,
    -0.02894251048564911,
    -0.00606127642095089,
    -0.01927695795893669,
    -0.019683072343468666,
    0.03568403050303459,
    -0.0010034441947937012,
    0.004842929542064667,
    -0.023838989436626434,
    -0.0025754503440111876,
    -0.005932673346251249,
    -0.022146841511130333,
    0.02194378338754177,
    0.033220261335372925,
    -0.001929049496538937,
    -0.0032624625600874424,
    -0.009313586167991161,
    -0.0174088254570961,
    -0.04786750301718712,
    0.00422698725014925,
    0.02562589943408966,
    -0.008589346893131733,
    0.005073061678558588,
    0.031243832781910896,
    0.007188247516751289,
    0.0023808530531823635,
    -0.026857784017920494,
    0.035738181322813034,
    -0.009618173353374004,
    -0.02443462610244751,
    -0.0063963220454752445,
    0.005827759858220816,
    -0.003631351049989462,
    0.028184428811073303,
    0.015215801075100899,
    -0.006944578140974045,
    0.002712514251470566,
    -0.04004300758242607,
    -0.004406355321407318,
    -0.03064819611608982,
    0.005374263972043991,
    -0.007425148505717516,
    -0.003330148523673415,
    -0.021564742550253868,
    0.011472768150269985,
    0.010125817731022835,
    0.014782610349357128,
    0.029863039031624794,
    0.02425864338874817,
    0.013090462423861027,
    0.022959072142839432,
    -0.006771978922188282,
    0.0018224441446363926,
    0.03246217966079712,
    0.017801403999328613,
    0.004189759958535433,
    0.019980890676379204,
    0.02425864338874817,
    0.006978421006351709,
    0.02932155132293701,
    0.010105512104928493,
    -0.006467392202466726,
    -0.04610766842961311,
    0.0019781216979026794,
    0.005966516211628914,
    -0.014051602222025394,
    0.016528908163309097,
    -0.015987420454621315,
    0.06681956350803375,
    0.012190238572657108,
    0.014701387844979763,
    -2.091389978886582e-05,
    -0.017138082534074783,
    0.028888361528515816,
    0.004754937719553709,
    -0.0004594183701556176,
    -0.00861642137169838,
    -0.0035095163621008396,
    -0.037227269262075424,
    -0.024218032136559486,
    0.025571750476956367,
    -0.004771859385073185,
    0.0003614852612372488,
    0.003858098993077874,
    0.011993949301540852,
    -0.06481606513261795,
    -0.010951586067676544,
    0.001397714833728969,
    -0.008406594395637512,
    -0.02442109026014805,
    -0.021700114011764526,
    -0.014511866495013237,
    -0.020955568179488182,
    -0.030566973611712456,
    -0.029835965484380722,
    -0.008819478563964367,
    0.013577801175415516,
    -0.021849023178219795,
    -0.02341933734714985,
    -0.011032809503376484,
    0.01757127232849598,
    -0.014701387844979763,
    0.016109256073832512,
    0.017111007124185562,
    -0.0018579792231321335,
    -0.021794874221086502,
    -0.004629718605428934,
    0.020359933376312256,
    0.015175188891589642,
    0.017638957127928734,
    -0.0021642581559717655,
    0.00665014423429966,
    0.017002709209918976,
    0.015824973583221436,
    -0.03530498966574669,
    0.010694379918277264,
    -0.04166746884584427,
    0.014620164409279823,
    0.0031897001899778843,
    0.005282888188958168,
    -0.0003583124780561775,
    0.007472528610378504,
    0.021375222131609917,
    -0.02044115588068962,
    0.01605510711669922,
    -0.013002470135688782,
    -0.0075740572065114975,
    0.02760232985019684,
    0.023135056719183922,
    -0.011161413043737411,
    0.010822982527315617,
    0.005712694022804499,
    -0.00611204095184803,
    -0.017828477546572685,
    -0.028346873819828033,
    -0.002181179588660598,
    -0.01892499066889286,
    0.010247652418911457,
    -0.014498329721391201,
    0.031893618404865265,
    0.02023809775710106,
    -0.021158626303076744,
    -0.009909222833812237,
    0.01380793284624815,
    -0.0134018175303936,
    -0.012034561485052109,
    -0.012840024195611477,
    0.00820353627204895,
    -0.006582458503544331,
    -0.006166189908981323,
    0.02878006361424923,
    0.010992197319865227,
    -0.016840264201164246,
    0.031866542994976044,
    -0.053498972207307816,
    0.013902693055570126,
    0.015567767433822155,
    -0.0064200120978057384,
    0.0378229059278965,
    0.0030898635741323233,
    0.009320355020463467,
    -0.030431602150201797,
    -0.00226409500464797,
    0.011851808987557888,
    0.010085206478834152,
    0.0031626259442418814,
    -0.04063864052295685,
    0.0011015888303518295,
    -0.0014019451336935163,
    -0.000390674831578508,
    -0.009272974915802479,
    0.001364717842079699,
    0.009015767835080624,
    -0.021564742550253868,
    -0.004010392352938652,
    -0.013144610449671745,
    0.012034561485052109,
    0.0082982974126935,
    -0.03330148383975029,
    -0.010701147839426994,
    0.023311039432883263,
    0.0004767628852277994,
    0.008325370959937572,
    0.0026380596682429314,
    0.0058616031892597675,
    -0.022959072142839432,
    -0.0398264117538929,
    -0.005418260116130114,
    -0.014335883781313896,
    0.02243112213909626,
    0.003546743653714657,
    0.013841776177287102,
    0.02561236172914505,
    0.045782774686813354,
    0.0007496218313463032,
    0.007655280642211437,
    0.0057837641797959805,
    -0.006436933297663927,
    -0.020671287551522255,
    0.003204929642379284,
    0.025355154648423195,
    0.026411056518554688,
    -0.015229337848722935,
    0.01773371733725071,
    0.022688329219818115,
    0.0031575493048876524,
    -0.036550410091876984,
    0.006152652669698,
    0.02493550255894661,
    -0.01380793284624815,
    -0.010694379918277264,
    -0.024163883179426193,
    -0.030675271525979042,
    -0.014863833785057068,
    -0.0010618233354762197,
    -0.015080428682267666,
    0.01943940296769142,
    -0.024218032136559486,
    -0.007161173038184643,
    0.021889634430408478,
    -0.016664279624819756,
    0.01876254379749298,
    -0.006040970794856548,
    0.017476512119174004,
    -0.005188127979636192,
    0.01013935450464487,
    0.016298776492476463,
    0.01272495836019516,
    -0.023541172966361046,
    0.010450710542500019,
    -0.03197484090924263,
    0.008244148455560207,
    -0.019452940672636032,
    0.02142937108874321,
    0.008149388246238232,
    0.03151457756757736,
    0.014362958259880543,
    -0.006017280742526054,
    0.01973722130060196,
    -0.005103520583361387,
    -0.034763503819704056,
    0.0010491322027519345,
    -0.03359930217266083,
    -0.004000239539891481,
    -0.019046824425458908,
    -0.006626454181969166,
    0.0002817427448462695,
    -0.010227346792817116,
    0.020793123170733452,
    0.029077881947159767,
    0.02041408233344555,
    -0.021551204845309258,
    -0.006474160589277744,
    0.02193024754524231,
    -0.016610130667686462,
    0.05209110304713249,
    0.0009932912653312087,
    0.016637206077575684,
    0.02574773319065571,
    0.0027514337562024593,
    0.011682594195008278,
    -0.018017999827861786,
    -0.020319320261478424,
    -0.020021503791213036,
    0.009773850440979004,
    0.024867815896868706,
    -0.010701147839426994,
    -0.01723284274339676,
    0.0042777517810463905,
    -0.010349181480705738,
    -0.041450873017311096,
    -0.016461221501231194,
    0.02681717276573181,
    0.014917982742190361,
    0.015337635762989521,
    -0.020319320261478424,
    -0.03335563465952873,
    0.010552238672971725,
    0.023879602551460266,
    -0.024204494431614876,
    -0.015093966387212276,
    0.003736264305189252,
    -0.022715402767062187,
    -0.008352445438504219,
    0.022715402767062187,
    0.03495302423834801,
    0.01105988398194313,
    0.03013378381729126,
    0.02190317213535309,
    -0.004399586468935013,
    -0.007025801111012697,
    -0.0005833682371303439,
    -0.0012242695083841681,
    -0.002583910943940282,
    0.019710147753357887,
    -0.03211021423339844,
    0.005705925170332193,
    0.051982805132865906,
    0.007750040851533413,
    -0.010924511589109898,
    0.018870841711759567,
    0.024190956726670265,
    0.033815898001194,
    -0.02446170151233673,
    -0.0038716362323611975,
    -0.008738256059587002,
    -0.015540692955255508,
    0.004314979072660208,
    -0.011980412527918816,
    -0.001654921448789537,
    0.009733239188790321,
    -0.008095239289104939,
    -0.008061395958065987,
    0.02626214735209942,
    -0.004182991571724415,
    -0.012968627735972404,
    -0.0050392188131809235,
    0.014606627635657787,
    -0.01022057794034481,
    0.02042761817574501,
    0.03197484090924263,
    -0.010281494818627834,
    -0.0017285298090428114,
    -0.010646999813616276,
    -0.008589346893131733,
    -0.025856031104922295,
    0.005963131785392761,
    0.00937450397759676,
    -0.006382784806191921,
    -0.01874900795519352,
    0.03470935299992561,
    0.013631949201226234,
    0.010003983043134212,
    -0.02045469358563423,
    0.0219167098402977,
    -0.033734675496816635,
    0.011066651903092861,
    0.0016176941571757197,
    -0.0005935211665928364,
    0.012427140027284622,
    0.030702345073223114,
    -0.014105751179158688,
    -0.023690082132816315,
    -0.010762065649032593,
    0.03462813049554825,
    0.010850057005882263,
    -0.014552478678524494,
    -0.0021270308643579483,
    0.011797660030424595,
    -0.009888917207717896,
    -0.0004945304244756699,
    -0.015297023579478264,
    0.025192709639668465,
    0.013916230760514736,
    -0.0066061485558748245,
    0.02110447734594345,
    -0.011641982942819595,
    0.012941553257405758,
    -0.006376015953719616,
    0.03766046091914177,
    -0.006244028452783823,
    -0.03717312216758728,
    -0.018532412126660347,
    -0.006964883767068386,
    0.006145883817225695,
    -0.03113553486764431,
    0.007195015903562307,
    -0.013164917007088661,
    -0.009888917207717896,
    -0.04096353426575661,
    0.032218512147665024,
    0.0022928614635020494,
    0.00027687783585861325,
    0.030594047158956528,
    0.02796783298254013,
    0.04066571593284607,
    -0.011202024295926094,
    -0.005895446054637432,
    -0.02075251191854477,
    -0.015662528574466705,
    0.001356257125735283,
    -0.02462414652109146,
    0.012488056905567646,
    -0.002191332634538412,
    0.01053870189934969,
    0.011533685028553009,
    -0.03584647551178932,
    -0.02612677589058876,
    -0.024366941303014755,
    -0.03146042674779892,
    0.029511073604226112,
    0.0020424234680831432,
    0.01575728878378868,
    0.020211024209856987,
    0.035250842571258545,
    0.013076924718916416,
    0.014417106285691261,
    0.0007060490315780044,
    0.012115783989429474,
    -0.017652494832873344,
    0.005871756002306938,
    0.0016261548735201359,
    -0.0038547145668417215,
    -0.007005495484918356,
    0.010335643775761127,
    -0.033734675496816635,
    0.0031998532358556986,
    -0.007838032208383083,
    -0.0035535122733563185,
    -0.022891387343406677,
    0.031054312363266945,
    -0.0019172044703736901,
    -0.050141748040914536,
    -0.02073897421360016,
    0.0029375699814409018,
    -0.00971293356269598,
    0.0056585450656712055,
    -0.02110447734594345,
    0.0036144296173006296,
    -0.002037347061559558,
    -0.017652494832873344,
    0.00010174043563893065,
    0.0003769261238630861,
    -0.0030509440694004297,
    0.00870441272854805,
    -0.015648990869522095,
    0.018383502960205078,
    -0.0021050330251455307,
    -0.02676302380859852,
    -0.0038141030818223953,
    0.010308569297194481,
    0.04375219717621803,
    0.013828238472342491,
    0.004426660947501659,
    0.031243832781910896,
    -0.013760552741587162,
    -0.015933271497488022,
    -0.00265667331404984,
    0.02559882588684559,
    -0.02040054462850094,
    -0.0032387725077569485,
    0.011574297212064266,
    -0.041965287178754807,
    -0.0026431363075971603,
    -0.03527791425585747,
    0.017138082534074783,
    -0.01013258658349514,
    0.014796148054301739,
    -0.0005905599100515246,
    0.0003633889136835933,
    -0.02424510568380356,
    0.012088710442185402,
    -0.008562272414565086,
    -0.006051123607903719,
    0.02647874318063259,
    0.0038784046191722155,
    0.00905638001859188,
    0.011926263570785522,
    -0.04047619551420212,
    -0.01742236316204071,
    -0.04738016426563263,
    0.005871756002306938,
    0.019872594624757767,
    0.0036008923780173063,
    -0.013334131799638271,
    0.020035039633512497,
    -0.0009256053017452359,
    -0.02210623025894165,
    0.022052081301808357,
    0.1817232221364975,
    0.02107740379869938,
    -0.0025619131047278643,
    -0.011946569196879864,
    0.0056043965741992,
    0.03346393257379532,
    0.020359933376312256,
    0.01906036213040352,
    -0.017503585666418076,
    0.01709746941924095,
    -0.009225594811141491,
    -0.020481767132878304,
    -0.01382147055119276,
    0.0021439522970467806,
    -0.0007614669157192111,
    -0.00921205710619688,
    -0.008223842829465866,
    -0.03175824508070946,
    -0.0022573263850063086,
    0.001574544352479279,
    -0.00041922982200048864,
    -0.016786115244030952,
    -0.009218825958669186,
    -0.01671842858195305,
    0.031027236953377724,
    0.0023453179746866226,
    -0.007100255694240332,
    -0.020373469218611717,
    0.017151618376374245,
    0.0049072313122451305,
    -0.011141106486320496,
    0.02714206464588642,
    0.0015669296262785792,
    0.023663006722927094,
    -0.041261352598667145,
    -0.02160535380244255,
    -0.025355154648423195,
    -0.00787864439189434,
    0.01388915628194809,
    0.034249089658260345,
    0.008724718354642391,
    -0.026235071942210197,
    -0.005621317774057388,
    -0.033193189650774,
    -0.02948399819433689,
    -0.004572185687720776,
    0.0069378092885017395,
    -0.005628086626529694,
    -0.004000239539891481,
    0.026411056518554688,
    -0.0027446651365607977,
    -0.015865586698055267,
    0.008108776062726974,
    0.006897198036313057,
    -0.011438924819231033,
    -0.005502867512404919,
    -0.02211976796388626,
    0.014132825657725334,
    -0.007025801111012697,
    0.02293199859559536,
    -0.034871798008680344,
    0.023392263799905777,
    -0.01759834587574005,
    0.029213255271315575,
    -0.009442189708352089,
    0.0024976113345474005,
    -0.015567767433822155,
    0.009652015753090382,
    -0.01855948567390442,
    0.018640710040926933,
    -0.008325370959937572,
    0.0034232167527079582,
    -0.019358180463314056,
    0.013584569096565247,
    -0.006399706471711397,
    -0.04101768508553505,
    0.05336359888315201,
    0.009726470336318016,
    0.02341933734714985,
    0.013225833885371685,
    0.010247652418911457,
    0.032218512147665024,
    -0.004968148656189442,
    0.00996337179094553,
    -0.04700111970305443,
    -0.0184105783700943,
    0.040124230086803436,
    -0.013056619092822075,
    0.009773850440979004,
    -0.01675903983414173,
    -0.016271701082587242,
    -0.018708394840359688,
    0.012921247631311417,
    -0.01171643752604723,
    -0.003409679513424635,
    0.03351807966828346,
    0.009672321379184723,
    0.005800685845315456,
    -0.0024028511252254248,
    0.005205049179494381,
    -0.01956123858690262,
    0.05203695595264435,
    -0.0042946734465658665,
    0.00980092491954565,
    -0.021862560883164406,
    -0.013374743051826954,
    -0.023717155680060387,
    0.009821230545639992,
    -0.01214285846799612,
    -0.015500081703066826,
    0.01338151190429926,
    0.007831264287233353,
    0.003240464720875025,
    0.007418379653245211,
    -0.015269949100911617,
    -0.015445932745933533,
    -0.025057338178157806,
    -0.018952064216136932,
    0.009570793248713017,
    -0.006464007776230574,
    -0.00032023913809098303,
    0.0005055294022895396,
    0.01624462753534317,
    0.013056619092822075,
    -0.024705370888113976,
    -0.019114511087536812,
    -0.021821949630975723,
    -0.011993949301540852,
    0.00573299964889884,
    -0.024014974012970924,
    0.024353403598070145,
    -0.04250677302479744,
    -0.002137183677405119,
    0.017990924417972565,
    0.014281734824180603,
    0.01498566847294569,
    -0.005628086626529694,
    -0.02831980027258396,
    -0.011614908464252949,
    -0.0031067850068211555,
    -0.011256173253059387,
    -0.0129618588835001,
    -0.0011261249892413616,
    -0.0021794873755425215,
    0.01973722130060196,
    -0.03159580007195473,
    0.010450710542500019,
    -0.000583791290409863,
    0.003648272482678294,
    -0.007682355120778084,
    -0.029700594022870064,
    0.012867098674178123,
    0.010430403985083103,
    -0.007756809238344431,
    0.013645486906170845,
    -0.004230371676385403,
    -0.02293199859559536,
    -0.014890908263623714,
    0.0013587953289970756,
    0.02845517173409462,
    -0.017693106085062027,
    0.0034367539919912815,
    -0.009306817315518856,
    -0.0060849664732813835,
    -0.027588792145252228,
    -0.022404048591852188,
    -0.16742795705795288,
    0.0033403015695512295,
    0.02375776693224907,
    -0.07147636264562607,
    0.01547300722450018,
    -0.005546863190829754,
    -0.004003623966127634,
    -0.027588792145252228,
    -0.016989173367619514,
    -0.01805861108005047,
    0.010355949401855469,
    -0.0022556341718882322,
    -0.013618412427604198,
    -0.008000479079782963,
    0.0013469503028318286,
    -0.008900701999664307,
    -0.009496338665485382,
    -0.02193024754524231,
    0.02025163546204567,
    0.006423396524041891,
    0.05512343347072601,
    -0.00812908262014389,
    0.010856825858354568,
    0.01548654492944479,
    0.012169932946562767,
    -0.02056298963725567,
    -0.028021981939673424,
    -0.007174710277467966,
    -0.024339865893125534,
    -0.025869568809866905,
    -0.017178693786263466,
    0.018342891708016396,
    0.0042777517810463905,
    0.03470935299992561,
    0.04367097094655037,
    0.024380477145314217,
    0.049816858023405075,
    -0.004795549437403679,
    -0.03292244300246239,
    0.03906833007931709,
    0.02446170151233673,
    0.031027236953377724,
    0.04605351760983467,
    -0.012061635963618755,
    -0.014430643990635872,
    -0.0043792808428406715,
    0.013239371590316296,
    -0.014471255242824554,
    -0.015202263370156288,
    -0.007174710277467966,
    0.03817487508058548,
    -0.026505816727876663,
    0.003301382064819336,
    -0.013252908363938332,
    -0.0006472468376159668,
    0.007167941890656948,
    0.0157166775316,
    0.0351966917514801,
    0.010213809087872505,
    -0.01321906503289938,
    0.010667305439710617,
    -0.004629718605428934,
    0.004592491313815117,
    0.014200511388480663,
    0.005377648398280144,
    -0.009151140227913857,
    -0.028861287981271744,
    0.03516961634159088,
    -0.01254220586270094,
    0.018843768164515495,
    0.01456601545214653,
    -0.021483520045876503,
    -0.005587474908679724,
    0.003668578341603279,
    0.02409619651734829,
    0.02245819754898548,
    0.022850776091217995,
    0.01758480817079544,
    0.03516961634159088,
    -0.014051602222025394,
    -0.023906676098704338,
    0.027399271726608276,
    -0.009685859084129333,
    0.03211021423339844,
    0.001320722047239542,
    -0.029186179861426353,
    -0.010254421271383762,
    -0.016312312334775925,
    -0.009300049394369125,
    0.0007881182245910168,
    0.018004462122917175,
    -0.030431602150201797,
    -0.008230610750615597,
    0.00954371877014637,
    0.0009010691428557038,
    0.006964883767068386,
    0.01422758586704731,
    -0.009455726481974125,
    5.3857918828725815e-05,
    -0.005137363448739052,
    0.002037347061559558,
    0.01705685816705227,
    -0.02341933734714985,
    -0.011005735024809837,
    0.045782774686813354,
    0.007208553142845631,
    -0.03368052840232849,
    0.004724479280412197,
    0.0045552640222013,
    -0.01247452013194561,
    -0.00535395834594965,
    -0.002910495735704899,
    0.02374422922730446,
    0.0219167098402977,
    -0.020644214004278183,
    0.02260710671544075,
    -0.02027870900928974,
    -0.024502312764525414,
    0.015811437740921974,
    0.016853800043463707,
    0.02424510568380356,
    0.0015669296262785792,
    -0.001687072217464447,
    -0.0032353883143514395,
    -0.005929288920015097,
    -0.028211502358317375,
    -0.11479536443948746,
    -0.017517123371362686,
    0.007939561270177364,
    0.0030374068301171064,
    -0.009875379502773285,
    0.008548734709620476,
    0.0038784046191722155,
    0.03535913676023483,
    -0.006068045273423195,
    0.008731487207114697,
    -0.013510114513337612,
    0.009983677417039871,
    -0.0027632787823677063,
    -0.021794874221086502,
    -0.0077838837169110775,
    -0.029186179861426353,
    -0.0050222971476614475,
    -0.016975635662674904,
    -0.012988933362066746,
    -0.013178453780710697,
    0.0035196691751480103,
    0.0013774089748039842,
    0.024177420884370804,
    0.00685997074469924,
    -0.03097308985888958,
    -0.0056822351180016994,
    -0.03216436132788658,
    0.018816692754626274,
    0.029348626732826233,
    0.0035772023256868124,
    0.019033288583159447,
    -0.040070079267024994,
    -0.009773850440979004,
    0.009157908149063587,
    0.007824495434761047,
    0.007546983193606138,
    -0.020793123170733452,
    -0.022025007754564285,
    0.026993155479431152,
    -0.03395127132534981,
    0.008054628036916256,
    -0.007181479129940271,
    0.0070393383502960205,
    -0.00802755355834961,
    0.0072491648606956005,
    0.011939801275730133,
    -0.008975156582891941,
    0.0049072313122451305,
    0.00014679390005767345,
    -0.011926263570785522,
    -0.013956842012703419,
    -0.009652015753090382,
    -0.01298216450959444,
    -0.0010482860961928964,
    0.042290180921554565,
    -0.0029883345123380423,
    0.013956842012703419,
    -0.01505335420370102,
    -0.011560759507119656,
    -0.025504063814878464,
    0.00015208186232484877,
    -0.013009238988161087,
    -0.016853800043463707,
    0.007479296997189522,
    0.003644888289272785,
    0.013097230345010757,
    0.006034201942384243,
    -0.010328875854611397,
    -0.005996974650770426,
    0.0020339626353234053,
    -0.005932673346251249,
    0.028915436938405037,
    -0.006914119236171246,
    0.001803830498829484,
    -0.04727186635136604,
    -0.001566083636134863,
    0.011540453881025314,
    -0.022986147552728653,
    -0.0011489689350128174,
    0.004284520633518696,
    -0.022471733391284943,
    0.0118044288828969,
    -0.021321073174476624,
    -0.016542445868253708,
    0.008724718354642391,
    0.012826486490666866,
    0.0029663366731256247,
    -0.012298536486923695,
    0.015215801075100899,
    -0.04118013009428978,
    0.02077958546578884,
    0.024150345474481583,
    0.008338908664882183,
    0.014010990969836712,
    0.0069310409016907215,
    -0.0017479895614087582,
    -0.02008918859064579,
    -0.013158148154616356,
    -0.019452940672636032,
    0.007303313817828894,
    -0.014390031807124615,
    -0.008156156167387962,
    -0.07017678767442703,
    0.011073420755565166,
    0.009225594811141491,
    -0.02359532006084919,
    0.031108461320400238,
    -0.019046824425458908,
    0.0328141450881958,
    -0.015121040865778923,
    0.002331780968233943,
    0.036415040493011475,
    -0.02915910631418228,
    -0.00927974283695221,
    -0.029917187988758087,
    -0.004798933397978544,
    0.007188247516751289,
    0.009008999913930893,
    0.03595477342605591,
    -0.016596594825387,
    0.04970856010913849,
    0.02312151901423931,
    0.009421884082257748,
    -0.007235627621412277,
    0.031568724662065506,
    0.0055570160038769245,
    -0.024082660675048828,
    -0.008081701584160328,
    -0.010511627420783043,
    0.020332857966423035,
    0.00265667331404984,
    -0.011053115129470825,
    0.030242081731557846,
    -0.0006810898194089532,
    -0.02425864338874817,
    0.030079634860157967,
    -0.0009645247482694685,
    0.002712514251470566,
    0.019872594624757767,
    0.0020339626353234053,
    -0.012677577324211597,
    0.01463370118290186,
    -0.04805702343583107,
    -0.024001436308026314,
    0.034059569239616394,
    -0.01170289982110262,
    -0.011851808987557888,
    0.0018664399394765496,
    0.009083453565835953,
    0.014850297011435032,
    0.02743988297879696,
    0.004626334644854069,
    0.024515850469470024,
    0.0024739212822169065,
    -0.030242081731557846,
    -0.048138245940208435,
    -0.0025619131047278643,
    -0.013672561384737492,
    0.035250842571258545,
    0.010687611065804958,
    -0.0018461341969668865,
    0.006007127929478884,
    0.04938366636633873,
    -0.0058616031892597675,
    0.017029784619808197,
    0.007797420956194401,
    -0.00030902866274118423,
    -0.017720181494951248,
    -0.020170412957668304,
    -0.016542445868253708,
    -0.012772338464856148,
    -0.01397037971764803,
    -0.019358180463314056,
    -0.028211502358317375,
    0.027006693184375763,
    0.012664040550589561,
    0.04405001550912857,
    -0.024394014850258827,
    0.010998966172337532,
    -0.010254421271383762,
    -0.022214528173208237,
    0.014714924618601799,
    0.022701866924762726,
    0.003221851075068116,
    -0.009076685644686222,
    0.011682594195008278,
    0.001320722047239542,
    0.012779106386005878,
    -0.035440362989902496,
    -0.020630676299333572,
    -0.016163403168320656,
    -0.0007711967336945236,
    0.0055502476170659065,
    -0.0073574623093008995,
    -0.013022775761783123,
    0.024353403598070145,
    0.012576049193739891,
    -0.008338908664882183,
    -0.0013410277897492051,
    -0.011154644191265106,
    0.0024586920626461506,
    -0.00031939306063577533,
    0.026722412556409836,
    0.005137363448739052,
    0.009117296896874905,
    -0.01773371733725071,
    -0.03896003216505051,
    -0.0021236466709524393,
    -0.007113792933523655,
    -0.031920693814754486,
    -0.013016007840633392,
    -0.004582338500767946,
    -0.007810958195477724,
    0.008345677517354488,
    0.03010670840740204,
    0.02294553630053997,
    -0.01826166920363903,
    0.01675903983414173,
    0.0012513439869508147,
    0.004230371676385403,
    -0.03416786715388298,
    -0.024542924016714096,
    -0.0036787311546504498,
    -0.005337036680430174,
    0.04886925220489502,
    -0.024190956726670265,
    0.02340579964220524,
    0.03665870800614357,
    0.0020035039633512497,
    0.005106904543936253,
    0.006991958245635033,
    0.0015474699903279543,
    -0.0008621497545391321,
    0.00012194046576041728,
    -0.02546345256268978,
    -0.003902094904333353,
    -0.0034401381853967905,
    -0.022025007754564285,
    -0.014796148054301739,
    -0.0018393655773252249,
    -0.02729097381234169,
    0.0880458801984787,
    -0.009415115229785442,
    -0.015093966387212276,
    0.011838272213935852,
    -0.00997013971209526,
    -0.004162685479968786,
    -0.00013664099969901145,
    -0.01080944575369358,
    -0.013205528259277344,
    -0.009313586167991161,
    -0.007953098975121975,
    -0.005391185637563467,
    0.011513379402458668,
    -0.024745982140302658,
    -0.04388756677508354,
    0.009685859084129333,
    -0.006582458503544331,
    0.009706164710223675,
    0.036577485501766205,
    0.018545949831604958,
    0.027385734021663666,
    0.000575753569137305,
    -0.0058988300152122974,
    -0.023893138393759727,
    -0.030269155278801918,
    -0.0008448052103631198,
    0.013706403784453869,
    0.007330387830734253,
    -0.023906676098704338,
    -0.0599968247115612,
    0.02646520547568798,
    0.011939801275730133,
    -0.016312312334775925,
    -0.028671767562627792,
    -0.016515370458364487,
    -0.0037904130294919014,
    0.004392818082123995,
    -0.02662765048444271,
    0.0082982974126935,
    -0.0037464171182364225,
    -0.0055671692825853825,
    0.029402775689959526,
    -0.00648092944175005,
    -0.03630674257874489,
    -0.0006193264271132648,
    0.013862081803381443,
    -0.011391544714570045,
    -0.018356429412961006,
    -0.0402054525911808
  ]
}
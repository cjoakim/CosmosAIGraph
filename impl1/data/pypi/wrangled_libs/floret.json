{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "<a href=\"https://explosion.ai\"><img src=\"https://explosion.ai/assets/img/logo.svg\" width=\"125\" height=\"125\" align=\"right\" /></a>\n\n# floret: fasttext + bloom embeddings for compact, full-coverage vectors with spacy\n\nfloret is an extended version of [fasttext](https://fasttext.cc) that can\nproduce word representations for any word from a compact vector table. it\ncombines:\n\n- fasttext's subwords to provide embeddings for any word\n- bloom embeddings (\"hashing trick\") for a compact vector table\n\n## installation\n\n```bash\npip install floret\n```\n\n## usage\n\ntrain floret vectors using the options:\n\n- `mode`: `\"floret\"`, storing both words and subwords in the same compact hash\n  table\n- `hashcount`: store each entry in 1-4 rows in the hash table (recommended:\n  `2`)\n- `bucket`: in combination with `hashcount>1`, the size of the hash table can\n  be greatly reduced (recommended: `25000`--`100000`, reduced from the fasttext\n  default of `2000000`)\n- `minn`: min length of char ngram (default: `3`)\n- `maxn`: max length of char ngram (default: `6`)\n\n```python\nimport floret\n\n# train vectors\nmodel = floret.train_unsupervised(\n    \"data.txt\",\n    model=\"cbow\",\n    mode=\"floret\",\n    hashcount=2,\n    bucket=50000,\n    minn=3,\n    maxn=6,\n)\n\n# query vector\nmodel.get_word_vector(\"broccoli\")\n\n# save full model\nmodel.save_model(\"vectors.bin\")\n\n# export standard word-only vector table\nmodel.save_vectors(\"vectors.vec\")\n\n# export floret vector table\nmodel.save_floret_vectors(\"vectors.floret\")\n```\n\n**note:** with the default setting `mode=\"fasttext\"`, `floret` trains original\nfasttext vectors.\n\n## use floret vectors in spacy\n\nimport floret vectors into spacy v3.2+:\n\n```bash\nspacy init vectors lang vectors.floret spacy_vectors_model --mode floret\n```\n\n## notes\n\n`floret` contains all features of the original [`fasttext`\nmodule](https://pypi.org/project/fasttext). see the [`fasttext`\ndocs](https://fasttext.cc/docs/en/python-module.html) for more information.\n\nthe `fasttext` and `floret` binary formats saved with\n`model.save_model(\"model.bin\")` are not compatible.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "floret",
  "package_url": "https://pypi.org/project/floret/",
  "project_url": "https://pypi.org/project/floret/",
  "project_urls": {
    "Homepage": "https://github.com/explosion/floret"
  },
  "release_url": "https://pypi.org/project/floret/0.10.5/",
  "requires_dist": [
    "numpy"
  ],
  "requires_python": "",
  "summary": "floret python bindings",
  "version": "0.10.5",
  "releases": [],
  "developers": [
    "contact@explosion.ai",
    "explosion"
  ],
  "kwds": "save_floret_vectors floret get_word_vector fasttext embeddings",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_floret",
  "homepage": "https://github.com/explosion/floret",
  "release_count": 9,
  "dependency_ids": [
    "pypi_numpy"
  ]
}
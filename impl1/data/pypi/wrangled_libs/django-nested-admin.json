{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "intended audience :: developers",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "|build_badge| |coverage_badge| |docs_badge|\n\n**django-nested-admin** is a project that makes it possible to nest\nadmin inlines (that is, to define inlines on inlinemodeladmin classes).\nit is compatible with django 3.2+ and python 3.7+ and works with or\nwithout grappelli. when grappelli is not installed it allows\ngrappelli-like drag-and-drop functionality.\n\ninstallation\n============\n\nthe recommended way to install django-nested-admin is from\n`pypi <https://pypi.python.org/pypi/django-nested-admin>`_::\n\n        pip install django-nested-admin\n\nalternatively, one can install a development copy of django-nested-admin\nfrom source::\n\n        pip install -e git+git://github.com/theatlantic/django-nested-admin.git#egg=django-nested-admin\n\nif the source is already checked out, use setuptools to install::\n\n        python setup.py develop\n\nconfiguration\n=============\n\nto use django-nested-admin in your project, ``\"nested_admin\"`` must be added\nto the ``installed_apps`` in your settings:\n\n.. code-block:: python\n\n    installed_apps = (\n        # ...\n        'nested_admin',\n    )\n\nif you\u2019re using `django-grappelli <https://github.com/sehmaschine/django-grappelli>`_,\nyou will also need to add to include ``nested_admin.urls`` in your urlpatterns:\n\n.. code-block:: python\n\n    urlpatterns = [\n        # ...\n        path('_nested_admin/', include('nested_admin.urls')),\n    ]\n\nexample usage\n=============\n\nin order to use ``django-nested-admin``, use the following classes in\nplace of their django admin equivalents:\n\n========================  ======================\n**django.contrib.admin**  **nested_admin**      \n------------------------  ----------------------\nmodeladmin                nestedmodeladmin           \ninlinemodeladmin          nestedinlinemodeladmin\nstackedinline             nestedstackedinline   \ntabularinline             nestedtabularinline\n========================  ======================\n\nthere is also ``nested_admin.nestedgenericstackedinline`` and\n``nested_admin.nestedgenerictabularinline`` which are the nesting-capable\nversions of ``genericstackedinline`` and ``generictabularinline`` in\n``django.contrib.contenttypes.admin``.\n\n.. code-block:: python\n\n    # an example admin.py for a table of contents app\n\n    from django.contrib import admin\n    import nested_admin\n\n    from .models import tableofcontents, tocarticle, tocsection\n\n    class tocarticleinline(nested_admin.nestedstackedinline):\n        model = tocarticle\n        sortable_field_name = \"position\"\n\n    class tocsectioninline(nested_admin.nestedstackedinline):\n        model = tocsection\n        sortable_field_name = \"position\"\n        inlines = [tocarticleinline]\n\n    class tableofcontentsadmin(nested_admin.nestedmodeladmin):\n        inlines = [tocsectioninline]\n\n    admin.site.register(tableofcontents, tableofcontentsadmin)\n\ntesting\n=======\n\ndjango-nested-admin has fairly extensive test coverage.\nthe best way to run the tests is with `tox <https://testrun.org/tox/latest/>`_,\nwhich runs the tests against all supported django installs. to run the tests\nwithin a virtualenv run ``pytest`` from the repository directory. the tests\nrequire a selenium webdriver to be installed. by default the tests run with\nphantomjs, but it is also possible to run the tests with the chrome webdriver\nby passing ``--selenosis-driver=chrome`` to ``pytest`` or, if running with\ntox, running ``tox -- --selenosis-driver=chrome``. see ``pytest --help`` for\na complete list of the options available.\n\ncontributing\n============\n\nthis project uses `webpack <https://webpack.js.org/>`_ for building its\njavascript and css. to install the dependencies for the build process, run\n``npm install`` from the root of the repository. you can then run\n``npm run build`` to rebuild the static files.\n\nlicense\n=======\n\nthe django code is licensed under the `simplified bsd\nlicense <http://opensource.org/licenses/bsd-2-clause>`_. view the\n``license`` file under the root directory for complete license and\ncopyright information.\n\n.. |build_badge| image:: https://github.com/theatlantic/django-nested-admin/workflows/test/badge.svg\n    :target: https://github.com/theatlantic/django-nested-admin/actions\n.. |coverage_badge| image:: https://codecov.io/gh/theatlantic/django-nested-admin/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/theatlantic/django-nested-admin\n.. |docs_badge| image:: https://readthedocs.org/projects/django-nested-admin/badge/?version=latest\n    :target: http://django-nested-admin.readthedocs.org/en/latest/\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "django-nested-admin",
  "package_url": "https://pypi.org/project/django-nested-admin/",
  "project_url": "https://pypi.org/project/django-nested-admin/",
  "project_urls": {
    "Homepage": "https://github.com/theatlantic/django-nested-admin"
  },
  "release_url": "https://pypi.org/project/django-nested-admin/4.0.2/",
  "requires_dist": [
    "python-monkey-business (>=1.0.0)",
    "black ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-xdist ; extra == 'dev'",
    "pytest-django ; extra == 'dev'",
    "Pillow ; extra == 'dev'",
    "dj-database-url ; extra == 'dev'",
    "django-selenosis ; extra == 'dev'",
    "selenium ; extra == 'dev'",
    "pytest ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest-xdist ; extra == 'test'",
    "pytest-django ; extra == 'test'",
    "Pillow ; extra == 'test'",
    "dj-database-url ; extra == 'test'",
    "django-selenosis ; extra == 'test'",
    "selenium ; extra == 'test'"
  ],
  "requires_python": ">=3.6",
  "summary": "django admin classes that allow for nested inlines",
  "version": "4.0.2",
  "releases": [],
  "developers": [
    "programmers@theatlantic.com",
    "the_atlantic"
  ],
  "kwds": "_nested_admin nested_admin django grappelli build_badge",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_django_nested_admin",
  "homepage": "https://github.com/theatlantic/django-nested-admin",
  "release_count": 52,
  "dependency_ids": [
    "pypi_black",
    "pypi_dj_database_url",
    "pypi_django_selenosis",
    "pypi_flake8",
    "pypi_pillow",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_django",
    "pypi_pytest_xdist",
    "pypi_python_monkey_business",
    "pypi_selenium"
  ]
}
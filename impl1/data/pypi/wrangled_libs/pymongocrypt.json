{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: database"
  ],
  "description": "============\npymongocrypt\n============\n:info: python bindings for libmongocrypt. see\n       `github <https://github.com/mongodb/libmongocrypt/tree/master/bindings/python>`_\n       for the latest source.\n:author: shane harvey\n\nabout\n=====\n\npython wrapper library for libmongocrypt that supports client side encryption\nin drivers. pymongocrypt uses `cffi <https://pypi.org/project/cffi/>`_ and\n`cryptography <https://pypi.org/project/cryptography/>`_.\n\npymongocrypt supports python 3.7+ and pypy3.7+.\n\nsupport / feedback\n==================\n\nfor issues with, questions about, or feedback for pymongocrypt, please look into\nour `support channels <http://www.mongodb.org/about/support>`_. please\ndo not email any of the pymongocrypt developers directly with issues or\nquestions - you're more likely to get an answer on the `mongodb-user\n<http://groups.google.com/group/mongodb-user>`_ list on google groups.\n\nbugs / feature requests\n=======================\n\nthink you\u2019ve found a bug? want to see a new feature in pymongocrypt?\nplease open a case in our issue management tool, jira:\n\n- `create an account and login <https://jira.mongodb.org>`_.\n- navigate to `the python project <https://jira.mongodb.org/browse/python>`_.\n- click **create issue** - please provide as much information as possible about the issue type and how to reproduce it.\n\nbug reports in jira for all driver projects (i.e. python, csharp, java) and the\ncore server (i.e. server) project are **public**.\n\nhow to ask for help\n-------------------\n\nplease include all of the following information when opening an issue:\n\n- detailed steps to reproduce the problem, including full traceback, if possible.\n- the exact python version used, with patch level::\n\n  $ python -c \"import sys; print(sys.version)\"\n\n- the exact version of pymongocrypt used::\n\n  $ python -c \"import pymongocrypt; print(pymongocrypt.__version__)\"\n\n- the exact version of libbmongocrypt used by pymongocrypt::\n\n  $ python -c \"import pymongocrypt; print(pymongocrypt.libmongocrypt_version())\"\n\n- the exact version of pymongo used (if applicable), with patch level::\n\n  $ python -c \"import pymongo; print(pymongo.version); print(pymongo.has_c())\"\n\n- the operating system and version (e.g. windows 7, osx 10.8, ...)\n- web framework or asynchronous network library used, if any, with version (e.g.\n  django 1.7, mod_wsgi 4.3.0, gevent 1.0.1, tornado 4.0.2, ...)\n\nsecurity vulnerabilities\n------------------------\n\nif you've identified a security vulnerability in a driver or any other\nmongodb project, please report it according to the `instructions here\n<http://docs.mongodb.org/manual/tutorial/create-a-vulnerability-report>`_.\n\ninstallation\n============\n\npymongocrypt can be installed with `pip <http://pypi.python.org/pypi/pip>`_::\n\n  $ python -m pip install pymongocrypt\n  $ python -c \"import pymongocrypt; print(pymongocrypt.libmongocrypt_version())\"\n  1.2.1\n\n\npymongocrypt ships wheels for macos, windows, and manylinux2010 that include\nan embedded libmongocrypt build.\n\ninstalling from wheels on linux requires pip 19 or later because it adds\n`support for manylinux2010 wheels <https://pip.pypa.io/en/stable/news/#id108>`_.\nolder versions of pip will attempt installation using the\npymongocrypt-x.y.tar.gz source distribution which requires the extra step of\ndownloading and installing libmongocrypt as described below.\nusers can upgrade to pip 19 by running::\n\n  $ python -m pip install --upgrade 'pip>=19'\n\ninstalling from source\n----------------------\n\ninstalling from source (or the pymongocrypt-x.y.tar.gz source distribution,\nor pip < 19 on linux) requires an extra step of installing libmongocrypt.\nfirst, install pymongocrypt from source::\n\n  $ git clone git@github.com:mongodb/libmongocrypt.git\n  $ python -m pip install ./libmongocrypt/bindings/python\n\nnext, install libmongocrypt.\n\nlibmongocrypt is continuously built and published on evergreen.\nthe latest tarball containing libmongocrypt built on all supported variants is\n`published here <https://s3.amazonaws.com/mciuploads/libmongocrypt/all/master/latest/libmongocrypt-all.tar.gz>`_.\ndownload and extract ``libmongocrypt-all.tar.gz`` and set\n``pymongocrypt_lib`` to the path to your operating system's libmongocrypt.so file.\nfor example::\n\n  $ curl -o https://s3.amazonaws.com/mciuploads/libmongocrypt/all/master/latest/libmongocrypt-all.tar.gz\n  $ mkdir libmongocrypt-all && tar xzf libmongocrypt-all.tar.gz -c libmongocrypt-all\n  $ ls libmongocrypt-all\n  amazon2             rhel-62-64-bit      rhel72-zseries-test ubuntu1604-arm64\n  debian10            rhel-67-s390x       suse12-64           ubuntu1804-64\n  debian92            rhel-70-64-bit      suse12-s390x        ubuntu1804-arm64\n  linux-64-amazon-ami rhel-71-ppc64el     suse15-64           windows-test\n  macos               rhel-80-64-bit      ubuntu1604\n\nmacos::\n\n  $ # set pymongocrypt_lib for macos:\n  $ export pymongocrypt_lib=$(pwd)/libmongocrypt-all/macos/nocrypto/lib/libmongocrypt.dylib\n  $ python -c \"import pymongocrypt; print(pymongocrypt.libmongocrypt_version())\"\n  1.2.1\n\nwindows::\n\n  $ # set pymongocrypt_lib for windows:\n  $ chmod +x $(pwd)/libmongocrypt-all/windows-test/nocrypto/bin/mongocrypt.dll\n  $ export pymongocrypt_lib=$(pwd)/libmongocrypt-all/windows-test/nocrypto/bin/mongocrypt.dll\n  $ python -c \"import pymongocrypt; print(pymongocrypt.libmongocrypt_version())\"\n  1.2.1\n\nlinux::\n\n  $ # set pymongocrypt_lib for rhel 6.2 x86_64:\n  $ export pymongocrypt_lib=$(pwd)/libmongocrypt-all/rhel-62-64-bit/nocrypto/lib64/libmongocrypt.so\n  $ python -c \"import pymongocrypt; print(pymongocrypt.libmongocrypt_version())\"\n  1.2.1\n\ndependencies\n============\n\npymongocrypt supports python 3.7+ and pypy3.7+.\n\npymongocrypt requires `cffi <https://pypi.org/project/cffi/>`_ and\n`cryptography <https://pypi.org/project/cryptography/>`_.\n\nif not installed using one of the official wheels, pymongocrypt also requires\nlibmongocrypt to be installed on your system. if libmongocrypt is not\ninstalled you will see an error like this:\n\n.. code-block:: python\n\n  >>> import pymongocrypt\n  traceback (most recent call last):\n    file \"<stdin>\", line 1, in <module>\n    file \"pymongocrypt/__init__.py\", line 15, in <module>\n      from pymongocrypt.binding import libmongocrypt_version, lib\n    file \"pymongocrypt/binding.py\", line 803, in <module>\n      lib = ffi.dlopen(os.environ.get('pymongocrypt_lib', 'mongocrypt'))\n    file \"/.../lib/python3.7/site-packages/cffi/api.py\", line 146, in dlopen\n      lib, function_cache = _make_ffi_library(self, name, flags)\n    file \"/.../lib/python3.7/site-packages/cffi/api.py\", line 828, in _make_ffi_library\n      backendlib = _load_backend_lib(backend, libname, flags)\n    file \"/.../lib/python3.7/site-packages/cffi/api.py\", line 823, in _load_backend_lib\n      raise oserror(msg)\n  oserror: ctypes.util.find_library() did not manage to locate a library called 'mongocrypt'\n\n\nuse the ``pymongocrypt_lib`` environment variable to load a locally installed\nlibmongocrypt build without relying on platform specific library path environment\nvariables, like ``ld_library_path``. for example::\n\n  $ export pymongocrypt_lib='/path/to/libmongocrypt.so'\n  $ python -c \"import pymongocrypt; print(pymongocrypt.libmongocrypt_version())\"\n  1.2.1\n\ntesting\n=======\n\nthe easiest way to run the tests is to run **python setup.py test** in\nthe root of the distribution.\n",
  "docs_url": null,
  "keywords": "mongo,mongodb,pymongocrypt,pymongo,mongocrypt,bson",
  "license": "apache license, version 2.0",
  "name": "pymongocrypt",
  "package_url": "https://pypi.org/project/pymongocrypt/",
  "project_url": "https://pypi.org/project/pymongocrypt/",
  "project_urls": {
    "Homepage": "https://github.com/mongodb/libmongocrypt/tree/master/bindings/python"
  },
  "release_url": "https://pypi.org/project/pymongocrypt/1.7.0/",
  "requires_dist": [
    "cffi (<2,>=1.12.0)",
    "cryptography (>=2.5)",
    "requests (<3.0.0)",
    "packaging (>=21.0)",
    "cryptography (<40) ; platform_python_implementation == \"PyPy\" and implementation_version < \"7.3.10\""
  ],
  "requires_python": ">=3.7",
  "summary": "python bindings for libmongocrypt",
  "version": "1.7.0",
  "releases": [],
  "developers": [
    "mongodb-user@googlegroups.com",
    "shane_harvey"
  ],
  "kwds": "pymongocrypt_lib pymongocrypt mongocrypt libmongocrypt_version libbmongocrypt",
  "license_kwds": "apache license, version 2.0",
  "libtype": "pypi",
  "id": "pypi_pymongocrypt",
  "homepage": "https://github.com/mongodb/libmongocrypt/tree/master/bindings/python",
  "release_count": 20,
  "dependency_ids": [
    "pypi_cffi",
    "pypi_cryptography",
    "pypi_packaging",
    "pypi_requests"
  ]
}
{
  "classifiers": [
    "development status :: 7 - inactive",
    "framework :: aws cdk",
    "framework :: aws cdk :: 1",
    "intended audience :: developers",
    "license :: osi approved",
    "operating system :: os independent",
    "programming language :: javascript",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "# aws amplify construct library\n\n<!--begin stability banner-->---\n\n\n![end-of-support](https://img.shields.io/badge/end--of--support-critical.svg?style=for-the-badge)\n\n> aws cdk v1 has reached end-of-support on 2023-06-01.\n> this package is no longer being updated, and users should migrate to aws cdk v2.\n>\n> for more information on how to migrate, see the [*migrating to aws cdk v2* guide](https://docs.aws.amazon.com/cdk/v2/guide/migrating-v2.html).\n\n---\n<!--end stability banner-->\n\nthe aws amplify console provides a git-based workflow for deploying and hosting fullstack serverless web applications. a fullstack serverless app consists of a backend built with cloud resources such as graphql or rest apis, file and data storage, and a frontend built with single page application frameworks such as react, angular, vue, or gatsby.\n\n## setting up an app with branches, custom rules and a domain\n\nto set up an amplify console app, define an `app`:\n\n```python\nimport aws_cdk.aws_codebuild as codebuild\n\n\namplify_app = amplify.app(self, \"myapp\",\n    source_code_provider=amplify.githubsourcecodeprovider(\n        owner=\"<user>\",\n        repository=\"<repo>\",\n        oauth_token=secretvalue.secrets_manager(\"my-github-token\")\n    ),\n    build_spec=codebuild.buildspec.from_object_to_yaml({\n        # alternatively add a `amplify.yml` to the repo\n        \"version\": \"1.0\",\n        \"frontend\": {\n            \"phases\": {\n                \"pre_build\": {\n                    \"commands\": [\"yarn\"\n                    ]\n                },\n                \"build\": {\n                    \"commands\": [\"yarn build\"\n                    ]\n                }\n            },\n            \"artifacts\": {\n                \"base_directory\": \"public\",\n                \"files\": -\"**/*\"\n            }\n        }\n    })\n)\n```\n\nto connect your `app` to gitlab, use the `gitlabsourcecodeprovider`:\n\n```python\namplify_app = amplify.app(self, \"myapp\",\n    source_code_provider=amplify.gitlabsourcecodeprovider(\n        owner=\"<user>\",\n        repository=\"<repo>\",\n        oauth_token=secretvalue.secrets_manager(\"my-gitlab-token\")\n    )\n)\n```\n\nto connect your `app` to codecommit, use the `codecommitsourcecodeprovider`:\n\n```python\nimport aws_cdk.aws_codecommit as codecommit\n\n\nrepository = codecommit.repository(self, \"repo\",\n    repository_name=\"my-repo\"\n)\n\namplify_app = amplify.app(self, \"app\",\n    source_code_provider=amplify.codecommitsourcecodeprovider(repository=repository)\n)\n```\n\nthe iam role associated with the `app` will automatically be granted the permission\nto pull the codecommit repository.\n\nadd branches:\n\n```python\n# amplify_app: amplify.app\n\n\nmaster = amplify_app.add_branch(\"master\") # `id` will be used as repo branch name\ndev = amplify_app.add_branch(\"dev\",\n    performance_mode=true\n)\ndev.add_environment(\"stage\", \"dev\")\n```\n\nauto build and pull request preview are enabled by default.\n\nadd custom rules for redirection:\n\n```python\n# amplify_app: amplify.app\n\namplify_app.add_custom_rule({\n    \"source\": \"/docs/specific-filename.html\",\n    \"target\": \"/documents/different-filename.html\",\n    \"status\": amplify.redirectstatus.temporary_redirect\n})\n```\n\nwhen working with a single page application (spa), use the\n`customrule.single_page_application_redirect` to set up a 200\nrewrite for all files to `index.html` except for the following\nfile extensions: css, gif, ico, jpg, js, png, txt, svg, woff,\nttf, map, json, webmanifest.\n\n```python\n# my_single_page_app: amplify.app\n\n\nmy_single_page_app.add_custom_rule(amplify.customrule.single_page_application_redirect)\n```\n\nadd a domain and map sub domains to branches:\n\n```python\n# amplify_app: amplify.app\n# master: amplify.branch\n# dev: amplify.branch\n\n\ndomain = amplify_app.add_domain(\"example.com\",\n    enable_auto_subdomain=true,  # in case subdomains should be auto registered for branches\n    auto_subdomain_creation_patterns=[\"*\", \"pr*\"]\n)\ndomain.map_root(master) # map master branch to domain root\ndomain.map_sub_domain(master, \"www\")\ndomain.map_sub_domain(dev)\n```\n\n## restricting access\n\npassword protect the app with basic auth by specifying the `basicauth` prop.\n\nuse `basicauth.fromcredentials` when referencing an existing secret:\n\n```python\namplify_app = amplify.app(self, \"myapp\",\n    source_code_provider=amplify.githubsourcecodeprovider(\n        owner=\"<user>\",\n        repository=\"<repo>\",\n        oauth_token=secretvalue.secrets_manager(\"my-github-token\")\n    ),\n    basic_auth=amplify.basicauth.from_credentials(\"username\", secretvalue.secrets_manager(\"my-github-token\"))\n)\n```\n\nuse `basicauth.fromgeneratedpassword` to generate a password in secrets manager:\n\n```python\namplify_app = amplify.app(self, \"myapp\",\n    source_code_provider=amplify.githubsourcecodeprovider(\n        owner=\"<user>\",\n        repository=\"<repo>\",\n        oauth_token=secretvalue.secrets_manager(\"my-github-token\")\n    ),\n    basic_auth=amplify.basicauth.from_generated_password(\"username\")\n)\n```\n\nbasic auth can be added to specific branches:\n\n```python\n# amplify_app: amplify.app\n\namplify_app.add_branch(\"feature/next\",\n    basic_auth=amplify.basicauth.from_generated_password(\"username\")\n)\n```\n\n## automatically creating and deleting branches\n\nuse the `autobranchcreation` and `autobranchdeletion` props to control creation/deletion\nof branches:\n\n```python\namplify_app = amplify.app(self, \"myapp\",\n    source_code_provider=amplify.githubsourcecodeprovider(\n        owner=\"<user>\",\n        repository=\"<repo>\",\n        oauth_token=secretvalue.secrets_manager(\"my-github-token\")\n    ),\n    auto_branch_creation=amplify.autobranchcreation( # automatically connect branches that match a pattern set\n        patterns=[\"feature/*\", \"test/*\"]),\n    auto_branch_deletion=true\n)\n```\n\n## adding custom response headers\n\nuse the `customresponseheaders` prop to configure custom response headers for an amplify app:\n\n```python\namplify_app = amplify.app(self, \"app\",\n    source_code_provider=amplify.githubsourcecodeprovider(\n        owner=\"<user>\",\n        repository=\"<repo>\",\n        oauth_token=secretvalue.secrets_manager(\"my-github-token\")\n    ),\n    custom_response_headers=[amplify.customresponseheader(\n        pattern=\"*.json\",\n        headers={\n            \"custom-header-name-1\": \"custom-header-value-1\",\n            \"custom-header-name-2\": \"custom-header-value-2\"\n        }\n    ), amplify.customresponseheader(\n        pattern=\"/path/*\",\n        headers={\n            \"custom-header-name-1\": \"custom-header-value-2\"\n        }\n    )\n    ]\n)\n```\n\n## deploying assets\n\n`sourcecodeprovider` is optional; when this is not specified the amplify app can be deployed to using `.zip` packages. the `asset` property can be used to deploy s3 assets to amplify as part of the cdk:\n\n```python\nimport aws_cdk.aws_s3_assets as assets\n\n# asset: assets.asset\n# amplify_app: amplify.app\n\nbranch = amplify_app.add_branch(\"dev\", asset=asset)\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "aws-cdk.aws-amplify",
  "package_url": "https://pypi.org/project/aws-cdk.aws-amplify/",
  "project_url": "https://pypi.org/project/aws-cdk.aws-amplify/",
  "project_urls": {
    "Homepage": "https://github.com/aws/aws-cdk",
    "Source": "https://github.com/aws/aws-cdk.git"
  },
  "release_url": "https://pypi.org/project/aws-cdk.aws-amplify/1.204.0/",
  "requires_dist": [
    "aws-cdk.aws-codebuild (==1.204.0)",
    "aws-cdk.aws-codecommit (==1.204.0)",
    "aws-cdk.aws-iam (==1.204.0)",
    "aws-cdk.aws-kms (==1.204.0)",
    "aws-cdk.aws-lambda-nodejs (==1.204.0)",
    "aws-cdk.aws-lambda (==1.204.0)",
    "aws-cdk.aws-s3-assets (==1.204.0)",
    "aws-cdk.aws-secretsmanager (==1.204.0)",
    "aws-cdk.core (==1.204.0)",
    "aws-cdk.custom-resources (==1.204.0)",
    "constructs (<4.0.0,>=3.3.69)",
    "jsii (<2.0.0,>=1.84.0)",
    "publication (>=0.0.3)",
    "typeguard (~=2.13.3)"
  ],
  "requires_python": "~=3.7",
  "summary": "the cdk construct library for aws::amplify",
  "version": "1.204.0",
  "releases": [],
  "developers": [
    "amazon_web_services"
  ],
  "kwds": "aws_cdk aws aws_codebuild aws_s3_assets cdk",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_aws_cdk.aws_amplify",
  "homepage": "https://github.com/aws/aws-cdk",
  "release_count": 250,
  "dependency_ids": [
    "pypi_aws_cdk.aws_codebuild",
    "pypi_aws_cdk.aws_codecommit",
    "pypi_aws_cdk.aws_iam",
    "pypi_aws_cdk.aws_kms",
    "pypi_aws_cdk.aws_lambda",
    "pypi_aws_cdk.aws_lambda_nodejs",
    "pypi_aws_cdk.aws_s3_assets",
    "pypi_aws_cdk.aws_secretsmanager",
    "pypi_aws_cdk.core",
    "pypi_aws_cdk.custom_resources",
    "pypi_constructs",
    "pypi_jsii",
    "pypi_publication",
    "pypi_typeguard"
  ]
}
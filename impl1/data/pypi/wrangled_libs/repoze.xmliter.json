{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "programming language :: python",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "topic :: internet :: www/http",
    "topic :: internet :: www/http :: wsgi",
    "topic :: internet :: www/http :: wsgi :: application"
  ],
  "description": "overview\n========\n\nthis package provides a wrapper for ``lxml`` trees which serializes to\nstring on iteration, but otherwise makes the tree available in an\nattribute.\n\nthe primary for this is wsgi middleware which may avoid\nneedless xml parsing and serialization.\n\nusage\n-----\n\nit's recommend to use the `lazy` decorator on your application method. this\nallows you to return an lxml tree object, which is then automatically turned\ninto an xmlserializer.\n\n  >>> from repoze.xmliter import lazy\n  \n  >>> @lazy\n  ... def application(environ, start_response)\n  ...     return some_lxml_tree\n\nyou may provide a serializer function, which will be used when the\nxmlserializer is eventually iterated over (i.e. when the response is rendered):\n\n  >>> @lazy(serializer=lxml.html.tostring)\n  ... def application(environ, start_response)\n  ...     return some_lxml_tree\n\nmiddleware can use `isinstance` to test if the result is an xml\niterable:\n\n  >>> from repoze.xmliter.serializer import xmlserializer\n  >>> isinstance(result, xmlserializer)\n\nin this case, the middleware can simply access the `tree` attribute of\nthe result.\n\nthere are two convenience methods which can be used to parse a wsgi iterable\nof strings and build an xmlserializer object, but avoids re-building the\nserializer if the input iterable is already an instance of xmlserializer:\n\n  >>> from repoze.xmliter.utils import getxmlserializer\n  >>> result = getxmlserializer(result)\n\nor, if you are parsing html:\n\n  >>> from repoze.xmliter.utils import gethtmlserializer\n  >>> result = gethtmlserializer(result)\n\nif `result` is not an xmlserializer, it will be parsed using a feed parser,\nturned into an lxml tree, and wrapped up in an xmlserializer, which is\nreturned.\n\n\nchangelog\n---------\n\n0.6.1 (2022-01-14)\n------------------\n\n* fixed tests with lxml 4.7.1 or higher.\n  fixes `issue 8 <https://github.com/repoze/repoze.xmliter/issues/8>`_.\n  [maurits]\n\n0.6 - 2014-09-21\n----------------\n\n* python 3 compatibility\n  [lennart regebro]\n\n0.5 - 2012-01-25\n----------------\n\n* add __len__ to serializer to help wsgi servers.\n  [laurence]\n\n* serializer should iter the entire string in one go.\n  [laurence]\n\n0.4 - 2011-06-16\n----------------\n\n* ensure trailing space is removed when replacing doctype with empty string.\n  [laurence]\n\n0.3 - 2011-06-03\n----------------\n\n* add doctype option to replace doctype on serialization.\n  [laurence]\n\n0.2 - 2010-09-11\n----------------\n\n* use document encoding by default. (this fixes test failure on ubuntu 10.04.)\n  [laurence]\n\n* defer to xsl:output settings when serializing an xslresulttree.\n  [laurence]\n\n* turn off pretty printing by default for html to avoid affecting rendering on\n  the browser.\n  [laurence]\n\n0.1 - 2010-04-21\n----------------\n\n* initial release",
  "docs_url": null,
  "keywords": "web middleware xml serialization",
  "license": "bsd-derived (http://www.repoze.org/license.txt)",
  "name": "repoze.xmliter",
  "package_url": "https://pypi.org/project/repoze.xmliter/",
  "project_url": "https://pypi.org/project/repoze.xmliter/",
  "project_urls": {
    "Homepage": "http://www.repoze.org"
  },
  "release_url": "https://pypi.org/project/repoze.xmliter/0.6.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "wrapper for ``lxml`` trees which serializes to string upon iteration.",
  "version": "0.6.1",
  "releases": [],
  "developers": [
    "malthe_borch",
    "repoze-dev@lists.repoze.org"
  ],
  "kwds": "some_lxml_tree getxmlserializer xmlserializer lxml xml",
  "license_kwds": "bsd-derived (http://www.repoze.org/license.txt)",
  "libtype": "pypi",
  "id": "pypi_repoze.xmliter",
  "homepage": "http://www.repoze.org",
  "release_count": 7,
  "dependency_ids": []
}
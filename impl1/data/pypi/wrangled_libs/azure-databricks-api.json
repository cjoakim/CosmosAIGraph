{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "intended audience :: information technology",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6"
  ],
  "description": "# azure databricks api wrapper\na python, object-oriented wrapper for the [azure databricks rest api 2.0](https://docs.azuredatabricks.net/api/latest/index.html)\n\n[![github workflow status (branch)](https://img.shields.io/github/workflow/status/ezwiefel/azure-databricks-api/unit%20tests/main?style=for-the-badge)](https://github.com/ezwiefel/azure-databricks-api/actions?query=workflow%3a%22unit+tests%22)\n[![coveralls github](https://img.shields.io/coveralls/github/ezwiefel/azure-databricks-api?style=for-the-badge)](https://coveralls.io/github/ezwiefel/azure-databricks-api)\n[![pypi](https://img.shields.io/pypi/v/azure-databricks-api?style=for-the-badge)](https://pypi.org/project/azure-databricks-api/)\n[![pypi - downloads](https://img.shields.io/pypi/dm/azure-databricks-api?label=pip%20downloads&style=for-the-badge)](https://pypi.org/project/azure-databricks-api/)\n[![github](https://img.shields.io/github/license/ezwiefel/azure-databricks-api?style=for-the-badge)](https://github.com/ezwiefel/azure-databricks-api/blob/main/license)\n\n### installation\nthis package is pip installable.\n```bash\npip install azure-databricks-api\n```\n\n### implemented apis\nas of june 25th, 2020 there are 12 different services available in the azure databricks api. currently, the following services are supported by the azure databricks api wrapper.\n* [x] clusters\n* [ ] cluster policies _(preview)_\n* [x] dbfs\n* [x] groups _(must be databricks admin)_\n* [ ] instance pools\n* [ ] jobs\n* [x] libraries\n* [ ] mlflow\n* [ ] scim _(preview)_\n* [ ] secrets\n* [x] token\n* [x] workspace\n\n\n### client instantiation\nto create the client object, you pass the azure region your workspace is located in and the [generated personal access token](https://docs.databricks.com/api/latest/authentication.html#generate-a-token)\n```python\nfrom azure_databricks_api import azuredatabricksrestclient\n\nazure_region = '[insert your azure region here]'\ntoken = '[insert your personal access token]' \n\nclient = azuredatabricksrestclient(region=azure_region, token=token)\n```\n\n### clusters client usage\nthe services above are implemented as children objects of the client. for example, to pin a cluster, you can either pass the `cluster_name` or `cluster_id` to the `pin()` method:\n```python\nclient.clusters.pin(cluster_name='test_cluster_name')\n```\n\nthe other services are implemented similarly. (e.g. `client.tokens` or `client.groups`)\n\n\n\n",
  "docs_url": null,
  "keywords": "azure,databricks",
  "license": "mit",
  "name": "azure-databricks-api",
  "package_url": "https://pypi.org/project/azure-databricks-api/",
  "project_url": "https://pypi.org/project/azure-databricks-api/",
  "project_urls": {
    "Homepage": "http://github.com/ezwiefel/azure-databricks-api"
  },
  "release_url": "https://pypi.org/project/azure-databricks-api/0.6.2/",
  "requires_dist": [
    "requests (>=2.20.0)"
  ],
  "requires_python": "",
  "summary": "a wrapper for the azure databricks rest api",
  "version": "0.6.2",
  "releases": [],
  "developers": [
    "erik_zwiefel",
    "erikzw@outlook.com"
  ],
  "kwds": "azure_databricks_api azuredatabricks azuredatabricksrestclient databricks workflow",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_azure_databricks_api",
  "homepage": "http://github.com/ezwiefel/azure-databricks-api",
  "release_count": 5,
  "dependency_ids": [
    "pypi_requests"
  ]
}
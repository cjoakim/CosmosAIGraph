{
  "classifiers": [
    "framework :: jupyter",
    "framework :: jupyter :: jupyterlab",
    "framework :: jupyter :: jupyterlab :: 3",
    "framework :: jupyter :: jupyterlab :: extensions",
    "framework :: jupyter :: jupyterlab :: extensions :: prebuilt",
    "intended audience :: developers",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# interactive parallel computing with ipython\n\nipython parallel (`ipyparallel`) is a python package and collection of cli scripts for controlling clusters of ipython processes, built on the jupyter protocol.\n\nipython parallel provides the following commands:\n\n- ipcluster - start/stop/list clusters\n- ipcontroller - start a controller\n- ipengine - start an engine\n\n## install\n\ninstall ipython parallel:\n\n    pip install ipyparallel\n\nthis will install and enable the ipython parallel extensions\nfor jupyter notebook and (as of 7.0) jupyter lab 3.0.\n\n## run\n\nstart a cluster:\n\n    ipcluster start\n\nuse it from python:\n\n```python\nimport os\nimport ipyparallel as ipp\n\ncluster = ipp.cluster(n=4)\nwith cluster as rc:\n    ar = rc[:].apply_async(os.getpid)\n    pid_map = ar.get_dict()\n```\n\nsee [the docs](https://ipyparallel.readthedocs.io) for more info.\n",
  "docs_url": null,
  "keywords": "interactive,interpreter,parallel,shell",
  "license": "# licensing terms  traitlets is adapted from enthought.traits, copyright (c) enthought, inc., under the terms of the modified bsd license.  this project is licensed under the terms of the modified bsd license (also known as new or revised or 3-clause bsd), as follows:  - copyright (c) 2001-, ipython development team  all rights reserved.  redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  neither the name of the ipython development team nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  this software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. in no event shall the copyright owner or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.  ## about the ipython development team  the ipython development team is the set of all contributors to the ipython project. this includes all of the ipython subprojects.  the core team that coordinates development on github can be found here: https://github.com/jupyter/.  ## our copyright policy  ipython uses a shared copyright model. each contributor maintains copyright over their contributions to ipython. but, it is important to note that these contributions are typically only changes to the repositories. thus, the ipython source code, in its entirety is not the copyright of any single person or institution. instead, it is the collective copyright of the entire ipython development team. if individual contributors want to maintain a record of what changes/contributions they have specific copyright on, they should indicate their copyright in the commit message of the change, when they commit the change to one of the ipython repositories.  with this in mind, the following banner should be used in any source code file to indicate the copyright and license terms:  # copyright (c) ipython development team. # distributed under the terms of the modified bsd license.",
  "name": "ipyparallel",
  "package_url": "https://pypi.org/project/ipyparallel/",
  "project_url": "https://pypi.org/project/ipyparallel/",
  "project_urls": {
    "Homepage": "https://ipython.org"
  },
  "release_url": "https://pypi.org/project/ipyparallel/8.6.1/",
  "requires_dist": [
    "decorator",
    "entrypoints",
    "ipykernel>=4.4",
    "ipython>=4",
    "jupyter-client",
    "psutil",
    "python-dateutil>=2.1",
    "pyzmq>=18",
    "tornado>=5.1",
    "tqdm",
    "traitlets>=4.3",
    "asv; extra == 'benchmark'",
    "jupyter-server; extra == 'labextension'",
    "jupyterlab>=3; extra == 'labextension'",
    "jupyter-server; extra == 'nbext'",
    "notebook; extra == 'nbext'",
    "jupyter-server; extra == 'retroextension'",
    "retrolab; extra == 'retroextension'",
    "jupyter-server; extra == 'serverextension'",
    "ipython[test]; extra == 'test'",
    "pytest; extra == 'test'",
    "pytest-asyncio; extra == 'test'",
    "pytest-cov; extra == 'test'",
    "testpath; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "interactive parallel computing with ipython",
  "version": "8.6.1",
  "releases": [],
  "developers": [
    "ipython-dev@scipy.org"
  ],
  "kwds": "ipython jupyter ipengine ipcluster pip",
  "license_kwds": "traitlets copyright ipython licensing traits",
  "libtype": "pypi",
  "id": "pypi_ipyparallel",
  "homepage": "",
  "release_count": 45,
  "dependency_ids": [
    "pypi_asv",
    "pypi_decorator",
    "pypi_entrypoints",
    "pypi_ipykernel",
    "pypi_ipython",
    "pypi_jupyter_client",
    "pypi_jupyter_server",
    "pypi_jupyterlab",
    "pypi_notebook",
    "pypi_psutil",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_python_dateutil",
    "pypi_pyzmq",
    "pypi_retrolab",
    "pypi_testpath",
    "pypi_tornado",
    "pypi_tqdm",
    "pypi_traitlets"
  ]
}
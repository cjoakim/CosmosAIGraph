{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: web environment",
    "framework :: django",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "an app that provides django integration for rq (redis queue)\n=========\ndjango-rq\n=========\n\n|build status|\n\ndjango integration with `rq <https://github.com/nvie/rq>`__, a `redis <http://redis.io/>`__\nbased python queuing library. `django-rq <https://github.com/rq/django-rq>`__ is a\nsimple app that allows you to configure your queues in django's ``settings.py``\nand easily use them in your project.\n\n=================\nsupport django-rq\n=================\n\nif you find ``django-rq`` useful, please consider supporting its development via `tidelift <https://tidelift.com/subscription/pkg/pypi-django_rq?utm_source=pypi-django-rq&utm_medium=referral&utm_campaign=readme>`_.\n\n============\nrequirements\n============\n\n* `django <https://www.djangoproject.com/>`__ (2.0+)\n* `rq <https://github.com/nvie/rq>`__\n\n============\ninstallation\n============\n\n* install ``django-rq`` (or `download from pypi <http://pypi.python.org/pypi/django-rq>`__):\n\n.. code-block:: python\n\n    pip install django-rq\n\n* add ``django_rq`` to ``installed_apps`` in ``settings.py``:\n\n.. code-block:: python\n\n    installed_apps = (\n        # other apps\n        \"django_rq\",\n    )\n\n* configure your queues in django's ``settings.py``:\n\n.. code-block:: python\n\n    rq_queues = {\n        'default': {\n            'host': 'localhost',\n            'port': 6379,\n            'db': 0,\n            'username': 'some-user',\n            'password': 'some-password',\n            'default_timeout': 360,\n            'redis_client_kwargs': {    # eventual additional redis connection arguments\n                'ssl_cert_reqs': none,\n            },\n        },\n        'with-sentinel': {\n            'sentinels': [('localhost', 26736), ('localhost', 26737)],\n            'master_name': 'redismaster',\n            'db': 0,\n            # redis username/password\n            'username': 'redis-user',\n            'password': 'secret',\n            'socket_timeout': 0.3,\n            'connection_kwargs': {  # eventual additional redis connection arguments\n                'ssl': true\n            },\n            'sentinel_kwargs': {    # eventual sentinel connection arguments\n                # if sentinel also has auth, username/password can be passed here\n                'username': 'sentinel-user',\n                'password': 'secret',\n            },\n        },\n        'high': {\n            'url': os.getenv('redistogo_url', 'redis://localhost:6379/0'), # if you're on heroku\n            'default_timeout': 500,\n        },\n        'low': {\n            'host': 'localhost',\n            'port': 6379,\n            'db': 0,\n        }\n    }\n\n    rq_exception_handlers = ['path.to.my.handler'] # if you need custom exception handlers\n\n* include ``django_rq.urls`` in your ``urls.py``:\n\n.. code-block:: python\n\n    urlpatterns += [\n        path('django-rq/', include('django_rq.urls'))\n    ]\n\n=====\nusage\n=====\n\nputting jobs in the queue\n-------------------------\n\n`django-rq` allows you to easily put jobs into any of the queues defined in\n``settings.py``. it comes with a few utility functions:\n\n* ``enqueue`` - push a job to the ``default`` queue:\n\n.. code-block:: python\n\n    import django_rq\n    django_rq.enqueue(func, foo, bar=baz)\n\n* ``get_queue`` - returns an ``queue`` instance.\n\n.. code-block:: python\n\n    import django_rq\n    queue = django_rq.get_queue('high')\n    queue.enqueue(func, foo, bar=baz)\n\nin addition to ``name`` argument, ``get_queue`` also accepts ``default_timeout``,\n``is_async``, ``autocommit``, ``connection`` and ``queue_class`` arguments. for example:\n\n.. code-block:: python\n\n    queue = django_rq.get_queue('default', autocommit=true, is_async=true, default_timeout=360)\n    queue.enqueue(func, foo, bar=baz)\n\nyou can provide your own singleton redis connection object to this function so that it will not\ncreate a new connection object for each queue definition. this will help you limit\nnumber of connections to redis server. for example:\n\n.. code-block:: python\n\n    import django_rq\n    import redis\n    redis_cursor = redis.strictredis(host='', port='', db='', password='')\n    high_queue = django_rq.get_queue('high', connection=redis_cursor)\n    low_queue = django_rq.get_queue('low', connection=redis_cursor)\n\n\n* ``get_connection`` - accepts a single queue name argument (defaults to \"default\")\n  and returns a connection to the queue's redis server:\n\n.. code-block:: python\n\n    import django_rq\n    redis_conn = django_rq.get_connection('high')\n\n* ``get_worker`` - accepts optional queue names and returns a new `rq`\n  ``worker`` instance for specified queues (or ``default`` queue):\n\n.. code-block:: python\n\n    import django_rq\n    worker = django_rq.get_worker() # returns a worker for \"default\" queue\n    worker.work()\n    worker = django_rq.get_worker('low', 'high') # returns a worker for \"low\" and \"high\"\n\n\n@job decorator\n--------------\n\nto easily turn a callable into an rq task, you can also use the ``@job``\ndecorator that comes with ``django_rq``:\n\n.. code-block:: python\n\n    from django_rq import job\n\n    @job\n    def long_running_func():\n        pass\n    long_running_func.delay() # enqueue function in \"default\" queue\n\n    @job('high')\n    def long_running_func():\n        pass\n    long_running_func.delay() # enqueue function in \"high\" queue\n\nyou can pass in any arguments that rq's job decorator accepts:\n\n.. code-block:: python\n\n    @job('default', timeout=3600)\n    def long_running_func():\n        pass\n    long_running_func.delay() # enqueue function with a timeout of 3600 seconds.\n\nit's possible to specify default for ``result_ttl`` decorator keyword argument\nvia ``default_result_ttl`` setting:\n\n.. code-block:: python\n\n    rq = {\n        'default_result_ttl': 5000,\n    }\n\nwith this setting, job decorator will set ``result_ttl`` to 5000 unless it's\nspecified explicitly.\n\n\nrunning workers\n---------------\ndjango_rq provides a management command that starts a worker for every queue\nspecified as arguments::\n\n    python manage.py rqworker high default low\n\nif you want to run ``rqworker`` in burst mode, you can pass in the ``--burst`` flag::\n\n    python manage.py rqworker high default low --burst\n\nif you need to use custom worker, job or queue classes, it is best to use global settings\n(see `custom queue classes`_ and `custom job and worker classes`_). however, it is also possible\nto override such settings with command line options as follows.\n\nto use a custom worker class, you can pass in the ``--worker-class`` flag\nwith the path to your worker::\n\n    python manage.py rqworker high default low --worker-class 'path.to.geventworker'\n\nto use a custom queue class, you can pass in the ``--queue-class`` flag\nwith the path to your queue class::\n\n    python manage.py rqworker high default low --queue-class 'path.to.customqueue'\n\nto use a custom job class, provide ``--job-class`` flag.\n\nstarting from version 2.10, running rq's worker-pool is also supported::\n\n    python manage.py rqworker-pool default low medium --num-workers 4\n\nsupport for scheduled jobs\n--------------------------\n\nwith rq 1.2.0. you can use `built-in scheduler <https://python-rq.org/docs/scheduling/>`__\nfor your jobs. for example:\n\n.. code-block:: python\n\n    from django_rq.queues import get_queue\n    queue = get_queue('default')\n    job = queue.enqueue_at(datetime(2020, 10, 10), func)\n    \nif you are using built-in scheduler you have to start workers with scheduler support::\n\n    python manage.py rqworker --with-scheduler\n\n\nalternatively you can use `rq scheduler <https://github.com/ui/rq-scheduler>`__.\nafter install you can also use the ``get_scheduler`` function to return a\n``scheduler`` instance for queues defined in settings.py's ``rq_queues``.\nfor example:\n\n.. code-block:: python\n\n    import django_rq\n    scheduler = django_rq.get_scheduler('default')\n    job = scheduler.enqueue_at(datetime(2020, 10, 10), func)\n\nyou can also use the management command ``rqscheduler`` to start the scheduler::\n\n    python manage.py rqscheduler\n\n\nsupport for django-redis and django-redis-cache\n-----------------------------------------------\n\nif you have `django-redis <https://django-redis.readthedocs.org/>`__ or\n`django-redis-cache <https://github.com/sebleier/django-redis-cache/>`__\ninstalled, you can instruct django_rq to use the same connection information\nfrom your redis cache. this has two advantages: it's dry and it takes advantage\nof any optimization that may be going on in your cache setup (like using\nconnection pooling or `hiredis <https://github.com/redis/hiredis>`__.)\n\nto use configure it, use a dict with the key ``use_redis_cache`` pointing to the\nname of the desired cache in your ``rq_queues`` dict. it goes without saying\nthat the chosen cache must exist and use the redis backend. see your respective\nredis cache package docs for configuration instructions. it's also important to\npoint out that since the django-redis-cache ``shardedclient`` splits the cache\nover multiple redis connections, it does not work.\n\nhere is an example settings fragment for `django-redis`:\n\n.. code-block:: python\n\n    caches = {\n        'redis-cache': {\n            'backend': 'redis_cache.cache.rediscache',\n            'location': 'localhost:6379:1',\n            'options': {\n                'client_class': 'django_redis.client.defaultclient',\n                'max_entries': 5000,\n            },\n        },\n    }\n\n    rq_queues = {\n        'high': {\n            'use_redis_cache': 'redis-cache',\n        },\n        'low': {\n            'use_redis_cache': 'redis-cache',\n        },\n    }\n\nqueue statistics\n----------------\n\n``django_rq`` also provides a dashboard to monitor the status of your queues at\n``/django-rq/`` (or whatever url you set in your ``urls.py`` during installation.\n\nyou can also add a link to this dashboard link in ``/admin`` by adding\n``rq_show_admin_link = true`` in ``settings.py``. be careful though, this will\noverride the default admin template so it may interfere with other apps that\nmodifies the default admin template.\n\nthese statistics are also available in json format via\n``/django-rq/stats.json``, which is accessible to staff members.\nif you need to access this view via other\nhttp clients (for monitoring purposes), you can define ``rq_api_token`` and access it via\n``/django-rq/stats.json/<api_token>``.\n\n.. image::  demo-django-rq-json-dashboard.png\n\nnote: statistics of scheduled jobs display jobs from `rq built-in scheduler <https://python-rq.org/docs/scheduling/>`__,\nnot optional `rq scheduler <https://github.com/rq/rq-scheduler>`__.\n\nadditionally, these statistics are also accessible from  the command line.\n\n.. code-block:: bash\n\n    python manage.py rqstats\n    python manage.py rqstats --interval=1  # refreshes every second\n    python manage.py rqstats --json  # output as json\n    python manage.py rqstats --yaml  # output as yaml\n\n.. image:: demo-django-rq-cli-dashboard.gif\n\nconfiguring sentry\n-------------------\nsentry\nshould be configured within the django ``settings.py`` as described in the `sentry docs <https://docs.sentry.io/platforms/python/django/>`__.\n\nyou can override the default django sentry configuration when running the ``rqworker`` command\nby passing the ``sentry-dsn`` option:\n\n``./manage.py rqworker --sentry-dsn=https://*****@sentry.io/222222``\n\nthis will override any existing django configuration and reinitialise sentry,\nsetting the following sentry options:\n\n.. code-block:: python\n\n    {\n        'debug': options.get('sentry_debug'),\n        'ca_certs': options.get('sentry_ca_certs'),\n        'integrations': [redisintegration(), rqintegration(), djangointegration()]\n    }\n\n\nconfiguring logging\n-------------------\n\nrq uses python's ``logging``, this means you can easily configure ``rqworker``'s logging mechanism in django's\n``settings.py``. for example:\n\n.. code-block:: python\n\n    logging = {\n        \"version\": 1,\n        \"disable_existing_loggers\": false,\n        \"formatters\": {\n            \"rq_console\": {\n                \"format\": \"%(asctime)s %(message)s\",\n                \"datefmt\": \"%h:%m:%s\",\n            },\n        },\n        \"handlers\": {\n            \"rq_console\": {\n                \"level\": \"debug\",\n                \"class\": \"rq.logutils.colorizingstreamhandler\",\n                \"formatter\": \"rq_console\",\n                \"exclude\": [\"%(asctime)s\"],\n            },\n        },\n        'loggers': {\n            \"rq.worker\": {\n                \"handlers\": [\"rq_console\", \"sentry\"],\n                \"level\": \"debug\"\n            },\n        }\n    }\n\n\ncustom queue classes\n--------------------\n\nby default, every queue will use ``djangorq`` class. if you want to use a custom queue class, you can do so\nby adding a ``queue_class`` option on a per queue basis in ``rq_queues``:\n\n.. code-block:: python\n\n    rq_queues = {\n        'default': {\n            'host': 'localhost',\n            'port': 6379,\n            'db': 0,\n            'queue_class': 'module.path.customclass',\n        }\n    }\n\nor you can specify ``djangorq`` to use a custom class for all your queues in ``rq`` settings:\n\n.. code-block:: python\n\n    rq = {\n        'queue_class': 'module.path.customclass',\n    }\n\ncustom queue classes should inherit from ``django_rq.queues.djangorq``.\n\nif you are using more than one queue class (not recommended), be sure to only run workers\non queues with same queue class. for example if you have two queues defined in ``rq_queues`` and\none has custom class specified, you would have to run at least two separate workers for each\nqueue.\n\ncustom job and worker classes\n-----------------------------\n\nsimilarly to custom queue classes, global custom job and worker classes can be configured using\n``job_class`` and ``worker_class`` settings:\n\n.. code-block:: python\n\n    rq = {\n        'job_class': 'module.path.customjobclass',\n        'worker_class': 'module.path.customworkerclass',\n    }\n\ncustom job class should inherit from ``rq.job.job``. it will be used for all jobs\nif configured.\n\ncustom worker class should inherit from ``rq.worker.worker``. it will be used for running\nall workers unless overridden by ``rqworker`` management command ``worker-class`` option.\n\ntesting tip\n-----------\n\nfor an easier testing process, you can run a worker synchronously this way:\n\n.. code-block:: python\n\n    from django.test import testcase\n    from django_rq import get_worker\n\n    class mytest(testcase):\n        def test_something_that_creates_jobs(self):\n            ...                      # stuff that init jobs.\n            get_worker().work(burst=true)  # processes all jobs then stop.\n            ...                      # asserts that the job stuff is done.\n\nsynchronous mode\n----------------\n\nyou can set the option ``async`` to ``false`` to make synchronous operation the\ndefault for a given queue. this will cause jobs to execute immediately and on\nthe same thread as they are dispatched, which is useful for testing and\ndebugging. for example, you might add the following after you queue\nconfiguration in your settings file:\n\n.. code-block:: python\n\n    # ... logic to set debug and testing settings to true or false ...\n\n    # ... regular rq_queues setup code ...\n\n    if debug or testing:\n        for queueconfig in rq_queues.values():\n            queueconfig['async'] = false\n\nnote that setting the ``is_async`` parameter explicitly when calling ``get_queue``\nwill override this setting.\n\n=============\nrunning tests\n=============\n\nto run ``django_rq``'s test suite::\n\n    `which django-admin` test django_rq --settings=django_rq.tests.settings --pythonpath=.\n\n===================\ndeploying on ubuntu\n===================\n\ncreate an rqworker service that runs the high, default, and low queues.\n\nsudo vi /etc/systemd/system/rqworker.service\n\n.. code-block:: bash\n\n    [unit]\n    description=django-rq worker\n    after=network.target\n\n    [service]\n    workingdirectory=<<path_to_your_project_folder>>\n    execstart=/home/ubuntu/.virtualenv/<<your_virtualenv>>/bin/python \\\n        <<path_to_your_project_folder>>/manage.py \\\n        rqworker high default low\n\n    [install]\n    wantedby=multi-user.target\n\nenable and start the service\n\n.. code-block:: bash\n\n    sudo systemctl enable rqworker\n    sudo systemctl start rqworker\n\n===================\ndeploying on heroku\n===================\n\nadd `django-rq` to your `requirements.txt` file with:\n\n.. code-block:: bash\n\n    pip freeze > requirements.txt\n\nupdate your `procfile` to:\n\n.. code-block:: bash\n\n    web: gunicorn --pythonpath=\"$pwd/your_app_name\" config.wsgi:application\n\n    worker: python your_app_name/manage.py rqworker high default low\n\ncommit and re-deploy. then add your new worker with:\n\n.. code-block:: bash\n\n    heroku scale worker=1\n\n=========\nchangelog\n=========\n\nsee `changelog.md <https://github.com/rq/django-rq/blob/master/changelog.md>`__.\n\n\n.. |build status| image:: https://secure.travis-ci.org/rq/django-rq.svg?branch=master\n   :target: https://travis-ci.org/rq/django-rq\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "django-rq",
  "package_url": "https://pypi.org/project/django-rq/",
  "project_url": "https://pypi.org/project/django-rq/",
  "project_urls": {
    "Homepage": "https://github.com/rq/django-rq"
  },
  "release_url": "https://pypi.org/project/django-rq/2.10.1/",
  "requires_dist": [
    "django (>=3.2)",
    "rq (>=1.14)",
    "redis (>=3)",
    "raven (>=6.1.0) ; extra == 'sentry'",
    "mock (>=2.0.0) ; extra == 'testing'"
  ],
  "requires_python": "",
  "summary": "an app that provides django integration for rq (redis queue)",
  "version": "2.10.1",
  "releases": [],
  "developers": [
    "selwin.ong@gmail.com",
    "selwin_ong"
  ],
  "kwds": "django_rq djangorq rq_queues django django_redis",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_django_rq",
  "homepage": "https://github.com/rq/django-rq",
  "release_count": 52,
  "dependency_ids": [
    "pypi_django",
    "pypi_mock",
    "pypi_raven",
    "pypi_redis",
    "pypi_rq"
  ],
  "documentation_summary": "The HTML text describes \"django-rq,\" a simple application that integrates Django with RQ (Redis Queue), facilitating the management of background jobs in Django projects. It allows for easy configuration of queues within Django's settings and provides utility functions for enqueuing jobs, managing workers, and scheduling tasks. The app supports Django 3.2+ and RQ, and can be installed via pip. It also offers features like custom exception handlers, integration with django-redis and django-redis-cache, a dashboard for monitoring queue statistics, and the ability to configure Sentry and logging for error tracking and diagnostics. Custom queue, job, and worker classes can be defined for advanced usage. The documentation includes instructions for testing, deploying on Ubuntu and Heroku, and configuring the app for synchronous operation during debugging or testing. The project is open-source, licensed under MIT, and encourages contributions and support through Tidelift.",
  "embedding": [
    -0.00888351071625948,
    0.0022329569328576326,
    -0.00676444498822093,
    -0.023261407390236855,
    0.002878340194001794,
    0.004641927778720856,
    0.008641923777759075,
    -0.02646416425704956,
    -0.019382204860448837,
    0.0006553055718541145,
    -0.01667642779648304,
    -0.00690594594925642,
    -0.020817924290895462,
    0.027720419690012932,
    -0.006512503605335951,
    -0.011389115825295448,
    0.014012063853442669,
    -0.02698875404894352,
    0.010657452046871185,
    -0.02077650837600231,
    0.01288695726543665,
    -0.001939601032063365,
    -0.015144073404371738,
    -0.023937851190567017,
    -0.01347366999834776,
    0.027154413983225822,
    0.024462440982460976,
    0.0077653066255152225,
    0.012811030261218548,
    0.020417578518390656,
    0.024476246908307076,
    0.008165651001036167,
    -0.03216562420129776,
    -0.013715256936848164,
    -0.017076771706342697,
    -0.010685062035918236,
    0.031171666458249092,
    0.004752367734909058,
    0.05403272807598114,
    -0.0029094014316797256,
    0.037632402032613754,
    0.004507328849285841,
    0.0055461544543504715,
    -0.0023641043808311224,
    -0.03398788347840309,
    0.014564263634383678,
    -0.008220870979130268,
    -0.03796372190117836,
    0.026132844388484955,
    -0.01003622729331255,
    0.011630703695118427,
    0.027182023972272873,
    -0.02694733999669552,
    -0.004524585325270891,
    0.019892990589141846,
    -0.005128553602844477,
    -0.017490921542048454,
    0.019133714959025383,
    0.010560817085206509,
    -0.016800671815872192,
    0.010947356931865215,
    0.009290757589042187,
    -0.03106122650206089,
    -0.01894044503569603,
    -0.010588427074253559,
    0.025704890489578247,
    -0.016952527686953545,
    -0.0008278679451905191,
    0.009235537610948086,
    -0.005094041116535664,
    0.06195679306983948,
    0.030122486874461174,
    0.003758408362045884,
    0.008662630803883076,
    0.04936664178967476,
    -0.02410351112484932,
    -0.02756856381893158,
    0.0346505232155323,
    0.021687638014554977,
    -0.02291628159582615,
    -0.00316306808963418,
    -0.005104394629597664,
    -0.03683171048760414,
    0.04903532192111015,
    0.02183949388563633,
    0.04274024814367294,
    -0.0228886716067791,
    0.02480756677687168,
    0.00028580642538145185,
    0.002270920667797327,
    0.0019275216618552804,
    0.001949954777956009,
    0.011996535584330559,
    0.010333034209907055,
    -0.018125951290130615,
    0.007875746116042137,
    -0.004127691965550184,
    0.026740264147520065,
    -0.010443474166095257,
    -0.039951641112565994,
    -0.004203619435429573,
    0.017007747665047646,
    -0.023716971278190613,
    -0.01790507137775421,
    -0.04152540862560272,
    -0.048041362315416336,
    0.0007454694132320583,
    -0.014522848650813103,
    0.03622429072856903,
    0.002641929779201746,
    -0.03564448282122612,
    0.029763557016849518,
    0.017449507489800453,
    -0.017918875440955162,
    0.01613803207874298,
    0.002355476375669241,
    0.027402903884649277,
    0.00157894566655159,
    0.010471084155142307,
    -0.028880037367343903,
    0.004110435489565134,
    -0.0062674651853740215,
    0.028852427378296852,
    -0.02235027775168419,
    0.02019669860601425,
    -0.0035064672119915485,
    -0.005915437825024128,
    -0.0020224309992045164,
    0.027927493676543236,
    -0.02298530749976635,
    -0.012017243541777134,
    -0.00548058096319437,
    -0.02348228730261326,
    0.007772209122776985,
    -0.008945632725954056,
    -0.0035306259524077177,
    -0.011858485639095306,
    -0.0009628980187699199,
    -0.021439148113131523,
    -0.006788603495806456,
    0.0007502149092033505,
    0.023813607171177864,
    -0.011113016866147518,
    -0.02121826820075512,
    0.015268318355083466,
    0.047433942556381226,
    -0.015986178070306778,
    -0.0009413277148269117,
    -0.017131991684436798,
    0.0027989617083221674,
    0.01548919826745987,
    -0.01352198701351881,
    -0.02646416425704956,
    -0.007820526137948036,
    0.012928372249007225,
    0.003858494572341442,
    -0.009925787337124348,
    0.00147368258330971,
    -0.007647964172065258,
    0.022640183568000793,
    -0.0025021543260663748,
    0.01615183800458908,
    -0.010981868952512741,
    0.00402070302516222,
    0.028410667553544044,
    0.023275211453437805,
    0.018691955134272575,
    -0.0029939571395516396,
    -0.019727330654859543,
    -0.012383075430989265,
    0.014032771810889244,
    0.003132007084786892,
    -0.036500390619039536,
    0.031171666458249092,
    0.010132862254977226,
    0.003855043323710561,
    -0.012093170545995235,
    0.004721306264400482,
    -0.011968925595283508,
    0.007164789363741875,
    0.014522848650813103,
    0.005791192874312401,
    -0.006505601108074188,
    0.04878683388233185,
    -0.027402903884649277,
    -0.03097839653491974,
    -0.005663496907800436,
    0.008586703799664974,
    -0.015116463415324688,
    0.010215692222118378,
    -0.010022422298789024,
    0.020486604422330856,
    -0.005380494520068169,
    -0.0460258349776268,
    -0.5650106072425842,
    0.01772560551762581,
    -0.01205865852534771,
    -0.024848980829119682,
    0.001884381053969264,
    0.012742005288600922,
    0.021591003984212875,
    0.012100073508918285,
    -0.01087142899632454,
    0.01410179678350687,
    -0.034402035176754,
    0.014785143546760082,
    0.008538385853171349,
    -0.002424501348286867,
    -0.024559076875448227,
    -0.020804118365049362,
    0.02121826820075512,
    -0.027154413983225822,
    -0.02135631814599037,
    0.01617944799363613,
    -0.02244691364467144,
    0.040476229041814804,
    -0.026229480281472206,
    0.020873144268989563,
    -0.00040228600846603513,
    0.026146650314331055,
    -0.013163057155907154,
    -0.009359782561659813,
    0.005283859558403492,
    -0.009283855557441711,
    -0.04953230172395706,
    0.02751334384083748,
    0.027499539777636528,
    0.007030190899968147,
    0.0632268488407135,
    -0.016538377851247787,
    -0.043955087661743164,
    0.05646240711212158,
    0.005263152066618204,
    0.03989642113447189,
    -0.012755810283124447,
    -0.01898186095058918,
    0.00601552426815033,
    0.0034667779691517353,
    0.017201017588377,
    0.003565138438716531,
    0.028935257345438004,
    0.02135631814599037,
    -0.0021622064523398876,
    -0.021604808047413826,
    -0.004186362959444523,
    -0.01721482165157795,
    -0.0010742007289081812,
    0.0039930930361151695,
    0.019368400797247887,
    -0.018830005079507828,
    -0.004800685215741396,
    0.006143220234662294,
    0.011423628777265549,
    0.0023675556294620037,
    -0.0020983584690839052,
    0.025525424629449844,
    0.0006941321189515293,
    -0.01670403778553009,
    -0.03277304396033287,
    0.015627248212695122,
    0.003679029643535614,
    -0.03694215044379234,
    0.008324408903717995,
    -0.020817924290895462,
    0.01838824525475502,
    -0.015033633448183537,
    0.011955120600759983,
    -0.013604816980659962,
    0.027347683906555176,
    0.062398552894592285,
    0.028355447575449944,
    0.011458140797913074,
    0.0015073323156684637,
    0.021591003984212875,
    0.004603963810950518,
    -0.010264009237289429,
    0.007910259068012238,
    -0.03211040422320366,
    0.035837750881910324,
    0.0002579807478468865,
    -0.013121642172336578,
    -0.01783604547381401,
    -0.016938721761107445,
    -0.008641923777759075,
    -0.013273497112095356,
    0.030122486874461174,
    -0.019823964685201645,
    -0.011782558634877205,
    -0.006550467573106289,
    0.038847241550683975,
    -0.024393416941165924,
    0.00044305386836640537,
    -0.016855891793966293,
    -0.015834322199225426,
    0.005421909503638744,
    -0.0034961134660989046,
    -0.023289017379283905,
    -0.0013503005029633641,
    0.0041380454786121845,
    0.012500418350100517,
    -0.0035961996763944626,
    -0.005035370122641325,
    0.023813607171177864,
    -0.018843811005353928,
    -0.008545288816094398,
    -0.023703167214989662,
    -0.0229438915848732,
    -0.0017704898491501808,
    0.012355465441942215,
    -0.035395991057157516,
    0.022101787850260735,
    0.010215692222118378,
    0.02425536699593067,
    -0.007827429100871086,
    -0.004324412904679775,
    -0.019920600578188896,
    0.023371847346425056,
    -0.014950803481042385,
    0.0011043990962207317,
    0.02645036019384861,
    0.018581515178084373,
    0.019188934937119484,
    -0.02466951683163643,
    0.005508190952241421,
    0.0143571887165308,
    -0.015503003261983395,
    0.023661751300096512,
    -0.015944762155413628,
    0.04083515703678131,
    0.004389986861497164,
    0.03694215044379234,
    0.01119584683328867,
    -0.014950803481042385,
    -0.020417578518390656,
    -0.0007351156673394144,
    0.011899900622665882,
    0.0036169071681797504,
    -0.008897315710783005,
    -0.008814485743641853,
    -0.014453823678195477,
    -0.017021551728248596,
    -0.0006501286989077926,
    -0.012866250239312649,
    -0.013446060009300709,
    -0.0257739145308733,
    -0.004966345150023699,
    -0.04141496866941452,
    0.014012063853442669,
    -0.009359782561659813,
    -0.012445198372006416,
    -0.02921135723590851,
    -0.016510767862200737,
    0.0016427937662228942,
    -0.018222585320472717,
    0.018208781257271767,
    0.02923896722495556,
    -0.010788599029183388,
    -0.001571180415339768,
    -0.04089037701487541,
    -0.007855039089918137,
    -0.023730777204036713,
    0.027941297739744186,
    0.0071509843692183495,
    -0.027430513873696327,
    -0.013314912095665932,
    -0.02062465436756611,
    0.010885233990848064,
    0.008966340683400631,
    0.026160454377532005,
    0.019271764904260635,
    -0.005238993559032679,
    0.016483157873153687,
    0.003834335831925273,
    -0.01611042208969593,
    0.006626395042985678,
    0.02700255997478962,
    -0.05121650919318199,
    -0.03376700356602669,
    0.012790322303771973,
    0.006405515130609274,
    -0.015102658420801163,
    0.014854168519377708,
    -0.02520791068673134,
    0.0031872268300503492,
    -0.029156137257814407,
    0.010229497216641903,
    -0.03351851552724838,
    0.009477125480771065,
    -0.010857624001801014,
    0.012286440469324589,
    0.017007747665047646,
    0.006505601108074188,
    0.01493699848651886,
    0.02125968411564827,
    0.002707503503188491,
    0.005905084311962128,
    0.017352871596813202,
    -0.001218290301039815,
    -0.04257458820939064,
    -0.01467470359057188,
    0.0345124751329422,
    -0.021149244159460068,
    0.025000836700201035,
    0.0086557287722826,
    0.02186710387468338,
    -0.0030836896039545536,
    -0.01899566501379013,
    -0.020955974236130714,
    -0.0072959368117153645,
    0.02879720740020275,
    -0.03153059631586075,
    0.018747175112366676,
    -0.04091798886656761,
    -0.004855905193835497,
    0.008952535688877106,
    0.009553052484989166,
    0.004949088674038649,
    0.004645378794521093,
    -0.016786867752671242,
    -0.0029905058909207582,
    0.02127348817884922,
    0.020486604422330856,
    0.01602759212255478,
    -0.013708354905247688,
    -0.03161342442035675,
    0.02182568795979023,
    0.007834331132471561,
    -0.016993941739201546,
    0.022239837795495987,
    0.010505597107112408,
    0.00350991846062243,
    -0.016800671815872192,
    0.005180322099477053,
    -0.04072471708059311,
    0.016400327906012535,
    0.001265744911506772,
    0.03854352980852127,
    -0.011168236844241619,
    -0.002933560172095895,
    0.015309733338654041,
    0.007157886866480112,
    0.03048141673207283,
    -0.026201870292425156,
    0.03404310345649719,
    -0.0009516814607195556,
    0.0403381809592247,
    -0.012100073508918285,
    0.0011216553393751383,
    0.00802069902420044,
    -0.020003430545330048,
    0.03920616954565048,
    0.009546150453388691,
    0.04138735681772232,
    -0.00887660775333643,
    0.00862811878323555,
    0.0229576975107193,
    0.018553905189037323,
    -0.008669533766806126,
    0.02418634109199047,
    -0.01124416384845972,
    0.003468503477051854,
    -0.06670571118593216,
    -0.020500408485531807,
    -0.04828985407948494,
    -0.00661604106426239,
    -0.030812736600637436,
    -0.0030146646313369274,
    -0.04116647690534592,
    0.004407242871820927,
    0.00632613617926836,
    0.004852453712373972,
    0.0346229150891304,
    -0.004400340374559164,
    0.002597063547000289,
    -0.006881787441670895,
    -0.01381189189851284,
    0.0403657890856266,
    -0.008918022736907005,
    0.008496970869600773,
    0.009359782561659813,
    -0.0008144943858496845,
    0.02990160696208477,
    -0.005159614607691765,
    0.02420014701783657,
    0.031254496425390244,
    3.408106931601651e-05,
    -0.011016381904482841,
    0.02065226435661316,
    -0.01617944799363613,
    -0.008407238870859146,
    0.03984120115637779,
    0.0014978413237258792,
    -0.016469351947307587,
    -0.017145797610282898,
    0.014771338552236557,
    0.029542677104473114,
    -0.020873144268989563,
    0.0010931825963780284,
    0.02868676744401455,
    -0.009290757589042187,
    -0.009504735469818115,
    -0.006867982447147369,
    0.0033960274886339903,
    -5.894083369639702e-05,
    0.004990503657609224,
    0.0004866258823312819,
    -0.03315958380699158,
    -0.011458140797913074,
    0.017615167424082756,
    0.012507320381700993,
    0.005425360985100269,
    -0.00975322537124157,
    0.025718694552779198,
    -0.010816209018230438,
    0.0011018107179552317,
    -0.04262980818748474,
    0.00778601411730051,
    -0.00917341560125351,
    0.03396027535200119,
    0.0037756646052002907,
    0.011810168623924255,
    0.02468332089483738,
    -0.05331486836075783,
    -0.031917136162519455,
    -0.01954786479473114,
    -0.00048101760330609977,
    0.005142358597368002,
    0.0022139751818031073,
    0.0038274333346635103,
    0.014315773732960224,
    0.027485733851790428,
    0.01208626851439476,
    0.014060381799936295,
    0.008138041011989117,
    0.002660911763086915,
    -0.0004887828836217523,
    0.012548735365271568,
    -0.008828290738165379,
    0.007171691861003637,
    0.022709207609295845,
    -0.0035961996763944626,
    0.013100935146212578,
    0.06538043171167374,
    0.010222594253718853,
    0.033601343631744385,
    0.008220870979130268,
    -0.003944775555282831,
    -0.03324241563677788,
    0.023910241201519966,
    0.0016005159122869372,
    0.002471093088388443,
    0.002797235967591405,
    0.006871433462947607,
    0.022695403546094894,
    0.01090594194829464,
    0.030177706852555275,
    -0.002641929779201746,
    0.015102658420801163,
    0.00029982710839249194,
    0.023316627368330956,
    0.010395157150924206,
    -0.01772560551762581,
    0.02248832769691944,
    -0.023703167214989662,
    -0.015213098376989365,
    0.007023288402706385,
    -0.022239837795495987,
    -0.014481433667242527,
    0.03685932233929634,
    0.020928364247083664,
    -0.048621173948049545,
    -0.012072463519871235,
    0.03683171048760414,
    0.0048593562096357346,
    0.009152707643806934,
    -0.01260395534336567,
    -0.016400327906012535,
    -0.03848830983042717,
    -0.003744603367522359,
    -0.003487485460937023,
    -0.0016678152605891228,
    0.009698005393147469,
    0.005263152066618204,
    -0.00023382200743071735,
    0.00576358288526535,
    0.0004779977607540786,
    -0.022115593776106834,
    0.018691955134272575,
    0.0031889525707811117,
    -0.036555610597133636,
    0.0031061226036399603,
    -0.012410685420036316,
    0.033546123653650284,
    0.0032545262947678566,
    0.004383084364235401,
    0.021135438233613968,
    0.004648830275982618,
    0.002912852680310607,
    0.010312327183783054,
    -0.032386504113674164,
    -0.020293334499001503,
    -0.013059520162642002,
    -0.022723011672496796,
    -0.015213098376989365,
    0.020293334499001503,
    0.005663496907800436,
    -0.009684200398623943,
    0.009615175426006317,
    0.011002576909959316,
    0.020873144268989563,
    0.03384983539581299,
    -0.017104381695389748,
    0.014881778508424759,
    0.007820526137948036,
    0.0019982722587883472,
    -0.009987910278141499,
    0.00980154238641262,
    -0.0011924059363082051,
    -0.02472473680973053,
    -0.03211040422320366,
    -0.00831060390919447,
    0.024904200807213783,
    0.023454677313566208,
    -0.017007747665047646,
    0.0063744536601006985,
    0.015240708366036415,
    -0.021632418036460876,
    0.015130268409848213,
    0.03164103627204895,
    -0.011389115825295448,
    -0.008835192769765854,
    0.030867956578731537,
    0.018774785101413727,
    0.018857615068554878,
    -0.011892998591065407,
    0.04643998295068741,
    0.016372717916965485,
    -0.00416910694912076,
    -0.000372303300537169,
    -0.02705777995288372,
    0.010125959292054176,
    0.022833451628684998,
    0.0036272609140723944,
    -0.001889557926915586,
    0.0020569434855133295,
    -0.022184617817401886,
    -0.050774749368429184,
    0.009311465546488762,
    0.043927475810050964,
    0.02021050453186035,
    -0.006850725971162319,
    -0.018153561279177666,
    0.00634339265525341,
    -0.010547012090682983,
    -0.042188048362731934,
    0.014495238661766052,
    0.00746849924325943,
    -0.003066433360800147,
    -0.03500945493578911,
    0.000632872455753386,
    -0.00039430501055903733,
    -0.006505601108074188,
    -0.0034823084715753794,
    -0.03097839653491974,
    -0.007171691861003637,
    -0.00024913690867833793,
    -0.006250209175050259,
    -0.0023882631212472916,
    -0.009849860332906246,
    -0.013197570107877254,
    -0.02131490409374237,
    -0.026795484125614166,
    0.008386530913412571,
    -0.016331302002072334,
    0.013701451942324638,
    -0.00804140605032444,
    0.0017756667220965028,
    0.019133714959025383,
    0.030674686655402184,
    0.017352871596813202,
    0.02346848137676716,
    0.0006686791894026101,
    0.007875746116042137,
    -0.017394287511706352,
    -0.01778082549571991,
    0.012500418350100517,
    -0.00208973023109138,
    -0.013349425047636032,
    0.010988771915435791,
    0.032496944069862366,
    -0.009594467468559742,
    -0.012831737287342548,
    -0.023081941530108452,
    0.017049161717295647,
    -0.007392571773380041,
    0.007668671663850546,
    -0.02529074065387249,
    -0.03293870389461517,
    -0.004707501269876957,
    0.01896805502474308,
    -0.01087142899632454,
    0.015240708366036415,
    -0.026850704103708267,
    0.005967206787317991,
    0.026119040325284004,
    -0.019823964685201645,
    0.028852427378296852,
    0.013273497112095356,
    -0.016966331750154495,
    -0.017242431640625,
    0.027389099821448326,
    0.014315773732960224,
    0.00034188918652944267,
    0.0035254491958767176,
    -0.006999129429459572,
    -0.021038804203271866,
    -0.011810168623924255,
    0.0058878278359770775,
    0.022074177861213684,
    -0.00576358288526535,
    0.009580662474036217,
    0.006163927726447582,
    0.008635020814836025,
    0.020555628463625908,
    0.0033494355157017708,
    -0.02926657721400261,
    0.035948190838098526,
    -0.01888522505760193,
    -0.02011387050151825,
    -0.008379628881812096,
    -0.011968925595283508,
    -0.027996517717838287,
    0.022226033732295036,
    -0.008186358958482742,
    0.013114740140736103,
    -0.009035365656018257,
    -0.004855905193835497,
    -0.008234675973653793,
    0.0031302813440561295,
    -0.009898177348077297,
    0.023772191256284714,
    0.022198423743247986,
    0.017642777413129807,
    0.03807416185736656,
    0.01205175556242466,
    -0.007696281652897596,
    -0.0038653970696032047,
    -0.007592744193971157,
    -0.0019171679159626365,
    0.03788089007139206,
    0.013100935146212578,
    -0.007972381077706814,
    -0.018567711114883423,
    0.019658304750919342,
    0.007344254292547703,
    -0.032469335943460464,
    -0.020003430545330048,
    0.031834304332733154,
    0.009615175426006317,
    0.010892136953771114,
    -0.031337324529886246,
    -0.014191528782248497,
    0.01902327500283718,
    -0.013390840031206608,
    -0.03180669620633125,
    -0.007226911839097738,
    0.005715265404433012,
    0.008227773942053318,
    -0.020955974236130714,
    0.0201828945428133,
    0.01470231357961893,
    -0.00013060813944321126,
    0.030895566567778587,
    -0.005670399405062199,
    -0.02698875404894352,
    -0.03351851552724838,
    -0.044037915766239166,
    -0.0019430522806942463,
    -0.0020621202420443296,
    0.018001705408096313,
    -0.004144947975873947,
    0.0031596168410032988,
    0.02756856381893158,
    -0.006512503605335951,
    -0.0027489184867590666,
    -0.016538377851247787,
    -0.014757533557713032,
    0.03915094956755638,
    -0.021425344049930573,
    0.01528212334960699,
    -0.014729923568665981,
    -0.03329763561487198,
    -0.008572898805141449,
    -0.01728384755551815,
    -0.011637605726718903,
    -0.003924068063497543,
    -0.025152690708637238,
    0.009387392550706863,
    0.0029283834155648947,
    -0.01957547478377819,
    -0.009739420376718044,
    0.020569434389472008,
    0.009856762364506721,
    -0.02123207412660122,
    -0.0016747177578508854,
    -0.008814485743641853,
    0.022543547675013542,
    -0.02751334384083748,
    -0.03280065581202507,
    -0.015848128125071526,
    -0.022667793557047844,
    0.004269192926585674,
    0.011982730589807034,
    0.024862786754965782,
    -0.01178946066647768,
    0.04296112805604935,
    -0.005097492132335901,
    0.025194106623530388,
    -0.002521136309951544,
    0.010650549083948135,
    -0.010098349303007126,
    -0.0027023267466574907,
    -0.007647964172065258,
    -0.007364961784332991,
    0.030039656907320023,
    0.006426222622394562,
    -0.02186710387468338,
    -0.030094876885414124,
    -0.01263156533241272,
    0.007993089035153389,
    -0.0012148390524089336,
    -0.01905088499188423,
    0.02293008752167225,
    0.020983584225177765,
    0.02241930365562439,
    0.010146667249500751,
    -0.007834331132471561,
    0.04439684748649597,
    0.011561678722500801,
    -0.004044861998409033,
    0.0230543315410614,
    0.012231220491230488,
    0.0005819665966555476,
    0.012189805507659912,
    0.023730777204036713,
    0.0032890387810766697,
    -0.033049143850803375,
    -0.036583222448825836,
    -0.0258291345089674,
    0.00601552426815033,
    -0.032993923872709274,
    0.0201276745647192,
    -0.028355447575449944,
    0.0009620352066121995,
    -0.03790850192308426,
    0.04759960249066353,
    0.008434848859906197,
    -0.009090585634112358,
    -0.0005163928726688027,
    0.018167365342378616,
    -0.007751501630991697,
    0.0016781690064817667,
    0.013860209845006466,
    -0.015585833229124546,
    -0.012507320381700993,
    0.020348554477095604,
    -0.021024998277425766,
    -0.03487140312790871,
    -0.007889551110565662,
    0.03572731092572212,
    0.025138886645436287,
    -0.03627951070666313,
    -0.003223465057089925,
    -0.009062975645065308,
    -0.02707158401608467,
    0.015599638223648071,
    -0.010112154297530651,
    0.008096626028418541,
    0.006074195262044668,
    0.004666086286306381,
    0.004362376872450113,
    0.010464182123541832,
    0.013363230042159557,
    0.030094876885414124,
    -0.011685923673212528,
    -0.013929233886301517,
    -0.0346781350672245,
    -0.001939601032063365,
    0.016220862045884132,
    0.0019965465180575848,
    -0.03735630214214325,
    -0.0024538368452340364,
    0.015930958092212677,
    0.01838824525475502,
    0.019768744707107544,
    0.028935257345438004,
    -0.01605520211160183,
    -0.01231405045837164,
    -0.00474201375618577,
    -0.018194975331425667,
    -0.007289034314453602,
    0.021521978080272675,
    0.017518531531095505,
    -0.02645036019384861,
    -0.015433978289365768,
    -0.0010940454667434096,
    0.005553056951612234,
    0.018691955134272575,
    0.0010750635992735624,
    0.006543565075844526,
    -0.023896437138319016,
    0.013452962040901184,
    -0.03843308985233307,
    -0.007461596745997667,
    0.0003347710007801652,
    0.005142358597368002,
    0.02414492703974247,
    -0.008241578936576843,
    -0.015447783283889294,
    0.006885238457471132,
    -0.002705777995288372,
    -0.03752196207642555,
    0.0015271769370883703,
    0.02522171474993229,
    -0.020362358540296555,
    0.00416910694912076,
    0.012010340578854084,
    -0.038295041769742966,
    0.021563393995165825,
    -0.0257739145308733,
    0.03738391026854515,
    -0.00806901603937149,
    0.0016609127633273602,
    0.007378766778856516,
    -0.01671784184873104,
    -0.0021708346903324127,
    -0.018112145364284515,
    0.016510767862200737,
    0.003173421835526824,
    0.008186358958482742,
    0.004220875445753336,
    0.0022536644246429205,
    -0.005525446962565184,
    -0.005052626132965088,
    0.009159610606729984,
    -0.03037097677588463,
    0.0007320958538912237,
    -0.010236399248242378,
    0.0016773062525317073,
    -0.044507287442684174,
    -0.011913705617189407,
    -0.001884381053969264,
    -0.0037204446271061897,
    0.012258830480277538,
    0.2069644033908844,
    0.020969778299331665,
    0.017131991684436798,
    0.03235889598727226,
    -0.007254521828144789,
    0.011851583607494831,
    -0.012017243541777134,
    -0.007917161099612713,
    -0.014564263634383678,
    0.056655675172805786,
    0.004697147756814957,
    -0.010160472244024277,
    -0.016289887949824333,
    -0.002495251828804612,
    -0.005974109284579754,
    0.015875738114118576,
    -0.01662120781838894,
    -0.06571175158023834,
    -0.00917341560125351,
    0.007289034314453602,
    0.017380481585860252,
    -0.014177723787724972,
    -0.030619466677308083,
    -0.015406368300318718,
    0.016372717916965485,
    0.010519402101635933,
    0.0086557287722826,
    9.728203440317884e-05,
    0.029183747246861458,
    0.000673856062348932,
    -0.028010323643684387,
    0.007924064062535763,
    0.005770485382527113,
    -0.0031613425817340612,
    -0.042243268340826035,
    -0.009421905502676964,
    0.008807583712041378,
    -0.03511989489197731,
    0.01176875364035368,
    0.030591856688261032,
    0.02074889838695526,
    -0.023164771497249603,
    -0.004272644408047199,
    -0.01784985139966011,
    0.0023088844027370214,
    -0.0034771317150443792,
    -0.009104390628635883,
    -0.01174114365130663,
    0.020293334499001503,
    0.018043121322989464,
    -0.015364953316748142,
    -0.008786875754594803,
    0.023275211453437805,
    8.886961586540565e-05,
    0.02348228730261326,
    -0.008531483821570873,
    -0.017408091574907303,
    -0.015047438442707062,
    0.001789471716620028,
    0.01265227235853672,
    -0.024572880938649178,
    0.0458601750433445,
    -0.013439157046377659,
    0.024821370840072632,
    -0.04812419414520264,
    0.018029315397143364,
    -0.034236375242471695,
    0.015475393272936344,
    0.017711801454424858,
    0.010402059182524681,
    -0.026919730007648468,
    -0.03216562420129776,
    -0.04489382728934288,
    -0.014053478837013245,
    0.003023292636498809,
    -0.019837770611047745,
    0.009145805612206459,
    0.011168236844241619,
    0.04089037701487541,
    0.03674888238310814,
    -0.003318374278023839,
    0.011962023563683033,
    -0.0017808435950428247,
    0.005960304290056229,
    0.008345115929841995,
    -0.009546150453388691,
    0.04199477657675743,
    -0.007081959396600723,
    -0.011078503914177418,
    -0.02807934768497944,
    -0.013860209845006466,
    -0.02473854087293148,
    0.002911127172410488,
    -0.01946503482758999,
    0.01064364705234766,
    0.012203610502183437,
    -0.0003408106858842075,
    0.003999995533376932,
    0.0086557287722826,
    0.00035418427432887256,
    -0.018788591027259827,
    0.04500426724553108,
    0.017490921542048454,
    -0.00030586679349653423,
    -0.03514750301837921,
    0.017104381695389748,
    0.0115064587444067,
    0.025677280500531197,
    0.010339937172830105,
    -0.012817932292819023,
    -0.008690240792930126,
    -0.023413261398673058,
    0.009559955447912216,
    -0.015433978289365768,
    0.012459003366529942,
    -0.013342522084712982,
    -0.02529074065387249,
    -0.013301107101142406,
    -0.01958928070962429,
    0.002826571697369218,
    -0.0003569883992895484,
    -0.0033459842670708895,
    -0.001789471716620028,
    -0.021508174017071724,
    -0.024324391037225723,
    -0.038212209939956665,
    0.014867973513901234,
    -0.0007704909658059478,
    0.00830370094627142,
    -0.028493497520685196,
    0.024241561070084572,
    -0.03037097677588463,
    0.01236927043646574,
    0.01776702143251896,
    0.01522690337151289,
    0.011575483717024326,
    -0.02937701717019081,
    -0.024559076875448227,
    0.0071509843692183495,
    0.008579800836741924,
    -0.04674369469285011,
    0.004324412904679775,
    0.02818978764116764,
    0.014012063853442669,
    0.014205333776772022,
    -0.04652281478047371,
    0.008096626028418541,
    -0.007737696636468172,
    0.0027886079624295235,
    -0.0016091440338641405,
    -0.009559955447912216,
    0.0006445204489864409,
    0.007123374380171299,
    -0.011582385748624802,
    0.024338196963071823,
    -0.023716971278190613,
    -0.03561687096953392,
    -0.022087983787059784,
    0.03688693046569824,
    0.019768744707107544,
    -0.017076771706342697,
    -0.009601370431482792,
    0.000572475662920624,
    0.0013364955084398389,
    -0.027126803994178772,
    -0.025180300697684288,
    -0.1731697916984558,
    0.012811030261218548,
    0.03724586218595505,
    -0.02079031430184841,
    0.00374805461615324,
    -0.008455555886030197,
    0.013377035036683083,
    -0.0004279546847101301,
    -0.02923896722495556,
    0.015834322199225426,
    -0.0061777327209711075,
    -0.010629842057824135,
    -0.007199301850050688,
    -0.015047438442707062,
    0.016262277960777283,
    -0.0059810117818415165,
    0.013314912095665932,
    -0.011782558634877205,
    0.007668671663850546,
    0.02074889838695526,
    0.03614146262407303,
    -0.02362033724784851,
    0.005618630908429623,
    0.002897322177886963,
    0.006571175064891577,
    -0.02410351112484932,
    -0.014923193491995335,
    0.00864882580935955,
    -0.006947360932826996,
    -0.02246071770787239,
    -0.0288248173892498,
    0.0016548731364309788,
    0.02646416425704956,
    0.021632418036460876,
    0.02411731705069542,
    0.012783420272171497,
    0.0344572551548481,
    0.0114719457924366,
    0.0002709229302126914,
    0.01844346523284912,
    0.03384983539581299,
    0.03547882288694382,
    0.04180150851607323,
    -0.007751501630991697,
    -0.010830014012753963,
    0.025622060522437096,
    0.01352888997644186,
    -0.017946485430002213,
    -0.007482304237782955,
    -0.011754948645830154,
    0.03575492277741432,
    -0.004006898030638695,
    -0.015958568081259727,
    -0.01210697554051876,
    0.003813628340139985,
    0.019934404641389847,
    0.0037411521188914776,
    -0.01234166044741869,
    0.009470222517848015,
    -0.0017877460923045874,
    0.0012269184226170182,
    -0.022143203765153885,
    0.0021138889715075493,
    0.0005012936890125275,
    -0.026850704103708267,
    -0.018125951290130615,
    -0.04309917613863945,
    0.02309574745595455,
    0.007213106844574213,
    0.0012614309089258313,
    0.007102666888386011,
    0.021549588069319725,
    -0.0018119048327207565,
    0.020969778299331665,
    -0.015047438442707062,
    0.011009478941559792,
    -0.012610857374966145,
    0.029515067115426064,
    0.019423620775341988,
    -0.013308010064065456,
    0.021494368091225624,
    0.041056036949157715,
    0.00011389116116333753,
    -0.0001259705313714221,
    0.0005979285924695432,
    -0.012831737287342548,
    -0.005287311039865017,
    -0.008987047709524632,
    -0.02004484459757805,
    -0.009532345458865166,
    0.023316627368330956,
    -0.0230129174888134,
    0.01604139804840088,
    -0.020983584225177765,
    -0.004448657855391502,
    0.020969778299331665,
    0.005994816776365042,
    0.007723891641944647,
    -0.008207065984606743,
    -0.041194088757038116,
    0.013722159899771214,
    -0.013632426969707012,
    -0.011023283936083317,
    -0.005387397017329931,
    0.02005865052342415,
    0.026795484125614166,
    -0.026671240106225014,
    0.00804140605032444,
    0.04127691686153412,
    -0.002821394708007574,
    6.702969403704628e-05,
    0.016897307708859444,
    0.00920102559030056,
    0.025028446689248085,
    -0.02763758972287178,
    0.006584980059415102,
    -0.0017144071171060205,
    0.007848136126995087,
    0.009711810387670994,
    0.008448653854429722,
    0.04155301675200462,
    0.01205865852534771,
    -0.011603093706071377,
    0.01789126545190811,
    0.033684175461530685,
    -0.03288348391652107,
    -0.08155987411737442,
    -0.022005153819918633,
    0.028065543621778488,
    0.01493699848651886,
    -0.04086276888847351,
    0.016911111772060394,
    -0.0007886100211180747,
    0.024600490927696228,
    -0.011540970765054226,
    0.0015953390393406153,
    -0.007323546800762415,
    0.008607410825788975,
    0.0009490930242463946,
    0.02360653132200241,
    -0.01900947093963623,
    -0.012231220491230488,
    0.010864526964724064,
    -0.018540101125836372,
    0.026008600369095802,
    0.015723882243037224,
    -0.01954786479473114,
    -0.012852445244789124,
    0.003955129534006119,
    0.031226886436343193,
    -0.0288248173892498,
    -0.0018826554296538234,
    -0.025470204651355743,
    -0.008062114007771015,
    -0.004213972948491573,
    0.0019430522806942463,
    0.009898177348077297,
    -0.01464709360152483,
    -0.0005375317996367812,
    -0.028935257345438004,
    0.006022426765412092,
    0.00807591900229454,
    -0.04133213683962822,
    -0.017960291355848312,
    0.032579775899648666,
    -0.026188064366579056,
    0.009249342605471611,
    0.004576353821903467,
    0.013107837177813053,
    -0.004728208761662245,
    -0.014398603700101376,
    0.013666939921677113,
    0.006395161151885986,
    0.016372717916965485,
    0.0287695974111557,
    -0.004207070451229811,
    -0.018636735156178474,
    0.016538377851247787,
    -0.001376184867694974,
    -0.002886968431994319,
    0.012880055233836174,
    -0.03807416185736656,
    0.011865388602018356,
    -0.0008904217975214124,
    -0.013977551832795143,
    0.0021035352256149054,
    0.01519929338246584,
    -0.005960304290056229,
    -0.016869697719812393,
    0.007606549188494682,
    0.010243302211165428,
    -0.026823094114661217,
    0.011078503914177418,
    0.0010215692454949021,
    0.012817932292819023,
    -0.00922863557934761,
    -0.01352198701351881,
    -0.011037088930606842,
    -0.030647076666355133,
    -0.0015521985478699207,
    -0.027706613764166832,
    -0.016855891793966293,
    -0.0019309729104861617,
    -0.004952540155500174,
    -0.00257290480658412,
    -0.0051492610946297646,
    -0.025760110467672348,
    -0.0009059524163603783,
    -0.007696281652897596,
    -0.016289887949824333,
    0.009083682671189308,
    0.018222585320472717,
    0.010395157150924206,
    -0.0016626383876428008,
    0.0051147486083209515,
    -0.04240892827510834,
    0.0007295074174180627,
    -0.002881791442632675,
    0.03506467491388321,
    0.0008559093694202602,
    -0.00042083646985702217,
    0.018526295199990273,
    -0.011050893925130367,
    0.010885233990848064,
    -0.013860209845006466,
    0.012721297331154346,
    -0.02921135723590851,
    -0.03164103627204895,
    -0.07957196235656738,
    0.000261863402556628,
    -0.008752363733947277,
    -0.013611719943583012,
    0.005152712110430002,
    -0.04831746220588684,
    0.010050032287836075,
    -0.02697494998574257,
    0.007647964172065258,
    0.012120780535042286,
    -0.018595321103930473,
    0.0002907675807364285,
    0.0060327802784740925,
    -0.0007670397171750665,
    -0.022295057773590088,
    -0.0009654864552430809,
    0.039344221353530884,
    -0.002365830121561885,
    0.02923896722495556,
    0.005373592022806406,
    -0.0129145672544837,
    -0.02353750728070736,
    0.023896437138319016,
    0.020886948332190514,
    -0.003823982086032629,
    0.011347701773047447,
    -0.00032010319409891963,
    0.026022404432296753,
    -0.007023288402706385,
    -0.004966345150023699,
    0.024572880938649178,
    -0.009180317632853985,
    0.003263154299929738,
    -0.00802069902420044,
    0.002852455945685506,
    -0.0035720409359782934,
    0.014785143546760082,
    0.03351851552724838,
    0.009670395404100418,
    0.006695420015603304,
    -0.020983584225177765,
    -0.019810160622000694,
    0.015323538333177567,
    -0.010174277238547802,
    -0.00012607837561517954,
    0.004597061313688755,
    -0.018015511333942413,
    -0.001455563586205244,
    0.02874198742210865,
    0.0019965465180575848,
    0.03144776448607445,
    -0.004217424429953098,
    -0.02932179719209671,
    -0.00833821389824152,
    -0.005301116034388542,
    0.014232943765819073,
    0.007123374380171299,
    0.0024641905911266804,
    -0.047930922359228134,
    0.010222594253718853,
    0.021646223962306976,
    -0.008862802758812904,
    0.011692825704813004,
    0.0013485748786479235,
    0.0018015510868281126,
    -0.025718694552779198,
    -0.058864474296569824,
    -0.026132844388484955,
    0.0054391659796237946,
    -0.026546994224190712,
    -0.02638133428990841,
    -0.030232926830649376,
    0.027209633961319923,
    -0.009297660551965237,
    0.003000859636813402,
    0.0046246713027358055,
    -0.007075056899338961,
    -0.02239169366657734,
    -0.04481099545955658,
    0.005128553602844477,
    0.021011194214224815,
    -0.022046567872166634,
    -0.016828281804919243,
    0.026546994224190712,
    0.011844680644571781,
    0.009401197545230389,
    -0.0143571887165308,
    0.014177723787724972,
    0.0021570296958088875,
    0.019865380600094795,
    -0.006008621770888567,
    0.013128545135259628,
    -0.001749782357364893,
    0.006160476710647345,
    -0.005415007006376982,
    0.010395157150924206,
    -0.0037860183510929346,
    -0.0012674705358222127,
    0.011589288711547852,
    0.012590150348842144,
    0.021024998277425766,
    -0.001784294843673706,
    0.006391710136085749,
    -0.0086005087941885,
    -0.001207936555147171,
    -0.01551680825650692,
    -0.0031354583334177732,
    -0.0015461588045582175,
    -0.02063845843076706,
    0.005901632830500603,
    0.007102666888386011,
    -0.021149244159460068,
    0.013411547057330608,
    0.02237788774073124,
    -0.024448636919260025,
    -0.005994816776365042,
    -0.012334758415818214,
    -0.004566000308841467,
    -0.01906469091773033,
    0.0025245873257517815,
    -0.01211387850344181,
    0.005266603548079729,
    0.023192381486296654,
    0.0032217393163591623,
    0.01525451336055994,
    0.015323538333177567,
    0.006805859971791506,
    -0.012238123454153538,
    -0.0034564242232590914,
    0.002336494391784072,
    0.0033856737427413464,
    0.010167374275624752,
    -0.006502150092273951,
    -0.0201276745647192,
    -0.020804118365049362,
    -0.017504727467894554,
    -0.0001591887848917395,
    0.005197578575462103,
    -0.03340807557106018,
    0.08802061527967453,
    -0.019906794652342796,
    -0.01144433580338955,
    0.022874867543578148,
    -0.0012881780276075006,
    0.009069877676665783,
    0.005214834585785866,
    0.013984453864395618,
    -0.004697147756814957,
    -0.021121634170413017,
    0.0031872268300503492,
    -0.0063192336820065975,
    -0.02016909047961235,
    -0.016911111772060394,
    -0.020251918584108353,
    -0.007068154402077198,
    -0.007275229319930077,
    0.022598767653107643,
    -0.010402059182524681,
    0.017145797610282898,
    -0.015751492232084274,
    0.028065543621778488,
    -0.002421050099655986,
    -0.013936136849224567,
    -0.03144776448607445,
    -0.031337324529886246,
    0.016510767862200737,
    0.018567711114883423,
    -0.011561678722500801,
    -0.05958233401179314,
    0.035920582711696625,
    -0.012044853530824184,
    0.000727781793102622,
    -0.01715960167348385,
    0.011927510611712933,
    0.003568589687347412,
    -0.017021551728248596,
    -0.019244154915213585,
    -0.007399474270641804,
    0.009677297435700893,
    -0.009256245568394661,
    -0.003710090881213546,
    -0.025456400588154793,
    -0.02130109816789627,
    0.015558223240077496,
    0.003121653338894248,
    -0.00703709339722991,
    0.0028697121888399124,
    -0.007703184150159359
  ]
}
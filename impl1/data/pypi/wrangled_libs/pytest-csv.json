{
  "classifiers": [
    "framework :: pytest",
    "license :: osi approved :: gnu general public license (gpl)",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "pytest-csv\n==========\n\n.. image:: https://img.shields.io/pypi/v/pytest-csv.svg\n   :target: https://pypi.org/project/pytest-csv\n   :alt: last release\n\n.. image:: https://img.shields.io/pypi/pyversions/pytest-csv.svg\n   :target: https://pypi.org/project/pytest-csv\n   :alt: pypi package\n\n.. image:: https://img.shields.io/badge/pytest-6.0%2b-green.svg\n   :target: https://pytest.org\n   :alt: pytest supported versions\n\n.. image:: https://github.com/nicoulaj/pytest-csv/actions/workflows/tests.yml/badge.svg\n   :target: https://github.com/nicoulaj/pytest-csv/actions\n   :alt: continuous integration\n\n----\n\n**csv output for pytest.**\n\n----\n\ninstallation\n------------\n\ninstall using pip:\n::\n\n  pip install pytest-csv\n\nusage\n-----\n\n* to enable the csv report:\n\n  ::\n\n    py.test --csv tests.csv\n\n* to customize the csv delimiter/quoting characters:\n\n  ::\n\n    py.test --csv tests.csv --csv-delimiter ';' --csv-quote-char '\"'\n\n* to customize the columns:\n\n  ::\n\n    py.test --csv tests.csv --csv-columns host,function,status,duration,parameters_as_columns\n\n* this is the reference of all available columns:\n\n  +----------------------------+--------------------------------------------------------------------------+\n  | column                     | description                                                              |\n  +============================+==========================================================================+\n  | ``id``                     | pytest test identifier                                                   |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``module``                 | test module name                                                         |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``class``                  | test class                                                               |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``function``               | test function name                                                       |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``name``                   | test name, with arguments                                                |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``file``                   | test module file                                                         |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``doc``                    | test function docstring                                                  |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``status``                 | test status (passed, failed, error, skipped, xpassed or xfailed)         |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``success``                | test status, as a boolean                                                |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``duration``               | test duration, in seconds                                                |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``duration_formatted``     | test duration, human readable                                            |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``message``                | error message, if any                                                    |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``markers``                | test markers, as a comma-separated list                                  |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``markers_with_args``      | test markers with their arguments, as a comma-separated list             |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``markers_as_columns``     | test markers, each as a separate column                                  |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``markers_args_as_columns``| test markers with their arguments, each as a separate column             |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``parameters``             | test parameters, as a comma-separated list                               |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``parameters_as_columns``  | test parameters, each as a separate column                               |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``properties``             | properties recorded using ``record_property``, as a comma-separated list |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``properties_as_columns``  | properties recorded using ``record_property``, each as a separate column |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``user``                   | current user name                                                        |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``host``                   | current host (from ``platform`` module)                                  |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``system``                 | current system name (from ``platform`` module)                           |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``system_release``         | current system release info (from ``platform`` module)                   |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``system_version``         | current system version info (from ``platform`` module)                   |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``python_implementation``  | current python implementation (from ``platform`` module)                 |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``python_version``         | current python version (from ``platform`` module)                        |\n  +----------------------------+--------------------------------------------------------------------------+\n  | ``working_directory``      | current working directory                                                |\n  +----------------------------+--------------------------------------------------------------------------+\n\n* to add some data directly from a test function, enable `properties_as_columns` and use:\n\n  ::\n\n    def test_01(record_property):\n        record_property('my column 1', 42)\n        record_property('my column 2', 'foo bar')\n\n* to define new column types, in ``conftest.py`` (`more examples here <https://github.com/nicoulaj/pytest-csv/blob/master/pytest_csv/_hooks.py#l20>`_):\n\n  ::\n\n    def pytest_csv_register_columns(columns):\n        columns['my_simple_column'] = lambda item, report: {'my column': report.nodeid}\n\nissues\n------\n\nplease report issues `here <https://github.com/nicoulaj/pytest-csv/issues>`_.\n\nlicense\n-------\n\nthis software is released under the gnu general public license v3.0, see ``copying`` for details.\n\n\n",
  "docs_url": null,
  "keywords": "py.test pytest csv tsv report",
  "license": "gplv3",
  "name": "pytest-csv",
  "package_url": "https://pypi.org/project/pytest-csv/",
  "project_url": "https://pypi.org/project/pytest-csv/",
  "project_urls": {
    "Homepage": "https://github.com/nicoulaj/pytest-csv"
  },
  "release_url": "https://pypi.org/project/pytest-csv/3.0.0/",
  "requires_dist": [
    "pytest (>=6.0)",
    "six (>=1.0.0)",
    "pytest-xdist (>=1.29.0) ; extra == 'test'",
    "pytest-flake8 (>=1.0.7) ; extra == 'test'",
    "tabulate (>=0.8.2) ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "csv output for pytest.",
  "version": "3.0.0",
  "releases": [],
  "developers": [
    "julien.nicoulaud@gmail.com",
    "julien_nicoulaud"
  ],
  "kwds": "pytest_csv pytest pytest_csv_register_columns pyversions csv",
  "license_kwds": "gplv3",
  "libtype": "pypi",
  "id": "pypi_pytest_csv",
  "homepage": "https://github.com/nicoulaj/pytest-csv",
  "release_count": 8,
  "dependency_ids": [
    "pypi_pytest",
    "pypi_pytest_flake8",
    "pypi_pytest_xdist",
    "pypi_six",
    "pypi_tabulate"
  ]
}
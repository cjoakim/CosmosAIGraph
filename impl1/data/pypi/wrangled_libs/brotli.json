{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: c",
    "programming language :: c++",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: unix shell",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: archiving",
    "topic :: system :: archiving :: compression",
    "topic :: text processing :: fonts",
    "topic :: utilities"
  ],
  "description": "<p align=\"center\">\n  <img src=\"https://github.com/google/brotli/actions/workflows/build_test.yml/badge.svg\" alt=\"github actions build status\" href=\"https://github.com/google/brotli/actions?query=branch%3amaster\">\n  <img src=\"https://oss-fuzz-build-logs.storage.googleapis.com/badges/brotli.svg\" alt=\"fuzzing status\" href=\"https://oss-fuzz-build-logs.storage.googleapis.com/index.html#brotli\">\n</p>\n<p align=\"center\"><img src=\"https://brotli.org/brotli.svg\" alt=\"brotli\" width=\"64\"></p>\n\n### introduction\n\nbrotli is a generic-purpose lossless compression algorithm that compresses data\nusing a combination of a modern variant of the lz77 algorithm, huffman coding\nand 2nd order context modeling, with a compression ratio comparable to the best\ncurrently available general-purpose compression methods. it is similar in speed\nwith deflate but offers more dense compression.\n\nthe specification of the brotli compressed data format is defined in [rfc 7932](https://tools.ietf.org/html/rfc7932).\n\nbrotli is open-sourced under the mit license, see the license file.\n\n> **please note:** brotli is a \"stream\" format; it does not contain\n> meta-information, like checksums or uncompresssed data length. it is possible\n> to modify \"raw\" ranges of the compressed stream and the decoder will not\n> notice that.\n\n### build instructions\n\n#### vcpkg\n\nyou can download and install brotli using the [vcpkg](https://github.com/microsoft/vcpkg/) dependency manager:\n\n    git clone https://github.com/microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    ./vcpkg install brotli\n\nthe brotli port in vcpkg is kept up to date by microsoft team members and community contributors. if the version is out of date, please [create an issue or pull request](https://github.com/microsoft/vcpkg) on the vcpkg repository.\n\n#### bazel\n\nsee [bazel](http://www.bazel.build/)\n\n#### cmake\n\nthe basic commands to build and install brotli are:\n\n    $ mkdir out && cd out\n    $ cmake -dcmake_build_type=release -dcmake_install_prefix=./installed ..\n    $ cmake --build . --config release --target install\n\nyou can use other [cmake](https://cmake.org/) configuration.\n\n#### python\n\nto install the latest release of the python module, run the following:\n\n    $ pip install brotli\n\nto install the tip-of-the-tree version, run:\n\n    $ pip install --upgrade git+https://github.com/google/brotli\n\nsee the [python readme](python/readme.md) for more details on installing\nfrom source, development, and testing.\n\n### contributing\n\nwe glad to answer/library related questions in\n[brotli mailing list](https://groups.google.com/forum/#!forum/brotli).\n\nregular issues / feature requests should be reported in\n[issue tracker](https://github.com/google/brotli/issues).\n\nfor reporting vulnerability please read [security](security.md).\n\nfor contributing changes please read [contributing](contributing.md).\n\n### benchmarks\n* [squash compression benchmark](https://quixdb.github.io/squash-benchmark/) / [unstable squash compression benchmark](https://quixdb.github.io/squash-benchmark/unstable/)\n* [large text compression benchmark](http://mattmahoney.net/dc/text.html)\n* [lzturbo benchmark](https://sites.google.com/site/powturbo/home/benchmark)\n\n### related projects\n> **disclaimer:** brotli authors take no responsibility for the third party projects mentioned in this section.\n\nindependent [decoder](https://github.com/madler/brotli) implementation by mark adler, based entirely on format specification.\n\njavascript port of brotli [decoder](https://github.com/devongovett/brotli.js). could be used directly via `npm install brotli`\n\nhand ported [decoder / encoder](https://github.com/dominikhlbg/brotlihaxe) in haxe by dominik homberger. output source code: javascript, php, python, java and c#\n\n7zip [plugin](https://github.com/mcmilk/7-zip-zstd)\n\ndart [native bindings](https://github.com/thosakwe/brotli)\n\ndart compression framework with [fast ffi-based brotli implementation](https://pub.dev/documentation/es_compression/latest/brotli/brotli-library.html) with ready-to-use prebuilt binaries for win/linux/mac\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "brotli",
  "package_url": "https://pypi.org/project/Brotli/",
  "project_url": "https://pypi.org/project/Brotli/",
  "project_urls": {
    "Homepage": "https://github.com/google/brotli"
  },
  "release_url": "https://pypi.org/project/Brotli/1.1.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python bindings for the brotli compression library",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "the_brotli_authors"
  ],
  "kwds": "es_compression compression brotli compressed uncompresssed",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_brotli",
  "homepage": "https://github.com/google/brotli",
  "release_count": 9,
  "dependency_ids": []
}
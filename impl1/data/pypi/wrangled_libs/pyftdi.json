{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: other environment",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "operating system :: macos :: macos x",
    "operating system :: posix",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: hardware :: hardware drivers"
  ],
  "description": "pyftdi\n======\n\n.. cannot use defs.rst here, as pypi wants a standalone file.\n.. |i2c| replace:: i\\ :sup:`2`\\ c\n\ndocumentation\n-------------\n\nthe latest pyftdi online documentation is always available from\n`here <https://eblot.github.io/pyftdi>`_.\n\nbeware the online version may be more recent than the pypi hosted version, as\nintermediate development versions are not published to\n`pypi <https://pypi.org/project/pyftdi>`_.\n\npyftdi documentation can be locally build with sphinx, see the installation\ninstructions.\n\nsource code\n-----------\n\npyftdi releases are available from the python package index from\n`pypi <https://pypi.org/project/pyftdi>`_.\n\npyftdi development code is available from\n`github <https://github.com/eblot/pyftdi>`_.\n\noverview\n--------\n\npyftdi aims at providing a user-space driver for popular ftdi devices,\nimplemented in pure python language.\n\nsupported ftdi devices include:\n\n* uart and gpio bridges\n\n  * ft232r (single port, 3mbps)\n  * ft230x/ft231x/ft234x (single port, 3mbps)\n\n* uart and multi-serial protocols (spi, |i2c|, jtag) bridges\n\n  * ft2232c/d (dual port, clock up to 6 mhz)\n  * ft232h (single port, clock up to 30 mhz)\n  * ft2232h (dual port, clock up to 30 mhz)\n  * ft4232h (quad port, clock up to 30 mhz)\n  * ft4232ha (quad port, clock up to 30 mhz)\n\nfeatures\n--------\n\npyftdi currently supports the following features:\n\n* uart/serial usb converter, up to 12mbps (depending on the ftdi device\n  capability)\n* gpio/bitbang support, with 8-bit asynchronous, 8-bit synchronous and\n  8-/16-bit mpsse variants\n* spi master, with simultanous gpio support, up to 12 pins per port,\n  with support for non-byte sized transfer\n* |i2c| master, with simultanous gpio support, up to 14 pins per port\n* basic jtag master capabilities\n* eeprom support (some parameters cannot yet be modified, only retrieved)\n* experimental cbus support on selected devices, 4 pins per port\n\nsupported host oses\n-------------------\n\n* macos\n* linux\n* freebsd\n* windows, although not officially supported\n\n",
  "docs_url": null,
  "keywords": "driver,ftdi,usb,serial,spi,i2c,twi,rs232,gpio,bit-bang",
  "license": "modified bsd",
  "name": "pyftdi",
  "package_url": "https://pypi.org/project/pyftdi/",
  "project_url": "https://pypi.org/project/pyftdi/",
  "project_urls": {
    "Homepage": "http://github.com/eblot/pyftdi"
  },
  "release_url": "https://pypi.org/project/pyftdi/0.55.0/",
  "requires_dist": [
    "pyusb !=1.2.0,>=1.0.0",
    "pyserial >=3.0"
  ],
  "requires_python": ">=3.8",
  "summary": "ftdi device driver (pure python)",
  "version": "0.55.0",
  "releases": [],
  "developers": [
    "emmanuel.blot@free.fr",
    "emmanuel_blot"
  ],
  "kwds": "pyftdi pypi ftdi sphinx ft232h",
  "license_kwds": "modified bsd",
  "libtype": "pypi",
  "id": "pypi_pyftdi",
  "homepage": "http://github.com/eblot/pyftdi",
  "release_count": 72,
  "dependency_ids": [
    "pypi_pyserial",
    "pypi_pyusb"
  ]
}
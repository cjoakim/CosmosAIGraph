{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: asyncio",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: posix",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: system :: networking"
  ],
  "description": ".. image:: https://img.shields.io/github/actions/workflow/status/magicstack/uvloop/tests.yml?branch=master\n    :target: https://github.com/magicstack/uvloop/actions/workflows/tests.yml?query=branch%3amaster\n\n.. image:: https://img.shields.io/pypi/v/uvloop.svg\n    :target: https://pypi.python.org/pypi/uvloop\n\n.. image:: https://pepy.tech/badge/uvloop\n    :target: https://pepy.tech/project/uvloop\n    :alt: pypi - downloads\n\n\nuvloop is a fast, drop-in replacement of the built-in asyncio\nevent loop.  uvloop is implemented in cython and uses libuv\nunder the hood.\n\nthe project documentation can be found\n`here <http://uvloop.readthedocs.org/>`_.  please also check out the\n`wiki <https://github.com/magicstack/uvloop/wiki>`_.\n\n\nperformance\n-----------\n\nuvloop makes asyncio 2-4x faster.\n\n.. image:: https://raw.githubusercontent.com/magicstack/uvloop/master/performance.png\n    :target: http://magic.io/blog/uvloop-blazing-fast-python-networking/\n\nthe above chart shows the performance of an echo server with different\nmessage sizes.  the *sockets* benchmark uses ``loop.sock_recv()`` and\n``loop.sock_sendall()`` methods; the *streams* benchmark uses asyncio\nhigh-level streams, created by the ``asyncio.start_server()`` function;\nand the *protocol* benchmark uses ``loop.create_server()`` with a simple\necho protocol.  read more about uvloop in a\n`blog post <http://magic.io/blog/uvloop-blazing-fast-python-networking/>`_\nabout it.\n\n\ninstallation\n------------\n\nuvloop requires python 3.8 or greater and is available on pypi.\nuse pip to install it::\n\n    $ pip install uvloop\n\nnote that it is highly recommended to **upgrade pip before** installing\nuvloop with::\n\n    $ pip install -u pip\n\n\nusing uvloop\n------------\n\nas of uvloop 0.18, the preferred way of using it is via the\n``uvloop.run()`` helper function:\n\n\n.. code:: python\n\n    import uvloop\n\n    async def main():\n        # main entry-point.\n        ...\n\n    uvloop.run(main())\n\n``uvloop.run()`` works by simply configuring ``asyncio.run()``\nto use uvloop, passing all of the arguments to it, such as ``debug``,\ne.g. ``uvloop.run(main(), debug=true)``.\n\nwith python 3.11 and earlier the following alternative\nsnippet can be used:\n\n.. code:: python\n\n    import asyncio\n    import sys\n\n    import uvloop\n\n    async def main():\n        # main entry-point.\n        ...\n\n    if sys.version_info >= (3, 11):\n        with asyncio.runner(loop_factory=uvloop.new_event_loop) as runner:\n            runner.run(main())\n    else:\n        uvloop.install()\n        asyncio.run(main())\n\n\nbuilding from source\n--------------------\n\nto build uvloop, you'll need python 3.8 or greater:\n\n1. clone the repository:\n\n   .. code::\n\n    $ git clone --recursive git@github.com:magicstack/uvloop.git\n    $ cd uvloop\n\n2. create a virtual environment and activate it:\n\n   .. code::\n\n    $ python3.7 -m venv uvloop-dev\n    $ source uvloop-dev/bin/activate\n\n3. install development dependencies:\n\n   ..  code::\n\n    $ pip install -e .[dev]\n\n4. build and run tests:\n\n   .. code::\n\n    $ make\n    $ make test\n\n\nlicense\n-------\n\nuvloop is dual-licensed under mit and apache 2.0 licenses.\n",
  "docs_url": null,
  "keywords": "asyncio,networking",
  "license": "mit license",
  "name": "uvloop",
  "package_url": "https://pypi.org/project/uvloop/",
  "project_url": "https://pypi.org/project/uvloop/",
  "project_urls": {
    "github": "https://github.com/MagicStack/uvloop"
  },
  "release_url": "https://pypi.org/project/uvloop/0.19.0/",
  "requires_dist": [
    "Sphinx ~=4.1.2 ; extra == 'docs'",
    "sphinxcontrib-asyncio ~=0.3.0 ; extra == 'docs'",
    "sphinx-rtd-theme ~=0.5.2 ; extra == 'docs'",
    "flake8 ~=5.0 ; extra == 'test'",
    "psutil ; extra == 'test'",
    "pycodestyle ~=2.9.0 ; extra == 'test'",
    "pyOpenSSL ~=23.0.0 ; extra == 'test'",
    "mypy >=0.800 ; extra == 'test'",
    "Cython <0.30.0,>=0.29.36 ; extra == 'test'",
    "aiohttp >=3.8.1 ; (python_version < \"3.12\") and extra == 'test'",
    "aiohttp ==3.9.0b0 ; (python_version >= \"3.12\") and extra == 'test'"
  ],
  "requires_python": ">=3.8.0",
  "summary": "fast implementation of asyncio event loop on top of libuv",
  "version": "0.19.0",
  "releases": [],
  "developers": [
    "yury@magic.io"
  ],
  "kwds": "uvloop asyncio async pip pypi",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_uvloop",
  "homepage": "",
  "release_count": 79,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_cython",
    "pypi_flake8",
    "pypi_mypy",
    "pypi_psutil",
    "pypi_pycodestyle",
    "pypi_pyopenssl",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_sphinxcontrib_asyncio"
  ]
}
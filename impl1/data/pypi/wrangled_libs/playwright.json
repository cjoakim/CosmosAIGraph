{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http :: browsers",
    "topic :: software development :: testing"
  ],
  "description": "# \ud83c\udfad [playwright](https://playwright.dev) for python [![pypi version](https://badge.fury.io/py/playwright.svg)](https://pypi.python.org/pypi/playwright/) [![anaconda version](https://img.shields.io/conda/v/microsoft/playwright)](https://anaconda.org/microsoft/playwright) [![join discord](https://img.shields.io/badge/join-discord-infomational)](https://aka.ms/playwright/discord)\n\nplaywright is a python library to automate [chromium](https://www.chromium.org/home), [firefox](https://www.mozilla.org/en-us/firefox/new/) and [webkit](https://webkit.org/) browsers with a single api. playwright delivers automation that is **ever-green**, **capable**, **reliable** and **fast**. [see how playwright is better](https://playwright.dev/python/docs/why-playwright).\n\n|          | linux | macos | windows |\n|   :---   | :---: | :---: | :---:   |\n| chromium <!-- gen:chromium-version -->120.0.6099.28<!-- gen:stop --> | \u2705 | \u2705 | \u2705 |\n| webkit <!-- gen:webkit-version -->17.4<!-- gen:stop --> | \u2705 | \u2705 | \u2705 |\n| firefox <!-- gen:firefox-version -->119.0<!-- gen:stop --> | \u2705 | \u2705 | \u2705 |\n\n## documentation\n\n[https://playwright.dev/python/docs/intro](https://playwright.dev/python/docs/intro)\n\n## api reference\n\n[https://playwright.dev/python/docs/api/class-playwright](https://playwright.dev/python/docs/api/class-playwright)\n\n## example\n\n```py\nfrom playwright.sync_api import sync_playwright\n\nwith sync_playwright() as p:\n    for browser_type in [p.chromium, p.firefox, p.webkit]:\n        browser = browser_type.launch()\n        page = browser.new_page()\n        page.goto('http://playwright.dev')\n        page.screenshot(path=f'example-{browser_type.name}.png')\n        browser.close()\n```\n\n```py\nimport asyncio\nfrom playwright.async_api import async_playwright\n\nasync def main():\n    async with async_playwright() as p:\n        for browser_type in [p.chromium, p.firefox, p.webkit]:\n            browser = await browser_type.launch()\n            page = await browser.new_page()\n            await page.goto('http://playwright.dev')\n            await page.screenshot(path=f'example-{browser_type.name}.png')\n            await browser.close()\n\nasyncio.run(main())\n```\n\n## other languages\n\nmore comfortable in another programming language? [playwright](https://playwright.dev) is also available in\n- [node.js (javascript / typescript)](https://playwright.dev/docs/intro),\n- [.net](https://playwright.dev/dotnet/docs/intro),\n- [java](https://playwright.dev/java/docs/intro).\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "playwright",
  "package_url": "https://pypi.org/project/playwright/",
  "project_url": "https://pypi.org/project/playwright/",
  "project_urls": {
    "Homepage": "https://github.com/Microsoft/playwright-python",
    "Release notes": "https://github.com/microsoft/playwright-python/releases"
  },
  "release_url": "https://pypi.org/project/playwright/1.40.0/",
  "requires_dist": [
    "greenlet ==3.0.1",
    "pyee ==11.0.1",
    "typing-extensions ; python_version <= \"3.8\""
  ],
  "requires_python": ">=3.8",
  "summary": "a high-level api to automate web browsers",
  "version": "1.40.0",
  "releases": [],
  "developers": [
    "microsoft_corporation"
  ],
  "kwds": "async_playwright sync_playwright playwright api python",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_playwright",
  "homepage": "https://github.com/microsoft/playwright-python",
  "release_count": 58,
  "dependency_ids": [
    "pypi_greenlet",
    "pypi_pyee",
    "pypi_typing_extensions"
  ]
}
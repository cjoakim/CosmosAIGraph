{
  "classifiers": [
    "development status :: 3 - alpha",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "intended audience :: developers",
    "license :: osi approved :: gnu affero general public license v3 or later (agplv3+)",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.8"
  ],
  "description": "edx-toggles\n=============================\n\n|pypi-badge| |ci-badge| |codecov-badge| |doc-badge| |pyversions-badge|\n|license-badge|\n\nlibrary and utilities for implementing and reporting on feature toggles.\n\ndocumentation is on `read the docs`_.  code repository is on `github`_.\n\n.. _read the docs: https://edx.readthedocs.io/projects/edx-toggles/en/latest/readme.html\n.. _github: https://github.com/openedx/edx-toggles\n\nsee the `scripts readme`_ for more information on the scripts for reporting on the status of\nfeature toggles.\n\n.. _scripts readme: https://github.com/openedx/edx-toggles/blob/master/scripts/readme.rst\n\nlicense\n-------\n\nthe code in this repository is licensed under the agpl 3.0 unless\notherwise noted.\n\nplease see ``license.txt`` for details.\n\nhow to contribute\n-----------------\n\ncontributions are very welcome.\n\nplease read `how to contribute <https://github.com/openedx/.github/blob/master/contributing.md>`_ for details.\n\n\npr description template should be automatically applied if you are sending pr from github interface; otherwise you\ncan find it it at `pull_request_template.md <https://github.com/openedx/edx-toggles/blob/master/.github/pull_request_template.md>`_\n\nissue report template should be automatically applied if you are sending it from github ui as well; otherwise you\ncan find it at `issue_template.md <https://github.com/openedx/edx-toggles/blob/master/.github/issue_template.md>`_\n\nreporting security issues\n-------------------------\n\nplease do not report security issues in public. please email security@edx.org.\n\ngetting help\n------------\n\nhave a question about this repository, or about open edx in general?  please\nrefer to this `list of resources`_ if you need any assistance.\n\n.. _list of resources: https://open.edx.org/getting-help\n\n\n.. |pypi-badge| image:: https://img.shields.io/pypi/v/edx-toggles.svg\n    :target: https://pypi.python.org/pypi/edx-toggles/\n    :alt: pypi\n\n.. |ci-badge| image:: https://github.com/openedx/edx-toggles/workflows/python%20ci/badge.svg?branch=master\n    :target: https://github.com/openedx/edx-toggles/actions?query=workflow%3a%22python+ci%22\n    :alt: github ci\n\n.. |codecov-badge| image:: http://codecov.io/github/edx/edx-toggles/coverage.svg?branch=master\n    :target: http://codecov.io/github/edx/edx-toggles?branch=master\n    :alt: codecov\n\n.. |doc-badge| image:: https://readthedocs.org/projects/edx-toggles/badge/?version=latest\n    :target: http://edx-toggles.readthedocs.io/en/latest/\n    :alt: documentation\n\n.. |pyversions-badge| image:: https://img.shields.io/pypi/pyversions/edx-toggles.svg\n    :target: https://pypi.python.org/pypi/edx-toggles/\n    :alt: supported python versions\n\n.. |license-badge| image:: https://img.shields.io/github/license/edx/edx-toggles.svg\n    :target: https://github.com/openedx/edx-toggles/blob/master/license.txt\n    :alt: license\n\n\nchange log\n----------\n\n..\n   all enhancements and patches to edx_toggles will be documented\n   in this file.  it adheres to the structure of https://keepachangelog.com/ ,\n   but in restructuredtext instead of markdown (for ease of incorporation into\n   sphinx documentation and the pypi description).\n\n   this project adheres to semantic versioning (https://semver.org/).\n\n.. there should always be an \"unreleased\" section for changes pending release.\n\nunreleased\n~~~~~~~~~~\n\n[5.1.0] - 2023-08-02\n--------------------\n\n* added support for django 4.2\n* rename toggle_warnings to toggle_warning for consistency with setting_warning.\n* switch from ``edx-sphinx-theme`` to ``sphinx-book-theme`` since the former is\n  deprecated\n\n[5.0.0] - 2022-04-22\n--------------------\n\n* breaking change: removed legacywaffle* classes. although this is a breaking change, all known uses have already been fixed.\n* handle the case where certain toggle names come in as ``none`` when generating summary reports.\n* add adr for updating annotations for toggle life expectancy and use cases.\n\n[4.3.0] - 2022-01-31\n--------------------\n\nremoved\n~~~~~~~\n\n* removed django22, 30, 31\n\nadded\n~~~~~~~\n* added django40 support in ci\n\n[4.2.0] - 2021-07-07\n~~~~~~~~~~~~~~~~~~~~\n\n* added support for django3.0, 3.1 and 3.2\n\n[4.1.0] - 2021-02-10\n~~~~~~~~~~~~~~~~~~~~\n\n* expose toggle state report via a python api.\n\n[4.0.0] - 2021-01-24\n~~~~~~~~~~~~~~~~~~~~\n\n* breaking change: remove now unnecessary ``edx_toggles.toggles.__future__`` module.\n* breaking change: remove the following methods and properties: ``legacywaffleflagnamespace.set_monitor_value``,  ``legacywaffleswitch.switch_name``, ``legacywaffleswitch.namespaced_switch_name``, ``legacywaffleflag.flag_name``, ``legacywaffleflag.namespaced_flag_name``, ``legacywaffleflag.waffle_namespace``.\n* breaking change: remove ``legacywaffleflagnamespace._set_monitor_value`` method\n* monitoring:\n\n    * add the following custom attribute: \"deprecated_legacy_waffle_class\"\n    * remove the following custom attributes: \"deprecated_module_not_supplied\", \"warn_flag_no_request_return_value\", \"deprecated_waffle_method\", \"deprecated_waffle_legacy_method\", \"deprecated_compatible_legacy_waffle_class\".\n* rename ``toggles.internal.legacy.waffle*`` classes to ``toggles.internal.legacy.legacywaffle*``.\n\n[3.1.0] - 2021-01-18\n~~~~~~~~~~~~~~~~~~~~\n\n* dropped support for ``python3.5``.\n* fix ``toggle_type`` column value from the toggle state report for the ``settingtoggle`` and ``settingdicttoggle`` classes: the column is now set to \"django_settings\".\n\n[2.1.0] - 2021-01-12\n~~~~~~~~~~~~~~~~~~~~\n\n* stop monitoring waffle flag values via ``waffleflag.set_monitor_value`` calls. the deprecated method is preserved for backward compatibility.\n\n\n[2.0.0] - 2020-11-05\n~~~~~~~~~~~~~~~~~~~~\n\n* breaking change: the ``waffleflagnamespace`` and ``waffleswitchnamespace`` classes have been removed. you can either rename to ``legacywaffleflagnamespace`` and ``legacywaffleswitchnamespace``, which are deprecated, or you can move to the newer waffle classes that no longer use these namespace classes (see below).\n* breaking change: the ``waffleflag`` and ``waffleswitch`` classes exposed in ``toggles`` no longer use the namespace classes and are now the classes which were previously only available in ``toggles.__future__``.\n\n    * if you were importing from ``edx_toggles.toggles.__future__`` before, then you simply need to import from ``edx_toggles.toggles``. importing from ``__future__`` will continue to work but will trigger a deprecation warning.\n    * if you were importing from ``edx_toggles.toggles``, then you either need to:\n\n        * migrate your legacy namespaced classes to the new-style classes (see the new behaviour below), or\n        * import ``legacywaffleflag`` instead of ``waffleflag`` and ``legacywaffleswitch`` instead of ``waffleswitch``. note that these classes will be removed soon, so it's preferable to migrate to the new classes already.\n\n    * the new waffle classes introduce the following changes:\n\n        * they no longer use namespace classes like ``waffleswitchnamespace`` or ``waffleflagnamespace``.\n        * the ``waffleswitchnamespace._namespaced_name`` and ``waffleflagnamespace._namespaced_name`` methods are replaced by the ``waffleswitch.name`` and ``waffleflag.name`` attributes.\n        * the ``waffleswitchnamespace.is_enabled`` method is replaced by the ``waffleswitch.is_enabled`` method.\n        * the ``waffleswitchnamespace.set_request_cache_with_short_name`` method has no replacement because an alternative solution should be found.  you could (but really shouldn't) use the ``waffleswitch._cached_switches`` property.\n        * the ``waffleswitch.switch_name`` attribute is deprecated: switches should only ever be referred to using their fully namespaced names.\n        * the ``waffleswitch.switch_name`` attribute no longer exists. switches should only ever be referred to using their fully namespaced names.  if you need the non-namespaced name, it must be parsed from the namespaced name.\n        * the ``waffleflagnamespace.is_flag_active`` method is replaced by ``waffleflag.is_enabled``.\n        * the ``waffleflagnamespace._monitor_value`` method is replaced by ``waffleflag.set_monitor_value``.\n        * the ``waffleflagnamespace._cached_flags`` attribute is replaced by the ``waffleflag.cached_flags`` method.\n        * the ``waffleflag`` and ``waffleswitch`` ``module_name`` constructor argument is now mandatory.\n        * the ``waffleflag.flag_name`` attribute is deprecated.\n        * the ``waffleflag.flag_name`` attribute no longer exists. flags should only ever be referred to using their fully namespaced names.  if you need the non-namespaced name, it must be parsed from the namespaced name.\n        * the ``waffleflag.waffle_namespace`` attribute no longer exists, since there is no longer a separate namespace object.\n\n[1.2.2] - 2020-12-22\n~~~~~~~~~~~~~~~~~~~~\n\nmore improvements to monitoring of legacy waffle class imports.\n\n* add ``deprecated_incompatible_legacy_waffle_class`` custom attribute to any class (including subclasses), using the backward-incompatible imports that will be removed in 2.0.0.\n* add ``deprecated_compatible_legacy_waffle_class`` custom attribute to any class (including subclasses) using the legacy classes compatible with 2.0.0 imports, but which should be removed in 3.0.0 (or some future major version).\n* remove ``deprecated_edx_toggles_waffle`` custom attribute. in two cases, it was replaced by the new ``*_legacy_waffle_class`` custom attributes.  in one case, it was replaced with the already existing and more appropriate ``deprecated_waffle_legacy_method`` custom attribute.\n\n[1.2.1] - 2020-12-17\n~~~~~~~~~~~~~~~~~~~~\n\n* improve monitoring of legacy waffle class imports. we should watch for \"edx_toggles.toggles.internal.waffle.legacy.waffleswitch\" custom attributes.\n\n[1.2.0] - 2020-11-05\n~~~~~~~~~~~~~~~~~~~~\n\n* start the deprecation process of the waffle namespace classes:\n\n  * introduce legacywaffleflag, legacywaffleswitch for use with namespaces.\n  * begin deprecation/refactoring of namespacing code, including deprecation monitoring and warnings.\n  * note: waffleflag and waffleswitch still use namespaces as well (for now).\n  * introduce the ``toggles.__future__`` module for applications that need to be forward-compatible right away.\n\n[1.1.1] - 2020-10-27\n~~~~~~~~~~~~~~~~~~~~\n\n* fix cache-checking in waffleswitchnamespace\n\n[1.1.0] - 2020-10-23\n~~~~~~~~~~~~~~~~~~~~\n\n* backport ``override_waffle_switch`` test utility function from edx-platform\n\n[1.0.0] - 2020-10-13\n~~~~~~~~~~~~~~~~~~~~\n\n* fix missing ``module_name`` argument in ``settingdicttoggle`` constructor.\n* extract waffle classes from edx-platform and move them here following adr `#2 <docs/decisions/0002-application-toggle-state.rst>`__, `#3 <docs/decisions/0003-django-setting-toggles.rst>`__, `#4 <docs/decisions/0004-toggle-api.rst>`__. this does not introduce backward-incompatible changes, *yet*.\n* fix pinned requirements and incorrect root url that overrode edx-platform's.\n\n[0.3.0] - 2020-09-23\n~~~~~~~~~~~~~~~~~~~~\n\nfirst release to pypi (2020-10-02)\n\n* implement ``settingtoggle`` and ``settingdicttoggle``.\n\n[0.2.2] - 2020-09-11\n~~~~~~~~~~~~~~~~~~~~\n\n* document the writing of feature toggles annotations.\n\n[0.2.1] - 2020-08-03\n~~~~~~~~~~~~~~~~~~~~\n\n* add adr for the purpose of this repository.\n* add adr for implementing a toggle state endpoint.\n* add toggles report with csv output using new csvrenderer.\n* add coursewaffleflag and course override data to toggle report.\n* add output for waffle flag course overrides to data gatherer\n* add additional options to scripts/feature_toggle_report_generator\n\n    * filter toggle types and envs, add github_url, and change name of ida in report\n\n* modified scripts/feature_toggle_report_generator to work based on envs\n* removed confluence integration\n* moved htmlrenderer to its own file\n* add adr for new settingtoggle. (see 0003-django-setting-toggles.rst)\n\n[0.2.0] - 2020-05-27\n~~~~~~~~~~~~~~~~~~~~\n\n* removed caniusepython3.\n\n[0.2.0] - 2020-05-05\n~~~~~~~~~~~~~~~~~~~~\n\n* added support for python 3.8 and dropped support django versions older than 2.2\n\n[0.1.0] - 2019-04-08\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* initial version\n",
  "docs_url": null,
  "keywords": "django edx",
  "license": "agpl 3.0",
  "name": "edx-toggles",
  "package_url": "https://pypi.org/project/edx-toggles/",
  "project_url": "https://pypi.org/project/edx-toggles/",
  "project_urls": {
    "Homepage": "https://github.com/openedx/edx-toggles"
  },
  "release_url": "https://pypi.org/project/edx-toggles/5.1.0/",
  "requires_dist": [
    "Django (>=2.2)",
    "code-annotations",
    "django-crum",
    "django-waffle",
    "edx-django-utils"
  ],
  "requires_python": "",
  "summary": "library and utilities for feature toggles",
  "version": "5.1.0",
  "releases": [],
  "developers": [
    "edx",
    "oscm@edx.org"
  ],
  "kwds": "edx_toggles deprecated_edx_toggles_waffle feature_toggle_report_generator toggle_warnings toggles",
  "license_kwds": "agpl 3.0",
  "libtype": "pypi",
  "id": "pypi_edx_toggles",
  "homepage": "https://github.com/openedx/edx-toggles",
  "release_count": 16,
  "dependency_ids": [
    "pypi_code_annotations",
    "pypi_django",
    "pypi_django_crum",
    "pypi_django_waffle",
    "pypi_edx_django_utils"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "dvc data\n========\n\n|pypi| |status| |python version| |license|\n\n|tests| |codecov| |pre-commit| |black|\n\n.. |pypi| image:: https://img.shields.io/pypi/v/dvc-data.svg\n   :target: https://pypi.org/project/dvc-data/\n   :alt: pypi\n.. |status| image:: https://img.shields.io/pypi/status/dvc-data.svg\n   :target: https://pypi.org/project/dvc-data/\n   :alt: status\n.. |python version| image:: https://img.shields.io/pypi/pyversions/dvc-data\n   :target: https://pypi.org/project/dvc-data\n   :alt: python version\n.. |license| image:: https://img.shields.io/pypi/l/dvc-data\n   :target: https://opensource.org/licenses/apache-2.0\n   :alt: license\n.. |tests| image:: https://github.com/iterative/dvc-data/workflows/tests/badge.svg\n   :target: https://github.com/iterative/dvc-data/actions?workflow=tests\n   :alt: tests\n.. |codecov| image:: https://codecov.io/gh/iterative/dvc-data/branch/main/graph/badge.svg\n   :target: https://app.codecov.io/gh/iterative/dvc-data\n   :alt: codecov\n.. |pre-commit| image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logocolor=white\n   :target: https://github.com/pre-commit/pre-commit\n   :alt: pre-commit\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: black\n\n\nfeatures\n--------\n\n* todo\n\n\nrequirements\n------------\n\n* todo\n\n\ninstallation\n------------\n\nyou can install *dvc data* via pip_ from pypi_:\n\n.. code:: console\n\n   $ pip install dvc-data\n\n\nusage\n-----\n\nhashfile\n^^^^^^^^\n\nhashfile\n\"\"\"\"\"\"\"\"\n\nbased on dvc-object's `object`, this is an object that has a particular hash that can be used to verify its contents. similar to git's `shafile`.\n\n.. code:: python\n\n    from dvc_data.hashfile import hashfile\n\n    obj = hashfile(\"/path/to/file\", fs, hashinfo(\"md5\", \"36eba1e1e343279857ea7f69a597324e\")\n\nhashfiledb\n\"\"\"\"\"\"\"\"\"\"\n\nbased on dvc-object's `objectdb`, but stores `hashfile` objects and so is able to verify their contents by their `hash_info`. similar to git's `objectstore`.\n\n.. code:: python\n\n    from dvc_data.hashfile import hashfiledb\n\n    odb = hashfiledb(fs, \"/path/to/odb\")\n\nindex\n^^^^^\n\nindex\n\"\"\"\"\"\n\na trie-like structure that represents data files and directories.\n\n.. code:: python\n\n    from dvc_data.index import dataindex, dataindexentry\n\n    index = dataindex()\n    index[(\"foo\",)] = dataindexentry(hash_info=hash_info, meta=meta)\n\n\nstorage\n\"\"\"\"\"\"\"\n\na mapping that describes where to find data contents for index entries. can be either `objectstorage` for `hashfiledb`-based storage or `filestorage` for backup-like plain file storage.\n\n.. code:: python\n\n    index.storage_map[(\"foo\",)] = objectstorage(...)\n\ncontributing\n------------\n\ncontributions are very welcome.\nto learn more, see the `contributor guide`_.\n\n\nlicense\n-------\n\ndistributed under the terms of the `apache 2.0 license`_,\n*dvc data* is free and open source software.\n\n\nissues\n------\n\nif you encounter any problems,\nplease `file an issue`_ along with a detailed description.\n\n\n.. _apache 2.0 license: https://opensource.org/licenses/apache-2.0\n.. _pypi: https://pypi.org/\n.. _file an issue: https://github.com/iterative/dvc-data/issues\n.. _pip: https://pip.pypa.io/\n.. github-only\n.. _contributor guide: contributing.rst\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "dvc-data",
  "package_url": "https://pypi.org/project/dvc-data/",
  "project_url": "https://pypi.org/project/dvc-data/",
  "project_urls": {
    "Issues": "https://github.com/iterative/dvc-data/issues",
    "Source": "https://github.com/iterative/dvc-data"
  },
  "release_url": "https://pypi.org/project/dvc-data/3.3.0/",
  "requires_dist": [
    "funcy >=1.14",
    "dictdiffer >=0.8.1",
    "pygtrie >=2.3.2",
    "shortuuid >=0.5.0",
    "dvc-objects <4,>=3",
    "diskcache >=5.2.1",
    "attrs >=21.3.0",
    "sqltrie <1,>=0.11.0",
    "tqdm <5,>=4.63.1",
    "dvc-data[cli] ; extra == 'all'",
    "typer[all] >=0.6 ; extra == 'cli'",
    "rich <14.0.0,>=10.11.0 ; extra == 'cli'",
    "dvc-data[all] ; extra == 'dev'",
    "dvc-data[tests] ; extra == 'dev'",
    "blake3 >=0.3.1 ; extra == 'dev'",
    "mypy ==1.7.1 ; extra == 'dev'",
    "types-tqdm ; extra == 'dev'",
    "pytest <8,>=7 ; extra == 'tests'",
    "pytest-sugar ; extra == 'tests'",
    "pytest-cov >=4.1.0 ; extra == 'tests'",
    "pytest-mock ; extra == 'tests'",
    "pytest-benchmark >=4 ; extra == 'tests'",
    "pytest-servers[s3] ==0.1.3 ; extra == 'tests'"
  ],
  "requires_python": ">=3.8",
  "summary": "dvc's data management subsystem",
  "version": "3.3.0",
  "releases": [],
  "developers": [
    "support@dvc.org"
  ],
  "kwds": "dvc_data pyversions dvc codecov pypi_",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_dvc_data",
  "homepage": "",
  "release_count": 269,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_blake3",
    "pypi_dictdiffer",
    "pypi_diskcache",
    "pypi_dvc_data",
    "pypi_dvc_objects",
    "pypi_funcy",
    "pypi_mypy",
    "pypi_pygtrie",
    "pypi_pytest",
    "pypi_pytest_benchmark",
    "pypi_pytest_cov",
    "pypi_pytest_mock",
    "pypi_pytest_servers",
    "pypi_pytest_sugar",
    "pypi_rich",
    "pypi_shortuuid",
    "pypi_sqltrie",
    "pypi_tqdm",
    "pypi_typer",
    "pypi_types_tqdm"
  ]
}
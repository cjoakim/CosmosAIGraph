{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries",
    "topic :: utilities",
    "typing :: typed"
  ],
  "description": "# a python library for creating \"editable wheels\"\n\nthis library supports the building of wheels which, when installed, will\nexpose packages in a local directory on `sys.path` in \"editable mode\". in\nother words, changes to the package source will be  reflected in the package\nvisible to python, without needing a reinstall.\n\n## usage\n\nsuppose you want to build a wheel for your project `foo`. your project is\nlocated in the directory `/path/to/foo`. under that directory, you have a\n`src` directory containing your project, which is a package called `foo`\nand a python module called `bar.py`. so your directory structure looks like\nthis:\n\n```\n/path/to/foo\n|\n+-- src\n|   +-- foo\n|   |   +-- __init__.py\n|   +-- bar.py\n|\n+-- setup.py\n+-- other files\n```\n\nbuild your wheel as follows:\n\n```python\nfrom editables import editableproject\n\nmy_project = editableproject(\"foo\", \"/path/to/foo\")\nmy_project.add_to_path(\"src\")\n\n# build a wheel however you prefer...\nwheel = buildawheel()\n\n# add files to the wheel\nfor name, content in my_project.files():\n    wheel.add_file(name, content)\n\n# record any runtime dependencies\nfor dep in my_project.dependencies():\n    wheel.metadata.dependencies.add(dep)\n```\n\nthe resulting wheel will, when installed, put the project `src` directory on\n`sys.path` so that editing the original source will take effect without needing\na reinstall (i.e., as \"editable\" packages). the project is exposed on `sys.path`\nby adding a single `.pth` file, named after the project, into the wheel.\n\nfor more details, including how to control what gets exposed more precisely, see\n[the documentation](https://editables.readthedocs.io/en/latest/).\n\nnote that this project doesn't build wheels directly. that's the responsibility\nof the calling code.\n\n## python compatibility\n\nthis project supports the same versions of python as pip does. currently\nthat is python 3.7 and later, and pypy3 (although we don't test against\npypy).\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "editables",
  "package_url": "https://pypi.org/project/editables/",
  "project_url": "https://pypi.org/project/editables/",
  "project_urls": {
    "Documentation": "https://editables.readthedocs.io",
    "Source": "https://github.com/pfmoore/editables",
    "Tracker": "https://github.com/pfmoore/editables/issues"
  },
  "release_url": "https://pypi.org/project/editables/0.5/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "editable installations",
  "version": "0.5",
  "releases": [],
  "developers": [
    "p.f.moore@gmail.com"
  ],
  "kwds": "add_to_path editableproject pip dependencies add_file",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_editables",
  "homepage": "",
  "release_count": 5,
  "dependency_ids": []
}
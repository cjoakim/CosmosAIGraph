{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "programming language :: cython",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: implementation :: cpython",
    "topic :: scientific/engineering :: information analysis",
    "topic :: software development :: libraries :: python modules",
    "topic :: text processing :: linguistic"
  ],
  "description": "dawg\n====\n\n.. image:: https://travis-ci.org/pytries/dawg.png?branch=master\n    :target: https://travis-ci.org/pytries/dawg\n\nthis package provides dawg(dafsa_)-based dictionary-like\nread-only objects for python (2.x and 3.x).\n\nstring data in a dawg may take 200x less memory than in\na standard python dict and the raw lookup speed is comparable;\nit also provides fast advanced methods like prefix search.\n\n.. _dafsa: https://en.wikipedia.org/wiki/deterministic_acyclic_finite_state_automaton\n\n* docs: https://dawg.readthedocs.org\n* source code: https://github.com/pytries/dawg\n* issue tracker: https://github.com/pytries/dawg/issues\n\nlicense\n=======\n\nwrapper code is licensed under mit license.\nbundled `dawgdic`_ c++ library is licensed under bsd license.\nbundled libb64_ is public domain.\n\n.. _dawgdic: https://code.google.com/p/dawgdic/\n.. _libb64: http://libb64.sourceforge.net/\n\n\n\nchanges\n=======\n\n0.8.0 (2020-02-19)\n------------------\n\n* python 3.8 support is added\n* python 3.2, 3.3 and 3.4 support is dropped\n* extension is rebuilt with cython 0.29.15\n\n0.7.8 (2015-04-18)\n------------------\n\n* extra type annotations are added to make the code a bit faster;\n* mercurial mirror at bitbucket is dropped;\n* wrapper is rebuilt with cython 0.22.\n\n0.7.7 (2014-11-19)\n------------------\n\n* ``dawg.b_prefixes`` method for avoiding utf8 encoding/decoding\n  (thanks ikuya yamada);\n* wrapper is rebuilt with cython 0.21.1.\n\n0.7.6 (2014-08-10)\n------------------\n\n* wrapper is rebuilt with cython 0.20.2 to fix some issues.\n\n0.7.5 (2014-06-05)\n------------------\n\n* switched to setuptools;\n* some wheels are uploaded to pypi.\n\n0.7.4 (2014-05-29)\n------------------\n\n* fixed a bug in dawg building: input should be sorted according to its\n  binary representation.\n\n0.7.3 (2014-05-29)\n------------------\n\n* wrapper is rebuilt with cython 0.21dev;\n* python 3.4 compatibility is verified.\n\n0.7.2 (2013-10-03)\n------------------\n\n* ``has_keys_with_prefix(prefix)`` method (thanks\n  `matt hickford <https://github.com/matt-hickford>`_)\n\n0.7.1 (2013-05-25)\n------------------\n\n- extension is rebuilt with cython 0.19.1;\n- fixed segfault that happened on lookup from incorrectly loaded dawg\n  (thanks alex moiseenko).\n\n0.7 (2013-04-05)\n----------------\n\n- intcompletiondawg\n\n0.6.1 (2013-03-23)\n------------------\n\n- installation issues in environments with lc_all=c are fixed;\n- pypy is officially unsupported now (use dawg-python_ with pypy).\n\n.. _dawg-python: https://github.com/pytries/dawg-python\n\n0.6 (2013-03-22)\n----------------\n\n- many thread-safety bugs are fixed (at the cost of slowing library down).\n\n0.5.5 (2013-02-19)\n------------------\n\n- fix installation under pypy (note: dawg is slow under pypy\n  and may have bugs).\n\n0.5.4 (2013-02-14)\n------------------\n\n- small tweaks for docstrings;\n- the extension is rebuilt using cython 0.18.\n\n0.5.3 (2013-01-03)\n------------------\n\n- small improvements to ``.compile_replaces`` method;\n- benchmarks for ``.similar_items`` method;\n- the extension is rebuilt with cython pre-0.18; this made\n  ``.prefixes`` and ``.iterprefixes`` methods faster\n  (up to 6x in some cases).\n\n0.5.2 (2013-01-02)\n------------------\n\n- tests are included in source distribution;\n- benchmark results in readme was nonrepresentative because of my\n  broken (slow) python 3.2 install;\n- installation is fixed under python 3.x with ``lc_all=c`` (thanks\n  jakub wilk).\n\n0.5.1 (2012-10-11)\n------------------\n\n- better error reporting while building dawgs;\n- ``__contains__`` is fixed for keys with zero bytes;\n- ``dawg.error`` exception class;\n- building of ``bytesdawg`` and ``recorddawg`` fails instead of\n  producing incorrect results if some of the keys has unsupported characters.\n\n\n0.5 (2012-10-08)\n----------------\n\nthe storage scheme of ``bytesdawg`` and ``recorddawg`` is changed in\nthis release in order to provide the alphabetical ordering of items.\n\nthis is a backwards-incompatible release. in order to read ``bytesdawg`` or\n``recorddawg`` created with previous versions of dawg use ``payload_separator``\nconstructor argument::\n\n    >>> bytesdawg(payload_separator=b'\\xff').load('old.dawg')\n\n\n0.4.1 (2012-10-01)\n------------------\n\n- segfaults with empty dawgs are fixed by updating dawgdic to latest svn.\n\n0.4 (2012-09-26)\n----------------\n\n- ``iterkeys``, ``iteritems`` and ``iterprefixes`` methods\n  (thanks dan blanchard).\n\n0.3.2 (2012-09-24)\n------------------\n\n- ``prefixes`` method for finding all prefixes of a given key.\n\n0.3.1 (2012-09-20)\n------------------\n\n- bundled dawgdic c++ library is updated to the latest version.\n\n0.3 (2012-09-13)\n----------------\n\n- ``similar_keys``, ``similar_items`` and ``similar_item_values`` methods\n  for more permissive lookups (they may be useful e.g. for umlaut handling);\n- ``load`` method returns self;\n- python 3.3 support.\n\n0.2 (2012-09-08)\n----------------\n\ngreatly improved memory usage for dawgs loaded with ``load`` method.\n\nthere is currently a bug somewhere in a wrapper so dawgs loaded with\n``read()`` method or unpickled dawgs uses 3x-4x memory compared to dawgs\nloaded with ``load()`` method. ``load()`` is fixed in this release but\nother methods are not.\n\n0.1 (2012-09-08)\n----------------\n\ninitial release.",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "dawg",
  "package_url": "https://pypi.org/project/DAWG/",
  "project_url": "https://pypi.org/project/DAWG/",
  "project_urls": {
    "Homepage": "https://github.com/pytries/DAWG/"
  },
  "release_url": "https://pypi.org/project/DAWG/0.8.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "fast and memory efficient dawg (dafsa) for python",
  "version": "0.8.0",
  "releases": [],
  "developers": [
    "kmike84@gmail.com",
    "mikhail_korobov"
  ],
  "kwds": "dict python_ python deterministic_acyclic_finite_state_automaton dafsa",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_dawg",
  "homepage": "https://github.com/pytries/dawg/",
  "release_count": 25,
  "dependency_ids": []
}
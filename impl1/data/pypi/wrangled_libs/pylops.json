{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: gnu lesser general public license v3 (lgplv3)",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: mathematics"
  ],
  "description": "![pylops](https://github.com/pylops/pylops/blob/master/docs/source/_static/pylops_b.png)\n\n[![numfocus](https://img.shields.io/badge/powered%20by-numfocus-orange.svg?style=flat&colora=e1523d&colorb=007d8a)](https://numfocus.org/sponsored-projects/affiliated-projects)\n[![pypi version](https://badge.fury.io/py/pylops.svg)](https://badge.fury.io/py/pylops)\n[![anaconda-server badge](https://anaconda.org/conda-forge/pylops/badges/version.svg)](https://anaconda.org/conda-forge/pylops)\n[![azuredevops status](https://dev.azure.com/matteoravasi/pylops/_apis/build/status/pylops.pylops?branchname=dev)](https://dev.azure.com/matteoravasi/pylops/_build/latest?definitionid=9&branchname=dev)\n[![githubaction status](https://github.com/mrava87/pylops/actions/workflows/build.yaml/badge.svg)](https://github.com/mrava87/pylops/actions/workflows/build.yaml)\n[![documentation status](https://readthedocs.org/projects/pylops/badge/?version=stable)](https://pylops.readthedocs.io/en/stable/?badge=stable)\n[![codacy badge](https://app.codacy.com/project/badge/grade/17fd60b4266347d8890dd6b64f2c0807)](https://www.codacy.com/gh/pylops/pylops/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=pylops/pylops&amp;utm_campaign=badge_grade)\n[![codacy badge](https://app.codacy.com/project/badge/coverage/17fd60b4266347d8890dd6b64f2c0807)](https://www.codacy.com/gh/pylops/pylops/dashboard?utm_source=github.com&utm_medium=referral&utm_content=pylops/pylops&utm_campaign=badge_coverage)\n![os-support](https://img.shields.io/badge/os-linux,win,osx-850a8b.svg)\n[![slack status](https://img.shields.io/badge/chat-slack-green.svg)](https://pylops.slack.com)\n![pypi downloads](https://img.shields.io/pypi/dm/pylops.svg?label=pypi%20downloads)\n![conda downloads](https://img.shields.io/conda/dn/conda-forge/pylops.svg?label=conda%20downloads)\n\n\n# a linear operator library for python\npylops is an open-source python library focused on providing a backend-agnostic, idiomatic, matrix-free library of linear operators and related computations.\nit is inspired by the iconic matlab [spot \u2013 a linear-operator toolbox](http://www.cs.ubc.ca/labs/scl/spot/) project.\n\n\n## installation\nto get the most out of pylops straight out of the box, we recommend `conda` to install pylops:\n```bash\nconda install -c conda-forge pylops\n```\nyou can also install with `pip`:\n```bash\npip install pylops\n```\n\nsee the docs ([installation](https://pylops.readthedocs.io/en/stable/installation.html)) for more information about dependencies and performance.\n\n## why pylops?\nlinear operators and inverse problems are at the core of many of the most used algorithms in signal processing, image processing, and remote sensing.\nfor small-scale problems, matrices can be explicitly computed and manipulated with python numerical scientific libraries such as [numpy](http://www.numpy.org) and [scipy](https://www.scipy.org/scipylib/index.html).\n\non the other hand, large-scale problems often feature matrices that are prohibitive in size\u2014but whose operations can be described by simple functions.\npylops exploits this to represent linear operators not as array of numbers, but by *functions which describe matrix-vector products*.\n\nindeed, many iterative methods (e.g. cg, lsqr) were designed to not rely on the elements of the matrix, only on the result of matrix-vector products.\npylops offers many linear operators (derivatives, convolutions, ffts and manyh more) as well as solvers for a variety of problems (e.g., least-squares and sparse inversion).\nwith these two ingredients, pylops can describe and solve a variety of linear inverse problems which appear in many different areas.\n\n## example: a finite-difference operator\n\na first-order, central finite-difference derivative operator denoted d can be described either as a matrix (array of numbers), or as weighed stencil summation:\n\n```python\nimport numpy as np\n\n# setup\nnx = 7\nx = np.arange(nx) - (nx-1)/2\n\n# matrix\nd_mat = 0.5 * (np.diag(np.ones(nx-1), k=1) - np.diag(np.ones(nx-1), k=-1))\nd_mat[0] = d_mat[-1] = 0 # remove edge effects\n\n# function: stencil summation\ndef central_diff(x):\n    y = np.zeros_like(x)\n    y[1:-1] = 0.5 * (x[2:] - x[:-2])\n    return y\n\n# y = dx\ny = d_mat @ x\ny_fun = central_diff(x)\nprint(np.allclose(y, y_fun)) # true\n```\n\nthe matrix formulation can easily be paired with a scipy least-squares solver to approximately invert the matrix, but this requires us to have an explicit representation for d (in this case, ``d_mat``):\n```python\nfrom scipy.linalg import lstsq\n\n# xinv = d^-1 y\nxinv = lstsq(d_mat, y)[0]\n```\nrelying on the functional approach, pylops wraps a function similar to ``central_diff`` into the [``firstderivative``](https://pylops.readthedocs.io/en/stable/api/generated/pylops.firstderivative.html#pylops.firstderivative) operator, defining not only the forward mode (dx) but also the transpose mode (d\u1d40y).\nin fact, it goes even further as the forward slash operator applies least-squares inversion!\n```python\nfrom pylops import firstderivative\n\nd_op = firstderivative(nx, dtype='float64')\n\n# y = dx\ny = d_op @ x\n# xinv = d^-1 y\nxinv_op = d_op / y\n\nprint(np.allclose(xinv, xinv_op)) # true\n```\n\nnote how the code becomes even more compact and expressive than in the previous case letting the user focus on the formulation of equations of the forward problem to be solved by inversion.\npylops offers many other linear operators, as well as the ability to implement your own in a way that seamlessly interfaces with the rest of the ecosystem.\n\n\n## contributing\n\n*feel like contributing to the project? adding new operators or tutorial?*\n\nfollow the instructions detailed in the [contributing](contributing.md) file before getting started.\n\n## documentation\nthe official documentation of pylops is available [here](https://pylops.readthedocs.io/).\n\nvisit this page to get started learning about different operators and their applications as well as how to\ncreate new operators yourself and make it to the ``contributors`` list.\n\n## history\npylops was initially written by [equinor](https://www.equinor.com).\nit is a flexible and scalable python library for large-scale optimization with linear\noperators that can be tailored to our needs, and as contribution to the free software community.\nsince june 2021, pylops is a [numfocus](https://numfocus.org/sponsored-projects/affiliated-projects)\naffiliated project.\n\n## citing\nwhen using pylops in scientific publications, please cite the following paper:\n\n\n- ravasi, m., and i. vasconcelos, 2020, *<b>pylops\u2014a linear-operator python library for scalable algebra and optimization</b>*,\n  softwarex, 11, 100361. doi: 10.1016/j.softx.2019.100361 [(link)](https://www.sciencedirect.com/science/article/pii/s2352711019301086)\n\n## tutorials\na list of video tutorials to learn more about pylops:\n\n- transform 2022: youtube video [links](https://www.youtube.com/watch?v=rievkuy_ivq).\n- transform 2021: youtube video [links](https://www.youtube.com/watch?v=4gavte1cilw).\n- swung rendezvous 2021: youtube video [links](https://www.youtube.com/watch?v=rot1k1xr5h4).\n- pydataglobal 2020: youtube video [links](https://github.com/pylops/pylops_pydata2020).\n\n## contributors\n* matteo ravasi, mrava87\n* carlos da costa, cako\n* dieter werthm\u00fcller, prisae\n* tristan van leeuwen, tristanvanleeuwen\n* leonardo uieda, leouieda\n* filippo broggini, filippo82\n* tyler hughes, twhughes\n* lyubov skopintseva, lskopintseva\n* francesco picetti, fpicetti\n* alan richardson, ar4\n* burningkarl, burningkarl\n* nick luiken, nickluiken\n* burningkarl, burningkarl\n* muhammad izzatullah, izzatum\n* juan daniel romero, jdromerom\n* aniket singh rawat, dikwickley\n* rohan babbar, rohanbabbar04\n* wei zhang, zhangweigeo\n* fedor goncharov, fedor-goncharov\n",
  "docs_url": null,
  "keywords": "algebra,inverse problems,large-scale optimization",
  "license": "gnu lesser general public license version 3, 29 june 2007  copyright (c) 2007 free software foundation, inc. <https://fsf.org/> everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.   this version of the gnu lesser general public license incorporates the terms and conditions of version 3 of the gnu general public license, supplemented by the additional permissions listed below.  0. additional definitions.  as used herein, \"this license\" refers to version 3 of the gnu lesser general public license, and the \"gnu gpl\" refers to version 3 of the gnu general public license.  \"the library\" refers to a covered work governed by this license, other than an application or a combined work as defined below.  an \"application\" is any work that makes use of an interface provided by the library, but which is not otherwise based on the library. defining a subclass of a class defined by the library is deemed a mode of using an interface provided by the library.  a \"combined work\" is a work produced by combining or linking an application with the library.  the particular version of the library with which the combined work was made is also called the \"linked version\".  the \"minimal corresponding source\" for a combined work means the corresponding source for the combined work, excluding any source code for portions of the combined work that, considered in isolation, are based on the application, and not on the linked version.  the \"corresponding application code\" for a combined work means the object code and/or source code for the application, including any data and utility programs needed for reproducing the combined work from the application, but excluding the system libraries of the combined work.  1. exception to section 3 of the gnu gpl.  you may convey a covered work under sections 3 and 4 of this license without being bound by section 3 of the gnu gpl.  2. conveying modified versions.  if you modify a copy of the library, and, in your modifications, a facility refers to a function or data to be supplied by an application that uses the facility (other than as an argument passed when the facility is invoked), then you may convey a copy of the modified version:  a) under this license, provided that you make a good faith effort to ensure that, in the event an application does not supply the function or data, the facility still operates, and performs whatever part of its purpose remains meaningful, or  b) under the gnu gpl, with none of the additional permissions of this license applicable to that copy.  3. object code incorporating material from library header files.  the object code form of an application may incorporate material from a header file that is part of the library.  you may convey such object code under terms of your choice, provided that, if the incorporated material is not limited to numerical parameters, data structure layouts and accessors, or small macros, inline functions and templates (ten or fewer lines in length), you do both of the following:  a) give prominent notice with each copy of the object code that the library is used in it and that the library and its use are covered by this license.  b) accompany the object code with a copy of the gnu gpl and this license document.  4. combined works.  you may convey a combined work under terms of your choice that, taken together, effectively do not restrict modification of the portions of the library contained in the combined work and reverse engineering for debugging such modifications, if you also do each of the following:  a) give prominent notice with each copy of the combined work that the library is used in it and that the library and its use are covered by this license.  b) accompany the combined work with a copy of the gnu gpl and this license document.  c) for a combined work that displays copyright notices during execution, include the copyright notice for the library among these notices, as well as a reference directing the user to the copies of the gnu gpl and this license document.  d) do one of the following:  0) convey the minimal corresponding source under the terms of this license, and the corresponding application code in a form suitable for, and under terms that permit, the user to recombine or relink the application with a modified version of the linked version to produce a modified combined work, in the manner specified by section 6 of the gnu gpl for conveying corresponding source.  1) use a suitable shared library mechanism for linking with the library.  a suitable mechanism is one that (a) uses at run time a copy of the library already present on the user's computer system, and (b) will operate properly with a modified version of the library that is interface-compatible with the linked version.  e) provide installation information, but only if you would otherwise be required to provide such information under section 6 of the gnu gpl, and only to the extent that such information is necessary to install and execute a modified version of the combined work produced by recombining or relinking the application with a modified version of the linked version. (if you use option 4d0, the installation information must accompany the minimal corresponding source and corresponding application code. if you use option 4d1, you must provide the installation information in the manner specified by section 6 of the gnu gpl for conveying corresponding source.)  5. combined libraries.  you may place library facilities that are a work based on the library side by side in a single library together with other library facilities that are not applications and are not covered by this license, and convey such a combined library under terms of your choice, if you do both of the following:  a) accompany the combined library with a copy of the same work based on the library, uncombined with any other library facilities, conveyed under the terms of this license.  b) give prominent notice with the combined library that part of it is a work based on the library, and explaining where to find the accompanying uncombined form of the same work.  6. revised versions of the gnu lesser general public license.  the free software foundation may publish revised and/or new versions of the gnu lesser general public license from time to time. such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.  each version is given a distinguishing version number. if the library as you received it specifies that a certain numbered version of the gnu lesser general public license \"or any later version\" applies to it, you have the option of following the terms and conditions either of that published version or of any later version published by the free software foundation. if the library as you received it does not specify a version number of the gnu lesser general public license, you may choose any version of the gnu lesser general public license ever published by the free software foundation.  if the library as you received it specifies that a proxy can decide whether future versions of the gnu lesser general public license shall apply, that proxy's public statement of acceptance of any version is permanent authorization for you to choose that version for the library. ",
  "name": "pylops",
  "package_url": "https://pypi.org/project/pylops/",
  "project_url": "https://pypi.org/project/pylops/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/pylops/2.2.0/",
  "requires_dist": [
    "numpy >=1.21.0",
    "scipy >=1.4.0",
    "llvmlite ; extra == 'advanced'",
    "numba ; extra == 'advanced'",
    "pyfftw ; extra == 'advanced'",
    "PyWavelets ; extra == 'advanced'",
    "scikit-fmm ; extra == 'advanced'",
    "spgl1 ; extra == 'advanced'"
  ],
  "requires_python": "",
  "summary": "python library implementing linear operators to allow solving large-scale optimization problems",
  "version": "2.2.0",
  "releases": [],
  "developers": [
    "matteoravasi@gmail.com"
  ],
  "kwds": "pylops_b pylops_pydata2020 badges optimization pylops",
  "license_kwds": "gpl gnu license libraries definitions",
  "libtype": "pypi",
  "id": "pypi_pylops",
  "homepage": "",
  "release_count": 26,
  "dependency_ids": [
    "pypi_llvmlite",
    "pypi_numba",
    "pypi_numpy",
    "pypi_pyfftw",
    "pypi_pywavelets",
    "pypi_scikit_fmm",
    "pypi_scipy",
    "pypi_spgl1"
  ]
}
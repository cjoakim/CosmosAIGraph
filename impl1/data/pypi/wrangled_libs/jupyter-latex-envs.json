{
  "classifiers": [
    "intended audience :: end users/desktop",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: javascript",
    "programming language :: python",
    "programming language :: python :: 3",
    "topic :: utilities"
  ],
  "description": "(some) latex environments for jupyter notebook\n==============================================\n\nthis extension for jupyter notebook enables the use of some latex\ncommands and environments markdown cells.\n\n1. **latex commands and environments**\n\n   -  support for some latex commands within markdown cells, *e.g.*\n      ``\\textit``, ``\\textbf``, ``\\underline``.\n   -  support for **theorems-like environments**, support for labels and\n      cross references\n   -  support for **lists**: *enumerate, itemize*,\n   -  limited support for a **figure environment**,\n   -  support for an environment *listing*,\n   -  additional *textboxa* environment\n\n2. **citations and bibliography**\n\n   -  support for ``\\cite`` with creation of a references section\n\n3. **document-wide numbering of equations and environments, support for\n   ``\\label`` and ``\\ref``**\n4. **configuration toolbar**\n5. **latex\\_envs dropdown menu for a quick insertion of environments**\n6. **user's latex definitions** file can be loaded and used\n7. **export to plain html, slides and latex with a customized exporter**\n8. environments title/numbering can be customized by users in\n   ``user_envs.json`` config file.\n9. styles can be customized in the ``latex_env.css`` stylesheet\n10. **autocompletion** for \\$, (, {, [, for latex commands and environments\n\nmore environments can be simply added in ``user_envs.json`` or in the\nsource file (``thmsinnb4.js``).\n\nit is possible to export the notebooks to plain :math:`\\latex` and html\nwhile keeping all the features of the ``latex_envs`` notebook extension\nin the converted version. we provide specialized exporters, pre and post\nprocessors, templates. we also added entry-points to simplify the\nconversion process. it is now as simple as\n\n.. code:: bash\n\n    jupyter nbconvert --to html_with_lenvs file.ipynb\n\nor\n\n.. code:: bash\n\n    jupyter nbconvert --to latex_with_lenvs file.ipynb\n\nto convert ``file.ipynb`` into html/latex while keeping all the features\nof the ``latex_envs`` notebook extension in the converted version. other options are \n``slides_with_lenvs`` for converting to reveal-js presentations, and ``html_with_toclenvs`` to include a \ntable of contents. the \nlatex converter also expose several conversion options (read the\n`docs <https://rawgit.com/jfbercher/jupyter_latex_envs/master/src/latex_envs/static/doc/latex_env_doc.html>`__).\n\ndemo/documentation\n------------------\n\nthe ``doc`` subdirectory that constains an example notebook and its html\nand pdf versions. this serves as the documentation. a demo notebook\n``latex_env_doc.ipynb`` is provided. its html version is\n`latex\\_env\\_doc.html <https://rawgit.com/jfbercher/jupyter_latex_envs/master/src/latex_envs/static/doc/latex_env_doc.html>`__\nserves as \n`documentation <https://rawgit.com/jfbercher/jupyter_latex_envs/master/src/latex_envs/static/doc/latex_env_doc.html>`__.\n\ninstallation\n------------\n\nthe extension consists of a pypi package that includes a javascript\nnotebook extension, along with python code for nbconvert support. since\njupyter 4.2, pypi is the recommended way to distribute nbextensions. the\nextension can be installed\n\n-  from the master version on the github repo (this will be always the\n   most recent version)\n-  via pip for the version hosted on pypi\n-  via conda, from the `conda-forge <https://conda-forge.github.io/>`__\n   `channel <https://anaconda.org/conda-forge>`__\n-  as part of the great\n   `jupyter\\_contrib\\_nbextensions <https://github.com/ipython-contrib/jupyter_contrib_nbextensions>`__\n   collection. follow the instructions there for installing. once this\n   is done, you can open a tab at ``http://localhost:8888/nbextensions``\n   to enable and configure the various extensions.\n\nfrom the github repo or from pypi,\n\n1. install the package\n\n   -  ``pip3 install https://github.com/jfbercher/jupyter_latex_envs/archive/master.zip [--user][--upgrade]``\n   -  or ``pip3 install jupyter_latex_envs [--user][--upgrade]``\n   -  or clone the repo and install git clone\n      https://github.com/jfbercher/jupyter\\_latex\\_envs.git python3\n      setup.py install\n\n2. install the notebook extension\n\n   ::\n\n       jupyter nbextension install --py latex_envs [--user|--sys-prefix|--system]\n\n3. and enable it\n\n   ::\n\n       jupyter nbextension enable --py latex_envs [--user|--sys-prefix|--system]\n\nfor jupyter versions before 4.2, the situation after step 1 is more\ntricky, since the ``--py`` option isn't available, so you will have to\nfind the location of the source files manually as follows (instructions\nadapted from [@jcb91](https://github.com/jcb91)'s\n`jupyter\\_highlight\\_selected\\_word <https://github.com/jcb91/jupyter_highlight_selected_word>`__).\nexecute\n\n::\n\n    python -c \"import os.path as p; from latex_envs import __file__ as f, _jupyter_nbextension_paths as n; print(p.normpath(p.join(p.dirname(f), n()[0]['src'])))\"\n\nthen, issue\n\n::\n\n    jupyter nbextension install <output source directory>\n    jupyter nbextension enable latex_envs/latex_envs\n\nwhere ``<output source directory>`` is the output of the first python\ncommand.\n\ndisclaimer, sources and acknowledgments\n---------------------------------------\n\noriginally, i used a piece of code from the nice online markdown editor\n`stackedit <https://github.com/benweet/stackedit/issues/187>`__, where\nthe authors also considered the problem of incorporating latex markup in\ntheir markdown.\n\ni also studied and used examples and code from\n`ipython-contrib/jupyter\\_contrib\\_nbextensions <https://github.com/ipython-contrib/jupyter_contrib_nbextensions>`__.\n\n\n-  this is done in the hope it can be useful. however there are many\n   impovements possible, in the code and in the documentation.\n   **contributions will be welcome and deeply appreciated.**\n-  if you have issues, please post an issue at\n   ``https://github.com/jfbercher/jupyter_latex_envs/issues``\n   `here <https://github.com/jfbercher/jupyter_latex_envs/issues>`__.\n\n**self-promotion** -- like ``latex_envs``? please star and follow the\n`repository <https://github.com/jfbercher/jupyter_latex_envs>`__ on\ngithub.\n",
  "docs_url": null,
  "keywords": "",
  "license": "modified bsd",
  "name": "jupyter_latex_envs",
  "package_url": "https://pypi.org/project/jupyter_latex_envs/",
  "project_url": "https://pypi.org/project/jupyter_latex_envs/",
  "project_urls": {
    "Homepage": "https://github.com/jfbercher/jupyter_latex_envs"
  },
  "release_url": "https://pypi.org/project/jupyter_latex_envs/1.4.6/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "jupyter notebook extension which supports (some) latex environments within markdown cells. also provides support for labels and crossreferences, document wide numbering, bibliography, and more...",
  "version": "1.4.6",
  "releases": [],
  "developers": [
    "jean",
    "jf.bercher@gmail.com"
  ],
  "kwds": "jupyter_latex_envs jupyter_contrib_nbextensions documentation _jupyter_nbextension_paths jupyter",
  "license_kwds": "modified bsd",
  "libtype": "pypi",
  "id": "pypi_jupyter_latex_envs",
  "homepage": "https://github.com/jfbercher/jupyter_latex_envs",
  "release_count": 45,
  "dependency_ids": []
}
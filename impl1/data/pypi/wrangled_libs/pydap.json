{
  "classifiers": [
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9"
  ],
  "description": "pydap\n=====\n\n[![build status](https://travis-ci.org/pydap/pydap.svg)](https://travis-ci.org/pydap/pydap)\n[![python3](https://img.shields.io/badge/python-3-blue.svg)](https://www.python.org/downloads/)\n[![pypi](https://img.shields.io/pypi/v/pydap.svg?maxage=2592000?style=plastic)](https://pypi.python.org/pypi/pydap/)\n[![join the chat at https://gitter.im/pydap/pydap](https://badges.gitter.im/join%20chat.svg)](https://gitter.im/pydap/pydap) \n\n[pydap](https://pydap.github.io/pydap/) is an implementation of the\nopendap/dods protocol, written from scratch in pure python.  you can\nuse pydap to access scientific data on the internet without having to\ndownload it; instead, you work with special array and iterable objects\nthat download data on-the-fly as necessary, saving bandwidth and\ntime. the module also comes with a robust-but-lightweight opendap\nserver, implemented as a wsgi application.\n\n\nquickstart\n----------\n\nyou can install the latest version using\n[pip](http://pypi.python.org/pypi/pip). after [installing\npip](http://www.pip-installer.org/en/latest/installing.html) you can\ninstall pydap with this command:\n\n```bash\n    $ pip install pydap\n```\n\nthis will install pydap together with all the required\ndependencies. you can now open any remotely served dataset, and pydap\nwill download the accessed data on-the-fly as needed:\n\n```python\n\n    >>> from pydap.client import open_url\n    >>> dataset = open_url('http://test.opendap.org/dap/data/nc/coads_climatology.nc')\n    >>> var = dataset['sst']\n    >>> var.shape\n    (12, 90, 180)\n    >>> var.dtype\n    dtype('>f4')\n    >>> data = var[0,10:14,10:14]  # this will download data from the server\n    >>> data\n    <gridtype with array 'sst' and maps 'time', 'coadsy', 'coadsx'>\n    >>> print(data.data)\n    [array([[[ -1.26285708e+00,  -9.99999979e+33,  -9.99999979e+33,\n              -9.99999979e+33],\n            [ -7.69166648e-01,  -7.79999971e-01,  -6.75454497e-01,\n              -5.95714271e-01],\n            [  1.28333330e-01,  -5.00000156e-02,  -6.36363626e-02,\n              -1.41666666e-01],\n            [  6.38000011e-01,   8.95384610e-01,   7.21666634e-01,\n               8.10000002e-01]]], dtype=float32), array([ 366.]), array([-69., -67., -65., -63.]), array([ 41.,  43.,  45.,  47.])]\n```\n\nfor more information, please check the documentation on [using pydap\nas a client](https://pydap.github.io/pydap/client.html). pydap also\ncomes with a simple server, implemented as a [wsgi]( http://wsgi.org/)\napplication. to use it, you first need to install the server and\noptionally a data handler:\n\n```bash\n\n    $ pip install pydap[server,handlers.netcdf]\n```\n\nthis will install support for\n[netcdf](http://www.unidata.ucar.edu/software/netcdf/) files; more\n[handlers](https://pydap.github.io/pydap/handlers.html) for\ndifferent formats are available, if necessary. now create a directory\nfor your server data.\n\n\nto run the server just issue the command:\n\n```bash\n\n    $ pydap --data ./myserver/data/ --port 8001\n```\n\nthis will start a standalone server running on http://localhost:8001/,\nserving netcdf files from ``./myserver/data/``, similar to the test\nserver at http://test.pydap.org/. since the server uses the\n[wsgi](http://wsgi.org/) standard, it can easily be run behind\napache. the [server\ndocumentation](https://pydap.github.io/pydap/server.html) has\nmore information on how to better deploy pydap.\n\n## documentation\n\nfor more information, see [the pydap\ndocumentation](https://pydap.github.io/pydap/).\n\n## help\n\nif you need any help with pydap, please feel free to send an email to\nthe [mailing list](http://groups.google.com/group/pydap/)\n\n",
  "docs_url": null,
  "keywords": "opendap dods dap dap2 dap4 science data",
  "license": "mit",
  "name": "pydap",
  "package_url": "https://pypi.org/project/pydap/",
  "project_url": "https://pypi.org/project/pydap/",
  "project_urls": {
    "Homepage": "http://pydap.org/"
  },
  "release_url": "https://pypi.org/project/pydap/3.4.1/",
  "requires_dist": [
    "numpy",
    "Webob",
    "Jinja2",
    "docopt",
    "six (>=1.4.0)",
    "beautifulsoup4",
    "requests",
    "lxml ; extra == 'cas'",
    "Sphinx ; extra == 'docs'",
    "Pygments ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "gsw (==3.0.6) ; extra == 'functions'",
    "coards ; extra == 'functions'",
    "netCDF4 ; extra == 'handlers.netcdf'",
    "ordereddict ; extra == 'handlers.netcdf'",
    "netCDF4 ; extra == 'netcdf'",
    "ordereddict ; extra == 'netcdf'",
    "gunicorn ; extra == 'server'",
    "PasteDeploy ; extra == 'server'",
    "gsw (==3.0.6) ; extra == 'testing'",
    "coards ; extra == 'testing'",
    "lxml ; extra == 'testing'",
    "gunicorn ; extra == 'testing'",
    "PasteDeploy ; extra == 'testing'",
    "netCDF4 ; extra == 'testing'",
    "ordereddict ; extra == 'testing'",
    "pytest (>=3.6) ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pytest-attrib ; extra == 'testing'",
    "beautifulsoup4 ; extra == 'testing'",
    "requests-mock ; extra == 'testing'",
    "WebTest ; extra == 'testing'",
    "flake8 ; extra == 'testing'",
    "werkzeug ; extra == 'testing'",
    "pyopenssl ; extra == 'testing'",
    "pytest (>=3.6) ; extra == 'tests'",
    "pytest-cov ; extra == 'tests'",
    "pytest-attrib ; extra == 'tests'",
    "beautifulsoup4 ; extra == 'tests'",
    "requests-mock ; extra == 'tests'",
    "WebTest ; extra == 'tests'",
    "flake8 ; extra == 'tests'",
    "werkzeug ; extra == 'tests'",
    "pyopenssl ; extra == 'tests'"
  ],
  "requires_python": ">=3.7",
  "summary": "an implementation of the data access protocol.",
  "version": "3.4.1",
  "releases": [],
  "developers": [
    "james@hiebert.name",
    "james_hiebert",
    "roberto@dealmeida.net",
    "roberto_de_almeida"
  ],
  "kwds": "pydap dap2 dap4 python3 dap",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pydap",
  "homepage": "http://pydap.org/",
  "release_count": 44,
  "dependency_ids": [
    "pypi_beautifulsoup4",
    "pypi_coards",
    "pypi_docopt",
    "pypi_flake8",
    "pypi_gsw",
    "pypi_gunicorn",
    "pypi_jinja2",
    "pypi_lxml",
    "pypi_netcdf4",
    "pypi_numpy",
    "pypi_ordereddict",
    "pypi_pastedeploy",
    "pypi_pygments",
    "pypi_pyopenssl",
    "pypi_pytest",
    "pypi_pytest_attrib",
    "pypi_pytest_cov",
    "pypi_requests",
    "pypi_requests_mock",
    "pypi_six",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_webob",
    "pypi_webtest",
    "pypi_werkzeug"
  ]
}
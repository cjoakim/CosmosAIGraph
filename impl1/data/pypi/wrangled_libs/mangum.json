{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# mangum\n\n<a href=\"https://pypi.org/project/mangum/\">\n    <img src=\"https://badge.fury.io/py/mangum.svg\" alt=\"package version\">\n</a>\n<a href=\"https://travis-ci.org/jordaneremieff/mangum\">\n    <img src=\"https://travis-ci.org/jordaneremieff/mangum.svg?branch=master\" alt=\"build status\">\n</a>\n<img alt=\"pypi - python version\" src=\"https://img.shields.io/pypi/pyversions/mangum.svg?style=flat-square\">\n\nmangum is an adapter for running [asgi](https://asgi.readthedocs.io/en/latest/) applications in aws lambda to handle function url, api gateway, alb, and lambda@edge events.\n\n***documentation***: https://mangum.io/\n\n## features\n\n- event handlers for api gateway [http](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api.html) and [rest](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-rest-api.html) apis, [application load balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/lambda-functions.html), [function urls](https://docs.aws.amazon.com/lambda/latest/dg/lambda-urls.html), and [cloudfront lambda@edge](https://docs.aws.amazon.com/lambda/latest/dg/lambda-edge.html).\n\n- compatibility with asgi application frameworks, such as [starlette](https://www.starlette.io/), [fastapi](https://fastapi.tiangolo.com/), [quart](https://pgjones.gitlab.io/quart/) and [django](https://www.djangoproject.com/). \n\n- support for binary media types and payload compression in api gateway using gzip or brotli.\n\n- works with existing deployment and configuration tools, including [serverless framework](https://www.serverless.com/) and [aws sam](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html).\n\n- startup and shutdown [lifespan](https://asgi.readthedocs.io/en/latest/specs/lifespan.html) events.\n\n## requirements\n\npython 3.7+\n\n## installation\n\n```shell\npip install mangum\n```\n\n## example\n\n```python\nfrom mangum import mangum\n\nasync def app(scope, receive, send):\n    await send(\n        {\n            \"type\": \"http.response.start\",\n            \"status\": 200,\n            \"headers\": [[b\"content-type\", b\"text/plain; charset=utf-8\"]],\n        }\n    )\n    await send({\"type\": \"http.response.body\", \"body\": b\"hello, world!\"})\n\n\nhandler = mangum(app, lifespan=\"off\")\n```\n\nor using a framework:\n\n```python\nfrom fastapi import fastapi\nfrom mangum import mangum\n\napp = fastapi()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"hello\": \"world\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: str = none):\n    return {\"item_id\": item_id, \"q\": q}\n\nhandler = mangum(app, lifespan=\"off\")\n```\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "mangum",
  "package_url": "https://pypi.org/project/mangum/",
  "project_url": "https://pypi.org/project/mangum/",
  "project_urls": {
    "Homepage": "https://github.com/jordaneremieff/mangum"
  },
  "release_url": "https://pypi.org/project/mangum/0.17.0/",
  "requires_dist": [
    "typing-extensions"
  ],
  "requires_python": ">=3.7",
  "summary": "aws lambda support for asgi applications",
  "version": "0.17.0",
  "releases": [],
  "developers": [
    "jordan@eremieff.com",
    "jordan_eremieff"
  ],
  "kwds": "mangum asgi pip fury pypi",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_mangum",
  "homepage": "https://github.com/jordaneremieff/mangum",
  "release_count": 69,
  "dependency_ids": [
    "pypi_typing_extensions"
  ]
}
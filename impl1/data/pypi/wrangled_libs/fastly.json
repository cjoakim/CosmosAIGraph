{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# fastly-py\n\na python client library for interacting with most facets of the [fastly api](https://developer.fastly.com/reference/api).\n\n\n## requirements\n\npython >=3.6\n\n## installation\n\n```sh\npython3 -m pip install fastly\n```\n\n## usage\n\n```python\nimport fastly\nfrom fastly.api import acl_api\nfrom pprint import pprint\n\n# authorize the client with a fastly api token.\nconfiguration = fastly.configuration()\nconfiguration.api_token = 'your_api_key'\n\n# enter a context with an instance of the api client\nwith fastly.apiclient(configuration) as api_client:\n    # create an instance of the api class\n    api_instance = acl_api.aclapi(api_client)\n    service_id = \"su1z0isxpaozgvkxdv0ey\" # str\n    version_id = 1 # int\n    name = \"test-acl\" # str\n\n    try:\n        # create a new acl\n        api_response = api_instance.create_acl(service_id, version_id, name=name)\n        pprint(api_response)\n    except fastly.apiexception as e:\n        print(\"exception when calling aclapi->create_acl: %s\\n\" % e)\n```\n\n## authorization\n\nthe fastly api requires an [api token](https://developer.fastly.com/reference/api/#authentication) for most operations.  set it by assigning `api_token` to a configuration as shown:\n\n```python\n# authorize the client with a fastly api token.\nconfiguration = fastly.configuration()\nconfiguration.api_token = 'your_api_key'\n```\n\nalternatively, set the `fastly_api_token` environment variable.\n\n## documentation for api endpoints\n\nall uris are relative to *https://api.fastly.com*\n\nclass | method | http request | description\n------------ | ------------- | ------------- | -------------\n*aclapi* | [**create_acl**](docs/aclapi.md#create_acl) | **post** /service/{service_id}/version/{version_id}/acl | create a new acl\n*aclapi* | [**delete_acl**](docs/aclapi.md#delete_acl) | **delete** /service/{service_id}/version/{version_id}/acl/{acl_name} | delete an acl\n*aclapi* | [**get_acl**](docs/aclapi.md#get_acl) | **get** /service/{service_id}/version/{version_id}/acl/{acl_name} | describe an acl\n*aclapi* | [**list_acls**](docs/aclapi.md#list_acls) | **get** /service/{service_id}/version/{version_id}/acl | list acls\n*aclapi* | [**update_acl**](docs/aclapi.md#update_acl) | **put** /service/{service_id}/version/{version_id}/acl/{acl_name} | update an acl\n*aclentryapi* | [**bulk_update_acl_entries**](docs/aclentryapi.md#bulk_update_acl_entries) | **patch** /service/{service_id}/acl/{acl_id}/entries | update multiple acl entries\n*aclentryapi* | [**create_acl_entry**](docs/aclentryapi.md#create_acl_entry) | **post** /service/{service_id}/acl/{acl_id}/entry | create an acl entry\n*aclentryapi* | [**delete_acl_entry**](docs/aclentryapi.md#delete_acl_entry) | **delete** /service/{service_id}/acl/{acl_id}/entry/{acl_entry_id} | delete an acl entry\n*aclentryapi* | [**get_acl_entry**](docs/aclentryapi.md#get_acl_entry) | **get** /service/{service_id}/acl/{acl_id}/entry/{acl_entry_id} | describe an acl entry\n*aclentryapi* | [**list_acl_entries**](docs/aclentryapi.md#list_acl_entries) | **get** /service/{service_id}/acl/{acl_id}/entries | list acl entries\n*aclentryapi* | [**update_acl_entry**](docs/aclentryapi.md#update_acl_entry) | **patch** /service/{service_id}/acl/{acl_id}/entry/{acl_entry_id} | update an acl entry\n*apexredirectapi* | [**create_apex_redirect**](docs/apexredirectapi.md#create_apex_redirect) | **post** /service/{service_id}/version/{version_id}/apex-redirects | create an apex redirect\n*apexredirectapi* | [**delete_apex_redirect**](docs/apexredirectapi.md#delete_apex_redirect) | **delete** /apex-redirects/{apex_redirect_id} | delete an apex redirect\n*apexredirectapi* | [**get_apex_redirect**](docs/apexredirectapi.md#get_apex_redirect) | **get** /apex-redirects/{apex_redirect_id} | get an apex redirect\n*apexredirectapi* | [**list_apex_redirects**](docs/apexredirectapi.md#list_apex_redirects) | **get** /service/{service_id}/version/{version_id}/apex-redirects | list apex redirects\n*apexredirectapi* | [**update_apex_redirect**](docs/apexredirectapi.md#update_apex_redirect) | **put** /apex-redirects/{apex_redirect_id} | update an apex redirect\n*automationtokensapi* | [**create_automation_token**](docs/automationtokensapi.md#create_automation_token) | **post** /automation-tokens | create automation token\n*automationtokensapi* | [**get_automation_token_id**](docs/automationtokensapi.md#get_automation_token_id) | **get** /automation-tokens/{id} | retrieve an automation token by id\n*automationtokensapi* | [**get_automation_tokens_id_services**](docs/automationtokensapi.md#get_automation_tokens_id_services) | **get** /automation-tokens/{id}/services | list automation token services\n*automationtokensapi* | [**list_automation_tokens**](docs/automationtokensapi.md#list_automation_tokens) | **get** /automation-tokens | list customer automation tokens\n*automationtokensapi* | [**revoke_automation_token_id**](docs/automationtokensapi.md#revoke_automation_token_id) | **delete** /automation-tokens/{id} | revoke an automation token by id\n*backendapi* | [**create_backend**](docs/backendapi.md#create_backend) | **post** /service/{service_id}/version/{version_id}/backend | create a backend\n*backendapi* | [**delete_backend**](docs/backendapi.md#delete_backend) | **delete** /service/{service_id}/version/{version_id}/backend/{backend_name} | delete a backend\n*backendapi* | [**get_backend**](docs/backendapi.md#get_backend) | **get** /service/{service_id}/version/{version_id}/backend/{backend_name} | describe a backend\n*backendapi* | [**list_backends**](docs/backendapi.md#list_backends) | **get** /service/{service_id}/version/{version_id}/backend | list backends\n*backendapi* | [**update_backend**](docs/backendapi.md#update_backend) | **put** /service/{service_id}/version/{version_id}/backend/{backend_name} | update a backend\n*billingapi* | [**get_invoice**](docs/billingapi.md#get_invoice) | **get** /billing/v2/year/{year}/month/{month} | get an invoice\n*billingapi* | [**get_invoice_by_id**](docs/billingapi.md#get_invoice_by_id) | **get** /billing/v2/account_customers/{customer_id}/invoices/{invoice_id} | get an invoice\n*billingapi* | [**get_invoice_mtd**](docs/billingapi.md#get_invoice_mtd) | **get** /billing/v2/account_customers/{customer_id}/mtd_invoice | get month-to-date billing estimate\n*billingaddressapi* | [**add_billing_addr**](docs/billingaddressapi.md#add_billing_addr) | **post** /customer/{customer_id}/billing_address | add a billing address to a customer\n*billingaddressapi* | [**delete_billing_addr**](docs/billingaddressapi.md#delete_billing_addr) | **delete** /customer/{customer_id}/billing_address | delete a billing address\n*billingaddressapi* | [**get_billing_addr**](docs/billingaddressapi.md#get_billing_addr) | **get** /customer/{customer_id}/billing_address | get a billing address\n*billingaddressapi* | [**update_billing_addr**](docs/billingaddressapi.md#update_billing_addr) | **patch** /customer/{customer_id}/billing_address | update a billing address\n*cachesettingsapi* | [**create_cache_settings**](docs/cachesettingsapi.md#create_cache_settings) | **post** /service/{service_id}/version/{version_id}/cache_settings | create a cache settings object\n*cachesettingsapi* | [**delete_cache_settings**](docs/cachesettingsapi.md#delete_cache_settings) | **delete** /service/{service_id}/version/{version_id}/cache_settings/{cache_settings_name} | delete a cache settings object\n*cachesettingsapi* | [**get_cache_settings**](docs/cachesettingsapi.md#get_cache_settings) | **get** /service/{service_id}/version/{version_id}/cache_settings/{cache_settings_name} | get a cache settings object\n*cachesettingsapi* | [**list_cache_settings**](docs/cachesettingsapi.md#list_cache_settings) | **get** /service/{service_id}/version/{version_id}/cache_settings | list cache settings objects\n*cachesettingsapi* | [**update_cache_settings**](docs/cachesettingsapi.md#update_cache_settings) | **put** /service/{service_id}/version/{version_id}/cache_settings/{cache_settings_name} | update a cache settings object\n*conditionapi* | [**create_condition**](docs/conditionapi.md#create_condition) | **post** /service/{service_id}/version/{version_id}/condition | create a condition\n*conditionapi* | [**delete_condition**](docs/conditionapi.md#delete_condition) | **delete** /service/{service_id}/version/{version_id}/condition/{condition_name} | delete a condition\n*conditionapi* | [**get_condition**](docs/conditionapi.md#get_condition) | **get** /service/{service_id}/version/{version_id}/condition/{condition_name} | describe a condition\n*conditionapi* | [**list_conditions**](docs/conditionapi.md#list_conditions) | **get** /service/{service_id}/version/{version_id}/condition | list conditions\n*conditionapi* | [**update_condition**](docs/conditionapi.md#update_condition) | **put** /service/{service_id}/version/{version_id}/condition/{condition_name} | update a condition\n*configstoreapi* | [**create_config_store**](docs/configstoreapi.md#create_config_store) | **post** /resources/stores/config | create a config store\n*configstoreapi* | [**delete_config_store**](docs/configstoreapi.md#delete_config_store) | **delete** /resources/stores/config/{config_store_id} | delete a config store\n*configstoreapi* | [**get_config_store**](docs/configstoreapi.md#get_config_store) | **get** /resources/stores/config/{config_store_id} | describe a config store\n*configstoreapi* | [**get_config_store_info**](docs/configstoreapi.md#get_config_store_info) | **get** /resources/stores/config/{config_store_id}/info | get config store metadata\n*configstoreapi* | [**list_config_store_services**](docs/configstoreapi.md#list_config_store_services) | **get** /resources/stores/config/{config_store_id}/services | list linked services\n*configstoreapi* | [**list_config_stores**](docs/configstoreapi.md#list_config_stores) | **get** /resources/stores/config | list config stores\n*configstoreapi* | [**update_config_store**](docs/configstoreapi.md#update_config_store) | **put** /resources/stores/config/{config_store_id} | update a config store\n*configstoreitemapi* | [**bulk_update_config_store_item**](docs/configstoreitemapi.md#bulk_update_config_store_item) | **patch** /resources/stores/config/{config_store_id}/items | update multiple entries in a config store\n*configstoreitemapi* | [**create_config_store_item**](docs/configstoreitemapi.md#create_config_store_item) | **post** /resources/stores/config/{config_store_id}/item | create an entry in a config store\n*configstoreitemapi* | [**delete_config_store_item**](docs/configstoreitemapi.md#delete_config_store_item) | **delete** /resources/stores/config/{config_store_id}/item/{config_store_item_key} | delete an item from a config store\n*configstoreitemapi* | [**get_config_store_item**](docs/configstoreitemapi.md#get_config_store_item) | **get** /resources/stores/config/{config_store_id}/item/{config_store_item_key} | get an item from a config store\n*configstoreitemapi* | [**list_config_store_items**](docs/configstoreitemapi.md#list_config_store_items) | **get** /resources/stores/config/{config_store_id}/items | list items in a config store\n*configstoreitemapi* | [**update_config_store_item**](docs/configstoreitemapi.md#update_config_store_item) | **patch** /resources/stores/config/{config_store_id}/item/{config_store_item_key} | update an entry in a config store\n*configstoreitemapi* | [**upsert_config_store_item**](docs/configstoreitemapi.md#upsert_config_store_item) | **put** /resources/stores/config/{config_store_id}/item/{config_store_item_key} | insert or update an entry in a config store\n*contactapi* | [**create_contacts**](docs/contactapi.md#create_contacts) | **post** /customer/{customer_id}/contacts | add a new customer contact\n*contactapi* | [**delete_contact**](docs/contactapi.md#delete_contact) | **delete** /customer/{customer_id}/contact/{contact_id} | delete a contact\n*contactapi* | [**list_contacts**](docs/contactapi.md#list_contacts) | **get** /customer/{customer_id}/contacts | list contacts\n*contentapi* | [**content_check**](docs/contentapi.md#content_check) | **get** /content/edge_check | check status of content in each pop&#39;s cache\n*customerapi* | [**delete_customer**](docs/customerapi.md#delete_customer) | **delete** /customer/{customer_id} | delete a customer\n*customerapi* | [**get_customer**](docs/customerapi.md#get_customer) | **get** /customer/{customer_id} | get a customer\n*customerapi* | [**get_logged_in_customer**](docs/customerapi.md#get_logged_in_customer) | **get** /current_customer | get the logged in customer\n*customerapi* | [**list_users**](docs/customerapi.md#list_users) | **get** /customer/{customer_id}/users | list users\n*customerapi* | [**update_customer**](docs/customerapi.md#update_customer) | **put** /customer/{customer_id} | update a customer\n*dictionaryapi* | [**create_dictionary**](docs/dictionaryapi.md#create_dictionary) | **post** /service/{service_id}/version/{version_id}/dictionary | create an edge dictionary\n*dictionaryapi* | [**delete_dictionary**](docs/dictionaryapi.md#delete_dictionary) | **delete** /service/{service_id}/version/{version_id}/dictionary/{dictionary_name} | delete an edge dictionary\n*dictionaryapi* | [**get_dictionary**](docs/dictionaryapi.md#get_dictionary) | **get** /service/{service_id}/version/{version_id}/dictionary/{dictionary_name} | get an edge dictionary\n*dictionaryapi* | [**list_dictionaries**](docs/dictionaryapi.md#list_dictionaries) | **get** /service/{service_id}/version/{version_id}/dictionary | list edge dictionaries\n*dictionaryapi* | [**update_dictionary**](docs/dictionaryapi.md#update_dictionary) | **put** /service/{service_id}/version/{version_id}/dictionary/{dictionary_name} | update an edge dictionary\n*dictionaryinfoapi* | [**get_dictionary_info**](docs/dictionaryinfoapi.md#get_dictionary_info) | **get** /service/{service_id}/version/{version_id}/dictionary/{dictionary_id}/info | get edge dictionary metadata\n*dictionaryitemapi* | [**bulk_update_dictionary_item**](docs/dictionaryitemapi.md#bulk_update_dictionary_item) | **patch** /service/{service_id}/dictionary/{dictionary_id}/items | update multiple entries in an edge dictionary\n*dictionaryitemapi* | [**create_dictionary_item**](docs/dictionaryitemapi.md#create_dictionary_item) | **post** /service/{service_id}/dictionary/{dictionary_id}/item | create an entry in an edge dictionary\n*dictionaryitemapi* | [**delete_dictionary_item**](docs/dictionaryitemapi.md#delete_dictionary_item) | **delete** /service/{service_id}/dictionary/{dictionary_id}/item/{dictionary_item_key} | delete an item from an edge dictionary\n*dictionaryitemapi* | [**get_dictionary_item**](docs/dictionaryitemapi.md#get_dictionary_item) | **get** /service/{service_id}/dictionary/{dictionary_id}/item/{dictionary_item_key} | get an item from an edge dictionary\n*dictionaryitemapi* | [**list_dictionary_items**](docs/dictionaryitemapi.md#list_dictionary_items) | **get** /service/{service_id}/dictionary/{dictionary_id}/items | list items in an edge dictionary\n*dictionaryitemapi* | [**update_dictionary_item**](docs/dictionaryitemapi.md#update_dictionary_item) | **patch** /service/{service_id}/dictionary/{dictionary_id}/item/{dictionary_item_key} | update an entry in an edge dictionary\n*dictionaryitemapi* | [**upsert_dictionary_item**](docs/dictionaryitemapi.md#upsert_dictionary_item) | **put** /service/{service_id}/dictionary/{dictionary_id}/item/{dictionary_item_key} | insert or update an entry in an edge dictionary\n*diffapi* | [**diff_service_versions**](docs/diffapi.md#diff_service_versions) | **get** /service/{service_id}/diff/from/{from_version_id}/to/{to_version_id} | diff two service versions\n*directorapi* | [**create_director**](docs/directorapi.md#create_director) | **post** /service/{service_id}/version/{version_id}/director | create a director\n*directorapi* | [**delete_director**](docs/directorapi.md#delete_director) | **delete** /service/{service_id}/version/{version_id}/director/{director_name} | delete a director\n*directorapi* | [**get_director**](docs/directorapi.md#get_director) | **get** /service/{service_id}/version/{version_id}/director/{director_name} | get a director\n*directorapi* | [**list_directors**](docs/directorapi.md#list_directors) | **get** /service/{service_id}/version/{version_id}/director | list directors\n*directorapi* | [**update_director**](docs/directorapi.md#update_director) | **put** /service/{service_id}/version/{version_id}/director/{director_name} | update a director\n*directorbackendapi* | [**create_director_backend**](docs/directorbackendapi.md#create_director_backend) | **post** /service/{service_id}/version/{version_id}/director/{director_name}/backend/{backend_name} | create a director-backend relationship\n*directorbackendapi* | [**delete_director_backend**](docs/directorbackendapi.md#delete_director_backend) | **delete** /service/{service_id}/version/{version_id}/director/{director_name}/backend/{backend_name} | delete a director-backend relationship\n*directorbackendapi* | [**get_director_backend**](docs/directorbackendapi.md#get_director_backend) | **get** /service/{service_id}/version/{version_id}/director/{director_name}/backend/{backend_name} | get a director-backend relationship\n*domainapi* | [**check_domain**](docs/domainapi.md#check_domain) | **get** /service/{service_id}/version/{version_id}/domain/{domain_name}/check | validate dns configuration for a single domain on a service\n*domainapi* | [**check_domains**](docs/domainapi.md#check_domains) | **get** /service/{service_id}/version/{version_id}/domain/check_all | validate dns configuration for all domains on a service\n*domainapi* | [**create_domain**](docs/domainapi.md#create_domain) | **post** /service/{service_id}/version/{version_id}/domain | add a domain name to a service\n*domainapi* | [**delete_domain**](docs/domainapi.md#delete_domain) | **delete** /service/{service_id}/version/{version_id}/domain/{domain_name} | remove a domain from a service\n*domainapi* | [**get_domain**](docs/domainapi.md#get_domain) | **get** /service/{service_id}/version/{version_id}/domain/{domain_name} | describe a domain\n*domainapi* | [**list_domains**](docs/domainapi.md#list_domains) | **get** /service/{service_id}/version/{version_id}/domain | list domains\n*domainapi* | [**update_domain**](docs/domainapi.md#update_domain) | **put** /service/{service_id}/version/{version_id}/domain/{domain_name} | update a domain\n*domaininspectorhistoricalapi* | [**get_domain_inspector_historical**](docs/domaininspectorhistoricalapi.md#get_domain_inspector_historical) | **get** /metrics/domains/services/{service_id} | get historical domain data for a service\n*domaininspectorrealtimeapi* | [**get_domain_inspector_last120_seconds**](docs/domaininspectorrealtimeapi.md#get_domain_inspector_last120_seconds) | **get** /v1/domains/{service_id}/ts/h | get real-time domain data for the last 120 seconds\n*domaininspectorrealtimeapi* | [**get_domain_inspector_last_max_entries**](docs/domaininspectorrealtimeapi.md#get_domain_inspector_last_max_entries) | **get** /v1/domains/{service_id}/ts/h/limit/{max_entries} | get a limited number of real-time domain data entries\n*domaininspectorrealtimeapi* | [**get_domain_inspector_last_second**](docs/domaininspectorrealtimeapi.md#get_domain_inspector_last_second) | **get** /v1/domains/{service_id}/ts/{start_timestamp} | get real-time domain data from a specified time\n*domainownershipsapi* | [**list_domain_ownerships**](docs/domainownershipsapi.md#list_domain_ownerships) | **get** /domain-ownerships | list domain-ownerships\n*enabledproductsapi* | [**disable_product**](docs/enabledproductsapi.md#disable_product) | **delete** /enabled-products/{product_id}/services/{service_id} | disable a product\n*enabledproductsapi* | [**enable_product**](docs/enabledproductsapi.md#enable_product) | **put** /enabled-products/{product_id}/services/{service_id} | enable a product\n*enabledproductsapi* | [**get_enabled_product**](docs/enabledproductsapi.md#get_enabled_product) | **get** /enabled-products/{product_id}/services/{service_id} | get enabled product\n*eventsapi* | [**get_event**](docs/eventsapi.md#get_event) | **get** /events/{event_id} | get an event\n*eventsapi* | [**list_events**](docs/eventsapi.md#list_events) | **get** /events | list events\n*gzipapi* | [**create_gzip_config**](docs/gzipapi.md#create_gzip_config) | **post** /service/{service_id}/version/{version_id}/gzip | create a gzip configuration\n*gzipapi* | [**delete_gzip_config**](docs/gzipapi.md#delete_gzip_config) | **delete** /service/{service_id}/version/{version_id}/gzip/{gzip_name} | delete a gzip configuration\n*gzipapi* | [**get_gzip_configs**](docs/gzipapi.md#get_gzip_configs) | **get** /service/{service_id}/version/{version_id}/gzip/{gzip_name} | get a gzip configuration\n*gzipapi* | [**list_gzip_configs**](docs/gzipapi.md#list_gzip_configs) | **get** /service/{service_id}/version/{version_id}/gzip | list gzip configurations\n*gzipapi* | [**update_gzip_config**](docs/gzipapi.md#update_gzip_config) | **put** /service/{service_id}/version/{version_id}/gzip/{gzip_name} | update a gzip configuration\n*headerapi* | [**create_header_object**](docs/headerapi.md#create_header_object) | **post** /service/{service_id}/version/{version_id}/header | create a header object\n*headerapi* | [**delete_header_object**](docs/headerapi.md#delete_header_object) | **delete** /service/{service_id}/version/{version_id}/header/{header_name} | delete a header object\n*headerapi* | [**get_header_object**](docs/headerapi.md#get_header_object) | **get** /service/{service_id}/version/{version_id}/header/{header_name} | get a header object\n*headerapi* | [**list_header_objects**](docs/headerapi.md#list_header_objects) | **get** /service/{service_id}/version/{version_id}/header | list header objects\n*headerapi* | [**update_header_object**](docs/headerapi.md#update_header_object) | **put** /service/{service_id}/version/{version_id}/header/{header_name} | update a header object\n*healthcheckapi* | [**create_healthcheck**](docs/healthcheckapi.md#create_healthcheck) | **post** /service/{service_id}/version/{version_id}/healthcheck | create a health check\n*healthcheckapi* | [**delete_healthcheck**](docs/healthcheckapi.md#delete_healthcheck) | **delete** /service/{service_id}/version/{version_id}/healthcheck/{healthcheck_name} | delete a health check\n*healthcheckapi* | [**get_healthcheck**](docs/healthcheckapi.md#get_healthcheck) | **get** /service/{service_id}/version/{version_id}/healthcheck/{healthcheck_name} | get a health check\n*healthcheckapi* | [**list_healthchecks**](docs/healthcheckapi.md#list_healthchecks) | **get** /service/{service_id}/version/{version_id}/healthcheck | list health checks\n*healthcheckapi* | [**update_healthcheck**](docs/healthcheckapi.md#update_healthcheck) | **put** /service/{service_id}/version/{version_id}/healthcheck/{healthcheck_name} | update a health check\n*historicalapi* | [**get_hist_stats**](docs/historicalapi.md#get_hist_stats) | **get** /stats | get historical stats\n*historicalapi* | [**get_hist_stats_aggregated**](docs/historicalapi.md#get_hist_stats_aggregated) | **get** /stats/aggregate | get aggregated historical stats\n*historicalapi* | [**get_hist_stats_field**](docs/historicalapi.md#get_hist_stats_field) | **get** /stats/field/{field} | get historical stats for a single field\n*historicalapi* | [**get_hist_stats_service**](docs/historicalapi.md#get_hist_stats_service) | **get** /stats/service/{service_id} | get historical stats for a single service\n*historicalapi* | [**get_hist_stats_service_field**](docs/historicalapi.md#get_hist_stats_service_field) | **get** /stats/service/{service_id}/field/{field} | get historical stats for a single service/field combination\n*historicalapi* | [**get_regions**](docs/historicalapi.md#get_regions) | **get** /stats/regions | get region codes\n*historicalapi* | [**get_usage**](docs/historicalapi.md#get_usage) | **get** /stats/usage | get usage statistics\n*historicalapi* | [**get_usage_month**](docs/historicalapi.md#get_usage_month) | **get** /stats/usage_by_month | get month-to-date usage statistics\n*historicalapi* | [**get_usage_service**](docs/historicalapi.md#get_usage_service) | **get** /stats/usage_by_service | get usage statistics per service\n*http3api* | [**create_http3**](docs/http3api.md#create_http3) | **post** /service/{service_id}/version/{version_id}/http3 | enable support for http/3\n*http3api* | [**delete_http3**](docs/http3api.md#delete_http3) | **delete** /service/{service_id}/version/{version_id}/http3 | disable support for http/3\n*http3api* | [**get_http3**](docs/http3api.md#get_http3) | **get** /service/{service_id}/version/{version_id}/http3 | get http/3 status\n*iampermissionsapi* | [**list_permissions**](docs/iampermissionsapi.md#list_permissions) | **get** /permissions | list permissions\n*iamrolesapi* | [**add_role_permissions**](docs/iamrolesapi.md#add_role_permissions) | **post** /roles/{role_id}/permissions | add permissions to a role\n*iamrolesapi* | [**create_a_role**](docs/iamrolesapi.md#create_a_role) | **post** /roles | create a role\n*iamrolesapi* | [**delete_a_role**](docs/iamrolesapi.md#delete_a_role) | **delete** /roles/{role_id} | delete a role\n*iamrolesapi* | [**get_a_role**](docs/iamrolesapi.md#get_a_role) | **get** /roles/{role_id} | get a role\n*iamrolesapi* | [**list_role_permissions**](docs/iamrolesapi.md#list_role_permissions) | **get** /roles/{role_id}/permissions | list permissions in a role\n*iamrolesapi* | [**list_roles**](docs/iamrolesapi.md#list_roles) | **get** /roles | list roles\n*iamrolesapi* | [**remove_role_permissions**](docs/iamrolesapi.md#remove_role_permissions) | **delete** /roles/{role_id}/permissions | remove permissions from a role\n*iamrolesapi* | [**update_a_role**](docs/iamrolesapi.md#update_a_role) | **patch** /roles/{role_id} | update a role\n*iamservicegroupsapi* | [**add_service_group_services**](docs/iamservicegroupsapi.md#add_service_group_services) | **post** /service-groups/{service_group_id}/services | add services in a service group\n*iamservicegroupsapi* | [**create_a_service_group**](docs/iamservicegroupsapi.md#create_a_service_group) | **post** /service-groups | create a service group\n*iamservicegroupsapi* | [**delete_a_service_group**](docs/iamservicegroupsapi.md#delete_a_service_group) | **delete** /service-groups/{service_group_id} | delete a service group\n*iamservicegroupsapi* | [**get_a_service_group**](docs/iamservicegroupsapi.md#get_a_service_group) | **get** /service-groups/{service_group_id} | get a service group\n*iamservicegroupsapi* | [**list_service_group_services**](docs/iamservicegroupsapi.md#list_service_group_services) | **get** /service-groups/{service_group_id}/services | list services to a service group\n*iamservicegroupsapi* | [**list_service_groups**](docs/iamservicegroupsapi.md#list_service_groups) | **get** /service-groups | list service groups\n*iamservicegroupsapi* | [**remove_service_group_services**](docs/iamservicegroupsapi.md#remove_service_group_services) | **delete** /service-groups/{service_group_id}/services | remove services from a service group\n*iamservicegroupsapi* | [**update_a_service_group**](docs/iamservicegroupsapi.md#update_a_service_group) | **patch** /service-groups/{service_group_id} | update a service group\n*iamusergroupsapi* | [**add_user_group_members**](docs/iamusergroupsapi.md#add_user_group_members) | **post** /user-groups/{user_group_id}/members | add members to a user group\n*iamusergroupsapi* | [**add_user_group_roles**](docs/iamusergroupsapi.md#add_user_group_roles) | **post** /user-groups/{user_group_id}/roles | add roles to a user group\n*iamusergroupsapi* | [**add_user_group_service_groups**](docs/iamusergroupsapi.md#add_user_group_service_groups) | **post** /user-groups/{user_group_id}/service-groups | add service groups to a user group\n*iamusergroupsapi* | [**create_a_user_group**](docs/iamusergroupsapi.md#create_a_user_group) | **post** /user-groups | create a user group\n*iamusergroupsapi* | [**delete_a_user_group**](docs/iamusergroupsapi.md#delete_a_user_group) | **delete** /user-groups/{user_group_id} | delete a user group\n*iamusergroupsapi* | [**get_a_user_group**](docs/iamusergroupsapi.md#get_a_user_group) | **get** /user-groups/{user_group_id} | get a user group\n*iamusergroupsapi* | [**list_user_group_members**](docs/iamusergroupsapi.md#list_user_group_members) | **get** /user-groups/{user_group_id}/members | list members of a user group\n*iamusergroupsapi* | [**list_user_group_roles**](docs/iamusergroupsapi.md#list_user_group_roles) | **get** /user-groups/{user_group_id}/roles | list roles in a user group\n*iamusergroupsapi* | [**list_user_group_service_groups**](docs/iamusergroupsapi.md#list_user_group_service_groups) | **get** /user-groups/{user_group_id}/service-groups | list service groups in a user group\n*iamusergroupsapi* | [**list_user_groups**](docs/iamusergroupsapi.md#list_user_groups) | **get** /user-groups | list user groups\n*iamusergroupsapi* | [**remove_user_group_members**](docs/iamusergroupsapi.md#remove_user_group_members) | **delete** /user-groups/{user_group_id}/members | remove members of a user group\n*iamusergroupsapi* | [**remove_user_group_roles**](docs/iamusergroupsapi.md#remove_user_group_roles) | **delete** /user-groups/{user_group_id}/roles | remove roles from a user group\n*iamusergroupsapi* | [**remove_user_group_service_groups**](docs/iamusergroupsapi.md#remove_user_group_service_groups) | **delete** /user-groups/{user_group_id}/service-groups | remove service groups from a user group\n*iamusergroupsapi* | [**update_a_user_group**](docs/iamusergroupsapi.md#update_a_user_group) | **patch** /user-groups/{user_group_id} | update a user group\n*invitationsapi* | [**create_invitation**](docs/invitationsapi.md#create_invitation) | **post** /invitations | create an invitation\n*invitationsapi* | [**delete_invitation**](docs/invitationsapi.md#delete_invitation) | **delete** /invitations/{invitation_id} | delete an invitation\n*invitationsapi* | [**list_invitations**](docs/invitationsapi.md#list_invitations) | **get** /invitations | list invitations\n*kvstoreapi* | [**create_store**](docs/kvstoreapi.md#create_store) | **post** /resources/stores/kv | create a kv store.\n*kvstoreapi* | [**delete_store**](docs/kvstoreapi.md#delete_store) | **delete** /resources/stores/kv/{store_id} | delete a kv store.\n*kvstoreapi* | [**get_store**](docs/kvstoreapi.md#get_store) | **get** /resources/stores/kv/{store_id} | describe a kv store.\n*kvstoreapi* | [**get_stores**](docs/kvstoreapi.md#get_stores) | **get** /resources/stores/kv | list kv stores.\n*kvstoreitemapi* | [**delete_key_from_store**](docs/kvstoreitemapi.md#delete_key_from_store) | **delete** /resources/stores/kv/{store_id}/keys/{key_name} | delete kv store item.\n*kvstoreitemapi* | [**get_keys**](docs/kvstoreitemapi.md#get_keys) | **get** /resources/stores/kv/{store_id}/keys | list kv store keys.\n*kvstoreitemapi* | [**get_value_for_key**](docs/kvstoreitemapi.md#get_value_for_key) | **get** /resources/stores/kv/{store_id}/keys/{key_name} | get the value of an kv store item\n*kvstoreitemapi* | [**set_value_for_key**](docs/kvstoreitemapi.md#set_value_for_key) | **put** /resources/stores/kv/{store_id}/keys/{key_name} | insert an item into an kv store\n*legacywafconfigurationsetsapi* | [**list_waf_config_sets**](docs/legacywafconfigurationsetsapi.md#list_waf_config_sets) | **get** /wafs/configuration_sets | list configuration sets\n*legacywafconfigurationsetsapi* | [**list_wafs_config_set**](docs/legacywafconfigurationsetsapi.md#list_wafs_config_set) | **get** /wafs/configuration_sets/{configuration_set_id}/relationships/wafs | list wafs currently using a configuration set\n*legacywafconfigurationsetsapi* | [**use_waf_config_set**](docs/legacywafconfigurationsetsapi.md#use_waf_config_set) | **patch** /wafs/configuration_sets/{configuration_set_id}/relationships/wafs | apply a configuration set to a waf\n*legacywaffirewallapi* | [**create_legacy_waf_firewall_service**](docs/legacywaffirewallapi.md#create_legacy_waf_firewall_service) | **post** /service/{service_id}/version/{version_id}/wafs | create a firewall\n*legacywaffirewallapi* | [**disable_legacy_waf_firewall**](docs/legacywaffirewallapi.md#disable_legacy_waf_firewall) | **patch** /wafs/{firewall_id}/disable | disable a firewall\n*legacywaffirewallapi* | [**enable_legacy_waf_firewall**](docs/legacywaffirewallapi.md#enable_legacy_waf_firewall) | **patch** /wafs/{firewall_id}/enable | enable a firewall\n*legacywaffirewallapi* | [**get_legacy_waf_firewall**](docs/legacywaffirewallapi.md#get_legacy_waf_firewall) | **get** /wafs/{firewall_id} | get a firewall object\n*legacywaffirewallapi* | [**get_legacy_waf_firewall_service**](docs/legacywaffirewallapi.md#get_legacy_waf_firewall_service) | **get** /service/{service_id}/version/{version_id}/wafs/{firewall_id} | get a firewall\n*legacywaffirewallapi* | [**list_legacy_waf_firewalls**](docs/legacywaffirewallapi.md#list_legacy_waf_firewalls) | **get** /wafs | list active firewalls\n*legacywaffirewallapi* | [**list_legacy_waf_firewalls_service**](docs/legacywaffirewallapi.md#list_legacy_waf_firewalls_service) | **get** /service/{service_id}/version/{version_id}/wafs | list firewalls\n*legacywaffirewallapi* | [**update_legacy_waf_firewall_service**](docs/legacywaffirewallapi.md#update_legacy_waf_firewall_service) | **patch** /service/{service_id}/version/{version_id}/wafs/{firewall_id} | update a firewall\n*legacywafowaspapi* | [**create_owasp_settings**](docs/legacywafowaspapi.md#create_owasp_settings) | **post** /service/{service_id}/wafs/{firewall_id}/owasp | create an owasp settings object\n*legacywafowaspapi* | [**get_owasp_settings**](docs/legacywafowaspapi.md#get_owasp_settings) | **get** /service/{service_id}/wafs/{firewall_id}/owasp | get the owasp settings object\n*legacywafowaspapi* | [**update_owasp_settings**](docs/legacywafowaspapi.md#update_owasp_settings) | **patch** /service/{service_id}/wafs/{firewall_id}/owasp | update the owasp settings object\n*legacywafruleapi* | [**get_legacy_waf_firewall_rule_vcl**](docs/legacywafruleapi.md#get_legacy_waf_firewall_rule_vcl) | **get** /wafs/{firewall_id}/rules/{waf_rule_id}/vcl | get vcl for a rule associated with a firewall\n*legacywafruleapi* | [**get_legacy_waf_rule**](docs/legacywafruleapi.md#get_legacy_waf_rule) | **get** /wafs/rules/{waf_rule_id} | get a rule\n*legacywafruleapi* | [**get_legacy_waf_rule_vcl**](docs/legacywafruleapi.md#get_legacy_waf_rule_vcl) | **get** /wafs/rules/{waf_rule_id}/vcl | get vcl for a rule\n*legacywafruleapi* | [**list_legacy_waf_rules**](docs/legacywafruleapi.md#list_legacy_waf_rules) | **get** /wafs/rules | list rules in the latest configuration set\n*legacywafrulestatusapi* | [**get_waf_firewall_rule_status**](docs/legacywafrulestatusapi.md#get_waf_firewall_rule_status) | **get** /service/{service_id}/wafs/{firewall_id}/rules/{waf_rule_id}/rule_status | get the status of a rule on a firewall\n*legacywafrulestatusapi* | [**list_waf_firewall_rule_statuses**](docs/legacywafrulestatusapi.md#list_waf_firewall_rule_statuses) | **get** /service/{service_id}/wafs/{firewall_id}/rule_statuses | list rule statuses\n*legacywafrulestatusapi* | [**update_waf_firewall_rule_status**](docs/legacywafrulestatusapi.md#update_waf_firewall_rule_status) | **patch** /service/{service_id}/wafs/{firewall_id}/rules/{waf_rule_id}/rule_status | update the status of a rule\n*legacywafrulestatusapi* | [**update_waf_firewall_rule_statuses_tag**](docs/legacywafrulestatusapi.md#update_waf_firewall_rule_statuses_tag) | **post** /service/{service_id}/wafs/{firewall_id}/rule_statuses | create or update status of a tagged group of rules\n*legacywafrulesetapi* | [**get_waf_ruleset**](docs/legacywafrulesetapi.md#get_waf_ruleset) | **get** /service/{service_id}/wafs/{firewall_id}/ruleset | get a waf ruleset\n*legacywafrulesetapi* | [**get_waf_ruleset_vcl**](docs/legacywafrulesetapi.md#get_waf_ruleset_vcl) | **get** /service/{service_id}/wafs/{firewall_id}/ruleset/preview | generate waf ruleset vcl\n*legacywafrulesetapi* | [**update_waf_ruleset**](docs/legacywafrulesetapi.md#update_waf_ruleset) | **patch** /service/{service_id}/wafs/{firewall_id}/ruleset | update a waf ruleset\n*legacywaftagapi* | [**list_legacy_waf_tags**](docs/legacywaftagapi.md#list_legacy_waf_tags) | **get** /wafs/tags | list waf tags\n*legacywafupdatestatusapi* | [**get_waf_update_status**](docs/legacywafupdatestatusapi.md#get_waf_update_status) | **get** /service/{service_id}/wafs/{firewall_id}/update_statuses/{update_status_id} | get the status of a waf update\n*legacywafupdatestatusapi* | [**list_waf_update_statuses**](docs/legacywafupdatestatusapi.md#list_waf_update_statuses) | **get** /service/{service_id}/wafs/{firewall_id}/update_statuses | list update statuses\n*loggingazureblobapi* | [**create_log_azure**](docs/loggingazureblobapi.md#create_log_azure) | **post** /service/{service_id}/version/{version_id}/logging/azureblob | create an azure blob storage log endpoint\n*loggingazureblobapi* | [**delete_log_azure**](docs/loggingazureblobapi.md#delete_log_azure) | **delete** /service/{service_id}/version/{version_id}/logging/azureblob/{logging_azureblob_name} | delete the azure blob storage log endpoint\n*loggingazureblobapi* | [**get_log_azure**](docs/loggingazureblobapi.md#get_log_azure) | **get** /service/{service_id}/version/{version_id}/logging/azureblob/{logging_azureblob_name} | get an azure blob storage log endpoint\n*loggingazureblobapi* | [**list_log_azure**](docs/loggingazureblobapi.md#list_log_azure) | **get** /service/{service_id}/version/{version_id}/logging/azureblob | list azure blob storage log endpoints\n*loggingazureblobapi* | [**update_log_azure**](docs/loggingazureblobapi.md#update_log_azure) | **put** /service/{service_id}/version/{version_id}/logging/azureblob/{logging_azureblob_name} | update an azure blob storage log endpoint\n*loggingbigqueryapi* | [**create_log_bigquery**](docs/loggingbigqueryapi.md#create_log_bigquery) | **post** /service/{service_id}/version/{version_id}/logging/bigquery | create a bigquery log endpoint\n*loggingbigqueryapi* | [**delete_log_bigquery**](docs/loggingbigqueryapi.md#delete_log_bigquery) | **delete** /service/{service_id}/version/{version_id}/logging/bigquery/{logging_bigquery_name} | delete a bigquery log endpoint\n*loggingbigqueryapi* | [**get_log_bigquery**](docs/loggingbigqueryapi.md#get_log_bigquery) | **get** /service/{service_id}/version/{version_id}/logging/bigquery/{logging_bigquery_name} | get a bigquery log endpoint\n*loggingbigqueryapi* | [**list_log_bigquery**](docs/loggingbigqueryapi.md#list_log_bigquery) | **get** /service/{service_id}/version/{version_id}/logging/bigquery | list bigquery log endpoints\n*loggingbigqueryapi* | [**update_log_bigquery**](docs/loggingbigqueryapi.md#update_log_bigquery) | **put** /service/{service_id}/version/{version_id}/logging/bigquery/{logging_bigquery_name} | update a bigquery log endpoint\n*loggingcloudfilesapi* | [**create_log_cloudfiles**](docs/loggingcloudfilesapi.md#create_log_cloudfiles) | **post** /service/{service_id}/version/{version_id}/logging/cloudfiles | create a cloud files log endpoint\n*loggingcloudfilesapi* | [**delete_log_cloudfiles**](docs/loggingcloudfilesapi.md#delete_log_cloudfiles) | **delete** /service/{service_id}/version/{version_id}/logging/cloudfiles/{logging_cloudfiles_name} | delete the cloud files log endpoint\n*loggingcloudfilesapi* | [**get_log_cloudfiles**](docs/loggingcloudfilesapi.md#get_log_cloudfiles) | **get** /service/{service_id}/version/{version_id}/logging/cloudfiles/{logging_cloudfiles_name} | get a cloud files log endpoint\n*loggingcloudfilesapi* | [**list_log_cloudfiles**](docs/loggingcloudfilesapi.md#list_log_cloudfiles) | **get** /service/{service_id}/version/{version_id}/logging/cloudfiles | list cloud files log endpoints\n*loggingcloudfilesapi* | [**update_log_cloudfiles**](docs/loggingcloudfilesapi.md#update_log_cloudfiles) | **put** /service/{service_id}/version/{version_id}/logging/cloudfiles/{logging_cloudfiles_name} | update the cloud files log endpoint\n*loggingdatadogapi* | [**create_log_datadog**](docs/loggingdatadogapi.md#create_log_datadog) | **post** /service/{service_id}/version/{version_id}/logging/datadog | create a datadog log endpoint\n*loggingdatadogapi* | [**delete_log_datadog**](docs/loggingdatadogapi.md#delete_log_datadog) | **delete** /service/{service_id}/version/{version_id}/logging/datadog/{logging_datadog_name} | delete a datadog log endpoint\n*loggingdatadogapi* | [**get_log_datadog**](docs/loggingdatadogapi.md#get_log_datadog) | **get** /service/{service_id}/version/{version_id}/logging/datadog/{logging_datadog_name} | get a datadog log endpoint\n*loggingdatadogapi* | [**list_log_datadog**](docs/loggingdatadogapi.md#list_log_datadog) | **get** /service/{service_id}/version/{version_id}/logging/datadog | list datadog log endpoints\n*loggingdatadogapi* | [**update_log_datadog**](docs/loggingdatadogapi.md#update_log_datadog) | **put** /service/{service_id}/version/{version_id}/logging/datadog/{logging_datadog_name} | update a datadog log endpoint\n*loggingdigitaloceanapi* | [**create_log_digocean**](docs/loggingdigitaloceanapi.md#create_log_digocean) | **post** /service/{service_id}/version/{version_id}/logging/digitalocean | create a digitalocean spaces log endpoint\n*loggingdigitaloceanapi* | [**delete_log_digocean**](docs/loggingdigitaloceanapi.md#delete_log_digocean) | **delete** /service/{service_id}/version/{version_id}/logging/digitalocean/{logging_digitalocean_name} | delete a digitalocean spaces log endpoint\n*loggingdigitaloceanapi* | [**get_log_digocean**](docs/loggingdigitaloceanapi.md#get_log_digocean) | **get** /service/{service_id}/version/{version_id}/logging/digitalocean/{logging_digitalocean_name} | get a digitalocean spaces log endpoint\n*loggingdigitaloceanapi* | [**list_log_digocean**](docs/loggingdigitaloceanapi.md#list_log_digocean) | **get** /service/{service_id}/version/{version_id}/logging/digitalocean | list digitalocean spaces log endpoints\n*loggingdigitaloceanapi* | [**update_log_digocean**](docs/loggingdigitaloceanapi.md#update_log_digocean) | **put** /service/{service_id}/version/{version_id}/logging/digitalocean/{logging_digitalocean_name} | update a digitalocean spaces log endpoint\n*loggingelasticsearchapi* | [**create_log_elasticsearch**](docs/loggingelasticsearchapi.md#create_log_elasticsearch) | **post** /service/{service_id}/version/{version_id}/logging/elasticsearch | create an elasticsearch log endpoint\n*loggingelasticsearchapi* | [**delete_log_elasticsearch**](docs/loggingelasticsearchapi.md#delete_log_elasticsearch) | **delete** /service/{service_id}/version/{version_id}/logging/elasticsearch/{logging_elasticsearch_name} | delete an elasticsearch log endpoint\n*loggingelasticsearchapi* | [**get_log_elasticsearch**](docs/loggingelasticsearchapi.md#get_log_elasticsearch) | **get** /service/{service_id}/version/{version_id}/logging/elasticsearch/{logging_elasticsearch_name} | get an elasticsearch log endpoint\n*loggingelasticsearchapi* | [**list_log_elasticsearch**](docs/loggingelasticsearchapi.md#list_log_elasticsearch) | **get** /service/{service_id}/version/{version_id}/logging/elasticsearch | list elasticsearch log endpoints\n*loggingelasticsearchapi* | [**update_log_elasticsearch**](docs/loggingelasticsearchapi.md#update_log_elasticsearch) | **put** /service/{service_id}/version/{version_id}/logging/elasticsearch/{logging_elasticsearch_name} | update an elasticsearch log endpoint\n*loggingftpapi* | [**create_log_ftp**](docs/loggingftpapi.md#create_log_ftp) | **post** /service/{service_id}/version/{version_id}/logging/ftp | create an ftp log endpoint\n*loggingftpapi* | [**delete_log_ftp**](docs/loggingftpapi.md#delete_log_ftp) | **delete** /service/{service_id}/version/{version_id}/logging/ftp/{logging_ftp_name} | delete an ftp log endpoint\n*loggingftpapi* | [**get_log_ftp**](docs/loggingftpapi.md#get_log_ftp) | **get** /service/{service_id}/version/{version_id}/logging/ftp/{logging_ftp_name} | get an ftp log endpoint\n*loggingftpapi* | [**list_log_ftp**](docs/loggingftpapi.md#list_log_ftp) | **get** /service/{service_id}/version/{version_id}/logging/ftp | list ftp log endpoints\n*loggingftpapi* | [**update_log_ftp**](docs/loggingftpapi.md#update_log_ftp) | **put** /service/{service_id}/version/{version_id}/logging/ftp/{logging_ftp_name} | update an ftp log endpoint\n*logginggcsapi* | [**create_log_gcs**](docs/logginggcsapi.md#create_log_gcs) | **post** /service/{service_id}/version/{version_id}/logging/gcs | create a gcs log endpoint\n*logginggcsapi* | [**delete_log_gcs**](docs/logginggcsapi.md#delete_log_gcs) | **delete** /service/{service_id}/version/{version_id}/logging/gcs/{logging_gcs_name} | delete a gcs log endpoint\n*logginggcsapi* | [**get_log_gcs**](docs/logginggcsapi.md#get_log_gcs) | **get** /service/{service_id}/version/{version_id}/logging/gcs/{logging_gcs_name} | get a gcs log endpoint\n*logginggcsapi* | [**list_log_gcs**](docs/logginggcsapi.md#list_log_gcs) | **get** /service/{service_id}/version/{version_id}/logging/gcs | list gcs log endpoints\n*logginggcsapi* | [**update_log_gcs**](docs/logginggcsapi.md#update_log_gcs) | **put** /service/{service_id}/version/{version_id}/logging/gcs/{logging_gcs_name} | update a gcs log endpoint\n*loggingherokuapi* | [**create_log_heroku**](docs/loggingherokuapi.md#create_log_heroku) | **post** /service/{service_id}/version/{version_id}/logging/heroku | create a heroku log endpoint\n*loggingherokuapi* | [**delete_log_heroku**](docs/loggingherokuapi.md#delete_log_heroku) | **delete** /service/{service_id}/version/{version_id}/logging/heroku/{logging_heroku_name} | delete the heroku log endpoint\n*loggingherokuapi* | [**get_log_heroku**](docs/loggingherokuapi.md#get_log_heroku) | **get** /service/{service_id}/version/{version_id}/logging/heroku/{logging_heroku_name} | get a heroku log endpoint\n*loggingherokuapi* | [**list_log_heroku**](docs/loggingherokuapi.md#list_log_heroku) | **get** /service/{service_id}/version/{version_id}/logging/heroku | list heroku log endpoints\n*loggingherokuapi* | [**update_log_heroku**](docs/loggingherokuapi.md#update_log_heroku) | **put** /service/{service_id}/version/{version_id}/logging/heroku/{logging_heroku_name} | update the heroku log endpoint\n*logginghoneycombapi* | [**create_log_honeycomb**](docs/logginghoneycombapi.md#create_log_honeycomb) | **post** /service/{service_id}/version/{version_id}/logging/honeycomb | create a honeycomb log endpoint\n*logginghoneycombapi* | [**delete_log_honeycomb**](docs/logginghoneycombapi.md#delete_log_honeycomb) | **delete** /service/{service_id}/version/{version_id}/logging/honeycomb/{logging_honeycomb_name} | delete the honeycomb log endpoint\n*logginghoneycombapi* | [**get_log_honeycomb**](docs/logginghoneycombapi.md#get_log_honeycomb) | **get** /service/{service_id}/version/{version_id}/logging/honeycomb/{logging_honeycomb_name} | get a honeycomb log endpoint\n*logginghoneycombapi* | [**list_log_honeycomb**](docs/logginghoneycombapi.md#list_log_honeycomb) | **get** /service/{service_id}/version/{version_id}/logging/honeycomb | list honeycomb log endpoints\n*logginghoneycombapi* | [**update_log_honeycomb**](docs/logginghoneycombapi.md#update_log_honeycomb) | **put** /service/{service_id}/version/{version_id}/logging/honeycomb/{logging_honeycomb_name} | update a honeycomb log endpoint\n*logginghttpsapi* | [**create_log_https**](docs/logginghttpsapi.md#create_log_https) | **post** /service/{service_id}/version/{version_id}/logging/https | create an https log endpoint\n*logginghttpsapi* | [**delete_log_https**](docs/logginghttpsapi.md#delete_log_https) | **delete** /service/{service_id}/version/{version_id}/logging/https/{logging_https_name} | delete an https log endpoint\n*logginghttpsapi* | [**get_log_https**](docs/logginghttpsapi.md#get_log_https) | **get** /service/{service_id}/version/{version_id}/logging/https/{logging_https_name} | get an https log endpoint\n*logginghttpsapi* | [**list_log_https**](docs/logginghttpsapi.md#list_log_https) | **get** /service/{service_id}/version/{version_id}/logging/https | list https log endpoints\n*logginghttpsapi* | [**update_log_https**](docs/logginghttpsapi.md#update_log_https) | **put** /service/{service_id}/version/{version_id}/logging/https/{logging_https_name} | update an https log endpoint\n*loggingkafkaapi* | [**create_log_kafka**](docs/loggingkafkaapi.md#create_log_kafka) | **post** /service/{service_id}/version/{version_id}/logging/kafka | create a kafka log endpoint\n*loggingkafkaapi* | [**delete_log_kafka**](docs/loggingkafkaapi.md#delete_log_kafka) | **delete** /service/{service_id}/version/{version_id}/logging/kafka/{logging_kafka_name} | delete the kafka log endpoint\n*loggingkafkaapi* | [**get_log_kafka**](docs/loggingkafkaapi.md#get_log_kafka) | **get** /service/{service_id}/version/{version_id}/logging/kafka/{logging_kafka_name} | get a kafka log endpoint\n*loggingkafkaapi* | [**list_log_kafka**](docs/loggingkafkaapi.md#list_log_kafka) | **get** /service/{service_id}/version/{version_id}/logging/kafka | list kafka log endpoints\n*loggingkafkaapi* | [**update_log_kafka**](docs/loggingkafkaapi.md#update_log_kafka) | **put** /service/{service_id}/version/{version_id}/logging/kafka/{logging_kafka_name} | update the kafka log endpoint\n*loggingkinesisapi* | [**create_log_kinesis**](docs/loggingkinesisapi.md#create_log_kinesis) | **post** /service/{service_id}/version/{version_id}/logging/kinesis | create  an amazon kinesis log endpoint\n*loggingkinesisapi* | [**delete_log_kinesis**](docs/loggingkinesisapi.md#delete_log_kinesis) | **delete** /service/{service_id}/version/{version_id}/logging/kinesis/{logging_kinesis_name} | delete the amazon kinesis log endpoint\n*loggingkinesisapi* | [**get_log_kinesis**](docs/loggingkinesisapi.md#get_log_kinesis) | **get** /service/{service_id}/version/{version_id}/logging/kinesis/{logging_kinesis_name} | get an amazon kinesis log endpoint\n*loggingkinesisapi* | [**list_log_kinesis**](docs/loggingkinesisapi.md#list_log_kinesis) | **get** /service/{service_id}/version/{version_id}/logging/kinesis | list amazon kinesis log endpoints\n*loggingkinesisapi* | [**update_log_kinesis**](docs/loggingkinesisapi.md#update_log_kinesis) | **put** /service/{service_id}/version/{version_id}/logging/kinesis/{logging_kinesis_name} | update the amazon kinesis log endpoint\n*logginglogentriesapi* | [**create_log_logentries**](docs/logginglogentriesapi.md#create_log_logentries) | **post** /service/{service_id}/version/{version_id}/logging/logentries | create a logentries log endpoint\n*logginglogentriesapi* | [**delete_log_logentries**](docs/logginglogentriesapi.md#delete_log_logentries) | **delete** /service/{service_id}/version/{version_id}/logging/logentries/{logging_logentries_name} | delete a logentries log endpoint\n*logginglogentriesapi* | [**get_log_logentries**](docs/logginglogentriesapi.md#get_log_logentries) | **get** /service/{service_id}/version/{version_id}/logging/logentries/{logging_logentries_name} | get a logentries log endpoint\n*logginglogentriesapi* | [**list_log_logentries**](docs/logginglogentriesapi.md#list_log_logentries) | **get** /service/{service_id}/version/{version_id}/logging/logentries | list logentries log endpoints\n*logginglogentriesapi* | [**update_log_logentries**](docs/logginglogentriesapi.md#update_log_logentries) | **put** /service/{service_id}/version/{version_id}/logging/logentries/{logging_logentries_name} | update a logentries log endpoint\n*logginglogglyapi* | [**create_log_loggly**](docs/logginglogglyapi.md#create_log_loggly) | **post** /service/{service_id}/version/{version_id}/logging/loggly | create a loggly log endpoint\n*logginglogglyapi* | [**delete_log_loggly**](docs/logginglogglyapi.md#delete_log_loggly) | **delete** /service/{service_id}/version/{version_id}/logging/loggly/{logging_loggly_name} | delete a loggly log endpoint\n*logginglogglyapi* | [**get_log_loggly**](docs/logginglogglyapi.md#get_log_loggly) | **get** /service/{service_id}/version/{version_id}/logging/loggly/{logging_loggly_name} | get a loggly log endpoint\n*logginglogglyapi* | [**list_log_loggly**](docs/logginglogglyapi.md#list_log_loggly) | **get** /service/{service_id}/version/{version_id}/logging/loggly | list loggly log endpoints\n*logginglogglyapi* | [**update_log_loggly**](docs/logginglogglyapi.md#update_log_loggly) | **put** /service/{service_id}/version/{version_id}/logging/loggly/{logging_loggly_name} | update a loggly log endpoint\n*logginglogshuttleapi* | [**create_log_logshuttle**](docs/logginglogshuttleapi.md#create_log_logshuttle) | **post** /service/{service_id}/version/{version_id}/logging/logshuttle | create a log shuttle log endpoint\n*logginglogshuttleapi* | [**delete_log_logshuttle**](docs/logginglogshuttleapi.md#delete_log_logshuttle) | **delete** /service/{service_id}/version/{version_id}/logging/logshuttle/{logging_logshuttle_name} | delete a log shuttle log endpoint\n*logginglogshuttleapi* | [**get_log_logshuttle**](docs/logginglogshuttleapi.md#get_log_logshuttle) | **get** /service/{service_id}/version/{version_id}/logging/logshuttle/{logging_logshuttle_name} | get a log shuttle log endpoint\n*logginglogshuttleapi* | [**list_log_logshuttle**](docs/logginglogshuttleapi.md#list_log_logshuttle) | **get** /service/{service_id}/version/{version_id}/logging/logshuttle | list log shuttle log endpoints\n*logginglogshuttleapi* | [**update_log_logshuttle**](docs/logginglogshuttleapi.md#update_log_logshuttle) | **put** /service/{service_id}/version/{version_id}/logging/logshuttle/{logging_logshuttle_name} | update a log shuttle log endpoint\n*loggingnewrelicapi* | [**create_log_newrelic**](docs/loggingnewrelicapi.md#create_log_newrelic) | **post** /service/{service_id}/version/{version_id}/logging/newrelic | create a new relic log endpoint\n*loggingnewrelicapi* | [**delete_log_newrelic**](docs/loggingnewrelicapi.md#delete_log_newrelic) | **delete** /service/{service_id}/version/{version_id}/logging/newrelic/{logging_newrelic_name} | delete a new relic log endpoint\n*loggingnewrelicapi* | [**get_log_newrelic**](docs/loggingnewrelicapi.md#get_log_newrelic) | **get** /service/{service_id}/version/{version_id}/logging/newrelic/{logging_newrelic_name} | get a new relic log endpoint\n*loggingnewrelicapi* | [**list_log_newrelic**](docs/loggingnewrelicapi.md#list_log_newrelic) | **get** /service/{service_id}/version/{version_id}/logging/newrelic | list new relic log endpoints\n*loggingnewrelicapi* | [**update_log_newrelic**](docs/loggingnewrelicapi.md#update_log_newrelic) | **put** /service/{service_id}/version/{version_id}/logging/newrelic/{logging_newrelic_name} | update a new relic log endpoint\n*loggingnewrelicotlpapi* | [**create_log_newrelicotlp**](docs/loggingnewrelicotlpapi.md#create_log_newrelicotlp) | **post** /service/{service_id}/version/{version_id}/logging/newrelicotlp | create a new relic otlp endpoint\n*loggingnewrelicotlpapi* | [**delete_log_newrelicotlp**](docs/loggingnewrelicotlpapi.md#delete_log_newrelicotlp) | **delete** /service/{service_id}/version/{version_id}/logging/newrelicotlp/{logging_newrelicotlp_name} | delete a new relic otlp endpoint\n*loggingnewrelicotlpapi* | [**get_log_newrelicotlp**](docs/loggingnewrelicotlpapi.md#get_log_newrelicotlp) | **get** /service/{service_id}/version/{version_id}/logging/newrelicotlp/{logging_newrelicotlp_name} | get a new relic otlp endpoint\n*loggingnewrelicotlpapi* | [**list_log_newrelicotlp**](docs/loggingnewrelicotlpapi.md#list_log_newrelicotlp) | **get** /service/{service_id}/version/{version_id}/logging/newrelicotlp | list new relic otlp endpoints\n*loggingnewrelicotlpapi* | [**update_log_newrelicotlp**](docs/loggingnewrelicotlpapi.md#update_log_newrelicotlp) | **put** /service/{service_id}/version/{version_id}/logging/newrelicotlp/{logging_newrelicotlp_name} | update a new relic log endpoint\n*loggingopenstackapi* | [**create_log_openstack**](docs/loggingopenstackapi.md#create_log_openstack) | **post** /service/{service_id}/version/{version_id}/logging/openstack | create an openstack log endpoint\n*loggingopenstackapi* | [**delete_log_openstack**](docs/loggingopenstackapi.md#delete_log_openstack) | **delete** /service/{service_id}/version/{version_id}/logging/openstack/{logging_openstack_name} | delete an openstack log endpoint\n*loggingopenstackapi* | [**get_log_openstack**](docs/loggingopenstackapi.md#get_log_openstack) | **get** /service/{service_id}/version/{version_id}/logging/openstack/{logging_openstack_name} | get an openstack log endpoint\n*loggingopenstackapi* | [**list_log_openstack**](docs/loggingopenstackapi.md#list_log_openstack) | **get** /service/{service_id}/version/{version_id}/logging/openstack | list openstack log endpoints\n*loggingopenstackapi* | [**update_log_openstack**](docs/loggingopenstackapi.md#update_log_openstack) | **put** /service/{service_id}/version/{version_id}/logging/openstack/{logging_openstack_name} | update an openstack log endpoint\n*loggingpapertrailapi* | [**create_log_papertrail**](docs/loggingpapertrailapi.md#create_log_papertrail) | **post** /service/{service_id}/version/{version_id}/logging/papertrail | create a papertrail log endpoint\n*loggingpapertrailapi* | [**delete_log_papertrail**](docs/loggingpapertrailapi.md#delete_log_papertrail) | **delete** /service/{service_id}/version/{version_id}/logging/papertrail/{logging_papertrail_name} | delete a papertrail log endpoint\n*loggingpapertrailapi* | [**get_log_papertrail**](docs/loggingpapertrailapi.md#get_log_papertrail) | **get** /service/{service_id}/version/{version_id}/logging/papertrail/{logging_papertrail_name} | get a papertrail log endpoint\n*loggingpapertrailapi* | [**list_log_papertrail**](docs/loggingpapertrailapi.md#list_log_papertrail) | **get** /service/{service_id}/version/{version_id}/logging/papertrail | list papertrail log endpoints\n*loggingpapertrailapi* | [**update_log_papertrail**](docs/loggingpapertrailapi.md#update_log_papertrail) | **put** /service/{service_id}/version/{version_id}/logging/papertrail/{logging_papertrail_name} | update a papertrail log endpoint\n*loggingpubsubapi* | [**create_log_gcp_pubsub**](docs/loggingpubsubapi.md#create_log_gcp_pubsub) | **post** /service/{service_id}/version/{version_id}/logging/pubsub | create a gcp cloud pub/sub log endpoint\n*loggingpubsubapi* | [**delete_log_gcp_pubsub**](docs/loggingpubsubapi.md#delete_log_gcp_pubsub) | **delete** /service/{service_id}/version/{version_id}/logging/pubsub/{logging_google_pubsub_name} | delete a gcp cloud pub/sub log endpoint\n*loggingpubsubapi* | [**get_log_gcp_pubsub**](docs/loggingpubsubapi.md#get_log_gcp_pubsub) | **get** /service/{service_id}/version/{version_id}/logging/pubsub/{logging_google_pubsub_name} | get a gcp cloud pub/sub log endpoint\n*loggingpubsubapi* | [**list_log_gcp_pubsub**](docs/loggingpubsubapi.md#list_log_gcp_pubsub) | **get** /service/{service_id}/version/{version_id}/logging/pubsub | list gcp cloud pub/sub log endpoints\n*loggingpubsubapi* | [**update_log_gcp_pubsub**](docs/loggingpubsubapi.md#update_log_gcp_pubsub) | **put** /service/{service_id}/version/{version_id}/logging/pubsub/{logging_google_pubsub_name} | update a gcp cloud pub/sub log endpoint\n*loggings3api* | [**create_log_aws_s3**](docs/loggings3api.md#create_log_aws_s3) | **post** /service/{service_id}/version/{version_id}/logging/s3 | create an aws s3 log endpoint\n*loggings3api* | [**delete_log_aws_s3**](docs/loggings3api.md#delete_log_aws_s3) | **delete** /service/{service_id}/version/{version_id}/logging/s3/{logging_s3_name} | delete an aws s3 log endpoint\n*loggings3api* | [**get_log_aws_s3**](docs/loggings3api.md#get_log_aws_s3) | **get** /service/{service_id}/version/{version_id}/logging/s3/{logging_s3_name} | get an aws s3 log endpoint\n*loggings3api* | [**list_log_aws_s3**](docs/loggings3api.md#list_log_aws_s3) | **get** /service/{service_id}/version/{version_id}/logging/s3 | list aws s3 log endpoints\n*loggings3api* | [**update_log_aws_s3**](docs/loggings3api.md#update_log_aws_s3) | **put** /service/{service_id}/version/{version_id}/logging/s3/{logging_s3_name} | update an aws s3 log endpoint\n*loggingscalyrapi* | [**create_log_scalyr**](docs/loggingscalyrapi.md#create_log_scalyr) | **post** /service/{service_id}/version/{version_id}/logging/scalyr | create a scalyr log endpoint\n*loggingscalyrapi* | [**delete_log_scalyr**](docs/loggingscalyrapi.md#delete_log_scalyr) | **delete** /service/{service_id}/version/{version_id}/logging/scalyr/{logging_scalyr_name} | delete the scalyr log endpoint\n*loggingscalyrapi* | [**get_log_scalyr**](docs/loggingscalyrapi.md#get_log_scalyr) | **get** /service/{service_id}/version/{version_id}/logging/scalyr/{logging_scalyr_name} | get a scalyr log endpoint\n*loggingscalyrapi* | [**list_log_scalyr**](docs/loggingscalyrapi.md#list_log_scalyr) | **get** /service/{service_id}/version/{version_id}/logging/scalyr | list scalyr log endpoints\n*loggingscalyrapi* | [**update_log_scalyr**](docs/loggingscalyrapi.md#update_log_scalyr) | **put** /service/{service_id}/version/{version_id}/logging/scalyr/{logging_scalyr_name} | update the scalyr log endpoint\n*loggingsftpapi* | [**create_log_sftp**](docs/loggingsftpapi.md#create_log_sftp) | **post** /service/{service_id}/version/{version_id}/logging/sftp | create an sftp log endpoint\n*loggingsftpapi* | [**delete_log_sftp**](docs/loggingsftpapi.md#delete_log_sftp) | **delete** /service/{service_id}/version/{version_id}/logging/sftp/{logging_sftp_name} | delete an sftp log endpoint\n*loggingsftpapi* | [**get_log_sftp**](docs/loggingsftpapi.md#get_log_sftp) | **get** /service/{service_id}/version/{version_id}/logging/sftp/{logging_sftp_name} | get an sftp log endpoint\n*loggingsftpapi* | [**list_log_sftp**](docs/loggingsftpapi.md#list_log_sftp) | **get** /service/{service_id}/version/{version_id}/logging/sftp | list sftp log endpoints\n*loggingsftpapi* | [**update_log_sftp**](docs/loggingsftpapi.md#update_log_sftp) | **put** /service/{service_id}/version/{version_id}/logging/sftp/{logging_sftp_name} | update an sftp log endpoint\n*loggingsplunkapi* | [**create_log_splunk**](docs/loggingsplunkapi.md#create_log_splunk) | **post** /service/{service_id}/version/{version_id}/logging/splunk | create a splunk log endpoint\n*loggingsplunkapi* | [**delete_log_splunk**](docs/loggingsplunkapi.md#delete_log_splunk) | **delete** /service/{service_id}/version/{version_id}/logging/splunk/{logging_splunk_name} | delete a splunk log endpoint\n*loggingsplunkapi* | [**get_log_splunk**](docs/loggingsplunkapi.md#get_log_splunk) | **get** /service/{service_id}/version/{version_id}/logging/splunk/{logging_splunk_name} | get a splunk log endpoint\n*loggingsplunkapi* | [**list_log_splunk**](docs/loggingsplunkapi.md#list_log_splunk) | **get** /service/{service_id}/version/{version_id}/logging/splunk | list splunk log endpoints\n*loggingsplunkapi* | [**update_log_splunk**](docs/loggingsplunkapi.md#update_log_splunk) | **put** /service/{service_id}/version/{version_id}/logging/splunk/{logging_splunk_name} | update a splunk log endpoint\n*loggingsumologicapi* | [**create_log_sumologic**](docs/loggingsumologicapi.md#create_log_sumologic) | **post** /service/{service_id}/version/{version_id}/logging/sumologic | create a sumologic log endpoint\n*loggingsumologicapi* | [**delete_log_sumologic**](docs/loggingsumologicapi.md#delete_log_sumologic) | **delete** /service/{service_id}/version/{version_id}/logging/sumologic/{logging_sumologic_name} | delete a sumologic log endpoint\n*loggingsumologicapi* | [**get_log_sumologic**](docs/loggingsumologicapi.md#get_log_sumologic) | **get** /service/{service_id}/version/{version_id}/logging/sumologic/{logging_sumologic_name} | get a sumologic log endpoint\n*loggingsumologicapi* | [**list_log_sumologic**](docs/loggingsumologicapi.md#list_log_sumologic) | **get** /service/{service_id}/version/{version_id}/logging/sumologic | list sumologic log endpoints\n*loggingsumologicapi* | [**update_log_sumologic**](docs/loggingsumologicapi.md#update_log_sumologic) | **put** /service/{service_id}/version/{version_id}/logging/sumologic/{logging_sumologic_name} | update a sumologic log endpoint\n*loggingsyslogapi* | [**create_log_syslog**](docs/loggingsyslogapi.md#create_log_syslog) | **post** /service/{service_id}/version/{version_id}/logging/syslog | create a syslog log endpoint\n*loggingsyslogapi* | [**delete_log_syslog**](docs/loggingsyslogapi.md#delete_log_syslog) | **delete** /service/{service_id}/version/{version_id}/logging/syslog/{logging_syslog_name} | delete a syslog log endpoint\n*loggingsyslogapi* | [**get_log_syslog**](docs/loggingsyslogapi.md#get_log_syslog) | **get** /service/{service_id}/version/{version_id}/logging/syslog/{logging_syslog_name} | get a syslog log endpoint\n*loggingsyslogapi* | [**list_log_syslog**](docs/loggingsyslogapi.md#list_log_syslog) | **get** /service/{service_id}/version/{version_id}/logging/syslog | list syslog log endpoints\n*loggingsyslogapi* | [**update_log_syslog**](docs/loggingsyslogapi.md#update_log_syslog) | **put** /service/{service_id}/version/{version_id}/logging/syslog/{logging_syslog_name} | update a syslog log endpoint\n*mutualauthenticationapi* | [**create_mutual_tls_authentication**](docs/mutualauthenticationapi.md#create_mutual_tls_authentication) | **post** /tls/mutual_authentications | create a mutual authentication\n*mutualauthenticationapi* | [**delete_mutual_tls**](docs/mutualauthenticationapi.md#delete_mutual_tls) | **delete** /tls/mutual_authentications/{mutual_authentication_id} | delete a mutual tls\n*mutualauthenticationapi* | [**get_mutual_authentication**](docs/mutualauthenticationapi.md#get_mutual_authentication) | **get** /tls/mutual_authentications/{mutual_authentication_id} | get a mutual authentication\n*mutualauthenticationapi* | [**list_mutual_authentications**](docs/mutualauthenticationapi.md#list_mutual_authentications) | **get** /tls/mutual_authentications | list mutual authentications\n*mutualauthenticationapi* | [**patch_mutual_authentication**](docs/mutualauthenticationapi.md#patch_mutual_authentication) | **patch** /tls/mutual_authentications/{mutual_authentication_id} | update a mutual authentication\n*origininspectorhistoricalapi* | [**get_origin_inspector_historical**](docs/origininspectorhistoricalapi.md#get_origin_inspector_historical) | **get** /metrics/origins/services/{service_id} | get historical origin data for a service\n*origininspectorrealtimeapi* | [**get_origin_inspector_last120_seconds**](docs/origininspectorrealtimeapi.md#get_origin_inspector_last120_seconds) | **get** /v1/origins/{service_id}/ts/h | get real-time origin data for the last 120 seconds\n*origininspectorrealtimeapi* | [**get_origin_inspector_last_max_entries**](docs/origininspectorrealtimeapi.md#get_origin_inspector_last_max_entries) | **get** /v1/origins/{service_id}/ts/h/limit/{max_entries} | get a limited number of real-time origin data entries\n*origininspectorrealtimeapi* | [**get_origin_inspector_last_second**](docs/origininspectorrealtimeapi.md#get_origin_inspector_last_second) | **get** /v1/origins/{service_id}/ts/{start_timestamp} | get real-time origin data from specific time.\n*packageapi* | [**get_package**](docs/packageapi.md#get_package) | **get** /service/{service_id}/version/{version_id}/package | get details of the service&#39;s compute package.\n*packageapi* | [**put_package**](docs/packageapi.md#put_package) | **put** /service/{service_id}/version/{version_id}/package | upload a compute package.\n*poolapi* | [**create_server_pool**](docs/poolapi.md#create_server_pool) | **post** /service/{service_id}/version/{version_id}/pool | create a server pool\n*poolapi* | [**delete_server_pool**](docs/poolapi.md#delete_server_pool) | **delete** /service/{service_id}/version/{version_id}/pool/{pool_name} | delete a server pool\n*poolapi* | [**get_server_pool**](docs/poolapi.md#get_server_pool) | **get** /service/{service_id}/version/{version_id}/pool/{pool_name} | get a server pool\n*poolapi* | [**list_server_pools**](docs/poolapi.md#list_server_pools) | **get** /service/{service_id}/version/{version_id}/pool | list server pools\n*poolapi* | [**update_server_pool**](docs/poolapi.md#update_server_pool) | **put** /service/{service_id}/version/{version_id}/pool/{pool_name} | update a server pool\n*popapi* | [**list_pops**](docs/popapi.md#list_pops) | **get** /datacenters | list fastly pops\n*publiciplistapi* | [**list_fastly_ips**](docs/publiciplistapi.md#list_fastly_ips) | **get** /public-ip-list | list fastly&#39;s public ips\n*publishapi* | [**publish**](docs/publishapi.md#publish) | **post** /service/{service_id}/publish/ | send messages to fanout subscribers\n*purgeapi* | [**bulk_purge_tag**](docs/purgeapi.md#bulk_purge_tag) | **post** /service/{service_id}/purge | purge multiple surrogate key tags\n*purgeapi* | [**purge_all**](docs/purgeapi.md#purge_all) | **post** /service/{service_id}/purge_all | purge everything from a service\n*purgeapi* | [**purge_single_url**](docs/purgeapi.md#purge_single_url) | **post** /purge/{cached_url} | purge a url\n*purgeapi* | [**purge_tag**](docs/purgeapi.md#purge_tag) | **post** /service/{service_id}/purge/{surrogate_key} | purge by surrogate key tag\n*ratelimiterapi* | [**create_rate_limiter**](docs/ratelimiterapi.md#create_rate_limiter) | **post** /service/{service_id}/version/{version_id}/rate-limiters | create a rate limiter\n*ratelimiterapi* | [**delete_rate_limiter**](docs/ratelimiterapi.md#delete_rate_limiter) | **delete** /rate-limiters/{rate_limiter_id} | delete a rate limiter\n*ratelimiterapi* | [**get_rate_limiter**](docs/ratelimiterapi.md#get_rate_limiter) | **get** /rate-limiters/{rate_limiter_id} | get a rate limiter\n*ratelimiterapi* | [**list_rate_limiters**](docs/ratelimiterapi.md#list_rate_limiters) | **get** /service/{service_id}/version/{version_id}/rate-limiters | list rate limiters\n*ratelimiterapi* | [**update_rate_limiter**](docs/ratelimiterapi.md#update_rate_limiter) | **put** /rate-limiters/{rate_limiter_id} | update a rate limiter\n*realtimeapi* | [**get_stats_last120_seconds**](docs/realtimeapi.md#get_stats_last120_seconds) | **get** /v1/channel/{service_id}/ts/h | get real-time data for the last 120 seconds\n*realtimeapi* | [**get_stats_last120_seconds_limit_entries**](docs/realtimeapi.md#get_stats_last120_seconds_limit_entries) | **get** /v1/channel/{service_id}/ts/h/limit/{max_entries} | get a limited number of real-time data entries\n*realtimeapi* | [**get_stats_last_second**](docs/realtimeapi.md#get_stats_last_second) | **get** /v1/channel/{service_id}/ts/{timestamp_in_seconds} | get real-time data from specified time\n*requestsettingsapi* | [**create_request_settings**](docs/requestsettingsapi.md#create_request_settings) | **post** /service/{service_id}/version/{version_id}/request_settings | create a request settings object\n*requestsettingsapi* | [**delete_request_settings**](docs/requestsettingsapi.md#delete_request_settings) | **delete** /service/{service_id}/version/{version_id}/request_settings/{request_settings_name} | delete a request settings object\n*requestsettingsapi* | [**get_request_settings**](docs/requestsettingsapi.md#get_request_settings) | **get** /service/{service_id}/version/{version_id}/request_settings/{request_settings_name} | get a request settings object\n*requestsettingsapi* | [**list_request_settings**](docs/requestsettingsapi.md#list_request_settings) | **get** /service/{service_id}/version/{version_id}/request_settings | list request settings objects\n*requestsettingsapi* | [**update_request_settings**](docs/requestsettingsapi.md#update_request_settings) | **put** /service/{service_id}/version/{version_id}/request_settings/{request_settings_name} | update a request settings object\n*resourceapi* | [**create_resource**](docs/resourceapi.md#create_resource) | **post** /service/{service_id}/version/{version_id}/resource | create a resource link\n*resourceapi* | [**delete_resource**](docs/resourceapi.md#delete_resource) | **delete** /service/{service_id}/version/{version_id}/resource/{id} | delete a resource link\n*resourceapi* | [**get_resource**](docs/resourceapi.md#get_resource) | **get** /service/{service_id}/version/{version_id}/resource/{id} | display a resource link\n*resourceapi* | [**list_resources**](docs/resourceapi.md#list_resources) | **get** /service/{service_id}/version/{version_id}/resource | list resource links\n*resourceapi* | [**update_resource**](docs/resourceapi.md#update_resource) | **put** /service/{service_id}/version/{version_id}/resource/{id} | update a resource link\n*responseobjectapi* | [**create_response_object**](docs/responseobjectapi.md#create_response_object) | **post** /service/{service_id}/version/{version_id}/response_object | create a response object\n*responseobjectapi* | [**delete_response_object**](docs/responseobjectapi.md#delete_response_object) | **delete** /service/{service_id}/version/{version_id}/response_object/{response_object_name} | delete a response object\n*responseobjectapi* | [**get_response_object**](docs/responseobjectapi.md#get_response_object) | **get** /service/{service_id}/version/{version_id}/response_object/{response_object_name} | get a response object\n*responseobjectapi* | [**list_response_objects**](docs/responseobjectapi.md#list_response_objects) | **get** /service/{service_id}/version/{version_id}/response_object | list response objects\n*responseobjectapi* | [**update_response_object**](docs/responseobjectapi.md#update_response_object) | **put** /service/{service_id}/version/{version_id}/response_object/{response_object_name} | update a response object\n*secretstoreapi* | [**client_key**](docs/secretstoreapi.md#client_key) | **post** /resources/stores/secret/client-key | create new client key\n*secretstoreapi* | [**create_secret_store**](docs/secretstoreapi.md#create_secret_store) | **post** /resources/stores/secret | create new secret store\n*secretstoreapi* | [**delete_secret_store**](docs/secretstoreapi.md#delete_secret_store) | **delete** /resources/stores/secret/{store_id} | delete secret store\n*secretstoreapi* | [**get_secret_store**](docs/secretstoreapi.md#get_secret_store) | **get** /resources/stores/secret/{store_id} | get secret store by id\n*secretstoreapi* | [**get_secret_stores**](docs/secretstoreapi.md#get_secret_stores) | **get** /resources/stores/secret | get all secret stores\n*secretstoreapi* | [**signing_key**](docs/secretstoreapi.md#signing_key) | **get** /resources/stores/secret/signing-key | get public key\n*secretstoreitemapi* | [**create_secret**](docs/secretstoreitemapi.md#create_secret) | **post** /resources/stores/secret/{store_id}/secrets | create a new secret in a store.\n*secretstoreitemapi* | [**delete_secret**](docs/secretstoreitemapi.md#delete_secret) | **delete** /resources/stores/secret/{store_id}/secrets/{secret_name} | delete a secret from a store.\n*secretstoreitemapi* | [**get_secret**](docs/secretstoreitemapi.md#get_secret) | **get** /resources/stores/secret/{store_id}/secrets/{secret_name} | get secret metadata.\n*secretstoreitemapi* | [**get_secrets**](docs/secretstoreitemapi.md#get_secrets) | **get** /resources/stores/secret/{store_id}/secrets | list secrets within a store.\n*secretstoreitemapi* | [**must_recreate_secret**](docs/secretstoreitemapi.md#must_recreate_secret) | **patch** /resources/stores/secret/{store_id}/secrets | recreate a secret in a store.\n*secretstoreitemapi* | [**recreate_secret**](docs/secretstoreitemapi.md#recreate_secret) | **put** /resources/stores/secret/{store_id}/secrets | create or recreate a secret in a store.\n*serverapi* | [**create_pool_server**](docs/serverapi.md#create_pool_server) | **post** /service/{service_id}/pool/{pool_id}/server | add a server to a pool\n*serverapi* | [**delete_pool_server**](docs/serverapi.md#delete_pool_server) | **delete** /service/{service_id}/pool/{pool_id}/server/{server_id} | delete a server from a pool\n*serverapi* | [**get_pool_server**](docs/serverapi.md#get_pool_server) | **get** /service/{service_id}/pool/{pool_id}/server/{server_id} | get a pool server\n*serverapi* | [**list_pool_servers**](docs/serverapi.md#list_pool_servers) | **get** /service/{service_id}/pool/{pool_id}/servers | list servers in a pool\n*serverapi* | [**update_pool_server**](docs/serverapi.md#update_pool_server) | **put** /service/{service_id}/pool/{pool_id}/server/{server_id} | update a server\n*serviceapi* | [**create_service**](docs/serviceapi.md#create_service) | **post** /service | create a service\n*serviceapi* | [**delete_service**](docs/serviceapi.md#delete_service) | **delete** /service/{service_id} | delete a service\n*serviceapi* | [**get_service**](docs/serviceapi.md#get_service) | **get** /service/{service_id} | get a service\n*serviceapi* | [**get_service_detail**](docs/serviceapi.md#get_service_detail) | **get** /service/{service_id}/details | get service details\n*serviceapi* | [**list_service_domains**](docs/serviceapi.md#list_service_domains) | **get** /service/{service_id}/domain | list the domains within a service\n*serviceapi* | [**list_services**](docs/serviceapi.md#list_services) | **get** /service | list services\n*serviceapi* | [**search_service**](docs/serviceapi.md#search_service) | **get** /service/search | search for a service by name\n*serviceapi* | [**update_service**](docs/serviceapi.md#update_service) | **put** /service/{service_id} | update a service\n*serviceauthorizationsapi* | [**create_service_authorization**](docs/serviceauthorizationsapi.md#create_service_authorization) | **post** /service-authorizations | create service authorization\n*serviceauthorizationsapi* | [**delete_service_authorization**](docs/serviceauthorizationsapi.md#delete_service_authorization) | **delete** /service-authorizations/{service_authorization_id} | delete service authorization\n*serviceauthorizationsapi* | [**delete_service_authorization2**](docs/serviceauthorizationsapi.md#delete_service_authorization2) | **delete** /service-authorizations | delete service authorizations\n*serviceauthorizationsapi* | [**list_service_authorization**](docs/serviceauthorizationsapi.md#list_service_authorization) | **get** /service-authorizations | list service authorizations\n*serviceauthorizationsapi* | [**show_service_authorization**](docs/serviceauthorizationsapi.md#show_service_authorization) | **get** /service-authorizations/{service_authorization_id} | show service authorization\n*serviceauthorizationsapi* | [**update_service_authorization**](docs/serviceauthorizationsapi.md#update_service_authorization) | **patch** /service-authorizations/{service_authorization_id} | update service authorization\n*serviceauthorizationsapi* | [**update_service_authorization2**](docs/serviceauthorizationsapi.md#update_service_authorization2) | **patch** /service-authorizations | update service authorizations\n*settingsapi* | [**get_service_settings**](docs/settingsapi.md#get_service_settings) | **get** /service/{service_id}/version/{version_id}/settings | get service settings\n*settingsapi* | [**update_service_settings**](docs/settingsapi.md#update_service_settings) | **put** /service/{service_id}/version/{version_id}/settings | update service settings\n*snippetapi* | [**create_snippet**](docs/snippetapi.md#create_snippet) | **post** /service/{service_id}/version/{version_id}/snippet | create a snippet\n*snippetapi* | [**delete_snippet**](docs/snippetapi.md#delete_snippet) | **delete** /service/{service_id}/version/{version_id}/snippet/{snippet_name} | delete a snippet\n*snippetapi* | [**get_snippet**](docs/snippetapi.md#get_snippet) | **get** /service/{service_id}/version/{version_id}/snippet/{snippet_name} | get a versioned snippet\n*snippetapi* | [**get_snippet_dynamic**](docs/snippetapi.md#get_snippet_dynamic) | **get** /service/{service_id}/snippet/{snippet_id} | get a dynamic snippet\n*snippetapi* | [**list_snippets**](docs/snippetapi.md#list_snippets) | **get** /service/{service_id}/version/{version_id}/snippet | list snippets\n*snippetapi* | [**update_snippet**](docs/snippetapi.md#update_snippet) | **put** /service/{service_id}/version/{version_id}/snippet/{snippet_name} | update a versioned snippet\n*snippetapi* | [**update_snippet_dynamic**](docs/snippetapi.md#update_snippet_dynamic) | **put** /service/{service_id}/snippet/{snippet_id} | update a dynamic snippet\n*starapi* | [**create_service_star**](docs/starapi.md#create_service_star) | **post** /stars | create a star\n*starapi* | [**delete_service_star**](docs/starapi.md#delete_service_star) | **delete** /stars/{star_id} | delete a star\n*starapi* | [**get_service_star**](docs/starapi.md#get_service_star) | **get** /stars/{star_id} | get a star\n*starapi* | [**list_service_stars**](docs/starapi.md#list_service_stars) | **get** /stars | list stars\n*statsapi* | [**get_service_stats**](docs/statsapi.md#get_service_stats) | **get** /service/{service_id}/stats/summary | get stats for a service\n*sudoapi* | [**request_sudo_access**](docs/sudoapi.md#request_sudo_access) | **post** /sudo | request sudo access\n*tlsactivationsapi* | [**create_tls_activation**](docs/tlsactivationsapi.md#create_tls_activation) | **post** /tls/activations | enable tls for a domain using a custom certificate\n*tlsactivationsapi* | [**delete_tls_activation**](docs/tlsactivationsapi.md#delete_tls_activation) | **delete** /tls/activations/{tls_activation_id} | disable tls on a domain\n*tlsactivationsapi* | [**get_tls_activation**](docs/tlsactivationsapi.md#get_tls_activation) | **get** /tls/activations/{tls_activation_id} | get a tls activation\n*tlsactivationsapi* | [**list_tls_activations**](docs/tlsactivationsapi.md#list_tls_activations) | **get** /tls/activations | list tls activations\n*tlsactivationsapi* | [**update_tls_activation**](docs/tlsactivationsapi.md#update_tls_activation) | **patch** /tls/activations/{tls_activation_id} | update a certificate\n*tlsbulkcertificatesapi* | [**delete_bulk_tls_cert**](docs/tlsbulkcertificatesapi.md#delete_bulk_tls_cert) | **delete** /tls/bulk/certificates/{certificate_id} | delete a certificate\n*tlsbulkcertificatesapi* | [**get_tls_bulk_cert**](docs/tlsbulkcertificatesapi.md#get_tls_bulk_cert) | **get** /tls/bulk/certificates/{certificate_id} | get a certificate\n*tlsbulkcertificatesapi* | [**list_tls_bulk_certs**](docs/tlsbulkcertificatesapi.md#list_tls_bulk_certs) | **get** /tls/bulk/certificates | list certificates\n*tlsbulkcertificatesapi* | [**update_bulk_tls_cert**](docs/tlsbulkcertificatesapi.md#update_bulk_tls_cert) | **patch** /tls/bulk/certificates/{certificate_id} | update a certificate\n*tlsbulkcertificatesapi* | [**upload_tls_bulk_cert**](docs/tlsbulkcertificatesapi.md#upload_tls_bulk_cert) | **post** /tls/bulk/certificates | upload a certificate\n*tlscertificatesapi* | [**create_tls_cert**](docs/tlscertificatesapi.md#create_tls_cert) | **post** /tls/certificates | create a tls certificate\n*tlscertificatesapi* | [**delete_tls_cert**](docs/tlscertificatesapi.md#delete_tls_cert) | **delete** /tls/certificates/{tls_certificate_id} | delete a tls certificate\n*tlscertificatesapi* | [**get_tls_cert**](docs/tlscertificatesapi.md#get_tls_cert) | **get** /tls/certificates/{tls_certificate_id} | get a tls certificate\n*tlscertificatesapi* | [**list_tls_certs**](docs/tlscertificatesapi.md#list_tls_certs) | **get** /tls/certificates | list tls certificates\n*tlscertificatesapi* | [**update_tls_cert**](docs/tlscertificatesapi.md#update_tls_cert) | **patch** /tls/certificates/{tls_certificate_id} | update a tls certificate\n*tlsconfigurationsapi* | [**get_tls_config**](docs/tlsconfigurationsapi.md#get_tls_config) | **get** /tls/configurations/{tls_configuration_id} | get a tls configuration\n*tlsconfigurationsapi* | [**list_tls_configs**](docs/tlsconfigurationsapi.md#list_tls_configs) | **get** /tls/configurations | list tls configurations\n*tlsconfigurationsapi* | [**update_tls_config**](docs/tlsconfigurationsapi.md#update_tls_config) | **patch** /tls/configurations/{tls_configuration_id} | update a tls configuration\n*tlsdomainsapi* | [**list_tls_domains**](docs/tlsdomainsapi.md#list_tls_domains) | **get** /tls/domains | list tls domains\n*tlsprivatekeysapi* | [**create_tls_key**](docs/tlsprivatekeysapi.md#create_tls_key) | **post** /tls/private_keys | create a tls private key\n*tlsprivatekeysapi* | [**delete_tls_key**](docs/tlsprivatekeysapi.md#delete_tls_key) | **delete** /tls/private_keys/{tls_private_key_id} | delete a tls private key\n*tlsprivatekeysapi* | [**get_tls_key**](docs/tlsprivatekeysapi.md#get_tls_key) | **get** /tls/private_keys/{tls_private_key_id} | get a tls private key\n*tlsprivatekeysapi* | [**list_tls_keys**](docs/tlsprivatekeysapi.md#list_tls_keys) | **get** /tls/private_keys | list tls private keys\n*tlssubscriptionsapi* | [**create_globalsign_email_challenge**](docs/tlssubscriptionsapi.md#create_globalsign_email_challenge) | **post** /tls/subscriptions/{tls_subscription_id}/authorizations/{tls_authorization_id}/globalsign_email_challenges | creates a globalsign email challenge.\n*tlssubscriptionsapi* | [**create_tls_sub**](docs/tlssubscriptionsapi.md#create_tls_sub) | **post** /tls/subscriptions | create a tls subscription\n*tlssubscriptionsapi* | [**delete_globalsign_email_challenge**](docs/tlssubscriptionsapi.md#delete_globalsign_email_challenge) | **delete** /tls/subscriptions/{tls_subscription_id}/authorizations/{tls_authorization_id}/globalsign_email_challenges/{globalsign_email_challenge_id} | delete a globalsign email challenge\n*tlssubscriptionsapi* | [**delete_tls_sub**](docs/tlssubscriptionsapi.md#delete_tls_sub) | **delete** /tls/subscriptions/{tls_subscription_id} | delete a tls subscription\n*tlssubscriptionsapi* | [**get_tls_sub**](docs/tlssubscriptionsapi.md#get_tls_sub) | **get** /tls/subscriptions/{tls_subscription_id} | get a tls subscription\n*tlssubscriptionsapi* | [**list_tls_subs**](docs/tlssubscriptionsapi.md#list_tls_subs) | **get** /tls/subscriptions | list tls subscriptions\n*tlssubscriptionsapi* | [**patch_tls_sub**](docs/tlssubscriptionsapi.md#patch_tls_sub) | **patch** /tls/subscriptions/{tls_subscription_id} | update a tls subscription\n*tokensapi* | [**bulk_revoke_tokens**](docs/tokensapi.md#bulk_revoke_tokens) | **delete** /tokens | revoke multiple tokens\n*tokensapi* | [**create_token**](docs/tokensapi.md#create_token) | **post** /tokens | create a token\n*tokensapi* | [**get_token**](docs/tokensapi.md#get_token) | **get** /tokens/{token_id} | get a token\n*tokensapi* | [**get_token_current**](docs/tokensapi.md#get_token_current) | **get** /tokens/self | get the current token\n*tokensapi* | [**list_tokens_customer**](docs/tokensapi.md#list_tokens_customer) | **get** /customer/{customer_id}/tokens | list tokens for a customer\n*tokensapi* | [**list_tokens_user**](docs/tokensapi.md#list_tokens_user) | **get** /tokens | list tokens for the authenticated user\n*tokensapi* | [**revoke_token**](docs/tokensapi.md#revoke_token) | **delete** /tokens/{token_id} | revoke a token\n*tokensapi* | [**revoke_token_current**](docs/tokensapi.md#revoke_token_current) | **delete** /tokens/self | revoke the current token\n*userapi* | [**create_user**](docs/userapi.md#create_user) | **post** /user | create a user\n*userapi* | [**delete_user**](docs/userapi.md#delete_user) | **delete** /user/{user_id} | delete a user\n*userapi* | [**get_current_user**](docs/userapi.md#get_current_user) | **get** /current_user | get the current user\n*userapi* | [**get_user**](docs/userapi.md#get_user) | **get** /user/{user_id} | get a user\n*userapi* | [**request_password_reset**](docs/userapi.md#request_password_reset) | **post** /user/{user_login}/password/request_reset | request a password reset\n*userapi* | [**update_user**](docs/userapi.md#update_user) | **put** /user/{user_id} | update a user\n*userapi* | [**update_user_password**](docs/userapi.md#update_user_password) | **post** /current_user/password | update the user&#39;s password\n*vclapi* | [**create_custom_vcl**](docs/vclapi.md#create_custom_vcl) | **post** /service/{service_id}/version/{version_id}/vcl | create a custom vcl file\n*vclapi* | [**delete_custom_vcl**](docs/vclapi.md#delete_custom_vcl) | **delete** /service/{service_id}/version/{version_id}/vcl/{vcl_name} | delete a custom vcl file\n*vclapi* | [**get_custom_vcl**](docs/vclapi.md#get_custom_vcl) | **get** /service/{service_id}/version/{version_id}/vcl/{vcl_name} | get a custom vcl file\n*vclapi* | [**get_custom_vcl_boilerplate**](docs/vclapi.md#get_custom_vcl_boilerplate) | **get** /service/{service_id}/version/{version_id}/boilerplate | get boilerplate vcl\n*vclapi* | [**get_custom_vcl_generated**](docs/vclapi.md#get_custom_vcl_generated) | **get** /service/{service_id}/version/{version_id}/generated_vcl | get the generated vcl for a service\n*vclapi* | [**get_custom_vcl_generated_highlighted**](docs/vclapi.md#get_custom_vcl_generated_highlighted) | **get** /service/{service_id}/version/{version_id}/generated_vcl/content | get the generated vcl with syntax highlighting\n*vclapi* | [**get_custom_vcl_highlighted**](docs/vclapi.md#get_custom_vcl_highlighted) | **get** /service/{service_id}/version/{version_id}/vcl/{vcl_name}/content | get a custom vcl file with syntax highlighting\n*vclapi* | [**get_custom_vcl_raw**](docs/vclapi.md#get_custom_vcl_raw) | **get** /service/{service_id}/version/{version_id}/vcl/{vcl_name}/download | download a custom vcl file\n*vclapi* | [**lint_vcl_default**](docs/vclapi.md#lint_vcl_default) | **post** /vcl_lint | lint (validate) vcl using a default set of flags.\n*vclapi* | [**lint_vcl_for_service**](docs/vclapi.md#lint_vcl_for_service) | **post** /service/{service_id}/lint | lint (validate) vcl using flags set for the service.\n*vclapi* | [**list_custom_vcl**](docs/vclapi.md#list_custom_vcl) | **get** /service/{service_id}/version/{version_id}/vcl | list custom vcl files\n*vclapi* | [**set_custom_vcl_main**](docs/vclapi.md#set_custom_vcl_main) | **put** /service/{service_id}/version/{version_id}/vcl/{vcl_name}/main | set a custom vcl file as main\n*vclapi* | [**update_custom_vcl**](docs/vclapi.md#update_custom_vcl) | **put** /service/{service_id}/version/{version_id}/vcl/{vcl_name} | update a custom vcl file\n*vcldiffapi* | [**vcl_diff_service_versions**](docs/vcldiffapi.md#vcl_diff_service_versions) | **get** /service/{service_id}/vcl/diff/from/{from_version_id}/to/{to_version_id} | get a comparison of the vcl changes between two service versions\n*versionapi* | [**activate_service_version**](docs/versionapi.md#activate_service_version) | **put** /service/{service_id}/version/{version_id}/activate | activate a service version\n*versionapi* | [**clone_service_version**](docs/versionapi.md#clone_service_version) | **put** /service/{service_id}/version/{version_id}/clone | clone a service version\n*versionapi* | [**create_service_version**](docs/versionapi.md#create_service_version) | **post** /service/{service_id}/version | create a service version\n*versionapi* | [**deactivate_service_version**](docs/versionapi.md#deactivate_service_version) | **put** /service/{service_id}/version/{version_id}/deactivate | deactivate a service version\n*versionapi* | [**get_service_version**](docs/versionapi.md#get_service_version) | **get** /service/{service_id}/version/{version_id} | get a version of a service\n*versionapi* | [**list_service_versions**](docs/versionapi.md#list_service_versions) | **get** /service/{service_id}/version | list versions of a service\n*versionapi* | [**lock_service_version**](docs/versionapi.md#lock_service_version) | **put** /service/{service_id}/version/{version_id}/lock | lock a service version\n*versionapi* | [**update_service_version**](docs/versionapi.md#update_service_version) | **put** /service/{service_id}/version/{version_id} | update a service version\n*versionapi* | [**validate_service_version**](docs/versionapi.md#validate_service_version) | **get** /service/{service_id}/version/{version_id}/validate | validate a service version\n*wafactiverulesapi* | [**bulk_delete_waf_active_rules**](docs/wafactiverulesapi.md#bulk_delete_waf_active_rules) | **delete** /waf/firewalls/{firewall_id}/versions/{version_id}/active-rules | delete multiple active rules from a waf\n*wafactiverulesapi* | [**bulk_update_waf_active_rules**](docs/wafactiverulesapi.md#bulk_update_waf_active_rules) | **patch** /waf/firewalls/{firewall_id}/versions/{version_id}/active-rules/bulk | update multiple active rules\n*wafactiverulesapi* | [**create_waf_active_rule**](docs/wafactiverulesapi.md#create_waf_active_rule) | **post** /waf/firewalls/{firewall_id}/versions/{version_id}/active-rules | add a rule to a waf as an active rule\n*wafactiverulesapi* | [**create_waf_active_rules_tag**](docs/wafactiverulesapi.md#create_waf_active_rules_tag) | **post** /waf/firewalls/{firewall_id}/versions/{version_id}/tags/{waf_tag_name}/active-rules | create active rules by tag\n*wafactiverulesapi* | [**delete_waf_active_rule**](docs/wafactiverulesapi.md#delete_waf_active_rule) | **delete** /waf/firewalls/{firewall_id}/versions/{version_id}/active-rules/{waf_rule_id} | delete an active rule\n*wafactiverulesapi* | [**get_waf_active_rule**](docs/wafactiverulesapi.md#get_waf_active_rule) | **get** /waf/firewalls/{firewall_id}/versions/{version_id}/active-rules/{waf_rule_id} | get an active waf rule object\n*wafactiverulesapi* | [**list_waf_active_rules**](docs/wafactiverulesapi.md#list_waf_active_rules) | **get** /waf/firewalls/{firewall_id}/versions/{version_id}/active-rules | list active rules on a waf\n*wafactiverulesapi* | [**update_waf_active_rule**](docs/wafactiverulesapi.md#update_waf_active_rule) | **patch** /waf/firewalls/{firewall_id}/versions/{version_id}/active-rules/{waf_rule_id} | update an active rule\n*wafexclusionsapi* | [**create_waf_rule_exclusion**](docs/wafexclusionsapi.md#create_waf_rule_exclusion) | **post** /waf/firewalls/{firewall_id}/versions/{firewall_version_number}/exclusions | create a waf rule exclusion\n*wafexclusionsapi* | [**delete_waf_rule_exclusion**](docs/wafexclusionsapi.md#delete_waf_rule_exclusion) | **delete** /waf/firewalls/{firewall_id}/versions/{firewall_version_number}/exclusions/{exclusion_number} | delete a waf rule exclusion\n*wafexclusionsapi* | [**get_waf_rule_exclusion**](docs/wafexclusionsapi.md#get_waf_rule_exclusion) | **get** /waf/firewalls/{firewall_id}/versions/{firewall_version_number}/exclusions/{exclusion_number} | get a waf rule exclusion\n*wafexclusionsapi* | [**list_waf_rule_exclusions**](docs/wafexclusionsapi.md#list_waf_rule_exclusions) | **get** /waf/firewalls/{firewall_id}/versions/{firewall_version_number}/exclusions | list waf rule exclusions\n*wafexclusionsapi* | [**update_waf_rule_exclusion**](docs/wafexclusionsapi.md#update_waf_rule_exclusion) | **patch** /waf/firewalls/{firewall_id}/versions/{firewall_version_number}/exclusions/{exclusion_number} | update a waf rule exclusion\n*waffirewallversionsapi* | [**clone_waf_firewall_version**](docs/waffirewallversionsapi.md#clone_waf_firewall_version) | **put** /waf/firewalls/{firewall_id}/versions/{firewall_version_number}/clone | clone a firewall version\n*waffirewallversionsapi* | [**create_waf_firewall_version**](docs/waffirewallversionsapi.md#create_waf_firewall_version) | **post** /waf/firewalls/{firewall_id}/versions | create a firewall version\n*waffirewallversionsapi* | [**deploy_activate_waf_firewall_version**](docs/waffirewallversionsapi.md#deploy_activate_waf_firewall_version) | **put** /waf/firewalls/{firewall_id}/versions/{firewall_version_number}/activate | deploy or activate a firewall version\n*waffirewallversionsapi* | [**get_waf_firewall_version**](docs/waffirewallversionsapi.md#get_waf_firewall_version) | **get** /waf/firewalls/{firewall_id}/versions/{firewall_version_number} | get a firewall version\n*waffirewallversionsapi* | [**list_waf_firewall_versions**](docs/waffirewallversionsapi.md#list_waf_firewall_versions) | **get** /waf/firewalls/{firewall_id}/versions | list firewall versions\n*waffirewallversionsapi* | [**update_waf_firewall_version**](docs/waffirewallversionsapi.md#update_waf_firewall_version) | **patch** /waf/firewalls/{firewall_id}/versions/{firewall_version_number} | update a firewall version\n*waffirewallsapi* | [**create_waf_firewall**](docs/waffirewallsapi.md#create_waf_firewall) | **post** /waf/firewalls | create a firewall\n*waffirewallsapi* | [**delete_waf_firewall**](docs/waffirewallsapi.md#delete_waf_firewall) | **delete** /waf/firewalls/{firewall_id} | delete a firewall\n*waffirewallsapi* | [**get_waf_firewall**](docs/waffirewallsapi.md#get_waf_firewall) | **get** /waf/firewalls/{firewall_id} | get a firewall\n*waffirewallsapi* | [**list_waf_firewalls**](docs/waffirewallsapi.md#list_waf_firewalls) | **get** /waf/firewalls | list firewalls\n*waffirewallsapi* | [**update_waf_firewall**](docs/waffirewallsapi.md#update_waf_firewall) | **patch** /waf/firewalls/{firewall_id} | update a firewall\n*wafrulerevisionsapi* | [**get_waf_rule_revision**](docs/wafrulerevisionsapi.md#get_waf_rule_revision) | **get** /waf/rules/{waf_rule_id}/revisions/{waf_rule_revision_number} | get a revision of a rule\n*wafrulerevisionsapi* | [**list_waf_rule_revisions**](docs/wafrulerevisionsapi.md#list_waf_rule_revisions) | **get** /waf/rules/{waf_rule_id}/revisions | list revisions for a rule\n*wafrulesapi* | [**get_waf_rule**](docs/wafrulesapi.md#get_waf_rule) | **get** /waf/rules/{waf_rule_id} | get a rule\n*wafrulesapi* | [**list_waf_rules**](docs/wafrulesapi.md#list_waf_rules) | **get** /waf/rules | list available waf rules\n*waftagsapi* | [**list_waf_tags**](docs/waftagsapi.md#list_waf_tags) | **get** /waf/tags | list tags\n*wholeplatformddoshistoricalapi* | [**get_platform_ddos_historical**](docs/wholeplatformddoshistoricalapi.md#get_platform_ddos_historical) | **get** /metrics/platform/ddos | get historical ddos metrics for the entire fastly platform\n\n\n## issues\n\nthe fastly-py api client currently does not support the following endpoints:\n\n- [`/resources/stores/kv/{store_id}/batch`](https://developer.fastly.com/reference/api/services/resources/kv-store-item) (put)\n- [`/tls/activations/{tls_activation_id}`](https://developer.fastly.com/reference/api/tls/mutual-tls/activations) (get, patch)\n- [`/tls/activations`](https://developer.fastly.com/reference/api/tls/mutual-tls/activations) (get)\n- [`/v1/channel/{service_id}/ts/h/limit/{max_entries}`](https://developer.fastly.com/reference/api/metrics-stats/origin-insights) (get)\n- [`/v1/channel/{service_id}/ts/h`](https://developer.fastly.com/reference/api/metrics-stats/origin-insights) (get)\n- [`/v1/channel/{service_id}/ts/{start_timestamp}`](https://developer.fastly.com/reference/api/metrics-stats/origin-insights) (get)\n\n\nif you encounter any non-security-related bug or unexpected behavior, please [file an issue][bug]\nusing the bug report template.\n\n[bug]: https://github.com/fastly/fastly-py/issues/new?labels=bug\n\n### security issues\n\nplease see our [security.md](./security.md) for guidance on reporting security-related issues.\n\n## license\n\n[mit](./license).\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "fastly",
  "package_url": "https://pypi.org/project/fastly/",
  "project_url": "https://pypi.org/project/fastly/",
  "project_urls": {
    "Bug Tracker": "https://github.com/fastly/fastly-py/issues",
    "Homepage": "https://github.com/fastly/fastly-py"
  },
  "release_url": "https://pypi.org/project/fastly/5.0.0/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "a python fastly api client library",
  "version": "5.0.0",
  "releases": [],
  "developers": [
    "oss@fastly.com"
  ],
  "kwds": "acl_api fastly_api_token get_acl_entry get_acl create_acl",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_fastly",
  "homepage": "",
  "release_count": 40,
  "dependency_ids": []
}
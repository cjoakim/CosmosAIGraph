{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.4",
    "topic :: scientific/engineering"
  ],
  "description": "mat4py - load and save data in the matlab (tm) mat-file format.\n===============================================================\n\nthe package provides the mat4py module with the functions ``loadmat`` and\n``savemat`` that allows for reading resp. writing data in the matlab (tm)\nmat-file format.\n\nmatlab data is loaded into basic python data types. matrices are stored row-major using lists of lists. matlab structs and cells are represented using python dicts.\n\nthe package can be run from the command line, in which case, it provides a routine for converting matlab mat-files to/from json files.\n\n\nload data from mat-file\n-----------------------\n\nthe function ``loadmat`` loads all variables stored in the mat-file into\na simple python data structure, using only python's dict and list\nobjects. numeric and cell arrays are converted to row-ordered nested lists. arrays are squeezed to eliminate arrays with only one element.\nthe resulting data structure is composed of simple types that are compatible\nwith the json format.\n\nexample: load a mat-file into a python data structure::\n\n   data = loadmat('datafile.mat')\n\nthe variable ``data`` is a dict with the variables and values contained in the mat-file.\n\n\nsave python data structure to a mat-file\n----------------------------------------\n\npython data can be saved to a mat-file, with the function ``savemat``. data has\nto be structured in the same way as for ``loadmat``, i.e. it should be composed\nof simple data types, like dict, list, str, int and float.\n\n\nexample: save a python data structure to a mat-file::\n\n   savemat('datafile.mat', data)\n\nthe parameter ``data`` shall be a dict with the variables.\n\n\ncommand line usage\n------------------\n\nthe package can be run from the command line, in which case, it provides\na routine for converting matlab mat-files to/from json files.\n\ncall::\n\n    python -m mat4py.cmd -h\n\nto get help with command line usage.\n\n\nknown limitations\n-----------------\n\nthe following matlab data structures/types are not supported:\n\n- arrays with more than 2 dimensions\n- arrays with complex numbers\n- sparse arrays\n- function arrays\n- object classes\n- anonymous function classes\n\n\nlicense\n-------\n\nthe mit license (mit)\ncopyright (c) 2011-2023 nephics ab\n\nsee the ``license.txt`` file.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "mat4py",
  "package_url": "https://pypi.org/project/mat4py/",
  "project_url": "https://pypi.org/project/mat4py/",
  "project_urls": {
    "Homepage": "https://github.com/nephics/mat4py/"
  },
  "release_url": "https://pypi.org/project/mat4py/0.6.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "load and save data in the matlab (tm) mat-file format.",
  "version": "0.6.0",
  "releases": [],
  "developers": [
    "jacob@nephics.com",
    "jacob_svensson"
  ],
  "kwds": "matlab mat4py datafile python loadmat",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_mat4py",
  "homepage": "https://github.com/nephics/mat4py/",
  "release_count": 12,
  "dependency_ids": []
}
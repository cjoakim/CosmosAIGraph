{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: software development :: compilers",
    "topic :: software development :: interpreters",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "[![build status](https://travis-ci.org/textx/textx-jinja.svg?branch=master)](https://travis-ci.org/textx/textx-jinja)\n[![code test coverage](https://coveralls.io/repos/github/textx/textx-jinja/badge.svg?branch=master)](https://coveralls.io/github/textx/textx-jinja?branch=master)\n[![documentation status](https://img.shields.io/badge/docs-latest-green.svg)](http://textx.github.io/textx/latest/jinja/)\n\n\n# textx-jinja\n\n[jinja](https://jinja.palletsprojects.com/) based framework for\n[textx](http://textx.github.io/textx/) generators. use if you need to generate a\nset of template-based files from textx models.\n\n\n# how to use?\n\n1. create a folder containing files and folder which resemble the structure you\n   want to generate. each file may be a jinja template (should end with `.jinja`\n   extension).\n\n1. file names may contain variable parts in the form `__<varible name>__`\n   (double underscores around the variable name). these parts of file names will\n   be replaced by the value of the variable from the generator context. if the\n   variable is iterable, a file will be created for each object. in that case,\n   the value for substitution in the file name will be created by function\n   `map_names`(still wip!), if given, or `str` of the object itself. the object\n   will be available in the template context under the name `obj`. if the\n   variable is of `bool` type the file will be skipped if the variable value is\n   `false`.\n\n1. in your textx project register a generator (see\n   [registration](http://textx.github.io/textx/stable/registration/)).\n\n   ```python\n   from textx import generator\n   from textxjinja import textx_jinja_generator\n   \n   @generator('mylang', 'mytarget')\n   def mygenerator(metamodel, model, output_path, overwrite, debug):\n       # template directory\n       template_folder = os.path.join(os.path.dirname(__file__), 'templates')\n\n       # create context dict with all variables that should be accessible\n       # by templates\n       context = {'some_variable': 'some value'}\n       \n       # optionally provide jinja filters\n       def striptabs(s):\n           return re.sub(r'^[ \\t]+', '', s, flags=re.m)\n       filters = {\n           'striptabs': striptabs\n       }\n\n       # call the generator\n       textx_jinja_generator(template_folder, output_path, context, overwrite, filters)\n   ```\n   \n1. install your project (recommended is the usage of python virtual environment):\n\n   ```\n   pip install -e <path to your project>\n   ```\n   \n1. run your textx generator as usual:\n\n   ```sh\n   $ textx generate ...\n   ```\n  \nthe generator will use the template folder for rendering files using jinja\ntemplate engine. all files from the template folder which are not jinja\ntemplates (don't end with `.jinja`' extensions) will be copied over to the\ntarget folder unchanged (variable substitutions in file names still apply).\n\nas a full example of its usage see [startproject generator in textx-dev\nproject](https://github.com/textx/textx-dev/blob/master/textxdev/scaffold/__init__.py#l19).\ntemplates for the `startproject` command are [here](https://github.com/textx/textx-dev/tree/master/textxdev/scaffold/template).\n\n\n",
  "docs_url": null,
  "keywords": "textx",
  "license": "mit",
  "name": "textx-jinja",
  "package_url": "https://pypi.org/project/textX-jinja/",
  "project_url": "https://pypi.org/project/textX-jinja/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/textX-jinja/0.3.0/",
  "requires_dist": [
    "textX",
    "Jinja2",
    "click",
    "wheel ; extra == 'dev'",
    "twine ; extra == 'dev'",
    "flake8 ; extra == 'test'",
    "tox ; extra == 'test'",
    "coverage ; extra == 'test'",
    "coveralls ; extra == 'test'",
    "pytest ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "textx generator framework based on jinja template engine",
  "version": "0.3.0",
  "releases": [],
  "developers": [
    "igor.dejanovic@gmail.com",
    "igor_dejanovic"
  ],
  "kwds": "textx_jinja_generator textxjinja jinja textx textxdev",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_textx_jinja",
  "homepage": "",
  "release_count": 4,
  "dependency_ids": [
    "pypi_click",
    "pypi_coverage",
    "pypi_coveralls",
    "pypi_flake8",
    "pypi_jinja2",
    "pypi_pytest",
    "pypi_textx",
    "pypi_tox",
    "pypi_twine",
    "pypi_wheel"
  ]
}
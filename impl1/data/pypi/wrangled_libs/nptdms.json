{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: science/research",
    "license :: osi approved :: gnu library or lesser general public license (lgpl)",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering"
  ],
  "description": "nptdms\n======\n\n.. image:: https://img.shields.io/pypi/v/nptdms.svg\n    :alt: pypi version\n    :target: https://pypi.org/project/nptdms/\n.. image:: https://github.com/adamreeve/nptdms/actions/workflows/ci-cd.yml/badge.svg?branch=master&event=push\n    :alt: build status\n    :target: https://github.com/adamreeve/nptdms/actions/workflows/ci-cd.yml?query=event%3apush+branch%3amaster\n.. image:: https://readthedocs.org/projects/nptdms/badge/?version=latest\n    :target: https://nptdms.readthedocs.io/en/latest/?badge=latest\n    :alt: documentation status\n.. image:: https://codecov.io/gh/adamreeve/nptdms/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/adamreeve/nptdms\n    :alt: code coverage\n\n\nnptdms is a cross-platform python package for reading and writing tdms files as produced by labview,\nand is built on top of the `numpy <http://www.numpy.org/>`__ package.\ndata is read from tdms files as numpy arrays,\nand nptdms also allows writing numpy arrays to tdms files.\n\ntdms files are structured in a hierarchy of groups and channels.\na tdms file can contain multiple groups, which may each contain multiple channels.\na file, group and channel may all have properties associated with them,\nbut only channels have array data.\n\ntypical usage when reading a tdms file might look like::\n\n    from nptdms import tdmsfile\n\n    tdms_file = tdmsfile.read(\"path_to_file.tdms\")\n    group = tdms_file['group name']\n    channel = group['channel name']\n    channel_data = channel[:]\n    channel_properties = channel.properties\n\nthe ``tdmsfile.read`` method reads all data into memory immediately.\nwhen you are working with large tdms files or don't need to read all channel data,\nyou can instead use ``tdmsfile.open``. this is more memory efficient but\naccessing data can be slower::\n\n    with tdmsfile.open(\"path_to_file.tdms\") as tdms_file:\n        group = tdms_file['group name']\n        channel = group['channel name']\n        channel_data = channel[:]\n\nnptdms also has rudimentary support for writing tdms files.\nusing nptdms to write a tdms file looks like::\n\n    from nptdms import tdmswriter, channelobject\n    import numpy\n\n    with tdmswriter(\"path_to_file.tdms\") as tdms_writer:\n        data_array = numpy.linspace(0, 1, 10)\n        channel = channelobject('group name', 'channel name', data_array)\n        tdms_writer.write_segment([channel])\n\nfor more detailed documentation on reading and writing tdms files,\nsee the `nptdms documentation <http://nptdms.readthedocs.io>`__.\n\ninstallation\n------------\n\nnptdms is available from the python package index, so the easiest way to\ninstall it is by running::\n\n    pip install nptdms\n\nthere are optional features available that require additional dependencies.\nthese are `hdf` for hdf export, `pandas` for pandas dataframe export, and\n`thermocouple_scaling` for using thermocouple scalings. you can specify these\nextra features when installing nptdms to also install the dependencies they\nrequire::\n\n    pip install nptdms[hdf,pandas,thermocouple_scaling]\n\nalternatively, after downloading the source code you can extract it and\nchange into the new directory, then run::\n\n    python setup.py install\n\nlinks\n-----\n\nsource code lives at https://github.com/adamreeve/nptdms and any issues can be\nreported at https://github.com/adamreeve/nptdms/issues.\ndocumentation is available at http://nptdms.readthedocs.io.\n\nlimitations\n-----------\n\nthis module doesn't support tdms files with xml headers or with\nextended precision floating point data.\n\ncontributors/thanks\n-------------------\n\nthanks to floris van vugt who wrote the pytdms module,\nwhich helped when writing this module.\n\nthanks to tony perkins, ruben de smet, martin hochwallner and peter duncan\nfor contributing support for converting to pandas dataframes.\n\nthanks to nmgeek and jshridha for implementing support for daqmx raw data\nfiles.\n",
  "docs_url": null,
  "keywords": "",
  "license": "lgpl",
  "name": "nptdms",
  "package_url": "https://pypi.org/project/npTDMS/",
  "project_url": "https://pypi.org/project/npTDMS/",
  "project_urls": {
    "Homepage": "https://github.com/adamreeve/npTDMS"
  },
  "release_url": "https://pypi.org/project/npTDMS/1.7.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "cross-platform, numpy based module for reading tdms files produced by labview",
  "version": "1.7.1",
  "releases": [],
  "developers": [
    "adam_reeve",
    "adreeve@gmail.com"
  ],
  "kwds": "nptdms badge status branch pytdms",
  "license_kwds": "lgpl",
  "libtype": "pypi",
  "id": "pypi_nptdms",
  "homepage": "https://github.com/adamreeve/nptdms",
  "release_count": 72,
  "dependency_ids": []
}
{
  "classifiers": [],
  "description": "=========\nqtgallery\n=========\n\n.. image:: https://readthedocs.org/projects/qtgallery/badge/?version=latest\n   :target: https://qtgallery.readthedocs.io/en/latest/?badge=latest\n   :alt: documentation status\n\nscraper for generating a `sphinx-gallery`_ of qt widgets.\n\nthis repository serves both as a library for grabbing renderings of qt widgets\nto add to your own ``sphinx-gallery`` config as well as an example of its usage.\n\n\ninstallation\n============\n\nfor the time being, clone the repo and install from source::\n\n    $ git clone git@github.com:ixjlyons/qtgallery.git\n    $ cd qtgallery\n    $ pip install .\n\nnow you should be able to generate the docs/gallery::\n\n    $ cd doc\n    $ make html\n\nopen up ``doc/_build/html/index.html`` to see built docs. they're currently\nbeing hosted by read the docs as well:\n\nhttps://qtgallery.readthedocs.io/\n\n\nconfiguration\n=============\n\nto use ``qtgallery`` in your own documentation, start by setting up\n`sphinx-gallery`_. this library provides two key components to add to your\n``sphinx_gallery_conf``: an `image scraper`_ and a `reset function`_:\n\n.. code-block:: python\n\n   # sphinx conf.py\n   import qtgallery\n\n   sphinx_gallery_conf = {\n       ...\n       'image_scrapers': (qtgallery.qtscraper, ...),\n       'reset_modules': (qtgallery.reset_qapp, ...),\n       ...\n   }\n\nthe image scraper is responsible for generating a rendering of all currently\nshown top level widgets.\n\nthe reset function is for handling ``qapplication``, allowing you to instantiate\nthe ``qapplication`` singleton in each example and preventing the qt event loop\nfrom running and hanging the docs build. that is, examples that run ok standalone\nshould behave ok in generating the gallery.\n\n\nusage\n=====\n\nusage pretty much follows `sphinx-gallery`_, but one tip is that you can control\n*where* the widget/window is rendered via ``show()``. see the `iterative\nexample`_ to see how this works.\n\nread the docs\n-------------\n\non read the docs, ``xvfb`` is required. see their documentation for `installing\napt packages`_. this repository also serves as an example (see\n``.readthedocs.yml``).\n\n\n.. _sphinx-gallery: https://sphinx-gallery.github.io/stable/index.html\n.. _image scraper: https://sphinx-gallery.github.io/stable/configuration.html#image-scrapers\n.. _reset function: https://sphinx-gallery.github.io/stable/configuration.html#resetting-modules\n.. _iterative example: https://qtgallery.readthedocs.io/en/latest/auto_examples/iterative.html#sphx-glr-auto-examples-iterative-py\n.. _installing apt packages: https://docs.readthedocs.io/en/stable/config-file/v2.html#build-apt-packages\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "qtgallery",
  "package_url": "https://pypi.org/project/qtgallery/",
  "project_url": "https://pypi.org/project/qtgallery/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/qtgallery/0.0.2/",
  "requires_dist": [
    "qtpy",
    "pyvirtualdisplay",
    "sphinx-gallery",
    "pillow",
    "sphinx-rtd-theme"
  ],
  "requires_python": "",
  "summary": "sphinx-gallery scraper for qt examples and tutorials",
  "version": "0.0.2",
  "releases": [],
  "developers": [
    "ixjlyons@gmail.com",
    "kenneth_lyons"
  ],
  "kwds": "qtgallery sphinx_gallery_conf sphinx qtscraper qt",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_qtgallery",
  "homepage": "",
  "release_count": 2,
  "dependency_ids": [
    "pypi_pillow",
    "pypi_pyvirtualdisplay",
    "pypi_qtpy",
    "pypi_sphinx_gallery",
    "pypi_sphinx_rtd_theme"
  ]
}
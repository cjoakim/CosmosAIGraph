{
  "classifiers": [
    "license :: osi approved :: mit license",
    "natural language :: thai",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "topic :: text processing :: linguistic"
  ],
  "description": "[![current pypi packages](https://badge.fury.io/py/spacy-thai.svg)](https://pypi.org/project/spacy-thai/)\n\n# spacy-thai\n\ntokenizer, pos-tagger, and dependency-parser for thai language, working on [universal dependencies](https://github.com/universaldependencies/ud_thai-pud).\n\n## basic usage\n\n```py\n>>> import spacy_thai\n>>> nlp=spacy_thai.load()\n>>> doc=nlp(\"\u0e41\u0e1c\u0e19\u0e01\u0e19\u0e35\u0e49\u0e01\u0e33\u0e25\u0e31\u0e07\u0e40\u0e1c\u0e0a\u0e34\u0e0d\u0e01\u0e31\u0e1a\u0e04\u0e27\u0e32\u0e21\u0e17\u0e49\u0e32\u0e17\u0e32\u0e22\u0e43\u0e2b\u0e21\u0e48\")\n>>> for t in doc:\n...   print(\"\\t\".join([str(t.i+1),t.orth_,t.lemma_,t.pos_,t.tag_,\"_\",str(0 if t.head==t else t.head.i+1),t.dep_,\"_\",\"_\" if t.whitespace_ else \"spaceafter=no\"]))\n...\n1\t\u0e41\u0e1c\u0e19\u0e01\t\u0e41\u0e1c\u0e19\u0e01\tnoun\tncmn\t_\t4\tnsubj\t_\tspaceafter=no\n2\t\u0e19\u0e35\u0e49\t\u0e19\u0e35\u0e49\tdet\tddac\t_\t1\tdet\t_\tspaceafter=no\n3\t\u0e01\u0e33\u0e25\u0e31\u0e07\t\u0e01\u0e33\u0e25\u0e31\u0e07\taux\txvbm\t_\t4\taux\t_\tspaceafter=no\n4\t\u0e40\u0e1c\u0e0a\u0e34\u0e0d\t\u0e40\u0e1c\u0e0a\u0e34\u0e0d\tverb\tvsta\t_\t0\troot\t_\tspaceafter=no\n5\t\u0e01\u0e31\u0e1a\t\u0e01\u0e31\u0e1a\tadp\trpre\t_\t6\tcase\t_\tspaceafter=no\n6\t\u0e04\u0e27\u0e32\u0e21\t\u0e04\u0e27\u0e32\u0e21\tpart\tfixn\t_\t4\tobl\t_\tspaceafter=no\n7\t\u0e17\u0e49\u0e32\u0e17\u0e32\u0e22\t\u0e17\u0e49\u0e32\u0e17\u0e32\u0e22\tverb\tvact\t_\t6\tacl\t_\tspaceafter=no\n8\t\u0e43\u0e2b\u0e21\u0e48\t\u0e43\u0e2b\u0e21\u0e48\tadv\tadvn\t_\t7\tadvmod\t_\tspaceafter=no\n>>> import deplacy\n>>> deplacy.render(doc,wordright=true)\n nsubj \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550>\u2554\u2550 noun \u0e41\u0e1c\u0e19\u0e01\n   det \u2551         \u255a> det  \u0e19\u0e35\u0e49\n   aux \u2551 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550> aux  \u0e01\u0e33\u0e25\u0e31\u0e07\n  root \u255a\u2550\u255a\u2550\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550 verb \u0e40\u0e1c\u0e0a\u0e34\u0e0d\n  case     \u2551 \u2554\u2550\u2550\u2550\u2550> adp  \u0e01\u0e31\u0e1a\n   obl     \u255a>\u255a\u2550\u2554\u2550\u2550\u2550 part \u0e04\u0e27\u0e32\u0e21\n   acl         \u255a>\u2554\u2550 verb \u0e17\u0e49\u0e32\u0e17\u0e32\u0e22\nadvmod           \u255a> adv  \u0e43\u0e2b\u0e21\u0e48\n```\n\n## installation for linux\n\n```sh\npip3 install spacy_thai --user\n```\n\n## installation for cygwin\n\nmake sure to get `python37-devel` `python37-pip` `python37-numpy` `python37-cython` `gcc-g++`, and then:\n\n```sh\npip3.7 install spacy_thai\n```\n\n## installation for google colaboratory\n\n```py\n!pip install spacy_thai\n```\n\ntry [notebook](https://colab.research.google.com/github/koichiyasuoka/spacy-thai/blob/master/spacy_thai.ipynb).\n\n\n\n",
  "docs_url": null,
  "keywords": "spacy udpipe nlp",
  "license": "mit",
  "name": "spacy-thai",
  "package_url": "https://pypi.org/project/spacy-thai/",
  "project_url": "https://pypi.org/project/spacy-thai/",
  "project_urls": {
    "Homepage": "https://github.com/KoichiYasuoka/spaCy-Thai",
    "Source": "https://github.com/KoichiYasuoka/spaCy-Thai",
    "Tracker": "https://github.com/KoichiYasuoka/spaCy-Thai/issues"
  },
  "release_url": "https://pypi.org/project/spacy-thai/0.7.3/",
  "requires_dist": [
    "deplacy (>=2.0.3)",
    "pythainlp (>=2.3.2)",
    "spacy (>=2.2.2)",
    "ufal.udpipe (>=1.2.0)"
  ],
  "requires_python": ">=3.6",
  "summary": "dependency-parser for thai language",
  "version": "0.7.3",
  "releases": [],
  "developers": [
    "koichi_yasuoka",
    "yasuoka@kanji.zinbun.kyoto-u.ac.jp"
  ],
  "kwds": "spacy_thai ud_thai thai spacy nlp",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_spacy_thai",
  "homepage": "https://github.com/koichiyasuoka/spacy-thai",
  "release_count": 29,
  "dependency_ids": [
    "pypi_deplacy",
    "pypi_pythainlp",
    "pypi_spacy",
    "pypi_ufal.udpipe"
  ]
}
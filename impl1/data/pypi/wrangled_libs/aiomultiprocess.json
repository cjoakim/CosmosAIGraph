{
  "classifiers": [
    "development status :: 4 - beta",
    "framework :: asyncio",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "topic :: software development :: libraries"
  ],
  "description": "aiomultiprocess\n===============\n\ntake a modern python codebase to the next level of performance.\n\n[![version](https://img.shields.io/pypi/v/aiomultiprocess.svg)](https://pypi.org/project/aiomultiprocess)\n[![documentation](https://readthedocs.org/projects/aiosqlite/badge/?version=latest)](https://aiomultiprocess.omnilib.dev)\n[![changelog](https://img.shields.io/badge/change-log-blue)](https://aiomultiprocess.omnilib.dev/en/latest/changelog.html)\n[![license](https://img.shields.io/pypi/l/aiomultiprocess.svg)](https://github.com/omnilib/aiomultiprocess/blob/master/license)\n[![build status](https://github.com/omnilib/aiomultiprocess/workflows/build/badge.svg)](https://github.com/omnilib/aiomultiprocess/actions)\n[![code coverage](https://img.shields.io/codecov/c/gh/omnilib/aiomultiprocess)](https://codecov.io/gh/omnilib/aiomultiprocess)\n[![code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\non their own, asyncio and multiprocessing are useful, but limited:\nasyncio still can't exceed the speed of gil, and multiprocessing only works on\none task at a time.  but together, they can fully realize their true potential.\n\naiomultiprocess presents a simple interface, while running a full asyncio event\nloop on each child process, enabling levels of concurrency never before seen\nin a python application.  each child process can execute multiple coroutines\nat once, limited only by the workload and number of cores available.\n\ngathering tens of thousands of network requests in seconds is as easy as:\n\n```python\nasync with pool() as pool:\n    results = await pool.map(<coroutine function>, <items>)\n```\n\ninstall\n-------\n\naiomultiprocess requires python 3.6 or newer.\nyou can install it from pypi:\n\n```bash\n$ pip3 install aiomultiprocess\n```\n\n\nusage\n-----\n\nmost of aiomultiprocess mimics the standard multiprocessing module whenever\npossible, while accounting for places that benefit from async functionality.\n\nrunning your asynchronous jobs on a pool of worker processes is easy:\n\n```python\nimport asyncio\nfrom aiohttp import request\nfrom aiomultiprocess import pool\n\nasync def get(url):\n    async with request(\"get\", url) as response:\n        return await response.text(\"utf-8\")\n\nasync def main():\n    urls = [\"https://jreese.sh\", ...]\n    async with pool() as pool:\n        async for result in pool.map(get, urls):\n            ...  # process result\n            \nif __name__ == '__main__':\n    # python 3.7\n    asyncio.run(main())\n    \n    # python 3.6\n    # loop = asyncio.get_event_loop()\n    # loop.run_until_complete(main())\n```\n\ntake a look at the [user guide][] for more details and examples.\n\nfor further context, watch the pycon us 2018 talk about aiomultiprocess,\n[\"thinking outside the gil\"][pycon-2018]:\n\n> [![image alt text](http://img.youtube.com/vi/0kxalh8fz3k/0.jpg)](http://www.youtube.com/watch?v=0kxalh8fz3k \"pycon 2018 - john reese - thinking outside the gil with asyncio and multiprocessing\")\n\nslides available at [speaker deck](https://speakerdeck.com/jreese/thinking-outside-the-gil-2).\n\n\nlicense\n-------\n\naiomultiprocess is copyright [john reese](https://jreese.sh), and licensed under\nthe mit license.  i am providing code in this repository to you under an open\nsource license.  this is my personal repository; the license you receive to\nmy code is from me and not from my employer. see the `license` file for details.\n\n\n[user guide]: https://aiomultiprocess.omnilib.dev/en/latest/guide.html\n[pycon-2018]: https://www.youtube.com/watch?v=0kxalh8fz3k\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "aiomultiprocess",
  "package_url": "https://pypi.org/project/aiomultiprocess/",
  "project_url": "https://pypi.org/project/aiomultiprocess/",
  "project_urls": {
    "Documentation": "https://aioitertools.omnilib.dev/en/latest/",
    "Github": "https://github.com/omnilib/aioitertools",
    "Homepage": "https://aiomultiprocess.omnilib.dev"
  },
  "release_url": "https://pypi.org/project/aiomultiprocess/0.9.0/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "asyncio version of the standard multiprocessing module",
  "version": "0.9.0",
  "releases": [],
  "developers": [
    "john@noswap.com",
    "john_reese"
  ],
  "kwds": "aiosqlite badge aiomultiprocess omnilib changelog",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_aiomultiprocess",
  "homepage": "https://aiomultiprocess.omnilib.dev",
  "release_count": 10,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: isc license (iscl)",
    "operating system :: macos :: macos x",
    "operating system :: posix",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "topic :: terminals"
  ],
  "description": "launch a subprocess in a pseudo terminal (pty), and interact with both the\nprocess and its pty.\n\nsometimes, piping stdin and stdout is not enough. there might be a password\nprompt that doesn't read from stdin, output that changes when it's going to a\npipe rather than a terminal, or curses-style interfaces that rely on a terminal.\nif you need to automate these things, running the process in a pseudo terminal\n(pty) is the answer.\n\ninterface::\n\n    p = ptyprocessunicode.spawn(['python'])\n    p.read(20)\n    p.write('6+6\\n')\n    p.read(20)\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "ptyprocess",
  "package_url": "https://pypi.org/project/ptyprocess/",
  "project_url": "https://pypi.org/project/ptyprocess/",
  "project_urls": {
    "Homepage": "https://github.com/pexpect/ptyprocess"
  },
  "release_url": "https://pypi.org/project/ptyprocess/0.7.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "run a subprocess in a pseudo terminal",
  "version": "0.7.0",
  "releases": [],
  "developers": [
    "thomas@kluyver.me.uk",
    "thomas_kluyver"
  ],
  "kwds": "subprocess python stdout stdin pty",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_ptyprocess",
  "homepage": "https://github.com/pexpect/ptyprocess",
  "release_count": 10,
  "dependency_ids": []
}
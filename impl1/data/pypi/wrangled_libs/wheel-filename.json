{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: system :: software distribution",
    "typing :: typed"
  ],
  "description": ".. image:: http://www.repostatus.org/badges/latest/active.svg\n    :target: http://www.repostatus.org/#active\n    :alt: project status: active \u2014 the project has reached a stable, usable\n          state and is being actively developed.\n\n.. image:: https://github.com/jwodder/wheel-filename/workflows/test/badge.svg?branch=master\n    :target: https://github.com/jwodder/wheel-filename/actions?workflow=test\n    :alt: ci status\n\n.. image:: https://codecov.io/gh/jwodder/wheel-filename/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/jwodder/wheel-filename\n\n.. image:: https://img.shields.io/pypi/pyversions/wheel-filename.svg\n    :target: https://pypi.org/project/wheel-filename/\n\n.. image:: https://img.shields.io/github/license/jwodder/wheel-filename.svg\n    :target: https://opensource.org/licenses/mit\n    :alt: mit license\n\n`github <https://github.com/jwodder/wheel-filename>`_\n| `pypi <https://pypi.org/project/wheel-filename/>`_\n| `issues <https://github.com/jwodder/wheel-filename/issues>`_\n| `changelog <https://github.com/jwodder/wheel-filename/blob/master/changelog.md>`_\n\n``wheel-filename`` lets you verify `wheel\n<https://www.python.org/dev/peps/pep-0427/>`_ filenames and parse them into\ntheir component fields.\n\nthis package adheres strictly to the relevant peps, with the following\nexceptions:\n\n- unlike other filename components, version components may contain the\n  characters ``!`` and ``+`` for full pep 440 support.\n\n- version components may be any sequence of the relevant set of characters;\n  they are not verified for pep 440 compliance.\n\n- the ``.whl`` file extension is matched case-insensitively.\n\n\ninstallation\n============\n``wheel-filename`` requires python 3.6 or higher.  just use `pip\n<https://pip.pypa.io>`_ for python 3 (you have pip, right?) to install\n``wheel-filename``::\n\n    python3 -m pip install wheel-filename\n\n\nexample\n=======\n\n>>> from wheel_filename import parse_wheel_filename\n>>> pwf = parse_wheel_filename('pip-18.0-py2.py3-none-any.whl')\n>>> str(pwf)\n'pip-18.0-py2.py3-none-any.whl'\n>>> pwf.project\n'pip'\n>>> pwf.version\n'18.0'\n>>> pwf.build is none\ntrue\n>>> pwf.python_tags\n['py2', 'py3']\n>>> pwf.abi_tags\n['none']\n>>> pwf.platform_tags\n['any']\n>>> list(pwf.tag_triples())\n['py2-none-any', 'py3-none-any']\n\n\napi\n===\n\n``parse_wheel_filename(filename)``\n   parses a wheel filename (a ``str``, ``bytes``, or ``os.pathlike``) and\n   returns a ``parsedwheelfilename`` instance.  any leading directory\n   components are stripped from the argument before processing.  if the\n   filename is not a valid wheel filename, raises an ``invalidfilenameerror``.\n\n``parsedwheelfilename``\n   a namedtuple representing the components of a wheel filename.  it has the\n   following attributes and methods:\n\n   ``project: str``\n      the name of the project distributed by the wheel\n\n   ``version: str``\n      the version of the project distributed by the wheel\n\n   ``build: optional[str]``\n      the wheel's build tag (``none`` if not defined)\n\n   ``python_tags: list[str]``\n      a list of python tags for the wheel\n\n   ``abi_tags: list[str]``\n      a list of abi tags for the wheel\n\n   ``platform_tags: list[str]``\n      a list of platform tags for the wheel\n\n   ``str(pwf)``\n      stringifying a ``parsedwheelfilename`` returns the original filename\n\n   ``tag_triples() -> iterator[str]``\n      returns an iterator of all simple tag triples formed from the\n      compatibility tags in the filename\n\n``invalidfilenameerror``\n   a subclass of ``valueerror`` raised when an invalid wheel filename is passed\n   to ``parse_wheel_filename()``.  it has a ``filename`` attribute containing\n   the basename of the invalid filename.\n\n\ncommand\n=======\n\n*new in version 1.4.0*\n\n``wheel-filename`` also provides a command of the same name that takes a wheel\nfilename (the actual wheel does not have to exist) and outputs the filename\ncomponents as json.\n\nexample::\n\n    $ wheel-filename pip-18.0-py2.py3-none-any.whl\n    {\n        \"project\": \"pip\",\n        \"version\": \"18.0\",\n        \"build\": null,\n        \"python_tags\": [\n            \"py2\",\n            \"py3\"\n        ],\n        \"abi_tags\": [\n            \"none\"\n        ],\n        \"platform_tags\": [\n            \"any\"\n        ]\n    }\n",
  "docs_url": null,
  "keywords": "filename,pep427,wheel",
  "license": "mit",
  "name": "wheel-filename",
  "package_url": "https://pypi.org/project/wheel-filename/",
  "project_url": "https://pypi.org/project/wheel-filename/",
  "project_urls": {
    "Bug Tracker": "https://github.com/jwodder/wheel-filename/issues",
    "Homepage": "https://github.com/jwodder/wheel-filename",
    "Source Code": "https://github.com/jwodder/wheel-filename"
  },
  "release_url": "https://pypi.org/project/wheel-filename/1.4.1/",
  "requires_dist": [],
  "requires_python": "~=3.6",
  "summary": "parse wheel filenames",
  "version": "1.4.1",
  "releases": [],
  "developers": [
    "john_thorvald_wodder_ii",
    "wheel-filename@varonathe.org"
  ],
  "kwds": "wheel_filename parse_wheel_filename badge badges pyversions",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_wheel_filename",
  "homepage": "https://github.com/jwodder/wheel-filename",
  "release_count": 6,
  "dependency_ids": []
}
{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# python rouge implementation\n\n## overview\n\nthis is a native python implementation of rouge, designed to replicate results\nfrom the original perl package.\n\nmaintainers may be contacted at rouge-opensource@google.com.\n\nrouge was originally introduced in the paper:\n\nlin, chin-yew. rouge: a package for automatic evaluation of summaries. in\nproceedings of the workshop on text summarization branches out (was 2004),\nbarcelona, spain, july 25 - 26, 2004.\n\n## rouge for python\n\nthere are rouge implementations available for python, however some are not\nnative python due to their dependency on the perl script, and others provide\ndiffering results when compared with the original implementation. this makes it\ndifficult to directly compare with known results.\n\nthis package is designed to replicate perl results. it implements:\n\n*   rouge-n (n-gram) scoring\n*   rouge-l (longest common subsequence) scoring\n*   text normalization\n*   bootstrap resampling for confidence interval calculation\n*   optional porter stemming to remove plurals and word suffixes such as (ing,\n    ion, ment).\n\nnote that not all options provided by the original perl rouge script are\nsupported, but the subset of options that are implemented should replicate the\noriginal functionality.\n\n## stopword removal\n\nthe original rouge perl script implemented optional stopword removal (using the\n-s parameter). however, there were ~600 stopwords used by rouge, borrowed from\nanother now defunct package. this word list contained many words that may not be\nsuited to some tasks, such as day and month names and numbers. it also has no\nclear license for redistribution. since we are unable to replicate this\nfunctionality precisely we do not include stopword removal.\n\n## two flavors of rouge-l\nin the rouge paper, two flavors of rouge are described:\n\n1. sentence-level: compute longest common subsequence (lcs) between two pieces of\ntext. newlines are ignored. this is called `rougel` in this package.\n2. summary-level: newlines in the text are interpreted as sentence boundaries,\nand the lcs is computed between each pair of reference and candidate sentences,\nand something called union-lcs is computed. this is called `rougelsum` in this\npackage. this is the rouge-l reported in *[get to the point: summarization with\npointer-generator networks](https://arxiv.org/abs/1704.04368)*, for example.\nif your references/candidates do not have newline delimiters, you can use the\n--split_summaries flag (or optional argument in rougescorer).\n\n## how to run\n\nthis package compares target files (containing one example per line) with\nprediction files in the same format. it can be launched as follows (from\ngoogle-research/):\n\n```shell\npython -m rouge.rouge \\\n    --target_filepattern=*.targets \\\n    --prediction_filepattern=*.decodes \\\n    --output_filename=scores.csv \\\n    --use_stemmer=true \\\n    --split_summaries=true\n```\n\n## using pip\n```\npip install -r rouge/requirements.txt\npip install rouge-score\n```\n\nthen in python:\n\n```python\nfrom rouge_score import rouge_scorer\n\nscorer = rouge_scorer.rougescorer(['rouge1', 'rougel'], use_stemmer=true)\nscores = scorer.score('the quick brown fox jumps over the lazy dog',\n                      'the quick brown dog jumps on the log.')\n```\n\n## license\n\nlicensed under the\n[apache 2.0](https://github.com/google-research/google-research/blob/master/license)\nlicense.\n\n## disclaimer\n\nthis is not an official google product.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "rouge-score",
  "package_url": "https://pypi.org/project/rouge-score/",
  "project_url": "https://pypi.org/project/rouge-score/",
  "project_urls": {
    "Homepage": "https://github.com/google-research/google-research/tree/master/rouge"
  },
  "release_url": "https://pypi.org/project/rouge-score/0.1.2/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "pure python implementation of rouge-1.5.5.",
  "version": "0.1.2",
  "releases": [],
  "developers": [
    "google_llc",
    "rouge-opensource@google.com"
  ],
  "kwds": "perl summarization rouge_score split_summaries stemming",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_rouge_score",
  "homepage": "https://github.com/google-research/google-research/tree/master/rouge",
  "release_count": 9,
  "dependency_ids": []
}
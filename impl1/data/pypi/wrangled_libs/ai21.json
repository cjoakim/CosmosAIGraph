{
  "classifiers": [],
  "description": "# ai21 studio client\npython client for the ai21 studio api\n\n## api keys\napi key can be set globally, using ai21.api_key, or alternatively - be passed to any function call\nas a named argument. for example - ai21.dataset.get(api_key=api_key)\n\n## installation:\n`pip install -u ai21`\n\n## client customization\nthe ai21 namespace has parameters that one can set globally, and they will\nbe used by all the following client calls.\none can also pass each of these parameters as a named argument.\nif a parameter is overridden globally, and also passed as a named argument -\nthe passed named argument will be used with the following client calls.\nthe supported parameters are described below:\n```text\n* api_key (str) - the key to be used for the authorization header\n* organization (str) - this information is sent as part of the user-agent\n* application (str) - this information is sent as part of the user-agent\n* api_version (str) - the api version. (i.e. v1 / v2). default=v1\n* api_host (str) - the api host. default=https://api.ai21.com\n* timeout_sec (int) - the number of seconds the client must wait before cutting the connection. default=30\n* num_retries (int) - the number of attempts to retry a failure response. default=0 (no retries)\n* log_level (str) - debug / info / error (default=error)\n```\n### retry on failure\nby default, there is no retry on failures. if setting the num_retries parameter\nto an integer greater than 0, then all the following client calls will retry up to the specified\nnumber of times on the following http error codes: 429, 500, 503.\n\n### documentation & resources\nhttps://docs.ai21.com/\n\n## usage\n\n### studio api\nin the following example, an ai21 api client is used with an api key and a timeout parameter set globally.\nthis example uses a simple completion call with only prompt and maxtokens arguments supplied\n(all other completion settings are set to their defaults):\n```python\nimport ai21\n\nai21.api_key = 'my_api_key'\nai21.timeout_sec = 20\nresponse = ai21.completion.execute(\n    model=\"j2-ultra\",\n    prompt=\"write a news release in the voice of a global banking conglomerate announcing an unprecedented building campaign to expand and rebuild their corporate headquarters in alpha centauri.\",\n    maxtokens=200,\n)\nprint(response)\n```\n\n### aws client\nthis python sdk can also be used to invoke jurassic models as a sagemaker (sm) endpoint or as an aws bedrock api.\nto activate this option, make sure to install with the extra aws dependencies:\n\n`pip install -u \"ai21[aws]\"`\n\n#### sagemaker endpoint request\nyou can then generate a completion by running:\n```python\nimport ai21\n\nresponse = ai21.completion.execute(\n    destination=ai21.sagemakerdestination(\"<your_endpoint_name>\"),\n    prompt=\"write a news release in the voice of a global banking conglomerate announcing an unprecedented building campaign to expand and rebuild their corporate headquarters in alpha centauri.\",\n    maxtokens=200,\n)\n\nprint(response)\n```\n\n#### bedrock api request\nyou can use one of the models offered in the following list as model_id:\n- ai21.j2-mid\n- ai21.j2-ultra\n\n```python\nimport ai21\n\n# the bedrock api is available only to us-east-1 scoped clients right now\nai21.aws_region = 'us-east-1'\n\nresponse = ai21.completion.execute(\n    destination=ai21.bedrockdestination(model_id=ai21.bedrockmodelid.j2_ultra),\n    prompt=\"write a news release in the voice of a global banking conglomerate announcing an unprecedented building campaign to expand and rebuild their corporate headquarters in alpha centauri.\",\n    maxtokens=200,\n)\n\nprint(response)\n```\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "ai21",
  "package_url": "https://pypi.org/project/ai21/",
  "project_url": "https://pypi.org/project/ai21/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/ai21/1.3.3/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "",
  "version": "1.3.3",
  "releases": [],
  "developers": [
    "ai21_labs",
    "support@ai21.com"
  ],
  "kwds": "api_key my_api_key api_version pip ai21",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_ai21",
  "homepage": "",
  "release_count": 27,
  "dependency_ids": []
}
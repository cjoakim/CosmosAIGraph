{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "framework :: pytest",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "operating system :: posix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9",
    "topic :: software development :: testing",
    "topic :: system :: systems administration"
  ],
  "description": "##################################\ntestinfra test your infrastructure\n##################################\n\nlatest documentation: https://testinfra.readthedocs.io/en/latest\n\nabout\n=====\n\nwith testinfra you can write unit tests in python to test *actual state* of\nyour servers configured by management tools like salt_, ansible_, puppet_,\nchef_ and so on.\n\ntestinfra aims to be a serverspec_ equivalent in python and is written as\na plugin to the powerful pytest_ test engine\n\nlicense\n=======\n\n`apache license 2.0 <https://github.com/pytest-dev/pytest-testinfra/blob/main/license>`_\n\nthe logo is licensed under the `creative commons noderivatives 4.0 license <https://creativecommons.org/licenses/by-nd/4.0/>`_\nif you have some other use in mind, contact us.\n\nquick start\n===========\n\ninstall testinfra using pip::\n\n    $ pip install pytest-testinfra\n\n    # or install the devel version\n    $ pip install 'git+https://github.com/pytest-dev/pytest-testinfra@main#egg=pytest-testinfra'\n\n\nwrite your first tests file to `test_myinfra.py`:\n\n.. code-block:: python\n\n    def test_passwd_file(host):\n        passwd = host.file(\"/etc/passwd\")\n        assert passwd.contains(\"root\")\n        assert passwd.user == \"root\"\n        assert passwd.group == \"root\"\n        assert passwd.mode == 0o644\n\n\n    def test_nginx_is_installed(host):\n        nginx = host.package(\"nginx\")\n        assert nginx.is_installed\n        assert nginx.version.startswith(\"1.2\")\n\n\n    def test_nginx_running_and_enabled(host):\n        nginx = host.service(\"nginx\")\n        assert nginx.is_running\n        assert nginx.is_enabled\n\n\nand run it::\n\n    $ py.test -v test_myinfra.py\n\n\n    ====================== test session starts ======================\n    platform linux -- python 2.7.3 -- py-1.4.26 -- pytest-2.6.4\n    plugins: testinfra\n    collected 3 items\n\n    test_myinfra.py::test_passwd_file[local] passed\n    test_myinfra.py::test_nginx_is_installed[local] passed\n    test_myinfra.py::test_nginx_running_and_enabled[local] passed\n\n    =================== 3 passed in 0.66 seconds ====================\n\n\n.. _salt: https://saltstack.com/\n.. _ansible: https://www.ansible.com/\n.. _puppet: https://puppetlabs.com/\n.. _chef: https://www.chef.io/\n.. _serverspec: https://serverspec.org/\n.. _pytest: https://pytest.org/\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "pytest-testinfra",
  "package_url": "https://pypi.org/project/pytest-testinfra/",
  "project_url": "https://pypi.org/project/pytest-testinfra/",
  "project_urls": {
    "Homepage": "https://github.com/pytest-dev/pytest-testinfra"
  },
  "release_url": "https://pypi.org/project/pytest-testinfra/10.0.0/",
  "requires_dist": [
    "pytest !=3.0.2",
    "ansible ; extra == 'ansible'",
    "paramiko ; extra == 'paramiko'",
    "salt ; extra == 'salt'",
    "pywinrm ; extra == 'winrm'"
  ],
  "requires_python": ">=3.9",
  "summary": "test infrastructures",
  "version": "10.0.0",
  "releases": [],
  "developers": [
    "phil@philpep.org",
    "philippe_pepiot"
  ],
  "kwds": "testinfra test_myinfra ansible ansible_ _ansible",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pytest_testinfra",
  "homepage": "https://github.com/pytest-dev/pytest-testinfra",
  "release_count": 15,
  "dependency_ids": [
    "pypi_ansible",
    "pypi_paramiko",
    "pypi_pytest",
    "pypi_pywinrm",
    "pypi_salt"
  ]
}
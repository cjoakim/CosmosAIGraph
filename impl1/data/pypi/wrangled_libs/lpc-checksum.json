{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9",
    "topic :: software development :: embedded systems"
  ],
  "description": "# lpc_checksum\npython script to calculate lpc firmware checksums, based on the c version by\nroel verdult. it can be used as a standalone application, or as a python module\nthat integrates directly in a build environment (e.g. scons). it does not need\nto be compiled.\n\n[![linting](https://github.com/basilfx/lpc_checksum/actions/workflows/lint.yml/badge.svg)](https://github.com/basilfx/lpc_checksum/actions/workflows/lint.yml)\n[![testing](https://github.com/basilfx/lpc_checksum/actions/workflows/test.yml/badge.svg)](https://github.com/basilfx/lpc_checksum/actions/workflows/test.yml)\n[![pypi version](https://badge.fury.io/py/lpc-checksum.svg)](https://badge.fury.io/py/lpc-checksum)\n\n## requirements\nthe only requirement is python 3.9 or newer.\n\n## installation\nthis module can be installed from pypi via `pip install lpc_checksum`.\n\nalternatively, you can install the latest version by cloning this repository\nand run `python setup.py install`.\n\n## usage\nthere are two ways of using `lpc_checksum`.\n\n### standalone\nwhen installed via pip or from source, the command `lpc_checksum` should be\navailable on your path. by default, it assumes the input file is a binary file.\n\n`lpc_checksum <firmware.bin|hex> [--format=bin] [--read-only]`\n\nprogram exits with a non-zero error code when it failed.\n\n### as a module\n```\nimport lpc_checksum\n\nchecksum = lpc_checksum.checksum(input_file, [read_only=true])\n```\n\non error, an exception will be raised.\n\n## tests\nto run the tests, please clone this repository and run `poetry run pytest`.\n\n## contributing\nsee the [`contributing.md`](contributing.md) file.\n\n## license\nsee the [`license.md`](license.md) file (mit license).\n",
  "docs_url": null,
  "keywords": "lpc,mcu,cortex,nxp,flashing",
  "license": "mit",
  "name": "lpc-checksum",
  "package_url": "https://pypi.org/project/lpc-checksum/",
  "project_url": "https://pypi.org/project/lpc-checksum/",
  "project_urls": {
    "Homepage": "https://github.com/basilfx/lpc_checksum",
    "Repository": "https://github.com/basilfx/lpc_checksum"
  },
  "release_url": "https://pypi.org/project/lpc-checksum/3.0.0/",
  "requires_dist": [
    "intelhex (>=2.3.0,<3.0.0)"
  ],
  "requires_python": ">=3.9,<4.0",
  "summary": "python script to calculate lpc firmware checksums",
  "version": "3.0.0",
  "releases": [],
  "developers": [
    "bas_stottelaar",
    "basstottelaar@gmail.com"
  ],
  "kwds": "lpc_checksum lpc checksums workflows checksum",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_lpc_checksum",
  "homepage": "https://github.com/basilfx/lpc_checksum",
  "release_count": 8,
  "dependency_ids": [
    "pypi_intelhex"
  ]
}
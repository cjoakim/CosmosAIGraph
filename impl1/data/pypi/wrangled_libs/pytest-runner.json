{
  "classifiers": [
    "development status :: 7 - inactive",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only"
  ],
  "description": ".. image:: https://img.shields.io/pypi/v/pytest-runner.svg\n   :target: `pypi link`_\n\n.. image:: https://img.shields.io/pypi/pyversions/pytest-runner.svg\n   :target: `pypi link`_\n\n.. _pypi link: https://pypi.org/project/pytest-runner\n\n.. image:: https://github.com/pytest-dev/pytest-runner/workflows/tests/badge.svg\n   :target: https://github.com/pytest-dev/pytest-runner/actions?query=workflow%3a%22tests%22\n   :alt: tests\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: code style: black\n\n.. .. image:: https://readthedocs.org/projects/skeleton/badge/?version=latest\n..    :target: https://skeleton.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://img.shields.io/badge/skeleton-2022-informational\n   :target: https://blog.jaraco.com/skeleton\n\n.. image:: https://tidelift.com/badges/package/pypi/pytest-runner\n   :target: https://tidelift.com/subscription/pkg/pypi-pytest-runner?utm_source=pypi-pytest-runner&utm_medium=readme\n\nsetup scripts can use pytest-runner to add setup.py test support for pytest\nrunner.\n\ndeprecation notice\n==================\n\npytest-runner depends on deprecated features of setuptools and relies on features that break security\nmechanisms in pip. for example 'setup_requires' and 'tests_require' bypass ``pip --require-hashes``.\nsee also `pypa/setuptools#1684 <https://github.com/pypa/setuptools/issues/1684>`_.\n\nit is recommended that you:\n\n- remove ``'pytest-runner'`` from your ``setup_requires``, preferably removing the ``setup_requires`` option.\n- remove ``'pytest'`` and any other testing requirements from ``tests_require``, preferably removing the ``tests_requires`` option.\n- select a tool to bootstrap and then run tests such as tox.\n\nusage\n=====\n\n- add 'pytest-runner' to your 'setup_requires'. pin to '>=2.0,<3dev' (or\n  similar) to avoid pulling in incompatible versions.\n- include 'pytest' and any other testing requirements to 'tests_require'.\n- invoke tests with ``setup.py pytest``.\n- pass ``--index-url`` to have test requirements downloaded from an alternate\n  index url (unnecessary if specified for easy_install in setup.cfg).\n- pass additional py.test command-line options using ``--addopts``.\n- set permanent options for the ``python setup.py pytest`` command (like ``index-url``)\n  in the ``[pytest]`` section of ``setup.cfg``.\n- set permanent options for the ``py.test`` run (like ``addopts`` or ``pep8ignore``) in the ``[pytest]``\n  section of ``pytest.ini`` or ``tox.ini`` or put them in the ``[tool:pytest]``\n  section of ``setup.cfg``. see `pytest issue 567\n  <https://github.com/pytest-dev/pytest/issues/567>`_.\n- optionally, set ``test=pytest`` in the ``[aliases]`` section of ``setup.cfg``\n  to cause ``python setup.py test`` to invoke pytest.\n\nexample\n=======\n\nthe most simple usage looks like this in setup.py::\n\n    setup(\n        setup_requires=[\n            'pytest-runner',\n        ],\n        tests_require=[\n            'pytest',\n        ],\n    )\n\nadditional dependencies require to run the tests (e.g. mock or pytest\nplugins) may be added to tests_require and will be downloaded and\nrequired by the session before invoking pytest.\n\nfollow `this search on github\n<https://github.com/search?utf8=%e2%9c%93&q=filename%3asetup.py+pytest-runner&type=code&ref=searchresults>`_\nfor examples of real-world usage.\n\nstandalone example\n==================\n\nthis technique is deprecated - if you have standalone scripts\nyou wish to invoke with dependencies, `use pip-run\n<https://pypi.org/project/pip-run>`_.\n\nalthough ``pytest-runner`` is typically used to add pytest test\nrunner support to maintained packages, ``pytest-runner`` may\nalso be used to create standalone tests. consider `this example\nfailure <https://gist.github.com/jaraco/d979a558bc0bf2194c23>`_,\nreported in `jsonpickle #117\n<https://github.com/jsonpickle/jsonpickle/issues/117>`_\nor `this mongodb test\n<https://gist.github.com/jaraco/0b9e482f5c0a1300dc9a>`_\ndemonstrating a technique that works even when dependencies\nare required in the test.\n\neither example file may be cloned or downloaded and simply run on\nany system with python and setuptools. it will download the\nspecified dependencies and run the tests. afterward, the the\ncloned directory can be removed and with it all trace of\ninvoking the test. no other dependencies are needed and no\nsystem configuration is altered.\n\nthen, anyone trying to replicate the failure can do so easily\nand with all the power of pytest (rewritten assertions,\nrich comparisons, interactive debugging, extensibility through\nplugins, etc).\n\nas a result, the communication barrier for describing and\nreplicating failures is made almost trivially low.\n\nconsiderations\n==============\n\nconditional requirement\n-----------------------\n\nbecause it uses setuptools setup_requires, pytest-runner will install itself\non every invocation of setup.py. in some cases, this causes delays for\ninvocations of setup.py that will never invoke pytest-runner. to help avoid\nthis contingency, consider requiring pytest-runner only when pytest\nis invoked::\n\n    needs_pytest = {'pytest', 'test', 'ptr'}.intersection(sys.argv)\n    pytest_runner = ['pytest-runner'] if needs_pytest else []\n\n    # ...\n\n    setup(\n        #...\n        setup_requires=[\n            #... (other setup requirements)\n        ] + pytest_runner,\n    )\n\nfor enterprise\n==============\n\navailable as part of the tidelift subscription.\n\nthis project and the maintainers of thousands of other packages are working with tidelift to deliver one enterprise subscription that covers all of the open source you use.\n\n`learn more <https://tidelift.com/subscription/pkg/pypi-project?utm_source=pypi-project&utm_medium=referral&utm_campaign=github>`_.\n\nsecurity contact\n================\n\nto report a security vulnerability, please use the\n`tidelift security contact <https://tidelift.com/security>`_.\ntidelift will coordinate the fix and disclosure.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "pytest-runner",
  "package_url": "https://pypi.org/project/pytest-runner/",
  "project_url": "https://pypi.org/project/pytest-runner/",
  "project_urls": {
    "Homepage": "https://github.com/pytest-dev/pytest-runner/"
  },
  "release_url": "https://pypi.org/project/pytest-runner/6.0.1/",
  "requires_dist": [
    "sphinx ; extra == 'docs'",
    "jaraco.packaging >=9 ; extra == 'docs'",
    "rst.linker >=1.9 ; extra == 'docs'",
    "jaraco.tidelift >=1.4 ; extra == 'docs'",
    "pytest >=6 ; extra == 'testing'",
    "pytest-checkdocs >=2.4 ; extra == 'testing'",
    "pytest-flake8 ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pytest-enabler >=1.0.1 ; extra == 'testing'",
    "pytest-virtualenv ; extra == 'testing'",
    "types-setuptools ; extra == 'testing'",
    "pytest-black >=0.3.7 ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
    "pytest-mypy >=0.9.1 ; (platform_python_implementation != \"PyPy\") and extra == 'testing'"
  ],
  "requires_python": ">=3.7",
  "summary": "invoke py.test as distutils command with dependency resolution",
  "version": "6.0.1",
  "releases": [],
  "developers": [
    "jaraco@jaraco.com",
    "jason_r"
  ],
  "kwds": "pytest_runner pytest needs_pytest pypi _pypi",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pytest_runner",
  "homepage": "https://github.com/pytest-dev/pytest-runner/",
  "release_count": 47,
  "dependency_ids": [
    "pypi_jaraco.packaging",
    "pypi_jaraco.tidelift",
    "pypi_pytest",
    "pypi_pytest_black",
    "pypi_pytest_checkdocs",
    "pypi_pytest_cov",
    "pypi_pytest_enabler",
    "pypi_pytest_flake8",
    "pypi_pytest_mypy",
    "pypi_pytest_virtualenv",
    "pypi_rst.linker",
    "pypi_sphinx",
    "pypi_types_setuptools"
  ]
}
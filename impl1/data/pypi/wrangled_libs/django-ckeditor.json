{
  "classifiers": [
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http :: dynamic content"
  ],
  "description": "django ckeditor\n===============\n\n.. image:: https://img.shields.io/pypi/v/django-ckeditor.svg\n   :target: https://pypi.python.org/pypi/django-ckeditor\n\n.. image:: https://img.shields.io/pypi/pyversions/django-ckeditor.svg\n   :target: https://pypi.org/project/django-ckeditor/\n\n.. image:: https://img.shields.io/pypi/djversions/django-ckeditor.svg\n   :target: https://pypi.org/project/django-ckeditor/\n\n.. image:: https://github.com/django-ckeditor/django-ckeditor/workflows/tests/badge.svg\n   :target: https://github.com/django-ckeditor/django-ckeditor/actions\n\n.. image:: https://readthedocs.org/projects/django-ckeditor/badge/?version=latest&style=flat\n   :target: https://django-ckeditor.readthedocs.io/en/latest/\n\n\n**django admin ckeditor integration.**\n\nprovides a ``richtextfield``, ``richtextuploadingfield``, ``ckeditorwidget`` and ``ckeditoruploadingwidget`` utilizing ckeditor with image uploading and browsing support included.\n\nthis version also includes:\n\n#. support to django-storages (works with s3)\n#. updated ckeditor to version 4.18.0\n#. included all ckeditor language and plugin files to make everyone happy! ( `only the plugins maintained by the ckeditor develops team <https://github.com/ckeditor/ckeditor-dev/tree/4.6.2/plugins>`__ )\n\n.. contents:: contents\n   :depth: 5\n\ninstallation\n------------\n\nrequired\n~~~~~~~~\n#. install or add django-ckeditor to your python path.\n   ::\n\n        pip install django-ckeditor\n\n#. add ``ckeditor`` to your ``installed_apps`` setting.\n\n#. run the ``collectstatic`` management command: ``$ ./manage.py collectstatic``. this will copy static ckeditor required media resources into the directory given by the ``static_root`` setting. see `django's documentation on managing static files <https://docs.djangoproject.com/en/dev/howto/static-files>`__ for more info.\n\n#. ckeditor needs to know where its assets are located because it loads them\n   lazily only when needed. the location is determined in the ``ckeditor-init.js``\n   script. and defaults to ``static/ckeditor/ckeditor/``. this does not work all\n   the time, for example when using ``manifeststaticfilesstorage``, any asset\n   packaging pipeline or whatnot. django-ckeditor is quite good at automatically\n   detecting the correct place even then, but sometimes you have to hardcode\n   ``ckeditor_basepath`` somewhere. this can be hardcoded in settings, i.e.::\n\n        ckeditor_basepath = \"/my_static/ckeditor/ckeditor/\"\n\n   it is possible to override\n   the ``admin/change_form.html`` template with your own if you really need to do\n   this, i.e.::\n\n        {% extends \"admin/change_form.html\" %}\n\n        {% block extrahead %}\n        <script>window.ckeditor_basepath = '/my_static/ckeditor/ckeditor/';</script>\n        {{ block.super }}\n        {% endblock %}\n\n   of course, you should adapt this snippet to your needs when using\n   ckeditor outside the admin app.\n\n\nrequired for using widget with file upload\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n#. add ``ckeditor_uploader`` to your ``installed_apps`` setting.\n\n#. add a ``ckeditor_upload_path`` setting to the project's ``settings.py`` file. this setting specifies a relative path to your ckeditor media upload directory. ckeditor uses django's storage api. by default, django uses the file system storage backend (it will use your ``media_root`` and ``media_url``) and if you don't use a different backend you have to have write permissions for the ``ckeditor_upload_path`` path within ``media_root``, i.e.::\n\n        ckeditor_upload_path = \"uploads/\"\n\n   when using default file system storage, images will be uploaded to \"uploads\" folder in your ``media_root`` and urls will be created against ``media_url`` (``/media/uploads/image.jpg``).\n\n   if you want to be able to have control over filename generation, you have to add a custom filename generator to your settings::\n\n        # utils.py\n\n        def get_filename(filename, request):\n            return filename.upper()\n\n   ::\n\n        # settings.py\n\n        ckeditor_filename_generator = 'utils.get_filename'\n\n   ckeditor has been tested with django filesystemstorage and s3botostorage.\n   there are issues using s3storage from django-storages.\n\n#. for the default filesystem storage configuration, ``media_root`` and ``media_url`` must be set correctly for the media files to work (like those uploaded by the ckeditor widget).\n\n#. add ckeditor url include to your project's ``urls.py`` file::\n\n    path('ckeditor/', include('ckeditor_uploader.urls')),\n\n#. note that by adding those urls you add views that can upload and browse through uploaded images. since django-ckeditor 4.4.6, those views are decorated using ``@staff_member_required``. if you want a different permission decorator (``login_required``, ``user_passes_test`` etc.) then add views defined in ``ckeditor.urls`` manually to your urls.py.\n\n\noptional - customizing ckeditor editor\n--------------------------------------\n\n#. add a ckeditor_configs setting to the project's ``settings.py`` file. this specifies sets of ckeditor settings that are passed to ckeditor (see ckeditor's `setting configurations <http://docs.ckeditor.com/#!/guide/dev_configuration>`__), i.e.::\n\n       ckeditor_configs = {\n           'awesome_ckeditor': {\n               'toolbar': 'basic',\n           },\n       }\n\n   the name of the settings can be referenced when instantiating a richtextfield::\n\n       content = richtextfield(config_name='awesome_ckeditor')\n\n   the name of the settings can be referenced when instantiating a ckeditorwidget::\n\n       widget = ckeditorwidget(config_name='awesome_ckeditor')\n\n   by specifying a set named ``default`` you'll be applying its settings to all richtextfield and ckeditorwidget objects for which ``config_name`` has not been explicitly defined ::\n\n       ckeditor_configs = {\n           'default': {\n               'toolbar': 'full',\n               'height': 300,\n               'width': 300,\n           },\n       }\n\n   it is possible to create a custom toolbar ::\n\n        ckeditor_configs = {\n            'default': {\n                'toolbar': 'custom',\n                'toolbar_custom': [\n                    ['bold', 'italic', 'underline'],\n                    ['numberedlist', 'bulletedlist', '-', 'outdent', 'indent', '-', 'justifyleft', 'justifycenter', 'justifyright', 'justifyblock'],\n                    ['link', 'unlink'],\n                    ['removeformat', 'source']\n                ]\n            }\n        }\n\n   if you want or need plugins which are not part of django-ckeditor's\n   plugin set you may specify assets and plugins as follows::\n\n        text = richtextfield(\n            config_name='forum-post',\n\n            # ckeditor.config.extraplugins:\n            extra_plugins=['someplugin'],\n\n            # ckeditor.plugins.addexternal(...)\n            external_plugin_resources=[(\n                'someplugin',\n                '/static/.../path-to-someplugin/',\n                'plugin.js',\n            )],\n        )\n\n    alternatively, those settings can also be provided through\n    ``ckeditor_configs``.\n\n\noptional for file upload\n~~~~~~~~~~~~~~~~~~~~~~~~\n#. all uploaded files are slugified by default. to disable this feature, set ``ckeditor_upload_slugify_filename`` to ``false``.\n\n#. set the ``ckeditor_restrict_by_user`` setting to ``true`` in the project's ``settings.py`` file (default ``false``). this restricts access to uploaded images to the uploading user (e.g. each user only sees and uploads their own images).  upload paths are prefixed by the string returned by ``get_username``.  if ``ckeditor_restrict_by_user`` is set to a string, the named property is used instead.  superusers can still see all images. **note**: this restriction is only enforced within the ckeditor media browser.\n\n#. set the ``ckeditor_browse_show_dirs`` setting to ``true`` to show directories on the \"browse server\" page. this enables image grouping by directory they are stored in, sorted by date.\n\n#. set the ``ckeditor_restrict_by_date`` setting to ``true`` to bucked uploaded files by year/month/day.\n\n#. you can set a custom file storage for ckeditor uploader by defining it under ``ckeditor_storage_backend`` variable in settings.\n\n#. you can set ``ckeditor_image_backend`` to one of the supported backends to enable thumbnails in ckeditor gallery.\n   by default, no thumbnails are created and full-size images are used as preview.\n   supported backends:\n\n   - ``ckeditor_uploader.backends.pillowbackend``: uses pillow\n\n#. with the ``pillowbackend`` backend, you can change the thumbnail size with the ``ckeditor_thumbnail_size`` setting (formerly ``thumbnail_size``).\n   default value: (75, 75)\n\n#. with the ``pillowbackend`` backend, you can convert and compress the uploaded images to jpeg, to save disk space.\n   set the ``ckeditor_force_jpeg_compression`` setting to ``true`` (default ``false``)\n   you can change the ``ckeditor_image_quality`` setting (formerly ``image_quality``), which is passed to pillow:\n\n    the image quality, on a scale from 1 (worst) to 95 (best). the default is 75. values above 95\n    should be avoided; 100 disables portions of the jpeg compression algorithm and results in\n    large files with hardly any gain in image quality.\n\n   this feature is disabled for animated images.\n\nusage\n-----\n\nfield\n~~~~~\nthe quickest way to add rich text editing capabilities to your models is to use the included ``richtextfield`` model field type. a ckeditor widget is rendered as the form field but in all other regards the field behaves like the standard django ``textfield``. for example::\n\n    from django.db import models\n    from ckeditor.fields import richtextfield\n\n    class post(models.model):\n        content = richtextfield()\n\n**for file upload support** use ``richtextuploadingfield`` from ``ckeditor_uploader.fields``.\n\n\nwidget\n~~~~~~\nalternatively, you can use the included ``ckeditorwidget`` as the widget for a formfield. for example::\n\n    from django import forms\n    from django.contrib import admin\n    from ckeditor.widgets import ckeditorwidget\n\n    from post.models import post\n\n    class postadminform(forms.modelform):\n        content = forms.charfield(widget=ckeditorwidget())\n        class meta:\n            model = post\n            fields = '__all__'\n\n    class postadmin(admin.modeladmin):\n        form = postadminform\n\n    admin.site.register(post, postadmin)\n\n**for file upload support** use ``ckeditoruploadingwidget`` from ``ckeditor_uploader.widgets``.\n\n\n**overriding widget template**\n\nin django >=1.11 for overriding ``ckeditor/widget.html`` you have three ways:\n\n\n#. place ``ckeditor/widget.html`` in  ``base_dir/templates``\n\n   - change ``form_renderer`` to ``templatesettings``.\n\n   ::\n\n       form_renderer = 'django.forms.renderers.templatessetting'\n\n\n   - include ``templates`` folder in ``dirs``\n\n   ::\n\n       templates = [{\n           ...\n           'dirs': [os.path.join(base_dir, 'templates'), ],\n           ...\n       }]\n\n\n   - add ``'django.forms'`` to ``installed_apps``.\n\n\n#. place ``ckeditor/widget.html`` in ``your_app/templates`` and place ``'your_app'`` **before** ``'ckeditor'`` and ``'ckeditor_uploader'`` in ``installed_apps``.\n\n#. inherit from ``ckeditorwidget`` and override ``template_name`` with a custom template available in templates dirs as defined settings.py.\n\n   ::\n\n      class mycustomckeditorwidget(ckeditorwidget):\n         template_name = \"templates/custom_ckeditor/widget.html\"\n\noutside of django admin\n~~~~~~~~~~~~~~~~~~~~~~~\n\nwhen you are rendering a form outside the admin panel, you'll have to make sure all form media is present for the editor to work. one way to achieve this is like this::\n\n    <form>\n        {{ myform.media }}\n        {{ myform.as_p }}\n        <input type=\"submit\"/>\n    </form>\n\nor you can load the media manually as it is done in the demo app::\n\n    {% load static %}\n    <script type=\"text/javascript\" src=\"{% static \"ckeditor/ckeditor-init.js\" %}\"></script>\n    <script type=\"text/javascript\" src=\"{% static \"ckeditor/ckeditor/ckeditor.js\" %}\"></script>\n\nwhen you need to render ``richtextfield``'s html output in your templates safely, just use ``{{ content|safe }}``,  `django's safe filter <https://docs.djangoproject.com/en/2.0/ref/templates/builtins/#std:templatefilter-safe>`_\n\n\nmanagement commands\n~~~~~~~~~~~~~~~~~~~\nincluded is a management command to create thumbnails for images already contained in ``ckeditor_upload_path``. this is useful to create thumbnails when using django-ckeditor with existing images. issue the command as follows::\n\n    $ ./manage.py generateckeditorthumbnails\n\n**note**: if you're using custom views remember to include ckeditor.js in your form's media either through ``{{ form.media }}`` or through a ``<script>`` tag. admin will do this for you automatically. see `django's form media docs <http://docs.djangoproject.com/en/dev/topics/forms/media/>`__ for more info.\n\nusing s3\n~~~~~~~~\nsee https://django-storages.readthedocs.org/en/latest/\n\n**note:** ``django-ckeditor`` will not work with s3 through ``django-storages`` without this line in ``settings.py``::\n\n    aws_querystring_auth = false\n\nif you want to use allowedcontent\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nto get allowedcontent to work, disable **stylesheetparser** plugin.\nso include this in your settings.py.::\n\n    ckeditor_configs = {\n        \"default\": {\n            \"removeplugins\": \"stylesheetparser\",\n        }\n    }\n\n\nplugins:\n--------\n\ndjango-ckeditor includes the following ckeditor plugins, but not all are enabled by default::\n\n    a11yhelp, about, adobeair, ajax, autoembed, autogrow, autolink, bbcode, clipboard, codesnippet,\n    codesnippetgeshi, colordialog, devtools, dialog, div, divarea, docprops, embed, embedbase,\n    embedsemantic, filetools, find, flash, forms, iframe, iframedialog, image, image2, language,\n    lineutils, link, liststyle, magicline, mathjax, menubutton, notification, notificationaggregator,\n    pagebreak, pastefromword, placeholder, preview, scayt, sharedspace, showblocks, smiley,\n    sourcedialog, specialchar, stylesheetparser, table, tableresize, tabletools, templates, uicolor,\n    uploadimage, uploadwidget, widget, wsc, xml\n\nthe image/file upload feature is done by the `uploadimage` plugin.\n\n\nrestricting file upload\n-----------------------\n\n#. to restrict upload functionality to image files only, add ``ckeditor_allow_nonimage_files = false`` in your settings.py file. currently non-image files are allowed by default.\n\n#. by default the upload and browse urls use staff_member_required decorator - ckeditor_uploader/urls.py - if you want other decorators just insert two urls found in that urls.py and don't include it.\n\n\ndemo / test application\n-----------------------\n\nif you clone the repository you will be able to run the ``ckeditor_demo`` application.\n\n#. ``pip install -r ckeditor_demo_requirements.txt``\n\n#. run ``python manage.py migrate``\n\n#. create a superuser if you want to test the widget in the admin panel\n\n#. start the development server.\n\nthere is a forms.form on the main page (/) and a model in admin that uses the widget for a model field.\ndatabase is set to sqlite3 and static/media_root to folders in temporary directory.\n\n\n\nrunning selenium test\n---------------------\n\nthe recommended way to run selenium tests is using tox. select the appropriate\nselenium driver using the ``selenium`` environment variable and optionally\nspecify that you want to run only one environment since selenium takes some\ntime and/or since you do not have all supported versions of python installed\nlocally. the example uses the combination of python 3.9 and django 4.0 which is\na supported combination at the time of writing::\n\n    # either\n    selenium=firefox tox -e py39-dj40\n\n    # or\n    selenium=chromium tox -e py39-dj40\n\n    # or even\n    selenium=firefox tox\n\n\ntroubleshooting\n---------------\n\nif your browser has problems displaying uploaded images in the image upload window you may need to change django settings:\n\n::\n\n    x_frame_options = 'sameorigin'\n\nmore on https://docs.djangoproject.com/en/1.11/ref/clickjacking/#setting-x-frame-options-for-all-responses\n\n\nexample ckeditor configuration\n------------------------------\n\n::\n\n    ckeditor_configs = {\n        'default': {\n            'skin': 'moono',\n            # 'skin': 'office2013',\n            'toolbar_basic': [\n                ['source', '-', 'bold', 'italic']\n            ],\n            'toolbar_yourcustomtoolbarconfig': [\n                {'name': 'document', 'items': ['source', '-', 'save', 'newpage', 'preview', 'print', '-', 'templates']},\n                {'name': 'clipboard', 'items': ['cut', 'copy', 'paste', 'pastetext', 'pastefromword', '-', 'undo', 'redo']},\n                {'name': 'editing', 'items': ['find', 'replace', '-', 'selectall']},\n                {'name': 'forms',\n                 'items': ['form', 'checkbox', 'radio', 'textfield', 'textarea', 'select', 'button', 'imagebutton',\n                           'hiddenfield']},\n                '/',\n                {'name': 'basicstyles',\n                 'items': ['bold', 'italic', 'underline', 'strike', 'subscript', 'superscript', '-', 'removeformat']},\n                {'name': 'paragraph',\n                 'items': ['numberedlist', 'bulletedlist', '-', 'outdent', 'indent', '-', 'blockquote', 'creatediv', '-',\n                           'justifyleft', 'justifycenter', 'justifyright', 'justifyblock', '-', 'bidiltr', 'bidirtl',\n                           'language']},\n                {'name': 'links', 'items': ['link', 'unlink', 'anchor']},\n                {'name': 'insert',\n                 'items': ['image', 'flash', 'table', 'horizontalrule', 'smiley', 'specialchar', 'pagebreak', 'iframe']},\n                '/',\n                {'name': 'styles', 'items': ['styles', 'format', 'font', 'fontsize']},\n                {'name': 'colors', 'items': ['textcolor', 'bgcolor']},\n                {'name': 'tools', 'items': ['maximize', 'showblocks']},\n                {'name': 'about', 'items': ['about']},\n                '/',  # put this to force next toolbar on new line\n                {'name': 'yourcustomtools', 'items': [\n                    # put the name of your editor.ui.addbutton here\n                    'preview',\n                    'maximize',\n\n                ]},\n            ],\n            'toolbar': 'yourcustomtoolbarconfig',  # put selected toolbar config here\n            # 'toolbargroups': [{ 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] }],\n            # 'height': 291,\n            # 'width': '100%',\n            # 'filebrowserwindowheight': 725,\n            # 'filebrowserwindowwidth': 940,\n            # 'toolbarcancollapse': true,\n            # 'mathjaxlib': '//cdn.mathjax.org/mathjax/2.2-latest/mathjax.js?config=tex-ams_html',\n            'tabspaces': 4,\n            'extraplugins': ','.join([\n                'uploadimage', # the upload image feature\n                # your extra plugins here\n                'div',\n                'autolink',\n                'autoembed',\n                'embedsemantic',\n                'autogrow',\n                # 'devtools',\n                'widget',\n                'lineutils',\n                'clipboard',\n                'dialog',\n                'dialogui',\n                'elementspath'\n            ]),\n        }\n    }\n\nauthors\n=======\n\n\ncreated by\n----------\n#. `shaunsephton <http://github.com/shaunsephton>`__\n\n\ncontributors\n------------\n#. `riklaunim <https://github.com/riklaunim>`__\n#. `3point2 <https://github.com/3point2>`__\n#. `buchuki <http://github.com/buchuki>`__\n#. `chr15m <http://github.com/chr15m>`__\n#. `hedleyroos <https://github.com/hedleyroos>`__\n#. `jeffh <https://github.com/jeffh>`__\n#. `lihan <https://github.com/lihan>`__\n#. `loop0 <http://github.com/loop0>`__\n#. `mwcz <https://github.com/mwcz>`__\n#. `tomwys <https://github.com/tomwys>`__\n#. `snbuback <https://github.com/snbuback>`__\n#. and others `<https://github.com/django-ckeditor/django-ckeditor/graphs/contributors>`__\n\nchangelog\n=========\n\nunreleased\n----------\n\n6.7.0\n-----\n\n#. ckeditor 4.22.1\n#. dark mode fixes.\n#. added support for pillow 10.\n\n6.6.0\n-----\n\n#. required a newer version of django-js-asset which actually works with django\n   4.1.\n#. ckeditor 4.21.0\n#. fixed the ckeditor styles when used with the dark django admin theme.\n\n6.5.0\n-----\n#. avoided calling ``static()`` if ``ckeditor_basepath`` is defined.\n#. fixed ``./manage.py generateckeditorthumbnails`` to work again after the\n   image uploader backend rework.\n#. ckeditor 4.19.1\n#. stopped calling ``static()`` during application startup.\n#. added django 4.1\n\n\n6.4.0\n-----\n#. changed the context for the widget to deviate less from django. removed a\n   few template variables which are not used in the bundled\n   ``ckeditor/widget.html`` template. this only affects you if you are using a\n   customized widget or widget template.\n#. dropped support for python < 3.8, django < 3.2.\n#. added a pre-commit configuration.\n#. removed the travis ci configuration; travis ci hasn't run our unit tests for\n   months now.\n#. added a github action for running tests.\n#. made selenium tests require opt in using a ``selenium=firefox`` or\n   ``selenium=chromium`` environment variable.\n\n\n6.3.0\n-----\n#. ckeditor 4.18.0\n#. made it possible to override the ckeditor template in the widget class.\n#. changed ``ckeditor_image_backend`` to require dotted module paths (the old\n   identifiers are still supported for now).\n\n\n6.2.0\n-----\n#. ckeditor 4.17.1\n\n\n6.1.0\n-----\n#. ckeditor 4.16.1\n\n\n6.0.0\n-----\n#. replace ``ugettext_lazy()`` with ``gettext_lazy()``\n#. ckeditor 4.14.1\n#. changed our js script to listen for django's ``formset:added``\n   signals instead of detecting clicks on inline buttons. this should\n   fix compatibility with various django admin skins.\n#. dropped compatibility guarantees for django<2.2 and python<3.6.\n#. reformatted the code using black, isort.\n#. added testing using django 3.1.\n\n\n5.9.0\n-----\n#. django 3.0 support\n#. python 3.8 support\n#. replace `staticfiles` templatetags library usage with `static`\n#. add a templates validation step to the tests\n#. internationalize ckeditor_upload `browse.html` template.\n#. add ckeditor_upload features and custom configuration example to\n   `ckeditor_demo`\n#. ckeditor 4.13.1\n\n\n5.8.0\n-----\n#. ckeditor 4.13\n\n5.7.1\n-----\n#. ckeditor 4.11.4\n#. fix js handling again\n#. allow using settings to configure ``extra_plugins`` and\n   ``external_plugin_resources``\n\n\n5.7.0\n-----\n#. fix django 1.8 - 1.10 regression\n#. drop leftover support for django older than 1.8\n#. django 2.2 support\n#. documentation updates\n#. minor fixes to js handling\n\n\n5.6.1\n-----\n#. fix bad pypi package\n\n\n5.6.0\n-----\n#. django 2.1 compatibility, minimal supported django version is 1.11 lts\n#. option to set custom django file backend for ckeditor uploader app.\n\n\n5.5.0\n-----\n#. ckeditor 4.9.2\n#. documentation improvements\n#. allow non-string properties of user for ckeditor_restrict_by_user\n\n\n5.4.0\n-----\n#. django 2.0 compatibility\n\n\n5.3.1\n-----\n#. actually include the code which sets ``ckeditor_basepath``.\n#. ckeditor 4.7.3\n\n\n5.3.0\n-----\n#. ckeditor 4.7\n#. fix storage problems by setting ``ckeditor_basepath`` (hopefully for real\n   this time)\n#. documentation updates\n#. added a ``ckeditor_restrict_by_date`` setting to add uploaded files into\n   folders containing the current date.\n#. added a ``ckeditor_fileicons`` setting that allows overriding the\n   icons used by gallerific.\n#. added a ``ckeditor_filename_generator`` setting which allows\n   specifying a callable which mangles the filename of uploaded files.\n#. added ``thumbnail_size`` and ``image_quality`` settings for the\n   pillow image backend.\n#. actually include static assets for ``ckeditor_uploader`` in the\n   pip-installable package.\n#. removed ``ckeditor_jquery_url`` and the jquery dependency. the\n   ckeditor activation now uses plain javascript. dependencies are\n   `json.parse <http://caniuse.com/#search=json.parse>`__ and\n   `document.queryselectorall <http://caniuse.com/#search=queryselectorall>`__\n   which are supported in practically all used browsers these days.\n#. fixed a bug where the ckeditor language was not set individually for\n   each request.\n\n\n5.2.2\n-----\n#. django 1.11 support\n#. drop south migrations\n#. fix storage problems by setting ckeditor_basepath\n\n\n5.2.1\n-----\n#. fix ckeditor package static path\n\n5.2.0\n-----\n#. django 1.10 updates\n#. development dependencies bump\n#. ckeditor 4.6.1\n#. paste image support\n#. fix for manifeststaticfilesstorage\n\n\n5.1.1\n-----\n#. re-add missing additional ckeditor plugins\n\n\n5.1.0\n-----\n#. updated ckeditor to 4.5.10\n#. django 1.10 compatibility changes\n#. documentation updates\n\n\n5.0.3\n-----\n#. fix file/directory browsing and searching\n#. editor width style fixes\n#. added ckeditor_browse_show_dirs\n#. added ckeditor_allow_nonimage_files\n#. python 2.6 compatibility fix\n\n\n5.0.2\n-----\n#. added template missing in the package\n\n\n5.0.1\n-----\n#. update readme with backward-incompatible changes\n\n\n5.0.0 (4.5.3)\n-------------\n#. moved file upload code to new django application - ckeditor_uploader. `richtextfield` doesn't use file upload which have been moved to `richtextuploadingfield`.\n\nfile upload support have been moved to ckeditor_uploader. the urls are in ckeditor_uploader.urls while for file uploading widget you have to use richtextuploadingfield from ckeditor_uploader.fields instead of richtextfield from  from ckeditor.fields.\n\n#. updated ckeditor to 4.5.3 (from https://github.com/ckeditor/ckeditor-dev/tree/4.5.3)\n#. added new plugins from ckeditor maintainers: adobeair, ajax, autoembed, autogrow, autolink, bbcode, codesnippet, codesnippetgeshi, devtools, divarea, docprops, embed, embedbase, embedsemantic, filetools, iframedialog, image2, language, lineutils, mathjax, menubutton, notification, notificationaggregator, placeholder, sharedspace, sourcedialog, stylesheetparser, tableresize, uicolor, uploadimage, uploadwidget, widget, xml\n#. add `zip_safe=false` on setup config, to force does not create \".egg\" file\n#. add python wheel package configuration\n#. add setup.py functions to easy release \".egg\" package and wheel package, and tag version on git ( ``python setup.py publish`` and ``python setup.py tag`` )\n#. improved tox configuration to code coverage check, code quality check (flake8), imports order check (isort) and test with django master branch\n#. add code quality configurations\n#. add editorconfig configuration file\n#. refactored code to be in compliance with pep8\n\n4.5.1\n-----\n#. fixed unbound variable in non-image file upload\n\n\n4.5.0\n-----\n#. updated ckeditor to 4.5.1\n#. reverted django.contrib.staticfiles.templatetags.staticfiles.static usage causing problems with some storages\n#. allow non-image files to be upload (the upload widget expects images so the user experience isn't best at the moment)\n#. few refactors and fixes to selenium tests\n\n\n4.4.8\n-----\n#. python 3 compatibility fixes\n#. get static files paths in a proper way\n#. fix django 1.7 deprecation warning\n#. more examples in readme\n\n\n4.4.7\n-----\n#. allow only post requests on upload view.\n#. exclude hidden files from image browser\n#. prevent caching of image browser view\n#. use lazy json encoder to support i18n in ckeditor settings.\n#. misc documentation updates\n#. check for jquery presence correctly\n#. update to ckeditor 4.4.6\n\n4.4.6\n-----\n#. make upload/browse views be staff_member_required by default (can be overridden)\n#. fix ckeditor initialisation code breaking with other jquery versions.\n#. support grappelli inline form widgets.\n#. remove odd left margin from widget template.\n#. allow running selenium tests with chromium.\n\n4.4.5\n-----\n#. post merge package name fix in readme\n\n4.4.4\n-----\n#. update ckeditor to 4.4.4 full package - for all plugins and static files you may need\n#. fixes for inline editor\n#. editor initialisation uses jquery. you need to specify ckeditor_jquery_url for it to work. you can use::\n\n    ckeditor_jquery_url = '//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js'\n\n\n4.4.0\n-----\n#. update ckeditor to 4.4.1\n#. django 1.7 compatibility fix\n\n4.2.8\n-----\n#. update ckeditor to 4.3.3\n\n4.2.7\n-----\n#. fix slugifying to empty filename if only bad characters given in filename. use random string as fallback.\n#. don't use img tags for non image files in ckeditor file browser.\n#. remove non-existing image reference from css files that broke collectstatic.\n#. misc fixes\n\n4.2.5 / 4.2.6\n-------------\n#. fix static files installation - switch from distutils to setuptools\n\n4.2.4\n-----\n#. added new demo application with selenium integration test\n#. tox setup for python 3.3 and 2.7 testing\n#. extracted image processing to backends. pil/pillow is optional now. other backends can be added.\n#. fixed a bug with thumbnail generation\n\n4.2.3\n-----\n#. python 3.3 compatibility\n#. all uploaded files are slugified by default (new settings ckeditor_slugify_filename)\n#. upload file when editing a link (<a href>) now works properly\n\n4.2.2\n-----\n#. python 3.3 compatibility in widgets.py\n\n4.2.1\n-----\n#. include ckeditor version 4.2.1.\n#. support django 1.6\n\n4.0.2\n-----\n#. include ckeditor version 4.0.2.\n\n3.6.2.1\n-------\n#. remove unwanted static files from distribution.\n#. use pillow instead of pil since it builds on all systems.\n\n3.6.2\n-----\n#. include ckeditor version 3.6.2.\n#. initial work on django aligned theme.\n#. fix schema slash removal issue on media url generation. thanks `mwcz <https://github.com/mwcz>`__\n#. added compatibility for south. thanks `3point2 <https://github.com/3point2>`__\n#. prevented settings from leaking between widget instances. thanks `3point2 <https://github.com/3point2>`__\n#. fixed config_name conflict when verbose_name is used as first positional argument for a field. thanks `3point2 <https://github.com/3point2>`__\n#. refactored views to allow use of file walking with local paths. thanks `3point2 <https://github.com/3point2>`__\n#. added command to generate thumbnails. thanks `3point2 <https://github.com/3point2>`__\n#. migrated from using media to static file management.\n\n0.0.9\n-----\n\n#. added ability to configure ckeditor through a ckeditor_configs settings. thanks `jeffh <https://github.com/jeffh>`__ for the input.\n\n0.0.8\n-----\n\n#. removed buggy url include check.\n\n0.0.7\n-----\n#. egg package corrected to exclude testing admin.py and models.py.\n\n0.0.6\n-----\n#. enforce correct configuration.\n#. changed upload behavior to separate files into directories by upload date. thanks `loop0 <http://github.com/loop0>`__ .\n#. added ability to limit user access to uploaded content (see the ckeditor_restrict_by_user setting). thanks `chr15m <http://github.com/chr15m>`__ for the input.\n#. added initial set of much needed tests.\n#. general cleanup, light refactor.\n\n0.0.5\n-----\n#. csrf_exempt backwards compatability. thanks `chr15m <http://github.com/chr15m>`__ .\n\n0.0.4\n-----\n#. include resources, sorry about that.\n\n0.0.3\n-----\n#. more robust pil import. thanks `buchuki <http://github.com/buchuki>`__ .\n#. better ckeditor_media_prefix setting error.\n\n0.0.2\n-----\n#. included readme.rst in manifest.\n\n0.0.1\n-----\n#. added ckeditor_upload_prefix setting. thanks `chr15m <http://github.com/chr15m>`__ for the input.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "django-ckeditor",
  "package_url": "https://pypi.org/project/django-ckeditor/",
  "project_url": "https://pypi.org/project/django-ckeditor/",
  "project_urls": {
    "Documentation": "https://django-ckeditor.readthedocs.io/en/latest/",
    "Homepage": "https://github.com/django-ckeditor/django-ckeditor",
    "Source": "https://github.com/django-ckeditor/django-ckeditor"
  },
  "release_url": "https://pypi.org/project/django-ckeditor/6.7.0/",
  "requires_dist": [],
  "requires_python": ">=3.8",
  "summary": "django admin ckeditor integration.",
  "version": "6.7.0",
  "releases": [],
  "developers": [
    "riklaunim@gmail.com",
    "shaun_sephton"
  ],
  "kwds": "ckeditor_fileicons ckeditorwidget awesome_ckeditor ckeditoruploadingwidget custom_ckeditor",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_django_ckeditor",
  "homepage": "https://github.com/django-ckeditor/django-ckeditor",
  "release_count": 54,
  "dependency_ids": []
}
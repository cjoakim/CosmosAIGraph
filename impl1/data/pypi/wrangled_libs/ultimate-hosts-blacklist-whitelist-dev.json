{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "topic :: internet"
  ],
  "description": "the whitelisting tool from the ultimate hosts blacklist project\n===============================================================\n\nthis is the whitelisting tool provided by the ultimate hosts blacklist project.\nthe script is mainly used to whitelist subject (domains, ip, url) into our\ninfrastructure but it can also easily be used outside our infrastructure.\n\nthe ultimate hosts blacklist whitelist (**uhbw**) tool allows you:\n\n* to append your own whitelist as complementary to our whitelist.\n\n::\n\n    uhb_whitelist -f inputfile -o outputfile -w whitelistfile\n\n\n\n* to anti-whitelist (reverse) only particular domains while still using our core list.\n\n::\n\n    uhb_whitelist -f inputfile -o outputfile --anti-whitelist antiwhitelistfile\n\n\n\n* to whitelist and anti-whitelist while still using our core list.\n\n::\n\n    uhb_whitelist -f inputfile -o outputfile --anti-whitelist antiwhitelistfile -w whitelistfile\n\n\n\n* to override our core whitelist whilst still applying your own personal whitelist and anti-whitelist.\n\n::\n\n    uhb_whitelist -f inputfile -o outputfile --anti-whitelist antiwhitelistfile -w whitelistfile -wc\n\n\n* to have a whitelist tool ready to use as a python module.\n\n\ninstallation\n------------\n\n::\n\n    $ pip3 install --user ultimate-hosts-blacklist-whitelist\n\n\n\nthe hosted whitelist\n--------------------\n\nthe hosted whitelist can be found at `whitelist`_\nthis white-list is maintained by the team of good peoples behind the `whitelist`_\nproject.\n\ncomplementary whitelist\n-----------------------\n\n`uhbw`_ allows you to link one or more file(s) to the system which will be used as\ncomplementary to the hosted `whitelist`_, which is downloaded and used by default.\n\nspecial markers\n---------------\n\nif you already have tried to use a whitelist, you'll probably know, that in\ngenerally you can only add one domain or url per line in a file, for which you\nwant to whitelist.\n\nwith uhbw you can do this, but in addition to that tedious way, uhbw allows you\nto use ``regex``, :code:`rzd` and :code:`all`\n\n:code:`all`\n^^^^^^^^^^^\n\nthe :code:`all` marker will tell the system to escape and regex check against\nwhat follows.\n\ninvalid characters\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n* :code:`$`\n\n    * as we automatically append :code:`$` to the end of each line, you should\n      not use this character.\n\n* :code:`\\\\`\n\n    * as we automatically escape any given expression, you should not explicitly\n      escape your regular expression when declaring an :code:`all` marker.\n\n:code:`reg`\n\"\"\"\"\"\"\"\"\"\"\"\n\nthe :code:`reg` marker will tell the system to explicitly check for the given\nregex which follows the marker.\n\n:code:`rzd`\n\"\"\"\"\"\"\"\"\"\"\"\n\nthe :code:`rzd` marker will tell the system to explicitly check for the given\nstring plus all possible tdl.\n\nanti whitelist\n--------------\n\ndon't like some of our rule(s)? uhbw allows you to specify a file, which contain\na list of rule(s) you don't want to be applied.\n\nsimply use the :code:`--anti-whitelist` flag to provide one or more anti whitelist\nfiles and uhbw will obey your wishes!\n\n\nunderstanding how uhbw whitelist works\n--------------------------------------\n\nif you have your own whitelist, with the following lines:\n\n::\n\n    facebook.com\n    all .gov\n    reg face\n    rzd example\n\nuhbw will do as follows:\n\n* remove every line which match :code:`facebook.com` and :code:`www.facebook.com`\n* in complementary convert all lines with :code:`all` or :code:`reg` to the\n  right format.\n* remove every line which match :code:`example.*`\n* check every line against the regular expression. more about this in next chapter.\n* print the results on screen or save to output file :code:`-o $output.file`.\n\nthe generated regular expression will from this example be:\n\n::\n\n    (\\.gov$)|(face)|(example(.*))\n\n\n.. note::\n    the :code:`example` group is much longer, as we construct the list of tdl\n    based on the root zone database, of iana and the public suffix list\n    project.**\n\nwhich means uhbw actually will whitelist:\n\n* all elements/lines which ends with :code:`.gov`\n* all elements/lines which contain the word :code:`face`\n* all possible tdl combination which starts with :code:`example`\n\nfile formats\n--------------\n\nyour input files of domains / urls should be one domain / url per line and should also preferably be sorted.\n\n::\n\n    sort -u inputfile -o inputfile\n\n\n\nusage of the tool\n-----------------\n\nthe script can be called by :code:`uhb-whitelist`, :code:`uhb_whitelist` or\n:code:`ultimate-hosts-blacklist-whitelist`.\n\n::\n\n    usage: ultimate-hosts-blacklist-whitelist [-h]\n                                                [-a anti_whitelist [anti_whitelist ...]]\n                                                [--all all [all ...]] [-d] [-df]\n                                                [-f file] [--hierachical-sorting]\n                                                [-o output] [-m] [--no-complement]\n                                                [-p processes] [--reg reg [reg ...]]\n                                                [--rzd rzd [rzd ...]]\n                                                [--standard-sorting] [-v]\n                                                [-w whitelist [whitelist ...]] [-wc]\n\n    uhbw is a tool to clean up lists or hosts files with the hosted and/or your\n    own whitelist.\n\n    optional arguments:\n        -h, --help            show this help message and exit\n        -a anti_whitelist [anti_whitelist ...], --anti-whitelist anti_whitelist [anti_whitelist ...]\n                                read the given file override rules from the uhbw\n                                hosted whitelist which is used by default. (see also\n                                `-wc`)\n        --all all [all ...]   read the given file(s) and append its rules to the\n                                whitelisting schema. note: the rules injected\n                                through this argument will be automatically prefixed\n                                with the `all` marker.\n        -d, --debug           activate the debug mode. this mode will write the\n                                whole processes to stdout.\n        -df, --debug-into-file\n                                activate the logging into a file called\n                                `uhb_whitelist_debug` at the current location.\n        -f file, --file file  the file to whitelist/clean.\n        --hierachical-sorting\n                                process a hierarchical sorting when outputing into a\n                                file.\n        -o output, --output output\n                                save the result to the given filename or path. (can\n                                not be the same as input file `-f`)\n        -m, --multiprocessing\n                                activate the usage of multiple core processes.\n        --no-complement       forbid us the generation of complements while parsing\n                                the whitelist list. complements are `www.example.org`\n                                if `example.org` is given and vice-versa.\n        -p processes, --processes processes\n                                the number of (maximal) processes core to use.\n        --reg reg [reg ...]   read the given file(s) and append its rules to the\n                                whitelisting schema. note: the rules injected\n                                through this argument will be automatically prefixed\n                                with the `reg` marker.\n        --rzd rzd [rzd ...]   read the given file(s) and append its rules to the\n                                whitelisting schema. note: the rules injected\n                                through this argument will be automatically prefixed\n                                with the `rzd` marker.\n        --standard-sorting    process a sorting when outputing into a file.\n        -v, --version         show the version end exist.\n        -w whitelist [whitelist ...], --whitelist whitelist [whitelist ...]\n                                read the given file(s) and append its rules to the\n                                whitelisting schema. note: the rules injected\n                                through this argument won't be changed. we follow what\n                                you give us. that means that if you give any of our\n                                supported rules, they will still be appended to the\n                                whitelisting schema.\n        -wc, --without-core   disable the usage of the ultimate hosts blacklist\n                                whitelist hosted list.\n\n    crafted with \u2665 by nissar chababy (funilrys)\n\ncontributors\n------------\n\n* daniel - `@dnmtx`_\n* spirillen - `@spirillen`_\n\nlicense\n-------\n\n::\n\n    mit license\n\n    copyright (c) 2018, 2019, 2020, 2021, 2022 ultimate-hosts-blacklist\n    copyright (c) 2018, 2019, 2020, 2021, 2022 nissar chababy\n    copyright (c) 2019, 2020, 2021, 2022 mitchell krog\n\n    permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"software\"), to deal\n    in the software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the software, and to permit persons to whom the software is\n    furnished to do so, subject to the following conditions:\n\n    the above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the software.\n\n    the software is provided \"as is\", without warranty of any kind, express or\n    implied, including but not limited to the warranties of merchantability,\n    fitness for a particular purpose and noninfringement. in no event shall the\n    authors or copyright holders be liable for any claim, damages or other\n    liability, whether in an action of contract, tort or otherwise, arising from,\n    out of or in connection with the software or the use or other dealings in the\n    software.\n\n.. _@dnmtx: https://github.com/dnmtx\n.. _@spirillen: https://github.com/spirillen\n.. _whitelist: https://github.com/ultimate-hosts-blacklist/whitelist\n.. _uhbw: https://github.com/ultimate-hosts-blacklist/whitelist/tree/script\n\n\n",
  "docs_url": null,
  "keywords": "python,hosts,hosts file,whitelist",
  "license": "mit",
  "name": "ultimate-hosts-blacklist-whitelist-dev",
  "package_url": "https://pypi.org/project/ultimate-hosts-blacklist-whitelist-dev/",
  "project_url": "https://pypi.org/project/ultimate-hosts-blacklist-whitelist-dev/",
  "project_urls": {
    "Homepage": "https://github.com/Ultimate-Hosts-Blacklist/whitelist/tree/script"
  },
  "release_url": "https://pypi.org/project/ultimate-hosts-blacklist-whitelist-dev/3.27.1/",
  "requires_dist": [
    "colorama",
    "domain2idna",
    "pyfunceble (>=4.0.0a1)",
    "requests",
    "ultimate-hosts-blacklist-helpers (>=1.5.2)",
    "urllib3"
  ],
  "requires_python": "",
  "summary": "the whitelisting tool of the ultimate hosts blacklist project.",
  "version": "3.27.1",
  "releases": [],
  "developers": [
    "contact@funilrys.com",
    "funilrys"
  ],
  "kwds": "whitelistfile anti_whitelist whitelisting whitelist uhb_whitelist",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_ultimate_hosts_blacklist_whitelist_dev",
  "homepage": "https://github.com/ultimate-hosts-blacklist/whitelist/tree/script",
  "release_count": 7,
  "dependency_ids": [
    "pypi_colorama",
    "pypi_domain2idna",
    "pypi_pyfunceble",
    "pypi_requests",
    "pypi_ultimate_hosts_blacklist_helpers",
    "pypi_urllib3"
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "programming language :: c++",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "pyorc\n=====\n\n.. image:: https://dev.azure.com/noirello/pyorc/_apis/build/status/noirello.pyorc?branchname=master\n    :target: https://dev.azure.com/noirello/pyorc/_build?definitionid=1\n    :alt: azure pipelines status\n\n.. image:: https://codecov.io/gh/noirello/pyorc/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/noirello/pyorc\n    :alt: codecov code coverage\n\n.. image:: https://readthedocs.org/projects/pyorc/badge/?version=latest\n    :target: https://pyorc.readthedocs.io/en/latest/?badge=latest\n    :alt: documentation status\n\npython module for reading and writing `apache orc`_ file format. it uses the apache orc's core c++ api\nunder the hood, and provides a similar interface as the `csv module`_ in the python standard library.\n\nsupports only python 3.8 or newer and orc 1.7.\n\nfeatures\n--------\n\n- reading orc files.\n- writing orc files.\n- while using python's stream/file-like object io interface.\n\nthat sums up quite well the purpose of this project.\n\nexample\n-------\n\nminimal example for reading an orc file:\n\n.. code:: python\n\n        import pyorc\n\n        with open(\"./data.orc\", \"rb\") as data:\n            reader = pyorc.reader(data)\n            for row in reader:\n                print(row)\n\nand another for writing one:\n\n.. code:: python\n\n        import pyorc\n\n        with open(\"./new_data.orc\", \"wb\") as data:\n            with pyorc.writer(data, \"struct<col0:int,col1:string>\") as writer:\n                writer.write((1, \"orc from python\"))\n\ncontribution\n============\n\nany contributions are welcome. if you would like to help in development fork\nor report issue here on github. you can also help in improving the\ndocumentation.\n\n.. _apache orc: https://orc.apache.org/\n.. _csv module: https://docs.python.org/3/library/csv.html\n",
  "docs_url": null,
  "keywords": "python3,orc,apache-orc",
  "license": "apache license, version 2.0",
  "name": "pyorc",
  "package_url": "https://pypi.org/project/pyorc/",
  "project_url": "https://pypi.org/project/pyorc/",
  "project_urls": {
    "Homepage": "https://github.com/noirello/pyorc"
  },
  "release_url": "https://pypi.org/project/pyorc/0.9.0/",
  "requires_dist": [
    "backports.zoneinfo >=0.2.1 ; python_version < \"3.9\"",
    "tzdata >=2020.5 ; sys_platform == \"win32\""
  ],
  "requires_python": ">=3.6",
  "summary": "python module for reading and writing apache orc file format.",
  "version": "0.9.0",
  "releases": [],
  "developers": [
    "noirello",
    "noirello@gmail.com"
  ],
  "kwds": "python3 python orc codecov pyorc",
  "license_kwds": "apache license, version 2.0",
  "libtype": "pypi",
  "id": "pypi_pyorc",
  "homepage": "https://github.com/noirello/pyorc",
  "release_count": 9,
  "dependency_ids": [
    "pypi_backports.zoneinfo",
    "pypi_tzdata"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: django",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "=================\ndjango js reverse\n=================\n\n.. image:: https://img.shields.io/pypi/v/django-js-reverse.svg\n   :target: https://pypi.python.org/pypi/django-js-reverse/\n\n.. image:: https://img.shields.io/travis/ierror/django-js-reverse/master.svg\n   :target: https://travis-ci.org/ierror/django-js-reverse\n\n.. image:: https://coveralls.io/repos/github/vintasoftware/django-js-reverse/badge.svg?branch=master\n   :target: https://coveralls.io/github/vintasoftware/django-js-reverse?branch=master\n\n.. image:: https://img.shields.io/github/license/ierror/django-js-reverse.svg\n    :target: https://raw.githubusercontent.com/ierror/django-js-reverse/master/license\n\n.. image:: https://img.shields.io/pypi/wheel/django-js-reverse.svg\n\n\n**javascript url handling for django that doesn\u2019t hurt.**\n\nthis package is now maintained by `vinta software <https://vintasoftware.com.br>`__ but it was originally created by `@ierror <https://github.com/ierror>`__. many thanks to you, bernhard.\n\n\noverview\n--------\n\ndjango js reverse is a small django app that makes url handling of\n`named urls <https://docs.djangoproject.com/en/dev/topics/http/urls/#naming-url-patterns>`__ in javascript easy and non-annoying..\n\nfor example you can retrieve a named url:\n\nurls.py:\n\n::\n\n    url(r'^/betterliving/(?p<category_slug>[-\\w]+)/(?p<entry_pk>\\d+)/$', 'get_house', name='betterliving_get_house'),\n\nin javascript like:\n\n::\n\n    urls.betterlivinggethouse('house', 12)\n\nresult:\n\n::\n\n    /betterliving/house/12/\n\n\nrequirements\n------------\n\n+----------------+--------------------+\n| python version | django versions    |\n+================+====================+\n| 3.11           | 4.2, 4.1, 4.0, 3.2 |\n+----------------+--------------------+\n| 3.10           | 4.2, 4.1, 4.0, 3.2 |\n+----------------+--------------------+\n| 3.9            | 4.2, 4.1, 4.0, 3.2 |\n+----------------+--------------------+\n| 3.8            | 4.2, 4.1, 4.0, 3.2 |\n+----------------+--------------------+\n\n\ninstallation\n------------\n\ninstall using ``pip`` \u2026\n\n::\n\n    pip install django-js-reverse\n\n\u2026 or clone the project from github.\n\n::\n\n    git clone https://github.com/ierror/django-js-reverse.git\n\nadd ``'django_js_reverse'`` to your ``installed_apps`` setting.\n\n::\n\n    installed_apps = (\n        ...\n        'django_js_reverse',\n    )\n\n\nusage with webpack\n------------------\n\ninstall using ``npm``\n\n::\n\n    npm install --save django-js-reverse\n\n\ninclude none-cached view \u2026\n\n::\n\n    urlpatterns = patterns('',\n        url(r'^jsreverse.json$', 'django_js_reverse.views.urls_json', name='js_reverse'),\n    )\n\n\u2026 or a cached one that delivers the urls json\n\n::\n\n    from django_js_reverse import views\n    urlpatterns = patterns('',\n        url(r'^jsreverse.json$', cache_page(3600)(views.urls_json), name='js_reverse'),\n    )\n\ninclude javascript in your bundle:\n\n::\n\n    // utils/djangoreverse.mjs\n    import _ from 'lodash/fp';\n    import djangojsreverse from 'django-js-reverse';\n\n    export default _.once(\n      async () => {\n        const res = await fetch('/jsreverse.json');\n        const data = await res.json();\n        return djangojsreverse(data);\n      }\n    )\n\n::\n\n    // someplace.mjs\n    import djangoreverse from './utils/djangoreverse';\n\n    (async () => {\n      const urls = await djangoreverse();\n      const url = urls.someviewname('some-arg');\n      ...\n    })();\n\n\nusage as static file\n--------------------\n\nfirst generate static file by\n\n::\n\n    ./manage.py collectstatic_js_reverse\n\nif you change some urls or add an app and want to update the reverse.js file,\nrun the command again.\n\nafter this add the file to your template\n\n::\n\n    <script src=\"{% static 'django_js_reverse/js/reverse.js' %}\"></script>\n\n\nusage with views\n----------------\n\ninclude none-cached view \u2026\n\n::\n\n    urlpatterns = patterns('',\n        url(r'^jsreverse/$', 'django_js_reverse.views.urls_js', name='js_reverse'),\n    )\n\n\u2026 or a cached one that delivers the urls javascript\n\n::\n\n    from django_js_reverse.views import urls_js\n    urlpatterns = patterns('',\n        url(r'^jsreverse/$', cache_page(3600)(urls_js), name='js_reverse'),\n    )\n\ninclude javascript in your template\n\n::\n\n    <script src=\"{% url js_reverse %}\" type=\"text/javascript\"></script>\n\nor, if you are using django > 1.5\n\n::\n\n    <script src=\"{% url 'js_reverse' %}\" type=\"text/javascript\"></script>\n\n\nusage as template tag\n_____________________\n\nyou can place the js_reverse javascript inline into your templates,\nhowever use of inline javascript is not recommended, because it\nwill make it impossible to deploy a secure content security policy.\nsee `django-csp <https://django-csp.readthedocs.io/>`__\n\n::\n\n    {% load js_reverse %}\n\n    <script type=\"text/javascript\" charset=\"utf-8\">\n        {% js_reverse_inline %}\n    </script>\n\n\nuse the urls in javascript\n--------------------------\n\nif your url names are valid javascript identifiers ([$a-z\\_][-z\\_$]\\*)i\nyou can access them by the dot notation:\n\n::\n\n    urls.betterlivinggethouse('house', 12)\n\nif the named url contains invalid identifiers use the square bracket\nnotation instead:\n\n::\n\n    urls['betterliving-get-house']('house', 12)\n    urls['namespace:betterliving-get-house']('house', 12)\n\nyou can also pass javascript objects to match keyword aguments like the\nexamples bellow:\n\n::\n\n    urls['betterliving-get-house']({ category_slug: 'house', entry_pk: 12 })\n    urls['namespace:betterliving-get-house']({ category_slug: 'house', entry_pk: 12 })\n\noptions\n-------\n\noptionally, you can overwrite the default javascript variable \u2018urls\u2019 used\nto access the named urls by django setting\n\n::\n\n    js_reverse_js_var_name = 'urls'\n\noptionally, you can change the name of the global object the javascript variable\nused to access the named urls is attached to. default is :code:`this`\n\n::\n\n    js_reverse_js_global_object_name = 'window'\n\n\noptionally, you can disable the minfication of the generated javascript file\nby django setting\n\n::\n\n    js_reverse_js_minify = false\n\n\nby default all namespaces are included\n\n::\n\n    js_reverse_exclude_namespaces = []\n\nto exclude any namespaces from the generated javascript file, add them to the `js_reverse_exclude_namespaces` setting\n\n::\n\n    js_reverse_exclude_namespaces = ['admin', 'djdt', ...]\n\nif you want to include only specific namespaces add them to the `js_reverse_include_only_namespaces` setting\ntips:\n* use \"\" (empty string) for urls without namespace\n* use \"foo\\0\" to include urls just from \"foo\" namaspace and not from any subnamespaces (e.g. \"foo:bar\")\n\n::\n\n    js_reverse_include_only_namespaces = ['poll', 'calendar', ...]\n\nif you run your application under a subpath, the collectstatic_js_reverse needs to take care of this.\ndefine the prefix in your django settings:\n\n::\n\n   js_reverse_script_prefix = '/myprefix/'\n\nby default collectstatic_js_reverse writes its output (reverse.js) to your project's static_root.\nyou can change the output path:\n\n::\n\n    js_reverse_output_path = 'some_path'\n\n\nrunning the test suite\n----------------------\n\n::\n\n    tox\n\nlicense\n-------\n\n`mit <https://raw.github.com/ierror/django-js-reverse/master/license>`__\n\n\nsupport\n-------\n\nthis project is currently maintained by `vinta software <https://vintasoftware.com>`__. if you need support please contact us on `contact@vintasoftware.com <mailto:contact@vintasoftware.com>`__.\n\n--------------\n\nenjoy!\n\n\n0.10.2 (2023-08-14)\n---------------------\n\n- drop support to older version of python and django that aren't being officially supported anymore.\n\n0.10.1b1 (2023-08-14)\n---------------------\n\n- update for django 4.0 and 4.1, python 3.8, 3.9, 3.10\n\n0.10.1a1 (2023-08-14)\n---------------------\n\n- update pypi deploy username and token\n\n\n0.10.1a (2019-08-02)\n--------------------\n\n- support webpack and other bundlers\n\n\n0.10.0 (2019-08-01)\n-------------------\n\n- deprecate django_js_reverse.version. it will now always be ``(0, 9, 2)``\n- deprecate js_reverse_inline\n- use setuptools.setup\n\n0.9.1\n-----\n\n- fix: avoid xss introduced in 0.9.0 when using js_reverse_inline. a low threat as content injected is likely to be trusted input from the urlconfig.\n\n0.9.0\n-----\n\n- new: support for python 3.7\n- new: support for django 2.2\n- new: unit tests script prefix with no slash, changed url conf`#72 <https://github.com/ierror/django-js-reverse/issues/72>`__\n  thank you `graingert <https://github.com/graingert>`__\n- fix: \"root_urlconf not taken into account\" `#73 <https://github.com/ierror/django-js-reverse/issues/73>`__ `#74 <https://github.com/ierror/django-js-reverse/issues/74>`__\n  thank you `luukoost <https://github.com/luukoost>`__ and `graingert <https://github.com/graingert>`__\n- refactoring: \"move template logic to view\" `#64 <https://github.com/ierror/django-js-reverse/issues/64>`__\n  thank you `graingert <https://github.com/graingert>`__\n- fix: \"now using looseversion instead of strictversion to avoid issues with rc releases\" `#67 <https://github.com/ierror/django-js-reverse/issues/64>`__\n  thank you `kavdev <https://github.com/kavdev>`__\n\n0.8.2\n-----\n\n- fix: a bug fix in django 2.0.6 has broken django-js-reverse `#65 <https://github.com/ierror/django-js-reverse/issues/65>`_\n  thank you `kavdev <https://github.com/kavdev>`_\n\n0.8.1\n-----\n\n- fix: the tests folder of the `#53 <https://github.com/ierror/django-js-reverse/issues/53>`__ was still present in the build. => added cleanup to the release make command.\n\n0.8.0\n-----\n\n- new: support for django 2.0: `#58 <https://github.com/ierror/django-js-reverse/issues/58>`_\n  thank you `wlonk <https://github.com/wlonk>`_\n- fix: `#53 <https://github.com/ierror/django-js-reverse/issues/53>`__ - don't install the tests folder as a separate folder.  moved inside the django_js_reverse namespace.\n\n0.7.3\n-----\n\n- new: support for django 1.10\n- chg: renamed \"production\" branch to \"master\"\n- fix: `#48 <https://github.com/ierror/django-js-reverse/issues/48>`_ - \"change false to 'window' in global object name in readme.\"\n  thank you `karamanolev <https://github.com/karamanolev>`_\n- fix: `pr #45 <https://github.com/ierror/django-js-reverse/pull/45>`_ - \"fix: collectstatic_js_reverse usage message\"\n  thank you `ghedsouza <https://github.com/ghedsouza>`_\n- fix: `pr #44 <https://github.com/ierror/django-js-reverse/pull/44>`_ - \"remove duplicate _get_url call\"\n  thank you `razh <https://github.com/razh>`_\n\n0.7.2\n-----\n\n- fix: `#42 <https://github.com/ierror/django-js-reverse/issues/42>`_ - \"templatetag js_reverse_inline breaks on django 1.9\"\n  thank you `tommikaikkonen <https://github.com/tommikaikkonen>`_\n- optimized imports\n\n0.7.1\n-----\n- fix: `#41 <https://github.com/ierror/django-js-reverse/issues/41>`_ - make it possible to use number 0 as url argument\n\n0.7.0\n-----\n- new: by default collectstatic_js_reverse writes its output (reverse.js) to your project's static_root. now you can change settings: js_reverse_output_path\n  thank you `mjnaderi <https://github.com/ierror/django-js-reverse/pull/36>`__\n- new: support for django 1.9\n  thank you `mjnaderi <https://github.com/ierror/django-js-reverse/pull/37>`__\n- new: it's now possible to include specific namespaces only. see js_reverse_include_only_namespaces setting for details.\n  thank you brnopcmaniak\n\n0.6.1\n-----\n\n- refactored: separate the view functionality from the js generation\n- new: replaced slimit by rjsmin based on `#33 <https://github.com/ierror/django-js-reverse/pull/33/>`_\n  thank you chripede\n\n0.6.0\n-----\n\n- fix: `#27 <https://github.com/ierror/django-js-reverse/pull/27>`_\n  thank you michael-borisov\n- new: support for keyword-based url reversing `#30 <https://github.com/ierror/django-js-reverse/pull/30/>`_\n  thank you hyperair\n\n0.5.1\n-----\n\n- fix: current ply breaks slimit => force ply==3.4\n\n0.5.0\n-----\n\n- new: django allows you to have multiple url patterns with the same name.\n- this release adds support for the featuer.\n  thank you defrex\n- new: test support for django 1.8\n- new: test for script_prefix without ending slash\n\n0.4.6\n-----\n\n- new: you can change the name (default=this) of the global object the javascript variable used to access the named\n  urls is attached to by changing js_reverse_js_global_object_name setting.\n  thank you aumo\n\n0.4.5\n-----\n\n- fix: if you run your application under a subpath, the collectstatic_js_reverse needs to take care of this. you can\n  now define a setting js_reverse_script_prefix that handles this issue.\n  thank you lizter for reporting the issue\n\n0.4.4\n-----\n\n- improvement: management command collectstatic_js_reverse throws an error if settings.static_root is not set\n- tests: exluded a debug print from coverage\n- removed: support for django 1.4\n- new: templatetag to include js-reverse-js inline in your templates\n\n0.4.3\n-----\n\n- new: add better support for django rest framework\n  django rest framework generates url names like user-list, so it get's converted now as well so\n  ``urls['user-list']()`` or the cleaner ``urls.user_list()`` are both usable.\n- fix: jsreversestaticfilesavetest is working and being tested again\n- improvement: cleanup javascript\n  thank you bulv1ne for the pull request\n- new: test support for the latest pypy versions pypy3-2.4.0 and pypy-2.5.0\n- fix: get rid of test warning \"middleware_classes is not set.\" for django >= 1.7\n\n0.4.2\n-----\n\n- provided pypi wheel package\n\n0.4.1\n-----\n\n- fix: collectstatic runner: moved to own management command collectstatic_js_reverse\n\n0.4.0\n-----\n\n- add ability to save in file::\n\n      <script src=\"{% static 'django_js_reverse/js/reverse.js' %}\"></script>``\n\n  to do this run ./manage.py collectstatic\n\n  add js_reverse_exclude_namespaces option\n  to exclude namespaces from import\n  default is []\n\n  to exclude e.g. admin and django debug toolbar::\n\n      js_reverse_exclude_namespaces = ['admin', 'djdt']\n\n  thank you andertaker\n\n0.3.4\n-----\n\n- new: support for nested namespaces. thank you hyperair\n- new: support for arguments within namespace path. thank you hyperair\n- new: support for optional url arguments. thank you hyperair\n\n0.3.3\n-----\n\n- new: django 1.7 support\n\n0.3.2\n-----\n\n- new: default minification of the generated javascript file\n- fix: content type of the jsreverse script. thank you @emcsween\n- testing: use selenium for better testing\n\n0.3.1\n-----\n\n- added support for namespaces\n\n0.3.0\n-----\n\n- test support for pypy, python 3.4, django 1.6\n- refactored include of js_reverse_js_var_name js var name\n- get rid of \"deprecationwarning: the mimetype keyword argument is depracated, use content_type instead\"\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "django-js-reverse",
  "package_url": "https://pypi.org/project/django-js-reverse/",
  "project_url": "https://pypi.org/project/django-js-reverse/",
  "project_urls": {
    "Download": "http://pypi.python.org/pypi/django-js-reverse/",
    "Homepage": "https://github.com/ierror/django-js-reverse"
  },
  "release_url": "https://pypi.org/project/django-js-reverse/0.10.2/",
  "requires_dist": [
    "Django >=3.2",
    "packaging >=21.3"
  ],
  "requires_python": "",
  "summary": "javascript url handling for django that doesn't hurt.",
  "version": "0.10.2",
  "releases": [],
  "developers": [
    "bernhard_janetzki",
    "boerni@gmail.com"
  ],
  "kwds": "django_js_reverse djangojsreverse djangoreverse js_reverse collectstatic_js_reverse",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_django_js_reverse",
  "homepage": "https://github.com/ierror/django-js-reverse",
  "release_count": 32,
  "dependency_ids": [
    "pypi_django",
    "pypi_packaging"
  ]
}
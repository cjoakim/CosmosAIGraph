{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "topic :: utilities"
  ],
  "description": "# nano id\n\n[![circleci](https://circleci.com/gh/puyuan/py-nanoid/tree/master.svg?style=svg)](https://circleci.com/gh/puyuan/py-nanoid/tree/master)\n\na tiny, secure, url-friendly, unique string id generator for python.\n\n* __safe__. it uses cryptographically strong random apis and tests distribution of symbols;\n* __compact__. it uses a larger alphabet than uuid (a-za-z0-9_-). so id size was reduced from 36 to 21 symbols.\n\n## usage\n\ninstall nano id using pip:\n\n```\npip install nanoid\n```\n\n### normal\n\nthe main module uses url-friendly symbols (a-za-z0-9_-) and returns an id with 21 characters (to have a collision probability similar to uuid v4).\n\n\n```python\nfrom nanoid import generate\n\ngenerate() # => ndzkgotcdrcaryt7goepg\n```\n\nsymbols `-,.()` are not encoded in the url. if used at the end of a link they could be identified as a punctuation symbol.\n\nif you want to reduce id length (and increase collisions probability), you can pass the length as an argument.\n\n```python\nfrom nanoid import generate\n\ngenerate(size=10) # => \"irfa-vay2b\"\n\n```\n\ndon\u2019t forget to check the safety of your id length in id [collision probability calculator](https://zelark.github.io/nano-id-cc/).\n\n\n## custom alphabet or length\n\nif you want to change the id's alphabet or length you can use the internal generate module.\n\n```python\nfrom nanoid import generate\n\ngenerate('1234567890abcdef', 10) # => \"4f9zd13a42\"\n```\n\nnon-secure api is also available:\n\n```python\nfrom nanoid import non_secure_generate\n\nnon_secure_generate('1234567890abcdef', 10)\n```\n\n## tools\n\n* [id size calculator](https://zelark.github.io/nano-id-cc/) to choice smaller id size depends on your case.\nnanoid-dictionary with popular alphabets to use with nanoid/generate;\n* [`nanoid-dictionary`](https://github.com/aidarkhanov/py-nanoid-dictionary) with popular alphabets to use.\n\n\n\n## other programming languages\n\n* [c#](https://github.com/codeyu/nanoid-net)\n* [clojure and clojurescript](https://github.com/zelark/nano-id)\n* [crystal](https://github.com/mamantoha/nanoid.cr)\n* [dart](https://github.com/pd4d10/nanoid)\n* [go](https://github.com/matoous/go-nanoid)\n* [elixir](https://github.com/railsmechanic/nanoid)\n* [haskell](https://github.com/4e6/nanoid-hs)\n* [java](https://github.com/aventrix/jnanoid)\n* [javascript](https://github.com/ai/nanoid)\n* [nim](https://github.com/icyphox/nanoid.nim)\n* [php](https://github.com/hidehalo/nanoid-php)\n* [ruby](https://github.com/radeno/nanoid.rb)\n* [rust](https://github.com/nikolay-govorov/nanoid)\n* [swift](https://github.com/antiflasher/nanoid)\n\n\n## changelog\n- v2.0.0\n    - replace ~ to - in default alphabet\n    - add non-secure fast generator\n    - reduce default characters from 22 to 21\n- v0.3.0\n    - fix array out of bound error.\n\n## credits\n\n- andrey sitnik for [nano id](https://github.com/ai/nanoid);\n- [dair aidarkhanov](https://github.com/aidarkhanov) for main contribution to v2.0, and adding test cases.\n- aleksandr zhuravlev for [id collision probability](https://zelark.github.io/nano-id-cc/).\n\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "nanoid",
  "package_url": "https://pypi.org/project/nanoid/",
  "project_url": "https://pypi.org/project/nanoid/",
  "project_urls": {
    "Homepage": "https://github.com/puyuan/py-nanoid"
  },
  "release_url": "https://pypi.org/project/nanoid/2.0.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a tiny, secure, url-friendly, unique string id generator for python",
  "version": "2.0.0",
  "releases": [],
  "developers": [
    "paul_yuan",
    "puyuan1@gmail.com"
  ],
  "kwds": "uuid nanoid non_secure_generate generate nano",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_nanoid",
  "homepage": "https://github.com/puyuan/py-nanoid",
  "release_count": 4,
  "dependency_ids": []
}
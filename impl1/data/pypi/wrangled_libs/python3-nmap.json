{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "\n\n# python3-nmap\n\na python 3  library which helps in using nmap port scanner. the way this tools works is by defining each nmap command into a python function making it very easy to use sophisticated nmap commands in other python scripts. nmap is a complicated piece of software used for reconnaissance on target networks, over the years new features have been added making it more sophisticated.\n\nwith this python3-nmap we make using nmap in python very easy and painless\n\nfor example in nmap if you want to scan for common ports you would to something like this\n```sh\n$ nmap your-host.com --top-ports 10\n```\nbut in this python3-nmap  script you would do something like this\n```py\nimport nmap3\nnmap = nmap3.nmap()\nresults = nmap.scan_top_ports(\"your-host.com\")\n# and you would get your results in json\n```\nyou will notice each nmap command is defined as a python function/method. this make it easy to remember this in python and easily use them.\n\nagain in nmap if you want to use the famous dns-brute script you would do something like this\n```sh\n$ nmap your-host.com  --script dns-brute.nse\n```\nbut in this python3 script again it's very easy you just do something like this\n```py\nimport nmap3\nnmap = nmap3.nmap()\nresults = nmap.nmap_dns_brute_script(\"your-host.com\")\n\n# and you would get your results in json\n[\n    {\n        \"address\": \"mail.your-host.com\",\n        \"hostname\": \"68.65.122.10\"\n    },\n    {\n        \"address\": \"www.your-host.com\",\n        \"hostname\": \"5.189.129.43\"\n    }\n]\n```\n\n#### how to use python3-nmap\nusing this scripts is very easy, though it assumes you have nmap already installed, as it is the primary dependence required. also this tools supports both windows and linux, it's cross platform so to say.\n\n**installation**\n```sh\n$ git clone https://github.com/wangoloj/python3-nmap.git\n\n$ pip3 install -r requirements.txt\n\n# install nmap online\n\n$ apt-get install nmap\n\n# that's all is needed to get started\n```\nin nmap some commands require root privileges for example the command to identify os requires root privileges;\n```sh\n$ nmap -o your-host.com\n\ntcp/ip fingerprinting (for os scan) requires root privileges.\nquitting!\n# until you sudo\n\n$ sudo nmap -o your-host.com\n\n```\nthe same applies to the script to be able to run the os identifier  you have to be a super user.\n\n### how to use the script to identify os\n```py\nimport nmap3\nnmap = nmap3.nmap()\nos_results = nmap.nmap_os_detection(\"192.168.178.2\") # most be root\n```\n```json\n[\n    {\n        \"accuracy\": \"100\",\n        \"cpe\": \"cpe:/o:linux:linux_kernel:2.6\",\n        \"line\": \"45249\",\n        \"name\": \"linux 2.6.14 - 2.6.34\",\n        \"osclass\": {\n            \"accuracy\": \"100\",\n            \"osfamily\": \"linux\",\n            \"osgen\": \"2.6.x\",\n            \"type\": \"general purpose\",\n            \"vendor\": \"linux\"\n        }\n    },\n    {\n        \"accuracy\": \"100\",\n        \"cpe\": \"cpe:/o:linux:linux_kernel:2.6.17\",\n        \"line\": \"45775\",\n        \"name\": \"linux 2.6.17\",\n        \"osclass\": {\n            \"accuracy\": \"100\",\n            \"osfamily\": \"linux\",\n            \"osgen\": \"2.6.x\",\n            \"type\": \"general purpose\",\n            \"vendor\": \"linux\"\n        }\n    },\n    {\n        \"accuracy\": \"100\",\n        \"cpe\": \"cpe:/o:linux:linux_kernel:2.6.17\",\n        \"line\": \"45811\",\n        \"name\": \"linux 2.6.17 (mandriva)\",\n        \"osclass\": {\n            \"accuracy\": \"100\",\n            \"osfamily\": \"linux\",\n            \"osgen\": \"2.6.x\",\n            \"type\": \"general purpose\",\n            \"vendor\": \"linux\"\n        }\n    },\n    {\n        \"accuracy\": \"100\",\n        \"cpe\": \"cpe:/o:linux:linux_kernel:3.13\",\n        \"line\": \"60884\",\n        \"name\": \"linux 3.13\",\n        \"osclass\": {\n            \"accuracy\": \"100\",\n            \"osfamily\": \"linux\",\n            \"osgen\": \"3.x\",\n            \"type\": \"general purpose\",\n            \"vendor\": \"linux\"\n        }\n    }\n]\n```\n\n### class components of python3-nmap\nthe script is made of up the following classes, each holding different nmap abilities and scan types.\n\n - nmap\n - nmaphostdiscovery\n - nmapscantechniques\n\n### identifying service version\nin nmap if you want to identify versions you would run this kind of command\n```sh\n$ nmap 192.168.178.1  -sv\n```\nin this python script you would do something like this\n```py\nimport nmap3\nnmap = nmap3.nmap()\nversion_result = nmap.nmap_version_detection(\"your-host.com\")\n```\n```json\n[\n    {\n        \"cpe\": [\n            {\n                \"cpe\": \"cpe:/o:linux:linux_kernel\"\n            }\n        ],\n        \"port\": \"80\",\n        \"protocol\": \"tcp\",\n        \"service\": {\n            \"conf\": \"10\",\n            \"extrainfo\": \"ubuntu\",\n            \"method\": \"probed\",\n            \"name\": \"http\",\n            \"ostype\": \"linux\",\n            \"product\": \"nginx\",\n            \"version\": \"1.14.0\"\n        }\n    },\n    {\n        \"cpe\": [\n            {\n                \"cpe\": \"cpe:/o:linux:linux_kernel\"\n            }\n        ],\n        \"port\": \"443\",\n        \"protocol\": \"tcp\",\n        \"service\": {\n            \"conf\": \"10\",\n            \"extrainfo\": \"ubuntu\",\n            \"method\": \"probed\",\n            \"name\": \"http\",\n            \"ostype\": \"linux\",\n            \"product\": \"nginx\",\n            \"tunnel\": \"ssl\",\n            \"version\": \"1.14.0\"\n        }\n    },\n    {\n        \"cpe\": [\n            {\n                \"cpe\": \"cpe:/o:linux:linux_kernel\"\n            }\n        ],\n        \"port\": \"2000\",\n        \"protocol\": \"tcp\",\n        \"service\": {\n            \"conf\": \"10\",\n            \"extrainfo\": \"ubuntu linux; protocol 2.0\",\n            \"method\": \"probed\",\n            \"name\": \"ssh\",\n            \"ostype\": \"linux\",\n            \"product\": \"openssh\",\n            \"version\": \"7.6p1 ubuntu 4ubuntu0.3\"\n        }\n    }\n]\n```\n### nmap commands available\nthe following nmaps commands have been added to the following scripts\n\n - get nmap version details\n   ```python\n   import nmap3\n   nmap = nmap3.nmap()\n   results = nmap.nmap_version()\n   ```\n - nmap top port scan\n   ```python\n   import nmap3\n   nmap = nmap3.nmap()\n   results = nmap.scan_top_ports(\"your-host\")\n   ```\n - nmap dns-brute-script( to get subdomains )\n ```python\n    import nmap3\n    nmap = nmap3.nmap()\n    results = nmap.nmap_dns_brute_script(\"domain\")\n  ```\n - nmap list scan\n ```python\n    import nmap3\n    nmap = nmap3.nmap()\n    results = nmap.nmap_list_scan(\"your-host\")\n ```\n - nmap os detection\n ```python\n   import nmap3\n   nmap = nmap3.nmap()\n   results = nmap.nmap_os_detection(\"your-host\");\n ```\n - nmap subnet scan\n ```python\n    import nmap3\n    nmap = nmap3.nmap()\n    results = nmap.nmap_subnet_scan(\"your-host\") #must be root\n ```\n - nmap version detection\n```python\n   import nmap3\n   nmap = nmap3.nmap()\n   results = nmap.nmap_version_detection(\"your-host\") # must be root\n```\n\n###  nmap scanning techniques\nthe script offers nmap scan techniques also as python function/methods\n - nmap_fin_scan\n   ```python\n   import nmap3\n   nmap = nmap3.nmapscantechniques()\n   result = nmap.nmap_fin_scan(\"192.168.178.1\")\n   ```\n   \n - nmap_idle_scan\n ```python\n    import nmap3\n    nmap = nmap3.nmapscantechniques()\n    result = nmap.nmap_idle_scan(\"192.168.178.1\")\n ```\n - nmap_ping_scan\n ```python\n    import nmap3\n    nmap = nmap3.nmapscantechniques()\n    result = nmap.nmap_ping_scan(\"192.168.178.1\")\n ```\n - nmap_syn_scan\n ```python\n    import nmap3\n    nmap = nmap3.nmapscantechniques()\n    result = nmap.nmap_syn_scan(\"192.168.178.1\")\n ```\n - nmap_tcp_scan\n ```python\n    import nmap3\n    nmap = nmap3.nmapscantechniques()\n    result = nmap.nmap_tcp_scan(\"192.168.178.1\")\n ```\n \n- nmap_udp_scan\n ```python\n    import nmap3\n    nmap = nmap3.nmapscantechniques()\n    result = nmap.nmap_udp_scan(\"192.168.178.1\")\n ```\n### supporting the nmap host discovery\nthe script also offers support for map added nmap host discovery techniques still as python function/methods\n\n - only port scan    (-pn)\n - only host discover    (-sn)\n - arp discovery on a local network  (-pr)\n - disable dns resolution    (-n)\n\nnmaphostdiscovery\n\n -  `def nmap_portscan_only(self, host, args=none)`\n ```python\n    import nmap3\n    nmap = nmap3.nmaphostdiscovery()\n    results = nmap.nmap_portscan_only(\"your-host\")\n ```\n -  `def nmap_no_portscan(self, host, args=none):`\n ```python\n    import nmap3\n    nmap = nmap3.nmaphostdiscovery()\n    results = nmap.nmap_no_portscan(\"your-host\")\n ```\n -  `def nmap_arp_discovery(self, host, args=none):`\n  ```python\n    import nmap3\n    nmap = nmap3.nmaphostdiscovery()\n    results = nmap.nmap_arp_discovery(\"your-host\")\n ```\n -  `def nmap_disable_dns(self, host, args=none):`\n  ```python\n    import nmap3\n    nmap = nmap3.nmaphostdiscovery()\n    results = nmap.nmap_disable_dns(\"your-host\")\n ```\n\nnmap is a large tool, as you can see python3-nmap provides only things what you could say commonly used nmap features.\n\n### using custom nmap command line arguments.\nas we said, the script defines each set of nmap command as python function/methods. you can also pass arguments to those methods/function thus extending your capabilities for example.\nlet's say we want to scan top ports but also perform version detection .\n\n```python\n   import nmap3\n   nmap = nmap3.nmap()\n   results = nmap.scan_top_ports(\"host\", args=\"-sv\")\n```\n\n### using the nmap vulners script to identify vulnerabilities (cve's)\nyou scan the the target ip using version detection ('-sv') to get the service and, the script performs a lookup in the cve database. the nmap vulners script is part of the default nmap installation, so you shouldn't need to install any other packages.  \n\n```python\n   import nmap3\n   nmap = nmap3.nmap()\n   ressults = nmap_version_detection(\"host\", args=\"--script vulners --script-args mincvss+5.0\")\n```\n\n## cross-selling\n* [ethical-tools](https://ethicaltools.gitbook.io/subdomainfinder/)\n* [wappalyzer online](https://www.nmmapper.com/st/cms-detection/wappalyzer-online/)\n* [whatweb online](https://www.nmmapper.com/tools/cms-detection/whatweb-online/whatweb/)\n* [raccoon by offensive security](https://www.nmmapper.com/tools/reconnaissance-tools/raccoon-vulnerability-scanning/raccoon%20tool/)\n* [detect waf](https://www.nmmapper.com/tools/reconnaissance-tools/waf/web-application-firewall-detector/)\n* [dnsdumpster](https://dnsdumpster.readthedocs.io/)\n* [become a patreon](https://www.patreon.com/nmmapper)\n* [online port scanner](https://www.nmmapper.com/st/networkmapper/nmap/online-port-scanning/)\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "python3-nmap",
  "package_url": "https://pypi.org/project/python3-nmap/",
  "project_url": "https://pypi.org/project/python3-nmap/",
  "project_urls": {
    "Crosselling": "https://www.byogyo.com/",
    "Documentation": "https://nmap.readthedocs.io/en/latest/",
    "Homepage": "https://www.nmmapper.com/",
    "How it is used": "https://www.nmmapper.com/sys/networkmapper/nmap/online-port-scanning/",
    "Source": "https://github.com/wangoloj/python3-nmap",
    "Subdomain finder": "https://www.nmmapper.com/sys/tools/subdomainfinder/",
    "theHarvester online": "https://www.nmmapper.com/sys/theharvester/email-harvester-tool/online/"
  },
  "release_url": "https://pypi.org/project/python3-nmap/1.6.0/",
  "requires_dist": [
    "simplejson"
  ],
  "requires_python": ">=3.6",
  "summary": "python3-nmap converts nmap commands into python3 methods making it very easy to use nmap in any of your python pentesting projects",
  "version": "1.6.0",
  "releases": [],
  "developers": [
    "info@nmmapper.com",
    "nmmapper"
  ],
  "kwds": "nmap_tcp_scan nmap_dns_brute_script scan_top_ports nmaphostdiscovery nmap_list_scan",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_python3_nmap",
  "homepage": "https://github.com/wangoloj/python3-nmap",
  "release_count": 18,
  "dependency_ids": [
    "pypi_simplejson"
  ]
}
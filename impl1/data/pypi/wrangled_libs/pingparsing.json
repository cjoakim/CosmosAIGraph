{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: telecommunications industry",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: networking",
    "topic :: system :: networking :: monitoring",
    "topic :: text processing"
  ],
  "description": ".. contents:: **pingparsing**\n   :backlinks: top\n   :depth: 2\n\nsummary\n=========\n`pingparsing <https://github.com/thombashi/pingparsing>`__ is a cli-tool/python-library parser and transmitter for ping command.\n\n.. image:: https://badge.fury.io/py/pingparsing.svg\n    :target: https://badge.fury.io/py/pingparsing\n    :alt: pypi package version\n\n.. image:: https://img.shields.io/pypi/pyversions/pingparsing.svg\n    :target: https://pypi.org/project/pingparsing\n    :alt: supported python versions\n\n.. image:: https://img.shields.io/pypi/implementation/pingparsing.svg\n    :target: https://pypi.org/project/pingparsing\n    :alt: supported python implementations\n\n.. image:: https://github.com/thombashi/pingparsing/workflows/tests/badge.svg\n    :target: https://github.com/thombashi/pingparsing/actions?query=workflow%3atests\n    :alt: linux/macos/windows ci status\n\n.. image:: https://github.com/thombashi/pingparsing/actions/workflows/codeql-analysis.yml/badge.svg\n    :target: https://github.com/thombashi/pingparsing/actions/workflows/codeql-analysis.yml\n    :alt: codeql\n\ncli usage\n====================\na cli command (``pingparsing`` command) is included in the package. the command could do the following:\n\n- execute ``ping`` and parse the result\n- parse ping results from:\n    - file(s)\n    - the standard input\n\nexecute ping and parse the result\n--------------------------------------------\nif you specify destination(s) to the ``pingparsing`` command as positional arguments,\nthe command executes ``ping`` for each destination(s) and parses the result.\n``ping`` will execute in parallel for multiple destinations.\nthe parsed result is outputted in json format.\n\n.. code-block:: console\n\n    $ pingparsing google.com\n    {\n        \"google.com\": {\n            \"destination\": \"google.com\",\n            \"packet_transmit\": 10,\n            \"packet_receive\": 10,\n            \"packet_loss_rate\": 0.0,\n            \"packet_loss_count\": 0,\n            \"rtt_min\": 34.189,\n            \"rtt_avg\": 46.054,\n            \"rtt_max\": 63.246,\n            \"rtt_mdev\": 9.122,\n            \"packet_duplicate_rate\": 0.0,\n            \"packet_duplicate_count\": 0\n        }\n    }\n\n.. code-block:: console\n\n    $ pingparsing google.com twitter.com\n    {\n        \"google.com\": {\n            \"destination\": \"google.com\",\n            \"packet_transmit\": 10,\n            \"packet_receive\": 10,\n            \"packet_loss_rate\": 0.0,\n            \"packet_loss_count\": 0,\n            \"rtt_min\": 37.341,\n            \"rtt_avg\": 44.538,\n            \"rtt_max\": 53.997,\n            \"rtt_mdev\": 5.827,\n            \"packet_duplicate_rate\": 0.0,\n            \"packet_duplicate_count\": 0\n        },\n        \"twitter.com\": {\n            \"destination\": \"twitter.com\",\n            \"packet_transmit\": 10,\n            \"packet_receive\": 10,\n            \"packet_loss_rate\": 0.0,\n            \"packet_loss_count\": 0,\n            \"rtt_min\": 45.377,\n            \"rtt_avg\": 68.819,\n            \"rtt_max\": 78.581,\n            \"rtt_mdev\": 9.769,\n            \"packet_duplicate_rate\": 0.0,\n            \"packet_duplicate_count\": 0\n        }\n    }\n\n.. code-block:: console\n\n    $ pingparsing google.com -c 3 --icmp-reply\n    {\n        \"google.com\": {\n            \"destination\": \"google.com\",\n            \"packet_transmit\": 3,\n            \"packet_receive\": 3,\n            \"packet_loss_count\": 0,\n            \"packet_loss_rate\": 0.0,\n            \"rtt_min\": 36.997,\n            \"rtt_avg\": 49.1,\n            \"rtt_max\": 60.288,\n            \"rtt_mdev\": 9.533,\n            \"packet_duplicate_count\": 0,\n            \"packet_duplicate_rate\": 0.0,\n            \"icmp_replies\": [\n                {\n                    \"destination\": \"nrt20s21-in-f14.1e100.net (172.217.175.110)\",\n                    \"bytes\": 64,\n                    \"icmp_seq\": 1,\n                    \"ttl\": 113,\n                    \"time\": 50.0,\n                    \"duplicate\": false\n                },\n                {\n                    \"destination\": \"nrt20s21-in-f14.1e100.net (172.217.175.110)\",\n                    \"bytes\": 64,\n                    \"icmp_seq\": 2,\n                    \"ttl\": 113,\n                    \"time\": 60.2,\n                    \"duplicate\": false\n                },\n                {\n                    \"destination\": \"nrt20s21-in-f14.1e100.net (172.217.175.110)\",\n                    \"bytes\": 64,\n                    \"icmp_seq\": 3,\n                    \"ttl\": 113,\n                    \"time\": 36.9,\n                    \"duplicate\": false\n                }\n            ]\n        }\n    }\n\n\nparse ping result file\n--------------------------------------------\n:input:\n    .. code-block:: console\n\n        $ cat ping.txt\n        ping 192.168.0.1 (192.168.0.1) 56(84) bytes of data.\n\n        --- 192.168.0.1 ping statistics ---\n        1688 packets transmitted, 1553 received, +1 duplicates, 7% packet loss, time 2987ms\n        rtt min/avg/max/mdev = 0.282/0.642/11.699/0.699 ms, pipe 2, ipg/ewma 1.770/0.782 ms\n        $ cat osx.txt\n        ping google.com (172.217.6.238): 56 data bytes\n        64 bytes from 172.217.6.238: icmp_seq=0 ttl=53 time=20.482 ms\n        64 bytes from 172.217.6.238: icmp_seq=1 ttl=53 time=32.550 ms\n        64 bytes from 172.217.6.238: icmp_seq=2 ttl=53 time=32.013 ms\n        64 bytes from 172.217.6.238: icmp_seq=3 ttl=53 time=28.498 ms\n        64 bytes from 172.217.6.238: icmp_seq=4 ttl=53 time=46.093 ms\n\n        --- google.com ping statistics ---\n        5 packets transmitted, 5 packets received, 0.0% packet loss\n        round-trip min/avg/max/stddev = 20.482/31.927/46.093/8.292 ms\n\n:output:\n    .. code-block:: console\n\n        $ pingparsing ping.txt osx.txt\n        {\n            \"osx.txt\": {\n                \"destination\": \"google.com\",\n                \"packet_transmit\": 5,\n                \"packet_receive\": 5,\n                \"packet_loss_rate\": 0.0,\n                \"packet_loss_count\": 0,\n                \"rtt_min\": 20.482,\n                \"rtt_avg\": 31.927,\n                \"rtt_max\": 46.093,\n                \"rtt_mdev\": 8.292,\n                \"packet_duplicate_rate\": null,\n                \"packet_duplicate_count\": null\n            },\n            \"ping.txt\": {\n                \"destination\": \"192.168.0.1\",\n                \"packet_transmit\": 1688,\n                \"packet_receive\": 1553,\n                \"packet_loss_rate\": 7.997630331753558,\n                \"packet_loss_count\": 135,\n                \"rtt_min\": 0.282,\n                \"rtt_avg\": 0.642,\n                \"rtt_max\": 11.699,\n                \"rtt_mdev\": 0.699,\n                \"packet_duplicate_rate\": 0.0643915003219575,\n                \"packet_duplicate_count\": 1\n            }\n        }\n\n    .. code-block:: console\n\n        $ pingparsing ping.txt osx.txt --icmp-reply\n        {\n            \"ping.txt\": {\n                \"destination\": \"google.com\",\n                \"packet_transmit\": 60,\n                \"packet_receive\": 60,\n                \"packet_loss_count\": 0,\n                \"packet_loss_rate\": 0.0,\n                \"rtt_min\": 61.425,\n                \"rtt_avg\": 99.731,\n                \"rtt_max\": 212.597,\n                \"rtt_mdev\": 27.566,\n                \"packet_duplicate_count\": 0,\n                \"packet_duplicate_rate\": 0.0,\n                \"icmp_replies\": []\n            },\n            \"osx.txt\": {\n                \"destination\": \"google.com\",\n                \"packet_transmit\": 5,\n                \"packet_receive\": 5,\n                \"packet_loss_count\": 0,\n                \"packet_loss_rate\": 0.0,\n                \"rtt_min\": 20.482,\n                \"rtt_avg\": 31.927,\n                \"rtt_max\": 46.093,\n                \"rtt_mdev\": 8.292,\n                \"packet_duplicate_count\": 0,\n                \"packet_duplicate_rate\": 0.0,\n                \"icmp_replies\": [\n                    {\n                        \"icmp_seq\": 0,\n                        \"ttl\": 53,\n                        \"time\": 20.482,\n                        \"duplicate\": false\n                    },\n                    {\n                        \"icmp_seq\": 1,\n                        \"ttl\": 53,\n                        \"time\": 32.55,\n                        \"duplicate\": false\n                    },\n                    {\n                        \"icmp_seq\": 2,\n                        \"ttl\": 53,\n                        \"time\": 32.013,\n                        \"duplicate\": false\n                    },\n                    {\n                        \"icmp_seq\": 3,\n                        \"ttl\": 53,\n                        \"time\": 28.498,\n                        \"duplicate\": false\n                    },\n                    {\n                        \"icmp_seq\": 4,\n                        \"ttl\": 53,\n                        \"time\": 46.093,\n                        \"duplicate\": false\n                    }\n                ]\n            }\n        }\n\n\nparse from the standard input\n--------------------------------------------\n.. code-block:: console\n\n    $ ping -i 0.2 -w 20 192.168.2.101 | pingparsing -\n    {\n        \"destination\": \"192.168.2.101\",\n        \"packet_transmit\": 99,\n        \"packet_receive\": 88,\n        \"packet_loss_count\": 11,\n        \"packet_loss_rate\": 11.11111111111111,\n        \"rtt_min\": 1.615,\n        \"rtt_avg\": 26.581,\n        \"rtt_max\": 93.989,\n        \"rtt_mdev\": 19.886,\n        \"packet_duplicate_count\": 0,\n        \"packet_duplicate_rate\": 0.0\n    }\n\ncli help\n--------------------------------------------\n::\n\n    usage: pingparsing [-h] [-v] [--max-workers max_workers]\n                       [--timestamp {none,epoch,datetime}] [-c count]\n                       [-s packet_size] [--ttl ttl] [-w deadline]\n                       [--timeout timeout] [-i interface] [--addopts options]\n                       [--indent indent] [--icmp-reply] [--timezone timezone]\n                       [--no-color] [--debug | --quiet]\n                       destination_or_file [destination_or_file ...]\n\n    positional arguments:\n      destination_or_file   destinations to send ping or files to parse. '-' for\n                            parsing the standard input.\n\n    options:\n      -h, --help            show this help message and exit\n      -v, --version         show program's version number and exit\n      --max-workers max_workers\n                            number of threads for when multiple destinations/files\n                            are specified. defaults to equal two times the number\n                            of cores.\n      --debug               for debug print.\n      --quiet               suppress execution log messages.\n\n    ping options:\n      --timestamp {none,epoch,datetime}\n                            [only for linux] none: no timestamps. epoch: add\n                            timestamps with unix epoch time format. datetime: add\n                            timestamps with iso time format.\n      -c count, --count count\n                            stop after sending the count. see also ping(8) [-c\n                            count] option description.\n      -s packet_size, --packet-size packet_size\n                            specifies the number of data bytes to be sent.\n      --ttl ttl             specifies the time to live.\n      -w deadline, --deadline deadline\n                            timeout before ping exits. valid time units are:\n                            d/day/days, h/hour/hours, m/min/mins/minute/minutes,\n                            s/sec/secs/second/seconds,\n                            ms/msec/msecs/millisecond/milliseconds,\n                            us/usec/usecs/microsecond/microseconds. if no unit\n                            string found, considered seconds as the time unit. see\n                            also ping(8) [-w deadline] option description. note:\n                            meaning of the 'deadline' may differ system from to\n                            system.\n      --timeout timeout     time to wait for a response per packet. valid time\n                            units are: d/day/days, h/hour/hours,\n                            m/min/mins/minute/minutes, s/sec/secs/second/seconds,\n                            ms/msec/msecs/millisecond/milliseconds,\n                            us/usec/usecs/microsecond/microseconds. if no unit\n                            string is found, consider milliseconds as the time\n                            unit. attempt to send packets with milliseconds\n                            granularity in default. if the system does not support\n                            timeout in milliseconds, round up as seconds. use\n                            system default if not specified. this option will be\n                            ignored if the system does not support timeout itself.\n                            see also ping(8) [-w timeout] option description.\n                            note: meaning of the 'timeout' may differ from system\n                            to system.\n      -i interface, --interface interface\n                            network interface\n      --addopts options     extra command line options\n\n    output options:\n      --indent indent       json output will be pretty-printed with the indent\n                            level. (default= 4)\n      --icmp-reply, --icmp-replies\n                            print results for each icmp packet reply.\n      --timezone timezone   time zone for timestamps.\n      --no-color            turn off colors.\n\n    documentation: https://pingparsing.rtfd.io/\n    issue tracker: https://github.com/thombashi/pingparsing/issues\n\nlibrary usage\n====================\n\nexecute ping and parse the result\n--------------------------------------------\n``pingtransmitter`` class can execute ``ping`` command and obtain the\nping output as a string.\n\n:sample code:\n    .. code-block:: python\n\n        import json\n        import pingparsing\n\n        ping_parser = pingparsing.pingparsing()\n        transmitter = pingparsing.pingtransmitter()\n        transmitter.destination = \"google.com\"\n        transmitter.count = 10\n        result = transmitter.ping()\n\n        print(json.dumps(ping_parser.parse(result).as_dict(), indent=4))\n\n:output:\n    .. code-block:: json\n\n        {\n            \"destination\": \"google.com\",\n            \"packet_transmit\": 10,\n            \"packet_receive\": 10,\n            \"packet_loss_rate\": 0.0,\n            \"packet_loss_count\": 0,\n            \"rtt_min\": 34.458,\n            \"rtt_avg\": 51.062,\n            \"rtt_max\": 62.943,\n            \"rtt_mdev\": 8.678,\n            \"packet_duplicate_rate\": 0.0,\n            \"packet_duplicate_count\": 0\n        }\n\n\nparsing ``ping`` command output\n-------------------------------\n:sample code:\n    .. code-block:: python\n\n        import json\n        from textwrap import dedent\n        import pingparsing\n\n        parser = pingparsing.pingparsing()\n        stats = parser.parse(dedent(\"\"\"\\\n            ping google.com (74.125.24.100) 56(84) bytes of data.\n            [1524930937.003555] 64 bytes from 74.125.24.100: icmp_seq=1 ttl=39 time=148 ms\n            [1524930937.787175] 64 bytes from 74.125.24.100: icmp_seq=2 ttl=39 time=137 ms\n            [1524930938.787642] 64 bytes from 74.125.24.100: icmp_seq=3 ttl=39 time=137 ms\n            [1524930939.787653] 64 bytes from 74.125.24.100: icmp_seq=4 ttl=39 time=136 ms\n            [1524930940.788365] 64 bytes from 74.125.24.100: icmp_seq=5 ttl=39 time=136 ms\n\n            --- google.com ping statistics ---\n            5 packets transmitted, 5 received, 0% packet loss, time 4001ms\n            rtt min/avg/max/mdev = 136.537/139.174/148.006/4.425 ms\n            \"\"\"))\n\n        print(\"[extract ping statistics]\")\n        print(json.dumps(stats.as_dict(), indent=4))\n\n        print(\"\\n[extract icmp replies]\")\n        for icmp_reply in stats.icmp_replies:\n            print(icmp_reply)\n\n:output:\n    ::\n\n        [ping statistics]\n        {\n            \"destination\": \"google.com\",\n            \"packet_transmit\": 5,\n            \"packet_receive\": 5,\n            \"packet_loss_count\": 0,\n            \"packet_loss_rate\": 0.0,\n            \"rtt_min\": 136.537,\n            \"rtt_avg\": 139.174,\n            \"rtt_max\": 148.006,\n            \"rtt_mdev\": 4.425,\n            \"packet_duplicate_count\": 0,\n            \"packet_duplicate_rate\": 0.0\n        }\n\n        [icmp replies]\n        {'destination': '74.125.24.100', 'bytes': 64, 'timestamp': datetime.datetime(2018, 4, 29, 0, 55, 37, 3555), 'icmp_seq': 1, 'ttl': 39, 'time': 148.0, 'duplicate': false}\n        {'destination': '74.125.24.100', 'bytes': 64, 'timestamp': datetime.datetime(2018, 4, 29, 0, 55, 37, 787175), 'icmp_seq': 2, 'ttl': 39, 'time': 137.0, 'duplicate': false}\n        {'destination': '74.125.24.100', 'bytes': 64, 'timestamp': datetime.datetime(2018, 4, 29, 0, 55, 38, 787642), 'icmp_seq': 3, 'ttl': 39, 'time': 137.0, 'duplicate': false}\n        {'destination': '74.125.24.100', 'bytes': 64, 'timestamp': datetime.datetime(2018, 4, 29, 0, 55, 39, 787653), 'icmp_seq': 4, 'ttl': 39, 'time': 136.0, 'duplicate': false}\n        {'destination': '74.125.24.100', 'bytes': 64, 'timestamp': datetime.datetime(2018, 4, 29, 0, 55, 40, 788365), 'icmp_seq': 5, 'ttl': 39, 'time': 136.0, 'duplicate': false}\n\n\nrecommended ping command execution\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nthe following methods are recommended to execute ``ping`` command to get the output for parsing.\nthese commands include an operation that changes the locale setting to english temporarily.\n\nlinux\n^^^^^\n.. code:: console\n\n    lc_all=c ping <host or ip address> -w <seconds> [option] > <output.file>\n\nwindows\n^^^^^^^\n.. code:: console\n\n    > chcp\n    active code page: <xxx>    # get current code page\n\n    > chcp 437    # change code page to english\n    > ping <host or ip address> -n <ping count> > <output.file>\n    > chcp <xxx>    # restore code page\n\n-  reference\n    - https://technet.microsoft.com/en-us/library/cc733037\n\ninstallation\n============\n::\n\n    pip install pingparsing\n\n\ndependencies\n============\n- python 3.6+\n- `python package dependencies (automatically installed) <https://github.com/thombashi/pingparsing/network/dependencies>`__\n\noptional dependencies\n------------------------------------\n- pingparsing[cli] extras\n    - `loguru <https://github.com/delgan/loguru>`__\n        - used for logging if the package installed\n    - `pygments <http://pygments.org/>`__\n        - syntax highlighting to ``pingparsing`` command output when installed\n\n\ndocker image\n==================\n`thombashi/pingparsing - docker hub <https://hub.docker.com/r/thombashi/pingparsing/>`__\n\nsupported environments\n============================\n- linux\n- windows\n- macos\n\ntested environments\n---------------------------\n\n+--------------+-----------------------------------+\n| os           | ping version                      |\n+==============+===================================+\n| ubuntu 16.04 | ``iputils-ping 20121221-5ubuntu2``|\n+--------------+-----------------------------------+\n| ubuntu 18.04 | ``iputils-ping 20161105-1ubuntu2``|\n+--------------+-----------------------------------+\n| ubuntu 20.04 | ``iputils-ping 20190709-3``       |\n+--------------+-----------------------------------+\n| debian 8.6   | ``iputils-ping 20121221-5+b2``    |\n+--------------+-----------------------------------+\n| fedora 25    | ``iputils-20161105-1.fc25.x86_64``|\n+--------------+-----------------------------------+\n| windows 10   | ``-``                             |\n+--------------+-----------------------------------+\n| macos 10.13  | ``-``                             |\n+--------------+-----------------------------------+\n\npremise\n=======\n``pingparsing`` expects the locale at the ping command execution environment with english.\nparsing the ``ping`` command output with any other locale may fail.\nthis is because the output of the ``ping`` command will change depending on the locale setting.\n\ndocumentation\n===============\nhttps://pingparsing.rtfd.io/\n\nsponsors\n====================================\n.. image:: https://avatars.githubusercontent.com/u/44389260?s=48&u=6da7176e51ae2654bcfd22564772ef8a3bb22318&v=4\n   :target: https://github.com/chasbecker\n   :alt: charles becker (chasbecker)\n.. image:: https://avatars.githubusercontent.com/u/46711571?s=48&u=57687c0e02d5d6e8eeaf9177f7b7af4c9f275eb5&v=4\n   :target: https://github.com/arturi0\n   :alt: onetime: arturi0\n.. image:: https://avatars.githubusercontent.com/u/3658062?s=48&v=4\n   :target: https://github.com/b4tman\n   :alt: onetime: dmitry belyaev (b4tman)\n\n`become a sponsor <https://github.com/sponsors/thombashi>`__\n\n",
  "docs_url": null,
  "keywords": "cli,library,network,ping,parser,transmitter",
  "license": "mit license",
  "name": "pingparsing",
  "package_url": "https://pypi.org/project/pingparsing/",
  "project_url": "https://pypi.org/project/pingparsing/",
  "project_urls": {
    "Documentation": "https://pingparsing.rtfd.io/",
    "Homepage": "https://github.com/thombashi/pingparsing",
    "Source": "https://github.com/thombashi/pingparsing",
    "Tracker": "https://github.com/thombashi/pingparsing/issues"
  },
  "release_url": "https://pypi.org/project/pingparsing/1.4.1/",
  "requires_dist": [
    "humanreadable (<1,>=0.2)",
    "pyparsing (<4,>=2.0.3)",
    "subprocrunner (<3,>=1.2.2)",
    "typepy[datetime] (<2,>=1.1.0)",
    "loguru (<1,>=0.4.1) ; extra == 'cli'",
    "Pygments (<3,>=2.1) ; extra == 'cli'",
    "pytest (>=6.0.1) ; extra == 'test'",
    "pytest-discord (>=0.1.1) ; extra == 'test'",
    "pytest-md-report (>=0.3) ; extra == 'test'"
  ],
  "requires_python": ">=3.6",
  "summary": "pingparsing is a cli-tool/python-library parser and transmitter for ping command.",
  "version": "1.4.1",
  "releases": [],
  "developers": [
    "tsuyoshi.hombashi@gmail.com",
    "tsuyoshi_hombashi"
  ],
  "kwds": "ping_parser pingparsing ping pingtransmitter icmp_reply",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_pingparsing",
  "homepage": "https://github.com/thombashi/pingparsing",
  "release_count": 62,
  "dependency_ids": [
    "pypi_humanreadable",
    "pypi_loguru",
    "pypi_pygments",
    "pypi_pyparsing",
    "pypi_pytest",
    "pypi_pytest_discord",
    "pypi_pytest_md_report",
    "pypi_subprocrunner",
    "pypi_typepy"
  ]
}
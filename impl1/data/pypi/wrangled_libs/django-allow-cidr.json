{
  "classifiers": [
    "development status :: 4 - beta",
    "framework :: django",
    "framework :: django :: 2.2",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "=============================\ndjango allow cidr\n=============================\n\n.. image:: https://badge.fury.io/py/django-allow-cidr.svg\n    :target: https://badge.fury.io/py/django-allow-cidr\n\n.. image:: https://github.com/mozmeao/django-allow-cidr/actions/workflows/ci.yml/badge.svg\n   :target: https://github.com/mozmeao/django-allow-cidr/actions\n\n\na django middleware to enable use of cidr ip ranges in allowed_hosts.\n\nquickstart\n----------\n\ninstall django allow cidr::\n\n    pip install django-allow-cidr\n\nadd the middleware to your ``middleware`` settings. it should be the first in the list:\n\n.. code-block:: python\n\n    middleware = (\n        'allow_cidr.middleware.allowcidrmiddleware',\n        ...\n    )\n\nadd the ``allowed_cidr_nets`` setting:\n\n.. code-block:: python\n\n    allowed_cidr_nets = ['192.168.1.0/24']\n\nprofit!\n\nfeatures\n--------\n\n* the normal ``allowed_hosts`` values will also work as intended. this middleware is intended to augment,\n  not replace, the normal django function.\n* if you do define ``allowed_cidr_nets`` and it has values, the middleware will capture what you have in `allowed_hosts`,\n  set ``allowed_hosts`` to `['*']` and take over validation of host headers.\n* the ``allowed_cidr_nets`` values can be any valid network definition for the `netaddr`_ package.\n\nrunning tests\n-------------\n\ndoes the code actually work?\n\n::\n\n    source <yourvirtualenv>/bin/activate\n    (myenv) $ pip install tox\n    (myenv) $ tox\n\n\npushing to pypi\n---------------\ncutting a new github release will trigger ci checks, followed by an automatic release to pypi, using the release version.\nplease make sure that your github release version matches the project version in `__init__.py`.\n\nfor more details see the `release` job in  `.github/workflows/ci.yml`.\n\n\ncredits\n-------\n\ntools used in rendering this package:\n\n*  cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _netaddr: https://netaddr.readthedocs.io/en/latest/\n.. _cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nhistory\n-------\n\n0.7.1 (2023-07-10)\n++++++++++++++++++\n\n* update setup.cfg to rename deprecated licence_file param\n\n\n0.7.0 (2023-07-10)\n++++++++++++++++++\n\n* add ipv6 support - thanks @rissson!\n* add django 4.2 to ci; freshen up ci config\n\n\n0.6.0 (2023-01-05)\n++++++++++++++++++\n\n* drop dev-related dependencies (incl vulnerable version of wheel, which was not installed in general use)\n* remove redundant code from setup.py now we're auto-publishing via github\n* update testing matrix: drop python 3.6; add python 3.11; add django 4.1\n\n0.5.0 (2022-07-09)\n++++++++++++++++++\n\n* replace the netaddr dependency with python 3's ipaddress - thanks @n1ngu!\n* update gh actions to release to pypi\n\n0.4.1 (2022-06-13)\n++++++++++++++++++\n\n* use packaging.version to avoid distutils deprecated module - thanks @adamantike!\n\n0.4.0 (2022-02-22)\n++++++++++++++++++\n\n* drop django support for non-lts and non-latest django (so, removing 1.x, 2.0, 2.1, 3.0, 3.1)\n* drop support for older python releases (2.x, 3.5)\n* add django 4.0 to tox's test matrix\n* add python 3.7 through 3.10 to tox's test matrix; 3.6 to 3.10 are now the only tested versions\n* switch ci to github actions\n\n0.3.1 (2018-07-31)\n++++++++++++++++++\n\n* fix issue #6: accept passed in `get_response` function for middleware in django >= 1.10.\n* publish updated docs that fix the `allowed_cidr_nets` typo.\n\n0.3.0 (2018-02-21)\n++++++++++++++++++\n\n* disable middleware if allowed_hosts is set to `['*']`.\n\n0.2.0 (2018-02-21)\n++++++++++++++++++\n\n* handle host names with ports (thanks giorgos!).\n\n0.1.0 (2018-02-16)\n++++++++++++++++++\n\n* first release on pypi.\n",
  "docs_url": null,
  "keywords": "django-allow-cidr",
  "license": "apache software license 2.0",
  "name": "django-allow-cidr",
  "package_url": "https://pypi.org/project/django-allow-cidr/",
  "project_url": "https://pypi.org/project/django-allow-cidr/",
  "project_urls": {
    "Homepage": "https://github.com/mozmeao/django-allow-cidr"
  },
  "release_url": "https://pypi.org/project/django-allow-cidr/0.7.1/",
  "requires_dist": [
    "Django (>=2.2)",
    "packaging"
  ],
  "requires_python": "",
  "summary": "a django middleware to enable use of cidr ip ranges in allowed_hosts.",
  "version": "0.7.1",
  "releases": [],
  "developers": [
    "paul_mclanahan",
    "pmac@mozilla.com"
  ],
  "kwds": "allow_cidr allowed_cidr_nets django allowed_hosts djangopackage",
  "license_kwds": "apache software license 2.0",
  "libtype": "pypi",
  "id": "pypi_django_allow_cidr",
  "homepage": "https://github.com/mozmeao/django-allow-cidr",
  "release_count": 10,
  "dependency_ids": [
    "pypi_django",
    "pypi_packaging"
  ]
}
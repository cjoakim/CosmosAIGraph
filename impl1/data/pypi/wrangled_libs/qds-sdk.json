{
  "classifiers": [
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4"
  ],
  "description": "qubole data service python sdk\n==============================\n\n.. image:: https://travis-ci.org/qubole/qds-sdk-py.svg?branch=master\n    :target: https://travis-ci.org/qubole/qds-sdk-py\n    :alt: build status\n\na python module that provides the tools you need to authenticate with,\nand use the qubole data service api.\n\ninstallation\n------------\n\nfrom pypi\n~~~~~~~~~\nthe sdk is available on `pypi <https://pypi.python.org/pypi/qds_sdk>`_.\n\n::\n\n    $ pip install qds-sdk\n\nfrom source\n~~~~~~~~~~~\n* get the source code:\n\n  - either clone the project: ``git clone git@github.com:qubole/qds-sdk-py.git`` and checkout latest release tag from `releases <https://github.com/qubole/qds-sdk-py/releases>`_.\n  \n  - or download one of the releases from https://github.com/qubole/qds-sdk-py/releases\n\n* run the following command (may need to do this as root):\n\n  ::\n\n      $ python setup.py install\n\n* alternatively, if you use virtualenv, you can do this:\n\n  ::\n\n      $ cd qds-sdk-py\n      $ virtualenv venv\n      $ source venv/bin/activate\n      $ python setup.py install\n\nthis should place a command line utility ``qds.py`` somewhere in your\npath\n\n::\n\n    $ which qds.py\n    /usr/bin/qds.py\n\n\ncli\n---\n\n``qds.py`` allows running hive, hadoop, pig, presto and shell commands\nagainst qds. users can run commands synchronously - or submit a command\nand check its status.\n\n::\n\n    $ qds.py -h  # will print detailed usage\n\nexamples:\n\n1. run a hive query and print the results\n\n   ::\n\n       $ qds.py --token 'xxyyzz' hivecmd run --query \"show tables\"\n       $ qds.py --token 'xxyyzz' hivecmd run --script_location /tmp/myquery\n       $ qds.py --token 'xxyyzz' hivecmd run --script_location s3://my-qubole-location/myquery\n\n2. pass in api token from bash environment variable\n\n   ::\n\n       $ export qds_api_token=xxyyzz\n\n3. run the example hadoop command\n\n   ::\n\n       $ qds.py hadoopcmd run streaming -files 's3n://paid-qubole/hadoopapiexamples/wordcountpython/mapper.py,s3n://paid-qubole/hadoopapiexamples/wordcountpython/reducer.py' -mapper mapper.py -reducer reducer.py -numreducetasks 1 -input 's3n://paid-qubole/default-datasets/gutenberg' -output 's3n://example.bucket.com/wcout'\n\n4. check the status of command # 12345678\n\n   ::\n\n       $ qds.py hivecmd check 12345678\n       {\"status\": \"done\", ... }\n\n5. if you are hitting api\\_url other than api.qubole.com, then you can pass it in command line as ``--url`` or set in as env variable\n\n   ::\n\n       $ qds.py --token 'xxyyzz' --url https://<env>.qubole.com/api hivecmd ...\n\n       or\n\n       $ export qds_api_url=https://<env>.qubole.com/api\n\n\nsdk api\n-------\n\nan example python application needs to do the following:\n\n1. set the api\\_token and api\\_url (if api\\_url other than api.qubole.com):\n\n   ::\n\n       from qds_sdk.qubole import qubole\n\n       qubole.configure(api_token='ksbdvcwdkjn123423')\n\n       # or\n\n       qubole.configure(api_token='ksbdvcwdkjn123423', api_url='https://<env>.qubole.com/api')\n\n2. use the command classes defined in commands.py to execute commands.\n   to run hive command:\n\n   ::\n\n       from qds_sdk.commands import *\n\n       hc=hivecommand.create(query='show tables')\n       print \"id: %s, status: %s\" % (str(hc.id), hc.status)\n\n``example/mr_1.py`` contains a hadoop streaming example\n\n\nreporting bugs and contributing code\n------------------------------------\n\n* want to report a bug or request a feature? please open `an issue <https://github.com/qubole/qds-sdk-py/issues/new>`_.\n* want to contribute? fork the project and create a pull request with your changes against ``unreleased`` branch.\n",
  "docs_url": null,
  "keywords": "qubole sdk api",
  "license": "apache license 2.0",
  "name": "qds_sdk",
  "package_url": "https://pypi.org/project/qds_sdk/",
  "project_url": "https://pypi.org/project/qds_sdk/",
  "project_urls": {
    "Homepage": "https://github.com/qubole/qds-sdk-py"
  },
  "release_url": "https://pypi.org/project/qds_sdk/1.16.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python sdk for coding to the qubole data service api",
  "version": "1.16.1",
  "releases": [],
  "developers": [
    "dev@qubole.com",
    "qubole"
  ],
  "kwds": "qds_sdk qds_api_token qds_api_url qubole qds",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_qds_sdk",
  "homepage": "https://github.com/qubole/qds-sdk-py",
  "release_count": 69,
  "dependency_ids": []
}
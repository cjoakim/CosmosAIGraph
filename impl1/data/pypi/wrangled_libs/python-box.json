{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development",
    "topic :: software development :: libraries :: python modules",
    "topic :: utilities"
  ],
  "description": "|buildstatus| |license|\n\n|boximage|\n\n.. code:: python\n\n        from box import box\n\n        movie_box = box({ \"robin hood: men in tights\": { \"imdb stars\": 6.7, \"length\": 104 } })\n\n        movie_box.robin_hood_men_in_tights.imdb_stars\n        # 6.7\n\n\nbox will automatically make otherwise inaccessible keys safe to access as an attribute.\nyou can always pass `conversion_box=false` to `box` to disable that behavior.\nalso, all new dict and lists added to a box or boxlist object are converted automatically.\n\nthere are over a half dozen ways to customize your box and make it work for you.\n\ncheck out the new `box github wiki <https://github.com/cdgriffith/box/wiki>`_ for more details and examples!\n\ninstall\n=======\n\n**version pin your box!**\n\nif you aren't in the habit of version pinning your libraries, it will eventually bite you.\nbox has a `list of breaking change <https://github.com/cdgriffith/box/wiki/major-version-breaking-changes>`_ between major versions you should always check out before updating.\n\nrequirements.txt\n----------------\n\n.. code:: text\n\n        python-box[all]~=7.0\n\nas box adheres to semantic versioning (aka api changes will only occur on between major version),\nit is best to use `compatible release <https://www.python.org/dev/peps/pep-0440/#compatible-release>`_ matching using the `~=` clause.\n\ninstall from command line\n-------------------------\n\n.. code:: bash\n\n        python -m pip install --upgrade pip\n        pip install python-box[all]~=7.0 --upgrade\n\ninstall with selected dependencies\n----------------------------------\n\nbox does not install external dependencies such as yaml and toml writers. instead you can specify which you want,\nfor example, `[all]` is shorthand for:\n\n.. code:: bash\n\n        pip install python-box[ruamel.yaml,tomli_w,msgpack]~=7.0 --upgrade\n\nbut you can also sub out `ruamel.yaml` for `pyyaml`.\n\ncheck out `more details <https://github.com/cdgriffith/box/wiki/installation>`_ on installation details.\n\nbox 7 is tested on python 3.7+, if you are upgrading from previous versions, please look through\n`any breaking changes and new features <https://github.com/cdgriffith/box/wiki/major-version-breaking-changes>`_.\n\noptimized version\n-----------------\n\nbox has introduced cython optimizations for major platforms by default.\nloading large data sets can be up to 10x faster!\n\nif you are **not** on a x86_64 supported system you will need to do some extra work to install the optimized version.\nthere will be an warning of \"warning: cython not installed, could not optimize box\" during install.\nyou will need python development files, system compiler, and the python packages `cython` and `wheel`.\n\n**linux example:**\n\nfirst make sure you have python development files installed (`python3-dev` or `python3-devel` in most repos).\nyou will then need `cython` and `wheel` installed and then install (or re-install with `--force`) `python-box`.\n\n.. code:: bash\n\n        pip install cython wheel\n        pip install python-box[all]~=7.0 --upgrade --force\n\nif you have any issues please open a github issue with the error you are experiencing!\n\noverview\n========\n\n`box` is designed to be a near transparent drop in replacements for\ndictionaries that add dot notation access and other powerful feature.\n\nthere are a lot of `types of boxes <https://github.com/cdgriffith/box/wiki/types-of-boxes>`_\nto customize it for your needs, as well as handy `converters <https://github.com/cdgriffith/box/wiki/converters>`_!\n\nkeep in mind any sub dictionaries or ones set after initiation will be automatically converted to\na `box` object, and lists will be converted to `boxlist`, all other objects stay intact.\n\ncheck out the `quick start <https://github.com/cdgriffith/box/wiki/quick-start>`_  for more in depth details.\n\n`box` can be instantiated the same ways as `dict`.\n\n.. code:: python\n\n        box({'data': 2, 'count': 5})\n        box(data=2, count=5)\n        box({'data': 2, 'count': 1}, count=5)\n        box([('data', 2), ('count', 5)])\n\n        # all will create\n        # <box: {'data': 2, 'count': 5}>\n\n`box` is a subclass of `dict` which overrides some base functionality to make\nsure everything stored in the dict can be accessed as an attribute or key value.\n\n.. code:: python\n\n      small_box = box({'data': 2, 'count': 5})\n      small_box.data == small_box['data'] == getattr(small_box, 'data')\n\nall dicts (and lists) added to a `box` will be converted on insertion to a `box` (or `boxlist`),\nallowing for recursive dot notation access.\n\n`box` also includes helper functions to transform it back into a `dict`,\nas well as into `json`, `yaml`, `toml`, or `msgpack` strings or files.\n\n\nthanks\n======\n\na huge thank you to everyone that has given features and feedback over the years to box! check out everyone that has contributed_.\n\na big thanks to python software foundation, and psf-trademarks committee, for official approval to use the python logo on the `box` logo!\n\nalso special shout-out to pythonbytes_, who featured box on their podcast.\n\n\nlicense\n=======\n\nmit license, copyright (c) 2017-2023 chris griffith. see license_ file.\n\n\n.. |boximage| image:: https://raw.githubusercontent.com/cdgriffith/box/master/box_logo.png\n   :target: https://github.com/cdgriffith/box\n.. |buildstatus| image:: https://github.com/cdgriffith/box/workflows/tests/badge.svg?branch=master\n   :target: https://github.com/cdgriffith/box/actions?query=workflow%3atests\n.. |license| image:: https://img.shields.io/pypi/l/python-box.svg\n   :target: https://pypi.python.org/pypi/python-box/\n\n.. _pythonbytes: https://pythonbytes.fm/episodes/show/19/put-your-python-dictionaries-in-a-box-and-apparently-python-is-really-wanted\n.. _contributed: authors.rst\n.. _`wrapt documentation`: https://wrapt.readthedocs.io/en/latest\n.. _reusables: https://github.com/cdgriffith/reusables#reusables\n.. _created: https://github.com/cdgriffith/reusables/commit/df20de4db74371c2fedf1578096f3e29c93ccdf3#diff-e9a0f470ef3e8afb4384dc2824943048r51\n.. _license: https://github.com/cdgriffith/box/blob/master/license\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "python-box",
  "package_url": "https://pypi.org/project/python-box/",
  "project_url": "https://pypi.org/project/python-box/",
  "project_urls": {
    "Homepage": "https://github.com/cdgriffith/Box"
  },
  "release_url": "https://pypi.org/project/python-box/7.1.1/",
  "requires_dist": [
    "PyYAML ; extra == 'pyyaml'",
    "ruamel.yaml >=0.17 ; extra == 'all'",
    "toml ; extra == 'all'",
    "msgpack ; extra == 'all'",
    "msgpack ; extra == 'msgpack'",
    "ruamel.yaml >=0.17 ; extra == 'ruamel.yaml'",
    "toml ; extra == 'toml'",
    "tomli-w ; extra == 'tomli'",
    "tomli ; (python_version < \"3.11\") and extra == 'tomli'",
    "ruamel.yaml >=0.17 ; extra == 'yaml'"
  ],
  "requires_python": ">=3.8",
  "summary": "advanced python dictionaries with dot notation access",
  "version": "7.1.1",
  "releases": [],
  "developers": [
    "chris@cdgriffith.com",
    "chris_griffith"
  ],
  "kwds": "movie_box boxlist boxes box boximage",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_python_box",
  "homepage": "https://github.com/cdgriffith/box",
  "release_count": 60,
  "dependency_ids": [
    "pypi_msgpack",
    "pypi_pyyaml",
    "pypi_ruamel.yaml",
    "pypi_toml",
    "pypi_tomli",
    "pypi_tomli_w"
  ]
}
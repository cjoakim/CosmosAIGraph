{
  "classifiers": [
    "development status :: 6 - mature",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development",
    "topic :: software development :: testing"
  ],
  "description": "socket mock framework - for all kinds of socket animals, web-clients included - with gevent/asyncio/ssl support\n===============\nmocket /m\u0254\u02c8k\u025bt/\n===============\n\n.. image:: https://github.com/mindflayer/python-mocket/workflows/mocket's%20ci/badge.svg\n    :target: https://github.com/mindflayer/python-mocket/actions?query=workflow%3a%22mocket%27s+ci%22\n\n.. image:: https://coveralls.io/repos/github/mindflayer/python-mocket/badge.svg?branch=master\n    :target: https://coveralls.io/github/mindflayer/python-mocket?branch=master\n\n.. image:: https://app.codacy.com/project/badge/grade/6327640518ce42adaf59368217028f14\n    :target: https://www.codacy.com/gh/mindflayer/python-mocket/dashboard\n\n.. image:: https://img.shields.io/pypi/dm/mocket\n    :target: https://pypistats.org/packages/mocket\n\n\na socket mock framework\n-------------------------\n    for all kinds of socket *animals*, web-clients included - with gevent/asyncio/ssl support\n\n...and then micropython's *urequests* (*mocket >= 3.9.1*)\n\noutside github\n==============\n\nmocket packages are available for `arch linux`_, `opensuse`_, `nixos`_, `alt linux`_ and `netbsd`_.\n\n.. _`arch linux`: https://archlinux.org/packages/extra/any/python-mocket/\n.. _`opensuse`: https://software.opensuse.org/search?baseproject=all&q=mocket\n.. _`nixos`: https://search.nixos.org/packages?query=mocket\n.. _`alt linux`: https://packages.altlinux.org/en/sisyphus/srpms/python3-module-mocket/\n.. _`netbsd`: https://cdn.netbsd.org/pub/pkgsrc/current/pkgsrc/devel/py-mocket/index.html\n\n\nversioning\n==========\nstarting from *3.7.0*, mocket major version will follow the same numbering pattern as python's and therefore indicate the most recent python version that is supported.\n\nfyi: the last version compatible with python 2.7 is *3.9.4*, bugfixing or backporting of features introduced after that release will only be available as commercial support.\n\nsupport it\n==========\n*star* the project on github, *buy me a coffee* clicking the button below or, even better, contribute with patches or documentation.\n\n.. image:: https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\n     :target: https://www.buymeacoffee.com/mocket\n     :alt: buy me a coffee\n\nhow to use it\n=============\nread the following blog posts if you want to have a big picture of what *mocket* is capable of:\n\n- https://medium.com/p/mocket-is-alive-and-is-fighting-with-us-b2810d52597a\n- https://hackernoon.com/make-development-great-again-faab769d264e\n- https://hackernoon.com/httpretty-now-supports-asyncio-e310814704c6\n- https://medium.com/@mindflayer/how-to-make-your-tests-fail-when-they-try-to-access-the-network-python-eb80090a6d24\n- https://medium.com/@mindflayer/testing-in-an-asyncio-world-a9a0ad41b0c5\n\nthe starting point to understand how to use *mocket* to write a custom mock is the following example:\n\n- https://github.com/mindflayer/mocketoy\n\nas next step, you are invited to have a look at the implementation of both the mocks it provides:\n\n- http mock (similar to httpretty) - https://github.com/mindflayer/python-mocket/blob/master/mocket/mockhttp.py\n- redis mock (basic implementation) - https://github.com/mindflayer/python-mocket/blob/master/mocket/mockredis.py\n\nplease also have a look at the huge test suite:\n\n- tests module at https://github.com/mindflayer/python-mocket/tree/master/tests\n\ninstallation\n============\nusing pip::\n\n    $ pip install mocket\n\nspeedups\n========\nmocket uses **xxhash** when available instead of *hashlib.md5* for creating hashes, you can install it as follows::\n\n    $ pip install mocket[speedups]\n\nissues\n============\nwhen opening an **issue**, please add few lines of code as failing test, or -better- open its relative **pull request** adding this test to our test suite.\n\nexample of how to mock an http[s] call\n======================================\nlet's create a new virtualenv with all we need::\n\n    $ python3 -m venv example\n    $ source example/bin/activate\n    $ pip install pytest requests mocket\n\nas second step, we create an `example.py` file as the following one:\n\n.. code-block:: python\n\n    import json\n\n    from mocket import mocketize\n    from mocket.mockhttp import entry\n    import requests\n    import pytest\n\n\n    @pytest.fixture\n    def response():\n        return {\n            \"integer\": 1,\n            \"string\": \"asd\",\n            \"boolean\": false,\n        }\n\n\n    @mocketize  # use its decorator\n    def test_json(response):\n        url_to_mock = 'https://testme.org/json'\n\n        entry.single_register(\n            entry.get,\n            url_to_mock,\n            body=json.dumps(response),\n            headers={'content-type': 'application/json'}\n        )\n\n        mocked_response = requests.get(url_to_mock).json()\n\n        assert response == mocked_response\n\n    # or use its context manager\n    from mocket import mocketizer\n\n    def test_json_with_context_manager(response):\n        url_to_mock = 'https://testme.org/json'\n\n        entry.single_register(\n            entry.get,\n            url_to_mock,\n            body=json.dumps(response),\n            headers={'content-type': 'application/json'}\n        )\n\n        with mocketizer():\n            mocked_response = requests.get(url_to_mock).json()\n\n        assert response == mocked_response\n\nlet's fire our example test::\n\n    $ py.test example.py\n\nhow to make mocket fail when it tries to write to a real `socket`?\n==================================================================\nnew!!! sometimes you just want your tests to fail when they attempt to use the network.\n\n.. code-block:: python\n\n    with mocketizer(strict_mode=true):\n        with pytest.raises(strictmocketexception):\n            requests.get(\"https://duckduckgo.com/\")\n\n    # or\n\n    @mocketize(strict_mode=true)\n    def test_get():\n        with pytest.raises(strictmocketexception):\n            requests.get(\"https://duckduckgo.com/\")\n\nhow to be sure that all the entry instances have been served?\n=============================================================\nadd this instruction at the end of the test execution:\n\n.. code-block:: python\n\n    mocket.assert_fail_if_entries_not_served()\n\nexample of how to fake socket errors\n====================================\n\nit's very important that we test non-happy paths.\n\n.. code-block:: python\n\n    @mocketize\n    def test_raise_exception(self):\n        url = \"http://github.com/fluidicon.png\"\n        entry.single_register(entry.get, url, exception=socket.error())\n        with self.assertraises(requests.exceptions.connectionerror):\n            requests.get(url)\n\nexample of how to record real socket traffic\n============================================\n\nyou probably know what *vcrpy* is capable of, that's the *mocket*'s way of achieving it:\n\n.. code-block:: python\n\n    @mocketize(truesocket_recording_dir=tempfile.mkdtemp())\n    def test_truesendall_with_recording_https():\n        url = 'https://httpbin.org/ip'\n\n        requests.get(url, headers={\"accept\": \"application/json\"})\n        resp = requests.get(url, headers={\"accept\": \"application/json\"})\n        assert resp.status_code == 200\n\n        dump_filename = os.path.join(\n            mocket.get_truesocket_recording_dir(),\n            mocket.get_namespace() + '.json',\n        )\n        with io.open(dump_filename) as f:\n            response = json.load(f)\n\n        assert len(response['httpbin.org']['443'].keys()) == 1\n\nhttpretty compatibility layer\n=============================\nmocket http mock can work as *httpretty* replacement for many different use cases. two main features are missing:\n\n- url entries containing regular expressions;\n- response body from functions (used mostly to fake errors, *mocket* doesn't need to do it this way).\n\ntwo features which are against the zen of python, at least imho (*mindflayer*), but of course i am open to call it into question.\n\nexample:\n\n.. code-block:: python\n\n    import json\n\n    import aiohttp\n    import asyncio\n    from unittest import testcase\n\n    from mocket.plugins.httpretty import httpretty, httprettified\n\n\n    class aiohttpentrytestcase(testcase):\n        @httprettified\n        def test_https_session(self):\n            url = 'https://httpbin.org/ip'\n            httpretty.register_uri(\n                httpretty.get,\n                url,\n                body=json.dumps(dict(origin='127.0.0.1')),\n            )\n\n            async def main(l):\n                async with aiohttp.clientsession(\n                    loop=l, timeout=aiohttp.clienttimeout(total=3)\n                ) as session:\n                    async with session.get(url) as get_response:\n                        assert get_response.status == 200\n                        assert await get_response.text() == '{\"origin\": \"127.0.0.1\"}'\n\n            loop = asyncio.new_event_loop()\n            loop.set_debug(true)\n            loop.run_until_complete(main(loop))\n\nwhat about the other socket animals?\n====================================\nusing *mocket* with asyncio based clients::\n\n    $ pip install aiohttp\n\nexample:\n\n.. code-block:: python\n\n    class aiohttpentrytestcase(testcase):\n        @mocketize\n        def test_http_session(self):\n            url = 'http://httpbin.org/ip'\n            body = \"asd\" * 100\n            entry.single_register(entry.get, url, body=body, status=404)\n            entry.single_register(entry.post, url, body=body*2, status=201)\n\n            async def main(l):\n                async with aiohttp.clientsession(\n                    loop=l, timeout=aiohttp.clienttimeout(total=3)\n                ) as session:\n                    async with session.get(url) as get_response:\n                        assert get_response.status == 404\n                        assert await get_response.text() == body\n\n                    async with session.post(url, data=body * 6) as post_response:\n                        assert post_response.status == 201\n                        assert await post_response.text() == body * 2\n\n            loop = asyncio.new_event_loop()\n            loop.run_until_complete(main(loop))\n\n    # or again with a unittest.isolatedasynciotestcase\n    from mocket.async_mocket import async_mocketize\n\n    class aiohttpentrytestcase(isolatedasynciotestcase):\n        @async_mocketize\n        async def test_http_session(self):\n            url = 'http://httpbin.org/ip'\n            body = \"asd\" * 100\n            entry.single_register(entry.get, url, body=body, status=404)\n            entry.single_register(entry.post, url, body=body * 2, status=201)\n\n            async with aiohttp.clientsession(\n                timeout=aiohttp.clienttimeout(total=3)\n            ) as session:\n                async with session.get(url) as get_response:\n                    assert get_response.status == 404\n                    assert await get_response.text() == body\n\n                async with session.post(url, data=body * 6) as post_response:\n                    assert post_response.status == 201\n                    assert await post_response.text() == body * 2\n                    assert mocket.last_request().method == 'post'\n                    assert mocket.last_request().body == body * 6\n\n\nworks well with others\n=======================\nusing *mocket* as pook_ engine::\n\n    $ pip install mocket[pook]\n\n.. _pook: https://pypi.python.org/pypi/pook\n\nexample:\n\n.. code-block:: python\n\n    import pook\n    from mocket.plugins.pook_mock_engine import mocketengine\n\n    pook.set_mock_engine(mocketengine)\n\n    pook.on()\n\n    url = 'http://twitter.com/api/1/foobar'\n    status = 404\n    response_json = {'error': 'foo'}\n\n    mock = pook.get(\n        url,\n        headers={'content-type': 'application/json'},\n        reply=status,\n        response_json=response_json,\n    )\n    mock.persist()\n\n    requests.get(url)\n    assert mock.calls == 1\n\n    resp = requests.get(url)\n    assert resp.status_code == status\n    assert resp.json() == response_json\n    assert mock.calls == 2\n\nfirst appearance\n================\neuropython 2013, florence\n\n- video: https://www.youtube.com/watch?v=-lvxbl5d02u\n- slides: https://prezi.com/tmuiaugamsti/mocket/\n- slides as pdf: https://ep2013.europython.eu/media/conference/slides/mocket-a-socket-mock-framework.pdf\n",
  "docs_url": null,
  "keywords": "",
  "license": "copyright (c) 2017-2023 giorgio salluzzo and individual contributors. all rights reserved. copyright (c) 2013-2017 andrea de marco, giorgio salluzzo and individual contributors. all rights reserved.  redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1. redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  2. redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  3. neither the name of the mocket nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  this software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. in no event shall the copyright holder or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.",
  "name": "mocket",
  "package_url": "https://pypi.org/project/mocket/",
  "project_url": "https://pypi.org/project/mocket/",
  "project_urls": {
    "github": "https://github.com/mindflayer/python-mocket"
  },
  "release_url": "https://pypi.org/project/mocket/3.12.2/",
  "requires_dist": [
    "decorator>=4.0.0",
    "httptools",
    "python-magic>=0.4.5",
    "urllib3>=1.25.3",
    "pook>=0.2.1; extra == 'pook'",
    "xxhash-cffi; (platform_python_implementation == 'PyPy') and extra == 'speedups'",
    "xxhash; (platform_python_implementation == 'CPython') and extra == 'speedups'",
    "aiohttp; (python_version < '3.12') and extra == 'test'",
    "asgiref; extra == 'test'",
    "build; extra == 'test'",
    "fastapi; extra == 'test'",
    "flake8>5; extra == 'test'",
    "gevent; extra == 'test'",
    "httpx; extra == 'test'",
    "pipfile; extra == 'test'",
    "pook; extra == 'test'",
    "pre-commit; extra == 'test'",
    "pytest; extra == 'test'",
    "pytest-asyncio; extra == 'test'",
    "pytest-cov; extra == 'test'",
    "redis; extra == 'test'",
    "requests; extra == 'test'",
    "sure; extra == 'test'",
    "twine; extra == 'test'",
    "wait-for-it; extra == 'test'",
    "xxhash; extra == 'test'"
  ],
  "requires_python": ">=3.5",
  "summary": "socket mock framework - for all kinds of socket animals, web-clients included - with gevent/asyncio/ssl support",
  "version": "3.12.2",
  "releases": [],
  "developers": [
    "giorgio.salluzzo@gmail.com"
  ],
  "kwds": "mocket pook_mock_engine mock mockredis mocks",
  "license_kwds": "copyright redistributions redistribution disclaimer liable",
  "libtype": "pypi",
  "id": "pypi_mocket",
  "homepage": "",
  "release_count": 86,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_asgiref",
    "pypi_build",
    "pypi_decorator",
    "pypi_fastapi",
    "pypi_flake8",
    "pypi_gevent",
    "pypi_httptools",
    "pypi_httpx",
    "pypi_pipfile",
    "pypi_pook",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_python_magic",
    "pypi_redis",
    "pypi_requests",
    "pypi_sure",
    "pypi_twine",
    "pypi_urllib3",
    "pypi_wait_for_it",
    "pypi_xxhash",
    "pypi_xxhash_cffi"
  ],
  "documentation_summary": "Mocket is a Python package available on PyPI, designed as a socket mock framework to support various socket types, including web clients, with compatibility for gevent, asyncio, and SSL. It is intended for developers and supports Python versions 3.8 and above. The latest version, 3.12.4, was released on February 6, 2024. Mocket allows for mocking HTTP[S] calls, faking socket errors, and recording real socket traffic, among other features. It can be installed using pip and offers speedups through the optional use of xxhash. The project is open-source, licensed under the BSD License, and encourages contributions from the community.",
  "embedding": [
    -0.01416764222085476,
    -0.01311140600591898,
    0.013118447735905647,
    -0.0012710037408396602,
    -0.009203334338963032,
    0.023180853575468063,
    0.014308474026620388,
    -0.010998934507369995,
    -0.00849213544279337,
    -0.026856554672122,
    0.0019188282312825322,
    0.0032373624853789806,
    -0.004527730401605368,
    0.004999516066163778,
    -0.01470280159264803,
    -0.010294777341187,
    0.01701243780553341,
    -0.009822992607951164,
    -0.0064113507978618145,
    -0.01436480600386858,
    0.04855867847800255,
    0.03363054618239403,
    -0.027448046952486038,
    -0.024800416082143784,
    0.003265528939664364,
    0.0128508685156703,
    0.01881507970392704,
    -0.011083433404564857,
    -0.004837559536099434,
    0.007703479379415512,
    0.012921283952891827,
    -0.01964598521590233,
    -0.03053225390613079,
    -0.02035014145076275,
    -0.012372041121125221,
    0.006633160635828972,
    0.011280598118901253,
    0.006055751815438271,
    0.02977176569402218,
    -0.003277851501479745,
    0.014674635604023933,
    0.011315805837512016,
    0.007136632688343525,
    -0.021772539243102074,
    -0.046277210116386414,
    0.020152978599071503,
    -0.0009778982494026423,
    -0.024377921596169472,
    -0.012217126786708832,
    -0.016843440011143684,
    0.021772539243102074,
    0.012118544429540634,
    0.006464162841439247,
    0.006932427175343037,
    0.0019117867341265082,
    0.0053832815028727055,
    0.015195711515843868,
    -0.00809076614677906,
    0.007534481585025787,
    -0.008506218902766705,
    -0.004809393547475338,
    -0.0013308570487424731,
    -0.03199690207839012,
    -0.019406571984291077,
    0.005608611740171909,
    0.007689396385103464,
    -0.005457218270748854,
    0.01918124035000801,
    -0.03726399689912796,
    -0.0189981609582901,
    0.028842277824878693,
    0.014231015928089619,
    0.019955813884735107,
    -0.02304002270102501,
    0.07424633204936981,
    -0.008541426621377468,
    -0.03605284541845322,
    0.04895300790667534,
    0.0004422987112775445,
    -0.016927938908338547,
    0.008069640956819057,
    0.00451364740729332,
    -0.014336640015244484,
    0.055515751242637634,
    0.02019522711634636,
    0.006101521663367748,
    0.007844311185181141,
    0.016575859859585762,
    0.0026335478760302067,
    0.011125682853162289,
    0.019983980804681778,
    -0.0030930102802813053,
    0.006640201900154352,
    0.01470280159264803,
    -0.03520786017179489,
    0.04577021673321724,
    -0.027279049158096313,
    0.01701243780553341,
    0.02223728410899639,
    -0.015097130089998245,
    -0.004823476541787386,
    0.007337317802011967,
    -0.0049959952011704445,
    -0.010168029926717281,
    -0.020392391830682755,
    -0.022011952474713326,
    0.011583385057747364,
    -0.027391713112592697,
    0.023152688518166542,
    0.021223297342658043,
    -0.013569108210504055,
    0.031039247289299965,
    0.0003544991195667535,
    -0.019955813884735107,
    0.02089938521385193,
    -0.011710133403539658,
    0.02870144695043564,
    0.014407055452466011,
    -0.009597661904990673,
    -0.0011997077381238341,
    0.01009761355817318,
    -0.0008863578550517559,
    0.0152379609644413,
    -0.017575763165950775,
    0.01954740285873413,
    -0.01298465859144926,
    -0.02236403152346611,
    -0.013033948838710785,
    0.013618399389088154,
    -0.018800996243953705,
    0.012343875132501125,
    -0.025532739236950874,
    0.01680118963122368,
    0.00835130363702774,
    -0.02294144034385681,
    0.0076964376494288445,
    -0.022814692929387093,
    0.0012982897460460663,
    -0.03118008002638817,
    -0.037827324122190475,
    -0.009358248673379421,
    0.01701243780553341,
    -0.013308570720255375,
    0.001390710356645286,
    -0.005633257329463959,
    0.03503886237740517,
    0.004309441894292831,
    -0.003096531145274639,
    0.0025824964977800846,
    -0.002718046773225069,
    0.009379373863339424,
    -0.007111987564712763,
    -0.03399670869112015,
    0.0007279224810190499,
    -0.009245583787560463,
    0.01761801168322563,
    -0.008794923312962055,
    0.001230514608323574,
    -0.018730580806732178,
    -0.009034336544573307,
    -0.009822992607951164,
    0.03205323591828346,
    -0.018125005066394806,
    -0.02765929326415062,
    -0.008027391508221626,
    0.03157440572977066,
    0.03692600131034851,
    0.004496043547987938,
    -0.002932814648374915,
    0.003422203939408064,
    -0.0012340354733169079,
    0.0032479248475283384,
    -0.021490877494215965,
    0.021237380802631378,
    0.010689105838537216,
    0.021237380802631378,
    -0.016998354345560074,
    0.028616948053240776,
    -0.016378695145249367,
    -0.004650957882404327,
    0.002559611340984702,
    0.013540942221879959,
    0.019110824912786484,
    0.025842567905783653,
    -0.010315902531147003,
    0.012745244428515434,
    -0.014371847733855247,
    -0.0038341358304023743,
    0.008485093712806702,
    -9.753677295520902e-05,
    0.02395542711019516,
    0.018885495141148567,
    0.0005510029732249677,
    -0.023828677833080292,
    -0.5700856447219849,
    0.020885301753878593,
    -0.009266708046197891,
    -0.015477374196052551,
    -0.006661326624453068,
    0.011386221274733543,
    0.01829400286078453,
    -0.001767434529028833,
    -0.007119028829038143,
    0.027208633720874786,
    -0.015223877504467964,
    0.03655983880162239,
    0.011900256387889385,
    -0.022983690723776817,
    -0.018913662061095238,
    -0.014019769616425037,
    -0.012343875132501125,
    -0.02578623592853546,
    -0.008133015595376492,
    -0.009217416867613792,
    -0.012780452147126198,
    0.027560710906982422,
    -0.023504765704274178,
    0.007914726622402668,
    -0.01701243780553341,
    0.011590426787734032,
    -0.0049502248875796795,
    -0.012977616861462593,
    0.02523699216544628,
    0.009414581581950188,
    -0.04019328951835632,
    0.023997675627470016,
    0.029687266796827316,
    -0.009583579376339912,
    0.07137337327003479,
    0.00012344754941295832,
    -0.024617334827780724,
    0.056586071848869324,
    -0.02656080760061741,
    0.022096451371908188,
    -0.008985045365989208,
    -0.010217320173978806,
    -0.0003619807830546051,
    0.011315805837512016,
    -0.0010368714574724436,
    0.001878339215181768,
    0.03841881453990936,
    -1.2900379260827322e-05,
    -0.01756167970597744,
    0.0016450871480628848,
    -0.004499564412981272,
    0.013435319066047668,
    0.0004981912206858397,
    -0.011090475134551525,
    0.013259279541671276,
    -0.01661810837686062,
    0.02836345136165619,
    0.010527149774134159,
    -0.005291741341352463,
    0.013667690567672253,
    -0.009351206943392754,
    0.0038763852789998055,
    0.03334888443350792,
    -0.01939248852431774,
    6.744505662936717e-05,
    0.013217030093073845,
    0.010773604735732079,
    -0.03830615058541298,
    0.014970381744205952,
    -0.027335381135344505,
    0.02275835908949375,
    0.01787150837481022,
    -0.017449013888835907,
    -0.005214283708482981,
    0.022955523803830147,
    0.047798190265893936,
    0.0012674828758463264,
    -0.0042495885863900185,
    -0.010484900325536728,
    0.029630932956933975,
    0.004640395753085613,
    0.009949740953743458,
    0.00012289742880966514,
    -0.03309538587927818,
    0.04836151376366615,
    -0.014146517962217331,
    -0.016533609479665756,
    -0.018913662061095238,
    0.050276823341846466,
    0.022040119394659996,
    0.006971155758947134,
    0.0171673521399498,
    -0.012336833402514458,
    -0.018702413886785507,
    0.013160697184503078,
    0.02781420759856701,
    -0.023885011672973633,
    0.01454788725823164,
    -0.00032391230342909694,
    -0.03771465644240379,
    0.01743493229150772,
    -0.008844214491546154,
    -0.0023659681901335716,
    0.002563132205978036,
    0.007900643162429333,
    0.015899868682026863,
    -0.007978100329637527,
    0.011266514658927917,
    -0.00799922551959753,
    -0.025448240339756012,
    -0.009456831030547619,
    -0.037123166024684906,
    0.008541426621377468,
    -0.03827798366546631,
    -0.02395542711019516,
    -0.039967961609363556,
    0.013667690567672253,
    -0.007351400796324015,
    0.040305957198143005,
    -0.006122646387666464,
    0.0014769696863368154,
    -0.006186020560562611,
    0.02301185578107834,
    0.010315902531147003,
    0.0038200526032596827,
    -0.00781614426523447,
    0.017829259857535362,
    -0.030785750597715378,
    -0.033123552799224854,
    0.0005677267326973379,
    0.01951923593878746,
    0.004432669375091791,
    0.025405989959836006,
    -0.01704060286283493,
    0.04909383878111839,
    0.029743598774075508,
    0.03929197043180466,
    -0.009175168350338936,
    0.0022251366171985865,
    -0.004541813861578703,
    0.016294196248054504,
    0.014505637809634209,
    -0.0008304653456434608,
    -0.011336930096149445,
    0.01430143229663372,
    -0.009020253084599972,
    -0.006721180398017168,
    -0.00511570181697607,
    -0.001816725474782288,
    0.003932717721909285,
    -0.017702510580420494,
    -0.00602054363116622,
    -0.01646319404244423,
    -0.0023800511844456196,
    -0.029180273413658142,
    -0.0075063155964016914,
    -0.016392778605222702,
    -0.010132821276783943,
    -0.019012244418263435,
    -0.00649232929572463,
    0.005633257329463959,
    0.034560032188892365,
    -0.028842277824878693,
    -0.0012727640569210052,
    -0.031123746186494827,
    0.013209988363087177,
    -0.03334888443350792,
    0.029208438470959663,
    0.0013572629541158676,
    -0.032757390290498734,
    -0.009752577170729637,
    -0.02364559844136238,
    -0.008668174967169762,
    -0.005084014963358641,
    0.0024856748059391975,
    -0.003263768507167697,
    -0.015885785222053528,
    0.014132434502243996,
    -0.02330760285258293,
    -0.011231306940317154,
    -0.0033799544908106327,
    0.004728415515273809,
    -0.027588877826929092,
    -0.012921283952891827,
    0.028983108699321747,
    0.015688622370362282,
    0.03396854177117348,
    0.02004031278192997,
    -0.017463097348809242,
    0.0023378017358481884,
    0.010872187092900276,
    -0.005812817253172398,
    -0.020659971982240677,
    0.0035172649659216404,
    0.006231790874153376,
    0.00013202946865931153,
    0.02429342269897461,
    -0.006752867251634598,
    0.023504765704274178,
    0.04267192259430885,
    0.014646468684077263,
    -0.01609703339636326,
    0.006900740321725607,
    -0.007407733239233494,
    0.005612132605165243,
    -0.012639621272683144,
    0.019786816090345383,
    -0.0109214773401618,
    0.010273653082549572,
    -0.0018360897665843368,
    0.04427740350365639,
    -0.0009039617725647986,
    -0.009083627723157406,
    -0.0025384866166859865,
    0.011611551977694035,
    0.019561486318707466,
    -0.007115507964044809,
    0.019420655444264412,
    -0.021561292931437492,
    -0.008379470556974411,
    0.022786526009440422,
    0.0007741327863186598,
    0.0027655772864818573,
    0.01985723152756691,
    0.022349948063492775,
    0.001925869844853878,
    -0.008696340955793858,
    0.01420989166945219,
    0.0076964376494288445,
    -0.013555025681853294,
    -0.01612519845366478,
    0.01939248852431774,
    0.029236605390906334,
    -0.03126457706093788,
    0.027955040335655212,
    -0.012738203629851341,
    0.016139281913638115,
    0.005714235361665487,
    0.03515152633190155,
    -0.014054977335035801,
    0.025039829313755035,
    0.02729313261806965,
    0.032137732952833176,
    -0.01106230914592743,
    0.017575763165950775,
    -0.017392681911587715,
    -0.006583869457244873,
    0.00460518803447485,
    0.0003384355513844639,
    -0.017209600657224655,
    0.012217126786708832,
    -0.009365290403366089,
    -0.0225189458578825,
    0.0027039635460823774,
    0.01847708411514759,
    -0.0027708583511412144,
    0.00024403446877840906,
    -0.020674053579568863,
    0.031743403524160385,
    0.015012631192803383,
    0.009076585993170738,
    -0.0020086083095520735,
    0.004538292996585369,
    0.0072950683534145355,
    0.038165319710969925,
    -0.007964017800986767,
    -0.02053322270512581,
    -0.034222036600112915,
    -0.012308667413890362,
    -0.030673086643218994,
    -0.010597565211355686,
    -0.023082271218299866,
    -0.048896674066782,
    -0.0006090959650464356,
    0.039235636591911316,
    -0.012139669619500637,
    0.016604026779532433,
    0.02596931718289852,
    0.002013889607042074,
    0.003381714690476656,
    -0.03148990869522095,
    -0.01875874772667885,
    0.013414193876087666,
    -0.004474918823689222,
    0.008020349778234959,
    -0.011801674030721188,
    -0.017913758754730225,
    -0.00504880677908659,
    -0.018040506169199944,
    0.002769098151475191,
    0.006756388116627932,
    0.01141438726335764,
    -0.000287164089968428,
    -0.008823089301586151,
    -0.016773024573922157,
    0.011210181750357151,
    0.019589653238654137,
    -0.018730580806732178,
    -0.01101301796734333,
    -0.0152379609644413,
    0.007351400796324015,
    0.011498886160552502,
    -0.015252044424414635,
    0.014146517962217331,
    0.015181628987193108,
    -0.004633354023098946,
    -0.01709693670272827,
    -0.011315805837512016,
    -0.025405989959836006,
    -0.008759715594351292,
    0.01975865103304386,
    0.03830615058541298,
    -0.004108757246285677,
    -0.01970231719315052,
    -0.012477665208280087,
    0.02053322270512581,
    0.001232275040820241,
    -0.0052635748870670795,
    0.021730290725827217,
    -0.002846555318683386,
    -0.00032985361758619547,
    -0.03019426017999649,
    -0.03199690207839012,
    -0.004756581503897905,
    0.0262791458517313,
    0.013217030093073845,
    0.03382771089673042,
    -0.000413252244470641,
    -0.03089841641485691,
    -0.022195033729076385,
    -0.015604122541844845,
    -0.0122241685166955,
    -0.012435415759682655,
    -0.0014320795889943838,
    0.007555606309324503,
    0.02949010208249092,
    0.011034143157303333,
    0.007541523315012455,
    0.028321200981736183,
    0.006597952451556921,
    -0.01178054977208376,
    0.02799728885293007,
    -0.0013810282107442617,
    -0.018885495141148567,
    0.011759424582123756,
    -0.03157440572977066,
    0.006154333706945181,
    0.0077879782766103745,
    0.03439103439450264,
    0.016970187425613403,
    0.005517071578651667,
    0.041742436587810516,
    -0.01573087088763714,
    -0.026236895471811295,
    0.0022198555525392294,
    -0.012111503630876541,
    0.022997772321105003,
    0.015012631192803383,
    -0.02275835908949375,
    0.04819251596927643,
    0.004214380867779255,
    0.022110534831881523,
    0.0011389742139726877,
    -0.001873058034107089,
    0.011569302529096603,
    0.002401175908744335,
    -0.012914242222905159,
    0.0077738952822983265,
    0.020293809473514557,
    -0.04182693734765053,
    0.0045629385858774185,
    0.0071894447319209576,
    0.010752479545772076,
    -0.009287833236157894,
    0.02358926460146904,
    0.026180563494563103,
    -0.029997095465660095,
    -0.020054396241903305,
    0.04867134243249893,
    -0.008949837647378445,
    0.0002706604136619717,
    -0.019110824912786484,
    -0.020505057647824287,
    -0.01826583780348301,
    -0.02160354144871235,
    -0.022589361295104027,
    -0.010153946466743946,
    -0.007562648039311171,
    -0.013350820168852806,
    -0.007738687098026276,
    0.0010535952169448137,
    -0.0014373607700690627,
    -0.03605284541845322,
    -0.0013114927569404244,
    -0.013907103799283504,
    -0.011041183955967426,
    -0.012287542223930359,
    -0.043094418942928314,
    0.00570719363167882,
    0.0006451840163208544,
    0.0008524702861905098,
    -0.00501711992546916,
    0.015195711515843868,
    0.011132724583148956,
    0.014308474026620388,
    -0.0024909558705985546,
    -0.012519914656877518,
    -0.02802545577287674,
    0.0032919347286224365,
    0.01808275654911995,
    0.027602961286902428,
    -0.011850965209305286,
    0.02330760285258293,
    0.017280016094446182,
    0.012449498288333416,
    0.007978100329637527,
    -0.008203431032598019,
    -0.026532642543315887,
    -0.004281275440007448,
    0.009301915764808655,
    0.00013180941459722817,
    0.015097130089998245,
    0.004305921029299498,
    -0.005422010086476803,
    0.016815273091197014,
    -0.002499758033081889,
    0.00417565181851387,
    -0.006781033705919981,
    -0.0010932040167972445,
    -0.009815950877964497,
    -0.009766659699380398,
    0.02129371277987957,
    -0.039348304271698,
    0.015702703967690468,
    0.042784590274095535,
    -0.02523699216544628,
    -0.005020640790462494,
    0.0033465069718658924,
    -0.0005474822246469557,
    0.0013713460648432374,
    -0.00867521669715643,
    0.036757003515958786,
    -0.009773701429367065,
    0.005527633707970381,
    0.01844891719520092,
    -0.0297999307513237,
    0.009703285992145538,
    0.02596931718289852,
    -0.003703866619616747,
    0.01257624663412571,
    0.009132918901741505,
    -0.014040893875062466,
    -0.016871605068445206,
    0.012167835608124733,
    0.018491167575120926,
    0.03588384762406349,
    -0.01573087088763714,
    -0.06236016005277634,
    0.018857328221201897,
    -0.01808275654911995,
    -0.0042355055920779705,
    -0.00598885677754879,
    -0.010914436541497707,
    0.03205323591828346,
    -0.019476987421512604,
    -0.009379373863339424,
    -0.001445282599888742,
    -0.0045312512665987015,
    -0.010977810248732567,
    -0.03946096822619438,
    -0.01912490837275982,
    0.007351400796324015,
    0.004439711105078459,
    0.01135101355612278,
    -0.014378889463841915,
    -0.010273653082549572,
    -0.014329598285257816,
    0.0020262121688574553,
    -0.021040216088294983,
    -0.012104461900889874,
    0.0050100781954824924,
    -0.017209600657224655,
    0.00023919338127598166,
    0.027391713112592697,
    0.0323067307472229,
    0.030729418620467186,
    0.03191240131855011,
    -0.015350625850260258,
    -0.004020737484097481,
    -0.024124424904584885,
    -0.02909577451646328,
    0.017237767577171326,
    0.007900643162429333,
    -0.003358829766511917,
    -0.013266321271657944,
    0.016223780810832977,
    -0.002189928898587823,
    -0.003193352837115526,
    -0.028898609802126884,
    0.01787150837481022,
    -0.005006557330489159,
    0.020181143656373024,
    -0.03439103439450264,
    -0.013414193876087666,
    0.007562648039311171,
    0.019786816090345383,
    -0.007126070559024811,
    0.010020156390964985,
    -0.012886076234281063,
    -0.014414097182452679,
    0.011893214657902718,
    -0.004393940791487694,
    0.019843148067593575,
    0.020293809473514557,
    0.011872089467942715,
    -0.02612423151731491,
    0.018688330426812172,
    -0.001414475729689002,
    0.008928712457418442,
    0.012928325682878494,
    -0.0019417133880779147,
    -0.031011082231998444,
    -0.003967925440520048,
    -0.019786816090345383,
    -0.0032831327989697456,
    0.005379760637879372,
    -0.0028747215401381254,
    0.029377436265349388,
    -0.00598885677754879,
    0.01896999403834343,
    -0.01670260727405548,
    -0.017392681911587715,
    0.010956685990095139,
    -0.03681333735585213,
    -0.015519623644649982,
    -0.004555896855890751,
    -0.038531478494405746,
    -0.043122585862874985,
    0.008041474968194962,
    -0.011308764107525349,
    -0.0065345787443220615,
    0.013252237811684608,
    -0.028532449156045914,
    0.008907588198781013,
    0.006376143079251051,
    -0.016688525676727295,
    0.049854326993227005,
    0.01725185103714466,
    0.030701251700520515,
    0.030419589951634407,
    0.007795020006597042,
    -0.015984367579221725,
    -0.010393359698355198,
    0.0036475341767072678,
    -0.011527053080499172,
    0.027940956875681877,
    0.0256031546741724,
    0.010153946466743946,
    -0.005939565598964691,
    0.030785750597715378,
    -0.0028588781133294106,
    -0.002087825909256935,
    -0.022687943652272224,
    0.0291239395737648,
    0.05084014683961868,
    0.0025032786652445793,
    -0.05283995345234871,
    -0.002571934135630727,
    0.01124539040029049,
    0.003036677837371826,
    -0.029687266796827316,
    -0.017970090731978416,
    -0.0016283635050058365,
    -0.0297999307513237,
    -0.012027004733681679,
    0.03726399689912796,
    0.028307117521762848,
    -0.0002768217818811536,
    0.02392726019024849,
    0.019237574189901352,
    0.013611357659101486,
    -0.04089744761586189,
    -0.006284602917730808,
    0.007851351983845234,
    0.011217223480343819,
    0.014773217029869556,
    -0.006643722765147686,
    -0.024096257984638214,
    0.03701050207018852,
    -0.020589554682374,
    -0.007914726622402668,
    -0.02040647529065609,
    -0.01646319404244423,
    0.0348135307431221,
    -0.01470280159264803,
    0.011998837813735008,
    -0.006538099143654108,
    -0.01860383152961731,
    0.0014091945486143231,
    -0.008921671658754349,
    -0.006298685912042856,
    -0.01566045545041561,
    -0.010104655288159847,
    0.004538292996585369,
    0.02591298334300518,
    -0.005869150161743164,
    0.008703382685780525,
    -0.02071630395948887,
    -0.0027110050432384014,
    -0.002138877287507057,
    -0.01242133229970932,
    0.007562648039311171,
    0.01930798962712288,
    0.0009198053157888353,
    -0.00010688885959098116,
    -0.04160160571336746,
    -0.008463969454169273,
    -0.013069157488644123,
    0.012160793878138065,
    -0.010576440952718258,
    -0.001177702913992107,
    0.032813724130392075,
    -0.0026317874435335398,
    0.028321200981736183,
    -0.021279629319906235,
    -0.0049502248875796795,
    0.0035436709877103567,
    0.0036651380360126495,
    -0.001545625040307641,
    -0.006062793079763651,
    0.011632676236331463,
    0.005073452368378639,
    -0.0482206828892231,
    -0.044164735823869705,
    -0.017209600657224655,
    0.020124811679124832,
    -0.008682257495820522,
    -0.017336349934339523,
    0.022068286314606667,
    0.024279339239001274,
    0.020547306165099144,
    -0.013181822374463081,
    -0.01857566647231579,
    0.0418551005423069,
    -0.02606789767742157,
    -0.010393359698355198,
    0.028377532958984375,
    -0.014970381744205952,
    -0.020082563161849976,
    0.01933615654706955,
    0.0016186812426894903,
    -0.0016934979939833283,
    -0.026546726003289223,
    -0.011836881749331951,
    -0.003964405041188002,
    0.009900449775159359,
    -0.030053427442908287,
    0.01789967529475689,
    -0.00833722110837698,
    -0.026504475623369217,
    -0.020969800651073456,
    0.018589749932289124,
    0.014336640015244484,
    -0.006942989770323038,
    0.006171937566250563,
    0.009132918901741505,
    -0.0032884138636291027,
    0.006312768906354904,
    0.012836785055696964,
    -0.007365483790636063,
    -0.0018624956719577312,
    -0.012991699390113354,
    -0.012590330094099045,
    -0.016632191836833954,
    -0.004263671580702066,
    0.048784010112285614,
    0.01599845103919506,
    -0.02220911718904972,
    -0.012259376235306263,
    0.00806259922683239,
    -0.03822164982557297,
    -0.006752867251634598,
    -0.02802545577287674,
    0.023870928213000298,
    0.0208289697766304,
    -0.007245777174830437,
    0.02460325136780739,
    0.01575903780758381,
    0.008407636545598507,
    0.02442017011344433,
    -0.03630634397268295,
    0.009991990402340889,
    0.02411034144461155,
    -0.010358151979744434,
    -0.0031246973667293787,
    -0.010379276238381863,
    -0.03239123150706291,
    -0.004897413309663534,
    0.019603734835982323,
    0.0035683163441717625,
    -0.008421720005571842,
    0.04675603657960892,
    0.0065169744193553925,
    -0.03822164982557297,
    -0.0045171682722866535,
    -0.019786816090345383,
    -0.021251462399959564,
    0.009949740953743458,
    0.016956103965640068,
    -0.026236895471811295,
    -0.03188423812389374,
    0.012879034504294395,
    0.013752189464867115,
    0.008942795917391777,
    -0.01037223543971777,
    0.0068901777267456055,
    -0.0014840111834928393,
    0.019941730424761772,
    -0.02306818962097168,
    -0.007104945834726095,
    0.023349851369857788,
    0.024363838136196136,
    0.02233586460351944,
    0.005274137016385794,
    0.02465958334505558,
    0.013195904903113842,
    0.0014787300024181604,
    0.013181822374463081,
    -0.031377244740724564,
    0.022096451371908188,
    -0.030335091054439545,
    -0.0008089005714282393,
    0.027955040335655212,
    -0.004031299613416195,
    0.0012076295679435134,
    -0.01780109293758869,
    0.027405796572566032,
    0.010379276238381863,
    -0.009738493710756302,
    -0.016420945525169373,
    -0.004165089689195156,
    -0.0026546726003289223,
    -0.02285694144666195,
    0.009625828824937344,
    0.008992087095975876,
    0.025349657982587814,
    0.02089938521385193,
    0.027701543644070625,
    -0.012935367412865162,
    -0.021350044757127762,
    -0.023138605058193207,
    -0.01575903780758381,
    0.003524306695908308,
    0.00871746614575386,
    -0.008879422210156918,
    -0.03698233515024185,
    0.007034529931843281,
    -0.014463388361036777,
    -0.01951923593878746,
    -0.02108246646821499,
    0.19119276106357574,
    -0.00011343531514285132,
    0.017787009477615356,
    0.007062696386128664,
    0.011998837813735008,
    0.003644013311713934,
    0.014407055452466011,
    0.009794826619327068,
    0.006580348592251539,
    0.060219522565603256,
    0.026349561288952827,
    -0.03726399689912796,
    -0.007351400796324015,
    0.002131835790351033,
    0.0019434738205745816,
    0.005911399610340595,
    -0.02043464034795761,
    -0.047347526997327805,
    -0.011541135609149933,
    -0.004520689137279987,
    -0.021181046962738037,
    -0.00940753985196352,
    0.004418586380779743,
    -0.037038665264844894,
    0.009344165213406086,
    0.006731742527335882,
    0.0033341841772198677,
    -0.012435415759682655,
    0.014787300489842892,
    -0.005436093546450138,
    0.005548758432269096,
    0.009323040954768658,
    -0.0026001003570854664,
    -0.01271003670990467,
    -0.026208730414509773,
    0.0019188282312825322,
    -0.010808812454342842,
    -0.012731161899864674,
    0.011569302529096603,
    0.009428664110600948,
    0.01735043339431286,
    -0.04926283657550812,
    0.01970231719315052,
    -0.027574794366955757,
    0.012379082851111889,
    -0.017265934497117996,
    0.005270616617053747,
    0.014491554349660873,
    -0.015491457656025887,
    0.010675022378563881,
    -0.022138701751828194,
    0.0013599034864455462,
    0.020124811679124832,
    -0.005284699611365795,
    -0.010576440952718258,
    -0.01844891719520092,
    -0.022082367911934853,
    0.005020640790462494,
    0.0098370760679245,
    -0.0029645017348229885,
    -0.019800899550318718,
    0.02750437892973423,
    -0.03160257264971733,
    0.04405207186937332,
    -0.07052838057279587,
    0.031799737364053726,
    -0.037855491042137146,
    -0.008407636545598507,
    -0.007006363943219185,
    0.0076682716608047485,
    -0.009154043160378933,
    -0.03588384762406349,
    -0.004929100163280964,
    -0.0060698348097503185,
    0.012738203629851341,
    -0.031011082231998444,
    0.027617044746875763,
    0.012097420170903206,
    0.028124038130044937,
    0.03506702557206154,
    -0.01787150837481022,
    -0.015167545527219772,
    -0.003360590199008584,
    0.008302013389766216,
    -0.012533997185528278,
    -0.005066410638391972,
    0.04039045423269272,
    0.0024346234276890755,
    -0.014759134501218796,
    -0.01792784221470356,
    -0.01881507970392704,
    -0.02750437892973423,
    0.021645791828632355,
    -0.02175845578312874,
    -0.01150592789053917,
    0.0033429861068725586,
    0.016054783016443253,
    0.011083433404564857,
    -0.008006267249584198,
    -0.005013599060475826,
    -0.0514034740626812,
    0.03199690207839012,
    0.011738300323486328,
    -0.015026713721454144,
    0.027433963492512703,
    -0.0010553555330261588,
    -0.017660262063145638,
    0.03374321013689041,
    0.013005782850086689,
    -0.026391809806227684,
    -0.013350820168852806,
    -0.043826743960380554,
    -0.007330276072025299,
    -0.004393940791487694,
    0.014047935605049133,
    -0.014195808209478855,
    -0.010491942055523396,
    -0.00830905418843031,
    -0.0020526181906461716,
    0.01561820600181818,
    0.002126554725691676,
    0.005566362291574478,
    0.01685752347111702,
    -0.011773508042097092,
    -0.008942795917391777,
    -0.03619368001818657,
    -0.009731451980769634,
    0.019800899550318718,
    0.005073452368378639,
    -0.013167738914489746,
    0.019631901755928993,
    -0.02729313261806965,
    0.008210472762584686,
    0.0104144848883152,
    -0.0026581932324916124,
    0.006788074970245361,
    0.02463141828775406,
    -0.019617818295955658,
    0.00039960918365977705,
    0.012977616861462593,
    -0.01673077419400215,
    -0.0031792696099728346,
    0.007485190872102976,
    -0.0033429861068725586,
    0.021716207265853882,
    -0.03272922337055206,
    0.008520301431417465,
    0.0064571211114525795,
    -0.00016822754696477205,
    0.008893504738807678,
    -0.01936432160437107,
    -0.002418779768049717,
    0.020519139245152473,
    -0.027433963492512703,
    -0.005510029848664999,
    -0.020392391830682755,
    0.02080080285668373,
    -0.014153558760881424,
    0.010470816865563393,
    -0.0015368229942396283,
    -0.02471591718494892,
    -0.0055910078808665276,
    -0.010928519070148468,
    -0.003591201500967145,
    -0.023532932624220848,
    -0.013083240017294884,
    -0.1774476021528244,
    -0.010773604735732079,
    0.02750437892973423,
    -0.02622281201183796,
    -0.011879131197929382,
    -0.026701640337705612,
    0.015829453244805336,
    0.0041439649648964405,
    -0.023899095132946968,
    -0.03357421234250069,
    0.01991356536746025,
    -0.00021608822862617671,
    -0.0011064069112762809,
    0.0011328128166496754,
    0.0065627447329461575,
    -0.010787688195705414,
    -0.0047988309524953365,
    0.007442941423505545,
    0.0005347193218767643,
    0.01685752347111702,
    0.054445430636405945,
    -0.011336930096149445,
    0.0035982432309538126,
    0.0006654285243712366,
    0.013266321271657944,
    -0.017998257651925087,
    0.0045312512665987015,
    -0.008816047571599483,
    -0.006467683706432581,
    -0.03337705135345459,
    -0.014336640015244484,
    -0.010865145362913609,
    0.03546135500073433,
    0.03267289325594902,
    0.02737763151526451,
    0.00746406614780426,
    0.03872864320874214,
    0.010675022378563881,
    -0.008914629928767681,
    0.017660262063145638,
    0.013371944427490234,
    0.033179886639118195,
    0.02949010208249092,
    -0.0208289697766304,
    -0.015026713721454144,
    -0.005612132605165243,
    -0.005372719373553991,
    -0.0171673521399498,
    -0.0005118342232890427,
    -0.009689202532172203,
    0.037855491042137146,
    -0.0036827418953180313,
    -0.010829937644302845,
    0.004006654489785433,
    0.04230576381087303,
    0.010083531029522419,
    0.020307892933487892,
    0.008830131031572819,
    0.019082659855484962,
    0.000455061555840075,
    -6.056851998437196e-05,
    -0.03808081895112991,
    0.0011002456303685904,
    -0.005341032054275274,
    -0.02022339403629303,
    -0.03196873515844345,
    -0.013026908040046692,
    0.025222910568118095,
    -0.012104461900889874,
    -0.0045030852779746056,
    -0.012787493877112865,
    0.01761801168322563,
    0.012702994979918003,
    -0.0035718372091650963,
    0.021673956885933876,
    0.017674345523118973,
    -0.02499757893383503,
    0.02701146900653839,
    0.04227759689092636,
    0.008513259701430798,
    -0.00662259804084897,
    0.0141042685136199,
    -0.010506024584174156,
    0.017730677500367165,
    0.010498983785510063,
    -0.02478633262217045,
    -0.0006979957688599825,
    -0.00771756237372756,
    -0.025842567905783653,
    0.025082077831029892,
    -0.0027198069728910923,
    -0.0020561388228088617,
    0.009294874966144562,
    -0.024884914979338646,
    0.011766466312110424,
    -0.0070732589811086655,
    -0.0010747198248282075,
    0.009527246467769146,
    -0.017054686322808266,
    -0.030278759077191353,
    0.002952178940176964,
    -0.008865338750183582,
    0.0018977036233991385,
    0.0033359446097165346,
    0.020321976393461227,
    0.025321491062641144,
    -0.018984077498316765,
    0.011477761901915073,
    0.03256022930145264,
    0.02004031278192997,
    -0.026166480034589767,
    0.0004964307881891727,
    0.025532739236950874,
    0.051290806382894516,
    -0.039629966020584106,
    0.017420848831534386,
    0.02089938521385193,
    -0.006957072764635086,
    -0.004277754575014114,
    -0.02771562524139881,
    0.03146174177527428,
    0.005661423783749342,
    0.0020561388228088617,
    0.021195130422711372,
    0.0023976550437510014,
    -0.0026564327999949455,
    -0.10680656135082245,
    -0.043066252022981644,
    -0.009301915764808655,
    0.028983108699321747,
    -0.02640589326620102,
    -0.005657902918756008,
    -0.011097516864538193,
    0.0475446917116642,
    0.01701243780553341,
    0.00849213544279337,
    -0.0076823546551167965,
    0.015336543321609497,
    -0.013484609313309193,
    0.0159139521420002,
    -0.027391713112592697,
    -0.038108985871076584,
    0.003246164647862315,
    -0.005020640790462494,
    -0.007513356860727072,
    0.020702220499515533,
    -0.01168900914490223,
    0.0064888084307312965,
    -0.021152881905436516,
    -0.010351110249757767,
    -0.019040409475564957,
    0.00589027488604188,
    -0.030081594362854958,
    -0.001235795789398253,
    0.017688428983092308,
    0.017054686322808266,
    0.004031299613416195,
    -0.01566045545041561,
    -0.010498983785510063,
    -0.04179877042770386,
    0.02288510836660862,
    -0.003982008900493383,
    -0.03168707340955734,
    -0.025955233722925186,
    0.03726399689912796,
    -0.013709940016269684,
    -0.003739074571058154,
    0.014604219235479832,
    0.016744857653975487,
    -0.011048225685954094,
    0.00786543544381857,
    -0.0009805388981476426,
    -0.025405989959836006,
    0.026518559083342552,
    0.02557498775422573,
    -0.0031775091774761677,
    -0.005379760637879372,
    -0.00951316300779581,
    0.002742692129686475,
    -0.007851351983845234,
    0.02432158775627613,
    -0.012752286158502102,
    -0.02147679403424263,
    -0.006657806225121021,
    -0.01013986300677061,
    -0.008344262838363647,
    0.007675312925130129,
    -0.004855163861066103,
    -0.002820149529725313,
    0.024279339239001274,
    0.0014426419511437416,
    0.0028747215401381254,
    -0.004566459450870752,
    0.009597661904990673,
    0.02053322270512581,
    -0.015829453244805336,
    -0.000683472550008446,
    0.017758844420313835,
    -0.019434737041592598,
    -0.012146711349487305,
    -0.03016609326004982,
    -0.001934671774506569,
    0.01936432160437107,
    -0.010400401428341866,
    -0.002776139648631215,
    0.005809296853840351,
    -0.015406958758831024,
    -0.006126167252659798,
    -0.019406571984291077,
    -0.02572990208864212,
    0.012745244428515434,
    0.03165890648961067,
    0.019871314987540245,
    0.022096451371908188,
    -0.010752479545772076,
    -0.056586071848869324,
    0.006393746938556433,
    -0.019237574189901352,
    0.03475719690322876,
    0.005436093546450138,
    -0.007119028829038143,
    0.005629736464470625,
    -0.004055945202708244,
    0.026631224900484085,
    0.0075063155964016914,
    0.011928422376513481,
    -0.03551768884062767,
    -0.03517969325184822,
    -0.0693453997373581,
    -0.004654478747397661,
    0.026574891060590744,
    -0.019899481907486916,
    0.011984755285084248,
    -0.03613734617829323,
    0.009534288197755814,
    -0.011182015761733055,
    0.012970575131475925,
    0.023138605058193207,
    -0.03582751750946045,
    -0.01761801168322563,
    0.01673077419400215,
    -0.0006887537310831249,
    -0.003256727010011673,
    0.01128763984888792,
    0.039573632180690765,
    -0.013280403800308704,
    0.03146174177527428,
    0.0073232343420386314,
    0.020871218293905258,
    0.0032831327989697456,
    0.01725185103714466,
    0.010682064108550549,
    -0.042728256434202194,
    0.009308957494795322,
    -0.015801286324858665,
    0.03196873515844345,
    -0.016942022368311882,
    -0.034278370440006256,
    -0.0031739885453134775,
    -0.003996091894805431,
    0.007087341975420713,
    0.011139766313135624,
    0.02542007341980934,
    0.0025402470491826534,
    0.007534481585025787,
    0.016195615753531456,
    -0.0011002456303685904,
    0.0027655772864818573,
    -0.03543318808078766,
    -0.02949010208249092,
    0.013069157488644123,
    -0.010506024584174156,
    -0.007583772763609886,
    -0.010456734336912632,
    0.0061437711119651794,
    -0.005168513394892216,
    0.005981815047562122,
    -0.001288607600145042,
    0.03633451089262962,
    -0.00016965786926448345,
    -0.05926186591386795,
    -0.01451972033828497,
    -0.01235795859247446,
    -0.014871799387037754,
    0.005295261740684509,
    -0.00192939059343189,
    -0.0057424018159508705,
    -0.021181046962738037,
    0.0341375395655632,
    0.017646178603172302,
    -0.005457218270748854,
    0.01304803229868412,
    -0.001866016536951065,
    -0.014716885052621365,
    -0.03943280130624771,
    -0.017265934497117996,
    0.007168320007622242,
    -0.014857715927064419,
    -0.016209697350859642,
    -0.043798577040433884,
    0.033208053559064865,
    0.02943377010524273,
    -0.002249782206490636,
    -0.006703576073050499,
    -0.004672082606703043,
    -0.005418489221483469,
    -0.03788365423679352,
    0.030025262385606766,
    0.015716787427663803,
    -0.009414581581950188,
    -0.01670260727405548,
    0.004675603471696377,
    0.016068866476416588,
    -0.0030225946102291346,
    -0.025349657982587814,
    0.0035137443337589502,
    0.027771959081292152,
    0.005668465048074722,
    -0.011020059697329998,
    0.010696147568523884,
    -0.0016134000616148114,
    -0.004657999612390995,
    -0.005284699611365795,
    -0.003686262760311365,
    0.006108563393354416,
    -0.016294196248054504,
    0.021335961297154427,
    -0.010013114660978317,
    0.008041474968194962,
    -0.011090475134551525,
    0.00664724363014102,
    -0.024490585550665855,
    0.014970381744205952,
    -0.00896392110735178,
    -0.018434833735227585,
    -0.007302109617739916,
    -0.01599845103919506,
    0.0170687697827816,
    0.004429148510098457,
    -0.019293906167149544,
    0.0031246973667293787,
    0.024054009467363358,
    -0.017758844420313835,
    0.028476115316152573,
    0.0029785847291350365,
    -0.015068963170051575,
    -0.01612519845366478,
    0.009928615763783455,
    0.004432669375091791,
    0.02035014145076275,
    0.04084111750125885,
    -0.039855293929576874,
    0.011618593707680702,
    0.014618302695453167,
    0.016632191836833954,
    -0.0329827219247818,
    -0.0007512476877309382,
    -0.0077879782766103745,
    -0.010731355287134647,
    0.005883233156055212,
    -0.01609703339636326,
    -0.014914048835635185,
    -0.011020059697329998,
    0.005615653470158577,
    -0.0018237670883536339,
    0.0037778031546622515,
    -0.006633160635828972,
    0.07858394086360931,
    -0.0023923739790916443,
    -0.011083433404564857,
    -0.011358055286109447,
    0.005341032054275274,
    0.026476308703422546,
    0.007168320007622242,
    0.0009928615763783455,
    0.03410937264561653,
    -0.004334087483584881,
    -0.002022691536694765,
    -0.011336930096149445,
    -0.0038834267761558294,
    -0.03374321013689041,
    0.0034926196094602346,
    0.014716885052621365,
    -0.02009664475917816,
    0.008196389302611351,
    0.008794923312962055,
    0.022687943652272224,
    0.03898214176297188,
    0.021068383008241653,
    -0.006657806225121021,
    -0.020110728219151497,
    -0.03644717484712601,
    0.016294196248054504,
    0.027884623035788536,
    0.0007943772943690419,
    -0.018364418298006058,
    -0.06421913206577301,
    0.04044678807258606,
    0.018617914989590645,
    -0.017420848831534386,
    -0.022997772321105003,
    -0.004823476541787386,
    0.003802448743954301,
    0.005471301265060902,
    -0.018547499552369118,
    0.006693013943731785,
    0.008548468351364136,
    -0.035376857966184616,
    0.004763623233884573,
    -0.012787493877112865,
    -0.027884623035788536,
    0.01795600727200508,
    -0.0074147749692201614,
    -0.0004753060929942876,
    0.01179463230073452,
    -0.06579644232988358
  ]
}
{
  "classifiers": [
    "intended audience :: developers",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# grpc_requests\n\n[![pypi](https://img.shields.io/pypi/v/grpc-requests?style=flat-square)](https://pypi.org/project/grpc-requests)\n[![pypi - python version](https://img.shields.io/pypi/pyversions/grpc-requests?style=flat-square)](https://pypi.org/project/grpc-requests)\n[![pypi download month](https://img.shields.io/pypi/dm/grpc-requests?style=flat-square)](https://pypi.org/project/grpc-requests)\n[![license](https://img.shields.io/badge/license-apache_2.0-blue.svg)](https://opensource.org/licenses/apache-2.0)\n![views](https://views.whatilearened.today/views/github/wesky93/grpc_requests.svg)\n\n## grpc for humans\n\nleverage [reflection](https://github.com/grpc/grpc/blob/master/doc/server-reflection.md)\nto interact with grpc in a familiar manner for users of the [requests](https://requests.readthedocs.io/en/latest/) library.\n\n```python\nfrom grpc_requests import client\n\nclient = client.get_by_endpoint(\"localhost:50051\")\nassert client.service_names == [\"helloworld.greeter\"]\n\nrequest_data = {\"name\": \"sinsky\"} \nsay_hello_response = client.request(\"helloworld.greeter\", \"sayhello\", request_data)\nassert say_hello_response ==  {\"message\":\"hello sinsky!\"}\n```\n\n## features\n\n- create a client easily when connecting to servers implementing grpc reflection\n- still support creating a client from stubs when reflection isn't available\n- all unary and stream methods supported\n- tls and compression connections supported\n- asyncio api supported\n\n## install\n\n```shell script\npip install grpc_requests\n```\n\n## usage\n\nin short:\n\ninstantiate a client using the url of a grpc server and any authentication\ncredentials you may need. if the server utilizes ssl (and it probably does)\nmake sure to toggle that flag.\n\n```python\nfrom grpc_requests import client\n\nmetadata = [(\"authorization\", \"bearer my.cool.jwt\")]\nclient = client.get_by_endpoint(\"cool.servers.arecool:443\", ssl=true, metadata=metadata)\n```\n\nthe [examples page](./src/examples/readme.md) provides more thorough examples of\nusage scenarioes, and the [unit tests](./src/tests/) are also a useful reference point.\n\n## contributing\n\ncontributions from the community are welcomed and greatly appreciated.\n\nbefore opening a pr, [tests.sh](./tests.sh) can be used to ensure the contribution passes\nlinting and unit test checks.\n\nprs should be targeted to merge with the `develop` branch. when opening a pr,\nplease assign it to a maintainer for review. the maintainers will take it from\nthere.\n\n## questions, comments, issues?\n\nfor questions, please start a conversation on the [discussions page](https://github.com/wesky93/grpc_requests/discussions)!\n\nfor feature requests or bugs, please open an [issue](https://github.com/wesky93/grpc_requests/issues) and assign it the appropriate tag.\n\n## maintainers\n\n- sinsky - [wesky93](https://github.com/wesky93)\n- wayne manselle - [viridianforge](https://viridianforge.tech)\n\n# changelog\n\nall notable changes to this project will be documented in this file.\n\nthe format is based on [keep a changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [semantic versioning](https://semver.org/spec/v2.0.0.html).\n\n## [0.1.13](https://github.com/wesky93/grpc_requests/releases/tag/v0.1.13) - 2023-12-03\n\n## added\n\n- added channel interceptors for standard and async clients\n\n## fixed\n\n- refactored how methods and services are added to description pool to better avoid cases where filedescriptors may be added twice.\n\n## [0.1.12](https://github.com/wesky93/grpc_requests/releases/tag/v0.1.12) - 2023-11-26\n\n## added\n\n- method to print out a generic descriptor added to utils collection\n- helper methods to print out a method's request and responses in a human readable format\n\n## changed\n\n- documentation revamped\n- version checks to avoid using deprecated methods added to async client\n\n## fixed\n\n- include `requirements.txt` in build manifest\n\n## deprecated\n\n- method to retrieve fields for the descriptor of a method's input type.\n\n## added\n\n## [0.1.11](https://github.com/wesky93/grpc_requests/releases/tag/v0.1.11) - 2023-10-05\n\n## added\n\n- method to retrieve fields for the descriptor of a method's input type.\n\n## changes\n\n- updates to minimum versons of requirements to address vulnerabilities\n\n## [0.1.10](https://github.com/wesky93/grpc_requests/releases/tag/v0.1.10) - 2023-03-07\n\n## fixed\n\n- corrected pin of `protobuf` version in `requirements.txt`\n\n## [0.1.9](https://github.com/wesky93/grpc_requests/releases/tag/v0.1.9) - 2023-02-14\n\n### changes\n\n- reimplementation of test case framework\n- restoration of reflection client test cases\n- updates to continuous integration pipeline\n\n## [0.1.8](https://github.com/wesky93/grpc_requests/releases/tag/v0.1.8) - 2023-01-24\n\n### changes\n\n- update project and dev dependencies to versions that require python >= 3.7\n- update project documentation and examples\n\n## [0.1.7](https://github.com/wesky93/grpc_requests/releases/tag/v0.1.7) - 2022-12-16\n\n### deprecated\n\n- homi dependency, as the project has been archived\n- homi dependent test code\n\n## [0.1.6](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.1.6) - 2022-11-10\n\n### fixed\n\n- ignore repeat imports of protobufs and reflecting against a server\n\n## [0.1.3](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.1.3) - 2022-7-14\n\n### fixed\n\n- remove click\n\n### issues\n\n- ignore test before deploy\n\n## [0.1.2](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.1.2) - 2022-7-7\n\n## [0.1.1](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.1.1) - 2022-6-13\n\n### changes\n\n- remove unused package : click #35\n\n## [0.1.0](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.1.0) - 2021-8-21\n\n### added\n\n- full tls connection support\n\n### fixed\n\n- ignore reflection if service already registered\n\n### changed\n\n- update grpcio version\n\n## [0.0.10](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.0.10) - 2021-2-27\n\n### fixed\n\n- fix 3.6 compatibility issue : await is in f-string\n\n## [0.0.9](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.0.9) - 2020-12-25\n\n### added\n\n- support asyncio api\n\n## [0.0.8](https://github.com/spaceone-dev/grpc_requests/releases/tag/0.0.8) - 2020-11-24\n\n### added\n\n- add stubclient\n\n### fixed\n\n- bypasss kwargs to base client\n\n## [0.0.7](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.0.7) - 2020-10-4\n\n### added\n\n- support compression\n\n## [0.0.6](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.0.6) - 2020-10-3\n\n### added\n\n- support tls connections\n\n## [0.0.5](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.0.5) - 2020-9-9\n\n### changed\n\n- response filled gets original proto field name rather than(before returned lowercamelcase)\n\n## [0.0.4](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.0.4) - 2020-7-21\n\n## [0.0.3](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.0.3) - 2020-7-21\n\n### added\n\n- dynamic request method\n- service client\n\n## [0.0.2](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.0.2) - 2020-7-20\n\n### added\n\n- support all method types\n- add request test case\n\n## [0.0.1](https://github.com/spaceone-dev/grpc_requests/releases/tag/v0.0.1) - 2020-7-20\n\n### added\n\n- sync proto using reflection\n- auto convert request(response) from(to) dict\n- support unary-unary\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "grpc-requests",
  "package_url": "https://pypi.org/project/grpc-requests/",
  "project_url": "https://pypi.org/project/grpc-requests/",
  "project_urls": {
    "Homepage": "https://github.com/wesky93/grpc_requests"
  },
  "release_url": "https://pypi.org/project/grpc-requests/0.1.13/",
  "requires_dist": [
    "grpcio >=1.53.0",
    "grpcio-reflection >=1.53.0",
    "google-api-core >=2.9.0",
    "cryptography >=39.0.1"
  ],
  "requires_python": ">=3.7",
  "summary": "grpc for humans. grpc reflection support client",
  "version": "0.1.13",
  "releases": [],
  "developers": [
    "viridianforge",
    "wayne@viridianforge.tech",
    "wesky93",
    "wesky93@gmail.com"
  ],
  "kwds": "grpc_requests grpc grpcio pypi requests",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_grpc_requests",
  "homepage": "https://github.com/wesky93/grpc_requests",
  "release_count": 20,
  "dependency_ids": [
    "pypi_cryptography",
    "pypi_google_api_core",
    "pypi_grpcio",
    "pypi_grpcio_reflection"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: gnu lesser general public license v2 or later (lgplv2+)",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "pyppmd\n======\n\n\n.. image:: https://badge.fury.io/py/pyppmd.svg\n  :target: https://badge.fury.io/py/pyppmd\n\n.. image:: https://img.shields.io/conda/vn/conda-forge/pyppmd\n  :target: https://anaconda.org/conda-forge/pyppmd\n\n.. image:: https://readthedocs.org/projects/pyppmd/badge/?version=latest\n  :target: https://pyppmd.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://dev.azure.com/miurahr/codeberg/_apis/build/status%2fcodeberg-pyppmd-ci?branchname=main\n  :target: https://dev.azure.com/miurahr/codeberg/_build/latest?definitionid=29&branchname=main\n\nintroduction\n------------\n\n``pyppmd`` module provides classes and functions for compressing and decompressing text data,\nusing ppm(prediction by partial matching) compression algorithm which has several variations of implementations.\nppmd is the implementation by dmitry shkarin.\npyppmd use igor pavlov's range coder introduced in 7-zip.\n\nthe api is similar to python's bz2/lzma/zlib module.\n\nsome parts of th codes are derived from ``7-zip``, ``pyzstd`` and ``ppmd-cffi``.\n\n\ndevelopment status\n------------------\n\na project status is considered as ``stable``.\n\nextra input byte\n----------------\n\n``ppmd`` algorithm and implementation is designed to use ``extra`` input byte.\nthe encoder will omit a last null (b\"\\0\") byte when last byte is b\"\\0\".\nyou may need to provide an extra null byte when you don't get expected size of\nextracted data.\n\nyou can do like as:\n\n.. code-block::\n\n    dec = pyppmd.ppmd7decoder(max_order=6, mem_size=16 << 10)\n    result = dec.decode(compressed, length)\n    if len(result) < length:\n        if dec.needs_input:\n            # ppmd need an extra null byte\n            result += dec.decode(b\"\\0\", length - len(result))\n        else:\n            result += dec.decode(b\"\", length - len(result))\n\n\n.. warning::\n   when use it on msys2/mingw64 environment, you should set environment variable ``setuptools_use_distutils=stdlib``\n\ncopyright and license\n---------------------\n\nsome codes are derived from p7zip/7zip and pyzstd project.\ndetails are shown in licensenotices.rst\n\n- spdx-license-identifier: lgpl-2.1-or-later\n- spdx-url: https://spdx.org/licenses/lgpl-2.1-or-later.html\n\npyppmd is licensed under gnu lesser general public license v2.1 or later.\n\n- copyright (c) 2020-2023 hiroshi miura\n- copyright (c) 2020-2021 ma lin\n- copyright (c) 2010-2012 lockless inc.\n- copyright (c) 1999-2017 igor pavlov\n\nthis library is free software; you can redistribute it and/or\nmodify it under the terms of the gnu lesser general public\nlicense as published by the free software foundation; either\nversion 2.1 of the license, or (at your option) any later version.\n\nthis library is distributed in the hope that it will be useful,\nbut without any warranty; without even the implied warranty of\nmerchantability or fitness for a particular purpose.  see the gnu\nlesser general public license for more details.\n\nyou should have received a copy of the gnu lesser general public\nlicense along with this library; if not, write to the free software\nfoundation, inc., 51 franklin street, fifth floor, boston, ma  02110-1301  usa\n",
  "docs_url": null,
  "keywords": "",
  "license": "lgpl-2.1-or-later",
  "name": "pyppmd",
  "package_url": "https://pypi.org/project/pyppmd/",
  "project_url": "https://pypi.org/project/pyppmd/",
  "project_urls": {
    "Bug Tracker": "https://codeberg.org/miurahr/pyppmd/issues",
    "Changelog": "https://pyppmd.readthedocs.io/en/latest/changelog.html",
    "Documentation": "https://pyppmd.readthedocs.io/en/stable/",
    "Homepage": "https://pyppmd.readthedocs.io/",
    "Source": "https://codeberg.org/miurahr/pyppmd"
  },
  "release_url": "https://pypi.org/project/pyppmd/1.1.0/",
  "requires_dist": [
    "mypy >=0.812 ; extra == 'check'",
    "mypy-extensions >=0.4.3 ; extra == 'check'",
    "check-manifest ; extra == 'check'",
    "flake8 <5 ; extra == 'check'",
    "flake8-isort ; extra == 'check'",
    "flake8-black ; extra == 'check'",
    "readme-renderer ; extra == 'check'",
    "pygments ; extra == 'check'",
    "isort >=5.0.3 ; extra == 'check'",
    "sphinx >=2.3 ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "atheris ; extra == 'fuzzer'",
    "hypothesis ; extra == 'fuzzer'",
    "pytest >=6.0 ; extra == 'test'",
    "pytest-benchmark ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest-timeout ; extra == 'test'",
    "hypothesis ; extra == 'test'",
    "coverage[toml] >=5.2 ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "ppmd compression/decompression library",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "miurahr@linux.com"
  ],
  "kwds": "pyppmd codeberg pyzstd badge conda",
  "license_kwds": "lgpl-2.1-or-later",
  "libtype": "pypi",
  "id": "pypi_pyppmd",
  "homepage": "",
  "release_count": 23,
  "dependency_ids": [
    "pypi_atheris",
    "pypi_check_manifest",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_flake8_black",
    "pypi_flake8_isort",
    "pypi_hypothesis",
    "pypi_isort",
    "pypi_mypy",
    "pypi_mypy_extensions",
    "pypi_pygments",
    "pypi_pytest",
    "pypi_pytest_benchmark",
    "pypi_pytest_cov",
    "pypi_pytest_timeout",
    "pypi_readme_renderer",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme"
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http"
  ],
  "description": "# databases\n\n<p>\n<a href=\"https://github.com/encode/databases/actions\">\n    <img src=\"https://github.com/encode/databases/workflows/test%20suite/badge.svg\" alt=\"test suite\">\n</a>\n<a href=\"https://pypi.org/project/databases/\">\n    <img src=\"https://badge.fury.io/py/databases.svg\" alt=\"package version\">\n</a>\n</p>\n\ndatabases gives you simple asyncio support for a range of databases.\n\nit allows you to make queries using the powerful [sqlalchemy core][sqlalchemy-core]\nexpression language, and provides support for postgresql, mysql, and sqlite.\n\ndatabases is suitable for integrating against any async web framework, such as [starlette][starlette],\n[sanic][sanic], [responder][responder], [quart][quart], [aiohttp][aiohttp], [tornado][tornado], or [fastapi][fastapi].\n\n**documentation**: [https://www.encode.io/databases/](https://www.encode.io/databases/)\n\n**requirements**: python 3.7+\n\n---\n\n## installation\n\n```shell\n$ pip install databases\n```\n\ndatabase drivers supported are:\n\n* [asyncpg][asyncpg]\n* [aiopg][aiopg]\n* [aiomysql][aiomysql]\n* [asyncmy][asyncmy]\n* [aiosqlite][aiosqlite]\n\nyou can install the required database drivers with:\n\n```shell\n$ pip install databases[asyncpg]\n$ pip install databases[aiopg]\n$ pip install databases[aiomysql]\n$ pip install databases[asyncmy]\n$ pip install databases[aiosqlite]\n```\n\nnote that if you are using any synchronous sqlalchemy functions such as `engine.create_all()` or [alembic][alembic] migrations then you still have to install a synchronous db driver: [psycopg2][psycopg2] for postgresql and [pymysql][pymysql] for mysql.\n\n---\n\n## quickstart\n\nfor this example we'll create a very simple sqlite database to run some\nqueries against.\n\n```shell\n$ pip install databases[aiosqlite]\n$ pip install ipython\n```\n\nwe can now run a simple example from the console.\n\nnote that we want to use `ipython` here, because it supports using `await`\nexpressions directly from the console.\n\n```python\n# create a database instance, and connect to it.\nfrom databases import database\ndatabase = database('sqlite+aiosqlite:///example.db')\nawait database.connect()\n\n# create a table.\nquery = \"\"\"create table highscores (id integer primary key, name varchar(100), score integer)\"\"\"\nawait database.execute(query=query)\n\n# insert some data.\nquery = \"insert into highscores(name, score) values (:name, :score)\"\nvalues = [\n    {\"name\": \"daisy\", \"score\": 92},\n    {\"name\": \"neil\", \"score\": 87},\n    {\"name\": \"carol\", \"score\": 43},\n]\nawait database.execute_many(query=query, values=values)\n\n#\u00a0run a database query.\nquery = \"select * from highscores\"\nrows = await database.fetch_all(query=query)\nprint('high scores:', rows)\n```\n\ncheck out the documentation on [making database queries](https://www.encode.io/databases/database_queries/)\nfor examples of how to start using databases together with sqlalchemy core expressions.\n\n\n<p align=\"center\">&mdash; \u2b50\ufe0f &mdash;</p>\n<p align=\"center\"><i>databases is <a href=\"https://github.com/encode/databases/blob/master/license.md\">bsd licensed</a> code. designed & built in brighton, england.</i></p>\n\n[sqlalchemy-core]: https://docs.sqlalchemy.org/en/latest/core/\n[sqlalchemy-core-tutorial]: https://docs.sqlalchemy.org/en/latest/core/tutorial.html\n[alembic]: https://alembic.sqlalchemy.org/en/latest/\n[psycopg2]: https://www.psycopg.org/\n[pymysql]: https://github.com/pymysql/pymysql\n[asyncpg]: https://github.com/magicstack/asyncpg\n[aiopg]: https://github.com/aio-libs/aiopg\n[aiomysql]: https://github.com/aio-libs/aiomysql\n[asyncmy]: https://github.com/long2ice/asyncmy\n[aiosqlite]: https://github.com/omnilib/aiosqlite\n\n[starlette]: https://github.com/encode/starlette\n[sanic]: https://github.com/huge-success/sanic\n[responder]: https://github.com/kennethreitz/responder\n[quart]: https://gitlab.com/pgjones/quart\n[aiohttp]: https://github.com/aio-libs/aiohttp\n[tornado]: https://github.com/tornadoweb/tornado\n[fastapi]: https://github.com/tiangolo/fastapi\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "databases",
  "package_url": "https://pypi.org/project/databases/",
  "project_url": "https://pypi.org/project/databases/",
  "project_urls": {
    "Homepage": "https://github.com/encode/databases"
  },
  "release_url": "https://pypi.org/project/databases/0.8.0/",
  "requires_dist": [
    "sqlalchemy (<1.5,>=1.4.42)",
    "aiomysql ; extra == 'aiomysql'",
    "aiopg ; extra == 'aiopg'",
    "aiosqlite ; extra == 'aiosqlite'",
    "asyncmy ; extra == 'asyncmy'",
    "asyncpg ; extra == 'asyncpg'",
    "aiomysql ; extra == 'mysql'",
    "asyncpg ; extra == 'postgresql'",
    "aiosqlite ; extra == 'sqlite'"
  ],
  "requires_python": ">=3.7",
  "summary": "async database support for python.",
  "version": "0.8.0",
  "releases": [],
  "developers": [
    "tom@tomchristie.com",
    "tom_christie"
  ],
  "kwds": "databases database db sqlite database_queries",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_databases",
  "homepage": "https://github.com/encode/databases",
  "release_count": 42,
  "dependency_ids": [
    "pypi_aiomysql",
    "pypi_aiopg",
    "pypi_aiosqlite",
    "pypi_asyncmy",
    "pypi_asyncpg",
    "pypi_sqlalchemy"
  ]
}
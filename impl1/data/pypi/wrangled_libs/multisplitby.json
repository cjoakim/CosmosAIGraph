{
  "classifiers": [
    "development status :: 1 - planning",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7"
  ],
  "description": "multisplitby |build| |coverage|\n===============================\nsplit an iterable into multiple using arbitrary predicates.\n\nthis package comes with a single function: ``multisplitby.multi_split_by``.\n\nfor all lists ``values`` and ``predicates``, the following conditions are always true:\n\n1. ``1 + len(predicates) = len(list(multi_split_by(values, predicates)))``\n2. ``values == itertools.chain.from_iterable(multi_split_by(values, predicates))``\n\nnormal usage with one predicate:\n\n.. code-block:: python\n\n   >>> values = range(4)\n   >>> predicates = [lambda x: 2 < x]\n   >>> list(map(list, multi_split_by(values, predicates)))\n   [[0, 1, 2], [3]]\n\nnormal usage with several predicates:\n\n.. code-block:: python\n\n   >>> values = range(9)\n   >>> predicates = [lambda x: 2 < x, lambda x: 4 < x, lambda x: 7 < x]\n   >>> list(map(list, multi_split_by(values, predicates)))\n   [[0, 1, 2], [3, 4], [5, 6, 7], [8]]\n\nif no values are given, will result in ``|predicates| + 1`` generators, all yielding empty lists.\n\n.. code-block:: python\n\n   >>> values = []\n   >>> predicates = [lambda x: 2 < x, lambda x: 4 < x, lambda x: 7 < x]\n   >>> list(map(list, multi_split_by(values, predicates)))\n   [[], [], [], []]\n\nif no predicates are given, will result in a single generator that yields the original list:\n\n.. code-block:: python\n\n   >>> values = range(4)\n   >>> predicates = []\n   >>> list(map(list, multi_split_by(values, predicates)))\n   [[0, 1, 2, 3]]\n\ninstallation\n------------\ninstall from pypi with:\n\n.. code-block:: bash\n\n   $ pip install multisplitby\n\nor get the latest code from `github <https://github.com/cthoyt/multisplitby>`_ with:\n\n.. code-block:: bash\n\n   $ git clone https://github.com/cthoyt/multisplitby.git\n   $ cd multisplitby\n   $ pip install -e .\n\n.. |build| image:: https://travis-ci.com/cthoyt/multisplitby.svg?branch=master\n    :target: https://travis-ci.com/cthoyt/multisplitby\n\n.. |coverage| image:: https://codecov.io/gh/cthoyt/multisplitby/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/cthoyt/multisplitby\n\n\n",
  "docs_url": null,
  "keywords": "iteration",
  "license": "mit",
  "name": "multisplitby",
  "package_url": "https://pypi.org/project/multisplitby/",
  "project_url": "https://pypi.org/project/multisplitby/",
  "project_urls": {
    "Bug Tracker": "https://github.com/cthoyt/multisplitby/issues",
    "Download": "https://github.com/cthoyt/multisplitby/releases",
    "Homepage": "https://github.com/cthoyt/multisplitby",
    "Source Code": "https://github.com/cthoyt/multisplitby"
  },
  "release_url": "https://pypi.org/project/multisplitby/0.0.1/",
  "requires_dist": [],
  "requires_python": ">=3.5",
  "summary": "split an iterable into multiple using arbitrary predicates.",
  "version": "0.0.1",
  "releases": [],
  "developers": [
    "charles_tapley_hoyt",
    "cthoyt@gmail.com"
  ],
  "kwds": "multi_split_by predicates predicate from_iterable multisplitby",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_multisplitby",
  "homepage": "https://github.com/cthoyt/multisplitby",
  "release_count": 1,
  "dependency_ids": []
}
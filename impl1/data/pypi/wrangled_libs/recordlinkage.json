{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: bsd license",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/j535d165/recordlinkage/master/docs/images/recordlinkage-banner-transparent.svg\"><br>\n</div>\n\n# recordlinkage: powerful and modular python record linkage toolkit\n\n[![pypi version](https://badge.fury.io/py/recordlinkage.svg)](https://pypi.python.org/pypi/recordlinkage/)\n[![github actions ci status](https://github.com/j535d165/recordlinkage/workflows/tests/badge.svg?branch=master)](https://github.com/j535d165/recordlinkage/actions)\n[![code coverage](https://codecov.io/gh/j535d165/recordlinkage/branch/master/graph/badge.svg)](https://codecov.io/gh/j535d165/recordlinkage)\n[![documentation status](https://readthedocs.org/projects/recordlinkage/badge/?version=latest)](https://recordlinkage.readthedocs.io/en/latest/?badge=latest)\n[![zenodo doi](https://zenodo.org/badge/doi/10.5281/zenodo.3559042.svg)](https://doi.org/10.5281/zenodo.3559042)\n\n**recordlinkage** is a powerful and modular record linkage toolkit to\nlink records in or between data sources. the toolkit provides most of\nthe tools needed for record linkage and deduplication. the package\ncontains indexing methods, functions to compare records and classifiers.\nthe package is developed for research and the linking of small or medium\nsized files.\n\nthis project is inspired by the [freely extensible biomedical record\nlinkage (febrl)](https://sourceforge.net/projects/febrl/) project, which\nis a great project. in contrast with febrl, the recordlinkage project\nuses [pandas](http://pandas.pydata.org/) and\n[numpy](http://www.numpy.org/) for data handling and computations. the\nuse of *pandas*, a flexible and powerful data analysis and manipulation\nlibrary for python, makes the record linkage process much easier and\nfaster. the extensive *pandas* library can be used to integrate your\nrecord linkage directly into existing data manipulation projects.\n\none of the aims of this project is to make an easily extensible record\nlinkage framework. it is easy to include your own indexing algorithms,\ncomparison/similarity measures and classifiers.\n\n## basic linking example\n\nimport the `recordlinkage` module with all important tools for record\nlinkage and import the data manipulation framework **pandas**.\n\n``` python\nimport recordlinkage\nimport pandas\n```\n\nload your data into pandas dataframes.\n\n``` python\ndf_a = pandas.dataframe(your_first_dataset)\ndf_b = pandas.dataframe(your_second_dataset)\n```\n\ncomparing all record can be computationally intensive. therefore, we\nmake set of candidate links with one of the built-in indexing techniques\nlike **blocking**. in this example, only pairs of records that agree on\nthe surname are returned.\n\n``` python\nindexer = recordlinkage.index()\nindexer.block('surname')\ncandidate_links = indexer.index(df_a, df_b)\n```\n\nfor each candidate link, compare the records with one of the comparison\nor similarity algorithms in the compare class.\n\n``` python\nc = recordlinkage.compare()\n\nc.string('name_a', 'name_b', method='jarowinkler', threshold=0.85)\nc.exact('sex', 'gender')\nc.date('dob', 'date_of_birth')\nc.string('str_name', 'streetname', method='damerau_levenshtein', threshold=0.7)\nc.exact('place', 'placename')\nc.numeric('income', 'income', method='gauss', offset=3, scale=3, missing_value=0.5)\n\n# the comparison vectors\nfeature_vectors = c.compute(candidate_links, df_a, df_b)\n```\n\nclassify the candidate links into matching or distinct pairs based on\ntheir comparison result with one of the [classification\nalgorithms](https://recordlinkage.readthedocs.io/en/latest/ref-classifiers.html).\nthe following code classifies candidate pairs with a logistic regression\nclassifier. this (supervised machine learning) algorithm requires\ntraining data.\n\n``` python\nlogrg = recordlinkage.logisticregressionclassifier()\nlogrg.fit(training_comparison_vectors, training_pairs)\n\nlogrg.predict(feature_vectors)\n```\n\nthe following code shows the classification of candidate pairs with the\nexpectation-conditional maximisation (ecm) algorithm. this variant of\nthe expectation-maximisation algorithm doesn't require training data\n(unsupervised machine learning).\n\n``` python\necm = recordlinkage.ecmclassifier()\necm.fit_predict(feature_vectors)\n```\n\n## main features\n\nthe main features of this python record linkage toolkit are:\n\n-   clean and standardise data with easy to use tools\n-   make pairs of records with smart indexing methods such as\n    **blocking** and **sorted neighbourhood indexing**\n-   compare records with a large number of comparison and similarity\n    measures for different types of variables such as strings, numbers\n    and dates.\n-   several classifications algorithms, both supervised and unsupervised\n    algorithms.\n-   common record linkage evaluation tools\n-   several built-in datasets.\n\n## documentation\n\nthe most recent documentation and api reference can be found at\n[recordlinkage.readthedocs.org](http://recordlinkage.readthedocs.org/en/latest/).\nthe documentation provides some basic usage examples like\n[deduplication](http://recordlinkage.readthedocs.io/en/latest/guides/data_deduplication.html)\nand\n[linking](http://recordlinkage.readthedocs.io/en/latest/guides/link_two_dataframes.html)\ncensus data. more examples are coming soon. if you do have interesting\nexamples to share, let us know.\n\n## installation\n\nthe python record linkage toolkit requires python 3.8 or higher. install the\npackage easily with pip\n\n``` sh\npip install recordlinkage\n```\n\nthe toolkit depends on popular packages like\n[pandas](https://github.com/pydata/pandas),\n[numpy](http://www.numpy.org), [scipy](https://www.scipy.org/) and,\n[scikit-learn](http://scikit-learn.org/). a complete list of\ndependencies can be found in the [installation\nmanual](https://recordlinkage.readthedocs.io/en/latest/installation.html)\nas well as recommended and optional dependencies.\n\n## license\n\nthe license for this record linkage tool is bsd-3-clause.\n\n## citation\n\nplease cite this package when being used in an academic context. ensure\nthat the doi and version match the installed version. citatation styles\ncan be found on the publishers website\n[10.5281/zenodo.3559042](https://doi.org/10.5281/zenodo.3559042).\n\n``` text\n@software{de_bruin_j_2019_3559043,\n  author       = {de bruin, j},\n  title        = {{python record linkage toolkit: a toolkit for\n                   record linkage and duplicate detection in python}},\n  month        = dec,\n  year         = 2019,\n  publisher    = {zenodo},\n  version      = {v0.14},\n  doi          = {10.5281/zenodo.3559043},\n  url          = {https://doi.org/10.5281/zenodo.3559043}\n}\n```\n\n## need help?\n\nstuck on your record linkage code or problem? any other questions? don't\nhestitate to send me an email (<jonathandebruinos@gmail.com>).\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd-3-clause",
  "name": "recordlinkage",
  "package_url": "https://pypi.org/project/recordlinkage/",
  "project_url": "https://pypi.org/project/recordlinkage/",
  "project_urls": {
    "homepage": "https://recordlinkage.readthedocs.io/",
    "repository": "https://github.com/J535D165/recordlinkage"
  },
  "release_url": "https://pypi.org/project/recordlinkage/0.16/",
  "requires_dist": [
    "jellyfish (>=1)",
    "numpy (>=1.13)",
    "pandas (<3,>=1)",
    "scipy (>=1)",
    "scikit-learn (>=1)",
    "joblib",
    "networkx (>=2) ; extra == 'all'",
    "bottleneck ; extra == 'all'",
    "numexpr ; extra == 'all'",
    "sphinx ; extra == 'docs'",
    "nbsphinx ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "ipykernel ; extra == 'docs'",
    "ruff ; extra == 'lint'",
    "pytest ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "a record linkage toolkit for linking and deduplication",
  "version": "0.16",
  "releases": [],
  "developers": [
    "jonathandebruinos@gmail.com"
  ],
  "kwds": "banner recordlinkage badge linking linkage",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_recordlinkage",
  "homepage": "",
  "release_count": 23,
  "dependency_ids": [
    "pypi_bottleneck",
    "pypi_ipykernel",
    "pypi_jellyfish",
    "pypi_joblib",
    "pypi_nbsphinx",
    "pypi_networkx",
    "pypi_numexpr",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pytest",
    "pypi_ruff",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme"
  ]
}
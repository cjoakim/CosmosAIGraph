{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# py-dmidecode\n\nsmall tool that parses output of dmidecode command\n\n## how to use\n\n```python\nfrom dmidecode import dmidecode\n\n# create parsing instance by passing dmidecode output\ndmi = dmidecode()\n\n# some of the pre-defined queries\nprint('manufacturer:\\t', dmi.manufacturer())\nprint('model:\\t\\t', dmi.model())\nprint('firmware:\\t', dmi.firmware())\nprint('serial number:\\t', dmi.serial_number())\nprint('processor type:\\t', dmi.cpu_type())\nprint('number of cpus:\\t', dmi.cpu_num())\nprint('cores count:\\t', dmi.total_enabled_cores())\nprint('total ram:\\t{} gb'.format(dmi.total_ram()))\n```\n\nalternatively instead of running dmidecode locally you can use dmiparse by passing dmidecode output as an argument:\n\n```python\nfrom dmidecode import dmiparse\ndmi = dmiparse(raw)\n```\n\nother information can be easily retrieved by analyzing dmi.data and module code.\n\n## possible limitations\n\ntested with dmidecode versions 2.11, 2.12 and 3.2\n",
  "docs_url": null,
  "keywords": "system development",
  "license": "",
  "name": "py-dmidecode",
  "package_url": "https://pypi.org/project/py-dmidecode/",
  "project_url": "https://pypi.org/project/py-dmidecode/",
  "project_urls": {
    "Bug Tracker": "https://github.com/zaibon/py-dmidecode/issues",
    "Homepage": "https://github.com/zaibon/py-dmidecode",
    "Repository": "https://github.com/zaibon/py-dmidecode"
  },
  "release_url": "https://pypi.org/project/py-dmidecode/0.1.2/",
  "requires_dist": [],
  "requires_python": ">=3.8.1,<4.0",
  "summary": "python library to parse the output of dmidecode",
  "version": "0.1.2",
  "releases": [],
  "developers": [
    "christophe.dcpm@gmail.com",
    "christophe_de_carvalho"
  ],
  "kwds": "cpu_type cpu_num dmi total_ram dmiparse",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_py_dmidecode",
  "homepage": "https://github.com/zaibon/py-dmidecode",
  "release_count": 5,
  "dependency_ids": []
}
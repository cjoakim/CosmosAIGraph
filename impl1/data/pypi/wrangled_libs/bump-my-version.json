{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: build tools",
    "topic :: software development :: version control",
    "topic :: system :: software distribution"
  ],
  "description": "# bump my version\n\n[![image](https://img.shields.io/pypi/v/bump-my-version.svg)](https://pypi.org/project/bump-my-version/)\n[![image](https://img.shields.io/pypi/l/bump-my-version.svg)](https://pypi.org/project/bump-my-version/)\n[![image](https://img.shields.io/pypi/pyversions/bump-my-version.svg)](https://pypi.org/project/bump-my-version/)\n[![codecov](https://codecov.io/gh/callowayproject/bump-my-version/branch/master/graph/badge.svg?token=d1gsotwepu)](https://codecov.io/gh/callowayproject/bump-my-version)\n[![github actions](https://github.com/callowayproject/bump-my-version/workflows/ci/badge.svg)](https://github.com/callowayproject/bump-my-version/actions)\n\n> **note**\n>\n> this is a maintained refactor of the [bump2version fork](https://github.com/c4urself/bump2version) of the excellent [bumpversion project](https://github.com/peritus/bumpversion). the main goals of this refactor were:\n>\n> - add support for `pyproject.toml` configuration files.\n> - convert to [click](https://click.palletsprojects.com/en/8.1.x/) for and [rich](https://rich.readthedocs.io/en/stable/index.html) for the cli interface\n> - add better configuration validation using [pydantic](https://docs.pydantic.dev)\n> - make the code and tests easier to read and maintain\n\n\n## overview\n\nversion-bump your software with a single command!\n\na small command line tool to simplify releasing software by updating all version strings in your source code by the correct increment and optionally commit and tag the changes.\n\n* version formats are highly configurable\n* works without any source code manager, but happily reads tag information from and writes\n  commits and tags to git and mercurial if available\n* just handles text files, so it's not specific to any programming language\n* supports python 3.8+ and pypy3.\n\n## future direction\n\n- make it easier to get the current version\n- switch having both the version part and files to change as arguments on the command line.\n- make the version part argument _truly_ optional when `--new-version` is specified\n- allow for multiple tags, including one that moves for having a `v2` that always points to the latest version of version 2. [for example](https://github.com/actions/toolkit/blob/master/docs/action-versioning.md#recommendations)\n- better ui with [rich](https://rich.readthedocs.io/en/stable/index.html)\n\n## installation\n\nyou can download and install the latest version of this software from the python package index (pypi) as follows:\n\n```console\npip install --upgrade bump-my-version\n```\n\n## changelog\n\nplease find the changelog here: [changelog.md](changelog.md)\n\n## usage for version incrementing\n\n> **note:** \n>\n> throughout this document, you can use `bumpversion` or `bump-my-version` interchangeably.\n\nthere are two modes of operation: on the command line for single-file operation and using a configuration file (`pyproject.toml` or `.bumpversion.toml`) for more complex multi-file operations.\n\n> **warning:**\n> \n> the invocation of `bump-my-version` changed in version 0.6.0. it split functionality into sub-commands. it remains backward-compatible with previous versions. previous usage is discouraged and may be removed in a 1.0 release.\n\n    bump-my-version bump [options] [part] [file]\n\n### `part`\n\n_**required**_\n\nthe part of the version to increase, e.g. `minor`.\n\nvalid values include the named groups defined in the `parse` configuration.\n\nexample bumping 0.5.1 to 0.6.0:\n\n    bump-my-version bump --current-version 0.5.1 minor\n\n### `file`\n\n_**[optional]**_<br />\n**default**: none\n\nadditional files to modify.\n\nthese files are added to the list of files specified in your configuration file. if you want to rewrite only files specified on the command line, also use `--no-configured-files`.\n\nexample bumping 1.1.9 to 2.0.0:\n\n    bump-my-version bump --current-version 1.1.9 major setup.py\n\n## configuration file\n\n`bump-my-version` looks in four places for the configuration file to parse (in order of precedence):\n\n1. `--config-file <file>` _(command line argument)_\n2. `bumpversion_config_file=file` _(environment variable)_\n3. `.bumpversion.cfg` _(legacy)_\n4. `.bumpversion.toml`\n5. `setup.cfg` _(legacy)_\n6. `pyproject.toml`\n\n`.toml` files are recommended due to their type handling. we will likely drop support for `ini`-style formats in the future due to issues with formatting and parsing. you should add your configuration file to your source code management system.\n\nby using a configuration file, you no longer need to specify those options on the command line. the configuration file also allows greater flexibility in specifying how files are modified.\n\n## command-line options\n\nmost of the configuration values above can also be given as an option on the command line.\nadditionally, the following options are available:\n\n`--dry-run, -n`\ndon't touch any files, just pretend. best used with `--verbose`.\n\n`--no-configured-files`\nwill not update/check files specified in the configuration file.\n\nsimilar to dry-run, but will also avoid checking the files. also useful when you want to update just one file with e.g., `bump-my-version --no-configured-files major my-file.txt`\n\n`--verbose, -v`\nprint useful information to stderr. if specified more than once, it will output more information.\n\n`--list`\n_deprecated. use `bump-my-version show` instead._ list machine-readable information to stdout for consumption by other programs.\n\nexample output:\n\n    current_version=0.0.18\n    new_version=0.0.19\n\n`-h, --help`\nprint help and exit\n\n## using bumpversion in a script\n\nif you need to use the version generated by bumpversion in a script, you can make use of the `show` subcommand.\n\nsay, for example, that you are using git-flow to manage your project and want to automatically create a release. when you issue `git flow release start` you need to know the new version before applying the change.\n\nthe standard way to get it in a bash script is\n\n    bump-my-version show new_version --increment <part>\n\nwhere `part` is the part of the version number you are updating.\n\nfor example, if you are updating the minor number and looking for the new version number, this becomes:\n\n```console\n$ bump-my-version show new_version --increment minor\n1.1.0\n```\n\n## development & contributing\n\nthank you, contributors! you can find a full list here: https://github.com/callowayproject/bump-my-version/graphs/contributors\n\nsee also our [contributing.md](contributing.md)\n\ndevelopment of this happens on github, patches including tests, and documentation are very welcome, as well as bug reports! please open an issue if this tool does not support every aspect of bumping versions in your development\nworkflow, as it is intended to be very versatile.\n\n## license\n\nbump-my-version is licensed under the mit license - see the [license](license) file for details\n",
  "docs_url": null,
  "keywords": "bumpversion,version,release",
  "license": "mit license  copyright (c) 2013-2014 filip noetzel  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software. ",
  "name": "bump-my-version",
  "package_url": "https://pypi.org/project/bump-my-version/",
  "project_url": "https://pypi.org/project/bump-my-version/",
  "project_urls": {
    "documentation": "https://callowayproject.github.io/bump-my-version/",
    "homepage": "https://github.com/callowayproject/bump-my-version",
    "repository": "https://github.com/callowayproject/bump-my-version.git"
  },
  "release_url": "https://pypi.org/project/bump-my-version/0.15.3/",
  "requires_dist": [
    "click",
    "dotted-notation",
    "pydantic >=2.0.0",
    "pydantic-settings",
    "rich-click",
    "rich",
    "tomlkit",
    "git-fame >=1.12.2 ; extra == 'dev'",
    "generate-changelog >=0.7.6 ; extra == 'dev'",
    "pip-tools ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "ghp-import ; extra == 'docs'",
    "linkify-it-py ; extra == 'docs'",
    "myst-parser ; extra == 'docs'",
    "furo ; extra == 'docs'",
    "Sphinx >=4.3.0 ; extra == 'docs'",
    "sphinx-autodoc2 ; extra == 'docs'",
    "sphinx-autodoc-typehints ; extra == 'docs'",
    "sphinx-click ; extra == 'docs'",
    "sphinx-copybutton ; extra == 'docs'",
    "coverage ; extra == 'test'",
    "pre-commit ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest ; extra == 'test'",
    "pytest-mock ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "version bump your python project",
  "version": "0.15.3",
  "releases": [],
  "developers": [
    "coreyoordt@gmail.com"
  ],
  "kwds": "bumpversion bump2version pyversions new_version current_version",
  "license_kwds": "copyright license liable liability mit",
  "libtype": "pypi",
  "id": "pypi_bump_my_version",
  "homepage": "",
  "release_count": 22,
  "dependency_ids": [
    "pypi_click",
    "pypi_coverage",
    "pypi_dotted_notation",
    "pypi_furo",
    "pypi_generate_changelog",
    "pypi_ghp_import",
    "pypi_git_fame",
    "pypi_linkify_it_py",
    "pypi_myst_parser",
    "pypi_pip_tools",
    "pypi_pre_commit",
    "pypi_pydantic",
    "pypi_pydantic_settings",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_mock",
    "pypi_rich",
    "pypi_rich_click",
    "pypi_sphinx",
    "pypi_sphinx_autodoc_typehints",
    "pypi_sphinx_autodoc2",
    "pypi_sphinx_click",
    "pypi_sphinx_copybutton",
    "pypi_tomlkit"
  ]
}
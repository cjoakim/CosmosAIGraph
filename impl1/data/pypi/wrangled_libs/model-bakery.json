{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development"
  ],
  "description": "# model bakery: smart fixtures for better tests\n\n[![build](https://img.shields.io/github/actions/workflow/status/model-bakers/model_bakery/ci.yml?branch=main)](https://github.com/model-bakers/model_bakery/actions?workflow=tests)\n[![coverage](https://img.shields.io/badge/coverage-97%25-success)](https://github.com/model-bakers/model_bakery/actions?workflow=tests)\n[![latest pypi version](https://img.shields.io/pypi/v/model_bakery.svg)](https://pypi.python.org/pypi/model_bakery/)\n[![documentation status](https://readthedocs.org/projects/model-bakery/badge/?version=latest)](https://model-bakery.readthedocs.io/en/latest/?badge=latest)\n\n*model bakery* offers you a smart way to create fixtures for testing in\ndjango.\nwith a simple and powerful api you can create many objects with a single\nline of code.\n\nmodel bakery is a rename of the legacy [model mommy project](https://pypi.org/project/model_mommy/).\n\n## install\n\n```bash\npip install model-bakery\n```\n\n## usage and info\n\n### basic usage\n\n```python\n\n# models.py\n\nfrom django.db import models\n\nclass customer(models.model):\n    enjoy_jards_macale = models.booleanfield()\n    name = models.charfield(max_length=30)\n    email = models.emailfield()\n    age = models.integerfield()\n    bio = models.textfield()\n    days_since_last_login = models.bigintegerfield()\n    birthday = models.datefield()\n    last_shopping = models.datetimefield()\n\n# test_models.py\n\nfrom django.test import testcase\nfrom model_bakery import baker\nfrom pprint import pprint\n\nclass testcustomermodel(testcase):\n    def setup(self):\n        self.customer = baker.make('shop.customer')\n        pprint(self.customer.__dict__)\n\n\"\"\"\n{'_state': <django.db.models.base.modelstate object at 0x1129a3240>,\n 'age': 3841,\n 'bio': 'vufzmumykzlntyicxfgodihrnkjzgqwhtzibtnvdkflqevczfnaoackdnqvchwvtwdlwoikrcqfppalogslectmmfleeveyqefkgytgnpbkvqttviqvdespxaschalughyeotsypsihvhzftekicuebrzuvigioacfngdvijeprzdsciibjuxzmawlrmxyrsucdkplrbryklrdtzhgtxuasxdhnghdsrnphryrclhrsjsvfojmkuhbvszhoxocrtfhsajencehvclececsxwxgwjcnjpsfdomopihrnhsgrf',\n 'birthday': datetime.date(2019, 12, 3),\n 'enjoy_jards_macale': true,\n 'id': 1,\n 'last_shopping': datetime.datetime(2019, 12, 3, 21, 42, 34, 77019),\n 'name': 'qiayynesvqcyllbzxpfocgbifnqepx',\n 'days_since_last_login': 6016}\n\"\"\"\n\n```\n\ncheck out [documentation](<http://model-bakery.readthedocs.org/>) for more complete examples.\n\n## contributing\n\ndetailed info [here](https://github.com/model-bakers/model_bakery/blob/main/contributing.md).\n\n## maintainers\n\n  - [bernardo fontes](https://github.com/berinhard/)\n  - [rustem saiargaliev](https://github.com/amureki/)\n  - [tim klein](https://github.com/timjklein36)\n\n## creator\n\n  - [vanderson mota](https://github.com/vandersonmota/)\n",
  "docs_url": null,
  "keywords": "django,factory,python,testing",
  "license": "apache license 2.0",
  "name": "model-bakery",
  "package_url": "https://pypi.org/project/model-bakery/",
  "project_url": "https://pypi.org/project/model-bakery/",
  "project_urls": {
    "Homepage": "https://github.com/model-bakers/model_bakery"
  },
  "release_url": "https://pypi.org/project/model-bakery/1.17.0/",
  "requires_dist": [
    "django>=3.2",
    "sphinx; extra == 'docs'",
    "sphinx-rtd-theme; extra == 'docs'",
    "black; extra == 'test'",
    "coverage; extra == 'test'",
    "mypy; extra == 'test'",
    "pillow; extra == 'test'",
    "pytest; extra == 'test'",
    "pytest-django; extra == 'test'",
    "ruff; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "smart object creation facility for django.",
  "version": "1.17.0",
  "releases": [],
  "developers": [
    "amureki@hey.com",
    "bernardoxhc@gmail.com"
  ],
  "kwds": "model_bakery test_models django bakery bakers",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_model_bakery",
  "homepage": "",
  "release_count": 28,
  "dependency_ids": [
    "pypi_black",
    "pypi_coverage",
    "pypi_django",
    "pypi_mypy",
    "pypi_pillow",
    "pypi_pytest",
    "pypi_pytest_django",
    "pypi_ruff",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme"
  ]
}
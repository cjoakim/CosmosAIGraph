{
  "classifiers": [],
  "description": "# scrublet\n**s**ingle-**c**ell **r**emover of do**ublet**s  \n\npython code for identifying doublets in single-cell rna-seq data. for details and validation of the method, see our paper in [cell systems](https://www.sciencedirect.com/science/article/pii/s2405471218304745) or the preprint on [biorxiv](https://www.biorxiv.org/content/early/2018/07/09/357368).\n\n#### quick start:\nfor a typical workflow, including interpretation of predicted doublet scores, see the example [notebook](./examples/scrublet_basics.ipynb).  \n\ngiven a raw (unnormalized) umi counts matrix `counts_matrix` with cells as rows and genes as columns, calculate a doublet score for each cell: \n```python\nimport scrublet as scr\nscrub = scr.scrublet(counts_matrix)\ndoublet_scores, predicted_doublets = scrub.scrub_doublets()\n```\n`scr.scrub_doublets()` simulates doublets from the observed data and uses a k-nearest-neighbor classifier to calculate a continuous `doublet_score` (between 0 and 1) for each transcriptome. the score is automatically thresholded to generate `predicted_doublets`, a boolean array that is `true` for predicted doublets and `false` otherwise. \n\n#### best practices:  \n- when working with data from multiple samples, run scrublet on each sample separately. because scrublet is designed to detect technical doublets formed by the random co-encapsulation of two cells, it may perform poorly on merged datasets where the cell type proportions are not representative of any single sample. \n- check that the doublet score threshold is reasonable (in an ideal case, separating the two peaks of a bimodal simulated doublet score histogram, as in [this example](./examples/scrublet_basics.ipynb)), and adjust manually if necessary.\n- visualize the doublet predictions in a 2-d embedding (e.g., umap or t-sne). predicted doublets should mostly co-localize (possibly in multiple clusters). if they do not, you may need to adjust the doublet score threshold, or change the pre-processing parameters to better resolve the cell states present in your data.\n\n#### installation:\nto install with pypi:\n```bash\npip install scrublet\n```\n\nto install from source:\n```bash\ngit clone https://github.com/swolock/scrublet.git\ncd scrublet\npip install -r requirements.txt\npip install --upgrade .\n```\n\n#### old versions:\nprevious versions can be found [here](./old_versions/).\n\n#### other doublet detection tools:\n[doubletfinder](https://github.com/chris-mcginnis-ucsf/doubletfinder)  \n[doubletdecon](https://github.com/edepasquale/doubletdecon)  \n[doubletdetection](https://github.com/jonathanshor/doubletdetection)\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "scrublet",
  "package_url": "https://pypi.org/project/scrublet/",
  "project_url": "https://pypi.org/project/scrublet/",
  "project_urls": {
    "Homepage": "https://github.com/swolock/scrublet"
  },
  "release_url": "https://pypi.org/project/scrublet/0.2.3/",
  "requires_dist": [
    "cython",
    "numpy",
    "scipy",
    "scikit-learn",
    "scikit-image",
    "matplotlib",
    "annoy",
    "numba",
    "pandas",
    "umap-learn"
  ],
  "requires_python": "",
  "summary": "doublet prediction in single-cell rna-sequencing data",
  "version": "0.2.3",
  "releases": [],
  "developers": [
    "samuel_l",
    "swolock@gmail.com"
  ],
  "kwds": "doublet_score doublet_scores scrub_doublets predicted_doublets doublets",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_scrublet",
  "homepage": "https://github.com/swolock/scrublet",
  "release_count": 4,
  "dependency_ids": [
    "pypi_annoy",
    "pypi_cython",
    "pypi_matplotlib",
    "pypi_numba",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_scikit_image",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_umap_learn"
  ]
}
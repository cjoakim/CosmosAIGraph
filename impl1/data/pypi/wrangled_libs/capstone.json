{
  "classifiers": [
    "license :: osi approved :: bsd license",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3"
  ],
  "description": "to install capstone, you should run `pip install capstone`.\n\nif you would like to build capstone with just the source distribution, without\npip, just run `python setup.py install` in the folder with setup.py in it.\n\nin order to use this source distribution, you will need an environment that can\ncompile c code. on linux, this is usually easy, but on windows, this involves\ninstalling visual studio and using the \"developer command prompt\" to perform the\ninstallation. see building.txt for more information.\n\nby default, attempting to install the python bindings will trigger a build of\nthe capstone native core. if this is undesirable for whatever reason, for\ninstance, you already have a globally installed copy of libcapstone, you may\ninhibit the build by setting the environment variable libcapstone_path. the\nexact value is not checked, just setting it will inhibit the build. during\nexecution, this variable may be set to the path of a directory containing a\nspecific version of libcapstone you would like to use.\n\nif you don't want to build your own copy of capstone, you can use a precompiled\nbinary distribution from pypi. saying `pip install capstone` should\nautomatically obtain an appropriate copy for your system. if it does not, please\nopen an issue at https://github.com/aquynh/capstone and tag @rhelmot - she\nwill fix this, probably!\n\n--------------------------------------------------------------------------------\n\ncapstone is a disassembly framework with the target of becoming the ultimate\ndisasm engine for binary analysis and reversing in the security community.\n\ncreated by nguyen anh quynh, then developed and maintained by a small community,\ncapstone offers some unparalleled features:\n\n- support multiple hardware architectures: arm, arm64 (armv8), mips, ppc, sparc,\n  systemz, xcore and x86 (including x86_64).\n\n- having clean/simple/lightweight/intuitive architecture-neutral api.\n\n- provide details on disassembled instruction (called \u201cdecomposer\u201d by others).\n\n- provide semantics of the disassembled instruction, such as list of implicit\n  registers read & written.\n\n- implemented in pure c language, with lightweight wrappers for c++, c#, go,\n  java, nodejs, ocaml, python, ruby & vala ready (available in main code,\n  or provided externally by the community).\n\n- native support for all popular platforms: windows, mac osx, ios, android,\n  linux, *bsd, solaris, etc.\n\n- thread-safe by design.\n\n- special support for embedding into firmware or os kernel.\n\n- high performance & suitable for malware analysis (capable of handling various\n  x86 malware tricks).\n\n- distributed under the open source bsd license.\n\nfurther information is available at http://www.capstone-engine.org\n\n\n[license]\n\nthis project is released under the bsd license. if you redistribute the binary\nor source code of capstone, please attach file license.txt with your products.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "capstone",
  "package_url": "https://pypi.org/project/capstone/",
  "project_url": "https://pypi.org/project/capstone/",
  "project_urls": {
    "Homepage": "https://www.capstone-engine.org"
  },
  "release_url": "https://pypi.org/project/capstone/5.0.1/",
  "requires_dist": [],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
  "summary": "capstone disassembly engine",
  "version": "5.0.1",
  "releases": [],
  "developers": [
    "aquynh@gmail.com",
    "nguyen_anh_quynh"
  ],
  "kwds": "libcapstone_path capstone libcapstone pip python",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_capstone",
  "homepage": "https://www.capstone-engine.org",
  "release_count": 18,
  "dependency_ids": []
}
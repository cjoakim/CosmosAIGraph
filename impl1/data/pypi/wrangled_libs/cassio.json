{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "# cassio\n\na framework-agnostic python library to seamlessly integrate apache cassandra with ml/llm/genai workloads.\n\n**note**: this is currently an alpha release.\n\n## users\n\ninstallation is as simple as:\n\n```\npip install cassio\n```\n\nfor example usages and integration with higher-level llm frameworks\nsuch as langchain, please visit [cassio.org](https://cassio.org).\n\n## cassio developers\n\n### setup\n\nto develop `cassio`, use the `requirements-dev.txt`.\n\nto use the dev version in an integration (e.g. your branch of langchain),\n`pip install -e .` in this `cassio` repo from within the virtual environment\nyou are using to develop your integration.\n\n#### poetry\n\nif the integration is poetry-based (e.g. langchain itself), you should get this\nin your `pyproject.toml`:\n\n```\ncassio = {path = \"../../cassio\", develop = true}\n```\n\nthen you do\n\n```\npoetry remove cassio                                      # if necessary\npoetry lock --no-update\npoetry install -e all --with dev --with test_integration  # or similar, this is for langchain\n```\n\n[inspired from this](https://github.com/orgs/python-poetry/discussions/1135).\nyou also need a recent poetry for this to work.\n\n### git flow\n\n_note: this is a rough guide, use your common sense and consider exceptions._\n\n`main` is where versioned releases occur (the corresponding commits are git-tagged\nas `v0.0.7` and similar, parallel to the pypi releases).\n\nplease do not push/pr more than trivial fixes directly to `main`.\n\nfeatures should generally be done on specific branches and merged into `dev`\nfor wider testing. then, with a slower cadence (such as, when releasing),\n`dev` would be merged to `main`.\n\n![git flow](images/git-flow.png)\n\n#### versioning\n\nwe are still at `0.*`. occasional breaking changes are to be expected,\nbut please think carefully. later, a stronger versioning model will be adopted.\n\n### style\n\nstyle is enforced through `black` and linting with `ruff`. we also take\ntype-checking seriously. the code should run through `make format` without\nissues.\n\n### python version coverage\n\nat the moment we try to run tests under python3.8 and python3.10 to try and\ncatch versions-specific issues\n(such as the newer `typing` syntax such as `typea | typeb`, illegal on 3.8).\n\n### publishing\n\n- bump version in setup.py\n- add to `changes.txt`\n- commit the very code that will be built:\n\n```\nmake build\ntwine upload dist/*  # (login to pypi ...)\n```\n\n### testing\n\nplease run tests (and add some coverage for new features). this is not\nenforced other than to your conscience. type `make` for the available tests.\n\nto run the full tests, there's `make test-all`.\n\n#### unit testing\n\nyou need a virtualenv with the `requirements-dev.txt` installed.\n\n```\nmake test-unit\n```\n\n#### integration with the db\n\nyou need a virtualenv with the `requirements-dev.txt` installed.\n\ncreate the db connection settings file, `cp template.testing.env .testing.env`\nand then edit the properties. you need at least one of either astra db or a\ncassandra cluster to use, with vector-search support.\n\nlaunch the tests with either of:\n\n```\nmake test-integration\nmake test-astra-integration\nmake test-cassandra-integration\n```\n\nthe latter two above specify `test_db_mode` as either `local_cassandra` or\n`astra_db`. _ideally you should test with both, since some tests are\nskipped in either case._\n\n\n",
  "docs_url": null,
  "keywords": "cassandra,ai,llm,genai,astradb",
  "license": "license.txt",
  "name": "cassio",
  "package_url": "https://pypi.org/project/cassio/",
  "project_url": "https://pypi.org/project/cassio/",
  "project_urls": {
    "Homepage": "https://github.com/hemidactylus/cassio"
  },
  "release_url": "https://pypi.org/project/cassio/0.1.3/",
  "requires_dist": [
    "cassandra-driver (>=3.28.0)",
    "numpy (>=1.0)",
    "requests (>=2)"
  ],
  "requires_python": ">=3.8",
  "summary": "a framework-agnostic python library to seamlessly integrate apache cassandra(r) with ml/llm/genai workloads.",
  "version": "0.1.3",
  "releases": [],
  "developers": [
    "stefano.lottini@datastax.com",
    "stefano_lottini"
  ],
  "kwds": "local_cassandra cassandra cassio pip python3",
  "license_kwds": "license.txt",
  "libtype": "pypi",
  "id": "pypi_cassio",
  "homepage": "https://github.com/hemidactylus/cassio",
  "release_count": 11,
  "dependency_ids": [
    "pypi_cassandra_driver",
    "pypi_numpy",
    "pypi_requests"
  ]
}
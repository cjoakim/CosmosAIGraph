{
  "classifiers": [
    "license :: osi approved",
    "programming language :: python :: 3",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# pixelmatch-py\n\na fast pixel-level image comparison library, originally created to compare screenshots in tests.\nnow with additional support of pil.image instances\npython port of https://github.com/mapbox/pixelmatch.\n\nfeatures accurate **anti-aliased pixels detection**\nand **perceptual color difference metrics**.\n\n```python\nfrom pixelmatch import pixelmatch\n\nnum_diff_pixels = pixelmatch(img1, img2, 800, 600, diff, threshold=0.1)\n```\n\nimplements ideas from the following papers:\n\n- [measuring perceived color difference using yiq ntsc transmission color space in mobile applications](https://pdfs.semanticscholar.org/cb71/56034b6e427ddc9b5da1a4f5fcb10831c9fd.pdf) (2010, yuriy kotsarenko, fernando ramos)\n- [anti-aliased pixel and intensity slope detector](https://www.researchgate.net/publication/234126755_anti-aliased_pixel_and_intensity_slope_detector) (2009, vytautas vy\u0161niauskas)\n\n## install\n\n```bash\npython -m pip install pixelmatch\n```\n\n## example usage\n\n### pil.image comparison\n\n```python\nfrom pil import image\n\nfrom pixelmatch.contrib.pil import pixelmatch\n\nimg_a = image.open(\"a.png\")\nimg_b = image.open(\"b.png\")\nimg_diff = image.new(\"rgba\", img_a.size)\n\n# note how there is no need to specify dimensions\nmismatch = pixelmatch(img_a, img_b, img_diff, includeaa=true)\n\nimg_diff.save(\"diff.png\")\n```\n\n### raw image data comparison\n\n```python\nfrom pixelmatch import pixelmatch\n\nwidth, height = 1920, 1080\nimg_a = [r1, g1, b1, a1, r2, b2, g2, a2, ...]\nimg_b = [r1, g1, b1, a1, r2, b2, g2, a2, ...]\n\ndata_diff = [0] * len(img_a)\n\nmismatch = pixelmatch(img_a, img_b, width, height, data_diff, includeaa=true)\n```\n\n## api\n\n### pixelmatch(img1, img2, width, height, output, threshold, includeaa, alpha, aa_color, diff_color, diff_mask, fail_fast)\n\n- `img1`, `img2` \u2014 rgba image data of the images to compare. **note:** image dimensions must be equal.\n- `width`, `height` \u2014 width and height of the images.\n- `output` \u2014 image data to write the diff to, or `none` if don't need a diff image. note that _all three images_ need to have the same dimensions.\n- `threshold` \u2014 matching threshold, ranges from `0` to `1`. smaller values make the comparison more sensitive. `0.1` by default.\n- `includeaa` \u2014 if `true`, disables detecting and ignoring anti-aliased pixels. `false` by default.\n- `alpha` \u2014 blending factor of unchanged pixels in the diff output. ranges from `0` for pure white to `1` for original brightness. `0.1` by default.\n- `aa_color` \u2014 the color of anti-aliased pixels in the diff output in `[r, g, b]` format. `[255, 255, 0]` by default.\n- `diff_color` \u2014 the color of differing pixels in the diff output in `[r, g, b]` format. `[255, 0, 0]` by default.\n- `diff_mask` \u2014 draw the diff over a transparent background (a mask), rather than over the original image. will not draw anti-aliased pixels (if detected).\n- `fail_fast` - if true, will return after first different pixel.\n\ncompares two images, writes the output diff and returns the number of mismatched pixels.\n\n### contrib.pil.pixelmatch\n\ncompares two images, writes the output diff and returns the number of mismatched pixels. exact same api as `pixelmatch.pixelmatch` except for the important fact that it takes instances of pil.image for image parameters (`img1`, `img2`, and `output`) and the width/size need not be specified.\n\n## example output\n\n| expected                                                                                                                                  | actual                                                                                                                                    | diff                                                                            |\n| ----------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------- |\n| ![https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/4a.png](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/4a.png) | ![https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/4b.png](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/4b.png) | ![1diff](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/4diff.png) |\n| ![https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/3a.png](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/3a.png) | ![https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/3b.png](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/3b.png) | ![1diff](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/3diff.png) |\n| ![https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/6a.png](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/6a.png) | ![https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/6b.png](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/6b.png) | ![1diff](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/6diff.png) |\n| ![https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/7a.png](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/7a.png) | ![https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/7b.png](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/7b.png) | ![1diff](https://github.com/whtsky/pixelmatch-py/raw/master/fixtures/7diff.png) |\n\n## changelog\n\n### v0.3.0\n\n- feat: add fail_fast option [#144](https://github.com/whtsky/pixelmatch-py/pull/144)\n### v0.2.4\n- type: fix typing issues\n- chore: test python 3.10\n\n### v0.2.3\n\n- feat: make package comply with pep-561\n\n### v0.2.2\n\n- typing: use `sequence` instead of `list` for `rgbtuple`\n- build: switch to `poetry_core` [#81](https://github.com/whtsky/pixelmatch-py/pull/81)\n\n### v0.2.1\n\n- feat: add function to compare pil.image instances through contrib.pil.pixelmatch [#42](https://github.com/whtsky/pixelmatch-py/pull/42)\n\n### v0.2.0\n\n- breaking change: remove `options` parameter [#38](https://github.com/whtsky/pixelmatch-py/pull/38)\n- docs: use absolute url for images in readme\n\n### v0.1.1\n\n- fix: fix bug in fast path [#18](https://github.com/whtsky/pixelmatch-py/pull/18)\n\n### v0.1.0\n\n- initial release\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "isc",
  "name": "pixelmatch",
  "package_url": "https://pypi.org/project/pixelmatch/",
  "project_url": "https://pypi.org/project/pixelmatch/",
  "project_urls": {
    "Homepage": "https://github.com/whtsky/pixelmatch-py",
    "Repository": "https://github.com/whtsky/pixelmatch-py"
  },
  "release_url": "https://pypi.org/project/pixelmatch/0.3.0/",
  "requires_dist": [],
  "requires_python": ">=3.7,<4.0",
  "summary": "a pixel-level image comparison library.",
  "version": "0.3.0",
  "releases": [],
  "developers": [
    "whtsky@gmail.com",
    "wu_haotian"
  ],
  "kwds": "aliased_pixel_and_intensity_slope_detector pixelmatch num_diff_pixels pixels pixel",
  "license_kwds": "isc",
  "libtype": "pypi",
  "id": "pypi_pixelmatch",
  "homepage": "https://github.com/whtsky/pixelmatch-py",
  "release_count": 8,
  "dependency_ids": []
}
{
  "classifiers": [],
  "description": "[![licence](http://img.shields.io/badge/licence-mit-blue.svg?style=flat)](https://github.com/amueller/word_cloud/blob/master/license)\n[![doi](https://zenodo.org/badge/21369/amueller/word_cloud.svg)](https://zenodo.org/badge/latestdoi/21369/amueller/word_cloud)\n\n\nword_cloud\n==========\n\na little word cloud generator in python. read more about it on the [blog\npost][blog-post] or the [website][website].\n\nthe code is tested against python 3.7, 3.8, 3.9, 3.10, 3.11, 3.12.\n\n## installation\n\nif you are using pip:\n\n    pip install wordcloud\n\nif you are using conda, you can install from the `conda-forge` channel:\n\n    conda install -c conda-forge wordcloud\n\n\n#### installation notes\n\nwordcloud depends on `numpy`, `pillow`, and `matplotlib`.\n\nif there are no wheels available for your version of python, installing the\npackage requires having a c compiler set up. before installing a compiler, report\nan issue describing the version of python and operating system being used.\n\n\n## examples\n\ncheck out [examples/simple.py][simple] for a short intro. a sample output is:\n\n![constitution](examples/constitution.png)\n\nor run [examples/masked.py][masked] to see more options. a sample output is:\n\n![alice in wonderland](examples/alice.png)\n\ngetting fancy with some colors:\n![parrot with rainbow colors](examples/parrot_new.png)\n\ngenerating wordclouds for arabic:\n\n![arabic wordlcloud](examples/arabic_example.png)\n\n\n## command-line usage\n\nthe `wordcloud_cli` tool can be used to generate word clouds directly from the command-line:\n\n\t$ wordcloud_cli --text mytext.txt --imagefile wordcloud.png\n\nif you're dealing with pdf files, then `pdftotext`, included by default with many linux distribution, comes in handy:\n\n\t$ pdftotext mydocument.pdf - | wordcloud_cli --imagefile wordcloud.png\n\nin the previous example, the `-` argument orders `pdftotext` to write the resulting text to stdout, which is then piped to the stdin of `wordcloud_cli.py`.\n\nuse `wordcloud_cli --help` so see all available options.\n\n[blog-post]: http://peekaboo-vision.blogspot.de/2012/11/a-wordcloud-in-python.html\n[website]: http://amueller.github.io/word_cloud/\n[simple]: examples/simple.py\n[masked]: examples/masked.py\n[reddit-cloud]: https://github.com/amueller/reddit-cloud\n[wc2]: http://www.reddit.com/user/wordcloudbot2\n[wc2top]: http://www.reddit.com/user/wordcloudbot2/?sort=top\n[chat-stats]: https://github.com/popcorncolonel/chat_stats\n[twitter-word-cloud-bot]: https://github.com/defacto133/twitter-wordcloud-bot\n[twitter-wordnuvola]: https://twitter.com/wordnuvola\n[imgur-wordnuvola]: http://defacto133.imgur.com/all/\n[intprob]: http://peekaboo-vision.blogspot.de/2012/11/a-wordcloud-in-python.html#bc_0_28b\n\n\n## licensing\nthe wordcloud library is mit licenced, but contains droidsansmono.ttf, a true type font by google, that is apache licensed.\nthe font is by no means integral, and any other font can be used by setting the ``font_path`` variable when creating a ``wordcloud`` object.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "wordcloud",
  "package_url": "https://pypi.org/project/wordcloud/",
  "project_url": "https://pypi.org/project/wordcloud/",
  "project_urls": {
    "Homepage": "https://github.com/amueller/word_cloud"
  },
  "release_url": "https://pypi.org/project/wordcloud/1.9.3/",
  "requires_dist": [
    "numpy >=1.6.1",
    "pillow",
    "matplotlib"
  ],
  "requires_python": ">=3.7",
  "summary": "a little word cloud generator",
  "version": "1.9.3",
  "releases": [],
  "developers": [
    "t3kcit+wordcloud@gmail.com"
  ],
  "kwds": "word_cloud wordcloudbot2 wordclouds wordcloud wordcloud_cli",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_wordcloud",
  "homepage": "",
  "release_count": 20,
  "dependency_ids": [
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_pillow"
  ]
}
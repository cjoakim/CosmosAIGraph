{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.2",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": ".. _background:\n\nbackground\n----------\n\n`libmagic <http://www.darwinsys.com/file/>`_ is the library that commonly\nsupports the *file* command on unix system, other than max osx which has its\nown implementation. the library handles the loading of *database* files that\ndescribe the magic numbers used to identify various file types, as well as the\nassociated mime types. the library also handles character set detections.\n\n.. _installation:\n\ninstallation\n------------\n\nbefore installing *filemagic*, the *libmagic* library will need to be\navailabile.  to test this is the check for the presence of the *file* command\nand/or the *libmagic* man page. ::\n\n    $ which file\n    $ man libmagic\n\non mac osx, apple has implemented their own version of the file command.\nhowever, *libmagic* can be installed using `homebrew\n<https://github.com/mxcl/homebrew>`_ ::\n\n    $ brew install libmagic\n\nafter *brew* finished installing, the test for the *libmagic* man page should\npass.\n\nnow that the presence of *libmagic* has been confirmed, use `pip\n<http://pypi.python.org/pypi/pip>`_ to install filemagic. ::\n\n    $ pip install filemagic\n\nthe *magic* module should now be availabe from the python shell. ::\n\n    >>> import magic\n\nthe next section will describe how to use the *magic.magic* class to\nidentify file types.\n\n.. _usage:\n\nusage\n-----\n\nthe *magic* module uses `ctypes\n<http://docs.python.org/dev/library/ctypes.html>`_ to wrap the primitives from\n*libmagic* in the more user friendly *magic.magic* class. this class\nhandles initialization, loading databases and the release of resources. ::\n\n    >>> import magic\n\nto ensure that resources are correctly released by *magic.magic*, it's\nnecessary to either explicitly call *magic.magic.close* on instances,\nor use ``with`` statement. ::\n\n    >>> with magic.magic() as m:\n    ...     pass\n    ...\n\n*magic.magic* supports context managers which ensures resources are\ncorrectly released at the end of the ``with`` statements irrespective of any\nexceptions.\n\nto identify a file from it's filename, use the\n*magic.magic.id_filename()* method. ::\n\n    >>> with magic.magic() as m:\n    ...     m.id_filename('setup.py')\n    ...\n    'python script, ascii text executable'\n\nsimilarily to identify a file from a string that has already been read, use the\n*magic.magic.id_buffer* method. ::\n\n    >>> with magic.magic() as m:\n    ...     m.id_buffer('#!/usr/bin/python\\n')\n    ...\n    'python script, ascii text executable'\n\nto identify with mime type, rather than a textual description, pass the\n*magic.magic_mime_type* flag when creating the *magic.magic*\ninstance.  ::\n\n    >>> with magic.magic(flags=magic.magic_mime_type) as m:\n    ...     m.id_filename('setup.py')\n    ...\n    'text/x-python'\n\nsimilarily, *magic.magic_mime_encoding* can be passed to return the\nencoding type. ::\n\n    >>> with magic.magic(flags=magic.magic_mime_encoding) as m:\n    ...     m.id_filename('setup.py')\n    ...\n    'us-ascii'\n\n.. _unicode:\n\nmemory management\n-----------------\n\nthe *libmagic* library allocates memory for its own use outside that python.\nthis memory needs to be released when a *magic.magic* instance is no\nlonger needed. the preferred way to doing this is to explicitly call the\n*magic.magic.close* method or use the ``with`` statement, as\ndescribed above.\n\nstarting with version 1.4 *magic.magic* this memory will be\nautomatically cleaned up when the instance is garbage collected. however,\nunlike cpython, some python interpreters such as `pypy <http://pypy.org>`_,\n`jython <http://jython.org>`_ and `ironpython <http://ironpython.net>`_ do\nnot have deterministic garbage collection. because of this, *filemagic* will\nissue a warning if it automatically cleans up resources.\n\nunicode and filemagic\n---------------------\n\non both python2 and python3, *magic.magic*'s methods will encode any\nunicode objects (the default string type for python3) to byte strings before\nbeing passed to *libmagic*. on python3, returned strings will be decoded to\nunicode using the default encoding type. the user **should not** be concerned\nwhether unicode or bytes are passed to *magic.magic* methods. however,\nthe user **will** need to be aware that returned strings are always unicode on\npython3 and byte strings on python2.\n\n.. _issues:\n\nreporting issues\n----------------\n\nthe source code for *filemagic* is hosted on\n`github <https://github.com/aliles/filemagic>`_.\nproblems can be reported using github's\n`issues tracking <https://github.com/aliles/filemagic/issues>`_ system.\n\n*filemagic* has been tested against *libmagic* 5.11. continuous integration\nis provided by `travis ci <http://travis-ci.org>`_. the current build status\nis |build_status|.\n\n.. |build_status| image:: https://secure.travis-ci.org/aliles/filemagic.png?branch=master\n   :target: http://travis-ci.org/#!/aliles/filemagic",
  "docs_url": null,
  "keywords": "",
  "license": "asl",
  "name": "filemagic",
  "package_url": "https://pypi.org/project/filemagic/",
  "project_url": "https://pypi.org/project/filemagic/",
  "project_urls": {
    "Download": "UNKNOWN",
    "Homepage": "http://filemagic.readthedocs.org"
  },
  "release_url": "https://pypi.org/project/filemagic/1.6/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "a python api for libmagic, the library behind the unix file command",
  "version": "1.6",
  "releases": [],
  "developers": [
    "aaron.iles@gmail.com",
    "aaron_iles"
  ],
  "kwds": "libmagic magic_mime_encoding magic_mime_type filemagic osx",
  "license_kwds": "asl",
  "libtype": "pypi",
  "id": "pypi_filemagic",
  "homepage": "http://filemagic.readthedocs.org",
  "release_count": 7,
  "dependency_ids": []
}
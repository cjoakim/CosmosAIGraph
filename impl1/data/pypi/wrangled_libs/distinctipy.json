{
  "classifiers": [
    "framework :: matplotlib",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "topic :: multimedia :: graphics",
    "topic :: scientific/engineering :: visualization",
    "topic :: utilities"
  ],
  "description": "![distinctipy logo](https://raw.githubusercontent.com/alan-turing-institute/distinctipy/main/distinctipy_logo.png)\n\n![tests](https://github.com/alan-turing-institute/distinctipy/workflows/tests/badge.svg)\n![build](https://github.com/alan-turing-institute/distinctipy/workflows/build/badge.svg)\n[![codecov](https://codecov.io/gh/alan-turing-institute/distinctipy/branch/main/graph/badge.svg)](https://codecov.io/gh/alan-turing-institute/distinctipy)\n[![doi](https://zenodo.org/badge/188444660.svg)](https://zenodo.org/badge/latestdoi/188444660)\n[![documentation status](https://readthedocs.org/projects/distinctipy/badge/?version=latest)](https://distinctipy.readthedocs.io/en/latest/?badge=latest)\n\n_distinctipy_ is a lightweight python package providing functions to generate\ncolours that are visually distinct from one another.\n\ncommonly available qualitative colormaps provided by the likes of matplotlib\ngenerally have no more than 20 colours, but for some applications it is useful\nto have many more colours that are clearly different from one another.\n_distinctipy_ can generate lists of colours of any length, with each new colour\nadded to the list being as visually distinct from the pre-existing colours in\nthe list as possible.\n\n## installation\n\n_distinctipy_ is designed for python 3 and can be installed with pip by running:\n\n```shell\npython -m pip install distinctipy\n```\n\nalternatively clone the repo and install it locally:\n\n```shell\ngit clone https://github.com/alan-turing-institute/distinctipy.git\ncd distinctipy\npython -m pip install .\n```\n\n### optional dependencies\n\nstarting in version 1.2.1 `distinctipy` no longer bundles `matplotlib`, `pandas` or dev dependencies in the default installation. if you wish to view\ncolours (e.g. with `distinctipy.color_swatch`) or examples you will need `matplotlib` and `pandas` installed. to do this, either install `distinctipy`\nwith the optional flag:\n\n```bash\npython -m pip install distinctipy[optional]\n```\n\nor install them separately:\n\n```bash\npython -m pip install matplotlib pandas\n```\n\nfor developers, to install the stack needed to run tests, generate docs etc. use the `[all]` flag:\n\n```bash\npython -m pip install distinctipy[all]\n```\n\n## usage and examples\n\n_distinctipy_ can:\n\n- generate n visually distinct colours: `distinctipy.get_colors(n)`\n- generate colours that are distinct from an existing list of colours: `distinctipy.get_colors(n, existing_colors)`\n- generate pastel colours: `distinctipy.get_colors(n, pastel_factor=0.7)`\n- select black or white as the best font colour for any background colour: `distinctipy.get_text_color(background_color)`\n- convert lists of colours into matplotlib colormaps: `distinctipy.get_colormap(colors)`\n- invert colours: `distinctipy.invert_colors(colors)`\n- nicely display generated colours: `distinctipy.color_swatch(colors)`\n- compare distinctipy colours to other common colormaps: `examples.compare_clusters()` and `examples.compare_colors()`\n- simulate how colours look for someone with colourblindness: `colorblind.simulate_colors(colors, colorblind_type='deuteranomaly')`\n- attempt to generate colours as distinct as possible for someone with colourblindness `distinctipy.get_colors(n, existing_colors, colorblind_type=\"deuteranomaly\")`\n\nfor example, to create and then display n = 36 visually distinct colours:\n\n```python\nimport distinctipy\n\n# number of colours to generate\nn = 36\n\n# generate n visually distinct colours\ncolors = distinctipy.get_colors(n)\n\n# display the colours\ndistinctipy.color_swatch(colors)\n```\n\nmore detailed usage and example output can be found in the notebook **[examples.ipynb](https://github.com/alan-turing-institute/distinctipy/blob/main/examples.ipynb)** and **[examples gallery](https://github.com/alan-turing-institute/distinctipy/tree/main/examples)**.\n\n## references\n\n_distinctipy_ was heavily influenced and inspired by several web sources and\nstack overflow answers. in particular:\n\n- **random generation of distinct colours:** [andrew dewes on github](https://gist.github.com/adewes/5884820)\n- **colour distance metric:** [thiadmer riemersma at compuphase](https://www.compuphase.com/cmetric.htm)\n- **best text colour for background:** [mark ransom on stack overflow](https://stackoverflow.com/a/3943023)\n- **colourblindness filters:** [matthew wickline and the human-computer interaction resource network](http://web.archive.org/web/20090318054431/http://www.nofunc.com/color_blindness_library) (web archive)\n\n## citing distinctipy\n\nif you would like to cite distinctipy, please refer to the upload of the package on zenodo: https://doi.org/10.5281/zenodo.3985191\n",
  "docs_url": null,
  "keywords": "color colour palette colormap colorblind colourblind",
  "license": "",
  "name": "distinctipy",
  "package_url": "https://pypi.org/project/distinctipy/",
  "project_url": "https://pypi.org/project/distinctipy/",
  "project_urls": {
    "Homepage": "https://github.com/alan-turing-institute/distinctipy"
  },
  "release_url": "https://pypi.org/project/distinctipy/1.2.3/",
  "requires_dist": [
    "numpy",
    "numpy ; extra == 'all'",
    "black ; extra == 'all'",
    "codecov ; extra == 'all'",
    "coverage ; extra == 'all'",
    "flake8 ; extra == 'all'",
    "isort ; extra == 'all'",
    "pytest ; extra == 'all'",
    "pytest-cov ; extra == 'all'",
    "pandas ; extra == 'all'",
    "matplotlib ; extra == 'all'",
    "sphinx-rtd-theme ; extra == 'all'",
    "nbsphinx ; extra == 'all'",
    "ipython ; extra == 'all'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "nbsphinx ; extra == 'docs'",
    "ipython ; extra == 'docs'",
    "pandas ; extra == 'optional'",
    "matplotlib ; extra == 'optional'",
    "black ; extra == 'tests'",
    "codecov ; extra == 'tests'",
    "coverage ; extra == 'tests'",
    "flake8 ; extra == 'tests'",
    "isort ; extra == 'tests'",
    "pytest ; extra == 'tests'",
    "pytest-cov ; extra == 'tests'"
  ],
  "requires_python": "",
  "summary": "a lightweight package for generating visually distinct colours.",
  "version": "1.2.3",
  "releases": [],
  "developers": [
    "jack_roberts",
    "jroberts@turing.ac.uk"
  ],
  "kwds": "distinctipy_logo documentation doi color_blindness_library colormaps",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_distinctipy",
  "homepage": "https://github.com/alan-turing-institute/distinctipy",
  "release_count": 13,
  "dependency_ids": [
    "pypi_black",
    "pypi_codecov",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_ipython",
    "pypi_isort",
    "pypi_matplotlib",
    "pypi_nbsphinx",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_sphinx_rtd_theme"
  ]
}
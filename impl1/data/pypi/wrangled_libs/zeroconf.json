{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: gnu lesser general public license v2 (lgplv2)",
    "license :: other/proprietary license",
    "operating system :: macos :: macos x",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries"
  ],
  "description": "python-zeroconf\n===============\n\n.. image:: https://github.com/python-zeroconf/python-zeroconf/workflows/ci/badge.svg\n   :target: https://github.com/python-zeroconf/python-zeroconf?query=workflow%3aci+branch%3amaster\n\n.. image:: https://img.shields.io/pypi/v/zeroconf.svg\n    :target: https://pypi.python.org/pypi/zeroconf\n\n.. image:: https://codecov.io/gh/python-zeroconf/python-zeroconf/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/python-zeroconf/python-zeroconf\n\n`documentation <https://python-zeroconf.readthedocs.io/en/latest/>`_.\n\nthis is fork of pyzeroconf, multicast dns service discovery for python,\noriginally by paul scott-murphy (https://github.com/paulsm/pyzeroconf),\nmodified by william mcbrine (https://github.com/wmcbrine/pyzeroconf).\n\nthe original william mcbrine's fork note::\n\n    this fork is used in all of my tivo-related projects: hme for python\n    (and therefore hme/vlc), network remote, remote proxy, and pytivo.\n    before this, i was tracking the changes for zeroconf.py in three\n    separate repos. i figured i should have an authoritative source.\n\n    although i make changes based on my experience with tivos, i expect that\n    they're generally applicable. this version also includes patches found\n    on the now-defunct (?) launchpad repo of pyzeroconf, and elsewhere\n    around the net -- not always well-documented, sorry.\n\ncompatible with:\n\n* bonjour\n* avahi\n\ncompared to some other zeroconf/bonjour/avahi python packages, python-zeroconf:\n\n* isn't tied to bonjour or avahi\n* doesn't use d-bus\n* doesn't force you to use particular event loop or twisted (asyncio is used under the hood but not required)\n* is pip-installable\n* has pypi distribution\n* has an optional cython extension for performance (pure python is supported as well)\n\npython compatibility\n--------------------\n\n* cpython 3.7+\n* pypy3.7 7.3+\n\nversioning\n----------\n\nthis project uses semantic versioning.\n\nstatus\n------\n\nthis project is actively maintained.\n\ntraffic reduction\n-----------------\n\nbefore version 0.32, most traffic reduction techniques described in https://datatracker.ietf.org/doc/html/rfc6762#section-7\nwhere not implemented which could lead to excessive network traffic.  it is highly recommended that version 0.32 or later\nis used if this is a concern.\n\nipv6 support\n------------\n\nipv6 support is relatively new and currently limited, specifically:\n\n* `interfacechoice.all` is an alias for `interfacechoice.default` on non-posix\n  systems.\n* dual-stack ipv6 sockets are used, which may not be supported everywhere (some\n  bsd variants do not have them).\n* listening on localhost (`::1`) does not work. help with understanding why is\n  appreciated.\n\nhow to get python-zeroconf?\n===========================\n\n* pypi page https://pypi.org/project/zeroconf/\n* github project https://github.com/python-zeroconf/python-zeroconf\n\nthe easiest way to install python-zeroconf is using pip::\n\n    pip install zeroconf\n\n\n\nhow do i use it?\n================\n\nhere's an example of browsing for a service:\n\n.. code-block:: python\n\n    from zeroconf import servicebrowser, servicelistener, zeroconf\n\n\n    class mylistener(servicelistener):\n\n        def update_service(self, zc: zeroconf, type_: str, name: str) -> none:\n            print(f\"service {name} updated\")\n\n        def remove_service(self, zc: zeroconf, type_: str, name: str) -> none:\n            print(f\"service {name} removed\")\n\n        def add_service(self, zc: zeroconf, type_: str, name: str) -> none:\n            info = zc.get_service_info(type_, name)\n            print(f\"service {name} added, service info: {info}\")\n\n\n    zeroconf = zeroconf()\n    listener = mylistener()\n    browser = servicebrowser(zeroconf, \"_http._tcp.local.\", listener)\n    try:\n        input(\"press enter to exit...\\n\\n\")\n    finally:\n        zeroconf.close()\n\n.. note::\n\n    discovery and service registration use *all* available network interfaces by default.\n    if you want to customize that you need to specify ``interfaces`` argument when\n    constructing ``zeroconf`` object (see the code for details).\n\nif you don't know the name of the service you need to browse for, try:\n\n.. code-block:: python\n\n    from zeroconf import zeroconfservicetypes\n    print('\\n'.join(zeroconfservicetypes.find()))\n\nsee examples directory for more.\n\nchangelog\n=========\n\n`changelog <changelog.md>`_\n\nlicense\n=======\n\nlgpl, see copying file for details.\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "lgpl",
  "name": "zeroconf",
  "package_url": "https://pypi.org/project/zeroconf/",
  "project_url": "https://pypi.org/project/zeroconf/",
  "project_urls": {
    "Bug Tracker": "https://github.com/python-zeroconf/python-zeroconf/issues",
    "Changelog": "https://github.com/python-zeroconf/python-zeroconf/blob/master/CHANGELOG.md",
    "Documentation": "https://python-zeroconf.readthedocs.io",
    "Homepage": "https://github.com/python-zeroconf/python-zeroconf",
    "Repository": "https://github.com/python-zeroconf/python-zeroconf"
  },
  "release_url": "https://pypi.org/project/zeroconf/0.131.0/",
  "requires_dist": [
    "async-timeout (>=3.0.0) ; python_version < \"3.11\"",
    "ifaddr (>=0.1.7)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "a pure python implementation of multicast dns service discovery",
  "version": "0.131.0",
  "releases": [],
  "developers": [
    "paul_scott"
  ],
  "kwds": "zeroconf pyzeroconf zeroconfservicetypes pypy3 pip",
  "license_kwds": "lgpl",
  "libtype": "pypi",
  "id": "pypi_zeroconf",
  "homepage": "https://github.com/python-zeroconf/python-zeroconf",
  "release_count": 211,
  "dependency_ids": [
    "pypi_async_timeout",
    "pypi_ifaddr"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "framework :: django :: 5.0",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http",
    "topic :: software development :: libraries"
  ],
  "description": "# django-tables2 - an app for creating html tables\n\n[![latest pypi version](https://badge.fury.io/py/django-tables2.svg)](https://pypi.python.org/pypi/django-tables2)\n[![any color you like](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\ndjango-tables2 simplifies the task of turning sets of data into html tables. it\nhas native support for pagination and sorting. it does for html tables what\n`django.forms` does for html forms. e.g.\n\n- available on pypi as [django-tables2](https://pypi.python.org/pypi/django-tables2)\n- tested against currently supported versions of django\n  [and supported python 3 versions django supports](https://docs.djangoproject.com/en/dev/faq/install/#what-python-version-can-i-use-with-django).\n- [documentation on readthedocs.org](https://django-tables2.readthedocs.io/en/latest/)\n- [bug tracker](http://github.com/jieter/django-tables2/issues)\n\nfeatures:\n\n- any iterable can be a data-source, but special support for django `querysets` is included.\n- the builtin ui does not rely on javascript.\n- support for automatic table generation based on a django model.\n- supports custom column functionality via subclassing.\n- pagination.\n- column based table sorting.\n- template tag to enable trivial rendering to html.\n- generic view mixin.\n\n![an example table rendered using django-tables2](https://cdn.rawgit.com/jieter/django-tables2/master/docs/img/example.png)\n\n![an example table rendered using django-tables2 and bootstrap theme](https://cdn.rawgit.com/jieter/django-tables2/master/docs/img/bootstrap.png)\n\n![an example table rendered using django-tables2 and semantic-ui theme](\nhttps://cdn.rawgit.com/jieter/django-tables2/master/docs/img/semantic.png)\n\n## example\n\nstart by adding `django_tables2` to your `installed_apps` setting like this:\n\n```python\ninstalled_apps = (\n    ...,\n    \"django_tables2\",\n)\n```\n\ncreating a table for a model `simple` is as simple as:\n\n```python\nimport django_tables2 as tables\n\nclass simpletable(tables.table):\n    class meta:\n        model = simple\n```\nthis would then be used in a view:\n\n```python\nclass tableview(tables.singletableview):\n    table_class = simpletable\n    queryset = simple.objects.all()\n    template_name = \"simple_list.html\"\n```\nand finally in the template:\n\n```\n{% load django_tables2 %}\n{% render_table table %}\n```\n\nthis example shows one of the simplest cases, but django-tables2 can do a lot more!\ncheck out the [documentation](https://django-tables2.readthedocs.io/en/latest/) for more details.\n",
  "docs_url": null,
  "keywords": "",
  "license": "simplified bsd",
  "name": "django-tables2",
  "package_url": "https://pypi.org/project/django-tables2/",
  "project_url": "https://pypi.org/project/django-tables2/",
  "project_urls": {
    "Homepage": "https://github.com/jieter/django-tables2/"
  },
  "release_url": "https://pypi.org/project/django-tables2/2.7.0/",
  "requires_dist": [
    "Django >=3.2",
    "tablib ; extra == 'tablib'"
  ],
  "requires_python": "",
  "summary": "table/data-grid framework for django",
  "version": "2.7.0",
  "releases": [],
  "developers": [
    "bradley.ayers@gmail.com",
    "bradley_ayers"
  ],
  "kwds": "django_tables2 django djangoproject render_table tables",
  "license_kwds": "simplified bsd",
  "libtype": "pypi",
  "id": "pypi_django_tables2",
  "homepage": "https://github.com/jieter/django-tables2/",
  "release_count": 126,
  "dependency_ids": [
    "pypi_django",
    "pypi_tablib"
  ]
}
{
  "classifiers": [],
  "description": "# piqp\n\n[![doi](https://img.shields.io/badge/doi-10.48550/arxiv.2304.00290-green.svg)](https://doi.org/10.48550/arxiv.2304.00290)\n[![preprint](https://img.shields.io/badge/preprint-arxiv-blue.svg)](https://arxiv.org/abs/2304.00290)\n[![funding](https://img.shields.io/badge/grant-nccr%20automation%20(51nf40__180545)-90e3dc.svg)](https://nccr-automation.ch/)\n\n[![docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://predict-epfl.github.io/piqp/)\n![license](https://img.shields.io/badge/license-bsd--2--clause-brightgreen.svg)\n[![pypi - downloads](https://img.shields.io/pypi/dm/piqp.svg?label=pypi%20downloads)](https://pypi.org/project/piqp/)\n[![conda - downloads](https://img.shields.io/conda/dn/conda-forge/piqp.svg?label=conda%20downloads)](https://anaconda.org/conda-forge/piqp)\n\npiqp is a proximal interior point quadratic programming solver, which can solve dense and sparse quadratic programs of the form\n\n$$\n\\begin{aligned}\n\\min_{x} \\quad & \\frac{1}{2} x^\\top p x + c^\\top x \\\\\n\\text {s.t.}\\quad & ax=b, \\\\\n& gx \\leq h, \\\\\n& x_{lb} \\leq x \\leq x_{ub},\n\\end{aligned}\n$$\n\ncombining an infeasible interior point method with the proximal method of multipliers, the algorithm can handle ill-conditioned convex qp problems without the need for linear independence of the constraints.\n\n## features\n\n* piqp is written in header only c++ 14 leveraging the [eigen](https://eigen.tuxfamily.org/index.php?title=main_page) library for vectorized linear algebra.\n* dense and sparse problem formulations are supported. for small dense problems, vectorized instructions and cache locality can be exploited more efficiently.\n* interface to python with many more to follow.\n* allocation free problem updates and re-solves.\n* open source under the bsd 2-clause license.\n\n## interfaces\n\npiqp support a wide range of interfaces including\n* c/c++ (with eigen support)\n* python\n* matlab\n* r\n* julia (soon)\n* rust (soon)\n\n## credits\n\npiqp is developed by the following people:\n* roland schwan (main developer)\n* yuning jiang (methods and maths)\n* daniel kuhn (methods and maths)\n* colin n. jones (methods and maths)\n\nall contributors are affiliated with the [laboratoire d'automatique](https://www.epfl.ch/labs/la/) and/or the [risk analytics and optimization chair](https://www.epfl.ch/labs/rao/) at [epfl](https://www.epfl.ch/), switzerland.\n\nthis work was supported by the [swiss national science foundation](https://www.snf.ch/) under the [nccr automation](https://nccr-automation.ch/) (grant agreement 51nf40_180545).\n\npiqp is an adapted implementation of [work](https://link.springer.com/article/10.1007/s10589-020-00240-9) by spyridon pougkakiotis and jacek gondzio, and is built on the following open-source libraries:\n* [eigen](https://eigen.tuxfamily.org/index.php?title=main_page): it's the work horse under the hood, responsible for producing optimized numerical linear algebra code.\n* [proxsuite](https://github.com/simple-robotics/proxsuite): the code structure (folder/namespace structure, etc.), some utility functions/helper macros, and the instruction set optimized python bindings are based on proxsuite.\n* [suitesparse - ldl](https://github.com/drtimothyaldendavis/suitesparse) (modified version): used for solving linear systems in the sparse solver.\n* [pybind11](https://github.com/pybind/pybind11): used for generating the python bindings.\n* [cpu_features](https://github.com/google/cpu_features): used for run-time instruction set detection in the interface bindings.\n* [osqp](https://github.com/osqp/osqp): the c and matlab interface is inspired by osqp.\n* [clarabel](https://github.com/oxfordcontrol/clarabel.rs): parts of the iterative refinement scheme are inspired by clarabel's implementation.\n\n## citing our work\n\nif you found piqp useful in your scientific work, we encourage you to cite our accompanying paper:\n```\n@misc{schwan2023,\n    author = {schwan, roland and jiang, yuning and kuhn, daniel and jones, colin n.},\n    title = {piqp: a proximal interior-point quadratic programming solver},\n    year = {2023},\n    eprint = {arxiv:2304.00290},\n}\n```\nthe benchmarks are available in the following repo: [piqp_benchmarks](https://github.com/predict-epfl/piqp_benchmarks)\n\n## license\n\npiqp is licensed under the bsd 2-clause license.\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd-2-clause",
  "name": "piqp",
  "package_url": "https://pypi.org/project/piqp/",
  "project_url": "https://pypi.org/project/piqp/",
  "project_urls": {
    "Homepage": "https://github.com/PREDICT-EPFL/piqp"
  },
  "release_url": "https://pypi.org/project/piqp/0.2.4/",
  "requires_dist": [
    "pytest >=6.0 ; extra == 'test'",
    "numpy ; extra == 'test'",
    "scipy ; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "a proximal interior point quadratic programming solver",
  "version": "0.2.4",
  "releases": [],
  "developers": [
    "roland.schwan@epfl.ch",
    "roland_schwan"
  ],
  "kwds": "piqp badge arxiv piqp_benchmarks nccr",
  "license_kwds": "bsd-2-clause",
  "libtype": "pypi",
  "id": "pypi_piqp",
  "homepage": "https://github.com/predict-epfl/piqp",
  "release_count": 9,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_pytest",
    "pypi_scipy"
  ]
}
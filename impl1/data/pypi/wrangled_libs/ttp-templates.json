{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: posix :: linux",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: utilities"
  ],
  "description": "[![downloads](https://pepy.tech/badge/ttp_templates)](https://pepy.tech/project/ttp_templates)\n[![pypi versions](https://img.shields.io/pypi/pyversions/ttp.svg)](https://pypi.python.org/pypi/ttp_templates/)\n\n# template text parser templates\n\nthis repository contains a collection of [ttp](https://github.com/dmulyalin/ttp) templates.\n\nif you solved a problem using ttp and feel that your work can be useful to other people, feel\nfree to raise an issue or submit pull request to include your template(s) in this repository.\nrefer to [contribute guide](https://dmulyalin.github.io/ttp_templates/contribute/) for details.\n\ndocumentation: [https://dmulyalin.github.io/ttp_templates/](https://dmulyalin.github.io/ttp_templates/)\n\nrepository: [https://github.com/dmulyalin/ttp_templates](https://github.com/dmulyalin/ttp_templates)\n\nttp: [https://ttp.readthedocs.io/](https://ttp.readthedocs.io/)\n\n## installation\n\nfrom pypi:\n\n`pip install ttp-templates`\n\nor latest from github master branch (need git installed on the system):\n\n`pip install git+https://github.com/dmulyalin/ttp_templates.git`\n\n## sample usage\n\nthis example demonstrates how to parse `test platform` output for `show run | sec interface` command using `platform/test_platform_show_run_pipe_sec_interface.txt` template.\n<details><summary>code</summary>\n\n```python\nfrom ttp_templates import parse_output\nimport pprint\n\ndata = \"\"\"\ninterface gigabitethernet1/3.251\n description customer #32148\n encapsulation dot1q 251\n ip address 172.16.33.10 255.255.255.128\n shutdown\n!\ninterface gigabitethernet1/3.251\n description customer #32148\n encapsulation dot1q 251\n ip address 172.16.33.10 255.255.255.128\n shutdown\n\"\"\"\n\nresult = parse_output(\n    data=data,\n    platform=\"test platform\",\n    command=\"show run | sec interface\"\n)\n\npprint.pprint(result)\n\n# prints:\n# [[[{'description': 'customer #32148',\n#     'disabled': true,\n#     'dot1q': '251',\n#     'interface': 'gigabitethernet1/3.251',\n#     'ip': '172.16.33.10',\n#     'mask': '255.255.255.128'},\n#    {'description': 'customer #32148',\n#     'disabled': true,\n#     'dot1q': '251',\n#     'interface': 'gigabitethernet1/3.251',\n#     'ip': '172.16.33.10',\n#     'mask': '255.255.255.128'}]]]\n```\n</details>\n\nsample code to parse `cisco ios` output in a structure compatible with `ietf-interfaces` yang module.\n<details><summary>code</summary>\n\n```python\nfrom ttp_templates import get_template\nfrom ttp import ttp\nimport pprint\n\ndata1 = \"\"\"\ninterface gigabitethernet1/3.251\n description customer #32148\n encapsulation dot1q 251\n ip address 172.16.33.10 255.255.255.128\n shutdown\n!\ninterface gigabitethernet1/4\n description vcpes access control\n ip address 172.16.33.10 255.255.255.128\n!\n\"\"\"\ndata2 = \"\"\"\ninterface gigabitethernet1/5\n description works data\n ip mtu 9000\n!\ninterface gigabitethernet1/7\n description works data v6\n ipv6 address 2001::1/64\n ipv6 address 2001:1::1/64\n\"\"\"\n\ntemplate = get_template(yang=\"ietf-interfaces\", platform=\"cisco_ios\")\nparser = ttp(template=template)\n\nparser.add_input(data1)\nparser.add_input(data2)\n\nparser.parse()\nres = parser.result()\npprint.pprint(res)\n\n# prints:\n# [{'comment': '',\n#   'exception': {},\n#   'result': [{'ietf-interfaces:interfaces': {'interface': [{'admin-status': 'down',\n#                                                             'description': 'customer '\n#                                                                            '#32148',\n#                                                             'enabled': false,\n#                                                             'ietf-ip:ipv4': {'address': [{'ip': '172.16.33.10',\n#                                                                                           'netmask': '255.255.255.128',\n#                                                                                           'origin': 'static'}]},\n#                                                             'if-index': 1,\n#                                                             'link-up-down-trap-enable': 'enabled',\n#                                                             'name': 'gigabitethernet1/3.251',\n#                                                             'oper-status': 'unknown',\n#                                                             'statistics': {'discontinuity-time': '1970-01-01t00:00:00+00:00'},\n#                                                             'type': 'iana-if-type:ethernetcsmacd'},\n#                                                            {'admin-status': 'up',\n#                                                             'description': 'vcpes '\n#                                                                            'access '\n#                                                                            'control',\n#                                                             'enabled': true,\n#                                                             'ietf-ip:ipv4': {'address': [{'ip': '172.16.33.10',\n#                                                                                           'netmask': '255.255.255.128',\n#                                                                                           'origin': 'static'}]},\n#                                                             'if-index': 1,\n#                                                             'link-up-down-trap-enable': 'enabled',\n#                                                             'name': 'gigabitethernet1/4',\n#                                                             'oper-status': 'unknown',\n#                                                             'statistics': {'discontinuity-time': '1970-01-01t00:00:00+00:00'},\n#                                                             'type': 'iana-if-type:ethernetcsmacd'}]}},\n#              {'ietf-interfaces:interfaces': {'interface': [{'admin-status': 'up',\n#                                                             'description': 'works '\n#                                                                            'data',\n#                                                             'enabled': true,\n#                                                             'ietf-ip:ipv4': {'mtu': 9000},\n#                                                             'if-index': 1,\n#                                                             'link-up-down-trap-enable': 'enabled',\n#                                                             'name': 'gigabitethernet1/5',\n#                                                             'oper-status': 'unknown',\n#                                                             'statistics': {'discontinuity-time': '1970-01-01t00:00:00+00:00'},\n#                                                             'type': 'iana-if-type:ethernetcsmacd'},\n#                                                            {'admin-status': 'up',\n#                                                             'description': 'works '\n#                                                                            'data '\n#                                                                            'v6',\n#                                                             'enabled': true,\n#                                                             'ietf-ip:ipv6': {'address': [{'ip': '2001::1',\n#                                                                                           'origin': 'static',\n#                                                                                           'prefix-length': 64},\n#                                                                                          {'ip': '2001:1::1',\n#                                                                                           'origin': 'static',\n#                                                                                           'prefix-length': 64}]},\n#                                                             'if-index': 1,\n#                                                             'link-up-down-trap-enable': 'enabled',\n#                                                             'name': 'gigabitethernet1/7',\n#                                                             'oper-status': 'unknown',\n#                                                             'statistics': {'discontinuity-time': '1970-01-01t00:00:00+00:00'},\n#                                                             'type': 'iana-if-type:ethernetcsmacd'}]}}],\n#   'valid': {0: true, 1: true}}]\n```\n</details>\n\n## how templates collections structured\n\nthis repository contains three collections of templates corresponding to folder names:\n\n* `platform` collection - mimics [ntc-templates](https://github.com/networktocode/ntc-templates) api and follows same naming rule\n* `yang` collection - contains templates capable of producing yang compatible structures out of text data\n* `misc` collection - miscellaneous templates for various use cases organized in folders\n\n### platform collection templates files naming rule\n\n`{{ vendor_os }}_{{ command_with_underscores }}.txt` - lower case only.\n\nnaming rules details:\n\n* all space symbols `' '` replaced with underscores.\n* pipe symbol `|` replaced with `pipe` in template name. for example,\n  template to parse cisco ios `show run | section interface` command output\n  must be named `cisco_ios_show_running_config_pipe_section_interface.txt`\n* dash symbols `-` replaced with underscores. for example, template to parse\n  huawei `display current-configuration interface` command output  must be\n  named `huawei_display_current_configuration_interface.txt`\n\n### yang collection templates files naming rule\n\n`{{ yang module name }}_{{ platform_name }}.txt` - lower case only\n\nnaming rules details:\n\n* all space symbols `' '` replaced with underscore.\n* dash symbol `-` **does not** replaced with underscore. for example, template\n  to produce output compatible with openconfig-lldp yang model for cisco ios\n  must be named `openconfig-lldp_cisco_xr.txt`\n\n### misc collection templates files naming rule\n\n`{{ usecase folder }}/{{ template name }}.txt` - upper or lower case\n\nnaming rules details:\n\n* nothing replaced with anything, provided template name used as is.\n\n## additional templates resources\n\nlist of resources with ttp templates:\n\n- ttp srosparser - https://pypi.org/project/ttp-sros-parser/ by [h4ndzdatm0ld](https://github.com/h4ndzdatm0ld)\n- template for parsing \"show run\" for cisco ios - https://github.com/tbotnz/ios-show-run-ttp by [tbotnz](https://github.com/tbotnz)\n- template for cisco asa configuration - https://gist.github.com/consentfactory/85872fc83453d1735b15aed3e47a9763 by [consentfactory](https://gist.github.com/consentfactory)\n",
  "docs_url": null,
  "keywords": "parsing,ttp,regex",
  "license": "mit",
  "name": "ttp-templates",
  "package_url": "https://pypi.org/project/ttp-templates/",
  "project_url": "https://pypi.org/project/ttp-templates/",
  "project_urls": {
    "Documentation": "https://dmulyalin.github.io/ttp_templates/",
    "Homepage": "https://github.com/dmulyalin/ttp_templates",
    "Repository": "https://github.com/dmulyalin/ttp_templates"
  },
  "release_url": "https://pypi.org/project/ttp-templates/0.3.5/",
  "requires_dist": [
    "ttp (>=0.6.0)",
    "mkdocs (==1.2.4) ; (python_version >= \"3.7\") and (extra == \"docs\")",
    "mkdocs-material (==7.2.2) ; (python_version >= \"3.7\") and (extra == \"docs\")",
    "mkdocs-material-extensions (==1.0.1) ; (python_version >= \"3.7\") and (extra == \"docs\")",
    "mkdocstrings[python] (>=0.18.0,<0.19.0) ; (python_version >= \"3.7\") and (extra == \"docs\")",
    "pygments (==2.11) ; (python_version >= \"3.7\") and (extra == \"docs\")",
    "pymdown-extensions (==9.3) ; (python_version >= \"3.7\") and (extra == \"docs\")"
  ],
  "requires_python": ">=3.6,<4.0",
  "summary": "template text parser templates collections",
  "version": "0.3.5",
  "releases": [],
  "developers": [
    "d.mulyalin@gmail.com",
    "denis_mulyalin"
  ],
  "kwds": "ttp_templates templates template get_template ttp",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_ttp_templates",
  "homepage": "https://github.com/dmulyalin/ttp_templates",
  "release_count": 11,
  "dependency_ids": [
    "pypi_mkdocs",
    "pypi_mkdocs_material",
    "pypi_mkdocs_material_extensions",
    "pypi_mkdocstrings",
    "pypi_pygments",
    "pypi_pymdown_extensions",
    "pypi_ttp"
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: macos :: macos x",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "![pypi - python version](https://img.shields.io/pypi/pyversions/mknotebooks)\n![pypi](https://img.shields.io/pypi/v/mknotebooks)\n![pypi - downloads](https://img.shields.io/pypi/dm/mknotebooks)\n![github contributors](https://img.shields.io/github/contributors/timvink/mknotebooks)\n![pypi - license](https://img.shields.io/pypi/l/mknotebooks)\n\n# mknotebooks\n\nmknotebooks is a plugin for [mkdocs](https://mkdocs.org) enabling you to include [jupyter](https://jupyter.org) notebooks directly in your project documentation.\n\n## install\n\n`pip3 install mknotebooks`\n\n## usage\n\n- add `mknotebooks` to the plugin section of your `mkdocs.yml`\n- include any notebooks (`.ipynb` files) you want to use in the `docs/` directory just as you would `.md` files.\n\nexample:\n\n```yaml\n# mkdocs.yml\nnav:\n  - your_notebook.ipynb\n\nplugins:\n  - mknotebooks\n```\n\nany static images, plots, etc. will be extracted from the notebook and placed alongside the output html.\n\n### options\n\nyou can optionally execute the notebooks, by setting `execute: true` in the config. you can include a hidden preamble script, to be run before executing any cells using `preamble: \"<path/to/your/script>\"`. the default cell execution timeout can be overridden by setting `timeout: <timeout>`, where `<timeout>` is an integer number of seconds.\n\nby default, execution will be aborted if any of the cells throws an error, but you can set `allow_errors: true` to continue execution and include the error message in the cell output.\n\nexample:\n\n\n```yaml\n# mkdocs.yml\nplugins:\n  - mknotebooks\n      execute: false\n      timeout: 100\n      preamble:  \"<path/to/your/script>\"\n      allow_errors: false\n```\n\n### styling\n\nmknotebooks applies default styling to improve the appearance of notebook input/output cells and pandas dataframes. if these interfere with any other css stylesheets that you're using, you can disable these via the following options.\n\n```\n# mkdocs.yml\n- mknotebooks:\n   enable_default_jupyter_cell_styling: false\n   enable_default_pandas_dataframe_styling: false\n```\n\n### syntax highlighting\n\nin order to enable syntax highlighting for code blocks, `pygments` has to be installed and `codehilite` extension has to be enabled in `mkdocs.yml`.\n\n1. install pygments:\n\n```\npip install pygments\n```\n\n2. enable `codehilite` extension in `mkdocs.yml`:\n\n```\n# mkdocs.yml\nmarkdown_extensions:\n    - codehilite\n```\n\n### binder\n\nyou can also choose to have mknotebooks insert a [binder](https://mybinder.org) link into each notebook.\n\n``` mkdocs.yml\n- mknotebooks:\n      binder: true\n      binder_service_name: \"gh\"\n      binder_branch: \"master\"\n      binder_ui: \"lab\"\n```\n\nif you are using gitlab, you will need to set `binder_service_name` to `\"gl\"`.\n\n## examples\n\nsee the [examples folder](examples/) for examples on the [use of a preamble](examples/execute_with_preamble) and [using binder](examples/binder_logo). try them out by running `pipenv install && pipenv run mkdocs serve`.\n\n## inspecting generated markdown\n\nyou can also export the generated markdown by setting `write_markdown: true` in your `mkdocs.yml`. this will write the generated markdown to a `.md.tmp` file alongside the original notebook.\n\n\n",
  "docs_url": null,
  "keywords": "mkdocs documentation markdown",
  "license": "mit",
  "name": "mknotebooks",
  "package_url": "https://pypi.org/project/mknotebooks/",
  "project_url": "https://pypi.org/project/mknotebooks/",
  "project_urls": {
    "Homepage": "https://github.com/greenape/mknotebooks"
  },
  "release_url": "https://pypi.org/project/mknotebooks/0.8.0/",
  "requires_dist": [
    "nbconvert (>=6.0.0)",
    "mkdocs (>=1.5.0)",
    "markdown (>=3.3.3)",
    "jupyter-client",
    "gitpython"
  ],
  "requires_python": "",
  "summary": "plugin for mkdocs to generate markdown documents from jupyter notebooks.",
  "version": "0.8.0",
  "releases": [],
  "developers": [
    "jonathan.gray@nanosheep.net",
    "jonathan_gray"
  ],
  "kwds": "mknotebooks mkdocs pyversions pypi pip3",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_mknotebooks",
  "homepage": "https://github.com/greenape/mknotebooks",
  "release_count": 866,
  "dependency_ids": [
    "pypi_gitpython",
    "pypi_jupyter_client",
    "pypi_markdown",
    "pypi_mkdocs",
    "pypi_nbconvert"
  ]
}
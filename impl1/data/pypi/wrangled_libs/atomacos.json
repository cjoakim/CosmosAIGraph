{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: macos x",
    "environment :: macos x :: cocoa",
    "intended audience :: developers",
    "license :: osi approved :: gnu general public license v2 (gplv2)",
    "operating system :: macos",
    "operating system :: macos :: macos x",
    "programming language :: objective c",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing",
    "topic :: software development :: user interfaces"
  ],
  "description": "# atomacos: automated testing on macos\n[![license](https://img.shields.io/github/license/daveenguyen/atomacos.svg?style=flat-square)](https://github.com/daveenguyen/atomacos/blob/master/license)\n[![pypi](https://img.shields.io/pypi/v/atomacos.svg?style=flat-square)](https://pypi.org/project/atomacos/)\n[![build status](https://img.shields.io/travis/daveenguyen/atomacos/master.svg?style=flat-square)](https://travis-ci.org/daveenguyen/atomacos)\n[![codecov](https://img.shields.io/codecov/c/github/daveenguyen/atomacos/master.svg?style=flat-square)](https://codecov.io/gh/daveenguyen/atomacos/)\n[![style](https://img.shields.io/badge/code%20style-black-black.svg?style=flat-square)](https://github.com/ambv/black)\n\nthis library is a fork of [atomac].\nit was created to provide a release with python 3 support because\nthere has not been a release [since 2013](https://github.com/pyatom/pyatom/releases)\n\natomacos is a library to enable gui testing of macos applications via the apple accessibility api.\natomacos has direct access to the api via [pyobjc]. it's fast and easy to use to write tests.\n\n\n# getting started\nrequirements\n- macos\n- [pyobjc]\n- systemwide accesibility enabled\n\non travis, it's only on 10.11 because we are able to enable accessibility api.\n\nif you experience issues, please open a ticket in the [issue tracker][issues].\n\n## enabling systemwide accessibility\ncheck the checkbox:\n```\nsystem preferences > universal access > enable access for assistive devices\nsystem preferences > security & privacy > privacy > accessibility\n```\n\nfailure to enable this will result in `axerrorapidisabled` exceptions during some module usage.\n\n\n## installing\n\nfor release\n```bash\n$ pip install atomacos\n```\n\nfor pre-release\n```bash\n$ pip install --pre atomacos\n```\n\n\n# usage examples\nonce installed, you should be able to use it to launch an application:\n\n```python\n>>> import atomacos\n>>> atomacos.launchappbybundleid('com.apple.automator')\n```\n\nthis should launch automator.\n\n\nnext, get a reference to the ui element for the application itself:\n\n```python\n>>> automator = atomacos.getapprefbybundleid('com.apple.automator')\n>>> automator\n<atomacos.axclasses.nativeuielement axapplication automator>\n```\n\n\nnow, we can find objects in the accessibility hierarchy:\n\n```python\n>>> window = automator.windows()[0]\n>>> window.axtitle\nu'untitled'\n>>> sheet = window.sheets()[0]\n```\n\nnote that we retrieved an accessibility attribute from the window object - `axtitle`.\natomacos supports reading and writing of most attributes.\nxcode's included `accessibility inspector` can provide a quick way to find these attributes.\n\n\nthere is a shortcut for getting the sheet object which\nbypasses accessing it through the window object.\natomacos can search all objects in the hierarchy:\n\n```python\n>>> sheet = automator.sheetsr()[0]\n```\n\n\nthere are search methods for most types of accessibility objects.\neach search method, such as `windows`,\nhas a corresponding recursive search function, such as `windowsr`.\n\nthe recursive search finds items that aren't just direct children, but children of children.\nthese search methods can be given terms to identify specific elements.\nnote that `*` and `?` can be used as wildcard match characters in all search methods:\n\n```python\n>>> close = sheet.buttons('close')[0]\n```\n\n\nthere are methods to search for ui elements that match any number of criteria.\nthe criteria are accessibility attributes:\n\n```python\n>>> close = sheet.findfirst(axrole='axbutton', axtitle='close')\n```\n\n`findfirst` and `findfirstr` return the first item found to match the criteria or `none`.\n`findall` and `findallr` return a list of all items that match the criteria or an empty list(`[]`).\n\n\nobjects are fairly versatile.\nyou can get a list of supported attributes and actions on an object:\n\n```python\n>>> close.getattributes()\n[u'axrole', u'axroledescription', u'axhelp', u'axenabled', u'axfocused',\nu'axparent', u'axwindow', u'axtopleveluielement', u'axposition', u'axsize',\nu'axtitle']\n>>> close.axtitle\nu'close'\n>>> close.getactions()\n[u'press']\n```\n\n\nperforming an action is as natural as:\n\n```python\n>>> close.press()\n```\n\nany action can be triggered this way.\n\n\n\n# links\n- [license]\n- [issues]\n- [source] code\n- changes\n    - [commits] page has all changes to the project.\n    - [release] page will also outline changes\n- thanks [atomac] and [pyobjc]\n\n\n[source]:  https://github.com/daveenguyen/atomacos\n[release]: https://github.com/daveenguyen/atomacos/releases\n[commits]: https://github.com/daveenguyen/atomacos/commits\n[license]: https://github.com/daveenguyen/atomacos/blob/master/license\n[issues]:  https://github.com/daveenguyen/atomacos/issues\n[pypi]:    https://pypi.org/project/atomacos/\n[travis]:  https://travis-ci.org/daveenguyen/atomacos\n[codecov]: https://codecov.io/gh/daveenguyen/atomacos/\n[black]:   https://github.com/ambv/black\n[atomac]:  https://github.com/pyatom/pyatom\n[pyobjc]:  https://bitbucket.org/ronaldoussoren/pyobjc\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "atomacos",
  "package_url": "https://pypi.org/project/atomacos/",
  "project_url": "https://pypi.org/project/atomacos/",
  "project_urls": {
    "Homepage": "https://github.com/daveenguyen/atomacos"
  },
  "release_url": "https://pypi.org/project/atomacos/3.3.0/",
  "requires_dist": [
    "pyobjc-core>=3.0.4",
    "pyobjc-framework-Cocoa>=3.0.4",
    "pyobjc-framework-Quartz>=3.0.4",
    "pyobjc-framework-ApplicationServices>=3.0.4",
    "pyobjc-framework-CoreText>=3.0.4",
    "pygetwindow<0.0.5",
    "pyscreeze<0.1.20",
    "pyautogui<0.9.42",
    "future",
    "black ; extra == \"dev\"",
    "pre-commit ; extra == \"dev\"",
    "tox ; extra == \"dev\"",
    "sphinx ; extra == \"doc\"",
    "m2r2 ; extra == \"doc\"",
    "pytest ; extra == \"test\"",
    "pytest-cov ; extra == \"test\""
  ],
  "requires_python": "",
  "summary": "automated testing on macos",
  "version": "3.3.0",
  "releases": [],
  "developers": [
    "davee@daveenguyen.com",
    "davee_nguyen"
  ],
  "kwds": "atomacos atomac codecov build code",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_atomacos",
  "homepage": "https://github.com/daveenguyen/atomacos",
  "release_count": 30,
  "dependency_ids": [
    "pypi_black",
    "pypi_future",
    "pypi_m2r2",
    "pypi_pre_commit",
    "pypi_pyautogui",
    "pypi_pygetwindow",
    "pypi_pyobjc_core",
    "pypi_pyobjc_framework_applicationservices",
    "pypi_pyobjc_framework_cocoa",
    "pypi_pyobjc_framework_coretext",
    "pypi_pyobjc_framework_quartz",
    "pypi_pyscreeze",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_sphinx",
    "pypi_tox"
  ]
}
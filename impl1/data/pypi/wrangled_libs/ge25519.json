{
  "classifiers": [],
  "description": "=======\r\nge25519\r\n=======\r\n\r\npure-python data structure for working with ed25519 (and ristretto) group elements and operations.\r\n\r\n|pypi| |readthedocs| |actions| |coveralls|\r\n\r\n.. |pypi| image:: https://badge.fury.io/py/ge25519.svg\r\n   :target: https://badge.fury.io/py/ge25519\r\n   :alt: pypi version and link.\r\n\r\n.. |readthedocs| image:: https://readthedocs.org/projects/ge25519/badge/?version=latest\r\n   :target: https://ge25519.readthedocs.io/en/latest/?badge=latest\r\n   :alt: read the docs documentation status.\r\n\r\n.. |actions| image:: https://github.com/nthparty/ge25519/workflows/lint-test-cover-docs/badge.svg\r\n   :target: https://github.com/nthparty/ge25519/actions/workflows/lint-test-cover-docs.yml\r\n   :alt: github actions status.\r\n\r\n.. |coveralls| image:: https://coveralls.io/repos/github/nthparty/ge25519/badge.svg?branch=main\r\n   :target: https://coveralls.io/github/nthparty/ge25519?branch=main\r\n   :alt: coveralls test coverage summary.\r\n\r\npurpose\r\n-------\r\nthis library provides a native python implementation of `ed25519 <https://ed25519.cr.yp.to>`__ group elements and a number of operations over them. the library makes it possible to fill gaps in application prototypes that may have specific limitations with respect to their operating environment or their ability to rely on non-python dependencies.\r\n\r\nthe implementation is based upon and is compatible with the corresponding implementation of ed25519 and ristretto group elements used in `libsodium <https://github.com/jedisct1/libsodium>`__. for more information and background about the underlying mathematical structures and primitives, consult materials about `curve25519 <https://cr.yp.to/ecdh.html>`__, the `ristretto <https://ristretto.group>`__ group, and the related `ed25519 <https://ed25519.cr.yp.to>`__ system.\r\n\r\ninstallation and usage\r\n----------------------\r\nthis library is available as a `package on pypi <https://pypi.org/project/ge25519>`__:\r\n\r\n.. code-block:: bash\r\n\r\n    python -m pip install ge25519\r\n\r\nthe library can be imported in the usual ways:\r\n\r\n.. code-block:: python\r\n\r\n    import ge25519\r\n    from ge25519 import *\r\n\r\ndevelopment\r\n-----------\r\nall installation and development dependencies are fully specified in ``pyproject.toml``. the ``project.optional-dependencies`` object is used to `specify optional requirements <https://peps.python.org/pep-0621>`__ for various development tasks. this makes it possible to specify additional options (such as ``docs``, ``lint``, and so on) when performing installation using `pip <https://pypi.org/project/pip>`__:\r\n\r\n.. code-block:: bash\r\n\r\n    python -m pip install .[docs,lint]\r\n\r\ndocumentation\r\n^^^^^^^^^^^^^\r\nthe documentation can be generated automatically from the source files using `sphinx <https://www.sphinx-doc.org>`__:\r\n\r\n.. code-block:: bash\r\n\r\n    python -m pip install .[docs]\r\n    cd docs\r\n    sphinx-apidoc -f -e --templatedir=_templates -o _source .. && make html\r\n\r\ntesting and conventions\r\n^^^^^^^^^^^^^^^^^^^^^^^\r\nall unit tests are executed and their coverage is measured when using `pytest <https://docs.pytest.org>`__ (see the ``pyproject.toml`` file for configuration details):\r\n\r\n.. code-block:: bash\r\n\r\n    python -m pip install .[test]\r\n    python -m pytest\r\n\r\nconcise unit tests are implemented with the help of `fountains <https://pypi.org/project/fountains>`__; new reference specifications for these tests can be generated by running the testing module directly:\r\n\r\n.. code-block:: bash\r\n\r\n    python test/test_ge25519.py\r\n\r\nstyle conventions are enforced using `pylint <https://pylint.readthedocs.io>`__:\r\n\r\n.. code-block:: bash\r\n\r\n    python -m pip install .[lint]\r\n    python -m pylint src/ge25519 test/test_ge25519.py\r\n\r\ncontributions\r\n^^^^^^^^^^^^^\r\nin order to contribute to the source code, open an issue or submit a pull request on the `github page <https://github.com/nthparty/ge25519>`__ for this library.\r\n\r\nversioning\r\n^^^^^^^^^^\r\nbeginning with version 0.1.0, the version number format for this library and the changes to the library associated with version number increments conform with `semantic versioning 2.0.0 <https://semver.org/#semantic-versioning-200>`__.\r\n\r\npublishing\r\n^^^^^^^^^^\r\nthis library can be published as a `package on pypi <https://pypi.org/project/ge25519>`__ by a package maintainer. first, install the dependencies required for packaging and publishing:\r\n\r\n.. code-block:: bash\r\n\r\n    python -m pip install .[publish]\r\n\r\nensure that the correct version number appears in ``pyproject.toml``, and that any links in this readme document to the read the docs documentation of this package (or its dependencies) have appropriate version numbers. also ensure that the read the docs project for this library has an `automation rule <https://docs.readthedocs.io/en/stable/automation-rules.html>`__ that activates and sets as the default all tagged versions. create and push a tag for this version (replacing ``?.?.?`` with the version number):\r\n\r\n.. code-block:: bash\r\n\r\n    git tag ?.?.?\r\n    git push origin ?.?.?\r\n\r\nremove any old build/distribution files. then, package the source into a distribution archive:\r\n\r\n.. code-block:: bash\r\n\r\n    rm -rf build dist src/*.egg-info\r\n    python -m build --sdist --wheel .\r\n\r\nfinally, upload the package distribution archive to `pypi <https://pypi.org>`__:\r\n\r\n.. code-block:: bash\r\n\r\n    python -m twine upload dist/*\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "ge25519",
  "package_url": "https://pypi.org/project/ge25519/",
  "project_url": "https://pypi.org/project/ge25519/",
  "project_urls": {
    "Documentation": "https://ge25519.readthedocs.io",
    "Repository": "https://github.com/nthparty/ge25519"
  },
  "release_url": "https://pypi.org/project/ge25519/1.5.1/",
  "requires_dist": [
    "fe25519 ~=1.5",
    "coveralls ~=3.3.1 ; extra == 'coveralls'",
    "toml ~=0.10.2 ; extra == 'docs'",
    "sphinx ~=4.2.0 ; extra == 'docs'",
    "sphinx-rtd-theme ~=1.0.0 ; extra == 'docs'",
    "pylint ~=2.17.0 ; extra == 'lint'",
    "build ~=0.10 ; extra == 'publish'",
    "twine ~=4.0 ; extra == 'publish'",
    "pytest ~=7.2 ; extra == 'test'",
    "pytest-cov ~=4.0 ; extra == 'test'",
    "parts ~=1.7 ; extra == 'test'",
    "bitlist ~=1.2 ; extra == 'test'",
    "fountains ~=2.2 ; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "pure-python data structure for working with ed25519 (and ristretto) group elements and operations.",
  "version": "1.5.1",
  "releases": [],
  "developers": [
    "a@lapets.io",
    "andrei_lapets"
  ],
  "kwds": "test_ge25519 badge ge25519 ed25519 curve25519",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_ge25519",
  "homepage": "",
  "release_count": 15,
  "dependency_ids": [
    "pypi_bitlist",
    "pypi_build",
    "pypi_coveralls",
    "pypi_fe25519",
    "pypi_fountains",
    "pypi_parts",
    "pypi_pylint",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_toml",
    "pypi_twine"
  ]
}
{
  "classifiers": [
    "development status :: 6 - mature",
    "license :: osi approved :: gnu library or lesser general public license (lgpl)",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: assembly",
    "programming language :: c",
    "programming language :: cython",
    "programming language :: objective c",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: games/entertainment",
    "topic :: multimedia :: graphics",
    "topic :: multimedia :: graphics :: capture :: digital camera",
    "topic :: multimedia :: graphics :: capture :: screen capture",
    "topic :: multimedia :: graphics :: graphics conversion",
    "topic :: multimedia :: graphics :: viewers",
    "topic :: multimedia :: sound/audio",
    "topic :: multimedia :: sound/audio :: midi",
    "topic :: multimedia :: sound/audio :: players"
  ],
  "description": ".. image:: https://raw.githubusercontent.com/pygame/pygame/main/docs/rest/_static/pygame_logo.svg\r\n  :alt: pygame\r\n  :target: https://www.pygame.org/\r\n\r\n\r\n|appveyorbuild| |pypiversion| |pypilicense|\r\n|python3| |githubcommits| |blackformatbadge|\r\n\r\npygame_ is a free and open-source cross-platform library\r\nfor the development of multimedia applications like video games using python.\r\nit uses the `simple directmedia layer library`_ and several other\r\npopular libraries to abstract the most common functions, making writing\r\nthese programs a more intuitive task.\r\n\r\n`we need your help`_ to make pygame the best it can be!\r\nnew contributors are welcome.\r\n\r\n\r\ninstallation\r\n------------\r\n\r\nbefore installing pygame, you must check that python is installed\r\non your machine. to find out, open a command prompt (if you have\r\nwindows) or a terminal (if you have macos or linux) and type this:\r\n::\r\n\r\n   python --version\r\n\r\n\r\nif a message such as \"python 3.8.10\" appears, it means that python\r\nis correctly installed. if an error message appears, it means that\r\nit is not installed yet. you must then go to the `official website\r\n<https://www.pygame.org/docs/>`_ and follow the instructions.\r\n\r\nonce python is installed, you have to perform a final check: you have\r\nto see if pip is installed. generally, pip is pre-installed with\r\npython but we are never sure. same as for python, type the following\r\ncommand:\r\n::\r\n\r\n   pip --version\r\n\r\n\r\nif a message such as \"pip 20.0.2 from /usr/lib/python3/dist-packages/pip\r\n(python 3.8)\" appears, you are ready to install pygame! to install\r\nit, enter this command:\r\n::\r\n\r\n   pip install pygame\r\n\r\n\r\nhelp\r\n----\r\n\r\nif you are just getting started with pygame, you should be able to\r\nget started fairly quickly.  pygame comes with many tutorials and\r\nintroductions.  there is also full reference documentation for the\r\nentire library. browse the documentation on the `docs page`_. you\r\ncan also browse the documentation locally by running\r\n``python -m pygame.docs`` in your terminal. if the docs aren't found\r\nlocally, it'll launch the online website instead.\r\n\r\nthe online documentation stays up to date with the development version\r\nof pygame on github.  this may be a bit newer than the version of pygame\r\nyou are using. to upgrade to the latest full release, run \r\n``pip install pygame --upgrade`` in your terminal.\r\n\r\nbest of all, the examples directory has many playable small programs\r\nwhich can get you started playing with the code right away.\r\n\r\npygame is a powerful library for game development, offering a wide \r\nrange of features to simplify your coding journey. let's delve into \r\nwhat pygame has to offer:\r\n\r\ngraphics: with pygame, creating dynamic and engaging graphics has \r\nnever been easier. the library provides simple yet effective tools for\r\n2d graphics and animation, including support for images, rectangles, \r\nand polygon shapes. whether you're a seasoned game developer or just\r\nstarting out, pygame has you covered.\r\n\r\nsound: pygame also includes support for playing and manipulating sound \r\nand music, making it easy to add sound effects and background music to\r\nyour games. with support for wav, mp3, and ogg file formats, you have \r\nplenty of options to choose from.\r\n\r\ninput: pygame provides intuitive functions for handling keyboard, mouse,\r\nand joystick input, allowing you to quickly and easily implement player\r\ncontrols in your games. no more struggling with complex input code, pygame\r\nmakes it simple.\r\n\r\ngame development: lastly, pygame provides a comprehensive suite of tools\r\nand features specifically designed for game development. from collision \r\ndetection to sprite management, pygame has everything you need to create\r\nexciting and engaging games. whether you're building a platformer, puzzle\r\ngame, or anything in between, pygame has you covered.\r\n\r\nbuilding from source\r\n--------------------\r\n\r\nif you want to use features that are currently in development,\r\nor you want to contribute to pygame, you will need to build pygame\r\nlocally from its source code, rather than pip installing it.\r\n\r\ninstalling from source is fairly automated. the most work will\r\ninvolve compiling and installing all the pygame dependencies.  once\r\nthat is done, run the ``setup.py`` script which will attempt to\r\nauto-configure, build, and install pygame.\r\n\r\nmuch more information about installing and compiling is available\r\non the `compilation wiki page`_.\r\n\r\ncontribute\r\n----------\r\n| thank you for thinking of contributing!\r\n|\r\n| to contribute to the main `project documentation <https://www.pygame.org/docs/>`_, see ``docs/readme.md`` or view more detailed instructions `here <https://github.com/pygame/pygame/tree/main/docs>`_.\r\n|\r\n| new to contributing to open source free libre software? \r\n| there is a draft of `\"let's write a unit test!\" <http://renesd.blogspot.com/2019/11/draft-2-of-lets-write-unit-test.html>`_ which is a step by step guide on how to write your first unit test in python for pygame, which is very similar to how you would do it for other projects. \r\n|\r\n| want or need to compile pygame from source?\r\n| `see the compilation page <https://www.pygame.org/wiki/compilation>`_ for more detailed instructions.\r\n|\r\n| for a detailed developer guide on \"how to hack pygame\":\r\n| head to the `hacking page <https://www.pygame.org/wiki/hacking>`_.\r\n|\r\n| beginner developers looking for ways to contribute to the project can look at issues labeled `\"good first issue\" <https://github.com/pygame/pygame/labels/good%20first%20issue>`_ or `\"difficulty: easy\" <https://github.com/pygame/pygame/issues?q=is%3aopen+is%3aissue+label%3a%22difficulty%3a+easy%22>`_. \r\n|\r\n| to submit patches and report bugs:\r\n| visit the `bugs & patches <https://www.pygame.org/wiki/patchesandbugs>`_ page for detailed instructions.\r\n| \r\n| `see the info page <https://www.pygame.org/wiki/info>`_ for more info and ways to get in touch with the pygame team.\r\n\r\n\r\ncredits\r\n-------\r\n\r\nthanks to everyone who has helped contribute to this library.\r\nspecial thanks are also in order.\r\n\r\n* marcus von appen: many changes, and fixes, 1.7.1+ freebsd maintainer\r\n* lenard lindstrom: the 1.8+ windows maintainer, many changes, and fixes\r\n* brian fisher for svn auto builder, bug tracker and many contributions\r\n* rene dudfield: many changes, and fixes, 1.7+ release manager/maintainer\r\n* phil hassey for his work on the pygame.org website\r\n* dr0id for his work on the sprite module\r\n* richard goedeken for his smoothscale function\r\n* ulf ekstr\u00f6m for his pixel perfect collision detection code\r\n* pete shinners: original author\r\n* david clark for filling the right-hand-man position\r\n* ed boraas and francis irving: debian packages\r\n* maxim sobolev: freebsd packaging\r\n* bob ippolito: macos and os x porting (much work!)\r\n* jan ekhol, ray kelm, and peter nicolai: putting up with early design ideas\r\n* nat pryce for starting our unit tests\r\n* dan richter for documentation work\r\n* thecorruptor for his incredible logos and graphics\r\n* nicholas dudfield: many test improvements\r\n* alex folkner for pygame-ctypes\r\n\r\nthanks to those sending in patches and fixes: niki spahiev, gordon\r\ntyler, nathaniel pryce, dave wallace, john popplewell, michael urman,\r\nandrew straw, michael hudson, ole martin bjoerndalen, herve cauwelier,\r\njames mazer, lalo martins, timothy stranex, chad lester, matthias\r\nspiller, bo jangeborg, dmitry borisov, campbell barton, diego essaya,\r\neyal lotem, regis desgroppes, emmanuel hainry, randy kaelber\r\nmatthew l daniel, nirav patel, forrest voight, charlie nolan,\r\nfrankie robertson, john krukoff, lorenz quack, nick irvine,\r\nmichael george, saul spatz, thomas ibbotson, tom rothamel, evan kroske,\r\ncambell barton.\r\n\r\nand our bug hunters above and beyond: angus, guillaume proux, frank\r\nraiser, austin henry, kaweh kazemi, arturo aldama, mike mulcheck,\r\nmichael benfield, david lau\r\n\r\nthere's many more folks out there who've submitted helpful ideas, kept\r\nthis project going, and basically made our life easier.  thanks!\r\n\r\nmany thank you's for people making documentation comments, and adding to the\r\npygame.org wiki.\r\n\r\nalso many thanks for people creating games and putting them on the\r\npygame.org website for others to learn from and enjoy.\r\n\r\nlots of thanks to james paige for hosting the pygame bugzilla.\r\n\r\nalso a big thanks to roger dingledine and the crew at seul.org for our\r\nexcellent hosting.\r\n\r\ndependencies\r\n------------\r\n\r\npygame is obviously strongly dependent on sdl and python.  it also\r\nlinks to and embeds several other smaller libraries.  the font\r\nmodule relies on sdl_ttf, which is dependent on freetype.  the mixer\r\n(and mixer.music) modules depend on sdl_mixer.  the image module\r\ndepends on sdl_image, which also can use libjpeg and libpng.  the\r\ntransform module has an embedded version of sdl_rotozoom for its\r\nown rotozoom function.  the surfarray module requires the python\r\nnumpy package for its multidimensional numeric arrays.\r\ndependency versions:\r\n\r\n\r\n+----------+------------------------+\r\n| cpython  | >= 3.6 (or use pypy3)  |\r\n+----------+------------------------+\r\n| sdl      | >= 2.0.8               |\r\n+----------+------------------------+\r\n| sdl_mixer| >= 2.0.0               |\r\n+----------+------------------------+\r\n| sdl_image| >= 2.0.2               |\r\n+----------+------------------------+\r\n| sdl_ttf  | >= 2.0.11              |\r\n+----------+------------------------+\r\n| sdl_gfx  | (optional, vendored in)|\r\n+----------+------------------------+\r\n| numpy    | >= 1.6.2 (optional)    |\r\n+----------+------------------------+\r\n\r\n\r\n\r\nlicense\r\n-------\r\n\r\nthis library is distributed under `gnu lgpl version 2.1`_, which can\r\nbe found in the file ``docs/lgpl.txt``.  we reserve the right to place\r\nfuture versions of this library under a different license.\r\n\r\nthis basically means you can use pygame in any project you want,\r\nbut if you make any changes or additions to pygame itself, those\r\nmust be released with a compatible license (preferably submitted\r\nback to the pygame project).  closed source and commercial games are fine.\r\n\r\nthe programs in the ``examples`` subdirectory are in the public domain.\r\n\r\nsee docs/licenses for licenses of dependencies.\r\n\r\n\r\n.. |appveyorbuild| image:: https://ci.appveyor.com/api/projects/status/x4074ybuobsh4myx?svg=true\r\n   :target: https://ci.appveyor.com/project/pygame/pygame\r\n\r\n.. |pypiversion| image:: https://img.shields.io/pypi/v/pygame.svg?v=1\r\n   :target: https://pypi.python.org/pypi/pygame\r\n\r\n.. |pypilicense| image:: https://img.shields.io/pypi/l/pygame.svg?v=1\r\n   :target: https://pypi.python.org/pypi/pygame\r\n\r\n.. |python3| image:: https://img.shields.io/badge/python-3-blue.svg?v=1\r\n\r\n.. |githubcommits| image:: https://img.shields.io/github/commits-since/pygame/pygame/2.1.2.svg\r\n   :target: https://github.com/pygame/pygame/compare/2.1.2...main\r\n\r\n.. |blackformatbadge| image:: https://img.shields.io/badge/code%20style-black-000000.svg\r\n    :target: https://github.com/psf/black\r\n\r\n.. _pygame: https://www.pygame.org\r\n.. _simple directmedia layer library: https://www.libsdl.org\r\n.. _we need your help: https://www.pygame.org/contribute.html\r\n.. _compilation wiki page: https://www.pygame.org/wiki/compilation\r\n.. _docs page: https://www.pygame.org/docs/\r\n.. _gnu lgpl version 2.1: https://www.gnu.org/copyleft/lesser.html\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "lgpl",
  "name": "pygame",
  "package_url": "https://pypi.org/project/pygame/",
  "project_url": "https://pypi.org/project/pygame/",
  "project_urls": {
    "Bug Tracker": "https://github.com/pygame/pygame/issues",
    "Documentation": "https://pygame.org/docs",
    "Homepage": "https://www.pygame.org",
    "Source": "https://github.com/pygame/pygame",
    "Twitter": "https://twitter.com/pygame_org"
  },
  "release_url": "https://pypi.org/project/pygame/2.5.2/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "python game development",
  "version": "2.5.2",
  "releases": [],
  "developers": [
    "a_community_project",
    "pygame@pygame.org"
  ],
  "kwds": "pygame pygame_ pygame_logo _pygame pypy3",
  "license_kwds": "lgpl",
  "libtype": "pypi",
  "id": "pypi_pygame",
  "homepage": "https://www.pygame.org",
  "release_count": 60,
  "dependency_ids": []
}
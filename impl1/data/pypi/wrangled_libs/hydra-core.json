{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "<p align=\"center\"><img src=\"https://raw.githubusercontent.com/facebookresearch/hydra/master/website/static/img/hydra-readme-logo2.svg\" alt=\"logo\" width=\"70%\" /></p>\n\n<p align=\"center\">\n  <a href=\"https://pypi.org/project/hydra-core/\">\n    <img src=\"https://img.shields.io/pypi/v/hydra-core\" alt=\"pypi\" />\n  </a>\n  <a href=\"https://circleci.com/gh/facebookresearch/hydra\">\n    <img src=\"https://img.shields.io/circleci/build/github/facebookresearch/hydra?token=af199cd2deca9e70e53776f9ded96284b10687e9\" alt=\"circleci\" />\n  </a>\n  <a href=\"#\">\n    <img src=\"https://img.shields.io/pypi/l/hydra-core\" alt=\"pypi - license\" />\n  </a>\n  <a href=\"#\">\n    <img src=\"https://img.shields.io/pypi/pyversions/hydra-core\" alt=\"pypi - python version\" />\n  </a>\n  <a href=\"https://pepy.tech/project/hydra-core?versions=0.11.*&versions=1.0.*&versions=1.1.*\">\n    <img src=\"https://pepy.tech/badge/hydra-core/month\" alt=\"downloads\" />\n  </a>\n  <a href=\"https://github.com/psf/black\">\n    <img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" alt=\"code style: black\" />\n  </a>\n  <a href=\"https://lgtm.com/projects/g/facebookresearch/hydra/alerts/\">\n    <img src=\"https://img.shields.io/lgtm/alerts/g/facebookresearch/hydra.svg?logo=lgtm&logowidth=18\" alt=\"total alerts\" />\n  </a>\n  <a href=\"https://lgtm.com/projects/g/facebookresearch/hydra/context:python\">\n    <img src=\"https://img.shields.io/lgtm/grade/python/g/facebookresearch/hydra.svg?logo=lgtm&logowidth=18\" alt=\"language grade: python\" />\n  </a>\n  <p align=\"center\">\n    <i>a framework for elegantly configuring complex applications.</i>\n  </p>\n  <p align=\"center\">\n    <i>check the <a href=\"https://hydra.cc/\">website</a> for more information,<br>\n    or click the thumbnail below for a one-minute video introduction to hydra.</i>\n  </p>\n  <p align=\"center\">\n   <a href=\"http://www.youtube.com/watch?feature=player_embedded&v=slc3grqpnbi\" target=\"_blank\">\n     <img src=\"http://img.youtube.com/vi/slc3grqpnbi/hqdefault.jpg\" alt=\"1 minute overview\" width=\"240\" height=\"180\" border=\"10\" />\n   </a>\n  </p>\n</p>\n\n----------------------\n\n\n### releases\n\n#### stable\n\n**hydra 1.3** is the stable version of hydra.\n- [documentation](https://hydra.cc/docs/1.3/intro/)\n- installation : `pip install hydra-core --upgrade`\n\nsee the [news.md](news.md) file for a summary of recent changes to hydra.\n\n### license\nhydra is licensed under [mit license](license).\n\n## hydra ecosystem\n\n#### check out these third-party libraries that build on hydra's functionality:\n* [hydra-zen](https://github.com/mit-ll-responsible-ai/hydra-zen): pythonic utilities for working with hydra. dynamic config generation capabilities, enhanced config store features, a python api for launching hydra jobs, and more.\n* [lightning-hydra-template](https://github.com/ashleve/lightning-hydra-template): user-friendly template combining hydra with [pytorch-lightning](https://github.com/lightning-ai/lightning) for ml experimentation.\n* [hydra-torch](https://github.com/pytorch/hydra-torch): [configen](https://github.com/facebookresearch/hydra/tree/main/tools/configen)-generated configuration classes enabling type-safe pytorch configuration for hydra apps.\n* nvidia's deeplearningexamples repository contains a hydra launcher plugin, the [distributed_launcher](https://github.com/nvidia/deeplearningexamples/tree/9c34e35c218514b8607d7cf381d8a982a01175e9/tools/pytorch/timeseriespredictionplatform/distributed_launcher), which makes use of the pytorch [distributed.launch](https://pytorch.org/docs/stable/distributed.html#launch-utility) api.\n\n#### ask questions in github discussions or stackoverflow (use the tag #fb-hydra or #omegaconf):\n* [github discussions](https://github.com/facebookresearch/hydra/discussions)\n* [stackoverflow](https://stackexchange.com/filters/391828/hydra-questions)\n* [twitter](https://twitter.com/hydra_framework)\n\ncheck out the meta ai [blog post](https://ai.facebook.com/blog/reengineering-facebook-ais-deep-learning-platforms-for-interoperability/) to learn about how hydra fits into meta's efforts to reengineer deep learning platforms for interoperability.\n\n### citing hydra\nif you use hydra in your research please use the following bibtex entry:\n```bibtex\n@misc{yadan2019hydra,\n  author =       {omry yadan},\n  title =        {hydra - a framework for elegantly configuring complex applications},\n  howpublished = {github},\n  year =         {2019},\n  url =          {https://github.com/facebookresearch/hydra}\n}\n```\n\n",
  "docs_url": null,
  "keywords": "command-line configuration yaml tab-completion",
  "license": "mit",
  "name": "hydra-core",
  "package_url": "https://pypi.org/project/hydra-core/",
  "project_url": "https://pypi.org/project/hydra-core/",
  "project_urls": {
    "Homepage": "https://github.com/facebookresearch/hydra"
  },
  "release_url": "https://pypi.org/project/hydra-core/1.3.2/",
  "requires_dist": [
    "omegaconf (<2.4,>=2.2)",
    "antlr4-python3-runtime (==4.9.*)",
    "packaging",
    "importlib-resources ; python_version < \"3.9\""
  ],
  "requires_python": "",
  "summary": "a framework for elegantly configuring complex applications",
  "version": "1.3.2",
  "releases": [],
  "developers": [
    "omry@fb.com",
    "omry_yadan"
  ],
  "kwds": "hydra_framework hydra yadan2019hydra yaml pypi",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_hydra_core",
  "homepage": "https://github.com/facebookresearch/hydra",
  "release_count": 47,
  "dependency_ids": [
    "pypi_antlr4_python3_runtime",
    "pypi_importlib_resources",
    "pypi_omegaconf",
    "pypi_packaging"
  ]
}
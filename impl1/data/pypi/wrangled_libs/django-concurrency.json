{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django :: 3.0",
    "framework :: django :: 3.1",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: application frameworks",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "django concurrency\n==================\n\n\n[![pypi](https://badge.fury.io/py/django-concurrency.svg)](https://badge.fury.io/py/django-concurrency)\n[![coverage](https://codecov.io/github/saxix/django-concurrency/coverage.svg?branch=develop)](https://codecov.io/github/saxix/django-concurrency?branch=develop)\n[![test](https://github.com/saxix/django-concurrency/actions/workflows/tests.yaml/badge.svg)](https://github.com/saxix/django-concurrency/actions/workflows/tests.yaml)\n[![docs](https://readthedocs.org/projects/django-concurrency/badge/?version=stable)](http://django-concurrency.readthedocs.io/en/stable/)\n\n\ndjango-concurrency is an [optimistic lock][1] implementation for django.\n\nit prevents users from doing concurrent editing in django both from ui and from a\ndjango command.\n\n\nhow it works\n------------\n\n```python\n\nfrom django.db import models\nfrom concurrency.fields import integerversionfield\n\nclass concurrentmodel( models.model ):\n    version = integerversionfield( )\n    name = models.charfield(max_length=100)\n```\n\nnow if you try::\n\n```python\n\na = concurrentmodel.objects.get(pk=1)\na.name = '1'\n\nb = concurrentmodel.objects.get(pk=1)\nb.name = '2'\n\na.save()\nb.save()\n\n```\n\nyou will get a ``recordmodifiederror`` on ``b.save()``\n\n\nsimilar projects\n----------------\n\nother projects that handle concurrent editing are [django-optimistic-lock][10] \nand [django-locking][11] anyway concurrency is \"a batteries included\" optimistic \nlock management system, here some features not available elsewhere:\n\n * can be applied to any model; not only your code (ie. django.contrib.auth.group)\n * handle [list-editable][2] changelist. (handle `#11313 <https://code.djangoproject.com/ticket/11313>`_)\n * manage concurrency conflicts in admin's actions\n * can intercept changes performend out of the django app (ie using pgadmin, phpmyadmin, toads) (using [triggerversionfield][6])\n * can be disabled if needed (see [disable_concurrency][3])\n * [conditionalversionfield][4] to handle complex business rules\n\n\n\nproject links\n------------\n\n- code: https://github.com/saxix/django-concurrency\n- documentation: https://django-concurrency.readthedocs.org/en/latest/\n- issue tracker: https://github.com/saxix/django-concurrency/issues\n- download package: http://pypi.python.org/pypi/django-concurrency/\n\n\n[10]:https://github.com/gavinwahl/django-optimistic-lock\n[11]:https://github.com/stdbrouw/django-locking\n[1]:http://en.wikipedia.org/wiki/optimistic_concurrency_control\n[2]:https://django-concurrency.readthedocs.org/en/latest/admin.html#list-editable\n[3]:https://django-concurrency.readthedocs.org/en/latest/api.html?#disable-concurrency\n[4]:https://django-concurrency.readthedocs.org/en/latest/fields.html#conditionalversionfield\n[6]:https://django-concurrency.readthedocs.org/en/latest/fields.html#triggerversionfield\n\n\n",
  "docs_url": "https://pythonhosted.org/django-concurrency/",
  "keywords": "django,concurrency,optimistic lock,locking,concurrent editing",
  "license": "mit license",
  "name": "django-concurrency",
  "package_url": "https://pypi.org/project/django-concurrency/",
  "project_url": "https://pypi.org/project/django-concurrency/",
  "project_urls": {
    "Homepage": "https://github.com/saxix/django-concurrency"
  },
  "release_url": "https://pypi.org/project/django-concurrency/2.5/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "optimistic lock implementation for django. prevents users from doing concurrent editing.",
  "version": "2.5",
  "releases": [],
  "developers": [
    "s.apostolico@gmail.com",
    "stefano_apostolico"
  ],
  "kwds": "optimistic_concurrency_control concurrentmodel concurrency disable_concurrency concurrent",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_django_concurrency",
  "homepage": "https://github.com/saxix/django-concurrency",
  "release_count": 25,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: jupyter",
    "framework :: jupyter :: jupyterlab",
    "framework :: jupyter :: jupyterlab :: 4",
    "framework :: jupyter :: jupyterlab :: extensions",
    "framework :: jupyter :: jupyterlab :: extensions :: prebuilt",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development :: libraries"
  ],
  "description": "# pyviz_comms\n\n![github actions status](https://github.com/holoviz/pyviz_comms/workflows/test/badge.svg)\n\noffers a simple bidirectional communication architecture between python and javascript,\nwith support for jupyter comms in both the classic notebook and jupyterlab.\navailable for use by any [pyviz](https://pyviz.org) tool, but currently primarily used by\n[holoviz](https://holoviz.org) tools.\n\nthere are two installable components in this repository: a python\ncomponent used by various holoviz tools and an extension to enable\njupyterlab support. for jupyterlab 3.0 and above the extension is automatically\nbundled with the `pyviz_comms` python package.\n\n## installing the jupyterlab extension\n\njupyterlab users will need to install the jupyterlab pyviz extension. starting with jupyterlab 3.0 and above the extension will be automatically installed when installing `pyviz_comms` with `pip` using:\n\n```bash\npip install pyviz_comms\n```\n\nor using `conda` with:\n\n```bash\nconda install -c pyviz pyviz_comms\n```\n\nfor older versions of jupyterlab you must separately install:\n\n```bash\njupyter labextension install @pyviz/jupyterlab_pyviz\n```\n\n## compatibility\n\nthe [holoviz](https://github.com/holoviz/holoviz) libraries are generally version independent of\n[jupyterlab](https://github.com/jupyterlab/jupyterlab) and the `jupyterlab_pyviz` extension\nhas been supported since holoviews 1.10.0 and the first release of `pyviz_comms`.\n\nour goal is that `jupyterlab_pyviz` minor releases (using the [semver](https://semver.org/) pattern) are\nmade to follow jupyterlab minor release bumps and micro releases are for new `jupyterlab_pyviz` features\nor bug fix releases. we've been previously inconsistent with having the extension release minor version bumps\ntrack that of jupyterlab, so users seeking to find extension releases that are compatible with their jupyterlab\ninstallation may refer to the below table.\n\n###### compatible jupyterlab and jupyterlab_pyviz versions\n\n| jupyterlab | jupyterlab_pyviz |\n| ---------- | ---------------- |\n| 0.33.x     | 0.6.0            |\n| 0.34.x     | 0.6.1-0.6.2      |\n| 0.35.x     | 0.6.3-0.7.2      |\n| 1.0.x      | 0.8.0            |\n| 2.0.x      | 0.9.0-1.0.3      |\n| 3.x        | 2.0              |\n| 4.x        | 3.0              |\n\n## developing the jupyterlab extension\n\nnote: you will need nodejs to build the extension package.\n\nthe `jlpm` command is jupyterlab's pinned version of\n[yarn](https://yarnpkg.com/) that is installed with jupyterlab. you may use\n`yarn` or `npm` in lieu of `jlpm` below.\n\n```bash\n# clone the repo to your local environment\n# change directory to the holoviz_jlab directory\n# install package in development mode\npip install -e .\n# link your development version of the extension with jupyterlab\njupyter labextension develop . --overwrite\n# rebuild extension typescript source after making changes\njlpm run build\n```\n\nyou can watch the source directory and run jupyterlab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.\n\n```bash\n# watch the source directory in one terminal, automatically rebuilding when needed\njlpm run watch\n# run jupyterlab in another terminal\njupyter lab\n```\n\nwith the watch command running, every saved change will immediately be built locally and available in your running jupyterlab. refresh jupyterlab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).\n\nby default, the `jlpm run build` command generates the source maps for this extension to make it easier to debug using the browser dev tools. to also generate source maps for the jupyterlab core extensions, you can run the following command:\n\n```bash\njupyter lab build --minimize=false\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd 3-clause license  copyright (c) 2023, philipp rudiger all rights reserved.  redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1. redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  2. redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  3. neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  this software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. in no event shall the copyright holder or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.",
  "name": "pyviz-comms",
  "package_url": "https://pypi.org/project/pyviz-comms/",
  "project_url": "https://pypi.org/project/pyviz-comms/",
  "project_urls": {
    "Bug Tracker": "https://github.com/holoviz/pyviz_comms/issues",
    "Homepage": "https://github.com/holoviz/pyviz_comms",
    "Repository": "https://github.com/holoviz/pyviz_comms.git"
  },
  "release_url": "https://pypi.org/project/pyviz-comms/3.0.0/",
  "requires_dist": [
    "param",
    "pyviz-comms[build]; extra == 'all'",
    "pyviz-comms[tests]; extra == 'all'",
    "jupyterlab~=4.0; extra == 'build'",
    "keyring; extra == 'build'",
    "rfc3986; extra == 'build'",
    "setuptools>=40.8.0; extra == 'build'",
    "twine; extra == 'build'",
    "flake8; extra == 'tests'",
    "pytest; extra == 'tests'"
  ],
  "requires_python": ">=3.8",
  "summary": "a jupyterlab extension for rendering holoviz content.",
  "version": "3.0.0",
  "releases": [],
  "developers": [
    "developers@holoviz.org",
    "philipp_rudiger"
  ],
  "kwds": "jupyterlab_pyviz jupyterlab pyviz_comms jupyter python",
  "license_kwds": "copyright liability liable redistributions redistribution",
  "libtype": "pypi",
  "id": "pypi_pyviz_comms",
  "homepage": "",
  "release_count": 27,
  "dependency_ids": [
    "pypi_flake8",
    "pypi_jupyterlab",
    "pypi_keyring",
    "pypi_param",
    "pypi_pytest",
    "pypi_pyviz_comms",
    "pypi_rfc3986",
    "pypi_setuptools",
    "pypi_twine"
  ]
}
{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries"
  ],
  "description": "picobox\n=======\n\n.. image:: https://img.shields.io/pypi/l/picobox\n   :target: https://pypi.python.org/pypi/picobox\n   :alt: pypi - license\n\n.. image:: https://img.shields.io/pypi/v/picobox.svg\n   :target: https://pypi.python.org/pypi/picobox\n   :alt: pypi - version\n\n.. image:: https://img.shields.io/pypi/pyversions/picobox\n   :target: https://pypi.python.org/pypi/picobox\n   :alt: pypi - python versions\n\n.. image:: https://img.shields.io/pypi/dm/picobox\n   :target: https://pypi.python.org/pypi/picobox\n   :alt: pypi - downloads\n\npicobox is opinionated dependency injection framework designed to be clean,\npragmatic and with python in mind. no complex graphs, no implicit injections,\nno type bindings \u2013 just picoboxes, and explicit demands!\n\n\nwhy?\n----\n\nbecause we usually want to decouple our code and python lack of clean and\npragmatic solutions (even third parties).\n\n\nfeatures\n--------\n\n* support both values and factories.\n* support scopes (e.g. singleton, threadlocal, contextvars).\n* push boxes on stack, and use the top one to access values.\n* thread-safe.\n* lightweight (~500 loc including scopes).\n* zero dependencies.\n* pure python.\n* annotated with types.\n\n\n\nquickstart\n----------\n\nfirst\n\n.. code:: bash\n\n    $ [sudo] python -m pip install picobox\n\nand then\n\n.. code:: python\n\n    import picobox\n    import requests\n\n\n    @picobox.pass_(\"conf\")\n    @picobox.pass_(\"requests\", as_=\"session\")\n    def get_resource(uri, session, conf):\n        return session.get(conf[\"base_uri\"] + uri)\n\n\n    box = picobox.box()\n    box.put(\"conf\", {\"base_uri\": \"http://example.com\"})\n    box.put(\"requests\", factory=requests.session, scope=picobox.threadlocal)\n\n    with picobox.push(box):\n        get_resource(\"/resource\", requests.session(), {})\n        get_resource(\"/resource\", requests.session())\n        get_resource(\"/resource\")\n\n\nlinks\n-----\n\n* documentation: https://picobox.readthedocs.io\n* source: https://github.com/ikalnytskyi/picobox\n* bugs: https://github.com/ikalnytskyi/picobox/issues\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "picobox",
  "package_url": "https://pypi.org/project/picobox/",
  "project_url": "https://pypi.org/project/picobox/",
  "project_urls": {
    "Bugs": "https://github.com/ikalnytskyi/picobox/issues",
    "Documentation": "https://picobox.readthedocs.io",
    "Source": "https://github.com/ikalnytskyi/picobox"
  },
  "release_url": "https://pypi.org/project/picobox/4.0.0/",
  "requires_dist": [],
  "requires_python": ">=3.8",
  "summary": "dependency injection framework designed with python in mind.",
  "version": "4.0.0",
  "releases": [],
  "developers": [
    "ihor@kalnytskyi.com"
  ],
  "kwds": "picobox picoboxes pyversions dependencies dependency",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_picobox",
  "homepage": "",
  "release_count": 7,
  "dependency_ids": []
}
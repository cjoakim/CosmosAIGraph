{
  "classifiers": [],
  "description": "# kubernetes-validate\n\nkubernetes-validate validates kubernetes resource definitions against the\ndeclared kubernetes schemas.\n\nbased on gareth rushgrove's excellent work providing a basis for turning kubernetes\nswagger api definitions into jsonschema definitions, kubernetes-validate will report\non mismatches between schema defnition and resource definition\n\nnote that this currently uses a fork of kubernetes-json-schema for the following reasons:\n* add api versions into schema names (built using https://github.com/garethr/openapi2jsonschema/pull/11)\n* [increase coverage of strict versions](https://github.com/garethr/kubernetes-json-schema/pull/8)\n* [update to latest kubernetes released api versions](https://github.com/garethr/kubernetes-json-schema/pull/8)\n* provide local-strict schemas\n* reduce kubernetes version support (v1.5 and v1.6 schemas are not included to reduce\n  library size and schema build time)\n\nfurthermore, the module now includes only the .0 api schemas, as they change so little within a kubernetes\nversion (there are some differences but they seem to be mostly irrelevant to validation - e.g. description\nupdates). this has taken the module down from 300mb to less than 30mb.\n\nif the relevant prs get accepted upstream, then this will revert to the upstream fork.\n\n## installation\n\npip install kubernetes-validate\n\n## usage\n\n### command line\n\n```\n$ kubernetes-validate\nusage: kubernetes-validate [-h] [-k kubernetes_version] [--strict] [--version]\n                           ...\n\nvalidate a kubernetes resource definition\n\npositional arguments:\n  filenames\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -k kubernetes_version, --kubernetes-version kubernetes_version\n                        version of kubernetes against which to validate.\n                        defaults to major/minor version of kubernetes-validate\n                        (i.e. 1.22.1 supports kubernetes 1.22). patch versions\n                        of the version are ignored (1.22.4 validates against\n                        1.22.0)\n  --strict              whether to use strict validation, rejecting unexpected\n                        properties\n  --quiet               whether to only output warnings/failures\n  --no-warn             whether to hide warnings\n  --version             show program's version number and exit\n```\n\ne.g.\n\n```\n$ kubernetes-validate -k 1.27 --strict resource.yml\n```\n\n### python\n\n```\nfrom __future__ import print_function\nimport kubernetes_validate\nimport yaml\n\ntry:\n    data = yaml.load(open('resource.yaml').read())\n    kubernetes_validate.validate(data, '1.22', strict=true)\nexcept kubernetes_validate.validationerror as e:\n    print(''. join(e.path), e.message)\n```\n\n### examples\n\n```\n$ kubernetes-validate -k 1.21 examples/kuard-extra-property.yaml\ninfo  examples/kuard-extra-property.yaml passed against version 1.21\n```\n\n```\n$ kubernetes-validate --strict examples/kuard-extra-property.yaml\nerror examples/kuard-extra-property.yaml did not validate against version 1.28.0: spec.selector: additional properties are not allowed ('unwanted' was unexpected)\n```\n\n```\n$ kubernetes-validate examples/kuard-invalid-type.yaml\nerror examples/kuard-invalid-type.yaml did not validate against version 1.28.0: spec.replicas: 'hello' is not of type u'integer'\n```\n\n",
  "docs_url": null,
  "keywords": "kubernetes,schema,validate,validator",
  "license": "apache",
  "name": "kubernetes-validate",
  "package_url": "https://pypi.org/project/kubernetes-validate/",
  "project_url": "https://pypi.org/project/kubernetes-validate/",
  "project_urls": {
    "Homepage": "https://github.com/willthames/kubernetes-validate"
  },
  "release_url": "https://pypi.org/project/kubernetes-validate/1.28.3/",
  "requires_dist": [
    "PyYAML",
    "jsonschema",
    "typing-extensions",
    "importlib-resources",
    "packaging"
  ],
  "requires_python": ">=3.7",
  "summary": "validates kubernetes resource definitions against schemas",
  "version": "1.28.3",
  "releases": [],
  "developers": [
    "will@thames.id.au"
  ],
  "kwds": "kubernetes_validate kubernetes_version kubernetes swagger openapi2jsonschema",
  "license_kwds": "apache",
  "libtype": "pypi",
  "id": "pypi_kubernetes_validate",
  "homepage": "",
  "release_count": 39,
  "dependency_ids": [
    "pypi_importlib_resources",
    "pypi_jsonschema",
    "pypi_packaging",
    "pypi_pyyaml",
    "pypi_typing_extensions"
  ]
}
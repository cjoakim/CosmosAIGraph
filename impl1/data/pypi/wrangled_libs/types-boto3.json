{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development :: libraries :: python modules",
    "typing :: typed"
  ],
  "description": "# types-boto3\n\n[![pypi - botocore-stubs](https://img.shields.io/pypi/v/botocore-stubs.svg?color=blue)](https://pypi.org/project/botocore-stubs)\n[![pypi - python version](https://img.shields.io/pypi/pyversions/botocore-stubs.svg?color=blue)](https://pypi.org/project/botocore-stubs)\n[![docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)\n[![pypi - downloads](https://img.shields.io/pypi/dm/botocore-stubs?color=blue)](https://pypistats.org/packages/botocore-stubs)\n\n![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)\n\nproxy package for [boto3-stubs](https://pypi.org/project/boto3-stubs/).\ninstall submodules for `boto3` services type annotations.\n\ntype annotations for\n[botocore](https://github.com/boto/botocore)\ncompatible with\n[vscode](https://code.visualstudio.com/),\n[pycharm](https://www.jetbrains.com/pycharm/),\n[emacs](https://www.gnu.org/software/emacs/),\n[sublime text](https://www.sublimetext.com/),\n[mypy](https://github.com/python/mypy),\n[pyright](https://github.com/microsoft/pyright)\nand other tools.\n\nsee how it helps to find and fix potential bugs:\n\n![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)\n\n## how to install\n\n### vscode extension\n\nadd [aws boto3](https://marketplace.visualstudio.com/items?itemname=boto3typed.boto3-ide)\nextension to your vscode and run `aws boto3: quick start` command.\n\n### from pypi with pip\n\ninstall `botocore-stubs` to add type annotations for `botocore` package.\ninstall `boto3-stubs` to add type annotations for `boto3` package.\n\n```bash\n# install type annotations only for botocore\npython -m pip install botocore-stubs\n\n# install type annotations only for boto3 and botocore\npython -m pip install botocore-stubs boto3-stubs\n\n# install `boto3` type annotations\n# for ec2, s3, rds, lambda, sqs, dynamo and cloudformation\n# consumes ~7 mb of space\npython -m pip install 'boto3-stubs[essential]'\n\n# lite version does not provide session.client/resource overloads\n# it is more ram-friendly, but requires explicit type annotations\npython -m pip install 'boto3-stubs-lite[essential]'\n\n# or install annotations for services you use\npython -m pip install 'boto3-stubs[acm,apigateway]'\n```\n\n### from conda-forge\n\ninstalling `boto3-stubs` from the `conda-forge` channel can be achieved by adding `conda-forge` to your channels with:\n\n```bash\nconda config --add channels conda-forge\nconda config --set channel_priority strict\n```\n\nonce the `conda-forge` channel has been enabled, `boto3-stubs` and `boto3-stubs-essential` can be installed with:\n\n```bash\nconda install boto3-stubs boto3-stubs-essential\n```\n\nit is possible to list all of the versions of `boto3-stubs` available on your platform with:\n\n```bash\nconda search boto3-stubs --channel conda-forge\n```\n\n## how to uninstall\n\n```bash\n# uninstall boto3-stubs\npython -m pip uninstall -y boto3-stubs botocore-stubs\n\n# uninstall submodules\npython -m pip freeze | grep mypy-boto3 | xargs python -m pip uninstall -y\n```\n\n## usage\n\n### vscode\n\n- install [python extension](https://marketplace.visualstudio.com/items?itemname=ms-python.python)\n- install [pylance extension](https://marketplace.visualstudio.com/items?itemname=ms-python.vscode-pylance)\n- set `pylance` as your python language server\n- install `boto3-stubs` with services you use in your environment: `python -m pip install 'boto3-stubs[s3,ec2]'`\n\nboth type checking and code completion should work for installed `boto3` services.\nno explicit type annotations required, write your `boto3` code as usual.\n\n### pycharm\n\n- install `boto3-stubs-lite` with services you use in your environment:\n\n```bash\npython -m pip install 'boto3-stubs-lite[s3,ec2]'\n```\n\nboth type checking and code completion should work for installed services.\nexplicit type annotations **are required**. use `boto3-stubs` package instead for implicit type discovery.\n\n### emacs\n\n- install `boto3-stubs` with services you use in your environment: `python -m pip install 'boto3-stubs[s3,ec2]'`\n- install\n  [use-package](https://github.com/jwiegley/use-package),\n  [lsp](https://github.com/emacs-lsp/lsp-mode/),\n  [company](https://github.com/company-mode/company-mode) and\n  [flycheck](https://github.com/flycheck/flycheck) packages\n- install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package\n\n```elisp\n(use-package lsp-pyright\n  :ensure t\n  :hook (python-mode . (lambda ()\n                          (require 'lsp-pyright)\n                          (lsp)))  ; or lsp-deferred\n  :init (when (executable-find \"python3\")\n          (setq lsp-pyright-python-executable-cmd \"python3\"))\n  )\n```\n\n- make sure emacs uses the environment where you have installed `boto3-stubs`\n\n### sublime text\n\n- install `boto3-stubs` with services you use in your environment: `python -m pip install 'boto3-stubs[s3,ec2]'`\n- install [lsp-pyright](https://github.com/sublimelsp/lsp-pyright) package\n- make sure emacs uses the environment where you have installed `boto3-stubs`\n\n### other ides\n\nnot tested, but as long as your ide supports `mypy` or `pyright`, everything should work.\n\n### mypy\n\n- install `mypy`: `python -m pip install mypy`\n- install `boto3-stubs` with services you use in your environment: `python -m pip install 'boto3-stubs[s3,ec2]'`\n- run `mypy` as usual\n\ntype checking should work for installed `boto3` services.\nno explicit type annotations required, write your `boto3` code as usual.\n\n### pyright\n\n- install `pyright`: `yarn global add pyright`\n- install `boto3-stubs` with services you use in your environment: `python -m pip install 'boto3-stubs[s3,ec2]'`\n- optionally, you can install `boto3-stubs` to `typings` folder.\n\ntype checking should work for installed `boto3` services.\nno explicit type annotations required, write your `boto3` code as usual.\n\n## how it works\n\nfully automated [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully generates\ntype annotations for each service, patiently waiting for `boto3` updates. it delivers\na drop-in type annotations for you and makes sure that:\n\n- all available `boto3` services are covered.\n- each public class and method of every `boto3` service gets valid type annotations\n  extracted from the documentation (blame `botocore` docs if types are incorrect).\n- type annotations include up-to-date documentation.\n- link to documentation is provided for every method.\n- code is processed by [black](https://github.com/psf/black)\n  and [isort](https://github.com/pycqa/isort) for readability.\n\n## what's new\n\n### implemented features\n\n- fully type annotated `boto3` library\n- `mypy`, `pyright`, `vscode`, `pycharm`, `sublime text` and `emacs` compatibility\n- `client` type annotations for each service\n- `serviceresource` type annotations for each service\n- `resource` type annotations for each service\n- `waiter` type annotations for each service\n- `paginator` type annotations for each service\n- generated `typedefs` for each service\n- generated `literals` for each service\n- auto discovery of types for `boto3.client` and `boto3.session` calls\n- auto discovery of types for `session.client` and `session.session` calls\n- auto discovery of types for `client.get_waiter` and `client.get_paginator` calls\n- auto discovery of types for `serviceresource` and `resource` collections\n\n### latest changes\n\nbuilder changelog can be found in [releases](https://github.com/youtype/mypy_boto3_builder/releases).\n\n## versioning\n\n`botocore-stubs` version is the same as related `botocore` version and follows\n[pep 440](https://www.python.org/dev/peps/pep-0440/) format.\n\n## thank you\n\n- [allie fitter](https://github.com/alliefitter) for\n  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),\n  this package is based on top of his work\n- [black](https://github.com/psf/black) developers for an awesome formatting tool\n- [timothy edmund crosley](https://github.com/timothycrosley) for\n  [isort](https://github.com/pycqa/isort) and how flexible it is\n- [mypy](https://github.com/python/mypy) developers for doing all dirty work for us\n- [pyright](https://github.com/microsoft/pyright) team for the new era of typed python\n\n## documentation\n\nall services type annotations can be found in [boto3-stubs docs](https://youtype.github.io/boto3_stubs_docs/)\n\n## support and contributing\n\nthis package is auto-generated. please reports any bugs or request new features in\n[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/) repository.\n\n\n",
  "docs_url": null,
  "keywords": "boto3 type-annotations pyright mypy boto3-stubs",
  "license": "mit",
  "name": "types-boto3",
  "package_url": "https://pypi.org/project/types-boto3/",
  "project_url": "https://pypi.org/project/types-boto3/",
  "project_urls": {
    "Documentation": "https://mypy-boto3-builder.readthedocs.io/en/latest/",
    "Homepage": "https://github.com/youtype/mypy_boto3_builder",
    "Source": "https://github.com/youtype/mypy_boto3_builder",
    "Tracker": "https://github.com/youtype/mypy_boto3_builder/issues"
  },
  "release_url": "https://pypi.org/project/types-boto3/1.0.2/",
  "requires_dist": [
    "boto3-stubs"
  ],
  "requires_python": "",
  "summary": "proxy package for boto3-stubs",
  "version": "1.0.2",
  "releases": [],
  "developers": [
    "vlad.emelianov.nz@gmail.com",
    "vlad_emelianov"
  ],
  "kwds": "boto3_stubs_docs mypy_boto3_builder boto3typed boto3 botocore",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_types_boto3",
  "homepage": "https://github.com/youtype/mypy_boto3_builder",
  "release_count": 3,
  "dependency_ids": [
    "pypi_boto3_stubs"
  ]
}
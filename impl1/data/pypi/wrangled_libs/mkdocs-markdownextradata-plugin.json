{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: information technology",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7"
  ],
  "description": "# mkdocs-markdownextradata-plugin\n\n[![build status](https://travis-ci.org/rosscdh/mkdocs-markdownextradata-plugin.svg?branch=master)](https://travis-ci.org/rosscdh/mkdocs-markdownextradata-plugin)\n\n*a mkdocs plugin that injects the mkdocs.yml extra variables into the markdown template*\n\n**usecase**\n\n```\nas a user with variables that need to be inserted at the markdown level, not the template level.\ni need a mkdocs plugin that will inject my `extras` variables into the markdown template before it gets rendered to html.\nso that i can build my markdown pages with different values for images, urls, client_names, etc. \n```\n\n## installation\n\n> **note:** this package requires mkdocs version 0.17 or higher. \n\ninstall the package with pip:\n\n```bash\npip install mkdocs-markdownextradata-plugin\n```\n\nenable the plugin in your `mkdocs.yml`:\n\n```yaml\nplugins:\n    - search\n    - markdownextradata: {}\n```\n\nyou are then able to use the mkdocs `extra: {}` hash to pass context data into your files\n\n> **note:** if you have no `plugins` entry in your config file yet, you'll likely also want to add the `search` plugin. mkdocs enables it by default if there is no `plugins` entry set, but now you have to enable it explicitly.\n\n\n## features\n\n### use extra variables in your markdown files\n\nthe variables you define in the mkdown.yml `extra:` slot will become available in your templates\n\n```yaml\nsite_name: my fantastic site\n\nplugins:\n    - search\n    - markdownextradata\n\nextra:\n  customer:\n    name: your name here\n    web: www.example.com\n    salt: salt.example.com\n```\n\nand then in your `*.md` files\n\n```jinja\n{{ customer.name }}\n<a href=\"{{ customer.web }}\">{{ customer.web }}</a>\n```\n\n### using external data files\n\nif the `extra: {}` hash is not enough for your data then you are able to make use of external yaml files to provide that context data\n\n```yaml\nplugins:\n    - search\n    - markdownextradata:\n        data: path/to/datafiles\n```\n\nor if you have multiple locations provide a comma (,) separated list of locations\n\n```yaml\nplugins:\n    - search\n    - markdownextradata:\n        data: path/to/datafiles, another/path/to/datafiles\n```\n\nif you leave `markdownextradata.data` empty\n\n```yaml\nplugins:\n    - search\n    - markdownextradata\n```\n\nby default it will search in the folder where your mkdocs.yml is kept\nand in the docs folder for another folder called `_data` \n(i.e. `./docs/_data/site.yaml`), available as `{{ site.whatever_variable_in_the_yaml}}`.\n\nif these paths are found, the plugin will read all `.yml|.yaml` and `.json`\nfiles inside them and add the data in them under the `extra` key.\n\nfor example, if you have a file called `[path/to/datafiles/]sections/captions.yaml` \nwhich includes a variable `foo` - where `[path/to/datafiles/]` is the path declared\nin your configuration under `data` - the data inside that file will be available in\n your templates as `{{sections.captions.foo}}` or `{{sections['captions']['foo']}}`.\n\nalternatively, you can access all files and variable declared under `data` in template\nusing `extra` key. \nthis is particularly useful if your folder or filename do not comply with the python\nvariable naming rules.\nfor example, if you have a file `[path/to/datafiles/]1_example/captions.yaml`\nwhich includes a variable `bar`, writting the template as \n`{{1_example.captions.bar}}` returns a `jinja2.exceptions.templatesyntaxerror` since\nthe folder `1_example` starts with a number. instead, you can call this file with\n when the template is `{{extra['1_example']['captions']['bar']}}`.\n\n\n### jinja2 template engine configuration\n\nyou may provide [jinja2 configuration](https://jinja.palletsprojects.com/en/2.11.x/api/#high-level-api) as plugin options:\n\n```yml\nplugins:\n    - markdownextradata:\n        jinja_options:\n          comment_start_string: __customcommentstart__\n```\n\nthe above example will make it so that instead of `{#`, the template engine will interpret `__customcommentstart__` as comment start delimiter. this is useful in cases where\nyou write markdown that contains jinja-like syntax that's colliding with the template engine. alternatively, it lets you control what the variable delimiter is (instead of the default `{{ }}`).\n\n## testing\n\n```\nvirtualenv venv -p python3.7\nsource venv/bin/activate\npython setup.py test\npytest test\n```\n\n## contributing\n\nfrom reporting a bug to submitting a pull request: every contribution is appreciated and welcome.\nreport bugs, ask questions and request features using [github issues][github-issues].\nif you want to contribute to the code of this project, please read the [contribution guidelines][contributing].\n\n[travis-status]: https://travis-ci.org/rosscdh/mkdocs-markdownextradata-plugin.svg?branch=master\n[travis-link]: https://travis-ci.org/rosscdh/mkdocs-markdownextradata-plugin\n[mkdocs-plugins]: http://www.mkdocs.org/user-guide/plugins/\n[github-issues]: https://github.com/rosscdh/mkdocs-markdownextradata-plugin/issues\n[contributing]: contributing.md\n\n### contributors\n\n- [ross crawford-d'heureuse](https://github.com/rosscdh)\n- [emiliano heyns](https://github.com/retorquere)\n- [michael jess](https://github.com/miffels)\n- [jo\u00e3o moura](https://github.com/operte)\n\n\n",
  "docs_url": null,
  "keywords": "mkdocs python markdown extra values",
  "license": "mit",
  "name": "mkdocs-markdownextradata-plugin",
  "package_url": "https://pypi.org/project/mkdocs-markdownextradata-plugin/",
  "project_url": "https://pypi.org/project/mkdocs-markdownextradata-plugin/",
  "project_urls": {
    "Homepage": "https://github.com/rosscdh/mkdocs-markdownextradata-plugin/"
  },
  "release_url": "https://pypi.org/project/mkdocs-markdownextradata-plugin/0.2.5/",
  "requires_dist": [],
  "requires_python": ">=2.7.9,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
  "summary": "a mkdocs plugin that injects the mkdocs.yml extra variables into the markdown template",
  "version": "0.2.5",
  "releases": [],
  "developers": [
    "ross_crawford",
    "sendrossemail@gmail.com"
  ],
  "kwds": "whatever_variable_in_the_yaml mkdocs markdown markdownextradata mkdown",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_mkdocs_markdownextradata_plugin",
  "homepage": "https://github.com/rosscdh/mkdocs-markdownextradata-plugin/",
  "release_count": 20,
  "dependency_ids": []
}
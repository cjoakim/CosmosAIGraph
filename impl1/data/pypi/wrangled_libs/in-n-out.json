{
  "classifiers": [
    "development status :: 3 - alpha",
    "license :: osi approved :: bsd license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "# in-n-out\n\n[![license](https://img.shields.io/pypi/l/in-n-out.svg?color=green)](https://github.com/pyapp-kit/in-n-out/raw/main/license)\n[![pypi](https://img.shields.io/pypi/v/in-n-out.svg?color=green)](https://pypi.org/project/in-n-out)\n[![python version](https://img.shields.io/pypi/pyversions/in-n-out.svg?color=green)](https://python.org)\n[![ci](https://github.com/pyapp-kit/in-n-out/actions/workflows/ci.yml/badge.svg)](https://github.com/pyapp-kit/in-n-out/actions/workflows/ci.yml)\n[![codecov](https://codecov.io/gh/pyapp-kit/in-n-out/branch/main/graph/badge.svg)](https://app.codecov.io/gh/pyapp-kit/in-n-out)\n[![benchmarks](https://img.shields.io/badge/\u23f1-codspeed-%23ff7b53)](https://codspeed.io/pyapp-kit/in-n-out)\n\npython dependency injection you can taste.\n\na lightweight dependency injection and result processing framework\nfor python using type hints. emphasis is on simplicity, ease of use,\nand minimal impact on source code.\n\n```python\nimport in_n_out as ino\n\n\nclass thing:\n    def __init__(self, name: str):\n        self.name = name\n\n\n# use ino.inject to create a version of the function\n# that will retrieve the required dependencies at call time\n@ino.inject\ndef func(thing: thing):\n    return thing.name\n\n\ndef give_me_a_thing() -> thing:\n    return thing(\"thing\")\n\n\n# register a provider of thing\nino.register_provider(give_me_a_thing)\nprint(func())  # prints \"thing\"\n\n\ndef give_me_another_thing() -> thing:\n    return thing(\"another thing\")\n\n\nwith ino.register_provider(give_me_another_thing, weight=10):\n    print(func())  # prints \"another thing\"\n```\n\nthis also supports processing *return* values as well\n(injection of intentional side effects):\n\n```python\n\n@ino.inject_processors\ndef func2(thing: thing) -> str:\n    return thing.name\n\ndef greet_name(name: str):\n    print(f\"hello, {name}!\")\n\nino.register_processor(greet_name)\n\nfunc2(thing('bob'))  # prints \"hello, bob!\"\n```\n\n### alternatives\n\nlots of other python di frameworks exist, here are a few alternatives to consider:\n\n- <https://github.com/ets-labs/python-dependency-injector>\n- <https://github.com/google/pinject>\n- <https://github.com/ivankorobkov/python-inject>\n- <https://github.com/alecthomas/injector>\n- <https://github.com/finistere/antidote>\n- <https://github.com/dry-python/returns>\n- <https://github.com/adriangb/di>\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd 3-clause license",
  "name": "in-n-out",
  "package_url": "https://pypi.org/project/in-n-out/",
  "project_url": "https://pypi.org/project/in-n-out/",
  "project_urls": {
    "documentation": "https://pyapp-kit.github.io/in-n-out",
    "homepage": "https://github.com/pyapp-kit/in-n-out",
    "repository": "https://github.com/pyapp-kit/in-n-out"
  },
  "release_url": "https://pypi.org/project/in-n-out/0.1.9/",
  "requires_dist": [
    "black; extra == 'dev'",
    "ipython; extra == 'dev'",
    "mypy; extra == 'dev'",
    "pdbpp; extra == 'dev'",
    "pre-commit; extra == 'dev'",
    "pydocstyle; extra == 'dev'",
    "pytest; extra == 'dev'",
    "pytest-cov; extra == 'dev'",
    "rich; extra == 'dev'",
    "ruff; extra == 'dev'",
    "pytest-codspeed; extra == 'test'",
    "pytest-cov; extra == 'test'",
    "pytest>=6.0; extra == 'test'",
    "toolz; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "plugable dependency injection and result processing",
  "version": "0.1.9",
  "releases": [],
  "developers": [
    "talley.lambert@gmail.com"
  ],
  "kwds": "pyversions pypi badge python pyapp",
  "license_kwds": "bsd 3-clause license",
  "libtype": "pypi",
  "id": "pypi_in_n_out",
  "homepage": "",
  "release_count": 12,
  "dependency_ids": [
    "pypi_black",
    "pypi_ipython",
    "pypi_mypy",
    "pypi_pdbpp",
    "pypi_pre_commit",
    "pypi_pydocstyle",
    "pypi_pytest",
    "pypi_pytest_codspeed",
    "pypi_pytest_cov",
    "pypi_rich",
    "pypi_ruff",
    "pypi_toolz"
  ]
}
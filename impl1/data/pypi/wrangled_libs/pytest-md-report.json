{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: plugins",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing",
    "topic :: text processing",
    "topic :: text processing :: markup :: markdown",
    "typing :: typed"
  ],
  "description": ".. contents:: **pytest-md-report**\n   :backlinks: top\n   :depth: 2\n\n\nsummary\n============================================\n.. image:: https://badge.fury.io/py/pytest-md-report.svg\n    :target: https://badge.fury.io/py/pytest-md-report\n    :alt: pypi package version\n\n.. image:: https://img.shields.io/pypi/pyversions/pytest-md-report.svg\n    :target: https://pypi.org/project/pytest-md-report\n    :alt: supported python versions\n\n.. image:: https://img.shields.io/pypi/implementation/pytest-md-report.svg\n    :target: https://pypi.org/project/pytest-md-report\n    :alt: supported python implementations\n\n.. image:: https://github.com/thombashi/pytest-md-report/workflows/tests/badge.svg\n    :target: https://github.com/thombashi/pytest-md-report/actions?query=workflow%3atests\n    :alt: linux/macos/windows ci status\n\n.. image:: https://github.com/thombashi/pytest-md-report/actions/workflows/github-code-scanning/codeql/badge.svg\n    :target: https://github.com/thombashi/pytest-md-report/actions/workflows/github-code-scanning/codeql\n    :alt: codeql\n\na pytest plugin to make test results report with markdown table format.\n\n\ninstallation\n============================================\n::\n\n    pip install pytest-md-report\n\n\nusage\n============================================\n::\n\n    pytest --md-report examples/\n\n.. figure:: https://cdn.jsdelivr.net/gh/thombashi/pytest-md-report@master/ss/pytest_md_report_example.png\n    :scale: 80%\n    :alt: https://github.com/thombashi/pytest-md-report/blob/master/ss/pytest_md_report_example.png\n\n    output example\n\n\nother examples\n--------------------------------------------\nincrease verbosity level (``--md-report-verbose`` option):\n\n::\n\n    pytest --md-report --md-report-verbose=1 examples/\n\n.. figure:: https://cdn.jsdelivr.net/gh/thombashi/pytest-md-report@master/ss/pytest_md_report_example_verbose.png\n    :scale: 80%\n    :alt: https://github.com/thombashi/pytest-md-report/blob/master/ss/pytest_md_report_example_verbose.png\n\n    output example (verbose)\n\nnot rendering results of zero value (``--md-report-zeros emmpty`` option):\n\n::\n\n    pytest --md-report --md-report-zeros empty --md-report-color never examples/\n\n::\n\n    |         filepath         | passed | failed | error | skipped | xfailed | xpassed | subtotal |\n    | ------------------------ | -----: | -----: | ----: | ------: | ------: | ------: | -------: |\n    | examples/test_error.py   |        |        |     2 |         |         |         |        2 |\n    | examples/test_failed.py  |        |      2 |       |         |         |         |        2 |\n    | examples/test_pass.py    |      2 |        |       |         |         |         |        2 |\n    | examples/test_skipped.py |        |        |       |       2 |         |         |        2 |\n    | examples/test_xfailed.py |        |        |       |         |       2 |         |        2 |\n    | examples/test_xpassed.py |        |        |       |         |         |       2 |        2 |\n    | total                    |      2 |      2 |     2 |       2 |       2 |       2 |       12 |\n\ngenerate github flavored markdown (gfm) report:\n\n::\n\n    pytest --md-report --md-report-flavor gfm examples/\n\ngfm rendering result can be seen at `here <https://github.com/thombashi/pytest-md-report/blob/master/examples/gfm_report.md>`__.\n\n\nconfig file examples\n--------------------------------------------\nyou can set configurations with ``pyproject.toml`` or ``setup.cfg`` as follows.\n\n:example of ``pyproject.toml``:\n    .. code-block:: toml\n\n        [tool.pytest.ini_options]\n        md_report = true\n        md_report_verbose = 0\n        md_report_color = \"auto\"\n\n:example of ``setup.cfg``:\n    .. code-block:: ini\n\n        [tool:pytest]\n        md_report = true\n        md_report_verbose = 0\n        md_report_color = auto\n\n\nadd report to pull requests\n--------------------------------------------\nyou can add test reports to pull requests by github actions workflow like the below:\n\n.. code-block:: yaml\n\n    name: md-report\n\n    on:\n      pull_request:\n\n    jobs:\n      run-tests:\n        runs-on: ubuntu-latest\n\n        steps:\n          - uses: actions/checkout@v4\n\n          - uses: actions/setup-python@v4\n            with:\n              python-version: '3.11'\n              cache: pip\n\n          - name: install dependencies\n            run: pip install --upgrade pytest-md-report\n\n          - name: run tests\n            run: pytest --md-report --md-report-flavor gfm --md-report-output md_report.md\n\n          - name: render reports to the pr when tests fail\n            if: failure()\n            env:\n              gh_token: ${{ github.token }}\n              pr_number: ${{ github.event.number }}\n            run:\n              gh pr comment $pr_number --body-file md_report.md \n\n.. figure:: https://cdn.jsdelivr.net/gh/thombashi/pytest-md-report@master/ss/md-report_gha.png\n    :scale: 80%\n    :alt: https://github.com/thombashi/pytest-md-report/blob/master/ss/md-report_gha.png\n\n    rendering result\n\n\noptions\n============================================\n\ncommand options\n--------------------------------------------\n::\n\n    make test results report with markdown table format:\n      --md-report           create markdown report. you can also specify the value\n                            with pytest_md_report environment variable.\n      --md-report-verbose=verbosity_level\n                            verbosity level for pytest-md-report.\n                            if not set, use the verbosity level of pytest.\n                            defaults to 0.\n                            you can also specify the value with\n                            pytest_md_report_verbose environment variable.\n      --md-report-output=filepath\n                            path to a file to the outputs test report.\n                            overwrite a file content if the file already exists.\n                            you can also specify the value with\n                            pytest_md_report_output environment variable.\n      --md-report-tee       output test report for both standard output and a file.\n                            you can also specify the value with pytest_md_report_tee\n                            environment variable.\n      --md-report-color={auto,text,never}\n                            how coloring output reports.\n                            auto: detect the output destination and colorize reports\n                            appropriately with the output.\n                            for terminal output, render colored (text and\n                            background) reports using ansi escape codes.\n                            for file output, render the report without color.\n                            text: render colored text reports by using ansi escape\n                            codes.\n                            never: render report without color.\n                            defaults to 'auto'.\n                            you can also specify the value with\n                            pytest_md_report_color environment variable.\n      --md-report-margin=margin\n                            margin size for each cell.\n                            defaults to 1.\n                            you can also specify the value with\n                            pytest_md_report_margin environment variable.\n      --md-report-zeros={number,empty}\n                            rendering method for results of zero values.\n                            number: render as a digit number (0).\n                            empty: not rendering.\n                            automatically set to 'number' when ci environment\n                            variable is set to\n                            true (case insensitive) to display reports correctly at\n                            ci services.\n                            defaults to 'number'.\n                            you can also specify the value with\n                            pytest_md_report_zeros environment variable.\n      --md-report-success-color=md_report_success_color\n                            text color of succeeded results.\n                            specify a color name (one of the black/red/green/yellow/\n                            blue/magenta/cyan/white/lightblack/lightred/lightgreen/l\n                            ightyellow/lightblue/lightmagenta/lightcyan/lightwhite)\n                            or a color code (e.g. #ff1020).\n                            defaults to 'light_green'.\n                            you can also specify the value with\n                            pytest_md_report_success_color environment variable.\n      --md-report-skip-color=md_report_skip_color\n                            text color of skipped results.\n                            specify a color name (one of the black/red/green/yellow/\n                            blue/magenta/cyan/white/lightblack/lightred/lightgreen/l\n                            ightyellow/lightblue/lightmagenta/lightcyan/lightwhite)\n                            or a color code (e.g. #ff1020).\n                            defaults to 'light_yellow'.\n                            you can also specify the value with\n                            pytest_md_report_skip_color environment variable.\n      --md-report-error-color=md_report_error_color\n                            text color of failed results.\n                            specify a color name (one of the black/red/green/yellow/\n                            blue/magenta/cyan/white/lightblack/lightred/lightgreen/l\n                            ightyellow/lightblue/lightmagenta/lightcyan/lightwhite)\n                            or a color code (e.g. #ff1020).\n                            defaults to 'light_red'.\n                            you can also specify the value with\n                            pytest_md_report_error_color environment variable.\n      --md-report-flavor={common_mark,github,gfm,jekyll,kramdown}\n                            markdown flavor of the output report.\n                            defaults to 'common_mark'.\n                            you can also specify the value with\n                            pytest_md_report_flavor environment variable.\n\n\nini-options\n--------------------------------------------\n[pytest] ini-options in the first ``pytest.ini``/``tox.ini``/``setup.cfg``/``pyproject.toml (pytest 6.0.0 or later)`` file found:\n\n::\n\n  md_report (bool):     create markdown report.\n  md_report_verbose (string):\n                        verbosity level for pytest-md-report. if not set, use\n                        the verbosity level of pytest. defaults to 0.\n  md_report_color (string):\n                        how coloring output reports. auto: detect the output\n                        destination and colorize reports appropriately with the\n                        output. for terminal output, render colored (text and\n                        background) reports using ansi escape codes. for file\n                        output, render the report without color. text: render\n                        colored text reports by using ansi escape codes. never:\n                        render report without color. defaults to 'auto'.\n  md_report_output (string):\n                        path to a file to the outputs test report. overwrite a\n                        file content if the file already exists.\n  md_report_tee (string):\n                        output test report for both standard output and a file.\n  md_report_margin (string):\n                        margin size for each cell. defaults to 1.\n  md_report_zeros (string):\n                        rendering method for results of zero values. number:\n                        render as a digit number (0). empty: not rendering.\n                        automatically set to 'number' when ci environment\n                        variable is set to true (case insensitive) to display\n                        reports correctly at ci services. defaults to 'number'.\n  md_report_success_color (string):\n                        text color of succeeded results. specify a color name\n                        (one of the black/red/green/yellow/blue/magenta/cyan/whi\n                        te/lightblack/lightred/lightgreen/lightyellow/lightblue/\n                        lightmagenta/lightcyan/lightwhite) or a color code (e.g.\n                        #ff1020). defaults to 'light_green'.\n  md_report_skip_color (string):\n                        text color of skipped results. specify a color name (one\n                        of the black/red/green/yellow/blue/magenta/cyan/white/li\n                        ghtblack/lightred/lightgreen/lightyellow/lightblue/light\n                        magenta/lightcyan/lightwhite) or a color code (e.g.\n                        #ff1020). defaults to 'light_yellow'.\n  md_report_error_color (string):\n                        text color of failed results. specify a color name (one\n                        of the black/red/green/yellow/blue/magenta/cyan/white/li\n                        ghtblack/lightred/lightgreen/lightyellow/lightblue/light\n                        magenta/lightcyan/lightwhite) or a color code (e.g.\n                        #ff1020). defaults to 'light_red'.\n  md_report_flavor (string):\n                        markdown flavor of the output report. defaults to\n                        'common_mark'.\n\n\ndependencies\n============================================\n- python 3.7+\n- `python package dependencies (automatically installed) <https://github.com/thombashi/pytest-md-report/network/dependencies>`__\n",
  "docs_url": null,
  "keywords": "pytest,plugin,markdown",
  "license": "mit license",
  "name": "pytest-md-report",
  "package_url": "https://pypi.org/project/pytest-md-report/",
  "project_url": "https://pypi.org/project/pytest-md-report/",
  "project_urls": {
    "Changlog": "https://github.com/thombashi/pytest-md-report/releases",
    "Homepage": "https://github.com/thombashi/pytest-md-report",
    "Source": "https://github.com/thombashi/pytest-md-report",
    "Tracker": "https://github.com/thombashi/pytest-md-report/issues"
  },
  "release_url": "https://pypi.org/project/pytest-md-report/0.5.0/",
  "requires_dist": [
    "pytablewriter <2,>=1.2.0",
    "pytest !=6.0.0,<8,>=3.3.2",
    "tcolorpy <1,>=0.0.5",
    "typepy <2,>=1.1.1"
  ],
  "requires_python": ">=3.7",
  "summary": "a pytest plugin to make a test results report with markdown table format.",
  "version": "0.5.0",
  "releases": [],
  "developers": [
    "tsuyoshi.hombashi@gmail.com",
    "tsuyoshi_hombashi"
  ],
  "kwds": "pytest_md_report_example pytest_md_report pytest_md_report_output pytest_md_report_example_verbose pytest_md_report_verbose",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_pytest_md_report",
  "homepage": "https://github.com/thombashi/pytest-md-report",
  "release_count": 24,
  "dependency_ids": [
    "pypi_pytablewriter",
    "pypi_pytest",
    "pypi_tcolorpy",
    "pypi_typepy"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "typing :: typed"
  ],
  "description": "[![pypi version](https://badge.fury.io/py/pypdf.svg)](https://badge.fury.io/py/pypdf)\n[![python support](https://img.shields.io/pypi/pyversions/pypdf.svg)](https://pypi.org/project/pypdf/)\n[![](https://img.shields.io/badge/-documentation-green)](https://pypdf.readthedocs.io/en/stable/)\n[![github last commit](https://img.shields.io/github/last-commit/py-pdf/pypdf)](https://github.com/py-pdf/pypdf)\n[![codecov](https://codecov.io/gh/py-pdf/pypdf/branch/main/graph/badge.svg?token=id42cgnz5z)](https://codecov.io/gh/py-pdf/pypdf)\n\n# pypdf\n\npypdf is a free and open-source pure-python pdf library capable of splitting,\n[merging](https://pypdf.readthedocs.io/en/stable/user/merging-pdfs.html),\n[cropping, and transforming](https://pypdf.readthedocs.io/en/stable/user/cropping-and-transforming.html)\nthe pages of pdf files. it can also add\ncustom data, viewing options, and\n[passwords](https://pypdf.readthedocs.io/en/stable/user/encryption-decryption.html)\nto pdf files. pypdf can\n[retrieve text](https://pypdf.readthedocs.io/en/stable/user/extract-text.html)\nand\n[metadata](https://pypdf.readthedocs.io/en/stable/user/metadata.html)\nfrom pdfs as well.\n\nsee [pdfly](https://github.com/py-pdf/pdfly) for a cli application that uses pypdf to interact with pdfs.\n\n## installation\n\ninstall pypdf using pip:\n\n```\npip install pypdf\n```\n\nfor using pypdf with aes encryption or decryption, install extra dependencies:\n\n```\npip install pypdf[crypto]\n```\n\n> **note**: `pypdf` 3.1.0 and above include significant improvements compared to\n> previous versions. please refer to [the migration\n> guide](https://pypdf.readthedocs.io/en/latest/user/migration-1-to-2.html) for\n> more information.\n\n## usage\n\n```python\nfrom pypdf import pdfreader\n\nreader = pdfreader(\"example.pdf\")\nnumber_of_pages = len(reader.pages)\npage = reader.pages[0]\ntext = page.extract_text()\n```\n\npypdf can do a lot more, e.g. splitting, merging, reading and creating\nannotations, decrypting and encrypting, and more. check out [the\ndocumentation](https://pypdf.readthedocs.io/en/stable/) for additional usage\nexamples!\n\nfor questions and answers, visit\n[stackoverflow](https://stackoverflow.com/questions/tagged/pypdf)\n(tagged with [pypdf](https://stackoverflow.com/questions/tagged/pypdf)).\n\n## contributions\n\nmaintaining pypdf is a collaborative effort. you can support the project by\nwriting documentation, helping to narrow down issues, and submitting code.\nsee the [contributing.md](https://github.com/py-pdf/pypdf/blob/main/contributing.md) file for more information.\n\n### q&a\n\nthe experience pypdf users have covers the whole range from beginners who\nwant to make their live easier to experts who developed software before pdf\nexisted. you can contribute to the pypdf community by answering questions\non [stackoverflow](https://stackoverflow.com/questions/tagged/pypdf),\nhelping in [discussions](https://github.com/py-pdf/pypdf/discussions),\nand asking users who report issues for [mcve](https://stackoverflow.com/help/minimal-reproducible-example)'s (code + example pdf!).\n\n\n### issues\n\na good bug ticket includes a mcve - a minimal complete verifiable example.\nfor pypdf, this means that you must upload a pdf that causes the bug to occur\nas well as the code you're executing with all of the output. use\n`print(pypdf.__version__)` to tell us which version you're using.\n\n### code\n\nall code contributions are welcome, but smaller ones have a better chance to\nget included in a timely manner. adding unit tests for new features or test\ncases for bugs you've fixed help us to ensure that the pull request (pr) is fine.\n\npypdf includes a test suite which can be executed with `pytest`:\n\n```bash\n$ pytest\n===================== test session starts =====================\nplatform linux -- python 3.6.15, pytest-7.0.1, pluggy-1.0.0\nrootdir: /home/moose/github/martin/pypdf\nplugins: cov-3.0.0\ncollected 233 items\n\ntests/test_basic_features.py ..                         [  0%]\ntests/test_constants.py .                               [  1%]\ntests/test_filters.py .................x.....           [ 11%]\ntests/test_generic.py ................................. [ 25%]\n.............                                           [ 30%]\ntests/test_javascript.py ..                             [ 31%]\ntests/test_merger.py .                                  [ 32%]\ntests/test_page.py .........................            [ 42%]\ntests/test_pagerange.py ................                [ 49%]\ntests/test_papersizes.py ..................             [ 57%]\ntests/test_reader.py .................................. [ 72%]\n...............                                         [ 78%]\ntests/test_utils.py ....................                [ 87%]\ntests/test_workflows.py ..........                      [ 91%]\ntests/test_writer.py .................                  [ 98%]\ntests/test_xmp.py ...                                   [100%]\n\n========== 232 passed, 1 xfailed, 1 warning in 4.52s ==========\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "pypdf",
  "package_url": "https://pypi.org/project/pypdf/",
  "project_url": "https://pypi.org/project/pypdf/",
  "project_urls": {
    "Bug Reports": "https://github.com/py-pdf/pypdf/issues",
    "Changelog": "https://pypdf.readthedocs.io/en/latest/meta/CHANGELOG.html",
    "Documentation": "https://pypdf.readthedocs.io/en/latest/",
    "Source": "https://github.com/py-pdf/pypdf"
  },
  "release_url": "https://pypi.org/project/pypdf/3.17.4/",
  "requires_dist": [
    "typing_extensions >= 3.7.4.3; python_version < '3.10'",
    "dataclasses; python_version < '3.7'",
    "cryptography ; extra == \"crypto\" and ( python_version >= '3.7')",
    "PyCryptodome ; extra == \"crypto\" and ( python_version == '3.6')",
    "black ; extra == \"dev\"",
    "pip-tools ; extra == \"dev\"",
    "pre-commit<2.18.0 ; extra == \"dev\"",
    "pytest-cov ; extra == \"dev\"",
    "pytest-socket ; extra == \"dev\"",
    "pytest-timeout ; extra == \"dev\"",
    "flit ; extra == \"dev\"",
    "wheel ; extra == \"dev\"",
    "pytest-xdist ; extra == \"dev\"",
    "sphinx ; extra == \"docs\"",
    "sphinx_rtd_theme ; extra == \"docs\"",
    "myst_parser ; extra == \"docs\"",
    "cryptography ; extra == \"full\" and ( python_version >= '3.7')",
    "PyCryptodome ; extra == \"full\" and ( python_version == '3.6')",
    "Pillow>=8.0.0 ; extra == \"full\"",
    "Pillow>=8.0.0 ; extra == \"image\""
  ],
  "requires_python": ">=3.6",
  "summary": "a pure-python pdf library capable of splitting, merging, cropping, and transforming pdf files",
  "version": "3.17.4",
  "releases": [],
  "developers": [
    "biziqe@mathieu.fenniak.net",
    "info@martin-thoma.de"
  ],
  "kwds": "pypdf pypi pyversions pytest py",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pypdf",
  "homepage": "",
  "release_count": 54,
  "dependency_ids": [
    "pypi_black",
    "pypi_cryptography",
    "pypi_dataclasses",
    "pypi_flit",
    "pypi_myst_parser",
    "pypi_pillow",
    "pypi_pip_tools",
    "pypi_pre_commit",
    "pypi_pycryptodome",
    "pypi_pytest_cov",
    "pypi_pytest_socket",
    "pypi_pytest_timeout",
    "pypi_pytest_xdist",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_typing_extensions",
    "pypi_wheel"
  ]
}
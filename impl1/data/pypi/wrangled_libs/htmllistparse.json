{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "topic :: internet :: www/http"
  ],
  "description": "htmllisting-parser\n==================\npython parser for apache/nginx-style html directory listing\n\n.. code-block:: python\n\n   import htmllistparse\n   cwd, listing = htmllistparse.fetch_listing(some_url, timeout=30)\n\n   # or you can get the url and make a beautifulsoup yourself, then use\n   # cwd, listing = htmllistparse.parse(soup)\n\nwhere ``cwd`` is the current directory, ``listing`` is a list of ``fileentry`` named tuples:\n\n* ``name``: file name, ``str``. have a trailing / if it's a directory.\n* ``modified``: last modification time, ``time.struct_time`` or ``none``. timezone is not known.\n* ``size``: file size, ``int`` or ``none``. may be estimated from the prefix, such as \"k\", \"m\".\n* ``description``: file description, file type, or any other things found. ``str`` as html, or ``none``.\n\nsupports:\n\n* vanilla apache/nginx/lighttpd/darkhttpd autoindex\n* most ``<pre>``-style index\n* many other ``<table>``-style index\n* ``<ul>``-style\n\n.. note::\n   please wrap the functions in a general ``try... except`` block. it may throw exceptions unexpectedly.\n\nrehttpfs\n--------\n\nreinvented http filesystem.\n\n* mounts most http file listings with fuse.\n* gets directory tree and file stats with less overhead.\n* supports range requests.\n* supports keep-alive.\n\n::\n\n   usage: rehttpfs.py [-h] [-o options] [-t timeout] [-u user_agent] [-v] [-d]\n                      url mountpoint\n\n   mount html directory listings.\n\n   positional arguments:\n     url                   url to mount\n     mountpoint            filesystem mount point\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     -o options            comma separated fuse options\n     -t timeout, --timeout timeout\n                           http request timeout\n     -u user_agent, --user-agent user_agent\n                           http user-agent\n     -v, --verbose         enable debug logging\n     -d, --daemon          run in background\n\n",
  "docs_url": null,
  "keywords": "apache nginx listing fuse",
  "license": "mit",
  "name": "htmllistparse",
  "package_url": "https://pypi.org/project/htmllistparse/",
  "project_url": "https://pypi.org/project/htmllistparse/",
  "project_urls": {
    "Homepage": "https://github.com/gumblex/htmllisting-parser"
  },
  "release_url": "https://pypi.org/project/htmllistparse/0.6.1/",
  "requires_dist": [
    "beautifulsoup4",
    "fusepy",
    "html5lib",
    "requests"
  ],
  "requires_python": "",
  "summary": "python parser for apache/nginx-style html directory listing.",
  "version": "0.6.1",
  "releases": [],
  "developers": [
    "dingyuan_wang",
    "gumblex@aosc.io"
  ],
  "kwds": "htmllistparse htmllisting fetch_listing beautifulsoup nginx",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_htmllistparse",
  "homepage": "https://github.com/gumblex/htmllisting-parser",
  "release_count": 9,
  "dependency_ids": [
    "pypi_beautifulsoup4",
    "pypi_fusepy",
    "pypi_html5lib",
    "pypi_requests"
  ]
}
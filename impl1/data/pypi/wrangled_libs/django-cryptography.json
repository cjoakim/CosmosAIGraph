{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "framework :: django :: 2.2",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http",
    "topic :: security :: cryptography"
  ],
  "description": "django cryptography\n===================\n\na set of primitives for easily encrypting data in django, wrapping\nthe python cryptography_ library. also provided is a drop in\nreplacement for django's own cryptographic primitives, using\ncryptography_ as the backend provider.\n\ndo not forget to read the documentation_.\n\n.. start hidden\n.. image:: https://img.shields.io/github/workflow/status/georgemarshall/django-cryptography/ci/stable%2f1.1.x\n   :target: https://github.com/georgemarshall/django-cryptography/actions/workflows/main.yml\n   :alt: github workflow status (branch)\n.. image:: https://img.shields.io/codecov/c/github/georgemarshall/django-cryptography/stable/1.1.x\n   :target: https://codecov.io/gh/georgemarshall/django-cryptography/branch/stable%2f1.1.x\n   :alt: codecov branch\n.. end hidden\n\ncryptography by example\n-----------------------\n\nusing symmetrical encryption to store sensitive data in the database.\nwrap the desired model field with ``encrypt`` to easily\nprotect its contents.\n\n.. code-block:: python\n\n   from django.db import models\n\n   from django_cryptography.fields import encrypt\n\n\n   class mymodel(models.model):\n       name = models.charfield(max_length=50)\n       sensitive_data = encrypt(models.charfield(max_length=50))\n\nthe data will now be automatically encrypted when saved to the\ndatabase.  ``encrypt`` uses an encryption that allows for\nbi-directional data retrieval.\n\nrequirements\n------------\n\n* python_ (3.6, 3.7, 3.8, 3.9, 3.10)\n* cryptography_ (2.0+)\n* django_ (2.2, 3.2, 4.0)\n\ninstallation\n------------\n\n.. code-block:: console\n\n   pip install django-cryptography\n\n.. _cryptography: https://cryptography.io/\n.. _django: https://www.djangoproject.com/\n.. _python: https://www.python.org/\n.. _documentation: https://django-cryptography.readthedocs.io/en/latest/\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd-3-clause",
  "name": "django-cryptography",
  "package_url": "https://pypi.org/project/django-cryptography/",
  "project_url": "https://pypi.org/project/django-cryptography/",
  "project_urls": {
    "Bug Reports": "https://github.com/georgemarshall/django-cryptography/issues",
    "Documentation": "https://django-cryptography.readthedocs.io",
    "Homepage": "https://github.com/georgemarshall/django-cryptography",
    "Source": "https://github.com/georgemarshall/django-cryptography"
  },
  "release_url": "https://pypi.org/project/django-cryptography/1.1/",
  "requires_dist": [
    "Django",
    "cryptography",
    "django-appconf"
  ],
  "requires_python": ">=3.6",
  "summary": "easily encrypt data in django",
  "version": "1.1",
  "releases": [],
  "developers": [
    "george@georgemarshall.name",
    "george_marshall"
  ],
  "kwds": "django_cryptography _cryptography _django django_ django",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_django_cryptography",
  "homepage": "https://github.com/georgemarshall/django-cryptography",
  "release_count": 12,
  "dependency_ids": [
    "pypi_cryptography",
    "pypi_django",
    "pypi_django_appconf"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# glean parser\n\nparser tools for mozilla's glean telemetry.\n\n## features\n\ncontains various utilities for handling `metrics.yaml` and `pings.yaml` for [the\nglean sdks](https://mozilla.github.io/glean). this includes producing generated\ncode for various integrations, linting and coverage testing.\n\n## documentation\n\n- [how to contribute](https://github.com/mozilla/glean_parser/blob/main/contributing.md). please file bugs in [bugzilla](https://bugzilla.mozilla.org/enter_bug.cgi?assigned_to=nobody%40mozilla.org&bug_ignored=0&bug_severity=normal&bug_status=new&cf_fission_milestone=---&cf_fx_iteration=---&cf_fx_points=---&cf_status_firefox65=---&cf_status_firefox66=---&cf_status_firefox67=---&cf_status_firefox_esr60=---&cf_status_thunderbird_esr60=---&cf_tracking_firefox65=---&cf_tracking_firefox66=---&cf_tracking_firefox67=---&cf_tracking_firefox_esr60=---&cf_tracking_firefox_relnote=---&cf_tracking_thunderbird_esr60=---&product=data%20platform%20and%20tools&component=glean%3a%20sdk&contenttypemethod=list&contenttypeselection=text%2fplain&defined_groups=1&flag_type-203=x&flag_type-37=x&flag_type-41=x&flag_type-607=x&flag_type-721=x&flag_type-737=x&flag_type-787=x&flag_type-799=x&flag_type-800=x&flag_type-803=x&flag_type-835=x&flag_type-846=x&flag_type-855=x&flag_type-864=x&flag_type-916=x&flag_type-929=x&flag_type-930=x&flag_type-935=x&flag_type-936=x&flag_type-937=x&form_name=enter_bug&maketemplate=remember%20values%20as%20bookmarkable%20template&op_sys=unspecified&priority=p3&&rep_platform=unspecified&status_whiteboard=%5btelemetry%3aglean-rs%3am%3f%5d&target_milestone=---&version=unspecified).\n- [user documentation for glean](https://mozilla.github.io/glean/).\n- [`glean_parser` developer documentation](https://mozilla.github.io/glean_parser/).\n\n## requirements\n\n-   python 3.8 (or later)\n\nthe following library requirements are installed automatically when\n`glean_parser` is installed by `pip`.\n\n-   appdirs\n-   click\n-   diskcache\n-   jinja2\n-   jsonschema\n-   pyyaml\n\n## usage\n\n```sh\n$ glean_parser --help\n```\n\nread in `metrics.yaml`, translate to kotlin format, and\noutput to `output_dir`:\n\n```sh\n$ glean_parser translate -o output_dir -f kotlin metrics.yaml\n```\n\ncheck a glean ping against the ping schema:\n\n```sh\n$ glean_parser check < ping.json\n```\n\n\n# changelog\n\n## unreleased\n\n## 11.0.0\n\n- add updated logging logic for ruby server ([#642](https://github.com/mozilla/glean_parser/pull/642))\n- add support for event metric type in server-side javascript outputter ([deng-1736](https://mozilla-hub.atlassian.net/browse/deng-1736))\n- breaking change: dropped support for python 3.7 ([#638](https://github.com/mozilla/glean_parser/pull/638))\n- add official support for python 3.11+ ([#638](https://github.com/mozilla/glean_parser/pull/638))\n\n## 10.0.3\n\n- warn about empty or todo-tagged data reviews in the list ([#634](https://github.com/mozilla/glean_parser/pull/634))\n- allow `unit` field on all metrics, but warn for all but quantity and custom distribution ([#636](https://github.com/mozilla/glean_parser/pull/636))\n\n## 10.0.2\n\n- allow `unit` field for string again, but warn about it in the linter ([#634](https://github.com/mozilla/glean_parser/pull/634))\n\n## 10.0.1\n\n- allow `unit` field for custom distribution again ([#633](https://github.com/mozilla/glean_parser/pull/633))\n\n## 10.0.0\n\n- add ruby log outputter (`ruby_server`) ([#620](https://github.com/mozilla/glean_parser/pull/620))\n- breaking chane: `ping` lifetime metrics on the events ping are now disallowed ([#625](https://github.com/mozilla/glean_parser/pull/625))\n- disallow `unit` field for anything but quantity ([#630](https://github.com/mozilla/glean_parser/pull/630)).\n  note that this was already considered the case, now the code enforces it.\n\n## 9.0.0\n\n- breaking change: dropped support for python 3.6 ([#615](https://github.com/mozilla/glean_parser/issues/615))\n- allow metadata to configure precise timestamps in pings ([#592](https://github.com/mozilla/glean_parser/pull/592))\n\n## 8.1.1\n\n- small updates to the `javascript_server` tempalte to address lint warnings ([#598](https://github.com/mozilla/glean_parser/pull/598))\n\n## 8.1.0\n\n- increased the maximum metric name length in version 2.0.0 schema ([#596](https://github.com/mozilla/glean_parser/pull/596))\n\n## 8.0.0\n\n- breaking change: remove exposed `lint_yaml_files` function ([#580](https://github.com/mozilla/glean_parser/pull/580))\n- rust: removed `__glean_metric_maps` from the rust jinja template. this functionality is better placed downstream ([bug 1816526](https://bugzilla.mozilla.org/show_bug.cgi?id=1816526))\n- new lint: check that all referenced pings are known ([#584](https://github.com/mozilla/glean_parser/pull/584))\n- add experimental server-side javascript outputter ([fxa-7922](https://mozilla-hub.atlassian.net/browse/fxa-7922))\n\n## 7.2.1\n\n- unbreak last minor release ([#579](https://github.com/mozilla/glean_parser/pull/579))\n\n## 7.2.0\n\n- remove yamllint integration ([#578](https://github.com/mozilla/glean_parser/pull/578))\n\n## 7.1.0\n\n- enhancement: labels in `labels:` fields may now contain any printable ascii characters ([bug 1672273](https://bugzilla.mozilla.org/show_bug.cgi?id=1672273))\n- bugfix: enforce ordering of generation of pings, metrics and tags such that order is deterministic ([bug 1820334](https://bugzilla.mozilla.org/show_bug.cgi?id=1820334))\n\n## 7.0.0\n\n- bugfix: remove internal-only fields from serialized metrics data ([#550](https://github.com/mozilla/glean_parser/pull/550))\n- feature: new subcommand: `dump` to dump the metrics data as json ([#550](https://github.com/mozilla/glean_parser/pull/550))\n- bugfix: kotlin: generate enums with the right generic bound for ping reason codes ([#551](https://github.com/mozilla/glean_parser/pull/551)).\n- **breaking change:** fully remove support for the old events api ([#549](https://github.com/mozilla/glean_parser/pull/549))\n  adds a new lint `old_event_api` to warn about missing `type` attributes on event extra keys.\n  note that the glean sdk already dropped support for the old events api.\n\n## 6.4.0\n\n- bugfix: correct code generation for labeled metrics in rust ([#533](https://github.com/mozilla/glean_parser/pull/533))\n- bugfix: correctly serialize `rates` for rust code ([#530](https://github.com/mozilla/glean_parser/pull/530))\n- feature: wrap labeled metric's static labels list as cow strings (requires updated glean support) ([#534](https://github.com/mozilla/glean_parser/pull/534))\n\n## 6.3.0\n\n- events: increase extras limit to 15 ([bug 1798713](https://bugzilla.mozilla.org/show_bug.cgi?id=1798713))\n\n## 6.2.1\n\n- add support for rate, denominator and numerator metrics for javascript. ([bug 1793777](https://bugzilla.mozilla.org/show_bug.cgi?id=1793777))\n\n## 6.2.0\n\n- [data-review] use a template to generate the data review request template ([bug 1772605](https://bugzilla.mozilla.org/show_bug.cgi?id=1772605))\n- make tag and no\\_lint order deterministic ([#518](https://github.com/mozilla/glean_parser/pull/518))\n\n## 6.1.2\n\n- swift: add a conditional `import foundation` to support generating metrics when glean is delivered via the appservices ios megazord\n\n## 6.1.1\n\n- rust: use correct name for a ping in generated code.\n\n## 6.1.0\n\n- [data-review] include extra keys' names and descriptions in data review template ([bug 1767027](https://bugzilla.mozilla.org/show_bug.cgi?id=1767027))\n- raise limit on number of statically-defined labels to 4096. ([bug 1772163](https://bugzilla.mozilla.org/show_bug.cgi?id=1772163))\n- fix rust code generation for new uniffi interface ([#491](https://github.com/mozilla/glean_parser/pull/491), [#494](https://github.com/mozilla/glean_parser/pull/494), [#495](https://github.com/mozilla/glean_parser/pull/495))\n\n## 6.0.1\n\n- relax version requirement for markupsafe.\n  now works with markupsafe v1.1.1 to v2.0.1 inclusive again.\n\n## 6.0.0\n\n- bugfix: add missing `extra_args` to rust constructor generation ([bug 1765855](https://bugzilla.mozilla.org/show_bug.cgi?id=1765855))\n- **breaking change:** `glean_parser` now generates metrics compatible with the uniffi-powered glean sdk.\n  this is not backwards-compatible with previous versions.\n- generate rate, denominator and numerator metrics for kotlin and swift\n- explicitly skip rate, denominator and numerator metrics for javascript.\n  these will cause a build failure by default, but can be turned into warnings on request.\n  use `-s fail_rates=false` to enable warning-only mode.\n\n## 5.1.2\n\n- bugfix: revert changes made on v5.1.1.\n    - the issues addressed by those changes, were non-issues and result of misuse of the apis.\n\n## 5.1.1\n\n- bugfix: fix issues with swift templates ([bug 1749494](https://bugzilla.mozilla.org/show_bug.cgi?id=1749494))\n    - make metrics and pings all `public`\n    - make pings `static`\n\n## 5.1.0\n\n- add support for build info generation for javascript and typescript targets ([bug 1749494](https://bugzilla.mozilla.org/show_bug.cgi?id=1749494))\n\n## 5.0.1\n\n- fix the logic for the metric expiration by version ([bug 1753194](https://bugzilla.mozilla.org/show_bug.cgi?id=1753194))\n\n## 5.0.0\n\n- remove c# support ([#436](https://github.com/mozilla/glean_parser/pull/436)).\n- add support for rust code generation ([bug 1677434](https://bugzilla.mozilla.org/show_bug.cgi?id=1677434))\n- report an error if no files are passed ([bug 1751730](https://bugzilla.mozilla.org/show_bug.cgi?id=1751730))\n- [data-review] report an error if no metrics match provided bug number ([bug 1752576](https://bugzilla.mozilla.org/show_bug.cgi?id=1752576))\n- [data-review] include notification_emails in list of those responsible ([bug 1752576](https://bugzilla.mozilla.org/show_bug.cgi?id=1752576))\n- add support for expiring metrics by the provided major version ([bug 1753194](https://bugzilla.mozilla.org/show_bug.cgi?id=1753194))\n\n## 4.4.0\n\n- support global file-level tags in metrics.yaml ([bug 1745283](https://bugzilla.mozilla.org/show_bug.cgi?id=1745283))\n- glinter: reject metric files if they use `unit` by mistake. it should be `time_unit` ([#432](https://github.com/mozilla/glean_parser/pull/432)).\n- automatically generate a build date when generating build info ([#431](https://github.com/mozilla/glean_parser/pull/431)).\n  enabled for kotlin and swift.\n  this can be changed with the `build_date` command line option.\n  `build_date=0` will use a static unix epoch time.\n  `build_date=2022-01-03t17:30:00` will parse the iso8601 string to use (as a utc timestamp).\n  other values will throw an error.\n\n  example:\n\n    glean_parser translate --format kotlin --option build_date=2021-11-01t01:00:00 path/to/metrics.yaml\n\n## 4.3.1\n\n- bugfix: skip tags for code generation ([#409](https://github.com/mozilla/glean_parser/pull/409))\n\n## 4.3.0\n\n- support tags in glean parser ([bug 1734011](https://bugzilla.mozilla.org/show_bug.cgi?id=1734011))\n\n## 4.2.0\n\n- improve the schema validation error messages. they will no longer include `ordereddict(...)` on python 3.7 and later ([bug 1733395](https://bugzilla.mozilla.org/show_bug.cgi?id=1733395))\n- officially support python 3.10\n\n## 4.1.1 (2021-09-28)\n\n- update private import paths on javascript / typescript templates. ([bug 1702468](https://bugzilla.mozilla.org/show_bug.cgi?id=1702468))\n\n## 4.1.0 (2021-09-16)\n\n- add support for node.js platform on javascript / typescript templates. ([bug 1728982](https://bugzilla.mozilla.org/show_bug.cgi?id=1728982))\n\n## 4.0.0 (2021-08-20)\n\n- add support for text metric type ([#374](https://github.com/mozilla/glean_parser/pull/374))\n- reserve the `default` ping name. it can't be used as a ping name, but it can be used in `send_in_pings` ([#376](https://github.com/mozilla/glean_parser/pull/376))\n\n## 3.8.0 (2021-08-18)\n\n- expose ping reasons enum on javascript / typescript templates. ([bug 1719136](https://bugzilla.mozilla.org/show_bug.cgi?id=1719136))\n- define an interface with the allowed extras for each event on the typescript template. ([bug 1693487](https://bugzilla.mozilla.org/show_bug.cgi?id=1693487))\n\n## 3.7.0 (2021-07-13)\n\n- new lint: check for redundant words in ping names ([#355](https://github.com/mozilla/glean_parser/pull/355))\n- add support for url metric type ([#361](https://github.com/mozilla/glean_parser/pull/361))\n\n## 3.6.0 (2021-06-11)\n\n- add a command `data-review` to generate a skeleton data review request for all metrics matching a supplied bug number. ([bug 1704541](https://bugzilla.mozilla.org/show_bug.cgi?id=1704541))\n- enable custom distribution outside of geckoview (`gecko_datapoint` becomes optional)\n\n## 3.5.0 (2021-06-03)\n\n- transform generated folder into qml module when building javascript templates for the qt platform. ([bug 1707896](https://bugzilla.mozilla.org/show_bug.cgi?id=1707896)\n    - import the glean qml module from inside each generated file, removing the requirement to import glean before importing any of the generated files;\n    - prodive a `qmldir` file exposing all generated files;\n    - drop the `namespace` option for javascript templates;\n    - add a new `version` option for javascript templates, required when building for qt, which expected the glean qml module version.\n\n## 3.4.0 (2021-05-28)\n\n- add missing import for kotlin code ([#339](https://github.com/mozilla/glean_parser/pull/339))\n- use a plain kotlin type in the generated interface implementation ([#339](https://github.com/mozilla/glean_parser/pull/339))\n- generate additional generics for event metrics ([#339](https://github.com/mozilla/glean_parser/pull/339))\n- for kotlin skip generating `gleanbuildinfo.kt` when requested (with `with_buildinfo=false`) ([#341](https://github.com/mozilla/glean_parser/pull/341))\n\n## 3.3.2 (2021-05-18)\n\n- fix another bug in the swift code generation when generating extra keys ([#334](https://github.com/mozilla/glean_parser/pull/334))\n\n## 3.3.1 (2021-05-18)\n\n- fix swift code generation bug for pings ([#333](https://github.com/mozilla/glean_parser/pull/333))\n\n## 3.3.0 (2021-05-18)\n\n- generate new event api construct ([#321](https://github.com/mozilla/glean_parser/pull/321))\n\n## 3.2.0 (2021-04-28)\n\n- add option to add extra introductory text to generated markdown ([#298](https://github.com/mozilla/glean_parser/pull/298))\n- add support for qt in javascript templates ([bug 1706252](https://bugzilla.mozilla.org/show_bug.cgi?id=1706252))\n  - javascript templates will now accept the `platform` option. if this option is set to `qt`\n  the generated templates will be qt compatible. default value is `webext`.\n\n## 3.1.2 (2021-04-21)\n\n- bugfix: remove the \"do not commit\" notice from the documentation.\n\n## 3.1.1 (2021-04-19)\n\n- recommend to not commit as well as to not edit the generated files. ([bug 1706042](https://bugzilla.mozilla.org/show_bug.cgi?id=1706042))\n- bugfix: include import statement for labeled metric subtypes in javascript and typescript templates.\n\n## 3.1.0 (2021-04-16)\n\n- add support for labeled metric types in javascript and typescript templates.\n\n## 3.0.0 (2021-04-13)\n\n- raise limit on number of statically-defined lables to 100. ([bug 1702263](https://bugzilla.mozilla.org/show_bug.cgi?id=1702263))\n- bugfix: version 2.0.0 of the schema now allows the \"special\" `glean_.*` ping names for glean-internal use again.\n- remove support for jwe metric types.\n\n## 2.5.0 (2021-02-23)\n\n- add parser and object model support for `rate` metric type. ([bug 1645166](https://bugzilla.mozilla.org/show_bug.cgi?id=1645166))\n- add parser and object model support for telemetry_mirror property. ([bug 1685406](https://bugzilla.mozilla.org/show_bug.cgi?id=1685406))\n- update the javascript template to match glean.js expectations. ([bug 1693516](https://bugzilla.mozilla.org/show_bug.cgi?id=1693516))\n  - glean.js has updated it's export strategy. it will now export each metric type as an independent module;\n  - glean.js has dropped support for non es6 modules.\n- add support for generating typescript code. ([bug 1692157](https://bugzilla.mozilla.org/show_bug.cgi?id=1692157))\n  - the templates added generate metrics and pings code for glean.js.\n\n## 2.4.0 (2021-02-18)\n\n- **experimental:** `glean_parser` has a new subcommand `coverage` to convert raw coverage reports\n  into something consumable by coverage tools, such as codecov.io\n- the path to the file that each metric is defined in is now stored on the\n  `metric` object in `defined_in[\"filepath\"]`.\n\n## 2.3.0 (2021-02-17)\n\n- leverage the `glean_namespace` to provide correct import when building for javascript.\n\n## 2.2.0 (2021-02-11)\n\n- the kotlin generator now generates static build information that can be passed\n  into `glean.initialize` to avoid calling the package manager at runtime.\n\n## 2.1.0 (2021-02-10)\n\n- add support for generating javascript code.\n  - the templates added generate metrics and pings code for glean.js.\n\n## 2.0.0 (2021-02-05)\n\n- new versions 2.0.0 of the `metrics.yaml` and `pings.yaml` schemas now ship\n  with `glean_parser`. these schemas are different from version 1.0.0 in the\n  following ways:\n\n  - bugs must be specified as urls. bug numbers are disallowed.\n  - the legacy ping names containing underscores are no longer allowed. these\n    included `deletion_request`, `bookmarks_sync`, `history_sync`,\n    `session_end`, `all_pings`, `glean_*`). in these cases, the `_` should be\n    replaced with `-`.\n\n  to upgrade your app or library to use the new schema, replace the version in\n  the `$schema` value with `2-0-0`.\n\n- **breaking change:** it is now an error to use bug numbers (rather than urls)\n  in ping definitions.\n\n- add the line number that metrics and pings were originally defined in the yaml\n  files.\n\n## 1.29.1 (2020-12-17)\n\n- bugfix: linter output can now be redirected correctly (1675771).\n\n## 1.29.0 (2020-10-07)\n\n- **breaking change:** `glean_parser` will now return an error code when any of\n  the input files do not exist (unless the `--allow-missing-files` flag is\n  passed).\n- generated code now includes a comment next to each metric containing the name\n  of the metric in its original `snake_case` form.\n- when metrics don't provide a `unit` parameter, it is not included in the\n  output (as provided by probe-scraper).\n\n## 1.28.6 (2020-09-24)\n\n- bugfix: ensure kotlin arguments are deterministically ordered\n\n## 1.28.5 (2020-09-14)\n\n- fix deploy step to update pip before deploying to pypi.\n\n## 1.28.4 (2020-09-14)\n\n- the `superfluous_no_lint` warning has been removed from the glinter.\n  it likely did more harm than good, and makes it hard to make\n  `metrics.yaml` files that pass across different versions of\n  `glean_parser`.\n- expired metrics will now produce a linter warning, `expired_metric`.\n- expiry dates that are more than 730 days (\\~2 years) in the future\n  will produce a linter warning, `expiration_date_too_far`.\n- allow using the quantity metric type outside of gecko.\n- new parser configs `custom_is_expired` and `custom_validate_expires`\n  added. these are both functions that take the `expires` value of the\n  metric and return a bool. (see `metric.is_expired` and\n  `metric.validate_expires`). these will allow fog to provide custom\n  validation for its version-based `expires` values.\n\n## 1.28.3 (2020-07-28)\n\n- bugfix: support hashset and dictionary in the c\\## generated code.\n\n## 1.28.2 (2020-07-28)\n\n- bugfix: generate valid c\\## code when using labeled metric types.\n\n## 1.28.1 (2020-07-24)\n\n- bugfix: add missing column to correctly render markdown tables in generated\n  documentation.\n\n## 1.28.0 (2020-07-23)\n\n- **breaking change:** the internal ping `deletion-request` was misnamed in\n  pings.py causing the linter to not allow use of the correctly named ping for\n  adding legacy ids to. consuming apps will need to update their metrics.yaml if\n  they are using `deletion_request` in any `send_in_pings` to `deletion-request`\n  after updating.\n\n## 1.27.0 (2020-07-21)\n\n- rename the `data_category` field to `data_sensitivity` to be clearer.\n\n## 1.26.0 (2020-07-21)\n\n- add support for jwe metric types.\n- add a `data_sensitivity` field to all metrics for specifying the type of data\n  collected in the field.\n\n## 1.25.0 (2020-07-17)\n\n- add support for generating c\\## code.\n- bugfix: the memory unit is now correctly passed to the memorydistribution\n  metric type in swift.\n\n## 1.24.0 (2020-06-30)\n\n- bugfix: look for metrics in send\\_if\\_empty pings. metrics for these kinds of\n  pings were being ignored.\n\n## 1.23.0 (2020-06-27)\n\n- support for python 3.5 has been dropped.\n- bugfix: the ordering of event extra keys will now match with their enum,\n  fixing a serious bug where keys of extras may not match the correct values in\n  the data payload. see <https://bugzilla.mozilla.org/show_bug.cgi?id=1648768>.\n\n## 1.22.0 (2020-05-28)\n\n- **breaking change:** (swift only) combine all metrics and pings into a single\n  generated file `metrics.swift`.\n\n## 1.21.0 (2020-05-25)\n\n- `glinter` messages have been improved with more details and to be more\n  actionable.\n- a maximum of 10 `extra_keys` is now enforced for `event` metric types.\n- bugfix: the `lifetime` enum values now match the values of the implementation\n  in mozilla/glean.\n\n## 1.20.4 (2020-05-07)\n\n- bugfix: yamllint errors are now reported using the correct file name.\n\n## 1.20.3 (2020-05-06)\n\n- support for using `timing_distribution`'s `time_unit` parameter to control\n  the range of acceptable values is documented. the default unit for this use\n  case is `nanosecond` to avoid creating a breaking change. see [bug\n  1630997](https://bugzilla.mozilla.org/show_bug.cgi?id=1630997) for more\n  information.\n\n## 1.20.2 (2020-04-24)\n\n- dependencies that depend on the version of python being used are now specified\n  using the [declaring platform specific dependencies syntax in\n  setuptools](https://setuptools.readthedocs.io/en/latest/setuptools.html##declaring-platform-specific-dependencies).\n  this means that more recent versions of dependencies are likely to be\n  installed on python 3.6 and later, and unnecessary backport libraries won't\n  be installed on more recent python versions.\n\n## 1.20.1 (2020-04-21)\n\n- the minimum version of the runtime dependencies has been lowered to increase\n  compatibility with other tools. these minimum versions are now tested in ci,\n  in addition to testing the latest versions of the dependencies that was\n  already happening in ci.\n\n## 1.20.0 (2020-04-15)\n\n- **breaking change:** glinter errors found during the `translate` command will\n  now return an error code. glinter warnings will be displayed, but not return\n  an error code.\n- `glean_parser` now produces a linter warning when `user` lifetime metrics are\n  set to expire. see [bug\n  1604854](https://bugzilla.mozilla.org/show_bug.cgi?id=1604854) for additional\n  context.\n\n## 1.19.0 (2020-03-18)\n\n- **breaking change:** the regular expression used to validate labels is\n  stricter and more correct.\n- add more information about pings to markdown documentation:\n  - state whether the ping includes client id;\n  - add list of data review links;\n  - add list of related bugs links.\n- `glean_parser` now makes it easier to write external translation\n  functions for different language targets.\n- bugfix: `glean_parser` now works on 32-bit windows.\n\n## 1.18.3 (2020-02-24)\n\n- dropped the `inflection` dependency.\n- constrained the `zipp` and `markupsafe` transitive dependencies to versions\n  that support python 3.5.\n\n## 1.18.2 (2020-02-14)\n\n- bugfix: fix rendering of first element of reason list.\n\n## 1.18.1 (2020-02-14)\n\n- bugfix: reason codes are displayed in markdown output for built-in\n  pings as well.\n- bugfix: reason descriptions are indented correctly in markdown\n  output.\n- bugfix: to avoid a compiler error, the `@jvmname` annotation isn't\n  added to private members.\n\n## 1.18.0 (2020-02-13)\n\n- **breaking change (java api)** have the metrics names in java match the names\n  in kotlin. see [bug\n  1588060](https://bugzilla.mozilla.org/show_bug.cgi?id=1588060).\n- the reasons a ping are sent are now included in the generated markdown\n  documentation.\n\n## 1.17.3 (2020-02-05)\n\n- bugfix: the version of jinja2 now specifies < 3.0, since that version no\n  longer supports python 3.5.\n\n## 1.17.2 (2020-02-05)\n\n- bugfix: fixes an import error in generated kotlin code.\n\n## 1.17.1 (2020-02-05)\n\n- bugfix: generated swift code now includes `import glean`, unless generating\n  for a glean-internal build.\n\n## 1.17.0 (2020-02-03)\n\n- remove default schema url from `validate_ping`\n- make `schema` argument required for cli\n- bugfix: avoid default import in swift code for glean itself\n- bugfix: restore order of fields in generated swift code\n\n## 1.16.0 (2020-01-15)\n\n- support for `reason` codes on pings was added.\n\n## 1.15.6 (2020-02-06)\n\n- bugfix: the version of jinja2 now specifies < 3.0, since that version no\n  longer supports python 3.5 (backported from 1.17.3).\n\n## 1.15.5 (2019-12-19)\n\n- bugfix: also allow the legacy name `all_pings` for `send_in_pings` parameter\n  on metrics\n\n## 1.15.4 (2019-12-19)\n\n- bugfix: also allow the legacy name `all_pings`\n\n## 1.15.3 (2019-12-13)\n\n- add project title to markdown template.\n- remove \"sorry about that\" from markdown template.\n- bugfix: replace dashes in variable names to force proper naming\n\n## 1.15.2 (2019-12-12)\n\n- bugfix: use a pure python library for iso8601 so there is no compilation\n  required.\n\n## 1.15.1 (2019-12-12)\n\n- bugfix: add some additional ping names to the non-kebab-case allow list.\n\n## 1.15.0 (2019-12-12)\n\n- restrict new pings names to be kebab-case and change `all_pings` to\n  `all-pings`\n\n## 1.14.0 (2019-12-06)\n\n- `glean_parser` now supports python versions 3.5, 3.6, 3.7 and 3.8.\n\n## 1.13.0 (2019-12-04)\n\n- the `translate` command will no longer clear extra files in the output\n  directory.\n- bugfix: ensure all newlines in comments are prefixed with comment markers\n- bugfix: escape swift keywords in variable names in generated code\n- generate documentation for pings that are sent if empty\n\n## 1.12.0 (2019-11-27)\n\n- reserve the `deletion_request` ping name\n- added a new flag `send_if_empty` for pings\n\n## 1.11.0 (2019-11-13)\n\n- the `glinter` command now performs `yamllint` validation on registry files.\n\n## 1.10.0 (2019-11-11)\n\n- the kotlin linter `detekt` is now run during ci, and for local\n  testing if installed.\n- python 3.8 is now tested in ci (in addition to python 3.7). using\n  `tox` for this doesn't work in modern versions of circleci, so the\n  `tox` configuration has been removed.\n- `yamllint` has been added to test the yaml files on ci.\n- \u26a0 metric types that don't yet have implementations in glean-core\n  have been removed. this includes `enumeration`, `rate`, `usage`, and\n  `use_counter`, as well as many labeled metrics that don't exist.\n\n## 1.9.5 (2019-10-22)\n\n- allow a swift lint for generated code\n- new lint: restrict what metric can go into the `baseline` ping\n- new lint: warn for slight misspellings in ping names\n- bugfix: change labeled types labels from lists to sets.\n\n## 1.9.4 (2019-10-16)\n\n- use lists instead of sets in labeled types labels to ensure that the order of\n  the labels passed to the `metrics.yaml` is kept.\n- `glinter` will now check for duplicate labels and error if there are any.\n\n## 1.9.3 (2019-10-09)\n\n- add labels from labeled types to the extra column in the markdown template.\n\n## 1.9.2 (2019-10-08)\n\n- bugfix: don't call `is_internal_metric` on `ping` objects.\n\n## 1.9.1 (2019-10-07)\n\n- don't include glean internal metrics in the generated markdown.\n\n## 1.9.0 (2019-10-04)\n\n- glinter now warns when bug numbers (rather than urls) are used.\n- bugfix: add `histogramtype` and `memoryunit` imports in kotlin generated code.\n\n## 1.8.4 (2019-10-02)\n\n- removed unsupported labeled metric types.\n\n## 1.8.3 (2019-10-02)\n\n- fix indentation for generated swift code\n\n## 1.8.2 (2019-10-01)\n\n- created labeled metrics and events in swift code and wrap it in a\n  configured namespace\n\n## 1.8.1 (2019-09-27)\n\n- bugfix: `memory_unit` is now passed to the kotlin generator.\n\n## 1.8.0 (2019-09-26)\n\n- a new parser config, `do_not_disable_expired`, was added to turn off the\n  feature that expired metrics are automatically disabled. this is useful if you\n  want to retain the disabled value that is explicitly in the `metrics.yaml`\n  file.\n- `glinter` will now report about superfluous `no_lint` entries.\n\n## 1.7.0 (2019-09-24)\n\n- a `glinter` tool is now included to find common mistakes in metric naming\n  and setup. this check is run during `translate` and warnings will be\n  displayed. \u26a0 these warnings will be treated as errors in a future revision.\n\n## 1.6.1 (2019-09-17)\n\n- bugfix: `gleangeckometricsmapping` must include `labeledmetrictype`\n  and `countermetrictype`.\n\n## 1.6.0 (2019-09-17)\n\n- new: support for outputting metrics in swift.\n- bugfix: provides a helpful error message when `geckoview_datapoint` is used on\n  an metric type that doesn't support geckoview exfiltration.\n- generate a lookup table for gecko categorical histograms in\n  `gleangeckometricsmapping`.\n- introduce a 'swift' output generator.\n\n## 1.4.1 (2019-08-28)\n\n- documentation only.\n\n## 1.4.0 (2019-08-27)\n\n- added support for generating markdown documentation from `metrics.yaml` files.\n\n## 1.3.0 (2019-08-22)\n\n- `quantity` metric type has been added.\n\n## 1.2.1 (2019-08-13)\n\n- bugfix: `includeclientid` was not being output for pingtype.\n\n## 1.2.0 (2019-08-13)\n\n- `memory_distribution` metric type has been added.\n- `custom_distribution` metric type has been added.\n- `labeled_timespan` is no longer an allowed metric type.\n\n## 1.1.0 (2019-08-05)\n\n-   add a special `all_pings` value to `send_in_pings`.\n\n## 1.0.0 (2019-07-29)\n\n- first release to start following strict semver.\n\n## 0.1.0 (2018-10-15)\n\n- first release on pypi.\n",
  "docs_url": null,
  "keywords": "glean_parser",
  "license": "",
  "name": "glean-parser",
  "package_url": "https://pypi.org/project/glean-parser/",
  "project_url": "https://pypi.org/project/glean-parser/",
  "project_urls": {
    "Homepage": "https://github.com/mozilla/glean_parser"
  },
  "release_url": "https://pypi.org/project/glean-parser/11.0.0/",
  "requires_dist": [
    "appdirs >=1.4",
    "Click >=7",
    "diskcache >=4",
    "Jinja2 >=2.10.1",
    "jsonschema >=3.0.2",
    "PyYAML >=5.3.1"
  ],
  "requires_python": "",
  "summary": "parser tools for mozilla's glean telemetry",
  "version": "11.0.0",
  "releases": [],
  "developers": [
    "glean-team@mozilla.com",
    "the_glean_team"
  ],
  "kwds": "gleanbuildinfo glean_parser bugzilla bug_severity cf_status_firefox67",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_glean_parser",
  "homepage": "https://github.com/mozilla/glean_parser",
  "release_count": 167,
  "dependency_ids": [
    "pypi_appdirs",
    "pypi_click",
    "pypi_diskcache",
    "pypi_jinja2",
    "pypi_jsonschema",
    "pypi_pyyaml"
  ]
}
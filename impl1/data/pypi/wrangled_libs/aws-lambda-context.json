{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7"
  ],
  "description": "python lambda context\n=====================\n\na micro library that provides the aws lambda context class for type checking and testing.\n\ninstalling\n----------\n\n.. code-block::\n\n    pip install aws-lambda-context\n\nusage\n-----\n\nimport the lambdacontext on your handler file and type hint the lambda function with it:\n\n.. code-block:: python\n\n    from aws_lambda_context import lambdacontext\n\n    def my_lambda_handler(event: any, context: lambdacontext) -> none:\n        ...\n\nthe type hint should enables type checking with mypy_ and editor auto-completion\n\nthe class is also useful as a mock during tests:\n\n.. code-block:: python\n\n    from aws_lambda_context import (\n        lambdaclientcontext,\n        lambdaclientcontextmobileclient,\n        lambdacognitoidentity,\n        lambdacontext\n    )\n\n    def test_handler():\n        lambda_cognito_identity = lambdacognitoidentity()\n        lambda_cognito_identity.cognito_identity_id = 'cognito_identity_id'\n        lambda_cognito_identity.cognito_identity_pool_id = 'cognito_identity_pool_id'\n\n        lambda_client_context_mobile_client = lambdaclientcontextmobileclient()\n        lambda_client_context_mobile_client.installation_id = 'installation_id'\n        lambda_client_context_mobile_client.app_title = 'app_title'\n        lambda_client_context_mobile_client.app_version_name = 'app_version_name'\n        lambda_client_context_mobile_client.app_version_code = 'app_version_code'\n        lambda_client_context_mobile_client.app_package_name = 'app_package_name'\n\n        lambda_client_context = lambdaclientcontext()\n        lambda_client_context.client = lambda_client_context_mobile_client\n        lambda_client_context.custom = {'custom': true}\n        lambda_client_context.env = {'env': 'test'}\n\n        lambda_context = lambdacontext()\n        lambda_context.function_name = 'function_name'\n        lambda_context.function_version = 'function_version'\n        lambda_context.invoked_function_arn = 'invoked_function_arn'\n        lambda_context.memory_limit_in_mb = 'memory_limit_in_mb'\n        lambda_context.aws_request_id = 'aws_request_id'\n        lambda_context.log_group_name = 'log_group_name'\n        lambda_context.log_stream_name = 'log_stream_name'\n        lambda_context.identity = lambda_cognito_identity\n        lambda_context.client_context = lambda_client_context\n\n        assert handler({}, lambda_context) == 'something'\n\nreferences\n----------\n\n- https://docs.aws.amazon.com/lambda/latest/dg/python-context-object.html\n\n.. _mypy: http://mypy-lang.org/\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "aws-lambda-context",
  "package_url": "https://pypi.org/project/aws-lambda-context/",
  "project_url": "https://pypi.org/project/aws-lambda-context/",
  "project_urls": {
    "Homepage": "https://gitlab.com/new10-public/python-lambda-context"
  },
  "release_url": "https://pypi.org/project/aws-lambda-context/1.1.0/",
  "requires_dist": [
    "flake8 (==3.7.8) ; extra == 'tests'",
    "isort (==4.3.21) ; extra == 'tests'",
    "mypy (==0.720) ; extra == 'tests'",
    "black (==19.3b0) ; extra == 'tests'",
    "pytest (==5.0.1) ; extra == 'tests'",
    "pytest-cov (==2.7.1) ; extra == 'tests'",
    "pre-commit (==1.17.0) ; extra == 'tests'",
    "bump2version (==0.5.10) ; extra == 'tests'"
  ],
  "requires_python": ">= 3.6",
  "summary": "aws lambda context class for type checking and testing",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "new10_b",
    "pypi-admin@new10.com"
  ],
  "kwds": "aws_lambda_context my_lambda_handler lambda_context lambdacontext lambda_client_context",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_aws_lambda_context",
  "homepage": "https://gitlab.com/new10-public/python-lambda-context",
  "release_count": 2,
  "dependency_ids": [
    "pypi_black",
    "pypi_bump2version",
    "pypi_flake8",
    "pypi_isort",
    "pypi_mypy",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytest_cov"
  ]
}
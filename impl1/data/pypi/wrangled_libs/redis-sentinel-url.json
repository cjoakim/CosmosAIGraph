{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "redis-sentinel-url\n==================\n\n.. image:: https://travis-ci.org/exponea/redis-sentinel-url.svg\n    :target: https://travis-ci.org/exponea/redis-sentinel-url\n    :alt: travis ci\n\nredis-sentinel-url provides parser and connection factory for `redis://` and `redis+sentinel://` urls (the latter\nbeing defined by this package).\n\n* supports python 2.7 and 3.3+\n* licensed using apache license 2.0\n\ninstallation\n------------\n\ninstall with pip::\n\n    pip install redis-sentinel-url\n\n\nurl scheme for connecting via sentinel\n--------------------------------------\n\nthis package defines `redis+sentinel://` scheme for connecting to redis via sentinel::\n\n    redis+sentinel://[:password@]host:port[,host2:port2,...][/service_name[/db]][?param1=value1[&param2=value=2&...]]\n\n- you can specify multiple sentinel host:port pairs separated by comma.\n- if `service_name` is provided, it is used to create a default client\n- `service_name` and `db` can also be specified as url parameters (url parameters take precedence)\n- client options (keyword arguments to `redis.strictredis`) are specified as url parameters\n- options for connecting to sentinel (keyword arguments to `redis.sentinel.sentinel`) are specified\n  with `sentinel_` prefix\n- there is special `client_type` option to specify whether the default client should be `master` (the default) or\n  `slave` service when connecting via sentinel\n\nbasic usage\n-----------\n\nsupports schemes supported by `redis.strictredis.from_url` and also `redis+sentinel://` scheme described above:\n\n.. code-block:: python\n\n    import redis_sentinel_url\n\n    sentinel, client = redis_sentinel_url.connect('redis://localhost/0')\n    # none, strictredis(...)\n\n    sentinel, client = redis_sentinel_url.connect('rediss://localhost/0')\n    # none, strictredis(...)\n\n    sentinel, client = redis_sentinel_url.connect('unix://[:password]@/path/to/socket.sock?db=0')\n    # none, strictredis(...)\n\n    sentinel, client = redis_sentinel_url.connect('redis+sentinel://localhost:26379,otherhost:26479/mymaster/0')\n    # sentinel(...), strictredis(...)\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2.0",
  "name": "redis-sentinel-url",
  "package_url": "https://pypi.org/project/Redis-Sentinel-Url/",
  "project_url": "https://pypi.org/project/Redis-Sentinel-Url/",
  "project_urls": {
    "Homepage": "https://github.com/exponea/redis-sentinel-url"
  },
  "release_url": "https://pypi.org/project/Redis-Sentinel-Url/1.0.1/",
  "requires_dist": [
    "redis (>=2.10.3)"
  ],
  "requires_python": "",
  "summary": "a factory for redis connection that supports using redis sentinel",
  "version": "1.0.1",
  "releases": [],
  "developers": [
    "martin.sucha@exponea.com",
    "martin_sucha"
  ],
  "kwds": "redis_sentinel_url redis sentinel_ sentinel rediss",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_redis_sentinel_url",
  "homepage": "https://github.com/exponea/redis-sentinel-url",
  "release_count": 2,
  "dependency_ids": [
    "pypi_redis"
  ]
}
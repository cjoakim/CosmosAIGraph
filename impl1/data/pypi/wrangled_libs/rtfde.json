{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: gnu lesser general public license v3 (lgplv3)",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "topic :: communications :: email :: filters",
    "topic :: text processing :: filters",
    "topic :: text processing :: markup :: html"
  ],
  "description": "# rtfde: rtf de-encapsulator\n\na python3 library for extracting encapsulated `html` & `plain text` content from the `rtf` bodies of .msg files.\n\nde-encapsulation enables previously encapsulated html and plain text content to be extracted and rendered as html and plain text instead of the encapsulating rtf content. after de-encapsulation, the html and plain text should differ only minimally from the original html or plain text content.\n\n# features\n\n- de-encapsulate html from rtf encapsulated html.\n- de-encapsulate plain text from rtf encapsulated text.\n\n# known issues\n\n- this library *fully* unquotes text it de-encapsulates because it does not know which text was quoted in the rtf conversion process and which text was quoted in the original html/text. so, for instance escaped [quoted-printable](https://en.wikipedia.org/wiki/quoted-printable) text will be returned un-escaped.\n- this library currently can't [combine attachments](https://docs.microsoft.com/en-us/openspecs/exchange_server_protocols/ms-oxrtfex/b518f0bc-468c-4218-87a7-8f8859bf5773) from a .msg message object with the de-encapsulated html. this is mostly because i could not get a good set of examples of encapsulated html which had attachment objects that needed to be integrated back into the body of the html.\n\n# anti-features (i don't intend to have this library do this.)\n\n- extract plain text from rtf encapsulated html. if you want this, then you will have to parse the html using another library.\n\n# installation\n\n**to install from the pip package.**\n\n```\npip3 install rtfde\n\n```\n\n# usage\n\n## de-encapsulating html or text\n\n```python\nfrom rtfde.deencapsulate import deencapsulator\n\nwith open('rtf_file', 'rb') as fp:\n    raw_rtf  = fp.read()\n    rtf_obj = deencapsulator(raw_rtf)\n    rtf_obj.deencapsulate()\n    if rtf_obj.content_type == 'html':\n        print(rtf_obj.html)\n    else:\n        print(rtf_obj.text)\n```\n\n\n\n# enabling logging\n\nany logging (including how verbose the logging is) can be handled by configuring logging. you can enable rtfde's logging at the highest level by getting and setting the \"rtfde\" logger.\n\n```\nlog = logging.getlogger(\"rtfde\")\nlog.setlevel(logging.info)\n```\n\n\n\n\n\n\nto see how to enable more in-depth logging for debugging check out the contributing.md file.\n\n```\n# now, get the log that you want\n# the main logger is simply called rtfde. that will get you all the *normal* logs.\nrequests_log = logging.getlogger(\"rtfde\")\nrequests_log.setlevel(logging.debug)\nrequests_log.propagate = true\n```\n\n\n# contribute\n\nplease check the [contributing guidelines](./contributing.md)\n\n# license\n\nplease see the [license file](./license) for license information on rtfde. if you have further questions related to licensing please create an issue about it on github.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "rtfde",
  "package_url": "https://pypi.org/project/RTFDE/",
  "project_url": "https://pypi.org/project/RTFDE/",
  "project_urls": {
    "Homepage": "https://github.com/seamustuohy/RTFDE"
  },
  "release_url": "https://pypi.org/project/RTFDE/0.1.1/",
  "requires_dist": [
    "lark ==1.1.8",
    "oletools >=0.56",
    "lxml >=4.6 ; extra == 'dev'",
    "mypy >=1.1.1 ; extra == 'dev'",
    "pdoc3 >=0.10.0 ; extra == 'dev'",
    "coverage >=7.2.2 ; extra == 'dev'",
    "extract-msg >=0.27 ; extra == 'msg_parse'"
  ],
  "requires_python": ">=3.8",
  "summary": "a library for extracting html content from rtf encapsulated html as commonly found in the exchange msg email format.",
  "version": "0.1.1",
  "releases": [],
  "developers": [
    "code@seamustuohy.com",
    "seamus_tuohy"
  ],
  "kwds": "raw_rtf rtf_file rtfde rtf encapsulation",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_rtfde",
  "homepage": "https://github.com/seamustuohy/rtfde",
  "release_count": 4,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_extract_msg",
    "pypi_lark",
    "pypi_lxml",
    "pypi_mypy",
    "pypi_oletools",
    "pypi_pdoc3"
  ]
}
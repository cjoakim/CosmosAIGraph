{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: mathematics",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "\n# scann\n\nscann (scalable nearest neighbors) is a method for efficient vector similarity\nsearch at scale. this code release implements [1], which includes search space\npruning and quantization for maximum inner product search and also supports\nother distance functions such as euclidean distance. the implementation is\ndesigned for x86 processors with avx2 support. scann achieves state-of-the-art\nperformance on [ann-benchmarks.com](http://ann-benchmarks.com) as shown on the\nglove-100-angular dataset below:\n\n![glove-100-angular](https://github.com/google-research/google-research/raw/master/scann/docs/glove_bench.png)\n\nscann can be configured to fit datasets with different sizes and distributions.\nit has both tensorflow and python apis. the library shows strong performance\nwith large datasets [1]. the code is released for research purposes. for more\ndetails on the academic description of algorithms, please see [1].\n\nreference [1]:\n```\n@inproceedings{avq_2020,\n  title={accelerating large-scale inference with anisotropic vector quantization},\n  author={guo, ruiqi and sun, philip and lindgren, erik and geng, quan and simcha, david and chern, felix and kumar, sanjiv},\n  booktitle={international conference on machine learning},\n  year={2020},\n  url={https://arxiv.org/abs/1908.10396}\n}\n```\n## installation\n\n`manylinux_2_27`-compatible wheels are available on pypi:\n\n```\npip install scann\n```\n\nscann supports linux environments running python versions 3.8-3.11. see\n[docs/releases.md](https://github.com/google-research/google-research/blob/master/scann/docs/releases.md) for release notes; the page also contains\ndownload links for scann wheels prior to version 1.1.0, which were not released\non pypi.\n\nin accordance with the\n[`manylinux_2_27` specification](https://peps.python.org/pep-0600/), scann\nrequires `libstdc++` version 3.4.23 or above from the operating system. see\n[here](https://stackoverflow.com/questions/10354636) for an example of how\nto find your system's `libstdc++` version; it can generally be upgraded by\ninstalling a newer version of `g++`.\n\n### integration with tensorflow serving\n\nwe provide custom docker images of\n[tf serving](https://github.com/tensorflow/serving) that are linked to the scann\ntf ops. see the [`tf_serving` directory](tf_serving/readme.md) for further\ninformation.\n\n## building from source\n\nto build scann from source, first install the build tool\n[bazel](https://bazel.build), clang 8, and libstdc++ headers for c++17 (which\nare provided with gcc 9). additionally, scann requires a modern version of\npython (3.8.x or later) and tensorflow 2.13 installed on that version of python.\nonce these prerequisites are satisfied, run the following command in the root\ndirectory of the repository:\n\n```\npython configure.py\ncc=clang-8 bazel build -c opt --features=thin_lto --copt=-mavx --copt=-mfma --cxxopt=\"-std=c++17\" --copt=-fsized-deallocation --copt=-w :build_pip_pkg\n./bazel-bin/build_pip_pkg\n```\n\na .whl file should appear in the root of the repository upon successful\ncompletion of these commands. this .whl can be installed via pip.\n\n## usage\n\nsee the example in [docs/example.ipynb](https://github.com/google-research/google-research/blob/master/scann/docs/example.ipynb). for a more in-depth\nexplanation of scann techniques, see [docs/algorithms.md](https://github.com/google-research/google-research/blob/master/scann/docs/algorithms.md).\n\n\n",
  "docs_url": null,
  "keywords": "machine learning",
  "license": "apache 2.0",
  "name": "scann",
  "package_url": "https://pypi.org/project/scann/",
  "project_url": "https://pypi.org/project/scann/",
  "project_urls": {
    "Homepage": "https://github.com/google-research/google-research/tree/master/scann"
  },
  "release_url": "https://pypi.org/project/scann/1.2.10/",
  "requires_dist": [
    "tensorflow (~=2.13.0)",
    "numpy"
  ],
  "requires_python": "",
  "summary": "scalable approximate nearest neighbor search library",
  "version": "1.2.10",
  "releases": [],
  "developers": [
    "google_inc",
    "opensource@google.com"
  ],
  "kwds": "algorithms scann nearest tensorflow benchmarks",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_scann",
  "homepage": "https://github.com/google-research/google-research/tree/master/scann",
  "release_count": 13,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_tensorflow"
  ]
}
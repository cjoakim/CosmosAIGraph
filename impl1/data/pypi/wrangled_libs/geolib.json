{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "topic :: scientific/engineering :: gis",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "[![build status](https://travis-ci.org/joyanujoy/geolib.svg?branch=master)](https://travis-ci.org/joyanujoy/geolib) ![python 2.7|3.4|3.5|3.6|3.7](https://img.shields.io/badge/python-2.7|3.4|3.5|3.6|3.7-blue.svg)[![downloads](https://pepy.tech/badge/geolib)](https://pepy.tech/project/geolib)\n\n# geolib\na python library for geohash encoding, decoding and finding neighbour cells. this is a python port of [chris veness' javascript implementation](https://www.movable-type.co.uk/scripts/geohash.html).\n\n[wikipedia reference](http://en.wikipedia.org/wiki/geohash)\n## installation\n```pipenv install geolib```\nor\n```pip install geolib```\n## usage\n\n    from geolib import geohash\n   ### encode a latitude, longtiude to geohash\n    geohash.encode(latitude, longitude, precision)\n    >>> geohash.encode('70.2995', '-27.9993', 7)\n    >>> gkkpfve\n\n   ### decode a geohash to latitude, longitude\n    geohash.decode(geohash), returns latitude, longitude as tuple of decimals\n    >>> geohash.decode('gkkpfve')\n    >>> (70.2995, -27.9993)\n\n   ### find neighbouring cells of a geohash\n    geohash.neighbours(geohash) \n    retuns a namedtuple (n, ne, e, se, s, sw, w, nw)    \n\n    >>> neighbours = geohash.neighbours('gcpuyph')\n    >>> neighbours\n    >>> ('gcpuypk', 'gcpuypm', 'gcpuypj', 'gcpuynv', 'gcpuynu', 'gcpuyng', 'gcpuyp5', 'gcpuyp7')\n    >>> neighbours.ne\n    >>> gcpuypm\n\n   ### find adjacent cell in a given direction\n    geohash.adjacent(geohash, direction)\n    >>> geohash.adjacent('gcpuyph', 'n')\n    >>> gcpuypk\n\n   ### find sw/ne latitude/longitude bounds of a geohash\n    geohash.bounds(geohash)\n    returns a namedtuple ((sw_lat, sw_lon), ((ne_lat, ne_lon))\n    >>> bounds = geohash.bounds('ezs42')\n    >>> bounds\n    >>> ((42.583, -5.625), (42.627, -5.58)))\n    >>> bounds.sw.lat \n    >>> 42.583\n\n## documentation\n   [geolib readthedocs](https://geolib.readthedocs.io/en/latest/)\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "geolib",
  "package_url": "https://pypi.org/project/geolib/",
  "project_url": "https://pypi.org/project/geolib/",
  "project_urls": {
    "Homepage": "https://github.com/joyanujoy/geolib"
  },
  "release_url": "https://pypi.org/project/geolib/1.0.7/",
  "requires_dist": [
    "future"
  ],
  "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*",
  "summary": "a library for geohash encoding, decoding and associated functions",
  "version": "1.0.7",
  "releases": [],
  "developers": [
    "anu_joy",
    "oss@cartographix.org"
  ],
  "kwds": "geolib geohash python svg pip",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_geolib",
  "homepage": "https://github.com/joyanujoy/geolib",
  "release_count": 3,
  "dependency_ids": [
    "pypi_future"
  ]
}
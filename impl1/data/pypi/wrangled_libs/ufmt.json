{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "topic :: utilities",
    "typing :: typed"
  ],
  "description": "# \u00b5fmt\n\nsafe, atomic formatting with [black][] and [\u00b5sort][]\n\n[![version](https://img.shields.io/pypi/v/ufmt.svg)](https://pypi.org/project/ufmt)\n[![documentation](https://readthedocs.org/projects/ufmt/badge/?version=latest)](https://ufmt.omnilib.dev)\n[![changelog](https://img.shields.io/badge/change-log-lightgrey)](https://ufmt.omnilib.dev/en/latest/changelog.html)\n[![license](https://img.shields.io/pypi/l/ufmt.svg)](https://github.com/omnilib/ufmt/blob/master/license)\n[![vscode extension](https://img.shields.io/badge/vscode-extension-007acc?logo=visualstudiocode)](https://marketplace.visualstudio.com/items?itemname=omnilib.ufmt)\n\n\u00b5fmt is a safe, atomic code formatter for python built on top of [black] and [\u00b5sort]:\n\n> black makes code review faster by producing the smallest diffs possible. blackened code looks the same regardless of the project you\u2019re reading.\n\n> \u03bcsort is a safe, minimal import sorter. its primary goal is to make no \u201cdangerous\u201d changes to code, and to make no changes on code style.\n\n\u00b5fmt formats files in-memory, first with \u00b5sort and then with black, before writing any\nchanges back to disk. this enables a combined, atomic step in ci/cd workflows for\nchecking or formatting files, without any chance of conflict or intermediate changes\nbetween the import sorter and the code formatter.\n\n\ninstall\n-------\n\n\u00b5fmt requires python 3.8 or newer. you can install it from pypi:\n\n```shell-session\n$ pip install ufmt\n```\n\nif you want to prevent unexpected formatting changes that can break your ci workflow,\nmake sure to pin your transitive dependencies\u2013including black, \u00b5sort, and \u00b5fmt\u2013to your\npreferred versions.\n\nif you use `requirements.txt`, this might look like:\n\n```text\nblack==22.6.0\nufmt==2.0.0\nusort==1.0.4\n```\n\n\nusage\n-----\n\nto format one or more files or directories in place:\n\n```shell-session\n$ ufmt format <path> [<path> ...]\n```\n\nto validate files are formatted correctly, like for ci workflows:\n\n```shell-session\n$ ufmt check <path> [<path> ...]\n```\n\nto validate formatting and generate a diff of necessary changes:\n\n```shell-session\n$ ufmt diff <path> [<path> ...]\n```\n\n\nintegrations\n------------\n\n### github actions\n\n\u00b5fmt provides a github action that can be added to an existing workflow,\nor as a separate workflow or job, to enforce proper formatting in pull requests:\n\n```yaml\njobs:\n  ufmt:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: omnilib/ufmt@action-v1\n        with:\n          path: <path to check>\n          requirements: requirements-fmt.txt\n          python-version: \"3.x\"\n```\n\nsee the [user guide](https://ufmt.omnilib.dev/en/latest/guide.html#github-actions) for details.\n\n### pre-commit hook\n\n\u00b5fmt provides a [pre-commit][] hook. to format your diff before\nevery commit, add the following to your `.pre-commit-config.yaml` file:\n\n```yaml\n  - repo: https://github.com/omnilib/ufmt\n    rev: v2.0.0\n    hooks:\n      - id: ufmt\n        additional_dependencies: \n          - black == 22.6.0\n          - usort == 1.0.4\n```\n\nsee the [user guide](https://ufmt.omnilib.dev/en/latest/guide.html#pre-commit) for details.\n\n### visual studio code\n\n\u00b5fmt has an official vs code extension to use \u00b5fmt as a formatter for python files.\nonce installed, \u00b5fmt can be set as the default formatter with the following settings:\n\n```json\n\"[python]\": {\n  \"editor.defaultformatter\": \"omnilib.ufmt\"\n}\n```\n\n\u00b5fmt can automatically format when saving with the following settings:\n\n```json\n\"[python]\": {\n  \"editor.defaultformatter\": \"omnilib.ufmt\",\n  \"editor.formatonsave\": true\n}\n```\n\nfor more details, or to install the extension, see the visual studio marketplace page:\n\n<a href=\"https://marketplace.visualstudio.com/items?itemname=omnilib.ufmt\"><img alt=\"vs code extension marketplace\" src=\"https://img.shields.io/badge/vscode-ufmt-007acc?style=for-the-badge&logo=visualstudiocode\" /></a>\n<a href=\"vscode:extension/omnilib.ufmt\"><img alt=\"install vs code extension now\" src=\"https://img.shields.io/badge/-install%20now-107c10?style=for-the-badge&logo=visualstudiocode\" /></a>\n\n\nlicense\n-------\n\n\u00b5fmt is copyright [amethyst reese](https://noswap.com), and licensed under\nthe mit license.  i am providing code in this repository to you under an open\nsource license.  this is my personal repository; the license you receive to\nmy code is from me and not from my employer. see the `license` file for details.\n\n\n[black]: https://black.readthedocs.io\n[\u00b5sort]: https://usort.readthedocs.io\n[pre-commit]: https://pre-commit.com\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "ufmt",
  "package_url": "https://pypi.org/project/ufmt/",
  "project_url": "https://pypi.org/project/ufmt/",
  "project_urls": {
    "Changelog": "https://ufmt.omnilib.dev/en/latest/changelog.html",
    "Documentation": "https://ufmt.omnilib.dev",
    "Github": "https://github.com/omnilib/ufmt"
  },
  "release_url": "https://pypi.org/project/ufmt/2.3.0/",
  "requires_dist": [
    "black>=20.8b0",
    "click>=8.0",
    "libcst>=0.4.0",
    "moreorless>=0.4.0",
    "tomlkit>=0.7.2",
    "trailrunner>=1.2.1",
    "typing-extensions>=4.0",
    "usort>=1.0",
    "attribution==1.6.2 ; extra == \"dev\"",
    "black==23.10.0 ; extra == \"dev\"",
    "coverage==7.3.2 ; extra == \"dev\"",
    "flit==3.9.0 ; extra == \"dev\"",
    "flake8==6.1.0 ; extra == \"dev\"",
    "mypy==1.6.1 ; extra == \"dev\"",
    "usort==1.0.7 ; extra == \"dev\"",
    "sphinx==7.1.1 ; extra == \"docs\"",
    "sphinx-mdinclude==0.5.3 ; extra == \"docs\""
  ],
  "requires_python": ">= 3.8",
  "summary": "safe, atomic formatting with black and \u00b5sort",
  "version": "2.3.0",
  "releases": [],
  "developers": [
    "amy@n7.gg"
  ],
  "kwds": "ufmt \u00b5fmt vscode \u00b5sort visualstudiocode",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_ufmt",
  "homepage": "",
  "release_count": 22,
  "dependency_ids": [
    "pypi_attribution",
    "pypi_black",
    "pypi_click",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_flit",
    "pypi_libcst",
    "pypi_moreorless",
    "pypi_mypy",
    "pypi_sphinx",
    "pypi_sphinx_mdinclude",
    "pypi_tomlkit",
    "pypi_trailrunner",
    "pypi_typing_extensions",
    "pypi_usort"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: desktop environment :: window managers",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing",
    "topic :: software development :: user interfaces"
  ],
  "description": "=========\npytest-qt\n=========\n\npytest-qt is a `pytest`_ plugin that allows programmers to write tests\nfor `pyqt5`_, `pyqt6`_, `pyside2`_ and `pyside6`_ applications.\n\nthe main usage is to use the ``qtbot`` fixture, responsible for handling ``qapp``\ncreation as needed and provides methods to simulate user interaction,\nlike key presses and mouse clicks:\n\n\n.. code-block:: python\n\n    def test_hello(qtbot):\n        widget = hellowidget()\n        qtbot.addwidget(widget)\n\n        # click in the greet button and make sure it updates the appropriate label\n        qtbot.mouseclick(widget.button_greet, qt_api.qtcore.qt.mousebutton.leftbutton)\n\n        assert widget.greet_label.text() == \"hello!\"\n\n\n.. _pyside2: https://pypi.org/project/pyside2/\n.. _pyside6: https://pypi.org/project/pyside6/\n.. _pyqt5: https://pypi.org/project/pyqt5/\n.. _pyqt6: https://pypi.org/project/pyqt6/\n.. _pytest: http://pytest.org\n\nthis allows you to test and make sure your view layer is behaving the way you expect after each code change.\n\n.. |version| image:: http://img.shields.io/pypi/v/pytest-qt.svg\n  :target: https://pypi.python.org/pypi/pytest-qt\n\n.. |conda-forge| image:: https://img.shields.io/conda/vn/conda-forge/pytest-qt.svg\n    :target: https://anaconda.org/conda-forge/pytest-qt\n\n.. |ci| image:: https://github.com/pytest-dev/pytest-qt/workflows/test/badge.svg\n  :target: https://github.com/pytest-dev/pytest-qt/actions\n\n.. |coverage| image:: http://img.shields.io/coveralls/pytest-dev/pytest-qt.svg\n  :target: https://coveralls.io/r/pytest-dev/pytest-qt\n\n.. |docs| image:: https://readthedocs.org/projects/pytest-qt/badge/?version=latest\n  :target: https://pytest-qt.readthedocs.io\n\n.. |python| image:: https://img.shields.io/pypi/pyversions/pytest-qt.svg\n  :target: https://pypi.python.org/pypi/pytest-qt/\n  :alt: supported python versions\n\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n  :target: https://github.com/ambv/black\n\n|python| |version| |conda-forge| |ci| |coverage| |docs| |black|\n\n\nfeatures\n========\n\n- `qtbot`_ fixture to simulate user interaction with ``qt`` widgets.\n- `automatic capture`_ of ``qdebug``, ``qwarning`` and ``qcritical`` messages;\n- waitsignal_ and waitsignals_ functions to block test execution until specific\n  signals are emitted.\n- `exceptions in virtual methods and slots`_ are automatically captured and\n  fail tests accordingly.\n\n.. _qtbot: https://pytest-qt.readthedocs.io/en/latest/reference.html#module-pytestqt.qtbot\n.. _automatic capture: https://pytest-qt.readthedocs.io/en/latest/logging.html\n.. _waitsignal: https://pytest-qt.readthedocs.io/en/latest/signals.html\n.. _waitsignals: https://pytest-qt.readthedocs.io/en/latest/signals.html\n.. _exceptions in virtual methods and slots: https://pytest-qt.readthedocs.io/en/latest/virtual_methods.html\n\nrequirements\n============\n\nsince version 4.1.0, ``pytest-qt`` requires python 3.7+.\n\nworks with either pyside6_, pyside2_, pyqt6_ or pyqt5_.\n\nif any of the above libraries is already imported by the time the tests execute, that library will be used.\n\nif not, pytest-qt will try to import and use the qt apis, in this order:\n\n- ``pyside6``\n- ``pyside2``\n- ``pyqt6``\n- ``pyqt5``\n\nto force a particular api, set the configuration variable ``qt_api`` in your ``pytest.ini`` file to\n``pyside6``, ``pyside2``, ``pyqt6`` or ``pyqt5``:\n\n.. code-block:: ini\n\n    [pytest]\n    qt_api=pyqt5\n\n\nalternatively, you can set the ``pytest_qt_api`` environment\nvariable to the same values described above (the environment variable wins over the configuration\nif both are set).\n\n\ndocumentation\n=============\n\nfull documentation and tutorial available at `read the docs`_.\n\n.. _read the docs: https://pytest-qt.readthedocs.io\n\nchange log\n==========\n\nplease consult the `changelog page`_.\n\n.. _changelog page: https://pytest-qt.readthedocs.io/en/latest/changelog.html\n\nbugs/requests\n=============\n\nplease report any issues or feature requests in the `issue tracker`_.\n\n.. _issue tracker: https://github.com/pytest-dev/pytest-qt/issues\n\ncontributing\n============\n\ncontributions are welcome, so feel free to submit a bug or feature\nrequest.\n\npull requests are highly appreciated! if you\ncan, include some tests that exercise the new code or test that a bug has been\nfixed, and make sure to include yourself in the contributors list. :)\n\nto prepare your environment, create a virtual environment and install ``pytest-qt`` in editable mode with ``dev``\nextras::\n\n    $ pip install --editable .[dev]\n\nafter that install ``pre-commit`` for pre-commit checks::\n\n    $ pre-commit install\n\nrunning tests\n-------------\n\ntests are run using `tox`_::\n\n    $ tox -e py37-pyside2,py37-pyqt5\n\n``pytest-qt`` is formatted using `black <https://github.com/ambv/black>`_ and uses\n`pre-commit <https://github.com/pre-commit/pre-commit>`_ for linting checks before commits. you\ncan install ``pre-commit`` locally with::\n\n    $ pip install pre-commit\n    $ pre-commit install\n\nrelated projects\n----------------\n\n- `pytest-xvfb <https://github.com/the-compiler/pytest-xvfb/>`_ allows to run a virtual xserver (xvfb) on linux to avoid gui elements popping up on the screen or for easy ci testing\n- `pytest-qml <https://github.com/jgirardet/pytest-qml>`_ allows running qml tests from pytest\n\ncontributors\n------------\n\nmany thanks to:\n\n- igor t. ghisi (`@itghisi <https://github.com/itghisi>`_);\n- john david reaver (`@jdreaver <https://github.com/jdreaver>`_);\n- benjamin hedrich (`@bh <https://github.com/bh>`_);\n- benjamin audren (`@baudren <https://github.com/baudren>`_);\n- fabio zadrozny (`@fabioz <https://github.com/fabioz>`_);\n- datalyze solutions (`@datalyze-solutions <https://github.com/datalyze-solutions>`_);\n- florian bruhin (`@the-compiler <https://github.com/the-compiler>`_);\n- guilherme quentel melo (`@gqmelo <https://github.com/gqmelo>`_);\n- francesco montesano (`@montefra <https://github.com/montefra>`_);\n- roman yurchak (`@rth <https://github.com/rth>`_)\n- christian karl (`@karlch <https://github.com/karlch>`_)\n\n**powered by**\n\n.. |pycharm| image:: https://resources.jetbrains.com/storage/products/company/brand/logos/pycharm.png\n  :target: https://www.jetbrains.com/pycharm\n  :width: 400\n\n.. |pydev| image:: http://www.pydev.org/images/pydev_banner3.png\n  :target: https://www.pydev.org\n\n|pycharm|\n\n|pydev|\n\n.. _tox: https://tox.readthedocs.io\n",
  "docs_url": null,
  "keywords": "pytest qt test unittest",
  "license": "mit",
  "name": "pytest-qt",
  "package_url": "https://pypi.org/project/pytest-qt/",
  "project_url": "https://pypi.org/project/pytest-qt/",
  "project_urls": {
    "Homepage": "http://github.com/pytest-dev/pytest-qt"
  },
  "release_url": "https://pypi.org/project/pytest-qt/4.3.1/",
  "requires_dist": [
    "pytest >=3.0.0",
    "pre-commit ; extra == 'dev'",
    "tox ; extra == 'dev'",
    "sphinx ; extra == 'doc'",
    "sphinx-rtd-theme ; extra == 'doc'"
  ],
  "requires_python": ">=3.8",
  "summary": "pytest support for pyqt and pyside applications",
  "version": "4.3.1",
  "releases": [],
  "developers": [
    "bruno_oliveira",
    "nicoddemus@gmail.com"
  ],
  "kwds": "pytest_qt_api qtbot qt_api _qtbot pytestqt",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_qt",
  "homepage": "http://github.com/pytest-dev/pytest-qt",
  "release_count": 46,
  "dependency_ids": [
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_tox"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3 :: only",
    "topic :: software development :: libraries :: application frameworks",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "trame-server: server implementation of trame\n===========================================================================\n\n.. image:: https://github.com/kitware/trame-server/actions/workflows/test_and_release.yml/badge.svg\n    :target: https://github.com/kitware/trame-server/actions/workflows/test_and_release.yml\n    :alt: test and release\n\ntrame-server is the server implementation of `trame <https://kitware.github.io/trame/>`_.\nthis python library provide the server implementation of the shared state and controller along with the definition of the web server.\nthe web server aims to be flexible so it can be use within a jupyter environment or as a standalone desktop application.\n\nthis package is not supposed to be used by itself but rather should come as a dependency of **trame**.\nfor any specificity, please refer to `the trame documentation <https://kitware.github.io/trame/>`_.\n\n\ninstalling\n-----------------------------------------------------------\n\ntrame-server can be installed with `pip <https://pypi.org/project/trame-server/>`_:\n\n.. code-block:: bash\n\n    pip install --upgrade trame-server\n\n\nusage\n-----------------------------------------------------------\n\nthe `trame tutorial <https://kitware.github.io/trame/docs/tutorial.html>`_ is the place to go to learn how to use the library and start building your own application.\n\nthe `api reference <https://trame.readthedocs.io/en/latest/index.html>`_ documentation provides api-level documentation.\n\n\n**environments variables**\n\n* **trame_log_network**     : path to log file for capturing network exchange. (default: none)\n* **trame_ws_max_msg_size** : maximum size in bytes of any ws message. (default: 10mb)\n* **trame_ws_heart_beat**   : time in second before assuming the server is non-responsive. (default: 30s)\n* **trame_desktop_debug**   : if defined it will allow user to inspect the web content in desktop mode\n* **trame_server**          : if set to true, this will prevent browser from opening by default\n\n\n**life cycle callbacks**\n\nlife cycle events are directly managed on the application controller\nand are prefixed with `on_*`.\n\n* **on_server_start**     : executed at server.start() call while passing the server as argument.\n* **on_server_bind**      : wslinkserver is getting bound to trame so you can attach your own routes. its instance will be passed as argument to callback.\n* **on_server_ready**     : all protocols initialized and available for client to connect\n* **on_client_connected** : connection established to server\n* **on_client_exited**    : linked to browser \"beforeunload\" event\n* **on_server_exited**    : trame is exiting its event loop\n\n* **on_server_reload**    : if callback registered it can be use to hot_reload methods like the ui.\n\n\nlicense\n-----------------------------------------------------------\n\ntrame-server is made available under the apache license, version 2.0. for more details, see `license <https://github.com/kitware/trame-server/blob/master/license>`_\n\n\ncommunity\n-----------------------------------------------------------\n\n`trame <https://kitware.github.io/trame/>`_ | `discussions <https://github.com/kitware/trame/discussions>`_ | `issues <https://github.com/kitware/trame/issues>`_ | `roadmap <https://github.com/kitware/trame/projects/1>`_ | `contact us <https://www.kitware.com/contact-us/>`_\n\n.. image:: https://zenodo.org/badge/410108340.svg\n    :target: https://zenodo.org/badge/latestdoi/410108340\n\n\nenjoying trame?\n-----------------------------------------------------------\n\nshare your experience `with a testimonial <https://github.com/kitware/trame/issues/18>`_ or `with a brand approval <https://github.com/kitware/trame/issues/19>`_.\n",
  "docs_url": null,
  "keywords": "python,interactive,web,application,framework",
  "license": "apache license 2.0",
  "name": "trame-server",
  "package_url": "https://pypi.org/project/trame-server/",
  "project_url": "https://pypi.org/project/trame-server/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/trame-server/2.13.1/",
  "requires_dist": [
    "wslink >=1.12.2",
    "more-itertools"
  ],
  "requires_python": "",
  "summary": "internal server side implementation of trame",
  "version": "2.13.1",
  "releases": [],
  "developers": [
    "kitware_inc"
  ],
  "kwds": "trame_server trame server trame_log_network on_server_ready",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_trame_server",
  "homepage": "",
  "release_count": 46,
  "dependency_ids": [
    "pypi_more_itertools",
    "pypi_wslink"
  ]
}
{
  "classifiers": [
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering"
  ],
  "description": "# qiskit ibm quantum provider\n\n[![license](https://img.shields.io/github/license/qiskit/qiskit-ibm-provider.svg?style=popout-square)](https://opensource.org/licenses/apache-2.0)\n[![ci](https://github.com/qiskit/qiskit-ibm-provider/actions/workflows/ci.yml/badge.svg)](https://github.com/qiskit/qiskit-ibm-provider/actions/workflows/ci.yml)\n[![](https://img.shields.io/github/release/qiskit/qiskit-ibm-provider.svg?style=popout-square)](https://github.com/qiskit/qiskit-ibm-provider/releases)\n[![](https://img.shields.io/pypi/dm/qiskit-ibm-provider.svg?style=popout-square)](https://pypi.org/project/qiskit-ibm-provider/)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![coverage status](https://coveralls.io/repos/github/qiskit/qiskit-ibm-provider/badge.svg?branch=main)](https://coveralls.io/github/qiskit/qiskit-ibm-provider?branch=main)\n\n**qiskit** is an open-source sdk for working with quantum computers at the level of circuits, algorithms, and application modules.\n\nthis project contains a provider that allows accessing the **[ibm quantum]**\nsystems and simulators.\n\n## migrating from qiskit-ibmq-provider\n\nif you are familiar with the `qiskit-ibmq-provider` repository, check out the [migration guide].\n\n## installation\n\nyou can install the provider using pip:\n\n```bash\npip install qiskit-ibm-provider\n```\n\n## provider setup\n\n1. create an ibm quantum account or log in to your existing account by visiting the [ibm quantum login page].\n\n1. copy (and/or optionally regenerate) your api token from your\n   [ibm quantum account page].\n\n1. take your token from step 2, here called `my_api_token`, and save it by calling `ibmprovider.save_account()`:\n\n   ```python\n   from qiskit_ibm_provider import ibmprovider\n   ibmprovider.save_account(token='my_api_token')\n   ```\n\n   the command above stores your credentials locally in a configuration file called `qiskit-ibm.json`. by default, this file is located in `$home/.qiskit`, where `$home` is your home directory.\n   once saved you can then instantiate the provider like below and access the backends:\n\n   ```python\n   from qiskit_ibm_provider import ibmprovider\n   provider = ibmprovider()\n\n   # display current supported backends\n   print(provider.backends())\n\n   # get ibm's simulator backend\n   simulator_backend = provider.get_backend('ibmq_qasm_simulator')\n   ```\n\n### load account from environment variables\nalternatively, the ibm provider can discover credentials from environment variables:\n```bash\nexport qiskit_ibm_token='my_api_token'\n```\n\nthen instantiate the provider without any arguments and access the backends:\n```python\nfrom qiskit_ibm_provider import ibmprovider\nprovider = ibmprovider()\n```\n\n### enable account for current session\nas another alternative, you can also enable an account just for the current session by instantiating the provider with the token.\n\n```python\nfrom qiskit_ibm_provider import ibmprovider\nprovider = ibmprovider(token='my_api_token')\n```\n\n## next steps\n\nnow you're set up and ready to check out some of the tutorials.\n- [qiskit ibm provider]\n- [qiskit]\n\n## contribution guidelines\n\nif you'd like to contribute to qiskit-ibm-provider, please take a look at our\n[contribution guidelines]. this project adheres to qiskit's [code of conduct].\nby participating, you are expect to uphold to this code.\n\nwe use [github issues] for tracking requests and bugs. please use our [slack]\nfor discussion and simple questions. to join our slack community use the\ninvite link at [qiskit.org]. for questions that are more suited for a forum we\nuse the `qiskit` tag in [stack exchange].\n\n## authors and citation\n\nthe qiskit ibm quantum provider is the work of [many people] who contribute to the\nproject at different levels. if you use qiskit, please cite as per the included\n[bibtex file].\n\n## license\n\n[apache license 2.0].\n\n\n[ibm quantum]: https://www.ibm.com/quantum-computing/\n[ibm quantum login page]:  https://quantum-computing.ibm.com/login\n[ibm quantum account page]: https://quantum-computing.ibm.com/account\n[contribution guidelines]: https://github.com/qiskit/qiskit-ibm-provider/blob/main/contributing.md\n[code of conduct]: https://github.com/qiskit/qiskit-ibm-provider/blob/main/code_of_conduct.md\n[github issues]: https://github.com/qiskit/qiskit-ibm-provider/issues\n[slack]: https://qiskit.slack.com\n[qiskit.org]: https://qiskit.org\n[stack exchange]: https://quantumcomputing.stackexchange.com/questions/tagged/qiskit\n[qiskit tutorial]: https://github.com/qiskit/qiskit-tutorial\n[many people]: https://github.com/qiskit/qiskit-ibm-provider/graphs/contributors\n[qiskit ibm provider]: https://github.com/qiskit/qiskit-ibm-provider/tree/main/docs/tutorials\n[qiskit]: https://github.com/qiskit/qiskit-tutorial\n[bibtex file]: https://github.com/qiskit/qiskit/blob/master/qiskit.bib\n[apache license 2.0]: https://github.com/qiskit/qiskit-ibm-provider/blob/main/license.txt\n[migration guide]: https://github.com/qiskit/qiskit-ibm-provider/blob/main/docs/tutorials/migration_guide_from_qiskit-ibmq-provider.ipynb\n",
  "docs_url": null,
  "keywords": "qiskit,quantum",
  "license": "apache 2.0",
  "name": "qiskit-ibm-provider",
  "package_url": "https://pypi.org/project/qiskit-ibm-provider/",
  "project_url": "https://pypi.org/project/qiskit-ibm-provider/",
  "project_urls": {
    "Bug Tracker": "https://github.com/Qiskit/qiskit-ibm-provider/issues",
    "Documentation": "https://qiskit.org/documentation/",
    "Homepage": "https://github.com/Qiskit/qiskit-ibm-provider",
    "Source Code": "https://github.com/Qiskit/qiskit-ibm-provider"
  },
  "release_url": "https://pypi.org/project/qiskit-ibm-provider/0.7.3/",
  "requires_dist": [
    "qiskit >=0.44.1",
    "requests >=2.19",
    "requests-ntlm >=1.1.0",
    "numpy >=1.13",
    "urllib3 >=1.21.1",
    "python-dateutil >=2.8.0",
    "websocket-client >=1.5.1",
    "websockets >=10.0",
    "typing-extensions >=4.3",
    "matplotlib >=2.1 ; extra == 'visualization'",
    "ipywidgets <8.0.0 ; extra == 'visualization'",
    "seaborn >=0.9.0 ; extra == 'visualization'",
    "plotly >=4.4 ; extra == 'visualization'",
    "ipyvuetify >=1.1 ; extra == 'visualization'",
    "pyperclip >=1.7 ; extra == 'visualization'",
    "ipython >=5.0.0 ; extra == 'visualization'",
    "traitlets !=5.0.5 ; extra == 'visualization'",
    "ipyvue >=1.8.5 ; extra == 'visualization'"
  ],
  "requires_python": ">=3.8",
  "summary": "qiskit ibm quantum provider for accessing the quantum devices and simulators at ibm",
  "version": "0.7.3",
  "releases": [],
  "developers": [
    "hello@qiskit.org",
    "qiskit_development_team"
  ],
  "kwds": "qiskit_ibm_provider qiskit_ibm_token qiskit migration_guide_from_qiskit ibmq",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_qiskit_ibm_provider",
  "homepage": "https://github.com/qiskit/qiskit-ibm-provider",
  "release_count": 17,
  "dependency_ids": [
    "pypi_ipython",
    "pypi_ipyvue",
    "pypi_ipyvuetify",
    "pypi_ipywidgets",
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_plotly",
    "pypi_pyperclip",
    "pypi_python_dateutil",
    "pypi_qiskit",
    "pypi_requests",
    "pypi_requests_ntlm",
    "pypi_seaborn",
    "pypi_traitlets",
    "pypi_typing_extensions",
    "pypi_urllib3",
    "pypi_websocket_client",
    "pypi_websockets"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "topic :: utilities"
  ],
  "description": ".. image:: https://api.cirrus-ci.com/github/pyscaffold/pyscaffoldext-custom-extension.svg?branch=master\n    :alt: build status\n    :target: https://cirrus-ci.com/github/pyscaffold/pyscaffoldext-custom-extension\n.. image:: https://readthedocs.org/projects/pyscaffoldext-custom-extension/badge/?version=latest\n    :alt: readthedocs\n    :target: https://pyscaffoldext-custom-extension.readthedocs.io/\n.. image:: https://img.shields.io/coveralls/github/pyscaffold/pyscaffoldext-custom-extension/master.svg\n    :alt: coveralls\n    :target: https://coveralls.io/r/pyscaffold/pyscaffoldext-custom-extension\n.. image:: https://img.shields.io/pypi/v/pyscaffoldext-custom-extension.svg\n    :alt: pypi-server\n    :target: https://pypi.org/project/pyscaffoldext-custom-extension/\n\n|\n\n==============================\npyscaffoldext-custom-extension\n==============================\n\npyscaffold extension that lets you create your own custom extensions.\n\n\ndescription\n===========\n\nthis extension serves as a support for the users interested in developing their own extension for pyscaffold.\nit configures your project so that you can start writing your extension logic and tests right away,\ntaking care of all the wiring required to conform to pyscaffold's needs.\n\nlet's say you want to create an extension named ``notebooks`` that creates a notebooks folder with some template `jupyter notebook`_.\nafter having installed this extension with::\n\n    pip install pyscaffoldext-custom-extension\n\nyou will be able to just use it with::\n\n    putup --custom-extension notebooks\n\nthis will create a typical pyscaffold project template with some modifications:\n\n* the topmost namespace will be ``pyscaffoldext`` to have a unified namespace for pyscaffold extensions,\n* assures that the package (as pip_/pypi_ sees it) is named ``pyscaffoldext-notebooks`` in ``setup.cfg``,\n* sets the correct ``install_requires`` as well as the ``options.entry_points`` parameters in ``setup.cfg``,\n* automatically activates the extensions ``--no-skeleton``, ``--pre-commit``, ``--cirrus`` and\n  since we want clean-coded, high-quality extensions,\n* creates a ``extension.py`` module holding a class which serves you as a template for your extension,\n* adds basic unit tests checking that the invocation of your extension works and that it complies with our `flake8`_ code guidelines,\n* provides a modified ``readme.rst`` indicating that this is a pyscaffold extensions and how to install it.\n\n\n.. _pyscaffold-notes:\n\nmaking changes & contributing\n=============================\n\nthis project uses `pre-commit`_, please make sure to install it before making any\nchanges::\n\n    pip install pre-commit\n    cd pyscaffoldext-custom-extension\n    pre-commit install\n\nit is a good idea to update the hooks to the latest version::\n\n    pre-commit autoupdate\n\nplease also check pyscaffold's `contribution guidelines`_,\n\n\nnote\n====\n\nfor more information about pyscaffold and its extension mechanism, check out https://pyscaffold.org/.\n\n\n.. _jupyter notebook: https://jupyter-notebook.readthedocs.io/\n.. _flake8: https://flake8.pycqa.org/\n.. _pre-commit: https://pre-commit.com/\n.. _contribution guidelines: https://pyscaffold.org/en/latest/contributing.html\n.. _pip: https://pip.pypa.io/en/stable/\n.. _pypi: https://pypi.org\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pyscaffoldext-custom-extension",
  "package_url": "https://pypi.org/project/pyscaffoldext-custom-extension/",
  "project_url": "https://pypi.org/project/pyscaffoldext-custom-extension/",
  "project_urls": {
    "Documentation": "https://pyscaffoldext-custom-extension.readthedocs.io/",
    "Download": "https://pypi.org/project/pyscaffoldext-custom-extension/#files",
    "Homepage": "https://github.com/pyscaffold/pyscaffoldext-custom-extension",
    "Source": "https://github.com/pyscaffold/pyscaffoldext-custom-extension/",
    "Tracker": "https://github.com/pyscaffold/pyscaffoldext-custom-extension/issues",
    "Twitter": "https://twitter.com/PyScaffold"
  },
  "release_url": "https://pypi.org/project/pyscaffoldext-custom-extension/0.6.3/",
  "requires_dist": [
    "pyscaffold (<5.0a0,>=4.0.1)",
    "configupdater (<4,>=2.0)",
    "packaging (>=20.7)",
    "importlib-metadata ; python_version < \"3.8\"",
    "tox ; extra == 'testing'",
    "pre-commit ; extra == 'testing'",
    "setuptools-scm ; extra == 'testing'",
    "virtualenv ; extra == 'testing'",
    "configupdater ; extra == 'testing'",
    "pytest ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pytest-xdist ; extra == 'testing'"
  ],
  "requires_python": "",
  "summary": "pyscaffold extension to create a custom pyscaffold extension",
  "version": "0.6.3",
  "releases": [],
  "developers": [
    "simone.robutti@teraki.com",
    "simone_robutti"
  ],
  "kwds": "pyscaffoldext pyscaffold _pyscaffold extension extensions",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pyscaffoldext_custom_extension",
  "homepage": "https://github.com/pyscaffold/pyscaffoldext-custom-extension",
  "release_count": 14,
  "dependency_ids": [
    "pypi_configupdater",
    "pypi_importlib_metadata",
    "pypi_packaging",
    "pypi_pre_commit",
    "pypi_pyscaffold",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_xdist",
    "pypi_setuptools_scm",
    "pypi_tox",
    "pypi_virtualenv"
  ]
}
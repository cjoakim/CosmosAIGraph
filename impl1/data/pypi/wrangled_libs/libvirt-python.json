{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: gnu lesser general public license v2 or later (lgplv2+)",
    "programming language :: python :: 3 :: only"
  ],
  "description": "libvirt python binding readme\n=============================\n\nthis package provides a module that permits applications\nwritten in the python 3.x programming language to call the interface\nsupplied by the libvirt library, to manage the virtualization\ncapabilities of recent versions of linux (and other oses).\nas such, the module exposes python bindings to to the libvirt.so,\nlibvirt-qemu.so and libvirt-lxc.so library apis.\n\nit is written to build against any version of libvirt that\nis 0.9.11 or newer.\n\nthis code is distributed under the terms of the lgpl version\n2 or later.\n\nrequirements\n------------\n\nto build the libvirt python binary requires the gcc and pkg-config\ntools, and development headers for the libvirt and python libraries.\n\nbuilding and installing\n-----------------------\n\nthe module can be built by following the normal python module\nbuild process\n\n  $ python3 -m build\n\nfor testing and distributing purposes or it can be installed directly via pip\nas\n\n  $ python3 -m pip install .\n\nwithout explicit building.\n\nin order to test the package, you'll need either tox or at least pytest,\ndepending on whether you want to test an already installed package in which\ncase the latter is sufficient or if you wish to test in a virtual\nenvironment you'd need tox. depending on your preferred setup, you can run the\ntests either as\n\n  $ python3 -m pytest\n\nor as\n\n  $ tox\n\na makefile shim is also provided for your convenience, so that you don't have\nto care about the exact operations mentioned above and instead you simply do\n\n  $ make && make check\n\nas of libvirt 1.2.6, it is possible to develop against an uninstalled\nlibvirt.git checkout, by setting pkg_config_path and ld_library_path\nenvironment variables to point into that libvirt tree; you can even\nautomate this by using libvirt's run script:\n\n  /path/to/libvirt/run python3 -m build\n\npatches for this code should be submitted as merge requests to the\nproject page on gitlab. see contributing.rst for more information.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "libvirt-python",
  "package_url": "https://pypi.org/project/libvirt-python/",
  "project_url": "https://pypi.org/project/libvirt-python/",
  "project_urls": {
    "Homepage": "http://www.libvirt.org"
  },
  "release_url": "https://pypi.org/project/libvirt-python/9.10.0/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "the libvirt virtualization api python binding",
  "version": "9.10.0",
  "releases": [],
  "developers": [
    "libvir-list@redhat.com",
    "libvirt_maintainers"
  ],
  "kwds": "libvirt qemu virtualization lxc virtual",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_libvirt_python",
  "homepage": "http://www.libvirt.org",
  "release_count": 110,
  "dependency_ids": []
}
{
  "classifiers": [
    "license :: osi approved :: bsd license",
    "operating system :: macos",
    "operating system :: posix :: linux",
    "programming language :: c++",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: build tools",
    "topic :: system :: archiving :: packaging",
    "topic :: system :: software distribution"
  ],
  "description": "# cmake wheel: cmeel\n\n[![pypi version](https://badge.fury.io/py/cmeel.svg)](https://pypi.org/project/cmeel)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/cmake-wheel/cmeel/main.svg)](https://results.pre-commit.ci/latest/github/cmake-wheel/cmeel/main)\n[![documentation status](https://readthedocs.org/projects/cmeel/badge/?version=latest)](https://cmeel.readthedocs.io/en/latest/?badge=latest)\n\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![poetry](https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json)](https://python-poetry.org/)\n[![ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v1.json)](https://github.com/charliermarsh/ruff)\n\nwheel build backend using cmake, to package anything with pip and distribute on pypi.\n\nfollowing those relevant peps:\n- [pep 427](https://peps.python.org/pep-0427/), the wheel binary package format 1.0\n- [pep 517](https://peps.python.org/pep-0517/), a build-system independent format for source trees\n- [pep 518](https://peps.python.org/pep-0518/), specifying minimum build system requirements for python projects\n- [pep 600](https://peps.python.org/pep-0600/), future \u2018manylinux\u2019 platform tags for portable linux built distributions\n- [pep 621](https://peps.python.org/pep-0621/), storing project metadata in pyproject.toml\n- [pep 639](https://peps.python.org/pep-0639/), improving license clarity with better package metadata, **draft**\n- [pep 660](https://peps.python.org/pep-0660/), editable installs for pyproject.toml based builds (wheel based)\n\n## chat\n\nhttps://matrix.to/#/#cmake-wheel:matrix.org\n\n## basic idea\n\nglue between pep 517 & 660 entry points and modern cmake standard project configuration / build / test / install\n\nthis install in `${python_sitelib}/cmeel.prefix/`:\n- as there is a dot, it is not a valid python module name, so no risk of importing anything there by mistake\n- play well with others, as everything is confined to `${python_sitelib}/cmeel.prefix`\n- `${python_sitelib}/cmeel.pth` automatically load `${python_sitelib}/cmeel.prefix/${python_sitelib}`, so python\n  packages work out of the box\n- existing `${python_sitelib}/cmeel.prefix` are automatically added to `$cmake_prefix_path`, so we can build cmake\n  packages whose dependencies are provided by other packages installed with cmeel\n- stuff in `${python_sitelib}/cmeel.prefix/bin` is exposed via `cmeel.run:cmeel_run`, or copied if start with a shebang\n\n## basic pyproject.toml example\n\nextract from  https://github.com/cmake-wheel/cmeel-example/blob/main/pyproject.toml:\n\n```toml\n[project]\nname = \"cmeel-example\"\nversion = \"0.4.12\"\ndescription = \"this is an example project, to show how to use cmeel\"\nrequires-python = \">= 3.7\"\nlicense = \"bsd-2-clause\"\nauthors = [{name = \"guilhem saurel\", email = \"guilhem.saurel@laas.fr\"}]\n\n[project.urls]\nhomepage = \"https://github.com/cmake-wheel/cmeel-example\"\nrepository = \"https://github.com/cmake-wheel/cmeel-example.git\"\nchangelog = \"https://github.com/cmake-wheel/cmeel-example/blob/main/changelog.md\"\n\n[build-system]\nrequires = [\"cmeel[build]\"]\nbuild-backend = \"cmeel\"\n```\n\ncomplete specification is available at:\nhttps://packaging.python.org/en/latest/specifications/declaring-project-metadata\n\n## install\n\nif you want to use the helpers provided by cmeel, to *eg*. test building a project in a manylinux container with\n`cmeel docker`, the best way to install cmeel is to use pipx: `pipx install cmeel`\n\notherwise, if you just want to use the build backend, there is no need to install anything: your frontent (*eg.* `pip`)\nshould do this for you\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd-2-clause",
  "name": "cmeel",
  "package_url": "https://pypi.org/project/cmeel/",
  "project_url": "https://pypi.org/project/cmeel/",
  "project_urls": {
    "Documentation": "https://cmeel.readthedocs.io/",
    "Homepage": "https://github.com/cmake-wheel/cmeel",
    "changelog": "https://github.com/cmake-wheel/cmeel/blob/main/CHANGELOG.md"
  },
  "release_url": "https://pypi.org/project/cmeel/0.53.3/",
  "requires_dist": [
    "cmake (>=3.27.9,<4.0.0) ; extra == \"build\"",
    "git-archive-all (>=1.23.1,<2.0.0) ; extra == \"build\"",
    "packaging (>=23.2,<24.0) ; extra == \"build\"",
    "tomli (>=2.0.1,<3.0.0) ; python_version < \"3.11\"",
    "wheel (>=0.42.0) ; extra == \"build\""
  ],
  "requires_python": ">=3.8,<4.0",
  "summary": "create wheel from cmake projects",
  "version": "0.53.3",
  "releases": [],
  "developers": [
    "guilhem.saurel@laas.fr",
    "guilhem_saurel"
  ],
  "kwds": "cmake cmeel_run cmeel cmake_prefix_path badge",
  "license_kwds": "bsd-2-clause",
  "libtype": "pypi",
  "id": "pypi_cmeel",
  "homepage": "https://github.com/cmake-wheel/cmeel",
  "release_count": 82,
  "dependency_ids": [
    "pypi_cmake",
    "pypi_git_archive_all",
    "pypi_packaging",
    "pypi_tomli",
    "pypi_wheel"
  ]
}
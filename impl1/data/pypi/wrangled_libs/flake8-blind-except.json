{
  "classifiers": [],
  "description": "flake8-blind-except\n===================\n\na flake8 extension that checks for blind, catch-all ``except:`` and ``except exception:`` statements.\n\nas of `pycodestyle 2.1.0 <https://github.com/pycqa/pycodestyle/commit/543f12b06592c53e2e60edc4846ee02ab9550e8b/>`_, \"e722 do not use bare except, specify exception instead\" is built-in. however, bare ``exception`` and ``baseexception`` are still allowed. this extension flags them as `b902`.\n\nusing ``except`` without explicitly specifying which exceptions to catch is generally considered bad practice, since it catches system signals like ``sigint``. you probably want to handle system interrupts differently than exceptions occurring in your code.\n\nit's also usually better style to have many small ``try``-``except`` blocks catching specific exceptions instead of a giant ``try:`` block with a catch-all ``except:`` at the bottom. it's also nicer to your fellow programmers to be a bit more specific about what exceptions they can expect in specific parts of the code, and what the proper course of action is when they occur.\n\nan example of code that will fail this check is:\n\n.. code-block:: python\n\n    try:\n        something_scary()\n    except:\n        everybody_panic()\n\nhowever, the following code is valid:\n\n.. code-block:: python\n\n    try:\n        something_terrifying()\n    except terrifyingexception:\n        dont_panic()\n\ninstallation\n------------\n\nif you don't already have it, install ``flake8``::\n\n    $ pip install flake8\n\nthen, install the extension::\n\n    $ pip install flake8-blind-except\n\nusage\n-----\n\nrun the following to verify that the plugin has been installed correctly::\n\n    $ flake8 --version\n    2.0 (pep8: 1.4.6, flake8-blind-except: 0.1.0, pyflakes: 0.7.3)\n\nnow, when you run ``flake8``, the plugin will automatically be used.\n\nwhen a blind except is found, ``flake8`` will output::\n\n    b901 blind except: statement\n\nor::\n\n    b902 blind except exception: statement\n\ncontributing\n------------\n\ni'm not working on python these days, so probably won't be making updates anytime soon. prs are welcome though!\n\ntesting\n-------\n\ntests can be run with ``pytest --doctest-modules flake8_blind_except.py``.\n\nchanges\n-------\n\n0.2.1 - 2022-03-08\n``````````````````\n* remove setuptools from install_requires (#8)\n\n0.2.0 - 2021-01-07\n``````````````````\n* b902 error added for cases where a blind ``exception`` is caught.\n\n0.1.1 - 2016-06-27\n``````````````````\n* ``pep8`` was renamed to ``pycodestyle`` in its 2.0 release. compatibility update for this change.\n\n0.1.0 - 2014-02-07\n``````````````````\n* initial release\n\nnotes\n-----\n\ni've tested this package with flake8 2.6.2 + python 2.7.3 and flake8 3.7.9 + python 3.7.5.\n\n\n",
  "docs_url": null,
  "keywords": "flake8 except exception",
  "license": "mit",
  "name": "flake8-blind-except",
  "package_url": "https://pypi.org/project/flake8-blind-except/",
  "project_url": "https://pypi.org/project/flake8-blind-except/",
  "project_urls": {
    "Homepage": "https://github.com/elijahandrews/flake8-blind-except"
  },
  "release_url": "https://pypi.org/project/flake8-blind-except/0.2.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a flake8 extension that checks for blind except: statements",
  "version": "0.2.1",
  "releases": [],
  "developers": [
    "elijah_andrews",
    "elijahcandrews@gmail.com"
  ],
  "kwds": "flake8_blind_except exceptions pycodestyle flake8 exception",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_flake8_blind_except",
  "homepage": "https://github.com/elijahandrews/flake8-blind-except",
  "release_count": 4,
  "dependency_ids": []
}
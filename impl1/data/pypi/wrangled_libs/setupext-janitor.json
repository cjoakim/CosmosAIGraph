{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: setuptools plugin",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8"
  ],
  "description": "janitor setuptools extension\n============================\n\n|version| |downloads| |status| |license|\n\nextends the ``clean`` command to remove stuff generated by the\ndevelopment process.\n\nwait... why? what??\n-------------------\nso ``setup.py clean`` is useful for developers of c extensions or\nanything else that takes advantage of the ``setup.py build`` command.\npure python packages generate their own set of artifacts that clutter\nup the source tree.  this package extends the clean command so that\nit removes the following artifacts as well:\n\n* the distribution directory as generated by the ``sdist`` and ``bdist*``\n  commands\n* top-level *.egg-info* and *.egg* directories that *setup.py* creates\n* local virtual environment directories\n* *__pycache__* directories\n\ni come from a c/c++ background where the *makefile* usually provide house\nkeeping targets such as *clean*, *dist-clean*, and *maintainer-clean*.\nthis extension is inspired by the same desire for a clean working\nenvironment.\n\ninstallation\n~~~~~~~~~~~~\nthe ``setuptools`` package contains a number of interesting ways in which\nit can be extended.  the simplest way to use this extension is to install\nit into the environment and use it.  the package extends the ``clean``\ncommand by installing a `distutils extension`_::\n\n   $ pip install -q 'setupext-janitor'\n   $ ./setup.py clean --dist --eggs\n   running clean\n   removing './my_package.egg-info' (and everything under it)\n   removing 'dist' (and everything under it)\n\nyou can also install the command from within your *setup.py* using the\n``setup_requires`` and ``cmdclass`` keyword parameters to the ``setup``\nfunction call.  this is a little more difficult than it should be since\nthe ``setupext_janitor`` package needs to be imported into *setup.py* so\nthat it can be passed as a keyword parameter **before** it is downloaded.\nthe easiest way to do this is to catch the ``importerror`` that happens\nif it is not already downloaded::\n\n   import setuptools\n   try:\n      from setupext_janitor import janitor\n      cleancommand = janitor.cleancommand\n   except importerror:\n      cleancommand = none\n\n   cmd_classes = {}\n   if cleancommand is not none:\n      cmd_classes['clean'] = cleancommand\n\n   setup(\n      # normal parameters\n      setup_requires=['setupext_janitor'],\n      cmdclass=cmd_classes,\n      entry_points={\n         # normal parameters, ie. console_scripts[]\n         'distutils.commands': [\n            ' clean = setupext_janitor.janitor:cleancommand']\n         }\n   )\n\nthis approach **is not recommended** since the ``install_requires`` keyword\nwill install ``setupext_janitor`` into a target environment when installing\nyour package from a source distribution.  not to mention that amount of\ngynmastics required to safely use it from within *setup.py*,\n\nusage\n~~~~~\nonce the extension is installed, the ``clean`` command will accept a\nfew new command line parameters.\n\n``setup.py clean --build``\n   removes directories that various *build* commands produce.\n\n``setup.py clean --dist``\n   removes directories that the various *dist* commands produce.\n\n``setup.py clean --eggs``\n   removes *.egg* and *.egg-info* directories.\n\n``setup.py clean --environment``\n   removes the currently active virtual environment as indicated by the\n   ``$virtual_env`` environment variable.  the name of the directory can\n   also be specified using the ``--virtualenv-dir`` command line option.\n\n``setup.py clean --pycache``\n   recursively removes directories named *__pycache__*.\n\n``setup.py clean --all``\n   remove all of by-products.  this is the same as using ``--dist --egg\n   --environment --pycache``.\n\nwhere can i get this extension from?\n------------------------------------\n+---------------+-----------------------------------------------------+\n| source        | https://github.com/dave-shawley/setupext-janitor    |\n+---------------+-----------------------------------------------------+\n| status        | https://travis-ci.org/dave-shawley/setupext-janitor |\n+---------------+-----------------------------------------------------+\n| download      | https://pypi.org/project/setupext-janitor           |\n+---------------+-----------------------------------------------------+\n| documentation | http://setupext-janitor.readthedocs.io/en/latest    |\n+---------------+-----------------------------------------------------+\n| issues        | https://github.com/dave-shawley/setupext-janitor    |\n+---------------+-----------------------------------------------------+\n\n.. _distutils extension: https://setuptools.readthedocs.io/en/latest\n   /setuptools.html#extending-and-reusing-setuptools\n.. _setuptools: https://setuptools.readthedocs.io/en/latest/\n\n.. |version| image:: https://img.shields.io/pypi/v/setupext-janitor.svg?\n   :target: https://pypi.org/project/setupext-janitor/\n.. |downloads| image:: https://img.shields.io/pypi/dm/setupext-janitor.svg\n   :target: https://pypi.org/project/setupext-janitor/\n.. |status| image:: https://travis-ci.org/dave-shawley/setupext-janitor.svg\n   :target: https://travis-ci.org/dave-shawley/setupext-janitor\n.. |license| image:: https://img.shields.io/github/license/dave-shawley/setupext-janitor.svg\n   :target: https://setupext-janitor.readthedocs.io/\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "setupext-janitor",
  "package_url": "https://pypi.org/project/setupext-janitor/",
  "project_url": "https://pypi.org/project/setupext-janitor/",
  "project_urls": {
    "Homepage": "http://github.com/dave-shawley/setupext-janitor"
  },
  "release_url": "https://pypi.org/project/setupext-janitor/1.1.2/",
  "requires_dist": [
    "coverage (==4.5.3) ; extra == 'dev'",
    "flake8 (==3.7.7) ; extra == 'dev'",
    "nose (==1.3.7) ; extra == 'dev'",
    "sphinx (==1.8.5) ; extra == 'dev'",
    "sphinx-rtd-theme (==0.4.3) ; extra == 'dev'",
    "tox (==3.9.0) ; extra == 'dev'",
    "mock (==1.0.1) ; (python_version < \"3\") and extra == 'dev'"
  ],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*",
  "summary": "making setup.py clean more useful.",
  "version": "1.1.2",
  "releases": [],
  "developers": [
    "dave_shawley",
    "daveshawley@gmail.com"
  ],
  "kwds": "setupext_janitor _setuptools setup_requires cleancommand __pycache__",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_setupext_janitor",
  "homepage": "http://github.com/dave-shawley/setupext-janitor",
  "release_count": 5,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_flake8",
    "pypi_mock",
    "pypi_nose",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_tox"
  ]
}
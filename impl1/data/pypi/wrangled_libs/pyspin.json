{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6"
  ],
  "description": "py-spin\n=======\n\n| |latest version|\n| |build status|\n| |python versions|\n\na little terminal spinner lib. heavily inspired by `go-spin`_.\n\ndemo\n----\n\n|pyspin_demo|\n\ninstall\n-------\n\n::\n\n    $ pip install pyspin\n\nusage\n-----\n\nmake a spinner by hand:\n\n.. code:: python\n\n    from __future__ import print_function\n\n    import sys\n    import time\n\n    from pyspin.spin import default, spinner\n\n    # choose a spin style.\n    spin = spinner(default)\n    # spin it now.\n    for i in range(50):\n        print(u\"\\r{0}\".format(spin.next()), end=\"\")\n        sys.stdout.flush()\n        time.sleep(0.1)\n\nor you can use the decorator pyspin provide:\n\n.. code:: python\n\n    from __future__ import print_function\n\n    import time\n\n    from pyspin.spin import make_spin, default\n\n    # choose a spin style and the words when showing the spin.\n    @make_spin(default, \"downloading...\")\n    def download_video():\n        time.sleep(10)\n\n    if __name__ == '__main__':\n        print(\"i'm going to download a video, and it'll cost much time.\")\n        download_video()\n        print(\"done!\")\n\nyou can have a look at the example code in the example folder. run it\nvia:\n\n::\n\n    $ python example/example_spin.py\n    $ python example/usage_example.py\n\ncontribute\n----------\n\n-  if you find an interesting spinner, send me a pull request <3\n-  if you find a bug or have any suggestions, open an issue.\n\ncontributions are always welcome at any time! \u2728 \ud83c\udf70 \u2728\n\nlicense\n-------\n\nmit.\n\n.. _go-spin: https://github.com/tj/go-spin\n\n.. |latest version| image:: http://img.shields.io/pypi/v/pyspin.svg\n   :target: https://pypi.python.org/pypi/pyspin\n.. |build status| image:: https://travis-ci.org/lord63/py-spin.svg\n   :target: https://travis-ci.org/lord63/py-spin\n.. |python versions| image:: https://img.shields.io/pypi/pyversions/pyspin.svg\n   :target: https://pypi.python.org/pypi/pyspin\n.. |pyspin_demo| image:: https://cloud.githubusercontent.com/assets/5268051/7448038/ba152a8c-f241-11e4-86e0-50bc3b33bce5.gif",
  "docs_url": null,
  "keywords": "terminal spin spinner",
  "license": "mit",
  "name": "pyspin",
  "package_url": "https://pypi.org/project/pyspin/",
  "project_url": "https://pypi.org/project/pyspin/",
  "project_urls": {
    "Download": "UNKNOWN",
    "Homepage": "http://github.com/lord63/py-spin"
  },
  "release_url": "https://pypi.org/project/pyspin/1.1.1/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "little terminal spinner lib.",
  "version": "1.1.1",
  "releases": [],
  "developers": [
    "lord63",
    "lord63.j@gmail.com"
  ],
  "kwds": "make_spin pyspin pyspin_demo spinner example_spin",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pyspin",
  "homepage": "http://github.com/lord63/py-spin",
  "release_count": 6,
  "dependency_ids": []
}
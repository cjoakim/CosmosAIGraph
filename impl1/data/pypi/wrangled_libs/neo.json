{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering"
  ],
  "description": "===\nneo\n===\n\nneo is a python package for working with electrophysiology data in python, together\nwith support for reading a wide range of neurophysiology file formats, including\nspike2, neuroexplorer, alphaomega, axon, blackrock, plexon, tdt, and support for\nwriting to a subset of these formats plus non-proprietary formats including hdf5.\n\nthe goal of neo is to improve interoperability between python tools for\nanalyzing, visualizing and generating electrophysiology data by providing a common,\nshared object model. in order to be as lightweight a dependency as possible,\nneo is deliberately limited to represention of data, with no functions for data\nanalysis or visualization.\n\nneo is used by a number of other software tools, including\nspykeviewer_ (data analysis and visualization), elephant_ (data analysis),\nthe g-node_ suite (databasing), pynn_ (simulations), tridesclous_ (spike sorting)\nand ephyviewer_ (data visualization).\nopenelectrophy_ (data analysis and visualization) uses an older version of neo.\n\nneo implements a hierarchical data model well adapted to intracellular and\nextracellular electrophysiology and eeg data with support for multi-electrodes\n(for example tetrodes). neo's data objects build on the quantities package,\nwhich in turn builds on numpy by adding support for physical dimensions. thus\nneo objects behave just like normal numpy arrays, but with additional metadata,\nchecks for dimensional consistency and automatic unit conversion.\n\na project with similar aims but for neuroimaging file formats is `nibabel`_.\n\ncode status\n-----------\n\n.. image:: https://github.com/neuralensemble/python-neo/actions/workflows/core-test.yml/badge.svg?event=push&branch=master\n   :target: https://github.com/neuralensemble/python-neo/actions?query=event%3apush+branch%3amaster\n   :alt: core test status (github actions)\n.. image:: https://github.com/neuralensemble/python-neo/actions/workflows/io-test.yml/badge.svg?event=push&branch=master\n   :target: https://github.com/neuralensemble/python-neo/actions?query=event%3apush+branch%3amaster\n   :alt: io test status (github actions)\n.. image:: https://coveralls.io/repos/neuralensemble/python-neo/badge.png\n   :target: https://coveralls.io/r/neuralensemble/python-neo\n   :alt: unit test coverage\n\nmore information\n----------------\n\n- home page: http://neuralensemble.org/neo\n- mailing list: https://groups.google.com/forum/?fromgroups#!forum/neuralensemble\n- documentation: http://neo.readthedocs.io/\n- bug reports: https://github.com/neuralensemble/python-neo/issues\n\nfor installation instructions, see doc/source/install.rst\n\nto cite neo in publications, see citation.txt\n\n:copyright: copyright 2010-2022 by the neo team, see doc/source/authors.rst.\n:license: 3-clause revised bsd license, see license.txt for details.\n\nfunding\n-------\n\ndevelopment of neo has been partially funded by the european union sixth framework program (fp6) under\ngrant agreement fetpi-015879 (facets), by the european union seventh framework program (fp7/2007\u00ad-2013)\nunder grant agreements no. 269921 (brainscales) and no. 604102 (hbp),\nand by the european union\u2019s horizon 2020 framework programme for\nresearch and innovation under the specific grant agreements no. 720270 (human brain project sga1),\nno. 785907 (human brain project sga2) and no. 945539 (human brain project sga3).\n\n.. _openelectrophy: https://github.com/openelectrophy/openelectrophy\n.. _elephant: http://neuralensemble.org/elephant\n.. _g-node: http://www.g-node.org/\n.. _neuroshare: http://neuroshare.org/\n.. _spykeviewer: https://spyke-viewer.readthedocs.org/en/latest/\n.. _nibabel: http://nipy.sourceforge.net/nibabel/\n.. _pynn: http://neuralensemble.org/pynn\n.. _quantities: http://pypi.python.org/pypi/quantities\n.. _`neuralensemble mailing list`: http://groups.google.com/group/neuralensemble\n.. _`issue tracker`: https://github.c\n.. _tridesclous: https://github.com/tridesclous/tridesclous\n.. _ephyviewer: https://github.com/neuralensemble/ephyviewer\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd 3-clause license",
  "name": "neo",
  "package_url": "https://pypi.org/project/neo/",
  "project_url": "https://pypi.org/project/neo/",
  "project_urls": {
    "documentation": "http://neo.readthedocs.io/",
    "download": "http://pypi.python.org/pypi/neo",
    "homepage": "https://neuralensemble.org/neo",
    "repository": "https://github.com/NeuralEnsemble/python-neo"
  },
  "release_url": "https://pypi.org/project/neo/0.12.0/",
  "requires_dist": [
    "packaging",
    "numpy (>=1.19.5)",
    "quantities (>=0.14.1)",
    "coverage ; extra == 'all'",
    "coveralls ; extra == 'all'",
    "h5py ; extra == 'all'",
    "igor ; extra == 'all'",
    "ipython ; extra == 'all'",
    "klusta ; extra == 'all'",
    "matplotlib ; extra == 'all'",
    "nixio (>=1.5.0) ; extra == 'all'",
    "pillow ; extra == 'all'",
    "probeinterface ; extra == 'all'",
    "pyedflib ; extra == 'all'",
    "pynwb ; extra == 'all'",
    "pytest ; extra == 'all'",
    "pytest-cov ; extra == 'all'",
    "scipy (>=1.0.0) ; extra == 'all'",
    "sonpy ; extra == 'all'",
    "tqdm ; extra == 'all'",
    "h5py ; extra == 'biocam'",
    "sonpy ; extra == 'ced'",
    "docutils (<0.18) ; extra == 'docs'",
    "pyedflib ; extra == 'edf'",
    "igor ; extra == 'igorproio'",
    "klusta ; extra == 'kwikio'",
    "h5py ; extra == 'maxwell'",
    "scipy (>=1.0.0) ; extra == 'neomatlabio'",
    "nixio (>=1.5.0) ; extra == 'nixio'",
    "pynwb ; extra == 'nwb'",
    "stfio ; extra == 'stimfitio'",
    "pytest ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "scipy (>=1.0.0) ; extra == 'test'",
    "pyedflib ; extra == 'test'",
    "h5py ; extra == 'test'",
    "igor ; extra == 'test'",
    "klusta ; extra == 'test'",
    "tqdm ; extra == 'test'",
    "nixio ; extra == 'test'",
    "matplotlib ; extra == 'test'",
    "ipython ; extra == 'test'",
    "coverage ; extra == 'test'",
    "coveralls ; extra == 'test'",
    "pillow ; extra == 'test'",
    "sonpy ; extra == 'test'",
    "pynwb ; extra == 'test'",
    "probeinterface ; extra == 'test'",
    "pillow ; extra == 'tiffio'"
  ],
  "requires_python": ">=3.8",
  "summary": "neo is a package for representing electrophysiology data in python, together with support for reading a wide range of neurophysiology file formats",
  "version": "0.12.0",
  "releases": [],
  "developers": [
    "neo_authors_and_contributors"
  ],
  "kwds": "neo python electrophysiology neurophysiology neuroshare",
  "license_kwds": "bsd 3-clause license",
  "libtype": "pypi",
  "id": "pypi_neo",
  "homepage": "",
  "release_count": 25,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_coveralls",
    "pypi_docutils",
    "pypi_h5py",
    "pypi_igor",
    "pypi_ipython",
    "pypi_klusta",
    "pypi_matplotlib",
    "pypi_nixio",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pillow",
    "pypi_probeinterface",
    "pypi_pyedflib",
    "pypi_pynwb",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_quantities",
    "pypi_scipy",
    "pypi_sonpy",
    "pypi_stfio",
    "pypi_tqdm"
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# eth-hash\n\n[![join the conversation on discord](https://img.shields.io/discord/809793915578089484?color=blue&label=chat&logo=discord&logocolor=white)](https://discord.gg/ghryrvpb84)\n[![build status](https://circleci.com/gh/ethereum/eth-hash.svg?style=shield)](https://circleci.com/gh/ethereum/eth-hash)\n[![pypi version](https://badge.fury.io/py/eth-hash.svg)](https://badge.fury.io/py/eth-hash)\n[![python versions](https://img.shields.io/pypi/pyversions/eth-hash.svg)](https://pypi.python.org/pypi/eth-hash)\n[![docs build](https://readthedocs.org/projects/eth-hash/badge/?version=latest)](https://eth-hash.readthedocs.io/en/latest/?badge=latest)\n\nthe ethereum hashing function, keccak256, sometimes (erroneously) called sha3\n\nnote: the similarly named [pyethash](https://github.com/ethereum/ethash)\nhas a completely different use: it generates proofs of work.\n\nthis is a low-level library, intended to be used internally by other ethereum tools.\nif you're looking for a convenient hashing tool, check out\n[`eth_utils.keccak()`](https://eth-utils.readthedocs.io/en/stable/utilities.html#keccak-bytes-int-bool-text-str-hexstr-str-bytes)\nwhich will be a little friendlier, and provide access to other helpful utilities.\n\nread more in the [documentation on readthedocs](https://eth-hash.readthedocs.io/). [view the change log](https://eth-hash.readthedocs.io/en/latest/release_notes.html).\n\n\n## quickstart\n\n```sh\npython -m pip install \"eth-hash[pycryptodome]\"\n```\n\n```py\n>>> from eth_hash.auto import keccak\n>>> keccak(b'')\nb\"\\xc5\\xd2f\\x01\\x86\\xf7#<\\x92~}\\xb2\\xdc\\xc7\\x03\\xc0\\xe5\\x00\\xb6s\\xca\\x82';{\\xfa\\xd8\\x04]\\x85\\xa4p\"\n```\n\nsee the [docs](http://eth-hash.readthedocs.io/en/latest/quickstart.html#quickstart)\nfor more about choosing and installing backends.\n\n## developer setup\n\nif you would like to hack on eth-hash, please check out the [snake charmers\ntactical manual](https://github.com/ethereum/snake-charmers-tactical-manual)\nfor information on how we do:\n\n- testing\n- pull requests\n- code style\n- documentation\n\n### development environment setup\n\nyou can set up your dev environment with:\n\n```sh\ngit clone git@github.com:ethereum/eth-hash.git\ncd eth-hash\npython -m virtualenv venv\n. venv/bin/activate\npython -m pip install -e \".[dev]\"\n```\n\n### release setup\n\nto release a new version:\n\n```sh\nmake release bump=$$version_part_to_bump$$\n```\n\n#### how to bumpversion\n\nthe version format for this repo is `{major}.{minor}.{patch}` for stable, and\n`{major}.{minor}.{patch}-{stage}.{devnum}` for unstable (`stage` can be alpha or beta).\n\nto issue the next version in line, specify which part to bump,\nlike `make release bump=minor` or `make release bump=devnum`. this is typically done from the\nmaster branch, except when releasing a beta (in which case the beta is released from master,\nand the previous stable branch is released from said branch).\n\nif you are in a beta version, `make release bump=stage` will switch to a stable.\n\nto issue an unstable version when the current version is stable, specify the\nnew version explicitly, like `make release bump=\"--new-version 4.0.0-alpha.1 devnum\"`\n",
  "docs_url": null,
  "keywords": "ethereum",
  "license": "mit",
  "name": "eth-hash",
  "package_url": "https://pypi.org/project/eth-hash/",
  "project_url": "https://pypi.org/project/eth-hash/",
  "project_urls": {
    "Homepage": "https://github.com/ethereum/eth-hash"
  },
  "release_url": "https://pypi.org/project/eth-hash/0.5.2/",
  "requires_dist": [
    "bumpversion (>=0.5.3) ; extra == 'dev'",
    "pytest-watch (>=4.1.0) ; extra == 'dev'",
    "tox (>=4.0.0) ; extra == 'dev'",
    "build (>=0.9.0) ; extra == 'dev'",
    "wheel ; extra == 'dev'",
    "twine ; extra == 'dev'",
    "ipython ; extra == 'dev'",
    "pytest (>=7.0.0) ; extra == 'dev'",
    "pytest-xdist (>=2.4.0) ; extra == 'dev'",
    "flake8 (==6.0.0) ; extra == 'dev'",
    "flake8-bugbear (==23.3.23) ; extra == 'dev'",
    "isort (>=5.10.1) ; extra == 'dev'",
    "mypy (==0.971) ; extra == 'dev'",
    "pydocstyle (>=6.0.0) ; extra == 'dev'",
    "black (>=23) ; extra == 'dev'",
    "sphinx (>=6.0.0) ; extra == 'dev'",
    "sphinx-rtd-theme (>=1.0.0) ; extra == 'dev'",
    "towncrier (<22,>=21) ; extra == 'dev'",
    "sphinx (>=6.0.0) ; extra == 'doc'",
    "sphinx-rtd-theme (>=1.0.0) ; extra == 'doc'",
    "towncrier (<22,>=21) ; extra == 'doc'",
    "flake8 (==6.0.0) ; extra == 'lint'",
    "flake8-bugbear (==23.3.23) ; extra == 'lint'",
    "isort (>=5.10.1) ; extra == 'lint'",
    "mypy (==0.971) ; extra == 'lint'",
    "pydocstyle (>=6.0.0) ; extra == 'lint'",
    "black (>=23) ; extra == 'lint'",
    "pycryptodome (<4,>=3.6.6) ; extra == 'pycryptodome'",
    "pysha3 (<2.0.0,>=1.0.0) ; (python_version < \"3.9\") and extra == 'pysha3'",
    "safe-pysha3 (>=1.0.0) ; (python_version >= \"3.9\") and extra == 'pysha3'",
    "pytest (>=7.0.0) ; extra == 'test'",
    "pytest-xdist (>=2.4.0) ; extra == 'test'"
  ],
  "requires_python": ">=3.7, <4",
  "summary": "eth-hash: the ethereum hashing function, keccak256, sometimes (erroneously) called sha3",
  "version": "0.5.2",
  "releases": [],
  "developers": [
    "snakecharmers@ethereum.org",
    "the_ethereum_foundation"
  ],
  "kwds": "eth_hash hash eth_utils ethash hashing",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_eth_hash",
  "homepage": "https://github.com/ethereum/eth-hash",
  "release_count": 17,
  "dependency_ids": [
    "pypi_black",
    "pypi_build",
    "pypi_bumpversion",
    "pypi_flake8",
    "pypi_flake8_bugbear",
    "pypi_ipython",
    "pypi_isort",
    "pypi_mypy",
    "pypi_pycryptodome",
    "pypi_pydocstyle",
    "pypi_pysha3",
    "pypi_pytest",
    "pypi_pytest_watch",
    "pypi_pytest_xdist",
    "pypi_safe_pysha3",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_towncrier",
    "pypi_tox",
    "pypi_twine",
    "pypi_wheel"
  ]
}
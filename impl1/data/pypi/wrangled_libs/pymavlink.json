{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: science/research",
    "license :: osi approved :: gnu lesser general public license v3 (lgplv3)",
    "operating system :: os independent",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering"
  ],
  "description": "[![build status](https://travis-ci.org/ardupilot/pymavlink.svg?branch=master)](https://travis-ci.org/ardupilot/pymavlink)\n# pymavlink\nthis is a python implementation of the mavlink protocol.\nit includes a source code generator (generator/mavgen.py) to create mavlink protocol implementations for other programming languages as well.\nalso contains tools for analyzing flight logs.\n\n# documentation\n\nplease see http://ardupilot.org/dev/docs/mavlink-commands.html for mavlink command reference.\n\nfor realtime discussion please see the pymavlink [gitter channel](https://gitter.im/ardupilot/pymavlink)\n\nexamples can be found [in the repository](examples/) or in the [ardusub book](https://www.ardusub.com/developers/pymavlink.html)\n\n\n# installation \n\npymavlink supports both python 2 and python 3.\n\nthe following instructions assume you are using python 3 and a debian-based (like ubuntu) installation.\n\n.. note::\n\n   pymavlink assumes the command \"python\" is in your path.  your distribution may provide a package such as \"python-is-python3\" to ensure that \"python\" is in your path.\n\n## dependencies\n\npymavlink has several dependencies :\n\n    - [future](http://python-future.org/) : for python 2 and python 3 interoperability\n    - [lxml](http://lxml.de/installation.html) : for checking and parsing xml file \n\noptional :\n\n    - numpy : for fft\n    - pytest : for tests\n\n### on linux\n\nlxml has some additional dependencies that can be installed with your package manager (here with `apt-get`) :\n\n.. note::\n\n   if you continue to use python 2 you may need to change package names here (e.g. python3-numpy => python-numpy)\n\n```bash\nsudo apt-get install libxml2-dev libxslt-dev\n```\n\noptional for fft scripts and tests:\n\n```bash\nsudo apt-get install python3-numpy python3-pytest\n```\n\nusing pip you can install the required dependencies for pymavlink :\n\n```bash\nsudo python -m pip install --upgrade future lxml\n```\n\n### on windows\n\nuse pip to install future as for linux.\nlxml can be installed with a windows installer from here : https://pypi.org/project/lxml\n\n\n## installation\n\n### for users\n\nit is recommended to install pymavlink from pypi with pip, that way dependencies should be auto installed by pip.\n\n```bash\nsudo python -m pip install --upgrade pymavlink\n```\n\n#### mavnative\n\nstarting from september 2022, mavnative, a c extension for parsing mavlink, was deprecated and removed. mavnative developpement was stalled for long time, it only supports mavlink1 and doesn't get any fix on the protocol.\n\n### for developers\n\nfrom the pymavlink directory, you can use :\n\n```bash\nsudo mdef=path_to_message_definitions python -m pip install . -v\n```\n\nsince pip installation is executed from /tmp, it is necessary to point to the directory containing message definitions with mdef. mdef should not be set to any particular message version directory but the parent folder instead. if you have cloned from mavlink/mavlink then this is ```/mavlink/message_definitions``` . using pip should auto install dependencies and allow you to keep them up-to-date. \n\nor:\n\n```bash\nsudo python setup.py install\n```\n\n### ardupilot custom modes\n\nby default, `pymavlink` will map the ardupilot mode names to mode numbers per the definitions in the [ardupilotmega.xml](https://mavlink.io/en/messages/ardupilotmega.html#plane_mode) file. however, during development, it can be useful to add to or update the default mode mappings.\n\nto do this:\n  - create a folder named `.pymavlink` in your home directory (i.e. `$home` on linux, `$userprofile` on windows); and\n  - add a json file called `custom_mode_map.json` to this new `.pymavlink` folder.\n\nthe json file is a dictionary that maps vehicle [`mav_type`](https://mavlink.io/en/messages/minimal.html#mav_type) value to a dictionary of mode numbers to mode names. an example that duplicates the existing mapping for `mav_type_fixed_wing` (`enum` value of `1`) vehicles is as follows:\n```json\n{\n    \"1\": {\n        \"0\":  \"manual\",\n        \"1\":  \"circle\",\n        \"2\":  \"stabilize\",\n        \"3\":  \"training\",\n        \"4\":  \"acro\",\n        \"5\":  \"fbwa\",\n        \"6\":  \"fbwb\",\n        \"7\":  \"cruise\",\n        \"8\":  \"autotune\",\n        \"10\": \"auto\",\n        \"11\": \"rtl\",\n        \"12\": \"loiter\",\n        \"13\": \"takeoff\",\n        \"14\": \"avoid_adsb\",\n        \"15\": \"guided\",\n        \"16\": \"initialising\",\n        \"17\": \"qstabilize\",\n        \"18\": \"qhover\",\n        \"19\": \"qloiter\",\n        \"20\": \"qland\",\n        \"21\": \"qrtl\",\n        \"22\": \"qautotune\",\n        \"23\": \"qacro\",\n        \"24\": \"thermal\"\n    }\n}\n```\n\nthis `custom_mode_map.json` file can be used to:\n  - change the display name of an existing mode (e.g. change `\"takeoff\"` to `\"launch\"`);\n  - add a new mode (e.g. add `\"25\": \"new_mode\"`); and\n  - add a mapping for an unsupported vehicle type (e.g. add a mapping for `mav_type_airship` (`enum` value of `7`) vehicles).\n\nnotes:\n  - whilst the `mav_type` and mode numbers are integers, they need to be defined as `string`s in the json file, as raw integers can't be used as dictionary keys in json.\n  - this feature _updates_ the default definitions. you can use it to change the name-to-number mapping for a mode, but you completely can't remove an existing mapping.\n\n\n# license\n---------\n\npymavlink is released under the gnu lesser general public license v3 or later.\n\nthe source code generated by generator/mavgen.py is available under the permissive mit license.\n",
  "docs_url": null,
  "keywords": "",
  "license": "lgplv3",
  "name": "pymavlink",
  "package_url": "https://pypi.org/project/pymavlink/",
  "project_url": "https://pypi.org/project/pymavlink/",
  "project_urls": {
    "Homepage": "https://github.com/ArduPilot/pymavlink/"
  },
  "release_url": "https://pypi.org/project/pymavlink/2.4.41/",
  "requires_dist": [
    "future",
    "lxml"
  ],
  "requires_python": "",
  "summary": "python mavlink code",
  "version": "2.4.41",
  "releases": [],
  "developers": [],
  "kwds": "mavlink pymavlink mavlink1 pytest mav_type",
  "license_kwds": "lgplv3",
  "libtype": "pypi",
  "id": "pypi_pymavlink",
  "homepage": "https://github.com/ardupilot/pymavlink/",
  "release_count": 74,
  "dependency_ids": [
    "pypi_future",
    "pypi_lxml"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: sql",
    "topic :: software development :: quality assurance",
    "topic :: utilities"
  ],
  "description": "![sqlfluff](https://raw.githubusercontent.com/sqlfluff/sqlfluff/main/images/sqlfluff-wide.png)\n\n# the sql linter for humans\n\n[![pypi version](https://img.shields.io/pypi/v/sqlfluff.svg?style=flat-square&logo=pypi)](https://pypi.org/project/sqlfluff/)\n[![pypi license](https://img.shields.io/pypi/l/sqlfluff.svg?style=flat-square)](https://pypi.org/project/sqlfluff/)\n[![pypi python versions](https://img.shields.io/pypi/pyversions/sqlfluff.svg?style=flat-square)](https://pypi.org/project/sqlfluff/)\n[![pypi status](https://img.shields.io/pypi/status/sqlfluff.svg?style=flat-square)](https://pypi.org/project/sqlfluff/)\n[![pypi downloads](https://img.shields.io/pypi/dm/sqlfluff?style=flat-square)](https://pypi.org/project/sqlfluff/)\n\n[![coveralls](https://img.shields.io/coverallscoverage/github/sqlfluff/sqlfluff?logo=coveralls&style=flat-square)](https://coveralls.io/github/sqlfluff/sqlfluff?branch=main)\n[![github workflow status](https://img.shields.io/github/actions/workflow/status/sqlfluff/sqlfluff/.github/workflows/ci-tests.yml?logo=github&style=flat-square)](https://github.com/sqlfluff/sqlfluff/actions/workflows/ci-tests.yml?query=branch%3amain)\n[![readthedocs](https://img.shields.io/readthedocs/sqlfluff?style=flat-square&logo=read%20the%20docs)](https://sqlfluff.readthedocs.io)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/psf/black)\n[![docker pulls](https://img.shields.io/docker/pulls/sqlfluff/sqlfluff?logo=docker&style=flat-square)](https://hub.docker.com/r/sqlfluff/sqlfluff)\n\n**sqlfluff** is a dialect-flexible and configurable sql linter. designed\nwith elt applications in mind, **sqlfluff** also works with jinja templating\nand dbt. **sqlfluff** will auto-fix most linting errors, allowing you to focus\nyour time on what matters.\n\n## dialects supported\n\nalthough sql is reasonably consistent in its implementations, there are several\ndifferent dialects available with variations of syntax and grammar. **sqlfluff**\ncurrently supports the following sql dialects (though perhaps not in full):\n\n- ansi sql - this is the base version and on occasion may not strictly follow\n  the ansi/iso sql definition\n- [athena](https://aws.amazon.com/athena/)\n- [bigquery](https://cloud.google.com/bigquery/)\n- [clickhouse](https://clickhouse.com/)\n- [databricks](https://databricks.com/) (note: this extends the `sparksql` dialect with\n  [unity catalog](https://docs.databricks.com/data-governance/unity-catalog/index.html) syntax).\n- [db2](https://www.ibm.com/analytics/db2)\n- [duckdb](https://duckdb.org/)\n- [exasol](https://www.exasol.com/)\n- [greenplum](https://greenplum.org/)\n- [hive](https://hive.apache.org/)\n- [materialize](https://materialize.com/)\n- [mysql](https://www.mysql.com/)\n- [oracle](https://docs.oracle.com/en/database/oracle/oracle-database/21/sqlrf/index.html)\n- [postgresql](https://www.postgresql.org/) (aka postgres)\n- [redshift](https://docs.aws.amazon.com/redshift/index.html)\n- [snowflake](https://www.snowflake.com/)\n- [soql](https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql.htm)\n- [sparksql](https://spark.apache.org/docs/latest/)\n- [sqlite](https://www.sqlite.org/)\n- [teradata](https://www.teradata.com/)\n- [transact-sql](https://docs.microsoft.com/en-us/sql/t-sql/language-reference) (aka t-sql)\n\nwe aim to make it easy to expand on the support of these dialects and also\nadd other, currently unsupported, dialects. please [raise issues](https://github.com/sqlfluff/sqlfluff/issues)\n(or upvote any existing issues) to let us know of demand for missing support.\n\npull requests from those that know the missing syntax or dialects are especially\nwelcomed and are the question way for you to get support added. we are happy\nto work with any potential contributors on this to help them add this support.\nplease raise an issue first for any large feature change to ensure it is a good\nfit for this project before spending time on this work.\n\n## templates supported\n\nsql itself does not lend itself well to [modularity](https://docs.getdbt.com/docs/viewpoint#section-modularity),\nso to introduce some flexibility and reusability it is often [templated](https://en.wikipedia.org/wiki/template_processor)\nas discussed more in [our modularity documentation](https://docs.sqlfluff.com/en/stable/realworld.html#modularity).\n\n**sqlfluff** supports the following templates:\n- [jinja](https://jinja.palletsprojects.com/) (aka jinja2)\n- [dbt](https://www.getdbt.com/)\n\nagain, please raise issues if you wish to support more templating languages/syntaxes.\n\n## vs code extension\n\nwe also have a vs code extension:\n\n- [github repository](https://github.com/sqlfluff/vscode-sqlfluff)\n- [extension in vs code marketplace](https://marketplace.visualstudio.com/items?itemname=dorzey.vscode-sqlfluff)\n\n# getting started\n\nto get started, install the package and run `sqlfluff lint` or `sqlfluff fix`.\n\n```shell\n$ pip install sqlfluff\n$ echo \"  select a  +  b from tbl;  \" > test.sql\n$ sqlfluff lint test.sql --dialect ansi\n== [test.sql] fail\nl:   1 | p:   1 | lt01 | expected only single space before 'select' keyword.\n                       | found '  '. [layout.spacing]\nl:   1 | p:   1 | lt02 | first line should not be indented.\n                       | [layout.indent]\nl:   1 | p:   1 | lt13 | files must not begin with newlines or whitespace.\n                       | [layout.start_of_file]\nl:   1 | p:  11 | lt01 | expected only single space before binary operator '+'.\n                       | found '  '. [layout.spacing]\nl:   1 | p:  14 | lt01 | expected only single space before naked identifier.\n                       | found '  '. [layout.spacing]\nl:   1 | p:  27 | lt01 | unnecessary trailing whitespace at end of file.\n                       | [layout.spacing]\nl:   1 | p:  27 | lt12 | files must end with a single trailing newline.\n                       | [layout.end_of_file]\nall finished \ud83d\udcdc \ud83c\udf89!\n```\n\nalternatively, you can use the [**official sqlfluff docker image**](https://hub.docker.com/r/sqlfluff/sqlfluff)\nor have a play using [**sqlfluff online**](https://online.sqlfluff.com/).\n\nfor full [cli usage](https://docs.sqlfluff.com/en/stable/cli.html) and\n[rules reference](https://docs.sqlfluff.com/en/stable/rules.html), see\n[the sqlfluff docs](https://docs.sqlfluff.com/en/stable/).\n\n# documentation\n\nfor full documentation visit [docs.sqlfluff.com](https://docs.sqlfluff.com/en/stable/).\nthis documentation is generated from this repository so please raise\n[issues](https://github.com/sqlfluff/sqlfluff/issues) or pull requests\nfor any additions, corrections, or clarifications.\n\n# releases\n\n**sqlfluff** adheres to [semantic versioning](https://semver.org/spec/v2.0.0.html),\nso breaking changes should be restricted to major versions releases. some\nelements (such as the python api) are in a less stable state and may see more\nsignificant changes more often. for details on breaking changes and how\nto migrate between versions, see our\n[release notes](https://docs.sqlfluff.com/en/latest/releasenotes.html). see the\n[changelog](changelog.md) for more details. if you would like to join in, please\nconsider [contributing](contributing.md).\n\nnew releases are made monthly. for more information, visit\n[releases](https://github.com/sqlfluff/sqlfluff/releases).\n\n# sqlfluff on slack\n\nwe have a fast-growing community\n[on slack](https://join.slack.com/t/sqlfluff/shared_invite/zt-o1f4x0e8-pzzarailqmkj_6zwd16w0g),\ncome and join us!\n\n# sqlfluff on twitter\n\nfollow us [on twitter @sqlfluff](https://twitter.com/sqlfluff) for announcements\nand other related posts.\n\n# contributing\n\nwe are grateful to all our [contributors](https://github.com/sqlfluff/sqlfluff/graphs/contributors).\nthere is a lot to do in this project, and we are just getting started.\n\nif you want to understand more about the architecture of **sqlfluff**, you can\nfind [more here](https://docs.sqlfluff.com/en/latest/internals.html#architecture).\n\nif you would like to contribute, check out the\n[open issues on github](https://github.com/sqlfluff/sqlfluff/issues). you can also see\nthe guide to [contributing](contributing.md).\n\n# sponsors\n\n<img src=\"images/datacoves.png\" alt=\"datacoves\" width=\"150\"/><br>\nthe turnkey analytics stack, find out more at [datacoves.com](https://datacoves.com/).\n",
  "docs_url": null,
  "keywords": "sqlfluff,sql,linter,formatter,athena,bigquery,clickhouse,databricks,db2,duckdb,exasol,greenplum,hive,materialize,mysql,postgres,redshift,snowflake,soql,sparksql,sqlite,teradata,trino,tsql,dbt",
  "license": "mit license",
  "name": "sqlfluff",
  "package_url": "https://pypi.org/project/sqlfluff/",
  "project_url": "https://pypi.org/project/sqlfluff/",
  "project_urls": {
    "Changes": "https://github.com/sqlfluff/sqlfluff/blob/main/CHANGELOG.md",
    "Chat": "https://github.com/sqlfluff/sqlfluff#sqlfluff-on-slack",
    "Documentation": "https://docs.sqlfluff.com",
    "Homepage": "https://www.sqlfluff.com",
    "Issue Tracker": "https://github.com/sqlfluff/sqlfluff/issues",
    "Source": "https://github.com/sqlfluff/sqlfluff",
    "Twitter": "https://twitter.com/SQLFluff"
  },
  "release_url": "https://pypi.org/project/sqlfluff/2.3.5/",
  "requires_dist": [
    "appdirs",
    "chardet",
    "click",
    "colorama >=0.3",
    "diff-cover >=2.5.0",
    "Jinja2",
    "pathspec",
    "pytest",
    "pyyaml >=5.1",
    "regex",
    "tblib",
    "tqdm",
    "typing-extensions",
    "toml ; python_version < \"3.11\"",
    "backports.cached-property ; python_version < \"3.8\"",
    "importlib-metadata >=1.0.0 ; python_version < \"3.8\"",
    "importlib-resources ; python_version < \"3.9\""
  ],
  "requires_python": ">=3.7",
  "summary": "the sql linter for humans",
  "version": "2.3.5",
  "releases": [],
  "developers": [
    "alan@designingoverload.com",
    "alan_cruickshank"
  ],
  "kwds": "sqlfluff sqlrf sparksql sqlite databricks",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_sqlfluff",
  "homepage": "https://github.com/sqlfluff/sqlfluff",
  "release_count": 120,
  "dependency_ids": [
    "pypi_appdirs",
    "pypi_backports.cached_property",
    "pypi_chardet",
    "pypi_click",
    "pypi_colorama",
    "pypi_diff_cover",
    "pypi_importlib_metadata",
    "pypi_importlib_resources",
    "pypi_jinja2",
    "pypi_pathspec",
    "pypi_pytest",
    "pypi_pyyaml",
    "pypi_regex",
    "pypi_tblib",
    "pypi_toml",
    "pypi_tqdm",
    "pypi_typing_extensions"
  ]
}
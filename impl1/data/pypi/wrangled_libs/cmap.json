{
  "classifiers": [
    "development status :: 3 - alpha",
    "license :: osi approved :: bsd license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# cmap\n\n[![license](https://img.shields.io/pypi/l/cmap.svg?color=green)](https://github.com/tlambert03/cmap/raw/main/license)\n[![pypi](https://img.shields.io/pypi/v/cmap.svg?color=green)](https://pypi.org/project/cmap)\n![conda](https://img.shields.io/conda/v/conda-forge/cmap)\n[![python version](https://img.shields.io/pypi/pyversions/cmap.svg?color=green)](https://python.org)\n[![ci](https://github.com/tlambert03/cmap/actions/workflows/ci.yml/badge.svg)](https://github.com/tlambert03/cmap/actions/workflows/ci.yml)\n[![codecov](https://codecov.io/gh/tlambert03/cmap/branch/main/graph/badge.svg)](https://codecov.io/gh/tlambert03/cmap)\n[![documentation status](https://readthedocs.org/projects/cmap-docs/badge/?version=latest)](https://cmap-docs.readthedocs.io/en/latest/?badge=latest)\n\nscientific colormaps for python, with no dependencies beyond numpy.\n\nwith `cmap`, you can use any of the colormaps from\n[matplotlib](https://matplotlib.org/stable/tutorials/colors/colormaps.html),\n[cmocean](https://matplotlib.org/cmocean/),\n[colorbrewer](https://colorbrewer2.org/),\n[crameri](https://www.fabiocrameri.ch/colourmaps/),\n[seaborn](https://seaborn.pydata.org/tutorial/color_palettes.html), and a host\nof other collections in your python code, without having to install matplotlib\nor any other dependencies beyond numpy.\n\n:book: [see the complete\ncatalog](https://cmap-docs.readthedocs.io/en/latest/catalog/)\n\nthere are a number of python libraries that provide or require colormaps or\nbasic color support, but they all either depend on matplotlib, provide a\nspecialized set of colormaps intended to extend those provided by matplotlib, or\nroll their own colormap solution that vendors/duplicates other libraries.\n\n`cmap` is a lightweight, library that provides a large collection of colormaps\nwith no dependencies beyond numpy.  it provides exports to a number of known\nthird-party colormap objects, allowing it to be used across a wide range of\npython visualization libraries.  the intention is to provide a library that can\nbe used by any python library that needs colormaps, without forcing the user to\ninstall matplotlib (while still being compatible with matplotlib and other\nlibraries that use matplotlib colormaps).\n\n`cmap` is strictly typed and fully tested, with a focus on good developer\nexperience.\n\n## install\n\n```\npip install cmap\n```\n\n```\nconda install -c conda-forge cmap\n```\n\n## usage\n\nsee [documentation](https://cmap-docs.readthedocs.io/) for full details.\n\n### [`cmap.color`](https://cmap-docs.readthedocs.io/en/latest/colors/)\n\nthe `cmap.color` object is a simple wrapper around a tuple of rgba scalars, with\na few convenience methods for converting to other color objects.\n\n```python\nfrom cmap import color\n\nred = color(\"red\")  # or a variety of other \"color like\" inputs\n```\n\n### [`cmap.colormap`](https://cmap-docs.readthedocs.io/en/latest/colormaps/)\n\nthe `cmap.colormap` object is a callable that can map a scalar value (or numpy\narray of values) to an rgba color (or a numpy array of rgba colors).  api is\nintended to mimic the behavior of a\n[`matplotlib.colors.colormap`](https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.colormap.html#matplotlib.colors.colormap)\nobject (without requiring matplotlib)\n\n```python\nin [1]: import cmap\n\n# or a variety of other \"colormap like\" inputs\nin [2]: cmap1 = cmap.colormap([\"red\", \"green\", \"blue\"])\n\nin [3]: cmap1(np.linspace(0,1,5))\nout[3]:\narray([[1.        , 0.        , 0.        , 1.        ],\n       [0.50393701, 0.24900417, 0.        , 1.        ],\n       [0.        , 0.50196078, 0.        , 1.        ],\n       [0.        , 0.24900417, 0.50393701, 1.        ],\n       [0.        , 0.        , 1.        , 1.        ]])\n```\n\nnote that the input array must be normalized from 0-1, so if you're applying a colormap\nto an integer array (like an image) you must apply any contrast limits and rescale to\n0-1 before passing it to a `colormap`.\n\n## third party library support\n\nthe `cmap.colormap` object has convenience methods that allow it to be used with a number of third-party colormap objects (like\n`matplotlib`, `vispy`, `napari`, `plotly`, etc...).\n\nsee [documentation](https://cmap-docs.readthedocs.io/en/latest/colormaps/#usage-with-external-visualization-libraries)\nfor details.\n\nif you would like to see support added for a particular library, please open an issue or pr.\n\n## alternatives\n\nother libraries providing colormaps:\n\n\n- [matplotlib](https://matplotlib.org/stable/tutorials/colors/colormaps.html)\n- [seaborn](https://seaborn.pydata.org/tutorial/color_palettes.html)  (subclasses matplotlib)\n- [proplot](https://proplot.readthedocs.io/en/latest/colormaps.html)  (subclasses matplotlib)\n- [palettable](https://jiffyclub.github.io/palettable/) (mostly data, import doesn't depend on matplotlib, but usage largely does)\n- [cmocean](https://matplotlib.org/cmocean/) (mostly data, outputs matplotlib colormaps)\n- [colorcet](https://colorcet.holoviz.org/) (mostly data, usage requires either matplotlib or bokeh)\n- [cmasher](https://cmasher.readthedocs.io/) (requires matplotlib)\n- [cmyt](https://github.com/yt-project/cmyt) (requires matplotlib)\n- [cmcrameri](https://github.com/callumrollo/cmcrameri) (requires matplotlib, wraps <https://www.fabiocrameri.ch/colourmaps/>)\n- [distinctipy](https://github.com/alan-turing-institute/distinctipy)  (generates distinct color sets, only requires numpy)\n- [farrow & ball matplotlib](https://github.com/vork/farrowandball) (requires matplotlib)\n- [mplcyberpunk](https://github.com/dhaitz/mplcyberpunk) (requires matplotlib)\n\n## references and further reading\n\n- [choosing colormaps in matplotlib](https://matplotlib.org/stable/tutorials/colors/colormaps.html)\n- [a better default colormap for matplotlib | scipy 2015 | nathaniel smith and ste\u0301fan van der walt](https://www.youtube.com/watch?v=xaoljerj3lu)\n- blog post for above video: <https://bids.github.io/colormap/>\n- [origins of colormaps, cleve moler, february 2, 2015](https://blogs.mathworks.com/cleve/2015/02/02/origins-of-colormaps/)\n- [documenting the matplotlib colormaps, @endolith](https://gist.github.com/endolith/2719900)\n- [color map advice for scientific visualization](https://www.kennethmoreland.com/color-advice/)\n- <https://colorcet.com/>, peter kovesi\n- [kovesi: good colour maps: how to design them.](https://arxiv.org/abs/1509.03700)\n- https://www.fabiocrameri.ch/colourmaps/\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd 3-clause license",
  "name": "cmap",
  "package_url": "https://pypi.org/project/cmap/",
  "project_url": "https://pypi.org/project/cmap/",
  "project_urls": {
    "Bug Tracker": "https://github.com/tlambert03/cmap/issues",
    "Documentation": "https://cmap-docs.rtfd.io/",
    "Homepage": "https://github.com/tlambert03/cmap",
    "Repository": "https://github.com/tlambert03/cmap"
  },
  "release_url": "https://pypi.org/project/cmap/0.1.3/",
  "requires_dist": [
    "numpy",
    "black; extra == 'dev'",
    "ipython; extra == 'dev'",
    "mypy; extra == 'dev'",
    "pdbpp; extra == 'dev'",
    "pre-commit; extra == 'dev'",
    "pytest; extra == 'dev'",
    "pytest-cov; extra == 'dev'",
    "rich; extra == 'dev'",
    "ruff; extra == 'dev'",
    "colorcet; extra == 'docs'",
    "colorspacious; extra == 'docs'",
    "imageio; extra == 'docs'",
    "mkdocs; extra == 'docs'",
    "mkdocs-gen-files; extra == 'docs'",
    "mkdocs-literate-nav; extra == 'docs'",
    "mkdocs-material; extra == 'docs'",
    "mkdocs-minify-plugin; extra == 'docs'",
    "mkdocstrings-python; extra == 'docs'",
    "matplotlib; extra == 'test'",
    "numba; python_version < '3.11' and extra == 'test'",
    "pytest-cov; extra == 'test'",
    "pytest>=6.0; extra == 'test'",
    "bokeh; extra == 'thirdparty'",
    "colour; extra == 'thirdparty'",
    "napari; extra == 'thirdparty'",
    "plotly; extra == 'thirdparty'",
    "pydantic; extra == 'thirdparty'",
    "pygfx; extra == 'thirdparty'",
    "pytest-qt; extra == 'thirdparty'",
    "rich; extra == 'thirdparty'",
    "viscm; extra == 'thirdparty'",
    "vispy; extra == 'thirdparty'"
  ],
  "requires_python": ">=3.8",
  "summary": "scientific colormaps for python, without dependencies",
  "version": "0.1.3",
  "releases": [],
  "developers": [
    "talley.lambert@gmail.com"
  ],
  "kwds": "cmap cmap1 cmyt shields conda",
  "license_kwds": "bsd 3-clause license",
  "libtype": "pypi",
  "id": "pypi_cmap",
  "homepage": "",
  "release_count": 8,
  "dependency_ids": [
    "pypi_black",
    "pypi_bokeh",
    "pypi_colorcet",
    "pypi_colorspacious",
    "pypi_colour",
    "pypi_imageio",
    "pypi_ipython",
    "pypi_matplotlib",
    "pypi_mkdocs",
    "pypi_mkdocs_gen_files",
    "pypi_mkdocs_literate_nav",
    "pypi_mkdocs_material",
    "pypi_mkdocs_minify_plugin",
    "pypi_mkdocstrings_python",
    "pypi_mypy",
    "pypi_napari",
    "pypi_numba",
    "pypi_numpy",
    "pypi_pdbpp",
    "pypi_plotly",
    "pypi_pre_commit",
    "pypi_pydantic",
    "pypi_pygfx",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_qt",
    "pypi_rich",
    "pypi_ruff",
    "pypi_viscm",
    "pypi_vispy"
  ]
}
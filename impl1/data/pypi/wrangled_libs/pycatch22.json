{
  "classifiers": [
    "license :: osi approved :: gnu general public license v3 or later (gplv3+)",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# _pycatch22_ - canonical time-series characteristics in python\n\n<img src=\"img/catch22_logo_square.png\" width=\"250\" height=\"250\"/>\n\n## about\n\n[_catch22_](https://github.com/dynamicsandneuralsystems/catch22) is a collection of 22 time-series features coded in c that can be run from python, as well as [r](https://github.com/hendersontrent/rcatch22), [matlab](https://github.com/dynamicsandneuralsystems/catch22), and [julia](https://github.com/brendanjohnharris/catch22.jl).\n\nthis package provides a python implementation as the module _pycatch22_, licensed under the [gnu gpl v3 license](http://www.gnu.org/licenses/gpl-3.0.html) (or later).\n\n### what do the features do?\n\nthis [gitbooks website](https://feature-based-time-series-analys.gitbook.io/catch22-features/) is dedicated to describing the features.\nfor their implementation in code, see the [main _catch22_ repository](https://github.com/dynamicsandneuralsystems/catch22).\nthere is also information in the associated paper [&#x1f4d7; lubba et al. (2019).](https://doi.org/10.1007/s10618-019-00647-x).\n\n### acknowledgement :+1:\n\nif you use this software, please read and cite this open-access article:\n\n- &#x1f4d7; lubba et al. [_catch22_: canonical time-series characteristics](https://doi.org/10.1007/s10618-019-00647-x), _data min knowl disc_ __33__, 1821 (2019).\n\n## installation\n\nusing `pip` for [`pycatch22`](https://pypi.org/project/pycatch22/):\n\n```\npip install pycatch22\n```\n\nif this doesn't work, make sure you are using the latest `setuptools`: `pip install setuptools --upgrade`.\n\nif you come across errors with version resolution, you should try something like: `pip install pycatch22==0.4.2 --use-deprecated=legacy-resolver`.\n\nit is also a [package on anaconda](https://anaconda.org/conda-forge/pycatch22) thanks to [@rpanai](https://github.com/rpanai), which you can install via `conda`:\n\n```\nconda install -c conda-forge pycatch22\n```\n\nor `mamba`:\n\n```\nmamba install -c conda-forge pycatch22\n```\n\n[a manual install (bottom of this page) is a last resort.]\n\n## usage\n\neach feature function can be accessed individually and takes arrays as tuple or lists (not `numpy` arrays).\nfor example, for loaded data `tsdata` in python:\n\n```python3\nimport pycatch22\ntsdata = [1,2,4,3] # (or more interesting data!)\npycatch22.co_f1ecac(tsdata)\n```\n\nall features are bundled in the method `catch22_all`, which also accepts `numpy` arrays and gives back a dictionary containing the entries `catch22_all['names']` for feature names and `catch22_all['values']` for feature outputs.\n\nusage (computing 22 features: _catch22_):\n\n```python3\npycatch22.catch22_all(tsdata)\n```\n\nusage (computing 24 features: _catch24_ = _catch22_ + mean + standard deviation):\n\n```python3\npycatch22.catch22_all(tsdata,catch24=true)\n```\n\nwe also include a 'short name' for each feature for easier reference (as outlined in the gitbook [feature overview table](https://app.gitbook.com/o/-mfehzqacwnssrdidug8/s/-mfhfy4lvzoz3ipaa3wm/feature-overview-table)).\nthese short names can be included in the output from `catch22_all()` by setting `short_names=true` as follows:\n\n```python3\npycatch22.catch22_all(tsdata,catch24=true,short_names=true)\n```\n\n### template analysis script\n\nthanks to [@jmoo2880](https://github.com/jmoo2880) for putting together a [demonstration notebook](https://github.com/jmoo2880/c22-usage-examples/) for using pycatch22 to extract features from a time-series dataset.\n\n### usage notes\n\n- when presenting results using _catch22_, you must identify the version used to allow clear reproduction of your results. for example, `co_f1ecac` was altered from an integer-valued output to a linearly interpolated real-valued output from v0.3.\n- __important note:__ _catch22_ features only evaluate _dynamical_ properties of time series and do not respond to basic differences in the location (e.g., mean) or spread (e.g., variance).\n  - from _catch22_ v0.3, if the location and spread of the raw time-series distribution may be important for your application, we suggest applying the function argument `catch24 = true` to your call to the _catch22_ function in the language of your choice.\n  this will result in 24 features being calculated: the _catch22_ features in addition to mean and standard deviation.\n\n### manual install\n\nif you find issues with the `pip` install, you can also install using `setuptools`:\n\n```\npython3 setup.py build\npython3 setup.py install\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "gnu general public license v3 (gplv3)",
  "name": "pycatch22",
  "package_url": "https://pypi.org/project/pycatch22/",
  "project_url": "https://pypi.org/project/pycatch22/",
  "project_urls": {
    "GitHub Repository (pycatch22)": "https://github.com/DynamicsAndNeuralSystems/pycatch22",
    "Mother Repository (catch22)": "https://github.com/DynamicsAndNeuralSystems/catch22"
  },
  "release_url": "https://pypi.org/project/pycatch22/0.4.4/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "22 canonical time-series features",
  "version": "0.4.4",
  "releases": [],
  "developers": [
    "ben.fulcher@sydney.edu.au",
    "ben_d_fulcher",
    "carl.lubba@gmx.de",
    "carl_h_lubba"
  ],
  "kwds": "pycatch22 _pycatch22_ python3 python catch24",
  "license_kwds": "gnu general public license v3 (gplv3)",
  "libtype": "pypi",
  "id": "pypi_pycatch22",
  "homepage": "",
  "release_count": 5,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: text processing",
    "topic :: utilities"
  ],
  "description": "# demoji\n\naccurately find or remove [emojis](https://en.wikipedia.org/wiki/emoji) from a blob of text using\ndata from the unicode consortium's [emoji code repository](https://unicode.org/public/emoji/).\n\n[![license](https://img.shields.io/github/license/bsolomon1124/demoji.svg)](https://github.com/bsolomon1124/demoji/blob/master/license)\n[![pypi](https://img.shields.io/pypi/v/demoji.svg)](https://pypi.org/project/demoji/)\n[![status](https://img.shields.io/pypi/status/demoji.svg)](https://pypi.org/project/demoji/)\n[![python](https://img.shields.io/pypi/pyversions/demoji.svg)](https://pypi.org/project/demoji)\n\n-------\n\n## major changes in version 1.x\n\nversion 1.x of `demoji` now bundles unicode data in the package at install time rather than requiring\na download of the codes from unicode.org at runtime. please see the [changelog.md](changelog.md)\nfor detail and be familiar with the changes before updating from 0.x to 1.x.\n\nto report any regressions, please [open a github issue](https://github.com/bsolomon1124/demoji/issues/new?assignees=&labels=&template=bug_report.md&title=).\n\n## basic usage\n\n`demoji` exports several text-related functions for find-and-replace functionality with emojis:\n\n```python\n>>> tweet = \"\"\"\\\n... #startspreadingthenews yankees win great start by \ud83c\udf85\ud83c\udffe going 5strong innings with 5k\u2019s\ud83d\udd25 \ud83d\udc02\n... solo homerun \ud83c\udf0b\ud83c\udf0b with 2 solo homeruns and\ud83d\udc79 3run homerun\u2026 \ud83e\udd21 \ud83d\udea3\ud83c\udffc \ud83d\udc68\ud83c\udffd\u200d\u2696\ufe0f with rbi\u2019s \u2026 \ud83d\udd25\ud83d\udd25\n... \ud83c\uddf2\ud83c\uddfd and \ud83c\uddf3\ud83c\uddee to close the game\ud83d\udd25\ud83d\udd25!!!\u2026.\n... what a game!!..\n... \"\"\"\n>>> demoji.findall(tweet)\n{\n    \"\ud83d\udd25\": \"fire\",\n    \"\ud83c\udf0b\": \"volcano\",\n    \"\ud83d\udc68\ud83c\udffd\\u200d\u2696\ufe0f\": \"man judge: medium skin tone\",\n    \"\ud83c\udf85\ud83c\udffe\": \"santa claus: medium-dark skin tone\",\n    \"\ud83c\uddf2\ud83c\uddfd\": \"flag: mexico\",\n    \"\ud83d\udc79\": \"ogre\",\n    \"\ud83e\udd21\": \"clown face\",\n    \"\ud83c\uddf3\ud83c\uddee\": \"flag: nicaragua\",\n    \"\ud83d\udea3\ud83c\udffc\": \"person rowing boat: medium-light skin tone\",\n    \"\ud83d\udc02\": \"ox\",\n}\n```\n\nsee [below](#reference) for function api.\n\n## command-line use\n\nyou can use `demoji` or `python -m demoji` to replace emojis\nin file(s) or stdin with their `:code:` equivalents:\n\n```bash\n$ cat out.txt\nall done! \u2728 \ud83c\udf70 \u2728\n$ demoji out.txt\nall done! :sparkles: :shortcake: :sparkles:\n\n$ echo 'all done! \u2728 \ud83c\udf70 \u2728' | demoji\nall done! :sparkles: :shortcake: :sparkles:\n\n$ demoji -\nwe didnt start the \ud83d\udd25\nwe didnt start the :fire:\n```\n\n## reference\n\n```python\nfindall(string: str) -> dict[str, str]\n```\n\nfind emojis within `string`.  return a mapping of `{emoji: description}`.\n\n```python\nfindall_list(string: str, desc: bool = true) -> list[str]\n```\n\nfind emojis within `string`.  return a list (with possible duplicates).\n\nif `desc` is true, the list contains description codes.  if `desc` is false, the list contains emojis.\n\n```python\nreplace(string: str, repl: str = \"\") -> str\n```\n\nreplace emojis in `string` with `repl`.\n\n```python\nreplace_with_desc(string: str, sep: str = \":\") -> str\n```\n\nreplace emojis in `string` with their description codes.  the codes are surrounded by `sep`.\n\n```python\nlast_downloaded_timestamp() -> datetime.datetime\n```\n\nshow the timestamp of last download for the emoji data bundled with the package.\n\n## footnote: emoji sequences\n\nnumerous emojis that look like single unicode characters are actually multi-character sequences.  examples:\n\n- the keycap 2\ufe0f\u20e3 is actually 3 characters, u+0032 (the ascii digit 2), u+fe0f (variation selector), and u+20e3 (combining enclosing keycap).\n- the flag of scotland 7 component characters, `b'\\\\u0001f3f4\\\\u000e0067\\\\u000e0062\\\\u000e0073\\\\u000e0063\\\\u000e0074\\\\u000e007f'` in full esaped notation.\n\n(you can see any of these through `s.encode(\"unicode-escape\")`.)\n\n`demoji` is careful to handle this and should find the full sequences rather than their incomplete subcomponents.\n\nthe way it does this it to sort emoji codes by their length, and then compile a concatenated regular expression that will greedily search for longer emojis first, falling back to shorter ones if not found.  this is not by any means a super-optimized way of searching as it has o(n<sup>2</sup>) properties, but the focus is on accuracy and completeness.\n\n```python\n>>> from pprint import pprint\n>>> seq = \"\"\"\\\n... i bet you didn't know that \ud83d\ude4b, \ud83d\ude4b\u200d\u2642\ufe0f, and \ud83d\ude4b\u200d\u2640\ufe0f are three different emojis.\n... \"\"\"\n>>> pprint(seq.encode('unicode-escape'))  # python 3\n(b\"i bet you didn't know that \\\\u0001f64b, \\\\u0001f64b\\\\u200d\\\\u2642\\\\ufe0f,\"\n b' and \\\\u0001f64b\\\\u200d\\\\u2640\\\\ufe0f are three different emojis.\\\\n')\n```\n\n# changelog\n\n## 1.1.0\n\n- add a `__main.py__` to allow running `python -m demoji`;\n  add an entry-point `demoji` command;\n  permit stdin (`-`), file name(s), or piped stdin.\n  contribution by @jap.\n\n## 1.0.0\n\n**this is a backwards-incompatible release with several substantial changes.**\n\nthe largest change is that `demoji` now bundles a static copy of unicode\nemoji data with the package at install time, rather than requiring a runtime\ndownload of the codes from unicode.org.\n\nchanges below are grouped by their corresponding\n[semantic versioning](https://semver.org/) identifier.\n\nsemver major:\n\n- drop support for python 2 and python 3.5\n- the `demoji` package now bundles emoji data that is distributed with the\n  package at install time, rather than requiring a download of the codes\n  from the unicode.org site at runtime (closes #23)\n- as a result of the above change, the following functions are **removed**\n  from the `demoji` api:\n  - `download_codes()`\n  - `parse_unicode_sequence()`\n  - `parse_unicode_range()`\n  - `stream_unicodeorg_emojifile()`\n\nsemver minor:\n\n- the `demoji.directory` and `demoji.cachepath` attributes are deprecated\n  due to no longer being functionally in used by the package. accessing them\n  will warn with a `futurewarning`, and these attributes may be removed\n  completely in a future release\n- `demoji` can now be installed with optional `ujson` support for faster loading\n  of emoji data from file (versus the standard library's `json`, which is the\n  default); use `python -m pip install demoji[ujson]`\n- the dependencies `requests` and `colorama` have been removed completely\n- `importlib_resources` (a backport module) is now required for python < 3.7\n- the `emoji_version` attribute, newly added to `demoji`, is a `str` denoting\n  the unicode database version in use\n\nsemver patch:\n\n- fix a typo in `demoji.__all__` to properly include `demoji.findall_list()`\n- internal change: functions that call `set_emoji_pattern()` are now decorated\n  with a `@cache_setter` to set the cache\n- some unit tests have been removed to update the change in behavior from\n  downloading codes to bundling codes with install\n- update readme to reflect bundling behavior\n\n## 0.4.0\n\n- update emoji source list to version 13.1. (see 5090eb5.)\n- formally support python 3.9. (see 6e9c34c.)\n- bugfix: ensure that `demoji.last_downloaded_timestamp()` returns correct utc time.\n  (see 6c8ad15.)\n\n## 0.3.0\n\n- feature: add `findall_list()` and `replace_with_desc()` functions. (see 7cea333.)\n- modernize setup config to use `setup.cfg`. (see 8f141e7.)\n\n## 0.2.1\n\n- tox: formally add python 3.8 tests.\n\n## 0.2.0\n\n- windows: use the [colorama] package to support printing ansi escape sequences on windows;\n  this introduces colorama as a dependency.  (see cd343c1.)\n- setup: fix a bug in `setup.py` that would require dependencies to be installed\n  _prior to_ installation of `demoji` in order to find the `__version__`.\n  (see d5f429c.)\n- python 2 + windows support: use `io.open(..., encoding='utf-8')` consistently in `setup.py`.\n  (see 1efec5d.)\n- distribution: use a universal wheel in pypi release. (see 8636a32.)\n\n[colorama]: https://github.com/tartley/colorama\n\n## 0.1.5\n\n- performance improvement: use `re.escape()` rather than failing to compile a small subset of codes.\n- remove an unused constant in `__init__.py`.\n\n\n",
  "docs_url": null,
  "keywords": "emoji,emojis,nlp,natural langauge processing,unicode",
  "license": "apache-2.0",
  "name": "demoji",
  "package_url": "https://pypi.org/project/demoji/",
  "project_url": "https://pypi.org/project/demoji/",
  "project_urls": {
    "Bug Reports": "https://github.com/bsolomon1124/demoji/issues",
    "Documentation": "https://github.com/bsolomon1124/demoji/blob/master/README.md",
    "Homepage": "https://github.com/bsolomon1124/demoji",
    "Source": "https://github.com/bsolomon1124/demoji"
  },
  "release_url": "https://pypi.org/project/demoji/1.1.0/",
  "requires_dist": [
    "importlib-resources ; python_version < \"3.7\"",
    "ujson ; extra == 'ujson'"
  ],
  "requires_python": ">=3.6",
  "summary": "accurately remove and replace emojis in text strings",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "brad_solomon",
    "bsolomon@protonmail.com"
  ],
  "kwds": "emoji_version stream_unicodeorg_emojifile set_emoji_pattern unicode emojis",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_demoji",
  "homepage": "https://github.com/bsolomon1124/demoji",
  "release_count": 15,
  "dependency_ids": [
    "pypi_importlib_resources",
    "pypi_ujson"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development",
    "topic :: software development :: user interfaces"
  ],
  "description": "[![github repository](https://img.shields.io/badge/-github-%230d0d0d?logo=github&labelcolor=gray)](https://github.com/magmax/python-readchar)\n[![latest pypi version](https://img.shields.io/pypi/v/readchar.svg)](https://pypi.python.org/pypi/readchar)\n[![supported python versions](https://img.shields.io/pypi/pyversions/readchar)](https://pypi.python.org/pypi/readchar)\n[![project licence](https://img.shields.io/pypi/l/readchar?color=blue)](licence) <br>\n[![automated testing results](https://img.shields.io/github/actions/workflow/status/magmax/python-readchar/run-tests.yaml?branch=master)](https://github.com/magmax/python-readchar/actions/workflows/run-tests.yaml?query=branch%3amaster)\n[![coveralls results](https://coveralls.io/repos/github/magmax/python-readchar/badge.svg?branch=master)](https://coveralls.io/github/magmax/python-readchar?branch=master)\n[![number of pypi downloads](https://img.shields.io/pypi/dd/readchar.svg)](https://pypi.python.org/pypi/readchar)\n\n# python-readchar\n\nlibrary to easily read single chars and keystrokes.\n\nborn as a [python-inquirer](https://github.com/magmax/python-inquirer) requirement.\n\n## installation\n\nsimply install it via `pip`:\n\n```bash\npip install readchar\n```\n\nor download the source code from [pypi](https://pypi.python.org/pypi/readchar).\n\n## usage\n\nsimply read a character or keystroke:\n\n```python\nimport readchar\n\nkey = readchar.readkey()\n```\n\nreact to different kinds of key-presses:\n\n```python\nfrom readchar import readkey, key\n\nwhile true:\n  k = readkey()\n  if k == \"a\":\n    # do stuff\n  if k == key.down:\n    # do stuff\n  if k == key.enter:\n    break\n```\n\n## documentation\n\nthere are just two methods:\n\n### `readchar.readchar() -> str`\n\nreads one character from `stdin`, returning it as a string with length 1. waits until a\ncharacter is available.\n\nas only ascii characters are actually a single character, you usually want to use the\nnext function, that also handles longer keys.\n\n### `readchar.readkey() -> str`\n\nreads the next keystroke from `stdin`, returning it as a string. waits until a keystroke\nis available.\n\na keystroke can be:\n\n- single characters as returned by `readchar()`. these include:\n  - character for normal keys: <kbd>a</kbd>, <kbd>z</kbd>, <kbd>9</kbd>,...\n  - special characters like <kbd>enter</kbd>, <kbd>backspace</kbd>, <kbd>tab</kbd>,...\n  - combinations with <kbd>ctrl</kbd>: <kbd>ctrl</kbd>+<kbd>a</kbd>,...\n- keys that are made up of multiple characters:\n  - characters for cursors/arrows: <kbd>\ud83e\udc69</kbd>, <kbd>\ud83e\udc6a</kbd>, <kbd>\ud83e\udc6b</kbd>,\n    <kbd>\ud83e\udc68</kbd>\n  - navigation keys: <kbd>insert</kbd>, <kbd>home</kbd>,...\n  - function keys: <kbd>f1</kbd> to <kbd>f12</kbd>\n  - combinations with <kbd>alt</kbd>: <kbd>alt</kbd>+<kbd>a</kbd>,...\n  - combinations with <kbd>ctrl</kbd> and <kbd>alt</kbd>:\n    <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>supr</kbd>,...\n\n> **note** <kbd>ctrl</kbd>+<kbd>c</kbd> will not be returned by `readkey()`, but instead\n> raise a `keyboardinterupt`. if you what to handle it yourself, use `readchar()`.\n\n### `readchar.key` module\n\nthis submodule contains a list of available keys to compare against. the constants are\ndefined depending on your operating system, so it should be fully portable. if a key is\nlisted here for your platform, `readkey()` can read it, and you can compare against it.\n\n### `readchar.config` class\n\nthis static class contains configurations for `readchar`. it holds constants that are\nused in other parts of the code as class attributes. you can override/change these to\nmodify its behaviour. here is a description of the existing attributes:\n\n<dl>\n<dt><code>interrupt_keys</code></dt>\n<dd>\n\nlist of keys that will result in `readkey()` raising a `keyboardinterrupt`. <br>\n*default:* `[key.ctrl_c]`\n\n</dd>\n</dl>\n\n## os support\n\nthis library actively supports these operating systems:\n\n- linux\n- windows\n\nsome operating systems are enabled, but not actively tested or supported:\n\n- macos\n- freebsd / openbsd\n\ntheoretically every unix based system should work, but they will not be actively tested.\nit is also required that somebody provides initial test results before the os is enabled\nand added to the list. feel free to open a pr for that.\n\nthank you!\n\n## how to contribute\n\nyou have an issue problem or found a bug? you have a great new idea or just want to fix\na typo? great :+1:. we are happy to accept your issue or pull request, but first, please\nread our\n[contribution guidelines](https://github.com/magmax/python-readchar/blob/master/contributing.md).\nthey will also tell you how to write code for this repo and how to properly prepare an\nissue or a pull request.\n\n______________________________________________________________________\n\n*copyright (c) 2014-2022 miguel \u00e1ngel garc\u00eda*\n",
  "docs_url": null,
  "keywords": "characters,keystrokes,stdin,command line",
  "license": "mit",
  "name": "readchar",
  "package_url": "https://pypi.org/project/readchar/",
  "project_url": "https://pypi.org/project/readchar/",
  "project_urls": {
    "Bug Tracker": "https://github.com/magmax/python-readchar/issues",
    "Download": "https://pypi.org/project/readchar/#files",
    "Homepage": "https://github.com/magmax/python-readchar",
    "Source Code": "https://github.com/magmax/python-readchar"
  },
  "release_url": "https://pypi.org/project/readchar/4.0.5/",
  "requires_dist": [
    "setuptools (>=41.0)"
  ],
  "requires_python": ">=3.7",
  "summary": "library to easily read single chars and key strokes",
  "version": "4.0.5",
  "releases": [],
  "developers": [
    "miguelangel.garcia@gmail.com"
  ],
  "kwds": "pypi pip python readchar magmax",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_readchar",
  "homepage": "https://github.com/magmax/python-readchar",
  "release_count": 34,
  "dependency_ids": [
    "pypi_setuptools"
  ]
}
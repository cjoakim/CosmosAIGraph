{
  "classifiers": [
    "development status :: 7 - inactive",
    "framework :: aws cdk",
    "framework :: aws cdk :: 1",
    "intended audience :: developers",
    "license :: osi approved",
    "operating system :: os independent",
    "programming language :: javascript",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "the cdk construct library for aws::autoscaling\n# amazon ec2 auto scaling construct library\n\n<!--begin stability banner-->---\n\n\n![end-of-support](https://img.shields.io/badge/end--of--support-critical.svg?style=for-the-badge)\n\n> aws cdk v1 has reached end-of-support on 2023-06-01.\n> this package is no longer being updated, and users should migrate to aws cdk v2.\n>\n> for more information on how to migrate, see the [*migrating to aws cdk v2* guide](https://docs.aws.amazon.com/cdk/v2/guide/migrating-v2.html).\n\n---\n<!--end stability banner-->\n\nthis module is part of the [aws cloud development kit](https://github.com/aws/aws-cdk) project.\n\n## auto scaling group\n\nan `autoscalinggroup` represents a number of instances on which you run your code. you\npick the size of the fleet, the instance type and the os image:\n\n```python\n# vpc: ec2.vpc\n\n\nautoscaling.autoscalinggroup(self, \"asg\",\n    vpc=vpc,\n    instance_type=ec2.instancetype.of(ec2.instanceclass.burstable2, ec2.instancesize.micro),\n    machine_image=ec2.amazonlinuximage()\n)\n```\n\nnote: autoscalinggroup has an property called `allowalloutbound` (allowing the instances to contact the\ninternet) which is set to `true` by default. be sure to set this to `false`  if you don't want\nyour instances to be able to start arbitrary connections. alternatively, you can specify an existing security\ngroup to attach to the instances that are launched, rather than have the group create a new one.\n\n```python\n# vpc: ec2.vpc\n\n\nmy_security_group = ec2.securitygroup(self, \"securitygroup\", vpc=vpc)\nautoscaling.autoscalinggroup(self, \"asg\",\n    vpc=vpc,\n    instance_type=ec2.instancetype.of(ec2.instanceclass.burstable2, ec2.instancesize.micro),\n    machine_image=ec2.amazonlinuximage(),\n    security_group=my_security_group\n)\n```\n\nalternatively you can create an `autoscalinggroup` from a `launchtemplate`:\n\n```python\n# vpc: ec2.vpc\n# launch_template: ec2.launchtemplate\n\n\nautoscaling.autoscalinggroup(self, \"asg\",\n    vpc=vpc,\n    launch_template=launch_template\n)\n```\n\nto launch a mixture of spot and on-demand instances, and/or with multiple instance types, you can create an `autoscalinggroup` from a mixedinstancespolicy:\n\n```python\n# vpc: ec2.vpc\n# launch_template1: ec2.launchtemplate\n# launch_template2: ec2.launchtemplate\n\n\nautoscaling.autoscalinggroup(self, \"asg\",\n    vpc=vpc,\n    mixed_instances_policy=autoscaling.mixedinstancespolicy(\n        instances_distribution=autoscaling.instancesdistribution(\n            on_demand_percentage_above_base_capacity=50\n        ),\n        launch_template=launch_template1,\n        launch_template_overrides=[autoscaling.launchtemplateoverrides(instance_type=ec2.instancetype(\"t3.micro\")), autoscaling.launchtemplateoverrides(instance_type=ec2.instancetype(\"t3a.micro\")), autoscaling.launchtemplateoverrides(instance_type=ec2.instancetype(\"t4g.micro\"), launch_template=launch_template2)]\n    )\n)\n```\n\n## machine images (amis)\n\namis control the os that gets launched when you start your ec2 instance. the ec2\nlibrary contains constructs to select the ami you want to use.\n\ndepending on the type of ami, you select it a different way.\n\nthe latest version of amazon linux and microsoft windows images are\nselectable by instantiating one of these classes:\n\n```python\n# pick a windows edition to use\nwindows = ec2.windowsimage(ec2.windowsversion.windows_server_2019_english_full_base)\n\n# pick the right amazon linux edition. all arguments shown are optional\n# and will default to these values when omitted.\namzn_linux = ec2.amazonlinuximage(\n    generation=ec2.amazonlinuxgeneration.amazon_linux,\n    edition=ec2.amazonlinuxedition.standard,\n    virtualization=ec2.amazonlinuxvirt.hvm,\n    storage=ec2.amazonlinuxstorage.general_purpose\n)\n\n# for other custom (linux) images, instantiate a `genericlinuximage` with\n# a map giving the ami to in for each region:\n\nlinux = ec2.genericlinuximage({\n    \"us-east-1\": \"ami-97785bed\",\n    \"eu-west-1\": \"ami-12345678\"\n})\n```\n\n> note: the amazon linux images selected will be cached in your `cdk.json`, so that your\n> autoscalinggroups don't automatically change out from under you when you're making unrelated\n> changes. to update to the latest version of amazon linux, remove the cache entry from the `context`\n> section of your `cdk.json`.\n>\n> we will add command-line options to make this step easier in the future.\n\n## autoscaling instance counts\n\nautoscalinggroups make it possible to raise and lower the number of instances in the group,\nin response to (or in advance of) changes in workload.\n\nwhen you create your autoscalinggroup, you specify a `mincapacity` and a\n`maxcapacity`. autoscaling policies that respond to metrics will never go higher\nor lower than the indicated capacity (but scheduled scaling actions might, see\nbelow).\n\nthere are three ways to scale your capacity:\n\n* **in response to a metric** (also known as step scaling); for example, you\n  might want to scale out if the cpu usage across your cluster starts to rise,\n  and scale in when it drops again.\n* **by trying to keep a certain metric around a given value** (also known as\n  target tracking scaling); you might want to automatically scale out and in to\n  keep your cpu usage around 50%.\n* **on a schedule**; you might want to organize your scaling around traffic\n  flows you expect, by scaling out in the morning and scaling in in the\n  evening.\n\nthe general pattern of autoscaling will look like this:\n\n```python\n# vpc: ec2.vpc\n# instance_type: ec2.instancetype\n# machine_image: ec2.imachineimage\n\n\nauto_scaling_group = autoscaling.autoscalinggroup(self, \"asg\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    min_capacity=5,\n    max_capacity=100\n)\n```\n\n### step scaling\n\nthis type of scaling scales in and out in deterministics steps that you\nconfigure, in response to metric values. for example, your scaling strategy to\nscale in response to a metric that represents your average worker pool usage\nmight look like this:\n\n```plaintext\n scaling        -1          (no change)          +1       +3\n            \u2502        \u2502                       \u2502        \u2502        \u2502\n            \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n            \u2502        \u2502                       \u2502        \u2502        \u2502\nworker use  0%      10%                     50%       70%     100%\n```\n\n(note that this is not necessarily a recommended scaling strategy, but it's\na possible one. you will have to determine what thresholds are right for you).\n\nnote that in order to set up this scaling strategy, you will have to emit a\nmetric representing your worker utilization from your instances. after that,\nyou would configure the scaling something like this:\n\n```python\n# auto_scaling_group: autoscaling.autoscalinggroup\n\n\nworker_utilization_metric = cloudwatch.metric(\n    namespace=\"myservice\",\n    metric_name=\"workerutilization\"\n)\n\nauto_scaling_group.scale_on_metric(\"scaletocpu\",\n    metric=worker_utilization_metric,\n    scaling_steps=[autoscaling.scalinginterval(upper=10, change=-1), autoscaling.scalinginterval(lower=50, change=+1), autoscaling.scalinginterval(lower=70, change=+3)\n    ],\n\n    # change this to adjustmenttype.percent_change_in_capacity to interpret the\n    # 'change' numbers before as percentages instead of capacity counts.\n    adjustment_type=autoscaling.adjustmenttype.change_in_capacity\n)\n```\n\nthe autoscaling construct library will create the required cloudwatch alarms and\nautoscaling policies for you.\n\n### target tracking scaling\n\nthis type of scaling scales in and out in order to keep a metric around a value\nyou prefer. there are four types of predefined metrics you can track, or you can\nchoose to track a custom metric. if you do choose to track a custom metric,\nbe aware that the metric has to represent instance utilization in some way\n(autoscaling will scale out if the metric is higher than the target, and scale\nin if the metric is lower than the target).\n\nif you configure multiple target tracking policies, autoscaling will use the\none that yields the highest capacity.\n\nthe following example scales to keep the cpu usage of your instances around\n50% utilization:\n\n```python\n# auto_scaling_group: autoscaling.autoscalinggroup\n\n\nauto_scaling_group.scale_on_cpu_utilization(\"keepsparecpu\",\n    target_utilization_percent=50\n)\n```\n\nto scale on average network traffic in and out of your instances:\n\n```python\n# auto_scaling_group: autoscaling.autoscalinggroup\n\n\nauto_scaling_group.scale_on_incoming_bytes(\"limitingressperinstance\",\n    target_bytes_per_second=10 * 1024 * 1024\n)\nauto_scaling_group.scale_on_outgoing_bytes(\"limitegressperinstance\",\n    target_bytes_per_second=10 * 1024 * 1024\n)\n```\n\nto scale on the average request count per instance (only works for\nautoscalinggroups that have been attached to application load\nbalancers):\n\n```python\n# auto_scaling_group: autoscaling.autoscalinggroup\n\n\nauto_scaling_group.scale_on_request_count(\"limitrps\",\n    target_requests_per_second=1000\n)\n```\n\n### scheduled scaling\n\nthis type of scaling is used to change capacities based on time. it works by\nchanging `mincapacity`, `maxcapacity` and `desiredcapacity` of the\nautoscalinggroup, and so can be used for two purposes:\n\n* scale in and out on a schedule by setting the `mincapacity` high or\n  the `maxcapacity` low.\n* still allow the regular scaling actions to do their job, but restrict\n  the range they can scale over (by setting both `mincapacity` and\n  `maxcapacity` but changing their range over time).\n\na schedule is expressed as a cron expression. the `schedule` class has a `cron` method to help build cron expressions.\n\nthe following example scales the fleet out in the morning, going back to natural\nscaling (all the way down to 1 instance if necessary) at night:\n\n```python\n# auto_scaling_group: autoscaling.autoscalinggroup\n\n\nauto_scaling_group.scale_on_schedule(\"prescaleinthemorning\",\n    schedule=autoscaling.schedule.cron(hour=\"8\", minute=\"0\"),\n    min_capacity=20\n)\n\nauto_scaling_group.scale_on_schedule(\"allowdownscalingatnight\",\n    schedule=autoscaling.schedule.cron(hour=\"20\", minute=\"0\"),\n    min_capacity=1\n)\n```\n\n## configuring instances using cloudformation init\n\nit is possible to use the cloudformation init mechanism to configure the\ninstances in the autoscalinggroup. you can write files to it, run commands,\nstart services, etc. see the documentation of\n[aws::cloudformation::init](https://docs.aws.amazon.com/awscloudformation/latest/userguide/aws-resource-init.html)\nand the documentation of cdk's `aws-ec2` library for more information.\n\nwhen you specify a cloudformation init configuration for an autoscalinggroup:\n\n* you *must* also specify `signals` to configure how long cloudformation\n  should wait for the instances to successfully configure themselves.\n* you *should* also specify an `updatepolicy` to configure how instances\n  should be updated when the autoscalinggroup is updated (for example,\n  when the ami is updated). if you don't specify an update policy, a *rolling\n  update* is chosen by default.\n\nhere's an example of using cloudformation init to write a file to the\ninstance hosts on startup:\n\n```python\n# vpc: ec2.vpc\n# instance_type: ec2.instancetype\n# machine_image: ec2.imachineimage\n\n\nautoscaling.autoscalinggroup(self, \"asg\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    init=ec2.cloudformationinit.from_elements(\n        ec2.initfile.from_string(\"/etc/my_instance\", \"this got written during instance startup\")),\n    signals=autoscaling.signals.wait_for_all(\n        timeout=duration.minutes(10)\n    )\n)\n```\n\n## signals\n\nin normal operation, cloudformation will send a create or update command to\nan autoscalinggroup and proceed with the rest of the deployment without waiting\nfor the *instances in the autoscalinggroup*.\n\nconfigure `signals` to tell cloudformation to wait for a specific number of\ninstances in the autoscalinggroup to have been started (or failed to start)\nbefore moving on. an instance is supposed to execute the\n[`cfn-signal`](https://docs.aws.amazon.com/awscloudformation/latest/userguide/cfn-signal.html)\nprogram as part of its startup to indicate whether it was started\nsuccessfully or not.\n\nif you use cloudformation init support (described in the previous section),\nthe appropriate call to `cfn-signal` is automatically added to the\nautoscalinggroup's userdata. if you don't use the `signals` directly, you are\nresponsible for adding such a call yourself.\n\nthe following type of `signals` are available:\n\n* `signals.waitforall([options])`: wait for all of `desiredcapacity` amount of instances\n  to have started (recommended).\n* `signals.waitformincapacity([options])`: wait for a `mincapacity` amount of instances\n  to have started (use this if waiting for all instances takes too long and you are happy\n  with a minimum count of healthy hosts).\n* `signals.waitforcount(count, [options])`: wait for a specific amount of instances to have\n  started.\n\nthere are two `options` you can configure:\n\n* `timeout`: maximum time a host startup is allowed to take. if a host does not report\n  success within this time, it is considered a failure. default is 5 minutes.\n* `minsuccesspercentage`: percentage of hosts that needs to be healthy in order for the\n  update to succeed. if you set this value lower than 100, some percentage of hosts may\n  report failure, while still considering the deployment a success. default is 100%.\n\n## update policy\n\nthe *update policy* describes what should happen to running instances when the definition\nof the autoscalinggroup is changed. for example, if you add a command to the userdata\nof an autoscalinggroup, do the existing instances get replaced with new instances that\nhave executed the new userdata? or do the \"old\" instances just keep on running?\n\nit is recommended to always use an update policy, otherwise the current state of your\ninstances also depends the previous state of your instances, rather than just on your\nsource code. this degrades the reproducibility of your deployments.\n\nthe following update policies are available:\n\n* `updatepolicy.none()`: leave existing instances alone (not recommended).\n* `updatepolicy.rollingupdate([options])`: progressively replace the existing\n  instances with new instances, in small batches. at any point in time,\n  roughly the same amount of total instances will be running. if the deployment\n  needs to be rolled back, the fresh instances will be replaced with the \"old\"\n  configuration again.\n* `updatepolicy.replacingupdate([options])`: build a completely fresh copy\n  of the new autoscalinggroup next to the old one. once the autoscalinggroup\n  has been successfully created (and the instances started, if `signals` is\n  configured on the autoscalinggroup), the old autoscalinggroup is deleted.\n  if the deployment needs to be rolled back, the new autoscalinggroup is\n  deleted and the old one is left unchanged.\n\n## allowing connections\n\nsee the documentation of the `@aws-cdk/aws-ec2` package for more information\nabout allowing connections between resources backed by instances.\n\n## max instance lifetime\n\nto enable the max instance lifetime support, specify `maxinstancelifetime` property\nfor the `autoscalinggroup` resource. the value must be between 7 and 365 days(inclusive).\nto clear a previously set value, leave this property undefined.\n\n## instance monitoring\n\nto disable detailed instance monitoring, specify `instancemonitoring` property\nfor the `autoscalinggroup` resource as `monitoring.basic`. otherwise detailed monitoring\nwill be enabled.\n\n## monitoring group metrics\n\ngroup metrics are used to monitor group level properties; they describe the group rather than any of its instances (e.g groupmaxsize, the group maximum size). to enable group metrics monitoring, use the `groupmetrics` property.\nall group metrics are reported in a granularity of 1 minute at no additional charge.\n\nsee [ec2 docs](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html#as-group-metrics) for a list of all available group metrics.\n\nto enable group metrics monitoring using the `groupmetrics` property:\n\n```python\n# vpc: ec2.vpc\n# instance_type: ec2.instancetype\n# machine_image: ec2.imachineimage\n\n\n# enable monitoring of all group metrics\nautoscaling.autoscalinggroup(self, \"asg\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    group_metrics=[autoscaling.groupmetrics.all()]\n)\n\n# enable monitoring for a subset of group metrics\nautoscaling.autoscalinggroup(self, \"asg\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    group_metrics=[autoscaling.groupmetrics(autoscaling.groupmetric.min_size, autoscaling.groupmetric.max_size)]\n)\n```\n\n## termination policies\n\nauto scaling uses [termination policies](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html)\nto determine which instances it terminates first during scale-in events. you\ncan specify one or more termination policies with the `terminationpolicies`\nproperty:\n\n```python\n# vpc: ec2.vpc\n# instance_type: ec2.instancetype\n# machine_image: ec2.imachineimage\n\n\nautoscaling.autoscalinggroup(self, \"asg\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    termination_policies=[autoscaling.terminationpolicy.oldest_instance, autoscaling.terminationpolicy.default\n    ]\n)\n```\n\n## protecting new instances from being terminated on scale-in\n\nby default, auto scaling can terminate an instance at any time after launch when\nscaling in an auto scaling group, subject to the group's [termination\npolicy](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html).\n\nhowever, you may wish to protect newly-launched instances from being scaled in\nif they are going to run critical applications that should not be prematurely\nterminated. ec2 capacity providers for amazon ecs requires this attribute be\nset to `true`.\n\n```python\n# vpc: ec2.vpc\n# instance_type: ec2.instancetype\n# machine_image: ec2.imachineimage\n\n\nautoscaling.autoscalinggroup(self, \"asg\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    new_instances_protected_from_scale_in=true\n)\n```\n\n## configuring instance metadata service (imds)\n\n### toggling imdsv1\n\nyou can configure [ec2 instance metadata service](https://docs.aws.amazon.com/awsec2/latest/userguide/ec2-instance-metadata.html) options to either\nallow both imdsv1 and imdsv2 or enforce imdsv2 when interacting with the imds.\n\nto do this for a single `autoscalinggroup`, you can use set the `requireimdsv2` property.\nthe example below demonstrates imdsv2 being required on a single `autoscalinggroup`:\n\n```python\n# vpc: ec2.vpc\n# instance_type: ec2.instancetype\n# machine_image: ec2.imachineimage\n\n\nautoscaling.autoscalinggroup(self, \"asg\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    require_imdsv2=true\n)\n```\n\nyou can also use `autoscalinggrouprequireimdsv2aspect` to apply the operation to multiple autoscalinggroups.\nthe example below demonstrates the `autoscalinggrouprequireimdsv2aspect` being used to require imdsv2 for all autoscalinggroups in a stack:\n\n```python\naspect = autoscaling.autoscalinggrouprequireimdsv2aspect()\n\naspects.of(self).add(aspect)\n```\n\n## warm pool\n\nauto scaling offers [a warm pool](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html) which gives an ability to decrease latency for applications that have exceptionally long boot times. you can create a warm pool with default parameters as below:\n\n```python\n# auto_scaling_group: autoscaling.autoscalinggroup\n\n\nauto_scaling_group.add_warm_pool()\n```\n\nyou can also customize a warm pool by configuring parameters:\n\n```python\n# auto_scaling_group: autoscaling.autoscalinggroup\n\n\nauto_scaling_group.add_warm_pool(\n    min_size=1,\n    reuse_on_scale_in=true\n)\n```\n\n## future work\n\n* [ ] cloudwatch events (impossible to add currently as the autoscalinggroup arn is\n  necessary to make this rule and this cannot be accessed from cloudformation).\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "aws-cdk.aws-autoscaling",
  "package_url": "https://pypi.org/project/aws-cdk.aws-autoscaling/",
  "project_url": "https://pypi.org/project/aws-cdk.aws-autoscaling/",
  "project_urls": {
    "Homepage": "https://github.com/aws/aws-cdk",
    "Source": "https://github.com/aws/aws-cdk.git"
  },
  "release_url": "https://pypi.org/project/aws-cdk.aws-autoscaling/1.204.0/",
  "requires_dist": [
    "aws-cdk.aws-autoscaling-common (==1.204.0)",
    "aws-cdk.aws-cloudwatch (==1.204.0)",
    "aws-cdk.aws-ec2 (==1.204.0)",
    "aws-cdk.aws-elasticloadbalancing (==1.204.0)",
    "aws-cdk.aws-elasticloadbalancingv2 (==1.204.0)",
    "aws-cdk.aws-iam (==1.204.0)",
    "aws-cdk.aws-sns (==1.204.0)",
    "aws-cdk.core (==1.204.0)",
    "constructs (<4.0.0,>=3.3.69)",
    "jsii (<2.0.0,>=1.84.0)",
    "publication (>=0.0.3)",
    "typeguard (~=2.13.3)"
  ],
  "requires_python": "~=3.7",
  "summary": "the cdk construct library for aws::autoscaling",
  "version": "1.204.0",
  "releases": [],
  "developers": [
    "amazon_web_services"
  ],
  "kwds": "auto_scaling_group autoscalinggroup autoscaling autoscalinggroups autoscalinggrouprequireimdsv2aspect",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_aws_cdk.aws_autoscaling",
  "homepage": "https://github.com/aws/aws-cdk",
  "release_count": 258,
  "dependency_ids": [
    "pypi_aws_cdk.aws_autoscaling_common",
    "pypi_aws_cdk.aws_cloudwatch",
    "pypi_aws_cdk.aws_ec2",
    "pypi_aws_cdk.aws_elasticloadbalancing",
    "pypi_aws_cdk.aws_elasticloadbalancingv2",
    "pypi_aws_cdk.aws_iam",
    "pypi_aws_cdk.aws_sns",
    "pypi_aws_cdk.core",
    "pypi_constructs",
    "pypi_jsii",
    "pypi_publication",
    "pypi_typeguard"
  ],
  "documentation_summary": "The HTML text provides information about the `aws-cdk.aws-autoscaling` package version 1.204.0, released on June 19, 2023, available on PyPI for installation. This package, part of the AWS Cloud Development Kit (CDK), facilitates the creation and management of AWS Auto Scaling groups, allowing users to automatically adjust the number of instances in response to demand. It supports various features like scheduled scaling, instance configuration using CloudFormation Init, and protection of new instances from termination. The package is now inactive as AWS CDK v1 reached end-of-support on June 1, 2023, and users are advised to migrate to AWS CDK v2. The package requires Python version 3.7 or newer and is licensed under the Apache-2.0 license.",
  "embedding": [
    -0.03676817938685417,
    -0.00404506828635931,
    0.0031297740060836077,
    -0.015497801825404167,
    -0.020161360502243042,
    0.03972555696964264,
    -0.0057228123769164085,
    0.0059716301038861275,
    -0.0119290417060256,
    -0.028194624930620193,
    0.013222895562648773,
    0.004926594905555248,
    -0.013805840164422989,
    0.013741858303546906,
    -0.00656523834913969,
    0.0011445623822510242,
    0.03156432881951332,
    -0.026602189987897873,
    -0.0018145935609936714,
    0.0008859695517458022,
    0.010237080045044422,
    -0.0006802504067309201,
    0.00023993157083168626,
    0.00575835769996047,
    -0.016350891441106796,
    0.025734882801771164,
    0.00848113652318716,
    -0.026232518255710602,
    0.015583110973238945,
    0.009959826245903969,
    0.03514730930328369,
    -0.004919485654681921,
    -0.016336673870682716,
    -0.012647059746086597,
    -0.00867308210581541,
    -0.028564296662807465,
    0.01255464181303978,
    -0.0034781191498041153,
    0.04197202995419502,
    -0.020929140970110893,
    0.007578283082693815,
    0.021270377561450005,
    -0.003742932341992855,
    -0.017630526795983315,
    -0.013222895562648773,
    0.012384023517370224,
    0.007379228714853525,
    -0.015312965959310532,
    -0.032189927995204926,
    8.969663758762181e-05,
    5.5400865676347166e-05,
    0.03887246921658516,
    -0.037024106830358505,
    0.0023708792869001627,
    0.010066461749374866,
    0.007357901427894831,
    -0.0050794403068721294,
    0.021284595131874084,
    0.012248951010406017,
    -0.03233211115002632,
    0.017701618373394012,
    -0.012384023517370224,
    -0.017587872222065926,
    -0.018341435119509697,
    -0.004777303896844387,
    -0.005601957906037569,
    -0.029403168708086014,
    0.027313098311424255,
    -0.015099693089723587,
    -0.016521509736776352,
    0.047943659126758575,
    0.02229408547282219,
    -0.0027316652704030275,
    -0.025678008794784546,
    0.051270708441734314,
    -0.039043087512254715,
    -0.01585325598716736,
    0.015981219708919525,
    -0.016379328444600105,
    0.0071055288426578045,
    -0.012746586464345455,
    -0.001965661533176899,
    0.0052784946747124195,
    0.02466852031648159,
    -0.008808154612779617,
    0.01815659925341606,
    -0.017317727208137512,
    0.007898191921412945,
    0.009952716529369354,
    0.014715802855789661,
    0.03435109183192253,
    -0.008971663191914558,
    0.0024330837186425924,
    0.01856892555952072,
    -0.010350825265049934,
    0.03199087455868721,
    -0.008097246289253235,
    0.022393612191081047,
    0.025379428640007973,
    -0.013784512877464294,
    -0.013628113083541393,
    0.022834375500679016,
    -0.014331912621855736,
    -0.005911203101277351,
    -0.02758324332535267,
    -0.014900638721883297,
    -0.011061733588576317,
    0.010884006507694721,
    0.04242701083421707,
    -0.0018696889746934175,
    -0.009007208980619907,
    0.02220877632498741,
    -0.010336607694625854,
    -0.018824853003025055,
    -0.005253612529486418,
    -0.004578249529004097,
    0.017644744366407394,
    -0.004823513329029083,
    -0.011850842274725437,
    -0.014730021357536316,
    -0.005399348679929972,
    0.042739808559417725,
    0.001933670719154179,
    -0.017076019197702408,
    -0.01256885938346386,
    -0.022848594933748245,
    -0.029886586591601372,
    -0.004269004799425602,
    -0.014104421250522137,
    -0.02960222400724888,
    -0.00636262958869338,
    0.0014715802390128374,
    0.005772575736045837,
    -0.03816156089305878,
    -0.012419568374752998,
    -0.017275072634220123,
    -0.014054657891392708,
    -0.011196806095540524,
    -0.029687533155083656,
    -0.02065899595618248,
    -0.0022322521544992924,
    0.03801937773823738,
    -0.012071223929524422,
    -0.0049443673342466354,
    -0.019350925460457802,
    -0.0029822604265064,
    0.026033462956547737,
    0.016763219609856606,
    -0.012952749617397785,
    -0.009661244228482246,
    -0.01616605557501316,
    -0.017317727208137512,
    -0.021355686709284782,
    -0.024796482175588608,
    0.007628046441823244,
    0.0031617649365216494,
    0.0022322521544992924,
    0.00045764725655317307,
    -0.016421983018517494,
    -0.009213372133672237,
    0.01356413122266531,
    0.04322322830557823,
    -0.027682770043611526,
    0.008665972389280796,
    0.008587772957980633,
    0.004745312966406345,
    0.020388850942254066,
    -0.020900705829262733,
    -0.026886554434895515,
    0.0020243115723133087,
    0.023758556693792343,
    0.012099660001695156,
    -0.009604372084140778,
    0.00832473672926426,
    -0.018369872123003006,
    0.023346230387687683,
    0.007514301221817732,
    0.012284495867788792,
    -0.016720565035939217,
    -0.018284562975168228,
    0.023971829563379288,
    0.00968968030065298,
    -0.002882733242586255,
    0.048000533133745193,
    -0.019521543756127357,
    -0.013983567245304585,
    0.007756010163575411,
    0.005733476020395756,
    0.0222514308989048,
    0.009440862573683262,
    0.00811857357621193,
    0.03167807683348656,
    -0.019521543756127357,
    -0.00851668231189251,
    -0.579191267490387,
    -0.013180240988731384,
    -0.022450486198067665,
    -0.016763219609856606,
    -0.0006113811978138983,
    0.016848526895046234,
    0.015384056605398655,
    0.032957710325717926,
    -0.03892933949828148,
    0.029317859560251236,
    -0.042313262820243835,
    0.023317793384194374,
    -0.00012663054803851992,
    0.014381675980985165,
    0.01814238168299198,
    -0.021526305004954338,
    0.001994097838178277,
    -0.03233211115002632,
    0.003540323581546545,
    -0.01092666108161211,
    0.002454411005601287,
    0.035886652767658234,
    0.0017870458541437984,
    -0.009440862573683262,
    0.0011401192750781775,
    0.008161228150129318,
    -0.010770261287689209,
    -0.023801211267709732,
    0.014346130192279816,
    0.010571206919848919,
    -0.0292041152715683,
    0.02793869748711586,
    0.006942019797861576,
    -0.010549879632890224,
    0.044787224382162094,
    0.0030018105171620846,
    -0.03284396603703499,
    0.048398640006780624,
    0.020502597093582153,
    0.023957611992955208,
    -0.019720597192645073,
    -0.0235452838242054,
    -0.00364340515807271,
    0.0037642596289515495,
    0.03875872120261192,
    0.024398375302553177,
    0.0170475821942091,
    0.01582481898367405,
    -0.006696756463497877,
    -0.055280234664678574,
    0.01626558229327202,
    0.005395794287323952,
    0.01987699791789055,
    -0.020104488357901573,
    0.027327315881848335,
    -0.016066528856754303,
    0.026531100273132324,
    0.0029858150519430637,
    0.014829548075795174,
    0.0013231781776994467,
    0.010109116323292255,
    0.018512053415179253,
    0.01312336791306734,
    -0.02711404487490654,
    0.003970423247665167,
    0.02028932422399521,
    -0.01212098728865385,
    -0.014616275206208229,
    -0.019109215587377548,
    -0.026957644149661064,
    0.008808154612779617,
    0.005548639688640833,
    -0.01745990850031376,
    -0.030540622770786285,
    0.02832258865237236,
    0.026104554533958435,
    0.00627732090651989,
    -0.007997718639671803,
    0.011260787956416607,
    0.0322752371430397,
    0.03275865688920021,
    -0.01271815039217472,
    -0.005939639173448086,
    -0.03071124106645584,
    0.022436266764998436,
    0.0007091310690157115,
    -0.002164715901017189,
    -0.015952782705426216,
    -0.037877198308706284,
    -0.006128029897809029,
    -0.0007984389085322618,
    0.00933422613888979,
    -0.0125759681686759,
    -0.05542241409420967,
    0.0028933968860656023,
    0.009462189860641956,
    0.011538042686879635,
    -0.004069950431585312,
    -0.010976424440741539,
    -0.020104488357901573,
    -0.009824753738939762,
    -0.004755976609885693,
    -0.028180407360196114,
    -0.00015662200166843832,
    0.036711305379867554,
    -0.014673148281872272,
    -0.004816404078155756,
    -0.008594881743192673,
    0.025734882801771164,
    -0.02830837108194828,
    0.006028502713888884,
    -0.019038125872612,
    0.0011712214909493923,
    0.01113282423466444,
    0.017531000077724457,
    -0.024114010855555534,
    0.014253712259232998,
    0.009966935031116009,
    0.03127996623516083,
    0.0019869888201355934,
    0.0032346330117434263,
    0.017687398940324783,
    0.0037962505593895912,
    0.0029840378556400537,
    0.018881725147366524,
    0.008907681331038475,
    0.0008522013667970896,
    -0.015128129161894321,
    -0.00047630860353820026,
    -0.004027295857667923,
    0.00046831087092868984,
    -0.004777303896844387,
    0.009668353945016861,
    -0.01256175059825182,
    0.056815795600414276,
    0.007276146672666073,
    0.02715669944882393,
    0.006255993619561195,
    0.022052377462387085,
    -0.023204049095511436,
    -0.010535662062466145,
    -0.010357934981584549,
    0.014658929780125618,
    -0.02545051835477352,
    0.02018979750573635,
    -0.01152382418513298,
    -0.030512185767292976,
    0.0011161260772496462,
    0.012810568325221539,
    -0.004201468545943499,
    -0.002193152206018567,
    -0.0072050560265779495,
    -0.022820157930254936,
    0.024796482175588608,
    -0.02829415164887905,
    0.0008566445321775973,
    -0.008161228150129318,
    -0.014715802855789661,
    0.005058113019913435,
    0.006675429176539183,
    0.01335796806961298,
    0.014538075774908066,
    -0.016336673870682716,
    0.019763251766562462,
    -0.045185334980487823,
    0.00628442969173193,
    -0.03605727106332779,
    0.022436266764998436,
    0.00014040440146345645,
    -0.012590186670422554,
    -0.02464008331298828,
    -0.005399348679929972,
    -0.0063164206221699715,
    0.0042085773311555386,
    0.011701551266014576,
    -0.0152134383097291,
    -0.006327084265649319,
    0.01862579770386219,
    -0.0026445789262652397,
    0.011289224959909916,
    0.0015942119061946869,
    0.003856677794829011,
    -0.017331944778561592,
    -0.006824720185250044,
    0.0492517314851284,
    0.01989121548831463,
    0.007144629023969173,
    -0.014488312415778637,
    -0.03361174836754799,
    0.020872268825769424,
    -0.047602422535419464,
    0.006028502713888884,
    -0.028436332941055298,
    0.056474559009075165,
    -0.024042919278144836,
    -0.006049830000847578,
    -0.007983501069247723,
    0.01694805547595024,
    0.017687398940324783,
    0.034237347543239594,
    0.02065899595618248,
    0.001348948571830988,
    0.02670171670615673,
    -0.004613795317709446,
    -0.008395827375352383,
    -0.042711373418569565,
    0.0026836791075766087,
    0.004926594905555248,
    0.020445723086595535,
    0.014324802905321121,
    0.008338955231010914,
    0.0006731413304805756,
    0.004030850250273943,
    -0.038588106632232666,
    0.0111257154494524,
    0.011843732558190823,
    -0.005054558161646128,
    0.002765433397144079,
    -0.010365043766796589,
    0.0016981823137030005,
    0.017331944778561592,
    0.026829680427908897,
    0.02227986790239811,
    -0.019123435020446777,
    -0.012270278297364712,
    0.014267930760979652,
    0.008026155643165112,
    0.01031528040766716,
    -0.009028536267578602,
    -0.029346296563744545,
    -0.013948021456599236,
    0.012675495818257332,
    -0.012135205790400505,
    -0.017275072634220123,
    0.031791821122169495,
    -0.00395975960418582,
    0.033839236944913864,
    -0.007492973934859037,
    0.023673247545957565,
    -0.03551698103547096,
    0.03071124106645584,
    -0.016862746328115463,
    0.03875872120261192,
    -0.017900671809911728,
    0.016421983018517494,
    -0.011303442530333996,
    0.006024948321282864,
    0.01271815039217472,
    -0.005104321986436844,
    -0.017957543954253197,
    0.010571206919848919,
    -0.004624458961188793,
    0.010834243148565292,
    0.015312965959310532,
    -0.002994701499119401,
    0.011488278396427631,
    0.02589128166437149,
    0.00045498134568333626,
    0.0493939109146595,
    0.012071223929524422,
    0.0036238553002476692,
    0.03474919870495796,
    0.02061634138226509,
    0.021554740145802498,
    0.03850279748439789,
    0.0006007175543345511,
    -0.019180307164788246,
    -0.023346230387687683,
    -0.026189863681793213,
    -0.007055765483528376,
    -0.023730119690299034,
    -0.02186754159629345,
    -0.014452766627073288,
    -0.03162120282649994,
    0.030938731506466866,
    -0.011829514987766743,
    0.040663957595825195,
    0.012234732508659363,
    -0.003568759886547923,
    0.01622292771935463,
    -0.004332986194640398,
    -0.04910954833030701,
    0.03275865688920021,
    0.008161228150129318,
    -0.014466985128819942,
    -0.014630493707954884,
    -0.02262110263109207,
    0.02589128166437149,
    0.0033732601441442966,
    0.037791889160871506,
    0.003184869419783354,
    0.013777404092252254,
    0.005907648243010044,
    0.00022793498646933585,
    -0.02708560787141323,
    0.006718083750456572,
    0.03509043529629707,
    -0.008573554456233978,
    -5.05966781929601e-05,
    0.00648703845217824,
    0.0002033864293480292,
    -0.012419568374752998,
    0.001866134349256754,
    0.028407897800207138,
    0.032616473734378815,
    0.0011738874018192291,
    -0.019549978896975517,
    -0.013542803935706615,
    -0.024867573752999306,
    0.0010539216455072165,
    -0.01251198723912239,
    -0.020801177248358727,
    -0.006671874783933163,
    0.0034016964491456747,
    0.024014484137296677,
    0.0049443673342466354,
    0.011395860463380814,
    -0.02593393623828888,
    0.04416162520647049,
    0.00728681031614542,
    0.005754802841693163,
    -0.018796415999531746,
    -0.022379394620656967,
    0.012142314575612545,
    0.015227656811475754,
    0.015085475519299507,
    0.0066647655330598354,
    -0.000502967624925077,
    -0.037052541971206665,
    -0.02105710469186306,
    -0.014175512827932835,
    -0.013279767706990242,
    0.012874550186097622,
    0.010756042785942554,
    -0.03725159540772438,
    0.027824953198432922,
    0.013706312514841557,
    0.0051825218833982944,
    0.009341335855424404,
    0.028507424518465996,
    -0.0013738303678110242,
    0.005491767078638077,
    -0.022052377462387085,
    -0.036227889358997345,
    0.010279734618961811,
    0.0016368664801120758,
    0.016009656712412834,
    0.02061634138226509,
    0.03688192367553711,
    0.0032310783863067627,
    0.0046955496072769165,
    -0.015967002138495445,
    -0.021554740145802498,
    -0.05061667412519455,
    -0.0054882122203707695,
    -0.0050794403068721294,
    0.007578283082693815,
    0.022066595032811165,
    -0.012938532046973705,
    0.010812915861606598,
    0.00912806298583746,
    0.02512350119650364,
    -0.005641057621687651,
    0.0035189962945878506,
    0.033753927797079086,
    0.019265616312623024,
    0.001160557847470045,
    0.003049796912819147,
    0.00568015780299902,
    -0.017658963799476624,
    -0.010194425471127033,
    0.030540622770786285,
    -0.011637569405138493,
    0.006039166357368231,
    0.03230367600917816,
    -0.000615824363194406,
    -0.029260987415909767,
    -0.009611480869352818,
    0.025379428640007973,
    -0.00041432626312598586,
    -0.00516474898904562,
    -0.001332064508460462,
    -0.0013587236171588302,
    -0.026005027815699577,
    -0.017587872222065926,
    -0.03799094259738922,
    -0.0010343716712668538,
    -0.007471646647900343,
    -0.0010850238613784313,
    -0.015654202550649643,
    -0.02107132412493229,
    0.016038091853260994,
    -0.034607019275426865,
    -0.003931323066353798,
    -0.024114010855555534,
    -0.026189863681793213,
    -0.01517078373581171,
    -0.001231648726388812,
    0.03400985524058342,
    0.006458602380007505,
    0.00416592275723815,
    0.015910128131508827,
    0.005875657312572002,
    0.010684952139854431,
    0.004972803872078657,
    -0.012682604603469372,
    -0.018426744267344475,
    -0.06159310042858124,
    0.010393479838967323,
    -0.0042512319050729275,
    0.02715669944882393,
    0.02631782740354538,
    0.017531000077724457,
    0.04299573600292206,
    0.003981086891144514,
    0.013727639801800251,
    0.012206296436488628,
    -0.03611414507031441,
    0.014090203680098057,
    0.004546259064227343,
    0.0047915223985910416,
    0.008267863653600216,
    0.025180373340845108,
    -0.006806947290897369,
    -0.0011809965362772346,
    -0.0420573391020298,
    0.011203915812075138,
    -0.009348444640636444,
    0.011267897672951221,
    0.0019301162101328373,
    0.014943293295800686,
    -0.003487005364149809,
    -0.011033297516405582,
    -0.04413319006562233,
    -0.02060212381184101,
    0.002424197504296899,
    -0.024568991735577583,
    -0.026431571692228317,
    -0.0006900253938511014,
    -0.010393479838967323,
    -0.017275072634220123,
    0.0007624492282047868,
    -0.020758524537086487,
    0.017104454338550568,
    0.021554740145802498,
    -0.030682804062962532,
    0.012135205790400505,
    0.013805840164422989,
    -0.004517822526395321,
    0.029659096151590347,
    0.0009286240092478693,
    -0.0046991039998829365,
    -0.02220877632498741,
    0.005317594390362501,
    0.012661277316510677,
    -0.008843699470162392,
    0.014296366833150387,
    -0.02270641177892685,
    -0.011609133332967758,
    0.01197169627994299,
    0.0029627105686813593,
    0.009234699420630932,
    -0.0019407797371968627,
    -0.017559435218572617,
    -0.032246802002191544,
    0.014929074794054031,
    -0.005953857209533453,
    -0.0074432105757296085,
    -0.006344857160001993,
    -0.020374633371829987,
    -0.004119713790714741,
    0.026204081252217293,
    -0.003956204745918512,
    0.03628476336598396,
    -0.012504877522587776,
    0.012078332714736462,
    -0.015185002237558365,
    0.000688692438416183,
    -0.012533314526081085,
    -0.0002812531020026654,
    0.023403102532029152,
    -0.002923610620200634,
    0.03924214094877243,
    0.04077770188450813,
    0.06079688295722008,
    -0.0036327417474240065,
    0.0025290565099567175,
    0.014289258047938347,
    0.021298814564943314,
    0.0008673081756569445,
    -0.009554607793688774,
    0.03759283199906349,
    -0.0009774989448487759,
    -0.014324802905321121,
    0.007414774037897587,
    0.019279833883047104,
    0.01615183800458908,
    -0.010692061856389046,
    0.027853388339281082,
    0.02508084662258625,
    -0.0021789341699332,
    -0.02348841167986393,
    -0.018881725147366524,
    -0.04657871648669243,
    -0.011985914781689644,
    -0.01291720476001501,
    -0.007183728739619255,
    0.006835383828729391,
    -0.04276824742555618,
    -0.028080878779292107,
    0.011950368992984295,
    0.008104355074465275,
    0.02311873994767666,
    0.00218071136623621,
    0.03776345029473305,
    0.002091847825795412,
    0.0023868747521191835,
    -0.0021967068314552307,
    0.03483450785279274,
    -0.0016653027851134539,
    -0.0037891415413469076,
    -0.04407631605863571,
    0.004013077821582556,
    0.02877756953239441,
    0.02185332216322422,
    0.01858314499258995,
    0.011616242118179798,
    0.000624266394879669,
    0.022166121751070023,
    -0.0027192244306206703,
    -0.006575901992619038,
    0.0026410245336592197,
    0.028649605810642242,
    -0.015881692990660667,
    -0.010933770798146725,
    -0.029317859560251236,
    -0.03264491260051727,
    -0.03531792759895325,
    0.022436266764998436,
    -0.010592534206807613,
    0.01013044361025095,
    0.013421949930489063,
    -0.018355652689933777,
    0.02021823264658451,
    0.02677280828356743,
    0.009184936061501503,
    0.04561188071966171,
    0.013578349724411964,
    0.014182621613144875,
    0.004752422217279673,
    0.030057204887270927,
    -0.02307608537375927,
    -0.02382964827120304,
    -0.023374665528535843,
    0.0037535959854722023,
    0.007855537347495556,
    0.011104388162493706,
    -0.010365043766796589,
    -0.011282115243375301,
    -0.007276146672666073,
    -0.013180240988731384,
    -0.01582481898367405,
    -0.032588038593530655,
    0.016365110874176025,
    0.0020989568438380957,
    0.000394109811168164,
    -0.029858149588108063,
    0.0026428017299622297,
    0.010471680201590061,
    0.0030888968612998724,
    -0.010649407282471657,
    0.006497702095657587,
    0.06074000895023346,
    -0.01072760671377182,
    -0.01276791375130415,
    0.008182555437088013,
    0.0057299211621284485,
    0.02948847785592079,
    -0.009597262367606163,
    -0.009263135492801666,
    -0.013393512926995754,
    -0.020431505516171455,
    -0.012938532046973705,
    -0.006551020313054323,
    -0.009177826344966888,
    -5.82611610298045e-05,
    -0.011644679121673107,
    0.0031902012415230274,
    0.03597196191549301,
    -0.025251464918255806,
    -0.005992957390844822,
    -0.009405317716300488,
    -0.015910128131508827,
    0.04217108339071274,
    -0.021313032135367393,
    -0.010805807076394558,
    -0.03491981700062752,
    -0.006639883853495121,
    -0.01012333482503891,
    -0.02960222400724888,
    -0.009838971309363842,
    0.011609133332967758,
    -0.02587706409394741,
    -0.002937828656286001,
    0.009661244228482246,
    -0.0040059685707092285,
    -0.016720565035939217,
    -0.0027725426480174065,
    0.0051434217020869255,
    -0.017531000077724457,
    0.007514301221817732,
    0.026132991537451744,
    0.023587938398122787,
    -0.014424330554902554,
    -0.0006162686622701585,
    -0.034635454416275024,
    -0.03153589367866516,
    0.0020616340916603804,
    0.024426810443401337,
    -0.010279734618961811,
    -0.017502563074231148,
    0.05670205131173134,
    0.004023740999400616,
    0.027327315881848335,
    -0.00972522608935833,
    -0.005907648243010044,
    0.0014538075774908066,
    0.02307608537375927,
    0.007585391867905855,
    -0.001965661533176899,
    0.01572529226541519,
    0.021625831723213196,
    -0.05496743321418762,
    -0.014516748487949371,
    -0.0008490911568515003,
    0.021185068413615227,
    -0.019549978896975517,
    0.0037926959339529276,
    -0.0064799296669662,
    0.045953113585710526,
    0.0076493737287819386,
    -0.02786760777235031,
    -0.00370383239351213,
    0.03838904947042465,
    0.014203948900103569,
    -0.0166636910289526,
    0.023602157831192017,
    -0.0152134383097291,
    0.01579638384282589,
    -0.017630526795983315,
    -0.0036718416959047318,
    0.01481532957404852,
    -0.02063056081533432,
    0.0036789507139474154,
    0.0017132890643551946,
    0.009049863554537296,
    -0.01500016637146473,
    0.01699071004986763,
    -0.0038602324202656746,
    -0.033412691205739975,
    -0.019962307065725327,
    0.03838904947042465,
    0.013777404092252254,
    -0.005989402998238802,
    0.0304268766194582,
    0.018113944679498672,
    -0.006490593310445547,
    0.010955097153782845,
    -0.009952716529369354,
    -0.02068743295967579,
    -0.007962173782289028,
    -0.009298681281507015,
    -0.02758324332535267,
    0.004866167437285185,
    -0.03173494711518288,
    0.03511887043714523,
    0.0206447783857584,
    -0.008843699470162392,
    -0.01664947345852852,
    -0.013030949980020523,
    -0.027227789163589478,
    -0.029886586591601372,
    -0.02994345873594284,
    0.03281553089618683,
    0.027000298723578453,
    0.01052144356071949,
    0.010812915861606598,
    0.01501438394188881,
    0.0031475466676056385,
    0.021369904279708862,
    -0.01858314499258995,
    0.031080912798643112,
    0.007393446750938892,
    0.030284695327281952,
    0.010898225009441376,
    -0.001675077830441296,
    -0.03309989348053932,
    0.007663591764867306,
    0.01663525588810444,
    0.01694805547595024,
    -0.0037891415413469076,
    0.02671593613922596,
    0.012184969149529934,
    0.020815396681427956,
    -0.002637469908222556,
    -0.01737459935247898,
    -0.009199153631925583,
    0.0077915554866194725,
    0.011068843305110931,
    -0.03082498535513878,
    -0.012149423360824585,
    0.002824083436280489,
    0.009696790017187595,
    -0.0026125882286578417,
    0.015341402031481266,
    0.009860298596322536,
    -0.02181066758930683,
    -0.011552260257303715,
    -0.012348477728664875,
    -0.019109215587377548,
    -0.004226350225508213,
    -0.009910061955451965,
    0.021256159991025925,
    0.023004993796348572,
    0.022109249606728554,
    0.025009755045175552,
    0.00027569913072511554,
    -0.00788397341966629,
    -0.012035678140819073,
    0.01900968886911869,
    -0.04074926674365997,
    -0.009803426451981068,
    0.0032168603502213955,
    -0.007457428611814976,
    0.01072760671377182,
    0.011033297516405582,
    0.04242701083421707,
    -0.01133187860250473,
    -0.014012003317475319,
    -0.003952650353312492,
    0.00789108220487833,
    -0.026403136551380157,
    0.02227986790239811,
    -0.007151737809181213,
    -0.019137652590870857,
    0.01116126123815775,
    0.011907714419066906,
    0.017886454239487648,
    0.0006109368405304849,
    -0.006423057056963444,
    0.005861439276486635,
    -0.011395860463380814,
    0.005936084780842066,
    -0.007777337450534105,
    -0.026019245386123657,
    -0.009604372084140778,
    0.0011694441782310605,
    0.003495891811326146,
    -0.02963065914809704,
    0.021142413839697838,
    0.17164170742034912,
    0.02627517282962799,
    0.009846081025898457,
    0.021696923300623894,
    -0.0008348730043508112,
    0.018042853102087975,
    0.01986277848482132,
    0.02506662905216217,
    -0.021128196269273758,
    0.05380154401063919,
    -0.016066528856754303,
    -0.0058294483460485935,
    -0.01519922073930502,
    0.009817644022405148,
    0.01986277848482132,
    -0.014943293295800686,
    -0.015924347564578056,
    -0.039469629526138306,
    -0.008168336935341358,
    0.03762127086520195,
    0.029858149588108063,
    -0.0246258657425642,
    -0.00888635404407978,
    -0.02631782740354538,
    0.02786760777235031,
    -0.02876335196197033,
    0.0010521443327888846,
    0.004713322501629591,
    0.006021393463015556,
    0.04080614075064659,
    -0.03238898515701294,
    0.016379328444600105,
    0.021170850843191147,
    -0.019222961738705635,
    -0.049194857478141785,
    -0.015696857124567032,
    -0.01377029437571764,
    -0.015924347564578056,
    0.008040373213589191,
    0.03602883592247963,
    -0.0007651150808669627,
    -0.03327051177620888,
    -0.006135139148682356,
    -0.02869226038455963,
    -0.01155936997383833,
    -0.003007142338901758,
    -0.022009722888469696,
    -0.012064114212989807,
    -0.005459776148200035,
    0.012689714320003986,
    -0.015995437279343605,
    0.0013080713106319308,
    0.022080812603235245,
    0.0032044192776083946,
    0.01895281672477722,
    0.009618589654564857,
    0.00707709277048707,
    0.01586747355759144,
    0.00515764020383358,
    0.007748900912702084,
    -0.0044538406655192375,
    0.019578415900468826,
    -0.0073436833918094635,
    -0.01335796806961298,
    -0.006785620003938675,
    0.008296300657093525,
    -0.020360415801405907,
    -0.004468059167265892,
    -0.003096005879342556,
    -0.013884039595723152,
    -0.025763317942619324,
    -0.027796516194939613,
    -0.020374633371829987,
    -0.006298647727817297,
    -0.010990642942488194,
    -0.011502496898174286,
    0.03273022174835205,
    0.007947955280542374,
    0.006607892923057079,
    0.011395860463380814,
    -0.007756010163575411,
    0.028080878779292107,
    0.011609133332967758,
    0.0020047614816576242,
    0.007763118948787451,
    -0.01662103645503521,
    0.03344113007187843,
    -0.028635388240218163,
    0.0033199419267475605,
    -0.006309311371296644,
    -0.01940779760479927,
    -0.019294053316116333,
    0.005633948836475611,
    -0.002324670320376754,
    -0.0020722977351397276,
    -0.016933836042881012,
    0.00463867699727416,
    0.005054558161646128,
    -0.008601990528404713,
    -0.007997718639671803,
    -0.030512185767292976,
    0.05863571912050247,
    0.03352643921971321,
    0.0125759681686759,
    -0.0031617649365216494,
    0.003970423247665167,
    -0.03190556541085243,
    0.0255358275026083,
    -0.006060493644326925,
    -0.02179645001888275,
    -0.022891249507665634,
    -0.010493007488548756,
    0.006195566151291132,
    0.006579456850886345,
    -0.006337747909128666,
    -0.000493636995088309,
    -0.02272063121199608,
    0.02107132412493229,
    0.01898125186562538,
    -0.008466918021440506,
    -0.03474919870495796,
    -0.007116192486137152,
    -0.00568371219560504,
    -0.0047950767911970615,
    -0.021199285984039307,
    -0.012938532046973705,
    -0.05746982991695404,
    0.009419535286724567,
    -0.01317313127219677,
    -0.02067321538925171,
    0.00277787446975708,
    -0.006988229230046272,
    0.01416129432618618,
    -0.026815462857484818,
    0.007428992073982954,
    -0.010407698340713978,
    -0.00025770426145754755,
    -0.029687533155083656,
    -0.010962206870317459,
    0.014331912621855736,
    -0.013628113083541393,
    0.003814023220911622,
    0.007393446750938892,
    -0.002008316107094288,
    0.027696989476680756,
    -0.03031313233077526,
    0.00016984045214485377,
    0.041033629328012466,
    -0.014587839134037495,
    -0.03039844147861004,
    -0.01579638384282589,
    0.026033462956547737,
    0.021241940557956696,
    -0.0046955496072769165,
    0.014786893501877785,
    -0.013805840164422989,
    -0.020161360502243042,
    -0.010891116224229336,
    0.01616605557501316,
    0.005395794287323952,
    -0.03978243097662926,
    -0.02145521342754364,
    -0.006991783622652292,
    -0.002868515206500888,
    -0.01012333482503891,
    -0.02058790624141693,
    -0.18028636276721954,
    0.011040406301617622,
    0.004059286788105965,
    -0.037820324301719666,
    0.0010068239644169807,
    -0.01664947345852852,
    -0.022535795345902443,
    0.022521575912833214,
    -0.03173494711518288,
    -0.003934877458959818,
    0.02552160993218422,
    -0.010151770897209644,
    0.00012063226313330233,
    -0.005264276172965765,
    -0.01197169627994299,
    0.0023975383955985308,
    0.0011996577959507704,
    0.014538075774908066,
    0.024611646309494972,
    0.007386337500065565,
    0.0169764906167984,
    -0.03153589367866516,
    0.011175478808581829,
    0.023786993697285652,
    -0.02503819204866886,
    -0.01236269623041153,
    0.003513664472848177,
    0.002593038138002157,
    0.0069029200822114944,
    -0.017090236768126488,
    -0.02432728372514248,
    0.013791621662676334,
    0.01738881878554821,
    0.020403070375323296,
    -0.010208643972873688,
    0.011097279377281666,
    0.009554607793688774,
    -0.012270278297364712,
    -0.021554740145802498,
    0.025663791224360466,
    0.0331852026283741,
    0.019279833883047104,
    0.010542770847678185,
    -0.014275039546191692,
    -0.0083318455144763,
    0.0031279968097805977,
    -0.004748867824673653,
    -0.02148365043103695,
    -0.0008397604688070714,
    -0.019734814763069153,
    0.04009523242712021,
    -0.004930149298161268,
    0.005459776148200035,
    0.000902853615116328,
    0.005569966975599527,
    0.010791588574647903,
    0.011993023566901684,
    0.012469332665205002,
    0.011182588525116444,
    -0.022066595032811165,
    0.0012280942173674703,
    0.0010086011607199907,
    0.005107876379042864,
    -0.003049796912819147,
    -0.014417220838367939,
    -0.041943591088056564,
    -0.022948121652007103,
    0.024497902020812035,
    -0.0076920283026993275,
    0.017587872222065926,
    0.017602089792490005,
    -0.0058330027386546135,
    -0.010016698390245438,
    -0.006017839070409536,
    0.029829714447259903,
    -0.009995371103286743,
    -0.03426578268408775,
    0.03000033274292946,
    0.007436101324856281,
    -0.02502397447824478,
    -0.025322554633021355,
    0.05377310886979103,
    -0.030512185767292976,
    0.00832473672926426,
    -0.008850809186697006,
    0.0044502862729132175,
    -0.001593323308043182,
    -0.01950732432305813,
    -0.016933836042881012,
    -0.005694375839084387,
    0.005239394493401051,
    -0.032929275184869766,
    0.0011658896692097187,
    -0.025350991636514664,
    -0.009227590635418892,
    0.028535861521959305,
    -0.014417220838367939,
    -0.008040373213589191,
    -0.018128162249922752,
    -0.0363985076546669,
    -0.014381675980985165,
    0.008346064016222954,
    -0.03309989348053932,
    0.007464537397027016,
    0.01011622603982687,
    0.01212098728865385,
    -0.02220877632498741,
    0.008047481998801231,
    0.025365209206938744,
    -0.014260821044445038,
    0.024042919278144836,
    0.014111530967056751,
    0.03443640097975731,
    0.01824190840125084,
    0.00952617172151804,
    0.0005105210584588349,
    -0.00037811437505297363,
    0.005086549092084169,
    0.011900605633854866,
    0.002635692711919546,
    0.031763385981321335,
    0.01216364186257124,
    0.013030949980020523,
    0.0003123553469777107,
    -0.0042547862976789474,
    -0.055706776678562164,
    -0.09770724177360535,
    -0.0177442729473114,
    0.004773749504238367,
    0.010692061856389046,
    -0.02382964827120304,
    -0.0259197186678648,
    -0.036256324499845505,
    0.0007553400937467813,
    -0.03568759933114052,
    -0.005395794287323952,
    0.007955064065754414,
    0.0026161426212638617,
    -0.022123467177152634,
    -0.0019123434321954846,
    0.008822372183203697,
    -0.016023874282836914,
    -0.026417354121804237,
    0.009782099165022373,
    -0.00656523834913969,
    0.009647026658058167,
    -0.00872284546494484,
    -0.011985914781689644,
    -0.009647026658058167,
    0.012625732459127903,
    -0.013670767657458782,
    0.022052377462387085,
    -0.04123268276453018,
    0.03531792759895325,
    0.024483682587742805,
    0.029687533155083656,
    0.004119713790714741,
    -0.02715669944882393,
    0.003657623426988721,
    0.014125748537480831,
    -0.023260921239852905,
    -0.0155973294749856,
    -0.01703336462378502,
    -0.010706279426813126,
    0.04333697259426117,
    -0.0038780050817877054,
    -0.003757150610908866,
    -0.002338888356462121,
    0.009170717559754848,
    -0.026616407558321953,
    -0.025308337062597275,
    0.020843831822276115,
    -0.013322422280907631,
    0.022891249507665634,
    0.013841385021805763,
    -0.028109315782785416,
    -0.009156499058008194,
    -0.012867441400885582,
    -0.018824853003025055,
    0.014985947869718075,
    -0.0007931071450002491,
    -0.012455114163458347,
    -0.0019034571014344692,
    0.01455940306186676,
    -0.01662103645503521,
    0.020033396780490875,
    0.0021042886655777693,
    0.0028738470282405615,
    -0.013855603523552418,
    0.0010237080277875066,
    -3.648959318525158e-05,
    -0.0015444484306499362,
    0.006000066641718149,
    -0.002006538910791278,
    0.009149390272796154,
    -0.0202608872205019,
    -0.025777537375688553,
    0.01744569092988968,
    0.001117014791816473,
    0.011040406301617622,
    -0.024455247446894646,
    -0.0010361488675698638,
    -0.006224002689123154,
    0.000889524060767144,
    0.008936118334531784,
    -0.007254819851368666,
    -0.012135205790400505,
    0.004098386503756046,
    0.015085475519299507,
    -0.01396934874355793,
    0.0031173331663012505,
    -0.005196739919483662,
    0.01696227304637432,
    -0.0073081376031041145,
    0.012668387033045292,
    -0.03995304927229881,
    0.02869226038455963,
    -0.025649573653936386,
    0.05493899807333946,
    0.015967002138495445,
    -0.027028735727071762,
    0.015241875313222408,
    0.010983534157276154,
    -0.01495751179754734,
    -0.016777437180280685,
    0.014943293295800686,
    -0.02678702585399151,
    0.006849601864814758,
    -0.08138478547334671,
    0.010208643972873688,
    -0.009192044846713543,
    -0.01153093297034502,
    -0.0011934373760595918,
    -0.0235452838242054,
    -0.014687366783618927,
    -0.010365043766796589,
    0.0022055930458009243,
    0.016365110874176025,
    -0.022493140771985054,
    -0.009398207999765873,
    -0.0034745645243674517,
    0.0022766839247196913,
    -0.006945574656128883,
    -0.02301921136677265,
    0.036995671689510345,
    0.003856677794829011,
    0.05542241409420967,
    0.0016884072683751583,
    -0.013393512926995754,
    -0.020118705928325653,
    0.021725358441472054,
    0.017900671809911728,
    -0.019933870062232018,
    0.01495751179754734,
    -0.009021426551043987,
    0.014630493707954884,
    0.005171858239918947,
    -0.010436134412884712,
    0.013244222849607468,
    -0.005026122089475393,
    -0.017687398940324783,
    0.02267797663807869,
    0.0043507590889930725,
    0.006842492613941431,
    0.013706312514841557,
    0.023346230387687683,
    0.028422115370631218,
    0.008246536366641521,
    0.011431406252086163,
    -0.021199285984039307,
    0.01979168877005577,
    -0.003814023220911622,
    -0.04100519418716431,
    -0.008310518227517605,
    -0.0008601990994066,
    -0.006689647678285837,
    0.030654367059469223,
    0.015995437279343605,
    0.057725757360458374,
    -0.004087722860276699,
    -0.02178223244845867,
    -0.028806006535887718,
    -0.0021327249705791473,
    -0.027739644050598145,
    0.016450418159365654,
    -0.006024948321282864,
    -0.015981219708919525,
    0.019919652491807938,
    0.03881559520959854,
    0.008573554456233978,
    0.03565916419029236,
    -0.011737097054719925,
    0.0012876327382400632,
    -0.009597262367606163,
    -0.033384256064891815,
    -0.013706312514841557,
    0.005605512298643589,
    -0.013898258097469807,
    0.002239361172541976,
    -0.032218366861343384,
    0.007940846495330334,
    0.005498875863850117,
    -0.0015799937536939979,
    -0.027824953198432922,
    -0.003941986709833145,
    -0.0011889941524714231,
    -0.022080812603235245,
    0.010109116323292255,
    0.01212809607386589,
    0.002166493097320199,
    -0.008402937091886997,
    0.017175545915961266,
    0.017474127933382988,
    0.00568726658821106,
    -0.03253116458654404,
    0.0012600850313901901,
    -0.0018430298659950495,
    -0.00759961036965251,
    -0.023388884961605072,
    0.014246603474020958,
    0.005296267103403807,
    0.017203981056809425,
    0.027441062033176422,
    0.004457395523786545,
    -0.008310518227517605,
    -0.005374467000365257,
    0.011381642892956734,
    0.021113978698849678,
    0.008943227119743824,
    0.0028738470282405615,
    -0.0015026824548840523,
    -0.004421849735081196,
    0.0087157366797328,
    -0.013507258147001266,
    0.011701551266014576,
    -0.04979202151298523,
    -0.009341335855424404,
    0.010585425421595573,
    -0.00031902012415230274,
    0.0022162566892802715,
    -0.0010103784734383225,
    0.01255464181303978,
    -0.018014417961239815,
    0.023275138810276985,
    -0.006575901992619038,
    0.011431406252086163,
    -0.024114010855555534,
    -0.010137553326785564,
    0.007329464890062809,
    -0.00907829962670803,
    0.03810468688607216,
    0.0025486063677817583,
    -0.0069633470848202705,
    -0.004411186091601849,
    -1.049006368702976e-05,
    -0.006327084265649319,
    -0.009597262367606163,
    -0.015682637691497803,
    0.005662384908646345,
    -0.012583077885210514,
    -0.01979168877005577,
    -0.016109183430671692,
    -0.017474127933382988,
    -0.021625831723213196,
    0.01986277848482132,
    -0.012071223929524422,
    -0.016862746328115463,
    0.09361241012811661,
    0.0006602561334148049,
    -0.01740303635597229,
    0.017289290204644203,
    -0.013606785796582699,
    0.03153589367866516,
    0.00029524913406930864,
    0.00588276656344533,
    0.008559336885809898,
    -0.002939606085419655,
    -0.00044653931399807334,
    0.015924347564578056,
    -0.02708560787141323,
    0.010741825215518475,
    -0.026957644149661064,
    0.021313032135367393,
    -0.004283222835510969,
    0.02310452051460743,
    0.005331812426447868,
    0.00404151389375329,
    0.012042786926031113,
    0.0003630075661931187,
    0.017658963799476624,
    0.007357901427894831,
    -0.053175944834947586,
    -0.022805940359830856,
    0.029232550412416458,
    0.012334260158240795,
    0.0018856844399124384,
    -0.04581093415617943,
    0.004773749504238367,
    -0.0017559436382725835,
    -0.03437952697277069,
    -0.01175842434167862,
    -0.011260787956416607,
    0.012305823154747486,
    -0.006611447781324387,
    -0.006255993619561195,
    0.011815296486020088,
    -0.014616275206208229,
    -0.008580664172768593,
    0.0022980112116783857,
    -0.018099727109074593,
    -0.016919618472456932,
    0.030284695327281952,
    0.0032737329602241516,
    -0.008694409392774105,
    -0.018426744267344475,
    -0.01071338914334774
  ]
}
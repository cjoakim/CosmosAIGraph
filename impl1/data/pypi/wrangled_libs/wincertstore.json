{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: python software foundation license",
    "natural language :: english",
    "operating system :: microsoft :: windows",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3"
  ],
  "description": "============\nwincertstore\n============\n\n.. warning::\n\n   the package is deprecated. since python 2.7.9\n   ``ssl.create_default_context()`` automatically loads certificates from\n   windows' cert store.\n\nwincertstore provides an interface to access windows' ca and crl certificates.\nit uses ctypes and windows's sytem cert store api through crypt32.dll.\n\n\nexample\n=======\n\n::\n\n    import wincertstore\n    for storename in (\"ca\", \"root\"):\n        with wincertstore.certsystemstore(storename) as store:\n            for cert in store.itercerts(usage=wincertstore.server_auth):\n                print(cert.get_pem().decode(\"ascii\"))\n                print(cert.get_name())\n                print(cert.enhanced_keyusage_names())\n\n``server_auth`` is the default enhanced key usage. in order to get all\ncertificates for any usage, use ``none``. the module offers more oids like\n``client_auth``, too.\n\nfor python versions without the with statement::\n\n    for storename in (\"ca\", \"root\"):\n        store = wincertstore.certsystemstore(storename)\n        try:\n            for cert in store.itercerts():\n                print(cert.get_pem().decode(\"ascii\")\n        finally:\n            store.close()\n\nsee `certopensystemstore`_\n\ncertfile helper::\n\n    import wincertstore\n    import atexit\n    import ssl\n\n    certfile = wincertstore.certfile()\n    certfile.addstore(\"ca\")\n    certfile.addstore(\"root\")\n    atexit.register(certfile.close) # cleanup and remove files on shutdown)\n\n    ssl_sock = ssl.wrap_socket(sock,\n                               ca_certs=certfile.name,\n                               cert_reqs=ssl.cert_required)\n\n\nrequirements\n============\n\n- python 2.3 to 3.3\n\n- windows xp, windows server 2003 or newer\n\n- ctypes 1.0.2 (python 2.3 and 2.4)\n  from http://sourceforge.net/projects/ctypes/\n\n\nlicense\n=======\n\ncopyright (c) 2013, 2014 by christian heimes <christian@python.org>\n\nlicensed to psf under a contributor agreement.\n\nsee http://www.python.org/psf/license for licensing details.\n\n\nacknowledgements\n================\n\nhttp://fixunix.com/openssl/254866-re-can-openssl-use-windows-certificate-store.html\n\nhttp://bugs.python.org/issue17134\n\n\nreferences\n==========\n\n.. _certopensystemstore: http://msdn.microsoft.com/en-us/library/windows/desktop/aa376560%28v=vs.85%29.aspx\n\nchangelog\n=========\n\nwincertstore 0.2\n----------------\n\n*release date: 26-feb-2013*\n\n- by default certsystemstore.itercerts() is now limited to return only\n  certs that are suitable for server_auth -- that is to validate a tls/ssl's\n  server cert from the perspective of a client.\n\n- add cert_context.get_name() to get a human readable name of a certificate.\n\n- add cert_context.enhanced_keyusage() to get enhanced key usage and trust\n  settings from registry. the method returns either ``true`` or a frozenset\n  of oids. true means that the certificate is valid for any purpose.\n\n- cert_context.enhanced_keyusage_names() maps oids to human readable names.\n\n- add commin oids for enhanced key usages like server_auth and client_auth.\n\n- add support for universal wheels.\n\n- add tox for testing python 2.6 to 3.3. python 2.4 and 2.5 are tested\n  manually.\n\n- use pypi.python.org:443 for tls tests.\n\n\nwincertstore 0.1\n----------------\n\n*release date: 22-mar-2013*\n\n- initial release\n\n\n",
  "docs_url": null,
  "keywords": "windows cert ssl ca crl",
  "license": "psfl",
  "name": "wincertstore",
  "package_url": "https://pypi.org/project/wincertstore/",
  "project_url": "https://pypi.org/project/wincertstore/",
  "project_urls": {
    "Download": "http://pypi.python.org/pypi/wincertstore",
    "Homepage": "https://github.com/tiran/wincertstore"
  },
  "release_url": "https://pypi.org/project/wincertstore/0.2.1/",
  "requires_dist": [],
  "requires_python": ">=2.7,!=3.0.*,!=3.1.*,<3.4.*",
  "summary": "python module to extract ca and crl certs from windows' cert store (ctypes based).",
  "version": "0.2.1",
  "releases": [],
  "developers": [
    "christian@python.org",
    "christian_heimes"
  ],
  "kwds": "_certopensystemstore certopensystemstore cert_context certfile ca_certs",
  "license_kwds": "psfl",
  "libtype": "pypi",
  "id": "pypi_wincertstore",
  "homepage": "https://github.com/tiran/wincertstore",
  "release_count": 3,
  "dependency_ids": []
}
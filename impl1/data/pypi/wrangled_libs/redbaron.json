{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: gnu lesser general public license v3 (lgplv3)",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "topic :: software development",
    "topic :: software development :: code generators",
    "topic :: software development :: libraries"
  ],
  "description": "introduction\n============\n\n[![build status](https://travis-ci.org/pycqa/redbaron.svg?branch=master)](https://travis-ci.org/pycqa/redbaron) [![latest version](https://img.shields.io/pypi/v/redbaron.svg)](https://pypi.python.org/pypi/redbaron/) [![supported python versions](https://img.shields.io/pypi/pyversions/redbaron.svg)](https://pypi.python.org/pypi/redbaron/) [![development status](https://img.shields.io/pypi/status/redbaron.svg)](https://pypi.python.org/pypi/redbaron/) [![wheel status](https://img.shields.io/pypi/wheel/redbaron.svg)](https://pypi.python.org/pypi/redbaron/) [![download format](https://img.shields.io/pypi/format/redbaron.svg)](https://pypi.python.org/pypi/redbaron/) [![license](https://img.shields.io/pypi/l/redbaron.svg)](https://pypi.python.org/pypi/redbaron/)\n[![backers on open collective](https://opencollective.com/redbaron/backers/badge.svg)](#backers) \n[![sponsors on open collective](https://opencollective.com/redbaron/sponsors/badge.svg)](#sponsors) \n\nredbaron is a python library and tool powerful enough to be used into ipython\nsolely that intent to make the process of **writing code that modify source\ncode** as easy and as simple as possible. that include writing custom\nrefactoring, generic refactoring, tools, ide or directly modifying you source\ncode into ipython with a higher and more powerful abstraction than the\nadvanced texts modification tools that you find in advanced text editors and\nide.\n\nredbaron guaranteed you that **it will only modify your code where you ask him\nto**. to achieve this, it is based on [baron](https://github.com/pycqa/baron)\na lossless [ast](https://en.wikipedia.org/wiki/abstract_syntax_tree) for\npython that guarantees the operation <code>ast_to_code(code_to_ast(source_code)) == source_code</code>.\n(baron's ast is called an fst, a full syntax tree).\n\nredbaron api and feel is heavily inspired by beautifulsoup. it tries to be\nsimple and intuitive and that once you've get the basics principles, you are\ngood without reading the doc for 80% of your operations.\n\n**for now, redbaron can be considered in alpha, the core is quite stable but it\nis not battle tested yet and is still a bit rough.** feedback and contribution\nare very welcome.\n\nthe public documented api on the other side is guaranteed to be\nretro-compatible and won't break until 2.0 (if breaking is needed at that\npoint).\nthere might be the only exception that if you directly call specific nodes\nconstructors with fst that this api change, but this is not documented and\nsimply horribly unpracticable, so i'm expecting no one to do that.\n\nsupport\n=======\n\nredbaron is support python python 2 and up to python 3.7 grammar.\n\nroadmap\n=======\n\ncurrent roadmap is as boring as needed:\n\n* bug fixes\n* new small features (walker pattern, maybe code generation) and performance improvement.\n\ninstallation\n============\n\n    pip install redbaron[pygments]\n\nor if you don't want to have syntax highlight in your shell or don't need it:\n\n    pip install redbaron\n\nrunning tests\n=============\n\n    pip install pytest\n    py.test tests\n\ncommunity\n=========\n\nyou can reach us on [irc.freenode.net#baron](https://webchat.freenode.net/?channels=%23baron) or [irc.freenode.net##python-code-quality](https://webchat.freenode.net/?channels=%23%23python-code-quality).\n\nfinancial support\n=================\n\nbaron and redbaron are a very advanced piece of engineering that requires a lot\nof time of concentration to work on. until the end of 2018, the development\nhas been a full volunteer work mostly done by [bram](https://github.com/psycojoker),\nbut now, to reach the next level and bring those projects to the stability and\nquality you expect, we need your support.\n\nyou can join our contributors and sponsors on our transparent\n[opencollective](https://opencollective.com/redbaron), every contribution will\ncount and will be mainly used to work on the projects stability and quality but\nalso on continuing, on the side, the r&d side of those projects.\n\n\n## backers\n\nthank you to all our backers! \ud83d\ude4f [[become a backer](https://opencollective.com/redbaron#backer)]\n\n<a href=\"https://opencollective.com/redbaron#backers\" target=\"_blank\"><img src=\"https://opencollective.com/redbaron/backers.svg?width=890\"></a>\n\n\n## sponsors\n\nsupport this project by becoming a sponsor. your logo will show up here with a link to your website. [[become a sponsor](https://opencollective.com/redbaron#sponsor)]\n\n<a href=\"https://opencollective.com/redbaron/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/redbaron/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/redbaron/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/redbaron/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/redbaron/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/redbaron/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/redbaron/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/redbaron/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/redbaron/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/redbaron/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/redbaron/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/redbaron/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/redbaron/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/redbaron/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/redbaron/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/redbaron/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/redbaron/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/redbaron/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/redbaron/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/redbaron/sponsor/9/avatar.svg\"></a>\n\n## contributors\n\nthis project exists thanks to all the people who contribute. \n<a href=\"https://github.com/pycqa/redbaron/contributors\"><img src=\"https://opencollective.com/redbaron/contributors.svg?width=890&button=false\" /></a>\n\ncode of conduct\n===============\n\nas a member of [pycqa](https://github.com/pycqa), redbaron follows its [code of conduct](http://meta.pycqa.org/en/latest/code-of-conduct.html).\n\nlinks\n=====\n\n**redbaron is fully documented, be sure to check the tutorial and documentation**.\n\n* [tutorial](https://redbaron.readthedocs.io/en/latest/tuto.html)\n* [documentation](https://redbaron.readthedocs.io/en/latest/)\n* [baron](https://github.com/pycqa/baron)\n* irc chat: [irc.freenode.net#baron](https://webchat.freenode.net/?channels=%23baron)\n\n\nchangelog\n=========\n\n0.9.2 (2019-03-17)\n------------------\n\n- fix a situation in .help() where some code where colorized twice by hanaasagi https://github.com/pycqa/redbaron/pull/182\n\n0.9.1 (2019-02-01)\n------------------\n\n- fix .names() and variations that didn't handle the case where there was \"()\" on fromimport nodes\n\n0.9 (2019-02-01)\n----------------\n\n- full python 3.7 syntax support\n\n- breaking change: annotations are now member of {def,list,dict}argument to flatten the data structure, typednamenode doesn't exist anymore\n- add support for return annotation by bram\n- add support for variable annotation https://github.com/pycqa/redbaron/pull/177 by scottbelden and additional work by bram\n- add support for raise from by bram\n\n0.8 (2018-10-29)\n----------------\n\n- add support to typed function arguments https://github.com/pycqa/redbaron/pull/168 scott belden and additional work by bram\n- add support to set async attributes to with/for nodes, was missing in previous release\n\n0.7 (2018-08-21)\n----------------\n\n- fix to_python() when strings are indented by stripping whitespace before evaluating by duncf https://github.com/pycqa/redbaron/pull/140\n\npython 3 support (based on work in baron):\n- support ellipsis\n- support matrix operator\n- support f-strings\n- support numeric literals\n- support nonlocal statement\n- support keyword only markers\n- support yield from statement\n- support async/await statements\n\n0.6.3 (2017-01-02)\n-----------------\n\n- fix help() after append\n- fix _synchronise() for base_nodes to avoid recursion in __repr__ function if code run not in the shell\n- add at method\n\n0.6.2 (2016-10-03)\n----------------\n\n- fix some old call to log() weren't lazy, that could cause a crash in some situations by an infinite recursive call and also reduce performances\n- fix in _iter_in_rendering_order method to avoid bug in edge cases (issue #107)\n\n0.6.1 (2016-03-28)\n----------------\n\n- fix setup.py, package weren't pushed on pypi since splitting of redbaron.py\n  into multiple files.\n\n0.6 (2016-03-28)\n----------------\n\nthis release is guaranteed to have a retro-compatible public documented api\nfrom now on until maybe 2.0.\nthere might be the only exception that if you directly call specific nodes\nconstructors with fst that this api change, but this is not documented and\nsimply horribly unpracticable, so i'm expecting no one to do that.\n\nfrom now on the focus will be on moving to a stable 1.0 meaning: bugs fixes and\napi additions for missing needed features and no more big modifications, this\nwill be for other releases, the workload is already big enough.\n\n- big improvement on the proxy list merging algorithm, it is not perfect yet (comments aren't handled yet) but it's really a big move forward\n- possible retrocompatibility breaking change: from now on the node.find(\"name\") to node.name shortcut only works with possible nodes identifiers. for example node.i_dont_exist_as_an_identifier will raise attributeerror\n- new helper method .to_python that wrap ast.literal_eval on compatible nodes https://redbaron.readthedocs.io/en/latest/other.html#to-python\n- breaking: intnode no longer return an int on .value but a .string instead, use .to_python to have an evaluated version\n- fix node.decrease_indentation (that was simply not working)\n- fix code_block_node.value was broken on node with no parent\n- add string representation for path object\n- now redbaron path() class can be compared directly to baron paths\n  without using to_baron_path() helper.\n- fix by novocaine: 'function' was used as a function type detector instead of 'def'\n- add getitem() method with same api on nodelist and proxylist\n- fix: inconsistencies when inserting lines around code blocks\n- inserting a blank lines inserts effectively a \\n in a lineproxylist\n- new helper methods: .next_recursive and .previous_recursive https://redbaron.readthedocs.io/en/latest/other.html\n- fix: doc is tested in ci now, it shouldn't break anymore\n- more rendering test for python3, it shouldn't break anymore\n- pygments is now an optional dependency, \"pip install redbaron\" won't install it, \"pip install redbaron[pygments\"] will\n- new node.next_intuitive and node.previous_intuitive methods for situations where .next/previous doesn't behave the way the user expect it https://redbaron.readthedocs.io/en/latest/other.html#next-intuitive-previous-intuitive\n\n0.5.1 (2015-03-11)\n------------------\n\n- fix whitespace duplication when using .insert()\n- decoratorproxylist of the last method of a function wasn't handling correctly the indentation of its last endl token\n\n0.5 (2015-01-31)\n----------------\n\n- fix index handling in get_absolute_bounding_box_of_attribute method in\n  a lineproxylist\n- pretty rendering of redbaron repr in ipython notebook using _repr_html_, see:\n  https://cloud.githubusercontent.com/assets/41827/5731132/65ff4c92-9b80-11e4-977c-0faebbf63415.png\n- fix: redbaron repr was crashing in bpython and in ipython notebook. the new\n  behavior should be way more stable and never crash.\n- new helpers .names, .modules, .full_path_modules for from_import node https://redbaron.readthedocs.io/en/latest/other.html#index-on-parent-raw\n- add a node.index_on_parent_raw and make node.index_on_parent works has it\n  should be intuitively according to the proxy list api https://redbaron.readthedocs.io/en/latest/other.html#index-on-parent-raw\n- new helper methods: .insert_before and .insert_after https://redbaron.readthedocs.io/en/latest/other.html#insert-before-insert-after\n- fix: some white space bugs in the merging algorithm of line proxy\n- fix: on_attribute and parent were correctly set on newly added elements to\n  the root node\n\n0.4 (2014-12-11)\n----------------\n\n- compatibility with baron upstream (removal of def_argument_node and\n  uniformisation of def_arguments structure)\n- fix: long wasn't supported in redbaron (due to a bug in baron)\n\n0.3 (2014-11-12)\n----------------\n\n- proxy lists, major improvement in the management of list of things\n- .append_value is no more since it is useless now due to proxy lists\n- .index has been renamed to .index_on_parent to be more coherent\n\n0.2 (2014-09-23)\n----------------\n\n- for every nodes in redbaron, the automagic behavior when passing a string to\n  modify an attribute has been done, this is huge improvement\n  https://redbaron.readthedocs.io/en/latest/modifying.html#full-documentations\n- it's now possible to use regex, globs, list/tuple and lambda (callable) in .find and\n  .find_all, see https://redbaron.readthedocs.io/en/latest/querying.html#advanced-querying\n- new method on node: .replace() to replace in place a node\n  https://redbaron.readthedocs.io/en/latest/other.html#replace\n- .map .filter and .apply are now documented https://redbaron.readthedocs.io/en/latest/other.html#map-filter-apply\n- .edit() new helper method to launch a text editor on the selected node and\n  replace the node with the modified code https://redbaron.readthedocs.io/en/latest/other.html#edit\n- .root node attribute (property) that return the root node of the tree in which the\n  node is stored https://redbaron.readthedocs.io/en/latest/other.html#root\n- .index node attribute (property) that returns the index at which the node is\n  store if it's store in a nodelist, none otherwise https://redbaron.readthedocs.io/en/latest/other.html#index\n- setitem (a[x] = b) on nodelist now works as expected (accepting string, fst\n  node and redbaron node)\n- new method to handle indentation: .increase_indentation and .decrease_indentation https://redbaron.readthedocs.io/en/latest/other.html#increase-indentation-and-decrease-indentation\n- various small bugfix\n- we have one new contributor \\o/ https://github.com/ze42\n- to_node has been move to a class method of node: node.from_fst\n- pretty print of nodes when using redbaron in a script\n\n0.1 (2014-06-13)\n----------------\n\n- first release\n",
  "docs_url": null,
  "keywords": "baron fst ast refactoring",
  "license": "lgplv3+",
  "name": "redbaron",
  "package_url": "https://pypi.org/project/redbaron/",
  "project_url": "https://pypi.org/project/redbaron/",
  "project_urls": {
    "Homepage": "https://github.com/PyCQA/redbaron"
  },
  "release_url": "https://pypi.org/project/redbaron/0.9.2/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "abstraction on top of baron, a fst for python to make writing refactoring code a realistic task",
  "version": "0.9.2",
  "releases": [],
  "developers": [
    "cortex@worlddomination.be",
    "laurent_peuch"
  ],
  "kwds": "redbaron pytest python3 pyversions to_baron_path",
  "license_kwds": "lgplv3+",
  "libtype": "pypi",
  "id": "pypi_redbaron",
  "homepage": "https://github.com/pycqa/redbaron",
  "release_count": 15,
  "dependency_ids": []
}
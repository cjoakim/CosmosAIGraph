{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8"
  ],
  "description": ".. image:: https://img.shields.io/pypi/v/backports.unittest_mock.svg\n   :target: https://pypi.org/project/backports.unittest_mock\n\n.. image:: https://img.shields.io/pypi/pyversions/backports.unittest_mock.svg\n\n.. image:: https://github.com/jaraco/backports.unittest_mock/workflows/tests/badge.svg\n   :target: https://github.com/jaraco/backports.unittest_mock/actions?query=workflow%3a%22tests%22\n   :alt: tests\n\n.. image:: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json\n    :target: https://github.com/astral-sh/ruff\n    :alt: ruff\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: code style: black\n\n.. image:: https://readthedocs.org/projects/backportsunittest_mock/badge/?version=latest\n   :target: https://backportsunittest_mock.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://img.shields.io/badge/skeleton-2023-informational\n   :target: https://blog.jaraco.com/skeleton\n\nprovides a function \"install()\" which makes the \"mock\" module\navailable as \"unittest.mock\" on python 3.2 and earlier.\n\nalso advertises a pytest plugin which configures unittest.mock\nautomatically.\n\nusage\n=====\n\nif using pytest, simply require this package in your test environment,\nand `unittest.mock` will be available.\n\notherwise, it must be invoked imperatively::\n\n    import backports.unittest_mock\n    backports.unittest_mock.install()\n\n    import unittest.mock\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "backports.unittest-mock",
  "package_url": "https://pypi.org/project/backports.unittest-mock/",
  "project_url": "https://pypi.org/project/backports.unittest-mock/",
  "project_urls": {
    "Homepage": "https://github.com/jaraco/backports.unittest_mock"
  },
  "release_url": "https://pypi.org/project/backports.unittest-mock/1.5.1/",
  "requires_dist": [
    "mock ; python_version == \"2.6\" or python_version == \"2.7\" or python_version == \"3.2\"",
    "sphinx (>=3.5) ; extra == 'docs'",
    "jaraco.packaging (>=9) ; extra == 'docs'",
    "rst.linker (>=1.9) ; extra == 'docs'",
    "furo ; extra == 'docs'",
    "sphinx-lint ; extra == 'docs'",
    "pytest (>=6) ; extra == 'testing'",
    "pytest-checkdocs (>=2.4) ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pytest-enabler (>=1.3) ; extra == 'testing'",
    "pytest-ruff ; extra == 'testing'",
    "pytest-black (>=0.3.7) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'",
    "pytest-mypy (>=0.9.1) ; (platform_python_implementation != \"PyPy\") and extra == 'testing'"
  ],
  "requires_python": ">=2.6",
  "summary": "make unittest.mock available on older pythons",
  "version": "1.5.1",
  "releases": [],
  "developers": [
    "jaraco@jaraco.com",
    "jason_r"
  ],
  "kwds": "backportsunittest_mock unittest_mock unittest shields mock",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_backports.unittest_mock",
  "homepage": "https://github.com/jaraco/backports.unittest_mock",
  "release_count": 9,
  "dependency_ids": [
    "pypi_furo",
    "pypi_jaraco.packaging",
    "pypi_mock",
    "pypi_pytest",
    "pypi_pytest_black",
    "pypi_pytest_checkdocs",
    "pypi_pytest_cov",
    "pypi_pytest_enabler",
    "pypi_pytest_mypy",
    "pypi_pytest_ruff",
    "pypi_rst.linker",
    "pypi_sphinx",
    "pypi_sphinx_lint"
  ]
}
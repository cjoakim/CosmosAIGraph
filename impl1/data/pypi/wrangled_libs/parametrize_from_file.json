{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3"
  ],
  "description": "*********************\nparametrize from file\n*********************\n\n.. image:: https://img.shields.io/pypi/v/parametrize_from_file.svg\n   :target: https://pypi.python.org/pypi/parametrize_from_file\n\n.. image:: https://img.shields.io/pypi/pyversions/parametrize_from_file.svg\n   :target: https://pypi.python.org/pypi/parametrize_from_file\n\n.. image:: https://img.shields.io/readthedocs/parametrize_from_file.svg\n   :target: https://parametrize-from-file.readthedocs.io/\n\n.. image:: https://img.shields.io/github/actions/workflow/status/kalekundert/parametrize_from_file/test.yml?branch=master\n   :target: https://github.com/kalekundert/parametrize_from_file/actions\n\n.. image:: https://img.shields.io/coveralls/kalekundert/parametrize_from_file.svg\n   :target: https://coveralls.io/github/kalekundert/parametrize_from_file?branch=master\n\n.. image:: https://img.shields.io/github/last-commit/kalekundert/parametrize_from_file?logo=github\n   :target: https://github.com/kalekundert/parametrize_from_file\n\nparametrize from file is a library for reading unit test parameters from config \nfiles.  it works with the pytest_ framework.  below is the basic workflow that \nthis package enables:\n\n- write test cases in a json_, yaml_, toml_, or nestedtext_ file:\n\n  .. code-block:: yaml\n\n    # test_camelot.yml\n    test_str_find:\n    - str: sir lancelot\n      sub: lance\n      loc: 4\n\n    - str: sir robin\n      sub: brave\n      loc: -1\n\n- decorate the corresponding test functions with ``@parametrize_from_file``:\n\n  .. code-block:: py\n\n    # test_camelot.py\n    import parametrize_from_file\n\n    @parametrize_from_file\n    def test_str_find(str, sub, loc):\n        assert str.find(sub) == loc\n\n- run pytest_ as usual::\n\n    ============================= test session starts ==============================\n    platform linux -- python 3.10.0, pytest-7.4.0, pluggy-1.2.0\n    rootdir: /home/arthur/holy_grail\n    collected 2 items\n    \n    test_camelot.py ..                                                       [100%]\n    \n    ============================== 2 passed in 0.09s ===============================\n\nrefer to the `online documentation <https://parametrize-from-file.rtfd.io>`_ \nfor more information.\n\n.. _pytest: https://docs.pytest.org/en/stable/getting-started.html\n.. _json: https://www.json.org/json-en.html\n.. _yaml: https://yaml.org/\n.. _toml: https://toml.io/en/\n.. _nestedtext: https://nestedtext.org/en/latest/\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "parametrize-from-file",
  "package_url": "https://pypi.org/project/parametrize-from-file/",
  "project_url": "https://pypi.org/project/parametrize-from-file/",
  "project_urls": {
    "Bug Tracker": "https://github.com/kalekundert/parametrize_from_file/issues",
    "Continuous Integration": "https://github.com/kalekundert/parametrize_from_file/actions",
    "Documentation": "https://parametrize-from-file.readthedocs.io/en/latest/",
    "Test Coverage": "https://coveralls.io/github/kalekundert/parametrize_from_file",
    "Version Control": "https://github.com/kalekundert/parametrize_from_file"
  },
  "release_url": "https://pypi.org/project/parametrize-from-file/0.19.0/",
  "requires_dist": [
    "toml",
    "pyyaml",
    "nestedtext",
    "tidyexc",
    "pytest",
    "more_itertools~=8.10",
    "decopatch",
    "sphinx ; extra == \"doc\"",
    "sphinx_rtd_theme ; extra == \"doc\"",
    "autoclasstoc ; extra == \"doc\"",
    "sphinx-toolbox ; extra == \"doc\"",
    "pytest ; extra == \"test\"",
    "pytest-cov ; extra == \"test\"",
    "pytest_tmp_files ; extra == \"test\"",
    "coveralls ; extra == \"test\"",
    "numpy ; extra == \"test\""
  ],
  "requires_python": "~=3.7",
  "summary": "parametrize test functions with values read from config files.",
  "version": "0.19.0",
  "releases": [],
  "developers": [
    "kale@thekunderts.net"
  ],
  "kwds": "parametrize_from_file parametrize pypi pytest pytest_",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_parametrize_from_file",
  "homepage": "",
  "release_count": 28,
  "dependency_ids": [
    "pypi_autoclasstoc",
    "pypi_coveralls",
    "pypi_decopatch",
    "pypi_more_itertools",
    "pypi_nestedtext",
    "pypi_numpy",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_tmp_files",
    "pypi_pyyaml",
    "pypi_sphinx",
    "pypi_sphinx_toolbox",
    "pypi_sphinx_rtd_theme",
    "pypi_tidyexc",
    "pypi_toml"
  ]
}
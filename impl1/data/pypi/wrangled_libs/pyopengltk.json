{
  "classifiers": [
    "environment :: win32 (ms windows)",
    "environment :: x11 applications",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "topic :: multimedia :: graphics",
    "topic :: multimedia :: graphics :: 3d rendering",
    "topic :: scientific/engineering :: visualization",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# pyopengltk\n\ntkinter - opengl frame using ctypes\n\n* [pyopengltk on github](https://github.com/jonwright/pyopengltk)\n* [pyopengltk on pypi](https://pypi.org/project/pyopengltk/)\n\nan opengl frame for pyopengl-tkinter based on ctypes (no togl compilation)\n\ncollected together by jon wright, jan 2018.\n\n## basic example\n\nthis example creates a window containing an `openglframe`\nfilling the entire window. we configure it to animate\n(constantly redraw) clearing the screen using a green color.\na simple framerate counter is included.\nthe context information is printed to the terminal.\n\n```python\nimport time\nimport tkinter\nfrom opengl import gl\nfrom pyopengltk import openglframe\n\nclass appogl(openglframe):\n\n    def initgl(self):\n        \"\"\"initalize gl states when the frame is created\"\"\"\n        gl.glviewport(0, 0, self.width, self.height)\n        gl.glclearcolor(0.0, 1.0, 0.0, 0.0)    \n        self.start = time.time()\n        self.nframes = 0\n\n    def redraw(self):\n        \"\"\"render a single frame\"\"\"\n        gl.glclear(gl.gl_color_buffer_bit)\n        tm = time.time() - self.start\n        self.nframes += 1\n        print(\"fps\",self.nframes / tm, end=\"\\r\" )\n\n\nif __name__ == '__main__':\n    root = tkinter.tk()\n    app = appogl(root, width=320, height=200)\n    app.pack(fill=tkinter.both, expand=tkinter.yes)\n    app.animate = 1\n    app.after(100, app.printcontext)\n    app.mainloop()\n```\n\nthe repository on github also contains more examples.\n\n## install\n\nfrom pypi:\n\n```\npip install pyopengltk\n```\n\nfrom source:\n\n```\ngit clone https://github.com/jonwright/pyopengltk\ncd pyopengltk\npip install .\n```\n\n## attributions\n\nbased on the work of others.\n\n### c + tcl/tk example:\n\n* project url : http://github.com/codeplea/opengl-tcltk/ (zlib license)\n* article at : https://codeplea.com/opengl-with-c-and-tcl-tk\n\n### python + tkinter (no pyopengl) example:\n\n* project url : http://github.com/arcanosam/pytkogl/ (the code project open license)\n* article at: http://www.codeproject.com/articles/1073475/opengl-in-python-with-tkinter\n\n### pyopengl\n\n* large regions of code copied from `pyopengl/tk/__init__.py`.\n\n\n",
  "docs_url": null,
  "keywords": "opengl,window,context,tk,tkinter",
  "license": "mit",
  "name": "pyopengltk",
  "package_url": "https://pypi.org/project/pyopengltk/",
  "project_url": "https://pypi.org/project/pyopengltk/",
  "project_urls": {
    "Homepage": "http://github.com/jonwright/pyopengltk"
  },
  "release_url": "https://pypi.org/project/pyopengltk/0.0.4/",
  "requires_dist": [
    "pyopengl"
  ],
  "requires_python": "",
  "summary": "an opengl frame for pyopengl-tkinter based on ctype",
  "version": "0.0.4",
  "releases": [],
  "developers": [
    "jon_wright",
    "jonathan.wright@gmail.com"
  ],
  "kwds": "openglframe tkinter opengl pyopengl pyopengltk",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pyopengltk",
  "homepage": "http://github.com/jonwright/pyopengltk",
  "release_count": 4,
  "dependency_ids": [
    "pypi_pyopengl"
  ]
}
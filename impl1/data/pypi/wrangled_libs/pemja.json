{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: apache software license",
    "operating system :: macos",
    "operating system :: unix",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython"
  ],
  "description": "# pemja\n\n## what is it?\n\npemja is an open source cross language call framework based on ffi. it aims to provide a high-performance\n\nframework of calling between different languages.\n\n## where to get it\n\npython binary installers for the latest released version are available at the [python package index](https://pypi.org/project/pemja)\n\n```bash\npip install pemja\n```\n\njava maven dependency\n```\n<dependency>\n    <groupid>com.alibaba</groupid>\n    <artifactid>pemja</artifactid>\n    <version>{version}</version>\n</dependency>\n```\n\n## dependencies\n\n- [numpy - adds support for large, multi-dimensional arrays, matrices and high-level mathematical functions to operate on these arrays](https://www.numpy.org)\n\n## installation from sources\n\nprerequisites for building pemja:\n\n* unix-like environment (we use linux, mac os x)\n* git\n* maven (we recommend version 3.2.5 and require at least 3.1.1)\n* java 8 or 11 (java 9 or 10 may work)\n* python >= 3.8 (we recommend version 3.8, 3.9, 3.10, 3.11)\n\n```\ngit clone https://github.com/alibaba/pemja.git\ncd pemja\nmvn clean install -dskiptests\npip install -r dev/dev-requirements.txt\npython setup.py sdist\npip install dist/*.tar.gz\n```\n\n## usage\n\n```java\nstring path = ...;\npythoninterpreterconfig config = pythoninterpreterconfig\n    .newbuilder()\n    .setpythonexec(\"python3\") // specify python exec\n    .addpythonpaths(path) // add path to search path\n    .build();\n\npythoninterpreter interpreter = new pythoninterpreter(config);\n\n// set & get\ninterpreter.set(\"a\", 12345);\ninterpreter.get(\"a\"); // object\ninterpreter.get(\"a\", integer.class); // integer\n\n// exec & eval\ninterpreter.exec(\"print(a)\");\n\n// invoke functions\ninterpreter.exec(\"import str_upper\");\nstring result = interpreter.invoke(\"str_upper.upper\", \"abcd\");\n// object invoke(string name, object... args);\n// object invoke(string name, object[] args, map<string, object> kwargs);\n\n// invoke object methods\n/*\n// invoke.py\nclass a:\n       def __init__(self):\n           self._a = 0\n   \n       def get_value(self):\n           return self._a\n   \n       def add(self, n):\n           self._a += n\n   \n       def add_all(self, *args):\n           for item in args:\n               self._a += item\n               return self._a\n   \n       def minus(self, n):\n           self._a -= n\n           return self._a\n*/\n\ninterpreter.exec(\"import invoke\");\ninterpreter.exec(\"a = invoke.a()\");\ninterpreter.invokemethod(\"a\", \"add\", 3);\ninterpreter.invokemethod(\"a\", \"minus\", 2);\ninterpreter.invokemethod(\"a\", \"add_all\", 1, 2, 3);\n\n\n// python callback java methods\n/*\n// invoke_callback.py\nfrom pemja import findclass\n\nstringbuilder = findclass('java.lang.stringbuilder')\ninteger = findclass('java.lang.integer')\n\ndef callback_java():\n    sb = stringbuilder()\n    sb.append('pemja')\n    sb.append('java')\n    sb.append('python')\n    sb.append(integer.tohexstring(integer.max_value))\n    return sb.tostring()\n*/\ninterpreter.exec(\"import call_back\")\nprint(interpreter.invoke(\"call_back.callback_java\"))\n```\n\n## documentation\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "https://www.apache.org/licenses/license-2.0",
  "name": "pemja",
  "package_url": "https://pypi.org/project/pemja/",
  "project_url": "https://pypi.org/project/pemja/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/pemja/0.4.1/",
  "requires_dist": [
    "find-libpython"
  ],
  "requires_python": ">=3.8",
  "summary": "pemja",
  "version": "0.4.1",
  "releases": [],
  "developers": [
    "apache_software_foundation",
    "hxbks2ks@gmail.com"
  ],
  "kwds": "pemja python3 python pypi numpy",
  "license_kwds": "https://www.apache.org/licenses/license-2.0",
  "libtype": "pypi",
  "id": "pypi_pemja",
  "homepage": "",
  "release_count": 19,
  "dependency_ids": [
    "pypi_find_libpython"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "license :: osi approved :: gnu affero general public license v3",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "topic :: utilities"
  ],
  "description": "\nexrex\n=====\n\nirregular methods for regular expressions.\n\nexrex is a command line tool and python module that generates all - or random - matching strings to a given regular expression and more.\nit's pure python, without external dependencies.\n\nthere are regular expressions with infinite matching strings (eg.: `[a-z]+`), in these cases exrex limits the maximum length of the infinite parts.\n\nexrex uses generators, so the memory usage does not depend on the number of matching strings.\n\n[![version](https://img.shields.io/pypi/v/exrex.svg)](https://crate.io/packages/exrex/)   [![downloads](https://img.shields.io/pypi/dm/exrex.svg)](https://crate.io/packages/exrex/)\n\n*features*\n\n * generating all matching strings\n * generating a random matching string\n * counting the number of matching strings\n * simplification of regular expressions\n\n\n### installation\n\n\nto install exrex, simply:\n\n```bash\n$ pip install exrex\n```\n\nor\n\n```bash\n$ easy_install exrex\n```\n\n\nusage\n=====\n\n### as python module\n\n```python\n>>> import exrex\n\n>>> exrex.getone('(ex)r\\\\1')\n'exrex'\n\n>>> list(exrex.generate('((hai){2}|world!)'))\n['haihai', 'world!']\n\n>>> exrex.getone('\\d{4}-\\d{4}-\\d{4}-[0-9]{4}')\n'3096-7886-2834-5671'\n\n>>> exrex.getone('(1[0-2]|0[1-9])(:[0-5]\\d){2} (a|p)m')\n'09:31:40 am'\n\n>>> exrex.count('[01]{0,9}')\n1023\n\n>>> print '\\n'.join(exrex.generate('this is (a (code|cake|test)|an (apple|elf|output))\\.'))\nthis is a code.\nthis is a cake.\nthis is a test.\nthis is an apple.\nthis is an elf.\nthis is an output.\n\n>>> print exrex.simplify('(ab|ac|ad)')\n(a[bcd])\n```\n\n### command line usage\n\n```\n> exrex --help\nusage: exrex.py [-h] [-o file] [-l] [-d delimiter] [-v] regex\n\nexrex - regular expression string generator\n\npositional arguments:\n  regex                 regex string\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o file, --output file\n                        output file - default is stdout\n  -l n, --limit n       max limit for range size - default is 20\n  -c, --count           count matching strings\n  -m n, --max-number n  max number of strings - default is -1\n  -r, --random          returns a random string that matches to the regex\n  -s, --simplify        simplifies a regular expression\n  -d delimiter, --delimiter delimiter\n                        delimiter - default is \\n\n  -v, --verbose         verbose mode\n```\n\nexamples:\n\n```\n$ exrex '[asdfg]'\na\ns\nd\nf\ng\n\n$ exrex -r '(0[1-9]|1[012])-\\d{2}'\n09-85\n\n$ exrex '[01]{10}' -c\n1024\n\n```\n\n### bugs\n\nbugs or suggestions? visit the [issue tracker](https://github.com/asciimoo/exrex/issues).\n\n\n### documentation\n\nhttp://exrex.readthedocs.org/en/latest/\n\n### todo\n\n * command line switches to change default character sets/ranges/range limits (eg. for '.','\\s'..) (40%)\n * extend categories (`re.sre_parse.categories`) (30%)\n * improve setup.py\n * more verbose code\n * documentation\n * optimizations\n * generation of `n` different random matching string\n * memory usage reduction (100%?) - generators\n * count the number of matching strings - (100%?)\n * unicode support (100%)\n * handle grouprefs (100%)\n * python3 compatibility (100%) ( >= python3.3)\n\n\n### license\n\n```\nexrex is free software: you can redistribute it and/or modify\nit under the terms of the gnu affero general public license as published by\nthe free software foundation, either version 3 of the license, or\n(at your option) any later version.\n\nexrex is distributed in the hope that it will be useful,\nbut without any warranty; without even the implied warranty of\nmerchantability or fitness for a particular purpose.  see the\ngnu affero general public license for more details.\n\nyou should have received a copy of the gnu affero general public license\nalong with exrex. if not, see < http://www.gnu.org/licenses/ >.\n\n(c) 2012- by adam tauber, <asciimoo@gmail.com>\n```\n\n### fun/arts\n\n * boat: `exrex '( {20}(\\| *\\\\|-{22}|\\|)|\\.={50}| (  ){0,5}\\\\\\.| {12}~{39})'`\n * eyes: `exrex '(o|o|0)(_)(o|o|0)'`\n\n### similar projects\n\ntools that generate a list of all possible strings that match a given pattern:\n* [regldg](http://regldg.com/)\n  (features a live demo on the website)\n* [regex-genex](https://github.com/audreyt/regex-genex)\n  (supports using multiple regex patterns simultaneously)\n\ntools that generate random strings, one by one, that match a given pattern:\n* [randexp.js](http://fent.github.com/randexp.js/)\n  (features several live demos on the website)\n* [rstr.xeger](https://bitbucket.org/leapfrogdevelopment/rstr/src#rst-header-xeger)\n  (a method of the `rstr` python module)\n\n### profiling\n\n * `python -m cprofile exrex.py '[a-za-z][a-za-z][a-za-z][a-za-z]' -o /dev/null`\n * `python -m cprofile exrex.py '[0-9]{6}' -o /dev/null`\n",
  "docs_url": null,
  "keywords": "regexp generators string generation regex simplification",
  "license": "agplv3+",
  "name": "exrex",
  "package_url": "https://pypi.org/project/exrex/",
  "project_url": "https://pypi.org/project/exrex/",
  "project_urls": {
    "Download": "https://github.com/asciimoo/exrex/tarball/master",
    "Homepage": "https://github.com/asciimoo/exrex"
  },
  "release_url": "https://pypi.org/project/exrex/0.11.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "irregular methods for regular expressions",
  "version": "0.11.0",
  "releases": [],
  "developers": [
    "adam_tauber",
    "asciimoo@gmail.com"
  ],
  "kwds": "exrex regex regexp strings python",
  "license_kwds": "agplv3+",
  "libtype": "pypi",
  "id": "pypi_exrex",
  "homepage": "https://github.com/asciimoo/exrex",
  "release_count": 28,
  "dependency_ids": []
}
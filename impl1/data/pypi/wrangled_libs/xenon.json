{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.1",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "topic :: internet :: www/http",
    "topic :: software development",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: quality assurance",
    "topic :: utilities"
  ],
  "description": "xenon\n=====\n\n.. image:: https://img.shields.io/travis/rubik/xenon/master.svg\n    :alt: travis-ci badge\n    :target: https://travis-ci.org/rubik/xenon\n\n.. image:: https://img.shields.io/coveralls/rubik/xenon/master.svg\n    :alt: coveralls badge\n    :target: https://coveralls.io/r/rubik/xenon?branch=master\n\n.. image:: https://img.shields.io/pypi/v/xenon.svg\n    :alt: pypi latest version badge\n    :target: https://pypi.python.org/pypi/xenon/\n\n.. image:: https://img.shields.io/pypi/format/xenon.svg\n    :alt: download format\n    :target: http://pythonwheels.com/\n\n.. image:: https://img.shields.io/pypi/l/xenon.svg\n    :alt: xenon license\n    :target: https://pypi.python.org/pypi/xenon/\n\n\n----\n\nxenon is a monitoring tool based on `radon <https://github.com/rubik/radon/>`_.\nit monitors your code's complexity.  ideally, xenon is run every time you\ncommit code. through command line options, you can set various thresholds for\nthe **complexity** of your code. it will fail (i.e. it will exit with a\nnon-zero exit code) when any of these requirements is not met.\n\ninstallation\n------------\n\nwith pip:\n\n.. code-block:: sh\n\n   $ pip install xenon\n\nor download the source and run the setup file (requires setuptools):\n\n.. code-block:: sh\n\n   $ python setup.py install\n\nxenon is tested with all versions of python from **2.7** to **3.6** as well as\n**pypy**.\n\nusage\n-----\n\ntypically you would use xenon in two scenarios:\n\n1. as a ``git commit`` hook: to make sure that your code never exceeds some\n   complexity values.\n\n2. on a **continuous integration** server: as a part of your build, to keep\n   under control, as above, your code's complexity. see xenon's\n   `.travis.yml file`_ for an example usage.\n\nthe command line\n++++++++++++++++\n\neverything boils down to xenon's command line usage.\nto control which files are analyzed, you use the options ``-e, --exclude`` and\n``-i, --ignore``. both accept a comma-separated list of glob patterns. the\nvalue usually needs quoting at the command line, to prevent the shell from\nexpanding the pattern (in case there is only one). every filename is matched\nagainst the *exclude* patterns. every directory name is matched against the\n*ignore* patterns.  if any of the patterns matches, xenon won't even descend\ninto them.\n\nthe actual threshold values are defined through these options:\n\n* ``-a, --max-average``: threshold for the *average* complexity (across all the\n  codebase).\n* ``-m, --max-modules``: threshold for *modules* complexity.\n* ``-b, --max-absolute``: *absolute* threshold for *block* complexity.\n\n\nall of these options are inclusive.\n\nan actual example\n+++++++++++++++++\n\n.. code-block:: sh\n\n   $ xenon --max-absolute b --max-modules a --max-average a\n\nor, more succinctly:\n\n.. code-block:: sh\n\n   $ xenon -b b -m a -a a\n\nwith these options xenon will exit with a non-zero exit code if any of the\nfollowing conditions is met:\n\n* at least one block has a rank higher than ``b`` (i.e. ``c``, ``d``, ``e`` or\n  ``f``).\n* at least one module has a rank higher than ``a``.\n* the average complexity (among all of the analyzed blocks) is ranked with\n  ``b`` or higher.\n\nother resources\n---------------\n\nfor more information regarding cyclomatic complexity and static analysis in\npython, please refer to radon's documentation, the project on which xenon is\nbased on:\n\n* more on cyclomatic complexity:\n  http://radon.readthedocs.org/en/latest/intro.html\n* more on radon's ranking:\n  http://radon.readthedocs.org/en/latest/commandline.html#the-cc-command\n\n\n.. _.travis.yml file: https://github.com/rubik/xenon/blob/master/.travis.yml\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "xenon",
  "package_url": "https://pypi.org/project/xenon/",
  "project_url": "https://pypi.org/project/xenon/",
  "project_urls": {
    "Download": "https://pypi.python.org/xenon/",
    "Homepage": "https://xenon.readthedocs.org/"
  },
  "release_url": "https://pypi.org/project/xenon/0.9.1/",
  "requires_dist": [
    "radon (<7,>=4)",
    "requests (<3.0,>=2.0)",
    "PyYAML (<7.0,>=4.2b1)"
  ],
  "requires_python": "",
  "summary": "monitor code metrics for python on your ci server",
  "version": "0.9.1",
  "releases": [],
  "developers": [
    "michele_lacchia",
    "michelelacchia@gmail.com"
  ],
  "kwds": "xenon pythonwheels badge download svg",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_xenon",
  "homepage": "https://xenon.readthedocs.org/",
  "release_count": 21,
  "dependency_ids": [
    "pypi_pyyaml",
    "pypi_radon",
    "pypi_requests"
  ]
}
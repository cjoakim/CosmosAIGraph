{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 3"
  ],
  "description": "[![build status](https://travis-ci.com/ddmee/polling2.svg?branch=master)](https://travis-ci.org/ddmee/polling2)\n[![pypi](https://img.shields.io/pypi/dm/polling2.svg)]()\n[![pypi](https://img.shields.io/pypi/v/polling2.svg)]()\n\n# polling2\n\n_never write another polling function again!_\n\ndocumentation available at [read the docs](https://polling2.readthedocs.io)\n\nyou can install the package from [pypi](https://pypi.org/project/polling2/)\n\npolling2 is a powerful python utility used to wait for a function to return a certain expected condition.\n\nsome possible uses cases include:\n\n- wait for api response to return with code 200\n- wait for a file to exist (or not exist)\n- wait for a thread lock on a resource to expire\n\npolling2 is handy for getting rid of all that duplicated polling-code. often, applications require retrying until the correct response is returned. why re-implement the ability to poll again and again? use polling2!\n\npolling2 is a fork of the original [polling](https://github.com/justiniso/polling). it was forked when the original maintainer failed to respond to issues or prs. \n\npolling2 is _under active development_. would you like to see a particular feature? ask and thou shall recieve.\n\n## installation\n\n```\npip install polling2\n```\n\n## development installation\n\n```shell\n# install lib, but use system links from the repo into sitepackages.\npython setup.py develop\n# install test dependenices.\npython setup.py test\n# run the tests\npytest tests\n```\n\n## example:\n\n```python\n# this call will wait until the file exists, checking every 0.1 seconds and stopping after 3 seconds have elapsed\nfile_handle = polling2.poll(\n    lambda: open('/tmp/myfile.txt'),\n    ignore_exceptions=(ioerror,),\n    timeout=3,\n    step=0.1)\n\n# polling will return the value of your polling function, so you can now interact with it\nfile_handle.close()\n```\n\nthere are [more examples](https://polling2.readthedocs.io/en/latest/examples) in the documentation.\n\n## api and user guide at [read the docs](https://polling2.readthedocs.io)\n\n[![read the docs](https://raw.githubusercontent.com/ddmee/polling2/master/ext/read_the_docs.png)](https://polling2.readthedocs.io)\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "polling2",
  "package_url": "https://pypi.org/project/polling2/",
  "project_url": "https://pypi.org/project/polling2/",
  "project_urls": {
    "Homepage": "http://github.com/ddmee/polling2"
  },
  "release_url": "https://pypi.org/project/polling2/0.5.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "updated polling utility with many configurable options",
  "version": "0.5.0",
  "releases": [],
  "developers": [
    "donal_mee",
    "mee.donal@gmail.com"
  ],
  "kwds": "polling2 polling travis python pytest",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_polling2",
  "homepage": "http://github.com/ddmee/polling2",
  "release_count": 8,
  "dependency_ids": []
}
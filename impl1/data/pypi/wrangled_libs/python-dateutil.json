{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries"
  ],
  "description": "dateutil - powerful extensions to datetime\n==========================================\n\n|pypi| |support| |licence|\n\n|gitter| |readthedocs|\n\n|travis| |appveyor| |pipelines| |coverage|\n\n.. |pypi| image:: https://img.shields.io/pypi/v/python-dateutil.svg?style=flat-square\n    :target: https://pypi.org/project/python-dateutil/\n    :alt: pypi version\n\n.. |support| image:: https://img.shields.io/pypi/pyversions/python-dateutil.svg?style=flat-square\n    :target: https://pypi.org/project/python-dateutil/\n    :alt: supported python version\n\n.. |travis| image:: https://img.shields.io/travis/dateutil/dateutil/master.svg?style=flat-square&label=travis%20build\n    :target: https://travis-ci.org/dateutil/dateutil\n    :alt: travis build status\n\n.. |appveyor| image:: https://img.shields.io/appveyor/ci/dateutil/dateutil/master.svg?style=flat-square&logo=appveyor\n    :target: https://ci.appveyor.com/project/dateutil/dateutil\n    :alt: appveyor build status\n\n.. |pipelines| image:: https://dev.azure.com/pythondateutilazure/dateutil/_apis/build/status/dateutil.dateutil?branchname=master\n    :target: https://dev.azure.com/pythondateutilazure/dateutil/_build/latest?definitionid=1&branchname=master\n    :alt: azure pipelines build status\n\n.. |coverage| image:: https://codecov.io/gh/dateutil/dateutil/branch/master/graphs/badge.svg?branch=master\n    :target: https://codecov.io/gh/dateutil/dateutil?branch=master\n    :alt: code coverage\n\n.. |gitter| image:: https://badges.gitter.im/dateutil/dateutil.svg\n   :alt: join the chat at https://gitter.im/dateutil/dateutil\n   :target: https://gitter.im/dateutil/dateutil\n\n.. |licence| image:: https://img.shields.io/pypi/l/python-dateutil.svg?style=flat-square\n    :target: https://pypi.org/project/python-dateutil/\n    :alt: licence\n\n.. |readthedocs| image:: https://img.shields.io/readthedocs/dateutil/latest.svg?style=flat-square&label=read%20the%20docs\n   :alt: read the documentation at https://dateutil.readthedocs.io/en/latest/\n   :target: https://dateutil.readthedocs.io/en/latest/\n\nthe `dateutil` module provides powerful extensions to\nthe standard `datetime` module, available in python.\n\ninstallation\n============\n`dateutil` can be installed from pypi using `pip` (note that the package name is\ndifferent from the importable name)::\n\n    pip install python-dateutil\n\ndownload\n========\ndateutil is available on pypi\nhttps://pypi.org/project/python-dateutil/\n\nthe documentation is hosted at:\nhttps://dateutil.readthedocs.io/en/stable/\n\ncode\n====\nthe code and issue tracker are hosted on github:\nhttps://github.com/dateutil/dateutil/\n\nfeatures\n========\n\n* computing of relative deltas (next month, next year,\n  next monday, last week of month, etc);\n* computing of relative deltas between two given\n  date and/or datetime objects;\n* computing of dates based on very flexible recurrence rules,\n  using a superset of the `icalendar <https://www.ietf.org/rfc/rfc2445.txt>`_\n  specification. parsing of rfc strings is supported as well.\n* generic parsing of dates in almost any string format;\n* timezone (tzinfo) implementations for tzfile(5) format\n  files (/etc/localtime, /usr/share/zoneinfo, etc), tz\n  environment string (in all known formats), icalendar\n  format files, given ranges (with help from relative deltas),\n  local machine timezone, fixed offset timezone, utc timezone,\n  and windows registry-based time zones.\n* internal up-to-date world timezone information based on\n  olson's database.\n* computing of easter sunday dates for any given year,\n  using western, orthodox or julian algorithms;\n* a comprehensive test suite.\n\nquick example\n=============\nhere's a snapshot, just to give an idea about the power of the\npackage. for more examples, look at the documentation.\n\nsuppose you want to know how much time is left, in\nyears/months/days/etc, before the next easter happening on a\nyear with a friday 13th in august, and you want to get today's\ndate out of the \"date\" unix system command. here is the code:\n\n.. code-block:: python3\n\n    >>> from dateutil.relativedelta import *\n    >>> from dateutil.easter import *\n    >>> from dateutil.rrule import *\n    >>> from dateutil.parser import *\n    >>> from datetime import *\n    >>> now = parse(\"sat oct 11 17:13:46 utc 2003\")\n    >>> today = now.date()\n    >>> year = rrule(yearly,dtstart=now,bymonth=8,bymonthday=13,byweekday=fr)[0].year\n    >>> rdelta = relativedelta(easter(year), today)\n    >>> print(\"today is: %s\" % today)\n    today is: 2003-10-11\n    >>> print(\"year with next aug 13th on a friday is: %s\" % year)\n    year with next aug 13th on a friday is: 2004\n    >>> print(\"how far is the easter of that year: %s\" % rdelta)\n    how far is the easter of that year: relativedelta(months=+6)\n    >>> print(\"and the easter of that year is: %s\" % (today+rdelta))\n    and the easter of that year is: 2004-04-11\n\nbeing exactly 6 months ahead was **really** a coincidence :)\n\ncontributing\n============\n\nwe welcome many types of contributions - bug reports, pull requests (code, infrastructure or documentation fixes). for more information about how to contribute to the project, see the ``contributing.md`` file in the repository.\n\n\nauthor\n======\nthe dateutil module was written by gustavo niemeyer <gustavo@niemeyer.net>\nin 2003.\n\nit is maintained by:\n\n* gustavo niemeyer <gustavo@niemeyer.net> 2003-2011\n* tomi pievil\u00e4inen <tomi.pievilainen@iki.fi> 2012-2014\n* yaron de leeuw <me@jarondl.net> 2014-2016\n* paul ganssle <paul@ganssle.io> 2015-\n\nstarting with version 2.4.1 and running until 2.8.2, all source and binary\ndistributions will be signed by a pgp key that has, at the very least, been\nsigned by the key which made the previous release. a table of release signing\nkeys can be found below:\n\n===========  ============================\nreleases     signing key fingerprint\n===========  ============================\n2.4.1-2.8.2  `6b49 acba dcf6 bd1c a206 67ab cd54 fce3 d964 befb`_ \n===========  ============================\n\nnew releases *may* have signed tags, but binary and source distributions\nuploaded to pypi will no longer have gpg signatures attached.\n\ncontact\n=======\nour mailing list is available at `dateutil@python.org <https://mail.python.org/mailman/listinfo/dateutil>`_. as it is hosted by the psf, it is subject to the `psf code of\nconduct <https://www.python.org/psf/conduct/>`_.\n\nlicense\n=======\n\nall contributions after december 1, 2017 released under dual license - either `apache 2.0 license <https://www.apache.org/licenses/license-2.0>`_ or the `bsd 3-clause license <https://opensource.org/licenses/bsd-3-clause>`_. contributions before december 1, 2017 - except those those explicitly relicensed - are released only under the bsd 3-clause license.\n\n\n.. _6b49 acba dcf6 bd1c a206 67ab cd54 fce3 d964 befb:\n   https://pgp.mit.edu/pks/lookup?op=vindex&search=0xcd54fce3d964befb\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "dual license",
  "name": "python-dateutil",
  "package_url": "https://pypi.org/project/python-dateutil/",
  "project_url": "https://pypi.org/project/python-dateutil/",
  "project_urls": {
    "Documentation": "https://dateutil.readthedocs.io/en/stable/",
    "Homepage": "https://github.com/dateutil/dateutil",
    "Source": "https://github.com/dateutil/dateutil"
  },
  "release_url": "https://pypi.org/project/python-dateutil/2.8.2/",
  "requires_dist": [
    "six (>=1.5)"
  ],
  "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7",
  "summary": "extensions to the standard python datetime module",
  "version": "2.8.2",
  "releases": [],
  "developers": [
    "dateutil@python.org",
    "gustavo@niemeyer.net",
    "gustavo_niemeyer",
    "paul_ganssle"
  ],
  "kwds": "dateutil pythondateutilazure dates pip pyversions",
  "license_kwds": "dual license",
  "libtype": "pypi",
  "id": "pypi_python_dateutil",
  "homepage": "https://github.com/dateutil/dateutil",
  "release_count": 32,
  "dependency_ids": [
    "pypi_six"
  ]
}
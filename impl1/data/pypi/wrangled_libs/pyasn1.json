{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "intended audience :: telecommunications industry",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: communications",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "\nasn.1 library for python\n------------------------\n[![pypi](https://img.shields.io/pypi/v/pyasn1.svg?maxage=2592000)](https://pypi.org/project/pyasn1)\n[![python versions](https://img.shields.io/pypi/pyversions/pyasn1.svg)](https://pypi.org/project/pyasn1/)\n[![build status](https://github.com/pyasn1/pyasn1/actions/workflows/main.yml/badge.svg)](https://github.com/pyasn1/pyasn1/actions/workflows/main.yml)\n[![coverage status](https://img.shields.io/codecov/c/github/pyasn1/pyasn1.svg)](https://codecov.io/github/pyasn1/pyasn1)\n[![github license](https://img.shields.io/badge/license-bsd-blue.svg)](https://raw.githubusercontent.com/pyasn1/pyasn1/master/license.txt)\n\nthis is a free and open source implementation of asn.1 types and codecs\nas a python package. it has been first written to support particular\nprotocol (snmp) but then generalized to be suitable for a wide range\nof protocols based on\n[asn.1 specification](https://www.itu.int/rec/dologin_pub.asp?lang=e&id=t-rec-x.208-198811-w!!pdf-e&type=items).\n\n**note:** the package is now maintained by *christian heimes* and\n*simon pichugin* in project https://github.com/pyasn1/pyasn1.\n\nfeatures\n--------\n\n* generic implementation of asn.1 types (x.208)\n* standards compliant ber/cer/der codecs\n* can operate on streams of serialized data\n* dumps/loads asn.1 structures from python types\n* 100% python, works with python 2.7 and 3.6+\n* mt-safe\n* contributed asn.1 compiler [asn1ate](https://github.com/kimgr/asn1ate)\n\nwhy using pyasn1\n----------------\n\nasn.1 solves the data serialisation problem. this solution was\ndesigned long ago by the wise ancients. back then, they did not\nhave the luxury of wasting bits. that is why asn.1 is designed\nto serialise data structures of unbounded complexity into\nsomething compact and efficient when it comes to processing\nthe data.\n\nthat probably explains why many network protocols and file formats\nstill rely on the 30+ years old technology. including a number of\nhigh-profile internet protocols and file formats.\n\nquite a number of books cover the topic of asn.1. \n[communication between heterogeneous systems](http://www.oss.com/asn1/dubuisson.html)\nby olivier dubuisson is one of those high quality books freely \navailable on the internet.\n\nthe pyasn1 package is designed to help python programmers tackling\nnetwork protocols and file formats at the comfort of their python\nprompt. the tool struggles to capture all aspects of a rather\ncomplicated asn.1 system and to represent it on the python terms.\n\nhow to use pyasn1\n-----------------\n\nwith pyasn1 you can build python objects from asn.1 data structures.\nfor example, the following asn.1 data structure:\n\n```bash\nrecord ::= sequence {\n  id        integer,\n  room  [0] integer optional,\n  house [1] integer default 0\n}\n```\n\ncould be expressed in pyasn1 like this:\n\n```python\nclass record(sequence):\n    componenttype = namedtypes(\n        namedtype('id', integer()),\n        optionalnamedtype(\n            'room', integer().subtype(\n                implicittag=tag(tagclasscontext, tagformatsimple, 0)\n            )\n        ),\n        defaultednamedtype(\n            'house', integer(0).subtype(\n                implicittag=tag(tagclasscontext, tagformatsimple, 1)\n            )\n        )\n    )\n```\n\nit is in the spirit of asn.1 to take abstract data description \nand turn it into a programming language specific form.\nonce you have your asn.1 data structure expressed in python, you\ncan use it along the lines of similar python type (e.g. asn.1\n`set` is similar to python `dict`, `set of` to `list`):\n\n```python\n>>> record = record()\n>>> record['id'] = 123\n>>> record['room'] = 321\n>>> str(record)\nrecord:\n id=123\n room=321\n>>>\n```\n\npart of the power of asn.1 comes from its serialisation features. you\ncan serialise your data structure and send it over the network.\n\n```python\n>>> from pyasn1.codec.der.encoder import encode\n>>> substrate = encode(record)\n>>> hexdump(substrate)\n00000: 30 07 02 01 7b 80 02 01 41\n```\n\nconversely, you can turn serialised asn.1 content, as received from\nnetwork or read from a file, into a python object which you can\nintrospect, modify, encode and send back.\n\n```python\n>>> from pyasn1.codec.der.decoder import decode\n>>> received_record, rest_of_substrate = decode(substrate, asn1spec=record())\n>>>\n>>> for field in received_record:\n>>>    print('{} is {}'.format(field, received_record[field]))\nid is 123\nroom is 321\nhouse is 0\n>>>\n>>> record == received_record\ntrue\n>>> received_record.update(room=123)\n>>> substrate = encode(received_record)\n>>> hexdump(substrate)\n00000: 30 06 02 01 7b 80 01 7b\n```\n\nthe pyasn1 classes struggle to emulate their python prototypes (e.g. int,\nlist, dict etc.). but asn.1 types exhibit more complicated behaviour.\nto make life easier for a pythonista, they can turn their pyasn1\nclasses into python built-ins:\n\n```python\n>>> from pyasn1.codec.native.encoder import encode\n>>> encode(record)\n{'id': 123, 'room': 321, 'house': 0}\n```\n\nor vice-versa -- you can initialize an asn.1 structure from a tree of\npython objects:\n\n```python\n>>> from pyasn1.codec.native.decoder import decode\n>>> record = decode({'id': 123, 'room': 321, 'house': 0}, asn1spec=record())\n>>> str(record)\nrecord:\n id=123\n room=321\n>>>\n```\n\nwith asn.1 design, serialisation codecs are decoupled from data objects,\nso you could turn every single asn.1 object into many different \nserialised forms. as of this moment, pyasn1 supports ber, der, cer and\npython built-ins codecs. the extremely compact per encoding is expected\nto be introduced in the upcoming pyasn1 release.\n\nmore information on pyasn1 apis can be found in the\n[documentation](https://pyasn1.readthedocs.io/en/latest/pyasn1/contents.html),\ncompiled asn.1 modules for different protocols and file formats\ncould be found in the pyasn1-modules \n[repo](https://github.com/pyasn1/pyasn1-modules).\n\nhow to get pyasn1\n-----------------\n\nthe pyasn1 package is distributed under terms and conditions of 2-clause\nbsd [license](https://pyasn1.readthedocs.io/en/latest/license.html). source code is freely\navailable as a github [repo](https://github.com/pyasn1/pyasn1).\n\nyou could `pip install pyasn1` or download it from [pypi](https://pypi.org/project/pyasn1).\n\nif something does not work as expected, \n[open an issue](https://github.com/epyasn1/pyasn1/issues) at github or\npost your question [on stack overflow](https://stackoverflow.com/questions/ask)\nor try browsing pyasn1 \n[mailing list archives](https://sourceforge.net/p/pyasn1/mailman/pyasn1-users/).\n\ncopyright (c) 2005-2020, [ilya etingof](mailto:etingof@gmail.com).\nall rights reserved.\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd-2-clause",
  "name": "pyasn1",
  "package_url": "https://pypi.org/project/pyasn1/",
  "project_url": "https://pypi.org/project/pyasn1/",
  "project_urls": {
    "Changelog": "https://pyasn1.readthedocs.io/en/latest/changelog.html",
    "Documentation": "https://pyasn1.readthedocs.io",
    "Homepage": "https://github.com/pyasn1/pyasn1",
    "Issues": "https://github.com/pyasn1/pyasn1/issues",
    "Source": "https://github.com/pyasn1/pyasn1"
  },
  "release_url": "https://pypi.org/project/pyasn1/0.5.1/",
  "requires_dist": [],
  "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7",
  "summary": "pure-python implementation of asn.1 types and der/ber/cer codecs (x.208)",
  "version": "0.5.1",
  "releases": [],
  "developers": [
    "christian@python.org",
    "etingof@gmail.com",
    "ilya_etingof",
    "pyasn1_maintenance_organization"
  ],
  "kwds": "pyasn1 pyversions pythonista epyasn1 pip",
  "license_kwds": "bsd-2-clause",
  "libtype": "pypi",
  "id": "pypi_pyasn1",
  "homepage": "https://github.com/pyasn1/pyasn1",
  "release_count": 37,
  "dependency_ids": []
}
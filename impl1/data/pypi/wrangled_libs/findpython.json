{
  "classifiers": [
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# findpython\n\n_a utility to find python versions on your system._\n\n[![tests](https://github.com/frostming/findpython/actions/workflows/ci.yml/badge.svg)](https://github.com/frostming/findpython/actions/workflows/ci.yml)\n[![pypi](https://img.shields.io/pypi/v/findpython?logo=python&logocolor=%23cccccc&style=flat-square)](https://pypi.org/project/findpython)\n[![pypi - python version](https://img.shields.io/pypi/pyversions/findpython?logo=python&logocolor=%23cccccc&style=flat-square)](https://pypi.org/project/findpython)\n[![pdm-managed](https://img.shields.io/badge/pdm-managed-blueviolet?style=flat-square)](https://github.com/frostming/findpython)\n\n## description\n\nthis library is a rewrite of [pythonfinder] project by [@techalchemy][techalchemy].\nit simplifies the whole code structure while preserving most of the original features.\n\n[pythonfinder]: https://github.com/sarugaku/pythonfinder\n[techalchemy]: https://github.com/techalchemy\n\n## installation\n\nfindpython is installable via any kind of package manager including `pip`:\n\n```bash\npip install findpython\n```\n\n<details>\n<summary>expand this section to see findpython's availability in the package ecosystem</summary>\n\n<a href=\"https://repology.org/project/python:findpython/versions\">\n    <img src=\"https://repology.org/badge/vertical-allrepos/python:findpython.svg?header=python%3afindpython\" alt=\"packaging status\">\n</a>\n</details>\n\n## usage\n\n```python\n>>> import findpython\n>>> findpython.find(3, 9)  # find by major and minor version\n<pythonversion executable=posixpath('/opt/homebrew/bin/python3.9'), version=<version('3.9.10')>, architecture='64bit', major=3, minor=9, patch=10>\n>>> findpython.find(\"3.9\")  # find by version string\n<pythonversion executable=posixpath('/opt/homebrew/bin/python3.9'), version=<version('3.9.10')>, architecture='64bit', major=3, minor=9, patch=10>\n>>> findpython.find(\"3.9-32\")  # find by version string and architecture\n<pythonversion executable=windowspath('c:\\\\python\\\\3.9-32\\\\python.exe'), version=<version('3.9.10')>, architecture='32bit', major=3, minor=9, patch=10>\n>>> findpython.find(name=\"python3\")  # find by executable name\n<pythonversion executable=posixpath('/users/fming/library/pythonup/bin/python3'), version=<version('3.10.2')>, architecture='64bit', major=3, minor=10, patch=2>\n>>> findpython.find(\"python3\")  # find by executable name without keyword argument, same as above\n<pythonversion executable=posixpath('/users/fming/library/pythonup/bin/python3'), version=<version('3.10.2')>, architecture='64bit', major=3, minor=10, patch=2>\n>>> findpython.find_all(major=3, minor=9)  # same arguments as `find()`, but return all matches\n[<pythonversion executable=posixpath('/opt/homebrew/bin/python3.9'), version=<version('3.9.10')>, architecture='64bit', major=3, minor=9, patch=10>, <pythonversion executable=posixpath('/opt/homebrew/bin/python3'), version=<version('3.9.10')>, architecture='64bit', major=3, minor=9, patch=10>, <pythonversion executable=posixpath('/users/fming/library/pythonup/cmd/python3.9'), version=<version('3.9.9')>, architecture='64bit', major=3, minor=9, patch=9>, <pythonversion executable=posixpath('/usr/local/bin/python3.9'), version=<version('3.9.5')>, architecture='64bit', major=3, minor=9, patch=5>, <pythonversion executable=posixpath('/usr/local/bin/python3'), version=<version('3.9.5')>, architecture='64bit', major=3, minor=9, patch=5>]\n```\n\n## cli usage\n\nin addition, findpython provides a cli interface to find python versions:\n\n```\nusage: findpython [-h] [-v] [-a] [--resolve-symlink] [-v] [--no-same-file] [--no-same-python] [--providers providers]\n                  [version_spec]\n\na utility to find python versions on your system\n\npositional arguments:\n  version_spec          python version spec or name\n\noptions:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -a, --all             show all matching python versions\n  --resolve-symlink     resolve all symlinks\n  -v, --verbose         verbose output\n  --no-same-file        eliminate the duplicated results with the same file contents\n  --no-same-python      eliminate the duplicated results with the same sys.executable\n  --providers providers\n                        select provider(s) to use\n```\n\n## integration\n\nfindpython finds python from the following places:\n\n-   `path` environment variable\n-   pyenv install root\n-   asdf python install root\n-   [rye](https://rye-up.com) toolchain install root\n-   `/library/frameworks/python.framework/versions` (macos)\n-   windows registry (windows only)\n\n## license\n\nfindpython is released under mit license.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "findpython",
  "package_url": "https://pypi.org/project/findpython/",
  "project_url": "https://pypi.org/project/findpython/",
  "project_urls": {
    "Homepage": "https://github.com/frostming/findpython"
  },
  "release_url": "https://pypi.org/project/findpython/0.4.1/",
  "requires_dist": [
    "packaging>=20"
  ],
  "requires_python": ">=3.7",
  "summary": "a utility to find python versions on your system",
  "version": "0.4.1",
  "releases": [],
  "developers": [
    "mianghong@gmail.com"
  ],
  "kwds": "findpython pyversions pythonversion pythonfinder python3",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_findpython",
  "homepage": "",
  "release_count": 17,
  "dependency_ids": [
    "pypi_packaging"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: database"
  ],
  "description": "psycogreen -- psycopg2 integration with coroutine libraries\n===========================================================\n\nthe `psycogreen`_ package enables psycopg2 to work with coroutine libraries,\nusing asynchronous calls internally but offering a blocking interface so that\nregular code can run unmodified.\n\n`psycopg`_ offers `coroutines support`__ since release 2.2. because the main\nmodule is a c extension it cannot be monkey-patched to become\ncoroutine-friendly. instead it exposes `a hook`__ that coroutine libraries can\nuse to install a function integrating with their event scheduler. psycopg will\ncall the function whenever it executes a libpq call that may block.\n`psycogreen` is a collection of \"wait callbacks\" useful to integrate psycopg\nwith different coroutine libraries.\n\n.. _psycogreen: https://github.com/psycopg/psycogreen\n.. _psycopg: http://initd.org/psycopg/\n.. __: http://initd.org/psycopg/docs/advanced.html#support-to-coroutine-libraries\n.. __: http://initd.org/psycopg/docs/extensions.html#psycopg2.extensions.set_wait_callback\n\n\ninstallation\n------------\n\n``pip install psycogreen``\n\n\nmodule ``psycogreen.eventlet``\n------------------------------\n\n`eventlet`_ currently supports psycopg out-of-the-box and ``psycogreen`` is not\nnecessary. see `the documentation`__ for patching instruction.\n\n.. _eventlet: http://eventlet.net/\n.. __: http://eventlet.net/doc/patching.html#monkeypatching-the-standard-library\n\nif for any reason you want to avoid using eventlet monkeypatching you can use\n``psycogreen.eventlet.patch_psycopg()``.\n\nfunction ``psycogreen.eventlet.patch_psycopg()``\n    enable async processing in psycopg integrated with the eventlet events\n    loop.  it is performed by registering ``eventlet_wait_callback()`` as\n    psycopg2 wait callback.\n\nfunction ``psycogreen.eventlet.eventlet_wait_callback(conn)``\n    a wait callback integrating with eventlet events loop.\n\nan example script showing concurrent usage of ``psycopg2`` with ``urlopen()``\nwith eventlet is available in |tests/test_eventlet.py|__.\n\n.. |tests/test_eventlet.py| replace:: ``tests/test_eventlet.py``\n.. __: https://github.com/psycopg/psycogreen/blob/master/tests/test_eventlet.py\n\n\nmodule ``psycogreen.gevent``\n----------------------------\n\nin order to use psycopg2 asynchronously with `gevent`_ you can use\n``psycogreen.gevent.patch_psycopg()``.\n\nfunction ``psycogreen.gevent.patch_psycopg()``\n    enable async processing in psycopg integrated with the gevent events\n    loop.  it is performed by registering ``gevent_wait_callback()`` as\n    psycopg2 wait callback.\n\nfunction ``psycogreen.gevent.gevent_wait_callback(conn)``\n    a wait callback integrating with gevent events loop.\n\nan example script showing concurrent usage of ``psycopg2`` with ``urlopen()``\nwith gevent is available in |tests/test_gevent.py|__.\n\n.. _gevent: http://www.gevent.org/\n.. |tests/test_gevent.py| replace:: ``tests/test_gevent.py``\n.. __: https://github.com/psycopg/psycogreen/blob/master/tests/test_gevent.py\n\n\nuwsgi green threads\n-------------------\n\nroberto de ioris is writing ugreen__, a green thread implementation on top of\nthe `uwsgi async platform`__.\n\n.. __: http://projects.unbit.it/uwsgi/wiki/ugreen\n.. __: http://projects.unbit.it/uwsgi/\n\nhe has performed some tests using both `psycopg2 async support`__ and\n`psycopg2 green support`__ and has reported no problem in their stress tests\nwith both the async styles.\n\n.. __: http://projects.unbit.it/uwsgi/browser/tests/psycopg2_green.py\n.. __: http://projects.unbit.it/uwsgi/browser/tests/psycogreen_green.py",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "psycogreen",
  "package_url": "https://pypi.org/project/psycogreen/",
  "project_url": "https://pypi.org/project/psycogreen/",
  "project_urls": {
    "Bug tracker": "https://github.com/psycopg/psycogreen/issues",
    "Funding": "https://github.com/sponsors/dvarrazzo",
    "Homepage": "https://github.com/psycopg/psycogreen/"
  },
  "release_url": "https://pypi.org/project/psycogreen/1.0.2/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "psycopg2 integration with coroutine libraries",
  "version": "1.0.2",
  "releases": [],
  "developers": [
    "daniele.varrazzo@gmail.com",
    "daniele_varrazzo"
  ],
  "kwds": "patch_psycopg psycopg psycopg2 _psycopg coroutines",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_psycogreen",
  "homepage": "https://github.com/psycopg/psycogreen/",
  "release_count": 4,
  "dependency_ids": []
}
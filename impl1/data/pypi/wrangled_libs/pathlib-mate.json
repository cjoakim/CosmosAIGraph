{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": ".. image:: https://readthedocs.org/projects/pathlib_mate/badge/?version=latest\n    :target: https://pathlib-mate.readthedocs.io/?badge=latest\n    :alt: documentation status\n\n.. image:: https://github.com/machu-gwu/pathlib_mate-project/workflows/ci/badge.svg\n    :target: https://github.com/machu-gwu/pathlib_mate-project/actions?query=workflow:ci\n\n.. image:: https://codecov.io/gh/machu-gwu/pathlib_mate-project/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/machu-gwu/pathlib_mate-project\n\n.. image:: https://img.shields.io/pypi/v/pathlib_mate.svg\n    :target: https://pypi.python.org/pypi/pathlib_mate\n\n.. image:: https://img.shields.io/pypi/l/pathlib_mate.svg\n    :target: https://pypi.python.org/pypi/pathlib_mate\n\n.. image:: https://img.shields.io/pypi/pyversions/pathlib_mate.svg\n    :target: https://pypi.python.org/pypi/pathlib_mate\n\n.. image:: https://img.shields.io/pypi/dm/pathlib_mate.svg\n    :target: https://github.com/machu-gwu/pathlib_mate-project\n\n.. image:: https://img.shields.io/badge/star_me_on_github!--none.svg?style=social\n    :target: https://github.com/machu-gwu/pathlib_mate-project\n\n\n------\n\n\n.. image:: https://img.shields.io/badge/link-document-blue.svg\n      :target: https://pathlib-mate.readthedocs.io/index.html\n\n.. image:: https://img.shields.io/badge/link-api-blue.svg\n      :target: https://pathlib-mate.readthedocs.io/py-modindex.html\n\n.. image:: https://img.shields.io/badge/link-source_code-blue.svg\n      :target: https://pathlib-mate.readthedocs.io/py-modindex.html\n\n.. image:: https://img.shields.io/badge/link-install-blue.svg\n      :target: `install`_\n\n.. image:: https://img.shields.io/badge/link-github-blue.svg\n      :target: https://github.com/machu-gwu/pathlib_mate-project\n\n.. image:: https://img.shields.io/badge/link-submit_issue-blue.svg\n      :target: https://github.com/machu-gwu/pathlib_mate-project/issues\n\n.. image:: https://img.shields.io/badge/link-request_feature-blue.svg\n      :target: https://github.com/machu-gwu/pathlib_mate-project/issues\n\n.. image:: https://img.shields.io/badge/link-download-blue.svg\n      :target: https://pypi.org/pypi/pathlib_mate#files\n\n\nwelcome to ``pathlib_mate`` documentation\n==============================================================================\n\n`pathlib <https://docs.python.org/3/library/pathlib.html>`_ is an awesome library handling path in different os. and it's been added into standard library since python3.4. ``pathlib_mate`` gives extensive methods and attributes, makes ``pathlib`` more powerful and user-friendly.\n\nfeatures:\n\n**convenient attribute accessor**:\n\n.. code-block:: python\n\n    >>> p = path(\"/users/username/test.py\").\n\n    >>> p.abspath\n    /users/username/test.py\n\n    >>> p.basename\n    test.py\n\n    >>> p.fname\n    test\n\n    >>> p.ext\n    .py\n\n    >>> p.dirname\n    username\n\n    >>> p.dirpath\n    /users/username\n\n    >>> p.size\n    1500\n\n    >>> p.size_in_text\n    1.46 kb\n\n    >>> p.create_datetime\n    datetime(2018, 1, 15, 8, 30, 15)\n\n    >>> p.md5\n    415f12f07a7e01486cc82856621e05bf\n\n    >>> p.sha256\n    d51512cb0ac71484c01c475409a73225d0149165024d7aac6d8e655eedf2c025\n\n    >>> p.sha512\n    7882fc375840cafa364eaf29dc424645b72fcdbe61fc3326c5afd98e70f696e4f390e0e3f159eac2cb60cedc0992ef7b5f8744a4481911e914a7c5b979e6de68\n\n**powerful path search**:\n\n.. code-block:: python\n\n    >>> p = path(\"/users/username/documents\")\n\n    >>> for path in p.select_file(recursive=true)\n    ...\n\n    >>> for path in p.select_file(recursive=false)\n    ...\n\n    >>> for path in p.select_dir(recursive=true)\n    ...\n\n    >>> for image_file in p.select_by_ext([\".jpg\", \".png\"])\n    ...\n\n    >>> for big_file in p.select_by_size(min_size=1000000)\n    ...\n\n    >>> for video_file in p.select_video():\n    ...\n\n    # you can customize the filter anyway you want\n    >>> def py_filter(p): return \".py\" == p.ext.lower()\n    >>> for py_file in p.select_file(py_filter):\n    ...\n\n\n**eazy to use file / dir operation**:\n\n.. code-block:: python\n\n    >>> p = path(\"/users/username/documents/readme.txt\")\n\n    # mutate\n    >>> p.change(new_ext=\".md\")\n    /users/username/documents/readme.md\n\n    >>> p.change(new_fname=\"tutorial\")\n    /users/username/documents/tutorial.txt\n\n    >>> p.change(new_basename=\"readme.rst\")\n    /users/username/documents/readme.rst\n\n    >>> p.change(new_dirname=\"downloads\")\n    /users/username/downloads/readme.txt\n\n    >>> p.change(new_dirpath=\"/user/username/downloads)\n    /users/username/downloads/readme.txt\n\n    >>> p.change(new_abspath=\"/users/username/downloads/readme.txt\")\n    /users/username/downloads/readme.txt\n\n    # copy\n    >>> p.moveto(new_ext=\".md\", makedirs=true)\n\n    # cut\n    >>> p.copyto(new_ext=\".md\", makedirs=true)\n\n    # delete\n    >>> p.remove()\n\n    # delete file or directory recursively, ignore if not exists\n    >>> p.remove_if_exists()\n\n    # make dir and required parents recursively, if not exists\n    >>> p.mkdir_if_not_exists()\n\n\n**atomic write support**:\n\nif anything wrong happens during writing big chunk of data into a file. it may leave you an incomplete file. atomic write can guarantee either 100% done or nothing happens.\n\nthanks for `boltons <https://boltons.readthedocs.io/en/latest/>`_ project. now ``pathlib_mate`` supports atomic write api:\n\n.. code-block:: python\n\n    >>> p = path(\"test.dat\")\n    >>> s = \"hello world\"\n    >>> b = s.encode(\"utf-8)\n    >>> p.atomic_write_bytes(b, overwrite=true)\n    >>> p.atomic_write_text(s, overwrite=true)\n    >>> with p.atomic_open(\"wb\") as f:\n    ...     f.write(b) # write large binary data\n\n\n**powerful production tools**:\n\n.. code-block:: python\n\n    >>> p = path(\"/users/username/documents/github/pathlib_mate-project\")\n\n    >>> p.print_big_dir_and_big_file()\n    ...\n\n    >>> p.file_stat()\n    {\"file\": 122, \"dir\": 41, \"size\": 619682}\n\n    # file statistics, include sub folder\n    >>> p.file_stat_for_all()\n\n    # make an zip archive for the directory, auto naming\n    >>> p.make_zip_archive()\n\n    # make an zip archive for the directory, auto naming\n    >>> p.backup()\n\n\n.. _install:\n\ninstall\n------------------------------------------------------------------------------\n\n``pathlib_mate`` is released on pypi, so all you need is:\n\n.. code-block:: console\n\n    $ pip install pathlib_mate\n\nto upgrade to latest version:\n\n.. code-block:: console\n\n    $ pip install --upgrade pathlib_mate\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pathlib-mate",
  "package_url": "https://pypi.org/project/pathlib-mate/",
  "project_url": "https://pypi.org/project/pathlib-mate/",
  "project_urls": {
    "Download": "https://pypi.python.org/pypi/pathlib_mate/1.3.1#downloads",
    "Homepage": "https://github.com/MacHu-GWU/pathlib_mate-project"
  },
  "release_url": "https://pypi.org/project/pathlib-mate/1.3.1/",
  "requires_dist": [
    "Sphinx ==5.3.0 ; extra == 'docs'",
    "sphinx-jinja ==2.0.2 ; extra == 'docs'",
    "sphinx-copybutton ==0.5.1 ; extra == 'docs'",
    "sphinx-design ==0.5.0 ; extra == 'docs'",
    "furo ==2023.03.27 ; extra == 'docs'",
    "nbsphinx ==0.8.12 ; extra == 'docs'",
    "rstobj ==1.2.1 ; extra == 'docs'",
    "pygments ==2.15.1 ; extra == 'docs'",
    "ipython ==8.10.0 ; extra == 'docs'",
    "docfly ==2.0.1 ; extra == 'docs'",
    "pytest ; extra == 'tests'",
    "pytest-cov ; extra == 'tests'",
    "autopep8 ; extra == 'tests'"
  ],
  "requires_python": ">=3.7",
  "summary": "an extended and more powerful pathlib.",
  "version": "1.3.1",
  "releases": [],
  "developers": [
    "husanhe@gmail.com",
    "sanhe_hu"
  ],
  "kwds": "pathlib_mate pathlib path new_abspath badge",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pathlib_mate",
  "homepage": "https://github.com/machu-gwu/pathlib_mate-project",
  "release_count": 22,
  "dependency_ids": [
    "pypi_autopep8",
    "pypi_docfly",
    "pypi_furo",
    "pypi_ipython",
    "pypi_nbsphinx",
    "pypi_pygments",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_rstobj",
    "pypi_sphinx",
    "pypi_sphinx_copybutton",
    "pypi_sphinx_design",
    "pypi_sphinx_jinja"
  ]
}
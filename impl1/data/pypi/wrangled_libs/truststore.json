{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "# truststore\n\n[![pypi](https://img.shields.io/pypi/v/truststore)](https://pypi.org/project/truststore)\n[![ci](https://github.com/sethmlarson/truststore/actions/workflows/ci.yml/badge.svg?branch=main)](https://github.com/sethmlarson/truststore/actions/workflows/ci.yml)\n\ntruststore is a library which exposes native system certificate stores (ie \"trust stores\")\nthrough an `ssl.sslcontext`-like api. this means that python applications no longer need to\nrely on certifi as a root certificate store. native system certificate stores\nhave many helpful features compared to a static certificate bundle like certifi:\n\n- automatically update certificates as new cas are created and removed\n- fetch missing intermediate certificates\n- check certificates against certificate revocation lists (crls) to avoid monster-in-the-middle (mitm) attacks\n- managed per-system rather than per-application by a operations/it team\n- pypi is no longer a ca distribution channel \ud83e\udd73\n\nright now truststore is a stand-alone library that can be installed globally in your\napplication to immediately take advantage of the benefits in python 3.10+. truststore\nhas also been integrated into pip as an opt-in method for verifying https certificates\nwith truststore instead of certifi.\n\nlong-term the hope is to make truststore the default way to verify https certificates in pip\nand to add this functionality into python itself. wish us luck!\n\n## installation\n\ntruststore is installed from [pypi](https://pypi.org/project/truststore) with pip:\n\n```{code-block} shell\n$ python -m pip install truststore\n```\n\ntruststore **requires python 3.10 or later** and supports the following platforms:\n- macos 10.8+ via [security framework](https://developer.apple.com/documentation/security)\n- windows via [cryptoapi](https://docs.microsoft.com/en-us/windows/win32/seccrypto/cryptography-functions#certificate-verification-functions)\n- linux via openssl\n\n## user guide\n\nyou can inject `truststore` into the standard library `ssl` module so the functionality is used\nby every library by default. to do so use the `truststore.inject_into_ssl()` function:\n\n```python\nimport truststore\ntruststore.inject_into_ssl()\n\n# automatically works with urllib3, requests, aiohttp, and more:\nimport urllib3\nhttp = urllib3.poolmanager()\nresp = http.request(\"get\", \"https://example.com\")\n\nimport aiohttp\nhttp = aiohttp.clientsession()\nresp = await http.request(\"get\", \"https://example.com\")\n\nimport requests\nresp = requests.get(\"https://example.com\")\n```\n\nif you'd like finer-grained control you can create your own `truststore.sslcontext` instance\nand use it anywhere you'd use an `ssl.sslcontext`:\n\n```python\nimport ssl\nimport truststore\n\nctx = truststore.sslcontext(ssl.protocol_tls_client)\n\nimport urllib3\nhttp = urllib3.poolmanager(ssl_context=ctx)\nresp = http.request(\"get\", \"https://example.com\")\n```\n\nyou can read more in the [user guide in the documentation](https://truststore.readthedocs.io/en/latest/#user-guide).\n\n## license\n\nmit\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "truststore",
  "package_url": "https://pypi.org/project/truststore/",
  "project_url": "https://pypi.org/project/truststore/",
  "project_urls": {
    "Documentation": "https://truststore.readthedocs.io",
    "Source": "https://github.com/sethmlarson/truststore"
  },
  "release_url": "https://pypi.org/project/truststore/0.8.0/",
  "requires_dist": [],
  "requires_python": ">= 3.10",
  "summary": "verify certificates using native system trust stores",
  "version": "0.8.0",
  "releases": [],
  "developers": [
    "david@glicksoftware.com",
    "sethmichaellarson@gmail.com"
  ],
  "kwds": "truststore certificates certificate certifi openssl",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_truststore",
  "homepage": "",
  "release_count": 9,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: public domain",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: version control"
  ],
  "description": "cmp\\_version\n============\n\na script and python module to compare version numbers. use this to compare the version strings of packages, modules, really anything.\n\nsince version 3.0, cmp\\_version supports all kinds of complex version numbers, including those with releases ( like $version-5 ) or epochs (like 5:$version)\n\n\ncommandline tool\n----------------\n\nyou can use the provided *cmp-version* tool to compare two version strings. \n\nit will print to stdout \"-1\" if version1 is less/older than version2, \"0\" if they are equal, and \"1\" if version1 is greater/newer than version2.\n\n\nexamples:\n\n\t$ ./cmp\\-version 1.0.1b 1.0.1a\n\n\t1\n\n\t$ ./cmp\\-version 1.0.1b 1.0.2\n\n\t\\-1\n\n\t$ ./cmp\\-version 1.0 1.0.0\n\n\t0\n\n\ncomparing filenames\n-------------------\n\nwithout actually scanning the contents of a package, you can from a script compare the versions based on the filenames.\n\nexample:\n\n\t$ cmp\\-version glibc\\-6.2.1\\-3.x86\\_64.rpm glibc\\-6.2.3\\-1.x86\\_64.rpm\n\n\t\\-1\n\n\n\nmethod signature\n----------------\n\nthe cmp\\_version module provides a single method, *cmp\\_version* which compares two versions \"cmp\" style (think strcmp or the \"cmp\" operator in python<3).\n\n\t\n\tdef cmp\\_version(version1, version2):\n\n\t\t'''\n\n\t\t\tcmp\\_version \\- compare two version strings, checking which one represents a \"newer\" (greater) release.\n\n\t\t\tnote that even if two version strings are not equal string\\-wise, they may still be equal version\\-wise (e.x. 1.0.0 is the same version as 1.0)\n\n\t\t\t@param version1 <str> \\- a version string\n\n\t\t\t@param version2 <str> \\- a version string\n\n\t\t\t@return <int>\n\n\t\t\t\t\\-1  if version1 is older/less than version2\n\n\t\t\t\t0   if version1 is equal to version2\n\n\t\t\t\t1   if version1 is newer/greater than version2\n\n\t\t\tso for example,\n\n\t\t\t\tcmp\\_version('1.0.5b', '1.0.5a') would return 1 because 1.0.5b comes after 1.0.5a\n\n\nspecial type\n------------\n\ncmp\\_version provides a special type, \"versionstring\", which inherits string. all the comparison magic functions are implemented, such that you can directly compare versionstring objects.\n\nexample:\n\n\t>>> x = versionstring('0.1b2')\n\n\t>>> y = versionstring('.2b2')\n\n\t>>>\n\n\t>>> '0.1b2' < '.2b2' # show that as strings this version compare gives wrong answer\n\n\tfalse\n\n\t>>> x < y # show that using versionstring objects, the comparison does work\n\n\ttrue\n\n\n\nsorting lists\n-------------\n\nyou can sort a list of versions, or filenames containing versions etc like this:\n\n\t>>> from cmp\\_version import cmp\\_version, versionstring\n\n\t>>>\n\n\t>>> x = ['.9a', '0.9', '0.9.0', '1.2c', '1.1b', '1.b4.0']\n\n\t>>> sorted(x, key=versionstring)\n\n\t['0.9', '0.9.0', '.9a', '1.1b', '1.2c', '1.b4.0']\n\n\t\n\n\nreturn value\n------------\n\n* 0 is returned when the two versions are equal, even if the strings are not equal (for example \"1.0\" is the same version as \"1.0.0\")\n\n* -1 is returned when version1 is older/less than version2\n\n* 1 is returned when version1 is newer/greater than version2.\n\n\nlicense\n-------\n\nthis module is released under public domain.",
  "docs_url": "https://pythonhosted.org/cmp_version/",
  "keywords": "cmp,version,cmp_version,compare,version,number,package,rpm,commandline,tool,module,release",
  "license": "public domain",
  "name": "cmp_version",
  "package_url": "https://pypi.org/project/cmp_version/",
  "project_url": "https://pypi.org/project/cmp_version/",
  "project_urls": {
    "Homepage": "https://github.com/kata198/cmp_version"
  },
  "release_url": "https://pypi.org/project/cmp_version/3.0.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a script and python module to compare version numbers. use this to compare the version strings of packages, modules, really anything.",
  "version": "3.0.0",
  "releases": [],
  "developers": [
    "kata198@gmail.com",
    "tim_savannah"
  ],
  "kwds": "cmp_version versionstring _version versions comparing",
  "license_kwds": "public domain",
  "libtype": "pypi",
  "id": "pypi_cmp_version",
  "homepage": "https://github.com/kata198/cmp_version",
  "release_count": 6,
  "dependency_ids": []
}
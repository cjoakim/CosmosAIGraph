{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: scientific/engineering :: mathematics",
    "topic :: software development",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# tflite model maker\n\n## overview\n\nthe tflite model maker library simplifies the process of adapting and converting\na tensorflow neural-network model to particular input data when deploying this\nmodel for on-device ml applications.\n\n## requirements\n\n*   refer to\n    [requirements.txt](https://github.com/tensorflow/examples/blob/master/tensorflow_examples/lite/model_maker/requirements.txt)\n    for dependent libraries that're needed to use the library and run the demo\n    code.\n*   note that you might also need to install `sndfile` for audio tasks.\non debian/ubuntu, you can do so by `sudo apt-get install libsndfile1`\n\n## installation\n\nthere are two ways to install model maker.\n\n*   install a prebuilt pip package:\n    [`tflite-model-maker`](https://pypi.org/project/tflite-model-maker/).\n\n```shell\npip install tflite-model-maker\n```\n\nif you want to install nightly version\n[`tflite-model-maker-nightly`](https://pypi.org/project/tflite-model-maker-nightly/),\nplease follow the command:\n\n```shell\npip install tflite-model-maker-nightly\n```\n\n*   clone the source code from github and install.\n\n```shell\ngit clone https://github.com/tensorflow/examples\ncd examples/tensorflow_examples/lite/model_maker/pip_package\npip install -e .\n```\n\ntensorflow lite model maker depends on tensorflow\n[pip package](https://www.tensorflow.org/install/pip). for gpu support, please\nrefer to tensorflow's [gpu guide](https://www.tensorflow.org/install/gpu) or\n[installation guide](https://www.tensorflow.org/install).\n\n## end-to-end example\n\nfor instance, it could have an end-to-end image classification example that\nutilizes this library with just 4 lines of code, each of which representing one\nstep of the overall process. for more detail, you could refer to\n[colab for image classification](https://colab.research.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/lite/g3doc/tutorials/model_maker_image_classification.ipynb).\n\n*   step 1. import the required modules.\n\n```python\nfrom tflite_model_maker import image_classifier\nfrom tflite_model_maker.image_classifier import dataloader\n```\n\n*   step 2. load input data specific to an on-device ml app.\n\n```python\ndata = dataloader.from_folder('flower_photos/')\n```\n\n*   step 3. customize the tensorflow model.\n\n```python\nmodel = image_classifier.create(data)\n```\n\n*   step 4. evaluate the model.\n\n```python\nloss, accuracy = model.evaluate()\n```\n\n*   step 5. export to tensorflow lite model and label file in `export_dir`.\n\n```python\nmodel.export(export_dir='/tmp/')\n```\n\n## notebook\n\ncurrently, we support image classification, text classification and question\nanswer tasks. meanwhile, we provide demo code for each of them in demo folder.\n\n*   [overview for tensorflow lite model maker](https://www.tensorflow.org/lite/guide/model_maker)\n*   [python api reference](https://www.tensorflow.org/lite/api_docs/python/tflite_model_maker)\n*   [colab for image classification](https://colab.research.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/lite/g3doc/tutorials/model_maker_image_classification.ipynb)\n*   [colab for text classification](https://colab.research.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/lite/g3doc/tutorials/model_maker_text_classification.ipynb)\n*   [colab for bert question answer](https://colab.research.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/lite/g3doc/tutorials/model_maker_question_answer.ipynb)\n*   [colab for object detection](https://www.tensorflow.org/lite/tutorials/model_maker_object_detection)\n",
  "docs_url": null,
  "keywords": "tensorflow,lite,model customization,transfer learning",
  "license": "apache 2.0",
  "name": "tflite-model-maker",
  "package_url": "https://pypi.org/project/tflite-model-maker/",
  "project_url": "https://pypi.org/project/tflite-model-maker/",
  "project_urls": {
    "Download": "https://github.com/tensorflow/examples/tags",
    "Homepage": "http://github.com/tensorflow/examples"
  },
  "release_url": "https://pypi.org/project/tflite-model-maker/0.4.2/",
  "requires_dist": [
    "tf-models-official (==2.3.0)",
    "numpy (>=1.17.3)",
    "pillow (>=7.0.0)",
    "sentencepiece (>=0.1.91)",
    "tensorflow-datasets (>=2.1.0)",
    "fire (>=0.3.1)",
    "flatbuffers (>=2.0)",
    "absl-py (>=0.10.0)",
    "urllib3 (!=1.25.0,!=1.25.1,<1.26,>=1.21.1)",
    "tflite-support (>=0.4.2)",
    "tensorflowjs (<3.19.0,>=2.4.0)",
    "tensorflow (>=2.6.0)",
    "numba (==0.53)",
    "librosa (==0.8.1)",
    "lxml (>=4.6.1)",
    "PyYAML (>=5.1)",
    "matplotlib (<3.5.0,>=3.0.3)",
    "six (>=1.12.0)",
    "tensorflow-addons (>=0.11.2)",
    "neural-structured-learning (>=1.3.1)",
    "tensorflow-model-optimization (>=0.5)",
    "Cython (>=0.29.13)",
    "scann (==1.2.6)",
    "tensorflow-hub (<0.10,>=0.7.0) ; python_version < \"3\"",
    "tensorflow-hub (<0.13,>=0.7.0) ; python_version >= \"3\""
  ],
  "requires_python": "",
  "summary": "tflite model maker: a model customization library for on-device applications.",
  "version": "0.4.2",
  "releases": [],
  "developers": [
    "google_llc",
    "packages@tensorflow.org"
  ],
  "kwds": "tensorflow_examples tensorflow tflite_model_maker model_maker_text_classification model_maker",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_tflite_model_maker",
  "homepage": "http://github.com/tensorflow/examples",
  "release_count": 17,
  "dependency_ids": [
    "pypi_absl_py",
    "pypi_cython",
    "pypi_fire",
    "pypi_flatbuffers",
    "pypi_librosa",
    "pypi_lxml",
    "pypi_matplotlib",
    "pypi_neural_structured_learning",
    "pypi_numba",
    "pypi_numpy",
    "pypi_pillow",
    "pypi_pyyaml",
    "pypi_scann",
    "pypi_sentencepiece",
    "pypi_six",
    "pypi_tensorflow",
    "pypi_tensorflow_addons",
    "pypi_tensorflow_datasets",
    "pypi_tensorflow_hub",
    "pypi_tensorflow_model_optimization",
    "pypi_tensorflowjs",
    "pypi_tf_models_official",
    "pypi_tflite_support",
    "pypi_urllib3"
  ]
}
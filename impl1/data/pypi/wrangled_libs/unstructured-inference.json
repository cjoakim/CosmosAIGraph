{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "<h3 align=\"center\">\n  <img\n    src=\"https://raw.githubusercontent.com/unstructured-io/unstructured/main/img/unstructured_logo.png\"\n    height=\"200\"\n  >\n\n</h3>\n\n<h3 align=\"center\">\n  <p>open-source pre-processing tools for unstructured data</p>\n</h3>\n\nthe `unstructured-inference` repo contains hosted model inference code for layout parsing models. \nthese models are invoked via api as part of the partitioning bricks in the `unstructured` package.\n\n## installation\n\n### package\n\nrun `pip install unstructured-inference`.\n\n### detectron2\n\n[detectron2](https://github.com/facebookresearch/detectron2) is required for using models from the [layoutparser model zoo](#using-models-from-the-layoutparser-model-zoo) \nbut is not automatically installed with this package. \nfor macos and linux, build from source with:\n```shell\npip install 'git+https://github.com/facebookresearch/detectron2.git@57bdb21249d5418c130d54e2ebdc94dda7a4c01a'\n```\nother install options can be found in the \n[detectron2 installation guide](https://detectron2.readthedocs.io/en/latest/tutorials/install.html).\n\nwindows is not officially supported by detectron2, but some users are able to install it anyway. \nsee discussion [here](https://layout-parser.github.io/tutorials/installation#for-windows-users) for \ntips on installing detectron2 on windows.\n\n### repository\n\nto install the repository for development, clone the repo and run `make install` to install dependencies.\nrun `make help` for a full list of install options.\n\n## getting started\n\nto get started with the layout parsing model, use the following commands:\n\n```python\nfrom unstructured_inference.inference.layout import documentlayout\n\nlayout = documentlayout.from_file(\"sample-docs/loremipsum.pdf\")\n\nprint(layout.pages[0].elements)\n```\n\nonce the model has detected the layout and ocr'd the document, the text extracted from the first \npage of the sample document will be displayed.\nyou can convert a given element to a `dict` by running the `.to_dict()` method.\n\n## models\n\nthe inference pipeline operates by finding text elements in a document page using a detection model, then extracting the contents of the elements using direct extraction (if available), ocr, and optionally table inference models.\n\nwe offer several detection models including [detectron2](https://github.com/facebookresearch/detectron2) and [yolox](https://github.com/megvii-basedetection/yolox).\n\n### using a non-default model\n\nwhen doing inference, an alternate model can be used by passing the model object to the ingestion method via the `model` parameter. the `get_model` function can be used to construct one of our out-of-the-box models from a keyword, e.g.:\n```python\nfrom unstructured_inference.models.base import get_model\nfrom unstructured_inference.inference.layout import documentlayout\n\nmodel = get_model(\"yolox\")\nlayout = documentlayout.from_file(\"sample-docs/layout-parser-paper.pdf\", detection_model=model)\n```\n\n### using models from the layoutparser model zoo\n\nthe `unstructureddetectronmodel` class in `unstructured_inference.modelts.detectron2` uses the `faster_rcnn_r_50_fpn_3x` model pretrained on doclaynet, but by using different construction parameters, any model in the `layoutparser` [model zoo](https://layout-parser.readthedocs.io/en/latest/notes/modelzoo.html) can be used. `unstructureddetectronmodel` is a light wrapper around the `layoutparser` `detectron2layoutmodel` object, and accepts the same arguments. see [layoutparser documentation](https://layout-parser.readthedocs.io/en/latest/api_doc/models.html#layoutparser.models.detectron2layoutmodel) for details.\n\n### using your own model\n\nany detection model can be used for in the `unstructured_inference` pipeline by wrapping the model in the `unstructuredobjectdetectionmodel` class. to integrate with the `documentlayout` class, a subclass of `unstructuredobjectdetectionmodel` must have a `predict` method that accepts a `pil.image.image` and returns a list of `layoutelement`s, and an `initialize` method, which loads the model and prepares it for inference.\n\n## security policy\n\nsee our [security policy](https://github.com/unstructured-io/unstructured-inference/security/policy) for\ninformation on how to report security vulnerabilities.\n\n## learn more\n\n| section | description |\n|-|-|\n| [unstructured community github](https://github.com/unstructured-io/community) | information about unstructured.io community projects  |\n| [unstructured github](https://github.com/unstructured-io) | unstructured.io open source repositories |\n| [company website](https://unstructured.io) | unstructured.io product and company info |\n\n\n",
  "docs_url": null,
  "keywords": "nlp pdf html cv xml parsing preprocessing",
  "license": "apache-2.0",
  "name": "unstructured-inference",
  "package_url": "https://pypi.org/project/unstructured-inference/",
  "project_url": "https://pypi.org/project/unstructured-inference/",
  "project_urls": {
    "Homepage": "https://github.com/Unstructured-IO/unstructured-inference"
  },
  "release_url": "https://pypi.org/project/unstructured-inference/0.7.20/",
  "requires_dist": [
    "layoutparser[layoutmodels,tesseract]",
    "python-multipart",
    "huggingface-hub",
    "opencv-python (!=4.7.0.68)",
    "onnx",
    "onnxruntime (<1.16)",
    "transformers (>=4.25.1)",
    "rapidfuzz"
  ],
  "requires_python": ">=3.7.0",
  "summary": "a library for performing inference using trained models.",
  "version": "0.7.20",
  "releases": [],
  "developers": [
    "devops@unstructuredai.io",
    "unstructured_technologies"
  ],
  "kwds": "unstructured_inference unstructureddetectronmodel unstructured detectron2layoutmodel layoutparser",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_unstructured_inference",
  "homepage": "https://github.com/unstructured-io/unstructured-inference",
  "release_count": 72,
  "dependency_ids": [
    "pypi_huggingface_hub",
    "pypi_layoutparser",
    "pypi_onnx",
    "pypi_onnxruntime",
    "pypi_opencv_python",
    "pypi_python_multipart",
    "pypi_rapidfuzz",
    "pypi_transformers"
  ]
}
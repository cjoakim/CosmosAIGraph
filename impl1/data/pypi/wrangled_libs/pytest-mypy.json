{
  "classifiers": [
    "development status :: 4 - beta",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development :: testing"
  ],
  "description": "pytest-mypy\n===================================\n\nmypy static type checker plugin for pytest\n\n.. image:: https://img.shields.io/pypi/v/pytest-mypy.svg\n   :target: https://pypi.org/project/pytest-mypy/\n   :alt: see latest release on pypi\n\nfeatures\n--------\n\n* runs the mypy static type checker on your source files as part of your pytest test runs.\n* does for `mypy`_ what the `pytest-flake8`_ plugin does for `flake8`_.\n* this is a work in progress \u2013 pull requests appreciated.\n\n\ninstallation\n------------\n\nyou can install \"pytest-mypy\" via `pip`_ from `pypi`_:\n\n.. code-block:: bash\n\n    $ pip install pytest-mypy\n\nusage\n-----\n\nyou can enable pytest-mypy with the ``--mypy`` flag:\n\n.. code-block:: bash\n\n    $ py.test --mypy test_*.py\n\nmypy supports `reading configuration settings <http://mypy.readthedocs.io/en/latest/config_file.html>`_ from a ``mypy.ini`` file.\nalternatively, the plugin can be configured in a ``conftest.py`` to invoke mypy with extra options:\n\n.. code-block:: python\n\n    def pytest_configure(config):\n        plugin = config.pluginmanager.getplugin('mypy')\n        plugin.mypy_argv.append('--check-untyped-defs')\n\nyou can restrict your test run to only perform mypy checks and not any other tests by using the `-m` option:\n\n.. code-block:: bash\n\n    py.test --mypy -m mypy test_*.py\n\nlicense\n-------\n\ndistributed under the terms of the `mit`_ license, \"pytest-mypy\" is free and open source software\n\nissues\n------\n\nif you encounter any problems, please `file an issue`_ along with a detailed description.\n\nmeta\n----\n\ndaniel bader \u2013 `@dbader_org`_ \u2013 https://dbader.org \u2013 mail@dbader.org\n\nhttps://github.com/dbader/pytest-mypy\n\n\n.. _`mit`: http://opensource.org/licenses/mit\n.. _`file an issue`: https://github.com/dbader/pytest-mypy/issues\n.. _`pip`: https://pypi.python.org/pypi/pip/\n.. _`pypi`: https://pypi.python.org/pypi\n.. _`mypy`: http://mypy-lang.org/\n.. _`pytest-flake8`: https://pypi.python.org/pypi/pytest-flake8\n.. _`flake8`: https://pypi.python.org/pypi/flake8\n.. _`@dbader_org`: https://twitter.com/dbader_org\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pytest-mypy",
  "package_url": "https://pypi.org/project/pytest-mypy/",
  "project_url": "https://pypi.org/project/pytest-mypy/",
  "project_urls": {
    "Homepage": "https://github.com/dbader/pytest-mypy"
  },
  "release_url": "https://pypi.org/project/pytest-mypy/0.10.3/",
  "requires_dist": [
    "attrs (>=19.0)",
    "filelock (>=3.0)",
    "mypy (>=0.500) ; python_version < \"3.8\"",
    "pytest (>=6.2) ; python_version >= \"3.10\"",
    "mypy (>=0.900) ; python_version >= \"3.11\"",
    "pytest (>=4.6) ; python_version >= \"3.6\" and python_version < \"3.10\"",
    "mypy (>=0.700) ; python_version >= \"3.8\" and python_version < \"3.9\"",
    "mypy (>=0.780) ; python_version >= \"3.9\" and python_version < \"3.11\""
  ],
  "requires_python": ">=3.6",
  "summary": "mypy static type checker plugin for pytest",
  "version": "0.10.3",
  "releases": [],
  "developers": [
    "daniel_bader",
    "david@tucker.name",
    "david_tucker",
    "mail@dbader.org"
  ],
  "kwds": "pytest_configure pytest pypi mypy_argv mypy",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_mypy",
  "homepage": "https://github.com/dbader/pytest-mypy",
  "release_count": 23,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_filelock",
    "pypi_mypy",
    "pypi_pytest"
  ]
}
{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "==================================\nphi_k correlation analyzer library\n==================================\n\n* version: 0.12.3. released: dec 2022\n* release notes: https://github.com/kaveio/phik/blob/master/changes.rst\n* repository: https://github.com/kaveio/phik\n* documentation: https://phik.readthedocs.io\n* publication: `[offical] <https://www.sciencedirect.com/science/article/abs/pii/s0167947320301341>`_ `[arxiv pre-print] <https://arxiv.org/abs/1811.11440>`_\n\nphi_k is a practical correlation constant that works consistently between categorical, ordinal and interval variables.\nit is based on several refinements to pearson's hypothesis test of independence of two variables. essentially, the\ncontingency test statistic of two variables is interpreted as coming from a rotated bi-variate normal distribution,\nwhere the tilt is interpreted as phi_k.\n\nthe combined features of phi_k form an advantage over existing coefficients. first, it works consistently between categorical, ordinal and interval variables.\nsecond, it captures non-linear dependency. third, it reverts to the pearson correlation coefficient in case of a bi-variate normal input distribution.\nthese are useful features when studying the correlation matrix of variables with mixed types.\n\nfor details on the methodology behind the calculations, please see our publication. emphasis is paid to the proper evaluation of statistical significance of correlations and to the interpretation of variable relationships\nin a contingency table, in particular in case of low statistics samples.\nthe presented algorithms are easy to use and available through this public python library.\n\nexample notebooks\n=================\n\n.. list-table::\n   :widths: 60 40\n   :header-rows: 1\n\n   * - static link\n     - google colab link\n   * - `basic tutorial <https://nbviewer.jupyter.org/github/kaveio/phik/blob/master/phik/notebooks/phik_tutorial_basic.ipynb>`_\n     - `basic on colab <https://colab.research.google.com/github/kaveio/phik/blob/master/phik/notebooks/phik_tutorial_basic.ipynb>`_\n   * - `advanced tutorial (detailed configuration) <https://nbviewer.jupyter.org/github/kaveio/phik/blob/master/phik/notebooks/phik_tutorial_advanced.ipynb>`_\n     - `advanced on colab <https://colab.research.google.com/github/kaveio/phik/blob/master/phik/notebooks/phik_tutorial_advanced.ipynb>`_\n   * - `spark tutorial <https://nbviewer.jupyter.org/github/kaveio/phik/blob/master/phik/notebooks/phik_tutorial_spark.ipynb>`_\n     - no spark available\n\ndocumentation\n=============\n\nthe entire phi_k documentation including tutorials can be found at `read-the-docs <https://phik.readthedocs.io>`_.\nsee the tutorials for detailed examples on how to run the code with pandas. we also have one example on how\ncalculate the phi_k correlation matrix for a spark dataframe.\n\ncheck it out\n============\n\nthe phi_k library requires python >= 3.7 and is pip friendly. to get started, simply do:\n\n.. code-block:: bash\n\n  $ pip install phik\n\nor check out the code from out github repository:\n\n.. code-block:: bash\n\n  $ git clone https://github.com/kaveio/phik.git\n  $ pip install -e phik/\n\nwhere in this example the code is installed in edit mode (option -e).\n\nyou can now use the package in python with:\n\n.. code-block:: python\n\n  import phik\n\n**congratulations, you are now ready to use the phik correlation analyzer library!**\n\n\nquick run\n=========\n\nas a quick example, you can do:\n\n.. code-block:: python\n\n  import pandas as pd\n  import phik\n  from phik import resources, report\n\n  # open fake car insurance data\n  df = pd.read_csv( resources.fixture('fake_insurance_data.csv.gz') )\n  df.head()\n\n  # pearson's correlation matrix between numeric variables (pandas functionality)\n  df.corr()\n\n  # get the phi_k correlation matrix between all variables\n  df.phik_matrix()\n\n  # get global correlations based on phi_k correlation matrix\n  df.global_phik()\n\n  # get the significance matrix (expressed as one-sided z)\n  # of the hypothesis test of each variable-pair dependency\n  df.significance_matrix()\n\n  # contingency table of two columns\n  cols = ['mileage','car_size']\n  df[cols].hist2d()\n\n  # normalized residuals of contingency test applied to cols\n  df[cols].outlier_significance_matrix()\n\n  # show the normalized residuals of each variable-pair\n  df.outlier_significance_matrices()\n\n  # generate a phik correlation report and save as test.pdf\n  report.correlation_report(df, pdf_file_name='test.pdf')\n\n\nfor all available examples, please see the `tutorials <https://phik.readthedocs.io/en/latest/tutorials.html>`_ at read-the-docs.\n\n\ncontact and support\n===================\n\n* issues and ideas: https://github.com/kaveio/phik/issues\n\nplease note that support is (only) provided on a best-effort basis.\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2",
  "name": "phik",
  "package_url": "https://pypi.org/project/phik/",
  "project_url": "https://pypi.org/project/phik/",
  "project_urls": {
    "Homepage": "http://phik.rtfd.io"
  },
  "release_url": "https://pypi.org/project/phik/0.12.3/",
  "requires_dist": [
    "numpy (>=1.18.0)",
    "scipy (>=1.5.2)",
    "pandas (>=0.25.1)",
    "matplotlib (>=2.2.3)",
    "joblib (>=0.14.1)",
    "pytest (>=4.0.2) ; extra == 'test'",
    "pytest-pylint (>=0.13.0) ; extra == 'test'",
    "nbconvert (>=5.3.1) ; extra == 'test'",
    "jupyter-client (>=5.2.3) ; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "phi_k correlation analyzer library",
  "version": "0.12.3",
  "releases": [],
  "developers": [
    "kave@kpmg.com",
    "kpmg_n"
  ],
  "kwds": "phik_tutorial_advanced phik_matrix phik_tutorial_basic phik phi_k",
  "license_kwds": "apache-2",
  "libtype": "pypi",
  "id": "pypi_phik",
  "homepage": "http://phik.rtfd.io",
  "release_count": 21,
  "dependency_ids": [
    "pypi_joblib",
    "pypi_jupyter_client",
    "pypi_matplotlib",
    "pypi_nbconvert",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pytest",
    "pypi_pytest_pylint",
    "pypi_scipy"
  ]
}
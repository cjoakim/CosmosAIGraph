{
  "classifiers": [
    "development status :: 7 - inactive",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: macos",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: information analysis",
    "topic :: scientific/engineering :: mathematics",
    "topic :: scientific/engineering :: physics",
    "topic :: software development",
    "topic :: utilities"
  ],
  "description": ".. image:: https://raw.githubusercontent.com/scikit-hep/uproot3/master/docs/source/logo-300px.png\n   :alt: uproot\n   :target: https://github.com/scikit-hep/uproot3\n\n.. inclusion-marker-1-5-do-not-remove\n\nuproot (originally \u03bcproot, for \"micro-python root\") is a reader and a writer of the `root file format <https://root.cern/>`__ using only python and numpy. unlike the standard c++ root implementation, uproot is only an i/o library, primarily intended to stream data into machine learning libraries in python. unlike pyroot and root_numpy, uproot does not depend on c++ root. instead, it uses numpy to cast blocks of data from the root file as numpy arrays.\n\npython does not necessarily mean slow. as long as the data blocks (\"baskets\") are large, this \"array at a time\" approach can even be faster than \"event at a time\" c++. below, the rate of reading data into arrays with uproot is shown to be faster than c++ root (left) and root_numpy (right), as long as the baskets are tens of kilobytes or larger (for a variable number of muons per event in an ensemble of different physics samples; higher is better).\n\n\n.. image:: https://raw.githubusercontent.com/scikit-hep/uproot3/master/docs/root-none-muon.png\n   :width: 350 px\n.. image:: https://raw.githubusercontent.com/scikit-hep/uproot3/master/docs/rootnumpy-none-muon.png\n   :width: 350 px\n\n\nuproot is not maintained by the root project team, so post bug reports here as `github issues <https://github.com/scikit-hep/uproot3/issues>`__, not on a root forum. thanks!\n\n.. inclusion-marker-2-do-not-remove\n\ninstallation\n============\n\ninstall uproot like any other python package:\n\n.. code-block:: bash\n\n    pip install uproot3                      # maybe with sudo or --user, or in virtualenv\n\nthe pip installer automatically installs strict dependencies; the conda installer also installs optional dependencies (except for pandas).\n\nstrict dependencies:\n--------------------\n\n- `numpy <https://scipy.org/install.html>`__ (1.13.1+)\n- `awkward array 0.x <https://github.com/scikit-hep/awkward-0.x>`__\n- `uproot3-methods <https://github.com/scikit-hep/uproot3-methods>`__\n- `cachetools <https://pypi.org/project/cachetools>`__\n\noptional dependencies:\n----------------------\n\n- `lz4 <https://pypi.org/project/lz4>`__ to read/write lz4-compressed root files\n- `xxhash <https://pypi.org/project/xxhash/>`__ to read/write lz4-compressed root files\n- `lzma <https://pypi.org/project/backports.lzma>`__ to read/write lzma-compressed root files in python 2\n- `xrootd <https://anaconda.org/conda-forge/xrootd>`__ to access remote files through xrootd\n- `requests <https://pypi.org/project/requests>`__ to access remote files through http\n- `pandas <https://pandas.pydata.org>`__ to fill pandas dataframes instead of numpy arrays\n\n**reminder: you do not need c++ root to run uproot.**\n\ntutorial\n========\n\nsee the `project homepage <https://github.com/scikit-hep/uproot3>`__ for a `tutorial <https://github.com/scikit-hep/uproot3#tutorial>`__.\n\nrun `that tutorial <https://mybinder.org/v2/gh/scikit-hep/uproot3/master?urlpath=lab/tree/binder%2ftutorial.ipynb>`__ on binder.\n\n**tutorial contents:**\n\n* `introduction <https://github.com/scikit-hep/uproot3#introduction>`__\n* `what is uproot? <https://github.com/scikit-hep/uproot3#what-is-uproot>`__\n* `exploring a file <https://github.com/scikit-hep/uproot3#exploring-a-file>`__\n\n  - `compressed objects in root files <https://github.com/scikit-hep/uproot3#compressed-objects-in-root-files>`__\n  - `exploring a ttree <https://github.com/scikit-hep/uproot3#exploring-a-ttree>`__\n  - `some terminology <https://github.com/scikit-hep/uproot3#some-terminology>`__\n\n* `reading arrays from a ttree <https://github.com/scikit-hep/uproot3#reading-arrays-from-a-ttree>`__\n* `caching data <https://github.com/scikit-hep/uproot3#caching-data>`__\n\n  - `automatically managed caches <https://github.com/scikit-hep/uproot3#automatically-managed-caches>`__\n  - `caching at all levels of abstraction <https://github.com/scikit-hep/uproot3#caching-at-all-levels-of-abstraction>`__\n\n* `lazy arrays <https://github.com/scikit-hep/uproot3#lazy-arrays>`__\n\n  - `lazy array of many files <https://github.com/scikit-hep/uproot3#lazy-array-of-many-files>`__\n  - `lazy arrays with caching <https://github.com/scikit-hep/uproot3#lazy-arrays-with-caching>`__\n  - `lazy arrays as lightweight skims <https://github.com/scikit-hep/uproot3#lazy-arrays-as-lightweight-skims>`__\n  - `lazy arrays in dask <https://github.com/scikit-hep/uproot3#lazy-arrays-in-dask>`__\n\n* `iteration <https://github.com/scikit-hep/uproot3#iteration>`__\n\n  - `filenames and entry numbers while iterating <https://github.com/scikit-hep/uproot3#filenames-and-entry-numbers-while-iterating>`__\n  - `limiting the number of entries to be read <https://github.com/scikit-hep/uproot3#limiting-the-number-of-entries-to-be-read>`__\n  - `controlling lazy chunk and iteration step sizes <https://github.com/scikit-hep/uproot3#controlling-lazy-chunk-and-iteration-step-sizes>`__\n  - `caching and iteration <https://github.com/scikit-hep/uproot3#caching-and-iteration>`__\n\n* `changing the output container type <https://github.com/scikit-hep/uproot3#changing-the-output-container-type>`__\n* `filling pandas dataframes <https://github.com/scikit-hep/uproot3#filling-pandas-dataframes>`__\n* `selecting and interpreting branches <https://github.com/scikit-hep/uproot3#selecting-and-interpreting-branches>`__\n\n  - `tbranch interpretations <https://github.com/scikit-hep/uproot3#tbranch-interpretations>`__\n  - `reading data into a preexisting array <https://github.com/scikit-hep/uproot3#reading-data-into-a-preexisting-array>`__\n  - `passing many new interpretations in one call <https://github.com/scikit-hep/uproot3#passing-many-new-interpretations-in-one-call>`__\n  - `multiple values per event: fixed size arrays <https://github.com/scikit-hep/uproot3#multiple-values-per-event-fixed-size-arrays>`__\n  - `multiple values per event: leaf-lists <https://github.com/scikit-hep/uproot3#multiple-values-per-event-leaf-lists>`__\n  - `multiple values per event: jagged arrays <https://github.com/scikit-hep/uproot3#multiple-values-per-event-jagged-arrays>`__\n  - `jagged array performance <https://github.com/scikit-hep/uproot3#jagged-array-performance>`__\n  - `special physics objects: lorentz vectors <https://github.com/scikit-hep/uproot3#special-physics-objects-lorentz-vectors>`__\n  - `variable-width values: strings <https://github.com/scikit-hep/uproot3#variable-width-values-strings>`__\n  - `arbitrary objects in ttrees <https://github.com/scikit-hep/uproot3#arbitrary-objects-in-ttrees>`__\n  - `doubly nested jagged arrays (i.e. std::vector<std::vector<t>>) <https://github.com/scikit-hep/uproot3#doubly-nested-jagged-arrays-ie-stdvectorstdvectort>`__\n\n* `parallel array reading <https://github.com/scikit-hep/uproot3#parallel-array-reading>`__\n* `histograms, tprofiles, tgraphs, and others <https://github.com/scikit-hep/uproot3#histograms-tprofiles-tgraphs-and-others>`__\n* `creating and writing data to root files <https://github.com/scikit-hep/uproot3#creating-and-writing-data-to-root-files>`__\n\n  - `writing histograms <https://github.com/scikit-hep/uproot3#writing-histograms>`__\n  - `writing ttrees <https://github.com/scikit-hep/uproot3#writing-ttrees>`__\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd 3-clause",
  "name": "uproot3",
  "package_url": "https://pypi.org/project/uproot3/",
  "project_url": "https://pypi.org/project/uproot3/",
  "project_urls": {
    "Download": "https://github.com/scikit-hep/uproot3/releases",
    "Homepage": "https://github.com/scikit-hep/uproot3"
  },
  "release_url": "https://pypi.org/project/uproot3/3.14.4/",
  "requires_dist": [
    "numpy (>=1.13.1)",
    "awkward0",
    "uproot3-methods",
    "cachetools",
    "lz4 ; extra == 'compress'",
    "zstandard ; extra == 'compress'",
    "xxhash ; extra == 'compress'",
    "backports.lzma ; (python_version < \"3.3\") and extra == 'compress'",
    "pytest (>=3.9) ; extra == 'testing'",
    "pkgconfig ; extra == 'testing'",
    "lz4 ; extra == 'testing'",
    "zstandard ; extra == 'testing'",
    "xxhash ; extra == 'testing'",
    "mock ; extra == 'testing'",
    "requests ; extra == 'testing'",
    "backports.lzma ; (python_version < \"3.3\") and extra == 'testing'"
  ],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
  "summary": "root i/o in pure python and numpy.",
  "version": "3.14.4",
  "releases": [],
  "developers": [
    "jim_pivarski",
    "pivarski@princeton.edu"
  ],
  "kwds": "uproot3 uproot root_numpy root rootnumpy",
  "license_kwds": "bsd 3-clause",
  "libtype": "pypi",
  "id": "pypi_uproot3",
  "homepage": "https://github.com/scikit-hep/uproot3",
  "release_count": 5,
  "dependency_ids": [
    "pypi_awkward0",
    "pypi_backports.lzma",
    "pypi_cachetools",
    "pypi_lz4",
    "pypi_mock",
    "pypi_numpy",
    "pypi_pkgconfig",
    "pypi_pytest",
    "pypi_requests",
    "pypi_uproot3_methods",
    "pypi_xxhash",
    "pypi_zstandard"
  ]
}
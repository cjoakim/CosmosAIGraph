{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "topic :: software development :: debuggers",
    "topic :: software development :: libraries"
  ],
  "description": "adds variables to python traceback. simple, lightweight, controllable. debug reasons of exceptions by logging or pretty printing colorful variable contexts for each frame in a stacktrace, showing every value. dump locals environments after errors to console, files, and loggers. works with jupiter and ipython.\n![example](https://raw.githubusercontent.com/andy-landy/traceback_with_variables/master/header.png)\n\n<h2 align=\"center\">python traceback (error message) printing variables</h2>\n<p align=\"center\">very simple to use, but versatile when needed. try for debug and keep for production.</p>\n\n<p align=\"center\">\n<a href=\"https://github.com/andy-landy/traceback_with_variables/actions\"><img alt=\"actions status\" src=\"https://github.com/andy-landy/traceback_with_variables/workflows/tests/badge.svg\"></a>\n<a href=\"https://codecov.io/gh/andy-landy/traceback_with_variables\"><img alt=\"codecov\" src=\"https://codecov.io/gh/andy-landy/traceback_with_variables/branch/master/graph/badge.svg\"></a>\n<a href=\"https://lgtm.com/projects/g/andy-landy/traceback_with_variables/context:python\"><img alt=\"language grade: python\" src=\"https://img.shields.io/lgtm/grade/python/g/andy-landy/traceback_with_variables.svg\"/></a>\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/license\"><img alt=\"license: mit\" src=\"https://img.shields.io/github/license/andy-landy/traceback_with_variables?color=informational\"></a>\n<a href=\"https://pypi.org/project/traceback-with-variables\"><img alt=\"pypi\" src=\"https://img.shields.io/pypi/v/traceback-with-variables\"></a>\n<a href=\"https://anaconda.org/conda-forge/traceback-with-variables\"><img src=\"https://img.shields.io/conda/vn/conda-forge/traceback-with-variables\"></a>\n<a href=\"https://pypi.org/project/traceback-with-variables\"><img alt=\"pypi\" src=\"https://img.shields.io/badge/python-3.5+-blue.svg\"></a>\n<a href=\"https://superuser.com/questions/413073/windows-console-with-ansi-colors-handling\"><img title=\"windows, mac, linux etc.\" alt=\"platform\" src=\"https://img.shields.io/badge/platform-all-blue.svg\"></a>\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/override.py#l9\"><img title=\"type hints everywhere\" alt=\"annotations coverage\" src=\"https://img.shields.io/badge/type--hints-100%25-blueviolet.svg\"></a>\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/override.py#l8\"><img title=\"no obscure objects, only transparent functions and data classes\" alt=\"no-oop\" src=\"https://img.shields.io/badge/no oop-100%25-blueviolet.svg\"></a>\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/setup.py\"><img alt=\"dependencies\" src=\"https://img.shields.io/badge/dependencies-0-blueviolet.svg\"></a>\n<a href=\"https://colab.research.google.com/github/andy-landy/traceback_with_variables/blob/master/examples/colab.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"open in colab\"/></a>\n<a href=\"https://gitter.im/andy-landy/traceback-with-variables\"><img alt=\"gitter\" src=\"https://img.shields.io/gitter/room/andy-landy/traceback-with-variables?color=blueviolet\"></a>\n<!--\n<a href=\"https://pypi.org/project/traceback-with-variables\"><img alt=\"pip downloads\" src=\"https://static.pepy.tech/personalized-badge/traceback-with-variables?period=total&units=none&left_color=grey&right_color=orange&left_text=pip downloads\"></a>\n<a href=\"https://anaconda.org/conda-forge/traceback-with-variables/\"><img alt=\"conda-forge downloads\" src=\"https://img.shields.io/conda/dn/conda-forge/traceback-with-variables?color=orange&label=conda%20downloads\"></a>\n-->\n</p>\n<br/>\n\n> \u201cit is useless work that darkens the heart.\u201d \n> <em>\u2013 ursula k. le guin</em>\n\ntired of useless job of putting all your variables into debug exception messages? just stop it. \nautomate it and clean your code. once and for all.\n\n---\n\n_contents:_ **[installation](#installation)** | **[\ud83d\ude80 quick start](#-quick-start)**\n| **[colors](#colors)**\n| **[how does it save my time?](#how-does-it-save-my-time)** | \n**[examples and recipes](#examples-and-recipes)** | **[reference](#reference)**\n| **[faq](#faq)**\n\n---\n\n> :warning: **this module is actively updated and has a substantial list of features to add this week**: so any proposal or advice or warning is very welcome and will be taken into account of course. when i started it i wanted to make a tool meeting all standard use cases. i think in this particular domain this is rather achievable, so i'll try. note `next_version` branch also. have fun!\n\n---\n\n### installation\n\n```\npip install traceback-with-variables\n```\n```\nconda install -c conda-forge traceback-with-variables\n```\n\n### \ud83d\ude80 quick start\n\nusing without code editing, <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/external_script.sh\">running your script/command/module</a>:\n```\ntraceback-with-variables tested_script.py ...srcipt's args...\n```\n\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/simple.py\">simplest usage in regular python</a>, for the whole program:\n```python\n    from traceback_with_variables import activate_by_import\n```\n\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/simple_jupyter.py\">simplest usage in jupyter or ipython</a>, for the whole program:\n```python\n    from traceback_with_variables import activate_in_ipython_by_import\n```\n\n\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/print_for_function.py\">decorator</a>, for a single function:\n```python\n    @prints_exc\n    # def main(): or def some_func(...):\n```\n\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/print_for_code_block.py\">context</a>, for a single code block:\n```python\n    with printing_exc():\n```\n\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/work_with_traceback_lines.py\">work with traceback lines</a> in a custom manner:\n```python\n    lines = list(iter_exc_lines(e))\n```\n\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/print_cur_tb.py\">no exception but you want to print the stack anyway?</a>:\n```python\n    print_cur_tb()\n```\n\nusing a logger [<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/log_for_function.py\">with a decorator</a>, <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/log_for_code_block.py\">with a context</a>]:\n```python\n    with printing_exc(file_=loggerasfile(logger)):\n    # or\n    @prints_exc(file_=loggerasfile(logger)): \n```\n\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/print_traceback.py\">print traceback</a> in interactive mode after an exception:\n```\n    >>> print_exc()\n```\n\n<a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/format_customized.py\">customize</a> any of the previous examples:\n```python\n    default_format.max_value_str_len = 10000\n    default_format.skip_files_except = 'my_project'\n```\n\n\n### colors\n\n![example](https://raw.githubusercontent.com/andy-landy/traceback_with_variables/master/color_schemes.png)\n\n\n### how does it save my time?\n\n* turn a code totally covered by debug formatting from this:\n\n    ```diff\n      def main():\n          sizes_str = sys.argv[1]\n          h1, w1, h2, w2 = map(int, sizes_str.split())\n    -     try:\n              return get_avg_ratio([h1, w1], [h2, w2])\n    -     except:\n    -         logger.error(f'something happened :(, variables = {locals()[:1000]}')\n    -         raise\n    -         # or\n    -         raise mytoolexception(f'something happened :(, variables = {locals()[:1000]}')\n              \n      def get_avg_ratio(size1, size2):\n    -     try:\n              return mean(get_ratio(h, w) for h, w in [size1, size2])\n    -     except:\n    -         logger.error(f'something happened :(, size1 = {size1}, size2 = {size2}')\n    -         raise\n    -         # or\n    -         raise mytoolexception(f'something happened :(, size1 = {size1}, size2 = {size2}')\n    \n      def get_ratio(height, width):\n    -     try:\n              return height / width\n    -     except:\n    -         logger.error(f'something happened :(, width = {width}, height = {height}')\n    -         raise\n    -         # or\n    -         raise mytoolexception(f'something happened :(, width = {width}, height = {height}')\n    ```\n    into this (zero debug code):\n    \n    ```diff\n    + from traceback_with_variables import activate_by_import\n    \n      def main():\n          sizes_str = sys.argv[1]\n          h1, w1, h2, w2 = map(int, sizes_str.split())\n          return get_avg_ratio([h1, w1], [h2, w2])\n              \n      def get_avg_ratio(size1, size2):\n          return mean(get_ratio(h, w) for h, w in [size1, size2])\n    \n      def get_ratio(height, width):\n          return height / width\n    ```\n    \n    and obtain total debug info spending 0 lines of code:\n    \n    ```\n    traceback with variables (most recent call last):\n      file \"./temp.py\", line 7, in main\n        return get_avg_ratio([h1, w1], [h2, w2])\n          sizes_str = '300 200 300 0'\n          h1 = 300\n          w1 = 200\n          h2 = 300\n          w2 = 0\n      file \"./temp.py\", line 10, in get_avg_ratio\n        return mean([get_ratio(h, w) for h, w in [size1, size2]])\n          size1 = [300, 200]\n          size2 = [300, 0]\n      file \"./temp.py\", line 10, in <listcomp>\n        return mean([get_ratio(h, w) for h, w in [size1, size2]])\n          .0 = <tuple_iterator object at 0x7ff61e35b820>\n          h = 300\n          w = 0\n      file \"./temp.py\", line 13, in get_ratio\n        return height / width\n          height = 300\n          width = 0\n    builtins.zerodivisionerror: division by zero\n    ```\n\n* automate your logging too:\n    \n    ```python\n    logger = logging.getlogger('main')\n    \n    def main():\n        ...\n        with printing_exc(file_=loggerasfile(logger))\n            ...\n    ```\n    \n    ```\n    2020-03-30 18:24:31 main error traceback with variables (most recent call last):\n    2020-03-30 18:24:31 main error   file \"./temp.py\", line 7, in main\n    2020-03-30 18:24:31 main error     return get_avg_ratio([h1, w1], [h2, w2])\n    2020-03-30 18:24:31 main error       sizes_str = '300 200 300 0'\n    2020-03-30 18:24:31 main error       h1 = 300\n    2020-03-30 18:24:31 main error       w1 = 200\n    2020-03-30 18:24:31 main error       h2 = 300\n    2020-03-30 18:24:31 main error       w2 = 0\n    2020-03-30 18:24:31 main error   file \"./temp.py\", line 10, in get_avg_ratio\n    2020-03-30 18:24:31 main error     return mean([get_ratio(h, w) for h, w in [size1, size2]])\n    2020-03-30 18:24:31 main error       size1 = [300, 200]\n    2020-03-30 18:24:31 main error       size2 = [300, 0]\n    2020-03-30 18:24:31 main error   file \"./temp.py\", line 10, in <listcomp>\n    2020-03-30 18:24:31 main error     return mean([get_ratio(h, w) for h, w in [size1, size2]])\n    2020-03-30 18:24:31 main error       .0 = <tuple_iterator object at 0x7ff412acb820>\n    2020-03-30 18:24:31 main error       h = 300\n    2020-03-30 18:24:31 main error       w = 0\n    2020-03-30 18:24:31 main error   file \"./temp.py\", line 13, in get_ratio\n    2020-03-30 18:24:31 main error     return height / width\n    2020-03-30 18:24:31 main error       height = 300\n    2020-03-30 18:24:31 main error       width = 0\n    2020-03-30 18:24:31 main error builtins.zerodivisionerror: division by zero\n    ```\n\n* free your exceptions of unnecessary information load:\n    \n    ```python\n    def make_a_cake(sugar, eggs, milk, flour, salt, water):\n        is_sweet = sugar > salt\n        is_vegan = not (eggs or milk)\n        is_huge = (sugar + eggs + milk + flour + salt + water > 10000)\n        if not (is_sweet or is_vegan or is_huge):\n            raise valueerror('this is unacceptable, guess why!')\n        ...\n    ```\n\n* \u2014 should i use it after debugging is over, i.e. *in production*?\n\n    yes, of course! that way it might save you even more time (watch out for sensitive data\n    like passwords and tokens in you logs). note: you can deploy more serious frameworks,\n    e.g. `sentry` :)\n\n<br/>\n\n* stop this tedious practice in production:\n   \n     step 1: notice some exception in a production service. \\\n     step 2: add more printouts, logging, and exception messages. \\\n     step 3: rerun the service. \\\n     step 4: wait till (hopefully) the bug repeats. \\\n     step 5: examine the printouts and possibly add some more info (then go back to step 2). \\\n     step 6: erase all recently added printouts, logging and exception messages. \\\n     step 7: go back to step 1 once bugs appear.\n     \n\n### examples and recipes\n\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/external_script.sh\">run python code without changes: a script, a module, a commnad</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/simple.py\">simple usage</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/simple_jupyter.py\">simple usage in jupyter or ipython</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/print_cur_tb.py\">print current stack, when there's no exception</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/interactive_print_last_exception.py\">print last exception in python console</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/change_global_printer.py\">manually change global printer</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/change_global_printer_in_jupyter.py\">manually change global printer in jupyter or ipython</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/print_for_function.py\">working with a function</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/log_for_function.py\">working with a function, logging</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/print_for_code_block.py\">working with a code block</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/log_for_code_block.py\">working with a code block, logging</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/work_with_traceback_lines.py\">get traceback lines for custom things</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/flask.py\">using with `flask`</a>\n* <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/examples/format_customized.py\">customize the output</a>\n\n### reference\n\n#### all functions have `fmt=` argument, a `format` object with fields:\n* `max_value_str_len` max length of each variable string, -1 to disable, default=1000\n* `max_exc_str_len` max length of exception, should variable print fail, -1 to disable, default=10000\n* `before` number of code lines before the raising line, default=0\n* `after` number of code lines after the raising line, default=0\n* `ellipsis_` string to denote long strings truncation, default=`...`\n* `skip_files_except` use to print only certain files; list of regexes, ignored if empty, default=none\n* `brief_files_except` use to print variables only in certain files; list of regexes, ignored if empty, default=none\n* `custom_var_printers` list of pairs of (filter, printer); filter is a name fragment, a type or a function or a list thereof; printer returns `none` to skip a var\n* `color_scheme` is `none` or one of <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/color.py\">`colorschemes`</a>: `.none` , `.common`, `.nice`, `.synthwave`. `none` is for auto-detect \n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/activate_by_import.py\">`activate_by_import`</a>\njust import it. no arguments, for real quick use in regular python.\n```python\nfrom traceback_with_variables import activate_by_import\n```\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/activate_in_ipython_by_import.py\">`activate_in_ipython_by_import`</a>\njust import it. no arguments, for real quick use in jupyter or ipython.\n```python\nfrom traceback_with_variables import activate_in_ipython_by_import\n```\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/global_hooks.py\">`global_print_exc`</a>\ncall once in the beginning of your program, to change how traceback after an uncaught exception looks.\n```python\ndef main():\n    override_print_exc(...)\n```\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/global_hooks.py\">`global_print_exc_in_ipython`</a>\ncall once in the beginning of your program, to change how traceback after an uncaught exception looks.\n```python\ndef main():\n    override_print_exc(...)\n```\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/print.py\">`print_exc`</a>\nprints traceback for a given/current/last (first being not `none` in the priority list) exception to a file, default=`sys.stderr`. convenient for manual console or jupyter sessions or custom try/except blocks. note that it can be called with a given exception value or it can auto discover current exception in an `except:` block or it can auto descover last exception value (long) after `try/catch` block.\n```python\nprint_exc()\n```\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/print.py\">`print_cur_tb`</a>\nprints current traceback when no exception is raised.\n```python\nprint_cur_tb()\n```\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/print.py\">`prints_exc`</a>\nfunction decorator, used for logging or simple printing of scoped tracebacks with variables. i.e. traceback is shorter as it includes only frames inside the function call. program exiting due to unhandled exception still prints a usual traceback.\n```python\n@prints_exc\ndef f(...):\n\n@prints_exc(...)\ndef f(...):\n```\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/print.py\">`printing_exc`</a>\ncontext manager (i.e. `with ...`), used for logging or simple printing of scoped tracebacks with variables. i.e. traceback is shorter as it includes only frames inside the `with` scope. program exiting due to unhandled exception still prints a usual traceback.\n```python\nwith printing_exc(...):\n```\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/print.py\">`loggerasfile`</a>\na logger-to-file wrapper, to pass a logger to print tools as a file.\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/core.py\">`iter_exc_lines`</a>\niterates the lines, which are usually printed one-by-one in terminal.\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/core.py\">`format_exc`</a>\nlike `iter_exc_lines` but returns a single string.\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/core.py\">`iter_cur_tb_lines`</a>\nlike `iter_exc_lines` but doesn't need an exception and prints upper frames..\n\n---\n\n#### <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/core.py\">`format_cur_tb`</a>\nlike `iter_cur_tb_lines` but returns a single string.\n\n---\n\n### faq\n\n* in windows console crash messages have no colors. \n\n    the default windows console/terminal cannot print [so called *ansi*] colors, but this is \n    <a href=\"https://superuser.com/questions/413073/windows-console-with-ansi-colors-handling\">fixable</a>\n    , especially with modern windows versions. therefore colors are disabled by default,\n    but you can enable them and check if it works in your case.\n    you can force enable colors by passing `--color-scheme common` (for complete list of colors pass `--help`) console argument.\n\n* windows console prints junk symbols when colors are enabled.\n\n    the default windows console/terminal cannot print [so called *ansi*] colors, but this is \n    <a href=\"https://superuser.com/questions/413073/windows-console-with-ansi-colors-handling\">fixable</a>\n    , especially with modern windows versions. if for some reason the colors are wrongly enabled by default,\n    you can force disable colors by passing `--color-scheme none` console argument.\n    \n* bash tools like grep sometimes fail to digest the output when used with pipes (`|`) because of colors.\n\n    please disable colors by passing `--color-scheme none` console argument.\n    the choice for keeping colors in piped output was made to allow convenient usage of `head`, `tail`, file redirection etc.\n    in cases like `| grep` it might have issues, in which case you can disable colors.\n    \n* output redirected to a file in `> output.txt` manner has no colors when i `cat` it.\n\n    this is considered a rare use case, so colors are disabled by default when outputting to a file.\n    but you can force enable colors by passing `--color-scheme common` (for complete list of colors pass `--help`) console argument.\n  \n* `activate_by_import` or `global_print_exc` don't work in jupyter or ipython as if not called at all.\n\n    in jupyter or ipython you should use `activate_in_ipython_by_import` or `global_print_exc_in_ipython`. ipython handles exceptions differently than regular python.  \n\n* the server framework (`flask`, `streamlit` etc.) still shows usual tracebacks.\n\n    in such frameworks tracebacks are printed not while exiting the program (the program continues running), hence you should override exception handling in a manner\n    proper for the given framework. please address the `flask` example.\n  \n* how do i reduce output? i don't need all files or all variables.\n\n    use `skip_files_except`, `brief_files_except`, `custom_var_printers` to cut excess output.\n\n* i have ideas about good colors.\n\n    please fork, add a new `colorscheme` to <a href=\"https://github.com/andy-landy/traceback_with_variables/tree/master/traceback_with_variables/color.py\">`colorschemes`</a>\n    and create a pull request to `next_version` branch. <a href=\"https://en.wikipedia.org/wiki/ansi_escape_code\">choose the color codes</a> and visually\n    test it like `python3 -m traceback_with_variables.main --color-scheme {its name} examples/for_readme_image.py`. \n\n* my code doesn't work.  \n\n    please <a href=\"https://gitter.im/andy-landy/traceback-with-variables\">post your case</a>. you are very welcome!\n    \n* other questions or requests to elaborate answers.\n\n    please <a href=\"https://gitter.im/andy-landy/traceback-with-variables\">post your question or request</a>. you are very welcome!",
  "docs_url": null,
  "keywords": "python,traceback,locals,logging,debugging,print,variables,python3,stacktrace,arguments,errors,error-handling,dump,exception-handling,exceptions,pretty,pretty-print,frame,simple,colors,jupyer,jupyer-notebook,ipython,customize",
  "license": "",
  "name": "traceback-with-variables",
  "package_url": "https://pypi.org/project/traceback-with-variables/",
  "project_url": "https://pypi.org/project/traceback-with-variables/",
  "project_urls": {
    "Homepage": "https://github.com/andy-landy/traceback_with_variables"
  },
  "release_url": "https://pypi.org/project/traceback-with-variables/2.0.4/",
  "requires_dist": [],
  "requires_python": ">=3.5",
  "summary": "adds variables to python traceback. simple, lightweight, controllable. debug reasons of exceptions by logging or pretty printing colorful variable contexts for each frame in a stacktrace, showing every value. dump locals environments after errors to console, files, and loggers. works with jupiter and ipython.",
  "version": "2.0.4",
  "releases": [],
  "developers": [
    "andrey_lyashko",
    "andydashlandy@gmail.com"
  ],
  "kwds": "print_traceback traceback_with_variables debugging tracebacks traceback",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_traceback_with_variables",
  "homepage": "https://github.com/andy-landy/traceback_with_variables",
  "release_count": 17,
  "dependency_ids": [],
  "documentation_summary": "The GitHub repository \"andy-landy/traceback_with_variables\" enhances Python traceback by adding variables to it, making debugging more straightforward by logging or pretty printing variable contexts in stack traces. It's designed to be simple, lightweight, and customizable, allowing for the dumping of local environments after errors to various outputs such as the console, files, and loggers. The tool is compatible with Jupyter and IPython and can be installed via pip or conda. It aims to save developers time by automating the inclusion of variable information in debug messages, thus eliminating the need for manual logging of variables during exception handling. The project is licensed under the MIT license and welcomes contributions and feedback.",
  "embedding": [
    -0.027215398848056793,
    -0.007905425503849983,
    0.017769208177924156,
    -0.007502234540879726,
    -0.0063898591324687,
    0.016300439834594727,
    -0.00794142484664917,
    -0.02289549447596073,
    -0.03375285491347313,
    -0.010439769364893436,
    0.020908338949084282,
    0.003500922815874219,
    -0.0021743520628660917,
    0.02545863762497902,
    -0.006285461131483316,
    -0.021109934896230698,
    0.021354729309678078,
    -0.0020843539386987686,
    0.03156410530209541,
    -0.015033268369734287,
    0.012938114814460278,
    0.003216529032215476,
    -0.026754610240459442,
    -0.01740921661257744,
    -0.02170032076537609,
    0.04481181129813194,
    0.022391505539417267,
    -0.023370685055851936,
    0.009330994449555874,
    -0.0036521193105727434,
    0.02240590564906597,
    -0.012282929383218288,
    -0.01808600127696991,
    -0.016228441148996353,
    -0.012844516895711422,
    0.0002747189428191632,
    0.004399103112518787,
    0.004942690953612328,
    0.04282465577125549,
    0.016746830195188522,
    0.02610662393271923,
    0.021585123613476753,
    -0.004672696813941002,
    -0.0034595236647874117,
    -0.00023354485165327787,
    0.023572279140353203,
    0.014291685074567795,
    -0.05025489255785942,
    -0.01609884575009346,
    0.002167152240872383,
    0.04196067526936531,
    0.006710251793265343,
    -0.020865140482783318,
    -0.0163724385201931,
    0.03749677166342735,
    -0.011836539022624493,
    -0.008078222163021564,
    0.029447350651025772,
    -0.00974858459085226,
    -0.018647588789463043,
    0.016415636986494064,
    -0.007207041140645742,
    -0.032975271344184875,
    -0.0030095335096120834,
    -0.007030644919723272,
    0.006731851492077112,
    0.01265732105821371,
    0.014831672422587872,
    0.00531708262860775,
    0.011879737488925457,
    0.022017113864421844,
    0.029720943421125412,
    0.0027773387264460325,
    -0.02708580158650875,
    0.02352908067405224,
    -0.01759641245007515,
    -0.031996093690395355,
    0.02671140991151333,
    -0.011411747895181179,
    -0.0024533458054065704,
    0.006321460474282503,
    -0.006209862884134054,
    -0.01653083600103855,
    0.05221324786543846,
    0.03205369412899017,
    0.02393227256834507,
    -0.03755437210202217,
    0.024652255699038506,
    -0.02866976708173752,
    -0.023154688999056816,
    -0.0002780938521027565,
    -0.0009215796599164605,
    0.001520966412499547,
    0.014558078721165657,
    0.00858221109956503,
    0.0038735144771635532,
    -0.024162666872143745,
    0.017726009711623192,
    -0.021801119670271873,
    -0.02506984770298004,
    -0.017942003905773163,
    -0.0009665786637924612,
    -0.01808600127696991,
    -0.018417194485664368,
    -0.02338508330285549,
    -0.01588284969329834,
    0.029144957661628723,
    0.015047667548060417,
    0.019165977835655212,
    0.006307060830295086,
    -0.041787877678871155,
    0.050485286861658096,
    -0.01234772801399231,
    -0.025962626561522484,
    0.011771740391850471,
    0.017639610916376114,
    0.026970604434609413,
    -0.007073843851685524,
    -0.04363103583455086,
    0.0032219288405030966,
    0.001212273258715868,
    -0.0018287596758455038,
    0.0018737586215138435,
    0.00901420135051012,
    0.017769208177924156,
    -0.014133288525044918,
    0.010115777142345905,
    0.006476256996393204,
    -0.00818621926009655,
    -0.017726009711623192,
    0.031535305082798004,
    -0.004057110287249088,
    0.02521384321153164,
    -0.008215018548071384,
    -0.0202027540653944,
    -0.010014979168772697,
    -0.018460392951965332,
    0.016199642792344093,
    -0.024738654494285583,
    -0.026236221194267273,
    0.00938139297068119,
    0.022017113864421844,
    -0.021037936210632324,
    0.0037259177770465612,
    -0.05039888992905617,
    0.040290310978889465,
    -0.003934713080525398,
    -0.011274951510131359,
    -0.0036683189682662487,
    -0.007711030077189207,
    0.008762206882238388,
    -0.015926048159599304,
    -0.02265070006251335,
    -0.015566056594252586,
    0.0009341794066131115,
    0.008927803486585617,
    0.0030509326606988907,
    -0.004579098895192146,
    -0.01248452439904213,
    0.0008513812208548188,
    -0.005119087174534798,
    0.05025489255785942,
    -0.004456701688468456,
    -0.009813383221626282,
    0.015623655170202255,
    0.0511188730597496,
    0.029058558866381645,
    -0.005151486489921808,
    -0.011202952824532986,
    -0.011152554303407669,
    0.010166175663471222,
    0.02558823488652706,
    -0.03893674165010452,
    -0.00457549886777997,
    -0.012599722482264042,
    0.0016766630578786135,
    0.006919047329574823,
    0.021397927775979042,
    -0.014428481459617615,
    0.021037936210632324,
    0.0004684396553784609,
    0.016962826251983643,
    -0.004971490241587162,
    0.038389552384614944,
    -0.01691962592303753,
    -0.0234138835221529,
    -0.005497078876942396,
    -0.01559485588222742,
    -0.007603032048791647,
    0.010886159725487232,
    -0.004291105549782515,
    0.039858318865299225,
    -0.01456527877599001,
    0.0014813672751188278,
    -0.5584772825241089,
    0.001015177578665316,
    -0.00896380189806223,
    -0.028568970039486885,
    -0.027676189318299294,
    0.006501456722617149,
    -0.021527525037527084,
    0.017394816502928734,
    -0.04630937799811363,
    0.018014002591371536,
    -0.02656741440296173,
    0.04305505007505417,
    0.0029897340573370457,
    -0.019353173673152924,
    0.005230684764683247,
    -0.016458837315440178,
    -0.023183489218354225,
    -0.018863582983613014,
    -0.004161508288234472,
    0.020145155489444733,
    -0.0114765465259552,
    0.026668211445212364,
    -0.022837895900011063,
    0.0018737586215138435,
    -0.005353081971406937,
    0.013110910542309284,
    0.022261908277869225,
    -0.009719785302877426,
    0.02594822831451893,
    0.013348505832254887,
    -0.020145155489444733,
    0.003536921925842762,
    0.012506123632192612,
    -0.03225528821349144,
    0.0642801821231842,
    0.004611498210579157,
    -0.00968378596007824,
    0.030671322718262672,
    -0.004312704782932997,
    0.041816677898168564,
    -0.016012446954846382,
    -0.03412724658846855,
    0.02362987957894802,
    0.013794895261526108,
    0.017668409273028374,
    -0.00035436719190329313,
    0.016818828880786896,
    -0.00713144289329648,
    0.005029088817536831,
    -0.02017395570874214,
    0.027949783951044083,
    0.009050200693309307,
    -0.002163552213460207,
    -0.009813383221626282,
    0.030095335096120834,
    0.0012716719647869468,
    0.004327104426920414,
    -0.00222655083052814,
    -0.0009953780099749565,
    -0.02148432657122612,
    -0.008841404691338539,
    0.01061976607888937,
    0.013377305120229721,
    -0.003524322295561433,
    -0.012750918976962566,
    0.029418550431728363,
    0.01946837082505226,
    -0.007059444207698107,
    0.014471680857241154,
    -0.013607699424028397,
    0.02191631682217121,
    -0.008423814550042152,
    -0.011541345156729221,
    -0.022578701376914978,
    0.017855606973171234,
    0.04305505007505417,
    0.013290906324982643,
    -0.004373903386294842,
    -0.005907469894737005,
    0.032485682517290115,
    -0.00022848245862405747,
    0.0035945207346230745,
    -0.015321262180805206,
    -0.02108113467693329,
    0.031420107930898666,
    0.017985202372074127,
    -0.018834784626960754,
    0.00927339494228363,
    0.008265418000519276,
    -0.01034617144614458,
    -0.005511478520929813,
    0.039397530257701874,
    -0.028712967410683632,
    -0.013226108625531197,
    -0.0015515657141804695,
    0.045215003192424774,
    -0.002125753089785576,
    0.0028673368506133556,
    -0.01008697785437107,
    -0.011267751455307007,
    -0.006829049438238144,
    0.008150219917297363,
    -0.006472656968981028,
    -0.0023219487629830837,
    0.0026153423823416233,
    0.0030833319760859013,
    -0.011051756329834461,
    -0.004255106206983328,
    0.009431791491806507,
    -0.01230452861636877,
    0.005169486161321402,
    -0.015220464207231998,
    0.001510166679508984,
    -0.011562945321202278,
    0.011080555617809296,
    -0.03280247747898102,
    0.019756363704800606,
    -0.013406104408204556,
    0.002275149803608656,
    0.033407263457775116,
    0.01808600127696991,
    0.01607004553079605,
    0.011541345156729221,
    -0.0025433439295738935,
    0.026063425466418266,
    0.02974974364042282,
    0.040376707911491394,
    -0.01784120686352253,
    -0.040290310978889465,
    0.010518968105316162,
    -0.0030617325101047754,
    0.019396372139453888,
    0.0133125064894557,
    -0.013146909885108471,
    0.005378281231969595,
    -0.0159116480499506,
    0.025933828204870224,
    -0.004809493664652109,
    -0.0033209268003702164,
    -0.027690589427947998,
    -0.01391009334474802,
    0.020677944645285606,
    0.00973418541252613,
    -0.0023705477360635996,
    -0.03850474953651428,
    -0.031074514612555504,
    -0.01857559010386467,
    0.014018090441823006,
    -0.01738041639328003,
    0.009942980483174324,
    0.02472425438463688,
    -0.018705187365412712,
    -0.021095534786581993,
    0.019669966772198677,
    0.00858221109956503,
    0.002015955513343215,
    -0.016977226361632347,
    -0.007268239744007587,
    -0.016516435891389847,
    -0.012138932012021542,
    0.00732223829254508,
    0.020274752750992775,
    0.015191664919257164,
    -0.005633875727653503,
    -0.026509815827012062,
    -0.015306862071156502,
    -0.02763299085199833,
    0.028324175626039505,
    0.012542122974991798,
    -0.027316197752952576,
    -0.00890620332211256,
    -0.025357840582728386,
    -0.00586067046970129,
    0.02760419063270092,
    -0.012153332121670246,
    0.024076268076896667,
    -0.038907941430807114,
    0.0005305383238010108,
    -0.015148465521633625,
    -0.014846072532236576,
    0.008978202007710934,
    0.02368747815489769,
    -0.041327089071273804,
    -0.026783408597111702,
    0.01765401102602482,
    0.004514300264418125,
    -0.0049390909262001514,
    0.020303552970290184,
    0.011548545211553574,
    0.02298189327120781,
    0.009568588808178902,
    0.004204707220196724,
    -0.009827783331274986,
    0.006548255681991577,
    -0.005950668826699257,
    0.024709854274988174,
    0.0021995515562593937,
    -0.027589790523052216,
    0.010216574184596539,
    0.028655366972088814,
    0.014061289839446545,
    0.014536479488015175,
    0.00882700551301241,
    -0.0146876759827137,
    -0.006134264636784792,
    -0.040779899805784225,
    0.022607501596212387,
    -0.01563805527985096,
    0.011368549428880215,
    -0.002100553596392274,
    0.0017648610519245267,
    -0.018417194485664368,
    -0.021801119670271873,
    -0.010806961916387081,
    0.0021491525694727898,
    0.016055645421147346,
    0.018229998648166656,
    0.018777186051011086,
    -0.012513323687016964,
    -0.01876278594136238,
    -0.00316793005913496,
    -0.007250240072607994,
    0.0038699146825820208,
    0.017985202372074127,
    -0.018042802810668945,
    -0.00853901170194149,
    -0.012599722482264042,
    -0.008423814550042152,
    -0.00966938678175211,
    -0.015839651226997375,
    0.000531888275872916,
    0.019813962280750275,
    0.012506123632192612,
    -0.02167152240872383,
    0.010922159068286419,
    -0.012340527959167957,
    0.01979956403374672,
    -0.02365867793560028,
    0.03766956925392151,
    -0.014860471710562706,
    0.00390951381996274,
    0.011289350688457489,
    0.010886159725487232,
    0.011807739734649658,
    0.011670942418277264,
    0.02240590564906597,
    0.024220265448093414,
    0.0011915736831724644,
    -0.021642722189426422,
    0.0006961346371099353,
    -0.008589410223066807,
    0.0033371264580637217,
    0.007660631090402603,
    0.013938892632722855,
    0.019684365019202232,
    0.017063623294234276,
    0.0046978965401649475,
    0.0048814923502504826,
    0.03694958612322807,
    0.006098265293985605,
    0.008351815864443779,
    -0.003540521953254938,
    0.008200619369745255,
    0.004672696813941002,
    0.014889271929860115,
    -0.022693898528814316,
    -0.016934026032686234,
    -0.013946092687547207,
    -0.01014457643032074,
    -0.014673275873064995,
    -7.025469676591456e-05,
    -0.016790028661489487,
    -0.0031733301002532244,
    -0.013384504243731499,
    0.024018669500947,
    -0.025818631052970886,
    0.013110910542309284,
    0.03847594931721687,
    -0.022333906963467598,
    -0.011253351345658302,
    -0.03378165513277054,
    -0.027373796328902245,
    0.04247906431555748,
    0.00954698957502842,
    -0.008495812304317951,
    -0.03628719970583916,
    -0.022103512659668922,
    0.0058714705519378185,
    -0.017970804125070572,
    0.02298189327120781,
    0.0048274933360517025,
    0.011742941103875637,
    0.009388593025505543,
    0.006933446973562241,
    0.02888576313853264,
    -0.008503012359142303,
    0.0330616720020771,
    -0.02224751003086567,
    -0.00126267212908715,
    -0.007037844508886337,
    0.007984624244272709,
    -0.0046978965401649475,
    -0.03527922183275223,
    0.0015677653718739748,
    0.028655366972088814,
    0.0010358771542087197,
    -0.005846270825713873,
    0.00025649432791396976,
    -0.007102643139660358,
    -0.028324175626039505,
    -0.012232529930770397,
    -0.011303750798106194,
    -0.012491724453866482,
    -0.024133866652846336,
    0.023946670815348625,
    0.014450081624090672,
    0.032024893909692764,
    0.0068182493560016155,
    0.009986179880797863,
    0.05227084830403328,
    -0.021556325256824493,
    -0.014104489237070084,
    -0.015983646735548973,
    0.005529478192329407,
    0.022377105429768562,
    0.024191467091441154,
    -0.03225528821349144,
    0.002377747558057308,
    -0.02561703510582447,
    -0.01463007740676403,
    -0.016055645421147346,
    0.021642722189426422,
    0.016329240053892136,
    -0.006616653874516487,
    0.01158454455435276,
    0.018690787255764008,
    0.03634479641914368,
    0.001214073272421956,
    0.009460591711103916,
    -0.0031085314694792032,
    0.006472656968981028,
    -0.013002913445234299,
    0.007804627995938063,
    0.0054106805473566055,
    0.01612764410674572,
    -0.0010844761272892356,
    0.005529478192329407,
    -0.020908338949084282,
    0.03942633047699928,
    0.033493660390377045,
    0.04092389717698097,
    0.023485882207751274,
    0.0020483548287302256,
    -0.028727365657687187,
    -0.0015407659811899066,
    0.025933828204870224,
    0.015782052651047707,
    0.024493860080838203,
    -0.02485385164618492,
    0.024407461285591125,
    0.006728251464664936,
    0.02531464211642742,
    0.011188552714884281,
    0.007898225449025631,
    0.025516236200928688,
    0.04990929737687111,
    -0.003599920542910695,
    -0.027042603120207787,
    0.011130954138934612,
    -0.028381774201989174,
    -0.007113443221896887,
    -0.0017333617433905602,
    -0.003934713080525398,
    -0.015753252431750298,
    0.03484722971916199,
    0.014990068972110748,
    -0.04458141699433327,
    -0.04034791141748428,
    0.021498724818229675,
    0.0033119269646704197,
    -0.0007726329495199025,
    -0.009294995106756687,
    -0.014104489237070084,
    -0.010713363997638226,
    -0.003265128005295992,
    -0.02069234289228916,
    0.005731073673814535,
    -0.006865048315376043,
    0.004337904509156942,
    -0.0018467592308297753,
    -0.009417392313480377,
    0.02800738252699375,
    -0.02365867793560028,
    0.026149822399020195,
    -0.004982289858162403,
    -0.043199047446250916,
    -0.025271441787481308,
    0.01087895967066288,
    0.033407263457775116,
    0.012815717607736588,
    -0.02170032076537609,
    -0.01876278594136238,
    0.02221870981156826,
    -0.004449501633644104,
    0.002483945107087493,
    -0.03231288865208626,
    -0.016977226361632347,
    -0.025818631052970886,
    0.01900758035480976,
    -0.02031795121729374,
    0.025573836639523506,
    -0.0023273485712707043,
    -0.013391704298555851,
    0.04544539749622345,
    -0.002734139561653137,
    0.014774073846638203,
    -0.013794895261526108,
    -0.027287397533655167,
    0.004676296841353178,
    0.030469728633761406,
    0.0012500723823904991,
    0.012282929383218288,
    0.01433488354086876,
    -0.011152554303407669,
    0.01930997334420681,
    -0.017337217926979065,
    -0.025357840582728386,
    -0.01320450846105814,
    -0.011786139570176601,
    0.02072114311158657,
    -0.020490748807787895,
    0.002944735111668706,
    -0.01955476775765419,
    -0.000593986886087805,
    0.028626568615436554,
    -0.01569565385580063,
    0.005551077425479889,
    0.025487437844276428,
    -0.003277727635577321,
    0.020433148369193077,
    0.0009521790198050439,
    0.009633387438952923,
    -0.0016433637356385589,
    -0.012743718922138214,
    -0.0017891605384647846,
    -0.025530636310577393,
    0.02910175733268261,
    0.009287795051932335,
    0.010979757644236088,
    0.0255594365298748,
    0.021628322079777718,
    -0.022607501596212387,
    -0.01661723293364048,
    0.005083087831735611,
    0.01903638057410717,
    0.01491807121783495,
    -0.002932135248556733,
    -0.007689430378377438,
    -0.015767652541399002,
    -0.0028385373298078775,
    -0.028698567301034927,
    0.019266774877905846,
    0.0044639017432928085,
    -0.02763299085199833,
    -0.015062067657709122,
    0.02638021856546402,
    -0.02931775338947773,
    -0.021268330514431,
    -0.004118309356272221,
    -0.036834388971328735,
    0.0057382732629776,
    0.006541055627167225,
    0.008438213728368282,
    0.02542983926832676,
    0.020663544535636902,
    0.0018827584572136402,
    -0.0514068640768528,
    -0.0048202937468886375,
    -0.01854678988456726,
    0.0012653720332309604,
    -0.01457967795431614,
    0.010446969419717789,
    0.0257034320384264,
    -0.008445413783192635,
    0.023212287575006485,
    0.008452613838016987,
    0.019381972029805183,
    -0.004431502427905798,
    -0.004172307904809713,
    0.010684564709663391,
    -0.013499702326953411,
    0.0016775629483163357,
    0.010569366626441479,
    0.007559833116829395,
    -0.005900269839912653,
    0.011094954796135426,
    -0.013211708515882492,
    -0.055467575788497925,
    -0.0015506658237427473,
    -0.00853901170194149,
    -0.009374192915856838,
    0.0006704851984977722,
    -0.011490946635603905,
    -0.023701876401901245,
    0.011865338310599327,
    -0.004791494458913803,
    -0.019079579040408134,
    0.02151312492787838,
    -0.03139130771160126,
    0.0022697499953210354,
    0.008747806772589684,
    -0.007581432815641165,
    0.015479658730328083,
    0.009330994449555874,
    0.006145064253360033,
    -0.001597464783117175,
    0.013845294713973999,
    0.015839651226997375,
    -0.004161508288234472,
    -0.008603810332715511,
    -0.013600500300526619,
    -0.03556721657514572,
    0.001040377072058618,
    0.014190887100994587,
    0.011469347402453423,
    0.004661897197365761,
    -0.01835959404706955,
    0.03703598305583,
    -0.018777186051011086,
    0.027704989537596703,
    0.005097487475723028,
    0.006969446316361427,
    0.028684167191386223,
    -0.013218908570706844,
    -0.03188089653849602,
    -0.014601278118789196,
    0.003367725759744644,
    -0.014860471710562706,
    0.0035063226241618395,
    -0.0041147093288600445,
    0.0011780740460380912,
    0.018014002591371536,
    -0.009215796366333961,
    -0.01403249055147171,
    -0.007358237635344267,
    -0.0041831075213849545,
    0.023082690313458443,
    0.041269488632678986,
    0.002471345476806164,
    0.036373596638441086,
    -0.008236618712544441,
    -0.0016757630510255694,
    -0.03234168514609337,
    0.003452323842793703,
    -0.0003327676677145064,
    0.009266195818781853,
    0.017970804125070572,
    -0.03481843322515488,
    -0.007732629310339689,
    0.004921091254800558,
    -0.00866140890866518,
    -0.028900163248181343,
    -0.014889271929860115,
    0.023082690313458443,
    0.018071601167321205,
    0.0012923715403303504,
    -0.04947730898857117,
    -0.020188353955745697,
    -0.015206064097583294,
    0.0019601567182689905,
    -0.01098695769906044,
    0.0051766857504844666,
    0.027373796328902245,
    -0.011858138255774975,
    0.008625409565865993,
    0.013226108625531197,
    0.0009103299234993756,
    0.016329240053892136,
    0.0244794599711895,
    -0.00901420135051012,
    -0.018316395580768585,
    -0.0119373369961977,
    -0.00973418541252613,
    0.0030779321677982807,
    0.003963512368500233,
    0.021469926461577415,
    -0.0022589501459151506,
    -5.997524112899555e-06,
    0.03556721657514572,
    -0.006746251136064529,
    -0.006577054969966412,
    -0.021613923832774162,
    -0.014946870505809784,
    0.04198947176337242,
    -0.03075772151350975,
    0.016444437205791473,
    -0.007171041797846556,
    -0.010216574184596539,
    0.02053394727408886,
    0.0005021889228373766,
    -0.007847826927900314,
    -0.006321460474282503,
    -0.008056621998548508,
    0.0015929648652672768,
    0.016444437205791473,
    -0.012232529930770397,
    0.0008320316555909812,
    0.005950668826699257,
    -0.0070774438790977,
    0.01615644432604313,
    -0.024277864024043083,
    -0.00870460830628872,
    0.017308417707681656,
    -0.013341305777430534,
    -0.012938114814460278,
    -0.0453014001250267,
    0.0065842545591294765,
    0.017855606973171234,
    0.006767850834876299,
    -0.0021473525557667017,
    -0.006753451190888882,
    0.05460359528660774,
    -0.017970804125070572,
    0.011368549428880215,
    -0.018805984407663345,
    0.006652653217315674,
    -0.022852296009659767,
    0.024076268076896667,
    -0.005097487475723028,
    0.00341632473282516,
    0.008344615809619427,
    -0.0013751696096733212,
    -0.026826608926057816,
    -0.02733059786260128,
    -0.010274173691868782,
    0.020375549793243408,
    0.022693898528814316,
    -0.016242841258645058,
    -0.013658098876476288,
    0.006256661843508482,
    0.015494057908654213,
    -0.025789830833673477,
    -0.0077398293651640415,
    0.01710682176053524,
    -0.013456502929329872,
    0.001719862106256187,
    0.001965556526556611,
    -0.005896669812500477,
    -0.008755006827414036,
    -0.0021959515288472176,
    -0.009863782674074173,
    0.0333496630191803,
    -0.02227630838751793,
    -0.01135414931923151,
    -0.0019259575055912137,
    -0.010677364654839039,
    0.00013150960148777813,
    0.020793141797184944,
    -0.005587076768279076,
    -0.026884207502007484,
    -0.011807739734649658,
    0.023586679250001907,
    0.0023723477497696877,
    -0.009597388096153736,
    0.002771938918158412,
    0.03617200255393982,
    -0.0011654742993414402,
    0.01404688972979784,
    0.02047634869813919,
    -0.001791860442608595,
    0.00067993497941643,
    0.013974891975522041,
    -0.026423417031764984,
    -0.028223376721143723,
    0.0027755387127399445,
    0.02512744627892971,
    0.023572279140353203,
    -0.013859693892300129,
    -0.013146909885108471,
    -0.0141548877581954,
    -0.00018202098726760596,
    -0.022261908277869225,
    -0.020418750122189522,
    0.023399483412504196,
    0.018705187365412712,
    -0.011771740391850471,
    -0.006962246261537075,
    0.002811538055539131,
    -0.0044711013324558735,
    0.03239928558468819,
    0.008812605403363705,
    -0.01618524268269539,
    0.0007726329495199025,
    0.02534344047307968,
    -0.013478103093802929,
    -0.02374507673084736,
    -0.0333496630191803,
    0.002251750323921442,
    -0.002993333851918578,
    0.011778940446674824,
    0.0010664764558896422,
    0.006202663294970989,
    0.017193220555782318,
    -0.007660631090402603,
    -0.031477704644203186,
    -0.02638021856546402,
    -0.024709854274988174,
    0.019165977835655212,
    0.02436426281929016,
    -0.01863318867981434,
    -0.04216226935386658,
    0.006065865978598595,
    0.010857360437512398,
    -0.001965556526556611,
    -0.00878380611538887,
    0.019439570605754852,
    -0.013197308406233788,
    -0.004917491693049669,
    -0.03470323607325554,
    -0.03188089653849602,
    0.018417194485664368,
    0.001470567542128265,
    0.039887119084596634,
    -0.004118309356272221,
    0.025228243321180344,
    0.038418352603912354,
    0.0058174715377390385,
    0.0035927207209169865,
    -0.027431394904851913,
    0.017726009711623192,
    -0.006541055627167225,
    -0.0018089601071551442,
    0.005090287886559963,
    -0.02218990959227085,
    0.002437146147713065,
    0.0027809387538582087,
    0.043458241969347,
    -0.016516435891389847,
    0.00973418541252613,
    -0.028626568615436554,
    -0.03205369412899017,
    -0.03815915808081627,
    -0.0037907164078205824,
    0.006710251793265343,
    -0.01925237476825714,
    -0.005633875727653503,
    0.020490748807787895,
    -0.014097289182245731,
    0.008611010387539864,
    -0.023457081988453865,
    -0.02072114311158657,
    -0.009986179880797863,
    0.01075656246393919,
    0.010173375718295574,
    0.011562945321202278,
    -0.03962792456150055,
    0.011238952167332172,
    -0.0007856826414354146,
    -0.018517991527915,
    -0.004762694705277681,
    0.21230891346931458,
    0.0021455527748912573,
    0.01074216328561306,
    0.00830861646682024,
    0.0009512790129519999,
    0.019727565348148346,
    0.006580654997378588,
    2.432758810755331e-05,
    -0.008819805458188057,
    0.02776258811354637,
    0.020303552970290184,
    0.005450279917567968,
    -0.009374192915856838,
    -0.007333038374781609,
    0.013370105065405369,
    -0.0039923121221363544,
    -0.0261642225086689,
    -0.039368730038404465,
    -0.03176569938659668,
    -0.018100401386618614,
    -0.0075742327608168125,
    -0.003128330921754241,
    -0.04501340538263321,
    -0.04340064153075218,
    0.03355126082897186,
    -0.0008945802692323923,
    0.0036683189682662487,
    -0.015033268369734287,
    0.005630275700241327,
    -0.018186798319220543,
    -0.019972359761595726,
    -0.0011051755864173174,
    0.00038654147647321224,
    0.008179019205272198,
    -0.015998046845197678,
    -0.04282465577125549,
    0.021887516602873802,
    -0.009266195818781853,
    0.008740606717765331,
    -0.002003355883061886,
    0.009798984043300152,
    -0.031592901796102524,
    -0.012203730642795563,
    -0.04941970854997635,
    -0.00462949788197875,
    -0.014234085567295551,
    -0.001520066405646503,
    -0.023298686370253563,
    0.006731851492077112,
    0.03473203256726265,
    0.002451546024531126,
    -0.022305108606815338,
    0.030181733891367912,
    0.01740921661257744,
    -0.006245862226933241,
    -0.02365867793560028,
    0.0017216620035469532,
    0.004096709657460451,
    -6.491106614703313e-05,
    0.015335661359131336,
    -0.001050276798196137,
    0.05042768642306328,
    -0.01833079569041729,
    0.015926048159599304,
    -0.05083087831735611,
    0.02411946840584278,
    -0.010461369529366493,
    -0.018935581669211388,
    0.008855804800987244,
    3.144305810565129e-05,
    -0.004564699251204729,
    -0.021167533472180367,
    -0.016703631728887558,
    -0.0029393350705504417,
    -0.004658297169953585,
    -0.022593101486563683,
    0.046136580407619476,
    0.009575788863003254,
    0.022420305758714676,
    0.022204309701919556,
    0.021844318136572838,
    -0.009007001295685768,
    -0.003364125732332468,
    0.0035729212686419487,
    -0.03706478327512741,
    -0.01123175211250782,
    0.0011789739364758134,
    -0.016761230304837227,
    -0.014860471710562706,
    -0.04112549126148224,
    -0.018777186051011086,
    -0.027201000601053238,
    0.016228441148996353,
    0.0030995316337794065,
    -0.0191227775067091,
    0.012268529273569584,
    -0.004795094020664692,
    0.014788473956286907,
    -0.03173689916729927,
    -0.0023201487492769957,
    -0.02913055755198002,
    0.04440861940383911,
    0.00843101367354393,
    -0.01582525111734867,
    -0.0028043382335454226,
    0.016415636986494064,
    0.0024767452850937843,
    -0.006314260885119438,
    -0.005590676795691252,
    0.0005917369271628559,
    -0.018517991527915,
    -0.023946670815348625,
    -0.0010169775923714042,
    -0.007847826927900314,
    0.004125508945435286,
    0.012225329875946045,
    -0.011454947292804718,
    -0.018863582983613014,
    0.018417194485664368,
    0.013730096630752087,
    0.025271441787481308,
    -0.02426346391439438,
    0.014291685074567795,
    -0.014946870505809784,
    -0.009172597900032997,
    -0.005547477398067713,
    -0.031967293471097946,
    0.0016649633180350065,
    -0.015796450898051262,
    -0.0006623853696510196,
    0.006026267074048519,
    -0.01182933896780014,
    0.017582012340426445,
    -0.014370882883667946,
    -0.02023155428469181,
    -0.012815717607736588,
    -0.031592901796102524,
    -0.012873316183686256,
    0.012930914759635925,
    0.014018090441823006,
    -0.042191069573163986,
    -0.006811049766838551,
    -0.013002913445234299,
    -0.011915736831724644,
    0.0007600332028232515,
    -0.014990068972110748,
    -0.019453970715403557,
    -0.005587076768279076,
    0.0042371065355837345,
    -0.023313086479902267,
    -0.026509815827012062,
    0.01392449252307415,
    -0.02154192514717579,
    0.004791494458913803,
    0.026394616812467575,
    -0.029720943421125412,
    -0.022333906963467598,
    -0.024349862709641457,
    0.03222648799419403,
    0.011267751455307007,
    -0.041816677898168564,
    0.03470323607325554,
    0.008726207539439201,
    0.0009629787527956069,
    -0.03510642424225807,
    -0.04749015346169472,
    -0.1827031672000885,
    0.01729401759803295,
    -0.018863582983613014,
    -0.03867754712700844,
    0.04158628359436989,
    -0.007538233883678913,
    0.012160531245172024,
    0.015926048159599304,
    -0.025689033791422844,
    -0.012686120346188545,
    0.00919419713318348,
    1.2135669749113731e-05,
    -0.024868251755833626,
    -0.010893359780311584,
    -0.02096593752503395,
    -0.0027773387264460325,
    0.002984334249049425,
    0.010209375061094761,
    0.0523284450173378,
    0.0336664579808712,
    0.044667813926935196,
    -0.023917872458696365,
    0.025084245949983597,
    0.0010538767091929913,
    -0.005151486489921808,
    -0.005965068470686674,
    0.011123755015432835,
    -0.0033749255817383528,
    0.0020249553490430117,
    -0.025242643430829048,
    -0.01038937084376812,
    0.009712586179375648,
    0.011015756987035275,
    -0.005561877507716417,
    0.01811479963362217,
    0.025487437844276428,
    0.005450279917567968,
    -0.022506702691316605,
    0.008942202664911747,
    -0.0035171224735677242,
    0.021095534786581993,
    0.005500678438693285,
    0.010288572870194912,
    -0.020087556913495064,
    -0.023428283631801605,
    0.010360571555793285,
    -0.00438470346853137,
    -0.025141844525933266,
    0.004078709986060858,
    0.0010781761957332492,
    0.04504220560193062,
    -0.0511188730597496,
    0.0004612398333847523,
    0.03121851198375225,
    0.029519349336624146,
    -0.0036827188450843096,
    0.009417392313480377,
    0.006123465020209551,
    -0.007603032048791647,
    0.009374192915856838,
    -0.002276949817314744,
    -0.0133125064894557,
    0.0067498511634767056,
    0.03559601306915283,
    -0.032946474850177765,
    -0.03432884439826012,
    -0.025717832148075104,
    0.0011483746347948909,
    -0.0006907347706146538,
    0.004125508945435286,
    0.01661723293364048,
    0.003275927621871233,
    0.009374192915856838,
    0.009007001295685768,
    0.003067132318392396,
    0.0092589957639575,
    -0.019900361075997353,
    0.011274951510131359,
    0.00022443254420068115,
    -0.00561587605625391,
    -0.029029758647084236,
    0.030930517241358757,
    -0.0008675808785483241,
    -0.0029879340436309576,
    -0.009453391656279564,
    0.0010070777498185635,
    -0.014111688360571861,
    -0.007509434130042791,
    -0.038360752165317535,
    -0.02855456992983818,
    0.016574034467339516,
    0.004355903714895248,
    -0.011159753426909447,
    -0.01445728074759245,
    0.0024929449427872896,
    -0.01265732105821371,
    -0.0023525480646640062,
    0.023341884836554527,
    -0.00915099773555994,
    -0.033436063677072525,
    -0.007001845631748438,
    0.004244306590408087,
    -0.035970404744148254,
    0.02368747815489769,
    0.03035452961921692,
    0.025271441787481308,
    -0.022420305758714676,
    0.019914761185646057,
    0.02096593752503395,
    0.01366529893130064,
    -0.016142044216394424,
    0.02472425438463688,
    -2.0263614715076983e-05,
    0.0238746739923954,
    -0.013722897507250309,
    0.0217291209846735,
    0.009129398502409458,
    -0.004744695499539375,
    0.0013868693495169282,
    0.010922159068286419,
    0.016876427456736565,
    0.0025433439295738935,
    -0.015263663604855537,
    0.009165397845208645,
    0.005666275043040514,
    -0.02974974364042282,
    -0.11945976316928864,
    -0.020058756694197655,
    0.0008846804848872125,
    0.011008556932210922,
    -0.019900361075997353,
    -0.017366016283631325,
    -0.011685342527925968,
    0.015537257306277752,
    -0.002003355883061886,
    0.023601079359650612,
    -0.013226108625531197,
    0.009762984700500965,
    -0.0035675212275236845,
    -0.01218213140964508,
    -0.019972359761595726,
    0.005129886791110039,
    -0.03709357976913452,
    0.027920983731746674,
    -0.006501456722617149,
    0.04596378654241562,
    0.006670652888715267,
    -0.017222020775079727,
    0.004060710314661264,
    0.0022409504745155573,
    -0.016847629100084305,
    0.013650898821651936,
    -0.029447350651025772,
    0.00781902763992548,
    -0.0036197202280163765,
    0.021801119670271873,
    0.0063394601456820965,
    0.0009530789684504271,
    -0.010655764490365982,
    -0.0006236862391233444,
    0.015234864316880703,
    0.0017090622568503022,
    -0.01631483994424343,
    -0.016386838629841805,
    0.011634943075478077,
    -0.028381774201989174,
    0.013888493180274963,
    -0.0007132342434488237,
    0.0051046875305473804,
    0.015983646735548973,
    0.002811538055539131,
    -0.003353326115757227,
    -0.024349862709641457,
    0.033407263457775116,
    -0.007149442099034786,
    -0.013888493180274963,
    -0.016084445640444756,
    -0.0016676632221788168,
    0.004427902400493622,
    0.004726695828139782,
    0.02974974364042282,
    -0.01833079569041729,
    0.014075689017772675,
    0.02589062787592411,
    -0.0191227775067091,
    -0.000902680098079145,
    -0.003454123856499791,
    0.017466815188527107,
    -0.01218213140964508,
    0.03602800518274307,
    0.014342083595693111,
    0.014817273244261742,
    -0.01259252242743969,
    0.007495034486055374,
    0.04633817821741104,
    -0.015998046845197678,
    -0.03654639422893524,
    0.024537058547139168,
    -0.03032573126256466,
    0.018042802810668945,
    -0.023212287575006485,
    0.013240507803857327,
    -0.022722698748111725,
    -0.00457549886777997,
    0.012225329875946045,
    -0.009950180537998676,
    -0.02730179764330387,
    0.0046546971425414085,
    -0.024738654494285583,
    -0.004089509602636099,
    0.005212685093283653,
    0.015810851007699966,
    0.017466815188527107,
    0.013096511363983154,
    0.012873316183686256,
    -0.03530802205204964,
    -0.0013508702395483851,
    0.0054610795341432095,
    0.016271641477942467,
    -0.0075742327608168125,
    -0.012930914759635925,
    0.002237350679934025,
    0.01517726480960846,
    0.024292264133691788,
    -0.011728540994226933,
    -0.01792760379612446,
    -0.021282730624079704,
    -0.040751099586486816,
    -0.06802409887313843,
    0.01900758035480976,
    0.026293819770216942,
    0.005698674358427525,
    0.02181551791727543,
    -0.029893741011619568,
    0.0055150785483419895,
    -0.019295575097203255,
    0.003736717626452446,
    0.004186707548797131,
    -0.02026035264134407,
    -0.01380209531635046,
    0.0032939272932708263,
    -0.012722119688987732,
    0.019727565348148346,
    -0.009043000638484955,
    0.03807276114821434,
    -0.015897249802947044,
    0.03576881065964699,
    0.006224262528121471,
    -0.012088533490896225,
    -0.012938114814460278,
    0.04386143386363983,
    0.019698765128850937,
    -0.018964381888508797,
    0.01306771207600832,
    -0.015609255991876125,
    0.029893741011619568,
    0.0023219487629830837,
    -0.05195405334234238,
    0.01615644432604313,
    0.0028007382061332464,
    0.0022589501459151506,
    0.021167533472180367,
    0.006177463568747044,
    0.008935002610087395,
    0.02542983926832676,
    0.01511966623365879,
    0.03942633047699928,
    -0.008243817836046219,
    -0.028712967410683632,
    -0.02986494079232216,
    0.025012247264385223,
    -0.017970804125070572,
    0.0017324617365375161,
    -0.00942459236830473,
    -0.0004443651996552944,
    0.03234168514609337,
    -0.00027539391885511577,
    -0.0034595236647874117,
    0.010994157753884792,
    0.01729401759803295,
    -0.013895693235099316,
    -0.040751099586486816,
    0.008740606717765331,
    -0.020001158118247986,
    0.0008243818301707506,
    -0.007610232103615999,
    -0.0031499306205660105,
    -0.012570922262966633,
    0.03634479641914368,
    -0.0163724385201931,
    0.0019727565813809633,
    -0.006148664280772209,
    0.027863385155797005,
    -0.028424972668290138,
    -0.008848604746162891,
    -0.02613542415201664,
    0.014414082281291485,
    -0.005774272605776787,
    -0.0020213553216308355,
    -0.024983448907732964,
    0.02203151397407055,
    0.003472123295068741,
    0.031160913407802582,
    0.010994157753884792,
    -0.018474793061614037,
    0.02010195702314377,
    -0.03645999729633331,
    0.040290310978889465,
    0.009820583276450634,
    -0.022420305758714676,
    -0.04383263364434242,
    0.020922739058732986,
    0.03778476640582085,
    -0.0056374757550656796,
    -0.022117912769317627,
    -0.008099821396172047,
    0.011843739077448845,
    0.024565858766436577,
    -0.014061289839446545,
    -0.014738074503839016,
    -0.025573836639523506,
    0.008971001952886581,
    0.006893848069012165,
    0.0017009624280035496,
    -0.015062067657709122,
    -0.016386838629841805,
    0.034904830157756805,
    0.010331772267818451,
    0.0032831276766955853,
    0.00501828920096159,
    -0.012138932012021542,
    -0.021469926461577415,
    -0.014190887100994587,
    0.016660433262586594,
    -0.0014066689182072878,
    -0.003776316763833165,
    0.01879158616065979,
    0.022837895900011063,
    -0.005320682656019926,
    -0.025876229628920555,
    -0.013809295371174812,
    0.03133370727300644,
    -0.0508020780980587,
    0.041816677898168564,
    0.009942980483174324,
    -0.006760650780051947,
    -0.0070774438790977,
    0.02059154585003853,
    0.033954452723264694,
    -0.01751001365482807,
    0.03602800518274307,
    -0.01775480806827545,
    0.020893938839435577,
    0.013600500300526619,
    0.036891985684633255,
    -0.019209176301956177,
    0.00427670544013381,
    -0.016026847064495087,
    -0.016790028661489487,
    0.018042802810668945,
    -0.02668261155486107,
    -0.016271641477942467,
    0.010900559835135937,
    -0.009755784645676613,
    0.00397791201248765,
    0.003473923308774829,
    0.015321262180805206,
    0.09313714504241943,
    0.003905913792550564,
    -0.029461750760674477,
    0.010418170131742954,
    -0.004262305796146393,
    0.020677944645285606,
    0.010677364654839039,
    0.01051176805049181,
    0.002438946161419153,
    -0.012232529930770397,
    0.004679896868765354,
    -0.013413304463028908,
    -0.003054532688111067,
    0.001223972998559475,
    -0.01863318867981434,
    0.010720563121140003,
    -0.004618698265403509,
    0.02825217694044113,
    -0.012333327904343605,
    0.02561703510582447,
    0.05365321785211563,
    0.012174931354820728,
    0.011382948607206345,
    0.008942202664911747,
    -0.031160913407802582,
    -0.0012716719647869468,
    0.036920785903930664,
    0.046626172959804535,
    -0.023831473663449287,
    -0.03533681854605675,
    -0.008618209511041641,
    -0.0008482313132844865,
    -0.025501837953925133,
    0.00781902763992548,
    -0.006317860446870327,
    -0.0008432813920080662,
    -0.008438213728368282,
    -0.004179507959634066,
    0.010662964545190334,
    0.01854678988456726,
    0.018921183422207832,
    0.003454123856499791,
    -0.03211129084229469,
    -0.03317686915397644,
    0.020764341577887535,
    0.010338972322642803,
    0.001372469705529511,
    -0.005525878164917231,
    -0.05068688094615936
  ]
}
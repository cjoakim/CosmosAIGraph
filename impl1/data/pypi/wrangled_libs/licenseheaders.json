{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3",
    "topic :: software development",
    "topic :: software development :: code generators"
  ],
  "description": "# licenseheaders\n\n[![pypi version](https://img.shields.io/pypi/v/licenseheaders.svg)](https://pypi.python.org/pypi/licenseheaders/)\n[![python compatibility](https://img.shields.io/pypi/pyversions/licenseheaders.svg)](https://pypi.python.org/pypi/licenseheaders/)\n\na python 3 tool to update, change or add license headers to all files of any of\nthe supported types (see below) in or below some directory.\n\n## usage\n\n```\nusage: licenseheaders.py [-h] [-v] [-v] [-d dir] [-f [files [files ...]]] [-b]\n                         [-t tmpl] [-y years] [-cy] [-o owner]\n                         [-n projectname] [-u projecturl] [--enc encoding]\n                         [--dry] [--safesubst] [-d] [-e [ext [ext ...]]]\n                         [--additional-extensions additional_extensions [additional_extensions ...]]\n                         [-x [exclude [exclude ...]]]\n\npython license header updater\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -v, --verbose         increases log verbosity (can be specified 1 to 3\n                        times, default shows errors only)\n  -d dir, --dir dir     the directory to recursively process (default: .).\n  -f [files [files ...]], --files [files [files ...]]\n                        the list of files to process. if not empty - will\n                        disable '--dir' option\n  -b                    back up all files which get changed to a copy with\n                        .bak added to the name\n  -t tmpl, --tmpl tmpl  template name or file to use.\n  -y years, --years years\n                        year or year range to use.\n  -cy, --current-year   use today's year.\n  -o owner, --owner owner\n                        name of copyright owner to use.\n  -n projectname, --projname projectname\n                        name of project to use.\n  -u projecturl, --projurl projecturl\n                        url of project to use.\n  --enc encoding        encoding of program files (default: utf-8)\n  --dry                 only show what would get done, do not change any files\n  --safesubst           do not raise error if template variables cannot be\n                        substituted.\n  -d, --debug           enable debug messages (same as -v -v -v)\n  -e [ext [ext ...]], --ext [ext [ext ...]]\n                        if specified, restrict processing to the specified\n                        extension(s) only\n  --additional-extensions additional_extensions [additional_extensions ...]\n                        provide a comma-separated list of additional file\n                        extensions as value for a specified language as key,\n                        each with a leading dot and no whitespace (default:\n                        none).\n  -x [exclude [exclude ...]], --exclude [exclude [exclude ...]]\n                        file path patterns to exclude\n\nknown extensions: ['c:.c, .cc, .h', 'cpp:.cpp, .hpp, .cxx, .hxx, .ixx', 'csharp:.cs, .csx', 'd:.d', 'go:.go', 'groovy:.groovy', 'java:.java, .jape', 'javascript:.js, .js, .cjs, .mjs', 'kotlin:.kt, .kts, .ktm', 'objective-c:.m, .mm, .m', 'php:.php, .phtml, .php3, .php4, .php5, .php7, .phps, .php-s, .pht, .phar', 'rust:.rs', 'scala:.scala', 'swift:.swift', 'typescript:.ts, .tsx', 'script:.sh,.csh,.py,.pl', 'perl:.pl', 'python:.py', 'robot:.robot', 'xml:.xml', 'sql:.sql', 'ruby:.rb', 'vb:.vb', 'erlang:.erl,.src,.config,.schema', 'html:.html', 'css:.css,.scss,.sass', 'docker:.dockerfile', 'yaml:.yaml,.yml', 'zig:.zig']\n\nif -t/--tmpl is specified, that header is added to (or existing header replaced for) all source files of known type\nif -t/--tmpl is not specified but -y/--years is specified, all years in existing header files\n  are replaced with the years specified\n\nexamples:\n  licenseheaders.py -t lgpl-v3 -y 2012-2014 -o thisnicecompany -n projectname -u http://the.projectname.com\n  licenseheaders.py -y 2012-2015\n  licenseheaders.py -y 2012-2015 -d /dir/where/to/start/\n  licenseheaders.py -y 2012-2015 -d /dir/where/to/start/ --additional-extensions python=.j2\n  licenseheaders.py -y 2012-2015 -d /dir/where/to/start/ --additional-extensions python=.j2,.tpl script=.txt\n  licenseheaders.py -t .copyright.tmpl -cy\n  licenseheaders.py -t .copyright.tmpl -cy -f some_file.cpp\n```\n\nif *licenseheaders* is installed as a package (from pypi for instance), one can interact with it as a command line tool:\n\n```\npython -m licenseheaders -t lgpl3 -o \"eager hacker\"\n```\n\nor directly:\n\n```\nlicenseheaders -t lgpl3 -o \"eager hacker\"\n```\n\n\n# installation\n\nnote: this requires python 3.5 or higher!\n\n```\npip install licenseheaders\n```\n\n## template names and files\n\nthis library comes with a number of predefined templates. if a template name is specified\nwhich when matched against all predefined template names matches exactly one as a substring,\nthen that template is used. otherwise the name is expected to be the path of file.\n\nif a template does not contain any variables of the form `${varname}` it is used as is.\notherwise the program will try to replace the variable from one of the following\nsources:\n\n- an environment variable with the same name but the prefix `license_headers_` added\n- the command line option that can be used to set the variable (see usage)\n\n\n## supported file types and how they are processed\n\n*note:* you can provide additional file extensions with `--additional-extensions` cli argument.\nnote that file extensions which contain multiple dots, e.g. \".py.j2\", are not yet supported,\nuse \".j2\" at the moment instead.\n\n### languages with c style comments:\nc\n    extensions: .c, .cc, .h\n\ncpp\n    extensions: .cpp, .hpp, .cxx, .hxx, .ixx\n\ncsharp\n    extensions: .cs, .csx\n\nd\n    extensions: .d\n\ngo\n    extensions: .go\n\ngroovy\n    extensions: .groovy\njava\n    extensions: .java, .jape\n\njavascript\n    extensions: .js, .js, .cjs, .mjs\n\nkotlin\n    extensions: .kt, .kts, .ktm\n\nobjective-c\n    extensions: .m, .mm, .m\n\nphp\n    extensions: .php, .phtml, .php3, .php4, .php5, .php7, .phps, .php-s, .pht, .phar\n\nrust\n    extensions: .rs\n\nscala\n    extensions: .scala\n\nswift\n    extensions: .swift\n\ntypescript\n    extensions: .ts, .tsx\n\n### other languages\n\nscript:\n- extensions .sh, .csh\n\nperl:\n- extension .pl\n\npython:\n- extension .py\n\nxml:\n- extension .xml\n\nsql:\n- extension .sql\n\nruby:\n- extension .rb\n\nvisualbasic:\n- extension .vb\n\nerlang:\n- extensions .erl, .src, .config, .schema\n\nhtml:\n- extensions .html\n\ncss:\n- extensions .css, .scss, .sass\n\ndocker:\n- extensions .dockerfile\n- filenames dockerfile\n\nyaml:\n- extensions .yaml, .yml\n\nzig:\n- extensions .zig\n\n## pre-commit hooks\n\nlicenseheaders can be used with (pre-commit)[pre-commit]\n\n### using pre-commit-hooks with pre-commit\n\nadd this to your `.pre-commit-config.yaml`\n\n```\n    - repo: https://github.com/johann-petrak/licenseheaders.git\n      rev: 'master'\n      hooks:\n          - id: licenseheaders\n            args: [\"-t\", \".copyright.tmpl\", \"-cy\", \"-f\"]\n```\n\n## license\n\nlicensed under the term of `mit license`. see file [license.txt](license.txt).\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "licenseheaders",
  "package_url": "https://pypi.org/project/licenseheaders/",
  "project_url": "https://pypi.org/project/licenseheaders/",
  "project_urls": {
    "Homepage": "http://github.com/johann-petrak/licenseheaders"
  },
  "release_url": "https://pypi.org/project/licenseheaders/0.8.8/",
  "requires_dist": [
    "regex"
  ],
  "requires_python": ">=3.5",
  "summary": "add or change license headers for all files in a directory",
  "version": "0.8.8",
  "releases": [],
  "developers": [
    "johann.petrak@gmail.com",
    "johann_petrak"
  ],
  "kwds": "license_headers_ pyversions licenseheaders license pypi",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_licenseheaders",
  "homepage": "http://github.com/johann-petrak/licenseheaders",
  "release_count": 11,
  "dependency_ids": [
    "pypi_regex"
  ]
}
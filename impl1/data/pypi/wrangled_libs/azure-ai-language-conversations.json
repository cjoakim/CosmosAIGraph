{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "microsoft azure conversational language understanding client library for python\n[![build status](https://dev.azure.com/azure-sdk/public/_apis/build/status/azure-sdk-for-python.client?branchname=main)](https://dev.azure.com/azure-sdk/public/_build/latest?definitionid=46?branchname=main)\n\n# azure conversational language understanding client library for python\nconversational language understanding - aka **clu** for short - is a cloud-based conversational ai service which provides many language understanding capabilities like:\n- conversation app: it's used in extracting intents and entities in conversations\n- workflow app: acts like an orchestrator to select the best candidate to analyze conversations to get best response from apps like qna, luis, and conversation app\n- conversational summarization: used to analyze conversations in the form of issues/resolution, chapter title, and narrative summarizations\n\n[source code][conversationallanguage_client_src]\n| [package (pypi)][conversationallanguage_pypi_package]\n| [package (conda)](https://anaconda.org/microsoft/azure-ai-language-conversations/)\n| [api reference documentation][api_reference_documentation]\n| [samples][conversationallanguage_samples]\n| [product documentation][conversationallanguage_docs]\n| [rest api documentation][conversationallanguage_restdocs]\n\n## getting started\n\n### prerequisites\n\n* python 3.7 or later is required to use this package.\n* an [azure subscription][azure_subscription]\n* a [language service resource][language_resource]\n\n\n### install the package\n\ninstall the azure conversations client library for python with [pip][pip_link]:\n\n```bash\npip install azure-ai-language-conversations\n```\n\n> note: this version of the client library defaults to the 2023-04-01 version of the service\n\n### authenticate the client\nin order to interact with the clu service, you'll need to create an instance of the [conversationanalysisclient][conversationanalysisclient_class] class, or [conversationauthoringclient][conversationauthoringclient_class] class. you will need an **endpoint**, and an **api key** to instantiate a client object. for more information regarding authenticating with cognitive services, see [authenticate requests to azure cognitive services][cognitive_auth].\n\n#### get an api key\nyou can get the **endpoint** and an **api key** from the cognitive services resource in the [azure portal][azure_portal].\n\nalternatively, use the [azure cli][azure_cli] command shown below to get the api key from the cognitive service resource.\n\n```powershell\naz cognitiveservices account keys list --resource-group <resource-group-name> --name <resource-name>\n```\n\n\n#### create conversationanalysisclient\nonce you've determined your **endpoint** and **api key** you can instantiate a `conversationanalysisclient`:\n\n```python\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.conversations import conversationanalysisclient\n\nendpoint = \"https://<my-custom-subdomain>.cognitiveservices.azure.com/\"\ncredential = azurekeycredential(\"<api-key>\")\nclient = conversationanalysisclient(endpoint, credential)\n```\n\n#### create conversationauthoringclient\nonce you've determined your **endpoint** and **api key** you can instantiate a `conversationauthoringclient`:\n\n```python\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.conversations.authoring import conversationauthoringclient\n\nendpoint = \"https://<my-custom-subdomain>.cognitiveservices.azure.com/\"\ncredential = azurekeycredential(\"<api-key>\")\nclient = conversationauthoringclient(endpoint, credential)\n```\n\n#### create a client with an azure active directory credential\n\nto use an [azure active directory (aad) token credential][cognitive_authentication_aad],\nprovide an instance of the desired credential type obtained from the\n[azure-identity][azure_identity_credentials] library.\nnote that regional endpoints do not support aad authentication. create a [custom subdomain][custom_subdomain]\nname for your resource in order to use this type of authentication.\n\nauthentication with aad requires some initial setup:\n\n- [install azure-identity][install_azure_identity]\n- [register a new aad application][register_aad_app]\n- [grant access][grant_role_access] to the language service by assigning the \"cognitive services language reader\" role to your service principal.\n\nafter setup, you can choose which type of [credential][azure_identity_credentials] from azure.identity to use.\nas an example, [defaultazurecredential][default_azure_credential]\ncan be used to authenticate the client:\n\nset the values of the client id, tenant id, and client secret of the aad application as environment variables:\n`azure_client_id`, `azure_tenant_id`, `azure_client_secret`\n\nuse the returned token credential to authenticate the client:\n\n```python\nfrom azure.ai.language.conversations import conversationanalysisclient\nfrom azure.identity import defaultazurecredential\n\ncredential = defaultazurecredential()\nclient = conversationanalysisclient(endpoint=\"https://<my-custom-subdomain>.cognitiveservices.azure.com/\", credential=credential)\n```\n\n## key concepts\n\n### conversationanalysisclient\nthe [conversationanalysisclient][conversationanalysisclient_class] is the primary interface for making predictions using your deployed conversations models. for asynchronous operations, an async `conversationanalysisclient` is in the `azure.ai.language.conversation.aio` namespace.\n\n### conversationauthoringclient\nyou can use the [conversationauthoringclient][conversationauthoringclient_class] to interface with the [azure language portal][azure_language_portal] to carry out authoring operations on your language resource/project. for example, you can use it to create a project, populate with training data, train, test, and deploy. for asynchronous operations, an async `conversationauthoringclient` is in the `azure.ai.language.conversation.authoring.aio` namespace.\n\n## examples\nthe `azure-ai-language-conversation` client library provides both synchronous and asynchronous apis.\n\nthe following examples show common scenarios using the `client` [created above](#create-conversationanalysisclient).\n\n### analyze text with a conversation app\nif you would like to extract custom intents and entities from a user utterance, you can call the `client.analyze_conversation()` method with your conversation's project name as follows:\n\n\n```python\n# import libraries\nimport os\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.conversations import conversationanalysisclient\n\n# get secrets\nclu_endpoint = os.environ[\"azure_conversations_endpoint\"]\nclu_key = os.environ[\"azure_conversations_key\"]\nproject_name = os.environ[\"azure_conversations_project_name\"]\ndeployment_name = os.environ[\"azure_conversations_deployment_name\"]\n\n# analyze quey\nclient = conversationanalysisclient(clu_endpoint, azurekeycredential(clu_key))\nwith client:\n    query = \"send an email to carol about the tomorrow's demo\"\n    result = client.analyze_conversation(\n        task={\n            \"kind\": \"conversation\",\n            \"analysisinput\": {\n                \"conversationitem\": {\n                    \"participantid\": \"1\",\n                    \"id\": \"1\",\n                    \"modality\": \"text\",\n                    \"language\": \"en\",\n                    \"text\": query\n                },\n                \"isloggingenabled\": false\n            },\n            \"parameters\": {\n                \"projectname\": project_name,\n                \"deploymentname\": deployment_name,\n                \"verbose\": true\n            }\n        }\n    )\n\n# view result\nprint(\"query: {}\".format(result[\"result\"][\"query\"]))\nprint(\"project kind: {}\\n\".format(result[\"result\"][\"prediction\"][\"projectkind\"]))\n\nprint(\"top intent: {}\".format(result[\"result\"][\"prediction\"][\"topintent\"]))\nprint(\"category: {}\".format(result[\"result\"][\"prediction\"][\"intents\"][0][\"category\"]))\nprint(\"confidence score: {}\\n\".format(result[\"result\"][\"prediction\"][\"intents\"][0][\"confidencescore\"]))\n\nprint(\"entities:\")\nfor entity in result[\"result\"][\"prediction\"][\"entities\"]:\n    print(\"\\ncategory: {}\".format(entity[\"category\"]))\n    print(\"text: {}\".format(entity[\"text\"]))\n    print(\"confidence score: {}\".format(entity[\"confidencescore\"]))\n    if \"resolutions\" in entity:\n        print(\"resolutions\")\n        for resolution in entity[\"resolutions\"]:\n            print(\"kind: {}\".format(resolution[\"resolutionkind\"]))\n            print(\"value: {}\".format(resolution[\"value\"]))\n    if \"extrainformation\" in entity:\n        print(\"extra info\")\n        for data in entity[\"extrainformation\"]:\n            print(\"kind: {}\".format(data[\"extrainformationkind\"]))\n            if data[\"extrainformationkind\"] == \"listkey\":\n                print(\"key: {}\".format(data[\"key\"]))\n            if data[\"extrainformationkind\"] == \"entitysubtype\":\n                print(\"value: {}\".format(data[\"value\"]))\n```\n\n### analyze text with an orchestration app\n\nif you would like to pass the user utterance to your orchestrator (worflow) app, you can call the `client.analyze_conversation()` method with your orchestration's project name. the orchestrator project simply orchestrates the submitted user utterance between your language apps (luis, conversation, and question answering) to get the best response according to the user intent. see the next example:\n\n\n```python\n# import libraries\nimport os\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.conversations import conversationanalysisclient\n\n# get secrets\nclu_endpoint = os.environ[\"azure_conversations_endpoint\"]\nclu_key = os.environ[\"azure_conversations_key\"]\nproject_name = os.environ[\"azure_conversations_workflow_project_name\"]\ndeployment_name = os.environ[\"azure_conversations_workflow_deployment_name\"]\n\n# analyze query\nclient = conversationanalysisclient(clu_endpoint, azurekeycredential(clu_key))\nwith client:\n    query = \"reserve a table for 2 at the italian restaurant\"\n    result = client.analyze_conversation(\n        task={\n            \"kind\": \"conversation\",\n            \"analysisinput\": {\n                \"conversationitem\": {\n                    \"participantid\": \"1\",\n                    \"id\": \"1\",\n                    \"modality\": \"text\",\n                    \"language\": \"en\",\n                    \"text\": query\n                },\n                \"isloggingenabled\": false\n            },\n            \"parameters\": {\n                \"projectname\": project_name,\n                \"deploymentname\": deployment_name,\n                \"verbose\": true\n            }\n        }\n    )\n\n# view result\nprint(\"query: {}\".format(result[\"result\"][\"query\"]))\nprint(\"project kind: {}\\n\".format(result[\"result\"][\"prediction\"][\"projectkind\"]))\n\n# top intent\ntop_intent = result[\"result\"][\"prediction\"][\"topintent\"]\nprint(\"top intent: {}\".format(top_intent))\ntop_intent_object = result[\"result\"][\"prediction\"][\"intents\"][top_intent]\nprint(\"confidence score: {}\".format(top_intent_object[\"confidencescore\"]))\nprint(\"project kind: {}\".format(top_intent_object[\"targetprojectkind\"]))\n\nif top_intent_object[\"targetprojectkind\"] == \"luis\":\n    print(\"\\nluis response:\")\n    luis_response = top_intent_object[\"result\"][\"prediction\"]\n    print(\"top intent: {}\".format(luis_response[\"topintent\"]))\n    print(\"\\nentities:\")\n    for entity in luis_response[\"entities\"]:\n        print(\"\\n{}\".format(entity))\n```\n\n### conversational summarization\n\nyou can use this sample if you need to summarize a conversation in the form of an issue, and final resolution. for example, a dialog from tech support:\n\n```python\n# import libraries\nimport os\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.conversations import conversationanalysisclient\n# get secrets\nendpoint = os.environ[\"azure_conversations_endpoint\"]\nkey = os.environ[\"azure_conversations_key\"]\n# analyze query\nclient = conversationanalysisclient(endpoint, azurekeycredential(key))\nwith client:\n    poller = client.begin_conversation_analysis(\n        task={\n            \"displayname\": \"analyze conversations from xxx\",\n            \"analysisinput\": {\n                \"conversations\": [\n                    {\n                        \"conversationitems\": [\n                            {\n                                \"text\": \"hello, how can i help you?\",\n                                \"modality\": \"text\",\n                                \"id\": \"1\",\n                                \"participantid\": \"agent\"\n                            },\n                            {\n                                \"text\": \"how to upgrade office? i am getting error messages the whole day.\",\n                                \"modality\": \"text\",\n                                \"id\": \"2\",\n                                \"participantid\": \"customer\"\n                            },\n                            {\n                                \"text\": \"press the upgrade button please. then sign in and follow the instructions.\",\n                                \"modality\": \"text\",\n                                \"id\": \"3\",\n                                \"participantid\": \"agent\"\n                            }\n                        ],\n                        \"modality\": \"text\",\n                        \"id\": \"conversation1\",\n                        \"language\": \"en\"\n                    },\n                ]\n            },\n            \"tasks\": [\n                {\n                    \"taskname\": \"issue task\",\n                    \"kind\": \"conversationalsummarizationtask\",\n                    \"parameters\": {\n                        \"summaryaspects\": [\"issue\"]\n                    }\n                },\n                {\n                    \"taskname\": \"resolution task\",\n                    \"kind\": \"conversationalsummarizationtask\",\n                    \"parameters\": {\n                        \"summaryaspects\": [\"resolution\"]\n                    }\n                },\n            ]\n        }\n    )\n\n    # view result\n    result = poller.result()\n    task_results = result[\"tasks\"][\"items\"]\n    for task in task_results:\n        print(f\"\\n{task['taskname']} status: {task['status']}\")\n        task_result = task[\"results\"]\n        if task_result[\"errors\"]:\n            print(\"... errors occurred ...\")\n            for error in task_result[\"errors\"]:\n                print(error)\n        else:\n            conversation_result = task_result[\"conversations\"][0]\n            if conversation_result[\"warnings\"]:\n                print(\"... view warnings ...\")\n                for warning in conversation_result[\"warnings\"]:\n                    print(warning)\n            else:\n                summaries = conversation_result[\"summaries\"]\n                print(\"... view task result ...\")\n                for summary in summaries:\n                    print(f\"{summary['aspect']}: {summary['text']}\")\n```\n\n### import a conversation project\nthis sample shows a common scenario for the authoring part of the sdk\n\n```python\nimport os\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.conversations.authoring import conversationauthoringclient\n\nclu_endpoint = os.environ[\"azure_conversations_endpoint\"]\nclu_key = os.environ[\"azure_conversations_key\"]\n\nproject_name = \"test_project\"\n\nexported_project_assets = {\n    \"projectkind\": \"conversation\",\n    \"intents\": [{\"category\": \"read\"}, {\"category\": \"delete\"}],\n    \"entities\": [{\"category\": \"sender\"}],\n    \"utterances\": [\n        {\n            \"text\": \"open blake's email\",\n            \"dataset\": \"train\",\n            \"intent\": \"read\",\n            \"entities\": [{\"category\": \"sender\", \"offset\": 5, \"length\": 5}],\n        },\n        {\n            \"text\": \"delete last email\",\n            \"language\": \"en-gb\",\n            \"dataset\": \"test\",\n            \"intent\": \"delete\",\n            \"entities\": [],\n        },\n    ],\n}\n\nclient = conversationauthoringclient(\n    clu_endpoint, azurekeycredential(clu_key)\n)\npoller = client.begin_import_project(\n    project_name=project_name,\n    project={\n        \"assets\": exported_project_assets,\n        \"metadata\": {\n            \"projectkind\": \"conversation\",\n            \"settings\": {\"confidencethreshold\": 0.7},\n            \"projectname\": \"emailapp\",\n            \"multilingual\": true,\n            \"description\": \"trying out clu\",\n            \"language\": \"en-us\",\n        },\n        \"projectfileversion\": \"2022-05-01\",\n    },\n)\nresponse = poller.result()\nprint(response)\n\n```\n\n\n## optional configuration\n\noptional keyword arguments can be passed in at the client and per-operation level. the azure-core [reference documentation][azure_core_ref_docs] describes available configurations for retries, logging, transport protocols, and more.\n\n## troubleshooting\n\n### general\n\nthe conversations client will raise exceptions defined in [azure core][azure_core_exceptions].\n\n### logging\n\nthis library uses the standard\n[logging][python_logging] library for logging.\nbasic information about http sessions (urls, headers, etc.) is logged at info\nlevel.\n\ndetailed debug level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the `logging_enable` argument.\n\nsee full sdk logging documentation with examples [here][sdk_logging_docs].\n\n```python\nimport sys\nimport logging\nfrom azure.core.credentials import azurekeycredential\nfrom azure.ai.language.conversations import conversationanalysisclient\n\n# create a logger for the 'azure' sdk\nlogger = logging.getlogger('azure')\nlogger.setlevel(logging.debug)\n\n# configure a console output\nhandler = logging.streamhandler(stream=sys.stdout)\nlogger.addhandler(handler)\n\nendpoint = \"https://<my-custom-subdomain>.cognitiveservices.azure.com/\"\ncredential = azurekeycredential(\"<my-api-key>\")\n\n# this client will log detailed information about its http sessions, at debug level\nclient = conversationanalysisclient(endpoint, credential, logging_enable=true)\nresult = client.analyze_conversation(...)\n```\n\nsimilarly, `logging_enable` can enable detailed logging for a single operation, even when it isn't enabled for the client:\n\n```python\nresult = client.analyze_conversation(..., logging_enable=true)\n```\n\n## next steps\n\n### more sample code\n\nsee the [sample readme][conversationallanguage_samples] for several code snippets illustrating common patterns used in the clu python api.\n\n## contributing\n\nsee the [contributing.md][contributing] for details on building, testing, and contributing to this library.\n\nthis project welcomes contributions and suggestions. most contributions require you to agree to a contributor license agreement (cla) declaring that you have the right to, and actually do, grant us the rights to use your contribution. for details, visit [cla.microsoft.com][cla].\n\nwhen you submit a pull request, a cla-bot will automatically determine whether you need to provide a cla and decorate the pr appropriately (e.g., label, comment). simply follow the instructions provided by the bot. you will only need to do this once across all repos using our cla.\n\nthis project has adopted the [microsoft open source code of conduct][code_of_conduct]. for more information see the [code of conduct faq][coc_faq] or contact [opencode@microsoft.com][coc_contact] with any additional questions or comments.\n\n<!-- links -->\n[azure_cli]: https://docs.microsoft.com/cli/azure/\n[azure_portal]: https://portal.azure.com/\n[azure_subscription]: https://azure.microsoft.com/free/\n[language_resource]: https://portal.azure.com/#create/microsoft.cognitiveservicestextanalytics\n[cla]: https://cla.microsoft.com\n[coc_contact]: mailto:opencode@microsoft.com\n[coc_faq]: https://opensource.microsoft.com/codeofconduct/faq/\n[code_of_conduct]: https://opensource.microsoft.com/codeofconduct/\n[cognitive_auth]: https://docs.microsoft.com/azure/cognitive-services/authentication/\n[contributing]: https://github.com/azure/azure-sdk-for-python/blob/main/contributing.md\n[python_logging]: https://docs.python.org/3/library/logging.html\n[sdk_logging_docs]: https://docs.microsoft.com/azure/developer/python/azure-sdk-logging\n[azure_core_ref_docs]: https://azuresdkdocs.blob.core.windows.net/$web/python/azure-core/latest/azure.core.html\n[azure_core_readme]: https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/readme.md\n[pip_link]:https://pypi.org/project/pip/\n[conversationallanguage_client_src]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/cognitivelanguage/azure-ai-language-conversations\n[conversationallanguage_pypi_package]: https://pypi.org/project/azure-ai-language-conversations/\n[api_reference_documentation]:https://azuresdkdocs.blob.core.windows.net/$web/python/azure-ai-language-conversations/latest/azure.ai.language.conversations.html\n[conversationallanguage_refdocs]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/cognitivelanguage/azure-ai-language-conversations\n[conversationallanguage_docs]: https://docs.microsoft.com/azure/cognitive-services/language-service/conversational-language-understanding/overview\n[conversationallanguage_samples]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/cognitivelanguage/azure-ai-language-conversations/samples/readme.md\n[conversationallanguage_restdocs]: https://learn.microsoft.com/rest/api/language/\n[conversationanalysisclient_class]: https://azuresdkdocs.blob.core.windows.net/$web/python/azure-ai-language-conversations/latest/azure.ai.language.conversations.html#azure.ai.language.conversations.conversationanalysisclient\n[conversationauthoringclient_class]: https://azuresdkdocs.blob.core.windows.net/$web/python/azure-ai-language-conversations/latest/azure.ai.language.conversations.html#azure.ai.language.conversations.conversationauthoringclient\n[azure_core_exceptions]: https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/readme.md\n[azure_language_portal]: https://language.cognitive.azure.com/home\n[cognitive_authentication_aad]: https://docs.microsoft.com/azure/cognitive-services/authentication#authenticate-with-azure-active-directory\n[azure_identity_credentials]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/identity/azure-identity#credentials\n[custom_subdomain]: https://docs.microsoft.com/azure/cognitive-services/authentication#create-a-resource-with-a-custom-subdomain\n[install_azure_identity]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/identity/azure-identity#install-the-package\n[register_aad_app]: https://docs.microsoft.com/azure/cognitive-services/authentication#assign-a-role-to-a-service-principal\n[grant_role_access]: https://docs.microsoft.com/azure/cognitive-services/authentication#assign-a-role-to-a-service-principal\n[default_azure_credential]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/identity/azure-identity#defaultazurecredential\n\n![impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2fsdk%2ftemplate%2fazure-template%2freadme.png)\n\n\n# release history\n\n## 1.1.0 (2023-06-13)\n\n### features added\n- added support for service version 2023-04-01.\n\n### breaking changes\n\n> note: the following changes are only breaking from the previous beta. they are not breaking since version 1.0.0 when those types and members did not exist.\n\n- removed support for service version 2022-05-15-preview.\n- removed support for service version 2022-10-01-preview.\n- removed support for \"conversationalpiitask\" analysis with `conversationanalysisclient`.\n- removed support for \"conversationalsentimenttask\" with `conversationanalysisclient`.\n- removed the following methods from `conversationauthoringclient`:\n  - `begin_assign_deployment_resources`\n  - `get_assign_deployment_resources_status`\n  - `begin_unassign_deployment_resources`\n  - `get_unassign_deployment_resources_status`\n  - `begin_delete_deployment_from_resources`\n  - `get_deployment_delete_from_resources_status`\n  - `list_assigned_resource_deployments`\n  - `list_deployment_resources`\n\n## 1.1.0b3 (2022-11-10)\n\n### features added\n- added support for the \"conversationalsentimenttask\" kind with `begin_conversation_analysis`.\n- added support for \"chaptertitle\" and \"narrative\" `summaryaspects` options for conversationalsummarizationtasks.\n- added methods to the `conversationauthoringclient` to manage deployment resources:\n  - `begin_assign_deployment_resources`\n  - `get_assign_deployment_resources_status`\n  - `begin_unassign_deployment_resources`\n  - `get_unassign_deployment_resources_status`\n  - `begin_delete_deployment_from_resources`\n  - `get_deployment_delete_from_resources_status`\n  - `begin_load_snapshot`\n  - `get_load_snapshot_status`\n  - `list_assigned_resource_deployments`\n  - `list_deployment_resources`\n- added optional `trained_model_label` keyword argument to `begin_export_project`.\n\n### other changes\n* this version and all future versions will require python 3.7+. python 3.6 is no longer supported.\n\n## 1.1.0b2 (2022-07-01)\n\n### features added\n* added azure active directory (aad) authentication support\n* added support for authoring operations with `conversationauthoringclient` under the `azure.ai.language.conversations.authoring` namespace.\n\n## 1.0.0 (2022-06-27)\n\n### features added\n* added azure active directory (aad) authentication support\n* added more resolution types for entities\n* added support for authoring operations with `conversationauthoringclient` under the `azure.ai.language.conversations.authoring` namespace.\n\n### breaking changes\n* client now uses python dictionaries for method parameters and results instead of classes.\n\n## 1.1.0b1 (2022-05-26)\n\n### features added\n* conversation summarization task (long-running operation)\n* conversation pii extraction task (long-running operation)\n\n### breaking changes\n* client now uses python dictionaries for method parameters and results instead of classes.\n* many input and result parameter name changes in `analyze_conversation()` method\n\n## 1.0.0b3 (2022-04-19)\n\n### features added\n* entity resolutions\n* extra features\n\n### breaking changes\n* the `conversationanalysisoptions` model used as input to the `analyze_conversation` operation is now wrapped in a `customconversationaltask` which combines the analysis options with the project parameters into a single model.\n* the `query` within the `conversationanalysisoptions` is now further qualified as a `textconversationitem` with additional properties.\n* the output `analyzeconversationresult` is now wrapped in a `customconversationaltaskresult` according to the input model.\n\n### other changes\n* python 2.7 is no longer supported. please use python version 3.6 or later.\n\n## 1.0.0b1 (2021-11-03)\n\n### features added\n* initial release\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "azure-ai-language-conversations",
  "package_url": "https://pypi.org/project/azure-ai-language-conversations/",
  "project_url": "https://pypi.org/project/azure-ai-language-conversations/",
  "project_urls": {
    "Bug Reports": "https://github.com/Azure/azure-sdk-for-python/issues",
    "Homepage": "https://github.com/Azure/azure-sdk-for-python",
    "Source": "https://github.com/Azure/azure-sdk-python"
  },
  "release_url": "https://pypi.org/project/azure-ai-language-conversations/1.1.0/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "microsoft azure conversational language understanding client library for python",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "azpysdkhelp@microsoft.com",
    "microsoft_corporation"
  ],
  "kwds": "azure_conversations_endpoint azure_conversations_key azure_conversations_project_name azure_conversations_workflow_project_name conversationalsummarizationtask",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_azure_ai_language_conversations",
  "homepage": "https://github.com/azure/azure-sdk-for-python",
  "release_count": 7,
  "dependency_ids": [],
  "documentation_summary": "The HTML text provides information about the \"azure-ai-language-conversations\" package version 1.1.0, released on June 14, 2023, available on PyPI. It's a Microsoft Azure Conversational Language Understanding Client Library for Python, designed for conversational AI services, offering capabilities like intent and entity extraction, orchestration, and conversational summarization. The package requires Python 3.7 or later and is licensed under the MIT License. It supports various Python versions up to 3.11. The library allows for both synchronous and asynchronous operations, providing interfaces for analyzing conversations, authoring, and summarizing dialogues. Installation is done via pip. The document also outlines how to authenticate and use the client, including examples for analyzing text with a Conversation App, an Orchestration App, and summarizing conversations. Additionally, it mentions optional configurations, troubleshooting, and contributing guidelines.",
  "embedding": [
    -0.00860096886754036,
    0.006672687362879515,
    -0.007407931610941887,
    -0.029187805950641632,
    0.009329277090728283,
    0.03201780095696449,
    -0.008621778339147568,
    -0.010827510617673397,
    -0.023389087989926338,
    -0.02404109574854374,
    9.260998194804415e-05,
    0.025900015607476234,
    -0.042755141854286194,
    0.04403141513466835,
    -0.028022512793540955,
    -0.015703706070780754,
    0.0186169371008873,
    -0.031074469909071922,
    0.021072374656796455,
    -0.008053004741668701,
    -0.005174454301595688,
    0.007387123070657253,
    -0.02687109261751175,
    -0.00327738537453115,
    -0.026385555043816566,
    -0.005021856166422367,
    0.01614762656390667,
    -0.037344854325056076,
    0.010938490740954876,
    0.018186887726187706,
    0.021141737699508667,
    -0.017937183380126953,
    -0.03024211712181568,
    -0.017840074375271797,
    0.0016222191043198109,
    -0.0024103522300720215,
    0.022903548553586006,
    0.010272609069943428,
    0.02863290347158909,
    0.003053691005334258,
    0.02741212211549282,
    0.019643504172563553,
    0.0024901193100959063,
    -0.02104463055729866,
    -0.01591179333627224,
    0.00453631766140461,
    0.004127078223973513,
    -0.009363958612084389,
    -0.003877372480928898,
    0.008073813281953335,
    0.0027536973357200623,
    0.02877162955701351,
    -0.024845702573657036,
    0.004307420924305916,
    -0.003971011843532324,
    -0.009259914979338646,
    -0.021141737699508667,
    0.037872008979320526,
    -0.004144418518990278,
    -0.002852539299055934,
    0.008302710019052029,
    -0.001659501576796174,
    -0.0029323063790798187,
    -0.01238123420625925,
    -0.012915326282382011,
    0.005091218743473291,
    -0.005861144512891769,
    0.0200458075851202,
    0.022723205387592316,
    -0.008815993554890156,
    0.010147756896913052,
    0.03260044753551483,
    -0.0034386536572128534,
    -0.019837720319628716,
    0.06159403920173645,
    -0.008691140450537205,
    -0.01915796473622322,
    0.009107316844165325,
    -0.016411203891038895,
    0.004199908580631018,
    0.014718755148351192,
    -0.008920037187635899,
    0.002634046832099557,
    0.024193694815039635,
    0.012402042746543884,
    0.01774296723306179,
    0.0018675895407795906,
    0.0038565637078136206,
    -0.009558173827826977,
    -0.019296690821647644,
    0.006169808097183704,
    -0.0119928028434515,
    0.022307030856609344,
    0.0311854500323534,
    -0.019046984612941742,
    0.028605159372091293,
    0.004591807723045349,
    0.010307290591299534,
    0.014205471612513065,
    -0.014580029994249344,
    -0.002422490855678916,
    0.015662087127566338,
    -0.02204345166683197,
    -0.015870176255702972,
    -0.044641803950071335,
    0.012825154699385166,
    -0.0026305788196623325,
    -0.009010208770632744,
    0.03443162143230438,
    0.007636828348040581,
    -0.009350085631012917,
    0.027856042608618736,
    -0.02857741340994835,
    -0.04084073007106781,
    -0.0023635325487703085,
    -0.016078263521194458,
    0.006346683017909527,
    0.008379008620977402,
    0.007144353352487087,
    -0.005372137762606144,
    -0.004220717586576939,
    -0.016064390540122986,
    -0.027675699442625046,
    0.0039051175117492676,
    0.026982072740793228,
    0.015648216009140015,
    0.008434498682618141,
    -0.021294334903359413,
    -0.001095062936656177,
    -0.02068394422531128,
    -0.009565110318362713,
    -0.02069781720638275,
    0.030852509662508965,
    -0.004047310911118984,
    -0.021419188007712364,
    0.010584740899503231,
    -0.010862192139029503,
    -0.002217870904132724,
    0.00013103039236739278,
    0.006797540467232466,
    -0.022709334269165993,
    0.03523622825741768,
    0.00014035099593456835,
    -0.010362780652940273,
    0.011535009369254112,
    0.047943469136953354,
    0.024429528042674065,
    -0.0026583238504827023,
    -0.014899098314344883,
    0.006003337912261486,
    0.0071374173276126385,
    -0.023611048236489296,
    -0.01721581071615219,
    -0.007914278656244278,
    0.02093365043401718,
    0.0038218824192881584,
    -0.007317760027945042,
    0.022501245141029358,
    -0.007491166703402996,
    0.0008674667333252728,
    -0.028854865580797195,
    0.022834185510873795,
    -0.02168276533484459,
    -0.024124331772327423,
    0.018353357911109924,
    0.023541685193777084,
    0.007144353352487087,
    -0.00047990286839194596,
    -0.013220522552728653,
    0.0013785827904939651,
    0.002654855605214834,
    0.029493000358343124,
    -0.0035045482218265533,
    0.0021623808424919844,
    0.023014528676867485,
    -0.007407931610941887,
    0.032739173620939255,
    -0.00029717563302256167,
    -0.027536975219845772,
    -0.014982333406805992,
    0.028036385774612427,
    0.01944928802549839,
    0.01272804755717516,
    0.022834185510873795,
    -0.015662087127566338,
    -0.011791651137173176,
    -0.006721241399645805,
    -0.010300354100763798,
    0.004779086913913488,
    0.0054068188183009624,
    0.02893809974193573,
    0.051605816930532455,
    0.024942811578512192,
    -0.04183955490589142,
    -0.5802047252655029,
    -0.025858398526906967,
    -0.013005497865378857,
    0.007706190925091505,
    0.002620174316689372,
    0.005899293813854456,
    0.015329146757721901,
    0.006849562283605337,
    -0.017521006986498833,
    0.038815341889858246,
    -0.006513153202831745,
    0.022431882098317146,
    -0.02558094821870327,
    -0.004307420924305916,
    0.0015043026069179177,
    0.0008553282241337001,
    0.008261092007160187,
    -0.012013612315058708,
    0.018672427162528038,
    -0.020878158509731293,
    -0.015259784646332264,
    0.031684860587120056,
    -0.03765004873275757,
    -0.007317760027945042,
    -0.0028802843298763037,
    0.003943266812711954,
    -0.014774246141314507,
    -0.012839027680456638,
    0.01134773064404726,
    -0.012346552684903145,
    -0.03329407423734665,
    0.025192515924572945,
    0.012478341348469257,
    -0.013948829844594002,
    0.05055150389671326,
    0.006305065471678972,
    0.001641293871216476,
    0.05709933862090111,
    -0.010772020556032658,
    0.006478472147136927,
    -0.012506086379289627,
    0.01264481246471405,
    -0.0038080099038779736,
    0.004872726742178202,
    0.022487372159957886,
    0.0037421153392642736,
    0.02098914049565792,
    0.007477294187992811,
    -0.01320664957165718,
    -0.007435676641762257,
    0.014358069747686386,
    0.011000917293131351,
    0.001075988169759512,
    -0.02810574881732464,
    0.01845046691596508,
    0.0032756514847278595,
    0.01985159143805504,
    -0.014316451735794544,
    0.00024211901472881436,
    -0.01986546441912651,
    -0.04955268278717995,
    -0.005774441175162792,
    -0.00311611732468009,
    -0.05429708585143089,
    -0.03304436802864075,
    0.038038481026887894,
    0.004539785906672478,
    -0.020351003855466843,
    -0.009343150071799755,
    -0.014580029994249344,
    0.03584662079811096,
    0.02128046192228794,
    0.00046993198338896036,
    -0.02411045879125595,
    0.01908860355615616,
    0.03318309411406517,
    0.0058646127581596375,
    0.005559416953474283,
    0.0012051761150360107,
    0.0311854500323534,
    0.01625860668718815,
    0.0003429116331972182,
    -0.00898940023034811,
    -0.025206388905644417,
    0.034570347517728806,
    -0.009794007055461407,
    -0.006461131386458874,
    -0.013428609818220139,
    0.002001112559810281,
    -0.01535689178854227,
    0.005483117885887623,
    0.015218166634440422,
    -0.018062036484479904,
    -0.05532365292310715,
    0.007241461426019669,
    0.02469310536980629,
    -0.01574532315135002,
    -0.013726869598031044,
    -0.002521332586184144,
    -0.015509489923715591,
    0.0106124859303236,
    -0.0009043156169354916,
    0.008774375542998314,
    0.0023479259107261896,
    0.03998063504695892,
    -0.006183680612593889,
    -0.016827380284667015,
    0.009405575692653656,
    0.009079571813344955,
    -0.028799375519156456,
    0.0018831960624083877,
    -0.020711688324809074,
    0.0008770040585659444,
    0.0006793205393478274,
    0.0029305722564458847,
    -0.027745062485337257,
    0.017881693318486214,
    0.005871548783034086,
    0.008240283466875553,
    -0.017659733071923256,
    0.00676285894587636,
    -0.004799895919859409,
    -0.010446015745401382,
    -0.0004868391260970384,
    0.026135848835110664,
    0.010661040432751179,
    -0.004463486839085817,
    -0.01721581071615219,
    0.009773198515176773,
    0.003814946161583066,
    -0.0009242573869414628,
    0.001410663011483848,
    0.011174323968589306,
    -0.014815863221883774,
    0.029076825827360153,
    0.0008327853865921497,
    0.03678995370864868,
    -0.006783667951822281,
    -0.01308179646730423,
    0.010716530494391918,
    -0.031074469909071922,
    -0.004973302595317364,
    0.01614762656390667,
    0.005812590476125479,
    -0.01414304506033659,
    -0.03909279406070709,
    -0.014801991172134876,
    0.009065698832273483,
    -0.0217521283775568,
    -0.01838110387325287,
    -0.012984689325094223,
    -0.037039659917354584,
    -0.023597175255417824,
    0.028799375519156456,
    -0.004075055941939354,
    -0.006898116320371628,
    -0.01546787191182375,
    -0.012506086379289627,
    0.010168565437197685,
    -0.012124592438340187,
    -0.0026461852248758078,
    0.0045709991827607155,
    0.02498442865908146,
    0.031213195994496346,
    -0.019130220636725426,
    0.007837980054318905,
    -0.015523361973464489,
    0.030158882960677147,
    -0.03082476370036602,
    -0.040591027587652206,
    0.02291742153465748,
    -0.023763645440340042,
    0.0013022838393226266,
    0.006384832318872213,
    0.03271142765879631,
    -0.002748495200648904,
    -0.05049601197242737,
    0.02151629514992237,
    0.017534879967570305,
    -0.005271561909466982,
    -0.006048423703759909,
    0.05302081257104874,
    -0.011874886229634285,
    -0.024179821833968163,
    0.007969768717885017,
    0.006977883167564869,
    0.02910456992685795,
    0.019435416907072067,
    -0.005330520216375589,
    0.006672687362879515,
    -0.01275579258799553,
    0.014593902975320816,
    -0.01578694023191929,
    0.018755661323666573,
    -0.009398640133440495,
    0.029493000358343124,
    -0.0020097829401493073,
    0.017576497048139572,
    0.006620665546506643,
    0.011507264338433743,
    0.024845702573657036,
    0.020822668448090553,
    0.009745453484356403,
    0.01868630014359951,
    -0.023305851966142654,
    0.014413559809327126,
    0.005718951113522053,
    -0.01620311662554741,
    0.022528991103172302,
    -0.023541685193777084,
    0.03479230776429176,
    -0.0021329016890376806,
    -0.007754744961857796,
    -0.01915796473622322,
    -0.0008405887056142092,
    -0.0018537170253694057,
    0.0015112388646230102,
    0.005549012683331966,
    -0.03737260028719902,
    -0.009259914979338646,
    0.011403220705688,
    -0.0006038886494934559,
    0.020559091120958328,
    -0.038288187235593796,
    -0.02073943428695202,
    -0.0033051306381821632,
    -0.0005739759653806686,
    0.024776341393589973,
    0.019282817840576172,
    -0.0029045611154288054,
    0.004727065097540617,
    0.03204554691910744,
    0.03429289534687996,
    -0.006759390700608492,
    0.0016959169879555702,
    -0.010085330344736576,
    0.03601308912038803,
    -0.017118703573942184,
    0.015551107004284859,
    -0.03898181393742561,
    -0.011271431110799313,
    -0.002257754560559988,
    0.030797019600868225,
    -0.009190551936626434,
    0.040757495909929276,
    -0.001557191601023078,
    -0.005264625418931246,
    0.005791781935840845,
    0.004893535282462835,
    0.007123544812202454,
    -0.015828557312488556,
    0.006551302969455719,
    -0.004629957489669323,
    -0.007948960177600384,
    -0.0163834597915411,
    -0.012582385912537575,
    -0.008718885481357574,
    0.012922262772917747,
    0.016244733706116676,
    0.020836541429162025,
    -0.010508442297577858,
    0.002505725948140025,
    0.032378487288951874,
    0.02091977745294571,
    0.03931475430727005,
    -0.004224185831844807,
    -0.025483839213848114,
    -0.03565240651369095,
    -0.01956026814877987,
    0.008850675076246262,
    0.006145531311631203,
    -0.03334956616163254,
    0.005788313690572977,
    -0.019934827461838722,
    0.02144693396985531,
    0.017534879967570305,
    0.027980895712971687,
    0.04072974994778633,
    0.022598354145884514,
    0.008580160327255726,
    -0.010869128629565239,
    -0.02233477495610714,
    0.03506975993514061,
    -0.008469180203974247,
    0.012339616194367409,
    -0.017174193635582924,
    -0.018672427162528038,
    0.013359247706830502,
    -0.02021227777004242,
    0.005666928831487894,
    -0.014732628129422665,
    0.009128125384449959,
    -0.01879728026688099,
    0.0006498413858935237,
    -0.016605420038104057,
    0.00037174049066379666,
    0.006759390700608492,
    -0.013373119756579399,
    -0.0022612225729972124,
    -0.003776796627789736,
    0.01541238185018301,
    -0.006599856540560722,
    -0.0197961013764143,
    0.01879728026688099,
    0.025123154744505882,
    -0.00798364169895649,
    -0.012866772711277008,
    -0.006794072221964598,
    -0.014316451735794544,
    -0.04294935613870621,
    0.0060380189679563046,
    0.015315274707973003,
    0.003166405251249671,
    -0.00559756625443697,
    0.03207329288125038,
    0.012790474109351635,
    0.002732888562604785,
    -0.011521137319505215,
    0.035042013972997665,
    0.0027051435317844152,
    -0.03207329288125038,
    -0.0170354675501585,
    -0.004095864947885275,
    0.015079441480338573,
    0.025414476171135902,
    0.009010208770632744,
    -0.009572046808898449,
    0.00384615920484066,
    -0.016425076872110367,
    -0.005327051971107721,
    -0.04414239525794983,
    0.003943266812711954,
    0.001639559748582542,
    0.00405424740165472,
    -0.017881693318486214,
    0.012568512931466103,
    0.02104463055729866,
    0.012922262772917747,
    0.013491036370396614,
    0.024942811578512192,
    0.0038877767510712147,
    0.033321820199489594,
    0.0131095414981246,
    0.0013543058885261416,
    0.02929878607392311,
    0.00948881171643734,
    -0.005351328756660223,
    0.012901454232633114,
    0.023014528676867485,
    0.021474678069353104,
    0.029687216505408287,
    0.018186887726187706,
    -0.004380251746624708,
    -0.03812171518802643,
    0.0037213065661489964,
    0.012637875974178314,
    -0.005299306940287352,
    0.020767178386449814,
    -0.011410157196223736,
    0.05446355789899826,
    0.008101558312773705,
    0.008906165137887001,
    0.0018433125223964453,
    -0.019671248272061348,
    0.026718495413661003,
    0.0069258613511919975,
    -0.011632117442786694,
    -0.011930377222597599,
    -0.0029791260603815317,
    -0.038038481026887894,
    -0.004560594446957111,
    0.030907999724149704,
    -0.008420626632869244,
    0.000804173294454813,
    0.0038877767510712147,
    0.01656380295753479,
    -0.05626698583364487,
    -0.014691010117530823,
    0.013414737768471241,
    0.011562754400074482,
    -0.010182437486946583,
    -0.012526895850896835,
    -0.0025143963284790516,
    -0.012131528928875923,
    -0.030158882960677147,
    -0.04036906734108925,
    0.006870371289551258,
    -0.008420626632869244,
    -0.024901192635297775,
    -0.02411045879125595,
    -0.0016135487239807844,
    0.024415655061602592,
    -0.024207567796111107,
    0.031129959970712662,
    0.026982072740793228,
    8.89250950422138e-05,
    -0.015259784646332264,
    -0.01544012688100338,
    0.01738228090107441,
    0.006617197301238775,
    -0.008705013431608677,
    -0.014677138067781925,
    0.008379008620977402,
    0.017701350152492523,
    0.01727130077779293,
    -0.03160162642598152,
    0.023527812212705612,
    -0.038565635681152344,
    0.012776601128280163,
    -0.020184533670544624,
    0.010799765586853027,
    -0.0037074340507388115,
    -2.0050143575645052e-05,
    0.009967413730919361,
    -0.0027849106118083,
    0.009710771963000298,
    -0.0041201417334377766,
    0.010910745710134506,
    0.029964666813611984,
    0.023555558174848557,
    -0.008642586879432201,
    -0.009391703642904758,
    0.018714044243097305,
    -0.018422720953822136,
    -0.034209661185741425,
    -0.028716139495372772,
    -0.011618244461715221,
    -0.021030757576227188,
    0.004012629855424166,
    -0.01544012688100338,
    0.022723205387592316,
    0.02046198397874832,
    -0.02062845416367054,
    0.0053166477009654045,
    0.023500068113207817,
    0.005299306940287352,
    -0.004297016654163599,
    -0.008351263590157032,
    0.00048813968896865845,
    -0.008261092007160187,
    -0.00981481559574604,
    0.025483839213848114,
    0.0259416326880455,
    -0.02924329601228237,
    0.03543044626712799,
    -0.05848659202456474,
    0.015370764769613743,
    0.01821463368833065,
    -0.018131397664546967,
    0.032628193497657776,
    0.025983251631259918,
    -0.0043559749610722065,
    -0.028188982978463173,
    0.013373119756579399,
    0.019726740196347237,
    0.007095799781382084,
    -0.004914344288408756,
    -0.04336553066968918,
    0.0004179099923931062,
    0.006891179829835892,
    -0.01874179020524025,
    -0.0108760641887784,
    -0.0036380712408572435,
    -0.005084282718598843,
    -0.024790212512016296,
    0.004900471772998571,
    -0.016341840848326683,
    0.004799895919859409,
    0.008365136571228504,
    -0.028008639812469482,
    -0.0013187575386837125,
    0.006693496368825436,
    -0.0024259588681161404,
    0.009752389043569565,
    -0.0037906691431999207,
    0.012811282649636269,
    -0.022723205387592316,
    -0.037566814571619034,
    -0.012124592438340187,
    -0.003201086539775133,
    0.013040179386734962,
    0.009974350221455097,
    0.022889675572514534,
    0.015578852035105228,
    0.04916425049304962,
    -0.0015129729872569442,
    0.018672427162528038,
    0.015218166634440422,
    -0.010674912482500076,
    -0.018186887726187706,
    -0.00010940874926745892,
    0.010009030811488628,
    0.01196505781263113,
    -0.01910247467458248,
    0.016480566933751106,
    0.02786991558969021,
    0.004851917736232281,
    -0.03731710836291313,
    -0.00816398486495018,
    0.03165711462497711,
    -0.006634538061916828,
    0.011403220705688,
    -0.025331242009997368,
    -0.014982333406805992,
    -0.01697997748851776,
    -0.005902762059122324,
    -0.008739694952964783,
    0.03035309910774231,
    -0.019407670944929123,
    -0.007442613132297993,
    0.022903548553586006,
    -0.01095929928123951,
    0.011597435921430588,
    -0.0029704556800425053,
    0.023597175255417824,
    -0.0029687215574085712,
    0.016938360407948494,
    0.01957414112985134,
    -0.007199843879789114,
    -0.01512105856090784,
    0.027772806584835052,
    -0.04153435677289963,
    0.01857532002031803,
    -0.003912054002285004,
    0.021655021235346794,
    0.023375215008854866,
    0.024734722450375557,
    0.005583693739026785,
    -0.0012025750475004315,
    0.010778957046568394,
    0.013608952984213829,
    -0.02003193460404873,
    0.02093365043401718,
    -0.02935427613556385,
    -0.002939242636784911,
    -0.0180897805839777,
    0.004043842665851116,
    -0.016397330909967422,
    -0.0007066320395097136,
    0.001360375084914267,
    0.030963489785790443,
    0.023611048236489296,
    -0.006187148857861757,
    0.01411530002951622,
    0.026954328641295433,
    -0.0053131794556975365,
    0.04355974867939949,
    0.019435416907072067,
    0.023180998861789703,
    0.004955961834639311,
    0.013685251586139202,
    -0.00790040660649538,
    -0.010896873660385609,
    -0.03340505436062813,
    -0.019227327778935432,
    -0.007359377574175596,
    0.026038741692900658,
    -0.012540767900645733,
    0.003658880013972521,
    0.0019681653939187527,
    0.006464599631726742,
    -0.03826044127345085,
    -0.025261878967285156,
    0.03956446051597595,
    0.035042013972997665,
    0.01538463681936264,
    -0.0445585697889328,
    -0.02641329914331436,
    0.0051016234792768955,
    0.02069781720638275,
    -0.029631726443767548,
    -0.008295773528516293,
    -0.0007109672296792269,
    -0.01892213337123394,
    -0.00705765001475811,
    0.029603982344269753,
    0.04120141640305519,
    0.013914148323237896,
    0.017479389905929565,
    0.019421543926000595,
    0.0017644125036895275,
    -0.009162806905806065,
    -0.023180998861789703,
    -0.022112814709544182,
    0.0028802843298763037,
    0.0027953151147812605,
    -0.024831831455230713,
    -0.017118703573942184,
    0.043226808309555054,
    0.008330455049872398,
    -0.014926843345165253,
    0.00132656074129045,
    0.0072553339414298534,
    0.030186627060174942,
    -0.025830652564764023,
    0.0016308894846588373,
    -0.012776601128280163,
    -0.01204829290509224,
    0.009974350221455097,
    -0.01334537472575903,
    -0.01158356387168169,
    0.0020947521552443504,
    0.0030935744289308786,
    -0.015662087127566338,
    0.01323439460247755,
    0.0005674732383340597,
    -0.009780134074389935,
    -0.009641408920288086,
    0.015315274707973003,
    -0.009523492306470871,
    0.006162872072309256,
    0.01797880046069622,
    -0.003034616122022271,
    -0.006891179829835892,
    -0.006696964614093304,
    -0.018644681200385094,
    -0.0188666433095932,
    0.014968461357057095,
    0.010543123818933964,
    0.005392946302890778,
    -0.02008742466568947,
    0.03346054628491402,
    0.006748986430466175,
    0.013005497865378857,
    -0.011729225516319275,
    -0.0002900226099882275,
    -0.035680148750543594,
    0.0311854500323534,
    -0.010002095252275467,
    -0.005739759653806686,
    0.01944928802549839,
    0.008732758462429047,
    -0.02775893546640873,
    -0.001410663011483848,
    -0.011042534373700619,
    0.022182177752256393,
    0.029687216505408287,
    -0.010092266835272312,
    -0.008379008620977402,
    0.0030797019135206938,
    -0.020129043608903885,
    -0.008274964988231659,
    0.003801073646172881,
    0.028910355642437935,
    0.0016846455400809646,
    -0.012852899730205536,
    0.024498889222741127,
    -0.005562885198742151,
    0.022112814709544182,
    -0.006599856540560722,
    0.036151815205812454,
    0.006915456615388393,
    -0.034570347517728806,
    -0.016341840848326683,
    -0.004973302595317364,
    0.00040837263804860413,
    -0.0197961013764143,
    0.0009468002244830132,
    -0.01968512125313282,
    -0.028549669310450554,
    -0.023500068113207817,
    0.021849237382411957,
    -0.011763906106352806,
    0.010501505807042122,
    0.020295513793826103,
    0.022653844207525253,
    0.03559691458940506,
    0.0024485017638653517,
    -0.0010335035622119904,
    -0.01750713400542736,
    -0.01320664957165718,
    -0.004373315256088972,
    -0.036040835082530975,
    -0.00021372368792071939,
    -0.003499346086755395,
    -0.010168565437197685,
    0.01152807381004095,
    -0.028008639812469482,
    -0.010598613880574703,
    -0.027536975219845772,
    -0.023652665317058563,
    0.015648216009140015,
    -0.0015875378157943487,
    0.026718495413661003,
    0.015814686194062233,
    0.03712289407849312,
    0.006318937987089157,
    0.002321915002539754,
    -0.004522445145994425,
    0.009828688576817513,
    -0.019726740196347237,
    0.008212538436055183,
    0.010446015745401382,
    -0.009079571813344955,
    -0.005188326817005873,
    0.00477561866864562,
    -0.03323858603835106,
    -0.0006194952293299139,
    0.010806702077388763,
    0.012575449422001839,
    -0.014302579686045647,
    0.05127287656068802,
    -0.026954328641295433,
    -0.024956682696938515,
    0.0010413068812340498,
    -0.013248267583549023,
    -0.005320115480571985,
    0.007303887512534857,
    -0.019227327778935432,
    -0.002947912784293294,
    -0.00511549599468708,
    -0.010980108752846718,
    0.004522445145994425,
    -0.005798717960715294,
    -0.008101558312773705,
    0.013900276273488998,
    -0.02369428239762783,
    0.015564979985356331,
    -0.013386992737650871,
    -0.018353357911109924,
    -0.008143175393342972,
    0.016896743327379227,
    0.04386494308710098,
    0.019060857594013214,
    0.010279545560479164,
    0.01645282283425331,
    -0.0030692974105477333,
    -0.01632796972990036,
    -0.02240413799881935,
    0.024831831455230713,
    -0.0038808404933661222,
    0.012707238085567951,
    0.020892031490802765,
    -0.03873210772871971,
    0.0050946869887411594,
    -0.04067426174879074,
    0.03473681956529617,
    -0.020545218139886856,
    -0.003599921939894557,
    0.0046715750358998775,
    0.006422982085496187,
    -0.03998063504695892,
    0.009537365287542343,
    0.0036692845169454813,
    -0.018825024366378784,
    0.01761811412870884,
    -0.006821817252784967,
    0.011798587627708912,
    0.014788118191063404,
    -0.026316192001104355,
    -0.002899358980357647,
    -0.06070619821548462,
    -0.0026427172124385834,
    0.009246041998267174,
    0.002471044659614563,
    -0.007768617477267981,
    0.015218166634440422,
    0.0006745518185198307,
    -0.02852192334830761,
    0.026801729574799538,
    0.17579270899295807,
    0.016536056995391846,
    0.00546577712520957,
    0.004595275968313217,
    0.018963750451803207,
    0.03418191522359848,
    -0.005770972929894924,
    0.030658293515443802,
    -0.02628844603896141,
    0.015842430293560028,
    -0.010716530494391918,
    -0.02374977245926857,
    0.007935088127851486,
    0.00477215088903904,
    0.00810849480330944,
    -0.006003337912261486,
    -0.017895564436912537,
    -0.0424499437212944,
    -0.011007853783667088,
    0.002190125873312354,
    -0.007109672296792269,
    -0.029576236382126808,
    0.013421674259006977,
    -0.009877242147922516,
    0.028799375519156456,
    -0.012894517742097378,
    0.0022248071618378162,
    -0.011444837786257267,
    0.004144418518990278,
    -0.005888889543712139,
    -0.018256250768899918,
    0.024179821833968163,
    0.0028802843298763037,
    0.01685512624680996,
    -0.025261878967285156,
    -0.02757859230041504,
    -0.007213716395199299,
    -0.014885226264595985,
    0.00860096886754036,
    0.011826332658529282,
    -0.001423668465577066,
    -0.005469245370477438,
    -0.010154692456126213,
    -0.031629372388124466,
    -0.008552415296435356,
    -0.00886454712599516,
    0.01296388078480959,
    -0.016993850469589233,
    0.008767439983785152,
    0.01897762343287468,
    -0.0016482301289215684,
    0.002533470978960395,
    0.01358120795339346,
    0.02157178521156311,
    -0.007498103193938732,
    -0.012422851286828518,
    -0.004681979306042194,
    0.01060555037111044,
    0.008621778339147568,
    0.018908260390162468,
    -0.04383719712495804,
    0.01258932240307331,
    -0.015037823468446732,
    0.015509489923715591,
    -0.008385945111513138,
    0.0026271105743944645,
    -0.006076168734580278,
    0.02051747404038906,
    -0.008566288277506828,
    0.0009060496813617647,
    0.005656524561345577,
    0.002219605026766658,
    -0.031684860587120056,
    -0.004262335132807493,
    0.0008713683346286416,
    -0.027273396030068398,
    0.03154613450169563,
    0.01567596010863781,
    0.02251511812210083,
    0.018644681200385094,
    0.0200458075851202,
    0.03151839226484299,
    -0.007831043563783169,
    -0.003915521781891584,
    -0.010896873660385609,
    0.0007313425303436816,
    0.04503023624420166,
    -0.019282817840576172,
    0.0027068776544183493,
    -0.0011115365196019411,
    -0.012908389791846275,
    -0.03354378044605255,
    0.0016109476564452052,
    0.004831109195947647,
    -0.002748495200648904,
    0.023028401657938957,
    0.016314096748828888,
    0.013491036370396614,
    -0.011632117442786694,
    0.010792829096317291,
    -0.009121188893914223,
    0.04389268904924393,
    0.02216830477118492,
    0.0063952370546758175,
    -0.03454260155558586,
    -0.010910745710134506,
    -0.022196050733327866,
    -0.0016291553620249033,
    -0.001874525798484683,
    -0.0038565637078136206,
    0.008954718708992004,
    0.006343214772641659,
    -0.0013066190294921398,
    0.012235572561621666,
    -0.016244733706116676,
    -0.008892292156815529,
    -0.01743777096271515,
    -0.019199583679437637,
    0.024152075871825218,
    -0.011826332658529282,
    0.0002835198538377881,
    0.004161759279668331,
    0.0005249885725788772,
    0.004616084974259138,
    -0.03445936739444733,
    -0.022806441411376,
    -0.013602016493678093,
    -0.015481744892895222,
    -0.000813277147244662,
    -0.003329407423734665,
    0.029909176751971245,
    -0.02008742466568947,
    0.02687109261751175,
    0.024540508165955544,
    0.005601034499704838,
    0.0011722288327291608,
    -0.0014496794901788235,
    -0.025192515924572945,
    0.012297999113798141,
    -0.005233412608504295,
    -0.01732679083943367,
    -0.0026461852248758078,
    -0.01261706743389368,
    -0.013130350969731808,
    0.025303496047854424,
    -0.028910355642437935,
    0.018949877470731735,
    -0.0017505399882793427,
    -0.015037823468446732,
    0.008295773528516293,
    -0.012388170696794987,
    0.01845046691596508,
    -0.0057224188931286335,
    -0.020434238016605377,
    0.021655021235346794,
    -0.010834447108209133,
    -0.02651040628552437,
    -0.01874179020524025,
    0.008177856914699078,
    0.028147365897893906,
    -0.013380056247115135,
    -0.005157113540917635,
    -0.012041357345879078,
    -0.008913101628422737,
    -0.012873709201812744,
    -0.04339327663183212,
    -0.1735731065273285,
    0.01772909425199032,
    0.008399817161262035,
    -0.05640571191906929,
    0.028397072106599808,
    -0.0006259979563765228,
    -0.019171837717294693,
    -0.006228766404092312,
    -0.00984256062656641,
    -0.02293129451572895,
    0.01908860355615616,
    0.0043316977098584175,
    -0.018242377787828445,
    -0.004498168360441923,
    0.0023756709415465593,
    0.0034265152644366026,
    -0.007303887512534857,
    -0.02569192834198475,
    0.03579112887382507,
    0.0017288641538470984,
    0.04339327663183212,
    -0.02746761217713356,
    0.00769231840968132,
    0.011396284215152264,
    0.014704883098602295,
    -0.024776341393589973,
    -0.012207827530801296,
    -0.003700497793033719,
    -0.01992095448076725,
    -0.017784584313631058,
    -0.022903548553586006,
    0.025705799460411072,
    0.018075907602906227,
    0.011763906106352806,
    0.04960817098617554,
    0.027495356276631355,
    0.032267507165670395,
    0.006169808097183704,
    -0.033377308398485184,
    0.03889857605099678,
    0.0203232578933239,
    0.02197408862411976,
    0.03956446051597595,
    -0.01214540097862482,
    -0.01674414426088333,
    -0.011763906106352806,
    0.025137025862932205,
    -0.016369586810469627,
    -0.0003426948678679764,
    -0.007588274776935577,
    0.026427172124385834,
    -0.02393011562526226,
    0.0245127622038126,
    -0.025428349152207375,
    0.014274834655225277,
    0.027301141992211342,
    0.01839497685432434,
    0.017257429659366608,
    -0.00960672739893198,
    -0.013865594752132893,
    0.011403220705688,
    -0.016341840848326683,
    -0.004227654077112675,
    0.018755661323666573,
    -0.006759390700608492,
    -0.006572111509740353,
    -0.015245911665260792,
    0.017410026863217354,
    -0.005368669517338276,
    0.025067664682865143,
    0.02240413799881935,
    -0.010459888726472855,
    -0.009724644012749195,
    -0.01785394735634327,
    0.032850153744220734,
    0.014843608252704144,
    0.009759325534105301,
    0.018769534304738045,
    0.04189504310488701,
    -0.02258448116481304,
    -0.037400342524051666,
    0.026330064982175827,
    -0.01591179333627224,
    0.035042013972997665,
    -0.013872531242668629,
    -0.02327810786664486,
    0.009114253334701061,
    -0.012707238085567951,
    -0.018436593934893608,
    0.007969768717885017,
    0.009155870415270329,
    -0.022348647937178612,
    -0.01134773064404726,
    -0.00480336369946599,
    -0.0010699189733713865,
    0.006135127041488886,
    0.02322261780500412,
    -0.02505379170179367,
    0.0001675541716394946,
    -0.021363697946071625,
    -0.006551302969455719,
    0.025123154744505882,
    -0.01243672426789999,
    -0.006173276342451572,
    0.03071378357708454,
    0.011791651137173176,
    -0.020129043608903885,
    0.004532849416136742,
    -0.0022248071618378162,
    -0.012367361225187778,
    -0.006769795436412096,
    -0.004553658422082663,
    0.029160059988498688,
    0.01774296723306179,
    -0.038565635681152344,
    0.015634343028068542,
    -0.0259416326880455,
    -0.01980997435748577,
    0.019282817840576172,
    0.012825154699385166,
    0.019490906968712807,
    0.0015199092449620366,
    -0.015717577189207077,
    0.003957139328122139,
    -0.027204032987356186,
    -0.026427172124385834,
    -0.1189708262681961,
    -0.033682506531476974,
    0.005774441175162792,
    0.0025490776170045137,
    -0.001938686240464449,
    0.004366379231214523,
    -0.006648410577327013,
    0.010973172262310982,
    -0.008358200080692768,
    0.010432143695652485,
    -0.028743885457515717,
    0.007824108004570007,
    -0.025206388905644417,
    -0.007220652420073748,
    0.003915521781891584,
    -0.0280502587556839,
    -0.002833464415743947,
    -0.011215941049158573,
    -0.015897920355200768,
    -0.010279545560479164,
    0.01596728339791298,
    0.004175631795078516,
    0.01591179333627224,
    0.0106124859303236,
    -0.02877162955701351,
    -0.013511844910681248,
    -0.0311854500323534,
    0.028397072106599808,
    0.021003011614084244,
    0.01950477808713913,
    0.03379348665475845,
    -0.030269863083958626,
    -0.002136369701474905,
    0.010293418541550636,
    0.016133753582835197,
    -0.007199843879789114,
    -0.02516477182507515,
    -0.021113991737365723,
    0.018353357911109924,
    -0.03199005872011185,
    -0.010196310468018055,
    -0.00893391016870737,
    -0.004071587696671486,
    -0.017659733071923256,
    0.0009572046692483127,
    -0.01305405143648386,
    -0.010328099131584167,
    -0.00395020330324769,
    -0.014843608252704144,
    -0.00030497892294079065,
    -0.020059680566191673,
    -0.015814686194062233,
    -0.002124231308698654,
    -0.004303952679038048,
    0.036567993462085724,
    0.026593642309308052,
    0.009412512183189392,
    0.0012866773176938295,
    -0.015232039615511894,
    -0.018186887726187706,
    -0.005774441175162792,
    -0.007685382384806871,
    -0.026968199759721756,
    0.02026776783168316,
    0.012076037935912609,
    0.0022230730392038822,
    0.005060005933046341,
    -0.006651878822594881,
    0.00032665475737303495,
    0.0029600514099001884,
    -0.01143096573650837,
    0.027481485158205032,
    -0.027495356276631355,
    -0.001936952117830515,
    -0.04017484933137894,
    0.0013204915449023247,
    0.011313049122691154,
    -0.016605420038104057,
    -0.00036111933877691627,
    0.00127887399867177,
    -0.020892031490802765,
    0.007948960177600384,
    -0.022889675572514534,
    -0.013865594752132893,
    -0.007248397450894117,
    0.03334956616163254,
    -0.0018346422584727407,
    -0.013872531242668629,
    0.015093313530087471,
    -0.0406465157866478,
    0.0175626240670681,
    0.00795589666813612,
    0.0014678871957585216,
    0.011604372411966324,
    -0.0021623808424919844,
    -0.02162727527320385,
    -0.031629372388124466,
    -0.015551107004284859,
    -0.016993850469589233,
    0.02233477495610714,
    -0.03531946614384651,
    -0.004949025344103575,
    -0.07396833598613739,
    0.034043192863464355,
    0.015995029360055923,
    -0.016008900478482246,
    0.029493000358343124,
    -0.04061876982450485,
    0.03340505436062813,
    -0.02982594259083271,
    0.0024935875553637743,
    0.035680148750543594,
    -0.02517864480614662,
    -0.000803306233137846,
    -0.015343019738793373,
    -0.0016681718407198787,
    0.007678445894271135,
    0.00448082759976387,
    0.04208926111459732,
    -0.025775162503123283,
    0.04627876356244087,
    -0.003084904048591852,
    0.004050779156386852,
    0.007359377574175596,
    0.04267190769314766,
    0.0247624684125185,
    -0.03071378357708454,
    -0.015343019738793373,
    -0.004734001122415066,
    0.02282031439244747,
    0.01119513250887394,
    -0.017049340531229973,
    0.005715482868254185,
    0.0036658162716776133,
    -0.003048488637432456,
    0.012748856097459793,
    0.00019042217172682285,
    -0.0008249820675700903,
    0.027800552546977997,
    0.005809122230857611,
    0.01331762969493866,
    0.024942811578512192,
    -0.040285829454660416,
    -0.018186887726187706,
    0.029603982344269753,
    -0.011680671013891697,
    -0.023902371525764465,
    0.0018693235469982028,
    -0.00583686726167798,
    0.005895825568586588,
    0.018936004489660263,
    0.013380056247115135,
    0.026066485792398453,
    -0.0028074535075575113,
    -0.027897659689188004,
    -0.06176050752401352,
    -0.0009918860159814358,
    -0.009336213581264019,
    0.03434838727116585,
    0.0018103653565049171,
    -0.022182177752256393,
    0.01405980996787548,
    0.056128259748220444,
    -0.006884243804961443,
    0.008073813281953335,
    0.013296821154654026,
    -0.0025785567704588175,
    -0.013685251586139202,
    -0.041284654289484024,
    -0.00490740779787302,
    -0.013352311216294765,
    -0.008566288277506828,
    -0.01246446929872036,
    -0.034514859318733215,
    0.007463421672582626,
    0.012783537618815899,
    0.03631828725337982,
    -0.031740352511405945,
    0.005666928831487894,
    0.002604567678645253,
    -0.005323583725839853,
    0.0280502587556839,
    0.0039189900271594524,
    -0.005087750963866711,
    0.0017522741109132767,
    0.0028317305259406567,
    0.02144693396985531,
    0.005223007872700691,
    -0.013643634505569935,
    -0.029964666813611984,
    -0.008025259710848331,
    0.0026600577402859926,
    0.0015485213370993733,
    -0.013421674259006977,
    0.011847141198813915,
    0.013213586062192917,
    0.006752454675734043,
    0.0068010082468390465,
    -0.006266916170716286,
    -0.004165227524936199,
    0.006943201646208763,
    -0.004182568285614252,
    0.011854077689349651,
    0.0016473630676046014,
    0.023486195132136345,
    -0.036623481661081314,
    -0.017881693318486214,
    -0.002836932661011815,
    -0.0037247745785862207,
    -0.03387672081589699,
    -0.007810235023498535,
    0.0021138270385563374,
    -0.00044912321027368307,
    0.00790040660649538,
    0.021322080865502357,
    0.01743777096271515,
    -0.01910247467458248,
    0.01750713400542736,
    0.01152807381004095,
    0.002391277579590678,
    -0.028299963101744652,
    -0.04247768968343735,
    -0.0030710315331816673,
    0.017881693318486214,
    0.044641803950071335,
    -0.0021970621310174465,
    -0.001374247600324452,
    0.04508572444319725,
    -0.007810235023498535,
    -0.003599921939894557,
    -0.002503991825506091,
    0.010383589193224907,
    -0.005680801346898079,
    -0.01240897923707962,
    -0.03531946614384651,
    -0.021419188007712364,
    -0.0002917566744145006,
    -0.0076645733788609505,
    -0.027037562802433968,
    -0.01031422708183527,
    -0.016175370663404465,
    0.10199084877967834,
    -0.024443399161100388,
    -0.014441304840147495,
    -0.0015641278587281704,
    -5.435891580418684e-06,
    0.022071197628974915,
    -0.007428740616887808,
    -0.00511549599468708,
    -0.003086638171225786,
    -0.003435185644775629,
    -0.023971734568476677,
    -0.008254156447947025,
    -0.006877307314425707,
    -0.027301141992211342,
    -0.031074469909071922,
    0.005184858571738005,
    -0.01845046691596508,
    0.008815993554890156,
    0.016660910099744797,
    0.005816058721393347,
    0.032850153744220734,
    0.006953606382012367,
    -0.00898940023034811,
    -0.028494179248809814,
    -0.032156527042388916,
    -0.004262335132807493,
    0.01697997748851776,
    0.011035598814487457,
    -0.01714644767343998,
    -0.06597775965929031,
    0.0250399187207222,
    -0.0053131794556975365,
    -0.025081535801291466,
    -0.01573145017027855,
    -0.016244733706116676,
    -0.0027398248203098774,
    0.006142063066363335,
    -0.028188982978463173,
    -0.013768487609922886,
    0.007706190925091505,
    -0.016161499544978142,
    0.013303757645189762,
    -0.011715352535247803,
    -0.028244473040103912,
    0.003995289094746113,
    0.0004916078178212047,
    -0.0013326300540938973,
    -0.012103783898055553,
    -0.03942573443055153
  ]
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# pick\n\n[![image](https://github.com/wong2/pick/actions/workflows/ci.yml/badge.svg)](https://github.com/wong2/pick/actions/workflows/ci.yml)\n[![pypi](https://img.shields.io/pypi/v/pick.svg)](https://pypi.python.org/pypi/pick)\n[![pypi](https://img.shields.io/pypi/dm/pick)](https://pypi.python.org/pypi/pick)\n\n**pick** is a small python library to help you create curses based\ninteractive selection list in the terminal.\n\n|         basic          |         multiselect          |\n| :--------------------: | :--------------------------: |\n| ![](example/basic.gif) | ![](example/multiselect.gif) |\n\n## installation\n\n    $ pip install pick\n\n## usage\n\n**pick** comes with a simple api:\n\n    >>> from pick import pick\n\n    >>> title = 'please choose your favorite programming language: '\n    >>> options = ['java', 'javascript', 'python', 'php', 'c++', 'erlang', 'haskell']\n    >>> option, index = pick(options, title)\n    >>> print(option)\n    >>> print(index)\n\n**outputs**:\n\n    >>> c++\n    >>> 4\n\n**pick** multiselect example:\n\n    >>> from pick import pick\n\n    >>> title = 'please choose your favorite programming language (press space to mark, enter to continue): '\n    >>> options = ['java', 'javascript', 'python', 'php', 'c++', 'erlang', 'haskell']\n    >>> selected = pick(options, title, multiselect=true, min_selection_count=1)\n    >>> print(selected)\n\n**outputs**:\n\n    >>> [('java', 0), ('c++', 4)]\n\n## options\n\n- `options`: a list of options to choose from\n- `title`: (optional) a title above options list\n- `indicator`: (optional) custom the selection indicator, defaults to `*`\n- `default_index`: (optional) set this if the default selected option\n  is not the first one\n- `multiselect`: (optional), if set to true its possible to select\n  multiple items by hitting space\n- `min_selection_count`: (optional) for multi select feature to\n  dictate a minimum of selected items before continuing\n- `screen`: (optional), if you are using `pick` within an existing curses application set this to your existing `screen` object.  it is assumed this has initialised in the standard way (e.g. via `curses.wrapper()`, or `curses.noecho(); curses.cbreak(); screen.kepad(true)`)\n\n## community projects\n\n[pickpack](https://github.com/anafvana/pickpack): a fork of `pick` to select tree data.\n",
  "docs_url": null,
  "keywords": "terminal,gui",
  "license": "mit",
  "name": "pick",
  "package_url": "https://pypi.org/project/pick/",
  "project_url": "https://pypi.org/project/pick/",
  "project_urls": {
    "Homepage": "https://github.com/wong2/pick",
    "Repository": "https://github.com/wong2/pick"
  },
  "release_url": "https://pypi.org/project/pick/2.2.0/",
  "requires_dist": [
    "windows-curses (>=2.2.0,<3.0.0); sys_platform == \"win32\""
  ],
  "requires_python": ">=3.7",
  "summary": "pick an option in the terminal with a simple gui",
  "version": "2.2.0",
  "releases": [],
  "developers": [
    "wonderfuly@gmail.com",
    "wong2"
  ],
  "kwds": "multiselect pickpack selection interactive selected",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pick",
  "homepage": "https://github.com/wong2/pick",
  "release_count": 28,
  "dependency_ids": [
    "pypi_windows_curses"
  ]
}
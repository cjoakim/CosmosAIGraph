{
  "classifiers": [
    "framework :: jupyter",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 3"
  ],
  "description": "# comm\n\nit provides a way to register a kernel comm implementation, as per the jupyter kernel protocol.\nit also provides a base comm implementation and a default commmanager that can be used.\n\n## register a comm implementation in the kernel:\n\n### case 1: using the default commmanager and the basecomm implementations\n\nwe provide default implementations for usage in ipython:\n\n```python\nimport comm\n\n\nclass mycustomcomm(comm.base_comm.basecomm):\n    def publish_msg(self, msg_type, data=none, metadata=none, buffers=none, **keys):\n        # todo implement the logic for sending comm messages through the iopub channel\n        pass\n\n\ncomm.create_comm = mycustomcomm\n```\n\nthis is typically what ipykernel and jupyterlite's pyolite kernel will do.\n\n### case 2: providing your own comm manager creation implementation\n\n```python\nimport comm\n\ncomm.create_comm = custom_create_comm\ncomm.get_comm_manager = custom_comm_manager_getter\n```\n\nthis is typically what xeus-python does (it has its own manager implementation using xeus's c++ messaging logic).\n\n## comm users\n\nlibraries like ipywidgets can then use the comms implementation that has been registered by the kernel:\n\n```python\nfrom comm import create_comm, get_comm_manager\n\n# create a comm\ncomm_manager = get_comm_manager()\ncomm = create_comm()\n\ncomm_manager.register_comm(comm)\n```\n",
  "docs_url": null,
  "keywords": "ipykernel,jupyter,xeus-python",
  "license": "bsd 3-clause license  copyright (c) 2022, jupyter all rights reserved.  redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1. redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  2. redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  3. neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  this software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. in no event shall the copyright holder or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.",
  "name": "comm",
  "package_url": "https://pypi.org/project/comm/",
  "project_url": "https://pypi.org/project/comm/",
  "project_urls": {
    "Homepage": "https://github.com/ipython/comm"
  },
  "release_url": "https://pypi.org/project/comm/0.2.0/",
  "requires_dist": [
    "traitlets>=4",
    "pytest; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "jupyter python comm implementation, for usage in ipykernel, xeus-python etc.",
  "version": "0.2.0",
  "releases": [],
  "developers": [
    "jupyter_contributors"
  ],
  "kwds": "create_comm custom_create_comm jupyter base_comm ipywidgets",
  "license_kwds": "copyright liability liable redistributions negligence",
  "libtype": "pypi",
  "id": "pypi_comm",
  "homepage": "",
  "release_count": 7,
  "dependency_ids": [
    "pypi_pytest",
    "pypi_traitlets"
  ]
}
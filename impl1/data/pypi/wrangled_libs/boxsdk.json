{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: os independent",
    "operating system :: posix",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "<p align=\"center\">\n  <img src=\"https://github.com/box/sdks/blob/master/images/box-dev-logo.png\" alt= \u201cbox-dev-logo\u201d width=\"30%\" height=\"50%\">\n</p>\n\n# box python sdk\n\n[![image](http://opensource.box.com/badges/active.svg)](http://opensource.box.com/badges)\n[![documentation status](https://readthedocs.org/projects/box-python-sdk/badge/?version=latest)](http://box-python-sdk.readthedocs.org/en/latest)\n[![image](https://github.com/box/box-python-sdk/workflows/build/badge.svg)](https://github.com/box/box-python-sdk/actions)\n[![image](https://img.shields.io/pypi/v/boxsdk.svg)](https://pypi.python.org/pypi/boxsdk)\n[![image](https://img.shields.io/pypi/dm/boxsdk.svg)](https://pypi.python.org/pypi/boxsdk)\n[![image](https://coveralls.io/repos/github/box/box-python-sdk/badge.svg?branch=main)](https://coveralls.io/github/box/box-python-sdk?branch=main)\n\ngetting started docs: <https://developer.box.com/guides/tooling/sdks/python/>\n\n<!-- start doctoc generated toc please keep comment here to allow auto update -->\n<!-- don't edit this section, instead re-run doctoc to update -->\n\n- [installing](#installing)\n- [getting started](#getting-started)\n- [authorization](#authorization)\n  - [server-to-server auth with jwt](#server-to-server-auth-with-jwt)\n  - [traditional 3-legged oauth2](#traditional-3-legged-oauth2)\n  - [other auth options](#other-auth-options)\n- [usage documentation](#usage-documentation)\n  - [making api calls manually](#making-api-calls-manually)\n- [other client options](#other-client-options)\n  - [logging client](#logging-client)\n  - [developer token client](#developer-token-client)\n  - [development client](#development-client)\n- [customization](#customization)\n  - [custom subclasses](#custom-subclasses)\n- [fips 140-2 compliance](#fips-140-2-compliance)\n- [versions](#versions)\n  - [supported version](#supported-version)\n  - [version schedule](#version-schedule)\n- [contributing](#contributing)\n  - [developer setup](#developer-setup)\n  - [testing](#testing)\n- [questions, bugs, and feature requests?](#questions-bugs-and-feature-requests)\n- [copyright and license](#copyright-and-license)\n\n<!-- end doctoc generated toc please keep comment here to allow auto update -->\n\n# installing\n\n``` console\npip install boxsdk\n```\n\nthe current version of the sdk is v3.x --- with this release support for\npython 3.5 and earlier (including 2.x) has been dropped. if you're\nlooking for the code or documentation for v1.5.x, please see the [1.5\nbranch](https://github.com/box/box-python-sdk/tree/1.5).\n\n# getting started\n\nto get started with the sdk, get a developer token from the\nconfiguration page of your app in the [box developer\nconsole](https://app.box.com/developers/console). you can use this token\nto make test calls for your own box account.\n\nthe sdk provides an interactive `developmentclient` that makes it easy\nto test out the sdk in a repl. this client will automatically prompt for\na new developer token when it requires one, and will log http requests\nand responses to aid in debugging and understanding how the sdk makes\napi calls.\n\n``` pycon\n>>> from boxsdk import developmentclient\n>>> client = developmentclient()\nenter developer token: <enter developer token here>\n>>> user = client.user().get()\nget https://api.box.com/2.0/users/me {'headers': {'authorization': '---wxyz',\n            'user-agent': 'box-python-sdk-2.0.0',\n            'x-box-ua': 'agent=box-python-sdk/2.0.0; env=python/3.6.5'},\n'params': none}\n\"get https://api.box.com/2.0/users/me\" 200 454\n{'date': 'thu, 01 nov 2018 23:32:11 gmt', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=31536000', 'cache-control': 'no-cache, no-store', 'content-encoding': 'gzip', 'vary': 'accept-encoding', 'box-request-id': '0b50luc09ahp56m2jmkla8mgmh2', 'age': '0'}\n{'address': '',\n'avatar_url': 'https://cloud.app.box.com/api/avatar/large/123456789',\n'created_at': '2012-06-07t11:14:50-07:00',\n'id': '123456789',\n'job_title': '',\n'language': 'en',\n'login': 'user@example.com',\n'max_upload_size': 16106127360,\n'modified_at': '2018-10-30t17:01:27-07:00',\n'name': 'example user',\n'phone': '',\n'space_amount': 1000000000000000.0,\n'space_used': 14330018065,\n'status': 'active',\n'timezone': 'america/los_angeles',\n'type': 'user'}\n\n>>> print(f'the current user id is {user.id}')\nthe current user id is 123456789\n```\n\noutside of a repl, you can initialize a new `client` with just the\ndeveloper token to get started.\n\n``` python\nfrom boxsdk import oauth2, client\n\nauth = oauth2(\n    client_id='your_client_id',\n    client_secret='your_client_secret',\n    access_token='your_developer_token',\n)\nclient = client(auth)\n\nuser = client.user().get()\nprint(f'the current user id is {user.id}')\n```\n\n# authorization\n\nthe box api uses oauth2 for auth. the sdk makes it relatively painless\nto work with oauth2 tokens.\n\n## server-to-server auth with jwt\n\nthe python sdk supports your [jwt\nauthentication](https://developer.box.com/en/guides/authentication/jwt/)\napplications.\n\nauthenticating with a jwt requires some extra dependencies. to get them,\nsimply\n\n``` console\npip install \"boxsdk[jwt]\"\n```\n\ninstead of instantiating your `client` with an instance of `oauth2`,\ninstead use an instance of `jwtauth`.\n\n``` python\nfrom boxsdk import jwtauth\nfrom boxsdk import client\n\nauth = jwtauth(\n    client_id='your_client_id',\n    client_secret='your_client_secret',\n    enterprise_id='your_enterprise_id',\n    jwt_key_id='your_jwt_key_id',\n    rsa_private_key_file_sys_path='cert.pem',\n    rsa_private_key_passphrase='passphrase',\n)\n\naccess_token = auth.authenticate_instance()\nclient = client(auth)\n```\n\nthis client is able to create application users:\n\n``` python\nned_stark_user = client.create_user('ned stark')\n```\n\nthese users can then be authenticated:\n\n``` python\nned_auth = jwtauth(\n    client_id='your_client_id',\n    client_secret='your_client_secret',\n    user=ned_stark_user,\n    jwt_key_id='your_jwt_key_id',\n    rsa_private_key_file_sys_path='cert.pem',\n    rsa_private_key_passphrase='passphrase'\n)\nned_auth.authenticate_user()\nned_client = client(ned_auth)\n```\n\nrequests made with `ned_client` (or objects returned from\n`ned_client`'s methods) will be performed on behalf of the newly\ncreated app user.\n\n## traditional 3-legged oauth2\n\n### get the authorization url\n\n``` python\nfrom boxsdk import oauth2\n\noauth = oauth2(\n    client_id='your_client_id',\n    client_secret='your_client_secret',\n    store_tokens=your_store_tokens_callback_method,\n)\n\nauth_url, csrf_token = oauth.get_authorization_url('http://your_redirect_url')\n```\n\nstore_tokens is a callback used to store the access token and refresh\ntoken. you might want to define something like this:\n\n``` python\ndef store_tokens(access_token, refresh_token):\n    # store the tokens at secure storage (e.g. keychain)\n```\n\nthe sdk will keep the tokens in memory for the duration of the python\nscript run, so you don't always need to pass store_tokens.\n\n### authenticate (get access/refresh tokens)\n\nif you navigate the user to the auth_url, the user will eventually get\nredirected to <http://your_redirect_url?code=your_auth_code>. after\ngetting the code, you will be able to use the code to exchange for an\naccess token and refresh token.\n\nthe sdk handles all the work for you; all you need to do is run:\n\n``` python\n# make sure that the csrf token you get from the `state` parameter\n# in the final redirect uri is the same token you get from the\n# get_authorization_url method.\nassert 'the_csrf_token_you_got' == csrf_token\naccess_token, refresh_token = oauth.authenticate('your_auth_code')\n```\n\n### create an authenticated client\n\n``` python\nfrom boxsdk import client\n\nclient = client(oauth)\n```\n\nand that's it! you can start using the client to do all kinds of cool\nstuff and the sdk will handle the token refresh for you automatically.\n\n### instantiate a client given an access and a refresh token\n\nalternatively, you can instantiate an oauth2 object with the access\ntoken and refresh token. once you have an oauth object you can pass that\ninto the client object to instantiate a client and begin making calls.\n\n``` python\nfrom boxsdk import client, oauth2\n\noauth = oauth2(\n    client_id='your_client_id',\n    client_secret='your_client_secret',\n    access_token='access_token',\n    refresh_token='refresh_token',\n)\n\nclient = client(oauth)\nuser = client.user().get()\n```\n\nthis will retrieve the current user! from here you can use the client\nyou created to start making calls.\n\n## other auth options\n\nfor advanced uses of the sdk, three additional auth classes are\nprovided:\n\n-   `cooperativelymanagedoauth2`: allows multiple auth instances to\n    share tokens.\n-   `remoteoauth2`: allows use of the sdk on clients without access to\n    your application's client secret. instead, you provide a\n    `retrieve_access_token` callback. that callback should perform the\n    token refresh, perhaps on your server that does have access to the\n    client secret.\n-   `redismanagedoauth2`: stores access and refresh tokens in redis.\n    this allows multiple processes (possibly spanning multiple machines)\n    to share access tokens while synchronizing token refresh. this could\n    be useful for a multiprocess web server, for example.\n\n# usage documentation\n\nfull documentation of the available functionality with example code is\navailable in the [sdk documentation\npages](https://github.com/box/box-python-sdk/blob/main/docs/usage), and\nthere is also method-level documentation available on\n[readthedocs](https://box-python-sdk.readthedocs.io/en/stable/index.html).\n\n## making api calls manually\n\nthe box api is continually evolving. as such, there are api endpoints\navailable that are not specifically supported by the sdk. you can still\nuse these endpoints by using the `make_request` method of the `client`.\n\n``` python\n# https://developer.box.com/en/reference/get-metadata-templates-id/\n# returns a python dictionary containing the result of the api request\njson_response = client.make_request(\n    'get',\n    client.get_url('metadata_templates', 'enterprise', 'customer', 'schema'),\n).json()\n```\n\n`make_request()` takes two parameters:\n\n-   `method` - an http verb like `get` or `post`\n-   `url` - the url of the requested api endpoint\n\nthe `client` class and box objects have a `get_url` method. pass it an\nendpoint to get the correct url for use with that object and endpoint.\n\nfor api calls which require body or query params, you can use `**kwargs`\nto pass extra params:\n\n-   `data` - takes a jsonified dictionary of body parameters\n-   `params` - takes a dictionary of query parameters\n\n``` python\n# https://developer.box.com/reference/post-folders/\n# creates a new folder\n\n# jsonify the body\nbody = json.dumps({\n        'name': 'test-subfolder',\n        'parent': {\n            'id': '0',\n        }\n})\n\nclient.make_request(\n    'post',\n    client.get_url('folders'),\n    params={'fields': 'name,id'},\n    data=body\n)\n```\n\n# other client options\n\n## logging client\n\nfor more insight into the network calls the sdk is making, you can use\nthe `loggingclient` class. this class logs information about network\nrequests and responses made to the box api.\n\n``` pycon\n>>> from boxsdk import loggingclient\n>>> client = loggingclient()\n>>> client.user().get()\nget https://api.box.com/2.0/users/me {'headers': {u'authorization': u'bearer ---------------------------kbjp',\n             u'user-agent': u'box-python-sdk-1.5.0'},\n 'params': none}\n{\"type\":\"user\",\"id\":\"..\",\"name\":\"jeffrey meadows\",\"login\":\"..\",..}\n<boxsdk.object.user.user at 0x10615b8d0>\n```\n\n## developer token client\n\nthe box developer console allows for the creation of short-lived\ndeveloper tokens. the sdk makes it easy to use these tokens. use the\n`get_new_token_callback` parameter to control how the client will get\nnew developer tokens as needed. the default is to prompt standard input\nfor a token.\n\n## development client\n\nfor exploring the box api, or to quickly get going using the sdk, the\n`developmentclient` class combines the `loggingclient` with the\n`developertokenclient`.\n\n# customization\n\n## custom subclasses\n\ncustom object subclasses can be defined:\n\n``` pycon\nfrom boxsdk import client\nfrom boxsdk import folder\n\nclass myfoldersubclass(folder):\n    pass\n\nclient = client(oauth)\nclient.translator.register('folder', myfoldersubclass)\nfolder = client.folder('0')\n\n>>> print folder\n>>> <box myfoldersubclass - 0>\n```\n\nif an object subclass is registered in this way, instances of this\nsubclass will be returned from all sdk methods that previously returned\nan instance of the parent. see `baseapijsonobjectmeta` and `translator`\nto see how the sdk performs dynamic lookups to determine return types.\n\n# fips 140-2 compliance\n\nthe python sdk allows the use of fips 140-2 validated ssl libraries, such as openssl 3.0.\nhowever, some actions are required to enable this functionality.\n\ncurrently, the latest distributions of python default to openssl v1.1.1, which is not fips compliant.\ntherefore, if you want to use openssl 3.0 in your network communication,\nyou need to ensure that python uses a custom ssl library.\none way to achieve this is by creating a custom python distribution with the ssl module replaced.\n\nif you are using jwt for authentication, it is also necessary to ensure that the cryptography library,\nwhich is one of the extra dependencies for jwt, uses openssl 3.0.\nto enable fips mode for the `cryptography` library, you need to install a fips-compliant version of openssl\nduring the installation process of cryptography using the `pip` command.\n\n# versions\nwe use a modified version of [semantic versioning](https://semver.org/) for all changes. see [version strategy](versions.md) for details which is effective from 30 july 2022.\n\n## supported version\n\nonly the current major version of sdk is supported. new features, functionality, bug fixes, and security updates will only be added to the current major version.\n\na current release is on the leading edge of our sdk development, and is intended for customers who are in active development and want the latest and greatest features.  instead of stating a release date for a new feature, we set a fixed minor or patch release cadence of maximum 2-3 months (while we may release more often). at the same time, there is no schedule for major or breaking release. instead, we will communicate one quarter in advance the upcoming breaking change to allow customers to plan for the upgrade. we always recommend that all users run the latest available minor release for whatever major version is in use. we highly recommend upgrading to the latest sdk major release at the earliest convenient time and before the eol date.\n\n## version schedule\n\n| version | supported environments                                  | state     | first release | eol/terminated |\n|---------|---------------------------------------------------------|-----------|---------------|----------------|\n| 3       | python 3.6+                                             | supported | 17 jan 2022   | tbd            |\n| 2       |                                                         | eol       | 01 nov 2018   | 17 jan 2022    |\n| 1       |                                                         | eol       | 10 feb 2015   | 01 nov 2018    |\n\n# contributing\n\nsee\n[contributing.md](https://github.com/box/box-python-sdk/blob/main/contributing.md).\n\n## developer setup\n\ncreate a virtual environment and install packages -\n\n``` console\nmkvirtualenv boxsdk\npip install -r requirements-dev.txt\n```\n\n## testing\n\nrun all tests using -\n\n``` console\ntox\n```\n\nthe tox tests include code style checks via pep8 and pylint.\n\nthe tox tests are configured to run on python 3.6, 3.7, 3.8, 3.9, 3.10, 3.11\nand pypy (our ci is configured to run pypy tests on pypy-3.6, pypy-3.7, pypy-3.8).\n\n# questions, bugs, and feature requests?\n\nneed to contact us directly? [browse the issues\ntickets](https://github.com/box/box-python-sdk/issues)! or, if that\ndoesn't work, [file a new\none](https://github.com/box/box-python-sdk/issues/new) and we will get\nback to you. if you have general questions about the box api, you can\npost to the [box developer\nforum](https://community.box.com/t5/developer-forum/bd-p/developerforum).\n\n# copyright and license\n\n    copyright 2019 box, inc. all rights reserved.\n\n    licensed under the apache license, version 2.0 (the \"license\");\n    you may not use this file except in compliance with the license.\n    you may obtain a copy of the license at\n\n       http://www.apache.org/licenses/license-2.0\n\n    unless required by applicable law or agreed to in writing, software\n    distributed under the license is distributed on an \"as is\" basis,\n    without warranties or conditions of any kind, either express or implied.\n    see the license for the specific language governing permissions and\n    limitations under the license.\n\n\n",
  "docs_url": "https://pythonhosted.org/boxsdk/",
  "keywords": "box oauth2 sdk",
  "license": "apache software license, version 2.0, http://www.apache.org/licenses/license-2.0",
  "name": "boxsdk",
  "package_url": "https://pypi.org/project/boxsdk/",
  "project_url": "https://pypi.org/project/boxsdk/",
  "project_urls": {
    "Changelog": "https://github.com/box/box-python-sdk/blob/main/CHANGELOG.md",
    "Homepage": "https://github.com/box/box-python-sdk"
  },
  "release_url": "https://pypi.org/project/boxsdk/3.9.2/",
  "requires_dist": [
    "attrs (>=17.3.0)",
    "urllib3",
    "requests (<3,>=2.4.3)",
    "requests-toolbelt (>=0.4.0)",
    "python-dateutil",
    "coveralls ; extra == 'coveralls'",
    "tox (<=3.28.0) ; extra == 'coveralls'",
    "tox (<=3.28.0) ; extra == 'dev'",
    "tox-gh-actions ; extra == 'gh'",
    "tox (<=3.28.0) ; extra == 'gh'",
    "pyjwt (>=1.7.0) ; extra == 'jwt'",
    "cryptography (>=3) ; extra == 'jwt'",
    "redis (>=2.10.3) ; extra == 'redis'",
    "bottle ; extra == 'test'",
    "jsonpatch (>1.14) ; extra == 'test'",
    "sqlalchemy (<1.4.0) ; extra == 'test'",
    "pytest ; extra == 'test'",
    "pytest-timeout ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest-lazy-fixture ; extra == 'test'",
    "pytz ; extra == 'test'",
    "urllib3 (<2) ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "official box python sdk",
  "version": "3.9.2",
  "releases": [],
  "developers": [
    "box",
    "oss@box.com"
  ],
  "kwds": "badges boxsdk oauth2 badge oauth",
  "license_kwds": "apache software license, version 2.0, http://www.apache.org/licenses/license-2.0",
  "libtype": "pypi",
  "id": "pypi_boxsdk",
  "homepage": "https://github.com/box/box-python-sdk",
  "release_count": 83,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_bottle",
    "pypi_coveralls",
    "pypi_cryptography",
    "pypi_jsonpatch",
    "pypi_pyjwt",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_lazy_fixture",
    "pypi_pytest_timeout",
    "pypi_python_dateutil",
    "pypi_pytz",
    "pypi_redis",
    "pypi_requests",
    "pypi_requests_toolbelt",
    "pypi_sqlalchemy",
    "pypi_tox",
    "pypi_tox_gh_actions",
    "pypi_urllib3"
  ]
}
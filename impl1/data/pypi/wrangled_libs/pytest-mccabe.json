{
  "classifiers": [
    "development status :: 3 - alpha",
    "environment :: plugins",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing"
  ],
  "description": "pytest-mccabe\n=============\n\n.. image:: https://travis-ci.org/the-compiler/pytest-mccabe.svg?branch=master\n    :target: https://travis-ci.org/the-compiler/pytest-mccabe\n\npytest plugin for checking cyclomatic complexity of python source with\n`mccabe`_.\n\n**note:** i (`@the-compiler`_) stopped using this plugin in 2016. while i will still review pull requests and release new versions if needed by the community, i do not have the time to continue maintaining this plugin myself. you might want to consider switching to `pytest-flake8`_ or `tox`_ + `flake8`_ instead (see some `arguments`_ on why).\n\n.. _mccabe: https://pypi.python.org/pypi/mccabe/\n.. _@the-compiler: https://github.com/the-compiler\n.. _pytest-flake8: https://github.com/tholo/pytest-flake8\n.. _tox: https://tox.readthedocs.io/\n.. _arguments: https://github.com/the-compiler/pytest-mccabe/issues/7#issuecomment-654698075\n\nusage\n-----\n\ninstall via::\n\n    pip install pytest-mccabe\n\nif you then type::\n\n    pytest --mccabe\n\nevery file ending in ``.py`` will be discovered and run through mccabe,\nstarting from the command line arguments.\n\nsimple usage example\n--------------------\n\nconsider you have this (deliberately bad and complex) code:\n\n.. code-block:: python\n\n    # module.py\n\n    import random\n    import os.path\n\n    def some_function():\n        num = random.random()\n        if 0 <= num < 0.1:\n            print(\"1\")\n        elif 0.1 <= num < 0.2:\n            print(\"2\")\n        elif 0.2 <= num < 0.3:\n            print(\"3\")\n        elif 0.3 <= num < 0.4:\n            print(\"4\")\n        elif 0.4 <= num < 0.5:\n            print(\"5\")\n        elif 0.5 <= num < 0.6:\n            print(\"6\")\n        elif 0.6 <= num < 0.7:\n            print(\"7\")\n        elif 0.7 <= num < 0.8:\n            print(\"8\")\n        elif 0.8 <= num < 0.9:\n            print(\"9\")\n        elif 0.9 <= num < 1:\n            print(\"10\")\n\nrunning pytest with pytest-mccabe installed shows you this function is\nconsidered too complex::\n\n   $ pytest -q --mccabe module.py\n   f\n   ============================== failures ==============================\n   ____________________________ mccabe-check ____________________________\n   .../module.py:4: c901 'some_function' is too complex (11)\n\n\nconfiguring mccabe complexity per project and file\n--------------------------------------------------\n\nyou may configure the maximum complexity for your project\nby adding an ``mccabe-complexity`` entry to pytest config file (e.g.\n``setup.cfg``) like this:\n\n.. code-block:: ini\n\n    [pytest]\n    mccabe-complexity=15\n\nrerunning with the above example will now look better::\n\n    $ pytest -q --mccabe foo.py\n    .\n    1 passed in 0.00 seconds\n\nif you have some files where you want to set a higher complexity than the\nproject-wide one, you can start a mccabe-complexity line with a glob-pattern:\n\n.. code-block:: ini\n\n    [pytest]\n    mccabe-complexity =\n        *.py 7\n        magic.py 10\n\nignoring certain functions\n--------------------------\n\nyou can exclude certain functions from the complexity check by adding comments\nlike this:\n\n.. code-block:: python\n\n    def some_function():  # noqa\n        ...\n\n    def another_function():  # pragma: no mccabe\n        ...\n\n(both will work - ``# noqa`` is mainly there for `flake8`_ compatibility)\n\n.. _flake8: https://pypi.python.org/pypi/flake8\n\n\nrunning mccabe checks and no other tests\n----------------------------------------\n\nyou can restrict your test run to only perform \"mccabe\" tests\nand not any other tests by typing::\n\n    pytest --mccabe -m mccabe\n\nthis will only run tests that are marked with the \"mccabe\" keyword\nwhich is added for the mccabe test items added by this plugin.\n\nif you are using pytest < 2.4, then use the following invocation\nto the same effect::\n\n    pytest --mccabe -k mccabe\n\n\nnotes\n-----\n\nthe repository of this plugin is at https://github.com/the-compiler/pytest-mccabe\n\nfor more info on pytest see https://pytest.org\n\nthe code is based on florian schulze's excellent `pytest-flakes`_ - thanks!\n\n.. _pytest-flakes: https://pypi.python.org/pypi/pytest-flakes\n\nchanges\n=======\n\n0.1\n---\n\n- initial release.\n\n1.0\n---\n\n- drop support for python 2.6, 3.2, 3.3 and 3.4\n- add support for python 3.5, 3.6 and 3.7\n- make this plugin compatible with pytest 4.x and 5.x\n- drop support for \"setup.py test\"\n- remove outdated pytest-cache dependency\n- various code/ci cleanups\n\n2.0\n---\n\n- drop support for python 2.7\n- drop support for pytest < 5.4\n- add support for python 3.8 (no changes required)\n- fix deprecation warnings with pytest >= 5.4 (thanks to martin thoma for the pr!)\n- various code/ci cleanups\n\n\n",
  "docs_url": null,
  "keywords": "pytest plugin mccabe complexity",
  "license": "mit license",
  "name": "pytest-mccabe",
  "package_url": "https://pypi.org/project/pytest-mccabe/",
  "project_url": "https://pypi.org/project/pytest-mccabe/",
  "project_urls": {
    "Homepage": "https://github.com/The-Compiler/pytest-mccabe"
  },
  "release_url": "https://pypi.org/project/pytest-mccabe/2.0/",
  "requires_dist": [
    "pytest (>=5.4.0)",
    "mccabe"
  ],
  "requires_python": "",
  "summary": "pytest plugin to run the mccabe code complexity checker.",
  "version": "2.0",
  "releases": [],
  "developers": [
    "florian_bruhin",
    "me@the-compiler.org"
  ],
  "kwds": "pytest _pytest pypi mccabe _mccabe",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_pytest_mccabe",
  "homepage": "https://github.com/the-compiler/pytest-mccabe",
  "release_count": 3,
  "dependency_ids": [
    "pypi_mccabe",
    "pypi_pytest"
  ]
}
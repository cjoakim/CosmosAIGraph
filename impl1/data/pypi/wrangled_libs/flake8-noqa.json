{
  "classifiers": [
    "environment :: console",
    "framework :: flake8",
    "intended audience :: developers",
    "license :: osi approved :: gnu lesser general public license v3 or later (lgplv3+)",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: quality assurance"
  ],
  "description": "[flake8-noqa](https://github.com/plinss/flake8-noqa)\n==========\n\nflake8 plugin to validate `# noqa` comments.\n\nflake8 is very particular about formatting of `# noqa` comments.\nif your `# noqa` isn't exactly what flake8 expects,\nit can easily cause your `# noqa` comment to be ignored.\n\nhowever, forgetting a colon or adding an extra space in the wrong place\nwill turn a strict `# noqa: <code>` comment\ninto a blanket `# noqa` comment,\nwhich is likely not what you intended.\nfor example:\n`# noqa f841`,\n`# noqa : f841`,\nand `# noqa:  f841`\nwill be interpreted as `# noqa`\nand may, as a result,\nhide other errors you care about.\n\nthis plugin looks for noqa comments\nthat do not match the proper formatting\nso your `# noqa` comments work and do only what you expect them to.\n\noptionally, it can also enforce usage of codes with all `# noqa` comments.\n\nin addition, this plugin looks for `# noqa` comments that are unnecessary\nbecause either there are no matching violations on the line\nor they contain codes that do not match existing violations.\n\nerrors reported by this module cannot be prevented via `# noqa` comments,\notherwise you'd never see many of the errors it produces.\nuse `ignore`, `extend-ignore`, or `per-file-ignores` to ignore them as needed.\nalternatively, if you have a comment that this plugin thinks is a\n`# noqa` with codes,\nbut isn't,\ne.g. `# noqa : x100 is not a code`,\nyou can make the comment look less like a proper `# noqa` comment.\ne.g. `# noqa - x100 is not a code`\n(flake8 will interpret both of those as `# noqa`).\n\nusage note:\nwhen determining if violations have matched a `# noqa` comment,\nthis plugin requires flake8 to have been made aware of the violations\nthat would otherwise apply.\nsome plugins do their own processing of `# noqa` comments \nand stop sending violation reports to flake8 when they see a `# noqa` comment.\na plugin doing so will cause this plugin to stop seeing the violation,\nand it may report the lack of a violation or matching code.\nwhen you then remove the `# noqa` comment or violation code, \nthe other plugin will resume sending the violation,\nprompting you to restore the `# noqa` comment or code.\n\nthe best fix for this situation is to try to get the offending plugin\nto stop respecting `# noqa` comments.\na plugin doing so is considered an anti-pattern,\nand it's best to allow flake8 to determine if violations should be \nsurfaced to the user or not.\nthe offending plugin may have an option to control this behavior\n(note the flake8 `--disable-noqa` option will disable *all* noqa comments,\nso is not a suitable fix for this situation).\nif the plugin does not have an option to control its `# noqa` behavior, \nthe best course of action may be to contact the maintainers of \nthe plugin via the appropriate issue reporting system.\n\nif the plugin is unmaintained,\nor the maintainers decline to address the issue for whatever reason,\nfeel free to file an issue on this plugin\nto see if a work-around can be established.\n\n\ninstallation\n------------\n\nstandard python package installation:\n\n    pip install flake8-noqa\n\n\noptions\n-------\n`noqa-require-code`\n: require code(s) to be included in  `# noqa` comments\n\n`noqa-no-require-code`\n: do not require code(s) in `# noqa` comments (default setting)\n\n`noqa-include-name`\n: include plugin name in messages\n\n`noqa-no-include-name`\n: do not include plugin name in messages (default setting)\n\nall options may be specified on the command line with a `--` prefix,\nor can be placed in your flake8 config file.\n\n\nerror codes\n-----------\n\n| code   | message |\n|--------|---------|\n| nqa001 | \"`#noqa`\" must have a single space after the hash, e.g. \"`# noqa`\" |\n| nqa002 | \"`# noqa x000`\" must have a colon, e.g. \"`# noqa: x000`\" |\n| nqa003 | \"`# noqa : x000`\" must not have a space before the colon, e.g. \"# noqa: x000\"' |\n| nqa004 | \"<code># noqa:&nbsp;&nbsp;x000</code>\" must have at most one space before the codes, e.g. \"`# noqa: x000`\" |\n| nqa005 | \"`# noqa: x000, x000`\" has duplicate codes, remove x000 |\n| nqa011 | \"`#flake8: noqa`\" must have a single space after the hash, e.g. \"`# flake8: noqa`\" |\n| nqa012 | \"`# flake8 noqa`\" must have a colon or equals, e.g. \"`# flake8: noqa`\" |\n| nqa013 | \"`# flake8 : noqa`\" must not have a space before the colon, e.g. \"# flake8: noqa\" |\n| nqa101 | \"`# noqa`\" has no violations |\n| nqa102 | \"`# noqa: x000`\" has no matching violations |\n| nqa103 | \"`# noqa: x000, x001`\" has unmatched code(s), remove x001 |\n| nqa104 | \"`# noqa`\" must have codes, e.g. \"`# noqa: x000`\" (enable via `noqa-require-code`) |\n\n\nexamples\n--------\n\n```\n#flake8 noqa   <-- ignored (nqa011)\nx = 1+2  #noqa  <-- ignored (nqa001)\nx = 1+2  # noqa e226  <-- treated as a blanket noqa (nqa002)\nx = 1+2  # noqa : e226  <-- treated as a blanket noqa (nqa003)\nx = 1+2  # noqa:  e226  <-- treated as a blanket noqa (nqa004)\nx = 1+2 # noqa: x101, e261 <-- unmatched code (nqa103)\n```\n",
  "docs_url": null,
  "keywords": "flake8,noqa",
  "license": "gnu lesser general public license v3",
  "name": "flake8-noqa",
  "package_url": "https://pypi.org/project/flake8-noqa/",
  "project_url": "https://pypi.org/project/flake8-noqa/",
  "project_urls": {
    "homepage": "https://github.com/plinss/flake8-noqa"
  },
  "release_url": "https://pypi.org/project/flake8-noqa/1.3.2/",
  "requires_dist": [
    "flake8 (<7.0,>=3.8.0)",
    "typing-extensions (>=3.7.4.2)",
    "importlib-metadata (<5.0.0,>=4.0.0) ; python_version < \"3.8.0\"",
    "mypy ; extra == 'dev'",
    "flake8 (<6.0.0,>=3.8.0) ; extra == 'dev'",
    "flake8-annotations ; extra == 'dev'",
    "flake8-bandit ; extra == 'dev'",
    "flake8-bugbear ; extra == 'dev'",
    "flake8-commas ; extra == 'dev'",
    "flake8-comprehensions ; extra == 'dev'",
    "flake8-continuation ; extra == 'dev'",
    "flake8-datetimez ; extra == 'dev'",
    "flake8-docstrings ; extra == 'dev'",
    "flake8-import-order ; extra == 'dev'",
    "flake8-literal ; extra == 'dev'",
    "flake8-noqa ; extra == 'dev'",
    "flake8-polyfill ; extra == 'dev'",
    "flake8-pyproject ; extra == 'dev'",
    "flake8-modern-annotations ; extra == 'dev'",
    "flake8-requirements ; extra == 'dev'",
    "flake8-typechecking-import ; extra == 'dev'",
    "flake8-use-fstring ; extra == 'dev'",
    "pep8-naming ; extra == 'dev'",
    "flake8-docstrings ; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "flake8 noqa comment validation",
  "version": "1.3.2",
  "releases": [],
  "developers": [
    "pypi@linss.com"
  ],
  "kwds": "flake8 comments allow ignores comment",
  "license_kwds": "gnu lesser general public license v3",
  "libtype": "pypi",
  "id": "pypi_flake8_noqa",
  "homepage": "",
  "release_count": 20,
  "dependency_ids": [
    "pypi_flake8",
    "pypi_flake8_annotations",
    "pypi_flake8_bandit",
    "pypi_flake8_bugbear",
    "pypi_flake8_commas",
    "pypi_flake8_comprehensions",
    "pypi_flake8_continuation",
    "pypi_flake8_datetimez",
    "pypi_flake8_docstrings",
    "pypi_flake8_import_order",
    "pypi_flake8_literal",
    "pypi_flake8_modern_annotations",
    "pypi_flake8_noqa",
    "pypi_flake8_polyfill",
    "pypi_flake8_pyproject",
    "pypi_flake8_requirements",
    "pypi_flake8_typechecking_import",
    "pypi_flake8_use_fstring",
    "pypi_importlib_metadata",
    "pypi_mypy",
    "pypi_pep8_naming",
    "pypi_typing_extensions"
  ]
}
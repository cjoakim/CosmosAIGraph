{
  "classifiers": [
    "environment :: plugins",
    "intended audience :: developers",
    "programming language :: python :: 3"
  ],
  "description": "jsx-lexer\n=========\n\n.. image:: https://travis-ci.org/fcurella/jsx-lexer.svg?branch=master\n    :target: https://travis-ci.org/fcurella/jsx-lexer\n\n.. image:: https://coveralls.io/repos/github/fcurella/jsx-lexer/badge.svg?branch=master\n    :target: https://coveralls.io/github/fcurella/jsx-lexer?branch=master\n\na jsx lexer for pygments\n\ninstallation\n------------\n.. code-block:: sh\n\n    $ pip install jsx-lexer\n\nusage with sphinx\n-----------------\n\nto use within sphinx, simply specify ``jsx`` for your ``code-block``::\n\n    .. code-block:: jsx\n\n        const blogtitle = ({ children }) => (\n          <h3>{children}</h3>\n        );\n        // class component\n        class blogpost extends react.component {\n          rendertitle(title) {\n            return <blogtitle>{title}</blogtitle>\n          };\n          render() {\n            return (\n            <div classname=\"blog-body\">\n              {this.rendertitle(this.props.title)}\n              <p>{this.props.body}</p>\n            </div>\n            );\n          }\n        }\n\nusage with mkdocs\n-----------------\n\nfirst, you need to create the ``css`` for the highlighting:\n\n.. code-block:: bash\n\n  $ pygmentize -s default -f html -a .codehilite > code/pygments.css\n\nthen, add the following to your ``mkdocs.yml``:\n\n.. code-block:: yaml\n\n  markdown_extensions:\n    - codehilite\n  extra_css: [pygments.css]\n\nnow, you can use ``jsx`` in your code blocks::\n\n    ```jsx\n    const blogtitle = ({ children }) => (\n      <h3>{children}</h3>\n    );\n    // class component\n    class blogpost extends react.component {\n      rendertitle(title) {\n        return <blogtitle>{title}</blogtitle>\n      };\n      render() {\n        return (\n        <div classname=\"blog-body\">\n          {this.rendertitle(this.props.title)}\n          <p>{this.props.body}</p>\n        </div>\n        );\n      }\n    }\n    ```\n\nusage with overleaf\n-------------------\n\nfirst, add the minted package in your main file:\n\n.. code-block:: latex\n\n    \\usepackage{minted}\n\nthen, download the `lexer.py`_ file from this project, and place it in your root folder in overleaf.\n\n.. _lexer.py: jsx/lexer.py\n\nnow, you can use ``{lexer.py:jsxlexer -x}`` in front of your minted code blocks:\n\n.. code-block:: latex\n\n    \\begin{minted}{lexer.py:jsxlexer -x}\n        const blogtitle = ({ children }) => (\n          <h3>{children}</h3>\n        );\n        // class component\n        class blogpost extends react.component {\n          rendertitle(title) {\n            return <blogtitle>{title}</blogtitle>\n          };\n          render() {\n            return (\n            <div classname=\"blog-body\">\n              {this.rendertitle(this.props.title)}\n              <p>{this.props.body}</p>\n            </div>\n            );\n          }\n        }\n    \\end{minted}\n\nyou can find an example of the lexer in use on overleaf here: `https://www.overleaf.com/read/xvsytqzkvdjb`\n",
  "docs_url": null,
  "keywords": "pygments highlight jsx react",
  "license": "mit license",
  "name": "jsx-lexer",
  "package_url": "https://pypi.org/project/jsx-lexer/",
  "project_url": "https://pypi.org/project/jsx-lexer/",
  "project_urls": {
    "Homepage": "https://github.com/fcurella/jsx-lexer"
  },
  "release_url": "https://pypi.org/project/jsx-lexer/2.0.1/",
  "requires_dist": [
    "Pygments (>=2.12.0)"
  ],
  "requires_python": "",
  "summary": "a jsx lexer for pygments",
  "version": "2.0.1",
  "releases": [],
  "developers": [
    "flavio.curella@gmail.com",
    "flavio_curella"
  ],
  "kwds": "jsxlexer jsx lexer _lexer react",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_jsx_lexer",
  "homepage": "https://github.com/fcurella/jsx-lexer",
  "release_count": 11,
  "dependency_ids": [
    "pypi_pygments"
  ]
}
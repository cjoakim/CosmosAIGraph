{
  "classifiers": [
    "development status :: 2 - pre-alpha",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3"
  ],
  "description": "#######################################################\nscripttester - utility for testing command line scripts\n#######################################################\n\n.. shared-text-body\n\n**********\nquickstart\n**********\n\nprovides class to be instantiated in tests that check that scripts can be run\nand give correct output.  usually works something like this in a test module::\n\n    import mymodule\n    from scripttester import scripttester\n    runner = scripttester(mymodule)\n\nthen, in the tests, something like::\n\n    code, stdout, stderr = runner.run_command(['my-script', my_arg])\n    assert code == 0\n    assert stdout == b'this script ran ok'\n\nthe class aims to find your scripts whether you have installed (with ``pip\ninstall .`` or ``pip install -e .`` or ``python setup.py install``), or not.\nif you have not installed, the scripts will not be on your system path, and we\nhave to find them.  the heuristic is to look (by default) in the directory\ncontaining ``mymodule``; if there is a ``setup.py`` file there, and a\n``scripts`` sub-directory, assume that directory contains the scripts.\n\nnote there is no way of using this not-installed mechanism to find entrypoint\nscripts, that have not been installed. to find these, we would have to run the\n``setup.py`` file.\n\n************\ninstallation\n************\n\n::\n\n    pip install scripttester\n\n****\ncode\n****\n\nsee https://github.com/matthew-brett/scripttester\n\nreleased under the bsd two-clause license - see the file ``license`` in the\nsource distribution.\n\n`travis-ci <https://travis-ci.org/matthew-brett/scripttester>`_ kindly tests\nthe code automatically under python versions 2.7, and 3.3 through 3.6.\n\nthe latest released version is at https://pypi.python.org/pypi/scripttester\n\n*****\ntests\n*****\n\n* install ``scripttester``\n* install the pytest_ testing framework::\n\n    pip install pytest\n\n* run the tests with::\n\n    py.test --pyargs scripttester\n\n*******\nsupport\n*******\n\nplease put up issues on the `scripttester issue tracker`_.\n\n.. standalone-references\n\n.. |scripttester-documentation| replace:: `scripttester documentation`_\n.. _scripttester documentation:\n    https://matthew-brett.github.com/scripttester/scripttester.html\n.. _documentation: https://matthew-brett.github.com/scripttester\n.. _pandoc: http://pandoc.org\n.. _jupyter: jupyter.org\n.. _homebrew: brew.sh\n.. _sphinx: http://sphinx-doc.org\n.. _rest: http://docutils.sourceforge.net/rst.html\n.. _scripttester issue tracker: https://github.com/matthew-brett/scripttester/issues\n.. _pytest: https://pytest.readthedocs.io\n.. _mock: https://github.com/testing-cabal/mock",
  "docs_url": null,
  "keywords": "",
  "license": "bsd license",
  "name": "scripttester",
  "package_url": "https://pypi.org/project/scripttester/",
  "project_url": "https://pypi.org/project/scripttester/",
  "project_urls": {
    "Homepage": "http://github.com/matthew-brett/scripttester"
  },
  "release_url": "https://pypi.org/project/scripttester/0.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "utility for testing command line scripts",
  "version": "0.1",
  "releases": [],
  "developers": [
    "matthew.brett@gmail.com",
    "matthew_brett"
  ],
  "kwds": "_scripttester scripttester run_command scripts script",
  "license_kwds": "bsd license",
  "libtype": "pypi",
  "id": "pypi_scripttester",
  "homepage": "http://github.com/matthew-brett/scripttester",
  "release_count": 1,
  "dependency_ids": []
}
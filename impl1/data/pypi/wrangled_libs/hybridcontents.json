{
  "classifiers": [
    "development status :: 4 - beta",
    "framework :: ipython",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7"
  ],
  "description": "hybridcontents\n======================\n\nthe `hybridcontentmanager` was originally created by [quantopian](https://www.quantopian.com/) as part of [pgcontents](https://github.com/quantopian/pgcontents); however, the usage of `hybridcontentsmanager` was restricted to the compatibility requirements of [pgcontents](https://github.com/quantopian/pgcontents). these restrictions included `postgres` dependencies and no support for the latest [notebook](https://pypi.org/project/notebook/) version (>6).\n\nat [viaduct](https://viaduct.ai) we used [pgcontents](https://github.com/quantopian/pgcontents) exclusively for the `hybridcontentsmanager` and wanted to extend its functionality, so we created this fork [hybridcontents](https://github.com/viaduct-ai/hybridcontents).\n\nsee related [pgcontents](https://github.com/quantopian/pgcontents) issues:\n- https://github.com/quantopian/pgcontents/issues/66\n- https://github.com/quantopian/pgcontents/issues/50\n- https://github.com/quantopian/pgcontents/issues/28\n\ngetting started\n---------------\n**prerequisites:**\n - a python installation with [jupyter notebook](https://github.com/jupyter/notebook) >= 4.0.\n\n**installation:**\n\n#### [pip](https://pypi.org/project/hybridcontents/)\n```bash\npip install hybridcontents\n```\n#### [anaconda](https://anaconda.org/viaduct/hybridcontents)\n```bash\nconda install -c viaduct hybridcontents\n```\n#### [conda-forge](https://github.com/conda-forge/hybridcontents-feedstock)\nsee instructions [here](https://github.com/conda-forge/hybridcontents-feedstock#installing-hybridcontents)\n\nfeatures\n-----\n- mix and match different content managers for different directories \n- easily move files between different content managers (i.e local files to s3 backed manager) \n- path validation to keep consistent naming scheme and/or prevent illegal characters\n\nusage\n-----\nfor a detailed example see, [hybrid_manager_example.py](https://github.com/viaduct-ai/hybridcontents/blob/master/examples/hybrid_manager_example.py)\n\nthe following code snippet creates a hybridcontentsmanager with two directories with different content managers. \n\n```python\nc = get_config()\n\nc.notebookapp.contents_manager_class = hybridcontentsmanager\n\nc.hybridcontentsmanager.manager_classes = {\n    # note: largfilemanager only exists in notebook > 5\n    # if using notebook < 5, use filecontentmanager instead\n    \"\": largefilemanager,\n    \"shared\": s3contentsmanager\n}\n\n# each item will be passed to the constructor of the appropriate content manager.\nc.hybridcontentsmanager.manager_kwargs = {\n    # args for root largefilemanager\n    \"\": {\n        \"root_dir\": read_only_dir\n    },\n    # args for the shared s3contentsmanager directory\n    \"shared\": {\n        \"access_key_id\": ...,\n        \"secret_access_key\": ...,\n        \"endpoint_url\":  ...,\n        \"bucket\": ...,\n        \"prefix\": ...\n    },\n}\n\ndef only_allow_notebooks(path):\n  return path.endswith('.ipynb')\n\n# only allow notebook files to be stored in s3\nc.hybridcontentsmanager.path_validators = {\n    \"shared\": only_allow_notebooks\n}\n```\n\n\ntesting\n-------\nto run unit tests, \n\n```bash\ntox\n```\n\nthis will run all unit tests for python versions 2.7, 3.6, 3.7 and jupyter notebook versions 4, 5, and 6.\n\n### publishing a release\n\n1. create a new release on github\n2. update the version in `setup.py`\n3. run ./scripts/pip_publish.sh\n4. update the version `meta.yaml`\n5. update the [sha256 in meta.yaml](https://github.com/conda-forge/staged-recipes/wiki/frequently-asked-questions#2-how-do-i-populate-the-hash-field)\n6. run ./scripts/anaconda_publish.sh\n7. update on conda forge\n",
  "docs_url": null,
  "keywords": "jupyterhub,pgcontents,hybridcontents,content manager,hybridcontentmanager",
  "license": "apache 2.0",
  "name": "hybridcontents",
  "package_url": "https://pypi.org/project/hybridcontents/",
  "project_url": "https://pypi.org/project/hybridcontents/",
  "project_urls": {
    "Download": "https://github.com/viaduct-ai/hybridcontents/archive/v0.4.0.tar.gz",
    "Homepage": "https://github.com/viaduct-ai/hybridcontents"
  },
  "release_url": "https://pypi.org/project/hybridcontents/0.4.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "hybrid content manager",
  "version": "0.4.0",
  "releases": [],
  "developers": [
    "engineering@viaduct.ai",
    "viaduct"
  ],
  "kwds": "hybridcontents hybridcontentmanager hybridcontentsmanager pgcontents hybrid_manager_example",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_hybridcontents",
  "homepage": "https://github.com/viaduct-ai/hybridcontents",
  "release_count": 6,
  "dependency_ids": []
}
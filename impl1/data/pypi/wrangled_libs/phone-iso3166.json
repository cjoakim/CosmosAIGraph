{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5"
  ],
  "description": "phone-iso3166\n==============================================\nsmall project to map an e.164 (international) phone number to the\niso-3166-1 alpha 2 (two letter) country code, associated with that number.\n\nalso provides mapping for e.212 (mobile network codes, mcc+mnc) to the country.\n\nthe package has no dependencies, and works on python 3.6+ and pypy 3.6+.\n\n\nsimple usage\n------------\n\nto simply get a country code from a phone number or mcc, mnc.\n\n.. code:: pycon\n\n\n    >>> from phone_iso3166.country import *\n    >>> phone_country(45)\n    'dk'\n    >>> phone_country('+1 202-456-1111')\n    'us'\n    >>> phone_country(14412921234)\n    'bm'\n    >>> network_country(238, 1)\n    'dk'\n\n\nnetwork names and codes\n-----------------------\n\nif you want more detailed information about the networks, such as the operator\nname use the functions in `phone_iso3166.network`.\n\n.. code:: pycon\n\n\n    >>> from phone_iso3166.network import *\n    >>> network(238, 1)\n    ('dk', 'tdc mobil')\n    >>> country_networks('dk')\n    [(238, 1, 'tdc mobil'), (238, 2, 'telenor'), (238, 3, 'migway a/s'),\n     (238, 4, 'nextgen mobile ltd t/a cardboardfish'), (238, 6, 'hi3g'),\n     (238, 8, 'nordisk mobiltelefon danmark a/s'), (238, 10, 'tdc mobil'),\n     (238, 43, 'mobiweb limited'), (238, 12, 'lycamobile denmark'),\n     (238, 13, 'compatel limited'), (238, 77, 'tele2'), (238, 20, 'telia'),\n     (238, 66, 'tt-netvaerket p/s'), (238, 28, 'cooltel'),\n     (238, 30, 'interactive digital media gmbh')]\n\n\nmore information\n----------------\n\nif want more information, you can easily use the country code with other python\npackages such as `pycountry`_.\n\n.. code:: pycon\n\n\n    >>> from phone_iso3166.country import phone_country\n    >>> import pycountry\n    >>> phone = '+55 21 3814-2121'\n    >>> c = pycountry.countries.get(alpha_2=phone_country(phone))\n    >>> c.name\n    'brazil'\n    >>> c.official_name\n    'federative republic of brazil'\n\n\nthis package makes no attempt to understand the various input options for\nphone numbers, and assumes an international phone number. if you deal in fuzzy\ninputs, try `phonenumbers`_.\n\n.. code:: pycon\n\n\n    >>> from phone_iso3166.country import phone_country\n    >>> import phonenumbers\n    >>> import pycountry\n    >>> local = phonenumbers.parse(\"020 8366 1177\", \"gb\")\n    >>> phonenumbers.format_number(local, phonenumbers.phonenumberformat.e164)\n    '+442083661177'\n    >>> cc = phone_country(str(local.country_code)+str(local.national_number))\n    >>> uk = pycountry.countries.get(alpha_2=cc)\n    >>> uk.name\n    'united kingdom'\n    >>> uk.official_name\n    'united kingdom of great britain and northern ireland'\n    >>> wh = phonenumbers.parse(\"0012024561111\", \"gb\")\n    >>> cc_wh = phone_country(str(wh.country_code)+str(wh.national_number))\n    >>> cc_wh\n    'us'\n\n\n.. |build-status| image:: https://travis-ci.org/onlinecity/phone-iso3166.svg?branch=master\n   :target: https://travis-ci.org/onlinecity/phone-iso3166\n.. |coverage-status| image:: https://img.shields.io/coveralls/onlinecity/phone-iso3166.svg\n   :target: https://coveralls.io/r/onlinecity/phone-iso3166\n.. _pycountry: https://pypi.python.org/pypi/pycountry\n.. _phonenumbers: https://pypi.python.org/pypi/phonenumberslite\n\n\n",
  "docs_url": null,
  "keywords": "phone country mobile iso3166 e164 e212 countrycode phonenumber",
  "license": "mit",
  "name": "phone-iso3166",
  "package_url": "https://pypi.org/project/phone-iso3166/",
  "project_url": "https://pypi.org/project/phone-iso3166/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/phone-iso3166/0.4.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "phonenumber to country (iso 3166-1) mapping",
  "version": "0.4.1",
  "releases": [],
  "developers": [
    "devs@oc.dk",
    "oc_dev_team"
  ],
  "kwds": "phone_country country_code countrycode phone_iso3166 _phonenumbers",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_phone_iso3166",
  "homepage": "",
  "release_count": 16,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: posix",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries"
  ],
  "description": "\n# `attributedict` [![pypi version](https://badge.fury.io/py/attributedict.svg)](https://badge.fury.io/py/attributedict) [![build status](https://travis-ci.com/grimen/python-attributedict.svg?branch=master)](https://travis-ci.com/grimen/python-attributedict) [![coverage status](https://codecov.io/gh/grimen/python-attributedict/branch/master/graph/badge.svg)](https://codecov.io/gh/grimen/python-attributedict)\n\n*a dictionary object with attributes support.*\n\n\n## install\n\ninstall using **pip**:\n\n```sh\n$ pip install attributedict\n```\n\n\n## use\n\nexample:\n\n```python\nfrom attributedict.collections import attributedict\n\ndata = attributedict({'foo': {'bar': [1, 2, 3]}})\n\ndata.foo # => `{'bar': [1, 2, 3]}}`\ndata.foo.bar # => `[1, 2, 3]`\n\ndata.foo = {'baz': true}\ndata.foo = # => `{'baz': true}`\n\ndel data.foo.baz\n\n# and/or...\n\ndata = attributedict({'foo': {'bar': [1, 2, 3]}})\n\ndata['foo'] # => `{'bar': [1, 2, 3]}}`\ndata['foo']['bar'] # => `[1, 2, 3]`\n\ndata['foo'] = {'baz': true}\ndata['foo'] = # => `{'baz': true}`\n\ndel data['foo']['baz']\n\n# instance of `dict`...\n\nisinstance(data, dict) # => true\nisinstance(data, attributedict.collections.attributedict) # => true\n\nisinstance(data.__dict__, dict) # => true\nisinstance(data.__dict__, attributedict.collections.attributedict) # => false\n\n# no need for custom encoders...\n\ndata = attributedict({'foo': {'bar': [1, 2, 3]}})\n\njson.dumps(data) # => `{\"foo\": {\"bar\": [1, 2, 3]}}`\njson.dumps(data.__dict__) # => `{\"foo\": {\"bar\": [1, 2, 3]}}`\n\n# etc.\n\n```\n\n\n## test\n\nclone down source code and run:\n\n```sh\n$ make install\n$ make test\n```\n\n\n## license\n\nreleased under the mit license.\n\n\n",
  "docs_url": null,
  "keywords": "object,dict,dictionary,collection,attributes,attribute,attr,properties,property,props,openstruct,struct,hashmap",
  "license": "mit",
  "name": "attributedict",
  "package_url": "https://pypi.org/project/attributedict/",
  "project_url": "https://pypi.org/project/attributedict/",
  "project_urls": {
    "Download": "https://github.com/grimen/python-attributedict",
    "Homepage": "https://github.com/grimen/python-attributedict",
    "bugs": "https://github.com/grimen/python-attributedict/issues",
    "repository": "https://github.com/grimen/python-attributedict"
  },
  "release_url": "https://pypi.org/project/attributedict/0.3.0/",
  "requires_dist": [
    "rootpath (>=0.1.0)",
    "inspecta (>=0.1.0)",
    "colour-runner (>=0.0.5)",
    "deepdiff (>=3.3.0)",
    "tox (>=3.0.0)",
    "coverage (>=4.5.2)",
    "codecov (>=2.0.15)"
  ],
  "requires_python": "",
  "summary": "a dictionary object with attributes support.",
  "version": "0.3.0",
  "releases": [],
  "developers": [
    "grimen@gmail.com",
    "jonas_grimfelt"
  ],
  "kwds": "__dict__ dict attributes attribute attributedict",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_attributedict",
  "homepage": "https://github.com/grimen/python-attributedict",
  "release_count": 11,
  "dependency_ids": [
    "pypi_codecov",
    "pypi_colour_runner",
    "pypi_coverage",
    "pypi_deepdiff",
    "pypi_inspecta",
    "pypi_rootpath",
    "pypi_tox"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: application frameworks",
    "topic :: software development :: user interfaces"
  ],
  "description": "[![pypi](https://img.shields.io/pypi/v/inquirer.svg)][pypi status]\n[![status](https://img.shields.io/pypi/status/inquirer.svg)][pypi status]\n[![python version](https://img.shields.io/pypi/pyversions/inquirer)][pypi status]\n[![license](https://img.shields.io/pypi/l/inquirer)][license]\n[![black](https://img.shields.io/badge/code%20style-black-000000.svg)][black]\n<br>\n[![read the documentation at https://python-inquirer.readthedocs.io/](https://img.shields.io/readthedocs/python-inquirer/latest.svg?label=read%20the%20docs)][read the docs]\n[![tests](https://github.com/magmax/python-inquirer/workflows/tests/badge.svg)][tests]\n[![codecov](https://codecov.io/gh/magmax/python-inquirer/branch/main/graph/badge.svg)][codecov]\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logocolor=white)][pre-commit]\n\n[pypi status]: https://pypi.org/project/inquirer/\n[read the docs]: https://python-inquirer.readthedocs.io/\n[tests]: https://github.com/magmax/python-inquirer/actions?workflow=tests\n[codecov]: https://app.codecov.io/gh/magmax/python-inquirer\n[pre-commit]: https://github.com/pre-commit/pre-commit\n[black]: https://github.com/psf/black\n\n# python-inquirer\n\ncollection of common interactive command line user interfaces, based on [inquirer.js].\n\n## goal and philosophy\n\nborn as a [inquirer.js] clone, it shares part of the goals and philosophy.\n\nso, **inquirer** should ease the process of asking end user **questions**, **parsing**, **validating** answers, managing **hierarchical prompts** and providing **error feedback**.\n\nyou can [download the python-inquirer code from github] or [download the wheel from pypi].\n\n### platforms support\n\npython-inquirer supports mainly unix-based platforms (eq. mac os, linux, etc.). windows has experimental support, please let us know if there are any problems!\n\n## installation\n\n```sh\npip install inquirer\n```\n\n## documentation\n\ndocumentation has been moved to [python-inquirer.readthedocs.io](https://python-inquirer.readthedocs.io/).\n\nbut here you have a couple of usage examples:\n\n### text\n\n```python\nimport re\n\nimport inquirer\nquestions = [\n  inquirer.text('name', message=\"what's your name\"),\n  inquirer.text('surname', message=\"what's your surname\"),\n  inquirer.text('phone', message=\"what's your phone number\",\n                validate=lambda _, x: re.match('\\+?\\d[\\d ]+\\d', x),\n                )\n]\nanswers = inquirer.prompt(questions)\n```\n\n### editor\n\nlike a text question, but used for larger answers. it opens external text editor which is used to collect the answer.\n\nthe environment variables `$visual` and `$editor`, can be used to specify which editor should be used. if not present inquirer fallbacks to `vim -> emacs -> nano` in this order based on availability in the system.\n\nexternal editor handling is done using great library [python-editor](https://github.com/fmoo/python-editor).\n\nexample:\n\n```python\nimport inquirer\nquestions = [\n  inquirer.editor('long_text', message=\"provide long text\")\n]\nanswers = inquirer.prompt(questions)\n```\n\n### list\n\nshows a list of choices, and allows the selection of one of them.\n\nexample:\n\n```python\nimport inquirer\nquestions = [\n  inquirer.list('size',\n                message=\"what size do you need?\",\n                choices=['jumbo', 'large', 'standard', 'medium', 'small', 'micro'],\n            ),\n]\nanswers = inquirer.prompt(questions)\n```\n\nlist questions can take one extra argument `carousel=false`. if set to true, the answers will rotate (back to first when pressing down on last choice, and down to last choice when pressing up on first choice)\n\n### checkbox\n\nshows a list of choices, with multiple selection.\n\nexample:\n\n```python\nimport inquirer\nquestions = [\n  inquirer.checkbox('interests',\n                    message=\"what are you interested in?\",\n                    choices=['computers', 'books', 'science', 'nature', 'fantasy', 'history'],\n                    ),\n]\nanswers = inquirer.prompt(questions)\n```\n\ncheckbox questions can take extra argument `carousel=false`. if set to true, the answers will rotate (back to first when pressing down on last choice, and down to last choice when pressing up on first choice)\n\nanother argument that can be used is `locked=<list>`. the given choices in the locked argument cannot be removed. this is useful if you want to make clear that a specific option out of the choices must be chosen.\n\n### path\n\nlike text question, but with builtin validations for working with paths.\n\nexample:\n\n```python\nimport inquirer\nquestions = [\n  inquirer.path('log_file',\n                 message=\"where logs should be located?\",\n                 path_type=inquirer.path.directory,\n                ),\n]\nanswers = inquirer.prompt(questions)\n```\n\n## contributing\n\ncontributions are very welcome.\nto learn more, see the [contributor guide].\n\n## license\n\ncopyright (c) 2014-2023 miguel \u00e1ngel garc\u00eda ([@magmax_en]), based on [inquirer.js], by simon boudrias ([@vaxilart])\n\ndistributed under the terms of the [mit license][license].\n\n<!-- github-only -->\n\n[license]: https://github.com/magmax/python-inquirer/blob/main/license\n[@magmax_en]: https://twitter.com/magmax_en\n[@vaxilart]: https://twitter.com/vaxilart\n[contributor guide]: contributing.md\n[download the python-inquirer code from github]: https://github.com/magmax/python-inquirer\n[download the wheel from pypi]: https://pypi.python.org/pypi/inquirer\n[examples/]: https://github.com/magmax/python-inquirer/tree/master/examples\n[inquirer.js]: https://github.com/sboudrias/inquirer.js\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "inquirer",
  "package_url": "https://pypi.org/project/inquirer/",
  "project_url": "https://pypi.org/project/inquirer/",
  "project_urls": {
    "Documentation": "https://magmax.org/python-inquirer",
    "Homepage": "https://github.com/magmax/python-inquirer",
    "Repository": "https://github.com/magmax/python-inquirer"
  },
  "release_url": "https://pypi.org/project/inquirer/3.1.4/",
  "requires_dist": [
    "blessed (>=1.19.0)",
    "python-editor (>=1.0.4)",
    "readchar (>=3.0.6)"
  ],
  "requires_python": ">=3.8",
  "summary": "collection of common interactive command line user interfaces, based on inquirer.js",
  "version": "3.1.4",
  "releases": [],
  "developers": [
    "miguelangel.garcia@gmail.com"
  ],
  "kwds": "pypi shields pyversions pip python",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_inquirer",
  "homepage": "https://github.com/magmax/python-inquirer",
  "release_count": 44,
  "dependency_ids": [
    "pypi_blessed",
    "pypi_python_editor",
    "pypi_readchar"
  ]
}
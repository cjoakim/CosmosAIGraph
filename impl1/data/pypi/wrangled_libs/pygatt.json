{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3"
  ],
  "description": "pygatt - python module for bluetooth le generic attribute profile (gatt).\n=========================================================================\n\nthis module allows reading and writing to gatt descriptors on devices\nsuch as fitness trackers, sensors, and anything implementing standard\ngatt descriptor behavior.\n\npygatt provides a pythonic api by wrapping two different backends:\n\n-  bluez (requires linux), using the ``gatttool`` command-line utility.\n-  bluegiga's bgapi, compatible with usb adapters like the bled112.\n\nmotivation\n----------\n\ndespite the popularity of ble, we have yet to find a good programming\ninterface for it on desktop computers. since most peripherals are\ndesigned to work with smartphones, this space is neglected. one\ninteractive interface, bluez's ``gatttool``, is functional but difficult\nto use programmatically. bluez itself obviously works, but the interface\nleaves something to be desired and only works in linux.\n\nrequirements\n------------\n\n-  python 2.7.5 or greater, or python 3.5 or greater\n\n   -  python 2.7.3's ``struct`` library has a bug that will break pygatt - 2.7.5\n         or greater is recommended.\n\n-  bluez 5.18 or greater (with gatttool) - required for the gatttool\n   backend only.\n\n   -  tested on 5.18, 5.21, 5.35 and 5.43\n\n-  gatttoolbackend requires linux (i.e. not windows compatible)\n\ninstallation\n------------\n\ninstall ``pygatt`` with pip from pypi:\n\n::\n\n    $ pip install pygatt\n\nthe bluez backend is not supported by default as it requires\n``pexpect``, which can only be installed in a unix-based environment. if\nyou wish to use that backend, install the optional dependencies with:\n\n::\n\n    $ pip install \"pygatt[gatttool]\"\n\ninstall the latest development version of ``pygatt`` with pip:\n\n::\n\n    $ pip install git+https://github.com/peplin/pygatt\n\ndocumentation\n-------------\n\nthe documentation for pygatt consists of:\n\n- this readme\n- the code in the ``samples`` directory\n- the python docstrings in the code itself.\n\nthe ``bledevice`` and ``blebackend`` base classes are the primary interfaces for\nusers of the library.\n\nexample use\n-----------\n\nthe primary api for users of this library is provided by\n``pygatt.blebackend`` and ``pygatt.bledevice``. after initializing an\ninstance of the preferred backend (available implementations are found\nin ``pygatt.backends``, use the ``blebackend.connect`` method to connect\nto a device and get an instance of ``bledevice.``\n\n.. code:: python\n\n    import pygatt\n\n    # the bgapi backend will attempt to auto-discover the serial device name of the\n    # attached bgapi-compatible usb adapter.\n    adapter = pygatt.bgapibackend()\n\n    try:\n        adapter.start()\n        device = adapter.connect('01:23:45:67:89:ab')\n        value = device.char_read(\"a1e8f5b1-696b-4e4c-87c6-69dfe0b0093b\")\n    finally:\n        adapter.stop()\n\nnote that not all backends support connecting to more than 1 device at\nat time, so calling ``blebackend.connect`` again may terminate existing\nconnections.\n\nhere's the same example using the gatttool backend. it's identical\nexcept for the initialization of the backend:\n\n.. code:: python\n\n    import pygatt\n\n    adapter = pygatt.gatttoolbackend()\n\n    try:\n        adapter.start()\n        device = adapter.connect('01:23:45:67:89:ab')\n        value = device.char_read(\"a1e8f5b1-696b-4e4c-87c6-69dfe0b0093b\")\n    finally:\n        adapter.stop()\n\nnotifications example\n---------------------\n\nthis example uses the gatttool backend to connect to a device with a specific\nmac address, subscribes for notifications on a characteristic, and prints the\ndata returned in each notification.\n\n.. code:: python\n\n    import pygatt\n    from binascii import hexlify\n\n    adapter = pygatt.gatttoolbackend()\n\n    def handle_data(handle, value):\n        \"\"\"\n        handle -- integer, characteristic read handle the data was received on\n        value -- bytearray, the data returned in the notification\n        \"\"\"\n        print(\"received data: %s\" % hexlify(value))\n\n    try:\n        adapter.start()\n        device = adapter.connect('01:23:45:67:89:ab')\n\n        device.subscribe(\"a1e8f5b1-696b-4e4c-87c6-69dfe0b0093b\",\n                         callback=handle_data)\n    finally:\n        adapter.stop()\n\ndebugging\n---------\n\nwhile debugging software using pygatt, it is often useful to see what's\nhappening inside the library. you can enable debugging logging and have\nit printed to your terminal with this code:\n\n::\n\n    import pygatt\n    import logging\n\n    logging.basicconfig()\n    logging.getlogger('pygatt').setlevel(logging.debug)\n\ncan't find bgapi device in windows\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nyou may need to explicitly specify the com port of your bgapi-compatible\ndevice in windows, e.g.:\n\n::\n\n    adapter = pygatt.bgapibackend(serial_port='com9')\n\nif you provide the com port name, but still get an error such as\n``windowserror(2, 'the system cannot find the file specified.')``, try\nchanging the com port of the device to a value under 10, e.g. ``com9``.\n\nauthors\n-------\n\n- jeff rowberg @jrowberg https://github.com/jrowberg/bglib\n- greg albrecht @ampledata https://github.com/ampledata/pygatt\n- christopher peplin @peplin https://github.com/peplin/pygatt\n- morten kjaergaard @mkjaergaard https://github.com/mkjaergaard/pygatt\n- michael saunby @msaunby https://github.com/msaunby/ble-sensor-pi\n- steven sloboda https://github.com/sloboste\n- ilya sukhanov @ilyasukhanov\n- @dcliftreaves\n- jonathan dan\n- ilann adjedj\n- ralph hempel\n- rene jacobsen\n- marcus georgi\n- alexandre barachant\n- michel rivas hernandez\n- jean regisser\n- david martin\n- pieter hooimeijer\n- thomas li fredriksen\n- markus proeller\n- lachtanek\n- andrea merello\n- richard mitchell\n- daniel santos\n- andrew connell\n- jakub hrabec\n- john schoenberger\n- georgi boiko\n- jose phillips\n\nreleasing to pypi\n-----------------\n\nfor the maintainers of the project, when you want to make a release:\n\n-  merge all of the changes into ``master``.\n-  update the version in ``setup.py``.\n-  update the ``changelog.mkd``\n-  tag the commit and push to github (will need to push to a separate\n   branch of pr first since ``master`` is a protected branch).\n-  travis ci will take care of the rest - it will build and deploy\n   tagged commits to pypi automatically.\n\nlicense\n-------\n\ncopyright 2015 stratos inc. and orion labs\n\napache license, version 2.0 and mit license. see license.\n\n\n.. :changelog:\n\nrelease history\n================\n\nv4.0.5\n------\n\nsame as 4.0.4. re-released to fix pypi upload.\n\nv4.0.4\n------\n\n* improvement: remove bluetooth specification pdfs, refer to bluetooth.com to\n  avoid copyright issues.\n* improvement: add wait_for_response option to subscription methods\n\nv4.0.3\n------\n\n* fix: regression with receiving indications with gatttool backend\n* fix: regression with subscribing to characteristics with gatttool (need to use\n  writes, not commands) (#234)\n* improvement: don't require sudo for removing bonding (#234)\n\nv4.0.1\n------\n\n* improvement: wait longer for characteristics discovery with bgapi backend (#201)\n* fix: protect against invalid bgapi packets\n* fix: fix parsing fields from bgapi connection status\n* fix: robust to non-utf8 characters in hcitool scan results\n* fix: log correct connection flags from bgapi response\n\nv4.0.0\n------\n\n* feature: add ``char_read_long`` for reading characteristics longer than a\n  single packet (#206, #177)\n* feature: add command to change mtu (gatttool only) (#182)\n* feature: allow registering callbacks for device discovery events. (#176)\n* feature: support fetching ble device mac address (#150)\n* improvement: add better serial port error handling for bgapi. (#162)\n* improvement: expand and allow overriding pexpect search buffer for gatttool\n  output to support devices with many characteristics without negatively\n  impacting performance (#209)\n* improvement: wait before re-opening bgapi serial port to improve detection on\n  windows. (#162)\n* improvement: add support for python 3.7\n* fix: use att write (not command) by default for char_write\n* fix: wait longer for att write according to bluegiga spec\n* fix: fix bgapi device detection (#154)\n* fix: stop leaking file descriptors when erasing ble bonds with gatttool\n  backend (#188)\n* fix: typos (#173)\n* drop official support for python 3.4, 3.5 and 3.6.\n\nv3.2.1\n------\n\n- improvement: officially support python 3.6.\n- improvement: permit use of non-standard characteristics in reserved range (#140)\n\nv3.2.0\n------\n\n- fix: reliably auto-reconnect after restarting bgapi device. fixes a bug in\n  first attempt at auto-reconnection, only worked in some environments. (#144)\n- fix: remove spurious \"no handler for logger\" warnings (#143)\n- fix: use enum-compat instead of enum34, to fix installation in python 3.4+\n- feature: limit search window size for gatttool backend, to avoid high cpu\n  usage for long running connections. (#123)\n- feature: add support for write commands to bgapibackend (#115)\n\nv3.1.1\n------\n\n- improvement: convert documentation to rst for better pypi integration.\n\nv3.1.0\n------\n\n-  fix: support platforms without ``termios`` (windows)\n-  feature: add ``char_read_handle`` to gatttool backend.\n-  improvement: warn if ``hcitool`` requires a sudo authentication.\n-  improvement: allow bgapi device more time to reboot for more reliable\n   discovery.\n-  improvement: interpret \"invalid file descriptor\" as a disconnect\n   event.\n-  fix: correctly handle service class uuids that aren't 16 bytes.\n-  improvement: support ble devices with any utf8 character.\n-  improvement: make gatttol prompt timeout configurable.\n-  improvement: gracefully stop ``lescan`` to avoid leaving the adapter\n   in a bad state.\n-  improvement: allow custom timeout for discovery on gatttool backend.\n-  fix: make sure responses to char reads on bgapi backend are from the\n   requested handle.\n-  improvement: raise and exception if trying to instantiate the\n   gatttool backend in windows.\n-  improvement: if no bgapi device attached, abort immediately.\n-  fix: use user's configured hci device for connection and scanning in\n   gatttool backend.\n\nv3.0.0\n------\n\n-  [api change] the bgapibackend.connect method now takes the same\n   ``address_type`` argument as the gatttool backend [bgapi].\n-  [api change] the ``address_type`` argument on both backends now\n   requires a value from a new enum, ``pygatt.bleaddresstype``, instead\n   of a string.\n-  made python 3 support a priority for both gatttool and bgapi\n   backends.\n-  improve reliability of bgapi backend by re-setting device for each\n   connection.\n\nv2.1.0\n------\n\n-  added all standard gatt characteristics. [bgapi]\n-  move gatttool monitor to a background thread for increased\n   performance. [gatttool]\n\nv2.0.1\n------\n\n-  feature: allow unsubscribing from notifications.\n-  improvement: allow more time to discover characteristics. [gatttool]\n-  improvement: allow using gatttol backend without root. [gatttool]\n-  improvement: standardize type of uuid so comparison always works (str\n   vs unicode)\n-  fix: fix packaging so the version on pypi can be installed.\n-  fix: fix python 3 compatibility.\n\nthanks to ilya sukhanov and alexey roslyakov for the changes in this\nrelease!\n\nv2.0.0\n------\n\n-  new api with support for multiple ble adapters.",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2.0 and mit",
  "name": "pygatt",
  "package_url": "https://pypi.org/project/pygatt/",
  "project_url": "https://pypi.org/project/pygatt/",
  "project_urls": {
    "Homepage": "https://github.com/peplin/pygatt"
  },
  "release_url": "https://pypi.org/project/pygatt/4.0.5/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python bluetooth le (low energy) and gatt library",
  "version": "4.0.5",
  "releases": [],
  "developers": [
    "github@rhubarbtech.com"
  ],
  "kwds": "bluetooth python gatttoolbackend smartphones pygatt",
  "license_kwds": "apache 2.0 and mit",
  "libtype": "pypi",
  "id": "pypi_pygatt",
  "homepage": "https://github.com/peplin/pygatt",
  "release_count": 17,
  "dependency_ids": []
}
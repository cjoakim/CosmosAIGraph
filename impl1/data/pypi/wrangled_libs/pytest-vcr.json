{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: testing"
  ],
  "description": "##########\npytest-vcr\n##########\n\n|travis| |appveyor| |readthedocs|\n\n.. |travis| image:: https://travis-ci.org/ktosiek/pytest-vcr.svg?branch=master\n    :target: https://travis-ci.org/ktosiek/pytest-vcr\n    :alt: see build status on travis ci\n.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/github/ktosiek/pytest-vcr?branch=master\n    :target: https://ci.appveyor.com/project/ktosiek/pytest-vcr/branch/master\n    :alt: see build status on appveyor\n.. |readthedocs| image:: https://readthedocs.org/projects/pytest-vcr/badge/?version=latest\n    :target: http://pytest-vcr.readthedocs.io/en/latest/?badge=latest\n    :alt: see the documentation\n\n\npy.test plugin for managing `vcr.py <https://vcrpy.readthedocs.io/>`_ cassettes.\n\n\nquick start\n===========\n\ninstall the plugin:\n\n.. code-block:: sh\n\n    pip install pytest-vcr\n\n\nannotate your tests:\n\n.. code-block:: python\n\n    @pytest.mark.vcr()\n    def test_iana():\n        response = urlopen('http://www.iana.org/domains/reserved').read()\n        assert b'example domains' in response\n\nand that's it!\na new file ``cassettes/test_iana.yaml`` will be created next to your test file on the first run.\nthis file should be committed to a vcs.\n\nfor more examples and configuration options see the `documention on readthedocs <http://pytest-vcr.readthedocs.io/en/latest/>`_.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pytest-vcr",
  "package_url": "https://pypi.org/project/pytest-vcr/",
  "project_url": "https://pypi.org/project/pytest-vcr/",
  "project_urls": {
    "Homepage": "https://github.com/ktosiek/pytest-vcr"
  },
  "release_url": "https://pypi.org/project/pytest-vcr/1.0.2/",
  "requires_dist": [
    "pytest (>=3.6.0)",
    "vcrpy"
  ],
  "requires_python": "",
  "summary": "plugin for managing vcr.py cassettes",
  "version": "1.0.2",
  "releases": [],
  "developers": [
    "tomasz.kontusz@gmail.com",
    "tomasz_kontusz"
  ],
  "kwds": "pytest travis vcr vcs github",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_vcr",
  "homepage": "https://github.com/ktosiek/pytest-vcr",
  "release_count": 7,
  "dependency_ids": [
    "pypi_pytest",
    "pypi_vcrpy"
  ]
}
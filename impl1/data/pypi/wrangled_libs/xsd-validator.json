{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# xsd_validator\n![xsd_validator](https://github.com/innodatalabs/xsd-validator/actions/workflows/test.yaml/badge.svg)\n![pypi version](https://badge.fury.io/py/xsd-validator.svg)\n\nvalidates an xml file against xsds, supports xsd version 1.1. requires java runtime (version 8 or better).\n\n## api\n\nassert that `my.xml` is valid according to schema `schema.xsd`:\n```python\nfrom xsd_validator import xsdvalidator\n\nvalidator = xsdvalidator('schema.xsd')\nvalidator.assert_valid('my.xml')\n```\n\na more complex schema may be split between several files, for example: `schema.xsd`, `schema-aux.xsd` and `xml.xsd`.\njust pass them all to the `xsdvalidator`:\n\n```python\nfrom xsd_validator import xsdvalidator\n\nvalidator = xsdvalidator('schema.xsd', 'schema-aux.xsd', 'xml.xsd')\nvalidator.assert_valid('my.xml')\n```\n\nsometimes you need to get all problems discovered. you can loop through the errors like this:\n```python\nfrom xsd_validator import xsdvalidator\n\nvalidator = xsdvalidator('schema.xsd', 'schema-aux.xsd', 'xml.xsd')\nfor err in validator('my.xml'):\n    print(err)\n```\n\n## cli\n\nyou can use `xsd_validator` module as an executable, like this:\n```bash\npython -m xsd_validator\n```\n\nfor example:\n```bash\npython -m xsd_validator schema.xsd my.xml\n```\n\nhelp:\n```bash\npython -m xsd_validator -husage: xsd_validator [-h] xsd [xsd ...] xml\n\nvalidate an xml file againsd xsd schema (supports xsd version 1.1)\n\npositional arguments:\n  xsd         xsd files\n  xml         xml file to check\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "xsd-validator",
  "package_url": "https://pypi.org/project/xsd-validator/",
  "project_url": "https://pypi.org/project/xsd-validator/",
  "project_urls": {
    "Homepage": "https://github.com/innodatalabs/xsd-validator"
  },
  "release_url": "https://pypi.org/project/xsd-validator/0.0.3/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "validates xml file against xsd, supporting xsd versionj 1.1",
  "version": "0.0.3",
  "releases": [],
  "developers": [
    "mike_kroutikov",
    "mkroutikov@innodata.com"
  ],
  "kwds": "xsd_validator xsdvalidator xml xsd assert_valid",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_xsd_validator",
  "homepage": "https://github.com/innodatalabs/xsd-validator",
  "release_count": 3,
  "dependency_ids": []
}
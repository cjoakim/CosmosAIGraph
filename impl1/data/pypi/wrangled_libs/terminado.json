{
  "classifiers": [
    "environment :: web environment",
    "license :: osi approved :: bsd license",
    "programming language :: python :: 3",
    "topic :: terminals :: terminal emulators/x terminals"
  ],
  "description": "# terminado\n\n[![build status](https://github.com/jupyter/terminado/actions/workflows/test.yml/badge.svg?query=branch%3amain++)](https://github.com/jupyter/terminado/actions/workflows/test.yml/badge.svg?query=branch%3amain++)\n[![documentation status](https://readthedocs.org/projects/terminado/badge/?version=latest)](http://terminado.readthedocs.io/en/latest/?badge=latest)\n\nthis is a [tornado](http://tornadoweb.org/) websocket backend for the\n[xterm.js](https://xtermjs.org/) javascript terminal emulator library.\n\nit evolved out of [pyxterm](https://github.com/mitotic/pyxterm), which\nwas part of [graphterm](https://github.com/mitotic/graphterm) (as\nlineterm.py), v0.57.0 (2014-07-18), and ultimately derived from the\npublic-domain [ajaxterm](http://antony.lesuisse.org/software/ajaxterm/)\ncode, v0.11 (2008-11-13) (also on github as part of\n[qweb](https://github.com/antonylesuisse/qweb)).\n\nmodules:\n\n- `terminado.management`: controls launching virtual terminals,\n  connecting them to tornado's event loop, and closing them down.\n- `terminado.websocket`: provides a websocket handler for\n  communicating with a terminal.\n- `terminado.uimodule`: provides a `terminal` tornado [ui\n  module](http://www.tornadoweb.org/en/stable/guide/templates.html#ui-modules).\n\njs:\n\n- `terminado/_static/terminado.js`: a lightweight wrapper to set up a\n  term.js terminal with a websocket.\n\nlocal installation:\n\n> $ pip install -e .\\[test\\]\n\nusage example:\n\n```python\nimport os.path\nimport tornado.web\nimport tornado.ioloop\n\n# this demo requires tornado_xstatic and xstatic-term.js\nimport tornado_xstatic\n\nimport terminado\n\nstatic_dir = os.path.join(os.path.dirname(terminado.__file__), \"_static\")\n\n\nclass terminalpagehandler(tornado.web.requesthandler):\n    def get(self):\n        return self.render(\n            \"termpage.html\",\n            static=self.static_url,\n            xstatic=self.application.settings[\"xstatic_url\"],\n            ws_url_path=\"/websocket\",\n        )\n\n\nif __name__ == \"__main__\":\n    term_manager = terminado.singletermmanager(shell_command=[\"bash\"])\n    handlers = [\n        (r\"/websocket\", terminado.termsocket, {\"term_manager\": term_manager}),\n        (r\"/\", terminalpagehandler),\n        (\n            r\"/xstatic/(.*)\",\n            tornado_xstatic.xstaticfilehandler,\n            {\"allowed_modules\": [\"termjs\"]},\n        ),\n    ]\n    app = tornado.web.application(\n        handlers,\n        static_path=static_dir,\n        xstatic_url=tornado_xstatic.url_maker(\"/xstatic/\"),\n    )\n    # serve at http://localhost:8765/ n.b. leaving out 'localhost' here will\n    # work, but it will listen on the public network interface as well.\n    # given what terminado does, that would be rather a security hole.\n    app.listen(8765, \"localhost\")\n    try:\n        tornado.ioloop.ioloop.instance().start()\n    finally:\n        term_manager.shutdown()\n```\n\nsee the [demos\ndirectory](https://github.com/takluyver/terminado/tree/master/demos) for\nmore examples. this is a simplified version of the `single.py` demo.\n\nrun the unit tests with:\n\n> $ pytest\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd 2-clause license  - copyright (c) 2014-, jupyter development team - copyright (c) 2014, ramalingam saravanan <sarava@sarava.net>  all rights reserved.  redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1. redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  2. redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  this software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. in no event shall the copyright holder or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.",
  "name": "terminado",
  "package_url": "https://pypi.org/project/terminado/",
  "project_url": "https://pypi.org/project/terminado/",
  "project_urls": {
    "Homepage": "https://github.com/jupyter/terminado"
  },
  "release_url": "https://pypi.org/project/terminado/0.18.0/",
  "requires_dist": [
    "ptyprocess; os_name != 'nt'",
    "pywinpty>=1.1.0; os_name == 'nt'",
    "tornado>=6.1.0",
    "myst-parser; extra == 'docs'",
    "pydata-sphinx-theme; extra == 'docs'",
    "sphinx; extra == 'docs'",
    "pre-commit; extra == 'test'",
    "pytest-timeout; extra == 'test'",
    "pytest>=7.0; extra == 'test'",
    "mypy~=1.6; extra == 'typing'",
    "traitlets>=5.11.1; extra == 'typing'"
  ],
  "requires_python": ">=3.8",
  "summary": "tornado websocket backend for the xterm.js javascript terminal emulator library.",
  "version": "0.18.0",
  "releases": [],
  "developers": [
    "jupyter@googlegroups.com"
  ],
  "kwds": "termjs terminado term_manager tornado_xstatic xtermjs",
  "license_kwds": "liability copyright liable negligence damages",
  "libtype": "pypi",
  "id": "pypi_terminado",
  "homepage": "",
  "release_count": 35,
  "dependency_ids": [
    "pypi_mypy",
    "pypi_myst_parser",
    "pypi_pre_commit",
    "pypi_ptyprocess",
    "pypi_pydata_sphinx_theme",
    "pypi_pytest",
    "pypi_pytest_timeout",
    "pypi_pywinpty",
    "pypi_sphinx",
    "pypi_tornado",
    "pypi_traitlets"
  ]
}
{
  "classifiers": [
    "environment :: console",
    "framework :: flake8",
    "intended audience :: developers",
    "license :: osi approved :: gnu lesser general public license v3 or later (lgplv3+)",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: quality assurance"
  ],
  "description": "# [flake8-literal](https://github.com/plinss/flake8-literal)\n\nflake8 plugin to validate string literals.\n\nthis plugin is used to enforce consistent styling of string literals,\nit recognizes inline literals, \nmultline literals,\nand docstrings.\n\n### quote usage\n\nyou can choose between single or double quotes for each type of string,\nand the plugin will enforce consistent usage.\n\nif the `avoid-escape` feature is on (default),\nit will enforce using the opposite quote type when doing so\nwill avoid the use of escaped quotes.\n\nit also recognizes continuation strings \nand will enforce a consistent quote style for the entire set \nwhen possible.\n\n### raw strings\n\nthis plugin checks the usage of raw strings,\npreventing unnecessary use of raw strings, \nand requiring raw strings when doing so will avoid an escaped backslash.\n\nbecause raw strings are commonly used in regular expression patterns,\notherwise unnecessary raw strings are allowed by default \nwhen used as a regular expression pattern.\nthere is an option to avoid raw strings in regular expression patterns,\nor to require them regardless of the presence of escapes.\nnote that this feature only works when using string literals directly\nin calls to re functions,\nand the functions must be called in the manner that they are imported. \ne.g.\n```\nfrom re import compile as regex_compile\nx = regex_compile(r'this does not need to be raw')\n```\nwould be acceptable, but\n```\nimport re\npattern = r'this does not need to be raw'\nx = re.compile(pattern)\n```\nor\n```\nimport re\nregex_compile = re.compile\ny = regex_compile(r'this does not need to be raw')\n```\nwould not.\n\n### planned features\n\n* enforcing multiline string usage\n* string concatenation \n* format string usage\n\n\n## installation\n\nstandard python package installation:\n\n    pip install flake8-literal\n\n\n## options\n\n`literal-inline-quotes`\n: quote to use for inline string literals, \nchoices: `single`, `double` (default: `single`)\n\n`literal-multiline-quotes`\n: quote to use for multiline string literals, \nchoices: `single`, `double` (default: `single`)\n\n`literal-docstring-quotes`\n: quote to use for docstrings, \nchoices: `single`, `double` (default: `double`)\n\n`literal-avoid-escape`\n: avoid escapes in inline string literals when possible (enabled by default)\n\n`literal-no-avoid-escape`\n: disable escape avoidance in inline string literals\n\n`literal-re-pattern-raw`\n: control usage of raw string literals in regular expression patterns,\nchoices `avoid`, `allow`, `always` (default: `allow`)\n\n`literal-include-name`\n: include plugin name in messages\n\n`literal-no-include-name`\n: do not include plugin name in messages (default setting)\n\nall options may be specified on the command line with a `--` prefix,\nor can be placed in your flake8 config file.\n\n\n## error codes\n\n| code   | message |\n|--------|---------|\n| lit001 | use single quotes for string\n| lit002 | use double quotes for string\n| lit003 | use single quotes for multiline string\n| lit004 | use double quotes for multiline string\n| lit005 | use single quotes for docstring\n| lit006 | use double quotes for docstring\n| lit007 | use triple single quotes for docstring\n| lit008 | use triple double quotes for docstring\n| lit011 | use double quotes for string to avoid escaped single quote\n| lit012 | use single quotes for string to avoid escaped double quote\n| lit013 | escaped single quote is not necessary\n| lit014 | escaped double quote is not necessary\n| lit015 | use double quotes for continuation strings to match\n| lit016 | use single quotes for continuation strings to match\n| lit101 | remove raw prefix when not using escapes\n| lit102 | use raw prefix to avoid escaped slash\n| lit103 | use raw prefix for re pattern\n\n\n## examples\n\n```\nx = \"value\"  <-- lit001\nx = 'aren\\'t escapes great?'  <-- lit011\nx = \"can\\'t stop escaping\"  <-- lit013\nx = ('one'  <-- lit015\n     \"o'clock\")\nx = r'no need to be raw'  <-- lit101\nx = '\\\\windows\\\\path'  <-- lit102\nx = re.compile(r'pattern')  <-- (no error when literal-re-pattern-raw set to `allow` or `always`)\nx = re.compile('pattern')  <-- lit103 (when literal-re-pattern-raw set to `always`)\n```\n",
  "docs_url": null,
  "keywords": "flake8,string,literal",
  "license": "gnu lesser general public license v3",
  "name": "flake8-literal",
  "package_url": "https://pypi.org/project/flake8-literal/",
  "project_url": "https://pypi.org/project/flake8-literal/",
  "project_urls": {
    "homepage": "https://github.com/plinss/flake8-literal"
  },
  "release_url": "https://pypi.org/project/flake8-literal/1.3.0/",
  "requires_dist": [
    "flake8 (<7.0,>=3.8.0)",
    "typing-extensions (>=3.7.4.2)",
    "importlib-metadata (<5.0.0,>=4.0.0) ; python_version < \"3.8.0\"",
    "mypy ; extra == 'dev'",
    "flake8 (<6.0.0,>=3.8.0) ; extra == 'dev'",
    "flake8-annotations ; extra == 'dev'",
    "flake8-bandit ; extra == 'dev'",
    "flake8-bugbear ; extra == 'dev'",
    "flake8-commas ; extra == 'dev'",
    "flake8-comprehensions ; extra == 'dev'",
    "flake8-continuation ; extra == 'dev'",
    "flake8-datetimez ; extra == 'dev'",
    "flake8-docstrings ; extra == 'dev'",
    "flake8-import-order ; extra == 'dev'",
    "flake8-literal ; extra == 'dev'",
    "flake8-noqa ; extra == 'dev'",
    "flake8-polyfill ; extra == 'dev'",
    "flake8-pyproject ; extra == 'dev'",
    "flake8-modern-annotations ; extra == 'dev'",
    "flake8-requirements ; extra == 'dev'",
    "flake8-typechecking-import ; extra == 'dev'",
    "flake8-use-fstring ; extra == 'dev'",
    "pep8-naming ; extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "flake8 string literal validation",
  "version": "1.3.0",
  "releases": [],
  "developers": [
    "pypi@linss.com"
  ],
  "kwds": "literals escaping regex_compile escaped backslash",
  "license_kwds": "gnu lesser general public license v3",
  "libtype": "pypi",
  "id": "pypi_flake8_literal",
  "homepage": "",
  "release_count": 12,
  "dependency_ids": [
    "pypi_flake8",
    "pypi_flake8_annotations",
    "pypi_flake8_bandit",
    "pypi_flake8_bugbear",
    "pypi_flake8_commas",
    "pypi_flake8_comprehensions",
    "pypi_flake8_continuation",
    "pypi_flake8_datetimez",
    "pypi_flake8_docstrings",
    "pypi_flake8_import_order",
    "pypi_flake8_literal",
    "pypi_flake8_modern_annotations",
    "pypi_flake8_noqa",
    "pypi_flake8_polyfill",
    "pypi_flake8_pyproject",
    "pypi_flake8_requirements",
    "pypi_flake8_typechecking_import",
    "pypi_flake8_use_fstring",
    "pypi_importlib_metadata",
    "pypi_mypy",
    "pypi_pep8_naming",
    "pypi_typing_extensions"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7"
  ],
  "description": "future: easy, safe support for python 2/3 compatibility\n=======================================================\n\n``future`` is the missing compatibility layer between python 2 and python\n3. it allows you to use a single, clean python 3.x-compatible codebase to\nsupport both python 2 and python 3 with minimal overhead.\n\nit is designed to be used as follows::\n\n    from __future__ import (absolute_import, division,\n                            print_function, unicode_literals)\n    from builtins import (\n             bytes, dict, int, list, object, range, str,\n             ascii, chr, hex, input, next, oct, open,\n             pow, round, super,\n             filter, map, zip)\n\nfollowed by predominantly standard, idiomatic python 3 code that then runs\nsimilarly on python 2.6/2.7 and python 3.3+.\n\nthe imports have no effect on python 3. on python 2, they shadow the\ncorresponding builtins, which normally have different semantics on python 3\nversus 2, to provide their python 3 semantics.\n\n\nstandard library reorganization\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``future`` supports the standard library reorganization (pep 3108) through the\nfollowing py3 interfaces:\n\n    >>> # top-level packages with py3 names provided on py2:\n    >>> import html.parser\n    >>> import queue\n    >>> import tkinter.dialog\n    >>> import xmlrpc.client\n    >>> # etc.\n\n    >>> # aliases provided for extensions to existing py2 module names:\n    >>> from future.standard_library import install_aliases\n    >>> install_aliases()\n\n    >>> from collections import counter, ordereddict   # backported to py2.6\n    >>> from collections import userdict, userlist, userstring\n    >>> import urllib.request\n    >>> from itertools import filterfalse, zip_longest\n    >>> from subprocess import getoutput, getstatusoutput\n\n\nautomatic conversion\n--------------------\n\nan included script called `futurize\n<http://python-future.org/automatic_conversion.html>`_ aids in converting\ncode (from either python 2 or python 3) to code compatible with both\nplatforms. it is similar to ``python-modernize`` but goes further in\nproviding python 3 compatibility through the use of the backported types\nand builtin functions in ``future``.\n\n\ndocumentation\n-------------\n\nsee: http://python-future.org\n\n\ncredits\n-------\n\n:author:  ed schofield, jordan m. adler, et al\n:sponsor: python charmers pty ltd, australia, and python charmers pte\n          ltd, singapore. http://pythoncharmers.com\n:others:  see docs/credits.rst or http://python-future.org/credits.html\n\n\nlicensing\n---------\ncopyright 2013-2019 python charmers pty ltd, australia.\nthe software is distributed under an mit licence. see license.txt.",
  "docs_url": "https://pythonhosted.org/future/",
  "keywords": "future past python3 migration futurize backport six 2to3 modernize pasteurize 3to2",
  "license": "mit",
  "name": "future",
  "package_url": "https://pypi.org/project/future/",
  "project_url": "https://pypi.org/project/future/",
  "project_urls": {
    "Homepage": "https://python-future.org"
  },
  "release_url": "https://pypi.org/project/future/0.18.3/",
  "requires_dist": [],
  "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*",
  "summary": "clean single-source support for python 3 and 2",
  "version": "0.18.3",
  "releases": [],
  "developers": [
    "ed@pythoncharmers.com",
    "ed_schofield"
  ],
  "kwds": "python3 py3 pythoncharmers py2 python",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_future",
  "homepage": "https://python-future.org",
  "release_count": 51,
  "dependency_ids": []
}
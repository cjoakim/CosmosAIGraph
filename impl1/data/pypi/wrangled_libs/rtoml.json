{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: macos x",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "operating system :: posix :: linux",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# rtoml\n\n[![actions status](https://github.com/samuelcolvin/rtoml/workflows/ci/badge.svg)](https://github.com/samuelcolvin/rtoml/actions?query=event%3apush+branch%3amain+workflow%3aci)\n[![coverage](https://codecov.io/gh/samuelcolvin/rtoml/branch/main/graph/badge.svg)](https://codecov.io/gh/samuelcolvin/rtoml)\n[![pypi](https://img.shields.io/pypi/v/rtoml.svg)](https://pypi.python.org/pypi/rtoml)\n[![versions](https://img.shields.io/pypi/pyversions/rtoml.svg)](https://github.com/samuelcolvin/rtoml)\n[![license](https://img.shields.io/github/license/samuelcolvin/rtoml.svg)](https://github.com/samuelcolvin/rtoml/blob/main/license)\n\n\na better toml library for python implemented in rust.\n\n## why use rtoml\n\n* correctness: rtoml is based on the widely used and very stable [toml-rs](https://github.com/alexcrichton/toml-rs)\nlibrary, it passes all the [standard toml tests](https://github.com/burntsushi/toml-test) as well as having 100%\ncoverage on python code. other toml libraries for python i tried all failed to parse some valid toml.\n* performance: see [github.com/pwwang/toml-bench](https://github.com/pwwang/toml-bench) -\n  rtoml is much faster than pure python toml libraries.\n\n## install\n\nrequires `python>=3.7`, binaries are available from pypi for linux, macos and windows,\nsee [here](https://pypi.org/project/rtoml/#files).\n\n```bash\npip install rtoml\n```\n\nif no binary is available on pypi for you system configuration; you'll need rust stable\ninstalled before you can install rtoml.\n\n## usage\n\n#### load\n```python\ndef load(toml: union[str, path, textio]) -> dict[str, any]: ...\n```\n\nparse toml via a string or file and return a python dictionary. the `toml` argument may be a `str`,\n`path` or file object from `open()`.\n\n#### loads\n```python\ndef loads(toml: str) -> dict[str, any]: ...\n```\n\nparse a toml string and return a python dictionary. (provided to match the interface of `json` and similar libraries)\n\n#### dumps\n```python\ndef dumps(obj: any, *, pretty: bool = false) -> str: ...\n```\n\nserialize a python object to toml.\n\nif `pretty` is true, output has a more \"pretty\" format.\n\n#### dump\n```python\ndef dump(obj: any, file: union[path, textio], *, pretty: bool = false) -> int: ...\n```\n\nserialize a python object to toml and write it to a file. `file` may be a `path` or file object from `open()`.\n\nif `pretty` is true, output has a more \"pretty\" format.\n\n### example\n\n```py\nfrom datetime import datetime, timezone, timedelta\nimport rtoml\n\nobj = {\n    'title': 'toml example',\n    'owner': {\n        'dob': datetime(1979, 5, 27, 7, 32, tzinfo=timezone(timedelta(hours=-8))),\n        'name': 'tom preston-werner',\n    },\n    'database': {\n        'connection_max': 5000,\n        'enabled': true,\n        'ports': [8001, 8001, 8002],\n        'server': '192.168.1.1',\n    },\n}\n\nloaded_obj = rtoml.load(\"\"\"\\\n# this is a toml document.\n\ntitle = \"toml example\"\n\n[owner]\nname = \"tom preston-werner\"\ndob = 1979-05-27t07:32:00-08:00 # first class dates\n\n[database]\nserver = \"192.168.1.1\"\nports = [8001, 8001, 8002]\nconnection_max = 5000\nenabled = true\n\"\"\")\n\nassert loaded_obj == obj\n\nassert rtoml.dumps(obj) == \"\"\"\\\ntitle = \"toml example\"\n\n[owner]\ndob = 1979-05-27t07:32:00-08:00\nname = \"tom preston-werner\"\n\n[database]\nconnection_max = 5000\nenabled = true\nserver = \"192.168.1.1\"\nports = [8001, 8001, 8002]\n\"\"\"\n```\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "rtoml",
  "package_url": "https://pypi.org/project/rtoml/",
  "project_url": "https://pypi.org/project/rtoml/",
  "project_urls": {
    "Funding": "https://github.com/sponsors/samuelcolvin",
    "Homepage": "https://github.com/samuelcolvin/rtoml",
    "Source": "https://github.com/samuelcolvin/rtoml"
  },
  "release_url": "https://pypi.org/project/rtoml/0.10.0/",
  "requires_dist": [],
  "requires_python": ">=3.8",
  "summary": "",
  "version": "0.10.0",
  "releases": [],
  "developers": [
    "s@muelcolvin.com"
  ],
  "kwds": "rtoml badge svg workflows workflow",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_rtoml",
  "homepage": "",
  "release_count": 14,
  "dependency_ids": []
}
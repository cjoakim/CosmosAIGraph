{
  "classifiers": [
    "development status :: 6 - mature",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "========\njson2xml\n========\n\n.. image:: https://badge.fury.io/py/json2xml.svg\n.. image:: https://static.pepy.tech/personalized-badge/json2xml?period=total&units=international_system&left_color=blue&right_color=orange&left_text=downloads\n        :target: https://pepy.tech/project/json2xml\n\n.. image:: https://github.com/vinitkumar/json2xml/actions/workflows/pythonpackage.yml/badge.svg\n.. image:: https://img.shields.io/pypi/pyversions/json2xml.svg\n.. image:: https://readthedocs.org/projects/json2xml/badge/?version=latest\n        :target: https://json2xml.readthedocs.io/en/latest/?badge=latest\n        :alt: documentation status\n.. image:: https://codecov.io/gh/vinitkumar/json2xml/branch/master/graph/badge.svg?token=yt2h55etl2\n      :target: https://codecov.io/gh/vinitkumar/json2xml\n\njson2xml is a python library that allows you to convert json data into xml format. it's simple, efficient, and easy to use.\n\ndocumentation: https://json2xml.readthedocs.io.\n\nthe library was initially dependent on the `dict2xml` project, but it has now been integrated into json2xml itself. this has led to cleaner code, the addition of types and tests, and overall improved performance.\n\nfeatures\n^^^^^^^^\n\njson2xml supports the following features:\n\n* conversion from a `json` string to xml\n* conversion from a `json` file to xml\n* conversion from an api that emits `json` data to xml\n\nusage\n^^^^^\n\nyou can use the json2xml library in the following ways:\n\n\n.. code-block:: python\n\n    from json2xml import json2xml\n    from json2xml.utils import readfromurl, readfromstring, readfromjson\n\n    # convert json data from a url to xml\n    data = readfromurl(\"https://api.publicapis.org/entries\")\n    print(json2xml.json2xml(data).to_xml())\n\n    # convert a json string to xml\n    data = readfromstring(\n        '{\"login\":\"mojombo\",\"id\":1,\"avatar_url\":\"https://avatars0.githubusercontent.com/u/1?v=4\"}'\n    )\n    print(json2xml.json2xml(data).to_xml())\n\n    # convert a json file to xml\n    data = readfromjson(\"examples/licht.json\")\n    print(json2xml.json2xml(data).to_xml())\n\n\ncustom wrappers and indentation\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nby default, a wrapper `all` and pretty `true` is set. however, you can easily change this in your code like this:\n\n.. code-block:: python\n\n    from json2xml import json2xml\n    from json2xml.utils import readfromurl, readfromstring, readfromjson\n\n    data = readfromstring(\n        '{\"login\":\"mojombo\",\"id\":1,\"avatar_url\":\"https://avatars0.githubusercontent.com/u/1?v=4\"}'\n    )\n    print(json2xml.json2xml(data, wrapper=\"all\", pretty=true).to_xml())\n\n\noutputs this:\n\n.. code-block:: xml\n\n    <?xml version=\"1.0\" ?>\n    <all>\n      <login type=\"str\">mojombo</login>\n      <id type=\"int\">1</id>\n      <avatar_url type=\"str\">https://avatars0.githubusercontent.com/u/1?v=4</avatar_url>\n    </all>\n\nomit list item\n^^^^^^^^^^^^^^\n\nassume the following json input\n\n.. code-block:: json\n\n    {\n      \"my_items\": [\n        { \"my_item\": { \"id\": 1 } },\n        { \"my_item\": { \"id\": 2 } }\n      ],\n      \"my_str_items\": [\"a\", \"b\"]\n    }\n\nby default, items in an array are wrapped in <item></item>.\n\ndefault output:\n\n.. code-block:: xml\n\n    <?xml version=\"1.0\" ?>\n    <all>\n      <my_items type=\"list\">\n        <item type=\"dict\">\n          <my_item type=\"dict\">\n            <id type=\"int\">1</id>\n          </my_item>\n        </item>\n        <item type=\"dict\">\n          <my_item type=\"dict\">\n            <id type=\"int\">2</id>\n          </my_item>\n        </item>\n      </my_items>\n      <my_str_items type=\"list\">\n        <item type=\"str\">a</item>\n        <item type=\"str\">b</item>\n      </my_str_items>\n      <empty type=\"list\"/>\n    </all>\n\nhowever, you can change this behavior using the item_wrap property like this:\n\n.. code-block:: python\n\n    from json2xml import json2xml\n    from json2xml.utils import readfromurl, readfromstring, readfromjson\n\n    data = readfromstring('{\"my_items\":[{\"my_item\":{\"id\":1} },{\"my_item\":{\"id\":2} }],\"my_str_items\":[\"a\",\"b\"]}')\n    print(json2xml.json2xml(data, item_wrap=false).to_xml())\n\noutputs this:\n\n.. code-block:: xml\n\n    <?xml version=\"1.0\" ?>\n    <all>\n      <my_items type=\"list\">\n        <my_item type=\"dict\">\n          <id type=\"int\">1</id>\n        </my_item>\n        <my_item type=\"dict\">\n          <id type=\"int\">2</id>\n        </my_item>\n      </my_items>\n      <my_str_items type=\"str\">a</my_str_items>\n      <my_str_items type=\"str\">b</my_str_items>\n    </all>\n\noptional attribute type support\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nyou can also specify if the output xml needs to have type specified or not. here is the usage:\n\n .. code-block:: python\n\n    from json2xml import json2xml\n    from json2xml.utils import readfromurl, readfromstring, readfromjson\n\n    data = readfromstring(\n        '{\"login\":\"mojombo\",\"id\":1,\"avatar_url\":\"https://avatars0.githubusercontent.com/u/1?v=4\"}'\n    )\n    print(json2xml.json2xml(data, wrapper=\"all\", pretty=true, attr_type=false).to_xml())\n\n\noutputs this:\n\n.. code-block:: xml\n\n    <?xml version=\"1.0\" ?>\n    <all>\n      <login>mojombo</login>\n      <id>1</id>\n      <avatar_url>https://avatars0.githubusercontent.com/u/1?v=4</avatar_url>\n    </all>\n\n\nthe methods are simple and easy to use and there are also checks inside of code to exit cleanly\nin case any of the input(file, string or api url) returns invalid json.\n\nhow to run tests\n^^^^^^^^^^^^^^^^\n\nthis is provided by pytest, which is straight forward.\n\n .. code-block:: console\n\n    virtualenv venv -p $(which python3.9)\n    pip install -r requirements-dev.txt\n    python setup.py install\n    pytest -vv\n\n\nhelp and support to maintain this project\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- you can sponsor my work for this plugin here: https://github.com/sponsors/vinitkumar/\n\n\n\nhistory\n=======\n\n4.1.0 / 2023-11-07\n==================\n\n * chore(deps): bump urllib3 from 1.26.13 to 1.26.18 (#192, #195)\n\n4.0.1 / 2023-10-13\n==================\n\n  * feat: get local working for 3.12 and fix some code quality issue\n  * fix/make docs better (#186)\n  * fix: issue with hardcoded year\n  * feat: upgrade sphinx theme\n  * fix: issues with ruff linting, use isinstance in place of type\n  * fix: make readme better\n  * chore(deps): bump tornado from 6.3.2 to 6.3.3 in /docs (#185)\n  * chore(deps): bump certifi from 2022.12.7 to 2023.7.22 in /docs (#183)\n  * chore(deps): bump pygments from 2.10.0 to 2.15.0 in /docs (#182)\n\n4.0.0 / 2023-07-19\n==================\n\n  * updated to python 3.12 beta 4\n  * added check for pypy 3.10\n  * dropped support for python 3.7\n  * updated fixture for attrs with dict and removed comment (#170)\n\n3.21.0 / 2023-01-18\n===================\n\n  * implemented list item with attributes (#169)\n  * added python3.12 alpha4 to the fix (#168)\n  * replaced requests with urllib3 (#167)\n  * added security reporting guidelines\n  * added codeql workflow for github code scanning (#160)\n  * set default to false for list_headers (#164)\n  * fixed ci issue due to mypy update on python3.11 (#166)\n  * updated certifi from 2021.10.8 to 2022.12.7 in /docs (#162)\n  * fixed file opening issue\n  * celebrated release of python 3.11 (#159)\n\n3.20.0 / 2022-10-16\n===================\n\n  * made dependencies more flexible (#158)\n  * used systemrandom for secure random integer generation (#156)\n\n3.19.5 / 2022-09-18\n===================\n\n  * fixed issues #138 and #151, added 2 new unit tests (#154)\n  * fixed unit tests for #152 (#153)\n\n3.19.4 / 2022-07-24\n===================\n\n  * transitioned from unittest to pytest (#149)\n  * upgraded python test to python311beta (#148)\n  * tested new version of 3.10 and 3.11 (#147)\n\n3.19.3 / 2022-07-01\n===================\n\n  * added utf-8 encoding type to @readfromjson function in utils.py for korean language support (#145)\n\n3.19.2 / 2022-06-09\n===================\n\n  * escaped xml char when having attrs (#144)\n  * adjusted pytest config setting for easier logging\n  * bumped python 3.10 and 3.11 version (#142)\n\n3.19.1 / 2022-06-05\n===================\n\n  * bumped version of docs building\n  * updated waitress from 2.1.1 to 2.1.2 in /docs (#141)\n  * updated docs for dicttoxml (#140)\n\n3.19.0 / 2022-05-20\n===================\n\n  * set xsi location (#135)\n  * repeated list headers (#138)\n  * added support for python3.11 (#139)\n  * improved docs for dicttoxml (#134)\n  * fixed types working check for ci mypy (#133)\n  * added mypy support to ci (#132)\n  * generated changelog\n  * removed logging by default (#131)\n  * merged two dev requirements files (#129)\n  * removed old unused config\n  * added types (#125)\n  * fixed issue with twine check\n  * fixed issue with long description\n  * refactored: xmltodict is only test dependency now (#124)\n  * added correct list of contributors\n  * generated changelog\n  * improved dicttoxml (#121)\n  * added correct badge\n  * started using codecov\n  * fixed flake8 tests\n  * added coverage to the mix\n  * fixed lint issues and ci\n  * checked new ci stuff like lint and coverage\n  * bumped version and generated changelog\n  * fixed issue with wrong output for boolean list\n  * made pull requests trigger action runs\n\n3.18.0 / 2022-04-23\n===================\n\n  * bumped version\n  * improved dicttoxml (#121)\n  * added correct badge\n  * started using codecov\n  * fixed flake8 tests\n  * added coverage to the mix\n  * fixed lint issues and ci\n  * checked new ci stuff like lint and coverage\n  * bumped version and generated changelog\n  * fixed issue with wrong output for boolean list\n  * made pull requests trigger action runs\n\n3.17.1 / 2022-04-20\n===================\n\n  * fixed issue with wrong output for boolean list\n  * made pull requests trigger action runs\n\n3.17.0 / 2022-04-18\n===================\n\n  * fixed return of correct xml type for bool (#119)\n  * added download counter\n  * checked latest alpha (#116)\n  * checked latest alpha (#115)\n  * updated waitress from 2.0.0 to 2.1.1 in /docs (#114)\n  * only python3 wheels are created now\n\n3.15.0 / 2022-02-24\n===================\n\n  * merged remote-tracking branch 'origin/master'\n  * bumped version and prepared for new release\n  * added new python versions to test against (#110)\n  * fixed perflint (#109)\n  * supported latest version of 3.10 and 3.11 alpha3 (#98)\n  * generated changelog\n  * removed unused imports\n  * bumped version\n  * fixed issue with uncaught unicodedecodeerror\n  * cancelled jobs for concurrent builds in same pr\n  * stabilized pypi\n  * updated tox config\n\nv3.14.0 / 2022-02-10\n====================\n\n  * removed unused imports\n  * bumped version\n  * fixed issue with uncaught unicodedecodeerror\n  * fix: remove unused imports\n  * bump version\n  * fix: issue with uncaught unicodedecodeerror\n  * cancel jobs for concurrent builds in same pr\n  * pypi is stable now\n  * feat: update tox config\n\nv3.11.0 / 2022-01-31\n====================\n\n  * bump version\n  * feat: remove comments\n  * feat: install pytest separately and run pytests now\n  * fix tox\n  * add some documentation on testing\n  * split testing libs away from release\n  * fix: update changelog\n  * bump version to 3.10.0\n  * fix: we support python3.7+ now (#101)\n  * issue: #99 dicttoxml igores the root param (#100)\n\nv3.10.0 / 2022-01-29\n====================\n\n  * bump version to 3.10.0\n  * fix: we support python3.7+ now (#101)\n  * issue: #99 dicttoxml igores the root param (#100)\n  * feat: bump to a rc1 version\n  * add support for python3.11 alpha and upgrade pytest and py (#97)\n  * feat: drop 3.11.0 alphas from the test matrix for now\n  * feat: find the versions that are in the ci\n  * fix: typo in the name of python 3.11 version\n  * sunsetting python 3.6 and add support for python3.11 alpha\n  * chore: prepare for release 3.9.0\n  * fix email\n  * fix readme\n  * - update readme - add tests - refactor\n  * resolve #93\n  * chore: run black on readme doc\n  * fix: more issues\n  * fix: garbage in history\n  * feat: generate history\n\nv3.9.0 / 2021-12-19\n===================\n\n  * feat: generate history\n  * feat: item_wrap for str and int (#93)\n\nv3.8.4 / 2021-10-24\n===================\n\n  * bump version\n  * fix: version bump and readme generator\n\nv3.8.3 / 2021-10-24\n===================\n\n  * bump version\n  * feat: reproduce the error in the test (#90)\n  * feat/version (#88)\n  * feat/docs theme change (#87)\n  * feat/docs theme change (#86)\n  * feat/docs theme change (#85)\n  * feat/docs theme change (#84)\n  * feat/docs theme change (#83)\n  * feat: update the docs theme (#82)\n\nv3.8.0 / 2021-10-07\n===================\n\n  * feat/security improvements (#81)\n  * :arrow_up: feat: python 3.10 released (#79)\n\nv3.7.0 / 2021-09-11\n===================\n\n  * :bookmark: feat: final release for v3.7.0\n  * :bookmark: feat: bump version\n\nv3.7.0beta2 / 2021-09-10\n========================\n\n  * feat/cleanup and deprecation fix (#78)\n  * item ommision (#76)\n  * create funding.yml\n\nv3.7.0beta1 / 2021-08-28\n========================\n\n  * feat/fork and update dict2xml (#75)\n  * chore(deps-dev): bump pip from 18.1 to 19.2 (#73)\n  * delete .travis.yml\n  * chore(deps-dev): bump lxml from 4.6.2 to 4.6.3 (#68)\n  * bump lxml from 4.1.1 to 4.6.2 (#66)\n\nv3.6.0 / 2020-11-12\n===================\n\n  * feat/wip exceptions (#65)\n  * add .deepsource.toml\n  * feat: upgrade the actions\n  * feat: try & support more os and python versions\n  * update pythonpackage.yml\n\nv3.5.0 / 2020-08-24\n===================\n\n  * feat: remove six as dependency as we are python3 only, resolves #60 (#61)\n  * feat: update makefile for the correct command\n\nv3.4.1 / 2020-06-10\n===================\n\n  * fix: issues with pypi release and bump version\n  * feat/attr type docs (#58)\n  * fix: conflicts\n  * feat/attr type docs (#57)\n  * merge github.com:vinitkumar/json2xml\n  * update json2xml.py (#56)\n  * merge github.com:vinitkumar/json2xml\n  * feat: fix typo in the readme\n\nv3.3.3 / 2020-02-05\n===================\n\n  * update readme.rst\n  * fix: issue with pypi uploads\n  * fix: version\n  * bump version\n  * update pythonpackage.yml\n  * refactor/prospector cleanup (#50)\n  * update pythonpackage.yml\n  * create pythonpackage.yml\n  * update readme.rst\n  * fix: typo in readme\n  * bump version\n  * feature/attribute support (#48)\n  * feature/attribute support (#47)\n  * chore: bump version\n  * fix: remove print statement in json read because it confuses people\n  * fix typo in readme\n\nv3.0.0 / 2019-02-26\n===================\n\n  * fix/coveralls (#43)\n  * update coverage report (#42)\n  * merge pull request #41 from vinitkumar/fix/coveralls\n  * add python coveralls\n  * merge pull request #40 from vinitkumar/refactor/cookiecutter\n  * update coverage\n  * add image for coveralls\n  * coverage and coveralls integrations\n  * try and trigger coveralls too\n  * fix code block in readme\n  * add doc about custom wrapper\n  * try at reducing the dependencies\n  * add tests for custom wrappers as well\n  * add tests for actualy dict2xml conversion\n  * fix: remove missing import\n  * fix: code syntax highlight in the readme again\n  * fix: code syntax highlight in the readme again\n  * fix: code syntax highlight in the readme\n  * chore: update readme with code samples\n  * test: add testcases for the different utils method\n  * remove unused imports\n  * check the third method for generating dict from json string too\n  * run correct test files\n  * fix tests\n  * update requirements and setuptools\n  * refactor the module into more maintainable code\n  * chore: add boilerplate\n  * remove all legacy\n  * fix/cleanup (#38)\n  * cleanup: remove unused modules (#37)\n  * merge pull request #35 from vinitkumar/improve-structure\n  * cleanup\n  * one again try to get the build working\n  * travis need full version for latest supported python\n  * do not hardcode version in a series\n  * update grammar\n  * fix conflicts\n  * update license\n  * cleanup readme\n  * remove cli\n  * some cleanup and update the tests\n  * update readme.md\n  * cleanup readme.md\n  * update issue templates\n  * fix vulnerabilities in requests\n\n",
  "docs_url": null,
  "keywords": "json2xml",
  "license": "apache software license 2.0",
  "name": "json2xml",
  "package_url": "https://pypi.org/project/json2xml/",
  "project_url": "https://pypi.org/project/json2xml/",
  "project_urls": {
    "Homepage": "https://github.com/vinitkumar/json2xml"
  },
  "release_url": "https://pypi.org/project/json2xml/4.1.0/",
  "requires_dist": [
    "defusedxml",
    "urllib3"
  ],
  "requires_python": "",
  "summary": "simple python library to convert json to xml",
  "version": "4.1.0",
  "releases": [],
  "developers": [
    "mail@vinitkumar.me",
    "vinit_kumar"
  ],
  "kwds": "json2xml json dict2xml badge dicttoxml",
  "license_kwds": "apache software license 2.0",
  "libtype": "pypi",
  "id": "pypi_json2xml",
  "homepage": "https://github.com/vinitkumar/json2xml",
  "release_count": 61,
  "dependency_ids": [
    "pypi_defusedxml",
    "pypi_urllib3"
  ]
}
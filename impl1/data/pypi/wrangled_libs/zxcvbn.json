{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "topic :: security",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "|build status|\n\nzxcvbn\n======\n\na realistic password strength estimator.\n\nthis is a python implementation of the library created by the team at dropbox.\nthe original library, written for javascript, can be found\n`here <https://github.com/dropbox/zxcvbn>`__.\n\nwhile there may be other python ports available, this one is the most up\nto date and is recommended by the original developers of zxcvbn at this\ntime.\n\n\nfeatures\n--------\n- **tested in python versions 2.7, 3.3-3.6**\n- accepts user data to be added to the dictionaries that are tested against (name, birthdate, etc)\n- gives a score to the password, from 0 (terrible) to 4 (great)\n- provides feedback on the password and ways to improve it\n- returns time estimates on how long it would take to guess the password in different situations\n\ninstallation\n------------\n\ninstall the package using pip: ``pip install zxcvbn``\n\nusage\n-----\n\npass a password as the first parameter, and a list of user-provided\ninputs as the ``user_inputs`` parameter (optional).\n\n.. code:: python\n\n    from zxcvbn import zxcvbn\n\n    results = zxcvbn('johnsmith123', user_inputs=['john', 'smith'])\n\n    print(results)\n\noutput:\n\n::\n\n    {\n        'password': 'johnsmith123',\n        'score': 2,\n        'guesses': 2567800,\n        'guesses_log10': 6.409561194521849,\n        'calc_time': datetime.timedelta(0, 0, 5204)\n        'feedback': {\n            'warning': '',\n            'suggestions': [\n                'add another word or two. uncommon words are better.',\n                \"capitalization doesn't help very much\"\n            ]\n        },\n        'crack_times_display': {\n            'offline_fast_hashing_1e10_per_second': 'less than a second'\n            'offline_slow_hashing_1e4_per_second': '4 minutes',\n            'online_no_throttling_10_per_second': '3 days',\n            'online_throttling_100_per_hour': '3 years',\n        },\n        'crack_times_seconds': {\n            'offline_fast_hashing_1e10_per_second': 0.00025678,\n            'offline_slow_hashing_1e4_per_second': 256.78\n            'online_no_throttling_10_per_second': 256780.0,\n            'online_throttling_100_per_hour': 92440800.0,\n        },\n        'sequence': [{\n            'matched_word': 'john',\n            'rank': 2,\n            'pattern': 'dictionary',\n            'reversed': false,\n            'token': 'john',\n            'l33t': false,\n            'uppercase_variations': 2,\n            'i': 0,\n            'guesses': 50,\n            'l33t_variations': 1,\n            'dictionary_name': 'male_names',\n            'base_guesses': 2,\n            'guesses_log10': 1.6989700043360185,\n            'j': 3\n        }, {\n            'matched_word': 'smith123',\n            'rank': 12789,\n            'pattern': 'dictionary',\n            'reversed': false,\n            'token': 'smith123',\n            'l33t': false,\n            'uppercase_variations': 2,\n            'i': 4,\n            'guesses': 25578,\n            'l33t_variations': 1,\n            'dictionary_name': 'passwords',\n            'base_guesses': 12789,\n            'guesses_log10': 4.407866583030775,\n            'j': 11\n        }],\n    }\n\n\ncustom ranked dictionaries\n--------------------------\n\nin order to support more languages or just add password dictionaries of your own, there is a helper function you may use.\n\n.. code:: python\n\n    from zxcvbn.matching import add_frequency_lists\n\n    add_frequency_lists({\n        'my_list': ['foo', 'bar'],\n        'another_list': ['baz']\n    })\n\nthese lists will be added to the current ones, but you can also overwrite the current ones if you wish.\nthe lists you add should be in order of how common the word is used with the most common words appearing first.\n\ncli\n~~~\n\nyou an also use zxcvbn from the command line::\n\n    echo 'password' | zxcvbn --user-input <user-input> | jq\n\nyou can also execute the zxcvbn module::\n\n    echo 'password' | python -m zxcvbn --user-input <user-input> | jq\n\n\ncontribute\n----------\n\n- report an issue: https://github.com/dwolfhub/zxcvbn-python/issues\n- submit a pull request: https://github.com/dwolfhub/zxcvbn-python/pulls\n\nlicense\n-------\n\nthe project is licensed under the mit license.\n\n\n.. |build status| image:: https://travis-ci.org/dwolfhub/zxcvbn-python.svg?branch=master\n   :target: https://travis-ci.org/dwolfhub/zxcvbn-python",
  "docs_url": null,
  "keywords": "zxcvbn,password,security",
  "license": "mit",
  "name": "zxcvbn",
  "package_url": "https://pypi.org/project/zxcvbn/",
  "project_url": "https://pypi.org/project/zxcvbn/",
  "project_urls": {
    "Download": "https://github.com/dwolfhub/zxcvbn-python/tarball/v4.4.28",
    "Homepage": "https://github.com/dwolfhub/zxcvbn-python"
  },
  "release_url": "https://pypi.org/project/zxcvbn/4.4.28/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "",
  "version": "4.4.28",
  "releases": [],
  "developers": [
    "daniel_wolf",
    "danielrwolf5@gmail.com"
  ],
  "kwds": "zxcvbn passwords password guesses_log10 python",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_zxcvbn",
  "homepage": "https://github.com/dwolfhub/zxcvbn-python",
  "release_count": 5,
  "dependency_ids": []
}
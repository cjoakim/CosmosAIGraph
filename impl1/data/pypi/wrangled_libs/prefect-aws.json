{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries"
  ],
  "description": "# `prefect-aws`\n\n<p align=\"center\">\n    <a href=\"https://pypi.python.org/pypi/prefect-aws/\" alt=\"pypi version\">\n        <img alt=\"pypi\" src=\"https://img.shields.io/pypi/v/prefect-aws?color=26272b&labelcolor=090422\"></a>\n    <a href=\"https://github.com/prefecthq/prefect-aws/\" alt=\"stars\">\n        <img src=\"https://img.shields.io/github/stars/prefecthq/prefect-aws?color=26272b&labelcolor=090422\" /></a>\n    <a href=\"https://pepy.tech/badge/prefect-aws/\" alt=\"downloads\">\n        <img src=\"https://img.shields.io/pypi/dm/prefect-aws?color=26272b&labelcolor=090422\" /></a>\n    <a href=\"https://github.com/prefecthq/prefect-aws/pulse\" alt=\"activity\">\n        <img src=\"https://img.shields.io/github/commit-activity/m/prefecthq/prefect-aws?color=26272b&labelcolor=090422\" /></a>\n    <br>\n    <a href=\"https://prefect-community.slack.com\" alt=\"slack\">\n        <img src=\"https://img.shields.io/badge/slack-join_community-red.svg?color=26272b&labelcolor=090422&logo=slack\" /></a>\n    <a href=\"https://discourse.prefect.io/\" alt=\"discourse\">\n        <img src=\"https://img.shields.io/badge/discourse-browse_forum-red.svg?color=26272b&labelcolor=090422&logo=discourse\" /></a>\n</p>\n\n## welcome!\n\n`prefect-aws` makes it easy to leverage the capabilities of aws in your flows, featuring support for ecs, s3, secrets manager, and batch.\n\nvisit the full docs [here](https://prefecthq.github.io/prefect-aws).\n\n### installation\n\nto start using `prefect-aws`:\n\n```bash\npip install prefect-aws\n```\n\n### contributing\n\nthanks for thinking about chipping in! check out this [step-by-step guide](https://prefecthq.github.io/prefect-aws/#installation) on how to get started.\n",
  "docs_url": null,
  "keywords": "prefect",
  "license": "apache license 2.0",
  "name": "prefect-aws",
  "package_url": "https://pypi.org/project/prefect-aws/",
  "project_url": "https://pypi.org/project/prefect-aws/",
  "project_urls": {
    "Homepage": "https://github.com/PrefectHQ/prefect-aws"
  },
  "release_url": "https://pypi.org/project/prefect-aws/0.4.6/",
  "requires_dist": [
    "boto3 >=1.24.53",
    "botocore >=1.27.53",
    "mypy-boto3-s3 >=1.24.94",
    "mypy-boto3-secretsmanager >=1.26.49",
    "prefect >=2.14.10",
    "tenacity >=8.0.0",
    "black ; extra == 'dev'",
    "boto3-stubs >=1.24.39 ; extra == 'dev'",
    "coverage ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "interrogate ; extra == 'dev'",
    "isort ; extra == 'dev'",
    "mkdocs ; extra == 'dev'",
    "mkdocs-gen-files ; extra == 'dev'",
    "mkdocs-material ; extra == 'dev'",
    "mkdocstrings-python-legacy ; extra == 'dev'",
    "moto <4.2.5,>=3.1.16 ; extra == 'dev'",
    "mypy ; extra == 'dev'",
    "pillow ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-asyncio ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-lazy-fixture ; extra == 'dev'",
    "pytest-xdist ; extra == 'dev'",
    "types-boto3 >=1.0.2 ; extra == 'dev'",
    "mock ; (python_version < \"3.8\") and extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "prefect collection of tasks and subflows to integrate with aws",
  "version": "0.4.6",
  "releases": [],
  "developers": [
    "help@prefect.io",
    "prefect_technologies"
  ],
  "kwds": "badge prefecthq href aws prefect",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_prefect_aws",
  "homepage": "https://github.com/prefecthq/prefect-aws",
  "release_count": 30,
  "dependency_ids": [
    "pypi_black",
    "pypi_boto3",
    "pypi_boto3_stubs",
    "pypi_botocore",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_interrogate",
    "pypi_isort",
    "pypi_mkdocs",
    "pypi_mkdocs_gen_files",
    "pypi_mkdocs_material",
    "pypi_mkdocstrings_python_legacy",
    "pypi_mock",
    "pypi_moto",
    "pypi_mypy",
    "pypi_mypy_boto3_s3",
    "pypi_mypy_boto3_secretsmanager",
    "pypi_pillow",
    "pypi_pre_commit",
    "pypi_prefect",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_pytest_lazy_fixture",
    "pypi_pytest_xdist",
    "pypi_tenacity",
    "pypi_types_boto3"
  ]
}
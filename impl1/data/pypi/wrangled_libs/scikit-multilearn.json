{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: web environment",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: bio-informatics",
    "topic :: scientific/engineering :: information analysis"
  ],
  "description": "# scikit-multilearn\n\n[![pypi version](https://badge.fury.io/py/scikit-multilearn.svg)](https://badge.fury.io/py/scikit-multilearn)\n[![license](https://img.shields.io/badge/license-bsd%202--clause-orange.svg)](https://opensource.org/licenses/bsd-2-clause)\n[![build status linux and osx](https://travis-ci.org/scikit-multilearn/scikit-multilearn.svg?branch=master)](https://travis-ci.org/scikit-multilearn/scikit-multilearn)\n[![build status windows](https://ci.appveyor.com/api/projects/status/vd4k18u1lp5btaql/branch/master?svg=true)](https://ci.appveyor.com/project/niedakh/scikit-multilearn/branch/master)\n\n__scikit-multilearn__ is a python module capable of performing multi-label\nlearning tasks. it is built on-top of various scientific python packages\n([numpy](http://www.numpy.org/), [scipy](https://www.scipy.org/)) and\nfollows a similar api to that of [scikit-learn](http://scikit-learn.org/).\n\n- __website:__ [scikit.ml](http://scikit.ml)\n- __documentation:__ [scikit-multilearn documentation](http://scikit.ml/api/skmultilearn.html)\n\n\n## features\n\n- __native python implementation.__ a native python implementation for a variety of multi-label classification algorithms. to see the list of all supported classifiers, check this [link](http://scikit.ml/#classifiers).\n\n- __interface to meka.__ a meka wrapper class is implemented for reference purposes and integration. this provides access to all methods available in meka, mulan, and weka &mdash; the reference standard in the field.\n\n- __builds upon giants!__ team-up with the power of numpy and scikit. you can use scikit-learn's base classifiers as scikit-multilearn's classifiers. in addition, the two packages follow a similar api.\n\n## dependencies\n\nin most cases you will want to follow the requirements defined in the requirements/*.txt files in the package. \n\n### base dependencies\n```\nscipy\nnumpy\nfuture\nscikit-learn\nliac-arff # for loading arff files\nrequests # for dataset module\nnetworkx # for networkx base community detection clusterers\npython-louvain # for networkx base community detection clusterers\nkeras\n```\n\n### gpl-incurring dependencies for two clusterers\n```\npython-igraph # for igraph library based clusterers\npython-graphtool # for graphtool base clusterers\n```\n\nnote: installing graphtool is complicated, please see: [graphtool install instructions](https://git.skewed.de/count0/graph-tool/wikis/installation-instructions)\n\n## installation\n\nto install scikit-multilearn, simply type the following command:\n\n```bash\n$ pip install scikit-multilearn\n```\n\nthis will install the latest release from the python package index. if you\nwish to install the bleeding-edge version, then clone this repository and\nrun `setup.py`:\n\n```bash\n$ git clone https://github.com/scikit-multilearn/scikit-multilearn.git\n$ cd scikit-multilearn\n$ python setup.py\n```\n\n## basic usage\n\nbefore proceeding to classification,  this library assumes that you have\na dataset with the following matrices:\n\n- `x_train`, `x_test`: training and test feature matrices of size `(n_samples, n_features)`\n- `y_train`, `y_test`: training and test label matrices of size `(n_samples, n_labels)`\n\nsuppose we wanted to use a problem-transformation method called binary\nrelevance, which treats each label as a separate single-label classification\nproblem, to a support-vector machine (svm) classifier, we simply perform\nthe following tasks:\n\n```python\n# import binaryrelevance from skmultilearn\nfrom skmultilearn.problem_transform import binaryrelevance\n\n# import svc classifier from sklearn\nfrom sklearn.svm import svc\n\n# setup the classifier\nclassifier = binaryrelevance(classifier=svc(), require_dense=[false,true])\n\n# train\nclassifier.fit(x_train, y_train)\n\n# predict\ny_pred = classifier.predict(x_test)\n```\n\nmore examples and use-cases can be seen in the \n[documentation](http://scikit.ml/api/classify.html). for using the meka\nwrapper, check this [link](http://scikit.ml/api/meka.html#mekawrapper).\n\n## contributing\n\nthis project is open for contributions. here are some of the ways for\nyou to contribute:\n\n- bug reports/fix\n- features requests\n- use-case demonstrations\n- documentation updates\n\nin case you want to implement your own multi-label classifier, please \nread our [developer's guide](http://scikit.ml/api/base.html) to help\nyou integrate your implementation in our api.\n\nto make a contribution, just fork this repository, push the changes\nin your fork, open up an issue, and make a pull request!\n\nwe're also available in slack! just go to our [slack group](https://scikit-ml.slack.com/).\n\n## cite\n\nif you used scikit-multilearn in your research or project, please\ncite [our work](https://arxiv.org/abs/1702.01460):\n\n```bibtex\n@article{2017arxiv170201460s,\n   author = {{szyma{\\'n}ski}, p. and {kajdanowicz}, t.},\n   title = \"{a scikit-based python environment for performing multi-label classification}\",\n   journal = {arxiv e-prints},\n   archiveprefix = \"arxiv\",\n   eprint = {1702.01460},\n   year = 2017,\n   month = feb\n}\n```\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "scikit-multilearn",
  "package_url": "https://pypi.org/project/scikit-multilearn/",
  "project_url": "https://pypi.org/project/scikit-multilearn/",
  "project_urls": {
    "Homepage": "http://scikit.ml/"
  },
  "release_url": "https://pypi.org/project/scikit-multilearn/0.2.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "scikit-multilearn is a bsd-licensed library for multi-label classification that is built on top of the well-known scikit-learn ecosystem.",
  "version": "0.2.0",
  "releases": [],
  "developers": [
    "niedakh@gmail.com"
  ],
  "kwds": "multilearn__ scikit __scikit multilearn sklearn",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_scikit_multilearn",
  "homepage": "http://scikit.ml/",
  "release_count": 7,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "# nlp primitives\n\n<p align=\"center\">\n    <a href=\"https://codecov.io/gh/alteryx/nlp_primitives\">\n        <img src=\"https://codecov.io/gh/alteryx/nlp_primitives/branch/main/graph/badge.svg\"/>\n    </a>\n    <a href=\"https://github.com/alteryx/nlp_primitives/actions?query=branch%3amain+workflow%3atests\" target=\"_blank\">\n        <img src=\"https://github.com/alteryx/nlp_primitives/workflows/tests/badge.svg?branch=main\" alt=\"tests\" />\n    </a>\n    <a href=\"https://badge.fury.io/py/nlp_primitives\" target=\"_blank\">\n        <img src=\"https://badge.fury.io/py/nlp_primitives.svg?maxage=2592000\" alt=\"pypi version\" />\n    </a>\n    <a href=\"https://anaconda.org/conda-forge/nlp_primitives\" target=\"_blank\">\n        <img src=\"https://anaconda.org/conda-forge/nlp-primitives/badges/version.svg\" alt=\"anaconda version\" />\n    </a>\n    <a href=\"https://stackoverflow.com/questions/tagged/featuretools\" target=\"_blank\">\n        <img src=\"http://img.shields.io/badge/questions-on_stackoverflow-blue.svg\" alt=\"stackoverflow\" />\n    </a> \n    <a href=\"https://pepy.tech/project/nlp_primitives\" target=\"_blank\">\n        <img src=\"https://pepy.tech/badge/nlp_primitives/month\" alt=\"pypi downloads\" />\n    </a>\n</p>\n<hr>\n\nnlp_primitives is a python library with natural language processing primitives, intended for use with [featuretools](https://github.com/featuretools/featuretools).\n\nnlp_primitives allows you to make use of text data in your machine learning pipeline in the same pipeline as the rest of your data.\n\n## installation\n\nthere are two options for installing nlp_primitives. both of the options will also install featuretools if it is not already installed.\n\nthe first option is to install a version of nlp_primitives that does not include tensorflow. with this option, primitives that depend on tensorflow cannot be used. currently, the only primitive that can not be used with this install option is ``universalsentenceencoder``.\n\n#### pypi\nnlp_primitives without tensorflow can be installed with pip:\n```shell\npython -m pip install nlp_primitives\n```\n\n#### conda-forge\nor from the conda-forge channel on conda:\n```shell\nconda install -c conda-forge nlp-primitives\n```\n\nthe second option is to install the complete version of nlp_primitives, which will also install tensorflow and allow use of all primitives. \n\nto install the complete version of nlp_primitives with pip:\n```shell\npython -m pip install \"nlp_primitives[complete]\"\n```\nor from the conda-forge channel on conda:\n```shell\nconda install -c conda-forge nlp-primitives-complete\n```\n\n### demos\n\n* [blog post](https://blog.featurelabs.com/natural-language-processing-featuretools/)\n* [predict resturant review ratings](https://github.com/featurelabs/predict-restaurant-rating)\n\n## calculating features\nwith nlp_primitives primtives in `featuretools`, this is how to calculate the same feature.\n\n```python\nfrom featuretools.nlp_primitives import polarityscore\n\ndata = [\"hello, this is a new featuretools library\",\n        \"this will add new natural language primitives\",\n        \"we hope you like it!\"]\n\npol = polarityscore()\npol(data)\n```\n```\n0    0.365\n1    0.385\n2    1.000\ndtype: float64\n```\n## combining primitives\nin `featuretools`, this is how to combine nlp_primitives primitives with built-in or other installed primitives.\n```python\nimport featuretools as ft\nfrom featuretools.nlp_primitives import titlewordcount\nfrom featuretools.primitives import mean\n\nentityset = ft.demo.load_retail()\nfeature_matrix, features = ft.dfs(entityset=entityset, target_dataframe_name='products', agg_primitives=[mean], trans_primitives=[titlewordcount])\n\nfeature_matrix.head(5)\n```\n```\n           mean(order_products.quantity)  mean(order_products.unit_price)  mean(order_products.total)  title_word_count(description)\nproduct_id\n10002                         16.795918                          1.402500                   23.556276                           3.0\n10080                         13.857143                          0.679643                    8.989357                           3.0\n10120                          6.620690                          0.346500                    2.294069                           2.0\n10123c                         1.666667                          1.072500                    1.787500                           3.0\n10124a                           3.2000                            0.6930                      2.2176                           5.0\n```\n\n## development\nto install from source, clone this repo and run\n```bash\nmake installdeps-test\n```\n\nthis will install all pip dependencies.\n\n## built at alteryx\n\n**nlp primitives** is an open source project maintained by [alteryx](https://www.alteryx.com). to see the other open source projects we\u2019re working on visit [alteryx open source](https://www.alteryx.com/open-source). if building impactful data science pipelines is important to you or your business, please get in touch.\n\n<p align=\"center\">\n  <a href=\"https://www.alteryx.com/open-source\">\n    <img src=\"https://alteryx-oss-web-images.s3.amazonaws.com/opensource_logo-01.png\" alt=\"alteryx open source\" width=\"800\"/>\n  </a>\n</p>\n",
  "docs_url": null,
  "keywords": "feature engineering,data science,machine learning,natural language processing",
  "license": "bsd 3-clause",
  "name": "nlp-primitives",
  "package_url": "https://pypi.org/project/nlp-primitives/",
  "project_url": "https://pypi.org/project/nlp-primitives/",
  "project_urls": {
    "Changes": "https://github.com/alteryx/nlp_primitives/blob/main/release_notes.rst",
    "Chat": "https://join.slack.com/t/alteryx-oss/shared_invite/zt-182tyvuxv-NzIn6eiCEf8TBziuKp0bNA",
    "Documentation": "https://featuretools.alteryx.com",
    "Issue Tracker": "https://github.com/alteryx/nlp_primitives/issues",
    "Source Code": "https://github.com/alteryx/nlp_primitives/",
    "Twitter": "https://twitter.com/alteryxoss"
  },
  "release_url": "https://pypi.org/project/nlp-primitives/2.11.0/",
  "requires_dist": [
    "numpy (>=1.17.5)",
    "pandas (>=1.3.0)",
    "featuretools (>=1.5.0)",
    "nltk (>=3.4.5)",
    "scikit-learn (>=0.20.0)",
    "tensorflow-hub (>=0.4.0) ; extra == 'complete'",
    "tensorflow (>=1.14.0) ; (sys_platform != \"darwin\" or platform_machine != \"arm64\") and extra == 'complete'",
    "tensorflow-metal (>=0.4.0) ; (sys_platform == \"darwin\" and platform_machine == \"arm64\") and extra == 'complete'",
    "tensorflow-macos (>=2.8.0) ; (sys_platform == \"darwin\" and platform_machine == \"arm64\") and extra == 'complete'",
    "ruff (==0.0.216) ; extra == 'dev'",
    "black[jupyter] (==22.12.0) ; extra == 'dev'",
    "pre-commit (==2.20.0) ; extra == 'dev'",
    "nlp-primitives[test] ; extra == 'dev'",
    "pytest (>=7.1.2) ; extra == 'test'",
    "pytest-cov (>=3.0.0) ; extra == 'test'",
    "pytest-xdist (>=2.5.0) ; extra == 'test'"
  ],
  "requires_python": "<4,>=3.8",
  "summary": "natural language processing primitives for featuretools",
  "version": "2.11.0",
  "releases": [],
  "developers": [
    "open_source_support@alteryx.com"
  ],
  "kwds": "nlp_primitives featurelabs nlp workflow workflows",
  "license_kwds": "bsd 3-clause",
  "libtype": "pypi",
  "id": "pypi_nlp_primitives",
  "homepage": "",
  "release_count": 25,
  "dependency_ids": [
    "pypi_black",
    "pypi_featuretools",
    "pypi_nlp_primitives",
    "pypi_nltk",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_xdist",
    "pypi_ruff",
    "pypi_scikit_learn",
    "pypi_tensorflow",
    "pypi_tensorflow_hub",
    "pypi_tensorflow_macos",
    "pypi_tensorflow_metal"
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: other/proprietary license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: information analysis",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing"
  ],
  "description": "# cloud\n\n[![pypi](https://img.shields.io/pypi/v/great_expectations_cloud)](https://pypi.org/project/great-expectations_cloud/#history)\n[![docker pulls](https://img.shields.io/docker/pulls/greatexpectations/agent)](https://hub.docker.com/r/greatexpectations/agent)\n[![ci](https://github.com/great-expectations/cloud/actions/workflows/ci.yaml/badge.svg?event=schedule)](https://github.com/great-expectations/cloud/actions/workflows/ci.yaml)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/great-expectations/cloud/main.svg)](https://results.pre-commit.ci/latest/github/great-expectations/cloud/main)\n[![ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)\n\n## dev setup\n\n1. [install `poetry`](https://python-poetry.org/docs/#installation)\n   - [`pipx install poetry`](https://python-poetry.org/docs/#installing-with-pipx)\n2. set up virtual environment and install dependencies.\n   - `poetry install --sync`\n3. activate your virtual environment.\n   - `poetry shell`\n4. set up precommit hooks\n   - `pre-commit install`\n\n### developer tasks\n\ncommon developer tasks are available via `invoke` (defined in `tasks.py`)\n\n`invoke --list` to see available tasks.\n\n#### synchronize dependencies\n\nto ensure you are using the latest version of the core and development dependencies run `poetry install --sync`.\nalso available as an invoke task.\n```console\ninvoke deps\n```\n\n#### updating `poetry.lock` dependencies\n\nthe dependencies installed in our ci and the docker build step are determined by the [poetry.lock file](https://python-poetry.org/docs/basic-usage/#installing-with-poetrylock).\n\n[to update only a specific dependency](https://python-poetry.org/docs/cli/#update) (such as `great_expectations`) ...\n```console\npoetry update great_expectations\n```\n\n[to resolve and update all dependencies ...](https://python-poetry.org/docs/cli/#lock)\n```console\npoetry lock\n```\n\nin either case, the updated `poetry.lock` file must be committed and merged to main.\n\n\n#### release to pypi and docker\n\nto release a new version to pypi the version must be incremented.\nnew versions are automatically published to pypi when merging to `main`.\n```console\ninvoke version-bump\n```\n\na new docker tag will also be generated and pushed to [docker hub](https://hub.docker.com/r/greatexpectations/agent).\n\n#### building and running the gx agent image\n\nto build the gx agent docker image, run the following in the root dir:\n\n```\ninvoke build\n```\n\nrunning the gx agent:\n\n```\ndocker run --env gx_cloud_access_token=\"<gx_token>\" --env gx_cloud_organization_id=\"<gx_org_id>\" gx/agent\n```\n\nnow go into gx cloud and issue commands for the gx agent to run, such as generating an expectation suite for a data source.\n\n> note if you are pushing out a new image update the image tag version in `containerize-agent.yaml`. the image will be built and pushed out via github actions.\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "proprietary",
  "name": "great-expectations-cloud",
  "package_url": "https://pypi.org/project/great-expectations-cloud/",
  "project_url": "https://pypi.org/project/great-expectations-cloud/",
  "project_urls": {
    "Homepage": "https://greatexpectations.io",
    "Repository": "https://github.com/great-expectations/cloud"
  },
  "release_url": "https://pypi.org/project/great-expectations-cloud/0.0.15/",
  "requires_dist": [
    "great-expectations",
    "orjson (>=3.9.7,<4.0.0,!=3.9.10)",
    "pika (>=1.3.1,<2.0.0)",
    "pydantic (<3)"
  ],
  "requires_python": ">=3.8,<3.12",
  "summary": "great expectations cloud",
  "version": "0.0.15",
  "releases": [],
  "developers": [
    "team@greatexpectations.io",
    "the_great_expectations_team"
  ],
  "kwds": "expectations_cloud great_expectations_cloud workflows yaml great_expectations",
  "license_kwds": "proprietary",
  "libtype": "pypi",
  "id": "pypi_great_expectations_cloud",
  "homepage": "https://greatexpectations.io",
  "release_count": 26,
  "dependency_ids": [
    "pypi_great_expectations",
    "pypi_orjson",
    "pypi_pika",
    "pypi_pydantic"
  ]
}
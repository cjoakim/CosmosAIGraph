{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries"
  ],
  "description": "# knock python library\n\nknock api access for applications written in python.\n\n## documentation\n\nsee the [documentation](https://docs.knock.app) for python usage examples.\n\n## installation\n\nto install from pypi, run the following:\n\n```bash\npip install knockapi\n```\n\nto install from source, clone the repo and run the following:\n\n```bash\npython setup.py install\n```\n\n## configuration\n\nto use the library you must provide a secret api key, provided in the knock dashboard.\n\n```python\nfrom knockapi import knock\nclient = knock(api_key=\"sk_12345\")\n```\n\n## usage\n\n### identifying users\n\n```python\nfrom knockapi import knock\nclient = knock(api_key=\"sk_12345\")\n\nclient.users.identify(id=\"jhammond\", data={\"name\": \"john hammond\", \"email\": \"jhammond@ingen.net\"})\n```\n\n## retrieving users\n\n```python\nfrom knockapi import knock\nclient = knock(api_key=\"sk_12345\")\n\nclient.users.get_user(id=\"jhammond\")\n```\n\n### sending notifies\n\n```python\nfrom knockapi import knock\nclient = knock(api_key=\"sk_12345\")\n\nclient.notify(\n  key=\"dinosaurs-loose\",\n  actor=\"dnedry\",\n  recipients=[\"jhammond\", \"agrant\", \"imalcolm\", \"esattler\"],\n  cancellation_key=alert.id,\n  tenant=\"jurassic-park\",\n  data={\n    \"type\": \"trex\",\n    \"priority\": 1\n  }\n)\n\n```\n\n### getting and setting channel data\n\n```python\nfrom knockapi import knock\nclient = knock(api_key=\"sk_12345\")\n\n# set channel data for an apns\nclient.users.set_channel_data(\n  id=\"jhammond\",\n  channel_id=knock_apns_channel_id,\n  channel_data={\n    \"tokens\": [apns_token]\n  }\n)\n\n# get channel data for the apns channel\nclient.users.get_channel_data(id=\"jhammond\", channel_id=knock_apns_channel_id)\n```\n\n### canceling notifies\n\n```python\nfrom knockapi import knock\nclient = knock(api_key=\"sk_12345\")\n\nclient.workflows.cancel(\n  key=\"dinosaurs-loose\",\n  cancellation_key=alert.id,\n  recipients=[\"jhammond\", \"agrant\", \"imalcolm\", \"esattler\"],\n)\n```\n\n### user preferences\n\n```python\nfrom knockapi import knock\nclient = knock(api_key=\"sk_12345\")\n\n# replaces the preferences for the user\nclient.users.set_preferences(\n  user_id=\"jhammond\",\n  channel_types={'email': true},\n  workflows={'dinosaurs-loose': false}\n)\n\n# retrieve the current preferences\nclient.users.get_preferences(user_id=\"jhammond\")\n```\n\n### signing jwts\n\nyou can use the `pyjwt` package to [sign jwts easily](https://pyjwt.readthedocs.io/en/stable/usage.html#encoding-decoding-tokens-with-rs256-rsa).\nyou will need to generate an environment specific signing key, which you can find in the knock dashboard.\n\nif you're using a signing token you will need to pass this to your client to perform authentication.\nyou can read more about [client-side authentication here](https://docs.knock.app/client-integration/authenticating-users).\n\n```python\nimport jwt\nimport os\n\nprivate_key = os.getenv(\"knock_signing_key\")\nencoded = jwt.encode({\"sub\": \"jhammond\"}, private_key, algorithm=\"rs256\")\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "knockapi",
  "package_url": "https://pypi.org/project/knockapi/",
  "project_url": "https://pypi.org/project/knockapi/",
  "project_urls": {
    "Homepage": "https://github.com/knocklabs/knock-python"
  },
  "release_url": "https://pypi.org/project/knockapi/0.5.8/",
  "requires_dist": [
    "requests",
    "bump2version ; extra == 'dev'"
  ],
  "requires_python": ">=2.7.16, <4",
  "summary": "client library for the knock api",
  "version": "0.5.8",
  "releases": [],
  "developers": [
    "knock_labs",
    "support@knock.app"
  ],
  "kwds": "knock_signing_key api_key knockapi knock_apns_channel_id api",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_knockapi",
  "homepage": "https://github.com/knocklabs/knock-python",
  "release_count": 21,
  "dependency_ids": [
    "pypi_bump2version",
    "pypi_requests"
  ]
}
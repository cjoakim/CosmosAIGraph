{
  "classifiers": [
    "development status :: 2 - pre-alpha",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# idf-build-apps\n\n[![documentation status](https://readthedocs.com/projects/espressif-idf-build-apps/badge/?version=latest)](https://espressif-docs.readthedocs-hosted.com/projects/idf-build-apps/en/latest/)\n[![pypi_package_version](https://img.shields.io/pypi/v/idf-build-apps)](https://pypi.org/project/idf_build_apps/)\n[![supported_python_versions](https://img.shields.io/pypi/pyversions/idf-build-apps)](https://pypi.org/project/idf_build_apps/)\n\n`idf-build-apps` is a tool that helps users find and build [esp-idf][esp-idf] projects faster.\n\n## what is an `app`?\n\nan [esp-idf][esp-idf] project would typically contain:\n\n- build recipe in cmake and the main component with app sources\n- (optional) one or more [sdkconfig][sdkconfig] files\n\n`app` is the abbreviation for application. an application is the binary that is being built with the specified [sdkconfig][sdkconfig] and the target chip. `idf-build-apps` could build one project into a number of applications.\n\n## installation\n\n```shell\npip install idf-build-apps\n```\n\nor `pipx`\n\n```shell\npipx install idf-build-apps\n```\n\n## basic usage\n\n`idf-build-apps` is a callable python package, and an executable script with the same name would also be installed. it contains two sub-commands.\n\n- `find` to find the buildable applications\n- `build` to build the found applications\n\nfor detailed explanation to all cli options, you may run\n\n```shell\nidf-build-apps -h\nidf-build-apps find -h\nidf-build-apps build -h\n```\n\n## quick example\n\nto build the applications for all targets of the [esp-idf hello world example project][hello-world] under esp-idf v5.0:\n\n```shell\nidf-build-apps build -p $idf_path/examples/get-started/hello_world/ --target all --build-dir build_@t\n```\n\nit would get the default [supported targets][supported-targets] from your idf version, build the [hello world project][hello-world] with all targets and the default `sdkconfig` file.\n\npartial build log:\n\n```text\n2023-02-22 12:14:58 info found 5 apps in total\n2023-02-22 12:14:58 info total 5 apps. running build for app 1-5\n2023-02-22 12:14:58 info building the following apps:\n2023-02-22 12:14:58 info   (cmake) app /tmp/test/esp/esp-idf/examples/get-started/hello_world/, target esp32, sdkconfig (default), build in /tmp/test/esp/esp-idf/examples/get-started/hello_world/build_esp32 (preserve: true)\n2023-02-22 12:14:58 info   (cmake) app /tmp/test/esp/esp-idf/examples/get-started/hello_world/, target esp32c2, sdkconfig (default), build in /tmp/test/esp/esp-idf/examples/get-started/hello_world/build_esp32c2 (preserve: true)\n2023-02-22 12:14:58 info   (cmake) app /tmp/test/esp/esp-idf/examples/get-started/hello_world/, target esp32c3, sdkconfig (default), build in /tmp/test/esp/esp-idf/examples/get-started/hello_world/build_esp32c3 (preserve: true)\n2023-02-22 12:14:58 info   (cmake) app /tmp/test/esp/esp-idf/examples/get-started/hello_world/, target esp32s2, sdkconfig (default), build in /tmp/test/esp/esp-idf/examples/get-started/hello_world/build_esp32s2 (preserve: true)\n2023-02-22 12:14:58 info   (cmake) app /tmp/test/esp/esp-idf/examples/get-started/hello_world/, target esp32s3, sdkconfig (default), build in /tmp/test/esp/esp-idf/examples/get-started/hello_world/build_esp32s3 (preserve: true)\n```\n\nfor detailed information, please refer to [our documentation site][doc]!\n\n## contributing\n\nthanks for your contribution! please refer to our [contributing guide](contributing.md)\n\n[esp-idf]: https://github.com/espressif/esp-idf\n[sdkconfig]: https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/kconfig.html\n[hello-world]: https://github.com/espressif/esp-idf/tree/master/examples/get-started/hello_world\n[supported-targets]: https://github.com/espressif/esp-idf/tree/v5.0#esp-idf-release-and-soc-compatibility\n[doc]: https://docs.espressif.com/projects/idf-build-apps/en/latest/\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "idf-build-apps",
  "package_url": "https://pypi.org/project/idf-build-apps/",
  "project_url": "https://pypi.org/project/idf-build-apps/",
  "project_urls": {
    "changelog": "https://github.com/espressif/idf-build-apps/blob/master/CHANGELOG.md",
    "documentation": "https://docs.espressif.com/projects/idf-build-apps",
    "homepage": "https://github.com/espressif/idf-build-apps",
    "repository": "https://github.com/espressif/idf-build-apps"
  },
  "release_url": "https://pypi.org/project/idf-build-apps/1.1.3/",
  "requires_dist": [
    "pathlib; python_version < '3.4'",
    "glob2; python_version < '3.5'",
    "pyparsing",
    "pyyaml>=5.3; python_version >= '3.5'",
    "pyyaml<5.3; python_version < '3.5'",
    "packaging",
    "toml; python_version < '3.11'",
    "sphinx ; extra == \"doc\"",
    "sphinx-rtd-theme ; extra == \"doc\"",
    "sphinx_copybutton ; extra == \"doc\"",
    "myst-parser ; extra == \"doc\"",
    "sphinxcontrib-mermaid ; extra == \"doc\"",
    "pytest ; extra == \"test\"",
    "pytest-cov ; extra == \"test\""
  ],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
  "summary": "tools for building esp-idf related apps.",
  "version": "1.1.3",
  "releases": [],
  "developers": [
    "fuhanxi@espressif.com"
  ],
  "kwds": "idf_build_apps idf_path build_esp32 idf build_",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_idf_build_apps",
  "homepage": "",
  "release_count": 39,
  "dependency_ids": [
    "pypi_glob2",
    "pypi_myst_parser",
    "pypi_packaging",
    "pypi_pathlib",
    "pypi_pyparsing",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pyyaml",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_sphinx_copybutton",
    "pypi_sphinxcontrib_mermaid",
    "pypi_toml"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development",
    "topic :: software development :: libraries :: java libraries",
    "topic :: utilities",
    "typing :: typed"
  ],
  "description": ".. image:: http://www.repostatus.org/badges/latest/active.svg\n    :target: http://www.repostatus.org/#active\n    :alt: project status: active - the project has reached a stable, usable\n          state and is being actively developed.\n\n.. image:: https://github.com/jwodder/javaproperties/workflows/test/badge.svg?branch=master\n    :target: https://github.com/jwodder/javaproperties/actions?workflow=test\n    :alt: ci status\n\n.. image:: https://codecov.io/gh/jwodder/javaproperties/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/jwodder/javaproperties\n\n.. image:: https://img.shields.io/pypi/pyversions/javaproperties.svg\n    :target: https://pypi.org/project/javaproperties\n\n.. image:: https://img.shields.io/github/license/jwodder/javaproperties.svg?maxage=2592000\n    :target: https://opensource.org/licenses/mit\n    :alt: mit license\n\n`github <https://github.com/jwodder/javaproperties>`_\n| `pypi <https://pypi.org/project/javaproperties>`_\n| `documentation <https://javaproperties.readthedocs.io>`_\n| `issues <https://github.com/jwodder/javaproperties/issues>`_\n| `changelog <https://github.com/jwodder/javaproperties/blob/master/changelog.md>`_\n\n``javaproperties`` provides support for reading & writing |properties|_ (both\nthe simple line-oriented format and xml) with a simple api based on the\n``json`` module \u2014 though, for recovering java addicts, it also includes a\n``properties`` class intended to match the behavior of |propclass|_ as much as\nis pythonically possible.\n\nprevious versions of ``javaproperties`` included command-line programs for\nbasic manipulation of ``.properties`` files.  as of version 0.4.0, these\nprograms have been split off into a separate package, |clipkg|_.\n\n\ninstallation\n============\n``javaproperties`` requires python 3.6 or higher.  just use `pip\n<https://pip.pypa.io>`_ for python 3 (you have pip, right?) to install it::\n\n    python3 -m pip install javaproperties\n\n\nexamples\n========\n\ndump some keys & values (output order not guaranteed):\n\n>>> properties = {\"key\": \"value\", \"host:port\": \"127.0.0.1:80\", \"snowman\": \"\u2603\", \"goat\": \"\ud83d\udc10\"}\n>>> print(javaproperties.dumps(properties))\n#mon sep 26 14:57:44 edt 2016\nkey=value\ngoat=\\ud83d\\udc10\nhost\\:port=127.0.0.1\\:80\nsnowman=\\u2603\n\nload some keys & values:\n\n>>> javaproperties.loads('''\n... #mon sep 26 14:57:44 edt 2016\n... key = value\n... goat: \\\\ud83d\\\\udc10\n... host\\\\:port=127.0.0.1:80\n... #foo = bar\n... snowman   \u2603\n... ''')\n{'goat': '\ud83d\udc10', 'host:port': '127.0.0.1:80', 'key': 'value', 'snowman': '\u2603'}\n\ndump some properties to a file and read them back in again:\n\n>>> with open('example.properties', 'w', encoding='latin-1') as fp:\n...     javaproperties.dump(properties, fp)\n...\n>>> with open('example.properties', 'r', encoding='latin-1') as fp:\n...     javaproperties.load(fp)\n...\n{'goat': '\ud83d\udc10', 'host:port': '127.0.0.1:80', 'key': 'value', 'snowman': '\u2603'}\n\nsort the properties you're dumping:\n\n>>> print(javaproperties.dumps(properties, sort_keys=true))\n#mon sep 26 14:57:44 edt 2016\ngoat=\\ud83d\\udc10\nhost\\:port=127.0.0.1\\:80\nkey=value\nsnowman=\\u2603\n\nturn off the timestamp:\n\n>>> print(javaproperties.dumps(properties, timestamp=none))\nkey=value\ngoat=\\ud83d\\udc10\nhost\\:port=127.0.0.1\\:80\nsnowman=\\u2603\n\nuse your own timestamp (automatically converted to local time):\n\n>>> print(javaproperties.dumps(properties, timestamp=1234567890))\n#fri feb 13 18:31:30 est 2009\nkey=value\ngoat=\\ud83d\\udc10\nhost\\:port=127.0.0.1\\:80\nsnowman=\\u2603\n\ndump as xml:\n\n>>> print(javaproperties.dumps_xml(properties))\n<!doctype properties system \"http://java.sun.com/dtd/properties.dtd\">\n<properties>\n<entry key=\"key\">value</entry>\n<entry key=\"goat\">\ud83d\udc10</entry>\n<entry key=\"host:port\">127.0.0.1:80</entry>\n<entry key=\"snowman\">\u2603</entry>\n</properties>\n\nnew in v0.6.0: dump unicode characters as-is instead of escaping them:\n\n>>> print(javaproperties.dumps(properties, ensure_ascii=false))\n#tue feb 25 19:13:27 est 2020\nkey=value\ngoat=\ud83d\udc10\nhost\\:port=127.0.0.1\\:80\nsnowman=\u2603\n\n`and more! <https://javaproperties.readthedocs.io>`_\n\n\n.. |properties| replace:: java ``.properties`` files\n.. _properties: https://en.wikipedia.org/wiki/.properties\n\n.. |propclass| replace:: java 8's ``java.util.properties``\n.. _propclass: https://docs.oracle.com/javase/8/docs/api/java/util/properties.html\n\n.. |clipkg| replace:: ``javaproperties-cli``\n.. _clipkg: https://github.com/jwodder/javaproperties-cli\n\n\n",
  "docs_url": null,
  "keywords": "java,properties,javaproperties,configfile,config,configuration",
  "license": "mit",
  "name": "javaproperties",
  "package_url": "https://pypi.org/project/javaproperties/",
  "project_url": "https://pypi.org/project/javaproperties/",
  "project_urls": {
    "Bug Tracker": "https://github.com/jwodder/javaproperties/issues",
    "Documentation": "https://javaproperties.readthedocs.io",
    "Homepage": "https://github.com/jwodder/javaproperties",
    "Source Code": "https://github.com/jwodder/javaproperties"
  },
  "release_url": "https://pypi.org/project/javaproperties/0.8.1/",
  "requires_dist": [],
  "requires_python": "~=3.6",
  "summary": "read & write java .properties files",
  "version": "0.8.1",
  "releases": [],
  "developers": [
    "javaproperties@varonathe.org",
    "john_thorvald_wodder_ii"
  ],
  "kwds": "javaproperties javase badge badges status",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_javaproperties",
  "homepage": "https://github.com/jwodder/javaproperties",
  "release_count": 12,
  "dependency_ids": []
}
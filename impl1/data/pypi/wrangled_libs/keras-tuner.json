{
  "classifiers": [
    "intended audience :: science/research",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "# kerastuner\n\n[![](https://github.com/keras-team/keras-tuner/workflows/tests/badge.svg?branch=master)](https://github.com/keras-team/keras-tuner/actions?query=workflow%3atests+branch%3amaster)\n[![codecov](https://codecov.io/gh/keras-team/keras-tuner/branch/master/graph/badge.svg)](https://codecov.io/gh/keras-team/keras-tuner)\n[![pypi version](https://badge.fury.io/py/keras-tuner.svg)](https://badge.fury.io/py/keras-tuner)\n\nkerastuner is an easy-to-use, scalable hyperparameter optimization framework\nthat solves the pain points of hyperparameter search. easily configure your\nsearch space with a define-by-run syntax, then leverage one of the available\nsearch algorithms to find the best hyperparameter values for your models.\nkerastuner comes with bayesian optimization, hyperband, and random search algorithms\nbuilt-in, and is also designed to be easy for researchers to extend in order to\nexperiment with new search algorithms.\n\nofficial website: [https://keras.io/keras_tuner/](https://keras.io/keras_tuner/)\n\n## quick links\n\n* [getting started with kerastuner](https://keras.io/guides/keras_tuner/getting_started)\n* [kerastuner developer guides](https://keras.io/guides/keras_tuner/)\n* [kerastuner api reference](https://keras.io/api/keras_tuner/)\n\n\n## installation\n\nkerastuner requires **python 3.8+** and **tensorflow 2.0+**.\n\ninstall the latest release:\n\n```\npip install keras-tuner\n```\n\nyou can also check out other versions in our\n[github repository](https://github.com/keras-team/keras-tuner).\n\n\n## quick introduction\n\nimport kerastuner and tensorflow:\n\n```python\nimport keras_tuner\nfrom tensorflow import keras\n```\n\nwrite a function that creates and returns a keras model.\nuse the `hp` argument to define the hyperparameters during model creation.\n\n```python\ndef build_model(hp):\n  model = keras.sequential()\n  model.add(keras.layers.dense(\n      hp.choice('units', [8, 16, 32]),\n      activation='relu'))\n  model.add(keras.layers.dense(1, activation='relu'))\n  model.compile(loss='mse')\n  return model\n```\n\ninitialize a tuner (here, `randomsearch`).\nwe use `objective` to specify the objective to select the best models,\nand we use `max_trials` to specify the number of different models to try.\n\n```python\ntuner = keras_tuner.randomsearch(\n    build_model,\n    objective='val_loss',\n    max_trials=5)\n```\n\nstart the search and get the best model:\n\n```python\ntuner.search(x_train, y_train, epochs=5, validation_data=(x_val, y_val))\nbest_model = tuner.get_best_models()[0]\n```\n\nto learn more about kerastuner, check out [this starter guide](https://keras.io/guides/keras_tuner/getting_started/).\n\n## contributing guide\n\nplease refer to the [contributing.md](https://github.com/keras-team/keras-tuner/blob/master/contributing.md) for the contributing guide.\n\nthank all the contributors!\n\n[![the contributors](https://raw.githubusercontent.com/keras-team/keras-tuner/master/docs/contributors.svg)](https://github.com/keras-team/keras-tuner/graphs/contributors)\n\n## community\n\nask your questions on our [github discussions](https://github.com/keras-team/keras-tuner/discussions).\n\n## citing kerastuner\n\nif kerastuner helps your research, we appreciate your citations.\nhere is the bibtex entry:\n\n```bibtex\n@misc{omalley2019kerastuner,\n\ttitle        = {kerastuner},\n\tauthor       = {o'malley, tom and bursztein, elie and long, james and chollet, fran\\c{c}ois and jin, haifeng and invernizzi, luca and others},\n\tyear         = 2019,\n\thowpublished = {\\url{https://github.com/keras-team/keras-tuner}}\n}\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "keras-tuner",
  "package_url": "https://pypi.org/project/keras-tuner/",
  "project_url": "https://pypi.org/project/keras-tuner/",
  "project_urls": {
    "Homepage": "https://github.com/keras-team/keras-tuner"
  },
  "release_url": "https://pypi.org/project/keras-tuner/1.4.6/",
  "requires_dist": [
    "keras",
    "packaging",
    "requests",
    "kt-legacy",
    "scikit-learn ; extra == 'bayesian'",
    "scipy ; extra == 'bayesian'",
    "tensorflow-cpu ; extra == 'build'",
    "namex ; extra == 'build'",
    "build ; extra == 'build'",
    "tensorflow >=2.0 ; extra == 'tensorflow'",
    "tensorflow-cpu >=2.0 ; extra == 'tensorflow-cpu'",
    "black ; extra == 'tests'",
    "flake8 ; extra == 'tests'",
    "isort ; extra == 'tests'",
    "ipython ; extra == 'tests'",
    "pandas ; extra == 'tests'",
    "portpicker ; extra == 'tests'",
    "pytest ; extra == 'tests'",
    "pytest-cov ; extra == 'tests'",
    "pytest-xdist ; extra == 'tests'",
    "namex ; extra == 'tests'",
    "scikit-learn ; extra == 'tests'",
    "scipy ; extra == 'tests'"
  ],
  "requires_python": "",
  "summary": "a hyperparameter tuning library for keras",
  "version": "1.4.6",
  "releases": [],
  "developers": [
    "the_kerastuner_authors"
  ],
  "kwds": "keras_tuner keras kerastuner hyperparameter tensorflow",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_keras_tuner",
  "homepage": "https://github.com/keras-team/keras-tuner",
  "release_count": 34,
  "dependency_ids": [
    "pypi_black",
    "pypi_build",
    "pypi_flake8",
    "pypi_ipython",
    "pypi_isort",
    "pypi_keras",
    "pypi_kt_legacy",
    "pypi_namex",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_portpicker",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_xdist",
    "pypi_requests",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_tensorflow",
    "pypi_tensorflow_cpu"
  ]
}
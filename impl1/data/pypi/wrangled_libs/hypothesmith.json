{
  "classifiers": [
    "development status :: 4 - beta",
    "framework :: hypothesis",
    "intended audience :: developers",
    "license :: osi approved :: mozilla public license 2.0 (mpl 2.0)",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: testing"
  ],
  "description": "# hypothesmith\nhypothesis strategies for generating python programs, something like csmith.\n\nthis is definitely pre-alpha, but if you want to play with it feel free!\nyou can even keep the shiny pieces when - not if - it breaks.\n\nget it today with [`pip install hypothesmith`](https://pypi.org/project/hypothesmith/),\nor by cloning [the github repo](https://github.com/zac-hd/hypothesmith).\n\nyou can run the tests, such as they are, with `tox` on python 3.6 or later.\nuse `tox -va` to see what environments are available.\n\n## usage\nthis package provides two hypothesis strategies for generating python source code.\n\nthe generated code will always be syntatically valid, and is useful for testing\nparsers, linters, auto-formatters, and other tools that operate on source code.\n\n> do not execute code generated by these strategies.\n>\n> it could do literally anything that running python code is able to do,\n> including changing, deleting, or uploading important data.  arbitrary\n> code can be useful, but \"arbitrary code execution\" can be very, very bad.\n\n#### `hypothesmith.from_grammar(start=\"file_input\", *, auto_target=true)`\n\ngenerates syntactically-valid python source code based on the grammar.\n\nvalid values for ``start`` are ``\"single_input\"``, ``\"file_input\"``, or\n``\"eval_input\"``; respectively a single interactive statement, a module or\nsequence of commands read from a file, and input for the eval() function.\n\nif ``auto_target`` is ``true``, this strategy uses ``hypothesis.target()``\ninternally to drive towards larger and more complex examples.  we recommend\nleaving this enabled, as the grammar is quite complex and only simple examples\ntend to be generated otherwise.\n\n#### `hypothesmith.from_node(node=libcst.module, *, auto_target=true)`\n\ngenerates syntactically-valid python source code based on the node types\ndefined by the [`libcst`](https://libcst.readthedocs.io/en/latest/) project.\n\nyou can pass any subtype of `libcst.cstnode`.  alternatively, you can use\nhypothesis' built-in `from_type(node_type).map(lambda n: libcst.module([n]).code`,\nafter hypothesmith has registered the required strategies.  however, this does\nnot include automatic targeting and limitations of libcst may lead to invalid\ncode being generated.\n\n## notable bugs found with hypothesmith\n- [bpo-40661, a segfault in the new parser](https://bugs.python.org/issue40661),\n  was given maximum priority and blocked the planned release of cpython 3.9 beta1.\n- [bpo-38953](https://bugs.python.org/issue38953) `tokenize` -> `untokenize` roundtrip bugs.\n- [bpo-42218](https://bugs.python.org/issue42218) mishandled error case in new peg parser.\n- [`lib2to3` errors on \\r in comment](https://github.com/psf/black/issues/970)\n- [black fails on files ending in a backslash](https://github.com/psf/black/issues/1012)\n- [at least three round-trip bugs in libcst](https://github.com/instagram/libcst#acknowledgements)\n  ([search commits for \"hypothesis\"](https://github.com/instagram/libcst/search?q=fix+hypothesis&type=commits))\n- [invalid code generated by libcst](https://github.com/instagram/libcst/issues/287)\n\n### changelog\n\npatch notes [can be found in `changelog.md`](https://github.com/zac-hd/hypothesmith/blob/master/changelog.md).\n",
  "docs_url": null,
  "keywords": "python testing fuzzing property-based-testing",
  "license": "mpl 2.0",
  "name": "hypothesmith",
  "package_url": "https://pypi.org/project/hypothesmith/",
  "project_url": "https://pypi.org/project/hypothesmith/",
  "project_urls": {
    "Funding": "https://github.com/sponsors/Zac-HD",
    "Homepage": "https://github.com/Zac-HD/hypothesmith"
  },
  "release_url": "https://pypi.org/project/hypothesmith/0.3.1/",
  "requires_dist": [
    "hypothesis[lark] >=6.84.1",
    "libcst >=1.0.1"
  ],
  "requires_python": ">=3.8",
  "summary": "hypothesis strategies for generating python programs, something like csmith",
  "version": "0.3.1",
  "releases": [],
  "developers": [
    "zac@hypothesis.works",
    "zac_hatfield"
  ],
  "kwds": "fuzzing python pip testing tests",
  "license_kwds": "mpl 2.0",
  "libtype": "pypi",
  "id": "pypi_hypothesmith",
  "homepage": "https://github.com/zac-hd/hypothesmith",
  "release_count": 24,
  "dependency_ids": [
    "pypi_hypothesis",
    "pypi_libcst"
  ]
}
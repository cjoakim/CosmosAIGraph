{
  "classifiers": [
    "development status :: 4 - beta",
    "framework :: asyncio",
    "license :: osi approved :: mit license",
    "operating system :: android",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows :: windows 10",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "=====\nbleak\n=====\n\n.. figure:: https://raw.githubusercontent.com/hbldh/bleak/master/bleak_logo.png\n    :target: https://github.com/hbldh/bleak\n    :alt: bleak logo\n    :scale: 50%\n\n\n.. image:: https://github.com/hbldh/bleak/workflows/build%20and%20test/badge.svg\n    :target: https://github.com/hbldh/bleak/actions?query=workflow%3a%22build+and+test%22\n    :alt: build and test\n\n.. image:: https://img.shields.io/pypi/v/bleak.svg\n    :target: https://pypi.python.org/pypi/bleak\n\n.. image:: https://img.shields.io/pypi/dm/bleak.svg\n    :target: https://pypi.python.org/pypi/bleak\n    :alt: pypi - downloads\n\n.. image:: https://readthedocs.org/projects/bleak/badge/?version=latest\n    :target: https://bleak.readthedocs.io/en/latest/?badge=latest\n    :alt: documentation status\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\nbleak is an acronym for bluetooth low energy platform agnostic klient.\n\n* free software: mit license\n* documentation: https://bleak.readthedocs.io.\n\nbleak is a gatt client software, capable of connecting to ble devices\nacting as gatt servers. it is designed to provide a asynchronous,\ncross-platform python api to connect and communicate with e.g. sensors.\n\ninstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install bleak\n\nfeatures\n--------\n\n* supports windows 10, version 16299 (fall creators update) or greater\n* supports linux distributions with bluez >= 5.43\n* os x/macos support via core bluetooth api, from at least os x version 10.11\n* android backend compatible with python-for-android\n\nbleak supports reading, writing and getting notifications from\ngatt servers, as well as a function for discovering ble devices.\n\nusage\n-----\n\nto discover bluetooth devices that can be connected to:\n\n.. code-block:: python\n\n    import asyncio\n    from bleak import bleakscanner\n\n    async def main():\n        devices = await bleakscanner.discover()\n        for d in devices:\n            print(d)\n\n    asyncio.run(main())\n\n\nconnect to a bluetooth device and read its model number:\n\n.. code-block:: python\n\n    import asyncio\n    from bleak import bleakclient\n\n    address = \"24:71:89:cc:09:05\"\n    model_nbr_uuid = \"2a24\"\n\n    async def main(address):\n        async with bleakclient(address) as client:\n            model_number = await client.read_gatt_char(model_nbr_uuid)\n            print(\"model number: {0}\".format(\"\".join(map(chr, model_number))))\n\n    asyncio.run(main(address))\n\ndo not name your script ``bleak.py``! it will cause a circular import error.\n\nsee examples folder for more code, for instance example code for connecting to a\n`ti sensortag cc2650 <http://www.ti.com/ww/en/wireless_connectivity/sensortag/>`_\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "bleak",
  "package_url": "https://pypi.org/project/bleak/",
  "project_url": "https://pypi.org/project/bleak/",
  "project_urls": {
    "Changelog": "https://github.com/hbldh/bleak/blob/develop/CHANGELOG.rst",
    "Documentation": "https://bleak.readthedocs.io",
    "Homepage": "https://github.com/hbldh/bleak",
    "Issues": "https://github.com/hbldh/bleak/issues",
    "Support": "https://github.com/hbldh/bleak/discussions"
  },
  "release_url": "https://pypi.org/project/bleak/0.21.1/",
  "requires_dist": [
    "async-timeout (>=3.0.0,<5) ; python_version < \"3.11\"",
    "bleak-winrt (>=1.2.0,<2.0.0) ; platform_system == \"Windows\" and python_version < \"3.12\"",
    "dbus-fast (>=1.83.0,<3) ; platform_system == \"Linux\"",
    "pyobjc-core (>=9.2,<10.0) ; platform_system == \"Darwin\"",
    "pyobjc-framework-CoreBluetooth (>=9.2,<10.0) ; platform_system == \"Darwin\"",
    "pyobjc-framework-libdispatch (>=9.2,<10.0) ; platform_system == \"Darwin\"",
    "typing-extensions (>=4.7.0) ; python_version < \"3.12\"",
    "winrt-Windows.Devices.Bluetooth (==2.0.0b1) ; platform_system == \"Windows\" and python_version >= \"3.12\"",
    "winrt-Windows.Devices.Bluetooth.Advertisement (==2.0.0b1) ; platform_system == \"Windows\" and python_version >= \"3.12\"",
    "winrt-Windows.Devices.Bluetooth.GenericAttributeProfile (==2.0.0b1) ; platform_system == \"Windows\" and python_version >= \"3.12\"",
    "winrt-Windows.Devices.Enumeration (==2.0.0b1) ; platform_system == \"Windows\" and python_version >= \"3.12\"",
    "winrt-Windows.Foundation (==2.0.0b1) ; platform_system == \"Windows\" and python_version >= \"3.12\"",
    "winrt-Windows.Foundation.Collections (==2.0.0b1) ; platform_system == \"Windows\" and python_version >= \"3.12\"",
    "winrt-Windows.Storage.Streams (==2.0.0b1) ; platform_system == \"Windows\" and python_version >= \"3.12\""
  ],
  "requires_python": ">=3.8,<3.13",
  "summary": "bluetooth low energy platform agnostic klient",
  "version": "0.21.1",
  "releases": [],
  "developers": [
    "henrik.blidh@nedomkull.com",
    "henrik_blidh"
  ],
  "kwds": "bleak_logo bleakclient bleak svg bleakscanner",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_bleak",
  "homepage": "https://github.com/hbldh/bleak",
  "release_count": 46,
  "dependency_ids": [
    "pypi_async_timeout",
    "pypi_bleak_winrt",
    "pypi_dbus_fast",
    "pypi_pyobjc_core",
    "pypi_pyobjc_framework_corebluetooth",
    "pypi_pyobjc_framework_libdispatch",
    "pypi_typing_extensions",
    "pypi_winrt_windows.devices.bluetooth",
    "pypi_winrt_windows.devices.bluetooth.advertisement",
    "pypi_winrt_windows.devices.bluetooth.genericattributeprofile",
    "pypi_winrt_windows.devices.enumeration",
    "pypi_winrt_windows.foundation",
    "pypi_winrt_windows.foundation.collections",
    "pypi_winrt_windows.storage.streams"
  ]
}
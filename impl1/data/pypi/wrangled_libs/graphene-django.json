{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "intended audience :: developers",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries"
  ],
  "description": "# ![graphene logo](http://graphene-python.org/favicon.png) graphene-django\n\n[![build][build-image]][build-url]\n[![pypi][pypi-image]][pypi-url]\n[![anaconda-server badge][conda-image]][conda-url]\n[![coveralls][coveralls-image]][coveralls-url]\n\n[build-image]: https://github.com/graphql-python/graphene-django/workflows/tests/badge.svg\n[build-url]: https://github.com/graphql-python/graphene-django/actions\n[pypi-image]: https://img.shields.io/pypi/v/graphene-django.svg?style=flat\n[pypi-url]: https://pypi.org/project/graphene-django/\n[coveralls-image]: https://coveralls.io/repos/github/graphql-python/graphene-django/badge.svg?branch=master\n[coveralls-url]: https://coveralls.io/github/graphql-python/graphene-django?branch=master\n[conda-image]: https://img.shields.io/conda/vn/conda-forge/graphene-django.svg\n[conda-url]: https://anaconda.org/conda-forge/graphene-django\n\ngraphene-django is an open-source library that provides seamless integration between django, a high-level python web framework, and graphene, a library for building graphql apis. the library allows developers to create graphql apis in django quickly and efficiently while maintaining a high level of performance.\n\n## features\n\n* seamless integration with django models\n* automatic generation of graphql schema\n* integration with django's authentication and permission system\n* easy querying and filtering of data\n* support for django's pagination system\n* compatible with django's form and validation system\n* extensive documentation and community support\n\n## installation\n\nto install graphene-django, run the following command:\n\n```\npip install graphene-django\n```\n\n## configuration\n\nafter installation, add 'graphene_django' to your django project's `installed_apps` list and define the graphql schema in your project's settings:\n\n```python\ninstalled_apps = [\n    # ...\n    'graphene_django',\n]\n\ngraphene = {\n    'schema': 'myapp.schema.schema'\n}\n```\n\n## usage\n\nto use graphene-django, create a `schema.py` file in your django app directory and define your graphql types and queries:\n\n```python\nimport graphene\nfrom graphene_django import djangoobjecttype\nfrom .models import mymodel\n\nclass mymodeltype(djangoobjecttype):\n    class meta:\n        model = mymodel\n\nclass query(graphene.objecttype):\n    mymodels = graphene.list(mymodeltype)\n\n    def resolve_mymodels(self, info, **kwargs):\n        return mymodel.objects.all()\n\nschema = graphene.schema(query=query)\n```\n\nthen, expose the graphql api in your django project's `urls.py` file:\n\n```python\nfrom django.urls import path\nfrom graphene_django.views import graphqlview\nfrom . import schema\n\nurlpatterns = [\n    # ...\n    path('graphql/', graphqlview.as_view(graphiql=true)), # given that schema path is defined in graphene['schema'] in your settings.py\n]\n```\n\n## testing\n\ngraphene-django provides support for testing graphql apis using django's test client. to create tests, create a `tests.py` file in your django app directory and write your test cases:\n\n```python\nfrom django.test import testcase\nfrom graphene_django.utils.testing import graphqltestcase\nfrom . import schema\n\nclass mymodelapitestcase(graphqltestcase):\n    graphene_schema = schema.schema\n\n    def test_query_all_mymodels(self):\n        response = self.query(\n            '''\n            query {\n                mymodels {\n                    id\n                    name\n                }\n            }\n            '''\n        )\n\n        self.assertresponsenoerrors(response)\n        self.assertequal(len(response.data['mymodels']), mymodel.objects.count())\n```\n\n## contributing\n\ncontributions to graphene-django are always welcome! to get started, check the repository's [issue tracker](https://github.com/graphql-python/graphene-django/issues) and [contribution guidelines](https://github.com/graphql-python/graphene-django/blob/master/contributing.md).\n\n## license\n\ngraphene-django is released under the [mit license](https://github.com/graphql-python/graphene-django/blob/master/license).\n\n## resources\n\n* [official github repository](https://github.com/graphql-python/graphene-django)\n* [graphene documentation](http://docs.graphene-python.org/en/latest/)\n* [django documentation](https://docs.djangoproject.com/en/stable/)\n* [graphql specification](https://spec.graphql.org/)\n* [graphiql](https://github.com/graphql/graphiql) - an in-browser ide for exploring graphql apis\n* [graphene-django community](https://spectrum.chat/graphene) - join the community to discuss questions and share ideas related to graphene-django\n\n## tutorials and examples\n\n* [official graphene-django tutorial](https://docs.graphene-python.org/projects/django/en/latest/tutorial-plain/)\n* [building a graphql api with django and graphene-django](https://www.howtographql.com/graphql-python/0-introduction/)\n* [real-world example: django, graphene, and relay](https://github.com/graphql-python/swapi-graphene)\n\n## related projects\n\n* [graphene](https://github.com/graphql-python/graphene) - a library for building graphql apis in python\n* [graphene-sqlalchemy](https://github.com/graphql-python/graphene-sqlalchemy) - integration between graphene and sqlalchemy, an object relational mapper (orm) for python\n* [graphene-file-upload](https://github.com/lmcgartland/graphene-file-upload) - a package providing an upload scalar for handling file uploads in graphene\n* [graphene-subscriptions](https://github.com/graphql-python/graphene-subscriptions) - a package for adding real-time subscriptions to graphene-based graphql apis\n\n## support\n\nif you encounter any issues or have questions regarding graphene-django, feel free to [submit an issue](https://github.com/graphql-python/graphene-django/issues/new) on the official github repository. you can also ask for help and share your experiences with the graphene-django community on [\ud83d\udcac discord](https://discord.gg/fftt273t79)\n\n## release notes\n\n* see [releases page on github](https://github.com/graphql-python/graphene-django/releases)\n",
  "docs_url": null,
  "keywords": "api graphql protocol rest relay graphene",
  "license": "mit",
  "name": "graphene-django",
  "package_url": "https://pypi.org/project/graphene-django/",
  "project_url": "https://pypi.org/project/graphene-django/",
  "project_urls": {
    "Homepage": "https://github.com/graphql-python/graphene-django"
  },
  "release_url": "https://pypi.org/project/graphene-django/3.2.0/",
  "requires_dist": [
    "graphene <4,>=3.0",
    "graphql-core <4,>=3.1.0",
    "graphql-relay <4,>=3.1.1",
    "Django >=3.2",
    "promise >=2.1",
    "text-unidecode",
    "ruff ==0.1.2 ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "pytest >=7.3.1 ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-random-order ; extra == 'dev'",
    "coveralls ; extra == 'dev'",
    "mock ; extra == 'dev'",
    "pytz ; extra == 'dev'",
    "django-filter >=22.1 ; extra == 'dev'",
    "pytest-django >=4.5.2 ; extra == 'dev'",
    "djangorestframework >=3.6.3 ; extra == 'dev'",
    "djangorestframework >=3.6.3 ; extra == 'rest_framework'",
    "pytest >=7.3.1 ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest-random-order ; extra == 'test'",
    "coveralls ; extra == 'test'",
    "mock ; extra == 'test'",
    "pytz ; extra == 'test'",
    "django-filter >=22.1 ; extra == 'test'",
    "pytest-django >=4.5.2 ; extra == 'test'",
    "djangorestframework >=3.6.3 ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "graphene django integration",
  "version": "3.2.0",
  "releases": [],
  "developers": [
    "me@syrusakbary.com",
    "syrus_akbary"
  ],
  "kwds": "graphene_django graphene_schema graphene graphiql graphql",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_graphene_django",
  "homepage": "https://github.com/graphql-python/graphene-django",
  "release_count": 65,
  "dependency_ids": [
    "pypi_coveralls",
    "pypi_django",
    "pypi_django_filter",
    "pypi_djangorestframework",
    "pypi_graphene",
    "pypi_graphql_core",
    "pypi_graphql_relay",
    "pypi_mock",
    "pypi_pre_commit",
    "pypi_promise",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_django",
    "pypi_pytest_random_order",
    "pypi_pytz",
    "pypi_ruff",
    "pypi_text_unidecode"
  ]
}
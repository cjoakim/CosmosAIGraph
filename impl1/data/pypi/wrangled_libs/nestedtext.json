{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "topic :: text processing :: markup",
    "topic :: utilities"
  ],
  "description": "nestedtext \u2014 a human friendly data format\n=========================================\n\n.. image:: https://pepy.tech/badge/nestedtext/month\n    :target: https://pepy.tech/project/nestedtext\n\n.. image:: https://img.shields.io/readthedocs/nestedtext.svg\n   :target: https://nestedtext.readthedocs.io/en/latest/?badge=latest\n\n..  image:: https://github.com/kenkundert/nestedtext/actions/workflows/build.yaml/badge.svg\n    :target: https://github.com/kenkundert/nestedtext/actions/workflows/build.yaml\n\n.. image:: https://coveralls.io/repos/github/kenkundert/nestedtext/badge.svg?branch=master\n    :target: https://coveralls.io/github/kenkundert/nestedtext?branch=master\n\n.. image:: https://img.shields.io/pypi/v/nestedtext.svg\n    :target: https://pypi.python.org/pypi/nestedtext\n\n.. image:: https://img.shields.io/pypi/pyversions/nestedtext.svg\n    :target: https://pypi.python.org/pypi/nestedtext\n\n\n| authors: ken & kale kundert\n| version: 3.6\n| released: 2023-05-30\n| documentation: `nestedtext.org <https://nestedtext.org>`_.\n| please post all questions, suggestions, and bug reports to: `github <https://github.com/kenkundert/nestedtext/issues>`_.\n|\n\n*nestedtext* is a file format for holding structured data.  it is similar in \nconcept to `json <https://en.wikipedia.org/wiki/json>`_, except that \n*nestedtext* is designed to make it easy for people to enter, edit, or view the \ndata directly.  it organizes the data into a nested collection of name-value \npairs, lists, and strings.  the syntax is intended to be very simple and \nintuitive for most people.\n\na unique feature of this file format is that it only supports one scalar type: \nstrings.\u00a0 as such, quoting strings is unnecessary, and without quoting there is \nno need for escaping.  while the decision to forego other types (integers, \nreals, dates, etc.) may seem counter productive, it leads to simpler data files \nand applications that are more robust.\n\n*nestedtext* is convenient for configuration files, address books, account \ninformation, and the like.  here is an example of a file that contains a few \naddresses:\n\n.. code-block:: nestedtext\n\n    # contact information for our officers\n\n    katheryn mcdaniel:\n        position: president\n        address:\n            > 138 almond street\n            > topeka, kansas 20697\n        phone:\n            cell: 1-210-555-5297\n            home: 1-210-555-8470\n                # katheryn prefers that we always call her on her cell phone.\n        email: katemcd@aol.com\n        additional roles:\n            - board member\n\n    margaret hodge:\n        position: vice president\n        address:\n            > 2586 marigold lane\n            > topeka, kansas 20682\n        phone: 1-470-555-0398\n        email: margaret.hodge@ku.edu\n        additional roles:\n            - new membership task force\n            - accounting task force\n\na strength of *nestedtext* is its lack of quoting and escaping, making it \nparticularly nice for holding code fragments.  here is another example of \n*nestedtext* that shows off this feature.  it holds some `parametrize from file \n<https://parametrize-from-file.readthedocs.io>`_ test cases for `pytest \n<https://docs.pytest.org>`_.  in this case a command line program is being \ntested and its response is checked using regular expressions::\n\n    -\n        cmd: emborg version\n        expected: emborg version: \\d+\\.\\d+(\\.\\d+(\\.?\\w+\\d+)?)?  \\(\\d\\d\\d\\d-\\d\\d-\\d\\d\\)\n        expected_type: regex\n    -\n        cmd: emborg --quiet list\n        expected: home-\\d\\d\\d\\d-\\d\\d-\\d\\dt\\d\\d:\\d\\d:\\d\\d\n        expected_type: regex\n    -\n        cmd: emborg --quiet borg list --glob-archives \"home-*\" --short @repo\n        expected: home-\\d\\d\\d\\d-\\d\\d-\\d\\dt\\d\\d:\\d\\d:\\d\\d\n        expected_type: regex\n    -\n        cmd: emborg --quiet files -d\n        expected:\n            > archive: home-\\d\\d\\d\\d-\\d\\d-\\d\\dt\\d\\d:\\d\\d:\\d\\d\n            > \\d\\d\\d\\d-\\d\\d-\\d\\dt\\d\\d:\\d\\d:\\d\\d.\\d\\d\\d\\d\\d\\d configs/subdir/(file|)\n            > \\d\\d\\d\\d-\\d\\d-\\d\\dt\\d\\d:\\d\\d:\\d\\d.\\d\\d\\d\\d\\d\\d configs/subdir/(file|)\n                # unfortunately, we cannot check the order as they were both \n                # created at the same time.\n        expected_type: regex\n    -\n        cmd: emborg due --backup-days 1 --message \"{elapsed} since last {action}\"\n        expected: home: (\\d+(\\.\\d)? (seconds|minutes)) since last backup\\.\n        expected_type: regex\n\none particularly attractive use-case for *nestedtext* is command line programs \nwhose output is meant to be consumed by either people or programs.  many \nprograms do so by supporting a ``--json`` command-line flag that indicates the \noutput should be computer readable rather than human readable.  but, with \n*nestedtext* it is not necessary to make people choose.  just output the result \nin *nestedtext* and it can be read by people or computers.  for example, \nconsider a program that reads your address list and output particular fields on \ndemand::\n\n    > address --email\n    katheryn mcdaniel: katemcd@aol.com\n    margaret hodge: margaret.hodge@ku.edu\n\nthis output could be fed directly into another program that accepts *nestedtext* \nas input::\n\n    > address --email | mail-to-list\n\n\ncontributing\n------------\n\nthis package contains a python reference implementation of *nestedtext* and \na test suite.  implementation in many languages is required for *nestedtext* to \ncatch on widely.  if you like the format, please consider contributing \nadditional implementations.\n\nalso, please consider using *nestedtext* for any applications you create.  it is \nespecially suitable for configuration files.\n\n",
  "docs_url": null,
  "keywords": "data,serialization,json,yaml",
  "license": "",
  "name": "nestedtext",
  "package_url": "https://pypi.org/project/nestedtext/",
  "project_url": "https://pypi.org/project/nestedtext/",
  "project_urls": {
    "changelog": "https://github.com/KenKundert/nestedtext/blob/master/doc/releases.rst",
    "documentation": "https://nestedtext.org",
    "homepage": "https://nestedtext.org",
    "repository": "https://github.com/kenkundert/nestedtext"
  },
  "release_url": "https://pypi.org/project/nestedtext/3.6/",
  "requires_dist": [
    "inform>=1.28"
  ],
  "requires_python": ">=3.6",
  "summary": "human readable and writable data interchange format",
  "version": "3.6",
  "releases": [],
  "developers": [
    "ken_kundert",
    "nestedtext@nurdletech.com"
  ],
  "kwds": "nestedtext nested yaml json badge",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_nestedtext",
  "homepage": "",
  "release_count": 17,
  "dependency_ids": [
    "pypi_inform"
  ]
}
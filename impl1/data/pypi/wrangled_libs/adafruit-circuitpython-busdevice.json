{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "topic :: software development :: embedded systems",
    "topic :: software development :: libraries",
    "topic :: system :: hardware"
  ],
  "description": "adafruit circuitpython busdevice\n================================\n\n.. image:: https://readthedocs.org/projects/adafruit-circuitpython-busdevice/badge/?version=latest\n    :target: https://docs.circuitpython.org/projects/busdevice/en/latest/\n    :alt: documentation status\n\n.. image:: https://raw.githubusercontent.com/adafruit/adafruit_circuitpython_bundle/main/badges/adafruit_discord.svg\n    :target: https://adafru.it/discord\n    :alt: discord\n\n.. image:: https://github.com/adafruit/adafruit_circuitpython_busdevice/workflows/build%20ci/badge.svg\n    :target: https://github.com/adafruit/adafruit_circuitpython_busdevice/actions/\n    :alt: build status\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n    :alt: code style: black\n\nthe ``i2cdevice`` and ``spidevice`` helper classes make managing transaction state\non a bus easy. for example, they manage locking the bus to prevent other\nconcurrent access. for spi devices, it manages the chip select and protocol\nchanges such as mode. for i2c, it manages the device address.\n\n.. _bus_device_installation:\n\n.. note:: on microcontroller boards using circuitpython v6.3.0 or newer, the firmware\n    may already have the ``adafruit_bus_device`` package builtin, thus there may be no\n    need to add this package to your circuitpy drive's \"lib\" directory. if both the\n    builtin and add-on ``adafruit_bus_device`` packages are present, then some\n    libraries that require this package *might* have problems importing it.\n\n    please check the `circuitpython documentation's \"module support matrix\"\n    <https://docs.circuitpython.org/en/latest/shared-bindings/support_matrix.html>`_\n    to make sure that your board's firmware does include the builtin ``adafruit_bus_device``\n    package.\n\non supported gnu/linux systems like the raspberry pi, you can install the driver locally `from\npypi <https://pypi.org/project/adafruit-circuitpython-busdevice/>`_. to install for current user:\n\n.. code-block:: shell\n\n    pip3 install adafruit-circuitpython-busdevice\n\nto install system-wide (this may be required in some cases):\n\n.. code-block:: shell\n\n    sudo pip3 install adafruit-circuitpython-busdevice\n\nto install in a virtual environment in your current project:\n\n.. code-block:: shell\n\n    mkdir project-name && cd project-name\n    python3 -m venv .venv\n    source .venv/bin/activate\n    pip3 install adafruit-circuitpython-busdevice\n\nusage example\n=============\n\nsee examples/read_register_i2c.py and examples/read_register_spi.py for examples of the module's usage.\n\ndocumentation\n=============\n\napi documentation for this library can be found on `read the docs <https://docs.circuitpython.org/projects/busdevice/en/latest/>`_.\n\nfor information on building library documentation, please check out `this guide <https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1>`_.\n\ncontributing\n============\n\ncontributions are welcome! please read our `code of conduct\n<https://github.com/adafruit/adafruit_circuitpython_busdevice/blob/main/code_of_conduct.md>`_\nbefore contributing to help this project stay welcoming.\n",
  "docs_url": null,
  "keywords": "adafruit,spi,i2c,bus,device,micropython,circuitpython",
  "license": "mit",
  "name": "adafruit-circuitpython-busdevice",
  "package_url": "https://pypi.org/project/adafruit-circuitpython-busdevice/",
  "project_url": "https://pypi.org/project/adafruit-circuitpython-busdevice/",
  "project_urls": {
    "Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_BusDevice"
  },
  "release_url": "https://pypi.org/project/adafruit-circuitpython-busdevice/5.2.6/",
  "requires_dist": [
    "Adafruit-Blinka (>=7.0.0)",
    "adafruit-circuitpython-typing"
  ],
  "requires_python": "",
  "summary": "circuitpython bus device classes to manage bus sharing.",
  "version": "5.2.6",
  "releases": [],
  "developers": [
    "circuitpython@adafruit.com"
  ],
  "kwds": "adafruit_circuitpython_busdevice adafruit_circuitpython_bundle adafruit_bus_device circuitpython adafruit_discord",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_adafruit_circuitpython_busdevice",
  "homepage": "",
  "release_count": 47,
  "dependency_ids": [
    "pypi_adafruit_blinka",
    "pypi_adafruit_circuitpython_typing"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.5"
  ],
  "description": "pandasschema\n************\n\nfor the full documentation, refer to the `github pages website\n<https://multimeric.github.io/pandasschema/>`_.\n\n======================================================================\n\npandasschema is a module for validating tabulated data, such as csvs\n(comma separated value files), and tsvs (tab separated value files).\nit uses the incredibly powerful data analysis tool pandas to do so\nquickly and efficiently.\n\nfor example, say your code expects a csv that looks a bit like this:\n\n.. code::\n\n   given name,family name,age,sex,customer id\n   gerald,hampton,82,male,2582gabk\n   yuuwa,miyake,27,male,7951wvlw\n   edyta,majewska,50,female,7758nsid\n\nnow you want to be able to ensure that the data in your csv is in the\ncorrect format:\n\n.. code:: python\n\n   import pandas as pd\n   from io import stringio\n   from pandas_schema import column, schema\n   from pandas_schema.validation import leadingwhitespacevalidation, trailingwhitespacevalidation, canconvertvalidation, matchespatternvalidation, inrangevalidation, inlistvalidation\n\n   schema = schema([\n       column('given name', [leadingwhitespacevalidation(), trailingwhitespacevalidation()]),\n       column('family name', [leadingwhitespacevalidation(), trailingwhitespacevalidation()]),\n       column('age', [inrangevalidation(0, 120)]),\n       column('sex', [inlistvalidation(['male', 'female', 'other'])]),\n       column('customer id', [matchespatternvalidation(r'\\d{4}[a-z]{4}')])\n   ])\n\n   test_data = pd.read_csv(stringio('''given name,family name,age,sex,customer id\n   gerald ,hampton,82,male,2582gabk\n   yuuwa,miyake,270,male,7951wvlw\n   edyta,majewska ,50,female,775ansid\n   '''))\n\n   errors = schema.validate(test_data)\n\n   for error in errors:\n       print(error)\n\npandasschema would then output\n\n.. code:: text\n\n   {row: 0, column: \"given name\"}: \"gerald \" contains trailing whitespace\n   {row: 1, column: \"age\"}: \"270\" was not in the range [0, 120)\n   {row: 1, column: \"sex\"}: \"male\" is not in the list of legal options (male, female, other)\n   {row: 2, column: \"family name\"}: \"majewska \" contains trailing whitespace\n   {row: 2, column: \"customer id\"}: \"775ansid\" does not match the pattern \"\\d{4}[a-z]{4}\"\n\n\n",
  "docs_url": null,
  "keywords": "pandas csv verification schema",
  "license": "mit",
  "name": "pandas-schema",
  "package_url": "https://pypi.org/project/pandas-schema/",
  "project_url": "https://pypi.org/project/pandas-schema/",
  "project_urls": {
    "Homepage": "https://github.com/TMiguelT/PandasSchema"
  },
  "release_url": "https://pypi.org/project/pandas-schema/0.3.6/",
  "requires_dist": [
    "numpy",
    "pandas (>=0.19)",
    "packaging"
  ],
  "requires_python": "",
  "summary": "a validation library for pandas data frames using user-friendly schemas",
  "version": "0.3.6",
  "releases": [],
  "developers": [
    "michael.r.milton@gmail.com",
    "michael_milton"
  ],
  "kwds": "pandasschema pandas_schema csv csvs read_csv",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pandas_schema",
  "homepage": "https://github.com/tmiguelt/pandasschema",
  "release_count": 10,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pandas"
  ]
}
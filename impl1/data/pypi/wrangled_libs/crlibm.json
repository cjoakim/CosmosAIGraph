{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: gnu lesser general public license v2 or later (lgplv2+)",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: c",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: implementation :: cpython",
    "topic :: scientific/engineering :: mathematics"
  ],
  "description": "pycrlibm - python bindings for crlibm\n=====================================\n\n.. container:: badges\n\n   .. image:: https://img.shields.io/travis/taschini/pycrlibm/master.svg?label=linux%20build\n      :target: https://travis-ci.org/taschini/pycrlibm\n      :alt: travis ci build status (linux)\n\n   .. image:: https://img.shields.io/appveyor/ci/taschini/pycrlibm/master.svg?label=windows%20build\n      :target: https://ci.appveyor.com/project/taschini/pycrlibm\n      :alt: appveyor ci build status (windows)\n\n   .. image:: https://img.shields.io/pypi/v/crlibm.svg\n      :target: https://pypi.python.org/pypi/crlibm/\n      :alt: latest pypi version\n\n   .. image:: https://readthedocs.org/projects/pycrlibm/badge/?version=latest\n      :target: http://pycrlibm.readthedocs.org/?badge=latest\n      :alt: documentation status\n\npython bindings for `crlibm\n<http://lipforge.ens-lyon.fr/www/crlibm>`_, an efficient and proven\ncorrectly-rounded mathematical library.\n\ncrlibm is a free mathematical library (libm) which provides:\n\n* implementations of the double-precision c99 standard elementary\n  functions,\n\n* correctly rounded in the four ieee-754 rounding modes,\n\n* with a comprehensive proof of both the algorithms used and their\n  implementation,\n\n* sufficiently efficient in average time, worst-case time, and\n  memory consumption to replace existing libms transparently.\n\ninstallation\n------------\n\nat the command line::\n\n    $ pip install crlibm\n\non microsoft windows ``pip`` will try first to download a binary\narchive in *wheel* format, and if no such a *wheel* can be found for\nyour python version, ``pip`` will try to compile the library.  in\norder to do so, it is strongly recommended to have `mingw-w64\n<http://mingw-w64.org>`_ installed under `msys2\n<https://msys2.github.io>`_, for instance by following the\ninstructions in `<http://stackoverflow.com/a/30071634>`_.\n\n\nusage\n-----\n\nin python::\n\n    >>> import crlibm\n    >>> crlibm.exp_ru(1)\n    2.7182818284590455\n\n    >>> crlibm.exp_rd(1)\n    2.718281828459045\n\nfeatures\n--------\n\n* this project provides the bindings for the functions in the following table:\n\n+----------------+------------------+------------------+--------------------+------------+\n| f(x)           | round to nearest | round up (to +\u221e) | round down (to -\u221e) | round to 0 |\n+----------------+------------------+------------------+--------------------+------------+\n|              **exponentials and logarithms**                                           |\n+----------------+------------------+------------------+--------------------+------------+\n| exp(x)         | exp_rn           | exp_ru           | exp_rd             | exp_rz     |\n+----------------+------------------+------------------+--------------------+------------+\n| exp(x)-1       | expm1_rn         | expm1_ru         | expm1_rd           | expm1_rz   |\n+----------------+------------------+------------------+--------------------+------------+\n| log(x)         | log_rn           | log_ru           | log_rd             | log_rz     |\n+----------------+------------------+------------------+--------------------+------------+\n| log(1+x)       | log1p_rn         | log1p_ru         | log1p_rd           | log1p_rz   |\n+----------------+------------------+------------------+--------------------+------------+\n| log(x)/log(2)  | log2_rn          | log2_ru          | log2_rd            | log2_rz    |\n+----------------+------------------+------------------+--------------------+------------+\n| log(x)/log(10) | log10_rn         | log10_ru         | log10_rd           | log10_rz   |\n+----------------+------------------+------------------+--------------------+------------+\n| sinh(x)        | sinh_rn          | sinh_ru          | sinh_rd            | sinh_rz    |\n+----------------+------------------+------------------+--------------------+------------+\n| cosh(x)        | cosh_rn          | cosh_ru          | cosh_rd            | cosh_rz    |\n+----------------+------------------+------------------+--------------------+------------+\n|              **trigonometry**                                                          |\n+----------------+------------------+------------------+--------------------+------------+\n| sin(x)         | sin_rn           | sin_ru           | sin_rd             | sin_rz     |\n+----------------+------------------+------------------+--------------------+------------+\n| cos(x)         | cos_rn           | cos_ru           | cos_rd             | cos_rz     |\n+----------------+------------------+------------------+--------------------+------------+\n| tan(x)         | tan_rn           | tan_ru           | tan_rd             | tan_rz     |\n+----------------+------------------+------------------+--------------------+------------+\n| asin(x)        | asin_rn          | asin_ru          | asin_rd            | asin_rz    |\n+----------------+------------------+------------------+--------------------+------------+\n| acos(x)        | acos_rn          | acos_ru          | acos_rd            | acos_rz    |\n+----------------+------------------+------------------+--------------------+------------+\n| atan(x)        | atan_rn          | atan_ru          | atan_rd            | atan_rz    |\n+----------------+------------------+------------------+--------------------+------------+\n|              **trigonometry in multiples of \u03c0**                                        |\n+----------------+------------------+------------------+--------------------+------------+\n| sin(\u03c0 * x)     | sinpi_rn         | sinpi_ru         | sinpi_rd           | sinpi_rz   |\n+----------------+------------------+------------------+--------------------+------------+\n| cos(\u03c0 * x)     | cospi_rn         | cospi_ru         | cospi_rd           | cospi_rz   |\n+----------------+------------------+------------------+--------------------+------------+\n| tan(\u03c0 * x)     | tanpi_rn         | tanpi_ru         | tanpi_rd           | tanpi_rz   |\n+----------------+------------------+------------------+--------------------+------------+\n| asin(x)/\u03c0      | asinpi_rn        | asinpi_ru        | asinpi_rd          | asinpi_rz  |\n+----------------+------------------+------------------+--------------------+------------+\n| acos(x)/\u03c0      | acospi_rn        | acospi_ru        | acospi_rd          | acospi_rz  |\n+----------------+------------------+------------------+--------------------+------------+\n| atan(x)/\u03c0      | atanpi_rn        | atanpi_ru        | atanpi_rd          | atanpi_rz  |\n+----------------+------------------+------------------+--------------------+------------+\n\n\n* the function ``pow`` in crlibm is not exported.\n\n\nlicense\n-------\n\nboth the crlibm library and the python bindings are distributed under\nthe gnu lesser general public license as published by the free\nsoftware foundation; either version `2.1\n<http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html>`_ of the\nlicense, or (at your option) any later version.\n\nauthors\n-------\n\ndavid defour, catherine daramy, florent de dinechin,\nmatthieu gallet, nicolas gast, christoph lauter, jean-michel muller.\n\npython bindings by stefano taschini.\n\nlinks\n-----\n\n* project home page: https://github.com/taschini/pycrlibm.\n* documentation: https://pycrlibm.readthedocs.io.\n* entry in the python package index: https://pypi.python.org/pypi/crlibm.\n* crlibm home page: http://lipforge.ens-lyon.fr/www/crlibm.\n* lgpl v2.1: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n\nhistory\n-------\n\n1.0.3 (2016-06-09)\n^^^^^^^^^^^^^^^^^^\n\n- fixed the compilation with python 3.5 on windows.\n\n\n1.0.2 (2016-06-06)\n^^^^^^^^^^^^^^^^^^\n\n- added support for python 3.\n\n\n1.0.1 (2015-11-15)\n^^^^^^^^^^^^^^^^^^\n\n- improvements to the build process on ms windows;\n- automatic upload of release files to pypi using appveyor.\n\n\n1.0.0 (2015-10-27)\n^^^^^^^^^^^^^^^^^^\n\n- spun off these binding from `pyinterval\n  <https://github.com/taschini/pyinterval>`_, a project for interval\n  arithmetic in python.\n- first release on pypi.",
  "docs_url": null,
  "keywords": "crlibm",
  "license": "lgplv2+",
  "name": "crlibm",
  "package_url": "https://pypi.org/project/crlibm/",
  "project_url": "https://pypi.org/project/crlibm/",
  "project_urls": {
    "Homepage": "https://github.com/taschini/pycrlibm"
  },
  "release_url": "https://pypi.org/project/crlibm/1.0.3/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python bindings for crlibm, an efficient and proven correctly-rounded mathematical library",
  "version": "1.0.3",
  "releases": [],
  "developers": [
    "stefano_taschini",
    "taschini@gmail.com"
  ],
  "kwds": "pycrlibm crlibm pyinterval pip pypi",
  "license_kwds": "lgplv2+",
  "libtype": "pypi",
  "id": "pypi_crlibm",
  "homepage": "https://github.com/taschini/pycrlibm",
  "release_count": 5,
  "dependency_ids": []
}
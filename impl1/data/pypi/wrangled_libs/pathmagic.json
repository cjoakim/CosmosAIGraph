{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "programming language :: python :: 3.8"
  ],
  "description": "please note:\n====================\n\nthis library is currently still under development. the api will likely undergo significant changes that may break any code you write with it.\nthe documentation will fall out of sync with the updates regularly until development slows down. use it at your own risk.\n\noverview\n====================\n\npathmagic implements two classes, `file` and `dir`, to represent mapped file system obects in a manner similar to database orms like sqlalchemy. these objects have properties which\nperform file system operations when set, and implement many useful methods to abstract away nearly all file system i/o to a much higher degree than `os.path` or `pathlib`.\n\nthe `dir` class\n--------------------\n* properties that perform rename and move operations when set (`dir.path`, `dir.parent`, `dir.name`)\n* two accessor objects (`dir.files`, `dir.dirs`) which allow iteration over their respective   collections, item access, membership tests, and more\n* two specialized accessor objects (`dir.d`, `dir.f`), which dynamically populate themselves with snake_cased attributes that represent the files/folders in their `dir`, such that\n  the filesystem tree can be traversed purely through attribute access\n* methods to create new files/dirs, copy/move self to another path/dir, delete self or content, and join self to a relative path\n* recursively walk the tree downwards, comparing own tree to a parallel filesystem tree\n* recursively seek files or dirs down the directory tree with inclusions/exclusions based on valid extensions and regex patterns matching name, path, and content.\n* compress self into a zipfile\n* visualize tree to arbitrary depth with an ascii representation\n* initialize from homepath, desktop, or package\n\nthe `file` class\n--------------------\n* properties that perform rename and move operations when set (`file.path`, `file.dir`, `file.name`,\n  `file.stem`, `file.extension`)\n* methods to copy/move self to another path/dir or delete self\n* initialize from script entry point (in traditional interpreter), and from a package resource\n* `file.read()` and `file.write()` methods (and associated `file.content` property) which invokes the `formathandler` class to determine how to read from/write to the file based\n  on its extension. `formathandler` uses the factory design pattern and can be extended at runtime to enable `file` to handle types of files that are not supported by default.\n* by default, recognized formats are the following:\n\n    | format        |   class accepted/returned         |   file extensions         |\n    | ------------- | --------------------------------- | ------------------------- |\n    | pdf           | pypdf2                            | pdf                       |\n    | tabular       | subtypes.frame                    | xlsx, csv                 |\n    | word          | docx.document                     | docx                      |\n    | image         | pil.image                         | png, jpf, jpeg            |\n    | audio         | pydub.audiosegment                | mp3, wav, ogg, flv        |\n    | video         | moviepy.editor.edit               | mp4, mkv, avi, gif        |\n    | compressed    | pathmagic.dir                     | zip, tar                  |\n    | link          | pathmagic.file or pathmagic.dir   | lnk                       |\n    | serialized    | any                               | pkl                       |\n    | json          | any                               | json                      |\n    | markup        | subtypes.markup                   | html, xml                 |\n    | default       | subtypes.str                      | everything else           |\n\n\ninstallation\n====================\n\nto install use pip:\n\n    $ pip install pathmagic\n\n\nor clone the repo:\n\n    $ git clone https://github.com/matthewgdv/pathmagic.git\n    $ python setup.py install\n\n\nusage\n====================\n\ndetailed usage examples coming soon.\n\ncontributing\n====================\n\ncontributions are welcome, and they are greatly appreciated! every little bit helps, and credit will always be given.\n\nyou can contribute in many ways:\n\nreport bugs\n--------------------\n\nreport bugs at https://github.com/matthewgdv/pathmagic/issues\n\nif you are reporting a bug, please include:\n\n* your operating system name and version.\n* any details about your local setup that might be helpful in troubleshooting.\n* detailed steps to reproduce the bug.\n\nfix bugs\n--------------------\n\nlook through the github issues for bugs. anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement a fix for it.\n\nimplement features\n--------------------\n\nlook through the github issues for features. anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.\n\nwrite documentation\n--------------------\n\nthe repository could always use more documentation, whether as part of the official docs, in docstrings, or even on the web in blog posts, articles, and such.\n\nsubmit feedback\n--------------------\n\nthe best way to send feedback is to file an issue at https://github.com/matthewgdv/pathmagic/issues.\n\nif you are proposing a new feature:\n\n* explain in detail how it would work.\n* keep the scope as narrow as possible, to make it easier to implement.\n* remember that this is a volunteer-driven project, and that contributions are welcome :)\n\nget started!\n--------------------\n\nbefore you submit a pull request, check that it meets these guidelines:\n\n1.  if the pull request adds functionality, it should include tests and the docs should be updated. write docstrings for any functions that are part of the external api, and add\n    the feature to the readme.md.\n\n2.  if the pull request fixes a bug, tests should be added proving that the bug has been fixed. however, no update to the docs is necessary for bugfixes.\n\n3.  the pull request should work for the newest version of python (currently 3.7). older versions may incidentally work, but are not officially supported.\n\n4.  inline type hints should be used, with an emphasis on ensuring that introspection and autocompletion tools such as jedi are able to understand the code wherever possible.\n\n5.  pep8 guidelines should be followed where possible, but deviations from it where it makes sense and improves legibility are encouraged. the following pep8 error codes can be\n    safely ignored: e121, e123, e126, e226, e24, e704, w503\n\n6.  this repository intentionally disallows the pep8 79-character limit. therefore, any contributions adhering to this convention will be rejected. as a rule of thumb you should\n    endeavor to stay under 200 characters except where going over preserves alignment, or where the line is mostly non-algorythmic code, such as extremely long strings or function\n    calls.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pathmagic",
  "package_url": "https://pypi.org/project/pathmagic/",
  "project_url": "https://pypi.org/project/pathmagic/",
  "project_urls": {
    "Homepage": "https://github.com/matthewgdv/pathmagic"
  },
  "release_url": "https://pypi.org/project/pathmagic/0.3.14/",
  "requires_dist": [
    "pandas",
    "Pillow",
    "PyPDF2",
    "appdirs",
    "bs4",
    "dill",
    "python-docx",
    "maybe-else",
    "moviepy",
    "pydub",
    "pysubtypes",
    "Send2Trash",
    "simplejson"
  ],
  "requires_python": "",
  "summary": "provides orm path classes (file and dir), which automatically emit file system io operations upon having their attributes modified. file objects allow for easy content manipulation of many forms of files.",
  "version": "0.3.14",
  "releases": [],
  "developers": [
    "matt_gdv",
    "matthewgdv@gmail.com"
  ],
  "kwds": "pathlib filesystem files directory folders",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pathmagic",
  "homepage": "https://github.com/matthewgdv/pathmagic",
  "release_count": 20,
  "dependency_ids": [
    "pypi_appdirs",
    "pypi_bs4",
    "pypi_dill",
    "pypi_maybe_else",
    "pypi_moviepy",
    "pypi_pandas",
    "pypi_pillow",
    "pypi_pydub",
    "pypi_pypdf2",
    "pypi_pysubtypes",
    "pypi_python_docx",
    "pypi_send2trash",
    "pypi_simplejson"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# google cloud python profiling agent\n\npython profiling agent for\n[google cloud profiler](https://cloud.google.com/profiler/).\n\nsee\n[google cloud profiler profiling python code](https://cloud.google.com/profiler/docs/profiling-python)\nfor detailed documentation.\n\n## supported os\n\nlinux. profiling python applications is supported for linux kernels whose\nstandard c library is implemented with `glibc` or with `musl`. for configuration\ninformation specific to linux alpine kernels, see\n[running on linux alpine](https://cloud.google.com/profiler/docs/profiling-python#running_with_linux_alpine).\n\n## supported python versions\n\npython >= 3.7 and <= 3.11\n\n## installation & usage\n\n1.  install the profiler package using pypi:\n\n    ```shell\n    pip3 install google-cloud-profiler\n    ```\n\n2.  enable the profiler in your application:\n\n    ```python\n    import googlecloudprofiler\n\n    def main():\n        # profiler initialization. it starts a daemon thread which continuously\n        # collects and uploads profiles. best done as early as possible.\n        try:\n            googlecloudprofiler.start(\n                service='hello-profiler',\n                service_version='1.0.1',\n                # verbose is the logging level. 0-error, 1-warning, 2-info,\n                # 3-debug. it defaults to 0 (error) if not set.\n                verbose=3,\n                # project_id must be set if not running on gcp.\n                # project_id='my-project-id',\n            )\n        except (valueerror, notimplementederror) as exc:\n            print(exc)  # handle errors here\n    ```\n\n## installation on linux alpine\n\nthe python profiling agent has a native component. the base alpine image for\npython does not have all dependencies required to build this native component\ninstalled. to build the python profiling agent on alpine, one must install the\npackage `build-base`.\n\nto use the python profiling agent on alpine without installing additional\ndependencies on to the final alpine image, one can use a two-stage build and\ncompile the python profiling agent in the first stage.\n\nhere is an example of a docker image that uses a multi-stage build to compile\nand install the python profiling agent:\n\n```\nfrom python:3.7-alpine as builder\n\n# install build-base to allow for compilation of the profiling agent.\nrun apk add --update --no-cache build-base\n\n# compile the profiling agent, generating wheels for it.\nrun pip3 wheel --wheel-dir=/tmp/wheels google-cloud-profiler\n\n\nfrom python:3.7-alpine\n\n# copy over the directory containing wheels for the profiling agent.\ncopy --from=builder /tmp/wheels /tmp/wheels\n\n# install the profiling agent.\nrun pip3 install --no-index --find-links=/tmp/wheels google-cloud-profiler\n\n# install any other required modules or dependencies, and copy an app which\n# enables the profiler as described in \"enable the profiler in your\n# application\".\ncopy ./bench.py .\n\n# run the application when the docker image is run, using either cmd (as is done\n# here) or entrypoint.\ncmd python3 -u bench.py\n```\n\n\n## troubleshooting\n\n### resource temporarily unavailable errors with python\n\nif you see the following log entries after enabling the profiler:\n\n```\nblockingioerror: [errno 11] resource temporarily unavailable\nexception ignored when trying to write to the signal wakeup fd\n```\n\nsee https://cloud.google.com/profiler/docs/troubleshooting#python-blocking for\nthe cause and the workaround.\n",
  "docs_url": null,
  "keywords": "google cloud profiler",
  "license": "apache license, version 2.0",
  "name": "google-cloud-profiler",
  "package_url": "https://pypi.org/project/google-cloud-profiler/",
  "project_url": "https://pypi.org/project/google-cloud-profiler/",
  "project_urls": {
    "Homepage": "https://github.com/GoogleCloudPlatform/cloud-profiler-python"
  },
  "release_url": "https://pypi.org/project/google-cloud-profiler/4.1.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "google cloud profiler python agent",
  "version": "4.1.0",
  "releases": [],
  "developers": [
    "google_llc"
  ],
  "kwds": "running_with_linux_alpine googlecloudprofiler profiling profiler alpine",
  "license_kwds": "apache license, version 2.0",
  "libtype": "pypi",
  "id": "pypi_google_cloud_profiler",
  "homepage": "https://github.com/googlecloudplatform/cloud-profiler-python",
  "release_count": 32,
  "dependency_ids": []
}
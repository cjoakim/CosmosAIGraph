{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: name service (dns)",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: systems administration",
    "topic :: utilities"
  ],
  "description": "============\n|logo_named|\n============\n\nmanipulate dns records on various dns providers in a standardized/agnostic way.\n\n|build_status| |coverage_status| |docker_pulls| |pypy_version| |pypy_python_support| |github_license|\n\n.. |logo_named| image:: https://raw.githubusercontent.com/analogj/lexicon/master/docs/images/logo_named.svg\n    :alt: lexicon\n.. |build_status| image:: https://img.shields.io/azure-devops/build/analogj/8425f0f5-0178-4d8c-b1fd-11db7e11b6a7/1/master\n    :target: https://dev.azure.com/analogj/lexicon/_build/latest?definitionid=1&branchname=master\n.. |coverage_status| image:: https://img.shields.io/coverallscoverage/github/analogj/lexicon\n    :target: https://coveralls.io/github/analogj/lexicon?branch=master\n.. |docker_pulls| image:: https://img.shields.io/docker/pulls/analogj/lexicon\n    :target: https://hub.docker.com/r/analogj/lexicon\n.. |pypy_version| image:: https://img.shields.io/pypi/v/dns-lexicon\n    :target: https://pypi.python.org/pypi/dns-lexicon\n.. |pypy_python_support| image:: https://img.shields.io/pypi/pyversions/dns-lexicon\n    :target: https://pypi.python.org/pypi/dns-lexicon\n.. |github_license| image:: https://img.shields.io/github/license/analogj/lexicon\n    :target: https://github.com/analogj/lexicon/blob/master/license\n\n.. contents:: table of contents\n   :local:\n\n.. tag: intro-begin\n\nwhy using lexicon?\n==================\n\nlexicon provides a way to manipulate dns records on multiple dns providers in a standardized way.\n\nlexicon can be used as:\n\n- a cli tool:\n\n.. code-block:: bash\n\n    # create a txt entry in domain.net zone hosted by cloudflare\n    lexicon cloudflare create domain.net txt --name foo --content bar\n\n- or a python library:\n\n.. code-block:: python\n\n    # create a txt entry in domain.net zone hosted by cloudflare\n    from lexicon.client import client\n    from lexicon.config import configresolver\n\n    config = configresolver().with_env().with_dict({\n        \"provider_name\" : \"cloudflare\",\n        \"domain\": \"domain.net\",\n    })\n\n    with client(config) as operations:\n        operations.create_record(\"txt\", \"foo\", \"bar\")\n\nlexicon was designed to be used in automation, specifically letsencrypt.\n\n* `generating intranet & private network ssl certificates using lets encrypt & lexicon <http://blog.thesparktree.com/post/138999997429/generating-intranet-and-private-network-ssl>`_\n\nsupported providers\n===================\n\nonly dns providers who have an api can be supported by `lexicon`.\n\nthe current supported providers are:\n\n..\n  this section is autogenerated and should not been modified directly.\n  however you should add a reference to the provider api in the list below,\n  using the following syntax: .. _provider: url_api\n\n.. tag: providers-table-begin\n\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| aliyun_         | aurora_         | azure_          | cloudflare_     | cloudns_        |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| cloudxns_       | conoha_         | constellix_     | ddns_           | digitalocean_   |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| dinahosting_    | directadmin_    | dnsimple_       | dnsmadeeasy_    | dnspark_        |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| dnspod_         | dnsservices_    | dreamhost_      | duckdns_        | dynu_           |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| easydns_        | easyname_       | euserv_         | exoscale_       | flexibleengine_ |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| gandi_          | gehirn_         | glesys_         | godaddy_        | googleclouddns_ |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| gransy_         | gratisdns_      | henet_          | hetzner_        | hostingde_      |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| hover_          | infoblox_       | infomaniak_     | internetbs_     | inwx_           |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| joker_          | linode_         | linode4_        | localzone_      | luadns_         |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| memset_         | misaka_         | mythicbeasts_   | namecheap_      | namecom_        |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| namesilo_       | netcup_         | nfsn_           | njalla_         | nsone_          |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| oci_            | onapp_          | online_         | ovh_            | plesk_          |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| pointhq_        | porkbun_        | powerdns_       | rackspace_      | rage4_          |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| rcodezero_      | route53_        | safedns_        | sakuracloud_    | softlayer_      |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| transip_        | ultradns_       | valuedomain_    | vercel_         | vultr_          |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| webgo_          | wedos_          | yandex_         | yandexcloud_    | zeit_           |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n| zilore_         | zonomi_         |                 |                 |                 |\n+-----------------+-----------------+-----------------+-----------------+-----------------+\n\n.. tag: providers-table-end\n\n.. _aliyun: https://help.aliyun.com/document_detail/29739.html\n.. _aurora: https://www.pcextreme.com/aurora/dns\n.. _azure: https://docs.microsoft.com/en-us/rest/api/dns/\n.. _cloudflare: https://api.cloudflare.com/#endpoints\n.. _cloudns: https://www.cloudns.net/wiki/article/56/\n.. _cloudxns: https://www.cloudxns.net/support/lists/cid/17.html\n.. _conoha: https://www.conoha.jp/docs/\n.. _constellix: https://api-docs.constellix.com/?version=latest\n.. _ddns: https://www.rfc-editor.org/rfc/rfc2136\n.. _digitalocean: https://developers.digitalocean.com/documentation/v2/#create-a-new-domain\n.. _dinahosting: https://en.dinahosting.com/api\n.. _directadmin: https://www.directadmin.com/features.php?id=504\n.. _dnsimple: https://developer.dnsimple.com/v2/\n.. _dnsmadeeasy: https://api-docs.dnsmadeeasy.com/?version=latest\n.. _dnspark: https://dnspark.zendesk.com/entries/31210577-rest-api-dns-documentation\n.. _dnspod: https://support.dnspod.cn/support/api\n.. _dnsservices: https://dns.services/userapi\n.. _dreamhost: https://help.dreamhost.com/hc/en-us/articles/217560167-api_overview\n.. _duckdns: https://www.duckdns.org/spec.jsp\n.. _dynu: https://www.dynu.com/support/api\n.. _easydns: http://docs.sandbox.rest.easydns.net/\n.. _easyname: https://www.easyname.com/en\n.. _euserv: https://support.euserv.com/api-doc/\n.. _exoscale: https://community.exoscale.com/documentation/dns/api/\n.. _flexibleengine: https://registry.terraform.io/providers/flexibleenginecloud/flexibleengine/latest/docs/data-sources/dns_zone_v2\n.. _gandi: http://doc.livedns.gandi.net/\n.. _gehirn: https://support.gehirn.jp/apidocs/gis/dns/index.html\n.. _glesys: https://github.com/glesys/api/wiki/\n.. _godaddy: https://developer.godaddy.com/getstarted#access\n.. _googleclouddns: https://cloud.google.com/dns/api/v1/\n.. _gransy: https://subreg.cz/manual/\n.. _gratisdns:\n.. _henet: https://dns.he.net/\n.. _hetzner: https://dns.hetzner.com/api-docs/\n.. _hostingde:\n.. _hover: https://www.hover.com/\n.. _infoblox: https://docs.infoblox.com/display/ilp/infoblox+documentation+portal\n.. _infomaniak: https://www.infomaniak.com\n.. _internetbs: https://internetbs.net/resellerregistrardomainnameapi\n.. _inwx: https://www.inwx.de/en/offer/api\n.. _joker: https://joker.com/faq/index.php?action=show&cat=39\n.. _linode: https://www.linode.com/api/dns\n.. _linode4: https://developers.linode.com/api/docs/v4#tag/domains\n.. _localzone:\n.. _luadns: http://www.luadns.com/api.html\n.. _memset: https://www.memset.com/apidocs/methods_dns.html\n.. _misaka: https://misaka.io/dns/\n.. _mythicbeasts: https://www.mythic-beasts.com/support/api/dnsv2\n.. _namecheap: https://www.namecheap.com/support/api/methods.aspx\n.. _namecom: https://www.name.com/api-docs\n.. _namesilo: https://www.namesilo.com/api_reference.php\n.. _netcup: https://ccp.netcup.net/run/webservice/servers/endpoint.php\n.. _nfsn:\n.. _njalla: https://njal.la/api/\n.. _nsone: https://ns1.com/api/\n.. _oci: https://docs.oracle.com/en-us/iaas/content/dns/home.htm\n.. _onapp: https://docs.onapp.com/display/55api/onapp+5.5+api+guide\n.. _online:\n.. _ovh: https://api.ovh.com/\n.. _plesk: https://docs.plesk.com/en-us/onyx/api-rpc/about-xml-api.28709/\n.. _pointhq: https://pointhq.com/api/docs\n.. _porkbun: https://kb.porkbun.com/article/190-getting-started-with-the-porkbun-dns-api\n.. _powerdns: https://doc.powerdns.com/md/httpapi/api_spec/\n.. _rackspace: https://developer.rackspace.com/docs/cloud-dns/v1/developer-guide/\n.. _rage4: https://gbshouse.uservoice.com/knowledgebase/articles/109834-rage4-dns-developers-api\n.. _rcodezero: https://my.rcodezero.at/api-doc\n.. _route53: https://docs.aws.amazon.com/route53/latest/apireference/welcome.html\n.. _safedns: https://developers.ukfast.io/documentation/safedns\n.. _sakuracloud: https://developer.sakura.ad.jp/cloud/api/1.1/\n.. _softlayer: https://sldn.softlayer.com/article/rest#http_request_types\n.. _transip: https://api.transip.nl/rest/docs.html\n.. _ultradns: https://ultra-portalstatic.ultradns.com/static/docs/rest-api_user_guide.pdf\n.. _valuedomain: https://www.value-domain.com/service/api/\n.. _vercel: https://vercel.com/docs/api#endpoints/dns\n.. _vultr: https://www.vultr.com/api/#tag/dns\n.. _webgo: https://www.webgo.de/\n.. _wedos: https://www.wedos.com/cs/\n.. _yandex: https://yandex.com/dev/domain/doc/reference/dns-add.html\n.. _yandexcloud: https://cloud.yandex.com/en/docs/dns/api-ref/dnszone/\n.. _zeit:\n.. _zilore: https://zilore.com/en/help/api\n.. _zonomi: http://zonomi.com/app/dns/dyndns.jsp\n\n.. tag: intro-end\n\ndocumentation\n=============\n\nonline documentation (user guide, configuration reference) is available in the `lexicon documentation`_.\n\nfor a quick start, please have a look in particular at the `user guide`_.\n\n.. _lexicon documentation: https://dns-lexicon.readthedocs.io\n.. _user guide: https://dns-lexicon.readthedocs.io/en/latest/user_guide.html\n\ncontributing\n============\n\nif you want to help in the lexicon development, you are welcome!\n\nplease have a look at the `developer guide`_ page to know how to start.\n\n.. _developer guide: https://dns-lexicon.readthedocs.io/en/latest/developer_guide.html\n\nlicensing\n=========\n\n- mit\n- logo_: transform by mike rowe from the noun project\n\n.. _logo: https://thenounproject.com/term/transform/397964\n",
  "docs_url": null,
  "keywords": "dns,lexicon,dns-lexicon,dehydrated,letsencrypt",
  "license": "mit",
  "name": "dns-lexicon",
  "package_url": "https://pypi.org/project/dns-lexicon/",
  "project_url": "https://pypi.org/project/dns-lexicon/",
  "project_urls": {
    "Homepage": "https://github.com/AnalogJ/lexicon",
    "Repository": "https://github.com/AnalogJ/lexicon"
  },
  "release_url": "https://pypi.org/project/dns-lexicon/3.17.0/",
  "requires_dist": [
    "tldextract (>=2)",
    "cryptography (>=2)",
    "pyyaml (>=3)",
    "requests (>=2)",
    "beautifulsoup4 (>=4)",
    "pyotp (>=2)",
    "dnspython (>=2)",
    "importlib-metadata (>=4.6) ; python_version < \"3.10\"",
    "boto3 (>=1.28) ; extra == \"route53\" or extra == \"full\"",
    "localzone (>=0.9.8) ; extra == \"localzone\" or extra == \"full\"",
    "softlayer (>=5) ; extra == \"softlayer\" or extra == \"full\"",
    "zeep (>=3) ; extra == \"gransy\" or extra == \"full\"",
    "oci (>=2) ; extra == \"oci\" or extra == \"full\""
  ],
  "requires_python": ">=3.8,<4.0",
  "summary": "manipulate dns records on various dns providers in a standardized/agnostic way",
  "version": "3.17.0",
  "releases": [],
  "developers": [
    "jason@thesparktree.com",
    "jason_kulatunga"
  ],
  "kwds": "dnspod dnspod_ _dnspod _dnsservices dnsmadeeasy",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_dns_lexicon",
  "homepage": "https://github.com/analogj/lexicon",
  "release_count": 217,
  "dependency_ids": [
    "pypi_beautifulsoup4",
    "pypi_boto3",
    "pypi_cryptography",
    "pypi_dnspython",
    "pypi_importlib_metadata",
    "pypi_localzone",
    "pypi_oci",
    "pypi_pyotp",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_softlayer",
    "pypi_tldextract",
    "pypi_zeep"
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4"
  ],
  "description": "=============================================================\npoap: plumbing for optimization with asynchronous parallelism\n=============================================================\n\npoap provides an event-driven framework for building and\ncombining asynchronous optimization strategies.  a typical\noptimization code written with poap might look like:\n\n.. code-block:: python\n\n    from poap.strategy import fixedsamplestrategy\n    from poap.strategy import checkworkstrategy\n    from poap.controller import threadcontroller\n    from poap.controller import basicworkerthread\n\n    # samples = list of sample points ...\n\n    controller = threadcontroller()\n    sampler = fixedsamplestrategy(samples)\n    controller.strategy = checkworkerstrategy(controller, sampler)\n\n    for i in range(num_workers):\n        t = basicworkerthread(controller, objective)\n        controller.launch_worker(t)\n\n    result = controller.run()\n    print 'best result: {0} at {1}'.format(result.value, result.params)\n\nthe basic ingredients are a controller capable of asking workers to\nrun function evaluations and a strategy for choosing where to sample.\nthe strategies send the controller proposed actions, which the\ncontroller then accepts or rejects; the controller, in turn, informs\nthe strategies of relevant events through callback functions.\n\nmost users will probably want to provide their own strategies,\ncontrollers, or both.\n\n=============================================================\ndevelopers\n=============================================================\n\nbuild status:\n\n.. image:: https://travis-ci.org/dbindel/poap.svg?branch=master\n    :target: https://travis-ci.org/dbindel/poap",
  "docs_url": null,
  "keywords": "",
  "license": "license.txt",
  "name": "poap",
  "package_url": "https://pypi.org/project/POAP/",
  "project_url": "https://pypi.org/project/POAP/",
  "project_urls": {
    "Homepage": "http://pypi.python.org/pypi/POAP/"
  },
  "release_url": "https://pypi.org/project/POAP/0.1.26/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "python optimization asynchronous plumbing.",
  "version": "0.1.26",
  "releases": [],
  "developers": [
    "bindel@cornell.edu",
    "david_bindel"
  ],
  "kwds": "parallelism asynchronous threadcontroller optimization strategies",
  "license_kwds": "license.txt",
  "libtype": "pypi",
  "id": "pypi_poap",
  "homepage": "http://pypi.python.org/pypi/poap/",
  "release_count": 20,
  "dependency_ids": []
}
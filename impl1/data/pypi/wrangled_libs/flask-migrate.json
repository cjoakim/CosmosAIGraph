{
  "classifiers": [
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "flask-migrate\n=============\n\n[![build status](https://github.com/miguelgrinberg/flask-migrate/workflows/build/badge.svg)](https://github.com/miguelgrinberg/flask-migrate/actions)\n\nflask-migrate is an extension that handles sqlalchemy database migrations for flask applications using alembic. the database operations are provided as command-line arguments under the `flask db` command.\n\ninstallation\n------------\n\ninstall flask-migrate with `pip`:\n\n    pip install flask-migrate\n\nexample\n-------\n\nthis is an example application that handles database migrations through flask-migrate:\n\n```python\nfrom flask import flask\nfrom flask_sqlalchemy import sqlalchemy\nfrom flask_migrate import migrate\n\napp = flask(__name__)\napp.config['sqlalchemy_database_uri'] = 'sqlite:///app.db'\n\ndb = sqlalchemy(app)\nmigrate = migrate(app, db)\n\nclass user(db.model):\n    id = db.column(db.integer, primary_key=true)\n    name = db.column(db.string(128))\n```\n\nwith the above application you can create the database or enable migrations if the database already exists with the following command:\n\n    $ flask db init\n\nnote that the `flask_app` environment variable must be set according to the flask documentation for this command to work. this will add a `migrations` folder to your application. the contents of this folder need to be added to version control along with your other source files. \n\nyou can then generate an initial migration:\n\n    $ flask db migrate\n    \nthe migration script needs to be reviewed and edited, as alembic currently does not detect every change you make to your models. in particular, alembic is currently unable to detect indexes. once finalized, the migration script also needs to be added to version control.\n\nthen you can apply the migration to the database:\n\n    $ flask db upgrade\n    \nthen each time the database models change repeat the `migrate` and `upgrade` commands.\n\nto sync the database in another system just refresh the `migrations` folder from source control and run the `upgrade` command.\n\nto see all the commands that are available run this command:\n\n    $ flask db --help\n\nresources\n---------\n\n- [documentation](http://flask-migrate.readthedocs.io/en/latest/)\n- [pypi](https://pypi.python.org/pypi/flask-migrate) \n- [change log](https://github.com/miguelgrinberg/flask-migrate/blob/master/changes.md)\n",
  "docs_url": "https://pythonhosted.org/Flask-Migrate/",
  "keywords": "",
  "license": "mit",
  "name": "flask-migrate",
  "package_url": "https://pypi.org/project/Flask-Migrate/",
  "project_url": "https://pypi.org/project/Flask-Migrate/",
  "project_urls": {
    "Bug Tracker": "https://github.com/miguelgrinberg/flask-migrate/issues",
    "Homepage": "https://github.com/miguelgrinberg/flask-migrate"
  },
  "release_url": "https://pypi.org/project/Flask-Migrate/4.0.5/",
  "requires_dist": [
    "Flask >=0.9",
    "Flask-SQLAlchemy >=1.0",
    "alembic >=1.9.0"
  ],
  "requires_python": ">=3.6",
  "summary": "sqlalchemy database migrations for flask applications using alembic.",
  "version": "4.0.5",
  "releases": [],
  "developers": [
    "miguel.grinberg@gmail.com",
    "miguel_grinberg"
  ],
  "kwds": "flask_migrate flask_sqlalchemy flask_app sqlalchemy_database_uri sqlalchemy",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_flask_migrate",
  "homepage": "https://github.com/miguelgrinberg/flask-migrate",
  "release_count": 45,
  "dependency_ids": [
    "pypi_alembic",
    "pypi_flask",
    "pypi_flask_sqlalchemy"
  ]
}
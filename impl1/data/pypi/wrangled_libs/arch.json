{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: end users/desktop",
    "intended audience :: financial and insurance industry",
    "license :: osi approved :: university of illinois/ncsa open source license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: cython",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering"
  ],
  "description": "# arch\r\n\r\n[![arch](https://bashtage.github.io/arch/doc/_static/images/color-logo-256.png)](https://github.com/bashtage/arch)\r\n\r\nautoregressive conditional heteroskedasticity (arch) and other tools for\r\nfinancial econometrics, written in python (with cython and/or numba used\r\nto improve performance)\r\n\r\n| metric                     |                                                                                                                                                                                                                                          |\r\n| :------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| **latest release**         | [![pypi version](https://badge.fury.io/py/arch.svg)](https://badge.fury.io/py/arch)                                                                                                                                                      |\r\n|                            | [![conda-forge version](https://anaconda.org/conda-forge/arch-py/badges/version.svg)](https://anaconda.org/conda-forge/arch-py)                                                                                                          |\r\n| **continuous integration** | [![build status](https://dev.azure.com/kevinksheppard0207/kevinksheppard/_apis/build/status/bashtage.arch?branchname=main)](https://dev.azure.com/kevinksheppard0207/kevinksheppard/_build/latest?definitionid=1&branchname=main)        |\r\n|                            | [![appveyor build status](https://ci.appveyor.com/api/projects/status/nmt02u7jwcgx7i2x?svg=true)](https://ci.appveyor.com/project/bashtage/arch/branch/main)                                                                             |\r\n| **coverage**               | [![codecov](https://codecov.io/gh/bashtage/arch/branch/main/graph/badge.svg)](https://codecov.io/gh/bashtage/arch)                                                                                                                       |\r\n| **code quality**           | [![codacy badge](https://api.codacy.com/project/badge/grade/93f6fd90209842bf97fd20fda8db70ef)](https://www.codacy.com/manual/bashtage/arch?utm_source=github.com&utm_medium=referral&utm_content=bashtage/arch&utm_campaign=badge_grade) |\r\n|                            | [![codebeat badge](https://codebeat.co/badges/18a78c15-d74b-4820-b56d-72f7e4087532)](https://codebeat.co/projects/github-com-bashtage-arch-main)                                                                                         |\r\n| **citation**               | [![doi](https://zenodo.org/badge/doi/10.5281/zenodo.593254.svg)](https://doi.org/10.5281/zenodo.593254)                                                                                                                                  |\r\n| **documentation**          | [![documentation status](https://readthedocs.org/projects/arch/badge/?version=latest)](https://arch.readthedocs.org/en/latest/)                                                                                                          |\r\n\r\n## module contents\r\n\r\n- [univariate arch models](#volatility)\r\n- [unit root tests](#unit-root)\r\n- [cointegration testing and analysis](#cointegration)\r\n- [bootstrapping](#bootstrap)\r\n- [multiple comparison tests](#multiple-comparison)\r\n- [long-run covariance estimation](#long-run-covariance)\r\n\r\n### python 3\r\n\r\n`arch` is python 3 only. version 4.8 is the final version that supported python 2.7.\r\n\r\n## documentation\r\n\r\ndocumentation from the main branch is hosted on\r\n[my github pages](https://bashtage.github.io/arch/).\r\n\r\nreleased documentation is hosted on\r\n[read the docs](https://arch.readthedocs.org/en/latest/).\r\n\r\n## more about arch\r\n\r\nmore information about arch and related models is available in the notes and\r\nresearch available at [kevin sheppard's site](https://www.kevinsheppard.com).\r\n\r\n## contributing\r\n\r\ncontributions are welcome. there are opportunities at many levels to contribute:\r\n\r\n- implement new volatility process, e.g., figarch\r\n- improve docstrings where unclear or with typos\r\n- provide examples, preferably in the form of ipython notebooks\r\n\r\n## examples\r\n\r\n<a id=\"volatility\"></a>\r\n\r\n### volatility modeling\r\n\r\n- mean models\r\n  - constant mean\r\n  - heterogeneous autoregression (har)\r\n  - autoregression (ar)\r\n  - zero mean\r\n  - models with and without exogenous regressors\r\n- volatility models\r\n  - arch\r\n  - garch\r\n  - tarch\r\n  - egarch\r\n  - ewma/riskmetrics\r\n- distributions\r\n  - normal\r\n  - student's t\r\n  - generalized error distribution\r\n\r\nsee the [univariate volatility example notebook](https://nbviewer.ipython.org/github/bashtage/arch/blob/main/examples/univariate_volatility_modeling.ipynb) for a more complete overview.\r\n\r\n```python\r\nimport datetime as dt\r\nimport pandas_datareader.data as web\r\nst = dt.datetime(1990,1,1)\r\nen = dt.datetime(2014,1,1)\r\ndata = web.get_data_yahoo('^ftse', start=st, end=en)\r\nreturns = 100 * data['adj close'].pct_change().dropna()\r\n\r\nfrom arch import arch_model\r\nam = arch_model(returns)\r\nres = am.fit()\r\n```\r\n\r\n<a id=\"unit-root\"></a>\r\n\r\n### unit root tests\r\n\r\n- augmented dickey-fuller\r\n- dickey-fuller gls\r\n- phillips-perron\r\n- kpss\r\n- zivot-andrews\r\n- variance ratio tests\r\n\r\nsee the [unit root testing example notebook](https://nbviewer.ipython.org/github/bashtage/arch/blob/main/examples/unitroot_examples.ipynb)\r\nfor examples of testing series for unit roots.\r\n\r\n<a id=\"unit-root\"></a>\r\n\r\n### cointegration testing and analysis\r\n\r\n- tests\r\n  - engle-granger test\r\n  - phillips-ouliaris test\r\n- cointegration vector estimation\r\n  - canonical cointegrating regression\r\n  - dynamic ols\r\n  - fully modified ols\r\n\r\nsee the [cointegration testing example notebook](https://nbviewer.ipython.org/github/bashtage/arch/blob/main/examples/unitroot_cointegration_examples.ipynb)\r\nfor examples of testing series for cointegration.\r\n\r\n<a id=\"bootstrap\"></a>\r\n\r\n### bootstrap\r\n\r\n- bootstraps\r\n  - iid bootstrap\r\n  - stationary bootstrap\r\n  - circular block bootstrap\r\n  - moving block bootstrap\r\n- methods\r\n  - confidence interval construction\r\n  - covariance estimation\r\n  - apply method to estimate model across bootstraps\r\n  - generic bootstrap iterator\r\n\r\nsee the [bootstrap example notebook](https://nbviewer.ipython.org/github/bashtage/arch/blob/main/examples/bootstrap_examples.ipynb)\r\nfor examples of bootstrapping the sharpe ratio and a probit model from statsmodels.\r\n\r\n```python\r\n# import data\r\nimport datetime as dt\r\nimport pandas as pd\r\nimport numpy as np\r\nimport pandas_datareader.data as web\r\nstart = dt.datetime(1951,1,1)\r\nend = dt.datetime(2014,1,1)\r\nsp500 = web.get_data_yahoo('^gspc', start=start, end=end)\r\nstart = sp500.index.min()\r\nend = sp500.index.max()\r\nmonthly_dates = pd.date_range(start, end, freq='m')\r\nmonthly = sp500.reindex(monthly_dates, method='ffill')\r\nreturns = 100 * monthly['adj close'].pct_change().dropna()\r\n\r\n# function to compute parameters\r\ndef sharpe_ratio(x):\r\n    mu, sigma = 12 * x.mean(), np.sqrt(12 * x.var())\r\n    return np.array([mu, sigma, mu / sigma])\r\n\r\n# bootstrap confidence intervals\r\nfrom arch.bootstrap import iidbootstrap\r\nbs = iidbootstrap(returns)\r\nci = bs.conf_int(sharpe_ratio, 1000, method='percentile')\r\n```\r\n\r\n<a id=\"multiple-comparison\"></a>\r\n\r\n### multiple comparison procedures\r\n\r\n- test of superior predictive ability (spa), also known as the reality\r\n    check or bootstrap data snooper\r\n- stepwise (stepm)\r\n- model confidence set (mcs)\r\n\r\nsee the [multiple comparison example notebook](https://nbviewer.ipython.org/github/bashtage/arch/blob/main/examples/multiple-comparison_examples.ipynb)\r\nfor examples of the multiple comparison procedures.\r\n\r\n<a id=\"long-run-covariance\"></a>\r\n\r\n### long-run covariance estimation\r\n\r\nkernel-based estimators of long-run covariance including the\r\nbartlett kernel which is known as newey-west in econometrics.\r\nautomatic bandwidth selection is available for all of the\r\ncovariance estimators.\r\n\r\n```python\r\nfrom arch.covariance.kernel import bartlett\r\nfrom arch.data import nasdaq\r\ndata = nasdaq.load()\r\nreturns = data[[\"adj close\"]].pct_change().dropna()\r\n\r\ncov_est = bartlett(returns ** 2)\r\n# get the long-run covariance\r\ncov_est.cov.long_run\r\n```\r\n\r\n## requirements\r\n\r\nthese requirements reflect the testing environment. it is possible\r\nthat arch will work with older versions.\r\n\r\n- python (3.9+)\r\n- numpy (1.19+)\r\n- scipy (1.5+)\r\n- pandas (1.1+)\r\n- statsmodels (0.12+)\r\n- matplotlib (3+), optional\r\n\r\n\r\n### optional requirements\r\n\r\n- numba (0.49+) will be used if available **and** when installed without building the binary modules. in order to ensure that these are not built, you must set the environment variable `arch_no_binary=1` and install without the wheel.\r\n\r\n```shell\r\nexport arch_no_binary=1\r\npython -m pip install arch\r\n```\r\n\r\nor if using powershell on windows\r\n\r\n```powershell\r\n$env:arch_no_binary=1\r\npython -m pip install arch\r\n```\r\n\r\n- jupyter and notebook are required to run the notebooks\r\n\r\n## installing\r\n\r\nstandard installation with a compiler requires cython. if you do not\r\nhave a compiler installed, the `arch` should still install. you will\r\nsee a warning but this can be ignored. if you don't have a compiler,\r\n`numba` is strongly recommended.\r\n\r\n### pip\r\n\r\nreleases are available pypi and can be installed with `pip`.\r\n\r\n```shell\r\npip install arch\r\n```\r\n\r\nyou can alternatively install the latest version from github\r\n\r\n```bash\r\npip install git+https://github.com/bashtage/arch.git\r\n```\r\n\r\nsetting the environment variable `arch_no_binary=1` can be used to\r\ndisable compilation of the extensions.\r\n\r\n### anaconda\r\n\r\n`conda` users can install from conda-forge,\r\n\r\n```bash\r\nconda install arch-py -c conda-forge\r\n```\r\n\r\n**note**: the conda-forge name is `arch-py`.\r\n\r\n### windows\r\n\r\nbuilding extension using the community edition of visual studio is\r\nsimple when using python 3.8 or later. building is not necessary when numba\r\nis installed since just-in-time compiled code (numba) runs as fast as\r\nahead-of-time compiled extensions.\r\n\r\n### developing\r\n\r\nthe development requirements are:\r\n\r\n- cython (0.29+, if not using arch_no_binary=1, supports 3.0.0b2+)\r\n- pytest (for tests)\r\n- sphinx (to build docs)\r\n- sphinx-immaterial (to build docs)\r\n- jupyter, notebook and nbsphinx (to build docs)\r\n\r\n### installation notes\r\n\r\n1. if cython is not installed, the package will be installed\r\n    as-if `arch_no_binary=1` was set.\r\n2. setup does not verify these requirements. please ensure these are\r\n    installed.\r\n",
  "docs_url": null,
  "keywords": "arch,arch,variance,econometrics,volatility,finance,garch,bootstrap,random walk,unit root,dickey fuller,time series,confidence intervals,multiple comparisons,reality check,spa,stepm",
  "license": "# license  **copyright (c) 2017 kevin sheppard. all rights reserved.**  developed by: kevin sheppard (<kevin.sheppard@economics.ox.ac.uk>, <kevin.k.sheppard@gmail.com>) [https://www.kevinsheppard.com](https://www.kevinsheppard.com)  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal with the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimers.  redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimers in the documentation and/or other materials provided with the distribution.  neither the names of kevin sheppard, nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  **the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the contributors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings with the software.** ",
  "name": "arch",
  "package_url": "https://pypi.org/project/arch/",
  "project_url": "https://pypi.org/project/arch/",
  "project_urls": {
    "changelog": "https://bashtage.github.io/arch/changes.html",
    "documentation": "https://bashtage.github.io/arch/",
    "homepage": "https://github.com/bashtage/arch",
    "repository": "https://github.com/bashtage/arch"
  },
  "release_url": "https://pypi.org/project/arch/6.2.0/",
  "requires_dist": [
    "numpy >=1.19",
    "scipy >=1.5",
    "pandas >=1.1",
    "statsmodels >=0.12"
  ],
  "requires_python": ">=3.9",
  "summary": "arch for python",
  "version": "6.2.0",
  "releases": [],
  "developers": [
    "kevin.k.sheppard@gmail.com"
  ],
  "kwds": "garch autoregressive heteroskedasticity arch_model econometrics",
  "license_kwds": "copyright software copies redistributions disclaimers",
  "libtype": "pypi",
  "id": "pypi_arch",
  "homepage": "",
  "release_count": 43,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_pandas",
    "pypi_scipy",
    "pypi_statsmodels"
  ]
}
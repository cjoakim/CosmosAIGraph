{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: system :: distributed computing"
  ],
  "description": "flower\n======\n\n.. image:: https://img.shields.io/pypi/dm/flower.svg\n    :target: https://pypistats.org/packages/flower\n    :alt: pypi - downloads\n.. image:: https://img.shields.io/docker/pulls/mher/flower.svg\n    :target: https://hub.docker.com/r/mher/flower\n    :alt: docker pulls\n.. image:: https://github.com/mher/flower/workflows/build/badge.svg\n    :target: https://github.com/mher/flower/actions\n.. image:: https://img.shields.io/pypi/v/flower.svg\n    :target: https://pypi.python.org/pypi/flower\n\nflower is an open-source web application for monitoring and managing celery clusters.\nit provides real-time information about the status of celery workers and tasks.\n\nfeatures\n--------\n\n- real-time monitoring using celery events\n    - view task progress and history\n    - view task details (arguments, start time, runtime, and more)\n- remote control\n    - view worker status and statistics\n    - shutdown and restart worker instances\n    - control worker pool size and autoscale settings\n    - view and modify the queues a worker instance consumes from\n    - view currently running tasks\n    - view scheduled tasks (eta/countdown)\n    - view reserved and revoked tasks\n    - apply time and rate limits\n    - revoke or terminate tasks\n- broker monitoring\n    - view statistics for all celery queues\n- http basic auth, google, github, gitlab and okta oauth\n- prometheus integration\n- api\n\ninstallation\n------------\n\ninstalling `flower` with `pip <http://www.pip-installer.org/>`_ is simple ::\n\n    $ pip install flower\n\nthe development version can be installed from github ::\n\n    $ pip install https://github.com/mher/flower/zipball/master#egg=flower\n\nusage\n-----\n\nto run flower, you need to provide the broker url ::\n\n    $ celery --broker=amqp://guest:guest@localhost:5672// flower\n\nor use the configuration of `celery application <https://docs.celeryq.dev/en/stable/userguide/application.html>`_  ::\n\n    $ celery -a tasks.app flower\n\nby default, flower runs on port 5555, which can be modified with the `port` option ::\n\n    $ celery -a tasks.app flower --port=5001\n\nyou can also run flower using the docker image ::\n\n    $ docker run -v examples:/data -p 5555:5555 mher/flower celery --app=tasks.app flower\n\nin this example, flower is using the `tasks.app` defined in the `examples/tasks.py <https://github.com/mher/flower/blob/master/examples/tasks.py>`_ file\n\napi\n---\n\nflower api enables to manage the cluster via http `rest api`.\n\nfor example you can restart worker's pool by: ::\n\n    $ curl -x post http://localhost:5555/api/worker/pool/restart/myworker\n\nor call a task by: ::\n\n    $ curl -x post -d '{\"args\":[1,2]}' http://localhost:5555/api/task/async-apply/tasks.add\n\nor terminate executing task by: ::\n\n    $ curl -x post -d 'terminate=true' http://localhost:5555/api/task/revoke/8a4da87b-e12b-4547-b89a-e92e4d1f8efd\n\nfor more info checkout `api reference`_\n\n.. _api reference: https://flower.readthedocs.io/en/latest/api.html\n\ndocumentation\n-------------\n\ndocumentation is available at `read the docs`_\n\n.. _read the docs: https://flower.readthedocs.io\n\nlicense\n-------\n\nflower is licensed under bsd 3-clause license.\nsee the `license`_ file for the full license text.\n\n.. _`license`: https://github.com/mher/flower/blob/master/license\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "flower",
  "package_url": "https://pypi.org/project/flower/",
  "project_url": "https://pypi.org/project/flower/",
  "project_urls": {
    "Homepage": "https://github.com/mher/flower"
  },
  "release_url": "https://pypi.org/project/flower/2.0.1/",
  "requires_dist": [
    "celery (>=5.0.5)",
    "tornado (<7.0.0,>=5.0.0)",
    "prometheus-client (>=0.8.0)",
    "humanize",
    "pytz"
  ],
  "requires_python": ">=3.7",
  "summary": "celery flower",
  "version": "2.0.1",
  "releases": [],
  "developers": [
    "mher.movsisyan@gmail.com",
    "mher_movsisyan"
  ],
  "kwds": "flower celeryq celery docker workflows",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_flower",
  "homepage": "https://github.com/mher/flower",
  "release_count": 32,
  "dependency_ids": [
    "pypi_celery",
    "pypi_humanize",
    "pypi_prometheus_client",
    "pypi_pytz",
    "pypi_tornado"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# dvclive\n\n[![pypi](https://img.shields.io/pypi/v/dvclive.svg)](https://pypi.org/project/dvclive/)\n[![status](https://img.shields.io/pypi/status/dvclive.svg)](https://pypi.org/project/dvclive/)\n[![python version](https://img.shields.io/pypi/pyversions/dvclive)](https://pypi.org/project/dvclive)\n[![license](https://img.shields.io/pypi/l/dvclive)](https://opensource.org/licenses/apache-2.0)\n\n[![tests](https://github.com/iterative/dvclive/workflows/tests/badge.svg?branch=main)](https://github.com/iterative/dvclive/actions?workflow=tests)\n[![codecov](https://codecov.io/gh/iterative/dvclive/branch/main/graph/badge.svg)](https://app.codecov.io/gh/iterative/dvclive)\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logocolor=white)](https://github.com/pre-commit/pre-commit)\n[![black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\ndvclive is a python library for logging machine learning metrics and other\nmetadata in simple file formats, which is fully compatible with dvc.\n\n# [documentation](https://dvc.org/doc/dvclive)\n\n- [get started](https://dvc.org/doc/start/experiments)\n- [how it works](https://dvc.org/doc/dvclive/how-it-works)\n- [api reference](https://dvc.org/doc/dvclive/live)\n- [integrations](https://dvc.org/doc/dvclive/ml-frameworks)\n\n______________________________________________________________________\n\n# quickstart\n\n| python api overview | pytorch lightning | scikit-learn | ultralytics yolo v8 |\n|--------|--------|--------|--------|\n| <a href=\"https://colab.research.google.com/github/iterative/dvclive/blob/main/examples/dvclive-quickstart.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" /></a> | <a href=\"https://colab.research.google.com/github/iterative/dvclive/blob/main/examples/dvclive-pytorch-lightning.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" /></a> | <a href=\"https://colab.research.google.com/github/iterative/dvclive/blob/main/examples/dvclive-scikit-learn.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" /></a> | <a href=\"https://colab.research.google.com/github/iterative/dvclive/blob/main/examples/dvclive-yolo.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" /></a> |\n\n## install *dvclive*\n\n```console\n$ pip install dvclive\n```\n\n## initialize dvc repository\n\n```console\n$ git init\n$ dvc init\n$ git commit -m \"dvc init\"\n```\n\n## example code\n\ncopy the snippet below into `train.py` for a basic api usage example:\n\n```python\nimport time\nimport random\n\nfrom dvclive import live\n\nparams = {\"learning_rate\": 0.002, \"optimizer\": \"adam\", \"epochs\": 20}\n\nwith live() as live:\n\n    # log a parameters\n    for param in params:\n        live.log_param(param, params[param])\n\n    # simulate training\n    offset = random.uniform(0.0.2, 0.1)\n    for epoch in range(1, params[\"epochs\"]):\n        fuzz = random.uniform(0.01, 0.1)\n        accuracy = 1 - (2 ** - epoch) - fuzz - offset\n        loss = (2 ** - epoch) + fuzz + offset\n\n        # log metrics to studio\n        live.log_metric(\"accuracy\", accuracy)\n        live.log_metric(\"loss\", loss)\n        live.next_step()\n        time.sleep(0.2)\n```\n\nsee [integrations](https://dvc.org/doc/dvclive/ml-frameworks) for examples using\ndvclive alongside different ml frameworks.\n\n## running\n\nrun this a couple of times to simulate multiple experiments:\n\n```console\n$ python train.py\n$ python train.py\n$ python train.py\n...\n```\n\n## comparing\n\ndvclive outputs can be rendered in different ways:\n\n### dvc cli\n\nyou can use [dvc exp show](https://dvc.org/doc/command-reference/exp/show) and\n[dvc plots](https://dvc.org/doc/command-reference/plots) to compare and\nvisualize metrics, parameters and plots across experiments:\n\n```console\n$ dvc exp show\n```\n\n```\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nexperiment                 created    train.accuracy   train.loss   val.accuracy   val.loss   step   epochs\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nworkspace                  -                  6.0109      0.23311          6.062    0.24321      6   7\nmaster                     08:50 pm                -            -              -          -      -   -\n\u251c\u2500\u2500 4475845 [aulic-chiv]   08:56 pm           6.0109      0.23311          6.062    0.24321      6   7\n\u251c\u2500\u2500 7d4cef7 [yarer-tods]   08:56 pm           4.8551      0.82012         4.5555   0.033533      4   5\n\u2514\u2500\u2500 d503f8e [curst-chad]   08:56 pm           4.9768     0.070585         4.0773    0.46639      4   5\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n```\n\n```console\n$ dvc plots diff $(dvc exp list --names-only) --open\n```\n\n![dvc plots diff](./docs/dvc_plots_diff.png)\n\n### dvc extension for vs code\n\ninside the\n[dvc extension for vs code](https://marketplace.visualstudio.com/items?itemname=iterative.dvc),\nyou can compare and visualize results using the\n[experiments](https://github.com/iterative/vscode-dvc/blob/main/extension/resources/walkthrough/experiments-table.md)\nand\n[plots](https://github.com/iterative/vscode-dvc/blob/main/extension/resources/walkthrough/plots.md)\nviews:\n\n![vscode experiments](./docs/vscode_experiments.png)\n\n![vscode plots](./docs/vscode_plots.png)\n\nwhile experiments are running, live updates will be displayed in both views.\n\n### dvc studio\n\nif you push the results to [dvc studio](https://dvc.org/doc/studio), you can\ncompare experiments against the entire repo history:\n\n![studio compare](./docs/studio_compare.png)\n\nyou can enable\n[studio live experiments](https://dvc.org/doc/studio/user-guide/projects-and-experiments/live-metrics-and-plots)\nto see live updates while experiments are running.\n\n______________________________________________________________________\n\n# comparison to related technologies\n\n**dvclive** is an *ml logger*, similar to:\n\n- [mlflow](https://mlflow.org/)\n- [weights & biases](https://wandb.ai/site)\n- [neptune](https://neptune.ai/)\n\nthe main differences with those *ml loggers* are:\n\n- **dvclive** does not **require** any additional services or servers to run.\n- **dvclive** metrics, parameters, and plots are\n  [stored as plain text files](https://dvc.org/doc/dvclive/how-it-works#directory-structure)\n  that can be versioned by tools like git or tracked as pointers to files in dvc\n  storage.\n- **dvclive** can save experiments or runs as\n  [hidden git commits](https://dvc.org/doc/dvclive/how-it-works#track-the-results).\n\nyou can then use different [options](#comparing) to visualize the metrics,\nparameters, and plots across experiments.\n\n______________________________________________________________________\n\n# contributing\n\ncontributions are very welcome. to learn more, see the\n[contributor guide](contributing.rst).\n\n# license\n\ndistributed under the terms of the\n[apache 2.0 license](https://opensource.org/licenses/apache-2.0), *dvclive* is\nfree and open source software.\n",
  "docs_url": null,
  "keywords": "ai,metrics,collaboration,data-science,data-version-control,developer-tools,git,machine-learning,reproducibility",
  "license": "apache license 2.0",
  "name": "dvclive",
  "package_url": "https://pypi.org/project/dvclive/",
  "project_url": "https://pypi.org/project/dvclive/",
  "project_urls": {
    "Changelog": "https://github.com/iterative/dvclive/releases",
    "Documentation": "https://dvc.org/doc/dvclive",
    "Homepage": "https://github.com/iterative/dvclive",
    "Issues": "https://github.com/iterative/dvclive/issues",
    "Repository": "https://github.com/iterative/dvclive"
  },
  "release_url": "https://pypi.org/project/dvclive/3.5.1/",
  "requires_dist": [
    "dvc >=3.33.3",
    "dvc-render <2,>=1.0.0",
    "dvc-studio-client <1,>=0.17.1",
    "funcy",
    "gto",
    "ruamel.yaml",
    "scmrepo",
    "dvclive[catalyst,fastai,huggingface,image,lgbm,lightning,markdown,mmcv,optuna,plots,tf,xgb] ; extra == 'all'",
    "catalyst >22 ; extra == 'catalyst'",
    "dvclive[all,tests] ; extra == 'dev'",
    "mypy >=1.1.1 ; extra == 'dev'",
    "types-PyYAML ; extra == 'dev'",
    "fastai ; extra == 'fastai'",
    "transformers ; extra == 'huggingface'",
    "datasets ; extra == 'huggingface'",
    "numpy ; extra == 'image'",
    "pillow ; extra == 'image'",
    "lightgbm ; extra == 'lgbm'",
    "lightning >=2.0 ; extra == 'lightning'",
    "torch ; extra == 'lightning'",
    "jsonargparse[signatures] >=4.26.1 ; extra == 'lightning'",
    "matplotlib ; extra == 'markdown'",
    "mmcv ; extra == 'mmcv'",
    "optuna ; extra == 'optuna'",
    "scikit-learn ; extra == 'plots'",
    "pandas ; extra == 'plots'",
    "numpy ; extra == 'plots'",
    "scikit-learn ; extra == 'sklearn'",
    "pytest <8.0,>=7.2.0 ; extra == 'tests'",
    "pytest-sugar <1.0,>=0.9.6 ; extra == 'tests'",
    "pytest-cov <4.0,>=3.0.0 ; extra == 'tests'",
    "pytest-mock <4.0,>=3.8.2 ; extra == 'tests'",
    "dvclive[image,markdown,plots] ; extra == 'tests'",
    "ipython ; extra == 'tests'",
    "tensorflow ; extra == 'tf'",
    "xgboost ; extra == 'xgb'"
  ],
  "requires_python": ">=3.8",
  "summary": "experiments logger for ml projects.",
  "version": "3.5.1",
  "releases": [],
  "developers": [
    "support@dvc.org"
  ],
  "kwds": "dvclive dvc codecov pyversions github",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_dvclive",
  "homepage": "",
  "release_count": 103,
  "dependency_ids": [
    "pypi_catalyst",
    "pypi_datasets",
    "pypi_dvc",
    "pypi_dvc_render",
    "pypi_dvc_studio_client",
    "pypi_dvclive",
    "pypi_fastai",
    "pypi_funcy",
    "pypi_gto",
    "pypi_ipython",
    "pypi_jsonargparse",
    "pypi_lightgbm",
    "pypi_lightning",
    "pypi_matplotlib",
    "pypi_mmcv",
    "pypi_mypy",
    "pypi_numpy",
    "pypi_optuna",
    "pypi_pandas",
    "pypi_pillow",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_mock",
    "pypi_pytest_sugar",
    "pypi_ruamel.yaml",
    "pypi_scikit_learn",
    "pypi_scmrepo",
    "pypi_tensorflow",
    "pypi_torch",
    "pypi_transformers",
    "pypi_types_pyyaml",
    "pypi_xgboost"
  ]
}
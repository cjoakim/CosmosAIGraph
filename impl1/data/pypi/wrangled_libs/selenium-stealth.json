{
  "classifiers": [
    "environment :: console",
    "environment :: macos x",
    "environment :: web environment",
    "environment :: win32 (ms windows)",
    "framework :: pytest",
    "intended audience :: developers",
    "intended audience :: information technology",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: os independent",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: scientific/engineering",
    "topic :: software development",
    "topic :: software development :: libraries",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing",
    "topic :: software development :: testing :: acceptance",
    "topic :: software development :: testing :: traffic generation",
    "topic :: utilities"
  ],
  "description": "# selenium-stealth [![build status](https://travis-ci.com/diprajpatra/selenium-stealth.svg?branch=main)](https://travis-ci.com/diprajpatra/selenium-stealth)\n\na python package **selenium-stealth** to prevent detection. this programme is trying to make python selenium more stealthy. \n\nas of now selenium-stealth **only support selenium chrome**.\n\nafter using selenium-stealth you can prevent almost all selenium detections. there is a lot of guides on stackoverflow on how to prevent selenium detection but i can not find a single python package for it so i am just creating one after all we can't let the cats win.\nit can be seen as a re-implementation of javascript [puppeteer-extra-plugin-stealth](https://github.com/berstend/puppeteer-extra/tree/master/packages/puppeteer-extra-plugin-stealth) developed by [@berstend](https://github.com/berstend>).\n\nfeatures that currently selenium-stealth can offer:\n\n- \u2705\ufe0f **`selenium-stealth` with stealth passes all public bot tests.**\n\n- \u2705\ufe0f **with `selenium-stealth` selenium can do google account login.**\n\n- \u2705\ufe0f **`selenium-stealth` help with maintaining a normal recaptcha v3 score**\n\n## donations\nif you find this package useful and would like to support its continued development, you can donate here. thank you for your support.\n\n[![donate via paypal](https://www.paypal.com/en_us/i/btn/btn_donate_lg.gif)](https://paypal.me/diprajpatra)\n\n[<img src=\"https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png\"  width=\"120\" height=\"30\">](https://www.buymeacoffee.com/dipraj)\n## install\nselenium-stealth is available on pypi you can install with pip.\n```\n$ pip install selenium-stealth\n```\n\n## usage\n\n```python\nfrom selenium import webdriver\nfrom selenium_stealth import stealth\nimport time\n\noptions = webdriver.chromeoptions()\noptions.add_argument(\"start-maximized\")\n\n# options.add_argument(\"--headless\")\n\noptions.add_experimental_option(\"excludeswitches\", [\"enable-automation\"])\noptions.add_experimental_option('useautomationextension', false)\ndriver = webdriver.chrome(options=options, executable_path=r\"c:\\users\\dipraj\\programming\\adclick_bot\\chromedriver.exe\")\n\nstealth(driver,\n        languages=[\"en-us\", \"en\"],\n        vendor=\"google inc.\",\n        platform=\"win32\",\n        webgl_vendor=\"intel inc.\",\n        renderer=\"intel iris opengl engine\",\n        fix_hairline=true,\n        )\n\nurl = \"https://bot.sannysoft.com/\"\ndriver.get(url)\ntime.sleep(5)\ndriver.quit()\n```\n\n## args\n\n```python\nstealth(\n    driver: driver,\n    user_agent: str = 'mozilla/5.0 (windows nt 10.0; win64; x64) applewebkit/537.36 (khtml, like gecko) chrome/83.0.4103.53 safari/537.36',\n    languages: [str] = [\"en-us\", \"en\"],\n    vendor: str = \"google inc.\",\n    platform: str = \"win32\",\n    webgl_vendor: str = \"intel inc.\",\n    renderer: str = \"intel iris opengl engine\",\n    fix_hairline: bool = false,\n    run_on_insecure_origins: bool = false,\n)\n```\n\n## test results (red is bad)\n\n### selenium without <strong>selenium-stealth \ud83d\ude22</strong>\n\n<table class=\"image\">\n<tr>\n  <td><figure class=\"image\"><a href=\"https://raw.githubusercontent.com/diprajpatra/selenium-stealth/main/stealthtests/selenium_chrome_headless_without_stealth.png\"><img src=\"https://raw.githubusercontent.com/diprajpatra/selenium-stealth/main/stealthtests/selenium_chrome_headless_without_stealth.png\"></a><figcaption>headless</figcaption></figure></td>\n  <td><figure class=\"image\"><a href=\"https://raw.githubusercontent.com/diprajpatra/selenium-stealth/main/stealthtests/selenium_chrome_headful_without_stealth.png\"><img src=\"https://raw.githubusercontent.com/diprajpatra/selenium-stealth/main/stealthtests/selenium_chrome_headful_without_stealth.png\"></a><figcaption>headful</figcaption></figure></td>\n</tr>\n</table>\n\n### selenium with <strong>selenium-stealth \ud83d\udcaf</strong>\n\n<table class=\"image\">\n<tr>\n  <td><figure class=\"image\"><a href=\"https://raw.githubusercontent.com/diprajpatra/selenium-stealth/main/stealthtests/selenium_chrome_headless_with_stealth.png\"><img src=\"https://raw.githubusercontent.com/diprajpatra/selenium-stealth/main/stealthtests/selenium_chrome_headless_with_stealth.png\"></a><figcaption>headless</figcaption></figure></td>\n  <td><figure class=\"image\"><a href=\"https://raw.githubusercontent.com/diprajpatra/selenium-stealth/main/stealthtests/selenium_chrome_headful_with_stealth.png\"><img src=\"https://raw.githubusercontent.com/diprajpatra/selenium-stealth/main/stealthtests/selenium_chrome_headful_with_stealth.png\"></a><figcaption>headful</figcaption></figure></td>\n</tr>\n</table>\n\n## license\n\ncopyright \u00a9 2020, [diprajpatra](https://github.com/diprajpatra). released under the mit license.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "selenium-stealth",
  "package_url": "https://pypi.org/project/selenium-stealth/",
  "project_url": "https://pypi.org/project/selenium-stealth/",
  "project_urls": {
    "Homepage": "https://github.com/diprajpatra/selenium-stealth"
  },
  "release_url": "https://pypi.org/project/selenium-stealth/1.0.6/",
  "requires_dist": [
    "selenium",
    "pytest ; extra == 'test'"
  ],
  "requires_python": ">=3, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
  "summary": "trying to make python selenium more stealthy.",
  "version": "1.0.6",
  "releases": [],
  "developers": [
    "dipraj_patra",
    "diprajpatra@gmail.com"
  ],
  "kwds": "selenium_stealth selenium_chrome_headless_with_stealth selenium_chrome_headless_without_stealth selenium_chrome_headful_with_stealth selenium_chrome_headful_without_stealth",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_selenium_stealth",
  "homepage": "https://github.com/diprajpatra/selenium-stealth",
  "release_count": 7,
  "dependency_ids": [
    "pypi_pytest",
    "pypi_selenium"
  ]
}
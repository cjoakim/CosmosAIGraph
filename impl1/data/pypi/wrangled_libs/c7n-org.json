{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: system :: distributed computing",
    "topic :: system :: systems administration"
  ],
  "description": "# c7n-org: multi account custodian execution\n\n% [comment]: # (         !!! important !!!                    )\n% [comment]: # (this file is moved during document generation.)\n% [comment]: # (only edit the original document at ./tools/c7n_org/readme.md)\n\nc7n-org is a tool to run custodian against multiple aws accounts,\nazure subscriptions, gcp projects, or oci tenancies in parallel.\n\n## installation\n\n```shell\npip install c7n-org\n```\n\nc7n-org has 3 run modes:\n\n```shell\nusage: c7n-org [options] command [args]...\n\n  custodian organization multi-account runner.\n\noptions:\n  --help  show this message and exit.\n\ncommands:\n  report      report on an aws cross account policy execution\n  run         run a custodian policy across accounts (aws, azure, gcp, oci)\n  run-script  run a script across aws accounts\n```\n\nin order to run c7n-org against multiple accounts, a config file must\nfirst be created containing pertinent information about the accounts:\n\n\nexample aws config file:\n\n```yaml\naccounts:\n- account_id: '123123123123'\n  name: account-1\n  regions:\n  - us-east-1\n  - us-west-2\n  role: arn:aws:iam::123123123123:role/cloudcustodian\n  vars:\n    charge_code: xyz\n  tags:\n  - type:prod\n  - division:some division\n  - partition:us\n  - scope:pci\n...\n```\n\nexample azure config file:\n\n```yaml\nsubscriptions:\n- name: subscription-1\n  subscription_id: a1b2c3d4-e5f6-g7h8i9...\n- name: subscription-2\n  subscription_id: 1z2y3x4w-5v6u-7t8s9r...\n```\n\nexample gcp config file:\n\n```yaml\nprojects:\n- name: app-dev\n  project_id: app-203501\n  tags:\n  - label:env:dev  \n- name: app-prod\n  project_id: app-1291\n  tags:\n  - label:env:dev\n\n```\n\nexample oci config file:\n\n```yaml\ntenancies:\n- name: dev-tenancy\n  profile: devtenancy\n  regions:\n    - us-ashburn-1\n    - us-phoenix-1\n  vars:\n    environment: dev\n  tags:  \n    - type:test\n...\n\n```\n\n### config file generation\n\nwe also distribute scripts to generate the necessary config file in the [`scripts` folder](https://github.com/cloud-custodian/cloud-custodian/tree/main/tools/c7n_org/scripts).\n\n**note:** currently these are distributed only via git. per\n<https://github.com/cloud-custodian/cloud-custodian/issues/2420>, we'll\nbe looking to incorporate them into a new c7n-org subcommand.\n\n- for **aws**, the script `orgaccounts.py` generates a config file\n  from the aws organizations api.\n\n```shell\npython orgaccounts.py -f accounts.yml\n```\n\n- for **azure**, the script `azuresubs.py` generates a config file\n  from the azure resource management api.\n\n    - please see the [additional azure instructions](#additional-azure-instructions) for initial setup and other important info.\n\n```shell\npython azuresubs.py -f subscriptions.yml\n```\n\n- for **gcp**, the script `gcpprojects.py` generates a config file from\n  the gcp resource management api.\n\n```shell\npython gcpprojects.py -f projects.yml\n```\n\n- for **oci**, the script `ocitenancies.py` generates a config file\n  using oci configuration file and oci organizations api.\n  \n    - please refer to the [additional oci instructions](#additional-oci-instructions) for additional information.\n\n```shell\npython ocitenancies.py -f tenancies.yml\n```\n\n## running a policy with c7n-org\n\nto run a policy, the following arguments must be passed in:\n\n```shell\n-c | accounts|projects|subscriptions|tenancies config file\n-s | output directory\n-u | policy\n```\n\nfor example:\n\n```shell\nc7n-org run -c accounts.yml -s output -u test.yml --dryrun\n```\n\nafter running the above command, the following folder structure will be created:\n\n```\noutput\n    |_ account-1\n        |_ us-east-1\n            |_ policy-name\n                |_ resources.json\n                |_ custodian-run.log\n        |_ us-west-2\n            |_ policy-name\n                |_ resources.json\n                |_ custodian-run.log\n    |- account-2\n...\n```\n\nuse `c7n-org report` to generate a csv report from the output directory.\n\n## selecting accounts, regions, policies for execution\n\nyou can filter the accounts to be run against by either passing the\naccount name or id via the `-a` flag, which can be specified multiple\ntimes, or alternatively with comma separated values.\n\ngroups of accounts can also be selected for execution by specifying\nthe `-t` tag filter.  account tags are specified in the config\nfile. given the above accounts config file, you can specify all prod\naccounts with `-t type:prod`. you can specify the `-t` flag multiple\ntimes or use a comma separated list.\n\nyou can specify which policies to use for execution by either\nspecifying `-p` or selecting groups of policies via their tags with\n`-l`. both options support being specified multiple times or using\ncomma separated values.\n\nby default in aws, c7n-org will execute in parallel across regions.\nthe `-r` flag can be specified multiple times and defaults to\n`(us-east-1, us-west-2)`.  a special value of `all` will execute across\nall regions.\n\n\nsee `c7n-org run --help` for more information.\n\n## defining and using variables\n\neach account/subscription/project configuration in the config file can\nalso define a variables section `vars` that can be used in policies'\ndefinitions and are interpolated at execution time. these are in\naddition to the default runtime variables custodian provides like\n`account_id`, `now`, and `region`.\n\nexample of defining in c7n-org config file:\n\n```yaml\naccounts:\n- account_id: '123123123123'\n  name: account-1\n  role: arn:aws:iam::123123123123:role/cloudcustodian\n  vars:\n    charge_code: xyz\n```\n\nexample of using in a policy file:\n\n```yaml\npolicies:\n - name: ec2-check-tag\n   resource: aws.ec2\n   filters:\n      - \"tag:costcenter\": \"{charge_code}\"\n```\n\nanother enhancement for `c7n-org run-script` is to support a few vars in the script arg.\nthe available vars are `account`, `account_id`, `region` and `output_dir`.\n\n```shell\nc7n-org run-script -s . -c my-projects.yml gcp_check_{region}.sh\n# or\nc7n-org run-script -s . -c my-projects.yml use_another_policy_result.sh {output_dir}\n```\n\n**note:** variable interpolation is sensitive to proper quoting and spacing,\ni.e., `{ charge_code }` would be invalid due to the extra white space. additionally,\nyaml parsing can transform a value like `{charge_code}` to null, unless it's quoted\nin strings like the above example. values that do interpolation into other content\ndon't require quoting, i.e., \"my_{charge_code}\".\n\n## other commands\n\nc7n-org also supports running arbitrary scripts against accounts via\nthe run-script command.  for aws the standard aws sdk credential\ninformation is exported into the process environment before executing.\nfor azure and gcp, only the environment variables\n`azure_subscription_id` and `project_id` are exported(in addition of\nthe system env variables).\n\nc7n-org also supports generating reports for a given policy execution\nacross accounts via the `c7n-org report` subcommand.\n\n## additional azure instructions\n\nif you're using an azure service principal for executing c7n-org\nyou'll need to ensure that the principal has access to multiple\nsubscriptions.\n\nfor instructions on creating a service principal and granting access\nacross subscriptions, visit the [azure authentication docs\npage](https://cloudcustodian.io/docs/azure/authentication.html).\n\n## additional oci instructions\n\nthe script `ocitenancies.py` accepts an optional argument `--add-child-tenancies`\nwhich adds all the child tenancies associated with the `default` profile's tenancy \nin the generated c7n-org configuration file. if the profile for child tenancy is not available in \nthe oci configuration file, then either user can add the profile for the child tenancy to the\noci configuration file and replace the `<add_profile>` entry in the c7n-org configuration with the\ncorresponding profile name or the user can delete the child tenancy entry from the\nc7n-org configuration file. for more info about config file, refer to this [page](https://docs.oracle.com/en-us/iaas/content/api/concepts/sdkconfig.htm).\n\nif the user wants to query for the resources in the specific compartments in c7n-org, then the user\ncan pass the compartment ocid's to the `oci_compartments` under the `vars` section like below. if the \n`oci_comparments` is not passed under `vars`, then the resources will be fetched from the tenancy level.\n\n```yaml\ntenancies:\n- name: dev-tenancy\n  profile: devtenancy\n  regions:\n    - us-ashburn-1\n    - us-phoenix-1\n  vars:\n    oci_compartments: ocid1.test.oc1..<unique_id>example-compartmentid-2-value,ocid1.test.oc1..<unique_id>example-compartmentid-3-value\n    environment: dev\n- name: test-tenancy\n  profile: testtenancy\n  regions:\n    - us-ashburn-1\n  vars:\n    environment: test\n\n```\n\n\n\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "c7n-org",
  "package_url": "https://pypi.org/project/c7n-org/",
  "project_url": "https://pypi.org/project/c7n-org/",
  "project_urls": {
    "Documentation": "https://cloudcustodian.io/docs/tools/c7n-org.html",
    "Homepage": "https://cloudcustodian.io",
    "Repository": "https://github.com/cloud-custodian/cloud-custodian"
  },
  "release_url": "https://pypi.org/project/c7n-org/0.6.32/",
  "requires_dist": [
    "c7n (==0.9.33) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "click (==8.1.7) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "argcomplete (==3.1.6) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "boto3 (==1.33.1) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "docutils (==0.18.1) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "importlib-metadata (==5.2.0) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "jsonschema (==4.20.0) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "python-dateutil (==2.8.2) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "pyyaml (==6.0.1) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "tabulate (==0.9.0) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "urllib3 (==1.26.18) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "colorama (==0.4.6) ; python_version >= \"3.8\" and python_version < \"4.0\" and platform_system == \"Windows\"",
    "botocore (==1.33.1) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "jmespath (==1.0.1) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "s3transfer (==0.8.0) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "zipp (==3.17.0) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "attrs (==23.1.0) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "importlib-resources (==6.1.1) ; python_version >= \"3.8\" and python_version < \"3.9\"",
    "jsonschema-specifications (==2023.11.1) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "pkgutil-resolve-name (==1.3.10) ; python_version >= \"3.8\" and python_version < \"3.9\"",
    "referencing (==0.31.0) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "rpds-py (==0.13.1) ; python_version >= \"3.8\" and python_version < \"4.0\"",
    "six (==1.16.0) ; python_version >= \"3.8\" and python_version < \"4.0\""
  ],
  "requires_python": ">=3.8,<4.0",
  "summary": "cloud custodian - parallel execution",
  "version": "0.6.32",
  "releases": [],
  "developers": [
    "cloud_custodian_project"
  ],
  "kwds": "c7n_org custodian c7n accounts orgaccounts",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_c7n_org",
  "homepage": "https://cloudcustodian.io",
  "release_count": 49,
  "dependency_ids": [
    "pypi_argcomplete",
    "pypi_attrs",
    "pypi_boto3",
    "pypi_botocore",
    "pypi_c7n",
    "pypi_click",
    "pypi_colorama",
    "pypi_docutils",
    "pypi_importlib_metadata",
    "pypi_importlib_resources",
    "pypi_jmespath",
    "pypi_jsonschema",
    "pypi_jsonschema_specifications",
    "pypi_pkgutil_resolve_name",
    "pypi_python_dateutil",
    "pypi_pyyaml",
    "pypi_referencing",
    "pypi_rpds_py",
    "pypi_s3transfer",
    "pypi_six",
    "pypi_tabulate",
    "pypi_urllib3",
    "pypi_zipp"
  ]
}
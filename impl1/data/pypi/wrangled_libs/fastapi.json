{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: web environment",
    "framework :: asyncio",
    "framework :: fastapi",
    "framework :: pydantic",
    "framework :: pydantic :: 1",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: internet :: www/http",
    "topic :: internet :: www/http :: http servers",
    "topic :: software development",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: application frameworks",
    "topic :: software development :: libraries :: python modules",
    "typing :: typed"
  ],
  "description": "<p align=\"center\">\n  <a href=\"https://fastapi.tiangolo.com\"><img src=\"https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png\" alt=\"fastapi\"></a>\n</p>\n<p align=\"center\">\n    <em>fastapi framework, high performance, easy to learn, fast to code, ready for production</em>\n</p>\n<p align=\"center\">\n<a href=\"https://github.com/tiangolo/fastapi/actions?query=workflow%3atest+event%3apush+branch%3amaster\" target=\"_blank\">\n    <img src=\"https://github.com/tiangolo/fastapi/workflows/test/badge.svg?event=push&branch=master\" alt=\"test\">\n</a>\n<a href=\"https://coverage-badge.samuelcolvin.workers.dev/redirect/tiangolo/fastapi\" target=\"_blank\">\n    <img src=\"https://coverage-badge.samuelcolvin.workers.dev/tiangolo/fastapi.svg\" alt=\"coverage\">\n</a>\n<a href=\"https://pypi.org/project/fastapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/v/fastapi?color=%2334d058&label=pypi%20package\" alt=\"package version\">\n</a>\n<a href=\"https://pypi.org/project/fastapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/pyversions/fastapi.svg?color=%2334d058\" alt=\"supported python versions\">\n</a>\n</p>\n\n---\n\n**documentation**: <a href=\"https://fastapi.tiangolo.com\" target=\"_blank\">https://fastapi.tiangolo.com</a>\n\n**source code**: <a href=\"https://github.com/tiangolo/fastapi\" target=\"_blank\">https://github.com/tiangolo/fastapi</a>\n\n---\n\nfastapi is a modern, fast (high-performance), web framework for building apis with python 3.8+ based on standard python type hints.\n\nthe key features are:\n\n* **fast**: very high performance, on par with **nodejs** and **go** (thanks to starlette and pydantic). [one of the fastest python frameworks available](#performance).\n* **fast to code**: increase the speed to develop features by about 200% to 300%. *\n* **fewer bugs**: reduce about 40% of human (developer) induced errors. *\n* **intuitive**: great editor support. <abbr title=\"also known as auto-complete, autocompletion, intellisense\">completion</abbr> everywhere. less time debugging.\n* **easy**: designed to be easy to use and learn. less time reading docs.\n* **short**: minimize code duplication. multiple features from each parameter declaration. fewer bugs.\n* **robust**: get production-ready code. with automatic interactive documentation.\n* **standards-based**: based on (and fully compatible with) the open standards for apis: <a href=\"https://github.com/oai/openapi-specification\" class=\"external-link\" target=\"_blank\">openapi</a> (previously known as swagger) and <a href=\"https://json-schema.org/\" class=\"external-link\" target=\"_blank\">json schema</a>.\n\n<small>* estimation based on tests on an internal development team, building production applications.</small>\n\n## sponsors\n\n<!-- sponsors -->\n\n<a href=\"https://cryptapi.io/\" target=\"_blank\" title=\"cryptapi: your easy to use, secure and privacy oriented payment gateway.\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/cryptapi.svg\"></a>\n<a href=\"https://platform.sh/try-it-now/?utm_source=fastapi-signup&utm_medium=banner&utm_campaign=fastapi-signup-june-2023\" target=\"_blank\" title=\"build, run and scale your apps on a modern, reliable, and secure paas.\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/platform-sh.png\"></a>\n<a href=\"https://www.porter.run\" target=\"_blank\" title=\"deploy fastapi on aws with a few clicks\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/porter.png\"></a>\n<a href=\"https://bump.sh/fastapi?utm_source=fastapi&utm_medium=referral&utm_campaign=sponsor\" target=\"_blank\" title=\"automate fastapi documentation generation with bump.sh\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/bump-sh.svg\"></a>\n<a href=\"https://reflex.dev\" target=\"_blank\" title=\"reflex\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/reflex.png\"></a>\n<a href=\"https://github.com/scalar/scalar/?utm_source=fastapi&utm_medium=website&utm_campaign=main-badge\" target=\"_blank\" title=\"scalar: beautiful open-source api references from swagger/openapi files\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/scalar.svg\"></a>\n<a href=\"https://www.propelauth.com/?utm_source=fastapi&utm_campaign=1223&utm_medium=mainbadge\" target=\"_blank\" title=\"auth, user management and more for your b2b product\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/propelauth.png\"></a>\n<a href=\"https://www.deta.sh/?ref=fastapi\" target=\"_blank\" title=\"the launchpad for all your (team's) ideas\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/deta.svg\"></a>\n<a href=\"https://training.talkpython.fm/fastapi-courses\" target=\"_blank\" title=\"fastapi video courses on demand from people you trust\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/talkpython.png\"></a>\n<a href=\"https://testdriven.io/courses/tdd-fastapi/\" target=\"_blank\" title=\"learn to build high-quality web apps with best practices\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/testdriven.svg\"></a>\n<a href=\"https://github.com/deepset-ai/haystack/\" target=\"_blank\" title=\"build powerful search from composable, open source building blocks\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/haystack-fastapi.svg\"></a>\n<a href=\"https://careers.powens.com/\" target=\"_blank\" title=\"powens is hiring!\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/powens.png\"></a>\n<a href=\"https://databento.com/\" target=\"_blank\" title=\"pay as you go for market data\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/databento.svg\"></a>\n<a href=\"https://speakeasyapi.dev?utm_source=fastapi+repo&utm_medium=github+sponsorship\" target=\"_blank\" title=\"sdks for your api | speakeasy\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/speakeasy.png\"></a>\n<a href=\"https://www.svix.com/\" target=\"_blank\" title=\"svix - webhooks as a service\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/svix.svg\"></a>\n<a href=\"https://www.codacy.com/?utm_source=github&utm_medium=sponsors&utm_id=pioneers\" target=\"_blank\" title=\"take code reviews from hours to minutes\"><img src=\"https://fastapi.tiangolo.com/img/sponsors/codacy.png\"></a>\n\n<!-- /sponsors -->\n\n<a href=\"https://fastapi.tiangolo.com/fastapi-people/#sponsors\" class=\"external-link\" target=\"_blank\">other sponsors</a>\n\n## opinions\n\n\"_[...] i'm using **fastapi** a ton these days. [...] i'm actually planning to use it for all of my team's **ml services at microsoft**. some of them are getting integrated into the core **windows** product and some **office** products._\"\n\n<div style=\"text-align: right; margin-right: 10%;\">kabir khan - <strong>microsoft</strong> <a href=\"https://github.com/tiangolo/fastapi/pull/26\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_we adopted the **fastapi** library to spawn a **rest** server that can be queried to obtain **predictions**. [for ludwig]_\"\n\n<div style=\"text-align: right; margin-right: 10%;\">piero molino, yaroslav dudin, and sai sumanth miryala - <strong>uber</strong> <a href=\"https://eng.uber.com/ludwig-v0-2/\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_**netflix** is pleased to announce the open-source release of our **crisis management** orchestration framework: **dispatch**! [built with **fastapi**]_\"\n\n<div style=\"text-align: right; margin-right: 10%;\">kevin glisson, marc vilanova, forest monsen - <strong>netflix</strong> <a href=\"https://netflixtechblog.com/introducing-dispatch-da4b8a2a8072\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_i\u2019m over the moon excited about **fastapi**. it\u2019s so fun!_\"\n\n<div style=\"text-align: right; margin-right: 10%;\">brian okken - <strong><a href=\"https://pythonbytes.fm/episodes/show/123/time-to-right-the-py-wrongs?time_in_sec=855\" target=\"_blank\">python bytes</a> podcast host</strong> <a href=\"https://twitter.com/brianokken/status/1112220079972728832\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_honestly, what you've built looks super solid and polished. in many ways, it's what i wanted **hug** to be - it's really inspiring to see someone build that._\"\n\n<div style=\"text-align: right; margin-right: 10%;\">timothy crosley - <strong><a href=\"https://www.hug.rest/\" target=\"_blank\">hug</a> creator</strong> <a href=\"https://news.ycombinator.com/item?id=19455465\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_if you're looking to learn one **modern framework** for building rest apis, check out **fastapi** [...] it's fast, easy to use and easy to learn [...]_\"\n\n\"_we've switched over to **fastapi** for our **apis** [...] i think you'll like it [...]_\"\n\n<div style=\"text-align: right; margin-right: 10%;\">ines montani - matthew honnibal - <strong><a href=\"https://explosion.ai\" target=\"_blank\">explosion ai</a> founders - <a href=\"https://spacy.io\" target=\"_blank\">spacy</a> creators</strong> <a href=\"https://twitter.com/_inesmontani/status/1144173225322143744\" target=\"_blank\"><small>(ref)</small></a> - <a href=\"https://twitter.com/honnibal/status/1144031421859655680\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n\"_if anyone is looking to build a production python api, i would highly recommend **fastapi**. it is **beautifully designed**, **simple to use** and **highly scalable**, it has become a **key component** in our api first development strategy and is driving many automations and services such as our virtual tac engineer._\"\n\n<div style=\"text-align: right; margin-right: 10%;\">deon pillsbury - <strong>cisco</strong> <a href=\"https://www.linkedin.com/posts/deonpillsbury_cisco-cx-python-activity-6963242628536487936-trap/\" target=\"_blank\"><small>(ref)</small></a></div>\n\n---\n\n## **typer**, the fastapi of clis\n\n<a href=\"https://typer.tiangolo.com\" target=\"_blank\"><img src=\"https://typer.tiangolo.com/img/logo-margin/logo-margin-vector.svg\" style=\"width: 20%;\"></a>\n\nif you are building a <abbr title=\"command line interface\">cli</abbr> app to be used in the terminal instead of a web api, check out <a href=\"https://typer.tiangolo.com/\" class=\"external-link\" target=\"_blank\">**typer**</a>.\n\n**typer** is fastapi's little sibling. and it's intended to be the **fastapi of clis**. \u2328\ufe0f \ud83d\ude80\n\n## requirements\n\npython 3.8+\n\nfastapi stands on the shoulders of giants:\n\n* <a href=\"https://www.starlette.io/\" class=\"external-link\" target=\"_blank\">starlette</a> for the web parts.\n* <a href=\"https://pydantic-docs.helpmanual.io/\" class=\"external-link\" target=\"_blank\">pydantic</a> for the data parts.\n\n## installation\n\n<div class=\"termy\">\n\n```console\n$ pip install fastapi\n\n---> 100%\n```\n\n</div>\n\nyou will also need an asgi server, for production such as <a href=\"https://www.uvicorn.org\" class=\"external-link\" target=\"_blank\">uvicorn</a> or <a href=\"https://github.com/pgjones/hypercorn\" class=\"external-link\" target=\"_blank\">hypercorn</a>.\n\n<div class=\"termy\">\n\n```console\n$ pip install \"uvicorn[standard]\"\n\n---> 100%\n```\n\n</div>\n\n## example\n\n### create it\n\n* create a file `main.py` with:\n\n```python\nfrom typing import union\n\nfrom fastapi import fastapi\n\napp = fastapi()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"hello\": \"world\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: union[str, none] = none):\n    return {\"item_id\": item_id, \"q\": q}\n```\n\n<details markdown=\"1\">\n<summary>or use <code>async def</code>...</summary>\n\nif your code uses `async` / `await`, use `async def`:\n\n```python hl_lines=\"9  14\"\nfrom typing import union\n\nfrom fastapi import fastapi\n\napp = fastapi()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"hello\": \"world\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: union[str, none] = none):\n    return {\"item_id\": item_id, \"q\": q}\n```\n\n**note**:\n\nif you don't know, check the _\"in a hurry?\"_ section about <a href=\"https://fastapi.tiangolo.com/async/#in-a-hurry\" target=\"_blank\">`async` and `await` in the docs</a>.\n\n</details>\n\n### run it\n\nrun the server with:\n\n<div class=\"termy\">\n\n```console\n$ uvicorn main:app --reload\n\ninfo:     uvicorn running on http://127.0.0.1:8000 (press ctrl+c to quit)\ninfo:     started reloader process [28720]\ninfo:     started server process [28722]\ninfo:     waiting for application startup.\ninfo:     application startup complete.\n```\n\n</div>\n\n<details markdown=\"1\">\n<summary>about the command <code>uvicorn main:app --reload</code>...</summary>\n\nthe command `uvicorn main:app` refers to:\n\n* `main`: the file `main.py` (the python \"module\").\n* `app`: the object created inside of `main.py` with the line `app = fastapi()`.\n* `--reload`: make the server restart after code changes. only do this for development.\n\n</details>\n\n### check it\n\nopen your browser at <a href=\"http://127.0.0.1:8000/items/5?q=somequery\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000/items/5?q=somequery</a>.\n\nyou will see the json response as:\n\n```json\n{\"item_id\": 5, \"q\": \"somequery\"}\n```\n\nyou already created an api that:\n\n* receives http requests in the _paths_ `/` and `/items/{item_id}`.\n* both _paths_ take `get` <em>operations</em> (also known as http _methods_).\n* the _path_ `/items/{item_id}` has a _path parameter_ `item_id` that should be an `int`.\n* the _path_ `/items/{item_id}` has an optional `str` _query parameter_ `q`.\n\n### interactive api docs\n\nnow go to <a href=\"http://127.0.0.1:8000/docs\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000/docs</a>.\n\nyou will see the automatic interactive api documentation (provided by <a href=\"https://github.com/swagger-api/swagger-ui\" class=\"external-link\" target=\"_blank\">swagger ui</a>):\n\n![swagger ui](https://fastapi.tiangolo.com/img/index/index-01-swagger-ui-simple.png)\n\n### alternative api docs\n\nand now, go to <a href=\"http://127.0.0.1:8000/redoc\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000/redoc</a>.\n\nyou will see the alternative automatic documentation (provided by <a href=\"https://github.com/rebilly/redoc\" class=\"external-link\" target=\"_blank\">redoc</a>):\n\n![redoc](https://fastapi.tiangolo.com/img/index/index-02-redoc-simple.png)\n\n## example upgrade\n\nnow modify the file `main.py` to receive a body from a `put` request.\n\ndeclare the body using standard python types, thanks to pydantic.\n\n```python hl_lines=\"4  9-12  25-27\"\nfrom typing import union\n\nfrom fastapi import fastapi\nfrom pydantic import basemodel\n\napp = fastapi()\n\n\nclass item(basemodel):\n    name: str\n    price: float\n    is_offer: union[bool, none] = none\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"hello\": \"world\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: union[str, none] = none):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: item):\n    return {\"item_name\": item.name, \"item_id\": item_id}\n```\n\nthe server should reload automatically (because you added `--reload` to the `uvicorn` command above).\n\n### interactive api docs upgrade\n\nnow go to <a href=\"http://127.0.0.1:8000/docs\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000/docs</a>.\n\n* the interactive api documentation will be automatically updated, including the new body:\n\n![swagger ui](https://fastapi.tiangolo.com/img/index/index-03-swagger-02.png)\n\n* click on the button \"try it out\", it allows you to fill the parameters and directly interact with the api:\n\n![swagger ui interaction](https://fastapi.tiangolo.com/img/index/index-04-swagger-03.png)\n\n* then click on the \"execute\" button, the user interface will communicate with your api, send the parameters, get the results and show them on the screen:\n\n![swagger ui interaction](https://fastapi.tiangolo.com/img/index/index-05-swagger-04.png)\n\n### alternative api docs upgrade\n\nand now, go to <a href=\"http://127.0.0.1:8000/redoc\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000/redoc</a>.\n\n* the alternative documentation will also reflect the new query parameter and body:\n\n![redoc](https://fastapi.tiangolo.com/img/index/index-06-redoc-02.png)\n\n### recap\n\nin summary, you declare **once** the types of parameters, body, etc. as function parameters.\n\nyou do that with standard modern python types.\n\nyou don't have to learn a new syntax, the methods or classes of a specific library, etc.\n\njust standard **python 3.8+**.\n\nfor example, for an `int`:\n\n```python\nitem_id: int\n```\n\nor for a more complex `item` model:\n\n```python\nitem: item\n```\n\n...and with that single declaration you get:\n\n* editor support, including:\n    * completion.\n    * type checks.\n* validation of data:\n    * automatic and clear errors when the data is invalid.\n    * validation even for deeply nested json objects.\n* <abbr title=\"also known as: serialization, parsing, marshalling\">conversion</abbr> of input data: coming from the network to python data and types. reading from:\n    * json.\n    * path parameters.\n    * query parameters.\n    * cookies.\n    * headers.\n    * forms.\n    * files.\n* <abbr title=\"also known as: serialization, parsing, marshalling\">conversion</abbr> of output data: converting from python data and types to network data (as json):\n    * convert python types (`str`, `int`, `float`, `bool`, `list`, etc).\n    * `datetime` objects.\n    * `uuid` objects.\n    * database models.\n    * ...and many more.\n* automatic interactive api documentation, including 2 alternative user interfaces:\n    * swagger ui.\n    * redoc.\n\n---\n\ncoming back to the previous code example, **fastapi** will:\n\n* validate that there is an `item_id` in the path for `get` and `put` requests.\n* validate that the `item_id` is of type `int` for `get` and `put` requests.\n    * if it is not, the client will see a useful, clear error.\n* check if there is an optional query parameter named `q` (as in `http://127.0.0.1:8000/items/foo?q=somequery`) for `get` requests.\n    * as the `q` parameter is declared with `= none`, it is optional.\n    * without the `none` it would be required (as is the body in the case with `put`).\n* for `put` requests to `/items/{item_id}`, read the body as json:\n    * check that it has a required attribute `name` that should be a `str`.\n    * check that it has a required attribute `price` that has to be a `float`.\n    * check that it has an optional attribute `is_offer`, that should be a `bool`, if present.\n    * all this would also work for deeply nested json objects.\n* convert from and to json automatically.\n* document everything with openapi, that can be used by:\n    * interactive documentation systems.\n    * automatic client code generation systems, for many languages.\n* provide 2 interactive documentation web interfaces directly.\n\n---\n\nwe just scratched the surface, but you already get the idea of how it all works.\n\ntry changing the line with:\n\n```python\n    return {\"item_name\": item.name, \"item_id\": item_id}\n```\n\n...from:\n\n```python\n        ... \"item_name\": item.name ...\n```\n\n...to:\n\n```python\n        ... \"item_price\": item.price ...\n```\n\n...and see how your editor will auto-complete the attributes and know their types:\n\n![editor support](https://fastapi.tiangolo.com/img/vscode-completion.png)\n\nfor a more complete example including more features, see the <a href=\"https://fastapi.tiangolo.com/tutorial/\">tutorial - user guide</a>.\n\n**spoiler alert**: the tutorial - user guide includes:\n\n* declaration of **parameters** from other different places as: **headers**, **cookies**, **form fields** and **files**.\n* how to set **validation constraints** as `maximum_length` or `regex`.\n* a very powerful and easy to use **<abbr title=\"also known as components, resources, providers, services, injectables\">dependency injection</abbr>** system.\n* security and authentication, including support for **oauth2** with **jwt tokens** and **http basic** auth.\n* more advanced (but equally easy) techniques for declaring **deeply nested json models** (thanks to pydantic).\n* **graphql** integration with <a href=\"https://strawberry.rocks\" class=\"external-link\" target=\"_blank\">strawberry</a> and other libraries.\n* many extra features (thanks to starlette) as:\n    * **websockets**\n    * extremely easy tests based on httpx and `pytest`\n    * **cors**\n    * **cookie sessions**\n    * ...and more.\n\n## performance\n\nindependent techempower benchmarks show **fastapi** applications running under uvicorn as <a href=\"https://www.techempower.com/benchmarks/#section=test&runid=7464e520-0dc2-473d-bd34-dbdfd7e85911&hw=ph&test=query&l=zijzen-7\" class=\"external-link\" target=\"_blank\">one of the fastest python frameworks available</a>, only below starlette and uvicorn themselves (used internally by fastapi). (*)\n\nto understand more about it, see the section <a href=\"https://fastapi.tiangolo.com/benchmarks/\" class=\"internal-link\" target=\"_blank\">benchmarks</a>.\n\n## optional dependencies\n\nused by pydantic:\n\n* <a href=\"https://github.com/joshdata/python-email-validator\" target=\"_blank\"><code>email_validator</code></a> - for email validation.\n* <a href=\"https://docs.pydantic.dev/latest/usage/pydantic_settings/\" target=\"_blank\"><code>pydantic-settings</code></a> - for settings management.\n* <a href=\"https://docs.pydantic.dev/latest/usage/types/extra_types/extra_types/\" target=\"_blank\"><code>pydantic-extra-types</code></a> - for extra types to be used with pydantic.\n\nused by starlette:\n\n* <a href=\"https://www.python-httpx.org\" target=\"_blank\"><code>httpx</code></a> - required if you want to use the `testclient`.\n* <a href=\"https://jinja.palletsprojects.com\" target=\"_blank\"><code>jinja2</code></a> - required if you want to use the default template configuration.\n* <a href=\"https://andrew-d.github.io/python-multipart/\" target=\"_blank\"><code>python-multipart</code></a> - required if you want to support form <abbr title=\"converting the string that comes from an http request into python data\">\"parsing\"</abbr>, with `request.form()`.\n* <a href=\"https://pythonhosted.org/itsdangerous/\" target=\"_blank\"><code>itsdangerous</code></a> - required for `sessionmiddleware` support.\n* <a href=\"https://pyyaml.org/wiki/pyyamldocumentation\" target=\"_blank\"><code>pyyaml</code></a> - required for starlette's `schemagenerator` support (you probably don't need it with fastapi).\n* <a href=\"https://github.com/esnme/ultrajson\" target=\"_blank\"><code>ujson</code></a> - required if you want to use `ujsonresponse`.\n\nused by fastapi / starlette:\n\n* <a href=\"https://www.uvicorn.org\" target=\"_blank\"><code>uvicorn</code></a> - for the server that loads and serves your application.\n* <a href=\"https://github.com/ijl/orjson\" target=\"_blank\"><code>orjson</code></a> - required if you want to use `orjsonresponse`.\n\nyou can install all of these with `pip install \"fastapi[all]\"`.\n\n## license\n\nthis project is licensed under the terms of the mit license.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "fastapi",
  "package_url": "https://pypi.org/project/fastapi/",
  "project_url": "https://pypi.org/project/fastapi/",
  "project_urls": {
    "Documentation": "https://fastapi.tiangolo.com/",
    "Homepage": "https://github.com/tiangolo/fastapi",
    "Repository": "https://github.com/tiangolo/fastapi"
  },
  "release_url": "https://pypi.org/project/fastapi/0.105.0/",
  "requires_dist": [
    "anyio<4.0.0,>=3.7.1",
    "pydantic!=1.8,!=1.8.1,!=2.0.0,!=2.0.1,!=2.1.0,<3.0.0,>=1.7.4",
    "starlette<0.28.0,>=0.27.0",
    "typing-extensions>=4.8.0",
    "email-validator>=2.0.0; extra == 'all'",
    "httpx>=0.23.0; extra == 'all'",
    "itsdangerous>=1.1.0; extra == 'all'",
    "jinja2>=2.11.2; extra == 'all'",
    "orjson>=3.2.1; extra == 'all'",
    "pydantic-extra-types>=2.0.0; extra == 'all'",
    "pydantic-settings>=2.0.0; extra == 'all'",
    "python-multipart>=0.0.5; extra == 'all'",
    "pyyaml>=5.3.1; extra == 'all'",
    "ujson!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,>=4.0.1; extra == 'all'",
    "uvicorn[standard]>=0.12.0; extra == 'all'"
  ],
  "requires_python": ">=3.8",
  "summary": "fastapi framework, high performance, easy to learn, fast to code, ready for production",
  "version": "0.105.0",
  "releases": [],
  "developers": [
    "tiangolo@gmail.com"
  ],
  "kwds": "badge banner fastapi href logo",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_fastapi",
  "homepage": "",
  "release_count": 184,
  "dependency_ids": [
    "pypi_anyio",
    "pypi_email_validator",
    "pypi_httpx",
    "pypi_itsdangerous",
    "pypi_jinja2",
    "pypi_orjson",
    "pypi_pydantic!",
    "pypi_pydantic_extra_types",
    "pypi_pydantic_settings",
    "pypi_python_multipart",
    "pypi_pyyaml",
    "pypi_starlette",
    "pypi_typing_extensions",
    "pypi_ujson!",
    "pypi_uvicorn"
  ]
}
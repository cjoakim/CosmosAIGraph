{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: web environment",
    "framework :: django",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: internet :: www/http",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "django admin inline paginator\n=============================\n\nthe \"django admin inline paginator\" is simple way to paginate your inline in django admin\n\nif you use or like the project, click `star` and `watch` to generate metrics and i evaluate project continuity.\n\n# install:\n\n```\npip install django-admin-inline-paginator\n```\n\n# usage:\n\n1. add to your installed_apps, in settings.py:\n\n   ```\n   installed_apps = [\n       ...\n       'django_admin_inline_paginator',\n       ...\n   ]\n   ```\n2. create your model inline:\n\n   ```\n   from django_admin_inline_paginator.admin import tabularinlinepaginated\n\n   class modelwithfkadmininline(tabularinlinepaginated):\n       fields = (...)\n       per_page = 1\n       model = modelwithfk\n   ```\n3. create main model admin and use inline:\n\n    ```\n    @register(yourmodel)\n    class yourmodeladmin(modeladmin):\n        fields = (...)\n        inlines = (modelwithfkadmininline, )\n        model = yourmodel\n    ```\n\n# advanced usage:\n\n1. paginate multiples inlines:\n    \n    ```\n    class modelwithfkinline(tabularinlinepaginated):\n    fields = ('name', 'active')\n    per_page = 2\n    model = modelwithfk\n    pagination_key = 'page-model'  # make sure it's unique for page inline\n\n    class anothermodelwithfkinline(tabularinlinepaginated):\n    fields = ('name', 'active')\n    per_page = 2\n    model = anothermodelwithfk\n    pagination_key = 'page-another-model'  # make sure it's unique for page inline\n    ```\n\n2. use previous inlines\n    \n    ```\n    @register(yourmodel)\n    class yourmodeladmin(modeladmin):\n        fields = (...)\n        inlines = (modelwithfkadmininline, anothermodelwithfkinline)\n        model = yourmodel\n    ```\n\n# images:\n\n![image](https://user-images.githubusercontent.com/30196992/98023167-706ca880-1dfe-11eb-89fe-c056741f0d5b.png)\n\n# need a maintainer\n in the last months i don't have much time, health problemas, change of country and others problems.  \n i have some surgeries for first part of 2022, and all of my current project don't use django-admin.  \n for these reasons, i need a help for a project continuation!!\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "django-admin-inline-paginator",
  "package_url": "https://pypi.org/project/django-admin-inline-paginator/",
  "project_url": "https://pypi.org/project/django-admin-inline-paginator/",
  "project_urls": {
    "Homepage": "https://github.com/shinneider/django-admin-inline-paginator"
  },
  "release_url": "https://pypi.org/project/django-admin-inline-paginator/0.4.0/",
  "requires_dist": [
    "django",
    "isort ; extra == 'code-quality'",
    "bandit ; extra == 'code-quality'",
    "xenon ; extra == 'code-quality'",
    "django ; extra == 'dev'",
    "django-mock-queries ; extra == 'dev'",
    "pylint ; extra == 'dev'",
    "pytest-pylint ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-watch ; extra == 'dev'",
    "tox ; extra == 'dev'"
  ],
  "requires_python": ">=3.3",
  "summary": "the \"django admin inline paginator\" is simple way to paginate your inline in django admin",
  "version": "0.4.0",
  "releases": [],
  "developers": [
    "shinneider-libanio@hotmail.com",
    "shinneider_libanio_da_silva"
  ],
  "kwds": "django_admin_inline_paginator django pagination_key tabularinlinepaginated paginator",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_django_admin_inline_paginator",
  "homepage": "https://github.com/shinneider/django-admin-inline-paginator",
  "release_count": 7,
  "dependency_ids": [
    "pypi_bandit",
    "pypi_django",
    "pypi_django_mock_queries",
    "pypi_isort",
    "pypi_pylint",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_pylint",
    "pypi_pytest_watch",
    "pypi_tox",
    "pypi_xenon"
  ]
}
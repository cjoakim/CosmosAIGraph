{
  "classifiers": [
    "development status :: 3 - alpha",
    "license :: osi approved :: gnu general public license v3 (gplv3)",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: scientific/engineering :: information analysis",
    "topic :: software development :: libraries",
    "topic :: text processing",
    "topic :: text processing :: linguistic"
  ],
  "description": "\n# yet another keyword extractor (yake)\n\nunsupervised approach for automatic keyword extraction using text features.\n\nyake! is a light-weight unsupervised automatic keyword extraction method which rests on text statistical features extracted from single documents to select the most important keywords of a text. our system does not need to be trained on a particular set of documents, neither it depends on dictionaries, external-corpus, size of the text, language or domain. to demonstrate the merits and the significance of our proposal, we compare it against ten state-of-the-art unsupervised approaches (tf.idf, kp-miner, rake, textrank, singlerank, expandrank, topicrank, topicalpagerank, positionrank and multipartiterank), and one supervised method (kea). experimental results carried out on top of twenty datasets (see benchmark section below) show that our methods significantly outperform state-of-the-art methods under a number of collections of different sizes, languages or domains. in addition to the python package here described, we also make available a <a href=\"http://yake.inesctec.pt\" target=\"_blank\">demo</a>, an <a href=\"http://yake.inesctec.pt/apidocs/#!/available_methods/post_yake_v2_extract_keywords\" target=\"_blank\">api</a> and a <a href=\"https://play.google.com/store/apps/details?id=com.yake.yake\" target=\"_blank\">mobile app</a>.\n\n## main features\n\n* unsupervised approach\n* corpus-independent\n* domain and language independent\n* single-document\n\n## where can i find yake!?\nyake! is available online [http://yake.inesctec.pt], as an open source python package [https://github.com/liaad/yake] and on [google play](https://play.google.com/store/apps/details?id=com.yake.yake).\n\n## references\nplease cite the following works when using yake\n\n<b>in-depth journal paper at information sciences journal</b>\n\ncampos, r., mangaravite, v., pasquali, a., jatowt, a., jorge, a., nunes, c. and jatowt, a. (2020). yake! keyword extraction from single documents using multiple local features. in information sciences journal. elsevier, vol 509, pp 257-289. [pdf](https://doi.org/10.1016/j.ins.2019.09.013)\n\n<b>ecir'18 best short paper</b>\n\ncampos r., mangaravite v., pasquali a., jorge a.m., nunes c., and jatowt a. (2018). a text feature based automatic keyword extraction method for single documents. in: pasi g., piwowarski b., azzopardi l., hanbury a. (eds). advances in information retrieval. ecir 2018 (grenoble, france. march 26 \u2013 29). lecture notes in computer science, vol 10772, pp. 684 - 691. [pdf](https://link.springer.com/chapter/10.1007/978-3-319-76941-7_63)\n\ncampos r., mangaravite v., pasquali a., jorge a.m., nunes c., and jatowt a. (2018). yake! collection-independent automatic keyword extractor. in: pasi g., piwowarski b., azzopardi l., hanbury a. (eds). advances in information retrieval. ecir 2018 (grenoble, france. march 26 \u2013 29). lecture notes in computer science, vol 10772, pp. 806 - 810. [pdf](https://link.springer.com/chapter/10.1007/978-3-319-76941-7_80)\n\n## awards\n[ecir'18](http://ecir2018.org) best short paper\n\n\n",
  "docs_url": null,
  "keywords": "yake",
  "license": "lgplv3",
  "name": "yake",
  "package_url": "https://pypi.org/project/yake/",
  "project_url": "https://pypi.org/project/yake/",
  "project_urls": {
    "Homepage": "https://pypi.python.org/pypi/yake"
  },
  "release_url": "https://pypi.org/project/yake/0.4.8/",
  "requires_dist": [
    "tabulate",
    "click (>=6.0)",
    "numpy",
    "segtok",
    "networkx",
    "jellyfish"
  ],
  "requires_python": "",
  "summary": "keyword extraction python package",
  "version": "0.4.8",
  "releases": [],
  "developers": [],
  "kwds": "textrank topicrank post_yake_v2_extract_keywords topicalpagerank keywords",
  "license_kwds": "lgplv3",
  "libtype": "pypi",
  "id": "pypi_yake",
  "homepage": "https://pypi.python.org/pypi/yake",
  "release_count": 13,
  "dependency_ids": [
    "pypi_click",
    "pypi_jellyfish",
    "pypi_networkx",
    "pypi_numpy",
    "pypi_segtok",
    "pypi_tabulate"
  ]
}
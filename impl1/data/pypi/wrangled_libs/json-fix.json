{
  "classifiers": [],
  "description": "# what is this?\n\na pip module that let you define a `__json__` method, that works like the `tojson` from javascript.<br>\n(e.g. it magically gets called whenever someone does `json.dumps(your_object)`)\n\nfrom a technical perspective, this module is a safe, backwards-compatible, reversable patch to the built-in python `json` object that allows classes to specify how they should be serialized.\n\n# why?\n\nbecause sometimes external code uses something like\n```python\nimport json\njson.dumps(list_containing_your_object)\n```\nand it simply throws an error no matter how you customize your object\n\n# how do i use this?\n\n`pip install json-fix`\n\n```python\nimport json_fix # import this before the json.dumps gets called\n\n# same file, or different file\nclass your_class:\n    def __json__(self):\n        # your custom code here\n        #    you probably just want to do:\n        #        return self.__dict__\n        return \"a built-in object that is natually json-able\"\n```\n\nif you want control over classes that are defined externally (datetime, numpy.array, tensor, etc), use the override_table\n```python\nimport json_fix # import this before the json.dumps gets called\nimport json\nimport pandas as pd\n\nsomeclassyoudidntdefine = pd.dataframe\n\n# create a boolean function for identifying the class\nclass_checker = lambda obj: isinstance(obj, someclassyoudidntdefine)\n# then assign it to a function that does the converting\njson.override_table[class_checker] = lambda obj_of_that_class: json.loads(obj_of_that_class.to_json())\n\njson.dumps([ 1, 2, someclassyoudidntdefine() ], indent=2)\n```\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "json-fix",
  "package_url": "https://pypi.org/project/json-fix/",
  "project_url": "https://pypi.org/project/json-fix/",
  "project_urls": {
    "Homepage": "https://github.com/jeff-hykin/json_fix.git"
  },
  "release_url": "https://pypi.org/project/json-fix/0.5.2/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "allow custom class json behavior on builtin json object",
  "version": "0.5.2",
  "releases": [],
  "developers": [
    "jeff.hykin@gmail.com",
    "jeff_hykin"
  ],
  "kwds": "to_json __json__ json_fix list_containing_your_object json",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_json_fix",
  "homepage": "https://github.com/jeff-hykin/json_fix.git",
  "release_count": 11,
  "dependency_ids": []
}
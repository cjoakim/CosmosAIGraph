{
  "classifiers": [
    "development status :: 6 - mature",
    "framework :: zodb",
    "license :: osi approved :: zope public license",
    "operating system :: microsoft :: windows",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: database",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "============\ntransactions\n============\n\n.. image:: https://github.com/zopefoundation/transaction/actions/workflows/tests.yml/badge.svg\n        :target: https://github.com/zopefoundation/transaction/actions/workflows/tests.yml\n\n.. image:: https://readthedocs.org/projects/transaction/badge/?version=latest\n        :target: http://transaction.readthedocs.org/en/latest/\n        :alt: documentation status\n\n.. image:: https://img.shields.io/pypi/v/transaction.svg\n        :target: https://pypi.python.org/pypi/transaction\n        :alt: pypi\n\n.. image:: https://img.shields.io/pypi/pyversions/transaction.svg\n        :target: https://pypi.python.org/pypi/transaction\n        :alt: python versions\n\nthis package contains a generic transaction implementation for python. it is\nmainly used by the zodb.\n\nsee http://transaction.readthedocs.org/en/latest for narrative documentation\non its usage.\n\n\n\n=========\n changes\n=========\n\n4.0 (2023-11-13)\n================\n\n- drop support for python 2.7, 3.5, 3.6.\n\n- drop support for deprecated ``python setup.py test.``.\n\n- add support for python 3.12.\n\n- add preliminary support for python 3.13a2.\n\n\n3.1.0 (2023-03-17)\n==================\n\n- add support for python 3.9, 3.10, 3.11.\n\n\n3.0.1 (2020-12-11)\n==================\n\n- exception raised by a before commit hook is no longer hidden.  no\n  further commit hooks are called and exception is propagated to\n  the caller of ``commit()``. see\n  `#95 <https://github.com/zopefoundation/transaction/pull/95>`_.\n\n\n3.0.0 (2019-12-11)\n==================\n\n- drop support for python 3.4.\n\n- add support for python 3.8.\n\n- drop support for legacy transaction apis including\n  ``transaction.register()`` and old zodb3-style datamanagers. see\n  `issue 89\n  <https://github.com/zopefoundation/transaction/issues/89>`_.\n\n- ``transactionmanager.run`` now commits/aborts the transaction\n  \"active\" after the execution of *func* (and no longer the initial\n  transaction which might already have been committed/aborted by *func*)\n  (`#58 <https://github.com/zopefoundation/transaction/issues/58>`_).\n\n  it aborts the transaction now for all exceptions raised by *func* - even\n  if it is only an instance of `baseexception` but not of `exception`,\n  such as e.g. a ``systemexit`` or ``keyboardinterupt`` exception.\n\n- support abort hooks (symmetrically to commit hooks)\n  (`#77 <https://github.com/zopefoundation/transaction/issues/77>`_).\n\n- make transaction drop references to its hooks, manager,\n  synchronizers and data after a successful ``commit()`` and after\n  *any* ``abort()``. this helps avoid potential cyclic references. see\n  `issue 82 <https://github.com/zopefoundation/transaction/issues/82>`_.\n\n- allow synchronizers to access ``transaction.data()`` when their\n  ``aftercompletion`` method is called while aborting a transaction.\n\n- make it safe to call ``transaction.abort()`` more than once. the\n  second and subsequent calls are no-ops. previously a\n  ``valueerror(foreign transaction)`` would be raised.\n\n2.4.0 (2018-10-23)\n==================\n\n- changed the implementation of threadtransactionmanager to be a\n  thread.local that wraps a transactionmanager rather than a\n  thread.local that inherits from transactionmanager. it now exposes a\n  manager attribute that allows access to the wrapped transaction\n  manager to allow cross thread calls. see `issue 68\n  <https://github.com/zopefoundation/transaction/pull/68>`_.\n\n\n2.3.0 (2018-10-19)\n==================\n\n- add support for python 3.7.\n\n- reach 100% test coverage.\n\n- fix ``transaction.manager.run`` formatting transaction notes when\n  given a mix of byte and text strings, such as can happen in python 2\n  with ``unicode_literals``.\n\n2.2.1 (2018-03-27)\n==================\n\n- make documentation index more user friendly; move old docs to developer\n  section.\n\n- don't crash when printing tracebacks in ipython on python 2.\n  (this addresses https://github.com/zopefoundation/transaction/issues/5.)\n\n\n2.2.0 (2018-02-27)\n==================\n\n- add support for python 3.6.\n\n- drop support for python 3.3.\n\n- add ``isretryableerror`` to the\n  ``transaction.interfaces.itransaction`` interface to allow external\n  systems to query whether an exception is retryable (transient) by\n  any of the attached data managers. any\n  ``transaction.interfaces.transienterror`` is considered retryable\n  but a data manager may also consider other exceptions on a\n  per-instance basis.\n\n  see https://github.com/zopefoundation/transaction/pull/38\n\n\n2.1.2 (2017-03-11)\n==================\n\n- to avoid leaking memory, don't include unexpected value in warnings\n  about non-text transaction meta data.\n\n\n2.1.1 (2017-03-11)\n==================\n\n- for backward compatibility, relax the requirements that transaction\n  meta data (user or description) be text:\n\n  - if none is assigned, the assignment is ignored.\n\n  - if a non-text value is assigned, a warning is issued and the value\n    is converted to text. if the value is a binary string, it will be\n    decoded with the utf-8 encoding the ``replace`` error policy.\n\n\n2.1.0 (2017-02-08)\n==================\n\nadded a transaction-manager explicit mode. explicit mode makes some\nkinds of application bugs easier to detect and potentially allows data\nmanagers to manage resources more efficiently.\n\n(this addresses https://github.com/zopefoundation/transaction/issues/35.)\n\n2.0.3 (2016-11-17)\n==================\n\n- the user and description fields must now be set with text (unicode)\n  data.  previously, if bytes were provided, they'd be decoded as\n  ascii.  it was decided that this would lead to bugs that were hard\n  to test for.\n\n  also, the transaction meta-data field, ``extended_info`` has been\n  renamed to ``extension``.\n\n2.0.2 (2016-11-13)\n==================\n\n- fixed: some legacy applications expect the transaction _extension\n  attribute to be mutable and it wasn't.\n\n2.0.1 (2016-11-11)\n==================\n\n- the transaction ``user`` and ``description`` attributes are now\n  defined to be text (unicode) as opposed to python the ``str`` type.\n\n- added the ``extended_info`` transaction attribute which contains\n  transaction meta data.  (the ``_extension`` attribute is retained as\n  an alias for backward compatibility.)\n\n  the transaction interface, ``itransaction``, now requires\n  ``extended_info`` keys to be text (unicode) and values to be\n  json-serializable.\n\n- removed setuser from itransaction.  we'll keep the method\n  indefinitely, but it's unseemly in itransaction. :)\n\nthe main purpose of these changes is to tighten up the text\nspecification of user, description and extended_info keys, and to give\nus more flexibility in the future for serializing extended info.  it's\npossible that these changes will be breaking, so we're also increasing\nthe major version number.\n\n1.7.0 (2016-11-08)\n==================\n\n- added a transaction-manager ``run`` method for running a function as a\n  transaction, retrying as necessary on transient errors.\n\n- fixed the transaction manager ``attempts`` method. it didn't stop\n  repeating when there wasn't an error.\n\n- corrected itransaction by removing beforecommithook (which is no longer\n  implemented) and removing 'self' from two methods.\n\n1.6.1 (2016-06-10)\n==================\n\n- fixed: synchonizers that registered with transaction managers when\n  transactions were in progress didn't have their newtransaction\n  methods called to let them know of the in-progress transactions.\n\n1.6.0 (2016-05-21)\n==================\n\n- new transaction api for storing data on behalf of objects, such as\n  data managers.\n\n- drop references to data managers joined to a transaction when it is\n  committed or aborted.\n\n1.5.0 (2016-05-05)\n==================\n\n- drop support for python 2.6 and 3.2.\n\n- add support for python 3.5.\n\n- added apis for interogating and clearing internal state to support\n  client tests.\n\n1.4.4 (2015-05-19)\n==================\n\n- use the standard ``valuerefs()`` method rather than relying on\n  implementation details of ``weakvaluedictionary`` in ``weakset``.\n\n- add support for pypy3.\n\n- require 100% branch coverage (in addition to 100% statement coverage).\n\n1.4.3 (2014-03-20)\n==================\n\n- add support for python 3.4.\n\n1.4.2 (skipped)\n===============\n\n- released in error as 1.4.3.\n\n1.4.1 (2013-02-20)\n==================\n\n- document that values returned by ``sortkey`` must be strings, in order\n  to guarantee total ordering.\n\n- fix occasional runtimeerror: dictionary changed size during iteration errors\n  in transaction.weakset on python 3.\n\n1.4.0 (2013-01-03)\n==================\n\n- updated trove classifiers.\n\n1.4.0b1 (2012-12-18)\n====================\n\n- converted existing doctests into sphinx documentation (snippets are\n  exercised via 'tox').\n\n- 100% unit test coverage.\n\n- backward incompatibility:   raise valueerror rather than assertionerror\n  for runtime errors:\n\n  - in ``transaction.doom`` if the transaction is in a non-doomable state.\n\n  - in ``transactionmanager.attempts`` if passed a non-positive value.\n\n  - in ``transactionmanager.free`` if passed a foreign transaction.\n\n- declared support for python 3.3 in ``setup.py``, and added ``tox`` testing.\n\n- when a non-retryable exception was raised as the result of a call to\n  ``transaction.manager.commit`` within the \"attempts\" machinery, the\n  exception was not reraised properly.  symptom: an unrecoverable exception\n  such as ``unsupported: storing blobs in <somestorage> is not supported.``\n  would be swallowed inappropriately.\n\n1.3.0 (2012-05-16)\n==================\n\n- added sphinx api docuementation.\n\n- added explicit support for pypy.\n\n- dropped use of python3-impatible ``zope.interface.implements`` class\n  advisor in favor of ``zope.interface.implementer`` class decorator.\n\n- added support for continuous integration using ``tox`` and ``jenkins``.\n\n- added ``setup.py docs`` alias (installs ``sphinx`` and dependencies).\n\n- added ``setup.py dev`` alias (runs ``setup.py develop`` plus installs\n  ``nose`` and ``coverage``).\n\n- python 3.3 compatibility.\n\n- fix \"for attempt in transaction.attempts(x)\" machinery, which would not\n  retry a transaction if its implicit call to ``.commit()`` itself raised a\n  transient error.  symptom: seeing conflict errors even though you thought\n  you were retrying some number of times via the \"attempts\" machinery (the\n  first attempt to generate an exception during commit would cause that\n  exception to be raised).\n\n1.2.0 (2011-12-05)\n==================\n\nnew features:\n\n- python 3.2 compatibility.\n\n- dropped python 2.4 and 2.5 compatibility (use 1.1.1 if you need to use\n  \"transaction\" under these python versions).\n\n1.1.1 (2010-09-16)\n==================\n\nbug fixes:\n\n- code in ``_transaction.py`` held on to local references to traceback\n  objects after calling ``sys.exc_info()`` to get one, causing\n  potential reference leakages.\n\n- fixed ``hexlify`` nameerror in ``transaction._transaction.oid_repr``\n  and add test.\n\n1.1.0 (1010-05-12)\n==================\n\nnew features:\n\n- transaction managers and the transaction module can be used with the\n  with statement to define transaction boundaries, as in::\n\n     with transaction:\n         ... do some things ...\n\n  see transaction/tests/convenience.txt for more details.\n\n- there is a new iterator function that automates dealing with\n  transient errors (such as zodb confict errors). for example, in::\n\n     for attempt in transaction.attempts(5):\n         with attempt:\n             ... do some things ..\n\n  if the work being done raises transient errors, the transaction will\n  be retried up to 5 times.\n\n  see transaction/tests/convenience.txt for more details.\n\nbugs fixed:\n\n- fixed a bug that caused extra commit calls to be made on data\n  managers under certain special circumstances.\n\n  https://mail.zope.org/pipermail/zodb-dev/2010-may/013329.html\n\n- when threads were reused, transaction data could leak accross them,\n  causing subtle application bugs.\n\n  https://bugs.launchpad.net/zodb/+bug/239086\n\n1.0.1 (2010-05-07)\n==================\n\n- lp #142464:  remove double newline between log entries:  it makes doing\n  smarter formatting harder.\n\n- updated tests to remove use of deprecated ``zope.testing.doctest``.\n\n1.0.0 (2009-07-24)\n==================\n\n- fix test that incorrectly relied on the order of a list that was generated\n  from a dict.\n\n- remove crufty dependencies.cfg left over from zpkg.\n\n1.0a1 (2007-12-18)\n==================\n\n- initial release, branched from zodb trunk on 2007-11-08 (aka\n  \"3.9.0dev\").\n\n- remove (deprecated) support for beforecommithook alias to\n  addbeforecommithook.\n\n- add weakset tests.\n\n- remove unit tests that depend on zodb.tests.utils from\n  test_transaction (these are actually integration tests).\n",
  "docs_url": null,
  "keywords": "",
  "license": "zpl 2.1",
  "name": "transaction",
  "package_url": "https://pypi.org/project/transaction/",
  "project_url": "https://pypi.org/project/transaction/",
  "project_urls": {
    "Homepage": "https://github.com/zopefoundation/transaction",
    "Issue Tracker": "https://github.com/zopefoundation/transaction/issues",
    "Sources": "https://github.com/zopefoundation/transaction"
  },
  "release_url": "https://pypi.org/project/transaction/4.0/",
  "requires_dist": [
    "zope.interface",
    "Sphinx ; extra == 'docs'",
    "repoze.sphinx.autointerface ; extra == 'docs'",
    "coverage ; extra == 'testing'"
  ],
  "requires_python": ">=3.7",
  "summary": "transaction management for python",
  "version": "4.0",
  "releases": [],
  "developers": [
    "zodb-dev@zope.dev",
    "zope_foundation_and_contributors"
  ],
  "kwds": "_transaction test_transaction transactionmanager yml transactions",
  "license_kwds": "zpl 2.1",
  "libtype": "pypi",
  "id": "pypi_transaction",
  "homepage": "https://github.com/zopefoundation/transaction",
  "release_count": 31,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_repoze.sphinx.autointerface",
    "pypi_sphinx",
    "pypi_zope.interface"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "topic :: text processing :: linguistic"
  ],
  "description": "====\nzhon\n====\n\n.. image:: https://badge.fury.io/py/zhon.svg\n    :target: https://pypi.org/project/zhon\n\n.. image:: https://github.com/tsroten/zhon/actions/workflows/ci.yml/badge.svg\n    :target: https://github.com/tsroten/zhon/actions/workflows/ci.yml\n\nzhon is a python library that provides constants commonly used in chinese text\nprocessing.\n\n* documentation: https://tsroten.github.io/zhon/\n* github: https://github.com/tsroten/zhon\n* support: https://github.com/tsroten/zhon/issues\n* free software: `mit license <http://opensource.org/licenses/mit>`_\n\nabout\n-----\n\nzhon's constants can be used in chinese text processing, for example:\n\n* find cjk characters in a string:\n\n  .. code:: python\n\n    >>> re.findall('[{}]'.format(zhon.hanzi.characters), 'i broke a plate: \u6211\u6253\u7834\u4e86\u4e00\u4e2a\u76d8\u5b50.')\n    ['\u6211', '\u6253', '\u7834', '\u4e86', '\u4e00', '\u4e2a', '\u76d8', '\u5b50']\n\n* validate pinyin syllables, words, or sentences:\n\n  .. code:: python\n\n    >>> re.findall(zhon.pinyin.syllable, 'yu\u00e0nzi l\u01d0 t\u00edngzhe y\u00ed li\u00e0ng ch\u0113.', re.i)\n    ['yu\u00e0n', 'zi', 'l\u01d0', 't\u00edng', 'zhe', 'y\u00ed', 'li\u00e0ng', 'ch\u0113']\n\n    >>> re.findall(zhon.pinyin.word, 'yu\u00e0nzi l\u01d0 t\u00edngzhe y\u00ed li\u00e0ng ch\u0113.', re.i)\n    ['yu\u00e0nzi', 'l\u01d0', 't\u00edngzhe', 'y\u00ed', 'li\u00e0ng', 'ch\u0113']\n\n    >>> re.findall(zhon.pinyin.sentence, 'yu\u00e0nzi l\u01d0 t\u00edngzhe y\u00ed li\u00e0ng ch\u0113.', re.i)\n    ['yu\u00e0nzi l\u01d0 t\u00edngzhe y\u00ed li\u00e0ng ch\u0113.']\n\nfeatures\n--------\n\nzhon includes the following commonly-used constants:\n\n* cjk characters and radicals\n* chinese punctuation marks\n* chinese sentence regular expression pattern\n* pinyin vowels, consonants, lowercase, uppercase, and punctuation\n* pinyin syllable, word, and sentence regular expression patterns\n* zhuyin characters and marks\n* zhuyin syllable regular expression pattern\n* cc-cedict characters\n\ngetting started\n---------------\n\n* `install zhon <https://tsroten.github.io/zhon/installation.html>`_\n* `learn how to use zhon <https://tsroten.github.io/zhon/api.html>`_\n* `contribute <https://github.com/tsroten/zhon/blob/develop/contributing.rst>`_ documentation, code, or feedback\n",
  "docs_url": null,
  "keywords": "cc-cedict,cedict,characters,chinese,cjk,han,hanzi,mandarin,pinyin,punctuation,radicals,segmentation,simplified,tokenization,traditional,unicode,zhuyin",
  "license": "",
  "name": "zhon",
  "package_url": "https://pypi.org/project/zhon/",
  "project_url": "https://pypi.org/project/zhon/",
  "project_urls": {
    "Changes": "https://tsroten.github.io/zhon/history.html",
    "Documentation": "https://tsroten.github.io/zhon",
    "Issue Tracker": "https://github.com/tsroten/zhon/issues",
    "Source Code": "https://github.com/tsroten/zhon"
  },
  "release_url": "https://pypi.org/project/zhon/2.0.2/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "zhon provides constants used in chinese text processing.",
  "version": "2.0.2",
  "releases": [],
  "developers": [
    "thomas@roten.us"
  ],
  "kwds": "pinyin python cedict zhon unicode",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_zhon",
  "homepage": "",
  "release_count": 14,
  "dependency_ids": []
}
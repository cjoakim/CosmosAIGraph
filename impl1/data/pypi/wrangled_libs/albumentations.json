{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# albumentations\n[![pypi version](https://badge.fury.io/py/albumentations.svg)](https://badge.fury.io/py/albumentations)\n![ci](https://github.com/albumentations-team/albumentations/workflows/ci/badge.svg)\n\nalbumentations is a python library for image augmentation. image augmentation is used in deep learning and computer vision tasks to increase the quality of trained models. the purpose of image augmentation is to create new training samples from the existing data.\n\nhere is an example of how you can apply some [pixel-level](#pixel-level-transforms) augmentations from albumentations to create new images from the original one:\n![parrot](https://habrastorage.org/webt/bd/ne/rv/bdnerv5ctkudmsaznhw4crsdfiw.jpeg)\n\n## why albumentations\n- albumentations **[supports all common computer vision tasks](#i-want-to-use-albumentations-for-the-specific-task-such-as-classification-or-segmentation)** such as classification, semantic segmentation, instance segmentation, object detection, and pose estimation.\n- the library provides **[a simple unified api](#a-simple-example)** to work with all data types: images (rbg-images, grayscale images, multispectral images), segmentation masks, bounding boxes, and keypoints.\n- the library contains **[more than 70 different augmentations](#list-of-augmentations)** to generate new training samples from the existing data.\n- albumentations is [**fast**](#benchmarking-results). we benchmark each new release to ensure that augmentations provide maximum speed.\n- it **[works with popular deep learning frameworks](#i-want-to-know-how-to-use-albumentations-with-deep-learning-frameworks)** such as pytorch and tensorflow. by the way, albumentations is a part of the [pytorch ecosystem](https://pytorch.org/ecosystem/).\n- [**written by experts**](#authors). the authors have experience both working on production computer vision systems and participating in competitive machine learning. many core team members are kaggle masters and grandmasters.\n- the library is [**widely used**](#who-is-using-albumentations) in industry, deep learning research, machine learning competitions, and open source projects.\n\n## table of contents\n- [authors](#authors)\n- [installation](#installation)\n- [documentation](#documentation)\n- [a simple example](#a-simple-example)\n- [getting started](#getting-started)\n  - [i am new to image augmentation](#i-am-new-to-image-augmentation)\n  - [i want to use albumentations for the specific task such as classification or segmentation](#i-want-to-use-albumentations-for-the-specific-task-such-as-classification-or-segmentation)\n  - [i want to know how to use albumentations with deep learning frameworks](#i-want-to-know-how-to-use-albumentations-with-deep-learning-frameworks)\n  - [i want to explore augmentations and see albumentations in action](#i-want-to-explore-augmentations-and-see-albumentations-in-action)\n- [who is using albumentations](#who-is-using-albumentations)\n- [list of augmentations](#list-of-augmentations)\n  - [pixel-level transforms](#pixel-level-transforms)\n  - [spatial-level transforms](#spatial-level-transforms)\n- [a few more examples of augmentations](#a-few-more-examples-of-augmentations)\n- [benchmarking results](#benchmarking-results)\n- [contributing](#contributing)\n- [comments](#comments)\n- [citing](#citing)\n\n## authors\n[**alexander buslaev** \u2014 computer vision engineer at mapbox](https://www.linkedin.com/in/al-buslaev/) | [kaggle master](https://www.kaggle.com/albuslaev)\n\n[**alex parinov**](https://www.linkedin.com/in/alex-parinov/) | [kaggle master](https://www.kaggle.com/creafz)\n\n[**vladimir i. iglovikov** \u2014 staff engineer at lyft level5](https://www.linkedin.com/in/iglovikov/) | [kaggle grandmaster](https://www.kaggle.com/iglovikov)\n\n[**evegene khvedchenya** \u2014 computer vision research engineer at pi\u00f1ata farms](https://www.linkedin.com/in/cvtalks/) | [kaggle grandmaster](https://www.kaggle.com/bloodaxe)\n\n[**mikhail druzhinin**](https://www.linkedin.com/in/mikhail-druzhinin-548229100/) | [kaggle expert](https://www.kaggle.com/dipetm)\n\n\n## installation\nalbumentations requires python 3.7 or higher. to install the latest version from pypi:\n\n```\npip install -u albumentations\n```\n\nother installation options are described in the [documentation](https://albumentations.ai/docs/getting_started/installation/).\n\n## documentation\nthe full documentation is available at **[https://albumentations.ai/docs/](https://albumentations.ai/docs/)**.\n\n## a simple example\n```python\nimport albumentations as a\nimport cv2\n\n# declare an augmentation pipeline\ntransform = a.compose([\n    a.randomcrop(width=256, height=256),\n    a.horizontalflip(p=0.5),\n    a.randombrightnesscontrast(p=0.2),\n])\n\n# read an image with opencv and convert it to the rgb colorspace\nimage = cv2.imread(\"image.jpg\")\nimage = cv2.cvtcolor(image, cv2.color_bgr2rgb)\n\n# augment an image\ntransformed = transform(image=image)\ntransformed_image = transformed[\"image\"]\n```\n\n## getting started\n\n### i am new to image augmentation\nplease start with the [introduction articles](https://albumentations.ai/docs/#introduction-to-image-augmentation) about why image augmentation is important and how it helps to build better models.\n\n### i want to use albumentations for the specific task such as classification or segmentation\nif you want to use albumentations for a specific task such as classification, segmentation, or object detection, refer to the [set of articles](https://albumentations.ai/docs/#getting-started-with-albumentations) that has an in-depth description of this task. we also have a [list of examples](https://albumentations.ai/docs/examples/) on applying albumentations for different use cases.\n\n### i want to know how to use albumentations with deep learning frameworks\nwe have [examples of using albumentations](https://albumentations.ai/docs/#examples-of-how-to-use-albumentations-with-different-deep-learning-frameworks) along with pytorch and tensorflow.\n\n### i want to explore augmentations and see albumentations in action\ncheck the [online demo of the library](https://albumentations-demo.herokuapp.com/). with it, you can apply augmentations to different images and see the result. also, we have a [list of all available augmentations and their targets](#list-of-augmentations).\n\n## who is using albumentations\n<a href=\"https://www.lyft.com/\" target=\"_blank\"><img src=\"https://habrastorage.org/webt/ce/bs/sa/cebssajf_5asst5yshmyykqjhcg.png\" width=\"100\"/></a>\n<a href=\"https://imedhub.org/\" target=\"_blank\"><img src=\"https://habrastorage.org/webt/eq/8x/m-/eq8xm-fjfx_uqkka4_ekxsdwtiq.png\" width=\"100\"/></a>\n<a href=\"https://recursionpharma.com\" target=\"_blank\"><img src=\"https://pbs.twimg.com/profile_images/925897897165639683/ji8yvbfc_400x400.jpg\" width=\"100\"/></a>\n<a href=\"https://www.everypixel.com/\" target=\"_blank\"><img src=\"https://www.everypixel.com/i/logo_sq.png\" width=\"100\"/></a>\n<a href=\"https://neuromation.io/\" target=\"_blank\"><img src=\"https://habrastorage.org/webt/yd/_4/xa/yd_4xauvggn1tuz5xgrtkif6lya.png\" width=\"100\"/></a>\n<a href=\"https://ultralytics.com/\" target=\"_blank\"><img src=\"https://albumentations.ai/assets/img/industry/ultralytics.png\" width=\"100\"/></a>\n<a href=\"https://www.cft.ru/\" target=\"_blank\"><img src=\"https://habrastorage.org/webt/dv/fa/uq/dvfauqyl5cor5yzrfrpthjzm0mi.jpeg\" width=\"100\"/></a>\n<a href=\"https://www.pinatafarm.com/\" target=\"_blank\"><img src=\"https://www.pinatafarm.com/pflogo.png\" width=\"100\"/></a>\n<a href=\"https://incode.com/\" target=\"_blank\"><img src=\"https://habrastorage.org/webt/sh/eg/bs/shegbsyzy-0lebwqxkgl_rkkx3m.png\" width=\"100\"/></a>\n<a href=\"https://sharpershape.com/\" target=\"_blank\"><img src=\"https://lh3.googleusercontent.com/pw/am-jklwe2-arxczmqzonl67gw8v46ltwjw5a6ryufgailckncxsi4u7wzhopt5lacbc4wpdf7ujymrwcvxpk-3z3cxopv9jmtriuwsdznpao6gdc963npd3brwle6efwstlcb4il6lyxt49bbamduipzrlk=w1870-h1574-no?authuser=0\" width=\"100\"/></a>\n<a href=\"https://vitechlab.com/\" target=\"_blank\"><img src=\"https://res2.weblium.site/res/5f842a47d2077f0022e59f1d/5f842ba81ff15b00214a447f_optimized_389.webp\" width=\"100\"/></a>\n<a href=\"https://borzodelivery.com/\" target=\"_blank\"><img src=\"https://borzodelivery.com/img/global/big-logo.svg\" width=\"100\"/></a>\n<a href=\"https://anadea.info/\" target=\"_blank\"><img src=\"https://habrastorage.org/webt/oc/lt/8u/oclt8uwyyc-vgmwwcgcsk5cw7wy.png\" width=\"100\"/></a>\n<a href=\"https://www.idrnd.ai/\" target=\"_blank\"><img src=\"https://www.idrnd.ai/wp-content/uploads/2019/09/logo-idrnd.png.webp\" width=\"100\"/></a>\n<a href=\"https://openface.me/\" target=\"_blank\"><img src=\"https://drive.google.com/uc?export=view&id=1mc8b55cpflpuc69wnli2vitp6pimifz7\" width=\"100\"/></a>\n\n#### see also:\n- [a list of papers that cite albumentations](https://albumentations.ai/whos_using#research).\n- [a list of teams that were using albumentations and took high places in machine learning competitions](https://albumentations.ai/whos_using#competitions).\n- [open source projects that use albumentations](https://albumentations.ai/whos_using#open-source).\n\n## list of augmentations\n\n### pixel-level transforms\npixel-level transforms will change just an input image and will leave any additional targets such as masks, bounding boxes, and keypoints unchanged. the list of pixel-level transforms:\n\n- [advancedblur](https://albumentations.ai/docs/api_reference/augmentations/blur/transforms/#albumentations.augmentations.blur.transforms.advancedblur)\n- [blur](https://albumentations.ai/docs/api_reference/augmentations/blur/transforms/#albumentations.augmentations.blur.transforms.blur)\n- [clahe](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.clahe)\n- [channeldropout](https://albumentations.ai/docs/api_reference/augmentations/dropout/channel_dropout/#albumentations.augmentations.dropout.channel_dropout.channeldropout)\n- [channelshuffle](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.channelshuffle)\n- [colorjitter](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.colorjitter)\n- [defocus](https://albumentations.ai/docs/api_reference/augmentations/blur/transforms/#albumentations.augmentations.blur.transforms.defocus)\n- [downscale](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.downscale)\n- [emboss](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.emboss)\n- [equalize](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.equalize)\n- [fda](https://albumentations.ai/docs/api_reference/augmentations/domain_adaptation/#albumentations.augmentations.domain_adaptation.fda)\n- [fancypca](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.fancypca)\n- [fromfloat](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.fromfloat)\n- [gaussnoise](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.gaussnoise)\n- [gaussianblur](https://albumentations.ai/docs/api_reference/augmentations/blur/transforms/#albumentations.augmentations.blur.transforms.gaussianblur)\n- [glassblur](https://albumentations.ai/docs/api_reference/augmentations/blur/transforms/#albumentations.augmentations.blur.transforms.glassblur)\n- [histogrammatching](https://albumentations.ai/docs/api_reference/augmentations/domain_adaptation/#albumentations.augmentations.domain_adaptation.histogrammatching)\n- [huesaturationvalue](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.huesaturationvalue)\n- [isonoise](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.isonoise)\n- [imagecompression](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.imagecompression)\n- [invertimg](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.invertimg)\n- [medianblur](https://albumentations.ai/docs/api_reference/augmentations/blur/transforms/#albumentations.augmentations.blur.transforms.medianblur)\n- [motionblur](https://albumentations.ai/docs/api_reference/augmentations/blur/transforms/#albumentations.augmentations.blur.transforms.motionblur)\n- [multiplicativenoise](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.multiplicativenoise)\n- [normalize](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.normalize)\n- [pixeldistributionadaptation](https://albumentations.ai/docs/api_reference/augmentations/domain_adaptation/#albumentations.augmentations.domain_adaptation.pixeldistributionadaptation)\n- [posterize](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.posterize)\n- [rgbshift](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.rgbshift)\n- [randombrightnesscontrast](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.randombrightnesscontrast)\n- [randomfog](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.randomfog)\n- [randomgamma](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.randomgamma)\n- [randomgravel](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.randomgravel)\n- [randomrain](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.randomrain)\n- [randomshadow](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.randomshadow)\n- [randomsnow](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.randomsnow)\n- [randomsunflare](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.randomsunflare)\n- [randomtonecurve](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.randomtonecurve)\n- [ringingovershoot](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.ringingovershoot)\n- [sharpen](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.sharpen)\n- [solarize](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.solarize)\n- [spatter](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.spatter)\n- [superpixels](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.superpixels)\n- [templatetransform](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.templatetransform)\n- [tofloat](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.tofloat)\n- [togray](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.togray)\n- [torgb](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.torgb)\n- [tosepia](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.tosepia)\n- [unsharpmask](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.unsharpmask)\n- [zoomblur](https://albumentations.ai/docs/api_reference/augmentations/blur/transforms/#albumentations.augmentations.blur.transforms.zoomblur)\n\n### spatial-level transforms\nspatial-level transforms will simultaneously change both an input image as well as additional targets such as masks, bounding boxes, and keypoints. the following table shows which additional targets are supported by each transform.\n\n| transform                                                                                                                                                                       | image | masks | bboxes | keypoints |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :---: | :---: | :----: | :-------: |\n| [affine](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.affine)                             | \u2713     | \u2713     | \u2713      | \u2713         |\n| [bboxsaferandomcrop](https://albumentations.ai/docs/api_reference/augmentations/crops/transforms/#albumentations.augmentations.crops.transforms.bboxsaferandomcrop)             | \u2713     | \u2713     | \u2713      |           |\n| [centercrop](https://albumentations.ai/docs/api_reference/augmentations/crops/transforms/#albumentations.augmentations.crops.transforms.centercrop)                             | \u2713     | \u2713     | \u2713      | \u2713         |\n| [coarsedropout](https://albumentations.ai/docs/api_reference/augmentations/dropout/coarse_dropout/#albumentations.augmentations.dropout.coarse_dropout.coarsedropout)           | \u2713     | \u2713     |        | \u2713         |\n| [crop](https://albumentations.ai/docs/api_reference/augmentations/crops/transforms/#albumentations.augmentations.crops.transforms.crop)                                         | \u2713     | \u2713     | \u2713      | \u2713         |\n| [cropandpad](https://albumentations.ai/docs/api_reference/augmentations/crops/transforms/#albumentations.augmentations.crops.transforms.cropandpad)                             | \u2713     | \u2713     | \u2713      | \u2713         |\n| [cropnonemptymaskifexists](https://albumentations.ai/docs/api_reference/augmentations/crops/transforms/#albumentations.augmentations.crops.transforms.cropnonemptymaskifexists) | \u2713     | \u2713     | \u2713      | \u2713         |\n| [elastictransform](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.elastictransform)         | \u2713     | \u2713     | \u2713      |           |\n| [flip](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.flip)                                 | \u2713     | \u2713     | \u2713      | \u2713         |\n| [griddistortion](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.griddistortion)             | \u2713     | \u2713     | \u2713      |           |\n| [griddropout](https://albumentations.ai/docs/api_reference/augmentations/dropout/grid_dropout/#albumentations.augmentations.dropout.grid_dropout.griddropout)                   | \u2713     | \u2713     |        |           |\n| [horizontalflip](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.horizontalflip)             | \u2713     | \u2713     | \u2713      | \u2713         |\n| [lambda](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.lambda)                                                 | \u2713     | \u2713     | \u2713      | \u2713         |\n| [longestmaxsize](https://albumentations.ai/docs/api_reference/augmentations/geometric/resize/#albumentations.augmentations.geometric.resize.longestmaxsize)                     | \u2713     | \u2713     | \u2713      | \u2713         |\n| [maskdropout](https://albumentations.ai/docs/api_reference/augmentations/dropout/mask_dropout/#albumentations.augmentations.dropout.mask_dropout.maskdropout)                   | \u2713     | \u2713     |        |           |\n| [noop](https://albumentations.ai/docs/api_reference/core/transforms_interface/#albumentations.core.transforms_interface.noop)                                                   | \u2713     | \u2713     | \u2713      | \u2713         |\n| [opticaldistortion](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.opticaldistortion)       | \u2713     | \u2713     | \u2713      |           |\n| [padifneeded](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.padifneeded)                   | \u2713     | \u2713     | \u2713      | \u2713         |\n| [perspective](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.perspective)                   | \u2713     | \u2713     | \u2713      | \u2713         |\n| [piecewiseaffine](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.piecewiseaffine)           | \u2713     | \u2713     | \u2713      | \u2713         |\n| [pixeldropout](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.pixeldropout)                                     | \u2713     | \u2713     | \u2713      | \u2713         |\n| [randomcrop](https://albumentations.ai/docs/api_reference/augmentations/crops/transforms/#albumentations.augmentations.crops.transforms.randomcrop)                             | \u2713     | \u2713     | \u2713      | \u2713         |\n| [randomcropfromborders](https://albumentations.ai/docs/api_reference/augmentations/crops/transforms/#albumentations.augmentations.crops.transforms.randomcropfromborders)       | \u2713     | \u2713     | \u2713      | \u2713         |\n| [randomcropnearbbox](https://albumentations.ai/docs/api_reference/augmentations/crops/transforms/#albumentations.augmentations.crops.transforms.randomcropnearbbox)             | \u2713     | \u2713     | \u2713      | \u2713         |\n| [randomgridshuffle](https://albumentations.ai/docs/api_reference/augmentations/transforms/#albumentations.augmentations.transforms.randomgridshuffle)                           | \u2713     | \u2713     |        | \u2713         |\n| [randomresizedcrop](https://albumentations.ai/docs/api_reference/augmentations/crops/transforms/#albumentations.augmentations.crops.transforms.randomresizedcrop)               | \u2713     | \u2713     | \u2713      | \u2713         |\n| [randomrotate90](https://albumentations.ai/docs/api_reference/augmentations/geometric/rotate/#albumentations.augmentations.geometric.rotate.randomrotate90)                     | \u2713     | \u2713     | \u2713      | \u2713         |\n| [randomscale](https://albumentations.ai/docs/api_reference/augmentations/geometric/resize/#albumentations.augmentations.geometric.resize.randomscale)                           | \u2713     | \u2713     | \u2713      | \u2713         |\n| [randomsizedbboxsafecrop](https://albumentations.ai/docs/api_reference/augmentations/crops/transforms/#albumentations.augmentations.crops.transforms.randomsizedbboxsafecrop)   | \u2713     | \u2713     | \u2713      |           |\n| [randomsizedcrop](https://albumentations.ai/docs/api_reference/augmentations/crops/transforms/#albumentations.augmentations.crops.transforms.randomsizedcrop)                   | \u2713     | \u2713     | \u2713      | \u2713         |\n| [resize](https://albumentations.ai/docs/api_reference/augmentations/geometric/resize/#albumentations.augmentations.geometric.resize.resize)                                     | \u2713     | \u2713     | \u2713      | \u2713         |\n| [rotate](https://albumentations.ai/docs/api_reference/augmentations/geometric/rotate/#albumentations.augmentations.geometric.rotate.rotate)                                     | \u2713     | \u2713     | \u2713      | \u2713         |\n| [saferotate](https://albumentations.ai/docs/api_reference/augmentations/geometric/rotate/#albumentations.augmentations.geometric.rotate.saferotate)                             | \u2713     | \u2713     | \u2713      | \u2713         |\n| [shiftscalerotate](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.shiftscalerotate)         | \u2713     | \u2713     | \u2713      | \u2713         |\n| [smallestmaxsize](https://albumentations.ai/docs/api_reference/augmentations/geometric/resize/#albumentations.augmentations.geometric.resize.smallestmaxsize)                   | \u2713     | \u2713     | \u2713      | \u2713         |\n| [transpose](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.transpose)                       | \u2713     | \u2713     | \u2713      | \u2713         |\n| [verticalflip](https://albumentations.ai/docs/api_reference/augmentations/geometric/transforms/#albumentations.augmentations.geometric.transforms.verticalflip)                 | \u2713     | \u2713     | \u2713      | \u2713         |\n\n## a few more examples of augmentations\n### semantic segmentation on the inria dataset\n\n![inria](https://habrastorage.org/webt/su/wa/np/suwanpeo6ww7wpwtobtrzd_cg20.jpeg)\n\n### medical imaging\n![medical](https://habrastorage.org/webt/1i/fi/wz/1ifiwzy0lxetc4nwjvss-71nkw0.jpeg)\n\n### object detection and semantic segmentation on the mapillary vistas dataset\n![vistas](https://habrastorage.org/webt/rz/-h/3j/rz-h3jalbxic8o_fhucxysts4tc.jpeg)\n\n### keypoints augmentation\n<img src=\"https://habrastorage.org/webt/e-/6k/z-/e-6kz-fugp2heak3jzns3bc-r8o.jpeg\" width=100%>\n\n\n## benchmarking results\nto run the benchmark yourself, follow the instructions in [benchmark/readme.md](https://github.com/albumentations-team/albumentations/blob/master/benchmark/readme.md)\n\nresults for running the benchmark on the first 2000 images from the imagenet validation set using an intel(r) xeon(r) gold 6140 cpu.\nall outputs are converted to a contiguous numpy array with the np.uint8 data type.\nthe table shows how many images per second can be processed on a single core; higher is better.\n\n\n|                      |albumentations<br><small>1.1.0</small>|imgaug<br><small>0.4.0</small>|torchvision (pillow-simd backend)<br><small>0.10.1</small>|keras<br><small>2.6.0</small>|augmentor<br><small>0.2.8</small>|solt<br><small>0.1.9</small>|\n|----------------------|:------------------------------------:|:----------------------------:|:--------------------------------------------------------:|:---------------------------:|:-------------------------------:|:--------------------------:|\n|horizontalflip        |              **10220**               |             2702             |                           2517                           |             876             |              2528               |            6798            |\n|verticalflip          |               **4438**               |             2141             |                           2151                           |            4381             |              2155               |            3659            |\n|rotate                |               **389**                |             283              |                           165                            |             28              |               60                |            367             |\n|shiftscalerotate      |               **669**                |             425              |                           146                            |             29              |                -                |             -              |\n|brightness            |               **2765**               |             1124             |                           411                            |             229             |               408               |            2335            |\n|contrast              |               **2767**               |             1137             |                           349                            |              -              |               346               |            2341            |\n|brightnesscontrast    |               **2746**               |             629              |                           190                            |              -              |               189               |            1196            |\n|shiftrgb              |               **2758**               |             1093             |                            -                             |             360             |                -                |             -              |\n|shifthsv              |               **598**                |             259              |                            59                            |              -              |                -                |            144             |\n|gamma                 |               **2849**               |              -               |                           388                            |              -              |                -                |            933             |\n|grayscale             |               **5219**               |             393              |                           723                            |              -              |              1082               |            1309            |\n|randomcrop64          |              **163550**              |             2562             |                          50159                           |              -              |              42842              |           22260            |\n|padtosize512          |               **3609**               |              -               |                           602                            |              -              |                -                |            3097            |\n|resize512             |                 1049                 |             611              |                         **1066**                         |              -              |              1041               |            1017            |\n|randomsizedcrop_64_512|               **3224**               |             858              |                           1660                           |              -              |              1598               |            2675            |\n|posterize             |               **2789**               |              -               |                            -                             |              -              |                -                |             -              |\n|solarize              |               **2761**               |              -               |                            -                             |              -              |                -                |             -              |\n|equalize              |                 647                  |             385              |                            -                             |              -              |             **765**             |             -              |\n|multiply              |               **2659**               |             1129             |                            -                             |              -              |                -                |             -              |\n|multiplyelementwise   |                 111                  |           **200**            |                            -                             |              -              |                -                |             -              |\n|colorjitter           |               **351**                |              78              |                            57                            |              -              |                -                |             -              |\n\npython and library versions: python 3.9.5 (default, jun 23 2021, 15:01:51) [gcc 8.3.0], numpy 1.19.5, pillow-simd 7.0.0.post3, opencv-python 4.5.3.56, scikit-image 0.18.3, scipy 1.7.1.\n\n## contributing\n\nto create a pull request to the repository, follow the documentation at [https://albumentations.ai/docs/contributing/](https://albumentations.ai/docs/contributing/)\n\n\n## comments\nin some systems, in the multiple gpu regime, pytorch may deadlock the dataloader if opencv was compiled with opencl optimizations. adding the following two lines before the library import may help. for more details [https://github.com/pytorch/pytorch/issues/1355](https://github.com/pytorch/pytorch/issues/1355)\n\n```python\ncv2.setnumthreads(0)\ncv2.ocl.setuseopencl(false)\n```\n\n## citing\n\nif you find this library useful for your research, please consider citing [albumentations: fast and flexible image augmentations](https://www.mdpi.com/2078-2489/11/2/125):\n\n```bibtex\n@article{info11020125,\n    author = {buslaev, alexander and iglovikov, vladimir i. and khvedchenya, eugene and parinov, alex and druzhinin, mikhail and kalinin, alexandr a.},\n    title = {albumentations: fast and flexible image augmentations},\n    journal = {information},\n    volume = {11},\n    year = {2020},\n    number = {2},\n    article-number = {125},\n    url = {https://www.mdpi.com/2078-2489/11/2/125},\n    issn = {2078-2489},\n    doi = {10.3390/info11020125}\n}\n```\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "albumentations",
  "package_url": "https://pypi.org/project/albumentations/",
  "project_url": "https://pypi.org/project/albumentations/",
  "project_urls": {
    "Homepage": "https://github.com/albumentations-team/albumentations"
  },
  "release_url": "https://pypi.org/project/albumentations/1.3.1/",
  "requires_dist": [
    "numpy (>=1.11.1)",
    "scipy (>=1.1.0)",
    "scikit-image (>=0.16.1)",
    "PyYAML",
    "qudida (>=0.0.4)",
    "opencv-python-headless (>=4.1.1)",
    "pytest ; extra == 'develop'",
    "imgaug (>=0.4.0) ; extra == 'develop'",
    "imgaug (>=0.4.0) ; extra == 'imgaug'",
    "pytest ; extra == 'tests'"
  ],
  "requires_python": ">=3.7",
  "summary": "fast image augmentation library and easy to use wrapper around other libraries",
  "version": "1.3.1",
  "releases": [],
  "developers": [
    "buslaev_alexander"
  ],
  "kwds": "augmentation albumentations augmentations imagenet transformed_image",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_albumentations",
  "homepage": "https://github.com/albumentations-team/albumentations",
  "release_count": 53,
  "dependency_ids": [
    "pypi_imgaug",
    "pypi_numpy",
    "pypi_opencv_python_headless",
    "pypi_pytest",
    "pypi_pyyaml",
    "pypi_qudida",
    "pypi_scikit_image",
    "pypi_scipy"
  ]
}
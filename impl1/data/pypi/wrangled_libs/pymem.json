{
  "classifiers": [
    "environment :: win32 (ms windows)",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "[![github license](https://img.shields.io/github/license/srounet/pymem.svg)](https://github.com/srounet/pymem/)\n[![build status](https://ci.appveyor.com/api/projects/status/sfdvrtuh9qa2f3aa/branch/master?svg=true)](https://ci.appveyor.com/project/srounet/pymem/branch/master)\n[![codecov](https://codecov.io/gh/srounet/pymem/branch/master/graph/badge.svg)](https://codecov.io/gh/srounet/pymem/branch/master)\n[![discord](https://img.shields.io/discord/342944948770963476.svg)](https://discord.gg/xawnac8)\n[![documentation status](https://readthedocs.org/projects/pymem/badge/?version=latest)](https://pymem.readthedocs.io/?badge=latest)\n\npymem\n=====\n\na python library to manipulate windows processes (32 and 64 bits).  \nwith pymem you can hack into windows process and manipulate memory (read / write).\n\ndocumentation\n=============\nyou can find pymem documentation on readthedoc there: http://pymem.readthedocs.io/\n\ndiscord support\n=============\nfor questions and support, join us on discord https://discord.gg/xawnac8\n\nexamples\n========\nyou can find more examples from the community in the [examples from the community](https://pymem.readthedocs.io/en/documentation/examples/index.html) of pymem documentation.\n\nlisting process modules\n-----------------------\n\n````python\nimport pymem\n\npm = pymem.pymem('python.exe')\nmodules = list(pm.list_modules())\nfor module in modules:\n    print(module.name)\n````\n\ninjecting a python interpreter into any process\n-----------------------------------------------\n\n`````python\nfrom pymem import pymem\n\nnotepad = subprocess.popen(['notepad.exe'])\n\npm = pymem.pymem('notepad.exe')\npm.inject_python_interpreter()\nfilepath = os.path.join(os.path.abspath('.'), 'pymem_injection.txt')\nfilepath = filepath.replace(\"\\\\\", \"\\\\\\\\\")\nshellcode = \"\"\"\nf = open(\"{}\", \"w+\")\nf.write(\"pymem_injection\")\nf.close()\n\"\"\".format(filepath)\npm.inject_python_shellcode(shellcode)\nnotepad.kill()\n`````\n\n\n",
  "docs_url": null,
  "keywords": "memory win32 windows process",
  "license": "mit",
  "name": "pymem",
  "package_url": "https://pypi.org/project/Pymem/",
  "project_url": "https://pypi.org/project/Pymem/",
  "project_urls": {
    "Homepage": "http://pymem.readthedocs.org/en/latest/"
  },
  "release_url": "https://pypi.org/project/Pymem/1.13.0/",
  "requires_dist": [
    "recommonmark (==0.7.1) ; extra == 'doc'",
    "sphinx (==4.4.0) ; extra == 'doc'",
    "sphinx-rtd-theme (==1.0.0) ; extra == 'doc'",
    "regex ; extra == 'speed'",
    "codecov ; extra == 'test'",
    "pytest ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "twine ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "pymem: python memory access made easy",
  "version": "1.13.0",
  "releases": [],
  "developers": [
    "fabien_reboia",
    "srounet@gmail.com"
  ],
  "kwds": "pymem_injection pymem win32 codecov process",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pymem",
  "homepage": "http://pymem.readthedocs.org/en/latest/",
  "release_count": 28,
  "dependency_ids": [
    "pypi_codecov",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_recommonmark",
    "pypi_regex",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_twine"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: desktop environment",
    "topic :: system :: operating system",
    "typing :: typed"
  ],
  "description": "screeninfo\n----------\n\n[![build](https://github.com/rr-/screeninfo/actions/workflows/build.yml/badge.svg)](https://github.com/rr-/screeninfo/actions/workflows/build.yml)\n\nfetch location and size of physical screens.\n\n### supported environments\n\n- ms windows\n- ms windows: cygwin\n- gnu/linux: x11 (through xinerama)\n- gnu/linux: drm (experimental)\n- osx: (through appkit)\n\ni don't plan on testing osx or other environments myself. for this reason,\ni strongly encourage pull requests.\n\n### installation\n\n```\npip install screeninfo\n```\n\n### usage\n\n```python\nfrom screeninfo import get_monitors\nfor m in get_monitors():\n    print(str(m))\n```\n\n**output**:\n\n```python console\nmonitor(x=3840, y=0, width=3840, height=2160, width_mm=1420, height_mm=800, name='hdmi-0', is_primary=false)\nmonitor(x=0, y=0, width=3840, height=2160, width_mm=708, height_mm=399, name='dp-0', is_primary=true)\n```\n\n### forcing environment\n\nin some cases (emulating x server on cygwin etc.) you might want to specify the\ndriver directly. you can do so by passing extra parameter to `get_monitors()`\nlike this:\n\n```python\nfrom screeninfo import get_monitors, enumerator\nfor m in get_monitors(enumerator.osx):\n    print(str(m))\n```\n\navailable drivers: `windows`, `cygwin`, `x11`, `osx`.\n\n# contributing\n\n\n```sh\ngit clone https://github.com/rr-/screeninfo.git # clone this repo\ncd screeninfo\npoetry install # to install the local venv\npoetry run pre-commit install # to setup pre-commit hooks\npoetry shell # to enter the venv\n```\n\nthis project uses [poetry](https://python-poetry.org/) for packaging,\ninstall instructions at [poetry#installation](https://python-poetry.org/docs/#installation)\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "screeninfo",
  "package_url": "https://pypi.org/project/screeninfo/",
  "project_url": "https://pypi.org/project/screeninfo/",
  "project_urls": {
    "Homepage": "https://github.com/rr-/screeninfo",
    "Repository": "https://github.com/rr-/screeninfo"
  },
  "release_url": "https://pypi.org/project/screeninfo/0.8.1/",
  "requires_dist": [
    "dataclasses; python_version < \"3.7\"",
    "Cython; sys_platform == \"darwin\"",
    "pyobjc-framework-Cocoa; sys_platform == \"darwin\""
  ],
  "requires_python": ">=3.6.2,<4.0.0",
  "summary": "fetch location and size of physical screens.",
  "version": "0.8.1",
  "releases": [],
  "developers": [
    "marcin_kurczewski",
    "rr-@sakuya.pl"
  ],
  "kwds": "get_monitors screeninfo screens monitor osx",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_screeninfo",
  "homepage": "https://github.com/rr-/screeninfo",
  "release_count": 21,
  "dependency_ids": [
    "pypi_cython",
    "pypi_dataclasses",
    "pypi_pyobjc_framework_cocoa"
  ]
}
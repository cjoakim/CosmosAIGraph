{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: information technology",
    "license :: osi approved :: mozilla public license 2.0 (mpl 2.0)",
    "programming language :: c++",
    "programming language :: python :: 3",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: multimedia :: graphics",
    "topic :: software development :: libraries"
  ],
  "description": "<!-- spdx-filecopyrighttext: 2022 james r. barlow -->\n<!-- spdx-license-identifier: mpl-2.0 -->\n\npikepdf\n=======\n\n**pikepdf** is a python library for reading and writing pdf files.\n\n[![build status](https://github.com/pikepdf/pikepdf/actions/workflows/build.yml/badge.svg)](https://github.com/pikepdf/pikepdf/actions/workflows/build.yml) [![pypi](https://img.shields.io/pypi/v/pikepdf.svg)](https://pypi.org/project/pikepdf/) ![pypi - python version](https://img.shields.io/pypi/pyversions/pikepdf) ![pypy](https://img.shields.io/badge/3.9-blue) ![pypi - license](https://img.shields.io/pypi/l/pikepdf) ![pypi - downloads](https://img.shields.io/pypi/dm/pikepdf)  [![codecov](https://codecov.io/gh/pikepdf/pikepdf/branch/main/graph/badge.svg?token=8fj755317j)](https://codecov.io/gh/pikepdf/pikepdf)\n\npikepdf is based on [qpdf](https://github.com/qpdf/qpdf), a powerful pdf manipulation and repair library.\n\npython + qpdf = \"py\" + \"qpdf\" = \"pyqpdf\", which looks like a dyslexia test. say it out loud, and it sounds like \"pikepdf\".\n\n```python\n# elegant, pythonic api\nwith pikepdf.open('input.pdf') as pdf:\n    num_pages = len(pdf.pages)\n    del pdf.pages[-1]\n    pdf.save('output.pdf')\n```\n\n**to install:**\n\n```bash\npip install pikepdf\n```\n\nfor users who want to build from source, see [installation](https://pikepdf.readthedocs.io/en/latest/index.html).\n\npikepdf is [documented](https://pikepdf.readthedocs.io/en/latest/index.html) and actively maintained. binary wheels are available for all common platforms, both x86-64 and arm64/apple silicon. for information on the latest changes, see the [release notes](https://pikepdf.readthedocs.io/en/latest/releasenotes/index.html).\n\ncommercial support is available.\n\nfeatures\n--------\n\nthis library is similar to pypdf (formerly pypdf2) - it provides low level access to pdf features and allows editing and content transformation of existing pdfs. some knowledge of the pdf specification may be helpful. it does not have the capability to render a pdf to image.\n\n| **feature**                                                         | **pikepdf**                                 | **pypdf** (pypdf2)                        |\n| ------------------------------------------------------------------- | ------------------------------------------- | ----------------------------------------- |\n| editing, manipulation and transformation of existing pdfs           | \u2714                                           | \u2714                                         |\n| based on an existing, mature pdf library                            | qpdf                                        | \u2718                                         |\n| implementation                                                      | c++ and python                              | python                                    |\n| pdf versions supported                                              | 1.1 to 1.7                                  | 1.1 to 1.7                                |\n| save and load password protected (encrypted) pdfs                   | \u2714 (except public key)                       | \u2714 (except public key)                     |\n| creates linearized (\"fast web view\") pdfs                           | \u2714                                           | \u2718                                         |\n| test suite coverage                                                 | ![codecov][codecov]                         | ![codecovpypdf2][codecovpypdf]            |\n| creates pdfs that pass pdf validation tests                         | \u2714                                           | \u2718                                         |\n| modifies pdf/a without breaking pdf/a compliance                    | \u2714                                           | \u2718                                         |\n| pdf xmp metadata editing                                            | \u2714                                           | read-only                                 |\n| integrates with jupyter and ipython notebooks for rapid development | \u2714                                           | \u2718                                         |\n\n[codecov]: https://codecov.io/gh/pikepdf/pikepdf/branch/main/graph/badge.svg?token=8fj755317j\n\n[codecovpypdf]: https://codecov.io/gh/py-pdf/pypdf/branch/main/graph/badge.svg?token=id42cgnz5z\n\ntestimonials\n------------\n\n> i decided to try writing a quick python program with pikepdf to automate [something] and it \"just worked\". \u2013jay berkenbilt, creator of qpdf\n\n> \"thanks for creating a great pdf library, i tested out several and this is the one that was best able to work with whatever i threw at it.\" \u2013@cfcurtis\n\nin production\n-------------\n\n* [ocrmypdf](https://github.com/ocrmypdf/ocrmypdf) uses pikepdf to graft ocr text layers onto existing pdfs, to examine the contents of input pdfs, and to optimize pdfs.\n\n* [pdf arranger](https://github.com/jeromerobert/pdfarranger) is a small python application that provides a graphical user interface to rotate, crop and rearrange pdfs.\n\n* [pdfstitcher](https://github.com/cfcurtis/sewingutils) is a utility for stitching pdf pages into a single document (i.e. n-up or page imposition).\n\nlicense\n-------\n\npikepdf is licensed under the [mozilla public license 2.0](https://www.mozilla.org/en-us/mpl/2.0/) license (mpl-2.0) that can be found in the license file. by using, distributing, or contributing to this project, you agree to the terms and conditions of this license. mpl 2.0 permits you to combine the software with other work, including commercial and closed source software, but asks you to publish source-level modifications you make to pikepdf itself.\n\nsome components of the project may be under other license agreements, as indicated in their spdx license header or the [`.dep5/reuse`](reuse) file.\n",
  "docs_url": null,
  "keywords": "pdf",
  "license": "mpl-2.0",
  "name": "pikepdf",
  "package_url": "https://pypi.org/project/pikepdf/",
  "project_url": "https://pypi.org/project/pikepdf/",
  "project_urls": {
    "changelog": "https://pikepdf.readthedocs.io/en/latest/releasenotes/index.html",
    "documentation": "https://pikepdf.readthedocs.io/",
    "repository": "https://github.com/pikepdf/pikepdf"
  },
  "release_url": "https://pypi.org/project/pikepdf/8.10.1/",
  "requires_dist": [
    "Pillow >=10.0.1",
    "Deprecated",
    "lxml >=4.8",
    "packaging",
    "pre-commit ; extra == 'dev'",
    "typer[all] ; extra == 'dev'",
    "Sphinx >=3 ; extra == 'docs'",
    "sphinx-autoapi ; extra == 'docs'",
    "sphinx-design ; extra == 'docs'",
    "sphinx-issues ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "tomli ; (python_version < \"3.11\") and extra == 'docs'",
    "lxml-stubs ; extra == 'mypy'",
    "types-Pillow ; extra == 'mypy'",
    "types-requests ; extra == 'mypy'",
    "types-setuptools ; extra == 'mypy'",
    "attrs >=20.2.0 ; extra == 'test'",
    "coverage[toml] ; extra == 'test'",
    "hypothesis >=6.36 ; extra == 'test'",
    "pybind11 ; extra == 'test'",
    "pytest >=6.2.5 ; extra == 'test'",
    "pytest-cov >=3.0.0 ; extra == 'test'",
    "pytest-timeout >=2.1.0 ; extra == 'test'",
    "pytest-xdist >=2.5.0 ; extra == 'test'",
    "python-dateutil >=2.8.1 ; extra == 'test'",
    "psutil >=5.9 ; (os_name != \"nt\") and extra == 'test'",
    "python-xmp-toolkit >=2.0.1 ; (os_name != \"nt\" and platform_machine == \"x86_64\") and extra == 'test'",
    "numpy >=1.21.0 ; (platform_machine == \"x86_64\" or platform_python_implementation == \"CPython\") and extra == 'test'",
    "tomli ; (python_version < \"3.11\") and extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "read and write pdfs with python, powered by qpdf",
  "version": "8.10.1",
  "releases": [],
  "developers": [
    "james@purplerock.ca"
  ],
  "kwds": "pikepdf pyqpdf pypdf qpdf pypdf2",
  "license_kwds": "mpl-2.0",
  "libtype": "pypi",
  "id": "pypi_pikepdf",
  "homepage": "",
  "release_count": 216,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_coverage",
    "pypi_deprecated",
    "pypi_hypothesis",
    "pypi_lxml",
    "pypi_lxml_stubs",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pillow",
    "pypi_pre_commit",
    "pypi_psutil",
    "pypi_pybind11",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_timeout",
    "pypi_pytest_xdist",
    "pypi_python_dateutil",
    "pypi_python_xmp_toolkit",
    "pypi_sphinx",
    "pypi_sphinx_autoapi",
    "pypi_sphinx_design",
    "pypi_sphinx_issues",
    "pypi_sphinx_rtd_theme",
    "pypi_tomli",
    "pypi_typer",
    "pypi_types_pillow",
    "pypi_types_requests",
    "pypi_types_setuptools"
  ]
}
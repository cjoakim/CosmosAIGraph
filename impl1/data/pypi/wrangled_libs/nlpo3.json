{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: thai",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "topic :: text processing :: linguistic"
  ],
  "description": "<a href=\"https://pypi.python.org/pypi/nlpo3\"><img alt=\"pypi\" src=\"https://img.shields.io/pypi/v/nlpo3.svg\"/></a>\n<a href=\"https://www.python.org/downloads/release/python-360/\"><img alt=\"python 3.6\" src=\"https://img.shields.io/badge/python-3.6-blue.svg\"/></a>\n<a href=\"https://opensource.org/licenses/apache-2.0\"><img alt=\"license\" src=\"https://img.shields.io/badge/license-apache%202.0-blue.svg\"/></a>\n<a href=\"https://pepy.tech/project/nlpo3\"><img alt=\"downloads\" src=\"https://pepy.tech/badge/nlpo3/month\"/></a>\n\n# nlpo3 python binding\n\npython binding for nlpo3, a thai natural language processing library in rust.\n\n## features\n\n- thai word tokenizer\n  - `segment()` - use maximal-matching dictionary-based tokenization algorithm and honor thai character cluster boundaries\n    - [2.5x faster](notebooks/nlpo3_segment_benchmarks.ipynb) than similar pure python implementation (pythainlp's newmm)\n  - `load_dict()` - load a dictionary from plain text file (one word per line)\n\n\n## dictionary file\n\n- for the interest of library size, nlpo3 does not assume what dictionary the developer would like to use.\n  it does not come with a dictionary. a dictionary is needed for the dictionary-based word tokenizer.\n- for tokenization dictionary, try\n  - [words_th.tx](https://github.com/pythainlp/pythainlp/blob/dev/pythainlp/corpus/words_th.txt) from [pythainlp](https://github.com/pythainlp/pythainlp/) - around 62,000 words (cc0)\n  - [word break dictionary](https://github.com/tlwg/libthai/tree/master/data) from [libthai](https://github.com/tlwg/libthai/) - consists of dictionaries in different categories, with make script (lgpl-2.1)\n\n\n## install\n\n```bash\npip install nlpo3\n```\n\n## usage\n\nload file `path/to/dict.file` to memory and assign a name `dict_name` to it.\nthen tokenize a text with the `dict_name` dictionary:\n```python\nfrom nlpo3 import load_dict, segment\n\nload_dict(\"path/to/dict.file\", \"custom_dict\")\nsegment(\"\u0e2a\u0e27\u0e31\u0e2a\u0e14\u0e35\u0e04\u0e23\u0e31\u0e1a\", \"dict_name\")\n```\n\nit will return a list of strings:\n```python\n['\u0e2a\u0e27\u0e31\u0e2a\u0e14\u0e35', '\u0e04\u0e23\u0e31\u0e1a']\n```\n(result depends on words included in the dictionary)\n\nuse multithread mode, also use the `dict_name` dictionary:\n```python\nsegment(\"\u0e2a\u0e27\u0e31\u0e2a\u0e14\u0e35\u0e04\u0e23\u0e31\u0e1a\", dict_name=\"dict_name\", parallel=true)\n```\n\nuse safe mode to avoid long waiting time in some edge cases\nfor text with lots of ambiguous word boundaries:\n```python\nsegment(\"\u0e2a\u0e27\u0e31\u0e2a\u0e14\u0e35\u0e04\u0e23\u0e31\u0e1a\", dict_name=\"dict_name\", safe=true)\n```\n\n## build\n\n### requirements\n\n- [rust 2018 edition](https://www.rust-lang.org/tools/install)\n- python 3.6 or newer\n- python development headers\n  - ubuntu: `sudo apt-get install python3-dev`\n  - macos: no action needed\n- [pyo3](https://github.com/pyo3/pyo3) - already included in cargo.toml\n- [setuptools-rust](https://github.com/pyo3/setuptools-rust)\n\n### steps\n\n```bash\npython -m pip install --upgrade build\npython -m build\n```\n\nthis should generate a wheel file, in `dist/` directory, which can be installed by pip.\n\n## issues\n\nplease report issues at https://github.com/pythainlp/nlpo3/issues\n",
  "docs_url": null,
  "keywords": "thai,tokenizer,nlp,word-segmentation,pythainlp",
  "license": "apache-2.0",
  "name": "nlpo3",
  "package_url": "https://pypi.org/project/nlpo3/",
  "project_url": "https://pypi.org/project/nlpo3/",
  "project_urls": {
    "Homepage": "https://github.com/PyThaiNLP/nlpo3/",
    "repository": "https://github.com/PyThaiNLP/nlpo3/"
  },
  "release_url": "https://pypi.org/project/nlpo3/1.3.0/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "python binding for nlpo3 thai language processing library in rust",
  "version": "1.3.0",
  "releases": [],
  "developers": [
    "thanathip_suntorntip",
    "wannaphong@yahoo.com"
  ],
  "kwds": "python3 python tokenizer pythainlp pip",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_nlpo3",
  "homepage": "https://github.com/pythainlp/nlpo3/",
  "release_count": 9,
  "dependency_ids": []
}
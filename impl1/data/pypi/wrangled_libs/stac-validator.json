{
  "classifiers": [
    "intended audience :: information technology",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3.7",
    "topic :: scientific/engineering :: gis"
  ],
  "description": "# spatiotemporal asset catalog (stac) validator\n\n## documentation\n\n[read the docs](https://stac-validator.readthedocs.io/en/latest/)\n\n\n## validate stac json files against the [stac spec](https://github.com/radiantearth/stac-spec).   \n    \n\n\n```bash\nstac-validator https://raw.githubusercontent.com/radiantearth/stac-spec/master/examples/extended-item.json\n[\n    {\n        \"version\": \"1.0.0\",\n        \"path\": \"https://raw.githubusercontent.com/radiantearth/stac-spec/master/examples/extended-item.json\",\n        \"schema\": [\n            \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\",\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\",\n            \"https://stac-extensions.github.io/scientific/v1.0.0/schema.json\",\n            \"https://stac-extensions.github.io/view/v1.0.0/schema.json\",\n            \"https://stac-extensions.github.io/remote-data/v1.0.0/schema.json\",\n            \"https://schemas.stacspec.org/v1.0.0/item-spec/json-schema/item.json\"\n        ],\n        \"valid_stac\": true,\n        \"asset_type\": \"item\",\n        \"validation_method\": \"default\"\n    }\n]\n```\n\n## requirements\n\n- python 3.7+\n  - requests\n  - click\n  - pytest\n  - jsonschema\n\nnote: stac-validator is also used in stac-check which adds linting messages based on the official stac best practices document.  \nhttps://github.com/stac-utils/stac-check\n\n## install\n\ninstallation from pypi\n\n```bash\npip install stac-validator\n```\n\ninstallation from repo\n\n```bash\npip install .\n```\n\nor for local development\n\n```bash\npip install -e '.[dev]'\n```\n\n\nthe [makefile](./makefile) has convenience commands if make is installed.\n\n```bash\nmake help\n```\n\n## versions supported\n\n| stac         |\n| ------------ |\n| 0.8.0        |\n| 0.8.1        |\n| 0.9.0        |\n| 1.0.0-beta.1 |\n| 1.0.0-beta.2 |\n| 1.0.0-rc.1   |\n| 1.0.0-rc.2   |\n| 1.0.0-rc.3   |\n| 1.0.0-rc.4   |\n| 1.0.0        |\n\n\n---\n\n# cli\n\n**basic usage**\n\n```bash\nstac-validator --help\nusage: stac-validator [options] stac_file\n\noptions:\n  --core                   validate core stac object only without extensions.\n  --extensions             validate extensions only.\n  --links                  additionally validate links. only works with\n                           default mode.\n  --assets                 additionally validate assets. only works with\n                           default mode.\n  -c, --custom text        validate against a custom schema (local filepath or\n                           remote schema).\n  -r, --recursive          recursively validate all related stac objects.\n  -m, --max-depth integer  maximum depth to traverse when recursing. omit this\n                           argument to get full recursion. ignored if\n                           `recursive == false`.\n  --item-collection        validate item collection response. can be combined\n                           with --pages. defaults to one page.\n  -p, --pages integer      maximum number of pages to validate via --item-\n                           collection. defaults to one page.\n  -v, --verbose            enables verbose output for recursive mode.\n  --no_output              do not print output to console.\n  --log_file text          save full recursive output to log file (local\n                           filepath).\n  --version                show the version and exit.\n  --help                   show this message and exit.\n```\n\n---\n\n# deployment\n\n## docker\n\nthe validator can run using docker containers.\n\n```bash\ndocker build -t stac-validator .\ndocker run stac-validator https://raw.githubusercontent.com/stac-extensions/projection/main/examples/item.json\n[\n    {\n        \"version\": \"1.0.0\",\n        \"path\": \"https://raw.githubusercontent.com/stac-extensions/projection/main/examples/item.json\",\n        \"schema\": [\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\",\n            \"https://schemas.stacspec.org/v1.0.0/item-spec/json-schema/item.json\"\n        ],\n        \"valid_stac\": true,\n        \"asset_type\": \"item\",\n        \"validation_method\": \"default\"\n    }\n]\n```\n\n## aws (cdk)\nan example [aws cdk](https://aws.amazon.com/cdk/) deployment is available in [cdk-deployment](./cdk-deployment/readme.md)\n```bash\ncd cdk-deployment\ncdk diff\n```\n\n---\n\n# python\n\n**remote source**\n\n```python\nfrom stac_validator import stac_validator\n\nstac = stac_validator.stacvalidate(\"https://raw.githubusercontent.com/stac-utils/pystac/main/tests/data-files/examples/0.9.0/collection-spec/examples/landsat-collection.json\")\nstac.run()\nprint(stac.message)\n[\n    {\n        \"version\": \"0.9.0\",\n        \"path\": \"https://raw.githubusercontent.com/stac-utils/pystac/main/tests/data-files/examples/0.9.0/collection-spec/examples/landsat-collection.json\",\n        \"schema\": [\n            \"https://cdn.staclint.com/v0.9.0/collection.json\"\n        ],\n        \"valid_stac\": true,\n        \"asset_type\": \"collection\",\n        \"validation_method\": \"default\"\n    }\n]\n```\n\n**local file**\n\n```python\nfrom stac_validator import stac_validator\n\nstac = stac_validator.stacvalidate(\"tests/test_data/1beta1/sentinel2.json\", extensions=true)\nstac.run()\nprint(stac.message)\n[\n    {\n        \"version\": \"1.0.0-beta.1\",\n        \"path\": \"tests/test_data/1beta1/sentinel2.json\",\n        \"schema\": [\n            \"https://cdn.staclint.com/v1.0.0-beta.1/collection.json\"\n        ],\n        \"valid_stac\": true,\n        \"asset_type\": \"collection\",\n        \"validation_method\": \"extensions\"\n    }\n]\n```\n\n**dictionary**\n  \n```python\nfrom stac_validator import stac_validator\n  \nstac = stac_validator.stacvalidate()\nstac.validate_dict(dictionary)\nprint(stac.message)\n```\n\n**item collection**\n  \n```python\nfrom stac_validator import stac_validator\n  \nstac = stac_validator.stacvalidate()\nstac.validate_item_collection_dict(item_collection_dict)\nprint(stac.message)\n```\n---\n\n# testing\n\n\n```bash\nmake test\n# or\npytest -v\n```\n\nsee the [tests](./tests/test_stac_validator.py) files for examples on different usages.\n\n---\n# additional examples\n\n**--core**\n\n```bash\nstac-validator https://raw.githubusercontent.com/radiantearth/stac-spec/master/examples/extended-item.json --core\n[\n    {\n        \"version\": \"1.0.0\",\n        \"path\": \"https://raw.githubusercontent.com/radiantearth/stac-spec/master/examples/extended-item.json\",\n        \"schema\": [\n            \"https://schemas.stacspec.org/v1.0.0/item-spec/json-schema/item.json\"\n        ],\n        \"valid_stac\": true,\n        \"asset_type\": \"item\",\n        \"validation_method\": \"core\"\n    }\n]\n```\n\n**--custom**\n\n```bash\nstac-validator https://radarstac.s3.amazonaws.com/stac/catalog.json --custom https://cdn.staclint.com/v0.7.0/catalog.json\n[\n    {\n        \"version\": \"0.7.0\",\n        \"path\": \"https://radarstac.s3.amazonaws.com/stac/catalog.json\",\n        \"schema\": [\n            \"https://cdn.staclint.com/v0.7.0/catalog.json\"\n        ],\n        \"asset_type\": \"catalog\",\n        \"validation_method\": \"custom\",\n        \"valid_stac\": true\n    }\n]\n```\n\n**--extensions**\n\n```bash\nstac-validator https://raw.githubusercontent.com/radiantearth/stac-spec/master/examples/extended-item.json --extensions\n[\n    {\n        \"version\": \"1.0.0\",\n        \"path\": \"https://raw.githubusercontent.com/radiantearth/stac-spec/master/examples/extended-item.json\",\n        \"schema\": [\n            \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\",\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\",\n            \"https://stac-extensions.github.io/scientific/v1.0.0/schema.json\",\n            \"https://stac-extensions.github.io/view/v1.0.0/schema.json\",\n            \"https://stac-extensions.github.io/remote-data/v1.0.0/schema.json\"\n        ],\n        \"valid_stac\": true,\n        \"asset_type\": \"item\",\n        \"validation_method\": \"extensions\"\n    }\n]\n```\n   \n**--recursive**\n\n```bash\nstac-validator https://spot-canada-ortho.s3.amazonaws.com/catalog.json --recursive --max-depth 1 --verbose\n[\n    {\n        \"version\": \"0.8.1\",\n        \"path\": \"https://canada-spot-ortho.s3.amazonaws.com/canada_spot_orthoimages/canada_spot4_orthoimages/collection.json\",\n        \"schema\": \"https://cdn.staclint.com/v0.8.1/collection.json\",\n        \"asset_type\": \"collection\",\n        \"validation_method\": \"recursive\",\n        \"valid_stac\": true\n    },\n    {\n        \"version\": \"0.8.1\",\n        \"path\": \"https://canada-spot-ortho.s3.amazonaws.com/canada_spot_orthoimages/canada_spot5_orthoimages/collection.json\",\n        \"schema\": \"https://cdn.staclint.com/v0.8.1/collection.json\",\n        \"asset_type\": \"collection\",\n        \"validation_method\": \"recursive\",\n        \"valid_stac\": true\n    },\n    {\n        \"version\": \"0.8.1\",\n        \"path\": \"https://spot-canada-ortho.s3.amazonaws.com/catalog.json\",\n        \"schema\": \"https://cdn.staclint.com/v0.8.1/catalog.json\",\n        \"asset_type\": \"catalog\",\n        \"validation_method\": \"recursive\",\n        \"valid_stac\": true\n    }\n]\n```\n**--item-collection**\n\n```bash\nstac-validator https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a/items --item-collection --pages 2\n```\n",
  "docs_url": null,
  "keywords": "stac validation raster",
  "license": "mit",
  "name": "stac-validator",
  "package_url": "https://pypi.org/project/stac-validator/",
  "project_url": "https://pypi.org/project/stac-validator/",
  "project_urls": {
    "Homepage": "https://github.com/stac-utils/stac-validator"
  },
  "release_url": "https://pypi.org/project/stac-validator/3.3.2/",
  "requires_dist": [
    "requests>=2.19.1",
    "jsonschema>=3.2.0",
    "click>=8.0.0",
    "pytest; extra == \"dev\"",
    "types-setuptools; extra == \"dev\""
  ],
  "requires_python": ">=3.8",
  "summary": "a package to validate stac files",
  "version": "3.3.2",
  "releases": [],
  "developers": [
    "james_banting",
    "jhealy@sparkgeo.com"
  ],
  "kwds": "valid_stac stac_validator test_stac_validator stac_file stacvalidate",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_stac_validator",
  "homepage": "https://github.com/stac-utils/stac-validator",
  "release_count": 18,
  "dependency_ids": [
    "pypi_click",
    "pypi_jsonschema",
    "pypi_pytest",
    "pypi_requests",
    "pypi_types_setuptools"
  ]
}
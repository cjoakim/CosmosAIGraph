{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: macos x",
    "framework :: anyio",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: filesystems"
  ],
  "description": "# watchfiles\n\n[![ci](https://github.com/samuelcolvin/watchfiles/workflows/ci/badge.svg?event=push)](https://github.com/samuelcolvin/watchfiles/actions?query=event%3apush+branch%3amain+workflow%3aci)\n[![coverage](https://codecov.io/gh/samuelcolvin/watchfiles/branch/main/graph/badge.svg)](https://codecov.io/gh/samuelcolvin/watchfiles)\n[![pypi](https://img.shields.io/pypi/v/watchfiles.svg)](https://pypi.python.org/pypi/watchfiles)\n[![condaforge](https://img.shields.io/conda/v/conda-forge/watchfiles.svg)](https://anaconda.org/conda-forge/watchfiles)\n[![license](https://img.shields.io/github/license/samuelcolvin/watchfiles.svg)](https://github.com/samuelcolvin/watchfiles/blob/main/license)\n\nsimple, modern and high performance file watching and code reload in python.\n\n---\n\n**documentation**: [watchfiles.helpmanual.io](https://watchfiles.helpmanual.io)\n\n**source code**: [github.com/samuelcolvin/watchfiles](https://github.com/samuelcolvin/watchfiles)\n\n---\n\nunderlying file system notifications are handled by the [notify](https://github.com/notify-rs/notify) rust library.\n\nthis package was previously named \"watchgod\",\nsee [the migration guide](https://watchfiles.helpmanual.io/migrating/) for more information.\n\n## installation\n\n**watchfiles** requires python 3.8 - 3.12.\n\n```bash\npip install watchfiles\n```\n\nbinaries are available for:\n\n* **linux**: `x86_64`, `aarch64`, `i686`, `armv7l`, `musl-x86_64` & `musl-aarch64`\n* **macos**: `x86_64` & `arm64`\n* **windows**: `amd64` & `win32`\n\notherwise, you can install from source which requires rust stable to be installed.\n\n## usage\n\nhere are some examples of what **watchfiles** can do:\n\n### `watch` usage\n\n```py\nfrom watchfiles import watch\n\nfor changes in watch('./path/to/dir'):\n    print(changes)\n```\nsee [`watch` docs](https://watchfiles.helpmanual.io/api/watch/#watchfiles.watch) for more details.\n\n### `awatch` usage\n\n```py\nimport asyncio\nfrom watchfiles import awatch\n\nasync def main():\n    async for changes in awatch('/path/to/dir'):\n        print(changes)\n\nasyncio.run(main())\n```\nsee [`awatch` docs](https://watchfiles.helpmanual.io/api/watch/#watchfiles.awatch) for more details.\n\n### `run_process` usage\n\n```py\nfrom watchfiles import run_process\n\ndef foobar(a, b, c):\n    ...\n\nif __name__ == '__main__':\n    run_process('./path/to/dir', target=foobar, args=(1, 2, 3))\n```\nsee [`run_process` docs](https://watchfiles.helpmanual.io/api/run_process/#watchfiles.run_process) for more details.\n\n### `arun_process` usage\n\n```py\nimport asyncio\nfrom watchfiles import arun_process\n\ndef foobar(a, b, c):\n    ...\n\nasync def main():\n    await arun_process('./path/to/dir', target=foobar, args=(1, 2, 3))\n\nif __name__ == '__main__':\n    asyncio.run(main())\n```\nsee [`arun_process` docs](https://watchfiles.helpmanual.io/api/run_process/#watchfiles.arun_process) for more details.\n\n## cli\n\n**watchfiles** also comes with a cli for running and reloading code. to run `some command` when files in `src` change:\n\n```\nwatchfiles \"some command\" src\n```\n\nfor more information, see [the cli docs](https://watchfiles.helpmanual.io/cli/).\n\nor run\n\n```bash\nwatchfiles --help\n```\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "watchfiles",
  "package_url": "https://pypi.org/project/watchfiles/",
  "project_url": "https://pypi.org/project/watchfiles/",
  "project_urls": {
    "Changelog": "https://github.com/samuelcolvin/watchfiles/releases",
    "Documentation": "https://watchfiles.helpmanual.io",
    "Funding": "https://github.com/sponsors/samuelcolvin",
    "Homepage": "https://github.com/samuelcolvin/watchfiles",
    "Source": "https://github.com/samuelcolvin/watchfiles"
  },
  "release_url": "https://pypi.org/project/watchfiles/0.21.0/",
  "requires_dist": [
    "anyio >=3.0.0"
  ],
  "requires_python": ">=3.8",
  "summary": "simple, modern and high performance file watching and code reload in python.",
  "version": "0.21.0",
  "releases": [],
  "developers": [
    "s@muelcolvin.com"
  ],
  "kwds": "watchfiles watch workflows badge watchgod",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_watchfiles",
  "homepage": "https://github.com/samuelcolvin/watchfiles/watchfiles",
  "release_count": 17,
  "dependency_ids": [
    "pypi_anyio"
  ]
}
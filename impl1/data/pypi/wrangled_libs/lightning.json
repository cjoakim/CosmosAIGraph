{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: scientific/engineering :: information analysis"
  ],
  "description": "<div align=\"center\">\n\n<img alt=\"lightning\" src=\"https://pl-public-data.s3.amazonaws.com/assets_lightning/lightningcolor.png\" width=\"800px\" style=\"max-width: 100%;\">\n\n<br/>\n<br/>\n\n**the deep learning framework to pretrain, finetune and deploy ai models.**\n\n**new- lightning 2.0 features a clean and stable api!!**\n\n______________________________________________________________________\n\n<p align=\"center\">\n  <a href=\"https://lightning.ai/\">lightning.ai</a> \u2022\n  <a href=\"https://lightning.ai/docs/pytorch/stable/\">pytorch lightning</a> \u2022\n  <a href=\"https://lightning.ai/docs/fabric/stable/\">fabric</a> \u2022\n  <a href=\"https://lightning.ai/docs/app/stable/\">lightning apps</a> \u2022\n  <a href=\"https://pytorch-lightning.readthedocs.io/en/2.1.3\">docs</a> \u2022\n  <a href=\"#community\">community</a> \u2022\n  <a href=\"https://lightning.ai/docs/pytorch/stable/generated/contributing.html\">contribute</a> \u2022\n</p>\n\n<!-- do not add conda downloads... readme changes must be approved by eden or will -->\n\n[![pypi - python version](https://img.shields.io/pypi/pyversions/pytorch-lightning)](https://pypi.org/project/pytorch-lightning/)\n[![pypi status](https://badge.fury.io/py/pytorch-lightning.svg)](https://badge.fury.io/py/pytorch-lightning)\n[![pypi - downloads](https://img.shields.io/pypi/dm/pytorch-lightning)](https://pepy.tech/project/pytorch-lightning)\n[![conda](https://img.shields.io/conda/v/conda-forge/lightning?label=conda&color=success)](https://anaconda.org/conda-forge/lightning)\n[![codecov](https://codecov.io/gh/lightning-ai/pytorch-lightning/graph/badge.svg?token=smzx8mnkla)](https://codecov.io/gh/lightning-ai/pytorch-lightning)\n\n[![discord](https://img.shields.io/discord/1077906959069626439?style=plastic)](https://discord.gg/vptpczkgna)\n![github commit activity](https://img.shields.io/github/commit-activity/w/lightning-ai/lightning)\n[![license](https://img.shields.io/badge/license-apache%202.0-blue.svg)](https://github.com/lightning-ai/lightning/blob/master/license)\n\n<!--\n[![codefactor](https://www.codefactor.io/repository/github/lightning-ai/lightning/badge)](https://www.codefactor.io/repository/github/lightning-ai/lightning)\n-->\n\n</div>\n\n## install lightning\n\nsimple installation from pypi\n\n```bash\npip install lightning\n```\n\n<!--  -->\n\n______________________________________________________________________\n\n## lightning has 3 core packages\n\n[pytorch lightning: train and deploy pytorch at scale](#pytorch-lightning-train-and-deploy-pytorch-at-scale).\n<br/>\n[lightning fabric: expert control](#lightning-fabric-expert-control).\n<br/>\n[lightning apps: build ai products and ml workflows](#lightning-apps-build-ai-products-and-ml-workflows).\n\nlightning gives you granular control over how much abstraction you want to add over pytorch.\n\n<div align=\"center\">\n    <img src=\"https://pl-public-data.s3.amazonaws.com/assets_lightning/continuum.png\" width=\"80%\">\n</div>\n\n______________________________________________________________________\n\n# pytorch lightning: train and deploy pytorch at scale\n\npytorch lightning is just organized pytorch - lightning disentangles pytorch code to decouple the science from the engineering.\n\n\n\n______________________________________________________________________\n\n### hello simple model\n\n```python\n# main.py\n# ! pip install torchvision\nimport torch, torch.nn as nn, torch.utils.data as data, torchvision as tv, torch.nn.functional as f\nimport lightning as l\n\n# --------------------------------\n# step 1: define a lightningmodule\n# --------------------------------\n# a lightningmodule (nn.module subclass) defines a full *system*\n# (ie: an llm, diffusion model, autoencoder, or simple image classifier).\n\n\nclass litautoencoder(l.lightningmodule):\n    def __init__(self):\n        super().__init__()\n        self.encoder = nn.sequential(nn.linear(28 * 28, 128), nn.relu(), nn.linear(128, 3))\n        self.decoder = nn.sequential(nn.linear(3, 128), nn.relu(), nn.linear(128, 28 * 28))\n\n    def forward(self, x):\n        # in lightning, forward defines the prediction/inference actions\n        embedding = self.encoder(x)\n        return embedding\n\n    def training_step(self, batch, batch_idx):\n        # training_step defines the train loop. it is independent of forward\n        x, y = batch\n        x = x.view(x.size(0), -1)\n        z = self.encoder(x)\n        x_hat = self.decoder(z)\n        loss = f.mse_loss(x_hat, x)\n        self.log(\"train_loss\", loss)\n        return loss\n\n    def configure_optimizers(self):\n        optimizer = torch.optim.adam(self.parameters(), lr=1e-3)\n        return optimizer\n\n\n# -------------------\n# step 2: define data\n# -------------------\ndataset = tv.datasets.mnist(\".\", download=true, transform=tv.transforms.totensor())\ntrain, val = data.random_split(dataset, [55000, 5000])\n\n# -------------------\n# step 3: train\n# -------------------\nautoencoder = litautoencoder()\ntrainer = l.trainer()\ntrainer.fit(autoencoder, data.dataloader(train), data.dataloader(val))\n```\n\nrun the model on your terminal\n\n```bash\npip install torchvision\npython main.py\n```\n\n______________________________________________________________________\n\n## advanced features\n\nlightning has over [40+ advanced features](https://lightning.ai/docs/pytorch/stable/common/trainer.html#trainer-flags) designed for professional ai research at scale.\n\nhere are some examples:\n\n<div align=\"center\">\n    <img src=\"https://pl-bolts-doc-images.s3.us-east-2.amazonaws.com/features_2.jpg\" max-height=\"600px\">\n  </div>\n\n<details>\n  <summary>train on 1000s of gpus without code changes</summary>\n\n```python\n# 8 gpus\n# no code changes needed\ntrainer = trainer(accelerator=\"gpu\", devices=8)\n\n# 256 gpus\ntrainer = trainer(accelerator=\"gpu\", devices=8, num_nodes=32)\n```\n\n</details>\n\n<details>\n  <summary>train on other accelerators like tpus without code changes</summary>\n\n```python\n# no code changes needed\ntrainer = trainer(accelerator=\"tpu\", devices=8)\n```\n\n</details>\n\n<details>\n  <summary>16-bit precision</summary>\n\n```python\n# no code changes needed\ntrainer = trainer(precision=16)\n```\n\n</details>\n\n<details>\n  <summary>experiment managers</summary>\n\n```python\nfrom lightning import loggers\n\n# tensorboard\ntrainer = trainer(logger=tensorboardlogger(\"logs/\"))\n\n# weights and biases\ntrainer = trainer(logger=loggers.wandblogger())\n\n# comet\ntrainer = trainer(logger=loggers.cometlogger())\n\n# mlflow\ntrainer = trainer(logger=loggers.mlflowlogger())\n\n# neptune\ntrainer = trainer(logger=loggers.neptunelogger())\n\n# ... and dozens more\n```\n\n</details>\n\n<details>\n\n<summary>early stopping</summary>\n\n```python\nes = earlystopping(monitor=\"val_loss\")\ntrainer = trainer(callbacks=[es])\n```\n\n</details>\n\n<details>\n  <summary>checkpointing</summary>\n\n```python\ncheckpointing = modelcheckpoint(monitor=\"val_loss\")\ntrainer = trainer(callbacks=[checkpointing])\n```\n\n</details>\n\n<details>\n  <summary>export to torchscript (jit) (production use)</summary>\n\n```python\n# torchscript\nautoencoder = litautoencoder()\ntorch.jit.save(autoencoder.to_torchscript(), \"model.pt\")\n```\n\n</details>\n\n<details>\n  <summary>export to onnx (production use)</summary>\n\n```python\n# onnx\nwith tempfile.namedtemporaryfile(suffix=\".onnx\", delete=false) as tmpfile:\n    autoencoder = litautoencoder()\n    input_sample = torch.randn((1, 64))\n    autoencoder.to_onnx(tmpfile.name, input_sample, export_params=true)\n    os.path.isfile(tmpfile.name)\n```\n\n</details>\n\n______________________________________________________________________\n\n## advantages over unstructured pytorch\n\n- models become hardware agnostic\n- code is clear to read because engineering code is abstracted away\n- easier to reproduce\n- make fewer mistakes because lightning handles the tricky engineering\n- keeps all the flexibility (lightningmodules are still pytorch modules), but removes a ton of boilerplate\n- lightning has dozens of integrations with popular machine learning tools.\n- [tested rigorously with every new pr](https://github.com/lightning-ai/lightning/tree/master/tests). we test every combination of pytorch and python supported versions, every os, multi gpus and even tpus.\n- minimal running speed overhead (about 300 ms per epoch compared with pure pytorch).\n\n______________________________________________________________________\n\n<div align=\"center\">\n    <a href=\"https://lightning.ai/docs/pytorch/stable/\">read the pytorch lightning docs</a>\n</div>\n\n______________________________________________________________________\n\n# lightning fabric: expert control.\n\nrun on any device at any scale with expert-level control over pytorch training loop and scaling strategy. you can even write your own trainer.\n\nfabric is designed for the most complex models like foundation model scaling, llms, diffusion, transformers, reinforcement learning, active learning. of any size.\n\n<table>\n<tr>\n<th>what to change</th>\n<th>resulting fabric code (copy me!)</th>\n</tr>\n<tr>\n<td>\n<sub>\n\n```diff\n+ import lightning as l\n  import torch; import torchvision as tv\n\n dataset = tv.datasets.cifar10(\"data\", download=true,\n                               train=true,\n                               transform=tv.transforms.totensor())\n\n+ fabric = l.fabric()\n+ fabric.launch()\n\n  model = tv.models.resnet18()\n  optimizer = torch.optim.sgd(model.parameters(), lr=0.001)\n- device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n- model.to(device)\n+ model, optimizer = fabric.setup(model, optimizer)\n\n  dataloader = torch.utils.data.dataloader(dataset, batch_size=8)\n+ dataloader = fabric.setup_dataloaders(dataloader)\n\n  model.train()\n  num_epochs = 10\n  for epoch in range(num_epochs):\n      for batch in dataloader:\n          inputs, labels = batch\n-         inputs, labels = inputs.to(device), labels.to(device)\n          optimizer.zero_grad()\n          outputs = model(inputs)\n          loss = torch.nn.functional.cross_entropy(outputs, labels)\n-         loss.backward()\n+         fabric.backward(loss)\n          optimizer.step()\n          print(loss.data)\n```\n\n</sub>\n<td>\n<sub>\n\n```python\nimport lightning as l\nimport torch; import torchvision as tv\n\ndataset = tv.datasets.cifar10(\"data\", download=true,\n                              train=true,\n                              transform=tv.transforms.totensor())\n\nfabric = l.fabric()\nfabric.launch()\n\nmodel = tv.models.resnet18()\noptimizer = torch.optim.sgd(model.parameters(), lr=0.001)\nmodel, optimizer = fabric.setup(model, optimizer)\n\ndataloader = torch.utils.data.dataloader(dataset, batch_size=8)\ndataloader = fabric.setup_dataloaders(dataloader)\n\nmodel.train()\nnum_epochs = 10\nfor epoch in range(num_epochs):\n    for batch in dataloader:\n        inputs, labels = batch\n        optimizer.zero_grad()\n        outputs = model(inputs)\n        loss = torch.nn.functional.cross_entropy(outputs, labels)\n        fabric.backward(loss)\n        optimizer.step()\n        print(loss.data)\n```\n\n</sub>\n</td>\n</tr>\n</table>\n\n## key features\n\n<details>\n  <summary>easily switch from running on cpu to gpu (apple silicon, cuda, \u2026), tpu, multi-gpu or even multi-node training</summary>\n\n```python\n# use your available hardware\n# no code changes needed\nfabric = fabric()\n\n# run on gpus (cuda or mps)\nfabric = fabric(accelerator=\"gpu\")\n\n# 8 gpus\nfabric = fabric(accelerator=\"gpu\", devices=8)\n\n# 256 gpus, multi-node\nfabric = fabric(accelerator=\"gpu\", devices=8, num_nodes=32)\n\n# run on tpus\nfabric = fabric(accelerator=\"tpu\")\n```\n\n</details>\n\n<details>\n  <summary>use state-of-the-art distributed training strategies (ddp, fsdp, deepspeed) and mixed precision out of the box</summary>\n\n```python\n# use state-of-the-art distributed training techniques\nfabric = fabric(strategy=\"ddp\")\nfabric = fabric(strategy=\"deepspeed\")\nfabric = fabric(strategy=\"fsdp\")\n\n# switch the precision\nfabric = fabric(precision=\"16-mixed\")\nfabric = fabric(precision=\"64\")\n```\n\n</details>\n\n<details>\n  <summary>all the device logic boilerplate is handled for you</summary>\n\n```diff\n  # no more of this!\n- model.to(device)\n- batch.to(device)\n```\n\n</details>\n\n<details>\n  <summary>build your own custom trainer using fabric primitives for training checkpointing, logging, and more</summary>\n\n```python\nimport lightning as l\n\n\nclass mycustomtrainer:\n    def __init__(self, accelerator=\"auto\", strategy=\"auto\", devices=\"auto\", precision=\"32-true\"):\n        self.fabric = l.fabric(accelerator=accelerator, strategy=strategy, devices=devices, precision=precision)\n\n    def fit(self, model, optimizer, dataloader, max_epochs):\n        self.fabric.launch()\n\n        model, optimizer = self.fabric.setup(model, optimizer)\n        dataloader = self.fabric.setup_dataloaders(dataloader)\n        model.train()\n\n        for epoch in range(max_epochs):\n            for batch in dataloader:\n                input, target = batch\n                optimizer.zero_grad()\n                output = model(input)\n                loss = loss_fn(output, target)\n                self.fabric.backward(loss)\n                optimizer.step()\n```\n\nyou can find a more extensive example in our [examples](examples/fabric/build_your_own_trainer)\n\n</details>\n\n______________________________________________________________________\n\n<div align=\"center\">\n    <a href=\"https://lightning.ai/docs/fabric/stable/\">read the lightning fabric docs</a>\n</div>\n\n______________________________________________________________________\n\n# lightning apps: build ai products and ml workflows\n\nlightning apps remove the cloud infrastructure boilerplate so you can focus on solving the research or business problems. lightning apps can run on the lightning cloud, your own cluster or a private cloud.\n\n<div align=\"center\">\n    <img src=\"https://pl-public-data.s3.amazonaws.com/assets_lightning/lightning-apps-teaser.png\" width=\"80%\">\n</div>\n\n## hello lightning app world\n\n```python\n# app.py\nimport lightning as l\n\n\nclass traincomponent(l.lightningwork):\n    def run(self, x):\n        print(f\"train a model on {x}\")\n\n\nclass analyzecomponent(l.lightningwork):\n    def run(self, x):\n        print(f\"analyze model on {x}\")\n\n\nclass workfloworchestrator(l.lightningflow):\n    def __init__(self) -> none:\n        super().__init__()\n        self.train = traincomponent(cloud_compute=l.cloudcompute(\"cpu\"))\n        self.analyze = analyzecomponent(cloud_compute=l.cloudcompute(\"gpu\"))\n\n    def run(self):\n        self.train.run(\"cpu machine 1\")\n        self.analyze.run(\"gpu machine 2\")\n\n\napp = l.lightningapp(workfloworchestrator())\n```\n\nrun on the cloud or locally\n\n```bash\n# run on the cloud\nlightning run app app.py --setup --cloud\n\n# run locally\nlightning run app app.py\n```\n\n______________________________________________________________________\n\n<div align=\"center\">\n    <a href=\"https://lightning.ai/docs/app/stable/\">read the lightning apps docs</a>\n</div>\n\n______________________________________________________________________\n\n## examples\n\n###### self-supervised learning\n\n- [cpc transforms](https://lightning-bolts.readthedocs.io/en/stable/transforms/self_supervised.html#cpc-transforms)\n- [moco v2 transforms](https://lightning-bolts.readthedocs.io/en/stable/transforms/self_supervised.html#moco-v2-transforms)\n- [simclr transforms](https://lightning-bolts.readthedocs.io/en/stable/transforms/self_supervised.html#simclr-transforms)\n\n###### convolutional architectures\n\n- [gpt-2](https://lightning-bolts.readthedocs.io/en/stable/models/convolutional.html#gpt-2)\n- [unet](https://lightning-bolts.readthedocs.io/en/stable/models/convolutional.html#unet)\n\n###### reinforcement learning\n\n- [dqn loss](https://lightning-bolts.readthedocs.io/en/stable/losses.html#dqn-loss)\n- [double dqn loss](https://lightning-bolts.readthedocs.io/en/stable/losses.html#double-dqn-loss)\n- [per dqn loss](https://lightning-bolts.readthedocs.io/en/stable/losses.html#per-dqn-loss)\n\n###### gans\n\n- [basic gan](https://lightning-bolts.readthedocs.io/en/stable/models/gans.html#basic-gan)\n- [dcgan](https://lightning-bolts.readthedocs.io/en/stable/models/gans.html#dcgan)\n\n###### classic ml\n\n- [logistic regression](https://lightning-bolts.readthedocs.io/en/stable/models/classic_ml.html#logistic-regression)\n- [linear regression](https://lightning-bolts.readthedocs.io/en/stable/models/classic_ml.html#linear-regression)\n\n______________________________________________________________________\n\n## continuous integration\n\nlightning is rigorously tested across multiple cpus, gpus and tpus and against major python and pytorch versions.\n\n###### \\*codecov is > 90%+ but build delays may show less\n\n<details>\n  <summary>current build statuses</summary>\n\n<center>\n\n|       system / pytorch ver.        |                                                                                                              1.12                                                                                                               | 1.13                                                                                                                                                                                                                            | 2.0                                                                                                                                                                                                                             |                                                                                                               2.1                                                                                                               |\n| :--------------------------------: | :-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: |:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|\n|        linux py3.9 \\[gpus\\]        | |  |  | [![build status](https://dev.azure.com/lightning-ai/lightning/_apis/build/status%2fpytorch-lightning%20%28gpus%29?branchname=refs%2ftags%2f2.1.3)](https://dev.azure.com/lightning-ai/lightning/_build/latest?definitionid=24&branchname=master) |\n|        linux py3.9 \\[tpus\\]        |                          |                                                                                                                                                                                                                                 |  [![test pytorch - tpu](https://github.com/lightning-ai/lightning/actions/workflows/tpu-tests.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/tpu-tests.yml)     |      |\n|  linux (multiple python versions)  |                 [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                 | [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                                 | [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                                 |                 [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                 |\n|   osx (multiple python versions)   |                 [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                 | [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                                 | [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                                 |                 [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                 |\n| windows (multiple python versions) |                 [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                 | [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                                 | [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                                 |                 [![test pytorch](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml/badge.svg)](https://github.com/lightning-ai/lightning/actions/workflows/ci-tests-pytorch.yml)                 |\n\n</center>\n</details>\n\n______________________________________________________________________\n\n## community\n\nthe lightning community is maintained by\n\n- [10+ core contributors](https://lightning.ai/docs/pytorch/latest/community/governance.html) who are all a mix of professional engineers, research scientists, and ph.d. students from top ai labs.\n- 800+ community contributors.\n\nwant to help us build lightning and reduce boilerplate for thousands of researchers? [learn how to make your first contribution here](https://lightning.ai/docs/pytorch/stable/generated/contributing.html)\n\nlightning is also part of the [pytorch ecosystem](https://pytorch.org/ecosystem/) which requires projects to have solid testing, documentation and support.\n\n### asking for help\n\nif you have any questions please:\n\n1. [read the docs](https://lightning.ai/docs).\n1. [search through existing discussions](https://github.com/lightning-ai/lightning/discussions), or [add a new question](https://github.com/lightning-ai/lightning/discussions/new)\n1. [join our discord](https://discord.com/invite/tfxfetezxv).\n\n\n",
  "docs_url": null,
  "keywords": "deep learning,pytorch,ai",
  "license": "apache-2.0",
  "name": "lightning",
  "package_url": "https://pypi.org/project/lightning/",
  "project_url": "https://pypi.org/project/lightning/",
  "project_urls": {
    "Bug Tracker": "https://github.com/Lightning-AI/lightning/issues",
    "Documentation": "https://lightning.ai/lightning-docs",
    "Download": "https://github.com/Lightning-AI/lightning",
    "Homepage": "https://github.com/Lightning-AI/lightning",
    "Source Code": "https://github.com/Lightning-AI/lightning"
  },
  "release_url": "https://pypi.org/project/lightning/2.1.3/",
  "requires_dist": [
    "PyYAML <8.0,>=5.4",
    "fsspec[http] <2025.0,>=2022.5.0",
    "lightning-utilities <2.0,>=0.8.0",
    "numpy <3.0,>=1.17.2",
    "packaging <25.0,>=20.0",
    "torch <4.0,>=1.12.0",
    "torchmetrics <3.0,>=0.7.0",
    "tqdm <6.0,>=4.57.0",
    "typing-extensions <6.0,>=4.0.0",
    "pytorch-lightning",
    "Jinja2 <4.0 ; extra == 'all'",
    "Pillow >=9.5.0 ; extra == 'all'",
    "PyYAML <7.0 ; extra == 'all'",
    "aiohttp <4.0,>=3.8.0 ; extra == 'all'",
    "arrow <2.0,>=1.2.0 ; extra == 'all'",
    "backoff <3.0,>=2.2.1 ; extra == 'all'",
    "beautifulsoup4 <5.0,>=4.8.0 ; extra == 'all'",
    "bitsandbytes <1.0 ; extra == 'all'",
    "click <9.0 ; extra == 'all'",
    "croniter <1.5.0,>=1.3.0 ; extra == 'all'",
    "dateutils <1.0 ; extra == 'all'",
    "deepdiff <7.0,>=5.7.0 ; extra == 'all'",
    "docker <7.0,>=5.0.0 ; extra == 'all'",
    "fastapi <1.0,>=0.92.0 ; extra == 'all'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'all'",
    "gym[classic_control] <1.0,>=0.17.0 ; extra == 'all'",
    "hydra-core <2.0,>=1.0.5 ; extra == 'all'",
    "inquirer <4.0,>=2.10.0 ; extra == 'all'",
    "ipython[all] <9.0 ; extra == 'all'",
    "jsonargparse[signatures] <5.0,>=4.26.1 ; extra == 'all'",
    "lightning-cloud ; extra == 'all'",
    "lightning-cloud ==0.5.57 ; extra == 'all'",
    "lightning-fabric >=1.9.0 ; extra == 'all'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'all'",
    "lightning-api-access >=0.0.3 ; extra == 'all'",
    "matplotlib <4.0,>3.1 ; extra == 'all'",
    "omegaconf <3.0,>=2.0.5 ; extra == 'all'",
    "packaging ; extra == 'all'",
    "psutil <6.0 ; extra == 'all'",
    "pydantic >=1.7.4 ; extra == 'all'",
    "python-multipart <1.0,>=0.0.5 ; extra == 'all'",
    "pytorch-lightning >=1.9.0 ; extra == 'all'",
    "redis <6.0,>=4.0.1 ; extra == 'all'",
    "requests <3.0 ; extra == 'all'",
    "rich <14.0,>=12.3.0 ; extra == 'all'",
    "s3fs <2024.0,>=2022.5.0 ; extra == 'all'",
    "starlette ; extra == 'all'",
    "tensorboardX <3.0,>=2.2 ; extra == 'all'",
    "torch <3.0,>0.14.0 ; extra == 'all'",
    "torchmetrics <2.0,>=0.10.0 ; extra == 'all'",
    "torchvision <1.0,>=0.13.0 ; extra == 'all'",
    "torchvision <1.0,>=0.15.2 ; extra == 'all'",
    "traitlets <6.0,>=5.3.0 ; extra == 'all'",
    "typing-extensions <5.0,>=4.0.0 ; extra == 'all'",
    "urllib3 <3.0 ; extra == 'all'",
    "uvicorn <1.0 ; extra == 'all'",
    "websocket-client <2.0 ; extra == 'all'",
    "websockets <12.0 ; extra == 'all'",
    "deepspeed <=0.9.3,>=0.8.2 ; (platform_system != \"Windows\") and extra == 'all'",
    "Jinja2 <4.0 ; extra == 'app'",
    "PyYAML <7.0 ; extra == 'app'",
    "arrow <2.0,>=1.2.0 ; extra == 'app'",
    "backoff <3.0,>=2.2.1 ; extra == 'app'",
    "beautifulsoup4 <5.0,>=4.8.0 ; extra == 'app'",
    "click <9.0 ; extra == 'app'",
    "croniter <1.5.0,>=1.3.0 ; extra == 'app'",
    "dateutils <1.0 ; extra == 'app'",
    "deepdiff <7.0,>=5.7.0 ; extra == 'app'",
    "fastapi <1.0,>=0.92.0 ; extra == 'app'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'app'",
    "inquirer <4.0,>=2.10.0 ; extra == 'app'",
    "lightning-cloud ==0.5.57 ; extra == 'app'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'app'",
    "packaging ; extra == 'app'",
    "psutil <6.0 ; extra == 'app'",
    "pydantic >=1.7.4 ; extra == 'app'",
    "python-multipart <1.0,>=0.0.5 ; extra == 'app'",
    "requests <3.0 ; extra == 'app'",
    "rich <14.0,>=12.3.0 ; extra == 'app'",
    "starlette ; extra == 'app'",
    "traitlets <6.0,>=5.3.0 ; extra == 'app'",
    "typing-extensions <5.0,>=4.0.0 ; extra == 'app'",
    "urllib3 <3.0 ; extra == 'app'",
    "uvicorn <1.0 ; extra == 'app'",
    "websocket-client <2.0 ; extra == 'app'",
    "websockets <12.0 ; extra == 'app'",
    "Jinja2 <4.0 ; extra == 'app-all'",
    "PyYAML <7.0 ; extra == 'app-all'",
    "aiohttp <4.0,>=3.8.0 ; extra == 'app-all'",
    "arrow <2.0,>=1.2.0 ; extra == 'app-all'",
    "backoff <3.0,>=2.2.1 ; extra == 'app-all'",
    "beautifulsoup4 <5.0,>=4.8.0 ; extra == 'app-all'",
    "click <9.0 ; extra == 'app-all'",
    "croniter <1.5.0,>=1.3.0 ; extra == 'app-all'",
    "dateutils <1.0 ; extra == 'app-all'",
    "deepdiff <7.0,>=5.7.0 ; extra == 'app-all'",
    "docker <7.0,>=5.0.0 ; extra == 'app-all'",
    "fastapi <1.0,>=0.92.0 ; extra == 'app-all'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'app-all'",
    "inquirer <4.0,>=2.10.0 ; extra == 'app-all'",
    "lightning-cloud ==0.5.57 ; extra == 'app-all'",
    "lightning-fabric >=1.9.0 ; extra == 'app-all'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'app-all'",
    "lightning-api-access >=0.0.3 ; extra == 'app-all'",
    "packaging ; extra == 'app-all'",
    "psutil <6.0 ; extra == 'app-all'",
    "pydantic >=1.7.4 ; extra == 'app-all'",
    "python-multipart <1.0,>=0.0.5 ; extra == 'app-all'",
    "pytorch-lightning >=1.9.0 ; extra == 'app-all'",
    "redis <6.0,>=4.0.1 ; extra == 'app-all'",
    "requests <3.0 ; extra == 'app-all'",
    "rich <14.0,>=12.3.0 ; extra == 'app-all'",
    "s3fs <2024.0,>=2022.5.0 ; extra == 'app-all'",
    "starlette ; extra == 'app-all'",
    "traitlets <6.0,>=5.3.0 ; extra == 'app-all'",
    "typing-extensions <5.0,>=4.0.0 ; extra == 'app-all'",
    "urllib3 <3.0 ; extra == 'app-all'",
    "uvicorn <1.0 ; extra == 'app-all'",
    "websocket-client <2.0 ; extra == 'app-all'",
    "websockets <12.0 ; extra == 'app-all'",
    "docker <7.0,>=5.0.0 ; extra == 'app-cloud'",
    "redis <6.0,>=4.0.1 ; extra == 'app-cloud'",
    "s3fs <2024.0,>=2022.5.0 ; extra == 'app-cloud'",
    "aiohttp <4.0,>=3.8.0 ; extra == 'app-components'",
    "lightning-fabric >=1.9.0 ; extra == 'app-components'",
    "lightning-api-access >=0.0.3 ; extra == 'app-components'",
    "pytorch-lightning >=1.9.0 ; extra == 'app-components'",
    "Jinja2 <4.0 ; extra == 'app-dev'",
    "PyYAML <7.0 ; extra == 'app-dev'",
    "aiohttp <4.0,>=3.8.0 ; extra == 'app-dev'",
    "arrow <2.0,>=1.2.0 ; extra == 'app-dev'",
    "backoff <3.0,>=2.2.1 ; extra == 'app-dev'",
    "beautifulsoup4 <5.0,>=4.8.0 ; extra == 'app-dev'",
    "click <9.0 ; extra == 'app-dev'",
    "coverage ==7.3.1 ; extra == 'app-dev'",
    "croniter <1.5.0,>=1.3.0 ; extra == 'app-dev'",
    "dateutils <1.0 ; extra == 'app-dev'",
    "deepdiff <7.0,>=5.7.0 ; extra == 'app-dev'",
    "docker <7.0,>=5.0.0 ; extra == 'app-dev'",
    "fastapi <1.0,>=0.92.0 ; extra == 'app-dev'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'app-dev'",
    "httpx ==0.25.0 ; extra == 'app-dev'",
    "inquirer <4.0,>=2.10.0 ; extra == 'app-dev'",
    "lightning-cloud ==0.5.57 ; extra == 'app-dev'",
    "lightning-fabric >=1.9.0 ; extra == 'app-dev'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'app-dev'",
    "lightning-api-access >=0.0.3 ; extra == 'app-dev'",
    "packaging ; extra == 'app-dev'",
    "pandas ; extra == 'app-dev'",
    "playwright ==1.38.0 ; extra == 'app-dev'",
    "psutil <6.0 ; extra == 'app-dev'",
    "pydantic >=1.7.4 ; extra == 'app-dev'",
    "pympler ; extra == 'app-dev'",
    "pytest-asyncio ==0.21.1 ; extra == 'app-dev'",
    "pytest-cov ==4.1.0 ; extra == 'app-dev'",
    "pytest-doctestplus ==1.0.0 ; extra == 'app-dev'",
    "pytest-rerunfailures ==12.0 ; extra == 'app-dev'",
    "pytest-timeout ==2.1.0 ; extra == 'app-dev'",
    "pytest-xdist ==3.3.1 ; extra == 'app-dev'",
    "pytest ==7.4.0 ; extra == 'app-dev'",
    "python-multipart <1.0,>=0.0.5 ; extra == 'app-dev'",
    "pytorch-lightning >=1.9.0 ; extra == 'app-dev'",
    "redis <6.0,>=4.0.1 ; extra == 'app-dev'",
    "requests-mock ==1.11.0 ; extra == 'app-dev'",
    "requests <3.0 ; extra == 'app-dev'",
    "rich <14.0,>=12.3.0 ; extra == 'app-dev'",
    "s3fs <2024.0,>=2022.5.0 ; extra == 'app-dev'",
    "setuptools <69.0 ; extra == 'app-dev'",
    "starlette ; extra == 'app-dev'",
    "traitlets <6.0,>=5.3.0 ; extra == 'app-dev'",
    "trio <0.22.0 ; extra == 'app-dev'",
    "typing-extensions <5.0,>=4.0.0 ; extra == 'app-dev'",
    "urllib3 <3.0 ; extra == 'app-dev'",
    "uvicorn <1.0 ; extra == 'app-dev'",
    "websocket-client <2.0 ; extra == 'app-dev'",
    "websockets <12.0 ; extra == 'app-dev'",
    "Jinja2 <4.0 ; extra == 'app-extra'",
    "PyYAML <7.0 ; extra == 'app-extra'",
    "aiohttp <4.0,>=3.8.0 ; extra == 'app-extra'",
    "arrow <2.0,>=1.2.0 ; extra == 'app-extra'",
    "backoff <3.0,>=2.2.1 ; extra == 'app-extra'",
    "beautifulsoup4 <5.0,>=4.8.0 ; extra == 'app-extra'",
    "click <9.0 ; extra == 'app-extra'",
    "croniter <1.5.0,>=1.3.0 ; extra == 'app-extra'",
    "dateutils <1.0 ; extra == 'app-extra'",
    "deepdiff <7.0,>=5.7.0 ; extra == 'app-extra'",
    "docker <7.0,>=5.0.0 ; extra == 'app-extra'",
    "fastapi <1.0,>=0.92.0 ; extra == 'app-extra'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'app-extra'",
    "inquirer <4.0,>=2.10.0 ; extra == 'app-extra'",
    "lightning-cloud ==0.5.57 ; extra == 'app-extra'",
    "lightning-fabric >=1.9.0 ; extra == 'app-extra'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'app-extra'",
    "lightning-api-access >=0.0.3 ; extra == 'app-extra'",
    "packaging ; extra == 'app-extra'",
    "psutil <6.0 ; extra == 'app-extra'",
    "pydantic >=1.7.4 ; extra == 'app-extra'",
    "python-multipart <1.0,>=0.0.5 ; extra == 'app-extra'",
    "pytorch-lightning >=1.9.0 ; extra == 'app-extra'",
    "redis <6.0,>=4.0.1 ; extra == 'app-extra'",
    "requests <3.0 ; extra == 'app-extra'",
    "rich <14.0,>=12.3.0 ; extra == 'app-extra'",
    "s3fs <2024.0,>=2022.5.0 ; extra == 'app-extra'",
    "starlette ; extra == 'app-extra'",
    "traitlets <6.0,>=5.3.0 ; extra == 'app-extra'",
    "typing-extensions <5.0,>=4.0.0 ; extra == 'app-extra'",
    "urllib3 <3.0 ; extra == 'app-extra'",
    "uvicorn <1.0 ; extra == 'app-extra'",
    "websocket-client <2.0 ; extra == 'app-extra'",
    "websockets <12.0 ; extra == 'app-extra'",
    "coverage ==7.3.1 ; extra == 'app-test'",
    "httpx ==0.25.0 ; extra == 'app-test'",
    "pandas ; extra == 'app-test'",
    "playwright ==1.38.0 ; extra == 'app-test'",
    "psutil <6.0 ; extra == 'app-test'",
    "pympler ; extra == 'app-test'",
    "pytest-asyncio ==0.21.1 ; extra == 'app-test'",
    "pytest-cov ==4.1.0 ; extra == 'app-test'",
    "pytest-doctestplus ==1.0.0 ; extra == 'app-test'",
    "pytest-rerunfailures ==12.0 ; extra == 'app-test'",
    "pytest-timeout ==2.1.0 ; extra == 'app-test'",
    "pytest-xdist ==3.3.1 ; extra == 'app-test'",
    "pytest ==7.4.0 ; extra == 'app-test'",
    "requests-mock ==1.11.0 ; extra == 'app-test'",
    "setuptools <69.0 ; extra == 'app-test'",
    "trio <0.22.0 ; extra == 'app-test'",
    "docker <7.0,>=5.0.0 ; extra == 'cloud'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'cloud'",
    "redis <6.0,>=4.0.1 ; extra == 'cloud'",
    "s3fs <2024.0,>=2022.5.0 ; extra == 'cloud'",
    "aiohttp <4.0,>=3.8.0 ; extra == 'components'",
    "lightning-fabric >=1.9.0 ; extra == 'components'",
    "lightning-api-access >=0.0.3 ; extra == 'components'",
    "pytorch-lightning >=1.9.0 ; extra == 'components'",
    "lightning-cloud ; extra == 'data'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'data'",
    "torch <3.0,>0.14.0 ; extra == 'data'",
    "Pillow >=9.5.0 ; extra == 'data-all'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'data-all'",
    "lightning-cloud ; extra == 'data-all'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'data-all'",
    "s3fs <2024.0,>=2022.5.0 ; extra == 'data-all'",
    "torch <3.0,>0.14.0 ; extra == 'data-all'",
    "torchvision <1.0,>=0.15.2 ; extra == 'data-all'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'data-cloud'",
    "s3fs <2024.0,>=2022.5.0 ; extra == 'data-cloud'",
    "Pillow >=9.5.0 ; extra == 'data-dev'",
    "coverage ==7.3.1 ; extra == 'data-dev'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'data-dev'",
    "lightning-cloud ; extra == 'data-dev'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'data-dev'",
    "pytest-cov ==4.1.0 ; extra == 'data-dev'",
    "pytest-random-order ==1.1.0 ; extra == 'data-dev'",
    "pytest-rerunfailures ==12.0 ; extra == 'data-dev'",
    "pytest-timeout ==2.1.0 ; extra == 'data-dev'",
    "pytest ==7.4.0 ; extra == 'data-dev'",
    "s3fs <2024.0,>=2022.5.0 ; extra == 'data-dev'",
    "torch <3.0,>0.14.0 ; extra == 'data-dev'",
    "torchvision <1.0,>=0.15.2 ; extra == 'data-dev'",
    "Pillow >=9.5.0 ; extra == 'data-examples'",
    "torchvision <1.0,>=0.15.2 ; extra == 'data-examples'",
    "coverage ==7.3.1 ; extra == 'data-test'",
    "pytest-cov ==4.1.0 ; extra == 'data-test'",
    "pytest-random-order ==1.1.0 ; extra == 'data-test'",
    "pytest-rerunfailures ==12.0 ; extra == 'data-test'",
    "pytest-timeout ==2.1.0 ; extra == 'data-test'",
    "pytest ==7.4.0 ; extra == 'data-test'",
    "Jinja2 <4.0 ; extra == 'dev'",
    "Pillow >=9.5.0 ; extra == 'dev'",
    "PyYAML <7.0 ; extra == 'dev'",
    "aiohttp <4.0,>=3.8.0 ; extra == 'dev'",
    "arrow <2.0,>=1.2.0 ; extra == 'dev'",
    "backoff <3.0,>=2.2.1 ; extra == 'dev'",
    "beautifulsoup4 <5.0,>=4.8.0 ; extra == 'dev'",
    "bitsandbytes <1.0 ; extra == 'dev'",
    "click <9.0 ; extra == 'dev'",
    "click ==8.1.7 ; extra == 'dev'",
    "cloudpickle <3.0,>=1.3 ; extra == 'dev'",
    "coverage ==7.3.1 ; extra == 'dev'",
    "croniter <1.5.0,>=1.3.0 ; extra == 'dev'",
    "dateutils <1.0 ; extra == 'dev'",
    "deepdiff <7.0,>=5.7.0 ; extra == 'dev'",
    "docker <7.0,>=5.0.0 ; extra == 'dev'",
    "fastapi ; extra == 'dev'",
    "fastapi <1.0,>=0.92.0 ; extra == 'dev'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'dev'",
    "gym[classic_control] <1.0,>=0.17.0 ; extra == 'dev'",
    "httpx ==0.25.0 ; extra == 'dev'",
    "hydra-core <2.0,>=1.0.5 ; extra == 'dev'",
    "inquirer <4.0,>=2.10.0 ; extra == 'dev'",
    "ipython[all] <9.0 ; extra == 'dev'",
    "jsonargparse[signatures] <5.0,>=4.26.1 ; extra == 'dev'",
    "lightning-cloud ; extra == 'dev'",
    "lightning-cloud ==0.5.57 ; extra == 'dev'",
    "lightning-fabric >=1.9.0 ; extra == 'dev'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'dev'",
    "lightning-api-access >=0.0.3 ; extra == 'dev'",
    "matplotlib <4.0,>3.1 ; extra == 'dev'",
    "omegaconf <3.0,>=2.0.5 ; extra == 'dev'",
    "onnx <2.0,>=0.14.0 ; extra == 'dev'",
    "onnxruntime <2.0,>=0.15.0 ; extra == 'dev'",
    "packaging ; extra == 'dev'",
    "pandas ; extra == 'dev'",
    "pandas <3.0,>1.0 ; extra == 'dev'",
    "playwright ==1.38.0 ; extra == 'dev'",
    "psutil <6.0 ; extra == 'dev'",
    "pydantic >=1.7.4 ; extra == 'dev'",
    "pympler ; extra == 'dev'",
    "pytest-asyncio ==0.21.1 ; extra == 'dev'",
    "pytest-cov ==4.1.0 ; extra == 'dev'",
    "pytest-doctestplus ==1.0.0 ; extra == 'dev'",
    "pytest-random-order ==1.1.0 ; extra == 'dev'",
    "pytest-rerunfailures ==12.0 ; extra == 'dev'",
    "pytest-timeout ==2.1.0 ; extra == 'dev'",
    "pytest-xdist ==3.3.1 ; extra == 'dev'",
    "pytest ==7.4.0 ; extra == 'dev'",
    "python-multipart <1.0,>=0.0.5 ; extra == 'dev'",
    "pytorch-lightning >=1.9.0 ; extra == 'dev'",
    "redis <6.0,>=4.0.1 ; extra == 'dev'",
    "requests-mock ==1.11.0 ; extra == 'dev'",
    "requests <3.0 ; extra == 'dev'",
    "rich <14.0,>=12.3.0 ; extra == 'dev'",
    "s3fs <2024.0,>=2022.5.0 ; extra == 'dev'",
    "scikit-learn <2.0,>0.22.1 ; extra == 'dev'",
    "setuptools <69.0 ; extra == 'dev'",
    "starlette ; extra == 'dev'",
    "tensorboard <3.0,>=2.9.1 ; extra == 'dev'",
    "tensorboardX <3.0,>=2.2 ; extra == 'dev'",
    "torch <3.0,>0.14.0 ; extra == 'dev'",
    "torchmetrics <2.0,>=0.10.0 ; extra == 'dev'",
    "torchmetrics <2.0,>=0.7.0 ; extra == 'dev'",
    "torchvision <1.0,>=0.13.0 ; extra == 'dev'",
    "torchvision <1.0,>=0.15.2 ; extra == 'dev'",
    "traitlets <6.0,>=5.3.0 ; extra == 'dev'",
    "trio <0.22.0 ; extra == 'dev'",
    "typing-extensions <5.0,>=4.0.0 ; extra == 'dev'",
    "urllib3 <3.0 ; extra == 'dev'",
    "uvicorn ; extra == 'dev'",
    "uvicorn <1.0 ; extra == 'dev'",
    "websocket-client <2.0 ; extra == 'dev'",
    "websockets <12.0 ; extra == 'dev'",
    "deepspeed <=0.9.3,>=0.8.2 ; (platform_system != \"Windows\") and extra == 'dev'",
    "Pillow >=9.5.0 ; extra == 'examples'",
    "gym[classic_control] <1.0,>=0.17.0 ; extra == 'examples'",
    "ipython[all] <9.0 ; extra == 'examples'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'examples'",
    "torchmetrics <2.0,>=0.10.0 ; extra == 'examples'",
    "torchvision <1.0,>=0.13.0 ; extra == 'examples'",
    "torchvision <1.0,>=0.15.2 ; extra == 'examples'",
    "Jinja2 <4.0 ; extra == 'extra'",
    "PyYAML <7.0 ; extra == 'extra'",
    "aiohttp <4.0,>=3.8.0 ; extra == 'extra'",
    "arrow <2.0,>=1.2.0 ; extra == 'extra'",
    "backoff <3.0,>=2.2.1 ; extra == 'extra'",
    "beautifulsoup4 <5.0,>=4.8.0 ; extra == 'extra'",
    "bitsandbytes <1.0 ; extra == 'extra'",
    "click <9.0 ; extra == 'extra'",
    "croniter <1.5.0,>=1.3.0 ; extra == 'extra'",
    "dateutils <1.0 ; extra == 'extra'",
    "deepdiff <7.0,>=5.7.0 ; extra == 'extra'",
    "docker <7.0,>=5.0.0 ; extra == 'extra'",
    "fastapi <1.0,>=0.92.0 ; extra == 'extra'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'extra'",
    "hydra-core <2.0,>=1.0.5 ; extra == 'extra'",
    "inquirer <4.0,>=2.10.0 ; extra == 'extra'",
    "jsonargparse[signatures] <5.0,>=4.26.1 ; extra == 'extra'",
    "lightning-cloud ==0.5.57 ; extra == 'extra'",
    "lightning-fabric >=1.9.0 ; extra == 'extra'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'extra'",
    "lightning-api-access >=0.0.3 ; extra == 'extra'",
    "matplotlib <4.0,>3.1 ; extra == 'extra'",
    "omegaconf <3.0,>=2.0.5 ; extra == 'extra'",
    "packaging ; extra == 'extra'",
    "psutil <6.0 ; extra == 'extra'",
    "pydantic >=1.7.4 ; extra == 'extra'",
    "python-multipart <1.0,>=0.0.5 ; extra == 'extra'",
    "pytorch-lightning >=1.9.0 ; extra == 'extra'",
    "redis <6.0,>=4.0.1 ; extra == 'extra'",
    "requests <3.0 ; extra == 'extra'",
    "rich <14.0,>=12.3.0 ; extra == 'extra'",
    "s3fs <2024.0,>=2022.5.0 ; extra == 'extra'",
    "starlette ; extra == 'extra'",
    "tensorboardX <3.0,>=2.2 ; extra == 'extra'",
    "traitlets <6.0,>=5.3.0 ; extra == 'extra'",
    "typing-extensions <5.0,>=4.0.0 ; extra == 'extra'",
    "urllib3 <3.0 ; extra == 'extra'",
    "uvicorn <1.0 ; extra == 'extra'",
    "websocket-client <2.0 ; extra == 'extra'",
    "websockets <12.0 ; extra == 'extra'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'fabric-all'",
    "torchmetrics <2.0,>=0.10.0 ; extra == 'fabric-all'",
    "torchvision <1.0,>=0.13.0 ; extra == 'fabric-all'",
    "deepspeed <=0.9.3,>=0.8.2 ; (platform_system != \"Windows\") and extra == 'fabric-all'",
    "click ==8.1.7 ; extra == 'fabric-dev'",
    "coverage ==7.3.1 ; extra == 'fabric-dev'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'fabric-dev'",
    "pytest-cov ==4.1.0 ; extra == 'fabric-dev'",
    "pytest-random-order ==1.1.0 ; extra == 'fabric-dev'",
    "pytest-rerunfailures ==12.0 ; extra == 'fabric-dev'",
    "pytest-timeout ==2.1.0 ; extra == 'fabric-dev'",
    "pytest ==7.4.0 ; extra == 'fabric-dev'",
    "tensorboardX <3.0,>=2.2 ; extra == 'fabric-dev'",
    "torchmetrics <2.0,>=0.10.0 ; extra == 'fabric-dev'",
    "torchmetrics <2.0,>=0.7.0 ; extra == 'fabric-dev'",
    "torchvision <1.0,>=0.13.0 ; extra == 'fabric-dev'",
    "deepspeed <=0.9.3,>=0.8.2 ; (platform_system != \"Windows\") and extra == 'fabric-dev'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'fabric-examples'",
    "torchmetrics <2.0,>=0.10.0 ; extra == 'fabric-examples'",
    "torchvision <1.0,>=0.13.0 ; extra == 'fabric-examples'",
    "deepspeed <=0.9.3,>=0.8.2 ; (platform_system != \"Windows\") and extra == 'fabric-strategies'",
    "click ==8.1.7 ; extra == 'fabric-test'",
    "coverage ==7.3.1 ; extra == 'fabric-test'",
    "pytest-cov ==4.1.0 ; extra == 'fabric-test'",
    "pytest-random-order ==1.1.0 ; extra == 'fabric-test'",
    "pytest-rerunfailures ==12.0 ; extra == 'fabric-test'",
    "pytest-timeout ==2.1.0 ; extra == 'fabric-test'",
    "pytest ==7.4.0 ; extra == 'fabric-test'",
    "tensorboardX <3.0,>=2.2 ; extra == 'fabric-test'",
    "torchmetrics <2.0,>=0.7.0 ; extra == 'fabric-test'",
    "bitsandbytes <1.0 ; extra == 'pytorch-all'",
    "gym[classic_control] <1.0,>=0.17.0 ; extra == 'pytorch-all'",
    "hydra-core <2.0,>=1.0.5 ; extra == 'pytorch-all'",
    "ipython[all] <9.0 ; extra == 'pytorch-all'",
    "jsonargparse[signatures] <5.0,>=4.26.1 ; extra == 'pytorch-all'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'pytorch-all'",
    "matplotlib <4.0,>3.1 ; extra == 'pytorch-all'",
    "omegaconf <3.0,>=2.0.5 ; extra == 'pytorch-all'",
    "rich <14.0,>=12.3.0 ; extra == 'pytorch-all'",
    "tensorboardX <3.0,>=2.2 ; extra == 'pytorch-all'",
    "torchmetrics <2.0,>=0.10.0 ; extra == 'pytorch-all'",
    "torchvision <1.0,>=0.13.0 ; extra == 'pytorch-all'",
    "deepspeed <=0.9.3,>=0.8.2 ; (platform_system != \"Windows\") and extra == 'pytorch-all'",
    "bitsandbytes <1.0 ; extra == 'pytorch-dev'",
    "cloudpickle <3.0,>=1.3 ; extra == 'pytorch-dev'",
    "coverage ==7.3.1 ; extra == 'pytorch-dev'",
    "fastapi ; extra == 'pytorch-dev'",
    "gym[classic_control] <1.0,>=0.17.0 ; extra == 'pytorch-dev'",
    "hydra-core <2.0,>=1.0.5 ; extra == 'pytorch-dev'",
    "ipython[all] <9.0 ; extra == 'pytorch-dev'",
    "jsonargparse[signatures] <5.0,>=4.26.1 ; extra == 'pytorch-dev'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'pytorch-dev'",
    "matplotlib <4.0,>3.1 ; extra == 'pytorch-dev'",
    "omegaconf <3.0,>=2.0.5 ; extra == 'pytorch-dev'",
    "onnx <2.0,>=0.14.0 ; extra == 'pytorch-dev'",
    "onnxruntime <2.0,>=0.15.0 ; extra == 'pytorch-dev'",
    "pandas <3.0,>1.0 ; extra == 'pytorch-dev'",
    "psutil <6.0 ; extra == 'pytorch-dev'",
    "pytest-cov ==4.1.0 ; extra == 'pytorch-dev'",
    "pytest-random-order ==1.1.0 ; extra == 'pytorch-dev'",
    "pytest-rerunfailures ==12.0 ; extra == 'pytorch-dev'",
    "pytest-timeout ==2.1.0 ; extra == 'pytorch-dev'",
    "pytest ==7.4.0 ; extra == 'pytorch-dev'",
    "rich <14.0,>=12.3.0 ; extra == 'pytorch-dev'",
    "scikit-learn <2.0,>0.22.1 ; extra == 'pytorch-dev'",
    "tensorboard <3.0,>=2.9.1 ; extra == 'pytorch-dev'",
    "tensorboardX <3.0,>=2.2 ; extra == 'pytorch-dev'",
    "torchmetrics <2.0,>=0.10.0 ; extra == 'pytorch-dev'",
    "torchvision <1.0,>=0.13.0 ; extra == 'pytorch-dev'",
    "uvicorn ; extra == 'pytorch-dev'",
    "deepspeed <=0.9.3,>=0.8.2 ; (platform_system != \"Windows\") and extra == 'pytorch-dev'",
    "gym[classic_control] <1.0,>=0.17.0 ; extra == 'pytorch-examples'",
    "ipython[all] <9.0 ; extra == 'pytorch-examples'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'pytorch-examples'",
    "torchmetrics <2.0,>=0.10.0 ; extra == 'pytorch-examples'",
    "torchvision <1.0,>=0.13.0 ; extra == 'pytorch-examples'",
    "bitsandbytes <1.0 ; extra == 'pytorch-extra'",
    "hydra-core <2.0,>=1.0.5 ; extra == 'pytorch-extra'",
    "jsonargparse[signatures] <5.0,>=4.26.1 ; extra == 'pytorch-extra'",
    "matplotlib <4.0,>3.1 ; extra == 'pytorch-extra'",
    "omegaconf <3.0,>=2.0.5 ; extra == 'pytorch-extra'",
    "rich <14.0,>=12.3.0 ; extra == 'pytorch-extra'",
    "tensorboardX <3.0,>=2.2 ; extra == 'pytorch-extra'",
    "deepspeed <=0.9.3,>=0.8.2 ; (platform_system != \"Windows\") and extra == 'pytorch-strategies'",
    "cloudpickle <3.0,>=1.3 ; extra == 'pytorch-test'",
    "coverage ==7.3.1 ; extra == 'pytorch-test'",
    "fastapi ; extra == 'pytorch-test'",
    "onnx <2.0,>=0.14.0 ; extra == 'pytorch-test'",
    "onnxruntime <2.0,>=0.15.0 ; extra == 'pytorch-test'",
    "pandas <3.0,>1.0 ; extra == 'pytorch-test'",
    "psutil <6.0 ; extra == 'pytorch-test'",
    "pytest-cov ==4.1.0 ; extra == 'pytorch-test'",
    "pytest-random-order ==1.1.0 ; extra == 'pytorch-test'",
    "pytest-rerunfailures ==12.0 ; extra == 'pytorch-test'",
    "pytest-timeout ==2.1.0 ; extra == 'pytorch-test'",
    "pytest ==7.4.0 ; extra == 'pytorch-test'",
    "scikit-learn <2.0,>0.22.1 ; extra == 'pytorch-test'",
    "tensorboard <3.0,>=2.9.1 ; extra == 'pytorch-test'",
    "uvicorn ; extra == 'pytorch-test'",
    "Jinja2 <4.0 ; extra == 'store'",
    "PyYAML <7.0 ; extra == 'store'",
    "arrow <2.0,>=1.2.0 ; extra == 'store'",
    "backoff <3.0,>=2.2.1 ; extra == 'store'",
    "beautifulsoup4 <5.0,>=4.8.0 ; extra == 'store'",
    "click <9.0 ; extra == 'store'",
    "croniter <1.5.0,>=1.3.0 ; extra == 'store'",
    "dateutils <1.0 ; extra == 'store'",
    "deepdiff <7.0,>=5.7.0 ; extra == 'store'",
    "fastapi <1.0,>=0.92.0 ; extra == 'store'",
    "fsspec[http] <2024.0,>=2022.5.0 ; extra == 'store'",
    "inquirer <4.0,>=2.10.0 ; extra == 'store'",
    "lightning-cloud ==0.5.57 ; extra == 'store'",
    "lightning-utilities <1.0,>=0.8.0 ; extra == 'store'",
    "packaging ; extra == 'store'",
    "psutil <6.0 ; extra == 'store'",
    "pydantic >=1.7.4 ; extra == 'store'",
    "python-multipart <1.0,>=0.0.5 ; extra == 'store'",
    "requests <3.0 ; extra == 'store'",
    "rich <14.0,>=12.3.0 ; extra == 'store'",
    "starlette ; extra == 'store'",
    "traitlets <6.0,>=5.3.0 ; extra == 'store'",
    "typing-extensions <5.0,>=4.0.0 ; extra == 'store'",
    "urllib3 <3.0 ; extra == 'store'",
    "uvicorn <1.0 ; extra == 'store'",
    "websocket-client <2.0 ; extra == 'store'",
    "websockets <12.0 ; extra == 'store'",
    "coverage ==7.3.1 ; extra == 'store-test'",
    "pytest-cov ==4.1.0 ; extra == 'store-test'",
    "pytest-random-order ==1.1.0 ; extra == 'store-test'",
    "pytest-rerunfailures ==12.0 ; extra == 'store-test'",
    "pytest-timeout ==2.1.0 ; extra == 'store-test'",
    "pytest ==7.4.0 ; extra == 'store-test'",
    "deepspeed <=0.9.3,>=0.8.2 ; (platform_system != \"Windows\") and extra == 'strategies'",
    "click ==8.1.7 ; extra == 'test'",
    "cloudpickle <3.0,>=1.3 ; extra == 'test'",
    "coverage ==7.3.1 ; extra == 'test'",
    "fastapi ; extra == 'test'",
    "httpx ==0.25.0 ; extra == 'test'",
    "onnx <2.0,>=0.14.0 ; extra == 'test'",
    "onnxruntime <2.0,>=0.15.0 ; extra == 'test'",
    "pandas ; extra == 'test'",
    "pandas <3.0,>1.0 ; extra == 'test'",
    "playwright ==1.38.0 ; extra == 'test'",
    "psutil <6.0 ; extra == 'test'",
    "pympler ; extra == 'test'",
    "pytest-asyncio ==0.21.1 ; extra == 'test'",
    "pytest-cov ==4.1.0 ; extra == 'test'",
    "pytest-doctestplus ==1.0.0 ; extra == 'test'",
    "pytest-random-order ==1.1.0 ; extra == 'test'",
    "pytest-rerunfailures ==12.0 ; extra == 'test'",
    "pytest-timeout ==2.1.0 ; extra == 'test'",
    "pytest-xdist ==3.3.1 ; extra == 'test'",
    "pytest ==7.4.0 ; extra == 'test'",
    "requests-mock ==1.11.0 ; extra == 'test'",
    "scikit-learn <2.0,>0.22.1 ; extra == 'test'",
    "setuptools <69.0 ; extra == 'test'",
    "tensorboard <3.0,>=2.9.1 ; extra == 'test'",
    "tensorboardX <3.0,>=2.2 ; extra == 'test'",
    "torchmetrics <2.0,>=0.7.0 ; extra == 'test'",
    "trio <0.22.0 ; extra == 'test'",
    "uvicorn ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "the deep learning framework to train, deploy, and ship ai products lightning fast.",
  "version": "2.1.3",
  "releases": [],
  "developers": [
    "lightning_ai_et_al",
    "pytorch@lightning.ai"
  ],
  "kwds": "lightningflow lightningcolor lightningapp lightningwork lightning",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_lightning",
  "homepage": "https://github.com/lightning-ai/lightning",
  "release_count": 53,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_arrow",
    "pypi_backoff",
    "pypi_beautifulsoup4",
    "pypi_bitsandbytes",
    "pypi_click",
    "pypi_cloudpickle",
    "pypi_coverage",
    "pypi_croniter",
    "pypi_dateutils",
    "pypi_deepdiff",
    "pypi_deepspeed",
    "pypi_docker",
    "pypi_fastapi",
    "pypi_fsspec",
    "pypi_gym",
    "pypi_httpx",
    "pypi_hydra_core",
    "pypi_inquirer",
    "pypi_ipython",
    "pypi_jinja2",
    "pypi_jsonargparse",
    "pypi_lightning_api_access",
    "pypi_lightning_cloud",
    "pypi_lightning_fabric",
    "pypi_lightning_utilities",
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_omegaconf",
    "pypi_onnx",
    "pypi_onnxruntime",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_pillow",
    "pypi_playwright",
    "pypi_psutil",
    "pypi_pydantic",
    "pypi_pympler",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_pytest_doctestplus",
    "pypi_pytest_random_order",
    "pypi_pytest_rerunfailures",
    "pypi_pytest_timeout",
    "pypi_pytest_xdist",
    "pypi_python_multipart",
    "pypi_pytorch_lightning",
    "pypi_pyyaml",
    "pypi_redis",
    "pypi_requests",
    "pypi_requests_mock",
    "pypi_rich",
    "pypi_s3fs",
    "pypi_scikit_learn",
    "pypi_setuptools",
    "pypi_starlette",
    "pypi_tensorboard",
    "pypi_tensorboardx",
    "pypi_torch",
    "pypi_torchmetrics",
    "pypi_torchvision",
    "pypi_tqdm",
    "pypi_traitlets",
    "pypi_trio",
    "pypi_typing_extensions",
    "pypi_urllib3",
    "pypi_uvicorn",
    "pypi_websocket_client",
    "pypi_websockets"
  ]
}
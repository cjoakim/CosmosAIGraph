{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3.3",
    "topic :: software development :: libraries"
  ],
  "description": "# fuelsdk-python v1.3.0\n\nsalesforce marketing cloud fuel sdk for python\n\n## overview\n\nthe fuel sdk for python provides easy access to salesforce marketing cloud's fuel api family services, including a collection of rest apis and a soap api. these apis provide access to salesforce marketing cloud functionality via common collection types such as array/hash.\n\nnew features in version 1.3.0\n------------\n* added refresh token support for oauth2 authentication\n* added web/public app support for oauth2 authentication\n\n   more details on access tokens for web/public apps can be found [here](https://developer.salesforce.com/docs/atlas.en-us.mc-app-development.meta/mc-app-development/access-token-app.htm)\n\n   sample config:\n\n   ```\n  [web services]\n  appsignature: none\n  clientid: <client_id>\n  clientsecret: <client_secret>\n  defaultwsdl: https://webservice.exacttarget.com/etframework.wsdl\n  authenticationurl: <auth tenant specific endpoint>\n  baseapiurl: <rest tenant specific endpoint>\n  soapendpoint: <soap tenant specific endpoint>\n  wsdl_file_local_loc: <wsdl_path>/exacttargetwsdl.xml\n\n  [auth service]\n  useoauth2authentication: true\n  accountid: <target_account_id>\n  scope: <permission_list>\n  applicationtype: <application_type>\n  redirecturi: <redirect_uri_for_public/web_app>\n  authorizationcode: <authorization_code_for_public/web_app>\n  ```\n\n  example passing config as a parameter to et_client constructor:\n\n  ```\n  stubobj = et_client.et_client(\n    false, false,\n    {\n        'clientid': '<client_id>',\n        'clientsecret': '<client_secret>',\n        'defaultwsdl': 'https://webservice.exacttarget.com/etframework.wsdl',\n        'authenticationurl': '<auth tenant specific endpoint>',\n        'baseapiurl': '<rest tenant specific endpoint>',\n        'soapendpoint': '<soap tenant specific endpoint>',\n        'wsdl_file_local_loc': r'<wsdl_path>/exacttargetwsdl.xml',\n        'useoauth2authentication': 'true',\n        'accountid': '<target_account_id>',\n        'scope': '<permission_list>'\n        'applicationtype': '<application_type>'\n        'redirecturi': '<redirect_uri_for_public/web_app>'\n        'authorizationcode': '<authorization_code_for_public/web_app>'\n    })\n  ```\n\n* applicationtype can have one of the following values: `server`, `public`, `web`. the default value of applicationtype is `server`.\n\nnew features in version 1.2.0\n------------\n* added support for oauth2 authentication - [more details](https://developer.salesforce.com/docs/atlas.en-us.mc-app-development.meta/mc-app-development/integration-considerations.htm)\n\n  to enable oauth2 authentication, set `useoauth2authentication: true` in the config.python file or pass it in the params argument to the et_client constructor.\n\n  sample config for oauth2:\n\n  ```\n  [web services]\n  appsignature: none\n  clientid: <client_id>\n  clientsecret: <client_secret>\n  defaultwsdl: https://webservice.exacttarget.com/etframework.wsdl\n  authenticationurl: <auth tenant specific endpoint>\n  baseapiurl: <rest tenant specific endpoint>\n  soapendpoint: <soap tenant specific endpoint>\n  wsdl_file_local_loc: <wsdl_path>/exacttargetwsdl.xml\n\n  [auth service]\n  useoauth2authentication: true\n  accountid: <target_account_id>\n  scope: <permission_list>\n  ```\n\n  example passing config as a parameter to et_client constructor:\n\n  ```\n  stubobj = et_client.et_client(\n    false, false,\n    {\n        'clientid': '<client_id>',\n        'clientsecret': '<client_secret>',\n        'defaultwsdl': 'https://webservice.exacttarget.com/etframework.wsdl',\n        'authenticationurl': '<auth tenant specific endpoint>',\n        'baseapiurl': '<rest tenant specific endpoint>',\n        'soapendpoint': '<soap tenant specific endpoint>',\n        'wsdl_file_local_loc': r'<wsdl_path>/exacttargetwsdl.xml',\n        'useoauth2authentication': 'true',\n        'accountid': '<target_account_id>',\n        'scope': '<permission_list>'\n    })\n  ```\n\nnew features in version 1.1.1 \n------------\n* added support for your tenant\u00e2\u20ac\u2122s endpoints - [more details](https://developer.salesforce.com/docs/atlas.en-us.mc-apis.meta/mc-apis/your-subdomain-tenant-specific-endpoints.htm)\n\n## installation\n\nthe fuel sdk for python can be easily installed from the [python package index](https://pypi.python.org/pypi) using the [pip](https://pip.readthedocs.org) command. pip is a tool for installing and managing python packages.\n\n```\npip install salesforce-fuelsdk\n```\n\n## getting started\n\n### configuring\n\nyou must configure your access tokens and details for the fuel sdk in one of the following two ways.\n\n1. copy the included `config.python.template` file to `config.python` in either `~/.fuelsdk/` or within this python module.\n2. add environment variables:\n    * `fuelsdk_client_id` (required)\n    * `fuelsdk_client_secret` (required)\n    * `fuelsdk_app_signature`\n    * `fuelsdk_default_wsdl`\n    * `fuelsdk_base_api_url`\n    * `fuelsdk_auth_url`\n    * `fuelsdk_soap_endpoint`\n    * `fuelsdk_wsdl_file_local_loc`\n\nedit `config.python` or declare environment variables so you can input the clientid and client secret values provided when you registered your application. if you are building a hubexchange application for the interactive marketing hub then, you must also provide the application signature (`appsignature` / `fuelsdk_app_signature`).\nthe `defaultwsdl` / `fuelsdk_default_wsdl` configuration must be [changed depending on the salesforce marketing cloud service](https://code.exacttarget.com/question/there-any-cetificrate-install-our-server-access-et-api \"salesforce marketing cloud forum\").\nthe `baseapiurl` / `fuelsdk_base_api_url` refers to the hostname where the api is hosted, if omitted it will default to [https://www.exacttargetapis.com](https://www.exacttargetapis.com).\nthe `authenticationurl` / `fuelsdk_auth_url` must also be [changed depending on service](https://code.exacttarget.com/question/not-able-create-accesstoken-when-clientidsecret-associated-preproduction-account \"salesforce marketing cloud forum\"). if omitted it will default to [https://auth.exacttargetapis.com/v1/requesttoken?legacy=1](https://auth.exacttargetapis.com/v1/requesttoken?legacy=1).\nthe `soapendpoint` / `fuelsdk_soap_endpoint` refers to the endpoint that will be used for doing soap calls. if omitted it will default to [https://webservice.exacttarget.com/service.asmx](https://webservice.exacttarget.com/service.asmx).\nthe `wsdl_file_local_loc` / `fuelsdk_wsdl_file_local_loc` allows you to specify the full path/filename where the wsdl file will be located on disk, if for instance you are connecting to different endpoints from the same server.\n\nif you have not registered your application or you need to lookup your application key or application signature values, please go to app center at [code@: salesforce marketing cloud's developer community](https://developer.salesforce.com/docs/?filter_text=&service=marketing%20cloud \"code@ app center\").\n\n\n| environment | wsdl (default) | url (auth) |\n| ----------- | -------------- | ---------- |\n| production  | https://webservice.exacttarget.com/etframework.wsdl | https://auth.exacttargetapis.com/v1/requesttoken?legacy=1 |\n| sandbox     | https://webservice.test.exacttarget.com/service.asmx?wsdl | https://auth-test.exacttargetapis.com/v1/requesttoken?legacy=1 |\n\n\n## example request\n\n### code\n\nall salesforce marketing cloud objects exposed through the fuel sdk begin with be prefixed with \"et\\_\".  start by working with the et_list object:\n\n```python\n# add a require statement to reference the fuel sdk's functionality:\nimport fuelsdk\n\n# next, create an instance of the et_client class:\nmyclient = fuelsdk.et_client()\n\n# create an instance of the object type we want to work with:\nlist = fuelsdk.et_list()\n\n# associate the et_client to the object using the auth_stub property:\nlist.auth_stub = myclient\n\n# utilize one of the et_list methods:\nresponse = list.get()\n\n# print out the results for viewing\nprint 'post status: ' + str(response.status)\nprint 'code: ' + str(response.code)\nprint 'message: ' + str(response.message)\nprint 'result count: ' + str(len(response.results))\nprint 'results: ' + str(response.results)\n```\n\n\n### example output\n\n```\nretrieve status: true\ncode: 200\nmessage: ok\nmoreresults: false\nresults length: 1\nresults: [(list){\n   client =\n      (clientid){\n         id = 113903\n      }\n   partnerkey = none\n   createddate = 2013-07-29 04:43:32.000073\n   modifieddate = 2013-07-29 04:43:32.000073\n   id = 1966872\n   objectid = none\n   customerkey = \"343431cd-031d-43c7-981f-51b778a5a47f\"\n   listname = \"pythonsdklist\"\n   category = 578615\n   type = \"private\"\n   description = \"this list was created with the pythonsdk\"\n   listclassification = \"exacttargetlist\"\n }]\n```\n\n## et\\_client class\n\nthe et\\_client class takes care of many of the required steps when accessing salesforce marketing cloud's api, including retrieving appropriate access tokens, handling token state for managing refresh, and determining the appropriate endpoints for api requests.  in order to leverage the advantages this class provides, use a single instance of this class for an entire session.  do not instantiate a new et_client object for each request made.\n\n## responses\n\nall methods on fuel sdk objects return a generic object that follows the same structure, regardless of the type of call.  this object contains a common set of properties used to display details about the request.\n\n| parameter | description                                                     |\n| --------- | --------------------------------------------------------------- |\n| status    | boolean value that indicates if the call was successful         |\n| code      | http error code (will always be 200 for soap requests)          |\n| message   | text values containing more details in the event of an error    |\n| results   | collection containing the details unique to the method called.  |\n\nget methods also return an addition value to indicate if more information is available (that information can be retrieved using the getmoreresults method):\n\n - moreresults - boolean value that indicates on get requests if more data is available.\n\n\n## samples\n\nfind more sample files that illustrate using all of the available functions for salesforce marketing cloud objects exposed through the api in the objsamples directory.\n\nsample list:\n\n* [bounceevent](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_bounceevent.py)\n* [campaign](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_campaign.py)\n* [clickevent](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_clickevent.py)\n* [contentarea](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_contentarea.py)\n* [dataextension](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_dataextension.py)\n* [email](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_email.py)\n* [list](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_list.py)\n* [list > subscriber](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_list_subscriber.py)\n* [openevent](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_openevent.py)\n* [sentevent](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_sentevent.py)\n* [subscriber](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_subscriber.py)\n* [triggeredsend](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_triggeredsend.py)\n* [unsubevent](https://github.com/salesforce-marketingcloud/fuelsdk-python/tree/master/objsamples/sample_unsubevent.py)\n\n\nyou can also download a copy of wsdl file from the obsamples directory and mention its path in the config file (config.python) like below:  \n> wsdl_file_local_loc: /path/to/wsdl/exacttargetwsdl.xml\n\nusing this wsdl file also resolves [issue:81](https://github.com/salesforce-marketingcloud/fuelsdk-python/issues/81)\n\n## development on fuelsdk-python\n\nif you would like to help contribute to the fuelsdk-python project, checkout the code from the [github project page](https://github.com/salesforce-marketingcloud/fuelsdk-python). the use of [virtualenvwrapper](http://virtualenvwrapper.readthedocs.org/) is highly recommended. after installing virtualenvwrapper you can run the following commands to setup a sandbox for development.\n\n```\ngit clone git@github.com:salesforce-marketingcloud/fuelsdk-python.git\nmkvirtualenv fuelsdk-python\ncd fuelsdk-python\npip install -r requirements.txt\n```\n\nyou will then have a sandbox which includes all dependencies for doing development on fuelsdk-python.  \nalso you may need to setup your pythonpath environment variable to the cloned root directory so that you can access them from anywhere.  \non mac/linux:  \n> export pythonpath=$pythonpath:/path/to/fuelsdk-python\n\non windows:  \n> set pythonpath=%pythonpath%;c:\\path\\to\\fuelsdk-python\n\n\n## requirements\n\npython 3.3.x\n\nlibraries:\n\n* pyjwt\n* requests\n* suds\n\n### custom suds changes (deprecated)\n\n**note**: suds is now patched at runtime when importing the fuelsdk. you no longer need to edit the library. please be aware of the change.\n\nthe default suds 0.4 package that is available for download needs to have a couple small fixes applied in order for it to fully support the fuel sdk. please update your suds installation using the following instructions:\nsuds-jurko 0.6 supports python 3.x.x\n\n- download the suds package source from https://pypi.python.org/pypi/suds-jurko/0.6\n- open the file located wihin the uncompressed files at: `suds\\mx\\appender.py`\n- at line 223, the following lines will be present:\n```python\nchild.settext(p.get())\nparent.append(child)\nfor item in p.items():\n  cont = content(tag=item[0], value=item[1])\n  appender.append(self, child, cont)\n```\n\n- replace those lines with:\n```python\nchild_value = p.get()\nif(child_value is none):\n  pass\nelse:\n  child.settext(child_value)\n  parent.append(child)\n  for item in p.items():\n    cont = content(tag=item[0], value=item[1])\n    appender.append(self, child, cont)\n```\n\n- open the file located wihin the uncompressed files at `suds\\bindings\\document.py`\n- after line 62 which reads:\n```python\nn += 1\n```\n\n- add the following lines:\n```python\nif value is none:\n  continue\n```\n- install suds by running the command\n```\npython setup.py install\n``\n\n## copyright and license\ncopyright (c) 2017 salesforce\n\nlicensed under the mit license (the \"license\"); you may not use this work except in compliance with the license. you may obtain a copy of the license in the copying file.\n\nunless required by applicable law or agreed to in writing, software distributed under the license is distributed on an \"as is\" basis, without warranties or conditions of any kind, either express or implied. see the license for the specific language governing permissions and limitations under the license.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "salesforce-fuelsdk",
  "package_url": "https://pypi.org/project/Salesforce-FuelSDK/",
  "project_url": "https://pypi.org/project/Salesforce-FuelSDK/",
  "project_urls": {
    "Homepage": "https://github.com/salesforce-marketingcloud/FuelSDK-Python"
  },
  "release_url": "https://pypi.org/project/Salesforce-FuelSDK/1.3.0/",
  "requires_dist": [
    "pyjwt (>=1.5.3)",
    "requests (>=2.18.4)",
    "suds-jurko (==0.6)"
  ],
  "requires_python": "",
  "summary": "salesforce marketing cloud fuel sdk for python",
  "version": "1.3.0",
  "releases": [],
  "developers": [
    "exacttarget"
  ],
  "kwds": "fuelsdk_auth_url fuelsdk_base_api_url fuelsdk_app_signature fuelsdk_soap_endpoint fuelsdk_client_secret",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_salesforce_fuelsdk",
  "homepage": "https://github.com/salesforce-marketingcloud/fuelsdk-python",
  "release_count": 4,
  "dependency_ids": [
    "pypi_pyjwt",
    "pypi_requests",
    "pypi_suds_jurko"
  ]
}
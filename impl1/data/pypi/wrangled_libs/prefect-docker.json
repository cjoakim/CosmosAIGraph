{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries"
  ],
  "description": "# prefect-docker\n\n<p align=\"center\">\n    <a href=\"https://pypi.python.org/pypi/prefect-docker/\" alt=\"pypi version\">\n        <img alt=\"pypi\" src=\"https://img.shields.io/pypi/v/prefect-docker?color=0052ff&labelcolor=090422\"></a>\n    <a href=\"https://github.com/prefecthq/prefect-docker/\" alt=\"stars\">\n        <img src=\"https://img.shields.io/github/stars/prefecthq/prefect-docker?color=0052ff&labelcolor=090422\" /></a>\n    <a href=\"https://pepy.tech/badge/prefect-docker/\" alt=\"downloads\">\n        <img src=\"https://img.shields.io/pypi/dm/prefect-docker?color=0052ff&labelcolor=090422\" /></a>\n    <a href=\"https://github.com/prefecthq/prefect-docker/pulse\" alt=\"activity\">\n        <img src=\"https://img.shields.io/github/commit-activity/m/prefecthq/prefect-docker?color=0052ff&labelcolor=090422\" /></a>\n    <br>\n    <a href=\"https://prefect-community.slack.com\" alt=\"slack\">\n        <img src=\"https://img.shields.io/badge/slack-join_community-red.svg?color=0052ff&labelcolor=090422&logo=slack\" /></a>\n    <a href=\"https://discourse.prefect.io/\" alt=\"discourse\">\n        <img src=\"https://img.shields.io/badge/discourse-browse_forum-red.svg?color=0052ff&labelcolor=090422&logo=discourse\" /></a>\n</p>\n\n## welcome!\n\nprefect integrations for working with docker.\n\nnote! the `dockerregistrycredentials` in `prefect-docker` is a unique block, separate from the `dockerregistry` in `prefect` core. while `dockerregistry` implements a few functionality from both `dockerhost` and `dockerregistrycredentials` for convenience, it does not allow much configuration to interact with a docker host.\n\ndo not use `dockerregistry` with this collection. instead, use `dockerhost` and `dockerregistrycredentials`.\n\n## getting started\n\n### python setup\n\nrequires an installation of python 3.7+.\n\nwe recommend using a python virtual environment manager such as pipenv, conda or virtualenv.\n\nthese tasks are designed to work with prefect 2.0. for more information about how to use prefect, please refer to the [prefect documentation](https://orion-docs.prefect.io/).\n\n### installation\n\ninstall `prefect-docker` with `pip`:\n\n```bash\npip install prefect-docker\n```\n\nthen, register to [view the block](https://orion-docs.prefect.io/ui/blocks/) on prefect cloud:\n\n```bash\nprefect block register -m prefect_docker\n```\n\nnote, to use the `load` method on blocks, you must already have a block document [saved through code](https://orion-docs.prefect.io/concepts/blocks/#saving-blocks) or [saved through the ui](https://orion-docs.prefect.io/ui/blocks/).\n\n### pull image, and create, start, log, stop, and remove docker container\n\n```python\nfrom prefect import flow, get_run_logger\nfrom prefect_docker.images import pull_docker_image\nfrom prefect_docker.containers import (\n    create_docker_container,\n    start_docker_container,\n    get_docker_container_logs,\n    stop_docker_container,\n    remove_docker_container,\n)\n\n\n@flow\ndef docker_flow():\n    logger = get_run_logger()\n    pull_docker_image(\"prefecthq/prefect\", \"latest\")\n    container = create_docker_container(\n        image=\"prefecthq/prefect\", command=\"echo 'hello world!' && sleep 60\"\n    )\n    start_docker_container(container_id=container.id)\n    logs = get_docker_container_logs(container_id=container.id)\n    logger.info(logs)\n    stop_docker_container(container_id=container.id)\n    remove_docker_container(container_id=container.id)\n    return container\n```\n\n### use a custom docker host to create a docker container\n```python\nfrom prefect import flow\nfrom prefect_docker import dockerhost\nfrom prefect_docker.containers import create_docker_container\n\n@flow\ndef create_docker_container_flow():\n    docker_host = dockerhost(\n        base_url=\"tcp://127.0.0.1:1234\",\n        max_pool_size=4\n    )\n    container = create_docker_container(\n        docker_host=docker_host,\n        image=\"prefecthq/prefect\",\n        command=\"echo 'hello world!'\"\n    )\n\ncreate_docker_container_flow()\n```\n\n## resources\n\nif you encounter any bugs while using `prefect-docker`, feel free to open an issue in the [prefect-docker](https://github.com/prefecthq/prefect-docker) repository.\n\nif you have any questions or issues while using `prefect-docker`, you can find help in either the [prefect discourse forum](https://discourse.prefect.io/) or the [prefect slack community](https://prefect.io/slack).\n\nfeel free to \u2b50\ufe0f or watch [`prefect-docker`](https://github.com/prefecthq/prefect-docker) for updates too!\n\n## development\n\nif you'd like to install a version of `prefect-docker` for development, clone the repository and perform an editable install with `pip`:\n\n```bash\ngit clone https://github.com/prefecthq/prefect-docker.git\n\ncd prefect-docker/\n\npip install -e \".[dev]\"\n\n# install linting pre-commit hooks\npre-commit install\n```\n",
  "docs_url": null,
  "keywords": "prefect",
  "license": "apache license 2.0",
  "name": "prefect-docker",
  "package_url": "https://pypi.org/project/prefect-docker/",
  "project_url": "https://pypi.org/project/prefect-docker/",
  "project_urls": {
    "Homepage": "https://github.com/PrefectHQ/prefect-docker"
  },
  "release_url": "https://pypi.org/project/prefect-docker/0.4.1/",
  "requires_dist": [
    "prefect >=2.13.5",
    "docker >=6.1.1",
    "black ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "flaky ; extra == 'dev'",
    "interrogate ; extra == 'dev'",
    "isort ; extra == 'dev'",
    "mkdocs ; extra == 'dev'",
    "mkdocs-gen-files ; extra == 'dev'",
    "mkdocs-material ; extra == 'dev'",
    "mkdocstrings[python] ; extra == 'dev'",
    "mypy ; extra == 'dev'",
    "pillow ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-asyncio ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-timeout ; extra == 'dev'",
    "pytest-xdist ; extra == 'dev'",
    "mock ; (python_version < \"3.8\") and extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "prefect integrations for working with docker",
  "version": "0.4.1",
  "releases": [],
  "developers": [
    "help@prefect.io",
    "prefect_technologies"
  ],
  "kwds": "prefect_docker docker pull_docker_image docker_host docker_flow",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_prefect_docker",
  "homepage": "https://github.com/prefecthq/prefect-docker",
  "release_count": 11,
  "dependency_ids": [
    "pypi_black",
    "pypi_docker",
    "pypi_flake8",
    "pypi_flaky",
    "pypi_interrogate",
    "pypi_isort",
    "pypi_mkdocs",
    "pypi_mkdocs_gen_files",
    "pypi_mkdocs_material",
    "pypi_mkdocstrings",
    "pypi_mock",
    "pypi_mypy",
    "pypi_pillow",
    "pypi_pre_commit",
    "pypi_prefect",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_pytest_timeout",
    "pypi_pytest_xdist"
  ]
}
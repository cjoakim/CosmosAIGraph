{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": ".. image:: https://readthedocs.org/projects/s3pathlib/badge/?version=latest\n    :target: https://s3pathlib.readthedocs.io/en/latest/\n    :alt: documentation status\n\n.. image:: https://github.com/aws-samples/s3pathlib-project/workflows/ci/badge.svg\n    :target: https://github.com/aws-samples/s3pathlib-project/actions?query=workflow:ci\n\n.. image:: https://img.shields.io/badge/codecov-100%25-brightgreen\n    :target: https://github.com/aws-samples/s3pathlib-project/actions?query=workflow:ci\n\n.. image:: https://img.shields.io/pypi/v/s3pathlib.svg\n    :target: https://pypi.python.org/pypi/s3pathlib\n\n.. image:: https://img.shields.io/pypi/l/s3pathlib.svg\n    :target: https://pypi.python.org/pypi/s3pathlib\n\n.. image:: https://img.shields.io/pypi/pyversions/s3pathlib.svg\n    :target: https://pypi.python.org/pypi/s3pathlib\n    \n.. image:: https://img.shields.io/pypi/dm/s3pathlib.svg\n    :target: https://pypi.python.org/pypi/s3pathlib\n\n.. image:: https://img.shields.io/badge/star_me_on_github!--none.svg?style=social\n    :target: https://github.com/aws-samples/s3pathlib-project\n\n------\n\n.. image:: https://img.shields.io/badge/link-document-orange.svg\n    :target: https://s3pathlib.readthedocs.io/en/latest/\n\n.. image:: https://img.shields.io/badge/link-api-blue.svg\n    :target: https://s3pathlib.readthedocs.io/en/latest/py-modindex.html\n\n.. image:: https://img.shields.io/badge/link-source_code-blue.svg\n    :target: https://s3pathlib.readthedocs.io/en/latest/py-modindex.html\n\n.. image:: https://img.shields.io/badge/link-submit_issue-blue.svg\n    :target: https://github.com/aws-samples/s3pathlib-project/issues\n\n.. image:: https://img.shields.io/badge/link-request_feature-blue.svg\n    :target: https://github.com/aws-samples/s3pathlib-project/issues\n\n.. image:: https://img.shields.io/badge/link-download-blue.svg\n    :target: https://pypi.org/pypi/s3pathlib#files\n\n\nwelcome to ``s3pathlib`` documentation\n==============================================================================\n`s3pathlib <https://s3pathlib.readthedocs.io/en/latest/>`_ is a python package that offers an object-oriented programming (oop) interface to work with aws s3 objects and directories. its api is designed to be similar to the standard library `pathlib <https://docs.python.org/3/library/pathlib.html>`_ and is user-friendly. the package also `supports versioning <https://docs.aws.amazon.com/amazons3/latest/userguide/versioning.html>`_ in aws s3.\n\n.. note::\n\n    you may not be viewing the full document, `full document is here <https://s3pathlib.readthedocs.io/en/latest/>`_\n\n\nquick start\n------------------------------------------------------------------------------\n.. note::\n\n    `comprehensive document guide / features / best practice can be found at here <https://s3pathlib.readthedocs.io/en/latest/#comprehensive-guide>`_\n\n**import the library, declare an s3path object**\n\n.. code-block:: python\n\n    # import\n    >>> from s3pathlib import s3path\n\n    # construct from string, auto join parts\n    >>> p = s3path(\"bucket\", \"folder\", \"file.txt\")\n    # construct from s3 uri works too\n    >>> p = s3path(\"s3://bucket/folder/file.txt\")\n    # construct from s3 arn works too\n    >>> p = s3path(\"arn:aws:s3:::bucket/folder/file.txt\")\n    >>> p.bucket\n    'bucket'\n    >>> p.key\n    'folder/file.txt'\n    >>> p.uri\n    's3://bucket/folder/file.txt'\n    >>> p.console_url # click to preview it in aws console\n    'https://s3.console.aws.amazon.com/s3/object/bucket?prefix=folder/file.txt'\n    >>> p.arn\n    'arn:aws:s3:::bucket/folder/file.txt'\n\n**talk to aws s3 and get some information**\n\n.. code-block:: python\n\n    # s3pathlib maintains a \"context\" object that holds the aws authentication information\n    # you just need to build your own boto session object and attach to it\n    >>> import boto3\n    >>> from s3pathlib import context\n    >>> context.attach_boto_session(\n    ...     boto3.session.session(\n    ...         region_name=\"us-east-1\",\n    ...         profile_name=\"my_aws_profile\",\n    ...     )\n    ... )\n\n    >>> p = s3path(\"bucket\", \"folder\", \"file.txt\")\n    >>> p.write_text(\"a lot of data ...\")\n    >>> p.etag\n    '3e20b77868d1a39a587e280b99cec4a8'\n    >>> p.size\n    56789000\n    >>> p.size_for_human\n    '51.16 mb'\n\n    # folder works too, you just need to use a tailing \"/\" to identify that\n    >>> p = s3path(\"bucket\", \"datalake/\")\n    >>> p.count_objects()\n    7164 # number of files under this prefix\n    >>> p.calculate_total_size()\n    (7164, 236483701963) # 7164 objects, 220.24 gb\n    >>> p.calculate_total_size(for_human=true)\n    (7164, '220.24 gb') # 7164 objects, 220.24 gb\n\n**manipulate folder in s3**\n\nnative s3 write api (those operation that change the state of s3) only operate on object level. and the `list_objects <https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#s3.client.list_objects_v2>`_ api returns 1000 objects at a time. you need additional effort to manipulate objects recursively. ``s3pathlib`` **can save your life**\n\n.. code-block:: python\n\n    # create a s3 folder\n    >>> p = s3path(\"bucket\", \"github\", \"repos\", \"my-repo/\")\n\n    # upload all python file from /my-github-repo to s3://bucket/github/repos/my-repo/\n    >>> p.upload_dir(\"/my-repo\", pattern=\"**/*.py\", overwrite=false)\n\n    # copy entire s3 folder to another s3 folder\n    >>> p2 = s3path(\"bucket\", \"github\", \"repos\", \"another-repo/\")\n    >>> p1.copy_to(p2, overwrite=true)\n\n    # delete all objects in the folder, recursively, to clean up your test bucket\n    >>> p.delete()\n    >>> p2.delete()\n\n**s3 path filter**\n\never think of filter s3 object by it's attributes like: dirname, basename, file extension, etag, size, modified time? it is supposed to be simple in python:\n\n.. code-block:: python\n\n    >>> s3bkt = s3path(\"bucket\") # assume you have a lots of files in this bucket\n    >>> iterproxy = s3bkt.iter_objects().filter(\n    ...     s3path.size >= 10_000_000, s3path.ext == \".csv\" # add filter\n    ... )\n\n    >>> iterproxy.one() # fetch one\n    s3path('s3://bucket/larger-than-10mb-1.csv')\n\n    >>> iterproxy.many(3) # fetch three\n    [\n        s3path('s3://bucket/larger-than-10mb-1.csv'),\n        s3path('s3://bucket/larger-than-10mb-2.csv'),\n        s3path('s3://bucket/larger-than-10mb-3.csv'),\n    ]\n\n    >>> for p in iterproxy: # iter the rest\n    ...     print(p)\n\n\n**file like object for simple io**\n\n``s3path`` is file-like object. it support ``open`` and context manager syntax out of the box. here are only some highlight examples:\n\n.. code-block:: python\n\n    # stream big file by line\n    >>> p = s3path(\"bucket\", \"log.txt\")\n    >>> with p.open(\"r\") as f:\n    ...     for line in f:\n    ...         do what every you want\n\n    # json io\n    >>> import json\n    >>> p = s3path(\"bucket\", \"config.json\")\n    >>> with p.open(\"w\") as f:\n    ...     json.dump({\"password\": \"mypass\"}, f)\n\n    # pandas io\n    >>> import pandas as pd\n    >>> p = s3path(\"bucket\", \"dataset.csv\")\n    >>> df = pd.dataframe(...)\n    >>> with p.open(\"w\") as f:\n    ...     df.to_csv(f)\n\nnow that you have a basic understanding of s3pathlib, let's read the `full document <https://s3pathlib.readthedocs.io/en/latest/#comprehensive-guide>`_ to explore its capabilities in greater depth.\n\n\ngetting help\n------------------------------------------------------------------------------\nplease use the ``python-s3pathlib`` tag on stack overflow to get help.\n\nsubmit a ``i want help`` issue tickets on `github issues <https://github.com/aws-samples/s3pathlib-project/issues/new/choose>`_\n\n\ncontributing\n------------------------------------------------------------------------------\nplease see the `contribution guidelines <https://github.com/aws-samples/s3pathlib-project/blob/main/contributing.rst>`_.\n\n\ncopyright\n------------------------------------------------------------------------------\ns3pathlib is an open source project. see the `license <https://github.com/aws-samples/s3pathlib-project/blob/main/license>`_ file for more information.\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "s3pathlib",
  "package_url": "https://pypi.org/project/s3pathlib/",
  "project_url": "https://pypi.org/project/s3pathlib/",
  "project_urls": {
    "Download": "https://pypi.python.org/pypi/s3pathlib/2.1.2#downloads",
    "Homepage": "https://github.com/aws-samples/s3pathlib-project"
  },
  "release_url": "https://pypi.org/project/s3pathlib/2.1.2/",
  "requires_dist": [
    "boto3",
    "iterproxy",
    "func-args",
    "pathlib-mate (<2.0.0,>=1.0.1)",
    "boto-session-manager (<2.0.0,>=1.5.1)",
    "smart-open (<7.0.0,>=5.1.0)",
    "cached-property (>=1.5.2) ; python_version < \"3.8\"",
    "sphinx ; extra == 'docs'",
    "sphinx-inline-tabs ; extra == 'docs'",
    "sphinx-jinja ; extra == 'docs'",
    "sphinx-copybutton ; extra == 'docs'",
    "sphinx-design ; extra == 'docs'",
    "nbsphinx ; extra == 'docs'",
    "readthedocs-sphinx-search ; extra == 'docs'",
    "rstobj (==0.0.7) ; extra == 'docs'",
    "docfly (==1.0.2) ; extra == 'docs'",
    "furo ; extra == 'docs'",
    "IPython ; extra == 'docs'",
    "pytest ; extra == 'tests'",
    "pytest-cov ; extra == 'tests'",
    "decorator ; extra == 'tests'",
    "moto ; extra == 'tests'",
    "rich ; extra == 'tests'"
  ],
  "requires_python": "",
  "summary": "objective oriented interface for aws s3, similar to pathlib.",
  "version": "2.1.2",
  "releases": [],
  "developers": [
    "husanhe@gmail.com",
    "sanhe_hu",
    "sanhehu@amazon.com"
  ],
  "kwds": "s3pathlib s3path s3bkt s3 my_aws_profile",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_s3pathlib",
  "homepage": "https://github.com/aws-samples/s3pathlib-project",
  "release_count": 21,
  "dependency_ids": [
    "pypi_boto_session_manager",
    "pypi_boto3",
    "pypi_cached_property",
    "pypi_decorator",
    "pypi_docfly",
    "pypi_func_args",
    "pypi_furo",
    "pypi_ipython",
    "pypi_iterproxy",
    "pypi_moto",
    "pypi_nbsphinx",
    "pypi_pathlib_mate",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_readthedocs_sphinx_search",
    "pypi_rich",
    "pypi_rstobj",
    "pypi_smart_open",
    "pypi_sphinx",
    "pypi_sphinx_copybutton",
    "pypi_sphinx_design",
    "pypi_sphinx_inline_tabs",
    "pypi_sphinx_jinja"
  ]
}
{
  "classifiers": [
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "quickstart\n==========\n\n.. teaser-begin\n\na python module to simplify `semantic versioning`_.\n\n|ghaction| |python-support| |downloads| |license| |docs| |black|\n|openissues| |ghdiscussion|\n\n.. teaser-end\n\nthe module follows the ``major.minor.patch`` style:\n\n* ``major`` version when you make incompatible api changes,\n* ``minor`` version when you add functionality in a backwards compatible manner, and\n* ``patch`` version when you make backwards compatible bug fixes.\n\nadditional labels for pre-release and build metadata are supported.\n\nto import this library, use:\n\n.. code-block:: python\n\n    >>> import semver\n\nworking with the library is quite straightforward. to turn a version string into the\ndifferent parts, use the ``semver.version.parse`` function:\n\n.. code-block:: python\n\n    >>> ver = semver.version.parse('1.2.3-pre.2+build.4')\n    >>> ver.major\n    1\n    >>> ver.minor\n    2\n    >>> ver.patch\n    3\n    >>> ver.prerelease\n    'pre.2'\n    >>> ver.build\n    'build.4'\n\nto raise parts of a version, there are a couple of functions available for\nyou. the function ``semver.version.bump_major`` leaves the original object untouched, but\nreturns a new ``semver.version`` instance with the raised major part:\n\n.. code-block:: python\n\n    >>> ver = semver.version.parse(\"3.4.5\")\n    >>> ver.bump_major()\n    version(major=4, minor=0, patch=0, prerelease=none, build=none)\n\nit is allowed to concatenate different \"bump functions\":\n\n.. code-block:: python\n\n    >>> ver.bump_major().bump_minor()\n    version(major=4, minor=1, patch=0, prerelease=none, build=none)\n\nto compare two versions, semver provides the ``semver.compare`` function.\nthe return value indicates the relationship between the first and second\nversion:\n\n.. code-block:: python\n\n    >>> semver.compare(\"1.0.0\", \"2.0.0\")\n    -1\n    >>> semver.compare(\"2.0.0\", \"1.0.0\")\n    1\n    >>> semver.compare(\"2.0.0\", \"2.0.0\")\n    0\n\n\nthere are other functions to discover. read on!\n\n\n.. |latest-version| image:: https://img.shields.io/pypi/v/semver.svg\n   :alt: latest version on pypi\n   :target: https://pypi.org/project/semver\n.. |python-support| image:: https://img.shields.io/pypi/pyversions/semver.svg\n   :target: https://pypi.org/project/semver\n   :alt: python versions\n.. |downloads| image:: https://img.shields.io/pypi/dm/semver.svg\n   :alt: monthly downloads from pypi\n   :target: https://pypi.org/project/semver\n.. |license| image:: https://img.shields.io/pypi/l/semver.svg\n   :alt: software license\n   :target: https://github.com/python-semver/python-semver/blob/master/license.txt\n.. |docs| image:: https://readthedocs.org/projects/python-semver/badge/?version=latest\n   :target: http://python-semver.readthedocs.io/en/latest/?badge=latest\n   :alt: documentation status\n.. _semantic versioning: https://semver.org/\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n    :alt: black formatter\n.. |gitter| image:: https://badges.gitter.im/python-semver/community.svg\n    :target: https://gitter.im/python-semver/community\n    :alt: gitter\n.. |openissues| image:: http://isitmaintained.com/badge/open/python-semver/python-semver.svg\n    :target: http://isitmaintained.com/project/python-semver/python-semver\n    :alt: percentage of open issues\n.. |ghaction| image:: https://github.com/python-semver/python-semver/workflows/python/badge.svg\n    :alt: python\n.. |ghdiscussion| image:: https://shields.io/badge/github-%20discussions-green?logo=github\n    :target: https://github.com/python-semver/python-semver/discussions\n    :alt: github discussion\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "semver",
  "package_url": "https://pypi.org/project/semver/",
  "project_url": "https://pypi.org/project/semver/",
  "project_urls": {
    "Bug Tracker": "https://github.com/python-semver/python-semver/issues",
    "Changelog": "https://python-semver.readthedocs.io/en/latest/changelog.html",
    "Documentation": "https://python-semver.rtfd.io",
    "Homepage": "https://github.com/python-semver/python-semver",
    "Releases": "https://github.com/python-semver/python-semver/releases"
  },
  "release_url": "https://pypi.org/project/semver/3.0.2/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "python helper for semantic versioning (https://semver.org)",
  "version": "3.0.2",
  "releases": [],
  "developers": [
    "k-bx@k-bx.com",
    "kostiantyn_rybnikov",
    "s.celles@gmail.com",
    "sebastien_celles"
  ],
  "kwds": "pyversions versioning versions teaser version",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_semver",
  "homepage": "https://github.com/python-semver/python-semver",
  "release_count": 45,
  "dependency_ids": []
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "python databricks api wrapper using requests module\n# databricks api documentation\n*this package is a python implementation of the [databricks api](https://docs.databricks.com/api/latest/index.html) for structured and programmatic use. this python implementation requires that your databricks api token be saved as an environment variable in your system:* `export databricks_token=my_databricks_token` in osx / linux. or in windows by searching for system environment variables in the start menu and adding it in the editor. for details see this [guide](https://superuser.com/questions/949560/how-do-i-set-system-environment-variables-in-windows-10).\n\n## update\n*tokens can now be passed when a particular class is instantiated. e.g.:*\n\n```python\nfrom databricksapi import workspace\nurl = 'https://my-databricks-instance.com'\ntoken = 'dapixxxxxxxxxxxxx'\nws = workspace(url, token)\n\n```\n\n## installation\nyou can either use `pip install databricksapi` to install it globally, or you can clone the repository. please note that only compatability with python 3.7+ is guaranteed.\n\n## apis included  \n* token\n* secrets\n* clusters\n* scim (experimental)\n* jobs\n* dbfs\n* groups\n* instance profiles\n* libraries\n* workspace\n\n## imports\nthe modules above can be imported as follows\n```python\nfrom databricksapi import token, jobs, dbfs\nurl = 'https://url.for.databricks.net'\n\ntoken_instance = token(url)\njobs_instance = jobs(url)\n```\n\n## token api\nthe token api allows any user to create, list, and revoke tokens that can be used to authenticate and access databricks rest apis. initial authentication to this api is the same as for all of the databricks api endpoints.\n\n### methods\n1. createtoken(*lifetime_seconds*, *comment*)\n2. listtokens()\n3. revoketoken(*token_id*)\n\n#### createtoken(*lifetime_seconds*, *comment*)\ncreate and return a token.\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = token(url)\n\ndb_api.createtoken(600, 'test token')\n```\n\n#### listtokens()\nlist all token ids in your databricks environment.\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = token(url)\n\ndb_api.listtokens()\n```\n\n#### revoketoken(*token_id*)\nrevoke an active databricks token.\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = token(url)\n\n#token_id can be obtained from using the listtokens() method\ndb_api.revoketoken('5715498424f15ee0213be729257b53fc35a47d5953e3bdfd8ed22a0b93b339f4')\n```\n\n## secrets api\nthe secrets api allows you to manage secrets, secret scopes, and access permissions.\n\n### methods\n1. createsecretscope(*scope*, *initial_manage_principal*)\n2. deletesecretscope(*scope*)\n3. listsecretscopes()\n4. putseceret(*value*, *value_type*, *scope*, *key*)\n5. deletesecret(*scope*, *key*)\n6. listsecrets(*scope*)\n7. putsecretacl(*scope*, *principal*, *permission*)\n8. deletesecretacl(*scope*, *principal*)\n9. getsecretacl(*scope, *principal*)\n10. listsecretacl(*scope*, *principal*)\n\n#### createsecretscope(*scope*, *initial_manage_princial*)\ncreates a new secret scope.\n\nthe scope name must consist of alphanumeric characters, dashes, underscores, and periods, and may not exceed 128 characters. the maximum number of scopes in a workspace is 100.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = secrets(url)\n\nscope = 'somesecretscope'\ninitial_manage_princial = 'users'\ndb_api.createsecretscope(scope, initial_manage_princial)\n```\n\n#### deletesecretscope(*scope*)\n\ndelete a secret scope.\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = secrets(url)\n\nscope = 'somesecretscope'\ndb_api.deletesecretscope(scope)\n```\n\n#### listsecretscopes()\nlist all secret scopes in the workspace\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = secrets(url)\n\ndb_api.listsecretscopes()\n```\n\n#### putsecret(*value*, *value_type*, *scope*, *key*)  \ninserts a secret under the provided scope with the given name. if a secret already exists with the same name, this command overwrites the existing secret\u2019s value. the server encrypts the secret using the secret scope\u2019s encryption settings before storing it. you must have write or manage permission on the secret scope.\n\nthe `value_type` parameter can either be set to `string` or `bytes` depending on the type fo value the user passes in.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = secrets(url)\n\n#set parameters\nvalue = 'beepboop'\nvalue_type = 'string'\nscope = 'somesecretscope'\nkey = 'uniquescopekey'\n\ndb_api.putsecret(value, value_type, scope, key)\n```\n\n#### deletesecret(*scope*, *key*)\ndeletes the secret stored in this secret scope. you must have write or manage permission on the secret scope.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = secrets(url)\n\nscope = 'somesecretscope'\nkey = 'uniquescopekey'\n\ndb_api.deletesecret(scope, key)\n```\n\n#### listsecrets(*scope*)\nlists the secret keys that are stored at this scope. this is a metadata-only operation; secret data cannot be retrieved using this api. users need read permission to make this call.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = secrets(url)\n\nscope = 'somesecretscope'\n\ndb_api.listsecrets(scope)\n```\n\n#### putsecretacl(*scope*, *principal*, *permission*)\ncreates or overwrites the acl associated with the given principal (user or group) on the specified scope point. in general, a user or group will use the most powerful permission available to them\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = secrets(url)\n\nscope = 'somesecretscope'\nprinicpal = 'users'\npermission = 'read'\n\ndb_api.putsecretacl(scope, principal, permission)\n```\n\n#### deletesecretacl(*scope*, *principal*)  \ndeletes the given acl on the given scope.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = secrets(url)\n\nscope = 'somesecretscope'\nprinicpal = 'users'\n\ndb_api.deletesecretacl(scope, principal)\n```\n\n#### getsecretacl(*scope, *principal*)\ndescribes the details about the given acl, such as the group and permission.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = secrets(url)\n\nscope = 'somesecretscope'\nprinicpal = 'users'\n\ndb_api.getsecretacl(scope, principal)\n```\n\n#### listsecretacl(*scope*, *principal*)\nlists the acls set on the given scope.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = secrets(url)\n\nscope = 'somesecretscope'\nprinicpal = 'users'\n\ndb_api.listsecretacl(scope, principal)\n```\n\n## clusters api\nthe clusters api allows you to create, start, edit, list, terminate, and delete clusters via the api. the maximum allowed size of a request to the clusters api is 10mb.\n\n### methods\n1. createcluster(*worker*, *worker_type*, *cluster_name*, *spark_version*, *cluster_log_conf*, *node_type_id*, *driver_node_type_id=none*, *spark_conf=none*, *aws_attributes=none*, *ssh_public_keys=none*, *custom_tags=none*, *init_scripts=none*, *spark_env_vars=none*, *autotermination_minutes=none*, *enable_elastic_disk=none*)\n2. editcluster(*worker*, *worker_type*, *cluster_name*, *spark_version*, *cluster_log_conf*, *node_type_id*, *driver_node_type_id=none*, *spark_conf=none*, *aws_attributes=none*, *ssh_public_keys=none*, *custom_tags=none*, *init_scripts=none*, *spark_env_vars=none*, *autotermination_minutes=none*, *enable_elastic_disk=none*)\n3. startcluster(*cluster_id*)\n4. restartcluster(*cluster_id*)\n5. resizecluster(*cluster_id*, *worker*, *worker_type*)\n6. terminatecluster(*cluster_id*)\n7. deletecluster(*cluster_id*)\n8. getcluster(*cluster_id*)\n9. pincluster(*cluster_id*)\n10. unpincluster(*cluster_id*)\n11. listclusters()\n12. listnodetypes()\n13. listzones()\n14. getsparkversions()\n15. getclusterevents(*cluster_id*, *order='desc'*, *start_time=none*, *end_time=none*, *event_types=none*, *offset=none*, *limit=none*)\n\n#### createcluster(*worker*, *worker_type*, *cluster_name*, *spark_version*, *cluster_log_conf*, *node_type_id*, *driver_node_type_id=none*, *spark_conf=none*, *aws_attributes=none*, *ssh_public_keys=none*, *custom_tags=none*, *init_scripts=none*, *spark_env_vars=none*, *autotermination_minutes=none*, *enable_elastic_disk=none*)\n\ncreates a new spark cluster. this method acquires new instances from the cloud provider if necessary. this method is asynchronous; the returned cluster_id can be used to poll the cluster state. when this method returns, the cluster is in a pending state. the cluster is usable once it enters a running state.\n\nthe `worker_type` can be either `workers` or `autoscale`. if a `autoscale` is set, then the `min_workers` and `max_workers` must be specified. \n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\nworker = 25\nworker_type = 'workers'\ncluster_name = 'testcluster'\nspark_version = '4.0.x-scala2.11'\ncluster_log_conf = '/dbfs/log/path'\nnode_type_id = 'i3.xlarge'\n\ndb_api.createcluster(worker=worker, worker_type=worker_type, cluster_name=cluster_name, spark_version=spark_version, cluster_log_conf=cluster_log_conf, node_type_id=node_type_id)\n```\n\n#### editcluster(*worker*, *worker_type*, *cluster_name*, *spark_version*, *cluster_log_conf*, *node_type_id*, *driver_node_type_id=none*, *spark_conf=none*, *aws_attributes=none*, *ssh_public_keys=none*, *custom_tags=none*, *init_scripts=none*, *spark_env_vars=none*, *autotermination_minutes=none*, *enable_elastic_disk=none*)\n\nedit an existings clusters configuration.\n\nthe `worker_type` can be either `workers` or `autoscale`. if a `autoscale` is set, then the `min_workers` and `max_workers` must be specified.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\nworker = 35\nworker_type = 'workers'\ncluster_name = 'testcluster'\nspark_version = '4.0.x-scala2.11'\ncluster_log_conf = '/dbfs/new/log/path'\nnode_type_id = 'i5.xlarge'\n\ndb_api.editcluster(worker=worker, worker_type=worker_type, cluster_name=cluster_name, spark_version=spark_version, cluster_log_conf=cluster_log_conf, node_type_id=node_type_id)\n```\n\n#### startcluster(*cluster_id*)\u00a0\nstarts a terminated spark cluster given its id.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ncluster_id = '1202-211320-brick1'\ndb_api.startcluster(cluster_id)\n```\n\n#### restartcluster(*cluster_id*)\nrestarts a spark cluster given its id. if the cluster is not in a running state, nothing will happen.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ncluster_id = '1202-211320-brick1'\ndb_api.restartcluster(cluster_id)\n```\n\n#### resizecluster(*cluster_id*, *worker*, *worker_type*)\nresizes a cluster to have a desired number of workers. this will fail unless the cluster is in a running state.\n\nthe parameter `worker_type` can be one of `workers` or `autoscale`. \n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ncluster_id = '1202-211320-brick1'\nworkers = 30\n\ndb_api.resizecluster(cluster_id, workers, worker_type='workers')\n```\n\n#### terminatecluster(*cluster_id*)\nterminates a spark cluster given its id. the cluster is removed asynchronously. once the termination has completed, the cluster will be in a terminated state. if the cluster is already in a terminating or terminated state, nothing will happen.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ncluster_id = '1202-211320-brick1'\n\ndb_api.terminatecluster(cluster_id)\n```\n\n#### deletecluster(*cluster_id*)\npermanently deletes a spark cluster. if the cluster is running, it is terminated and its resources are asynchronously removed. if the cluster is terminated, then it is immediately removed.\n\nyou cannot perform any action on a permanently deleted cluster and a permanently deleted cluster is no longer returned in the cluster list.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ncluster_id = '1202-211320-brick1'\n\ndb_api.deletecluster(cluster_id)\n```\n\n#### getcluster(*cluster_id*)\nreturns information about all pinned clusters, currently active clusters, up to 70 of the most recently terminated interactive clusters in the past 30 days, and up to 30 of the most recently terminated job clusters in the past 30 days.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ncluster_id = '1202-211320-brick1'\n\ndb_api.getcluster(cluster_id)\n```\n\n\n#### pincluster(*cluster_id*)\npinning a cluster ensures that the cluster is always returned by the list api. pinning a cluster that is already pinned has no effect.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ncluster_id = '1202-211320-brick1'\n\ndb_api.pincluster(cluster_id)\n```\n\n#### unpincluster(*cluster_id*)\nunpinning a cluster will allow the cluster to eventually be removed from the list returned by the list api. unpinning a cluster that is not pinned has no effect.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ncluster_id = '1202-211320-brick1'\n\ndb_api.unpincluster(cluster_id)\n```\n\n#### listclusters()\nretrieves the information for a cluster given its identifier. clusters can be described while they are running, or up to 30 days after they are terminated.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ndb_api.listclusters()\n```\n\n#### listnodetypes()\nreturns a list of supported spark node types. these node types can be used to launch a cluster.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ndb_api.listnodetypes()\n```\n\n#### listzones()\nreturns a list of availability zones where clusters can be created in (ex: us-west-2a). these zones can be used to launch a cluster.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ndb_api.listzones()\n```\n\n#### getsparkversions()\nreturns the list of available spark versions. these versions can be used to launch a cluster.\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ndb_api.getsparkversions()\n```\n\n#### getclusterevents(*cluster_id*, *order='desc'*, *start_time=none*, *end_time=none*, *event_types=none*, *offset=none*, *limit=none*)\nretrieves a list of events about the activity of a cluster. this api is paginated. if there are more events to read, the response includes all the parameters necessary to request the next page of events.\n\n\n\n```python\nurl = 'https://url.for.databricks.net'\ndb_api = clusters(url)\n\ncluster_id = '1202-211320-brick1'\n\ndb_api.getclusterevents(cluster_id)\n```\n\n## jobs api\nthe jobs api allows you to create, edit, and delete jobs via the api. the maximum allowed size of a request to the jobs api is 10mb.\n\n### methods\n1. createjob(*cluster*, *cluster_type*, *task*, *task_type*, *name*, *libraries=none*, *email_notications=none*, *timeout_seconds=none*, *max_retries=none*, *min_retry_interval_millis=none*, *retry_on_timeout=none*,*schedule=none*, *max_concurrent_runs=none*)\n2. listjobs()\n3. deletejob(*job_id*)\n4. batchdelete(*\\*args*)\n5. getjob(*job_id*)\n6. resetjob(*job_id*, *new_settings*)\n7. runjob(*job_id*, *job_type*, *params*)\n8. runssubmit(*run_name*, *cluster*, *task*, *cluster_type*, *task_type*, *libraries=none*, *timeout_seconds=none*)\n9. runslist(*run*, *run_type*, *job_id*, *offset*, *limit*)\n10. runsget(*run_id*)\n11. runsexport(*run_id*, *views_to_export*)\n12. runscancel(*run_id*)\n13. runsgetoutput(*run_id*)\n14. runsdelete(*run_id*)\u00a0\n\n#### createjob(*cluster*, *cluster_type*, *task*, *task_type*, *name*, *libraries=none*, *email_notications=none*, *timeout_seconds=none*, *max_retries=none*, *min_retry_interval_millis=none*, *retry_on_timeout=none*,*schedule=none*, *max_concurrent_runs=none*)\nthe `cluster_type` parameter can be one of `existing` or `new`.\nthe `task_type` parameter must be one of `notebook`, `jar`, `submit`, or `python`.\n\nall other parameters are documented in the databricks rest api.\n\n#### batchdelete(*\\*args*)\ntakes in a comma separated list of job ids to be deleted. this method is a wrapper around the `deletejob` method.\n\n#### runjob(*job_id*, *job_type*, *params*)\nthe `job_type` parameter must be one of `notebook`, `jar`, `submit` or `python`.\n\n#### runssubmit(*run_name*, *cluster*, *task*, *cluster_type*, *task_type*, *libraries=none*, *timeout_seconds=none*)\nthe `cluster_type` parameter can be one of `existing` or `new`.\n\n#### runslist(*run*, *run_type*, *job_id*, *offset*, *limit*)\nthe `run_type` parameter must be one of `completed` or `active`.\t\n\n## dbfs api\nthe dbfs api is a databricks api that makes it simple to interact with various data sources without having to include your credentials every time you read a file. \n\n### methods\n1. addblock(*data*, *handle*)\n2. closestream(*handle*)\n3. createfile(*path*, *overwrite*)\n4. deletefile(*path*, *recursive*)\n5. getstatus(*path*)\n6. listfiles(*path*)\n7. makedirs(*path*)\n8. movefiles(*source_path*, *target_path*)\n9. putfiles(*path*, *overwrite*, *files*, *contents=none*)\n10. readfiles(*path*, *offset*, *length*)\n\n## groups api\nthe groups api allows you to manage groups of users via the api. you must be a databricks administrator to invoke this api.\n\n### methods\n1. addmember(*parent_name*, *name*, *name_type*)\n2. creategroup(*group_name*)\n3. listgroupmembers(*group_name*, *return_type='json'*)\n4. listgroups()\n5. listparents(*name*, *name_type*)\n6. removemember(*name*, *parent_name*, *name_type*)\n7. deletegroup(*group_name*)\n\n#### listgroupmembers(*group_name*, *return_type='json'*)\nthe default `return_type` can be one of `json` or `list`, by default the paramter is set to `json`. this is provide to simplify pulling usernames from the default return time which can be cumbersome.\n\n#### listparents(*name*, *name_type*)\nthe `name_type` parameter must be one of `user` or `group`.\n\n#### removemember(*name*, *parent_name*, *name_type*)\nthe `name_type` parameter must be one of `user` or `group`.\n\n## instance profiles api\nthe instance profiles api allows admins to add, list, and remove instance profiles that users can launch clusters with. regular users can list the instance profiles available to them.\n\n### methods\n1. addprofile(*profile_arn*, *skip_validation=none*)\n2. listprofiles()\n3. removeprofile()\n\n## libraries api\nthe libraries api allows you to install and uninstall libraries and get the status of libraries on a cluster via the api.\n\n### methods\n1. allclusterstatuses(*status*)\n2. clusterstatus(*cluster_id*)\n3. installlibrary(*cluster_id*, *libraries*)\n4. uninstalllibrary(*cluster_id*, *libraries*)\n\n## worspace api\n1. deleteworkspace(*path*, *recursive*)\n2. exportworkspace(*path*, *export_format*, *direct_download*)\n3. getworkspacestatus(*path*)\n4. importworkspace(*path*, *export_format*, *language*, *content*, *overwrite*)\n5. listworkspace(*path*)\n6. mkdirsworkspace(*path*)",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "databricksapi",
  "package_url": "https://pypi.org/project/databricksapi/",
  "project_url": "https://pypi.org/project/databricksapi/",
  "project_urls": {
    "Homepage": "https://github.com/angel-hernandez91/databricks_api"
  },
  "release_url": "https://pypi.org/project/databricksapi/1.1.8/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python databricks api wrapper using requests module",
  "version": "1.1.8",
  "releases": [],
  "developers": [
    "ahernandez0691@gmail.com",
    "angel_hernandez"
  ],
  "kwds": "databricks_token my_databricks_token databricksapi databricks spark_env_vars",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_databricksapi",
  "homepage": "https://github.com/angel-hernandez91/databricks_api",
  "release_count": 14,
  "dependency_ids": [],
  "documentation_summary": "The GitHub repository \"angel-hernandez91/databricks_api\" provides a Python implementation of the Databricks API for structured and programmatic use. It allows users to interact with various Databricks services, including Token, Secrets, Clusters, SCIM (Experimental), Jobs, DBFS, Groups, Instance Profiles, and Libraries APIs. The package requires Python 3.7+ and supports functionalities like creating, listing, and revoking tokens; managing secrets and their permissions; creating and managing clusters; and handling jobs, among others. Users can install the package via pip or clone the repository. The repository is licensed under the MIT license and has garnered 7 stars and 7 forks.",
  "embedding": [
    -0.033662378787994385,
    -0.009701014496386051,
    -0.023421630263328552,
    -0.03619060665369034,
    -0.007897165603935719,
    0.02441587671637535,
    0.0025442081969231367,
    -0.00478659151121974,
    -0.0015650520799681544,
    -0.028250832110643387,
    -0.00992116890847683,
    -0.002270790282636881,
    -0.018038488924503326,
    0.030963705852627754,
    -0.006839002016931772,
    -0.017427736893296242,
    0.02675946056842804,
    -0.027966760098934174,
    0.009104466065764427,
    -0.009516368620097637,
    0.004158084746450186,
    -0.01832256093621254,
    -0.0014851571759209037,
    -0.012513314373791218,
    -0.00884880218654871,
    1.5257703580573434e-06,
    0.006018748041242361,
    -0.012101411819458008,
    0.005670761223882437,
    0.02256941795349121,
    0.014025990851223469,
    -0.006657907273620367,
    -0.027526451274752617,
    0.001011114101856947,
    0.002100347774103284,
    0.0031904689967632294,
    0.0075065684504806995,
    -0.010127120651304722,
    0.007932674139738083,
    0.02533910609781742,
    0.014416588470339775,
    0.00410127080976963,
    -0.0013981604715809226,
    0.009516368620097637,
    -0.026816274970769882,
    0.015283003449440002,
    0.006348980125039816,
    -0.0323556512594223,
    0.004981889855116606,
    0.015567074529826641,
    -0.0006955293356440961,
    0.03420211374759674,
    -0.04082095995545387,
    -0.018833886831998825,
    0.003103472525253892,
    -0.01214402262121439,
    0.01710105687379837,
    0.030992113053798676,
    -0.017512958496809006,
    -0.000895266595762223,
    0.0323556512594223,
    -0.0032987711019814014,
    -0.01987074501812458,
    -0.014643845148384571,
    -0.012385482899844646,
    0.00491087231785059,
    0.015098357573151588,
    0.03542361781001091,
    0.03886087238788605,
    0.0021021231077611446,
    0.04164476320147514,
    -0.0002683136553969234,
    0.005436403211206198,
    0.0003051540697924793,
    0.04780909791588783,
    -0.024756761267781258,
    -0.020808178931474686,
    0.015496056526899338,
    -0.0036645119544118643,
    0.00034199448418803513,
    0.009232297539710999,
    0.017612382769584656,
    0.0009116894216276705,
    0.018564021214842796,
    0.020808178931474686,
    0.02484198287129402,
    -0.03238406032323837,
    0.014324265532195568,
    -0.023052336648106575,
    0.0032827919349074364,
    0.004928626585751772,
    -0.03065122850239277,
    -0.003142532194033265,
    0.0008526559686288238,
    -0.026375964283943176,
    0.044826358556747437,
    0.009353027679026127,
    0.0027199769392609596,
    0.008855904452502728,
    -0.038605209439992905,
    -0.03377600759267807,
    0.030594414100050926,
    -0.028279239311814308,
    -0.024770965799689293,
    -0.03249768912792206,
    -0.009395638480782509,
    -0.002100347774103284,
    -0.0027909947093576193,
    0.03147503361105919,
    0.029046230018138885,
    -0.006373836193233728,
    0.021007029339671135,
    -0.029174061492085457,
    -0.07260847091674805,
    -0.011824443005025387,
    -0.00776933366432786,
    0.01769760437309742,
    -0.008784886449575424,
    -0.0077409264631569386,
    -0.003117675893008709,
    -0.002425253624096513,
    0.021475745365023613,
    0.01323059294372797,
    -0.028279239311814308,
    0.022782471030950546,
    -0.0018118384759873152,
    0.0174703486263752,
    -0.026347557082772255,
    0.00408706720918417,
    -0.003930828534066677,
    -0.005290817003697157,
    0.0035881679505109787,
    0.005674312356859446,
    -0.012577230110764503,
    -0.016603931784629822,
    0.002292095450684428,
    0.021930258721113205,
    -0.0031620620284229517,
    -0.01585114561021328,
    -0.01881968416273594,
    -0.0037461824249476194,
    0.03369078412652016,
    -0.0026897944044321775,
    0.008216745220124722,
    -0.029088839888572693,
    0.04011078178882599,
    0.021049639210104942,
    0.00016911083366721869,
    -0.016831189393997192,
    -0.02261202782392502,
    -0.011959376744925976,
    -0.01108585949987173,
    -0.029543353244662285,
    0.0020932459738105536,
    -0.022498399019241333,
    0.008358780294656754,
    0.0122576504945755,
    0.01627725176513195,
    -0.0036503085866570473,
    0.003717775223776698,
    0.007748028263449669,
    0.037383705377578735,
    -0.006295716855674982,
    -0.021404728293418884,
    0.016518712043762207,
    0.042496975511312485,
    0.004111923277378082,
    -0.034656625241041183,
    -0.027071937918663025,
    0.020680347457528114,
    0.012080106884241104,
    -0.0022690147161483765,
    -0.01171791646629572,
    -0.0160784013569355,
    -0.0019742914009839296,
    0.021078046411275864,
    0.0084368996322155,
    0.008259356021881104,
    -0.029344502836465836,
    -0.0008007243159227073,
    0.007023647893220186,
    0.0036574103869497776,
    0.017030037939548492,
    0.04897378757596016,
    -0.010830195620656013,
    -0.02227114327251911,
    -0.014508911408483982,
    -0.022583620622754097,
    0.022754063829779625,
    0.007293515373021364,
    0.03400326147675514,
    0.03025352954864502,
    -0.01159718632698059,
    -0.04525246098637581,
    -0.5713229775428772,
    -0.025893043726682663,
    0.013784530572593212,
    -0.011973580345511436,
    -0.003380441339686513,
    0.011618491262197495,
    0.011739221401512623,
    0.013784530572593212,
    -0.00802499707788229,
    0.027824725955724716,
    -0.002107449574396014,
    0.024572115391492844,
    -0.021276894956827164,
    0.003016475820913911,
    0.005869610700756311,
    -0.013315814547240734,
    0.02356366440653801,
    -0.01987074501812458,
    -0.019785525277256966,
    -0.008252253755927086,
    -0.012634044513106346,
    0.05255308002233505,
    -0.02171720564365387,
    -0.001142496825195849,
    0.0036147995851933956,
    0.004044456407427788,
    0.017044242471456528,
    -0.008479510433971882,
    0.01722888834774494,
    -0.008507917635142803,
    -0.031617067754268646,
    0.01188125740736723,
    0.03445777669548988,
    -1.3614032468467485e-05,
    0.04567856714129448,
    0.02062353305518627,
    -0.03749733418226242,
    0.056927770376205444,
    0.01901853270828724,
    0.041303880512714386,
    -0.011767628602683544,
    -0.011234995909035206,
    -0.011242098174989223,
    0.0038029965944588184,
    0.034912288188934326,
    0.0128044867888093,
    0.017683401703834534,
    0.0243164524435997,
    -0.014537318609654903,
    -0.003296995535492897,
    0.0018943964969366789,
    0.0008158155251294374,
    0.004019600339233875,
    -0.007811944466084242,
    0.022129107266664505,
    0.0044705625623464584,
    -0.013251897878944874,
    -0.00950926635414362,
    0.02264043502509594,
    -0.0025317801628261805,
    0.011263403110206127,
    0.014352671802043915,
    0.00308039179071784,
    -0.03928697854280472,
    -0.023123355582356453,
    0.009196789003908634,
    -0.011029045097529888,
    -0.018464595079421997,
    0.00037284279824234545,
    -0.028975211083889008,
    0.018166322261095047,
    -0.013436543755233288,
    0.027100345119833946,
    -0.020509904250502586,
    0.046616002917289734,
    0.023109151050448418,
    0.03976989910006523,
    -0.009225196205079556,
    -0.003257935866713524,
    0.02076556906104088,
    0.01602158695459366,
    -0.0066117458045482635,
    -0.01545344665646553,
    -0.03744051977992058,
    0.032014768570661545,
    0.011618491262197495,
    0.010901213623583317,
    -0.021333709359169006,
    0.010311766527593136,
    0.007250904571264982,
    0.01461543794721365,
    0.02184503711760044,
    -0.012847097590565681,
    -0.03752573952078819,
    0.01812371052801609,
    0.015510260127484798,
    0.00045939558185636997,
    -0.010702364146709442,
    -0.012527517974376678,
    -0.012974929064512253,
    0.0006546942167915404,
    -0.0176691971719265,
    -0.008806191384792328,
    0.00792557280510664,
    0.028378663584589958,
    -0.006824798416346312,
    -0.019558267667889595,
    0.004619699902832508,
    0.0010377457365393639,
    -0.004751082509756088,
    -0.012165327556431293,
    -0.027995167300105095,
    -0.029969459399580956,
    0.0071869888342916965,
    -0.013358424417674541,
    -0.01887649856507778,
    0.042070869356393814,
    -0.002306299051269889,
    0.03610538691282272,
    0.009054753929376602,
    -0.0254101250320673,
    0.028591716662049294,
    -0.0034354799427092075,
    0.0022370568476617336,
    0.0025353310629725456,
    0.004456358961760998,
    0.01874866709113121,
    -0.013827141374349594,
    -0.01845039241015911,
    -0.002288544550538063,
    0.006633050739765167,
    0.011007740162312984,
    0.025381717830896378,
    -0.012918115593492985,
    0.042070869356393814,
    0.005546480417251587,
    0.01240678783506155,
    -0.0011735671432688832,
    -0.0018926210468634963,
    -0.020651940256357193,
    -0.002968538785353303,
    -0.0005992116639390588,
    0.0100987134501338,
    -0.00109189678914845,
    -0.013855548575520515,
    -0.009544775821268559,
    -0.021262692287564278,
    0.003055535489693284,
    -0.005326325539499521,
    -0.010808889754116535,
    0.005340529140084982,
    -0.008167033083736897,
    -0.007946877740323544,
    0.018904905766248703,
    0.010169731453061104,
    -0.003934379201382399,
    -0.000814483966678381,
    -0.01749875582754612,
    0.0018642139621078968,
    -0.0007177224033512175,
    -0.011817341670393944,
    0.012790283188223839,
    -0.005851856432855129,
    -0.004818549379706383,
    -0.032440874725580215,
    -0.021404728293418884,
    -0.0103969881311059,
    0.005525175016373396,
    0.005837652832269669,
    -0.059825289994478226,
    -0.007989488542079926,
    0.00476173497736454,
    -0.001470953575335443,
    -0.008742275647819042,
    -0.001312939333729446,
    -0.010844399221241474,
    -0.0325545035302639,
    0.024699946865439415,
    -0.024898797273635864,
    0.009992186911404133,
    -0.006512321066111326,
    0.022825080901384354,
    -0.015240393579006195,
    -0.010737872682511806,
    0.05329166352748871,
    0.0008477735100314021,
    0.025466937571763992,
    0.005727575626224279,
    -0.035281579941511154,
    0.015013136900961399,
    -0.0251118503510952,
    0.011135571636259556,
    -0.006423548795282841,
    0.01941623166203499,
    0.005823449231684208,
    0.02518286742269993,
    0.030168307945132256,
    -0.014686455018818378,
    -0.006604644004255533,
    0.010325970128178596,
    0.023222779855132103,
    -0.00736453291028738,
    0.0031851427629590034,
    0.006089765578508377,
    0.003199346363544464,
    -0.013827141374349594,
    0.017328312620520592,
    -0.0323556512594223,
    0.034514591097831726,
    -0.015169375576078892,
    0.025381717830896378,
    0.006444854196161032,
    -0.005947730503976345,
    0.017385127022862434,
    0.01772601157426834,
    -0.017967471852898598,
    -0.0016573750181123614,
    0.024131806567311287,
    -0.03008308820426464,
    0.008380086161196232,
    -0.011859951540827751,
    0.029543353244662285,
    -0.0006782187847420573,
    -0.014508911408483982,
    -0.014281654730439186,
    0.005681414157152176,
    0.017583975568413734,
    0.014956322498619556,
    -0.006505219265818596,
    -0.025978265330195427,
    0.0005153220263309777,
    0.011462252587080002,
    0.010531920939683914,
    -0.03459981083869934,
    0.030026273801922798,
    -0.01722888834774494,
    0.029017822816967964,
    -0.01815211772918701,
    0.03246928006410599,
    -0.04468432068824768,
    0.009551877155900002,
    0.005784389562904835,
    0.055677857249975204,
    -0.02059512585401535,
    0.02613450400531292,
    0.0025761660654097795,
    0.012506213039159775,
    0.008472409099340439,
    -0.025197071954607964,
    0.007126623764634132,
    -0.023379018530249596,
    0.003937930334359407,
    0.0036236769519746304,
    0.01904693990945816,
    0.0021252038422971964,
    6.824354932177812e-05,
    0.007119521964341402,
    0.017342517152428627,
    0.02518286742269993,
    0.005773737095296383,
    0.024146009236574173,
    0.017839640378952026,
    0.025807823985815048,
    0.003323627170175314,
    0.0347418487071991,
    0.0021021231077611446,
    -0.03357715532183647,
    -0.011725017800927162,
    -0.012207938358187675,
    -0.01779702864587307,
    0.007229599170386791,
    -0.03153184801340103,
    -0.020453089848160744,
    -0.03258290886878967,
    0.03874724358320236,
    -0.012499110773205757,
    0.008791987784206867,
    0.04627511650323868,
    0.002874440513551235,
    0.005525175016373396,
    -0.012776079587638378,
    -0.033236272633075714,
    0.016234640032052994,
    0.00967260729521513,
    0.004143881145864725,
    -0.01799587905406952,
    -0.013670902699232101,
    0.012037496082484722,
    0.006057807710021734,
    0.03403167054057121,
    -0.018081100657582283,
    0.008429798297584057,
    0.0061075203120708466,
    0.003930828534066677,
    -0.019714506343007088,
    -0.015638092532753944,
    0.035309989005327225,
    -0.023379018530249596,
    -0.002924152882769704,
    0.014800083823502064,
    0.017555570229887962,
    0.010823093354701996,
    -0.0012880830327048898,
    0.015354021452367306,
    0.05493927374482155,
    0.015254596248269081,
    0.01545344665646553,
    -0.0019210281316190958,
    -0.019487250596284866,
    -0.04363325983285904,
    -0.0075988913886249065,
    0.00861444417387247,
    -0.005202044732868671,
    0.01944463886320591,
    0.02653220295906067,
    0.01174632366746664,
    0.011448048986494541,
    -0.027526451274752617,
    0.010879907757043839,
    0.01815211772918701,
    -0.014856897294521332,
    -0.020481497049331665,
    -0.011199487373232841,
    0.021134860813617706,
    0.029344502836465836,
    0.018279949203133583,
    0.008515018969774246,
    0.005052907392382622,
    -0.018507206812500954,
    0.009402739815413952,
    -0.031588662415742874,
    0.020112205296754837,
    -0.025822026655077934,
    -0.006185639649629593,
    -0.025381717830896378,
    -0.002617001300677657,
    -0.010666854679584503,
    0.011462252587080002,
    0.012989132665097713,
    0.007066258694976568,
    -0.03795184567570686,
    0.002519352128729224,
    0.012186633422970772,
    -0.020737161859869957,
    0.004566436633467674,
    0.0012632268480956554,
    0.008791987784206867,
    -0.0012516864808276296,
    0.03908812999725342,
    0.0076699089258909225,
    0.010574531741440296,
    0.005411546677350998,
    0.003613024251535535,
    -0.02316596545279026,
    -0.00736453291028738,
    0.014430792070925236,
    0.015084153972566128,
    0.028066186234354973,
    -0.011554575525224209,
    0.025523751974105835,
    0.025893043726682663,
    0.016760172322392464,
    0.005752431694418192,
    0.01849300228059292,
    0.023634683340787888,
    0.028691140934824944,
    -0.0014283430064097047,
    0.005400894209742546,
    -0.004996093455702066,
    -0.013386831618845463,
    -0.0010963353561237454,
    0.013301610946655273,
    -0.010162629187107086,
    -0.004268162418156862,
    -0.005155883263796568,
    0.0004935728502459824,
    -0.04505361244082451,
    -0.033236272633075714,
    0.020126409828662872,
    0.016731765121221542,
    0.012335769832134247,
    -0.02468574419617653,
    0.013486256822943687,
    -0.03391804173588753,
    -0.013976278714835644,
    -0.008578935638070107,
    -0.0003160286578349769,
    -0.007048504427075386,
    -0.011703712865710258,
    -0.006306369788944721,
    -0.015780126675963402,
    0.035934943705797195,
    -0.03371919319033623,
    0.006164334248751402,
    0.016234640032052994,
    -0.006451955996453762,
    -0.007449754048138857,
    0.0065265242010355,
    0.029088839888572693,
    0.018734462559223175,
    -0.012626942247152328,
    -0.007385838311165571,
    0.022384772077202797,
    0.0174703486263752,
    -0.005841203965246677,
    -0.04894538223743439,
    0.003735529724508524,
    -0.025921450927853584,
    0.0030981460586190224,
    -0.028918396681547165,
    0.02296711690723896,
    0.0023169517517089844,
    0.012136920355260372,
    0.031134149059653282,
    -0.011760527268052101,
    0.010752076283097267,
    -0.00724025210365653,
    -0.0010226545855402946,
    0.024515300989151,
    0.017214683815836906,
    0.014501809142529964,
    0.004584190901368856,
    0.0128044867888093,
    0.028094591572880745,
    -0.01092251855880022,
    -0.014899508096277714,
    -0.015510260127484798,
    0.011064553633332253,
    0.023705700412392616,
    0.015496056526899338,
    0.019430436193943024,
    -0.0013706411700695753,
    -0.011554575525224209,
    -0.0030661881901323795,
    0.022484196349978447,
    -0.0076699089258909225,
    -0.008621545508503914,
    -0.013202185742557049,
    0.0147148622199893,
    -0.013862649910151958,
    -0.019387826323509216,
    0.012882606126368046,
    -0.02398977056145668,
    -0.00777643546462059,
    0.0147148622199893,
    -0.03602016344666481,
    0.01051061600446701,
    0.06363184005022049,
    -0.018706055358052254,
    0.018478799611330032,
    0.021873444318771362,
    -0.014856897294521332,
    -0.02379092201590538,
    -0.004921524785459042,
    0.03724166750907898,
    0.0017346066888421774,
    -0.009303315542638302,
    -0.03499751165509224,
    -0.008167033083736897,
    0.0064057945273816586,
    -0.012492009438574314,
    0.013415238820016384,
    -0.00876358151435852,
    -0.004303670953959227,
    -0.025921450927853584,
    -0.00475463317707181,
    0.003028903855010867,
    -0.01264114584773779,
    -0.009054753929376602,
    -0.02523968182504177,
    -0.004864710848778486,
    -0.0017390453722327948,
    -0.0010022369679063559,
    0.033889636397361755,
    0.00368226645514369,
    -0.00021460653806570917,
    -0.024074992164969444,
    -0.013109862804412842,
    -0.03090689331293106,
    0.014359774067997932,
    0.0031585111282765865,
    0.0003648533020168543,
    0.03087848611176014,
    0.028165610507130623,
    0.021276894956827164,
    -0.004097719676792622,
    0.013699309900403023,
    0.015368225052952766,
    0.0027732402086257935,
    0.0011735671432688832,
    -0.03886087238788605,
    0.014345570467412472,
    -0.013422341085970402,
    0.0008584261522628367,
    -0.014089906588196754,
    0.0019370070658624172,
    0.001109651173464954,
    -0.02353525720536709,
    -0.007591789588332176,
    0.007087564095854759,
    0.002846033312380314,
    0.002670264570042491,
    -0.02237056754529476,
    -0.03690078482031822,
    0.005773737095296383,
    -0.00353845558129251,
    -0.0014540868578478694,
    0.009665505960583687,
    -0.04363325983285904,
    -0.010226544924080372,
    0.01038278453052044,
    -0.0062921661883592606,
    0.028719548135995865,
    0.007044953294098377,
    0.021134860813617706,
    0.005557132884860039,
    0.030566006898880005,
    0.009232297539710999,
    0.014097008854150772,
    -0.014402384869754314,
    0.015808533877134323,
    -0.02346424013376236,
    -0.005681414157152176,
    -0.00599744264036417,
    -0.005052907392382622,
    0.011348624713718891,
    0.004868261516094208,
    0.001223279512487352,
    -0.000199959147721529,
    0.018635038286447525,
    0.028265034779906273,
    -0.01627725176513195,
    0.013507561758160591,
    -0.04891697317361832,
    -0.02965698204934597,
    -0.02086499333381653,
    -0.02695830911397934,
    0.0004394218558445573,
    -0.009473757818341255,
    -0.00710886949673295,
    0.0204957015812397,
    0.02606348693370819,
    -0.004825651179999113,
    -0.012896809726953506,
    0.032242026180028915,
    -0.003293444635346532,
    0.03482706844806671,
    0.01555287092924118,
    0.026219725608825684,
    0.03070804290473461,
    0.01270506251603365,
    0.007456855848431587,
    -0.015524463728070259,
    -0.035281579941511154,
    -0.025580566376447678,
    0.01812371052801609,
    0.029571760445833206,
    -0.02359207160770893,
    -0.016334066167473793,
    -0.002853135112673044,
    -0.010141324251890182,
    -0.013599884696304798,
    -0.04346281662583351,
    0.023606276139616966,
    0.0008899402455426753,
    0.014587030746042728,
    -0.023009726777672768,
    0.0015117888106033206,
    -0.01819472759962082,
    0.021972868591547012,
    -0.02790994569659233,
    0.00013537744234781712,
    0.012286057695746422,
    -0.04036644846200943,
    -0.004832752980291843,
    0.009977983310818672,
    0.021873444318771362,
    0.022910302504897118,
    -0.003795894794166088,
    0.013550172559916973,
    -0.01835096813738346,
    -0.007435550447553396,
    -0.044144585728645325,
    -0.021404728293418884,
    0.013678004033863544,
    0.010808889754116535,
    -0.020183224231004715,
    -0.010737872682511806,
    0.044826358556747437,
    -0.015581278130412102,
    -0.012250549159944057,
    0.01349335815757513,
    0.008117320016026497,
    0.040678925812244415,
    -0.013287407346069813,
    -0.005354732740670443,
    -0.027668487280607224,
    -0.025026628747582436,
    0.00013215946091804653,
    0.01504154410213232,
    -0.00654072780162096,
    0.007982386276125908,
    -0.01852140948176384,
    0.005798593163490295,
    0.015481852926313877,
    0.010283359326422215,
    0.0010998862562701106,
    -0.017214683815836906,
    -0.009679709561169147,
    0.007811944466084242,
    0.005699168425053358,
    0.013599884696304798,
    0.014814287424087524,
    -0.033463530242443085,
    -0.027128752321004868,
    -0.01214402262121439,
    -0.03028193674981594,
    0.0038420562632381916,
    0.008621545508503914,
    0.020382072776556015,
    -0.002169589977711439,
    0.04420140013098717,
    -0.01404019445180893,
    0.006221148185431957,
    -0.003165612928569317,
    0.0076912143267691135,
    -0.019203178584575653,
    -0.0037071227561682463,
    -0.008799090050160885,
    -0.0029348053503781557,
    0.01941623166203499,
    -0.001306725200265646,
    -0.05107591301202774,
    -0.0005623712204396725,
    -0.007968183606863022,
    0.02366308867931366,
    0.02725658379495144,
    -0.006700517609715462,
    0.011540371924638748,
    0.0022370568476617336,
    0.019913356751203537,
    -0.011930969543755054,
    0.0021536110434681177,
    0.013926566578447819,
    0.00967260729521513,
    -0.0016298556001856923,
    0.006913570687174797,
    -0.005411546677350998,
    0.0022122005466371775,
    -0.01624884456396103,
    0.018166322261095047,
    0.0069597321562469006,
    -0.022952912375330925,
    -0.03812228888273239,
    -0.008578935638070107,
    -0.006849654950201511,
    -0.010787584818899632,
    0.03218521177768707,
    -0.005763084162026644,
    -0.018251542001962662,
    -0.026205522939562798,
    0.06329095363616943,
    -0.00011240766616538167,
    -4.319317304180004e-05,
    0.021873444318771362,
    0.022327957674860954,
    0.03332149237394333,
    0.017612382769584656,
    -0.01067395694553852,
    -0.01779702864587307,
    -0.029117247089743614,
    0.006224699318408966,
    -0.028790565207600594,
    -0.028662733733654022,
    0.00434983242303133,
    0.005926425103098154,
    0.021731408312916756,
    -0.0294297244399786,
    -0.013145371340215206,
    -0.019387826323509216,
    -0.02543853223323822,
    0.008230948820710182,
    -0.024046584963798523,
    0.01974291354417801,
    0.013202185742557049,
    0.018180524930357933,
    0.014182229526340961,
    -0.01156877912580967,
    0.01957247219979763,
    0.02675946056842804,
    -0.029969459399580956,
    0.014530216343700886,
    0.018990125507116318,
    -0.005681414157152176,
    0.010439598001539707,
    -0.011796035803854465,
    -0.035934943705797195,
    0.002638306701555848,
    -0.004680064972490072,
    0.012676655314862728,
    0.013500460423529148,
    0.0417868010699749,
    -0.0106455497443676,
    -0.03173069655895233,
    -0.008138625882565975,
    0.01198068168014288,
    -0.021305302157998085,
    0.032440874725580215,
    -0.014771676622331142,
    -0.036503084003925323,
    -0.015396632254123688,
    -0.00011862171231769025,
    0.013983380049467087,
    0.005908670835196972,
    0.0010270931525155902,
    0.01931680738925934,
    -0.02224273607134819,
    0.03187273442745209,
    -0.01835096813738346,
    -0.012896809726953506,
    -0.010681058280169964,
    0.011561677791178226,
    0.019487250596284866,
    0.011135571636259556,
    0.01602158695459366,
    0.0341452993452549,
    -0.007655705325305462,
    -0.014743269421160221,
    -0.0066614579409360886,
    0.0212910994887352,
    -0.02633335441350937,
    -0.0011380582582205534,
    0.01311696507036686,
    -0.02303813397884369,
    -0.010297562927007675,
    -0.009772032499313354,
    0.026077689602971077,
    -0.02181662991642952,
    0.027895743027329445,
    -0.023648886010050774,
    -0.009090262465178967,
    -0.010020594112575054,
    -0.0007527873385697603,
    -0.015211986377835274,
    -0.024728354066610336,
    -0.007968183606863022,
    0.01130601391196251,
    0.012797385454177856,
    0.0001923025556607172,
    -0.007968183606863022,
    -0.015907960012555122,
    -0.021774020045995712,
    0.006863858550786972,
    -0.017782825976610184,
    -0.006313471123576164,
    -0.052609894424676895,
    0.01364249549806118,
    0.022185921669006348,
    -0.01901853270828724,
    -0.0011602513259276748,
    0.19430436193943024,
    0.0025921452324837446,
    0.011554575525224209,
    -0.0017940839752554893,
    0.007726723328232765,
    0.005628150887787342,
    0.008884311653673649,
    0.013926566578447819,
    -0.018265746533870697,
    0.017868047580122948,
    -0.001265002298168838,
    -0.013770326972007751,
    0.012605637311935425,
    -0.0036005962174385786,
    0.010560328140854836,
    0.0022370568476617336,
    -0.0319579541683197,
    -0.026077689602971077,
    -0.01148355845361948,
    -0.013883955776691437,
    -0.027725299820303917,
    -0.01845039241015911,
    -0.004594843834638596,
    -0.0022814427502453327,
    0.02570839785039425,
    -0.01752716302871704,
    -0.026574814692139626,
    -0.021248487755656242,
    0.026503795757889748,
    0.03516795113682747,
    -0.014658047817647457,
    0.017740216106176376,
    -0.0062779625877738,
    -0.021972868591547012,
    -0.029117247089743614,
    -0.020339462906122208,
    0.01543924305588007,
    -0.023748310282826424,
    0.002876215847209096,
    0.010304664261639118,
    -0.0073716347105801105,
    -0.029074637219309807,
    -0.012428092770278454,
    -0.04195724427700043,
    -0.005397343542426825,
    0.0007962856907397509,
    -0.012875504791736603,
    -0.002780342008918524,
    0.019955966621637344,
    0.04488316923379898,
    -0.002332930685952306,
    -0.02445848658680916,
    0.02504083327949047,
    0.01171791646629572,
    0.006246004719287157,
    -0.02329379692673683,
    0.007378736510872841,
    0.005518073216080666,
    -0.0010395211866125464,
    0.010041899047791958,
    -0.02339322306215763,
    0.032440874725580215,
    -0.020225834101438522,
    0.026816274970769882,
    -0.03888927772641182,
    -0.009857253171503544,
    -0.02109224908053875,
    0.03795184567570686,
    0.006991690024733543,
    -0.001154924975708127,
    -0.003020026721060276,
    -0.006093316711485386,
    -0.02982742339372635,
    -0.026404371485114098,
    -0.006398692727088928,
    -0.01174632366746664,
    0.04925785958766937,
    0.01881968416273594,
    0.03638945519924164,
    0.013088557869195938,
    0.008500815369188786,
    0.01174632366746664,
    0.008983735926449299,
    0.0028833176475018263,
    -0.007549178786575794,
    -0.0075349751859903336,
    0.02086499333381653,
    -0.018180524930357933,
    -0.019984373822808266,
    0.006366734392940998,
    -0.01512676477432251,
    -0.033207863569259644,
    -0.008962430991232395,
    0.0012809813488274813,
    -0.00451317336410284,
    0.00927490834146738,
    0.01049641240388155,
    0.0246147271245718,
    -0.042070869356393814,
    -0.001999147469177842,
    -0.02102123200893402,
    0.050110071897506714,
    0.007613094989210367,
    0.0021465092431753874,
    -0.027597468346357346,
    -0.006483913864940405,
    -0.015638092532753944,
    0.013663800433278084,
    0.012683756649494171,
    0.000599655497353524,
    -0.01792486198246479,
    -0.04008237645030022,
    -0.004850507248193026,
    -0.005450606811791658,
    0.003991193138062954,
    0.001530430861748755,
    0.006604644004255533,
    -0.004818549379706383,
    -0.0065904404036700726,
    0.0036964700557291508,
    -0.009800438769161701,
    -0.0043782396242022514,
    0.019188975915312767,
    -0.025679990649223328,
    0.00027941016014665365,
    -0.006913570687174797,
    -0.025793619453907013,
    0.0009383210563100874,
    0.02102123200893402,
    -0.03187273442745209,
    0.011668204329907894,
    -0.018833886831998825,
    0.008806191384792328,
    0.012733468785881996,
    -0.00751367025077343,
    -0.02639016881585121,
    -0.025850433856248856,
    -0.02082238160073757,
    0.015368225052952766,
    0.0064057945273816586,
    -0.00909736379981041,
    0.012058801017701626,
    0.005134577862918377,
    -0.0013839569874107838,
    0.0147148622199893,
    -0.03687237575650215,
    0.02656061016023159,
    -0.004016049671918154,
    0.003973438870161772,
    0.007833249866962433,
    -0.021276894956827164,
    -0.0005330764106474817,
    0.0018216033931821585,
    -0.03252609446644783,
    0.019714506343007088,
    -0.0120090888813138,
    -0.015354021452367306,
    -0.008259356021881104,
    -0.004406646825373173,
    0.0125559251755476,
    -0.030338751152157784,
    -0.005539378616958857,
    -0.008706767112016678,
    -0.01974291354417801,
    -0.01654711924493313,
    -0.029600167647004128,
    -0.18021444976329803,
    0.03647467866539955,
    0.031361404806375504,
    -0.041900429874658585,
    0.017385127022862434,
    0.000614746764767915,
    0.008507917635142803,
    -0.0014460973907262087,
    0.01904693990945816,
    -0.011739221401512623,
    0.008067607879638672,
    -0.014104110188782215,
    -0.0013644270366057754,
    -0.023904548957943916,
    0.005141679663211107,
    0.01592216268181801,
    0.0317591056227684,
    -0.014267451129853725,
    0.05113272741436958,
    0.00668986514210701,
    0.021433133631944656,
    -0.01627725176513195,
    -0.001277430448681116,
    0.01674596779048443,
    -0.013869752176105976,
    -0.035508837550878525,
    -0.03610538691282272,
    0.004978339187800884,
    -0.009068957529962063,
    -0.015496056526899338,
    -0.012222141958773136,
    0.01159718632698059,
    0.02982742339372635,
    0.004275264218449593,
    0.030537599697709084,
    0.01845039241015911,
    0.011092960834503174,
    -0.024671539664268494,
    -0.024302247911691666,
    0.025324903428554535,
    0.01617782562971115,
    0.02600667253136635,
    0.0070307496935129166,
    -0.02668844163417816,
    0.005052907392382622,
    0.011923867277801037,
    0.022654637694358826,
    -0.01927419751882553,
    0.0033520343713462353,
    -0.028094591572880745,
    0.02082238160073757,
    -0.0036538594868034124,
    -0.016035791486501694,
    -0.014828491024672985,
    0.005109721794724464,
    0.030764857307076454,
    -0.005212697200477123,
    0.02283928357064724,
    0.011632694862782955,
    -0.015425039455294609,
    0.007254455704241991,
    -0.004928626585751772,
    -0.006750230211764574,
    -0.02246999181807041,
    -0.013472053222358227,
    -0.006331225857138634,
    -0.01944463886320591,
    0.016859596595168114,
    -0.005759533494710922,
    0.017711808905005455,
    0.010858602821826935,
    0.02514025755226612,
    -0.017868047580122948,
    0.010681058280169964,
    0.010752076283097267,
    0.0025282292626798153,
    -0.028392866253852844,
    0.009466656483709812,
    0.02234216034412384,
    -0.016206232830882072,
    -0.008486611768603325,
    0.049030601978302,
    -0.01565229520201683,
    -0.00450607156381011,
    0.006522973533719778,
    0.03144662827253342,
    0.012712163850665092,
    -0.03562246635556221,
    -0.003050209255889058,
    -0.013102761469781399,
    0.004236204549670219,
    -0.003057310823351145,
    0.0098501518368721,
    -0.01872025988996029,
    -0.015737516805529594,
    0.007261557504534721,
    0.012903911992907524,
    0.0033697886392474174,
    0.02164618670940399,
    -0.02523968182504177,
    -0.0021553863771259785,
    0.053036000579595566,
    -0.046019453555345535,
    0.009218093939125538,
    0.021035434678196907,
    0.01957247219979763,
    -0.04596263915300369,
    0.016461897641420364,
    0.003261486766859889,
    -0.0038704632315784693,
    0.005915772169828415,
    0.01894751563668251,
    0.03624742105603218,
    0.024373266845941544,
    -0.012662451714277267,
    0.020609328523278236,
    -0.0030324547551572323,
    0.0015588379465043545,
    0.029997866600751877,
    0.005688515957444906,
    0.02543853223323822,
    0.00861444417387247,
    -0.023407425731420517,
    0.007897165603935719,
    -0.00999928917735815,
    -0.028975211083889008,
    -0.08970952779054642,
    -0.04775228351354599,
    0.012108514085412025,
    0.02086499333381653,
    -0.015197782777249813,
    -0.0036094733513891697,
    0.005518073216080666,
    0.009218093939125538,
    -0.0056956177577376366,
    -0.008522121235728264,
    0.007953980006277561,
    -0.00341417477466166,
    0.010411190800368786,
    -0.001026205369271338,
    -0.009452452883124352,
    -0.025395920500159264,
    -0.036531493067741394,
    0.0032756903674453497,
    -0.002485618693754077,
    0.03167388215661049,
    0.020836586132645607,
    -0.007211844902485609,
    -0.01644769310951233,
    0.010269155725836754,
    -0.008905616588890553,
    -0.0037852420937269926,
    -0.02435906231403351,
    0.024302247911691666,
    0.016987428069114685,
    0.006018748041242361,
    -0.01107165589928627,
    -0.014423689804971218,
    -0.00833747535943985,
    0.013138270005583763,
    0.001100773923099041,
    0.015467649325728416,
    -0.046019453555345535,
    -0.030764857307076454,
    0.022413179278373718,
    -0.041303880512714386,
    0.013635394163429737,
    0.0017017610371112823,
    0.01448050420731306,
    -0.0073716347105801105,
    -0.018066896125674248,
    0.015226189978420734,
    -0.00640934519469738,
    -0.001703536487184465,
    0.01627725176513195,
    -0.007343227509409189,
    -0.03678715601563454,
    -0.01504154410213232,
    -0.012016191147267818,
    -0.0036893682554364204,
    0.019359419122338295,
    0.01188125740736723,
    0.016717560589313507,
    0.0014123640721663833,
    -0.001262339181266725,
    -0.02326538972556591,
    0.014260348863899708,
    -0.00019685212464537472,
    -0.001423016656190157,
    0.007705417927354574,
    -0.0006839889683760703,
    -0.0009498614235781133,
    -0.017868047580122948,
    -0.005816347431391478,
    -0.000925005238968879,
    -0.015339817851781845,
    -0.021802427247166634,
    0.010972230695188046,
    -0.043974146246910095,
    -0.013706411235034466,
    -0.0016076626488938928,
    -0.01462964154779911,
    0.001482493942603469,
    -0.019757118076086044,
    0.010780483484268188,
    0.014047295786440372,
    -0.014025990851223469,
    0.001977842301130295,
    -0.025069238618016243,
    -0.017654994502663612,
    0.024998221546411514,
    0.009487961418926716,
    0.013195084407925606,
    -0.00911156740039587,
    0.014444994740188122,
    -0.06505218893289566,
    0.02425963804125786,
    0.00010918967745965347,
    0.018464595079421997,
    -0.01964348927140236,
    -0.024174416437745094,
    -0.00231517618522048,
    -0.014970526099205017,
    0.002521127462387085,
    -0.0158795528113842,
    0.011625593528151512,
    -0.02464313432574272,
    0.0008118207915686071,
    -0.08987996727228165,
    0.021532559767365456,
    0.012697960250079632,
    -0.009466656483709812,
    0.0339464470744133,
    -0.027966760098934174,
    0.0022157514467835426,
    -0.012953624129295349,
    0.010340173728764057,
    0.020183224231004715,
    -0.020211629569530487,
    -0.01947304606437683,
    -0.004140330478549004,
    -0.008713868446648121,
    -0.003142532194033265,
    0.00023480219533666968,
    0.062097854912281036,
    -0.018464595079421997,
    0.031617067754268646,
    -0.0018216033931821585,
    -0.005070662125945091,
    0.01684539206326008,
    0.042525384575128555,
    -0.002968538785353303,
    -0.035111140459775925,
    -0.0031247776933014393,
    -0.0031673882622271776,
    0.04113343730568886,
    -0.001020879135467112,
    -0.03866202384233475,
    -0.003795894794166088,
    0.002553085330873728,
    -0.009054753929376602,
    0.009864355437457561,
    -0.005074212793260813,
    0.0016520486678928137,
    0.017583975568413734,
    0.0065904404036700726,
    0.024984018877148628,
    0.024444283917546272,
    -0.038406357169151306,
    -0.019785525277256966,
    0.01349335815757513,
    -0.01283289398998022,
    -0.009551877155900002,
    -0.027469636872410774,
    0.010205239988863468,
    0.0035792908165603876,
    0.011135571636259556,
    -0.006579787470400333,
    0.01891910843551159,
    0.012996234931051731,
    -0.028591716662049294,
    -0.01977132074534893,
    0.00992116890847683,
    -0.026276540011167526,
    0.03763936832547188,
    -0.010077408514916897,
    -0.030395565554499626,
    -0.007733824662864208,
    0.03445777669548988,
    0.011540371924638748,
    0.007435550447553396,
    -0.010460903868079185,
    0.001721290871500969,
    -0.0026418576017022133,
    -0.034514591097831726,
    -0.012413890101015568,
    0.010411190800368786,
    -0.007833249866962433,
    -0.012023292481899261,
    -0.03690078482031822,
    0.018734462559223175,
    0.014842694625258446,
    0.022626230493187904,
    -0.020012781023979187,
    -0.004729777108877897,
    -0.007613094989210367,
    -0.028818972408771515,
    0.02900361828505993,
    0.01680278219282627,
    -0.025992469862103462,
    -0.0142177389934659,
    0.00611462164670229,
    0.041872020810842514,
    0.00479369331151247,
    -0.005177188664674759,
    -0.011142672970890999,
    0.005827000364661217,
    -0.0039024213328957558,
    -0.01634826883673668,
    0.002709324238821864,
    0.0028034227434545755,
    0.022626230493187904,
    0.009722319431602955,
    0.015425039455294609,
    -0.01174632366746664,
    -0.01722888834774494,
    0.026248132809996605,
    0.015595481730997562,
    0.013663800433278084,
    -0.03548043221235275,
    0.022299550473690033,
    -0.007137276232242584,
    -0.02518286742269993,
    -0.0256089735776186,
    0.011107164435088634,
    -0.014004685916006565,
    -0.002432355424389243,
    0.004665861371904612,
    0.001067928271368146,
    -0.019586674869060516,
    -0.003494069678708911,
    0.015084153972566128,
    -0.017839640378952026,
    0.0007643277058377862,
    0.012378380633890629,
    0.0021784671116620302,
    -0.01462964154779911,
    0.008294864557683468,
    0.0016334065003320575,
    0.006721823010593653,
    0.021106453612446785,
    -0.027753707021474838,
    0.03897450119256973,
    0.034287333488464355,
    0.014537318609654903,
    -0.005706270225346088,
    0.011426744051277637,
    0.006657907273620367,
    -0.005755982827395201,
    -0.0026205522008240223,
    -0.017583975568413734,
    -0.03312264382839203,
    -0.00037284279824234545,
    -0.004527376964688301,
    -0.035508837550878525,
    -0.024998221546411514,
    -0.00376038602553308,
    0.09465235471725464,
    0.0031070231925696135,
    -0.00992116890847683,
    0.015283003449440002,
    -0.013372628018260002,
    0.0100987134501338,
    0.028662733733654022,
    0.0043782396242022514,
    -0.007250904571264982,
    -0.01079468708485365,
    0.0012339320965111256,
    -0.02441587671637535,
    -0.012896809726953506,
    -0.0284354779869318,
    -0.00299517042003572,
    0.004772387910634279,
    -0.028719548135995865,
    0.013095659203827381,
    0.019714506343007088,
    -0.005024500656872988,
    0.014544419944286346,
    0.01832256093621254,
    0.008713868446648121,
    0.007286413572728634,
    -0.03951423615217209,
    0.010041899047791958,
    0.013472053222358227,
    0.0015668274136260152,
    -0.0036094733513891697,
    -0.039656270295381546,
    0.03025352954864502,
    0.008983735926449299,
    -0.0199985783547163,
    -0.0068461038172245026,
    -0.003051984589546919,
    0.001942333416081965,
    -0.027270788326859474,
    -0.026177115738391876,
    -0.00045495698577724397,
    -0.007272209972143173,
    -0.009743625298142433,
    -0.009928271174430847,
    -0.011263403110206127,
    -0.03192954510450363,
    0.033264677971601486,
    -0.0005747993127442896,
    -0.00792557280510664,
    -0.014984729699790478,
    -0.02214331179857254
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8"
  ],
  "description": "### this repository is no longer maintained in favour of official apache atlas' python client: <https://pypi.org/project/apache-atlas/>\n\n\napache atlas client in python\n-----------------------------\n\n[![image](https://img.shields.io/pypi/v/pyatlasclient.svg)](https://pypi.python.org/pypi/pyatlasclient) [![image](https://img.shields.io/travis/verdan/pyatlasclient.svg)](https://travis-ci.org/verdan/pyatlasclient) [![image](https://coveralls.io/repos/github/verdan/pyatlasclient/badge.svg?branch=master)](https://coveralls.io/github/verdan/pyatlasclient?branch=master) [![documentation status](https://readthedocs.org/projects/pyatlasclient/badge/?version=latest)](https://pyatlasclient.readthedocs.io/en/latest/?badge=latest) [![updates](https://pyup.io/repos/github/verdan/pyatlasclient/shield.svg)](https://pyup.io/repos/github/verdan/pyatlasclient/)\n\napache atlas client in python. only compatible with apache atlas rest\napi **v2**.\n\n*based on the awesome work done by poullet in atlasclient*\n\n-   free software: apache software license 2.0\n-   documentation: <https://pyatlasclient.readthedocs.io>\n\n### get started\n\n```python\n    from atlasclient.client import atlas\n    client = atlas('<atlas.host>', port=21000, username='admin', password='admin')\n    client.entity_guid(\"<guid>\").status\n    params = {'typename': 'dataset', 'attrname': 'name', 'attrvalue': 'data', 'offset': '1', 'limit':'10'}\n    search_results = client.search_attribute(**params) \n    for s in search_results:\n        for e in s.entities:\n            print(e.name)\n            print(e.guid)\n```\n\n### features\n\n-   lazy loading: requests are only performed when data are required and\n    not yet available\n-   leverages python\\'s data classes for glossary.\n-   resource object relationships: rest api from sub-resources are done\n    transparently for the user, for instance the user does not have to\n    know that it needs to trigger a different rest request for getting\n    the classifications of a specific entity.\n\n### todo features\n\n-   allow multiprocessing\n-   implement caching\n-   apply data classes to all entity types. for now only glossary\n    endpoints are using it.\n\n### credits\n\nthis package was created with\n[cookiecutter](https://github.com/audreyr/cookiecutter) and the\n[audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage)\nproject template.\n\n\n",
  "docs_url": null,
  "keywords": "atlasclient,pyatlasclient,apache atlas,atlas",
  "license": "apache software license 2.0",
  "name": "pyatlasclient",
  "package_url": "https://pypi.org/project/pyatlasclient/",
  "project_url": "https://pypi.org/project/pyatlasclient/",
  "project_urls": {
    "Homepage": "https://github.com/verdan/pyatlasclient"
  },
  "release_url": "https://pypi.org/project/pyatlasclient/1.2.0/",
  "requires_dist": [
    "six (>=1.11.0)",
    "Click (>=6.0)",
    "requests (>=2.18.4)",
    "pydantic (>=1.7.2)"
  ],
  "requires_python": "",
  "summary": "apache atlas python client",
  "version": "1.2.0",
  "releases": [],
  "developers": [
    "verdan.mahmood@gmail.com",
    "verdan_mahmood"
  ],
  "kwds": "atlasclient pyatlasclient atlas pyup pypackage",
  "license_kwds": "apache software license 2.0",
  "libtype": "pypi",
  "id": "pypi_pyatlasclient",
  "homepage": "https://github.com/verdan/pyatlasclient",
  "release_count": 10,
  "dependency_ids": [
    "pypi_click",
    "pypi_pydantic",
    "pypi_requests",
    "pypi_six"
  ]
}
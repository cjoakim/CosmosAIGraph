{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# fuckit.py\n\n[![build status](https://img.shields.io/travis/ajalt/fuckitpy/master.svg)](https://travis-ci.org/ajalt/fuckitpy)\n[![pypi version](https://img.shields.io/badge/pypi-4.8.1-brightgreen.svg)](https://pypi.python.org/pypi/fuckit/4.8.1)\n[![coverage status](https://img.shields.io/badge/coverage-110%25-brightgreen.svg)](https://coveralls.io/r/ajalt/fuckitpy?branch=master)\n[![downloads](https://img.shields.io/badge/downloads-1.1m%2fmonth-brightgreen.svg)](https://pypi.python.org/pypi/fuckit)\n\n### the python error steamroller\nfuckit.py uses state-of-the-art technology to make sure your python code runs\nwhether it has any right to or not. some code has an error? fuck it.\n\n## technology\nfuckit.py uses a combination of dynamic compilation, abstract syntax tree rewriting, live call stack modification, and love to get rid of all those pesky errors that make programming _so hard_.\n\n## api\nall functionality is provided through the fuckit module. add `import fuckit` to the top of your script, then use fuckit in any of the following ways:\n\n### as a replacement for import\nuse fuckit to replace an import when a module has errors.\njust change `import some_shitty_module` to `fuckit('some_shitty_module')`. note that you have to surround the module name with quotes and parentheses.\n\n```python\nimport fuckit\n#import some_shitty_module\nfuckit('some_shitty_module')\nsome_shitty_module.some_function()\n```\n\nstill getting errors? chain fuckit calls. this module is like violence: if it doesn't work, you just need more of it.\n\n```python\nimport fuckit\nfuckit(fuckit('some_shitty_module'))\n# this is definitely going to run now.\nsome_shitty_module.some_function()\n```\n\n### as a decorator\nuse fuckit as a function decorator when a single function is giving you trouble. exceptions will be silenced, and in most cases the function will continue to run, skipping the statements that cause errors.\n\n```python\n@fuckit\ndef func():\n    problem_solved\n```\n\nyou can use fuckit as a class decorator, too.\n\n```python\n@fuckit\nclass c(object):\n    def __init__(self):\n        everything_works_now\n```\n\nkeep in mind that the decorator form of fuckit can't stop syntax errors. for those, you have to use the import form.\n\n### as a context manager\nuse fuckit as a context manager to save yourself from having to type out try/except block to silence exceptions yourself.\n\n```python\nwith fuckit:\n    some_code\n```\n\nthis is functionally equivalent to the following:\n\n```python\ntry:\n    some_code\nexcept exception:\n    pass\n```\n\nthe context manager form of fuckit can't allow the code to continue past an error like the decorator and import forms can. if you want the code to continue after an exception, wrap the code block in a function and use the decorator instead.\n\n\n\n## license\n                do what the fuck you want to public license\n                       version 2, december 2004\n\n\tcopyright (c) 2014-2018 aj alt\n\n\teveryone is permitted to copy and distribute verbatim or modified\n\tcopies of this license document, and changing it is allowed as long\n\tas the name is changed.\n\n                do what the fuck you want to public license\n       terms and conditions for copying, distribution and modification\n\n \t0. you just do what the fuck you want to.\n\n## attribution\n\nthis module is inspired by matt diamond's [fuckit.js](https://github.com/mattdiamond/fuckitjs).",
  "docs_url": null,
  "keywords": "",
  "license": "wtfpl",
  "name": "fuckit",
  "package_url": "https://pypi.org/project/fuckit/",
  "project_url": "https://pypi.org/project/fuckit/",
  "project_urls": {
    "Homepage": "https://github.com/ajalt/fuckitpy"
  },
  "release_url": "https://pypi.org/project/fuckit/4.8.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "the python error steamroller",
  "version": "4.8.1",
  "releases": [],
  "developers": [
    "aj_alt"
  ],
  "kwds": "pypi py shields coverage python",
  "license_kwds": "wtfpl",
  "libtype": "pypi",
  "id": "pypi_fuckit",
  "homepage": "https://github.com/ajalt/fuckitpy",
  "release_count": 3,
  "dependency_ids": []
}
{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 2.7"
  ],
  "description": "deprecated, unmaintained port of the asyncio module (pep 3156) on python 2\n========\ntrollius\n========\n\n.. image:: http://unmaintained.tech/badge.svg\n   :target: http://unmaintained.tech/\n   :alt: no maintenance intended\n\n.. warning::\n   the trollius project is deprecated and unsupported. it is on pypi\n   to support existing dependencies only.\n\n\n=========\n changes\n=========\n\n.. warning::\n   the trollius project is now deprecated!\n\n\n2.2.1 (2021-04-28)\n==================\n\n- properly reraise socket.error with an errno of ebadf as an oserror.\n\n2.2.post1 (2019-07-29)\n======================\n\nthis is a packaging-only release. it is intended to be the last\nrelease.\n\n- release windows wheels for cpython 2.7.\n- use ``python_requires`` to restrict installation to python 2.7.\n\nversion 2.2 (2018-03-09)\n========================\n\nchanges:\n\n* ``run_aiotest.py`` has been removed since the ``aiotest`` project has been\n  removed\n* add the \"no maintenance intended\" badge to readme\n* the trollius documentation is no longer online:\n  http://trollius.readthedocs.io/ has been removed\n* update the github url to: https://github.com/vstinner/trollius\n\nversion 2.1 (2016-02-05)\n========================\n\nchanges:\n\n* the trollius project is now deprecated.\n* ugly hack to support python 3.5 with the pep 479. asyncio coroutines are\n  not supported on python 3.5.\n* better exception traceback. patch written by dhawal yogesh bhanushali.\n* drop support for python 2.6 and 3.2.\n* fix tests on windows with python 2. patch written by gabi davar.\n\n\nversion 2.0 (2015-07-13)\n========================\n\nsummary:\n\n* ssl support on windows for proactor event loop with python 3.5 and newer\n* many race conditions were fixed in the proactor event loop\n* trollius moved to github and the fork was recreated on top to asyncio git\n  repository\n* many resource leaks (ex: unclosed sockets) were fixed\n* optimization of socket connections: avoid: don't call the slow getaddrinfo()\n  function to ensure that the address is already resolved. the check is now\n  only done in debug mode.\n\nthe trollius project moved from bitbucket to github. the project is now a fork\nof the git repository of the asyncio project (previously called the \"tulip\"\nproject), the trollius source code lives in the trollius branch.\n\nthe new trollius home page is now: https://github.com/haypo/trollius\n\nthe asyncio project moved to: https://github.com/python/asyncio\n\nnote: the pep 492 is not supported in trollius yet.\n\napi changes:\n\n* issue #234: drop joinablequeue on python 3.5+\n* add the asyncio.ensure_future() function, previously called async().\n  the async() function is now deprecated.\n* new event loop methods: set_task_factory() and get_task_factory().\n* python issue #23347: make basesubprocesstransport.wait() private.\n* python issue #23347: send_signal(), kill() and terminate() methods of\n  basesubprocesstransport now check if the transport was closed and if the\n  process exited.\n* python issue #23209, #23225: selectors.baseselector.get_key() now raises a\n  runtimeerror if the selector is closed. and selectors.baseselector.close()\n  now clears its internal reference to the selector mapping to break a\n  reference cycle. initial patch written by martin richard.\n* pipehandle.fileno() of asyncio.windows_utils now raises an exception if the\n  pipe is closed.\n* remove overlapped.waitnamedpipeandconnect() of the _overlapped module,\n  it is no more used and it had issues.\n* python issue #23537: remove 2 unused private methods of\n  basesubprocesstransport: _make_write_subprocess_pipe_proto,\n  _make_read_subprocess_pipe_proto. methods only raise notimplementederror and\n  are never used.\n* remove unused sslprotocol._closing attribute\n\nnew ssl implementation:\n\n* python issue #22560: on python 3.5 and newer, use new ssl implementation\n  based on ssl.memorybio instead of the legacy ssl implementation. patch\n  written by antoine pitrou, based on the work of geert jansen.\n* if available, the new ssl implementation can be used by proactoreventloop to\n  support ssl.\n\nenhance, fix and cleanup the iocpproactor:\n\n* python issue #23293: rewrite iocpproactor.connect_pipe(). add\n  _overlapped.connectpipe() which tries to connect to the pipe for asynchronous\n  i/o (overlapped): call createfile() in a loop until it doesn't fail with\n  error_pipe_busy. use an increasing delay between 1 ms and 100 ms.\n* tulip issue #204: fix iocpproactor.accept_pipe().\n  overlapped.connectnamedpipe() now returns a boolean: true if the pipe is\n  connected (if connectnamedpipe() failed with error_pipe_connected), false if\n  the connection is in progress.\n* tulip issue #204: fix iocpproactor.recv(). if readfile() fails with\n  error_broken_pipe, the operation is not pending: don't register the\n  overlapped.\n* python issue #23095: rewrite _waithandlefuture.cancel().\n  _waithandlefuture.cancel() now waits until the wait is cancelled to clear its\n  reference to the overlapped object. to wait until the cancellation is done,\n  unregisterwaitex() is used with an event instead of unregisterwait().\n* python issue #23293: rewrite iocpproactor.connect_pipe() as a coroutine. use\n  a coroutine with asyncio.sleep() instead of call_later() to ensure that the\n  scheduled call is cancelled.\n* fix proactoreventloop.start_serving_pipe(). if a client was connected before\n  the server was closed: drop the client (close the pipe) and exit\n* python issue #23293: cleanup iocpproactor.close(). the special case for\n  connect_pipe() is no more needed. connect_pipe() doesn't use overlapped\n  operations anymore.\n* iocpproactor.close(): don't cancel futures which are already cancelled\n* enhance (fix) baseproactoreventloop._loop_self_reading(). handle correctly\n  cancellederror: just exit. on error, log the exception and exit; don't try to\n  close the event loop (it doesn't work).\n\nbug fixes:\n\n* fix lifoqueue's and priorityqueue's put() and task_done().\n* issue #222: fix the @coroutine decorator for functions without __name__\n  attribute like functools.partial(). enhance also the representation of a\n  corowrapper if the coroutine function is a functools.partial().\n* python issue #23879: selectoreventloop.sock_connect() must not call connect()\n  again if the first call to connect() raises an interruptederror. when the c\n  function connect() fails with eintr, the connection runs in background. we\n  have to wait until the socket becomes writable to be notified when the\n  connection succeed or fails.\n* fix _selectortransport.__repr__() if the event loop is closed\n* fix repr(basesubprocesstransport) if it didn't start yet\n* workaround cpython bug #23353. don't use yield/yield-from in an except block\n  of a generator. store the exception and handle it outside the except block.\n* fix baseselectoreventloop._accept_connection(). close the transport on error.\n  in debug mode, log errors using call_exception_handler().\n* fix _unixreadpipetransport and _unixwritepipetransport. only start reading\n  when connection_made() has been called.\n* fix _selectorssltransport.close(). don't call protocol.connection_lost() if\n  protocol.connection_made() was not called yet: if the ssl handshake failed or\n  is still in progress. the close() method can be called if the creation of the\n  connection is cancelled, by a timeout for example.\n* fix _selectordatagramtransport constructor. only start reading after\n  connection_made() has been called.\n* fix _selectorsockettransport constructor. only start reading when\n  connection_made() has been called: protocol.data_received() must not be\n  called before protocol.connection_made().\n* fix sslprotocol.eof_received(). wake-up the waiter if it is not done yet.\n* close transports on error. fix create_datagram_endpoint(),\n  connect_read_pipe() and connect_write_pipe(): close the transport if the task\n  is cancelled or on error.\n* close the transport on subprocess creation failure\n* fix _proactorbasepipetransport.close(). set the _read_fut attribute to none\n  after cancelling it.\n* python issue #23243: fix _unixwritepipetransport.close(). do nothing if the\n  transport is already closed. before it was not possible to close the\n  transport twice.\n* python issue #23242: subprocessstreamprotocol now closes the subprocess\n  transport at subprocess exit. clear also its reference to the transport.\n* fix baseeventloop._create_connection_transport(). close the transport if the\n  creation of the transport (if the waiter) gets an exception.\n* python issue #23197: on ssl handshake failure, check if the waiter is\n  cancelled before setting its exception.\n* python issue #23173: fix subprocessstreamprotocol.connection_made() to handle\n  cancelled waiter.\n* python issue #23173: if an exception is raised during the creation of a\n  subprocess, kill the subprocess (close pipes, kill and read the return\n  status). log an error in such case.\n* python issue #23209: break some reference cycles in asyncio. patch written by\n  martin richard.\n\noptimization:\n\n* only call _check_resolved_address() in debug mode. _check_resolved_address()\n  is implemented with getaddrinfo() which is slow. if available, use\n  socket.inet_pton() instead of socket.getaddrinfo(), because it is much faster\n\nother changes:\n\n* python issue #23456: add missing @coroutine decorators\n* python issue #23475: fix test_close_kill_running(). really kill the child\n  process, don't mock completly the popen.kill() method. this change fix memory\n  leaks and reference leaks.\n* basesubprocesstransport: repr() mentions when the child process is running\n* basesubprocesstransport.close() doesn't try to kill the process if it already\n  finished.\n* tulip issue #221: fix docstring of queueempty and queuefull\n* fix subprocess_attach_write_pipe example. close the transport, not directly\n  the pipe.\n* python issue #23347: send_signal(), terminate(), kill() don't check if the\n  transport was closed. the check broken a tulip example and this limitation is\n  arbitrary. check if _proc is none should be enough. enhance also close(): do\n  nothing when called the second time.\n* python issue #23347: refactor creation of subprocess transports.\n* python issue #23243: on python 3.4 and newer, emit a resourcewarning when an\n  event loop or a transport is not explicitly closed\n* tox.ini: enable resourcewarning warnings\n* python issue #23243: test_sslproto: close explicitly transports\n* ssl transports now clear their reference to the waiter.\n* python issue #23208: add baseeventloop._current_handle. in debug mode,\n  baseeventloop._run_once() now sets the baseeventloop._current_handle\n  attribute to the handle currently executed.\n* replace test_selectors.py with the file of python 3.5 adapted for asyncio and\n  python 3.3.\n* tulip issue #184: flowcontrolmixin constructor now get the event loop if the\n  loop parameter is not set.\n* _proactorbasepipetransport now sets the _sock attribute to none when the\n  transport is closed.\n* python issue #23219: cancelling wait_for() now cancels the task\n* python issue #23243: close explicitly event loops and transports in tests\n* python issue #23140: fix cancellation of process.wait(). check the state of\n  the waiter future before setting its result.\n* python issue #23046: expose the baseeventloop class in the asyncio namespace\n* python issue #22926: in debug mode, call_soon(), call_at() and call_later()\n  methods of baseeventloop now use the identifier of the current thread to\n  ensure that they are called from the thread running the event loop. before,\n  the get_event_loop() method was used to check the thread, and no exception\n  was raised when the thread had no event loop. now the methods always raise an\n  exception in debug mode when called from the wrong thread. it should help to\n  notice misusage of the api.\n\n2014-12-19: version 1.0.4\n=========================\n\nchanges:\n\n* python issue #22922: create_task(), call_at(), call_soon(),\n  call_soon_threadsafe() and run_in_executor() now raise an error if the event\n  loop is closed. initial patch written by torsten landschoff.\n* python issue #22921: don't require openssl sni to pass hostname to ssl\n  functions. patch by donald stufft.\n* add run_aiotest.py: run the aiotest test suite.\n* tox now also run the aiotest test suite\n* python issue #23074: get_event_loop() now raises an exception if the thread\n  has no event loop even if assertions are disabled.\n\nbugfixes:\n\n* fix a race condition in basesubprocesstransport._try_finish(): ensure that\n  connection_made() is called before connection_lost().\n* python issue #23009: selectors, make sure epollselecrtor.select() works when\n  no file descriptor is registered.\n* python issue #22922: fix proactoreventloop.close(). call\n  _stop_accept_futures() before sestting the _closed attribute, otherwise\n  call_soon() raises an error.\n* python issue #22429: fix eventloop.run_until_complete(), don't stop the event\n  loop if a baseexception is raised, because the event loop is already stopped.\n* initialize more future and task attributes in the class definition to avoid\n  attribute errors in destructors.\n* python issue #22685: set the transport of stdout and stderr streamreader\n  objects in the subprocessstreamprotocol. it allows to pause the transport to\n  not buffer too much stdout or stderr data.\n* baseselectoreventloop.close() now closes the self-pipe before calling the\n  parent close() method. if the event loop is already closed, the self-pipe is\n  not unregistered from the selector.\n\n\n2014-10-20: version 1.0.3\n=========================\n\nchanges:\n\n* on python 2 in debug mode, future.set_exception() now stores the traceback\n  object of the exception in addition to the exception object. when a task\n  waiting for another task and the other task raises an exception, the\n  traceback object is now copied with the exception. be careful, storing the\n  traceback object may create reference leaks.\n* use ssl.create_default_context() if available to create the default ssl\n  context: python 2.7.9 and newer, or python 3.4 and newer.\n* on python 3.5 and newer, reuse socket.socketpair() in the windows_utils\n  submodule.\n* on python 3.4 and newer, use os.set_inheritable().\n* enhance protocol representation: add \"closed\" or \"closing\" info.\n* run_forever() now consumes baseexception of the temporary task. if the\n  coroutine raised a baseexception, consume the exception to not log a warning.\n  the caller doesn't have access to the local task.\n* python issue 22448: cleanup _run_once(), only iterate once to remove delayed\n  calls that were cancelled.\n* the destructor of the return class now shows where the return object was\n  created.\n* run_tests.py doesn't catch any exceptions anymore when loading tests, only\n  catch skiptest.\n* fix (ssl) tests for the future python 2.7.9 which includes a \"new\" ssl\n  module: module backported from python 3.5.\n* baseeventloop.add_signal_handler() now raises an exception if the parameter\n  is a coroutine function.\n* coroutine functions and objects are now rejected with a typeerror by the\n  following functions: add_signal_handler(), call_at(), call_later(),\n  call_soon(), call_soon_threadsafe(), run_in_executor().\n\n\n2014-10-02: version 1.0.2\n=========================\n\nthis release fixes bugs. it also provides more information in debug mode on\nerror.\n\nmajor changes:\n\n* tulip issue #203: add _flowcontrolmixin.get_write_buffer_limits() method.\n* python issue #22063: socket operations (socket,recv, sock_sendall,\n  sock_connect, sock_accept) of selectoreventloop now raise an exception in\n  debug mode if sockets are in blocking mode.\n\nmajor bugfixes:\n\n* tulip issue #205: fix a race condition in baseselectoreventloop.sock_connect().\n* tulip issue #201: fix a race condition in wait_for(). don't raise a\n  timeouterror if we reached the timeout and the future completed in the same\n  iteration of the event loop. a side effect of the bug is that queue.get()\n  looses items.\n* pipeserver.close() now cancels the \"accept pipe\" future which cancels the\n  overlapped operation.\n\nother changes:\n\n* python issue #22448: improve cancelled timer callback handles cleanup. patch\n  by joshua moore-oliva.\n* python issue #22369: change \"context manager protocol\" to \"context management\n  protocol\". patch written by serhiy storchaka.\n* tulip issue #206: in debug mode, keep the callback in the representation of\n  handle and timerhandle after cancel().\n* tulip issue #207: fix test_tasks.test_env_var_debug() to use correct asyncio\n  module.\n* runtests.py: display a message to mention if tests are run in debug or\n  release mode\n* tulip issue #200: log errors in debug mode instead of simply ignoring them.\n* tulip issue #200: _waithandlefuture._unregister_wait() now catchs and logs\n  exceptions.\n* _fatal_error() method of _unixreadpipetransport and _unixwritepipetransport\n  now log all exceptions in debug mode\n* fix debug log in baseeventloop.create_connection(): get the socket object\n  from the transport because ssl transport closes the old socket and creates a\n  new ssl socket object.\n* remove the _selectorssltransport._rawsock attribute: it contained the closed\n  socket (not very useful) and it was not used.\n* fix _selectortransport.__repr__() if the transport was closed\n* use the new os.set_blocking() function of python 3.5 if available\n\n\n2014-07-30: version 1.0.1\n=========================\n\nthis release supports pypy and has a better support of asyncio coroutines,\nespecially in debug mode.\n\nchanges:\n\n* tulip issue #198: asyncio.condition now accepts an optional lock object.\n* enhance representation of future and future subclasses: add \"created at\".\n\nbugfixes:\n\n* fix trollius issue #9: @trollius.coroutine now works on callbable objects\n  (without ``__name__`` attribute), not only on functions.\n* fix trollius issue #13: asyncio futures are now accepted in all functions:\n  as_completed(), async(), @coroutine, gather(), run_until_complete(),\n  wrap_future().\n* fix support of asyncio coroutines in debug mode. if the last instruction\n  of the coroutine is \"yield from\", it's an asyncio coroutine and it does not\n  need to use from().\n* fix and enhance _waithandlefuture.cancel():\n\n  - tulip issue #195: fix a crash on windows: don't call unregisterwait() twice\n    if a _waithandlefuture is cancelled twice.\n  - fix _waithandlefuture.cancel(): return the result of the parent cancel()\n    method (true or false).\n  - _waithandlefuture.cancel() now notify iocpproactor through the overlapped\n    object that the wait was cancelled.\n\n* tulip issue #196: _overlappedfuture now clears its reference to the\n  overlapped object. iocpproactor keeps a reference to the overlapped object\n  until it is notified of its completion. log also an error in debug mode if it\n  gets unexpected notifications.\n* fix runtest.py to be able to log at level debug.\n\nother changes:\n\n* baseselectoreventloop._write_to_self() now logs errors in debug mode.\n* fix as_completed(): it's not a coroutine, don't use ``yield from(...)`` but\n  ``yield ...``\n* tulip issue #193: convert streamwriter.drain() to a classic coroutine.\n* tulip issue #194: don't use sys.getrefcount() in unit tests: the full test\n  suite now pass on pypy.\n\n\n2014-07-21: version 1.0\n=======================\n\nmajor changes\n-------------\n\n* event loops have a new ``create_task()`` method, which is now the recommanded\n  way to create a task object. this method can be overriden by third-party\n  event loops to use their own task class.\n* the debug mode has been improved a lot. set ``trolliusdebug`` envrironment\n  variable to ``1`` and configure logging to log at level ``logging.debug``\n  (ex: ``logging.basicconfig(level=logging.debug)``).  changes:\n\n  - much better representation of trollius objects (ex: ``repr(task)``):\n    unified ``<class arg1 arg2 ...>`` format, use qualified name when available\n  - show the traceback where objects were created\n  - show the current filename and line number for coroutine\n  - show the filename and line number where objects were created\n  - log most important socket events\n  - log most important subprocess events\n\n* ``handle.cancel()`` now clears references to callback and args\n* log an error if a task is destroyed while it is still pending, but only on\n  python 3.4 and newer.\n* fix for asyncio coroutines when passing tuple value in debug mode.\n  ``corowrapper.send()`` now checks if it is called from a \"yield from\"\n  generator to decide if the parameter should be unpacked or not.\n* ``process.communicate()`` now ignores ``brokenpipeerror`` and\n  ``connectionreseterror`` exceptions.\n* rewrite signal handling on python 3.3 and newer to fix a race condition: use\n  the \"self-pipe\" to get signal numbers.\n\n\nother changes\n-------------\n\n* fix ``proactoreventloop()`` in debug mode\n* fix a race condition when setting the result of a future with\n  ``call_soon()``. add an helper, a private method, to set the result only if\n  the future was not cancelled.\n* fix ``asyncio.__all__``: export also ``unix_events`` and ``windows_events``\n  symbols. for example, on windows, it was not possible to get\n  ``proactoreventloop`` or ``defaulteventlooppolicy`` using ``from asyncio\n  import *``.\n* ``handle.cancel()`` now clears references to callback and args\n* make server attributes and methods private, the sockets attribute remains\n  public.\n* baseeventloop.create_datagram_endpoint() now waits until\n  protocol.connection_made() has been called. document also why transport\n  constructors use a waiter.\n* _unixsubprocesstransport: fix file mode of stdin: open stdin in write mode,\n  not in read mode.\n\n\n2014-06-23: version 0.4\n=======================\n\nchanges between trollius 0.3 and 0.4:\n\n* trollius event loop now supports asyncio coroutines:\n\n  - trollius coroutines can yield asyncio coroutines,\n  - asyncio coroutines can yield trollius coroutines,\n  - asyncio.set_event_loop() accepts a trollius event loop,\n  - asyncio.set_event_loop_policy() accepts a trollius event loop policy.\n\n* the ``pythonasynciodebug`` envrionment variable has been renamed to\n  ``trolliusdebug``. the environment variable is now used even if the python\n  command line option ``-e`` is used.\n* synchronize with tulip.\n* support pypy (fix subproces, fix unit tests).\n\ntulip changes:\n\n* tulip issue #171: baseeventloop.close() now raises an exception if the event\n  loop is running. you must first stop the event loop and then wait until it\n  stopped, before closing it.\n* tulip issue #172: only log selector timing in debug mode\n* enable the debug mode of event loops when the ``trolliusdebug`` environment\n  variable is set\n* baseeventloop._assert_is_current_event_loop() now only raises an exception if\n  the current loop is set.\n* tulip issue #105: in debug mode, log callbacks taking more than 100 ms to be\n  executed.\n* python issue 21595: ``baseselectoreventloop._read_from_self()`` reads all\n  available bytes from the \"self pipe\", not only a single byte. this change\n  reduces the risk of having the pipe full and so getting the \"blockingioerror:\n  [errno 11] resource temporarily unavailable\" message.\n* python issue 21723: asyncio.queue: support any type of number (ex: float) for\n  the maximum size. patch written by vajrasky kok.\n* issue #173: enhance repr(handle) and repr(task): add the filename and line\n  number, when available. for task, the current line number of the coroutine\n  is used.\n* add baseeventloop.is_closed() method. run_forever() and run_until_complete()\n  methods now raises an exception if the event loop was closed.\n* make sure that socketpair() close sockets on error. close the listening\n  socket if sock.bind() raises an exception.\n* fix resourcewarning: close sockets on errors.\n  baseeventloop.create_connection(), baseeventloop.create_datagram_endpoint()\n  and _unixselectoreventloop.create_unix_server() now close the newly created\n  socket on error.\n* rephrase and fix docstrings.\n* fix tests on windows: wait for the subprocess exit. before, regrtest failed\n  to remove the temporary test directory because the process was still running\n  in this directory.\n* refactor unit tests.\n\non python 3.5, generators now get their name from the function, no more from\nthe code. so the ``@coroutine`` decorator doesn't loose the original name of\nthe function anymore.\n\n\n2014-05-26: version 0.3\n=======================\n\nrename the python module ``asyncio`` to ``trollius`` to support python 3.4. on\npython 3.4, there is already a module called ``asyncio`` in the standard\nlibrary which conflicted with ``asyncio`` module of trollius 0.2. to write\nasyncio code working on trollius and tulip, use ``import trollius as asyncio``.\n\nchanges between trollius 0.2 and 0.3:\n\n* synchronize with tulip 3.4.1.\n* enhance trollius documentation.\n* trollius issue #7: fix ``asyncio.time_monotonic`` on windows older than\n  vista (ex: windows 2000 and windows xp).\n* fedora packages have been accepted.\n\nchanges between tulip 3.4.0 and 3.4.1:\n\n* pull in solaris ``devpoll`` support by giampaolo rodola\n  (``trollius.selectors`` module).\n* add options ``-r`` and ``--randomize`` to runtests.py to randomize test\n  order.\n* add a simple echo client/server example.\n* tulip issue #166: add ``__weakref__`` slots to ``handle`` and\n  ``corowrapper``.\n* ``eventloop.create_unix_server()`` now raises a ``valueerror`` if path and\n  sock are specified at the same time.\n* ensure ``call_soon()``, ``call_later()`` and ``call_at()`` are invoked on\n  current loop in debug mode. raise a ``runtimeerror`` if the event loop of the\n  current thread is different.  the check should help to debug thread-safetly\n  issue. patch written by david foster.\n* tulip issue #157: improve test_events.py, avoid ``run_briefly()`` which is\n  not reliable.\n* reject add/remove reader/writer when event loop is closed.\n\nbugfixes of tulip 3.4.1:\n\n* tulip issue #168: ``streamreader.read(-1)`` from pipe may hang if\n  data exceeds buffer limit.\n* cpython issue #21447: fix a race condition in\n  ``baseeventloop._write_to_self()``.\n* different bugfixes in ``corowrapper`` of ``trollius.coroutines``, class used\n  when running trollius in debug mode:\n\n  - fix ``corowrapper`` to workaround yield-from bug in cpython 3.4.0. the\n    cpython bug is now fixed in cpython 3.4.1 and 3.5.\n  - make sure ``corowrapper.send`` proxies one argument correctly.\n  - cpython issue #21340: be careful accessing instance variables in ``__del__``.\n  - tulip issue #163: add ``gi_{frame,running,code}`` properties to\n    ``corowrapper``.\n\n* fix ``resourcewarning`` warnings\n* tulip issue #159: fix ``windows_utils.socketpair()``. use ``\"127.0.0.1\"``\n  (ipv4) or ``\"::1\"`` (ipv6) host instead of ``\"localhost\"``, because\n  ``\"localhost\"`` may be a different ip address. reject also invalid arguments:\n  only ``af_inet`` and ``af_inet6`` with ``sock_stream`` (and ``proto=0``) are\n  supported.\n* tulip issue #158: ``task._step()`` now also sets ``self`` to ``none`` if an\n  exception is raised. ``self`` is set to ``none`` to break a reference cycle.\n\n\n2014-03-04: version 0.2\n=======================\n\ntrollius now uses ``yield from(...)`` syntax which looks close to tulip ``yield\nfrom ...`` and allows to port more easily trollius code to tulip. the usage of\n``from()`` is not mandatory yet, but it may become mandatory in a future\nversion.  however, if ``yield`` is used without ``from``, an exception is\nraised if the event loop is running in debug mode.\n\nmajor changes:\n\n* replace ``yield ...`` syntax with ``yield from(...)``\n* on python 2, future.set_exception() now only saves the traceback if the debug\n  mode of the event loop is enabled for best performances in production mode.\n  use ``loop.set_debug(true)`` to save the traceback.\n\nbugfixes:\n\n* fix ``baseeventloop.default_exception_handler()`` on python 2: get the\n  traceback from ``sys.exc_info()``\n* fix unit tests on ssl sockets on python older than 2.6.6. example:\n  mac os 10.6 with python 2.6.1 or openindiana 148 with python 2.6.4.\n* fix error handling in the asyncio.time_monotonic module\n* fix acquire() method of lock, condition and semaphore: don't return a context\n  manager but true, as tulip. task._step() now does the trick.\n\nother changes:\n\n* tox.ini: set pythonasynciodebug to 1 to run tests\n\n2014-02-25: version 0.1.6\n=========================\n\ntrollius changes:\n\n* add a new sphinx documentation:\n  https://trollius.readthedocs.io/\n* tox: pass posargs to nosetests. patch contributed by ian wienand.\n* fix support of python 3.2 and add py32 to tox.ini\n* merge with tulip 0.4.1\n\nmajor changes of tulip 0.4.1:\n\n* issue #81: add support for unix domain sockets. new apis:\n\n  - loop.create_unix_connection()\n  - loop.create_unix_server()\n  - streams.open_unix_connection()\n  - streams.start_unix_server()\n\n* issue #80: add new event loop exception handling api. new apis:\n\n  - loop.set_exception_handler()\n  - loop.call_exception_handler()\n  - loop.default_exception_handler()\n\n* issue #136: add get_debug() and set_debug() methods to baseeventlooptests.\n  add also a ``pythonasynciodebug`` environment variable to debug coroutines\n  since python startup, to be able to debug coroutines defined directly in the\n  asyncio module.\n\nother changes of tulip 0.4.1:\n\n* asyncio.subprocess: fix a race condition in communicate()\n* fix _proactorwritepipetransport._pipe_closed()\n* issue #139: improve error messages on \"fatal errors\".\n* issue #140: writetransport.set_write_buffer_size() to call\n  _maybe_pause_protocol()\n* issue #129: baseeventloop.sock_connect() now raises an error if the address\n  is not resolved (hostname instead of an ip address) for af_inet and\n  af_inet6 address families.\n* issue #131: as_completed() and wait() now raises a typeerror if the list of\n  futures is not a list but a future, task or coroutine object\n* python issue #20495: skip test_read_pty_output() of test_asyncio on freebsd\n  older than freebsd 8\n* issue #130: add more checks on subprocess_exec/subprocess_shell parameters\n* issue #126: call_soon(), call_soon_threadsafe(), call_later(), call_at()\n  and run_in_executor() now raise a typeerror if the callback is a coroutine\n  function.\n* python issue #20505: baseeventloop uses again the resolution of the clock\n  to decide if scheduled tasks should be executed or not.\n\n\n2014-02-10: version 0.1.5\n=========================\n\n- merge with tulip 0.3.1:\n\n  * new asyncio.subprocess module\n  * _unixwritepipetransport now also supports character devices, as\n    _unixreadpipetransport. patch written by jonathan slenders.\n  * streamreader.readexactly() now raises an incompletereaderror if the\n    end of stream is reached before we received enough bytes, instead of\n    returning less bytes than requested.\n  * poll and epoll selectors now round the timeout away from zero (instead of\n    rounding towards zero) to fix a performance issue\n  * asyncio.queue: empty renamed to queueempty, full to queuefull\n  * _fatal_error() of _unixwritepipetransport and _proactorbasepipetransport\n    don't log brokenpipeerror nor connectionreseterror\n  * future.set_exception(exc) now instanciate exc if it is a class\n  * streams.streamreader: use bytearray instead of deque of bytes for internal\n    buffer\n\n- fix test_wait_for() unit test\n\n2014-01-22: version 0.1.4\n=========================\n\n- the project moved to https://bitbucket.org/enovance/trollius\n- fix corowrapper (_debug=true): add missing import\n- emit a warning when return is not raised\n- merge with tulip to get latest tulip bugfixes\n- fix dependencies in tox.ini for the different python versions\n\n2014-01-13: version 0.1.3\n=========================\n\n- workaround bugs in the ssl module of python older than 2.6.6. for example,\n  mac os 10.6 (snow leopard) uses python 2.6.1.\n- ``return x, y`` is now written ``raise return(x, y)`` instead of\n  ``raise return((x, y))``\n- support \"with (yield lock):\" syntax for lock, condition and semaphore\n- ssl support is now optional: don't fail if the ssl module is missing\n- add tox.ini, tool to run unit tests. for example, \"tox -e py27\" creates a\n  virtual environment to run tests with python 2.7.\n\n2014-01-08: version 0.1.2\n=========================\n\n- trollius now supports cpython 2.6-3.4, pypy and windows. all unit tests\n  pass with cpython 2.7 on linux.\n- fix windows support. fix compilation of the _overlapped module and add a\n  asyncio._winapi module (written in pure python). patch written by marc\n  schlaich.\n- support python 2.6: require an extra dependency,\n  ordereddict (and unittest2 for unit tests)\n- support python 3.2, 3.3 and 3.4\n- support pypy 2.2\n- don't modify __builtins__ nor the ssl module to inject backported exceptions\n  like blockingioerror or sslwantreaderror. exceptions are available in the\n  asyncio module, ex: asyncio.blockingioerror.\n\n2014-01-06: version 0.1.1\n=========================\n\n- fix asyncio.time_monotonic on mac os x\n- fix create_connection(ssl=true)\n- don't export backported sslcontext in the ssl module anymore to not confuse\n  libraries testing hasattr(ssl, \"sslcontext\")\n- relax dependency on the backported concurrent.futures module: use a\n  synchronous executor if the module is missing\n\n2014-01-04: version 0.1\n=======================\n\n- first public release",
  "docs_url": null,
  "keywords": "deprecated unmaintained asyncio backport",
  "license": "apache license 2.0",
  "name": "trollius",
  "package_url": "https://pypi.org/project/trollius/",
  "project_url": "https://pypi.org/project/trollius/",
  "project_urls": {
    "Homepage": "https://github.com/jamadden/trollius"
  },
  "release_url": "https://pypi.org/project/trollius/2.2.1/",
  "requires_dist": [],
  "requires_python": ">=2.7, < 3",
  "summary": "deprecated, unmaintained port of the asyncio module (pep 3156) on python 2",
  "version": "2.2.1",
  "releases": [],
  "developers": [
    "victor.stinner@gmail.com",
    "victor_stinner"
  ],
  "kwds": "pythonasynciodebug trolliusdebug test_asyncio cpython python_requires",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_trollius",
  "homepage": "https://github.com/jamadden/trollius",
  "release_count": 7,
  "dependency_ids": [],
  "documentation_summary": "Trollius, a deprecated and unmaintained port of the asyncio module for Python 2 (specifically Python >=2.7, < 3), is available on PyPI. The latest version, 2.2.1, was released on April 28, 2021. It is intended to support existing dependencies only, with its documentation and maintenance having ceased. The project has moved to GitHub, and its documentation has been removed. The package is licensed under the Apache License 2.0, and its source and built distributions are available for download. Despite its deprecation, it includes various bug fixes, optimizations, and API changes from its previous versions.",
  "embedding": [
    -0.017361244186758995,
    -0.016070978716015816,
    0.004748895298689604,
    0.0012974340934306383,
    -0.0009578432654961944,
    0.024672752246260643,
    -0.020343191921710968,
    0.01238655298948288,
    -0.01125398650765419,
    -0.026808857917785645,
    -0.0006823177100159228,
    -0.005372523795813322,
    0.002469425555318594,
    0.03882266953587532,
    -0.00032704658224247396,
    -0.02087363600730896,
    0.02266567200422287,
    0.001765155466273427,
    0.017160536721348763,
    0.0024980981834232807,
    0.03713098540902138,
    0.004723806865513325,
    -0.01744726300239563,
    -0.006515842862427235,
    -0.015354164876043797,
    0.020099475979804993,
    0.015311155468225479,
    -0.03916673734784126,
    0.009354428388178349,
    0.00019309188064653426,
    0.020257174968719482,
    0.0019425670616328716,
    -0.023396821692585945,
    -0.029289036989212036,
    -0.01506743859499693,
    -0.018952572718262672,
    0.026794523000717163,
    0.021619122475385666,
    0.021232042461633682,
    0.02186284027993679,
    0.026966558769345284,
    0.005730931181460619,
    0.009311418980360031,
    -0.028772929683327675,
    -0.023411158472299576,
    -0.0019192706095054746,
    0.0077415956184268,
    7.767356146359816e-05,
    0.0012642814544960856,
    0.0021128104999661446,
    0.02184850350022316,
    0.000603020132984966,
    -0.007275666110217571,
    -0.03515257686376572,
    0.028815938159823418,
    -0.004569691605865955,
    0.005049957428127527,
    0.005626993253827095,
    -0.021103015169501305,
    0.019798414781689644,
    0.02526053972542286,
    -0.01680213026702404,
    -0.03566868603229523,
    -0.019784078001976013,
    -0.007282834500074387,
    0.02120337076485157,
    -0.01759062521159649,
    0.011533543467521667,
    -9.632193541619927e-05,
    -0.02332514151930809,
    0.031023727729916573,
    0.028142133727669716,
    0.003042877186089754,
    -0.0188952274620533,
    0.03684426099061966,
    -0.011418853886425495,
    -0.026350097730755806,
    0.009368764236569405,
    -0.021719476208090782,
    0.0006097402656450868,
    0.021905848756432533,
    -0.030048860237002373,
    -0.0030661735218018293,
    0.027597354725003242,
    0.026479125022888184,
    0.01611398719251156,
    -0.004480089992284775,
    -0.0013619473902508616,
    -0.02819947898387909,
    -0.013662482611835003,
    0.01386319100856781,
    0.02134673297405243,
    0.004867170006036758,
    0.06199010834097862,
    -0.007798940874636173,
    0.022292928770184517,
    -0.039539482444524765,
    0.025031158700585365,
    -0.02953275293111801,
    -0.0236548762768507,
    0.010006729513406754,
    -0.02070160023868084,
    -0.01660142093896866,
    -0.0033206427469849586,
    -0.05508001893758774,
    -0.028959302231669426,
    0.012709119357168674,
    -0.00889566633850336,
    0.021719476208090782,
    0.009669826366007328,
    -0.018135404214262962,
    0.04097311198711395,
    0.006214780732989311,
    -0.04665028303861618,
    0.014314783737063408,
    0.010164428502321243,
    0.025805318728089333,
    0.004390488378703594,
    -0.00236548762768507,
    -0.0056915064342319965,
    0.010150091722607613,
    0.006168188061565161,
    -0.003046461148187518,
    0.012343544512987137,
    0.04369700700044632,
    0.022694343701004982,
    0.008831153623759747,
    -0.015712572261691093,
    -0.013017349876463413,
    -0.007340179290622473,
    0.014637350104749203,
    0.0055445595644414425,
    0.010544340126216412,
    -0.015497527085244656,
    -0.0054227011278271675,
    -0.02018549293279648,
    0.012422394007444382,
    -0.018536821007728577,
    -0.0035589835606515408,
    -0.02169080451130867,
    0.01092425175011158,
    0.027955761179327965,
    -0.027841070666909218,
    -0.007476374041289091,
    0.011390181258320808,
    0.04275080934166908,
    0.0044836741872131824,
    0.001209624344483018,
    -0.004928098991513252,
    -0.009970888495445251,
    0.027511337772011757,
    -0.020930981263518333,
    -0.03844992443919182,
    -0.018794873729348183,
    0.002514226594939828,
    0.007433365564793348,
    -0.005078630056232214,
    0.032055940479040146,
    -0.014214430004358292,
    -0.0029353550635278225,
    -0.007067790254950523,
    0.025489920750260353,
    -0.021905848756432533,
    -0.033346205949783325,
    0.010343631729483604,
    0.02722461149096489,
    0.03830656036734581,
    0.0010581972310319543,
    -0.011182304471731186,
    -0.012759296223521233,
    0.00041620037518441677,
    -0.009053366258740425,
    -0.009942215867340565,
    0.010286286473274231,
    0.01888089068233967,
    0.001645089010708034,
    -0.011805932968854904,
    -0.009562304243445396,
    -0.01247257087379694,
    -0.0023350229021161795,
    0.002732855034992099,
    0.002655797405168414,
    0.01939699798822403,
    0.0440124049782753,
    -0.026851868256926537,
    0.011762924492359161,
    -0.02788408100605011,
    0.016214340925216675,
    0.022723017260432243,
    0.009834693744778633,
    0.011942127719521523,
    0.03245735540986061,
    -0.0002562611480243504,
    -0.0319412499666214,
    -0.5918020009994507,
    -0.0021826999727636576,
    -0.012830978259444237,
    -0.030851691961288452,
    -0.028113460168242455,
    -0.0009560512262396514,
    0.0016603213734924793,
    0.01664443127810955,
    -0.00878814421594143,
    0.018221423029899597,
    -0.0025088503025472164,
    0.029590098187327385,
    0.0041001783683896065,
    -0.007906462997198105,
    -0.026006026193499565,
    -0.004652125295251608,
    0.008759471587836742,
    -0.001352091203443706,
    0.005454957485198975,
    0.005336683243513107,
    -0.012329207733273506,
    0.0260920450091362,
    -0.006487170234322548,
    -0.010960091836750507,
    0.00019387589418329298,
    0.013791508972644806,
    0.01384885422885418,
    -0.01776266098022461,
    -0.009390268474817276,
    0.015511863864958286,
    -0.010372304357588291,
    0.026780186221003532,
    0.022550981491804123,
    -0.026651158928871155,
    0.05054975301027298,
    -0.01059451699256897,
    -0.030851691961288452,
    0.022464962676167488,
    5.6631138249940705e-06,
    0.023425495252013206,
    -0.02528921142220497,
    -0.004257877357304096,
    0.015712572261691093,
    0.021963194012641907,
    0.0015151664847508073,
    0.0025196026545017958,
    0.034493107348680496,
    -0.00716814398765564,
    -0.020085139200091362,
    -0.030450275167822838,
    0.017647970467805862,
    -0.021977528929710388,
    0.01181310135871172,
    -0.015755580738186836,
    0.03885133937001228,
    0.0027274787425994873,
    0.01860850118100643,
    0.0019891599658876657,
    -0.005644913297146559,
    -0.010952924378216267,
    -0.030450275167822838,
    0.022909387946128845,
    -0.006931595504283905,
    0.028099125251173973,
    0.007390356622636318,
    0.0031987843103706837,
    0.002345775254070759,
    0.013189384713768959,
    0.03185523301362991,
    -0.0282281506806612,
    0.011383012868463993,
    0.0010089162969961762,
    -0.029618771746754646,
    -0.0039783199317753315,
    0.016343368217349052,
    0.04822727292776108,
    0.007128719240427017,
    -0.017389917746186256,
    0.005351019557565451,
    0.011877615004777908,
    -0.013820181600749493,
    0.02055823802947998,
    0.006487170234322548,
    -0.0012857858091592789,
    0.05625559389591217,
    0.005164647940546274,
    -0.036586206406354904,
    -0.007763099856674671,
    0.015053102746605873,
    0.009662657976150513,
    0.0022579652722924948,
    0.011791597120463848,
    0.022264255210757256,
    -0.010773720219731331,
    0.014042394235730171,
    0.043123554438352585,
    -0.012042482383549213,
    -0.01746159978210926,
    -0.011361508630216122,
    -0.03412036597728729,
    0.008723631501197815,
    -0.025217531248927116,
    0.01595628820359707,
    -0.02723894827067852,
    0.03308815136551857,
    0.018665846437215805,
    -0.024041954427957535,
    0.017977705225348473,
    0.018450802192091942,
    -0.00372743490152061,
    -0.008996021002531052,
    -0.024658415466547012,
    -0.013920535333454609,
    -0.00854442734271288,
    0.020586909726262093,
    -0.02594868093729019,
    0.02282337099313736,
    0.0008897458901628852,
    0.013985048979520798,
    -0.029073992744088173,
    -0.003863629652187228,
    -0.009261242114007473,
    0.010228941217064857,
    0.002928186906501651,
    0.0004276245890650898,
    0.03151116147637367,
    0.03151116147637367,
    0.01599929668009281,
    -0.04042833298444748,
    -0.019841423258185387,
    0.0007360787712968886,
    0.0025088503025472164,
    0.004351063631474972,
    -0.015898942947387695,
    0.016056641936302185,
    0.013705491088330746,
    0.05671435594558716,
    -0.024486379697918892,
    0.003652169369161129,
    -0.004024913068860769,
    -0.01247257087379694,
    0.007336595561355352,
    -0.005297258496284485,
    -0.02594868093729019,
    -0.004677214194089174,
    -0.04490125551819801,
    -0.010114251635968685,
    0.005053541623055935,
    -0.011856109835207462,
    0.002879801904782653,
    -0.0056915064342319965,
    0.005670001730322838,
    -0.026952221989631653,
    0.005781108047813177,
    -0.01661575771868229,
    -0.03013487718999386,
    -0.014300446957349777,
    -0.01598496176302433,
    0.0017140824347734451,
    0.0017705315258353949,
    0.0005537391407415271,
    0.006824072916060686,
    0.017375580966472626,
    -0.0068384092301130295,
    -0.02672284096479416,
    0.002216748660430312,
    -0.035611338913440704,
    0.03624213486909866,
    -0.0034174127504229546,
    -0.04128850996494293,
    -0.013985048979520798,
    -0.007576728239655495,
    0.022249918431043625,
    -0.004275797866284847,
    0.020113812759518623,
    0.031224435195326805,
    -0.012035313993692398,
    -0.0018798457458615303,
    -0.011440358124673367,
    -0.0034801338333636522,
    -0.007279250305145979,
    0.021934520453214645,
    -0.018450802192091942,
    -0.03701629489660263,
    0.029059655964374542,
    0.005842037498950958,
    0.00814301148056984,
    0.017805669456720352,
    -0.03320284187793732,
    0.006630533374845982,
    -0.010823897086083889,
    0.0022597573697566986,
    -0.016830801963806152,
    0.004709470551460981,
    -0.024687089025974274,
    0.02120337076485157,
    0.038392581045627594,
    0.014637350104749203,
    0.015769917517900467,
    0.02838584966957569,
    0.032715409994125366,
    0.005336683243513107,
    0.007806108798831701,
    -0.020343191921710968,
    -0.018479475751519203,
    -0.014565669000148773,
    0.018938235938549042,
    -0.017561953514814377,
    0.01908160001039505,
    -0.010565844364464283,
    0.028314169496297836,
    -0.017705315724015236,
    -0.04174727201461792,
    0.0008928819443099201,
    0.008207525126636028,
    0.03354691341519356,
    0.005623409058898687,
    -0.007605400867760181,
    0.007548055611550808,
    -0.0053008426912128925,
    0.012673278339207172,
    -0.005207656882703304,
    -0.004250709433108568,
    0.03836390748620033,
    -0.012293366715312004,
    -0.018680183216929436,
    0.017404254525899887,
    0.011927791871130466,
    0.010013896971940994,
    -0.013913367874920368,
    -0.011447526514530182,
    0.007318675052374601,
    0.013583633117377758,
    0.001572511624544859,
    0.025719301775097847,
    -0.021146025508642197,
    0.0338909849524498,
    -0.0016388169024139643,
    0.0265794787555933,
    -0.016658766195178032,
    0.017992042005062103,
    0.02184850350022316,
    0.012608765624463558,
    0.01278796885162592,
    0.0198700949549675,
    0.010185932740569115,
    0.04260744899511337,
    -0.013483279384672642,
    -0.02247929945588112,
    -0.002847545314580202,
    0.005433453246951103,
    0.0004061201470904052,
    -0.009576640091836452,
    -0.026192398741841316,
    0.007347347680479288,
    -0.011906287632882595,
    0.0077344272285699844,
    0.016572749242186546,
    0.03976886346936226,
    -0.002949691377580166,
    0.021547440439462662,
    -0.007533719297498465,
    0.036586206406354904,
    0.029131338000297546,
    0.02037186548113823,
    -0.019526025280356407,
    -0.014673191122710705,
    -0.02835717797279358,
    -0.005343851167708635,
    -0.023755230009555817,
    -0.024099299684166908,
    -0.014486819505691528,
    0.005236329045146704,
    -0.04292284697294235,
    0.045904792845249176,
    0.0011791597353294492,
    -0.005702258553355932,
    0.016845138743519783,
    0.009906374849379063,
    -0.029934169724583626,
    -0.021762484684586525,
    -0.053216300904750824,
    0.03377629444003105,
    -0.007078542374074459,
    0.014737703837454319,
    -0.02085929922759533,
    -0.00010533812019275501,
    -0.0017355869058519602,
    -0.015454518608748913,
    0.016988500952720642,
    0.017891688272356987,
    0.003920974675565958,
    -0.008264870382845402,
    0.02984815090894699,
    -0.04088709503412247,
    0.006931595504283905,
    0.006125179119408131,
    -0.017805669456720352,
    -0.009698498994112015,
    -0.02233593724668026,
    0.035123907029628754,
    0.008343719877302647,
    -0.010357968509197235,
    0.027583017945289612,
    0.03813452646136284,
    0.02316744066774845,
    -0.012099826708436012,
    -0.012121331878006458,
    -0.020801953971385956,
    -0.01807805895805359,
    -0.0011495910584926605,
    0.019282307475805283,
    -0.016701776534318924,
    -0.020171158015727997,
    -0.023382486775517464,
    0.006261373870074749,
    0.02068726345896721,
    -0.019526025280356407,
    0.011877615004777908,
    -0.01205681823194027,
    -0.00814301148056984,
    -0.032514702528715134,
    -0.015053102746605873,
    0.0016531532164663076,
    0.03827789053320885,
    0.02169080451130867,
    0.028285495936870575,
    -0.004996196366846561,
    -0.024228326976299286,
    -0.017662307247519493,
    -0.025518592447042465,
    -0.020801953971385956,
    0.005920886993408203,
    0.005967480130493641,
    0.009755844250321388,
    -0.0027059742715209723,
    -0.007322259247303009,
    0.01516779325902462,
    0.01906726323068142,
    0.003849293338134885,
    -0.0035159746184945107,
    0.015497527085244656,
    0.014450978487730026,
    -0.010802392847836018,
    0.007476374041289091,
    -0.008737967349588871,
    -0.009146551601588726,
    0.005680754315108061,
    0.026378769427537918,
    -0.009368764236569405,
    0.0149957574903965,
    0.02769770845770836,
    -0.016830801963806152,
    -0.0028815940022468567,
    -0.016687439754605293,
    -0.003967567812651396,
    0.0056915064342319965,
    0.02756868116557598,
    -0.03148248791694641,
    0.02984815090894699,
    -0.00424354150891304,
    0.035324614495038986,
    -0.003795532276853919,
    -0.0008884018752723932,
    0.027167266234755516,
    0.02593434602022171,
    0.0060821701772511005,
    -0.009318587370216846,
    0.004107346758246422,
    -0.05189736187458038,
    -0.018493812531232834,
    0.009368764236569405,
    -0.0004735455149784684,
    -0.0008910899050533772,
    0.014479651115834713,
    -0.004512346815317869,
    -0.0332888625562191,
    -0.01483805850148201,
    0.03632815554738045,
    0.00936159584671259,
    0.010723543353378773,
    -0.018938235938549042,
    -0.006619781255722046,
    -0.027654699981212616,
    0.017432926222682,
    -0.025188857689499855,
    -0.013841685838997364,
    0.000581515661906451,
    0.015540536493062973,
    -0.009211065247654915,
    0.0010098123457282782,
    0.01223602145910263,
    -0.034808509051799774,
    -0.015683898702263832,
    0.0068563297390937805,
    -0.01710319146513939,
    -0.02021416649222374,
    0.009992392733693123,
    0.025303548201918602,
    -0.005139559507369995,
    0.009827525354921818,
    -0.010544340126216412,
    -0.007340179290622473,
    0.02867257595062256,
    -0.005003364756703377,
    -0.036442846059799194,
    -0.010530003346502781,
    -0.015038765966892242,
    0.007519382983446121,
    0.0010814936831593513,
    0.013597968965768814,
    0.017690978944301605,
    0.010400976985692978,
    0.03543930500745773,
    0.006566019728779793,
    0.017031509429216385,
    -0.016673102974891663,
    -0.04091576486825943,
    0.010551507584750652,
    0.02121770568192005,
    0.029475407674908638,
    0.015038765966892242,
    -0.002655797405168414,
    -0.005824116989970207,
    0.0022543813101947308,
    -0.025360893458127975,
    -0.008436905220150948,
    -0.004619868937879801,
    0.009590976871550083,
    -0.0030285408720374107,
    0.008859826251864433,
    0.03320284187793732,
    -0.009927879087626934,
    0.005616240669041872,
    0.03128178045153618,
    -0.004415576811879873,
    -0.02837151475250721,
    0.019927440211176872,
    0.01761929877102375,
    0.0045015946961939335,
    -0.009476286359131336,
    0.030450275167822838,
    -0.005372523795813322,
    -0.012594428844749928,
    0.0009345467551611364,
    -0.011132127605378628,
    -0.013992217369377613,
    0.020128147676587105,
    -0.007806108798831701,
    0.013884695246815681,
    -0.013017349876463413,
    -0.020457882434129715,
    -0.021604785695672035,
    -0.003723850939422846,
    0.047395769506692886,
    0.0009022901067510247,
    0.02071593701839447,
    -0.031367797404527664,
    0.003906638361513615,
    0.004763231612741947,
    -0.0034281648695468903,
    0.009404605254530907,
    -0.001572511624544859,
    -0.005483630113303661,
    -0.013339916244149208,
    0.03274408355355263,
    -0.011096286587417126,
    -0.007390356622636318,
    -0.02592000924050808,
    -0.021633459255099297,
    -0.02590567246079445,
    0.01939699798822403,
    0.0077702682465314865,
    0.017633633688092232,
    -0.0052650016732513905,
    -0.005515886936336756,
    0.017561953514814377,
    -0.006257789675146341,
    0.0038098685909062624,
    -0.0006576772429980338,
    0.01711752824485302,
    -0.006928011309355497,
    0.011196641251444817,
    0.020171158015727997,
    0.028787266463041306,
    0.01860850118100643,
    0.006623364984989166,
    -0.010802392847836018,
    -0.0029084745328873396,
    -0.0006957579753361642,
    -0.04490125551819801,
    0.02655080519616604,
    -0.019784078001976013,
    -0.025332221761345863,
    -0.009727171622216702,
    0.032514702528715134,
    0.0038779659662395716,
    -0.028314169496297836,
    -0.019984785467386246,
    0.015841597691178322,
    0.024228326976299286,
    0.007250577677041292,
    -0.02134673297405243,
    -0.03632815554738045,
    -0.012866818346083164,
    -0.0188952274620533,
    0.013103367760777473,
    0.006021241191774607,
    -0.018809210509061813,
    -0.018465138971805573,
    0.02312443219125271,
    0.003553607501089573,
    0.016558412462472916,
    0.0009018421405926347,
    0.01644372195005417,
    0.00027440552366897464,
    0.01823575794696808,
    0.02513151243329048,
    0.043610990047454834,
    0.00692442711442709,
    -0.009110711514949799,
    -0.00888849887996912,
    0.006748807616531849,
    0.009454782120883465,
    -0.012121331878006458,
    0.004580444190651178,
    -0.01888089068233967,
    0.011426021344959736,
    0.011003101244568825,
    0.023998945951461792,
    0.015139120630919933,
    -0.019999122247099876,
    0.013468942604959011,
    0.0013386509381234646,
    0.0013135623885318637,
    -0.025217531248927116,
    -0.019626379013061523,
    -0.026335760951042175,
    0.004096594173461199,
    -0.019454343244433403,
    0.01827876642346382,
    0.011296994984149933,
    -0.02005646750330925,
    -0.025461247190833092,
    -0.005472877994179726,
    -0.01132566761225462,
    0.05003364384174347,
    0.020013459026813507,
    0.03145381435751915,
    0.03460779786109924,
    0.011354340240359306,
    0.005318762734532356,
    -0.010723543353378773,
    0.016544075682759285,
    -0.02252230793237686,
    0.026837531477212906,
    0.013683986850082874,
    -0.004928098991513252,
    0.0021432749927043915,
    -0.013805845752358437,
    -0.004329558927565813,
    -0.022708680480718613,
    -0.01843646727502346,
    0.01630035974085331,
    0.02397027425467968,
    0.010694870725274086,
    -0.02936071716248989,
    -0.027783725410699844,
    -0.015841597691178322,
    0.006659206002950668,
    -0.023998945951461792,
    -0.001329690683633089,
    0.006182524375617504,
    0.00402849679812789,
    -0.00011547432222869247,
    0.02590567246079445,
    0.016587086021900177,
    0.01280947308987379,
    0.009383101016283035,
    0.020486555993556976,
    0.010558675974607468,
    -0.0332888625562191,
    -0.02703823894262314,
    -0.015110448002815247,
    0.03248602896928787,
    0.02153310552239418,
    -0.005806196480989456,
    -0.00863044522702694,
    0.006031993310898542,
    -0.01515345647931099,
    -0.01812106743454933,
    0.0027633195277303457,
    -0.007562391925603151,
    0.04226337745785713,
    -0.022565318271517754,
    0.0096913306042552,
    -0.008716463111341,
    -0.01247257087379694,
    -0.018063722178339958,
    -0.022737352177500725,
    -0.002055465243756771,
    0.0007136783679015934,
    -0.013232394121587276,
    -0.011777260340750217,
    0.01942566968500614,
    -0.011598057113587856,
    -0.023110097274184227,
    -0.0019712396897375584,
    -0.0017535071820020676,
    -0.011117791756987572,
    -0.013468942604959011,
    -0.0012499451404437423,
    0.009490623138844967,
    -0.010221773758530617,
    -0.026321424171328545,
    -0.024343017488718033,
    -0.010716374963521957,
    -0.0006684294203296304,
    0.01515345647931099,
    0.013927703723311424,
    0.0011146464385092258,
    0.0537610799074173,
    -0.018479475751519203,
    0.012924163602292538,
    -0.003017788752913475,
    0.03343222290277481,
    -0.019038589671254158,
    0.005490798503160477,
    0.002618164522573352,
    -0.02526053972542286,
    0.04025629535317421,
    -0.006827657110989094,
    -0.028142133727669716,
    -0.026307089254260063,
    0.01680213026702404,
    0.02639310620725155,
    -0.01793469674885273,
    -0.03647151589393616,
    0.0023278547450900078,
    0.016070978716015816,
    0.013440269976854324,
    -0.022278591990470886,
    -0.028658239170908928,
    0.04659293591976166,
    0.00789929460734129,
    0.009160888381302357,
    0.008465577848255634,
    -0.0045015946961939335,
    0.003845709376037121,
    0.0027597355656325817,
    0.0009874118259176612,
    -0.006017656996846199,
    -0.020242838189005852,
    -0.009655489586293697,
    -0.026708504185080528,
    -0.009404605254530907,
    -0.018536821007728577,
    0.005254249554127455,
    -0.007927967235445976,
    -0.02232160046696663,
    -0.014881066977977753,
    0.023425495252013206,
    0.031224435195326805,
    -0.011268322356045246,
    -0.025217531248927116,
    0.00060570816276595,
    -0.0022579652722924948,
    0.002585907932370901,
    0.0033779877703636885,
    -0.03558266535401344,
    -0.002421040553599596,
    0.001376283704303205,
    -0.0246297437697649,
    -0.01954036019742489,
    -0.013246729969978333,
    0.025303548201918602,
    0.0076555777341127396,
    -0.03151116147637367,
    -0.009103543125092983,
    -0.013074695132672787,
    -0.01149770338088274,
    -0.01523947436362505,
    -0.007171728182584047,
    0.022880716249346733,
    0.027339302003383636,
    -0.0014372129226103425,
    0.005616240669041872,
    0.019267970696091652,
    -0.008565932512283325,
    0.01631469652056694,
    -0.012243189848959446,
    -0.011547880247235298,
    0.004078674130141735,
    0.025002487003803253,
    -0.007354515604674816,
    -0.0019461511401459575,
    -0.03736036643385887,
    -0.00197840784676373,
    0.020629918202757835,
    0.0304789487272501,
    -0.015139120630919933,
    0.016687439754605293,
    -0.0001890597923193127,
    -0.02673717774450779,
    -0.013010181486606598,
    -0.02984815090894699,
    -0.01263026986271143,
    -0.006386816501617432,
    0.016730448231101036,
    -0.014544163830578327,
    -0.007942304015159607,
    -0.03340355306863785,
    0.030708329752087593,
    -0.006200444418936968,
    -0.02561894617974758,
    0.014286111108958721,
    -0.008522923104465008,
    -0.00791363138705492,
    -0.012436729855835438,
    -0.027453992515802383,
    0.010802392847836018,
    -0.02430000901222229,
    0.02199186570942402,
    0.019024254754185677,
    0.0130460225045681,
    0.010286286473274231,
    0.0017785957315936685,
    -0.0019121024524793029,
    -0.0064477454870939255,
    0.023597531020641327,
    -0.022092219442129135,
    -0.00480265635997057,
    0.02705257572233677,
    -0.017662307247519493,
    -0.011375844478607178,
    -0.010938587598502636,
    0.02789841592311859,
    -0.016658766195178032,
    -0.00029882200760766864,
    -0.018522484228014946,
    -0.028242487460374832,
    -0.03346089646220207,
    -0.017060182988643646,
    0.033661603927612305,
    -0.022063547745347023,
    -0.006089338567107916,
    0.0038779659662395716,
    0.008996021002531052,
    0.010429649613797665,
    -0.0285292137414217,
    -0.018135404214262962,
    -0.02249363623559475,
    -0.01925363577902317,
    -0.0034192046150565147,
    0.012830978259444237,
    -0.020271511748433113,
    -0.014121243730187416,
    -0.002231084741652012,
    -0.054219841957092285,
    -0.013884695246815681,
    0.16446590423583984,
    0.0033708198461681604,
    0.025547266006469727,
    0.01925363577902317,
    0.0009009460918605328,
    0.03475116193294525,
    0.006540931295603514,
    -0.004584027919918299,
    -0.0070821261033415794,
    0.03865063190460205,
    0.00805699359625578,
    -0.027669036760926247,
    0.009261242114007473,
    0.0051431432366371155,
    0.0011424229014664888,
    0.02037186548113823,
    -0.021733812987804413,
    -0.027955761179327965,
    -0.039224084466695786,
    -0.0076125687919557095,
    -0.003143231151625514,
    -0.023511512205004692,
    -0.018952572718262672,
    -0.008723631501197815,
    0.03065098449587822,
    -0.009418941102921963,
    -0.017002837732434273,
    -0.02541823871433735,
    0.01027911901473999,
    -0.012114163488149643,
    -0.006132347043603659,
    0.006454913876950741,
    -0.006021241191774607,
    -0.004096594173461199,
    -0.03483717888593674,
    -0.004698718432337046,
    -0.005684338044375181,
    -0.003992656245827675,
    0.026694169268012047,
    0.00716814398765564,
    -0.0203575287014246,
    -0.035324614495038986,
    -0.016587086021900177,
    -0.02736797370016575,
    -0.0028887621592730284,
    -0.00749787874519825,
    -0.01393487211316824,
    -0.01139734871685505,
    -0.014866731129586697,
    0.011705579236149788,
    -0.023568857461214066,
    -0.01010708324611187,
    0.012264694087207317,
    0.039195410907268524,
    0.0020429210271686316,
    -0.016013633459806442,
    0.021260716021060944,
    0.024586733430624008,
    0.01774832420051098,
    0.015124783851206303,
    -0.02382691018283367,
    0.033489570021629333,
    -0.01726089045405388,
    0.0017579873092472553,
    -0.040485676378011703,
    0.011942127719521523,
    -0.011956464499235153,
    0.0012374009238556027,
    -0.02085929922759533,
    -0.01083823386579752,
    0.014938412234187126,
    -0.01793469674885273,
    0.00911787897348404,
    0.006816904991865158,
    -0.017160536721348763,
    -0.01842213049530983,
    0.029762133955955505,
    0.01336142048239708,
    0.02233593724668026,
    0.014207261614501476,
    -0.005465710069984198,
    0.023024078458547592,
    -0.025031158700585365,
    0.02903098426759243,
    0.0008552491781301796,
    -0.010049737989902496,
    0.03979753702878952,
    -0.007318675052374601,
    -0.018006378784775734,
    -0.028629567474126816,
    -0.02247929945588112,
    -0.022450627759099007,
    0.01611398719251156,
    -0.0003418308624532074,
    0.008680622093379498,
    0.025389567017555237,
    0.0011245026253163815,
    0.010651862248778343,
    0.007046285551041365,
    0.0010501331416890025,
    -0.018966909497976303,
    0.046392228454351425,
    0.017475934699177742,
    -0.021776821464300156,
    -0.025790981948375702,
    -0.0037346030585467815,
    0.0005904758581891656,
    0.0003937999135814607,
    0.029475407674908638,
    -0.007849117740988731,
    -0.01680213026702404,
    -0.018321776762604713,
    0.0030410850886255503,
    -0.007720090914517641,
    0.014809385873377323,
    0.0005640433519147336,
    0.0018690935103222728,
    -0.0096913306042552,
    0.025231866165995598,
    0.016185669228434563,
    0.008838322013616562,
    -0.0018162284977734089,
    0.006752391811460257,
    -0.01205681823194027,
    -0.019124608486890793,
    -0.014185757376253605,
    -0.022895053029060364,
    -0.014185757376253605,
    -0.023568857461214066,
    0.00677031185477972,
    0.015870271250605583,
    -0.028428860008716583,
    0.0010779096046462655,
    0.0061968606896698475,
    -0.01351911947131157,
    -0.011963631957769394,
    -0.022264255210757256,
    -0.010730711743235588,
    -0.0060750022530555725,
    0.0016728655900806189,
    -0.03131045401096344,
    0.01409257110208273,
    0.005734515376389027,
    -0.015440181829035282,
    -0.0016370249213650823,
    -0.025174522772431374,
    0.025532929226756096,
    -0.008910003118216991,
    -0.01776266098022461,
    -0.011734251864254475,
    -0.011304163374006748,
    -0.021318061277270317,
    0.01598496176302433,
    -0.007512215059250593,
    0.001910310355015099,
    -0.019282307475805283,
    -0.013712659478187561,
    -0.012121331878006458,
    0.015698235481977463,
    0.007336595561355352,
    -0.036958951503038406,
    0.0025321468710899353,
    -0.013146376237273216,
    -0.002740022959187627,
    -0.04031364247202873,
    -0.011404517106711864,
    -0.1831604242324829,
    -0.008479914627969265,
    0.022120893001556396,
    -0.050463732331991196,
    0.01010708324611187,
    -0.023210451006889343,
    0.01807805895805359,
    0.00203575287014246,
    -0.021418415009975433,
    0.0010492370929569006,
    0.04189063236117363,
    0.00169168203137815,
    -0.01939699798822403,
    -0.0179203599691391,
    -0.0026701337192207575,
    -0.012752127833664417,
    -0.01409257110208273,
    0.007626905106008053,
    0.01042248122394085,
    0.004512346815317869,
    0.04203399643301964,
    -0.0033833640627563,
    0.014658854342997074,
    0.005204072687774897,
    0.016701776534318924,
    -0.0009542591869831085,
    -0.01661575771868229,
    -0.002562611596658826,
    0.0027686955872923136,
    -0.010565844364464283,
    -0.009684162214398384,
    0.031367797404527664,
    0.02329646795988083,
    0.02266567200422287,
    0.043094880878925323,
    -0.006619781255722046,
    0.003668297780677676,
    -0.02495947666466236,
    0.005118054803460836,
    0.02574797347187996,
    0.00791363138705492,
    0.024859122931957245,
    0.044786565005779266,
    -0.006010488606989384,
    -0.04352496936917305,
    0.012615933082997799,
    0.011268322356045246,
    -0.034005675464868546,
    0.019110271707177162,
    -0.015196464955806732,
    0.016185669228434563,
    -0.0005264105857349932,
    0.009913543239235878,
    -0.005709426943212748,
    0.007193232420831919,
    0.019626379013061523,
    0.013719827868044376,
    -0.015210801735520363,
    -0.0051431432366371155,
    -0.004662877880036831,
    0.002636085031554103,
    -0.01876620203256607,
    0.00688141817227006,
    -0.004365399945527315,
    -0.0035464393440634012,
    -0.033174172043800354,
    -0.021103015169501305,
    0.02738231047987938,
    -0.016200006008148193,
    0.009246906265616417,
    -0.0038707978092134,
    0.014085402712225914,
    0.016873810440301895,
    -0.0045015946961939335,
    0.011934960260987282,
    -0.0036665056832134724,
    -0.020443547517061234,
    0.025375230237841606,
    0.027095584198832512,
    -0.010357968509197235,
    -0.018207086250185966,
    0.02918868325650692,
    0.012422394007444382,
    0.012558588758111,
    0.008573099970817566,
    -0.00847274623811245,
    -0.017805669456720352,
    0.0024497131817042828,
    -0.005899382755160332,
    -0.013433101586997509,
    0.014458146877586842,
    -0.004139603115618229,
    0.009684162214398384,
    -0.015927616506814957,
    -0.007229073438793421,
    0.02316744066774845,
    0.015511863864958286,
    0.004411992616951466,
    0.008358055725693703,
    -0.02247929945588112,
    0.008766639977693558,
    0.018694519996643066,
    -0.002783031901344657,
    0.01002106536179781,
    0.04103045538067818,
    0.007626905106008053,
    -0.03549664840102196,
    0.016214340925216675,
    0.01648673042654991,
    0.02771204523742199,
    0.013963544741272926,
    -0.0077702682465314865,
    0.01221451722085476,
    0.0007611673208884895,
    -0.02819947898387909,
    0.02117469720542431,
    -0.00020138004038017243,
    -0.014780713245272636,
    0.004347479436546564,
    -0.013906199485063553,
    0.044413819909095764,
    -0.001983783906325698,
    0.004336727317422628,
    4.3736879888456315e-05,
    -0.016701776534318924,
    -0.030765675008296967,
    -0.09886304289102554,
    -0.031052399426698685,
    0.018350448459386826,
    0.002682677935808897,
    -0.03159717842936516,
    0.010286286473274231,
    -0.007282834500074387,
    0.0377904549241066,
    -0.021963194012641907,
    -0.004146771505475044,
    0.004014160484075546,
    0.015884608030319214,
    -0.013339916244149208,
    -0.011067613959312439,
    -0.0041252668015658855,
    -0.013253898359835148,
    -0.012250358238816261,
    -0.008078498765826225,
    -0.006232701241970062,
    0.00207876181229949,
    -0.005465710069984198,
    0.00044330491800792515,
    0.0352385975420475,
    0.003021372715011239,
    -0.018680183216929436,
    -0.022608326748013496,
    -0.044729217886924744,
    0.01010708324611187,
    -0.009031861089169979,
    0.03575470298528671,
    0.006956683937460184,
    -0.017518943175673485,
    0.007562391925603151,
    -0.005548143293708563,
    0.0028708416502922773,
    6.417729309760034e-05,
    -0.03475116193294525,
    -0.018852218985557556,
    0.03363293036818504,
    -0.009017525240778923,
    -0.009920711629092693,
    0.017863014712929726,
    0.040858421474695206,
    0.004325974732637405,
    -6.288926670094952e-05,
    -0.021877175197005272,
    -0.008673454634845257,
    0.004799072630703449,
    0.03099505417048931,
    -0.025174522772431374,
    -0.014709031209349632,
    -0.023267796263098717,
    0.015253810212016106,
    -0.0184077937155962,
    0.014450978487730026,
    0.008716463111341,
    0.013726996257901192,
    0.022880716249346733,
    -0.012508410960435867,
    0.0076484098099172115,
    0.0101787643507123,
    -0.023998945951461792,
    0.009720003232359886,
    0.01726089045405388,
    0.010042569600045681,
    -0.004132435191422701,
    0.021246379241347313,
    0.005067877937108278,
    0.026493459939956665,
    -0.043926388025283813,
    -0.023769564926624298,
    0.005580400116741657,
    -0.011662570759654045,
    -0.011139295995235443,
    -0.006544515490531921,
    0.024658415466547012,
    0.013311243616044521,
    0.010623189620673656,
    0.021303724497556686,
    0.014135580509901047,
    -0.016243014484643936,
    -0.002200620248913765,
    -0.014723367989063263,
    -0.005770355928689241,
    0.005594736430794001,
    0.012207349762320518,
    0.019181953743100166,
    0.007562391925603151,
    0.026937885209918022,
    -0.03859328851103783,
    0.007870621979236603,
    0.006784648168832064,
    0.03162585198879242,
    0.021561777219176292,
    -0.00280991243198514,
    -0.0026056203059852123,
    0.008501418866217136,
    0.00246584159322083,
    -0.006910090800374746,
    0.015855934470891953,
    -0.047539129853248596,
    -0.0012221685610711575,
    -0.09427542984485626,
    0.027597354725003242,
    0.03176921606063843,
    -0.006691462360322475,
    -0.002030376810580492,
    -0.010164428502321243,
    0.016027970239520073,
    -0.017820006236433983,
    -0.0021647794637829065,
    0.009655489586293697,
    -0.015053102746605873,
    -0.004842081107199192,
    -0.006175355985760689,
    -0.0067273033782839775,
    0.0023547352757304907,
    -0.01989876851439476,
    0.04811258241534233,
    -0.020013459026813507,
    0.05565347149968147,
    -0.013698323629796505,
    0.015855934470891953,
    -0.02394160069525242,
    0.0295040812343359,
    0.017203545197844505,
    -0.0027669034898281097,
    -0.014938412234187126,
    0.020414873957633972,
    -0.00319699221290648,
    -0.0014542372664436698,
    -0.017848677933216095,
    0.009748675860464573,
    0.002535731066018343,
    0.020787617191672325,
    0.013003013096749783,
    -0.0002513330546207726,
    -0.001767843496054411,
    0.04077240452170372,
    0.013476110994815826,
    0.011784428730607033,
    0.024041954427957535,
    -0.01328973937779665,
    -0.02052956447005272,
    0.042779482901096344,
    -0.04561806842684746,
    -0.018823545426130295,
    -0.0064405775628983974,
    0.003677257802337408,
    0.012020977213978767,
    0.02577664516866207,
    0.015296819619834423,
    0.02087363600730896,
    0.002856505336239934,
    -0.03721700236201286,
    0.006411904934793711,
    0.0193826612085104,
    -0.005641329567879438,
    0.02121770568192005,
    -0.00037610356230288744,
    -0.023411158472299576,
    -0.022378945723176003,
    0.012701950967311859,
    0.0035428551491349936,
    -0.007576728239655495,
    0.018336111679673195,
    0.001038484857417643,
    -0.026808857917785645,
    -0.030593639239668846,
    -0.04527399688959122,
    -0.013146376237273216,
    -0.0035589835606515408,
    -0.023196114227175713,
    -0.02280903421342373,
    0.0048743379302322865,
    0.0015017262194305658,
    0.0026271247770637274,
    0.003924558870494366,
    -0.0009399228729307652,
    -0.004193364176899195,
    -0.04137452691793442,
    0.01922496221959591,
    0.0135334562510252,
    -0.028586558997631073,
    -0.046076830476522446,
    -0.0096913306042552,
    0.021389741450548172,
    -0.006046329624950886,
    0.0042220368050038815,
    0.0009811397176235914,
    -0.0008028321317397058,
    0.014228765852749348,
    -0.004476505797356367,
    0.012587261386215687,
    0.009096374735236168,
    0.008752304129302502,
    -0.0169454924762249,
    0.017561953514814377,
    -0.002636085031554103,
    -0.014544163830578327,
    -0.005981815978884697,
    -0.025360893458127975,
    0.012537083588540554,
    0.007619737181812525,
    0.017504608258605003,
    -0.029561426490545273,
    0.00222212471999228,
    -0.024543724954128265,
    -0.00971283484250307,
    -0.020773282274603844,
    -0.018164077773690224,
    0.04008426144719124,
    0.007340179290622473,
    -0.008637613616883755,
    -0.00628287810832262,
    0.01713186502456665,
    -0.038736648857593536,
    -0.003218496683984995,
    -0.008100003004074097,
    0.007634073495864868,
    0.0005031141336075962,
    0.004351063631474972,
    0.005092966370284557,
    0.027439655736088753,
    0.0479118749499321,
    -0.01809239573776722,
    -0.008451241999864578,
    -0.012737791985273361,
    -0.0023350229021161795,
    -0.02541823871433735,
    0.0027758637443184853,
    0.0009712835308164358,
    -0.009648322127759457,
    0.022077884525060654,
    -0.04257877543568611,
    -0.01695982925593853,
    0.02752567268908024,
    -0.01125398650765419,
    -0.006024824921041727,
    -0.004541019443422556,
    0.01708885468542576,
    0.059753648936748505,
    0.002824248746037483,
    -0.01132566761225462,
    -0.00497827585786581,
    -0.021905848756432533,
    -0.0016872019041329622,
    -0.006250621750950813,
    0.028170805424451828,
    0.0002847097348421812,
    -0.01627168618142605,
    -0.0004766815691255033,
    -0.03305948153138161,
    0.0015940159792080522,
    -0.01888089068233967,
    -0.03013487718999386,
    0.029561426490545273,
    -0.0066126128658652306,
    0.012257526628673077,
    -0.02088797092437744,
    -0.008336551487445831,
    0.03460779786109924,
    0.008673454634845257,
    -0.0014318367466330528,
    -0.021561777219176292,
    -0.0323139950633049,
    0.0017481311224400997,
    0.029733462259173393,
    0.010164428502321243,
    0.003677257802337408,
    -0.053072936832904816,
    0.01826443150639534,
    -0.009454782120883465,
    -0.014795049093663692,
    -0.025188857689499855,
    -0.007074958179146051,
    0.005573232192546129,
    0.017189210280776024,
    -0.014809385873377323,
    0.0063079665414988995,
    0.019024254754185677,
    -0.013676818460226059,
    0.0076125687919557095,
    -0.03515257686376572,
    -0.0260920450091362,
    -0.009633985348045826,
    0.0014649893855676055,
    0.014085402712225914,
    0.0188952274620533,
    -0.032514702528715134
  ]
}
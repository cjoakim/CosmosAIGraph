{
  "classifiers": [
    "development status :: 3 - alpha",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "# fireworks.ai python library\n\nfireworks.ai python library provides a convenient api for accessing fireworks supported llms. we are targeting our api to be very similar to openai's api so you can replace openai usage with minimal modifications\n\n## installation\n\n```sh\npip install --upgrade fireworks-ai\n```\n\n## api definitions\nplease check our [completion](https://fireworksai.readme.io/reference/createchatcompletion) and [chat completion](https://fireworksai.readme.io/reference/createcompletion) api reference for the arguments we support and the meaning of each arguments.\n\n## example code\n\n### list\n\n```python\nimport fireworks.client\nfireworks.client.api_key = \"your-key\"\nprint(fireworks.client.models.list())\n```\n\n```\nobject='list' data=[model(id=\"accounts/fireworks/models/llama-v2-7b\", object=\"model\", created=0), ...]\n```\n\n### completion\n\n```python\nimport fireworks.client\nfireworks.client.api_key = \"your-key\"\ncompletion = fireworks.client.completion.create(\"accounts/fireworks/models/llama-v2-7b\", \"once upon a time\", temperature=0.1, n=2, max_tokens=16)\nprint(completion)\n```\n\n```\nid='cmpl-988e179fa14fbaebdf17c713' object='text_completion' created=1691602259 model='accounts/fireworks/models/llama-v2-7b' choices=[choice(text=', there was an emperor who reigned over all the kingdoms of the', index=0, finish_reason='length'), choice(text=', a boy lived in a small house with his mom and dad. his', index=1, finish_reason='length')]\n```\n\n### streaming completion\n\n```python\nimport fireworks.client\nfireworks.client.api_key = \"your-key\"\nfor completion in fireworks.client.completion.create(\n    \"accounts/fireworks/models/llama-v2-7b\",\n    prompt=\"once upon a time\",\n    temperature=0.1,\n    n=2,\n    max_tokens=16\n):\n    print(completion)\n```\n\n\n### async completion\n\n```python\nimport asyncio\nimport fireworks.client\nfireworks.client.api_key = \"your-key\"\nasync def main():\n    response = await fireworks.client.completion.acreate(\"accounts/fireworks/models/llama-v2-7b\", \"once upon a time\", echo=true, max_tokens=16)\n    print(response.choices[0].text)\nasyncio.run(main())\n```\n\nthen run the script\n\n```\n$ python test.py\nonce upon a time, there used to be a huge mountain that was the most famous mou\n```\n\n### chatcompletion\n\n```python\nimport fireworks.client\nfireworks.client.api_key = \"your-key\"\ncompletion = fireworks.client.chatcompletion.create(\n    \"accounts/fireworks/models/llama-v2-7b-chat\",\n    messages=[{\"role\": \"user\", \"content\": \"hello there!\"}],\n    temperature=0.7,\n    n=2,\n    max_tokens=16\n)\nprint(completion)\n```\n\n```\nid='cmpl-ec241c8f5b8d50bcf792f2df' object='chat.completion' created=1691896960 model='accounts/fireworks/models/llama-v2-7b-chat' choices=[chatcompletionresponsechoice(index=0, message=chatmessage(role='assistant', content=\" hello! it's nice to meet you. is there something i can\"), finish_reason='length'), chatcompletionresponsechoice(index=1, message=chatmessage(role='assistant', content=\" hello! it's nice to meet you. is there something i can\"), finish_reason='length')] usage=usageinfo(prompt_tokens=23, total_tokens=55, completion_tokens=32)\n```\n\n## requirements\n\n- python 3.7\n",
  "docs_url": null,
  "keywords": "",
  "license": "the mit license  copyright (c) fireworks (https://fireworks.ai)  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
  "name": "fireworks-ai",
  "package_url": "https://pypi.org/project/fireworks-ai/",
  "project_url": "https://pypi.org/project/fireworks-ai/",
  "project_urls": {
    "Homepage": "https://fireworks.ai"
  },
  "release_url": "https://pypi.org/project/fireworks-ai/0.10.0/",
  "requires_dist": [
    "httpx",
    "httpx-sse",
    "pydantic",
    "Pillow"
  ],
  "requires_python": ">=3.7",
  "summary": "python client library for the fireworks.ai generative ai platform",
  "version": "0.10.0",
  "releases": [],
  "developers": [
    "info@fireworks.ai"
  ],
  "kwds": "fireworksai fireworks api openai api_key",
  "license_kwds": "copyright liability liable license fireworks",
  "libtype": "pypi",
  "id": "pypi_fireworks_ai",
  "homepage": "",
  "release_count": 18,
  "dependency_ids": [
    "pypi_httpx",
    "pypi_httpx_sse",
    "pypi_pillow",
    "pypi_pydantic"
  ]
}
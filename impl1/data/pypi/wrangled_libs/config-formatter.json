{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: quality assurance"
  ],
  "description": "# config-formatter\n\n[![pypi version](https://img.shields.io/pypi/v/config-formatter.svg)](https://pypi.python.org/pypi/config-formatter) [![python version](https://img.shields.io/badge/python-3.6%2b-blue.svg)](https://pypi.python.org/pypi/config-formatter) [![build status](https://img.shields.io/github/actions/workflow/status/delgan/config-formatter/tests.yml?branch=main)](https://github.com/delgan/config-formatter/actions/workflows/tests.yml?query=branch:main) [![license](https://img.shields.io/github/license/delgan/config-formatter.svg)](https://github.com/delgan/config-formatter/blob/main/license)\n\nan automatic formatter for .ini and .cfg configuration files.\n\n\n## installation\n\n```shell\npip install config-formatter\n```\n\n## usage\n\n```python\nfrom config_formatter import configformatter\n\nwith open(\"config.ini\", \"r\") as file:\n    formatter = configformatter()\n    formatted = formatter.prettify(file.read())\n    print(formatted)\n```\n\n## example\n\nbefore:\n\n```ini\n[main]        # comments are preserved.\n\n    # error-prone indentation is removed.\n    [section1]\n    key1: value1\n    key2=value2  # value assignment is normalized.\n\n\n[section2]\nlists =\n are\n indented\n# including\n comments\n\nmultiline =    text that spans\n on several lines\n      is properly aligned.\n```\n\nafter:\n\n```ini\n[main]  # comments are preserved.\n\n# error-prone indentation is removed.\n[section1]\nkey1 = value1\nkey2 = value2  # value assignment is normalized.\n\n[section2]\nlists =\n    are\n    indented\n    # including\n    comments\n\nmultiline = text that spans\n            on several lines\n            is properly aligned.\n```\n",
  "docs_url": null,
  "keywords": "config,formatter,ini,cfg,configuration,configparser",
  "license": "mit",
  "name": "config-formatter",
  "package_url": "https://pypi.org/project/config-formatter/",
  "project_url": "https://pypi.org/project/config-formatter/",
  "project_urls": {
    "Changelog": "https://github.com/Delgan/config-formatter/blob/main/CHANGELOG.md",
    "Homepage": "https://github.com/Delgan/config-formatter"
  },
  "release_url": "https://pypi.org/project/config-formatter/1.2.0/",
  "requires_dist": [
    "configupdater >=3.0",
    "pre-commit >=2.17.0 ; extra == 'dev'",
    "pytest >=6.0.0 ; extra == 'dev'"
  ],
  "requires_python": ">=3.6",
  "summary": "an automatic formatter for .ini and .cfg configuration files",
  "version": "1.2.0",
  "releases": [],
  "developers": [
    "delgan",
    "delgan.py@gmail.com"
  ],
  "kwds": "config_formatter pypi configparser pip formatter",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_config_formatter",
  "homepage": "https://github.com/delgan/config-formatter",
  "release_count": 4,
  "dependency_ids": [
    "pypi_configupdater",
    "pypi_pre_commit",
    "pypi_pytest"
  ]
}
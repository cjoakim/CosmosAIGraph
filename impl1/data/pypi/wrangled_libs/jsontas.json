{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: apache software license",
    "programming language :: python"
  ],
  "description": "=======\njsontas\n=======\n\njsontas is a tool for generating dynamic json data.\n\ndescription\n===========\n\njsontas adds conditionals and logic to json files in order to create dynamic json data depending on which dataset you supply.\n\nit opens up the possibility to create generic tools where most of the operations are done by executing jsontas on the data.\n\ndocumentation: https://jsontas.readthedocs.io/en/latest\n\n\nfeatures\n========\n\n- simple yet powerful syntax.\n- http requests on parse\n- separation of environments by providing different datasets.\n\ninstallation\n============\n\ninstall the project by running:\n\n   pip install jsontas\n\nexamples\n========\n\nfirst we create two datasets. one for our 'dev' environment and one for our 'prod' environment.\n\ndataset 'dev.json'\n------------------\n\n.. code-block:: json\n\n   {\n      \"mode\": \"dev\",\n      \"database\": \"dev_db\"\n   }\n\n\ndataset 'prod.json'\n-------------------\n\n.. code-block:: json\n\n   {\n      \"mode\": \"prod\",\n      \"database\": \"prod_db\"\n   }\n\njsontas json file\n-----------------\n\nnext up, let's create our jsontas file.\n\n.. code-block:: json\n\n   {\n      \"database\": {\n         \"host\": \"myawesomedb.example.com\",\n         \"database\": \"$database\"\n      },\n      \"message\": {\n         \"$condition\": {\n            \"if\": {\n               \"key\": \"$mode\",\n               \"operator\": \"$eq\",\n               \"value\": \"dev\"\n            },\n            \"then\": \"this is the dev server.\",\n            \"else\": \"this is the prod server.\"\n         }\n      }\n   }\n\njsontas execute with 'dev' dataset\n----------------------------------\n\n.. code-block:: bash\n\n   jsontas -d dev.json data.json\n\n.. code-block:: json\n\n   {\n      \"database\": {\n         \"host\": \"myawesomedb.example.com\",\n         \"database\": \"dev_db\"\n      },\n      \"message\": \"this is the dev server.\"\n   }\n\njsontas execute with 'prod' dataset\n-----------------------------------\n\n.. code-block:: bash\n\n   jsontas -d prod.json data.json\n\n.. code-block:: json\n\n   {\n      \"database\": {\n         \"host\": \"myawesomedb.example.com\",\n         \"database\": \"prod_db\"\n      },\n      \"message\": \"this is the prod server.\"\n   }\n\nthese examples only show the bare minimum.\nfor more examples look at our documentation at: https://jsontas.readthedocs.io/en/latest\n\ncontribute\n==========\n\n- issue tracker: https://github.com/axiscommunications/jsontas/issues\n- source code: https://github.com/axiscommunications/jsontas\n\nsupport\n=======\n\nif you are having issues, please let us know.\nemail tobias.persson@axis.com or just write an issue.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license, version 2.0",
  "name": "jsontas",
  "package_url": "https://pypi.org/project/jsontas/",
  "project_url": "https://pypi.org/project/jsontas/",
  "project_urls": {
    "Documentation": "https://jsontas.readthedocs.io/",
    "Homepage": "https://github.com/AxisCommunications/jsontas/"
  },
  "release_url": "https://pypi.org/project/jsontas/1.4.0/",
  "requires_dist": [
    "requests",
    "pytest ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'"
  ],
  "requires_python": "",
  "summary": "jsontas is a tool for generating dynamic json structures.",
  "version": "1.4.0",
  "releases": [],
  "developers": [
    "tobias.persson@axis.com",
    "tobias_persson"
  ],
  "kwds": "jsontas json pip datasets dataset",
  "license_kwds": "apache license, version 2.0",
  "libtype": "pypi",
  "id": "pypi_jsontas",
  "homepage": "https://github.com/axiscommunications/jsontas/",
  "release_count": 5,
  "dependency_ids": [
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_requests"
  ]
}
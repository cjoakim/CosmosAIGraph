{
  "classifiers": [],
  "description": "# pip-resolved\n\n## why?\nwith tools such as poetry, pdm (thanks to [pdm-buildlocked](https://github.com/gazpachoking/pdm-buildlocked)) and pip-tools and we have the tools to build wheels with pinned dependencies, resolved at development time. unfortunately, pip doesn't offer an easy way to install that without performing a full dependency-tree resolution at install time, which slows down the process.\n\n**pip-resolved** was created as a thin wrapper around pip's existing functionality to allow users to install wheels with pre-resolved dependencies, without the need to package an extra requirements.txt or contraints file.\n\nthis is specially useful for **applications** (not libraries) that are being distributed as wheels with a fixed set of pinned dependencies to ensure reproducibility.\n\n## installation\n\n### with pip\n```shell\n$ pip install pip-resolved\n```\n\n### with pipx\n```shell\n$ pipx install pip-resolved\n```\n\n## usage\nas simple as :point_down:\n```shell\n$ pip-resolved install <wheel>\n```\n\n\n## how it works\n**pip-resolved** extracts all pinned dependencies defined as `requires-dist` on your artifact metadata, generates a temporary requirements.txt file and executes the following command\n\n```shell\n$ pip install --no-deps -r requirements.txt <wheel>\n```\n\nthe `--no-deps` command is key to make sure pip doesn't attempt to resolve the whole dependency tree.\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pip-resolved",
  "package_url": "https://pypi.org/project/pip-resolved/",
  "project_url": "https://pypi.org/project/pip-resolved/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/pip-resolved/0.3.0/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "install wheels with pre-resolved dependencies",
  "version": "0.3.0",
  "releases": [],
  "developers": [
    "lucasecardozo@gmail.com"
  ],
  "kwds": "pip pipx dependencies dependency resolve",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pip_resolved",
  "homepage": "",
  "release_count": 3,
  "dependency_ids": []
}
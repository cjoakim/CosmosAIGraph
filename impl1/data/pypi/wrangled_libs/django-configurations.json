{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: pypy",
    "topic :: utilities"
  ],
  "description": "django-configurations |latest-version|\n======================================\n\n|jazzband| |build-status| |codecov| |docs| |python-support| |django-support|\n\ndjango-configurations eases django project configuration by relying\non the composability of python classes. it extends the notion of\ndjango's module based settings loading with well established\nobject oriented programming patterns.\n\ncheck out the `documentation`_ for more complete examples.\n\n.. |latest-version| image:: https://img.shields.io/pypi/v/django-configurations.svg\n   :target: https://pypi.python.org/pypi/django-configurations\n   :alt: latest version on pypi\n\n.. |jazzband| image:: https://jazzband.co/static/img/badge.svg\n   :target: https://jazzband.co/\n   :alt: jazzband\n\n.. |build-status| image:: https://github.com/jazzband/django-configurations/workflows/test/badge.svg\n   :target: https://github.com/jazzband/django-configurations/actions\n   :alt: build status\n\n.. |codecov| image:: https://codecov.io/github/jazzband/django-configurations/coverage.svg?branch=master\n   :target: https://codecov.io/github/jazzband/django-configurations?branch=master\n   :alt: test coverage status\n\n.. |docs| image:: https://img.shields.io/readthedocs/django-configurations/latest.svg\n   :target: https://readthedocs.org/projects/django-configurations/\n   :alt: documentation status\n\n.. |python-support| image:: https://img.shields.io/pypi/pyversions/django-configurations.svg\n   :target: https://pypi.python.org/pypi/django-configurations\n   :alt: supported python versions\n\n.. |django-support| image:: https://img.shields.io/pypi/djversions/django-configurations\n   :target: https://pypi.org/project/django-configurations\n   :alt: supported django versions\n\n.. _documentation: https://django-configurations.readthedocs.io/en/latest/\n\nquickstart\n----------\n\ninstall django-configurations:\n\n.. code-block:: console\n\n    $ python -m pip install django-configurations\n\nor, alternatively, if you want to use url-based values:\n\n.. code-block:: console\n\n    $ python -m pip install django-configurations[cache,database,email,search]\n\nthen subclass the included ``configurations.configuration`` class in your\nproject's **settings.py** or any other module you're using to store the\nsettings constants, e.g.:\n\n.. code-block:: python\n\n    # mysite/settings.py\n\n    from configurations import configuration\n\n    class dev(configuration):\n        debug = true\n\nset the ``django_configuration`` environment variable to the name of the class\nyou just created, e.g. in bash:\n\n.. code-block:: console\n\n    $ export django_configuration=dev\n\nand the ``django_settings_module`` environment variable to the module\nimport path as usual, e.g. in bash:\n\n.. code-block:: console\n\n    $ export django_settings_module=mysite.settings\n\n*alternatively* supply the ``--configuration`` option when using django\nmanagement commands along the lines of django's default ``--settings``\ncommand line option, e.g.\n\n.. code-block:: console\n\n    $ python -m manage runserver --settings=mysite.settings --configuration=dev\n\nto enable django to use your configuration you now have to modify your\n**manage.py**, **wsgi.py** or **asgi.py** script to use django-configurations's versions\nof the appropriate starter functions, e.g. a typical **manage.py** using\ndjango-configurations would look like this:\n\n.. code-block:: python\n\n    #!/usr/bin/env python\n\n    import os\n    import sys\n\n    if __name__ == \"__main__\":\n        os.environ.setdefault('django_settings_module', 'mysite.settings')\n        os.environ.setdefault('django_configuration', 'dev')\n\n        from configurations.management import execute_from_command_line\n\n        execute_from_command_line(sys.argv)\n\nnotice in line 10 we don't use the common tool\n``django.core.management.execute_from_command_line`` but instead\n``configurations.management.execute_from_command_line``.\n\nthe same applies to your **wsgi.py** file, e.g.:\n\n.. code-block:: python\n\n    import os\n\n    os.environ.setdefault('django_settings_module', 'mysite.settings')\n    os.environ.setdefault('django_configuration', 'dev')\n\n    from configurations.wsgi import get_wsgi_application\n\n    application = get_wsgi_application()\n\nhere we don't use the default ``django.core.wsgi.get_wsgi_application``\nfunction but instead ``configurations.wsgi.get_wsgi_application``.\n\nor if you are not serving your app via wsgi but asgi instead, you need to modify your **asgi.py** file too.:\n\n.. code-block:: python\n\n    import os\n\n    os.environ.setdefault('django_settings_module', 'mysite.settings')\n    os.environ.setdefault('django_configuration', 'dev')\n\n    from configurations.asgi import get_asgi_application\n\n    application = get_asgi_application()\n\nthat's it! you can now use your project with ``manage.py`` and your favorite\nwsgi/asgi enabled server.\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "django-configurations",
  "package_url": "https://pypi.org/project/django-configurations/",
  "project_url": "https://pypi.org/project/django-configurations/",
  "project_urls": {
    "Homepage": "https://django-configurations.readthedocs.io/",
    "Source": "https://github.com/jazzband/django-configurations"
  },
  "release_url": "https://pypi.org/project/django-configurations/2.5/",
  "requires_dist": [
    "django >=3.2",
    "django-cache-url ; extra == 'cache'",
    "dj-database-url ; extra == 'database'",
    "dj-email-url ; extra == 'email'",
    "dj-search-url ; extra == 'search'",
    "django-cache-url >=1.0.0 ; extra == 'testing'",
    "dj-database-url ; extra == 'testing'",
    "dj-email-url ; extra == 'testing'",
    "dj-search-url ; extra == 'testing'"
  ],
  "requires_python": ">=3.8, <4.0",
  "summary": "a helper for organizing django settings.",
  "version": "2.5",
  "releases": [],
  "developers": [
    "jannis@leidel.info",
    "jannis_leidel"
  ],
  "kwds": "django_configuration django_settings_module django get_wsgi_application wsgi",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_django_configurations",
  "homepage": "https://django-configurations.readthedocs.io/",
  "release_count": 23,
  "dependency_ids": [
    "pypi_dj_database_url",
    "pypi_dj_email_url",
    "pypi_dj_search_url",
    "pypi_django",
    "pypi_django_cache_url"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: robot framework",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: software development :: testing"
  ],
  "description": ".. default-role:: code\n\nbackground logging support to test libraries\n============================================\n\nthis helper module is indented to be used by robot framework test libraries\nthat run keywords in background using threads and that want those threads\nto be able to log. by default, as `explained in robot framework user guide`__,\nmessages logged by threads using the programmatic apis are ignored, and results\nof logging using the standard output are undefined.\n\nthis module provides a custom logger that works mostly like the standard\n`robot.api.logger`__, but also stores messages logged by background threads.\nit also provides a method the main thread can use to forward the logged\nmessages to robot framework's log.\n\nrobot background logger is hosted in `github`__ and downloads can be found\nfrom `pypi`__. installation is easiest done with pip::\n\n    pip install robotbackgroundlogger\n\nstarting from version 1.2 this module support both python 2 and python 3.\n\n__ http://robotframework.org/robotframework/latest/robotframeworkuserguide.html#communication-when-using-threads\n__ https://robot-framework.readthedocs.org/en/latest/autodoc/robot.api.html#module-robot.api.logger\n__ https://github.com/robotframework/robotbackgroundlogger\n__ https://pypi.python.org/pypi/robotbackgroundlogger\n\nusage\n-----\n\nthe logger can be taken into use like this:\n\n.. sourcecode:: python\n\n    from robotbackgroundlogger import backgroundlogger\n    logger = backgroundlogger()\n\nafter that `logger` can be used mostly like `robot.api.logger`:\n\n.. sourcecode:: python\n\n    logger.debug('hello, world!')\n    logger.info('<b>html</b> example', html=true)\n\nwhen used by the main thread, messages will be logged immediately exactly like\nwith `robot.api.logger`. when used by other threads, messages will be stored\ninternally. they can be later logged by the main thread by running:\n\n.. sourcecode:: python\n\n    logger.log_background_messages()\n\nif you want to log only messages logged by a certain thread, you can use\npass the name of the thread as an argument:\n\n.. sourcecode:: python\n\n    logger.log_background_messages('example thread')\n\nlogged messages are also removed from the internal message storage. it is\npossible to do that also without logging:\n\n.. sourcecode:: python\n\n    # remove all messages\n    logger.reset_background_messages()\n    # remove messages logged by the named thread\n    logger.reset_background_messages('another thread')\n\nexample\n-------\n\n`example.py`__ library that is used by `example.robot`__ shows how this\nmodule can be used in practice. you can run the example like::\n\n    pybot example.robot\n\n__ https://github.com/robotframework/robotbackgroundlogger/blob/master/example.py\n__ https://github.com/robotframework/robotbackgroundlogger/blob/master/example.robot",
  "docs_url": null,
  "keywords": "robotframework testing testautomation atdd",
  "license": "apache license 2.0",
  "name": "robotbackgroundlogger",
  "package_url": "https://pypi.org/project/robotbackgroundlogger/",
  "project_url": "https://pypi.org/project/robotbackgroundlogger/",
  "project_urls": {
    "Download": "https://pypi.python.org/pypi/robotbackgroundlogger",
    "Homepage": "https://github.com/robotframework/robotbackgroundlogger"
  },
  "release_url": "https://pypi.org/project/robotbackgroundlogger/1.2/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "a helper module for logging to robot framework log from background threads.",
  "version": "1.2",
  "releases": [],
  "developers": [
    "robot_framework_developers",
    "robotframework@gmail.com"
  ],
  "kwds": "robotbackgroundlogger robotframeworkuserguide log_background_messages pybot robot",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_robotbackgroundlogger",
  "homepage": "https://github.com/robotframework/robotbackgroundlogger",
  "release_count": 3,
  "dependency_ids": []
}
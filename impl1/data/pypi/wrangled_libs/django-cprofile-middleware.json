{
  "classifiers": [
    "framework :: django"
  ],
  "description": "# django-cprofile-middleware\n\n[![pypi-version]][pypi]\n\nthis is a simple profiling middleware for django applications. i wrote it because i got tired of printing \"start\" \"stop\" \"stop 2\" in my programs to find the bottlenecks.\n\ni found a simple example on @dcramer's [slideshare](http://www.slideshare.net/zeeg/django-con-high-performance-django-presentation) and modified it to support sorting.\n\n## installing\n\n```bash\n$ pip install django-cprofile-middleware\n```\n\nthen add ```django_cprofile_middleware.middleware.profilermiddleware``` to the end your ```middleware``` in settings.py. this option was called ```middleware_classes``` in versions of django before [1.10](https://docs.djangoproject.com/en/1.10/topics/http/middleware/). \n\nfor example:\n\n```python\nmiddleware_classes = (\n    'django.middleware.common.commonmiddleware',\n    'django.contrib.sessions.middleware.sessionmiddleware',\n    'startup.do.work.findproductmarketfitmiddleware',\n    ...\n    'django_cprofile_middleware.middleware.profilermiddleware'\n)\n```\n\nthe profiler will only be available when the django setting `debug` is set to `true`. by default it's also required to be an authenticated user with `is_staff` set to `true` which is making the request to be profiled. the `is_staff` check can be configured as follows: \n\n```python\ndjango_cprofile_middleware_require_staff = false\n```\n\n## running & sorting results\n\nonce you've installed it, log in as a user who has staff privileges and add ```?prof``` to any url to see the profiler's stats. for example to see profile stats for ```http://localhost:8000/foo/```, visit ```http://localhost:8000/foo/?prof```.\n\nyou can also pass some options:\n\n**count:** the number of results you'd like to see. default is 100.\n\n**sort:** the field you'd like to sort results by. default is ```time```. for all the options you can pass, see the [docs for pstats](http://docs.python.org/2/library/profile.html#pstats.stats.sort_stats).\n\n**download:** download profile file, that can be visualized in multiple viewers, e.g. [snakeviz](https://github.com/jiffyclub/snakeviz/) or [runsnakerun](http://www.vrplumber.com/programming/runsnakerun/)\n\n## enjoy!\n\nemail me with any questions: [omar.bohsali@gmail.com](omar.bohsali@gmail.com).\n\n\n[pypi]: https://pypi.org/project/django-cprofile-middleware/\n[pypi-version]: https://img.shields.io/pypi/v/django-cprofile-middleware.svg",
  "docs_url": null,
  "keywords": "django,profiling,cprofile",
  "license": "mit",
  "name": "django-cprofile-middleware",
  "package_url": "https://pypi.org/project/django-cprofile-middleware/",
  "project_url": "https://pypi.org/project/django-cprofile-middleware/",
  "project_urls": {
    "Homepage": "https://github.com/omarish/django-cprofile-middleware/"
  },
  "release_url": "https://pypi.org/project/django-cprofile-middleware/1.0.5/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "easily add cprofile profiling to django views.",
  "version": "1.0.5",
  "releases": [],
  "developers": [
    "me@omarish.com",
    "omar_bohsali"
  ],
  "kwds": "django_cprofile_middleware django django_cprofile_middleware_require_staff djangoproject profiling",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_django_cprofile_middleware",
  "homepage": "https://github.com/omarish/django-cprofile-middleware/",
  "release_count": 8,
  "dependency_ids": []
}
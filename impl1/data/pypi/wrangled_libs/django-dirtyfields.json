{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: django",
    "framework :: django :: 2.0",
    "framework :: django :: 2.1",
    "framework :: django :: 2.2",
    "framework :: django :: 3.0",
    "framework :: django :: 3.1",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "===================\ndjango dirty fields\n===================\n\n.. image:: https://badges.gitter.im/join%20chat.svg\n   :alt: join the chat at https://gitter.im/romgar/django-dirtyfields\n   :target: https://gitter.im/romgar/django-dirtyfields?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n.. image:: https://img.shields.io/pypi/v/django-dirtyfields.svg\n   :alt: published pypi version\n   :target: https://pypi.org/project/django-dirtyfields/\n.. image:: https://github.com/romgar/django-dirtyfields/actions/workflows/tests.yml/badge.svg\n   :alt: github actions test status\n   :target: https://github.com/romgar/django-dirtyfields/actions/workflows/tests.yml\n.. image:: https://coveralls.io/repos/github/romgar/django-dirtyfields/badge.svg?branch=develop\n   :alt: coveralls code coverage status\n   :target: https://coveralls.io/github/romgar/django-dirtyfields?branch=develop\n.. image:: https://readthedocs.org/projects/django-dirtyfields/badge/?version=latest\n   :alt: read the docs documentation status\n   :target: https://django-dirtyfields.readthedocs.io/en/latest/\n\ntracking dirty fields on a django model instance.\ndirty means that field in-memory and database values are different.\n\nthis package is compatible and tested with the following python & django versions:\n\n\n+------------------------+-----------------------------------+\n| django                 | python                            |\n+========================+===================================+\n| 2.0, 2.1               | 3.7                               |\n+------------------------+-----------------------------------+\n| 2.2, 3.0, 3.1          | 3.7, 3.8, 3.9                     |\n+------------------------+-----------------------------------+\n| 3.2                    | 3.7, 3.8, 3.9, 3.10               |\n+------------------------+-----------------------------------+\n| 4.0                    | 3.8, 3.9, 3.10                    |\n+------------------------+-----------------------------------+\n| 4.1, 4.2               | 3.8, 3.9, 3.10, 3.11              |\n+------------------------+-----------------------------------+\n\n\n\ninstall\n=======\n\n.. code-block:: bash\n\n    $ pip install django-dirtyfields\n\n\nusage\n=====\n\nto use ``django-dirtyfields``, you need to:\n\n- inherit from ``dirtyfieldsmixin`` in the django model you want to track.\n\n.. code-block:: python\n\n    from django.db import models\n    from dirtyfields import dirtyfieldsmixin\n\n    class examplemodel(dirtyfieldsmixin, models.model):\n        \"\"\"a simple example model to test dirty fields mixin with\"\"\"\n        boolean = models.booleanfield(default=true)\n        characters = models.charfield(blank=true, max_length=80)\n\n- use one of these 2 functions on a model instance to know if this instance is dirty, and get the dirty fields:\n\n  * ``is_dirty()``\n  * ``get_dirty_fields()``\n\n\nexample\n-------\n\n.. code-block:: python\n\n    >>> model = examplemodel.objects.create(boolean=true,characters=\"first value\")\n    >>> model.is_dirty()\n    false\n    >>> model.get_dirty_fields()\n    {}\n\n    >>> model.boolean = false\n    >>> model.characters = \"second value\"\n\n    >>> model.is_dirty()\n    true\n    >>> model.get_dirty_fields()\n    {'boolean': true, \"characters\": \"first_value\"}\n\n\nconsult the `full documentation <https://django-dirtyfields.readthedocs.io/>`_ for more information.\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "django-dirtyfields",
  "package_url": "https://pypi.org/project/django-dirtyfields/",
  "project_url": "https://pypi.org/project/django-dirtyfields/",
  "project_urls": {
    "Changelog": "https://github.com/romgar/django-dirtyfields/blob/develop/ChangeLog.rst",
    "Documentation": "https://django-dirtyfields.readthedocs.io/",
    "Homepage": "https://github.com/romgar/django-dirtyfields"
  },
  "release_url": "https://pypi.org/project/django-dirtyfields/1.9.2/",
  "requires_dist": [
    "Django (>=2.0)"
  ],
  "requires_python": ">=3.7",
  "summary": "tracking dirty fields on a django model instance.",
  "version": "1.9.2",
  "releases": [],
  "developers": [
    "lincoln_puzey",
    "romain_garrigues"
  ],
  "kwds": "get_dirty_fields badge dirtyfieldsmixin badges dirtyfields",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_django_dirtyfields",
  "homepage": "https://github.com/romgar/django-dirtyfields",
  "release_count": 31,
  "dependency_ids": [
    "pypi_django"
  ]
}
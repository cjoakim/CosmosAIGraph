{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "\n\nusage example::\n\n    # django proposes:\n    def my_calculated_field(...\n    my_calculated_field.short_description = 'field'\n    my_calculated_field.admin_order_field = 'real_field'\n\n    # dry:\n    @attr(short_description='field', admin_order_field='real_field')\n    def my_calculated_field(...\n\nget it::\n\n    sudo pip install attr\n    from attr import attr\n\nnew popular `attrs.org <http://attrs.org>`_ used by `pytest.org <https://pytest.org>`_ defines another \"attr\" package that shadows this \"attr\" module.\n\nplease use \"dry_attr\" alias to unshadow it::\n\n    from dry_attr import attr\n    from dry_attr import dry_attr\n\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "attr",
  "package_url": "https://pypi.org/project/attr/",
  "project_url": "https://pypi.org/project/attr/",
  "project_urls": {
    "Homepage": "https://github.com/denis-ryzhkov/attr"
  },
  "release_url": "https://pypi.org/project/attr/0.3.2/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "simple decorator to set attributes of target function or class in a dry way.",
  "version": "0.3.2",
  "releases": [],
  "developers": [
    "denis_ryzhkov",
    "denisr@denisr.com"
  ],
  "kwds": "my_calculated_field dry_attr admin_order_field real_field attributes",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_attr",
  "homepage": "https://github.com/denis-ryzhkov/attr",
  "release_count": 5,
  "dependency_ids": []
}
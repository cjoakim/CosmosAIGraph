{
  "classifiers": [
    "development status :: 3 - alpha",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: documentation",
    "topic :: software development :: documentation",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: quality assurance"
  ],
  "description": "blackdoc\n========\n\n.. image:: https://github.com/keewis/blackdoc/workflows/ci/badge.svg?branch=main\n    :target: https://github.com/keewis/blackdoc/actions\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/python/black\n.. image:: https://readthedocs.org/projects/blackdoc/badge/?version=latest\n    :target: https://blackdoc.readthedocs.io/en/latest/?badge=latest\n    :alt: documentation status\n\n**blackdoc** is a tool that applies `black`_ to code in documentation.\n\nit was originally a rewrite of a `gist`_ and called\n**black-doctest**. in april 2020, it was renamed to **blackdoc**.\n\n.. _gist: https://gist.github.com/mattharrison/2a1a263597d80e99cf85e898b800ec32\n.. _black: https://github.com/psf/black\n\ninstallation\n------------\ndependencies:\n\n- `black`_\n- `more-itertools`_\n- `rich`_\n- `tomli`_\n- `pathspec`_\n\n.. _more-itertools: https://github.com/more-itertools/more-itertools\n.. _rich: https://github.com/textualize/rich\n.. _tomli: https://github.com/hukkin/tomli\n.. _pathspec: https://github.com/cpburnz/python-pathspec\n\ninstall it with:\n\n.. code:: bash\n\n    python -m pip install blackdoc\n\nusage\n-----\nthe commandline interface supports two modes: checking and inplace\nreformatting.\n\n.. code:: bash\n\n    python -m blackdoc --help\n\n\nin inplace reformatting mode, it will reformat the doctest lines and\nwrite them back to disk:\n\n.. code:: bash\n\n    # on explicitly mentioned files\n    python -m blackdoc file1.py file2.py\n    # on the whole directory\n    python -m blackdoc .\n\n\nwhen checking, it will report the changed files but will not write them to disk:\n\n.. code:: bash\n\n    python -m blackdoc --check .\n\nit is also possible to use the entrypoint script:\n\n.. code:: bash\n\n    blackdoc --help\n\npre-commit\n----------\nthis repository defines a ``pre-commit`` hook:\n\n.. code:: yaml\n\n   hooks:\n   ...\n   - repo: https://github.com/keewis/blackdoc\n     rev: 3.8.0\n     hooks:\n     - id: blackdoc\n\nit is recommended to *pin* ``black`` in order to avoid having different versions for each contributor. to automatically synchronize this pin with the version of the ``black`` hook, use the ``blackdoc-autoupdate-black`` hook:\n\n.. code:: yaml\n\n   hooks:\n   ...\n   - repo: https://github.com/psf/black\n     rev: 23.10.1\n     hooks:\n     - id: black\n   ...\n   - repo: https://github.com/keewis/blackdoc\n     rev: 3.8.0\n     hooks:\n     - id: blackdoc\n       additional_dependencies: [\"black==23.10.1\"]\n     - id: blackdoc-autoupdate-black\n\nnote that this hook is *not* run on ``pre-commit autoupdate``.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "blackdoc",
  "package_url": "https://pypi.org/project/blackdoc/",
  "project_url": "https://pypi.org/project/blackdoc/",
  "project_urls": {
    "Documentation": "https://blackdoc.readthedocs.io/en/stable",
    "Homepage": "https://github.com/keewis/blackdoc"
  },
  "release_url": "https://pypi.org/project/blackdoc/0.3.9/",
  "requires_dist": [
    "black",
    "more-itertools",
    "tomli",
    "pathspec",
    "rich"
  ],
  "requires_python": ">=3.8",
  "summary": "run black on documentation code snippets",
  "version": "0.3.9",
  "releases": [],
  "developers": [
    "justus_magin",
    "keewis@posteo.de"
  ],
  "kwds": "blackdoc badge documentation gist _pathspec",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_blackdoc",
  "homepage": "https://github.com/keewis/blackdoc",
  "release_count": 14,
  "dependency_ids": [
    "pypi_black",
    "pypi_more_itertools",
    "pypi_pathspec",
    "pypi_rich",
    "pypi_tomli"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8"
  ],
  "description": "### automated machine learning with explainability (automlx)\n\nthe automlx package provides advanced automated machine learning solutions and machine learning model explanations for tabular and text datasets.\n\nthe [automl pipeline](https://docs.oracle.com/en-us/iaas/tools/automlx/latest/html/multiversion/latest/automl.html) automatically preprocesses, selects and engineers high-quality features in your dataset, which are then given to an automatically chosen and tuned machine learning model.\n\nthe [mlexplainer](https://docs.oracle.com/en-us/iaas/tools/automlx/latest/html/multiversion/latest/mlx.html) offers a wide variety of visual and interactive explanations. for example, these include (local and global) feature importance, feature dependence and counterfactual explanations. these explanations provide multi-facetted insights into what your (automlx or scikit-learn-style) model has learned and whether or not you should trust it.\n\nthe [fairness module](https://docs.oracle.com/en-us/iaas/tools/automlx/latest/html/multiversion/latest/fairness.html) offers tools to help you diagnose and understand the unintended bias present in your dataset and model so that you can make steps towards more inclusive and fair applications of machine learning.\n\n### installation\n\nthere are two ways to use automlx.\n\n#### direct installation\n\nautomlx can be installed on x86 or arm machines in a python 3.8 or 3.10 environment using:\n\n```\npip3 install oracle-automlx\n```\n\nseveral automlx dependencies are optional and can be installed with:\n\n```\npip3 install oracle-automlx[option]\n```\n\nwhere \"option\" can be one of:\n - \"classic\", which installs the libraries needed to support automl for tabular classification,\n regression and anomaly detection.\n - \"viz\", which provides visualization functionality for explanations and the automl time-series forecaster,\n - \"forecasting\", which installs the forecasting models needed for the automl time-series forecaster,\n - \"deep-learning\", which installs some torch-based deep-learning models for the automl classifier, regressor and anomaly detector.\n - \"onnx\", which installs the onnx-related libraries needed to export automl models to the onnx format.\n - \"explain\",which installs the libraries needed to use the mlexplainer to compute machine.\n\nmultiple optional dependencies can be installed simultaneously using a comma-separated list. for example:\n\n```\npip3 install oracle-automlx[forecasting,viz]\n```\n\n#### oracle cloud infrastructure (oci) data science (ds) conda pack\n\nautomlx is also available in the [oracle cloud infrastructure](https://www.oracle.com/cloud/) [data science](https://www.oracle.com/artificial-intelligence/data-science/) service in the [automlx](https://docs.oracle.com/en-us/iaas/data-science/using/conda-automlx-fam.htm) conda pack. \n",
  "docs_url": null,
  "keywords": "oracle,automlx,automl,explainability,machine learning,ml,artificial intelligence,ai,fairness,unintended bias",
  "license": "oracle no-fee terms and conditions (nftc)",
  "name": "oracle-automlx",
  "package_url": "https://pypi.org/project/oracle-automlx/",
  "project_url": "https://pypi.org/project/oracle-automlx/",
  "project_urls": {
    "Demo Notebooks": "http://github.com/oracle-samples/automlx",
    "Documentation": "https://docs.oracle.com/en-us/iaas/tools/automlx/latest/html/multiversion/latest/index.html"
  },
  "release_url": "https://pypi.org/project/oracle-automlx/23.4.1/",
  "requires_dist": [
    "black ==22.3.0 ; extra == 'all'",
    "catboost ==1.1 ; extra == 'all'",
    "category-encoders ==2.5.0 ; extra == 'all'",
    "datasets ==2.10.0 ; extra == 'all'",
    "fsspec ==2023.3.0 ; extra == 'all'",
    "imbalanced-learn ==0.9.1 ; extra == 'all'",
    "lightgbm ==3.3.5 ; extra == 'all'",
    "numpy ==1.22.2 ; extra == 'all'",
    "optuna ==3.1.0 ; extra == 'all'",
    "pandas ==1.4.4 ; extra == 'all'",
    "Pillow ==9.4.0 ; extra == 'all'",
    "psutil ==5.9.0 ; extra == 'all'",
    "pyarrow ==11.0.0 ; extra == 'all'",
    "pyod ==1.0.8 ; extra == 'all'",
    "ray ==2.3.0 ; extra == 'all'",
    "scikit-learn ==1.1.1 ; extra == 'all'",
    "scipy ==1.8.1 ; extra == 'all'",
    "xgboost ==1.6.1 ; extra == 'all'",
    "onnx ==1.13.1 ; extra == 'all'",
    "onnxmltools ==1.11.1 ; extra == 'all'",
    "onnxruntime ==1.12.1 ; extra == 'all'",
    "skl2onnx ==1.13 ; extra == 'all'",
    "aif360 ==0.5.0 ; extra == 'all'",
    "dice-ml ==0.9 ; extra == 'all'",
    "shap ==0.41.0 ; extra == 'all'",
    "statsmodels ==0.13.2 ; extra == 'all'",
    "horovod[pytorch] ==0.26.1 ; extra == 'all'",
    "pytorch-tabnet ==4.0 ; extra == 'all'",
    "ray[air] ==2.3.0 ; extra == 'all'",
    "torch ==1.13.1 ; extra == 'all'",
    "torchvision ==0.14.1 ; extra == 'all'",
    "prophet ==1.1.3 ; extra == 'all'",
    "sktime ==0.13.2 ; extra == 'all'",
    "ipython ==8.4.0 ; extra == 'all'",
    "ipywidgets ==8.0.2 ; extra == 'all'",
    "plotly ==5.4.0 ; extra == 'all'",
    "black ==22.3.0 ; extra == 'classic'",
    "catboost ==1.1 ; extra == 'classic'",
    "category-encoders ==2.5.0 ; extra == 'classic'",
    "datasets ==2.10.0 ; extra == 'classic'",
    "fsspec ==2023.3.0 ; extra == 'classic'",
    "imbalanced-learn ==0.9.1 ; extra == 'classic'",
    "lightgbm ==3.3.5 ; extra == 'classic'",
    "numpy ==1.22.2 ; extra == 'classic'",
    "optuna ==3.1.0 ; extra == 'classic'",
    "pandas ==1.4.4 ; extra == 'classic'",
    "Pillow ==9.4.0 ; extra == 'classic'",
    "psutil ==5.9.0 ; extra == 'classic'",
    "pyarrow ==11.0.0 ; extra == 'classic'",
    "pyod ==1.0.8 ; extra == 'classic'",
    "ray ==2.3.0 ; extra == 'classic'",
    "scikit-learn ==1.1.1 ; extra == 'classic'",
    "scipy ==1.8.1 ; extra == 'classic'",
    "xgboost ==1.6.1 ; extra == 'classic'",
    "black ==22.3.0 ; extra == 'deep-learning'",
    "datasets ==2.10.0 ; extra == 'deep-learning'",
    "fsspec ==2023.3.0 ; extra == 'deep-learning'",
    "imbalanced-learn ==0.9.1 ; extra == 'deep-learning'",
    "numpy ==1.22.2 ; extra == 'deep-learning'",
    "optuna ==3.1.0 ; extra == 'deep-learning'",
    "pandas ==1.4.4 ; extra == 'deep-learning'",
    "Pillow ==9.4.0 ; extra == 'deep-learning'",
    "psutil ==5.9.0 ; extra == 'deep-learning'",
    "pyarrow ==11.0.0 ; extra == 'deep-learning'",
    "pytorch-tabnet ==4.0 ; extra == 'deep-learning'",
    "ray ==2.3.0 ; extra == 'deep-learning'",
    "scikit-learn ==1.1.1 ; extra == 'deep-learning'",
    "scipy ==1.8.1 ; extra == 'deep-learning'",
    "torch ==1.13.1 ; extra == 'deep-learning'",
    "torchvision ==0.14.1 ; extra == 'deep-learning'",
    "black ==22.3.0 ; extra == 'distributed-training'",
    "datasets ==2.10.0 ; extra == 'distributed-training'",
    "fsspec ==2023.3.0 ; extra == 'distributed-training'",
    "horovod[pytorch] ==0.26.1 ; extra == 'distributed-training'",
    "imbalanced-learn ==0.9.1 ; extra == 'distributed-training'",
    "numpy ==1.22.2 ; extra == 'distributed-training'",
    "optuna ==3.1.0 ; extra == 'distributed-training'",
    "pandas ==1.4.4 ; extra == 'distributed-training'",
    "Pillow ==9.4.0 ; extra == 'distributed-training'",
    "psutil ==5.9.0 ; extra == 'distributed-training'",
    "pyarrow ==11.0.0 ; extra == 'distributed-training'",
    "pytorch-tabnet ==4.0 ; extra == 'distributed-training'",
    "ray[air] ==2.3.0 ; extra == 'distributed-training'",
    "scikit-learn ==1.1.1 ; extra == 'distributed-training'",
    "scipy ==1.8.1 ; extra == 'distributed-training'",
    "torch ==1.13.1 ; extra == 'distributed-training'",
    "torchvision ==0.14.1 ; extra == 'distributed-training'",
    "aif360 ==0.5.0 ; extra == 'explain'",
    "category-encoders ==2.5.0 ; extra == 'explain'",
    "dice-ml ==0.9 ; extra == 'explain'",
    "fsspec ==2023.3.0 ; extra == 'explain'",
    "numpy ==1.22.2 ; extra == 'explain'",
    "pandas ==1.4.4 ; extra == 'explain'",
    "psutil ==5.9.0 ; extra == 'explain'",
    "scikit-learn ==1.1.1 ; extra == 'explain'",
    "scipy ==1.8.1 ; extra == 'explain'",
    "shap ==0.41.0 ; extra == 'explain'",
    "statsmodels ==0.13.2 ; extra == 'explain'",
    "black ==22.3.0 ; extra == 'forecasting'",
    "datasets ==2.10.0 ; extra == 'forecasting'",
    "fsspec ==2023.3.0 ; extra == 'forecasting'",
    "numpy ==1.22.2 ; extra == 'forecasting'",
    "optuna ==3.1.0 ; extra == 'forecasting'",
    "pandas ==1.4.4 ; extra == 'forecasting'",
    "Pillow ==9.4.0 ; extra == 'forecasting'",
    "prophet ==1.1.3 ; extra == 'forecasting'",
    "psutil ==5.9.0 ; extra == 'forecasting'",
    "pyarrow ==11.0.0 ; extra == 'forecasting'",
    "ray ==2.3.0 ; extra == 'forecasting'",
    "scikit-learn ==1.1.1 ; extra == 'forecasting'",
    "scipy ==1.8.1 ; extra == 'forecasting'",
    "sktime ==0.13.2 ; extra == 'forecasting'",
    "onnx ==1.13.1 ; extra == 'onnx'",
    "onnxmltools ==1.11.1 ; extra == 'onnx'",
    "onnxruntime ==1.12.1 ; extra == 'onnx'",
    "skl2onnx ==1.13 ; extra == 'onnx'",
    "ipython ==8.4.0 ; extra == 'viz'",
    "ipywidgets ==8.0.2 ; extra == 'viz'",
    "plotly ==5.4.0 ; extra == 'viz'"
  ],
  "requires_python": ">=3.8.7, <3.11",
  "summary": "automated machine learning with explainability",
  "version": "23.4.1",
  "releases": [],
  "developers": [
    "oracle_automlx"
  ],
  "kwds": "automlx automl automated mlexplainer oracle",
  "license_kwds": "oracle no-fee terms and conditions (nftc)",
  "libtype": "pypi",
  "id": "pypi_oracle_automlx",
  "homepage": "",
  "release_count": 2,
  "dependency_ids": [
    "pypi_aif360",
    "pypi_black",
    "pypi_catboost",
    "pypi_category_encoders",
    "pypi_datasets",
    "pypi_dice_ml",
    "pypi_fsspec",
    "pypi_horovod",
    "pypi_imbalanced_learn",
    "pypi_ipython",
    "pypi_ipywidgets",
    "pypi_lightgbm",
    "pypi_numpy",
    "pypi_onnx",
    "pypi_onnxmltools",
    "pypi_onnxruntime",
    "pypi_optuna",
    "pypi_pandas",
    "pypi_pillow",
    "pypi_plotly",
    "pypi_prophet",
    "pypi_psutil",
    "pypi_pyarrow",
    "pypi_pyod",
    "pypi_pytorch_tabnet",
    "pypi_ray",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_shap",
    "pypi_skl2onnx",
    "pypi_sktime",
    "pypi_statsmodels",
    "pypi_torch",
    "pypi_torchvision",
    "pypi_xgboost"
  ]
}
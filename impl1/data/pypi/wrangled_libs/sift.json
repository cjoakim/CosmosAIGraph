{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# sift python bindings\n\nbindings for sift's apis -- including the\n[events](https://sift.com/resources/references/events-api.html),\n[labels](https://sift.com/resources/references/labels-api.html),\nand\n[score](https://sift.com/resources/references/score-api.html)\napis.\n\n\n## installation\n\nset up a virtual environment with virtualenv (otherwise you will need\nto make the pip calls as sudo):\n\n    virtualenv venv\n    source venv/bin/activate\n\nget the latest released package from pip:\n\npython 2:\n\n    pip install sift\n\npython 3:\n\n    pip3 install sift\n\nor install newest source directly from github:\n\npython 2:\n\n    pip install git+https://github.com/siftscience/sift-python\n\npython 3:\n\n    pip3 install git+https://github.com/siftscience/sift-python\n\n\n## documentation\n\nplease see [here](https://sift.com/developers/docs/python/events-api/overview) for the\nmost up-to-date documentation.\n\n## changelog\n\nplease see\n[the changelog](https://github.com/siftscience/sift-python/blob/master/changes.md)\nfor a history of all changes.\n\nnote, that in v2.0.0, the api semantics were changed to raise an\nexception in the case of error to be more pythonic. client code will\nneed to be updated to catch `sift.client.apiexception` exceptions.\n\n\n## usage\n\nhere's an example:\n\n```python\n\nimport json\nimport sift.client\n\nclient = sift.client(api_key='<your api key here>', account_id='<your account id here>')\n\n# user id's may only contain a-z, a-z, 0-9, =, ., -, _, +, @, :, &, ^, %, !, $\nuser_id = \"23056\"\n\n# track a transaction event -- note this is a blocking call\nproperties = {\n    \"$user_id\": user_id,\n    \"$user_email\": \"buyer@gmail.com\",\n    \"$seller_user_id\": \"2371\",\n    \"seller_user_email\": \"seller@gmail.com\",\n    \"$transaction_id\": \"573050\",\n    \"$payment_method\": {\n        \"$payment_type\": \"$credit_card\",\n        \"$payment_gateway\": \"$braintree\",\n        \"$card_bin\": \"542486\",\n        \"$card_last4\": \"4444\"\n    },\n    \"$currency_code\": \"usd\",\n    \"$amount\": 15230000,\n}\n\ntry:\n    response = client.track(\"$transaction\", properties)\n    if response.is_ok():\n        print \"successfully tracked event\"\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n# track a transa\u0441tion event and receive a score with percentiles in response (sync flow).\n# note: `return_score` or `return_workflow_status` must be set `true`.\nproperties = {\n    \"$user_id\": user_id,\n    \"$user_email\": \"buyer@gmail.com\",\n    \"$seller_user_id\": \"2371\",\n    \"seller_user_email\": \"seller@gmail.com\",\n    \"$transaction_id\": \"573050\",\n    \"$payment_method\": {\n        \"$payment_type\": \"$credit_card\",\n        \"$payment_gateway\": \"$braintree\",\n        \"$card_bin\": \"542486\",\n        \"$card_last4\": \"4444\"\n    },\n    \"$currency_code\": \"usd\",\n    \"$amount\": 15230000,\n}\n\ntry:\n    response = client.track(\"$transaction\", properties, return_score=true, include_score_percentiles=true, abuse_types=[\"promotion_abuse\", \"content_abuse\", \"payment_abuse\"])\n    if response.is_ok():\n        score_response = response.body[\"score_response\"]\n        print(score_response)\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n# request a score for the user with user_id 23056\ntry:\n    response = client.score(user_id)\n    s = json.dumps(response.body)\n    print s\n\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\ntry:\n    # label the user with user_id 23056 as bad with all optional fields\n    response = client.label(user_id, {\n        \"$is_bad\": true,\n        \"$abuse_type\": \"payment_abuse\",\n        \"$description\": \"chargeback issued\",\n        \"$source\": \"manual review\",\n        \"$analyst\": \"analyst.name@your_domain.com\"\n    })\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n# remove a label from a user with user_id 23056\ntry:\n    response = client.unlabel(user_id, abuse_type='content_abuse')\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n# get the status of a workflow run\ntry:\n    response = client.get_workflow_status('my_run_id')\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n# get the latest decisions for a user\ntry:\n    response = client.get_user_decisions('example_user')\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n# get the latest decisions for an order\ntry:\n    response = client.get_order_decisions('example_order')\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n# get the latest decisions for a session\ntry:\n    response = client.get_session_decisions('example_user', 'example_session')\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n# get the latest decisions for a piece of content\ntry:\n    response = client.get_content_decisions('example_user', 'example_content')\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n# the send call triggers the generation of a otp code that is stored by sift and email/sms the code to the user.\nsend_properties = {\n\t\"$user_id\": \"billy_jones_301\",\n\t\"$send_to\": \"billy_jones_301@gmail.com\",\n\t\"$verification_type\": \"$email\",\n\t\"$brand_name\": \"mytopbrand\",\n\t\"$language\": \"en\",\n\t\"$site_country\": \"in\",\n\t\"$event\": {\n\t\t\"$session_id\": \"some_session_id\",\n\t\t\"$verified_event\": \"$login\",\n\t\t\"$verified_entity_id\": \"some_session_id\",\n\t\t\"$reason\": \"$automated_rule\",\n\t\t\"$ip\": \"192.168.1.1\",\n\t\t\"$browser\": {\n\t\t\t\"$user_agent\": \"mozilla/5.0 (macintosh; intel mac os x 10_12_3) applewebkit/537.36 (khtml, like gecko) chrome/56.0.2924.87 safari/537.36\"\n\t\t}\n\t}\n}\ntry:\n    response = client.verification_send(send_properties)\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n# the resend call generates a new otp and sends it to the original recipient with the same settings.\nresend_properties = {\n\t\"$user_id\": \"billy_jones_301\",\n\t\"$verified_event\": \"$login\",\n\t\"$verified_entity_id\": \"some_session_id\"\n}\ntry:\n    response = client.verification_resend(resend_properties)\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n# the check call is used for verifying the otp provided by the end user to sift.\ncheck_properties = {\n\t\"$user_id\": \"billy_jones_301\",\n    \"$code\": 123456,\n\t\"$verified_event\": \"$login\",\n\t\"$verified_entity_id\": \"some_session_id\"\n}\ntry:\n    response = client.verification_check(check_properties)\nexcept sift.client.apiexception:\n    # request failed\n    pass\n\n```\n\n## testing\n\nbefore submitting a change, make sure the following commands run without\nerrors from the root dir of the repository:\n\n    python -m unittest discover\n    python3 -m unittest discover\n\n\n5.5.0 2023-10-03\n- score percentiles for score api\n\n5.4.0 2023-07-26\n- support for verification api\n\n5.3.0 2023-02-03\n- added support for score_percentiles\n\n5.2.0 2022-11-07\n- update  psp merchant management api\n\n5.1.0 2022-06-22\n- added return_route_info query parameter \n- fixed decimal amount json serialization bug \n\n5.0.2 2022-01-24\n- fix usage of urllib for python 2.7\n\n5.0.1 2019-03-07\n- update metadata in setup.py\n\n5.0.0 2019-01-08\n================\n- add connection pooling\n\nincompatible changes introduced in 5.0.0:\n\n- removed support for python 2.6\n\n- fix url encoding for all endpoints\n\n  previously, encoding user ids in urls was inconsistent between endpoints, encoded for some\n  endpoints, unencoded for others. additionally, when encoded in the url path, forward slashes\n  weren't encoded. callers with workarounds for this bug must remove these workarounds when\n  upgrading to 5.0.0.\n\n- improved error handling\n\n  previously, illegal arguments passed to methods like `client.track()` and failed calls resulting\n  from server-side errors both raised `apiexceptions`. illegal arguments validated in the client\n  now raise either `typeerrors` or `valueerrors`. server-side errors still raise `apiexceptions`,\n  and `apiexception` has been augmented with metadata for handling the error.\n\n4.3.0.0 2018-07-31\n==================\n-   add support for rescore_user and get_user_score apis\n\n4.2.0.0 2018-07-05\n==================\n-   add new query parameter force_workflow_run\n\n4.1.0.0 2018-06-01\n==================\n\n-   add get session level decisions in get decisions apis.\n\n4.0.1 2018-04-06\n==================\n\n- updated documentation in changes.md and readme.md\n\n4.0.0.0 2018-03-30\n==================\n\n- adds support for sift science api version 205, including new [`$create_content`](https://siftscience.com/developers/docs/curl/events-api/reserved-events/create-content) and [`$update_content`](https://siftscience.com/developers/docs/curl/events-api/reserved-events/update-content) formats\n- v205 apis are now called -- **this is an incompatible change**\n   - use `version = '204'` when constructing the client to call the previous api version\n- adds support for content decisions to [decisions api](https://siftscience.com/developers/docs/curl/decisions-api)\n\n\nincompatible changes introduced in api v205:\n- `$create_content` and `$update_content` have significantly changed, and the old format will be rejected\n- `$send_message` and `$submit_review` events are no longer valid\n- v205 improves server-side event data validation. in v204 and earlier, server-side validation accepted some events that did not conform to the published apis in our [developer documentation](https://siftscience.com/developers/docs/curl/events-api). v205 does not modify existing event apis other than those mentioned above, but may reject invalid event data that were previously accepted. **please test your integration on v205 in sandbox before using in production.**\n\n3.2.0.0 2018-02-12\n==================\n\n-   add session level decisions in apply decisions apis.\n-   add support for filtering get decisions by entity type session.\n\n3.1.0.0 2017-01-17\n==================\n\n-   adds support for get, apply decisions apis\n\n3.0.0.0 2016-07-19\n==================\n\n-   adds support for v204 of sift science's apis\n-   adds workflow status api, user decisions api, order decisions api\n-   v204 apis are now called by default -- this is an incompatible change\n    (use version='203' to call the previous api version)\n\n2.0.1.0 (2016-07-07)\n====================\n\n-   fixes bug parsing chunked http responses\n\n2.0.0.0 (2016-06-21)\n====================\n\n-   major version bump; client apis have changed to raise exceptions\n    in the case of api errors to be more pythonic\n\n1.1.2.1 (2015-05-18)\n====================\n\n-   added python 2.6 compatibility\n-   added travis ci\n-   minor bug fixes\n\n1.1.2.0 (2015-02-04)\n====================\n\n-   added unlabel functionaly\n-   minor bug fixes.\n\n1.1.1.0 (2014-09-3)\n===================\n\n-   added timeout parameter to track, score, and label functions.\n\n1.1.0.0 (2014-08-25)\n====================\n\n-   added module-scoped api key.\n-   minor documentation updates.\n\n0.2.0 (2014-08-20)\n==================\n\n-   added label and score functions.\n-   added python 3 compatibility.\n\n0.1.1 (2014-02-21)\n==================\n\n-   bump default api version to v203.\n\n0.1.0 (2013-01-08)\n==================\n\n-   just the python rest client itself.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "sift",
  "package_url": "https://pypi.org/project/Sift/",
  "project_url": "https://pypi.org/project/Sift/",
  "project_urls": {
    "Homepage": "https://siftscience.com"
  },
  "release_url": "https://pypi.org/project/Sift/5.5.0/",
  "requires_dist": [],
  "requires_python": ">=2.7",
  "summary": "python bindings for sift science's api",
  "version": "5.5.0",
  "releases": [],
  "developers": [
    "sift_science",
    "support@siftscience.com"
  ],
  "kwds": "sift siftscience pip3 pip python3",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_sift",
  "homepage": "https://siftscience.com",
  "release_count": 28,
  "dependency_ids": []
}
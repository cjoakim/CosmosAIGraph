{
  "classifiers": [],
  "description": "# mlflow-watsonml\n\na plugin that integrates [watsonml](http://ibm-wml-api-pyclient.mybluemix.net) with mlflow pipeline.\n``mlflow_watsonml`` enables mlflow users to deploy mlflow pipeline models into watsonml.\ncommand line apis of the plugin (also accessible through mlflow's python package) makes the deployment process seamless.\n\n## installation\nplugin package which is available in pypi and can be installed using\n\n```bash\npip install mlflow-watsonml\n```\n\n## what does it do\ninstalling this package uses python's entrypoint mechanism to register the plugin into mlflow's plugin registry. this registry will be invoked each time you launch mlflow script or command line argument.\n\n## authentication\nin order to connect to watsonml, refer to [.env.template](.env.template)\n\n\n### create deployment\nthe `create` command line argument and ``create_deployment`` python\napis does the deployment of a model built with mlflow to watsonml.\n\n##### cli\n```shell script\nmlflow deployments create -t watsonml -m <model-uri> --name <deployment-name> -c \"software_spec_type=runtime-22.2-py3.10\"\n```\n\n##### python api\n```python\nfrom mlflow.deployments import get_deploy_client\n\ntarget_uri = 'watsonml'\nplugin = get_deploy_client(target_uri)\n\nplugin.create_deployment(\n    name=<deployment-name>, \n    model_uri=<model-uri>, \n    config={\"software_spec_type\": \"runtime-22.2-py3.10\"}\n)\n```\n\n### update deployment\nupdate api can used to modify the configuration parameters such as number of workers, version etc., of an already deployed model.\nwatsonml will make sure the user experience is seamless while changing the model in a live environment.\n\n##### cli\n```shell script\nmlflow deployments update -t watsonml --name <deployment name> -c \"software_spec_type=runtime-22.1-py3.10\"\n```\n\n##### python api\n```python\nplugin.update_deployment(name=<deployment name>, config={\"software_spec_type\": \"runtime-22.1-py3.10\"})\n```\n\n### delete deployment\ndelete an existing deployment. exception will be raised if the model is not already deployed.\n\n##### cli\n```shell script\nmlflow deployments delete -t watsonml --name <deployment name / version number>\n```\n\n##### python api\n```python\nplugin.delete_deployment(name=<deployment name>)\n```\n\n### list all deployments\nlists the names of all the models deployed on the configured watsonml.\n\n##### cli\n```shell script\nmlflow deployments list -t watsonml\n```\n\n##### python api\n```python\nplugin.list_deployments()\n```\n\n### get deployment details\nget api fetches the details of the deployed model. by default, get api fetches all the versions of the deployed model.\n\n##### cli\n```shell script\nmlflow deployments get -t watsonml --name <deployment name>\n```\n\n##### python api\n```python\nplugin.get_deployment(name=<deployment name>)\n```\n\n### run prediction on deployed model\npredict api enables to run prediction on the deployed model.\n\nfor the prediction inputs, dataframe and json formats are supported. the python api supports all of these three formats. when invoked via command line, one needs to pass the json file path that contains the inputs.\n\n##### cli\n```shell script\nmlflow deployments predict -t watsonml --name <deployment name> --input-path <input file path> --output-path <output file path>\n```\n\noutput-path is an optional parameter. without output path parameter result will be printed in console.\n\n##### python api\n```python\nplugin.predict(name=<deployment name>, df=<prediction input>)\n```\n\n### plugin help\nrun the following command to get the plugin help string.\n\n##### cli\n```shell script\nmlflow deployments help -t watsonml\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "mlflow-watsonml",
  "package_url": "https://pypi.org/project/mlflow-watsonml/",
  "project_url": "https://pypi.org/project/mlflow-watsonml/",
  "project_urls": {
    "Homepage": "https://github.com/IBM/mlflow-watsonml"
  },
  "release_url": "https://pypi.org/project/mlflow-watsonml/0.11.4/",
  "requires_dist": [
    "ibm-watson-machine-learning ==1.0.327",
    "mlflow >=2.6.0",
    "python-dotenv ~=1.0.0",
    "boto3 >=1.24.59",
    "ipython ; extra == 'dev'",
    "black ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "build ; extra == 'dev'",
    "wheel ; extra == 'dev'",
    "twine ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "mkdocs ; extra == 'docs'",
    "mkdocstrings-python ; extra == 'docs'",
    "mkdocs-material ; extra == 'docs'",
    "onnx ; extra == 'onnx'",
    "onnxruntime ; extra == 'onnx'"
  ],
  "requires_python": ">=3.9",
  "summary": "watsonml mlflow deployment plugin",
  "version": "0.11.4",
  "releases": [],
  "developers": [
    "dhruv.shah@ibm.com",
    "ibm_ai_model_factory_team"
  ],
  "kwds": "mlflow_watsonml watsonml mlflow pip get_deployment",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_mlflow_watsonml",
  "homepage": "https://github.com/ibm/mlflow-watsonml",
  "release_count": 18,
  "dependency_ids": [
    "pypi_black",
    "pypi_boto3",
    "pypi_build",
    "pypi_ibm_watson_machine_learning",
    "pypi_ipython",
    "pypi_mkdocs",
    "pypi_mkdocs_material",
    "pypi_mkdocstrings_python",
    "pypi_mlflow",
    "pypi_onnx",
    "pypi_onnxruntime",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_python_dotenv",
    "pypi_twine",
    "pypi_wheel"
  ]
}
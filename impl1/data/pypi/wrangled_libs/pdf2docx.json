{
  "classifiers": [],
  "description": "english | [\u4e2d\u6587](readme_cn.md)\n\n# pdf2docx \n\n![python-version](https://img.shields.io/badge/python->=3.6-green.svg)\n[![codecov](https://codecov.io/gh/dothinking/pdf2docx/branch/master/graph/badge.svg)](https://codecov.io/gh/dothinking/pdf2docx)\n[![pypi-version](https://img.shields.io/pypi/v/pdf2docx.svg)](https://pypi.python.org/pypi/pdf2docx/)\n![license](https://img.shields.io/pypi/l/pdf2docx.svg)\n![pypi-downloads](https://img.shields.io/pypi/dm/pdf2docx)\n\n- extract data from pdf with `pymupdf`, e.g. text, images and drawings \n- parse layout with rule, e.g. sections, paragraphs, images and tables\n- generate docx with `python-docx`\n\n## features\n\n- parse and re-create page layout\n    - page margin\n    - section and column (1 or 2 columns only)\n    - page header and footer [todo]\n\n- parse and re-create paragraph\n    - ocr text [todo]\n    - text in horizontal/vertical direction: from left to right, from bottom to top\n    - font style, e.g. font name, size, weight, italic and color\n    - text format, e.g. highlight, underline, strike-through\n    - list style [todo]\n    - external hyper link\n    - paragraph horizontal alignment (left/right/center/justify) and vertical spacing\n    \n- parse and re-create image\n\t- in-line image\n    - image in gray/rgb/cmyk mode\n    - transparent image\n    - floating image, i.e. picture behind text\n\n- parse and re-create table\n    - border style, e.g. width, color\n    - shading style, i.e. background color\n    - merged cells\n    - vertical direction cell\n    - table with partly hidden borders\n    - nested tables\n\n- parsing pages with multi-processing\n\n*it can also be used as a tool to extract table contents since both table content and format/style is parsed.*\n\n## limitations\n\n- text-based pdf file\n- left to right language\n- normal reading direction, no word transformation / rotation\n- rule-based method can't 100% convert the pdf layout\n\n\n## documentation\n\n- [installation](https://dothinking.github.io/pdf2docx/installation.html)\n- [quickstart](https://dothinking.github.io/pdf2docx/quickstart.html)\n    - [convert pdf](https://dothinking.github.io/pdf2docx/quickstart.convert.html)\n    - [extract table](https://dothinking.github.io/pdf2docx/quickstart.table.html)\n    - [command line interface](https://dothinking.github.io/pdf2docx/quickstart.cli.html)\n    - [graphic user interface](https://dothinking.github.io/pdf2docx/quickstart.gui.html)\n- [technical documentation (in chinese)](https://dothinking.github.io/pdf2docx/techdoc.html)\n- [api documentation](https://dothinking.github.io/pdf2docx/modules.html)\n\n## sample\n\n![sample_compare.png](https://s1.ax1x.com/2020/08/04/adryx1.png)\n",
  "docs_url": null,
  "keywords": "pdf-to-word,pdf-to-docx",
  "license": "gpl v3",
  "name": "pdf2docx",
  "package_url": "https://pypi.org/project/pdf2docx/",
  "project_url": "https://pypi.org/project/pdf2docx/",
  "project_urls": {
    "Homepage": "https://github.com/dothinking/pdf2docx"
  },
  "release_url": "https://pypi.org/project/pdf2docx/0.5.6/",
  "requires_dist": [
    "PyMuPDF (>=1.19.0)",
    "python-docx (>=0.8.10)",
    "fonttools (>=4.24.0)",
    "numpy (>=1.17.2)",
    "opencv-python (>=4.5)",
    "fire (>=0.3.0)"
  ],
  "requires_python": ">=3.6",
  "summary": "open source python library converting pdf to docx.",
  "version": "0.5.6",
  "releases": [],
  "developers": [
    "dothinking",
    "train8808@gmail.com"
  ],
  "kwds": "pdf2docx pymupdf pdf docx \u4e2d\u6587",
  "license_kwds": "gpl v3",
  "libtype": "pypi",
  "id": "pypi_pdf2docx",
  "homepage": "https://github.com/dothinking/pdf2docx",
  "release_count": 23,
  "dependency_ids": [
    "pypi_fire",
    "pypi_fonttools",
    "pypi_numpy",
    "pypi_opencv_python",
    "pypi_pymupdf",
    "pypi_python_docx"
  ]
}
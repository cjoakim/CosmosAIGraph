{
  "classifiers": [
    "development status :: 3 - alpha",
    "framework :: ansible",
    "intended audience :: developers",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "<!--\ncopyright (c) ansible project\ngnu general public license v3.0+ (see licenses/gpl-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)\nspdx-license-identifier: gpl-3.0-or-later\nspdx-filecopyrighttext: 2023, ansible project\n-->\n\n# antsibull-docs-parser - python library for processing ansible documentation markup\n\n[![nox badge](https://github.com/ansible-community/antsibull-docs-parser/actions/workflows/nox.yml/badge.svg)](https://github.com/ansible-community/antsibull-docs-parser/actions/workflows/nox.yml)\n[![codecov badge](https://img.shields.io/codecov/c/github/ansible-community/antsibull-docs-parser)](https://codecov.io/gh/ansible-community/antsibull-docs-parser)\n\nthis is a python library for processing ansible documentation markup. it is named after [antsibull-docs](https://github.com/ansible-community/antsibull-docs/) where this code originates from. it was moved out to make it easier to reuse the markup code in other projects without having to depend on all of antsibull-docs's dependencies.\n\n## development\n\ninstall and run `nox` to run all tests. `nox` will create virtual environments in `.nox` inside the checked out project and install the requirements needed to run the tests there.\n\nto run specific tests:\n1. `nox -e test` to only run unit tests;\n2. `nox -e lint` to run all linters and formatters at once;\n3. `nox -e formatters` to run `isort` and `black`;\n4. `nox -e codeqa` to run `flake8`, `pylint`, `reuse lint`, and `antsibull-changelog lint`;\n5. `nox -e typing` to run `mypy` and `pyre`;\n6. `nox -e create_vectors` to update the `test-vectors.yml` file. please note that this file should be synchronized with the corresponding file in [the antsibull-docs-ts project](https://github.com/ansible-community/antsibull-docs-ts).\n\n## releasing a new version\n\n1. run `nox -e bump -- <version> <release_summary_message>`. this:\n   * bumps the package version in `pyproject.toml`. \n   * creates `changelogs/fragments/<version>.yml` with a `release_summary` section.\n   * runs `antsibull-changelog release` and adds the changed files to git.\n   * commits with message `release <version>.` and runs `git tag -a -m 'antsibull-docs-parser <version>' <version>`.\n   * runs `hatch build --clean`.\n2. run `git push` to the appropriate remotes.\n3. once ci passes on github, run `nox -e publish`. this:\n   * runs `hatch publish`;\n   * bumps the version to `<version>.post0`;\n   * adds the changed file to git and run `git commit -m 'post-release version bump.'`;\n4. run `git push --follow-tags` to the appropriate remotes and create a github release.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "antsibull-docs-parser",
  "package_url": "https://pypi.org/project/antsibull-docs-parser/",
  "project_url": "https://pypi.org/project/antsibull-docs-parser/",
  "project_urls": {
    "Source code": "https://github.com/ansible-community/antsibull-docs-parser/"
  },
  "release_url": "https://pypi.org/project/antsibull-docs-parser/1.0.0/",
  "requires_dist": [
    "antsibull-changelog; extra == 'codeqa'",
    "flake8; extra == 'codeqa'",
    "pylint; extra == 'codeqa'",
    "reuse; extra == 'codeqa'",
    "coverage[toml]; extra == 'coverage'",
    "antsibull-docs-parser[codeqa]; extra == 'dev'",
    "antsibull-docs-parser[coverage]; extra == 'dev'",
    "antsibull-docs-parser[formatters]; extra == 'dev'",
    "antsibull-docs-parser[test]; extra == 'dev'",
    "antsibull-docs-parser[typing]; extra == 'dev'",
    "nox; extra == 'dev'",
    "black; extra == 'formatters'",
    "isort; extra == 'formatters'",
    "pytest; extra == 'test'",
    "pytest-cov; extra == 'test'",
    "pytest-error-for-skips; extra == 'test'",
    "pyyaml; extra == 'test'",
    "mypy; extra == 'typing'",
    "pyre-check>=0.9.17; extra == 'typing'"
  ],
  "requires_python": ">=3.6.1",
  "summary": "python library for processing ansible documentation markup",
  "version": "1.0.0",
  "releases": [],
  "developers": [
    "felix@fontein.de",
    "maxwell@gtmx.me"
  ],
  "kwds": "ansible documentation badge package workflows",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_antsibull_docs_parser",
  "homepage": "",
  "release_count": 5,
  "dependency_ids": [
    "pypi_antsibull_changelog",
    "pypi_antsibull_docs_parser",
    "pypi_black",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_isort",
    "pypi_mypy",
    "pypi_nox",
    "pypi_pylint",
    "pypi_pyre_check",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_error_for_skips",
    "pypi_pyyaml",
    "pypi_reuse"
  ]
}
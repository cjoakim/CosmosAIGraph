{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "programming language :: python :: 3.6"
  ],
  "description": "[![build status](https://travis-ci.com/jacksmith15/statham-schema.svg?token=jrmqr8ynsmu5tphptq2p&branch=master)](https://travis-ci.com/jacksmith15/statham-schema)  [![documentation status](https://readthedocs.org/projects/statham-schema/badge/?version=latest)](https://statham-schema.readthedocs.io/en/latest/?badge=latest)\n\n# statham\n\n`statham` is a python model parsing library for [json schema]. read the [documentation](https://statham-schema.readthedocs.io/en/latest/).\n\nthis project includes tools for writing and generating extensible python classes based on [json schema] documents.\n\n## example model definition\n\n`statham` can be used to write json schema documents and their corresponding application-level models in one go:\n\n```python\nfrom typing import list\n\nfrom statham.schema.elements import array, integer, object, string\nfrom statham.schema.property import property\n\n\nclass choice(object):\n    choice_text: str = property(string(maxlength=200), required=true)\n    votes: int = property(integer(default=0))\n\n\nclass poll(object):\n    question: str = property(string(), required=true)\n    choices: list[choice] = property(array(choice), required=true)\n```\n\n# generating python classes\nalternatively, python models may be generated automatically from an existing schema:\n```\nstatham --input http://example.com/schema.json\n```\n\n\n## command-line arguments\n```\nrequired arguments:\n  --input input    specify the path to the json schema to be generated.\n\n                   if the target schema is not at the root of a document, specify the\n                   json pointer in the same format as a json schema `$ref`, e.g.\n                   `--input path/to/document.json#/definitions/schema`\n\n\noptional arguments:\n  --output output  output directory or file in which to write the output.\n\n                   if the provided path is a directory, the command will derive the name\n                   from the input argument. if not passed, the command will write to\n                   stdout.\n\n  -h, --help       display this help message and exit.\n```\n\n\n# installation\nthis project requires python 3.6+ and may be installed using [pip]:\n```\npip install statham-schema\n```\n\n# compatibility\nsee [compatibility](https://statham-schema.readthedocs.io/en/latest/compatibility.html) for information regarding the currently supported json schema draft and exceptions.\n\n# development\n1. clone the repository: `git clone git@github.com:jacksmith15/statham-schema.git && cd statham-schema`\n2. initialise git submodules: `git submodule update --init --recursive`\n3. install the requirements: `pip install -r requirements.txt -r requirements-test.txt`\n4. run `pre-commit install`\n5. run the tests: `bash run_test.sh -c -a`\n\nthis project uses the following qa tools:\n- [pytest](https://docs.pytest.org/en/latest/) - for running unit tests.\n- [pylint](https://www.pylint.org/) - for enforcing code style.\n- [mypy](http://mypy-lang.org/) - for static type checking.\n- [travis ci](https://travis-ci.org/) - for continuous integration.\n- [black](https://black.readthedocs.io/en/stable/) - for uniform code formatting.\n\ndocumentation is written using [sphinx](https://www.sphinx-doc.org/en/master/).\n\n# license\nthis project is distributed under the mit license.\n\n![statham](https://giant.gfycat.com/grotesquenauticalcaracal.gif)\n\n[pip]: https://pip.pypa.io/en/stable/\n[json schema]: https://json-schema.org/\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "statham-schema",
  "package_url": "https://pypi.org/project/statham-schema/",
  "project_url": "https://pypi.org/project/statham-schema/",
  "project_urls": {
    "Homepage": "https://github.com/jacksmith15/statham-schema"
  },
  "release_url": "https://pypi.org/project/statham-schema/0.15.1/",
  "requires_dist": [
    "PyYAML (~=6.0)",
    "python-dateutil (~=2.8)",
    "jsonpointer (~=2.0)",
    "json-ref-dict (<0.8.0,>=0.6.2)",
    "typing-extensions (<5.0.0,>=3.7.0)"
  ],
  "requires_python": "",
  "summary": "tools for generating python models from json schema documents.",
  "version": "0.15.1",
  "releases": [],
  "developers": [
    "jack_smith"
  ],
  "kwds": "statham schema json documentation python",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_statham_schema",
  "homepage": "https://github.com/jacksmith15/statham-schema",
  "release_count": 22,
  "dependency_ids": [
    "pypi_json_ref_dict",
    "pypi_jsonpointer",
    "pypi_python_dateutil",
    "pypi_pyyaml",
    "pypi_typing_extensions"
  ]
}
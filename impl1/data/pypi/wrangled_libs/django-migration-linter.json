{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "intended audience :: developers",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# django migration linter\n\ndetect backward incompatible migrations for your django project.\nit will save you time by making sure migrations will not break with a older codebase.\n\n[![build status](https://img.shields.io/endpoint.svg?url=https%3a%2f%2factions-badge.atrox.dev%2f3yourmind%2fdjango-migration-linter%2fbadge%3fref%3dmain&style=flat)](https://actions-badge.atrox.dev/3yourmind/django-migration-linter/goto?ref=main)\n[![codecov](https://codecov.io/gh/3yourmind/django-migration-linter/branch/master/graph/badge.svg?token=pgnnxgbcf7)](https://codecov.io/gh/3yourmind/django-migration-linter)\n[![pypi](https://img.shields.io/pypi/v/django-migration-linter.svg)](https://pypi.python.org/pypi/django-migration-linter/)\n[![pr_welcome](https://img.shields.io/badge/pr-welcome-green.svg)](https://github.com/3yourmind/django-migration-linter/pulls)\n[![3yd_hiring](https://img.shields.io/badge/3yourmind-hiring-brightgreen.svg)](https://www.3yourmind.com/career)\n[![github_stars](https://img.shields.io/github/stars/3yourmind/django-migration-linter.svg?style=social&label=stars)](https://github.com/3yourmind/django-migration-linter/stargazers)\n\n## quick installation\n\n```\npip install django-migration-linter\n```\n\nand add the migration linter to your ``installed_apps``:\n```\ninstalled_apps = [\n    ...,\n    \"django_migration_linter\",\n    ...,\n]\n```\n\noptionally, add a configuration:\n```\nmigration_linter_options = {\n    ...\n}\n```\n\nfor details about configuration options, checkout [usage](docs/usage.md).\n\n## usage example\n\n```\n$ python manage.py lintmigrations\n\n(app_add_not_null_column, 0001_create_table)... ok\n(app_add_not_null_column, 0002_add_new_not_null_field)... err\n        not null constraint on columns\n(app_drop_table, 0001_initial)... ok\n(app_drop_table, 0002_delete_a)... err\n        dropping table\n(app_ignore_migration, 0001_initial)... ok\n(app_ignore_migration, 0002_ignore_migration)... ignore\n(app_rename_table, 0001_initial)... ok\n(app_rename_table, 0002_auto_20190414_1500)... err\n        renaming tables\n\n*** summary ***\nvalid migrations: 4/8\nerroneous migrations: 3/8\nmigrations with warnings: 0/8\nignored migrations: 1/8\n```\n\nthe linter analysed all migrations from the django project.\nit found 3 migrations that are doing backward incompatible operations and 1 that is explicitly ignored.\nthe list of incompatibilities that the linter analyses [can be found at docs/incompatibilities.md](./docs/incompatibilities.md).\n\nmore advanced usages of the linter and options [can be found at docs/usage.md](./docs/usage.md).\n\n## integration\n\none can either integrate the linter in the ci using its `lintmigrations` command, or detect incompatibilities during generation of migrations with\n```\n$ python manage.py makemigrations --lint\n\nmigrations for 'app_correct':\n  tests/test_project/app_correct/migrations/0003_a_column.py\n    - add field column to a\nlinting for 'app_correct':\n(app_correct, 0003_a_column)... err\n        not null constraint on columns\n\nthe migration linter detected that this migration is not backward compatible.\n- if you keep the migration, you will want to fix the issue or ignore the migration.\n- by default, the newly created migration file will be deleted.\ndo you want to keep the migration? [y/n] n\ndeleted tests/test_project/app_correct/migrations/0003_a_column.py\n```\n\nthe linter found that the newly created migration is not backward compatible and deleted the file after confirmation.\nthis behaviour can be the default of the `makemigrations` command through the `migration_linter_override_makemigrations` django setting.\nfind out more about the [makemigrations command at docs/makemigrations.md](./docs/makemigrations.md).\n\n### more information\n\nplease find more documentation [in the docs/ folder](./docs/).\n\nsome implementation details [can be found in the ./docs/internals/ folder](./docs/internals/).\n\n### blog post\n\n* [keeping django database migrations backward compatible](https://medium.com/3yourmind/keeping-django-database-migrations-backward-compatible-727820260dbb)\n* [django and its default values](https://medium.com/botify-labs/django-and-its-default-values-c21a13cff9f)\n\n### they talk about the linter\n\n* [django news](https://django-news.com/issues/6?m=web#ummosw7)\n* [wemake-django-template](https://wemake-django-template.readthedocs.io/en/latest/pages/template/linters.html#django-migration-linter)\n* [testing django migrations on sobolevn's blog](https://sobolevn.me/2019/10/testing-django-migrations#existing-setup)\n\n### related\n\n* [django-test-migrations](https://github.com/wemake-services/django-test-migrations) - test django schema and data migrations, including migrations' order and best practices.\n\n### license\n\n*django-migration-linter* is released under the [apache 2.0 license](./license).\n\n##### maintained by [david wobrock](https://github.com/david-wobrock)\n",
  "docs_url": null,
  "keywords": "django migration lint linter database backward compatibility",
  "license": "apache license 2.0",
  "name": "django-migration-linter",
  "package_url": "https://pypi.org/project/django-migration-linter/",
  "project_url": "https://pypi.org/project/django-migration-linter/",
  "project_urls": {
    "Homepage": "https://github.com/3YOURMIND/django-migration-linter"
  },
  "release_url": "https://pypi.org/project/django-migration-linter/5.0.0/",
  "requires_dist": [
    "django (>=2.2)",
    "appdirs (>=1.4.3)",
    "toml (>=0.10.2)",
    "tox (>=4.6.3) ; extra == 'test'",
    "mysqlclient (>=2.1.1) ; extra == 'test'",
    "psycopg2 (>=2.9.6) ; extra == 'test'",
    "django-add-default-value (>=0.4.0) ; extra == 'test'",
    "coverage (>=7.2.7) ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "detect backward incompatible migrations for your django project",
  "version": "5.0.0",
  "releases": [],
  "developers": [
    "3yourmind_gmbh",
    "david.wobrock@gmail.com"
  ],
  "kwds": "django_migration_linter migration_linter_override_makemigrations migration_linter_options migrations app_ignore_migration",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_django_migration_linter",
  "homepage": "https://github.com/3yourmind/django-migration-linter",
  "release_count": 35,
  "dependency_ids": [
    "pypi_appdirs",
    "pypi_coverage",
    "pypi_django",
    "pypi_django_add_default_value",
    "pypi_mysqlclient",
    "pypi_psycopg2",
    "pypi_toml",
    "pypi_tox"
  ]
}
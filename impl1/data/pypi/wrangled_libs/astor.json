{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: implementation",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: code generators",
    "topic :: software development :: compilers"
  ],
  "description": "=============================\nastor -- ast observe/rewrite\n=============================\n\n:pypi: https://pypi.org/project/astor/\n:documentation: https://astor.readthedocs.io\n:source: https://github.com/berkerpeksag/astor\n:license: 3-clause bsd\n:build status:\n    .. image:: https://secure.travis-ci.org/berkerpeksag/astor.svg\n        :alt: travis ci\n        :target: https://travis-ci.org/berkerpeksag/astor/\n\nastor is designed to allow easy manipulation of python source via the ast.\n\nthere are some other similar libraries, but astor focuses on the following areas:\n\n- round-trip an ast back to python [1]_:\n\n  - modified ast doesn't need linenumbers, ctx, etc. or otherwise\n    be directly compileable for the round-trip to work.\n  - easy to read generated code as, well, code\n  - can round-trip two different source trees to compare for functional\n    differences, using the astor.rtrip tool (for example, after pep8 edits).\n\n- dump pretty-printing of ast\n\n  - harder to read than round-tripped code, but more accurate to figure out what\n    is going on.\n\n  - easier to read than dump from built-in ast module\n\n- non-recursive treewalk\n\n  - sometimes you want a recursive treewalk (and astor supports that, starting\n    at any node on the tree), but sometimes you don't need to do that.  astor\n    doesn't require you to explicitly visit sub-nodes unless you want to:\n\n  - you can add code that executes before a node's children are visited, and/or\n  - you can add code that executes after a node's children are visited, and/or\n  - you can add code that executes and keeps the node's children from being\n    visited (and optionally visit them yourself via a recursive call)\n\n  - write functions to access the tree based on object names and/or attribute names\n  - enjoy easy access to parent node(s) for tree rewriting\n\n.. [1]\n    the decompilation back to python is based on code originally written\n    by armin ronacher.  armin's code was well-structured, but failed on\n    some obscure corner cases of the python language (and even more corner\n    cases when the ast changed on different versions of python), and its\n    output arguably had cosmetic issues -- for example, it produced\n    parentheses even in some cases where they were not needed, to\n    avoid having to reason about precedence.\n\n    other derivatives of armin's code are floating around, and typically\n    have fixes for a few corner cases that happened to be noticed by the\n    maintainers, but most of them have not been tested as thoroughly as\n    astor.  one exception may be the version of codegen\n    `maintained at github by censoredusername`__.  this has been tested\n    to work properly on python 2.7 using astor's test suite, and, as it\n    is a single source file, it may be easier to drop into some applications\n    that do not require astor's other features or python 3.x compatibility.\n\n__ https://github.com/censoredusername/codegen\n\n\n",
  "docs_url": null,
  "keywords": "ast,codegen,pep 8",
  "license": "bsd-3-clause",
  "name": "astor",
  "package_url": "https://pypi.org/project/astor/",
  "project_url": "https://pypi.org/project/astor/",
  "project_urls": {
    "Homepage": "https://github.com/berkerpeksag/astor"
  },
  "release_url": "https://pypi.org/project/astor/0.8.1/",
  "requires_dist": [],
  "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7",
  "summary": "read/rewrite/write python asts",
  "version": "0.8.1",
  "releases": [],
  "developers": [
    "patrick_maupin",
    "pmaupin@gmail.com"
  ],
  "kwds": "python ast asts libraries astor",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_astor",
  "homepage": "https://github.com/berkerpeksag/astor",
  "release_count": 14,
  "dependency_ids": []
}
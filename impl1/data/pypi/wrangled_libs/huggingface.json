{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "note:\n\n   version needs to be formatted following the major.minor.patch convention\n   (we need to follow this convention to be able to retrieve versioned scripts)\n\nsimple check list for release from allennlp repo: https://github.com/allenai/allennlp/blob/master/setup.py\n\nto create the package for pypi.\n\n1. change the version in __init__.py, setup.py as well as docs/source/conf.py.\n\n2. commit these changes with the message: \"release: version\"\n\n3. add a tag in git to mark the release: \"git tag version -m'adds tag version for pypi' \"\n   push the tag to git: git push --tags origin master\n\n4. build both the sources and the wheel. do not change anything in setup.py between\n   creating the wheel and the source distribution (obviously).\n\n   for the wheel, run: \"python setup.py bdist_wheel\" in the top level directory.\n   (this will build a wheel for the python version you use to build it).\n\n   for the sources, run: \"python setup.py sdist\"\n   you should now have a /dist directory with both .whl and .tar.gz source versions.\n\n   then change the scripts_version back to to \"master\" in __init__.py (but don't commit this change)\n\n5. check that everything looks correct by uploading the package to the pypi test server:\n\n   twine upload dist/* -r pypitest\n   (pypi suggest using twine as other methods upload files via plaintext.)\n   you may have to specify the repository url, use the following command then:\n   twine upload dist/* -r pypitest --repository-url=https://test.pypi.org/legacy/\n\n   check that you can install it in a virtualenv by running:\n   pip install -i https://testpypi.python.org/pypi datasets\n\n6. upload the final version to actual pypi:\n   twine upload dist/* -r pypi\n\n7. copy the release notes from release.md to the tag in github once everything is looking hunky-dory.\n\n8. update the documentation commit in .circleci/deploy.sh for the accurate documentation to be displayed\n   update the version mapping in docs/source/_static/js/custom.js\n\n9. update readme.md to redirect to correct documentation.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2.0",
  "name": "huggingface",
  "package_url": "https://pypi.org/project/huggingface/",
  "project_url": "https://pypi.org/project/huggingface/",
  "project_urls": {
    "Download": "https://github.com/huggingface/huggingface/tags",
    "Homepage": "https://github.com/huggingface/huggingface"
  },
  "release_url": "https://pypi.org/project/huggingface/0.0.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "huggingface is a single library comprising the main huggingface libraries.",
  "version": "0.0.1",
  "releases": [],
  "developers": [
    "huggingface_inc",
    "thomas@huggingface.co"
  ],
  "kwds": "pypi scripts_version github pypitest pip",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_huggingface",
  "homepage": "https://github.com/huggingface/huggingface",
  "release_count": 1,
  "dependency_ids": []
}
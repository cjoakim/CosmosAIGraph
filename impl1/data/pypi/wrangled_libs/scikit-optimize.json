{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "\n|logo|\n\n|pypi| |conda| |travis status| |circleci status| |binder| |gitter| |zenodo doi|\n\nscikit-optimize\n===============\n\nscikit-optimize, or ``skopt``, is a simple and efficient library to\nminimize (very) expensive and noisy black-box functions. it implements\nseveral methods for sequential model-based optimization. ``skopt`` aims\nto be accessible and easy to use in many contexts.\n\nthe library is built on top of numpy, scipy and scikit-learn.\n\nwe do not perform gradient-based optimization. for gradient-based\noptimization algorithms look at\n``scipy.optimize``\n`here <http://docs.scipy.org/doc/scipy/reference/optimize.html>`_.\n\n.. figure:: https://github.com/scikit-optimize/scikit-optimize/blob/master/media/bo-objective.png\n   :alt: approximated objective\n\napproximated objective function after 50 iterations of ``gp_minimize``.\nplot made using ``skopt.plots.plot_objective``.\n\nimportant links\n---------------\n\n-  static documentation - `static\n   documentation <https://scikit-optimize.github.io/>`__\n-  example notebooks - can be found in examples_.\n-  issue tracker -\n   https://github.com/scikit-optimize/scikit-optimize/issues\n-  releases - https://pypi.python.org/pypi/scikit-optimize\n\ninstall\n-------\n\nscikit-optimize requires\n\n* python >= 3.6\n* numpy (>= 1.13.3)\n* scipy (>= 0.19.1)\n* joblib (>= 0.11)\n* scikit-learn >= 0.20\n* matplotlib >= 2.0.0\n\nyou can install the latest release with:\n::\n\n    pip install scikit-optimize\n\nthis installs an essential version of scikit-optimize. to install scikit-optimize\nwith plotting functionality, you can instead do:\n::\n\n    pip install 'scikit-optimize[plots]'\n\nthis will install matplotlib along with scikit-optimize.\n\nin addition there is a `conda-forge <https://conda-forge.org/>`_ package\nof scikit-optimize:\n::\n\n    conda install -c conda-forge scikit-optimize\n\nusing conda-forge is probably the easiest way to install scikit-optimize on\nwindows.\n\n\ngetting started\n---------------\n\nfind the minimum of the noisy function ``f(x)`` over the range\n``-2 < x < 2`` with ``skopt``:\n\n.. code:: python\n\n    import numpy as np\n    from skopt import gp_minimize\n\n    def f(x):\n        return (np.sin(5 * x[0]) * (1 - np.tanh(x[0] ** 2)) +\n                np.random.randn() * 0.1)\n\n    res = gp_minimize(f, [(-2.0, 2.0)])\n\n\nfor more control over the optimization loop you can use the ``skopt.optimizer``\nclass:\n\n.. code:: python\n\n    from skopt import optimizer\n\n    opt = optimizer([(-2.0, 2.0)])\n\n    for i in range(20):\n        suggested = opt.ask()\n        y = f(suggested)\n        opt.tell(suggested, y)\n        print('iteration:', i, suggested, y)\n\n\nread our `introduction to bayesian\noptimization <https://scikit-optimize.github.io/stable/auto_examples/bayesian-optimization.html>`__\nand the other examples_.\n\n\ndevelopment\n-----------\n\nthe library is still experimental and under heavy development. checkout\nthe `next\nmilestone <https://github.com/scikit-optimize/scikit-optimize/milestones>`__\nfor the plans for the next release or look at some `easy\nissues <https://github.com/scikit-optimize/scikit-optimize/issues?q=is%3aissue+is%3aopen+label%3aeasy>`__\nto get started contributing.\n\nthe development version can be installed through:\n\n::\n\n    git clone https://github.com/scikit-optimize/scikit-optimize.git\n    cd scikit-optimize\n    pip install -e.\n\nrun all tests by executing ``pytest`` in the top level directory.\n\nto only run the subset of tests with short run time, you can use ``pytest -m 'fast_test'`` (``pytest -m 'slow_test'`` is also possible). to exclude all slow running tests try ``pytest -m 'not slow_test'``.\n\nthis is implemented using pytest `attributes <https://docs.pytest.org/en/latest/mark.html>`__. if a tests runs longer than 1 second, it is marked as slow, else as fast.\n\nall contributors are welcome!\n\n\nmaking a release\n~~~~~~~~~~~~~~~~\n\nthe release procedure is almost completely automated. by tagging a new release\ntravis will build all required packages and push them to pypi. to make a release\ncreate a new issue and work through the following checklist:\n\n* update the version tag in ``__init__.py``\n* update the version tag mentioned in the readme\n* check if the dependencies in ``setup.py`` are valid or need unpinning\n* check that the ``doc/whats_new/v0.x.rst`` is up to date\n* did the last build of master succeed?\n* create a `new release <https://github.com/scikit-optimize/scikit-optimize/releases>`__\n* ping `conda-forge <https://github.com/conda-forge/scikit-optimize-feedstock>`__\n\nbefore making a release we usually create a release candidate. if the next\nrelease is v0.x then the release candidate should be tagged v0.xrc1 in\n``__init__.py``. mark a release candidate as a \"pre-release\"\non github when you tag it.\n\n\ncommercial support\n------------------\n\nfeel free to `get in touch <mailto:tim@wildtreetech.com>`_ if you need commercial\nsupport or would like to sponsor development. resources go towards paying\nfor additional work by seasoned engineers and researchers.\n\n\nmade possible by\n----------------\n\nthe scikit-optimize project was made possible with the support of\n\n.. image:: https://avatars1.githubusercontent.com/u/18165687?v=4&s=128\n   :alt: wild tree tech\n   :target: http://wildtreetech.com\n\n.. image:: https://i.imgur.com/lgxbot5.jpg\n    :alt: nyu center for data science\n    :target: https://cds.nyu.edu/\n\n.. image:: https://i.imgur.com/v1vsivj.jpg\n    :alt: nsf\n    :target: https://www.nsf.gov\n\n.. image:: https://i.imgur.com/3enq6s8.jpg\n    :alt: northrop grumman\n    :target: http://www.northropgrumman.com/pages/default.aspx\n\nif your employer allows you to work on scikit-optimize during the day and would like\nrecognition, feel free to add them to the \"made possible by\" list.\n\n\n.. |pypi| image:: https://img.shields.io/pypi/v/scikit-optimize.svg\n   :target: https://pypi.python.org/pypi/scikit-optimize\n.. |conda| image:: https://anaconda.org/conda-forge/scikit-optimize/badges/version.svg\n   :target: https://anaconda.org/conda-forge/scikit-optimize\n.. |travis status| image:: https://travis-ci.org/scikit-optimize/scikit-optimize.svg?branch=master\n   :target: https://travis-ci.org/scikit-optimize/scikit-optimize\n.. |circleci status| image:: https://circleci.com/gh/scikit-optimize/scikit-optimize/tree/master.svg?style=shield&circle-token=:circle-token\n   :target: https://circleci.com/gh/scikit-optimize/scikit-optimize\n.. |logo| image:: https://avatars2.githubusercontent.com/u/18578550?v=4&s=80\n.. |binder| image:: https://mybinder.org/badge.svg\n   :target: https://mybinder.org/v2/gh/scikit-optimize/scikit-optimize/master?filepath=examples\n.. |gitter| image:: https://badges.gitter.im/scikit-optimize/scikit-optimize.svg\n   :target: https://gitter.im/scikit-optimize/lobby\n.. |zenodo doi| image:: https://zenodo.org/badge/54340642.svg\n   :target: https://zenodo.org/badge/latestdoi/54340642\n.. _examples: https://scikit-optimize.github.io/stable/auto_examples/index.html\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd 3-clause",
  "name": "scikit-optimize",
  "package_url": "https://pypi.org/project/scikit-optimize/",
  "project_url": "https://pypi.org/project/scikit-optimize/",
  "project_urls": {
    "Homepage": "https://scikit-optimize.github.io/"
  },
  "release_url": "https://pypi.org/project/scikit-optimize/0.9.0/",
  "requires_dist": [
    "joblib (>=0.11)",
    "pyaml (>=16.9)",
    "numpy (>=1.13.3)",
    "scipy (>=0.19.1)",
    "scikit-learn (>=0.20.0)",
    "matplotlib (>=2.0.0) ; extra == 'plots'"
  ],
  "requires_python": "",
  "summary": "sequential model-based optimization toolbox.",
  "version": "0.9.0",
  "releases": [],
  "developers": [
    "the_scikit"
  ],
  "kwds": "optimizer optimization optimize gp_minimize scikit",
  "license_kwds": "bsd 3-clause",
  "libtype": "pypi",
  "id": "pypi_scikit_optimize",
  "homepage": "https://scikit-optimize.github.io/",
  "release_count": 19,
  "dependency_ids": [
    "pypi_joblib",
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_pyaml",
    "pypi_scikit_learn",
    "pypi_scipy"
  ]
}
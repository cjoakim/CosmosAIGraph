{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "[![pipeline status](https://gitlab.com/databand-ai/dbnd/badges/master/pipeline.svg)](https://gitlab.com/databand-ai/dbnd/pipelines)\n\n![pypi - downloads](https://img.shields.io/pypi/dm/dbnd) ![pypi](https://img.shields.io/pypi/v/dbnd)\n![pypi - python version](https://img.shields.io/pypi/pyversions/dbnd) ![pypi - license](https://img.shields.io/pypi/l/dbnd)\n![code style: ](https://img.shields.io/badge/code%20style-black-000000.svg)\n\n# dbnd\n\ndbnd an open source framework for building and tracking data pipelines. dbnd is used for processes ranging from data ingestion, preparation, machine learning model training and production.\n\ndbnd includes a python library, set of apis, and cli that enables you to collect metadata from your workflows, create a system of record for runs, and easily orchestrate complex processes.\n\ndbnd simplifies the process of building and running data pipelines\nfrom dbnd import task\n\n```python\nfrom dbnd import task\n\n@task\ndef say_hello(name: str = \"databand.ai\") -> str:\n    value = \"hello %s!\" % name\n    return value\n```\n\nand makes it easy to track your critical pipeline metadata\n\n```python\nfrom dbnd import log_metric, log_dataframe\n\nlog_dataframe(\"my_dataset\", my_dataset)\nlog_metric(\"r2\", r2)\n```\n\n## getting started\n\nsee our [documentation](https://www.ibm.com/docs/en/dobd) with examples and quickstart guides to get up and running with dbnd.\n\n## the latest and greatest\n\nfor using dbnd, we recommend that you work with a virtual environment like [virtualenv](https://virtualenv.pypa.io/en/latest/) or [conda](https://docs.conda.io/en/latest/). update to the latest and greatest:\n\n```shell script\npip install dbnd\n```\n\nif you would like access to our latest features, or have any questions, feedback, or contributions we would love to here from you! get in touch through contact@databand.ai\n",
  "docs_url": null,
  "keywords": "orchestration,data,machinelearning",
  "license": "",
  "name": "dbnd",
  "package_url": "https://pypi.org/project/dbnd/",
  "project_url": "https://pypi.org/project/dbnd/",
  "project_urls": {
    "Bug-Tracker": "https://github.com/databand-ai/dbnd/issues",
    "Documentation": "https://dbnd.readme.io/",
    "Homepage": "https://github.com/databand-ai/dbnd",
    "Source-Code": "https://github.com/databand-ai/dbnd"
  },
  "release_url": "https://pypi.org/project/dbnd/1.0.20.3/",
  "requires_dist": [
    "tzlocal",
    "six",
    "more-itertools",
    "attrs (!=21.1.0)",
    "pyyaml",
    "pytz",
    "pytzdata",
    "requests (>=2.18.0)",
    "configparser (<3.6.0,>=3.5.0)",
    "pygments (>=2.6.1)",
    "python-dateutil",
    "sqlparse",
    "Jinja2",
    "typing ; python_version < \"3.7\"",
    "colorama ; sys_platform==\"win32\"",
    "qtconsole (==4.7.7) ; extra == 'jupyter'",
    "nbconvert ; extra == 'jupyter'",
    "nbformat ; extra == 'jupyter'",
    "jupyter ; extra == 'jupyter'",
    "traitlets (<5.0.0,>=4.2) ; extra == 'jupyter'",
    "IPython ; extra == 'jupyter'",
    "jupyter-contrib-nbextensions ; extra == 'jupyter'",
    "openpyxl (==2.6.4) ; extra == 'test-pandas'",
    "numpy (<1.23) ; extra == 'test-pandas'",
    "pandas (<2.0.0,>=0.17.1) ; extra == 'test-pandas'",
    "tables (==3.7.0) ; extra == 'test-pandas'",
    "feather-format ; extra == 'test-pandas'",
    "pyarrow ; extra == 'test-pandas'",
    "scikit-learn (==0.23.2) ; (python_version < \"3.8\") and extra == 'test-pandas'",
    "matplotlib (==3.3.0) ; (python_version < \"3.8\") and extra == 'test-pandas'",
    "scikit-learn (==1.2.0) ; (python_version >= \"3.8\") and extra == 'test-pandas'",
    "matplotlib (==3.6.2) ; (python_version >= \"3.8\") and extra == 'test-pandas'",
    "pytest-spark (==0.6.0) ; extra == 'test-spark2'",
    "pyspark (==2.4.4) ; (python_version < \"3.8\") and extra == 'test-spark2'",
    "pytest-spark (==0.6.0) ; extra == 'test-spark3'",
    "pyspark (==3.3.1) ; (python_version >= \"3.8\") and extra == 'test-spark3'",
    "coverage ; extra == 'tests'",
    "tox (==3.12.1) ; extra == 'tests'",
    "pytest (==4.5.0) ; extra == 'tests'",
    "pytest-cov (==2.9.0) ; extra == 'tests'",
    "mock ; extra == 'tests'",
    "wheel ; extra == 'tests'"
  ],
  "requires_python": ">=3.6, <3.12",
  "summary": "machine learning orchestration",
  "version": "1.0.20.3",
  "releases": [],
  "developers": [
    "evgeny.shulman@databand.ai",
    "evgeny_shulman"
  ],
  "kwds": "dbnd pipeline pipelines pypi pip",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_dbnd",
  "homepage": "https://github.com/databand-ai/dbnd",
  "release_count": 555,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_colorama",
    "pypi_configparser",
    "pypi_coverage",
    "pypi_feather_format",
    "pypi_ipython",
    "pypi_jinja2",
    "pypi_jupyter",
    "pypi_jupyter_contrib_nbextensions",
    "pypi_matplotlib",
    "pypi_mock",
    "pypi_more_itertools",
    "pypi_nbconvert",
    "pypi_nbformat",
    "pypi_numpy",
    "pypi_openpyxl",
    "pypi_pandas",
    "pypi_pyarrow",
    "pypi_pygments",
    "pypi_pyspark",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_spark",
    "pypi_python_dateutil",
    "pypi_pytz",
    "pypi_pytzdata",
    "pypi_pyyaml",
    "pypi_qtconsole",
    "pypi_requests",
    "pypi_scikit_learn",
    "pypi_six",
    "pypi_sqlparse",
    "pypi_tables",
    "pypi_tox",
    "pypi_traitlets",
    "pypi_typing",
    "pypi_tzlocal",
    "pypi_wheel"
  ]
}
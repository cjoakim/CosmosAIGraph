{
  "classifiers": [
    "environment :: macos x",
    "environment :: win32 (ms windows)",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: office/business :: office suites",
    "topic :: software development :: libraries"
  ],
  "description": "# docx2pdf\n\n[![pypi](https://img.shields.io/pypi/v/docx2pdf)](https://pypi.org/project/docx2pdf/)\n\nconvert `docx` to `pdf` on windows or macos directly using microsoft word (must be installed).\n\non windows, this is implemented via [`win32com`](https://pypi.org/project/pywin32/) while on macos this is implemented via [jxa](https://github.com/jxa-cookbook/jxa-cookbook) (javascript for automation, aka applescript in js).\n\n## install\n\non macos:\n\n```\nbrew install aljohri/-/docx2pdf\n```\n\nvia [pipx](https://pipxproject.github.io/pipx/):\n\n```\npipx install docx2pdf\n```\n\nvia pip:\n\n```\npip install docx2pdf\n```\n\n## cli\n\n```\nusage: docx2pdf [-h] [--keep-active] [--version] input [output]\n\nexample usage:\n\nconvert single docx file in-place from myfile.docx to myfile.pdf:\n    docx2pdf myfile.docx\n\nbatch convert docx folder in-place. output pdfs will go in the same folder:\n    docx2pdf myfolder/\n\nconvert single docx file with explicit output filepath:\n    docx2pdf input.docx output.docx\n\nconvert single docx file and output to a different explicit folder:\n    docx2pdf input.docx output_dir/\n\nbatch convert docx folder. output pdfs will go to a different explicit folder:\n    docx2pdf input_dir/ output_dir/\n\npositional arguments:\n  input          input file or folder. batch converts entire folder or convert\n                 single file\n  output         output file or folder\n\noptional arguments:\n  -h, --help     show this help message and exit\n  --keep-active  prevent closing word after conversion\n  --version      display version and exit\n```\n\n## library\n\n```python\nfrom docx2pdf import convert\n\nconvert(\"input.docx\")\nconvert(\"input.docx\", \"output.pdf\")\nconvert(\"my_docx_folder/\")\n```\n\nsee cli docs above (or in `docx2pdf --help`) for all the different invocations. it is the same for the cli and python library.\n\n## jupyter notebook\n\nif you are using this in the context of jupyter notebook, you will need `ipywidgets` for the tqdm progress bar to render properly.\n\n```\npip install ipywidgets\njupyter nbextension enable --py widgetsnbextension\n``\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "docx2pdf",
  "package_url": "https://pypi.org/project/docx2pdf/",
  "project_url": "https://pypi.org/project/docx2pdf/",
  "project_urls": {
    "Homepage": "https://github.com/AlJohri/docx2pdf",
    "Repository": "https://github.com/AlJohri/docx2pdf"
  },
  "release_url": "https://pypi.org/project/docx2pdf/0.1.8/",
  "requires_dist": [
    "pywin32 (>=227); sys_platform == \"win32\"",
    "tqdm (>=4.41.0)",
    "importlib_metadata (>=1.3.0); python_version < \"3.8\"",
    "appscript (>=1.1.0); sys_platform == \"darwin\""
  ],
  "requires_python": ">=3.5",
  "summary": "convert docx to pdf on windows or macos directly using microsoft word (must be installed).",
  "version": "0.1.8",
  "releases": [],
  "developers": [
    "al.johri@gmail.com",
    "al_johri"
  ],
  "kwds": "docx2pdf docx pipxproject my_docx_folder pipx",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_docx2pdf",
  "homepage": "https://github.com/aljohri/docx2pdf",
  "release_count": 8,
  "dependency_ids": [
    "pypi_appscript",
    "pypi_importlib_metadata",
    "pypi_pywin32",
    "pypi_tqdm"
  ]
}
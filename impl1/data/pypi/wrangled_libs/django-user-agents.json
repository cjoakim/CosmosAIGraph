{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: web environment",
    "framework :: django",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: internet :: www/http",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "django user agents\n==================\n\na django package that allows easy identification of visitor's browser, os and device information,\nincluding whether the visitor uses a mobile phone, tablet or a touch capable device. under the hood,\nit uses `user-agents <https://github.com/selwin/python-user-agents>`_.\n\n\ninstallation\n============\n\n1. install ``django-user-agents``, you'll have to make sure that `user-agents`_ is installed first::\n\n    pip install pyyaml ua-parser user-agents\n    pip install django-user-agents\n\n2. configure ``settings.py``:\n\n   .. code-block:: python\n\n    installed_apps = (\n        # other apps...\n        'django_user_agents',\n    )\n\n    # cache backend is optional, but recommended to speed up user agent parsing\n    caches = {\n        'default': {\n            'backend': 'django.core.cache.backends.memcached.memcachedcache',\n            'location': '127.0.0.1:11211',\n        }\n    }\n\n    # name of cache backend to cache user agents. if it not specified default\n    # cache alias will be used. set to `none` to disable caching.\n    user_agents_cache = 'default'\n\nusage\n=====\n\nmiddleware\n----------\n\nadd ``useragentmiddleware`` in ``settings.py``:\n\n.. code-block:: python\n\n    middleware_classes = (\n        # other middlewares...\n        'django_user_agents.middleware.useragentmiddleware',\n    )\n\na ``user_agent`` attribute will now be added to ``request``, which you can use\nin ``views.py``:\n\n.. code-block:: python\n\n    def my_view(request):\n\n        # let's assume that the visitor uses an iphone...\n        request.user_agent.is_mobile # returns true\n        request.user_agent.is_tablet # returns false\n        request.user_agent.is_touch_capable # returns true\n        request.user_agent.is_pc # returns false\n        request.user_agent.is_bot # returns false\n\n        # accessing user agent's browser attributes\n        request.user_agent.browser  # returns browser(family=u'mobile safari', version=(5, 1), version_string='5.1')\n        request.user_agent.browser.family  # returns 'mobile safari'\n        request.user_agent.browser.version  # returns (5, 1)\n        request.user_agent.browser.version_string   # returns '5.1'\n\n        # operating system properties\n        request.user_agent.os  # returns operatingsystem(family=u'ios', version=(5, 1), version_string='5.1')\n        request.user_agent.os.family  # returns 'ios'\n        request.user_agent.os.version  # returns (5, 1)\n        request.user_agent.os.version_string  # returns '5.1'\n\n        # device properties\n        request.user_agent.device  # returns device(family='iphone')\n        request.user_agent.device.family  # returns 'iphone'\n\nif you have ``django.core.context_processors.request`` enabled, ``user_agent``\nwill also be available in template through ``request``:\n\n.. code-block:: html+django\n\n    {% if request.user_agent.is_mobile %}\n        do stuff here...\n    {% endif %}\n\n\nview usage\n----------\n\n``django-user_agents`` comes with ``get_user_agent`` which takes a single\n``request`` argument and returns a ``useragent`` instance. example usage:\n\n.. code-block:: python\n\n    from django_user_agents.utils import get_user_agent\n\n    def my_view(request):\n        user_agent = get_user_agent(request)\n        if user_agent.is_mobile:\n            # do stuff here...\n        elif user_agent.is_tablet:\n            # do other stuff...\n\n\ntemplate usage\n--------------\n\n``django-user_agents`` comes with a few template filters:\n\n* ``is_mobile``\n* ``is_tablet``\n* ``is_touch_capable``\n* ``is_pc``\n* ``is_bot``\n\nyou can use all of these like any other django template filters:\n\n.. code-block:: html+django\n\n    {% load user_agents %}\n\n    {% if request|is_mobile %}\n        mobile device stuff...\n    {% endif %}\n\n    {% if request|is_tablet %}\n        tablet stuff...\n    {% endif %}\n\n    {% if request|is_pc %}\n        pc stuff...\n    {% endif %}\n\n    {% if request|is_touch_capable %}\n        touch capable device stuff...\n    {% endif %}\n\n    {% if request|is_bot %}\n        bot stuff...\n    {% endif %}\n\n\nyou can find out more about user agent attributes at `here <https://github.com/selwin/python-user-agents>`_.\n\n\nrunning tests\n=============\n\n.. code-block:: console\n\n    `which django-admin.py` test django_user_agents --settings=django_user_agents.tests.settings --pythonpath=.\n\n\nchangelog\n=========\n\n0.4.0\n-----\n* add support for django 2.0 to 2.2. thanks @adamchainz and @joehybird!\n\n0.3.1\n-----\n* fixed a bug when request have no meta attribute\n\n0.3.0\n-----\n* python 3, thanks to @hwkns!\n\n0.2.2\n-----\n* fixed a bug that causes cache set/read to fail when user agent is longer than 250 characters\n\n0.2.1\n-----\n* fixed packaging\n\n0.2.0\n-----\n* added template filters\n* added ``get_user_agent`` function in utils.py\n\n0.1.1\n-----\n* fixed a ``keyerror`` exception in the case of empty ``http_user_agent``\n\n0.1\n---\n* initial release\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "django-user-agents",
  "package_url": "https://pypi.org/project/django-user-agents/",
  "project_url": "https://pypi.org/project/django-user-agents/",
  "project_urls": {
    "Homepage": "https://github.com/selwin/django-user_agents"
  },
  "release_url": "https://pypi.org/project/django-user-agents/0.4.0/",
  "requires_dist": [
    "django",
    "user-agents"
  ],
  "requires_python": "",
  "summary": "a django package that allows easy identification of visitors' browser, operating system and device information (mobile phone, tablet or has touch capabilities).",
  "version": "0.4.0",
  "releases": [],
  "developers": [
    "selwin.ong@gmail.com",
    "selwin_ong"
  ],
  "kwds": "django_user_agents user_agents_cache get_user_agent user_agent http_user_agent",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_django_user_agents",
  "homepage": "https://github.com/selwin/django-user_agents",
  "release_count": 8,
  "dependency_ids": [
    "pypi_django",
    "pypi_user_agents"
  ]
}
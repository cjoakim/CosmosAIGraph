{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.13",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "typing :: typed"
  ],
  "description": "type annotations for boto3.ec2 1.34.4 service generated with mypy-boto3-builder 7.22.0\n<a id=\"mypy-boto3-ec2\"></a>\n\n# mypy-boto3-ec2\n\n[![pypi - mypy-boto3-ec2](https://img.shields.io/pypi/v/mypy-boto3-ec2.svg?color=blue)](https://pypi.org/project/mypy-boto3-ec2)\n[![pypi - python version](https://img.shields.io/pypi/pyversions/mypy-boto3-ec2.svg?color=blue)](https://pypi.org/project/mypy-boto3-ec2)\n[![docs](https://img.shields.io/readthedocs/boto3-stubs.svg?color=blue)](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_ec2/)\n[![pypi - downloads](https://static.pepy.tech/badge/mypy-boto3-ec2)](https://pepy.tech/project/mypy-boto3-ec2)\n\n![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)\n\ntype annotations for\n[boto3.ec2 1.34.4](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ec2.html#ec2)\nservice compatible with [vscode](https://code.visualstudio.com/),\n[pycharm](https://www.jetbrains.com/pycharm/),\n[emacs](https://www.gnu.org/software/emacs/),\n[sublime text](https://www.sublimetext.com/),\n[mypy](https://github.com/python/mypy),\n[pyright](https://github.com/microsoft/pyright) and other tools.\n\ngenerated by\n[mypy-boto3-builder 7.22.0](https://github.com/youtype/mypy_boto3_builder).\n\nmore information can be found on\n[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in\n[mypy-boto3-ec2 docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_ec2/).\n\nsee how it helps to find and fix potential bugs:\n\n![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)\n\n- [mypy-boto3-ec2](#mypy-boto3-ec2)\n  - [how to install](#how-to-install)\n    - [vscode extension](#vscode-extension)\n    - [from pypi with pip](#from-pypi-with-pip)\n    - [from conda-forge](#from-conda-forge)\n  - [how to uninstall](#how-to-uninstall)\n  - [usage](#usage)\n    - [vscode](#vscode)\n    - [pycharm](#pycharm)\n    - [emacs](#emacs)\n    - [sublime text](#sublime-text)\n    - [other ides](#other-ides)\n    - [mypy](#mypy)\n    - [pyright](#pyright)\n  - [explicit type annotations](#explicit-type-annotations)\n    - [client annotations](#client-annotations)\n    - [paginators annotations](#paginators-annotations)\n    - [waiters annotations](#waiters-annotations)\n    - [service resource annotations](#service-resource-annotations)\n    - [other resources annotations](#other-resources-annotations)\n    - [collections annotations](#collections-annotations)\n    - [literals](#literals)\n    - [type definitions](#type-definitions)\n  - [how it works](#how-it-works)\n  - [what's new](#what's-new)\n    - [implemented features](#implemented-features)\n    - [latest changes](#latest-changes)\n  - [versioning](#versioning)\n  - [thank you](#thank-you)\n  - [documentation](#documentation)\n  - [support and contributing](#support-and-contributing)\n\n<a id=\"how-to-install\"></a>\n\n## how to install\n\n<a id=\"vscode-extension\"></a>\n\n### vscode extension\n\nadd\n[aws boto3](https://marketplace.visualstudio.com/items?itemname=boto3typed.boto3-ide)\nextension to your vscode and run `aws boto3: quick start` command.\n\nclick `modify` and select `boto3 common` and `ec2`.\n\n<a id=\"from-pypi-with-pip\"></a>\n\n### from pypi with pip\n\ninstall `boto3-stubs` for `ec2` service.\n\n```bash\n# install with boto3 type annotations\npython -m pip install 'boto3-stubs[ec2]'\n\n\n# lite version does not provide session.client/resource overloads\n# it is more ram-friendly, but requires explicit type annotations\npython -m pip install 'boto3-stubs-lite[ec2]'\n\n\n# standalone installation\npython -m pip install mypy-boto3-ec2\n```\n\n<a id=\"from-conda-forge\"></a>\n\n### from conda-forge\n\ninstalling `mypy-boto3-ec2` from the `conda-forge` channel can be achieved by\nadding `conda-forge` to your channels with:\n\n```bash\nconda config --add channels conda-forge\nconda config --set channel_priority strict\n```\n\nonce the `conda-forge` channel has been enabled, `mypy-boto3-ec2` can be\ninstalled with:\n\n```bash\nconda install mypy-boto3-ec2\n```\n\nit is possible to list all of the versions of `mypy-boto3-ec2` available on\nyour platform with:\n\n```bash\nconda search mypy-boto3-ec2 --channel conda-forge\n```\n\n<a id=\"how-to-uninstall\"></a>\n\n## how to uninstall\n\n```bash\npython -m pip uninstall -y mypy-boto3-ec2\n```\n\n<a id=\"usage\"></a>\n\n## usage\n\n<a id=\"vscode\"></a>\n\n### vscode\n\n- install\n  [python extension](https://marketplace.visualstudio.com/items?itemname=ms-python.python)\n- install\n  [pylance extension](https://marketplace.visualstudio.com/items?itemname=ms-python.vscode-pylance)\n- set `pylance` as your python language server\n- install `boto3-stubs[ec2]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[ec2]'\n```\n\nboth type checking and code completion should now work. no explicit type\nannotations required, write your `boto3` code as usual.\n\n<a id=\"pycharm\"></a>\n\n### pycharm\n\ninstall `boto3-stubs-lite[ec2]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs-lite[ec2]'`\n```\n\nboth type checking and code completion should now work. explicit type\nannotations **are required**.\n\nuse `boto3-stubs` package instead for implicit type discovery.\n\n<a id=\"emacs\"></a>\n\n### emacs\n\n- install `boto3-stubs` with services you use in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[ec2]'\n```\n\n- install [use-package](https://github.com/jwiegley/use-package),\n  [lsp](https://github.com/emacs-lsp/lsp-mode/),\n  [company](https://github.com/company-mode/company-mode) and\n  [flycheck](https://github.com/flycheck/flycheck) packages\n- install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package\n\n```elisp\n(use-package lsp-pyright\n  :ensure t\n  :hook (python-mode . (lambda ()\n                          (require 'lsp-pyright)\n                          (lsp)))  ; or lsp-deferred\n  :init (when (executable-find \"python3\")\n          (setq lsp-pyright-python-executable-cmd \"python3\"))\n  )\n```\n\n- make sure emacs uses the environment where you have installed `boto3-stubs`\n\ntype checking should now work. no explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"sublime-text\"></a>\n\n### sublime text\n\n- install `boto3-stubs[ec2]` with services you use in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[ec2]'\n```\n\n- install [lsp-pyright](https://github.com/sublimelsp/lsp-pyright) package\n\ntype checking should now work. no explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"other-ides\"></a>\n\n### other ides\n\nnot tested, but as long as your ide supports `mypy` or `pyright`, everything\nshould work.\n\n<a id=\"mypy\"></a>\n\n### mypy\n\n- install `mypy`: `python -m pip install mypy`\n- install `boto3-stubs[ec2]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[ec2]'`\n```\n\ntype checking should now work. no explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"pyright\"></a>\n\n### pyright\n\n- install `pyright`: `npm i -g pyright`\n- install `boto3-stubs[ec2]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[ec2]'\n```\n\noptionally, you can install `boto3-stubs` to `typings` folder.\n\ntype checking should now work. no explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"explicit-type-annotations\"></a>\n\n## explicit type annotations\n\n<a id=\"client-annotations\"></a>\n\n### client annotations\n\n`ec2client` provides annotations for `boto3.client(\"ec2\")`.\n\n```python\nfrom boto3.session import session\n\nfrom mypy_boto3_ec2 import ec2client\n\nclient: ec2client = session().client(\"ec2\")\n\n# now client usage is checked by mypy and ide should provide code completion\n```\n\n<a id=\"paginators-annotations\"></a>\n\n### paginators annotations\n\n`mypy_boto3_ec2.paginator` module contains type annotations for all paginators.\n\n```python\nfrom boto3.session import session\n\nfrom mypy_boto3_ec2 import ec2client\nfrom mypy_boto3_ec2.paginator import (\n    describeaddresstransferspaginator,\n    describeaddressesattributepaginator,\n    describeawsnetworkperformancemetricsubscriptionspaginator,\n    describebyoipcidrspaginator,\n    describecapacityblockofferingspaginator,\n    describecapacityreservationfleetspaginator,\n    describecapacityreservationspaginator,\n    describecarriergatewayspaginator,\n    describeclassiclinkinstancespaginator,\n    describeclientvpnauthorizationrulespaginator,\n    describeclientvpnconnectionspaginator,\n    describeclientvpnendpointspaginator,\n    describeclientvpnroutespaginator,\n    describeclientvpntargetnetworkspaginator,\n    describecoippoolspaginator,\n    describedhcpoptionspaginator,\n    describeegressonlyinternetgatewayspaginator,\n    describeexportimagetaskspaginator,\n    describefastlaunchimagespaginator,\n    describefastsnapshotrestorespaginator,\n    describefleetspaginator,\n    describeflowlogspaginator,\n    describefpgaimagespaginator,\n    describehostreservationofferingspaginator,\n    describehostreservationspaginator,\n    describehostspaginator,\n    describeiaminstanceprofileassociationspaginator,\n    describeimagespaginator,\n    describeimportimagetaskspaginator,\n    describeimportsnapshottaskspaginator,\n    describeinstanceconnectendpointspaginator,\n    describeinstancecreditspecificationspaginator,\n    describeinstanceeventwindowspaginator,\n    describeinstancestatuspaginator,\n    describeinstancetopologypaginator,\n    describeinstancetypeofferingspaginator,\n    describeinstancetypespaginator,\n    describeinstancespaginator,\n    describeinternetgatewayspaginator,\n    describeipampoolspaginator,\n    describeipamresourcediscoveriespaginator,\n    describeipamresourcediscoveryassociationspaginator,\n    describeipamscopespaginator,\n    describeipamspaginator,\n    describeipv6poolspaginator,\n    describelaunchtemplateversionspaginator,\n    describelaunchtemplatespaginator,\n    describelocalgatewayroutetablevirtualinterfacegroupassociationspaginator,\n    describelocalgatewayroutetablevpcassociationspaginator,\n    describelocalgatewayroutetablespaginator,\n    describelocalgatewayvirtualinterfacegroupspaginator,\n    describelocalgatewayvirtualinterfacespaginator,\n    describelocalgatewayspaginator,\n    describemanagedprefixlistspaginator,\n    describemovingaddressespaginator,\n    describenatgatewayspaginator,\n    describenetworkaclspaginator,\n    describenetworkinsightsaccessscopeanalysespaginator,\n    describenetworkinsightsaccessscopespaginator,\n    describenetworkinsightsanalysespaginator,\n    describenetworkinsightspathspaginator,\n    describenetworkinterfacepermissionspaginator,\n    describenetworkinterfacespaginator,\n    describeprefixlistspaginator,\n    describeprincipalidformatpaginator,\n    describepublicipv4poolspaginator,\n    describereplacerootvolumetaskspaginator,\n    describereservedinstancesmodificationspaginator,\n    describereservedinstancesofferingspaginator,\n    describeroutetablespaginator,\n    describescheduledinstanceavailabilitypaginator,\n    describescheduledinstancespaginator,\n    describesecuritygrouprulespaginator,\n    describesecuritygroupspaginator,\n    describesnapshottierstatuspaginator,\n    describesnapshotspaginator,\n    describespotfleetinstancespaginator,\n    describespotfleetrequestspaginator,\n    describespotinstancerequestspaginator,\n    describespotpricehistorypaginator,\n    describestalesecuritygroupspaginator,\n    describestoreimagetaskspaginator,\n    describesubnetspaginator,\n    describetagspaginator,\n    describetrafficmirrorfilterspaginator,\n    describetrafficmirrorsessionspaginator,\n    describetrafficmirrortargetspaginator,\n    describetransitgatewayattachmentspaginator,\n    describetransitgatewayconnectpeerspaginator,\n    describetransitgatewayconnectspaginator,\n    describetransitgatewaymulticastdomainspaginator,\n    describetransitgatewaypeeringattachmentspaginator,\n    describetransitgatewaypolicytablespaginator,\n    describetransitgatewayroutetableannouncementspaginator,\n    describetransitgatewayroutetablespaginator,\n    describetransitgatewayvpcattachmentspaginator,\n    describetransitgatewayspaginator,\n    describetrunkinterfaceassociationspaginator,\n    describeverifiedaccessendpointspaginator,\n    describeverifiedaccessgroupspaginator,\n    describeverifiedaccessinstanceloggingconfigurationspaginator,\n    describeverifiedaccessinstancespaginator,\n    describeverifiedaccesstrustproviderspaginator,\n    describevolumestatuspaginator,\n    describevolumespaginator,\n    describevolumesmodificationspaginator,\n    describevpcclassiclinkdnssupportpaginator,\n    describevpcendpointconnectionnotificationspaginator,\n    describevpcendpointconnectionspaginator,\n    describevpcendpointserviceconfigurationspaginator,\n    describevpcendpointservicepermissionspaginator,\n    describevpcendpointservicespaginator,\n    describevpcendpointspaginator,\n    describevpcpeeringconnectionspaginator,\n    describevpcspaginator,\n    getassociatedipv6poolcidrspaginator,\n    getawsnetworkperformancedatapaginator,\n    getgroupsforcapacityreservationpaginator,\n    getinstancetypesfrominstancerequirementspaginator,\n    getipamaddresshistorypaginator,\n    getipamdiscoveredaccountspaginator,\n    getipamdiscoveredresourcecidrspaginator,\n    getipampoolallocationspaginator,\n    getipampoolcidrspaginator,\n    getipamresourcecidrspaginator,\n    getmanagedprefixlistassociationspaginator,\n    getmanagedprefixlistentriespaginator,\n    getnetworkinsightsaccessscopeanalysisfindingspaginator,\n    getsecuritygroupsforvpcpaginator,\n    getspotplacementscorespaginator,\n    gettransitgatewayattachmentpropagationspaginator,\n    gettransitgatewaymulticastdomainassociationspaginator,\n    gettransitgatewaypolicytableassociationspaginator,\n    gettransitgatewayprefixlistreferencespaginator,\n    gettransitgatewayroutetableassociationspaginator,\n    gettransitgatewayroutetablepropagationspaginator,\n    getvpnconnectiondevicetypespaginator,\n    listimagesinrecyclebinpaginator,\n    listsnapshotsinrecyclebinpaginator,\n    searchlocalgatewayroutespaginator,\n    searchtransitgatewaymulticastgroupspaginator,\n)\n\nclient: ec2client = session().client(\"ec2\")\n\n# explicit type annotations are optional here\n# types should be correctly discovered by mypy and ides\ndescribe_address_transfers_paginator: describeaddresstransferspaginator = client.get_paginator(\n    \"describe_address_transfers\"\n)\ndescribe_addresses_attribute_paginator: describeaddressesattributepaginator = client.get_paginator(\n    \"describe_addresses_attribute\"\n)\ndescribe_aws_network_performance_metric_subscriptions_paginator: (\n    describeawsnetworkperformancemetricsubscriptionspaginator\n) = client.get_paginator(\"describe_aws_network_performance_metric_subscriptions\")\ndescribe_byoip_cidrs_paginator: describebyoipcidrspaginator = client.get_paginator(\n    \"describe_byoip_cidrs\"\n)\ndescribe_capacity_block_offerings_paginator: describecapacityblockofferingspaginator = (\n    client.get_paginator(\"describe_capacity_block_offerings\")\n)\ndescribe_capacity_reservation_fleets_paginator: describecapacityreservationfleetspaginator = (\n    client.get_paginator(\"describe_capacity_reservation_fleets\")\n)\ndescribe_capacity_reservations_paginator: describecapacityreservationspaginator = (\n    client.get_paginator(\"describe_capacity_reservations\")\n)\ndescribe_carrier_gateways_paginator: describecarriergatewayspaginator = client.get_paginator(\n    \"describe_carrier_gateways\"\n)\ndescribe_classic_link_instances_paginator: describeclassiclinkinstancespaginator = (\n    client.get_paginator(\"describe_classic_link_instances\")\n)\ndescribe_client_vpn_authorization_rules_paginator: describeclientvpnauthorizationrulespaginator = (\n    client.get_paginator(\"describe_client_vpn_authorization_rules\")\n)\ndescribe_client_vpn_connections_paginator: describeclientvpnconnectionspaginator = (\n    client.get_paginator(\"describe_client_vpn_connections\")\n)\ndescribe_client_vpn_endpoints_paginator: describeclientvpnendpointspaginator = client.get_paginator(\n    \"describe_client_vpn_endpoints\"\n)\ndescribe_client_vpn_routes_paginator: describeclientvpnroutespaginator = client.get_paginator(\n    \"describe_client_vpn_routes\"\n)\ndescribe_client_vpn_target_networks_paginator: describeclientvpntargetnetworkspaginator = (\n    client.get_paginator(\"describe_client_vpn_target_networks\")\n)\ndescribe_coip_pools_paginator: describecoippoolspaginator = client.get_paginator(\n    \"describe_coip_pools\"\n)\ndescribe_dhcp_options_paginator: describedhcpoptionspaginator = client.get_paginator(\n    \"describe_dhcp_options\"\n)\ndescribe_egress_only_internet_gateways_paginator: describeegressonlyinternetgatewayspaginator = (\n    client.get_paginator(\"describe_egress_only_internet_gateways\")\n)\ndescribe_export_image_tasks_paginator: describeexportimagetaskspaginator = client.get_paginator(\n    \"describe_export_image_tasks\"\n)\ndescribe_fast_launch_images_paginator: describefastlaunchimagespaginator = client.get_paginator(\n    \"describe_fast_launch_images\"\n)\ndescribe_fast_snapshot_restores_paginator: describefastsnapshotrestorespaginator = (\n    client.get_paginator(\"describe_fast_snapshot_restores\")\n)\ndescribe_fleets_paginator: describefleetspaginator = client.get_paginator(\"describe_fleets\")\ndescribe_flow_logs_paginator: describeflowlogspaginator = client.get_paginator(\"describe_flow_logs\")\ndescribe_fpga_images_paginator: describefpgaimagespaginator = client.get_paginator(\n    \"describe_fpga_images\"\n)\ndescribe_host_reservation_offerings_paginator: describehostreservationofferingspaginator = (\n    client.get_paginator(\"describe_host_reservation_offerings\")\n)\ndescribe_host_reservations_paginator: describehostreservationspaginator = client.get_paginator(\n    \"describe_host_reservations\"\n)\ndescribe_hosts_paginator: describehostspaginator = client.get_paginator(\"describe_hosts\")\ndescribe_iam_instance_profile_associations_paginator: (\n    describeiaminstanceprofileassociationspaginator\n) = client.get_paginator(\"describe_iam_instance_profile_associations\")\ndescribe_images_paginator: describeimagespaginator = client.get_paginator(\"describe_images\")\ndescribe_import_image_tasks_paginator: describeimportimagetaskspaginator = client.get_paginator(\n    \"describe_import_image_tasks\"\n)\ndescribe_import_snapshot_tasks_paginator: describeimportsnapshottaskspaginator = (\n    client.get_paginator(\"describe_import_snapshot_tasks\")\n)\ndescribe_instance_connect_endpoints_paginator: describeinstanceconnectendpointspaginator = (\n    client.get_paginator(\"describe_instance_connect_endpoints\")\n)\ndescribe_instance_credit_specifications_paginator: describeinstancecreditspecificationspaginator = (\n    client.get_paginator(\"describe_instance_credit_specifications\")\n)\ndescribe_instance_event_windows_paginator: describeinstanceeventwindowspaginator = (\n    client.get_paginator(\"describe_instance_event_windows\")\n)\ndescribe_instance_status_paginator: describeinstancestatuspaginator = client.get_paginator(\n    \"describe_instance_status\"\n)\ndescribe_instance_topology_paginator: describeinstancetopologypaginator = client.get_paginator(\n    \"describe_instance_topology\"\n)\ndescribe_instance_type_offerings_paginator: describeinstancetypeofferingspaginator = (\n    client.get_paginator(\"describe_instance_type_offerings\")\n)\ndescribe_instance_types_paginator: describeinstancetypespaginator = client.get_paginator(\n    \"describe_instance_types\"\n)\ndescribe_instances_paginator: describeinstancespaginator = client.get_paginator(\n    \"describe_instances\"\n)\ndescribe_internet_gateways_paginator: describeinternetgatewayspaginator = client.get_paginator(\n    \"describe_internet_gateways\"\n)\ndescribe_ipam_pools_paginator: describeipampoolspaginator = client.get_paginator(\n    \"describe_ipam_pools\"\n)\ndescribe_ipam_resource_discoveries_paginator: describeipamresourcediscoveriespaginator = (\n    client.get_paginator(\"describe_ipam_resource_discoveries\")\n)\ndescribe_ipam_resource_discovery_associations_paginator: (\n    describeipamresourcediscoveryassociationspaginator\n) = client.get_paginator(\"describe_ipam_resource_discovery_associations\")\ndescribe_ipam_scopes_paginator: describeipamscopespaginator = client.get_paginator(\n    \"describe_ipam_scopes\"\n)\ndescribe_ipams_paginator: describeipamspaginator = client.get_paginator(\"describe_ipams\")\ndescribe_ipv6_pools_paginator: describeipv6poolspaginator = client.get_paginator(\n    \"describe_ipv6_pools\"\n)\ndescribe_launch_template_versions_paginator: describelaunchtemplateversionspaginator = (\n    client.get_paginator(\"describe_launch_template_versions\")\n)\ndescribe_launch_templates_paginator: describelaunchtemplatespaginator = client.get_paginator(\n    \"describe_launch_templates\"\n)\ndescribe_local_gateway_route_table_virtual_interface_group_associations_paginator: (\n    describelocalgatewayroutetablevirtualinterfacegroupassociationspaginator\n) = client.get_paginator(\"describe_local_gateway_route_table_virtual_interface_group_associations\")\ndescribe_local_gateway_route_table_vpc_associations_paginator: (\n    describelocalgatewayroutetablevpcassociationspaginator\n) = client.get_paginator(\"describe_local_gateway_route_table_vpc_associations\")\ndescribe_local_gateway_route_tables_paginator: describelocalgatewayroutetablespaginator = (\n    client.get_paginator(\"describe_local_gateway_route_tables\")\n)\ndescribe_local_gateway_virtual_interface_groups_paginator: (\n    describelocalgatewayvirtualinterfacegroupspaginator\n) = client.get_paginator(\"describe_local_gateway_virtual_interface_groups\")\ndescribe_local_gateway_virtual_interfaces_paginator: (\n    describelocalgatewayvirtualinterfacespaginator\n) = client.get_paginator(\"describe_local_gateway_virtual_interfaces\")\ndescribe_local_gateways_paginator: describelocalgatewayspaginator = client.get_paginator(\n    \"describe_local_gateways\"\n)\ndescribe_managed_prefix_lists_paginator: describemanagedprefixlistspaginator = client.get_paginator(\n    \"describe_managed_prefix_lists\"\n)\ndescribe_moving_addresses_paginator: describemovingaddressespaginator = client.get_paginator(\n    \"describe_moving_addresses\"\n)\ndescribe_nat_gateways_paginator: describenatgatewayspaginator = client.get_paginator(\n    \"describe_nat_gateways\"\n)\ndescribe_network_acls_paginator: describenetworkaclspaginator = client.get_paginator(\n    \"describe_network_acls\"\n)\ndescribe_network_insights_access_scope_analyses_paginator: (\n    describenetworkinsightsaccessscopeanalysespaginator\n) = client.get_paginator(\"describe_network_insights_access_scope_analyses\")\ndescribe_network_insights_access_scopes_paginator: describenetworkinsightsaccessscopespaginator = (\n    client.get_paginator(\"describe_network_insights_access_scopes\")\n)\ndescribe_network_insights_analyses_paginator: describenetworkinsightsanalysespaginator = (\n    client.get_paginator(\"describe_network_insights_analyses\")\n)\ndescribe_network_insights_paths_paginator: describenetworkinsightspathspaginator = (\n    client.get_paginator(\"describe_network_insights_paths\")\n)\ndescribe_network_interface_permissions_paginator: describenetworkinterfacepermissionspaginator = (\n    client.get_paginator(\"describe_network_interface_permissions\")\n)\ndescribe_network_interfaces_paginator: describenetworkinterfacespaginator = client.get_paginator(\n    \"describe_network_interfaces\"\n)\ndescribe_prefix_lists_paginator: describeprefixlistspaginator = client.get_paginator(\n    \"describe_prefix_lists\"\n)\ndescribe_principal_id_format_paginator: describeprincipalidformatpaginator = client.get_paginator(\n    \"describe_principal_id_format\"\n)\ndescribe_public_ipv4_pools_paginator: describepublicipv4poolspaginator = client.get_paginator(\n    \"describe_public_ipv4_pools\"\n)\ndescribe_replace_root_volume_tasks_paginator: describereplacerootvolumetaskspaginator = (\n    client.get_paginator(\"describe_replace_root_volume_tasks\")\n)\ndescribe_reserved_instances_modifications_paginator: (\n    describereservedinstancesmodificationspaginator\n) = client.get_paginator(\"describe_reserved_instances_modifications\")\ndescribe_reserved_instances_offerings_paginator: describereservedinstancesofferingspaginator = (\n    client.get_paginator(\"describe_reserved_instances_offerings\")\n)\ndescribe_route_tables_paginator: describeroutetablespaginator = client.get_paginator(\n    \"describe_route_tables\"\n)\ndescribe_scheduled_instance_availability_paginator: (\n    describescheduledinstanceavailabilitypaginator\n) = client.get_paginator(\"describe_scheduled_instance_availability\")\ndescribe_scheduled_instances_paginator: describescheduledinstancespaginator = client.get_paginator(\n    \"describe_scheduled_instances\"\n)\ndescribe_security_group_rules_paginator: describesecuritygrouprulespaginator = client.get_paginator(\n    \"describe_security_group_rules\"\n)\ndescribe_security_groups_paginator: describesecuritygroupspaginator = client.get_paginator(\n    \"describe_security_groups\"\n)\ndescribe_snapshot_tier_status_paginator: describesnapshottierstatuspaginator = client.get_paginator(\n    \"describe_snapshot_tier_status\"\n)\ndescribe_snapshots_paginator: describesnapshotspaginator = client.get_paginator(\n    \"describe_snapshots\"\n)\ndescribe_spot_fleet_instances_paginator: describespotfleetinstancespaginator = client.get_paginator(\n    \"describe_spot_fleet_instances\"\n)\ndescribe_spot_fleet_requests_paginator: describespotfleetrequestspaginator = client.get_paginator(\n    \"describe_spot_fleet_requests\"\n)\ndescribe_spot_instance_requests_paginator: describespotinstancerequestspaginator = (\n    client.get_paginator(\"describe_spot_instance_requests\")\n)\ndescribe_spot_price_history_paginator: describespotpricehistorypaginator = client.get_paginator(\n    \"describe_spot_price_history\"\n)\ndescribe_stale_security_groups_paginator: describestalesecuritygroupspaginator = (\n    client.get_paginator(\"describe_stale_security_groups\")\n)\ndescribe_store_image_tasks_paginator: describestoreimagetaskspaginator = client.get_paginator(\n    \"describe_store_image_tasks\"\n)\ndescribe_subnets_paginator: describesubnetspaginator = client.get_paginator(\"describe_subnets\")\ndescribe_tags_paginator: describetagspaginator = client.get_paginator(\"describe_tags\")\ndescribe_traffic_mirror_filters_paginator: describetrafficmirrorfilterspaginator = (\n    client.get_paginator(\"describe_traffic_mirror_filters\")\n)\ndescribe_traffic_mirror_sessions_paginator: describetrafficmirrorsessionspaginator = (\n    client.get_paginator(\"describe_traffic_mirror_sessions\")\n)\ndescribe_traffic_mirror_targets_paginator: describetrafficmirrortargetspaginator = (\n    client.get_paginator(\"describe_traffic_mirror_targets\")\n)\ndescribe_transit_gateway_attachments_paginator: describetransitgatewayattachmentspaginator = (\n    client.get_paginator(\"describe_transit_gateway_attachments\")\n)\ndescribe_transit_gateway_connect_peers_paginator: describetransitgatewayconnectpeerspaginator = (\n    client.get_paginator(\"describe_transit_gateway_connect_peers\")\n)\ndescribe_transit_gateway_connects_paginator: describetransitgatewayconnectspaginator = (\n    client.get_paginator(\"describe_transit_gateway_connects\")\n)\ndescribe_transit_gateway_multicast_domains_paginator: (\n    describetransitgatewaymulticastdomainspaginator\n) = client.get_paginator(\"describe_transit_gateway_multicast_domains\")\ndescribe_transit_gateway_peering_attachments_paginator: (\n    describetransitgatewaypeeringattachmentspaginator\n) = client.get_paginator(\"describe_transit_gateway_peering_attachments\")\ndescribe_transit_gateway_policy_tables_paginator: describetransitgatewaypolicytablespaginator = (\n    client.get_paginator(\"describe_transit_gateway_policy_tables\")\n)\ndescribe_transit_gateway_route_table_announcements_paginator: (\n    describetransitgatewayroutetableannouncementspaginator\n) = client.get_paginator(\"describe_transit_gateway_route_table_announcements\")\ndescribe_transit_gateway_route_tables_paginator: describetransitgatewayroutetablespaginator = (\n    client.get_paginator(\"describe_transit_gateway_route_tables\")\n)\ndescribe_transit_gateway_vpc_attachments_paginator: (\n    describetransitgatewayvpcattachmentspaginator\n) = client.get_paginator(\"describe_transit_gateway_vpc_attachments\")\ndescribe_transit_gateways_paginator: describetransitgatewayspaginator = client.get_paginator(\n    \"describe_transit_gateways\"\n)\ndescribe_trunk_interface_associations_paginator: describetrunkinterfaceassociationspaginator = (\n    client.get_paginator(\"describe_trunk_interface_associations\")\n)\ndescribe_verified_access_endpoints_paginator: describeverifiedaccessendpointspaginator = (\n    client.get_paginator(\"describe_verified_access_endpoints\")\n)\ndescribe_verified_access_groups_paginator: describeverifiedaccessgroupspaginator = (\n    client.get_paginator(\"describe_verified_access_groups\")\n)\ndescribe_verified_access_instance_logging_configurations_paginator: (\n    describeverifiedaccessinstanceloggingconfigurationspaginator\n) = client.get_paginator(\"describe_verified_access_instance_logging_configurations\")\ndescribe_verified_access_instances_paginator: describeverifiedaccessinstancespaginator = (\n    client.get_paginator(\"describe_verified_access_instances\")\n)\ndescribe_verified_access_trust_providers_paginator: (\n    describeverifiedaccesstrustproviderspaginator\n) = client.get_paginator(\"describe_verified_access_trust_providers\")\ndescribe_volume_status_paginator: describevolumestatuspaginator = client.get_paginator(\n    \"describe_volume_status\"\n)\ndescribe_volumes_paginator: describevolumespaginator = client.get_paginator(\"describe_volumes\")\ndescribe_volumes_modifications_paginator: describevolumesmodificationspaginator = (\n    client.get_paginator(\"describe_volumes_modifications\")\n)\ndescribe_vpc_classic_link_dns_support_paginator: describevpcclassiclinkdnssupportpaginator = (\n    client.get_paginator(\"describe_vpc_classic_link_dns_support\")\n)\ndescribe_vpc_endpoint_connection_notifications_paginator: (\n    describevpcendpointconnectionnotificationspaginator\n) = client.get_paginator(\"describe_vpc_endpoint_connection_notifications\")\ndescribe_vpc_endpoint_connections_paginator: describevpcendpointconnectionspaginator = (\n    client.get_paginator(\"describe_vpc_endpoint_connections\")\n)\ndescribe_vpc_endpoint_service_configurations_paginator: (\n    describevpcendpointserviceconfigurationspaginator\n) = client.get_paginator(\"describe_vpc_endpoint_service_configurations\")\ndescribe_vpc_endpoint_service_permissions_paginator: (\n    describevpcendpointservicepermissionspaginator\n) = client.get_paginator(\"describe_vpc_endpoint_service_permissions\")\ndescribe_vpc_endpoint_services_paginator: describevpcendpointservicespaginator = (\n    client.get_paginator(\"describe_vpc_endpoint_services\")\n)\ndescribe_vpc_endpoints_paginator: describevpcendpointspaginator = client.get_paginator(\n    \"describe_vpc_endpoints\"\n)\ndescribe_vpc_peering_connections_paginator: describevpcpeeringconnectionspaginator = (\n    client.get_paginator(\"describe_vpc_peering_connections\")\n)\ndescribe_vpcs_paginator: describevpcspaginator = client.get_paginator(\"describe_vpcs\")\nget_associated_ipv6_pool_cidrs_paginator: getassociatedipv6poolcidrspaginator = (\n    client.get_paginator(\"get_associated_ipv6_pool_cidrs\")\n)\nget_aws_network_performance_data_paginator: getawsnetworkperformancedatapaginator = (\n    client.get_paginator(\"get_aws_network_performance_data\")\n)\nget_groups_for_capacity_reservation_paginator: getgroupsforcapacityreservationpaginator = (\n    client.get_paginator(\"get_groups_for_capacity_reservation\")\n)\nget_instance_types_from_instance_requirements_paginator: (\n    getinstancetypesfrominstancerequirementspaginator\n) = client.get_paginator(\"get_instance_types_from_instance_requirements\")\nget_ipam_address_history_paginator: getipamaddresshistorypaginator = client.get_paginator(\n    \"get_ipam_address_history\"\n)\nget_ipam_discovered_accounts_paginator: getipamdiscoveredaccountspaginator = client.get_paginator(\n    \"get_ipam_discovered_accounts\"\n)\nget_ipam_discovered_resource_cidrs_paginator: getipamdiscoveredresourcecidrspaginator = (\n    client.get_paginator(\"get_ipam_discovered_resource_cidrs\")\n)\nget_ipam_pool_allocations_paginator: getipampoolallocationspaginator = client.get_paginator(\n    \"get_ipam_pool_allocations\"\n)\nget_ipam_pool_cidrs_paginator: getipampoolcidrspaginator = client.get_paginator(\n    \"get_ipam_pool_cidrs\"\n)\nget_ipam_resource_cidrs_paginator: getipamresourcecidrspaginator = client.get_paginator(\n    \"get_ipam_resource_cidrs\"\n)\nget_managed_prefix_list_associations_paginator: getmanagedprefixlistassociationspaginator = (\n    client.get_paginator(\"get_managed_prefix_list_associations\")\n)\nget_managed_prefix_list_entries_paginator: getmanagedprefixlistentriespaginator = (\n    client.get_paginator(\"get_managed_prefix_list_entries\")\n)\nget_network_insights_access_scope_analysis_findings_paginator: (\n    getnetworkinsightsaccessscopeanalysisfindingspaginator\n) = client.get_paginator(\"get_network_insights_access_scope_analysis_findings\")\nget_security_groups_for_vpc_paginator: getsecuritygroupsforvpcpaginator = client.get_paginator(\n    \"get_security_groups_for_vpc\"\n)\nget_spot_placement_scores_paginator: getspotplacementscorespaginator = client.get_paginator(\n    \"get_spot_placement_scores\"\n)\nget_transit_gateway_attachment_propagations_paginator: (\n    gettransitgatewayattachmentpropagationspaginator\n) = client.get_paginator(\"get_transit_gateway_attachment_propagations\")\nget_transit_gateway_multicast_domain_associations_paginator: (\n    gettransitgatewaymulticastdomainassociationspaginator\n) = client.get_paginator(\"get_transit_gateway_multicast_domain_associations\")\nget_transit_gateway_policy_table_associations_paginator: (\n    gettransitgatewaypolicytableassociationspaginator\n) = client.get_paginator(\"get_transit_gateway_policy_table_associations\")\nget_transit_gateway_prefix_list_references_paginator: (\n    gettransitgatewayprefixlistreferencespaginator\n) = client.get_paginator(\"get_transit_gateway_prefix_list_references\")\nget_transit_gateway_route_table_associations_paginator: (\n    gettransitgatewayroutetableassociationspaginator\n) = client.get_paginator(\"get_transit_gateway_route_table_associations\")\nget_transit_gateway_route_table_propagations_paginator: (\n    gettransitgatewayroutetablepropagationspaginator\n) = client.get_paginator(\"get_transit_gateway_route_table_propagations\")\nget_vpn_connection_device_types_paginator: getvpnconnectiondevicetypespaginator = (\n    client.get_paginator(\"get_vpn_connection_device_types\")\n)\nlist_images_in_recycle_bin_paginator: listimagesinrecyclebinpaginator = client.get_paginator(\n    \"list_images_in_recycle_bin\"\n)\nlist_snapshots_in_recycle_bin_paginator: listsnapshotsinrecyclebinpaginator = client.get_paginator(\n    \"list_snapshots_in_recycle_bin\"\n)\nsearch_local_gateway_routes_paginator: searchlocalgatewayroutespaginator = client.get_paginator(\n    \"search_local_gateway_routes\"\n)\nsearch_transit_gateway_multicast_groups_paginator: searchtransitgatewaymulticastgroupspaginator = (\n    client.get_paginator(\"search_transit_gateway_multicast_groups\")\n)\n```\n\n<a id=\"waiters-annotations\"></a>\n\n### waiters annotations\n\n`mypy_boto3_ec2.waiter` module contains type annotations for all waiters.\n\n```python\nfrom boto3.session import session\n\nfrom mypy_boto3_ec2 import ec2client\nfrom mypy_boto3_ec2.waiter import (\n    bundletaskcompletewaiter,\n    conversiontaskcancelledwaiter,\n    conversiontaskcompletedwaiter,\n    conversiontaskdeletedwaiter,\n    customergatewayavailablewaiter,\n    exporttaskcancelledwaiter,\n    exporttaskcompletedwaiter,\n    imageavailablewaiter,\n    imageexistswaiter,\n    instanceexistswaiter,\n    instancerunningwaiter,\n    instancestatusokwaiter,\n    instancestoppedwaiter,\n    instanceterminatedwaiter,\n    internetgatewayexistswaiter,\n    keypairexistswaiter,\n    natgatewayavailablewaiter,\n    natgatewaydeletedwaiter,\n    networkinterfaceavailablewaiter,\n    passworddataavailablewaiter,\n    securitygroupexistswaiter,\n    snapshotcompletedwaiter,\n    snapshotimportedwaiter,\n    spotinstancerequestfulfilledwaiter,\n    storeimagetaskcompletewaiter,\n    subnetavailablewaiter,\n    systemstatusokwaiter,\n    volumeavailablewaiter,\n    volumedeletedwaiter,\n    volumeinusewaiter,\n    vpcavailablewaiter,\n    vpcexistswaiter,\n    vpcpeeringconnectiondeletedwaiter,\n    vpcpeeringconnectionexistswaiter,\n    vpnconnectionavailablewaiter,\n    vpnconnectiondeletedwaiter,\n)\n\nclient: ec2client = session().client(\"ec2\")\n\n# explicit type annotations are optional here\n# types should be correctly discovered by mypy and ides\nbundle_task_complete_waiter: bundletaskcompletewaiter = client.get_waiter(\"bundle_task_complete\")\nconversion_task_cancelled_waiter: conversiontaskcancelledwaiter = client.get_waiter(\n    \"conversion_task_cancelled\"\n)\nconversion_task_completed_waiter: conversiontaskcompletedwaiter = client.get_waiter(\n    \"conversion_task_completed\"\n)\nconversion_task_deleted_waiter: conversiontaskdeletedwaiter = client.get_waiter(\n    \"conversion_task_deleted\"\n)\ncustomer_gateway_available_waiter: customergatewayavailablewaiter = client.get_waiter(\n    \"customer_gateway_available\"\n)\nexport_task_cancelled_waiter: exporttaskcancelledwaiter = client.get_waiter(\"export_task_cancelled\")\nexport_task_completed_waiter: exporttaskcompletedwaiter = client.get_waiter(\"export_task_completed\")\nimage_available_waiter: imageavailablewaiter = client.get_waiter(\"image_available\")\nimage_exists_waiter: imageexistswaiter = client.get_waiter(\"image_exists\")\ninstance_exists_waiter: instanceexistswaiter = client.get_waiter(\"instance_exists\")\ninstance_running_waiter: instancerunningwaiter = client.get_waiter(\"instance_running\")\ninstance_status_ok_waiter: instancestatusokwaiter = client.get_waiter(\"instance_status_ok\")\ninstance_stopped_waiter: instancestoppedwaiter = client.get_waiter(\"instance_stopped\")\ninstance_terminated_waiter: instanceterminatedwaiter = client.get_waiter(\"instance_terminated\")\ninternet_gateway_exists_waiter: internetgatewayexistswaiter = client.get_waiter(\n    \"internet_gateway_exists\"\n)\nkey_pair_exists_waiter: keypairexistswaiter = client.get_waiter(\"key_pair_exists\")\nnat_gateway_available_waiter: natgatewayavailablewaiter = client.get_waiter(\"nat_gateway_available\")\nnat_gateway_deleted_waiter: natgatewaydeletedwaiter = client.get_waiter(\"nat_gateway_deleted\")\nnetwork_interface_available_waiter: networkinterfaceavailablewaiter = client.get_waiter(\n    \"network_interface_available\"\n)\npassword_data_available_waiter: passworddataavailablewaiter = client.get_waiter(\n    \"password_data_available\"\n)\nsecurity_group_exists_waiter: securitygroupexistswaiter = client.get_waiter(\"security_group_exists\")\nsnapshot_completed_waiter: snapshotcompletedwaiter = client.get_waiter(\"snapshot_completed\")\nsnapshot_imported_waiter: snapshotimportedwaiter = client.get_waiter(\"snapshot_imported\")\nspot_instance_request_fulfilled_waiter: spotinstancerequestfulfilledwaiter = client.get_waiter(\n    \"spot_instance_request_fulfilled\"\n)\nstore_image_task_complete_waiter: storeimagetaskcompletewaiter = client.get_waiter(\n    \"store_image_task_complete\"\n)\nsubnet_available_waiter: subnetavailablewaiter = client.get_waiter(\"subnet_available\")\nsystem_status_ok_waiter: systemstatusokwaiter = client.get_waiter(\"system_status_ok\")\nvolume_available_waiter: volumeavailablewaiter = client.get_waiter(\"volume_available\")\nvolume_deleted_waiter: volumedeletedwaiter = client.get_waiter(\"volume_deleted\")\nvolume_in_use_waiter: volumeinusewaiter = client.get_waiter(\"volume_in_use\")\nvpc_available_waiter: vpcavailablewaiter = client.get_waiter(\"vpc_available\")\nvpc_exists_waiter: vpcexistswaiter = client.get_waiter(\"vpc_exists\")\nvpc_peering_connection_deleted_waiter: vpcpeeringconnectiondeletedwaiter = client.get_waiter(\n    \"vpc_peering_connection_deleted\"\n)\nvpc_peering_connection_exists_waiter: vpcpeeringconnectionexistswaiter = client.get_waiter(\n    \"vpc_peering_connection_exists\"\n)\nvpn_connection_available_waiter: vpnconnectionavailablewaiter = client.get_waiter(\n    \"vpn_connection_available\"\n)\nvpn_connection_deleted_waiter: vpnconnectiondeletedwaiter = client.get_waiter(\n    \"vpn_connection_deleted\"\n)\n```\n\n<a id=\"service-resource-annotations\"></a>\n\n### service resource annotations\n\n`ec2serviceresource` provides annotations for `boto3.resource(\"ec2\")`.\n\n```python\nfrom boto3.session import session\n\nfrom mypy_boto3_ec2 import ec2serviceresource\n\nresource: ec2serviceresource = session().resource(\"ec2\")\n\n# now resource usage is checked by mypy and ide should provide code completion\n```\n\n<a id=\"other-resources-annotations\"></a>\n\n### other resources annotations\n\n`mypy_boto3_ec2.service_resource` module contains type annotations for all\nresources.\n\n```python\nfrom boto3.session import session\n\nfrom mypy_boto3_ec2 import ec2serviceresource\nfrom mypy_boto3_ec2.service_resource import (\n    classicaddress,\n    dhcpoptions,\n    image,\n    instance,\n    internetgateway,\n    keypair,\n    keypairinfo,\n    networkacl,\n    networkinterface,\n    networkinterfaceassociation,\n    placementgroup,\n    route,\n    routetable,\n    routetableassociation,\n    securitygroup,\n    snapshot,\n    subnet,\n    tag,\n    volume,\n    vpc,\n    vpcpeeringconnection,\n    vpcaddress,\n)\n\nresource: ec2serviceresource = session().resource(\"ec2\")\n\n# explicit type annotations are optional here\n# type should be correctly discovered by mypy and ides\nmy_classic_address: classicaddress = resource.classicaddress(...)\nmy_dhcp_options: dhcpoptions = resource.dhcpoptions(...)\nmy_image: image = resource.image(...)\nmy_instance: instance = resource.instance(...)\nmy_internet_gateway: internetgateway = resource.internetgateway(...)\nmy_key_pair: keypair = resource.keypair(...)\nmy_key_pair_info: keypairinfo = resource.keypairinfo(...)\nmy_network_acl: networkacl = resource.networkacl(...)\nmy_network_interface: networkinterface = resource.networkinterface(...)\nmy_network_interface_association: networkinterfaceassociation = (\n    resource.networkinterfaceassociation(...)\n)\nmy_placement_group: placementgroup = resource.placementgroup(...)\nmy_route: route = resource.route(...)\nmy_route_table: routetable = resource.routetable(...)\nmy_route_table_association: routetableassociation = resource.routetableassociation(...)\nmy_security_group: securitygroup = resource.securitygroup(...)\nmy_snapshot: snapshot = resource.snapshot(...)\nmy_subnet: subnet = resource.subnet(...)\nmy_tag: tag = resource.tag(...)\nmy_volume: volume = resource.volume(...)\nmy_vpc: vpc = resource.vpc(...)\nmy_vpc_peering_connection: vpcpeeringconnection = resource.vpcpeeringconnection(...)\nmy_vpc_address: vpcaddress = resource.vpcaddress(...)\n```\n\n<a id=\"collections-annotations\"></a>\n\n### collections annotations\n\n`mypy_boto3_ec2.service_resource` module contains type annotations for all\n`ec2serviceresource` collections.\n\n```python\nfrom boto3.session import session\n\nfrom mypy_boto3_ec2 import ec2serviceresource\nfrom mypy_boto3_ec2.service_resource import (\n    serviceresourceclassicaddressescollection,\n    serviceresourcedhcpoptionssetscollection,\n    serviceresourceimagescollection,\n    serviceresourceinstancescollection,\n    serviceresourceinternetgatewayscollection,\n    serviceresourcekeypairscollection,\n    serviceresourcenetworkaclscollection,\n    serviceresourcenetworkinterfacescollection,\n    serviceresourceplacementgroupscollection,\n    serviceresourceroutetablescollection,\n    serviceresourcesecuritygroupscollection,\n    serviceresourcesnapshotscollection,\n    serviceresourcesubnetscollection,\n    serviceresourcevolumescollection,\n    serviceresourcevpcaddressescollection,\n    serviceresourcevpcpeeringconnectionscollection,\n    serviceresourcevpcscollection,\n)\n\nresource: ec2serviceresource = session().resource(\"ec2\")\n\n# explicit type annotations are optional here\n# type should be correctly discovered by mypy and ides\nclassic_addresses: ec2_resources.serviceresourceclassicaddressescollection = (\n    resource.classic_addresses\n)\ndhcp_options_sets: ec2_resources.serviceresourcedhcpoptionssetscollection = (\n    resource.dhcp_options_sets\n)\nimages: ec2_resources.serviceresourceimagescollection = resource.images\ninstances: ec2_resources.serviceresourceinstancescollection = resource.instances\ninternet_gateways: ec2_resources.serviceresourceinternetgatewayscollection = (\n    resource.internet_gateways\n)\nkey_pairs: ec2_resources.serviceresourcekeypairscollection = resource.key_pairs\nnetwork_acls: ec2_resources.serviceresourcenetworkaclscollection = resource.network_acls\nnetwork_interfaces: ec2_resources.serviceresourcenetworkinterfacescollection = (\n    resource.network_interfaces\n)\nplacement_groups: ec2_resources.serviceresourceplacementgroupscollection = resource.placement_groups\nroute_tables: ec2_resources.serviceresourceroutetablescollection = resource.route_tables\nsecurity_groups: ec2_resources.serviceresourcesecuritygroupscollection = resource.security_groups\nsnapshots: ec2_resources.serviceresourcesnapshotscollection = resource.snapshots\nsubnets: ec2_resources.serviceresourcesubnetscollection = resource.subnets\nvolumes: ec2_resources.serviceresourcevolumescollection = resource.volumes\nvpc_addresses: ec2_resources.serviceresourcevpcaddressescollection = resource.vpc_addresses\nvpc_peering_connections: ec2_resources.serviceresourcevpcpeeringconnectionscollection = (\n    resource.vpc_peering_connections\n)\nvpcs: ec2_resources.serviceresourcevpcscollection = resource.vpcs\n```\n\n<a id=\"literals\"></a>\n\n### literals\n\n`mypy_boto3_ec2.literals` module contains literals extracted from shapes that\ncan be used in user code for type checking.\n\nfull list of `ec2` literals can be found in\n[docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_ec2/literals/).\n\n```python\nfrom mypy_boto3_ec2.literals import acceleratormanufacturertype\n\n\ndef check_value(value: acceleratormanufacturertype) -> bool: ...\n```\n\n<a id=\"type-definitions\"></a>\n\n### type definitions\n\n`mypy_boto3_ec2.type_defs` module contains structures and shapes assembled to\ntyped dictionaries and unions for additional type checking.\n\nfull list of `ec2` typedefs can be found in\n[docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_ec2/type_defs/).\n\n```python\nfrom mypy_boto3_ec2.type_defs import acceleratorcountrequesttypedef\n\n\ndef get_value() -> acceleratorcountrequesttypedef:\n    return {...}\n```\n\n<a id=\"how-it-works\"></a>\n\n## how it works\n\nfully automated\n[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully\ngenerates type annotations for each service, patiently waiting for `boto3`\nupdates. it delivers drop-in type annotations for you and makes sure that:\n\n- all available `boto3` services are covered.\n- each public class and method of every `boto3` service gets valid type\n  annotations extracted from `botocore` schemas.\n- type annotations include up-to-date documentation.\n- link to documentation is provided for every method.\n- code is processed by [black](https://github.com/psf/black) and\n  [isort](https://github.com/pycqa/isort) for readability.\n\n<a id=\"what's-new\"></a>\n\n## what's new\n\n<a id=\"implemented-features\"></a>\n\n### implemented features\n\n- fully type annotated `boto3`, `botocore`, `aiobotocore` and `aioboto3`\n  libraries\n- `mypy`, `pyright`, `vscode`, `pycharm`, `sublime text` and `emacs`\n  compatibility\n- `client`, `serviceresource`, `resource`, `waiter` `paginator` type\n  annotations for each service\n- generated `typedefs` for each service\n- generated `literals` for each service\n- auto discovery of types for `boto3.client` and `boto3.resource` calls\n- auto discovery of types for `session.client` and `session.resource` calls\n- auto discovery of types for `client.get_waiter` and `client.get_paginator`\n  calls\n- auto discovery of types for `serviceresource` and `resource` collections\n- auto discovery of types for `aiobotocore.session.create_client` calls\n\n<a id=\"latest-changes\"></a>\n\n### latest changes\n\nbuilder changelog can be found in\n[releases](https://github.com/youtype/mypy_boto3_builder/releases).\n\n<a id=\"versioning\"></a>\n\n## versioning\n\n`mypy-boto3-ec2` version is the same as related `boto3` version and follows\n[pep 440](https://www.python.org/dev/peps/pep-0440/) format.\n\n<a id=\"thank-you\"></a>\n\n## thank you\n\n- [allie fitter](https://github.com/alliefitter) for\n  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),\n  this package is based on top of his work\n- [black](https://github.com/psf/black) developers for an awesome formatting\n  tool\n- [timothy edmund crosley](https://github.com/timothycrosley) for\n  [isort](https://github.com/pycqa/isort) and how flexible it is\n- [mypy](https://github.com/python/mypy) developers for doing all dirty work\n  for us\n- [pyright](https://github.com/microsoft/pyright) team for the new era of typed\n  python\n\n<a id=\"documentation\"></a>\n\n## documentation\n\nall services type annotations can be found in\n[boto3 docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_ec2/)\n\n<a id=\"support-and-contributing\"></a>\n\n## support and contributing\n\nthis package is auto-generated. please reports any bugs or request new features\nin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)\nrepository.\n",
  "docs_url": null,
  "keywords": "boto3 ec2 type-annotations botocore mypy typeshed autocomplete",
  "license": "mit license",
  "name": "mypy-boto3-ec2",
  "package_url": "https://pypi.org/project/mypy-boto3-ec2/",
  "project_url": "https://pypi.org/project/mypy-boto3-ec2/",
  "project_urls": {
    "Documentation": "https://youtype.github.io/boto3_stubs_docs/mypy_boto3_ec2/",
    "Homepage": "https://github.com/youtype/mypy_boto3_builder",
    "Source": "https://github.com/youtype/mypy_boto3_builder",
    "Tracker": "https://github.com/youtype/mypy_boto3_builder/issues"
  },
  "release_url": "https://pypi.org/project/mypy-boto3-ec2/1.34.4/",
  "requires_dist": [
    "typing-extensions >=4.1.0 ; python_version < \"3.12\""
  ],
  "requires_python": ">=3.7",
  "summary": "type annotations for boto3.ec2 1.34.4 service generated with mypy-boto3-builder 7.22.0",
  "version": "1.34.4",
  "releases": [],
  "developers": [
    "vlad.emelianov.nz@gmail.com",
    "vlad_emelianov"
  ],
  "kwds": "mypy_boto3_ec2 mypy_boto3_builder boto3_stubs_docs boto3typed boto3",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_mypy_boto3_ec2",
  "homepage": "https://github.com/youtype/mypy_boto3_builder",
  "release_count": 737,
  "dependency_ids": [
    "pypi_typing_extensions"
  ],
  "documentation_summary": "The text provides information about the `mypy-boto3-ec2` package available on PyPI, which offers type annotations for the `boto3.EC2` service, facilitating compatibility with various IDEs and tools like VSCode, PyCharm, Emacs, Sublime Text, mypy, and pyright. The package, generated by `mypy-boto3-builder` version 7.23.2, aims to enhance code quality by enabling type checking and auto-completion, making it easier to find and fix potential bugs. It requires Python version 3.8 or higher and is licensed under the MIT License. The package supports a wide range of Python versions, from 3.8 to 3.13, and is maintained by Vlad Emelianov. It includes detailed instructions for installation, usage across different IDEs, and features like client annotations, paginators, waiters, service resource annotations, and more, to improve the development experience with AWS Boto3 for EC2 services.",
  "embedding": [
    -0.014161592349410057,
    -0.004068867303431034,
    -0.002941120881587267,
    -0.024026349186897278,
    -0.0032312609255313873,
    0.026596160605549812,
    -0.0076265353709459305,
    -0.016814300790429115,
    -0.0131599185988307,
    -0.012572730891406536,
    -0.004569704178720713,
    0.00918776448816061,
    -0.016123490408062935,
    0.0058373394422233105,
    -0.005015275906771421,
    -0.006794110406190157,
    0.02408161573112011,
    -0.0073847523890435696,
    0.006966812536120415,
    0.008704198524355888,
    0.0264718160033226,
    0.010099632665514946,
    -0.03547997027635574,
    -0.00045593417598865926,
    0.01714588887989521,
    0.01771235279738903,
    0.008123918436467648,
    -0.03923797234892845,
    0.006462521851062775,
    -0.016745219007134438,
    0.04860534891486168,
    -0.024040166288614273,
    -0.028848199173808098,
    -0.022326959297060966,
    -0.02376384288072586,
    -0.013070113025605679,
    0.01736694760620594,
    0.00710842851549387,
    0.02118021622300148,
    -0.003619841067120433,
    -0.012752341106534004,
    0.005795890465378761,
    0.01901107467710972,
    -0.005039454437792301,
    -0.022133532911539078,
    0.02127692848443985,
    0.009705871343612671,
    -0.027121176943182945,
    -0.019909126684069633,
    0.007267314475029707,
    0.011432895436882973,
    0.02464807778596878,
    -0.007661075796931982,
    -0.024150695651769638,
    -0.0005509204929694533,
    0.008213723078370094,
    -0.012317131273448467,
    0.033711496740579605,
    0.00923612155020237,
    0.01137763075530529,
    0.015253070741891861,
    0.006313997786492109,
    -0.01557084359228611,
    -0.03318648412823677,
    0.0040550511330366135,
    -0.013747106306254864,
    -0.031943026930093765,
    0.025380335748195648,
    0.0065039703622460365,
    -0.007522914092987776,
    0.03857479616999626,
    0.02710735984146595,
    0.015349783934652805,
    -0.015266886912286282,
    0.046753980219364166,
    -0.02398490160703659,
    -0.03702738136053085,
    0.03047850914299488,
    -0.008047929033637047,
    -0.022230245172977448,
    0.0055921017192304134,
    -0.014866217970848083,
    0.006600683555006981,
    0.03785635530948639,
    0.02240985631942749,
    -1.1542722859303467e-05,
    -0.013436242006719112,
    -0.02449610084295273,
    -0.0023953814525157213,
    0.021511804312467575,
    0.028516611084342003,
    -0.008013389073312283,
    0.006293273530900478,
    0.03202592208981514,
    -0.00042225723154842854,
    0.016372181475162506,
    -0.02477242425084114,
    0.036170780658721924,
    0.008538403548300266,
    -0.03230224549770355,
    -0.006203467957675457,
    0.012144428677856922,
    -0.042470961809158325,
    -0.005067086778581142,
    -0.05587266385555267,
    -0.025297438725829124,
    -0.0029635722748935223,
    -0.0021069685462862253,
    0.028765302151441574,
    0.014700423926115036,
    -0.012558914721012115,
    0.03150090575218201,
    0.009595341980457306,
    -0.0015310063026845455,
    0.02543560042977333,
    -0.006738845258951187,
    0.013512231409549713,
    0.0047216820530593395,
    -0.01960517093539238,
    0.019315030425786972,
    -0.031694334000349045,
    0.02644418366253376,
    0.0025231812614947557,
    -0.038851119577884674,
    0.010990777052938938,
    -0.020351244136691093,
    -0.009298293851315975,
    -0.028060676530003548,
    0.02430267445743084,
    -0.011964818462729454,
    0.008593668229877949,
    0.0003780022670980543,
    0.003768365131691098,
    -0.03174959868192673,
    0.00330552295781672,
    0.009270661510527134,
    -0.020061103627085686,
    -0.015515578910708427,
    -0.022423671558499336,
    -0.00923612155020237,
    0.006054944358766079,
    0.03166670352220535,
    -0.010113448835909367,
    -0.020945340394973755,
    0.0006601547356694937,
    0.023211194202303886,
    0.0013246269663795829,
    0.015322151593863964,
    0.007522914092987776,
    -0.0007672301726415753,
    0.01746366173028946,
    -0.010673005133867264,
    -0.039984047412872314,
    0.009553893469274044,
    -0.008883808739483356,
    0.012123704887926579,
    0.006908093579113483,
    0.013981982134282589,
    -0.020530855283141136,
    -0.012662535533308983,
    0.011702311225235462,
    0.020434141159057617,
    -0.00632781395688653,
    -0.024786239489912987,
    0.03244040906429291,
    0.026388918980956078,
    0.021194031462073326,
    -0.02366712875664234,
    -0.0204894058406353,
    0.01180593203753233,
    0.0077301571145653725,
    0.02550468221306801,
    -0.007008261047303677,
    0.0063416301272809505,
    0.004911654628813267,
    0.03092062845826149,
    0.010721361264586449,
    0.020309794694185257,
    -4.244699812261388e-05,
    -0.010051276534795761,
    0.01879001408815384,
    0.03376676142215729,
    0.0036509274505078793,
    0.012911227531731129,
    -0.01702154241502285,
    0.006003133486956358,
    0.0009999466128647327,
    0.018748566508293152,
    0.017505109310150146,
    0.019770964980125427,
    0.018209734931588173,
    0.0517001748085022,
    0.0015370508190244436,
    -0.008241355419158936,
    -0.5844799876213074,
    -0.023556599393486977,
    -0.011087490245699883,
    -0.04263675585389137,
    -0.009015061892569065,
    0.0043071964755654335,
    -0.003619841067120433,
    0.014424099586904049,
    -0.020890075713396072,
    0.03713791072368622,
    -0.0318324975669384,
    0.02307303249835968,
    -0.008393334224820137,
    -0.003037834307178855,
    0.012337855063378811,
    -0.022561833262443542,
    -0.008324253372848034,
    -0.004438450094312429,
    -0.005415945313870907,
    0.016095858067274094,
    -0.008807819336652756,
    0.04053669422864914,
    -0.019743332639336586,
    0.01136381458491087,
    0.004131040070205927,
    0.003346971468999982,
    -0.010196346789598465,
    0.00037411644007079303,
    -0.0024385571014136076,
    0.018430793657898903,
    -0.017657088115811348,
    0.04371441900730133,
    0.011681586503982544,
    -0.02612641081213951,
    0.04233279824256897,
    0.003151817712932825,
    -0.011826656758785248,
    0.046035535633563995,
    -0.012496741488575935,
    0.0066352239809930325,
    -0.027273153886198997,
    -0.0029480289667844772,
    -0.0009222305379807949,
    -0.0032882525119930506,
    0.012496741488575935,
    0.013374069705605507,
    0.020986787974834442,
    0.015114909037947655,
    -0.023142114281654358,
    -0.017297865822911263,
    0.0049565574154257774,
    -0.01292504370212555,
    0.013823095709085464,
    -0.03517601266503334,
    0.003188085276633501,
    -0.0036509274505078793,
    0.025421785190701485,
    -0.015847167000174522,
    0.01051411870867014,
    0.005405583418905735,
    0.015930064022541046,
    0.02464807778596878,
    -0.012413844466209412,
    -0.014175408519804478,
    -0.002694156486541033,
    0.020848626270890236,
    0.0045593418180942535,
    -0.0009844033047556877,
    -0.01783669739961624,
    -0.030754832550883293,
    0.0015456859255209565,
    0.0036060248967260122,
    -0.004756222479045391,
    0.0018582772463560104,
    0.01704917475581169,
    0.03901691362261772,
    0.02373621053993702,
    0.0028271374758332968,
    -0.013304988853633404,
    0.020116368308663368,
    0.012068440206348896,
    0.009374283254146576,
    0.01181974820792675,
    -0.03769056126475334,
    0.03448520228266716,
    -0.0032139907125383615,
    -0.010299967601895332,
    -0.02026834711432457,
    -0.004013602621853352,
    0.00866965763270855,
    0.017228785902261734,
    0.0037096464075148106,
    -0.014755688607692719,
    -0.027466580271720886,
    0.0067975642159581184,
    -0.0019429014064371586,
    -0.017601823434233665,
    -0.009512444958090782,
    -0.010486486367881298,
    -0.018831463530659676,
    0.004745860584080219,
    0.008054837584495544,
    -0.018320264294743538,
    0.0014282483607530594,
    0.010624648071825504,
    0.011978634633123875,
    -0.013035573065280914,
    0.008344977162778378,
    0.013401702046394348,
    0.011101306416094303,
    -0.00397215411067009,
    -0.02786725014448166,
    -0.0004263589216861874,
    0.0017589733470231295,
    0.010666096583008766,
    -0.028627140447497368,
    0.006814834661781788,
    0.022354591637849808,
    -0.016883380711078644,
    0.0016449898248538375,
    0.006949542090296745,
    0.003789089387282729,
    0.010845706798136234,
    -0.015626108273863792,
    0.012303315103054047,
    -0.0003719576634466648,
    0.025587579235434532,
    -0.012317131273448467,
    -0.022741444408893585,
    -0.007440017070621252,
    0.0023383896332234144,
    0.014037246815860271,
    0.01680048368871212,
    -0.008517679758369923,
    0.029207419604063034,
    0.0146589744836092,
    0.04843955487012863,
    0.010341416113078594,
    -0.00397215411067009,
    0.00263198371976614,
    -0.011343089863657951,
    -0.005457394290715456,
    0.0027442402206361294,
    -0.006130933295935392,
    0.004213937092572451,
    -0.0009481358574703336,
    -0.004262293688952923,
    0.011681586503982544,
    0.0006985809886828065,
    0.0010871612466871738,
    -0.02484150603413582,
    0.011073674075305462,
    -0.016510343179106712,
    0.014175408519804478,
    0.0005578285781666636,
    -0.0293179489672184,
    -0.024357939139008522,
    -0.008766370825469494,
    -0.021539436653256416,
    -0.002383292419835925,
    0.008455506525933743,
    0.030810097232460976,
    -0.022119715809822083,
    -0.005864971783012152,
    -0.02319737896323204,
    0.0052087027579545975,
    -0.01711825653910637,
    0.026140226051211357,
    0.004006694536656141,
    -0.05554107204079628,
    0.0022934870794415474,
    -0.012779973447322845,
    0.004061959218233824,
    -0.01783669739961624,
    0.02555994689464569,
    -0.004676779266446829,
    -0.009885482490062714,
    0.02203681878745556,
    0.011370722204446793,
    0.003785635344684124,
    -0.008662750013172626,
    0.007294946815818548,
    -0.0024385571014136076,
    -0.022907238453626633,
    0.04744478687644005,
    0.027784353122115135,
    0.02071046456694603,
    -0.03158380463719368,
    -0.007743973284959793,
    -0.009298293851315975,
    -0.0002711426932364702,
    -0.0025577216874808073,
    0.006593775469809771,
    0.030119288712739944,
    -0.0089045325294137,
    0.0017270233947783709,
    0.0009636790491640568,
    0.027190256863832474,
    0.013795463368296623,
    0.017629455775022507,
    0.01079735066741705,
    0.030146921053528786,
    0.013719473965466022,
    0.004068867303431034,
    -0.00874564703553915,
    -0.014686607755720615,
    0.00658686738461256,
    -0.023819107562303543,
    0.02868240512907505,
    0.006714667193591595,
    0.03600498288869858,
    -0.024689527228474617,
    -0.011384538374841213,
    -0.026817219331860542,
    0.007025531493127346,
    0.004362461157143116,
    -0.02506256476044655,
    0.007267314475029707,
    -0.01818210259079933,
    0.003329701256006956,
    0.02912452258169651,
    0.024938218295574188,
    -0.0005504887085407972,
    0.0033003417775034904,
    0.007529822178184986,
    0.00044427678221836686,
    0.01768472045660019,
    0.000766366661991924,
    -0.007757789455354214,
    -0.0007680936832912266,
    0.0001897566980915144,
    0.033269379287958145,
    0.012683260254561901,
    -0.003937613219022751,
    0.023128297179937363,
    -0.01601296104490757,
    0.036833956837654114,
    -0.006631770171225071,
    0.03586682304739952,
    -0.02619549073278904,
    0.014189224690198898,
    0.010493393987417221,
    0.030312715098261833,
    -0.002063792897388339,
    0.014728056266903877,
    -0.006099846679717302,
    0.0015724548138678074,
    0.006124025210738182,
    0.0132359080016613,
    -0.010693728923797607,
    0.014272121712565422,
    -0.01186810526996851,
    -0.0006441797595471144,
    0.008883808739483356,
    0.027038278058171272,
    -0.02058611996471882,
    0.0034989495761692524,
    0.002908307360485196,
    0.016275469213724136,
    0.017919594421982765,
    0.005937506444752216,
    0.013919808901846409,
    0.0318324975669384,
    0.009243029169738293,
    0.029649538919329643,
    -0.021000605076551437,
    -0.0038927108980715275,
    -0.03069956786930561,
    -0.0014921482652425766,
    -0.026388918980956078,
    -0.025863902643322945,
    -0.01758800633251667,
    -0.013560588471591473,
    -0.031224584206938744,
    0.029456112533807755,
    0.0008237902075052261,
    0.020972972735762596,
    0.0247447919100523,
    -0.01601296104490757,
    0.005101627204567194,
    -0.020793361589312553,
    -0.04006694257259369,
    0.048246126621961594,
    0.00469750352203846,
    0.001030169427394867,
    -0.004082683473825455,
    -0.017919594421982765,
    0.0007762970635667443,
    -0.03583918884396553,
    0.028378449380397797,
    0.009954563342034817,
    0.001823736703954637,
    -0.03514838218688965,
    0.03448520228266716,
    -0.030561406165361404,
    0.006127479020506144,
    0.0248967707157135,
    -0.014962931163609028,
    0.00629672734066844,
    0.0006053217221051455,
    0.011294733732938766,
    0.007654167711734772,
    0.006227646488696337,
    0.030865363776683807,
    0.048246126621961594,
    -0.01557084359228611,
    -0.013567496091127396,
    0.0011761030182242393,
    -0.03274436295032501,
    -0.030367979779839516,
    -0.00013999683142174035,
    0.00781996175646782,
    -0.014106327667832375,
    -0.015418864786624908,
    0.007667983882129192,
    0.013035573065280914,
    0.01610967516899109,
    -0.03633657470345497,
    0.040426164865493774,
    0.007253498304635286,
    -0.008268987759947777,
    -0.03089299611747265,
    -0.0010241249110549688,
    0.008365701884031296,
    0.018776198849081993,
    0.025891534984111786,
    0.025863902643322945,
    0.015750452876091003,
    -0.001535323797725141,
    -0.021442722529172897,
    -0.03346280753612518,
    -0.009491721168160439,
    0.0034264144487679005,
    0.012013174593448639,
    -0.008344977162778378,
    0.04219463840126991,
    0.033297013491392136,
    0.010417405515909195,
    0.01673140376806259,
    0.01500437967479229,
    0.0024955489207059145,
    0.006652494426816702,
    0.00048140776925720274,
    -0.04667108133435249,
    0.003768365131691098,
    0.011785208247601986,
    0.01689719781279564,
    0.014838585630059242,
    0.017864329740405083,
    0.011439803056418896,
    0.0013125378172844648,
    -0.0008911440963856876,
    -0.007882134988904,
    -0.04230516776442528,
    -0.008704198524355888,
    -0.013187550939619541,
    0.0012201420031487942,
    0.038878750056028366,
    -0.0075160060077905655,
    0.026900116354227066,
    -0.005450485739856958,
    0.02757710963487625,
    -0.0073847523890435696,
    0.004296834114938974,
    0.018264999613165855,
    0.009270661510527134,
    -0.002716607879847288,
    0.01648271083831787,
    -0.007156785111874342,
    -0.025863902643322945,
    -0.007315671071410179,
    0.03089299611747265,
    -0.01633073389530182,
    -0.001872093416750431,
    0.008096286095678806,
    0.02565666101872921,
    -0.026927748695015907,
    -0.03244040906429291,
    0.025366520509123802,
    -0.012807605788111687,
    -0.0011501975823193789,
    -0.013940533623099327,
    -0.017891962081193924,
    -0.03186012804508209,
    -0.004707865882664919,
    -0.015612292103469372,
    -0.0220644511282444,
    0.008006480522453785,
    -0.015653740614652634,
    0.011135847307741642,
    0.0043590073473751545,
    0.011336182244122028,
    -0.012821421958506107,
    -0.015874799340963364,
    -0.0034592279698699713,
    -0.010997685603797436,
    -0.016786668449640274,
    0.004172488581389189,
    0.0231697466224432,
    0.011115122586488724,
    0.01231022272258997,
    -0.021138766780495644,
    -0.002587081165984273,
    -0.03114168718457222,
    0.018099205568432808,
    -0.01800249144434929,
    0.0012287772260606289,
    -0.0460079051554203,
    0.012082256376743317,
    0.013760922476649284,
    0.00655578076839447,
    -0.005008367821574211,
    0.008372609503567219,
    0.05335811525583267,
    0.012959583662450314,
    0.014976747334003448,
    0.02294868789613247,
    -0.02978770062327385,
    0.044239431619644165,
    0.01872093416750431,
    -0.011667770333588123,
    -0.009111776016652584,
    -0.01751892641186714,
    0.0010862977942451835,
    -0.0029791153501719236,
    -0.01673140376806259,
    0.0018893636297434568,
    -0.005118897650390863,
    0.03523127734661102,
    0.002790869912132621,
    -0.018195919692516327,
    -0.006255278829485178,
    0.004296834114938974,
    0.0024471923243254423,
    0.00711533660069108,
    -0.032606203109025955,
    -0.009477904997766018,
    0.004362461157143116,
    0.0051879785023629665,
    0.02433030679821968,
    -0.016496527940034866,
    -0.003464408917352557,
    -0.0010733450762927532,
    -0.018872912973165512,
    -2.261658664792776e-06,
    -0.03398782014846802,
    -0.0020206174813210964,
    0.00601349538192153,
    -0.009443364106118679,
    0.025698108598589897,
    0.0025594488251954317,
    -0.002718334784731269,
    0.0010163532570004463,
    0.013298080302774906,
    0.033269379287958145,
    -0.013816187158226967,
    0.00687009934335947,
    -0.021705230697989464,
    -0.010507210157811642,
    0.00027351733297109604,
    0.004089591559022665,
    0.007253498304635286,
    -0.008863084018230438,
    -0.016344549134373665,
    -0.011246376670897007,
    0.012227325700223446,
    -0.03429177775979042,
    0.006638678256422281,
    -0.0011320639168843627,
    -0.017436029389500618,
    -0.02572574093937874,
    0.029013993218541145,
    0.00969205517321825,
    0.024219777435064316,
    0.020130185410380363,
    0.01025851909071207,
    0.0014308389509096742,
    -0.02137364260852337,
    -0.022893423214554787,
    -0.003647473407909274,
    0.031915392726659775,
    0.007056617643684149,
    0.0027476942632347345,
    0.03324174880981445,
    0.022492753341794014,
    -0.0074262009002268314,
    0.02509019710123539,
    0.005229427013546228,
    -0.0015284157125279307,
    -0.008752554655075073,
    -0.027162624523043633,
    0.008490047417581081,
    -0.010714453645050526,
    -0.020061103627085686,
    -0.004555888008326292,
    -0.00579934474080801,
    0.008379518054425716,
    0.0130839291960001,
    0.0033245200756937265,
    0.016316916793584824,
    0.00604458199813962,
    0.01881764829158783,
    -0.02808830887079239,
    -0.028406081721186638,
    -0.011467435397207737,
    -0.00395488366484642,
    0.001102704438380897,
    0.029704803600907326,
    -0.045621052384376526,
    -0.049406684935092926,
    0.034651000052690506,
    -0.015626108273863792,
    0.012786881066858768,
    -0.003699284279718995,
    0.022686179727315903,
    -0.017753800377249718,
    0.018734749406576157,
    -0.0073018549010157585,
    0.015764269977808,
    0.006711212918162346,
    -0.002514546038582921,
    -0.018665669485926628,
    -0.012040807865560055,
    -0.0015854075318202376,
    0.015128725208342075,
    0.020351244136691093,
    0.012082256376743317,
    0.01423067320138216,
    0.025960616767406464,
    0.038215573877096176,
    0.013180643320083618,
    -0.00895288959145546,
    0.023307908326387405,
    -0.015405048616230488,
    -0.013318805024027824,
    -0.02622312307357788,
    -0.030533773824572563,
    -0.019425559788942337,
    0.02169141359627247,
    -0.009180856868624687,
    0.027784353122115135,
    0.022326959297060966,
    -0.01992294192314148,
    0.007177509367465973,
    0.024357939139008522,
    -0.0065246946178376675,
    0.01847224310040474,
    0.006455613765865564,
    0.039569560438394547,
    0.032136451452970505,
    -0.00265098107047379,
    -0.007343303877860308,
    -0.025048747658729553,
    -0.036668162792921066,
    -0.002716607879847288,
    0.030810097232460976,
    0.02553231455385685,
    -0.008420966565608978,
    -0.00967823900282383,
    0.038878750056028366,
    0.009097959846258163,
    -0.0029670263174921274,
    -0.022244062274694443,
    0.029511377215385437,
    -0.009346650913357735,
    0.010147989727556705,
    -0.03658526390790939,
    0.006621407810598612,
    0.005951322615146637,
    -0.00527087552472949,
    -0.024123063310980797,
    0.012469109147787094,
    0.01702154241502285,
    -0.007232774049043655,
    -0.0041655804961919785,
    0.013691841624677181,
    0.015294519253075123,
    0.01834789663553238,
    0.02600206434726715,
    -0.028185022994875908,
    -0.02496585063636303,
    -0.01604059338569641,
    -0.008006480522453785,
    -0.01992294192314148,
    -0.00041211096686311066,
    0.03221935033798218,
    -0.007218957878649235,
    -0.003289979649707675,
    0.02868240512907505,
    -0.007564362604171038,
    -0.029539009556174278,
    -0.013360253535211086,
    -0.016468895599246025,
    0.03520364686846733,
    -0.03948666527867317,
    -0.01003746036440134,
    -0.030202185735106468,
    -0.014396467246115208,
    0.00263198371976614,
    -0.02130456082522869,
    -0.012303315103054047,
    -0.005706085357815027,
    -0.01202699076384306,
    -0.0026993376668542624,
    0.02464807778596878,
    -0.01803012378513813,
    -0.01790577918291092,
    -0.026596160605549812,
    -0.004355553071945906,
    -0.016068225726485252,
    -0.008255171589553356,
    -0.00020065854187123477,
    -0.012994124554097652,
    -0.02046177349984646,
    -0.015253070741891861,
    -0.01423067320138216,
    -0.023722393438220024,
    0.02285197377204895,
    0.016717586666345596,
    0.011115122586488724,
    -0.01131545752286911,
    0.04150382801890373,
    0.025104012340307236,
    0.004880568012595177,
    -0.0293179489672184,
    0.007868318818509579,
    -0.02590535208582878,
    0.000862216460518539,
    -0.014645158313214779,
    -0.024813871830701828,
    0.004251931793987751,
    0.0022330412175506353,
    -0.044488124549388885,
    -0.034872058779001236,
    -0.0056749992072582245,
    0.04725136235356331,
    -0.002842680551111698,
    -0.0233217254281044,
    0.013878360390663147,
    0.006552326958626509,
    0.02388818748295307,
    -0.030506141483783722,
    -0.020282162353396416,
    0.05167254060506821,
    -0.002328027505427599,
    -0.012849054299294949,
    0.014589893631637096,
    -0.019591353833675385,
    -0.018320264294743538,
    -0.004901292733848095,
    -0.015778085216879845,
    -0.03252330422401428,
    -0.04302360862493515,
    -0.00816536694765091,
    -0.006818288471549749,
    0.004676779266446829,
    0.00875946320593357,
    0.010783534497022629,
    -0.011895737610757351,
    -0.02108350209891796,
    -0.014949114993214607,
    0.02300395257771015,
    0.025366520509123802,
    -0.00021587792434729636,
    0.014700423926115036,
    0.020185450091958046,
    0.020655199885368347,
    0.007053163833916187,
    -0.002036160556599498,
    -0.03545233607292175,
    -0.021235480904579163,
    -0.013014848344027996,
    -0.021636148914694786,
    -0.01060392428189516,
    -0.02915215492248535,
    0.040177471935749054,
    -0.0007905449601821601,
    -0.006769931875169277,
    -0.014534628950059414,
    -0.001159696257673204,
    -0.028226470574736595,
    -0.00789595115929842,
    -0.03299305588006973,
    0.028571875765919685,
    0.01046576164662838,
    0.02641655132174492,
    -0.006182743702083826,
    0.022368406876921654,
    -0.02376384288072586,
    0.03760766237974167,
    -0.02142890729010105,
    -0.015349783934652805,
    0.0005772575968876481,
    0.017988676205277443,
    -0.008973613381385803,
    -0.0017417031340301037,
    -0.023625681176781654,
    -0.0029877505730837584,
    0.038187943398952484,
    0.0331035852432251,
    -0.026333654299378395,
    0.03691685199737549,
    -0.012842146679759026,
    -0.03150090575218201,
    -0.001297858078032732,
    -0.0020724281203001738,
    -0.03177723288536072,
    0.019397927448153496,
    0.020876258611679077,
    -0.030174553394317627,
    -0.008034112863242626,
    -0.0009930385276675224,
    0.021318377926945686,
    -0.023874372243881226,
    -0.017698535695672035,
    0.02506256476044655,
    0.0007629126193933189,
    0.012931951321661472,
    -0.009332834742963314,
    -0.019370295107364655,
    -0.0033815118949860334,
    -0.0016277196118608117,
    0.018195919692516327,
    0.025034932419657707,
    0.009056511335074902,
    0.023031584918498993,
    0.012869779020547867,
    -0.006718121003359556,
    -0.040895916521549225,
    0.01557084359228611,
    -0.02272762916982174,
    0.004932378884404898,
    0.0179610438644886,
    -0.002055157907307148,
    -0.019149236381053925,
    -0.024606630206108093,
    0.017726168036460876,
    -0.01979859732091427,
    -0.029704803600907326,
    -0.008234447799623013,
    0.006763023789972067,
    -0.003536944044753909,
    0.0007046255632303655,
    -0.01616493985056877,
    -0.020337428897619247,
    -0.006593775469809771,
    -0.0015940426383167505,
    -0.004614606499671936,
    -0.005464302375912666,
    -0.023915819823741913,
    -0.0009515899000689387,
    -0.017753800377249718,
    0.023128297179937363,
    -0.01073517743498087,
    -0.02272762916982174,
    -0.021290745586156845,
    -0.002858223859220743,
    -0.005640458315610886,
    -0.00838642567396164,
    0.05512658879160881,
    0.1657942533493042,
    0.02745276503264904,
    0.007267314475029707,
    0.026844851672649384,
    -0.0013557133497670293,
    0.011619413271546364,
    -0.006490154191851616,
    0.01309774536639452,
    0.0009118683519773185,
    0.02826792001724243,
    -0.020157817751169205,
    0.003599116811528802,
    -0.003858170472085476,
    0.008959797210991383,
    0.023708578199148178,
    0.010721361264586449,
    -0.029925862327218056,
    -0.026651425287127495,
    -0.04338282719254494,
    0.010486486367881298,
    0.003913435153663158,
    -0.006908093579113483,
    -0.014714240096509457,
    -0.02656852826476097,
    0.009809493087232113,
    -0.011702311225235462,
    -0.018306449055671692,
    -0.0011579692363739014,
    0.02871003746986389,
    0.011743759736418724,
    -0.02462044544517994,
    0.01948082447052002,
    -0.003965246025472879,
    0.008172274567186832,
    -0.04164198786020279,
    -0.011260192841291428,
    0.010189438238739967,
    0.007288038730621338,
    0.02518690936267376,
    0.022520385682582855,
    -0.01443791575729847,
    -0.0346786305308342,
    0.004162126686424017,
    -0.03357333689928055,
    9.266559936804697e-05,
    -0.013035573065280914,
    -0.02247893624007702,
    -0.009049602784216404,
    -0.013636576943099499,
    0.01970188319683075,
    -0.027162624523043633,
    0.00177883415017277,
    0.005474664270877838,
    0.011405263096094131,
    0.011591780930757523,
    -0.006469429936259985,
    0.009940747171640396,
    0.01423067320138216,
    -0.01523925457149744,
    0.024689527228474617,
    -0.019784780219197273,
    0.02663761004805565,
    -0.03675105795264244,
    0.02137364260852337,
    -0.019425559788942337,
    0.01101840939372778,
    0.0029100344981998205,
    -0.02452373318374157,
    0.017436029389500618,
    0.019176868721842766,
    0.010990777052938938,
    -0.033048320561647415,
    -0.011425986886024475,
    -0.002664797240868211,
    -0.02622312307357788,
    -0.031721968203783035,
    0.038851119577884674,
    8.036055805860087e-05,
    0.0015974966809153557,
    0.032827261835336685,
    0.002388473367318511,
    0.028226470574736595,
    -0.016220204532146454,
    -0.023114481940865517,
    -0.0028564967215061188,
    -0.030367979779839516,
    0.021705230697989464,
    -0.002364295069128275,
    0.0069909910671412945,
    -0.021829577162861824,
    -0.0222164299339056,
    -0.02871003746986389,
    0.005678453017026186,
    -0.00847623124718666,
    0.028074493631720543,
    0.0409788116812706,
    0.0004542071546893567,
    0.0031449096277356148,
    -0.0248967707157135,
    0.01030687615275383,
    -0.02462044544517994,
    0.07388897240161896,
    0.007585086859762669,
    -0.013767831027507782,
    -0.012040807865560055,
    0.0010258519323542714,
    -0.020765729248523712,
    0.025891534984111786,
    0.009657515212893486,
    -0.0033659685868769884,
    -0.01073517743498087,
    -0.006369262468069792,
    -0.002006801310926676,
    0.003920343238860369,
    0.0043071964755654335,
    0.006490154191851616,
    -0.020765729248523712,
    -0.01030687615275383,
    0.002424740931019187,
    0.015999145805835724,
    -0.01594388112425804,
    -0.027604741975665092,
    0.005578285548835993,
    0.005529928952455521,
    -0.036419469863176346,
    -0.040619589388370514,
    -0.027494212612509727,
    0.016192572191357613,
    -0.005163799971342087,
    -0.012068440206348896,
    0.02196773886680603,
    -0.005443577654659748,
    0.012600363232195377,
    0.011474343948066235,
    -0.017878146842122078,
    0.004939286969602108,
    0.0020568848121911287,
    -0.005588647909462452,
    -0.00222267908975482,
    0.03849189728498459,
    -0.0045593418180942535,
    0.0012900865403935313,
    0.0012607270618900657,
    -0.015501762740314007,
    -0.009602250531315804,
    -0.029870597645640373,
    0.023556599393486977,
    -0.014672791585326195,
    0.006113662850111723,
    0.0010465761879459023,
    -0.011826656758785248,
    0.006890823598951101,
    0.000354471558239311,
    -0.004006694536656141,
    0.024855321273207664,
    -0.02748039737343788,
    -0.03268909826874733,
    -0.027825800701975822,
    -0.001328081008978188,
    0.007681800052523613,
    -0.038436632603406906,
    -0.007357120048254728,
    -0.005215610843151808,
    0.0063623543828725815,
    -0.02090389095246792,
    0.004866751842200756,
    -0.17386290431022644,
    -0.00739166047424078,
    0.01714588887989521,
    -0.03003639169037342,
    0.011605597101151943,
    -0.010265427641570568,
    -0.0012995850993320346,
    0.010134173557162285,
    -0.0206413846462965,
    -0.018707117065787315,
    0.01581953465938568,
    0.028060676530003548,
    -0.02799159660935402,
    -0.024924403056502342,
    -0.00810319371521473,
    0.022561833262443542,
    -0.0016536249313503504,
    -0.0049738273955881596,
    0.01126710046082735,
    0.019425559788942337,
    0.06278075277805328,
    -0.01872093416750431,
    0.009049602784216404,
    0.003289979649707675,
    -0.0002929463516920805,
    0.0038132676854729652,
    -0.006883915513753891,
    0.020558487623929977,
    -0.005864971783012152,
    -0.0006074804696254432,
    -0.012883595190942287,
    0.011792115867137909,
    0.03133511170744896,
    0.0126072708517313,
    0.03780109062790871,
    0.014562261290848255,
    0.02959427423775196,
    -0.017726168036460876,
    -0.01790577918291092,
    0.030616670846939087,
    0.029870597645640373,
    0.006984082981944084,
    0.018320264294743538,
    -0.02297632023692131,
    -0.011184203438460827,
    -0.008227539248764515,
    -0.002725242869928479,
    -0.0293179489672184,
    0.0056231883354485035,
    -0.03448520228266716,
    0.033269379287958145,
    -0.016841933131217957,
    -0.016151122748851776,
    0.004548979923129082,
    0.015653740614652634,
    0.012220418080687523,
    0.018113022670149803,
    0.011577964760363102,
    -0.01979859732091427,
    -0.028005411848425865,
    -0.014037246815860271,
    -0.03874059021472931,
    -0.0029480289667844772,
    -0.0066870348528027534,
    -0.014935298822820187,
    0.0039825160056352615,
    -0.01523925457149744,
    0.014617525972425938,
    0.0002456690708640963,
    -0.0015120090683922172,
    0.03677869215607643,
    0.007163693197071552,
    0.011163479648530483,
    -0.004545525647699833,
    0.02730078622698784,
    -0.003428141586482525,
    -0.029013993218541145,
    0.03481679409742355,
    0.03255093842744827,
    -0.014576077461242676,
    -0.015432681888341904,
    0.01925976574420929,
    -0.01923213340342045,
    -0.004818395245820284,
    0.012738524936139584,
    -0.001379028195515275,
    0.005388312973082066,
    -0.015183989889919758,
    -0.010500302538275719,
    0.01208916399627924,
    0.004431542009115219,
    -0.025159277021884918,
    0.006510878447443247,
    -0.014631342142820358,
    -0.010203254409134388,
    0.00840024184435606,
    -0.012524373829364777,
    -0.0022537654731422663,
    -0.018292631953954697,
    0.0030844637658447027,
    0.005453940015286207,
    0.012517466209828854,
    -0.027093544602394104,
    0.016275469213724136,
    0.019660435616970062,
    0.034181248396635056,
    -0.013304988853633404,
    0.015653740614652634,
    0.03186012804508209,
    -0.023335540667176247,
    0.01046576164662838,
    0.0041655804961919785,
    0.03208118677139282,
    0.021677598357200623,
    -0.015626108273863792,
    0.020282162353396416,
    -0.005992771126329899,
    -0.01588861644268036,
    0.004179396666586399,
    0.010714453645050526,
    0.025490865111351013,
    -0.012241141870617867,
    0.008255171589553356,
    -0.00529505405575037,
    0.006790656130760908,
    -0.04114460572600365,
    -0.0954974889755249,
    -0.02688630111515522,
    0.020530855283141136,
    0.009733503684401512,
    -0.045151300728321075,
    -0.022326959297060966,
    -0.015349783934652805,
    0.019867677241563797,
    -0.009388099424540997,
    -0.02115258388221264,
    0.009160132147371769,
    0.021097319200634956,
    -0.004013602621853352,
    -0.009671331383287907,
    -0.008524587377905846,
    -0.022299326956272125,
    -0.03136274591088295,
    0.0013211729237809777,
    0.0021587791852653027,
    0.009222305379807949,
    -0.010396680794656277,
    0.0013893903233110905,
    0.007992664352059364,
    -0.0032986148726195097,
    0.02433030679821968,
    0.000375627598259598,
    -0.023473702371120453,
    0.007647259626537561,
    0.019218316301703453,
    0.011688495054841042,
    0.0027027917094528675,
    -0.02981533296406269,
    -0.007094612345099449,
    0.008144642226397991,
    -0.010362140834331512,
    0.0056231883354485035,
    -0.0065626888535916805,
    -0.040177471935749054,
    0.050097495317459106,
    0.004725136328488588,
    -0.01059010811150074,
    -0.010963144712150097,
    0.02080717869102955,
    -0.006680126767605543,
    -0.018209734931588173,
    -0.014064879156649113,
    -0.009325926192104816,
    0.01689719781279564,
    0.01421685703098774,
    -0.04031563550233841,
    -0.023501334711909294,
    0.0028858562000095844,
    -0.02026834711432457,
    0.008994338102638721,
    -0.0005297644529491663,
    0.0024316490162163973,
    0.0011165206087753177,
    0.025670476257801056,
    -0.017726168036460876,
    0.0162340197712183,
    -0.011170387268066406,
    -0.0178090650588274,
    -0.025034932419657707,
    0.018541323021054268,
    -0.001973987789824605,
    0.004438450094312429,
    -0.0024195597507059574,
    0.021097319200634956,
    0.006566143129020929,
    -0.03127984702587128,
    -0.0023366627283394337,
    0.020213082432746887,
    -0.013643485493957996,
    0.016247836872935295,
    -0.034844424575567245,
    0.006801018491387367,
    -0.010286151431500912,
    0.006711212918162346,
    0.011930277571082115,
    -0.0073294872418046,
    -0.03114168718457222,
    0.015308335423469543,
    -0.017284050583839417,
    -0.009830217808485031,
    0.028571875765919685,
    0.028378449380397797,
    -0.0046905954368412495,
    0.001973987789824605,
    0.011349998414516449,
    -0.025739558041095734,
    0.021567068994045258,
    0.008151550777256489,
    0.049379054456949234,
    0.00012456157128326595,
    -0.007723249029368162,
    -0.009429547935724258,
    -0.008020296692848206,
    0.0032813444267958403,
    -0.021415090188384056,
    -0.005813160911202431,
    -0.05786219239234924,
    -0.024717159569263458,
    -0.08521824330091476,
    0.02868240512907505,
    -0.017062991857528687,
    -0.012199693359434605,
    0.011204928159713745,
    -0.03163906931877136,
    0.04396310821175575,
    -0.02484150603413582,
    -0.004017056431621313,
    0.028986360877752304,
    -0.029456112533807755,
    -0.004169034771621227,
    0.010624648071825504,
    0.0017615639371797442,
    0.009685147553682327,
    0.012303315103054047,
    0.031528539955616,
    -0.009484812617301941,
    0.06023857742547989,
    -0.014368834905326366,
    -0.01790577918291092,
    -0.01761563867330551,
    0.024123063310980797,
    0.006130933295935392,
    -0.048301391303539276,
    -0.017643271014094353,
    -0.01970188319683075,
    -0.00016093699377961457,
    -0.0231697466224432,
    -0.02329409122467041,
    0.007343303877860308,
    -0.009871666319668293,
    0.0031552717555314302,
    0.05089883506298065,
    -0.013401702046394348,
    0.02629220485687256,
    0.01805775798857212,
    0.024164512753486633,
    0.0032830715645104647,
    0.00445226626470685,
    -0.009284477680921555,
    -0.015114909037947655,
    0.01388526801019907,
    -0.0104795778170228,
    -0.013242815621197224,
    -0.01566755585372448,
    -0.008075561374425888,
    -0.010638464242219925,
    0.012192785739898682,
    0.0174912940710783,
    0.005668091122061014,
    0.010279243811964989,
    -0.041559092700481415,
    -0.02843371406197548,
    -0.0010163532570004463,
    0.002250311430543661,
    0.028958728536963463,
    -0.0068666450679302216,
    -0.00042614302947185934,
    -0.01402343064546585,
    0.010327599942684174,
    0.0007214640500023961,
    0.004127585794776678,
    0.0013712566578760743,
    0.003191539319232106,
    0.0019653525669127703,
    -0.05023565888404846,
    -0.009077235125005245,
    0.0014429281000047922,
    -0.036861587315797806,
    -0.019204501062631607,
    -0.04484734311699867,
    0.019328845664858818,
    0.020669016987085342,
    0.039293237030506134,
    -0.016316916793584824,
    0.0017494747880846262,
    0.013249724172055721,
    -0.017090624198317528,
    0.048301391303539276,
    0.018430793657898903,
    -0.02272762916982174,
    -0.0026993376668542624,
    -0.008517679758369923,
    0.02410924807190895,
    -0.006282911170274019,
    -0.029649538919329643,
    -0.003500676481053233,
    -0.003006747690960765,
    -0.0005327867111191154,
    0.002481732750311494,
    0.0008876900537870824,
    0.011716127395629883,
    0.024095430970191956,
    -0.0020845173858106136,
    -0.007357120048254728,
    0.005336502566933632,
    -0.022078268229961395,
    0.027466580271720886,
    0.018334081396460533,
    0.0034989495761692524,
    -0.003460954874753952,
    0.011370722204446793,
    -0.007978848181664944,
    0.0028012320399284363,
    0.012400028295814991,
    -0.012427660636603832,
    -0.048080332577228546,
    -0.0038374459836632013,
    -0.0055713774636387825,
    0.00395488366484642,
    -0.00975422840565443,
    -0.008206815458834171,
    0.018928177654743195,
    -0.025932984426617622,
    0.04421180114150047,
    0.0029117614030838013,
    -0.018803831189870834,
    -0.018292631953954697,
    0.008572944439947605,
    -0.01903870701789856,
    0.010707545094192028,
    0.024247409775853157,
    -0.02937321551144123,
    0.005042908247560263,
    0.007826870307326317,
    0.01746366173028946,
    0.007281130645424128,
    -0.0064141652546823025,
    0.010721361264586449,
    -0.010058184154331684,
    -0.010161805897951126,
    -0.03161143884062767,
    -0.000988720916211605,
    -0.013125377707183361,
    0.00790976732969284,
    -0.0022520385682582855,
    -0.0037027383223176003,
    -0.0014938752865418792,
    0.08123917877674103,
    -0.017546558752655983,
    -0.006127479020506144,
    -0.00784759409725666,
    -0.023349357768893242,
    0.024800056591629982,
    0.04202884063124657,
    0.006345083937048912,
    0.02811594121158123,
    0.009146315976977348,
    -0.010645372793078423,
    -0.025007300078868866,
    -0.021387457847595215,
    -0.005219064652919769,
    -0.013298080302774906,
    0.008310437202453613,
    -0.01805775798857212,
    0.011087490245699883,
    0.002550813602283597,
    0.0017961043631657958,
    0.02265854738652706,
    0.02770145609974861,
    0.02326645888388157,
    -0.018928177654743195,
    -0.04031563550233841,
    -0.00022645594435743988,
    0.02366712875664234,
    0.01648271083831787,
    -0.013256631791591644,
    -0.04263675585389137,
    0.014341202564537525,
    -0.0036060248967260122,
    -0.024578997865319252,
    -0.003554214257746935,
    0.0038029055576771498,
    0.0076058111153542995,
    -0.006576505023986101,
    -0.0334075428545475,
    0.012814514338970184,
    -0.01202699076384306,
    -0.0030741016380488873,
    -0.026817219331860542,
    -0.015543211251497269,
    -0.02511782944202423,
    0.017726168036460876,
    -0.0024541004095226526,
    0.017353132367134094,
    -0.002310757292434573,
    -0.03981825336813927
  ]
}
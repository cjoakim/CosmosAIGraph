{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "\n# efficientnet keras (and tensorflow keras)\n\n[![pypi version](https://badge.fury.io/py/efficientnet.svg)](https://badge.fury.io/py/efficientnet) [![downloads](https://pepy.tech/badge/efficientnet/month)](https://pepy.tech/project/efficientnet/month)\n\nthis repository contains a keras (and tensorflow keras) reimplementation of **efficientnet**, a lightweight convolutional neural network architecture achieving the [state-of-the-art accuracy with an order of magnitude fewer parameters and flops](https://arxiv.org/abs/1905.11946), on both imagenet and\nfive other commonly used transfer learning datasets.\n\nthe codebase is heavily inspired by the [tensorflow implementation](https://github.com/tensorflow/tpu/tree/master/models/official/efficientnet).\n\n## important!\nthere was a huge library update **24 of july 2019**. now efficintnet works with both frameworks: `keras` and `tensorflow.keras`.\nif you have models, trained before that date, to load them, please, use efficientnet of 0.0.4 version (pypi). you can roll back using `pip install -u efficientnet==0.0.4`.\n\n## table of contents\n\n 1. [about efficientnet models](#about-efficientnet-models)\n 2. [examples](#examples)\n 3. [models](#models)\n 4. [installation](#installation)\n 5. [frequently asked questions](#frequently-asked-questions)\n 6. [acknowledgements](#acknowledgements)\n\n## about efficientnet models\n\nefficientnets rely on automl and compound scaling to achieve superior performance without compromising resource efficiency. the [automl mobile framework](https://ai.googleblog.com/2018/08/mnasnet-towards-automating-design-of.html) has helped develop a mobile-size baseline network, **efficientnet-b0**, which is then improved by the compound scaling method  to obtain efficientnet-b1 to b7.\n\n<table border=\"0\">\n<tr>\n    <td>\n    <img src=\"https://raw.githubusercontent.com/tensorflow/tpu/master/models/official/efficientnet/g3doc/params.png\" width=\"100%\" />\n    </td>\n    <td>\n    <img src=\"https://raw.githubusercontent.com/tensorflow/tpu/master/models/official/efficientnet/g3doc/flops.png\", width=\"90%\" />\n    </td>\n</tr>\n</table>\n\nefficientnets achieve state-of-the-art accuracy on imagenet with an order of magnitude better efficiency:\n\n* in high-accuracy regime, efficientnet-b7 achieves the state-of-the-art 84.4% top-1 / 97.1% top-5 accuracy on imagenet with 66m parameters and 37b flops. at the same time, the model is 8.4x smaller and 6.1x faster on cpu inference than the former leader, [gpipe](https://arxiv.org/abs/1811.06965).\n\n* in middle-accuracy regime, efficientnet-b1 is 7.6x smaller and 5.7x faster on cpu inference than [resnet-152](https://arxiv.org/abs/1512.03385), with similar imagenet accuracy.\n\n* compared to the widely used [resnet-50](https://arxiv.org/abs/1512.03385), efficientnet-b4 improves the top-1 accuracy from 76.3% of resnet-50 to 82.6% (+6.3%), under similar flops constraints.\n\n## examples\n\n* *initializing the model*:\n\n```python\n# models can be build with keras or tensorflow frameworks\n# use keras and tfkeras modules respectively\n# efficientnet.keras / efficientnet.tfkeras\nimport efficientnet.keras as efn \n\nmodel = efn.efficientnetb0(weights='imagenet')  # or weights='noisy-student'\n\n```\n\n* *loading the pre-trained weights*:\n\n```python\n# model use some custom objects, so before loading saved model\n# import module your network was build with\n# e.g. import efficientnet.keras / import efficientnet.tfkeras\nimport efficientnet.tfkeras\nfrom tensorflow.keras.models import load_model\n\nmodel = load_model('path/to/model.h5')\n```\n\nsee the complete example of loading the model and making an inference in the jupyter notebook [here](https://github.com/qubvel/efficientnet/blob/master/examples/inference_example.ipynb).\n\n## models\n\nthe performance of each model variant using the pre-trained weights converted from checkpoints provided by the authors is as follows:\n\n| architecture   | @top1* imagenet| @top1* noisy-student| \n| -------------- | :----: |:---:|\n| efficientnetb0 | 0.772  |0.788|\n| efficientnetb1 | 0.791  |0.815|\n| efficientnetb2 | 0.802  |0.824|\n| efficientnetb3 | 0.816  |0.841|\n| efficientnetb4 | 0.830  |0.853|\n| efficientnetb5 | 0.837  |0.861|\n| efficientnetb6 | 0.841  |0.864|\n| efficientnetb7 | 0.844  |0.869|\n\n**\\*** - topk accuracy score for converted models (imagenet `val` set)\n\n## installation\n\n### requirements\n\n* `keras >= 2.2.0` / `tensorflow >= 1.12.0`\n* `keras_applications >= 1.0.7`\n* `scikit-image`\n\n### installing from the source\n\n```bash\n$ pip install -u git+https://github.com/qubvel/efficientnet\n```\n\n### installing from pypi\n\npypi stable release\n\n```bash\n$ pip install -u efficientnet\n```\n\npypi latest release (with keras and tf.keras support)\n\n```bash\n$ pip install -u --pre efficientnet\n```\n\n## frequently asked questions\n\n* **how can i convert the original tensorflow checkpoints to keras hdf5?**\n\npick the target directory (like `dist`) and run the [converter script](./scripts) from the repo directory as follows:\n\n```bash\n$ ./scripts/convert_efficientnet.sh --target_dir dist\n```\n\nyou can also optionally create the virtual environment with all the dependencies installed by adding `--make_venv=true` and operate in a self-destructing temporary location instead of the target directory by setting `--tmp_working_dir=true`.\n\n## acknowledgements\ni would like to thanks community members who actively contribute to this repository:\n\n1) sasha illarionov ([@sdll](https://github.com/sdll)) for preparing automated script for weights conversion\n2) bj\u00f6rn barz ([@callidior](https://github.com/callidior)) for model code adaptation for keras and tensorflow.keras frameworks \n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "efficientnet",
  "package_url": "https://pypi.org/project/efficientnet/",
  "project_url": "https://pypi.org/project/efficientnet/",
  "project_urls": {
    "Homepage": "https://github.com/qubvel/efficientnet"
  },
  "release_url": "https://pypi.org/project/efficientnet/1.1.1/",
  "requires_dist": [
    "keras-applications (<=1.0.8,>=1.0.7)",
    "scikit-image",
    "pytest ; extra == 'test'"
  ],
  "requires_python": ">=3.0.0",
  "summary": "efficientnet model re-implementation. keras and tensorflow keras.",
  "version": "1.1.1",
  "releases": [],
  "developers": [
    "pavel_yakubovskiy",
    "qubvel@gmail.com"
  ],
  "kwds": "efficientnet imagenet efficientnets tensorflow efficientnetb2",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_efficientnet",
  "homepage": "https://github.com/qubvel/efficientnet",
  "release_count": 9,
  "dependency_ids": [
    "pypi_keras_applications",
    "pypi_pytest",
    "pypi_scikit_image"
  ]
}
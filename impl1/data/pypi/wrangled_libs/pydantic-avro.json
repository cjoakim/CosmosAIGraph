{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "[![python package](https://github.com/godatadriven/pydantic-avro/actions/workflows/python-package.yml/badge.svg)](https://github.com/godatadriven/pydantic-avro/actions/workflows/python-package.yml)\n[![codecov](https://codecov.io/gh/godatadriven/pydantic-avro/branch/main/graph/badge.svg?token=5l08goeraw)](https://codecov.io/gh/godatadriven/pydantic-avro)\n[![pypi version](https://badge.fury.io/py/pydantic-avro.svg)](https://badge.fury.io/py/pydantic-avro)\n[![codeql](https://github.com/godatadriven/pydantic-avro/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/godatadriven/pydantic-avro/actions/workflows/codeql-analysis.yml)\n\n# pydantic-avro\n\nthis library can convert a pydantic class to a avro schema or generate python code from a avro schema.\n\n### install\n\n```bash\npip install pydantic-avro\n```\n\n### pydantic class to avro schema\n\n```python\nimport json\nfrom typing import optional\n\nfrom pydantic_avro.base import avrobase\n\nclass testmodel(avrobase):\n    key1: str\n    key2: int\n    key2: optional[str]\n\nschema_dict: dict = testmodel.avro_schema()\nprint(json.dumps(schema_dict))\n\n```\n\n### avro schema to pydantic\n\n```shell\n# print to stdout\npydantic-avro avro_to_pydantic --asvc /path/to/schema.asvc\n\n# save it to a file\npydantic-avro avro_to_pydantic --asvc /path/to/schema.asvc --output /path/to/output.py\n```\n\n\n### install for developers\n\n###### install package\n\n- requirement: poetry 1.*\n\n```shell\npoetry install\n```\n\n###### run unit tests\n```shell\npytest\ncoverage run -m pytest  # with coverage\n# or (depends on your local env) \npoetry run pytest\npoetry run coverage run -m pytest  # with coverage\n```\n\n##### run linting\n\nthe linting is checked in the github workflow. to fix and review issues run this:\n```shell\nblack .   # auto fix all issues\nisort .   # auto fix all issues\npflake .  # only display issues, fixing is manual\n```\n",
  "docs_url": null,
  "keywords": "pydantic,avro",
  "license": "mit",
  "name": "pydantic-avro",
  "package_url": "https://pypi.org/project/pydantic-avro/",
  "project_url": "https://pypi.org/project/pydantic-avro/",
  "project_urls": {
    "Homepage": "https://github.com/godatadriven/pydantic-avro",
    "Repository": "https://github.com/godatadriven/pydantic-avro"
  },
  "release_url": "https://pypi.org/project/pydantic-avro/0.6.5/",
  "requires_dist": [
    "pydantic (>=1.4,<3.0)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "converting pydantic classes to avro schemas",
  "version": "0.6.5",
  "releases": [],
  "developers": [
    "peter.vanthof@godatadriven.com",
    "peter_van"
  ],
  "kwds": "pydantic_avro avro_to_pydantic badge pytest pydantic",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pydantic_avro",
  "homepage": "https://github.com/godatadriven/pydantic-avro",
  "release_count": 25,
  "dependency_ids": [
    "pypi_pydantic"
  ]
}
{
  "classifiers": [],
  "description": "# databricks-utils\n[![python version](https://img.shields.io/badge/python-3.6-blue.svg)](https://shields.io/)\n[![pyspark version](https://img.shields.io/badge/pyspark-2.3.1-blue.svg)](https://shields.io/)\n[![build status](https://travis-ci.org/e2fyi/databricks-utils.svg?branch=master)](https://travis-ci.org/e2fyi/databricks-utils)\n\n`databricks-utils` is a python package that provide several utility classes/func\nthat improve ease-of-use in databricks notebook.\n\n### installation\n```bash\npip install databricks-utils\n```\n\n### features\n- `s3bucket` class to easily interact with a [s3 bucket](https://aws.amazon.com/s3/) via [`dbfs`](https://docs.databricks.com/user-guide/dbfs-databricks-file-system.html) and databricks spark.\n\n- `vega_embed` to render charts from [vega](https://vega.github.io/vega/) and [vega-lite](https://vega.github.io/vega-lite/) specifications.\n\n### documentation\napi documentation can be found at [https://e2fyi.github.io/databricks-utils/](https://e2fyi.github.io/databricks-utils/).\n\n\n### quick start\n**s3bucket**  \n```python\nimport json\nfrom databricks_utils.aws import s3bucket\n\n# need to attach notebook's dbutils\n# before s3bucket can be used\ns3bucket.attach_dbutils(dbutils)\n\n# create an instance of the s3 bucket\nbucket = (s3bucket(\"somebucketname\", \"someaccesskey\", \"somesecretkey\")\n          .allow_spark(sc) # local spark context\n          .mount(\"somebucketname\")) # mount location name (resolves as `/mnt/somebucketname`)\n\n# show list of files/folders in the bucket \"resource\" folder\nbucket.ls(\"resource/\")\n\n# read in a json file from the bucket\ndata = json.load(open(bucket.local(\"resource/somefile.json\", \"r\")))\n\n# read from parquet via spark\ndataframe = spark.read.parquet(bucket.s3(\"resource/somedf.parquet\"))\n\n# umount\nbucket.umount()\n```\n\n**vega**  \n[vega](https://vega.github.io/vega/) and [vega-lite](https://vega.github.io/vega-lite/)\nare high-level grammars of interactive graphics. they provide concise json\nsyntax for rapidly generating visualizations to support analysis.\n\n```python\nfrom databricks_utils.vega import vega_embed\n\n# vega-lite spec for a bar chart\nspec = {\n  \"data\": {\n    \"values\": [\n      {\"a\": \"a\",\"b\": 28}, {\"a\": \"b\",\"b\": 55}, {\"a\": \"c\",\"b\": 43},\n      {\"a\": \"d\",\"b\": 91}, {\"a\": \"e\",\"b\": 81}, {\"a\": \"f\",\"b\": 53},\n      {\"a\": \"g\",\"b\": 19}, {\"a\": \"h\",\"b\": 87}, {\"a\": \"i\",\"b\": 52}\n    ]\n  },\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n    \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n  }\n}\n\n# plot out the vega chart in databricks notebook\ndisplayhtml(vega_embed(spec=spec))\n```\n\n### developer\n```bash\n# add a version to git tag and publish to pypi\n. add_tag.sh <version>\n```",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "databricks-utils",
  "package_url": "https://pypi.org/project/databricks-utils/",
  "project_url": "https://pypi.org/project/databricks-utils/",
  "project_urls": {
    "Homepage": "https://github.com/e2fyi/databricks-utils"
  },
  "release_url": "https://pypi.org/project/databricks-utils/0.0.7/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "ease-of-use utility tools for databricks notebooks.",
  "version": "0.0.7",
  "releases": [],
  "developers": [
    "eterna2@hotmail.com",
    "william_teo"
  ],
  "kwds": "databricks_utils databricks pyspark allow_spark pip",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_databricks_utils",
  "homepage": "https://github.com/e2fyi/databricks-utils",
  "release_count": 6,
  "dependency_ids": []
}
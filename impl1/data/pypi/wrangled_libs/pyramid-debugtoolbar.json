{
  "classifiers": [
    "framework :: pyramid",
    "intended audience :: developers",
    "license :: repoze public license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http :: wsgi"
  ],
  "description": "pyramid_debugtoolbar\n====================\n\n``pyramid_debugtoolbar`` provides a debug toolbar useful while you're\ndeveloping your pyramid application.\n\nnote that ``pyramid_debugtoolbar`` is a blatant rip-off of michael van\ntellingen's ``flask-debugtoolbar`` (which itself was derived from rob hudson's\n``django-debugtoolbar``). it also includes a lightly sanded down version of the\nwerkzeug debugger code by armin ronacher and team.\n\n\ndocumentation\n-------------\n\nthe documentation of the current stable release of ``pyramid_debugtoolbar`` is\navailable at\nhttps://docs.pylonsproject.org/projects/pyramid-debugtoolbar/en/latest/.\n\n\ndemonstration\n-------------\n\nfor a demonstration:\n\n- clone the ``pyramid_debugtoolbar`` trunk.\n\n  .. code-block:: bash\n\n      $ git clone https://github.com/pylons/pyramid_debugtoolbar.git\n\n- create a virtual environment in the workspace.\n\n  .. code-block:: bash\n\n      $ cd pyramid_debugtoolbar\n      $ python3 -m venv env\n\n- install the ``pyramid_debugtoolbar`` trunk into the virtualenv.\n\n  .. code-block:: bash\n\n      $ env/bin/pip install -e .\n\n- install the ``pyramid_debugtoolbar/demo`` package into the virtualenv.\n\n  .. code-block:: bash\n\n      $ env/bin/pip install -e demo\n\n- run the ``pyramid_debugtoolbar`` package's ``demo/demo.py`` file using the\n  virtual environment's python.\n\n  .. code-block:: bash\n\n      $ env/bin/python demo/demo.py\n\nvisit http://localhost:8080 in a web browser to see a page full of test\noptions.\n\n\ntesting\n-------\n\nif you have ``tox`` installed, run all tests with:\n\n.. code-block:: bash\n\n    $ tox\n\nto run only a specific python environment:\n\n.. code-block:: bash\n\n    $ tox -e py311\n\nif you don't have ``tox`` installed, you can install the testing requirements,\nthen run the tests.\n\n.. code-block:: bash\n\n    $ python3 -m venv env\n    $ env/bin/pip install -e \".[testing]\"\n    $ env/bin/py.test\n\n\nbuilding documentation\n----------------------\n\nif you have ``tox`` installed, build the docs with:\n\n.. code-block:: bash\n\n    $ tox -e docs\n\nif you don't have ``tox`` installed, you can install the requirements to build\nthe docs, then build them.\n\n.. code-block:: bash\n\n    $ env/bin/pip install -e \".[docs]\"\n    $ cd docs\n    $ make clean html sphinxbuild=../env/bin/sphinx-build\n\n4.10 (2022-01-02)\n-----------------\n\n- drop support for python 2.7, 3.4, 3.5, 3.6.\n\n- add support for python 3.9, 3.10, 3.11.\n\n- fix deprecated usages of ``threading.currentthread()``.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/374\n\n4.9 (2020-11-24)\n----------------\n\n- support python 3.9.\n\n- added a new session panel to track ingress and egress changes to a registered\n  isession interface across a request lifecycle.  by default, the panel only\n  operates on accessed sessions via a wrapped loader. users can activate the\n  session panel, via the toolbar settings or a per-request cookie, to track the\n  ingress and egress data on all requests.\n\n  * removed \"session\" section from request vars panel\n  * updated documentation and screenshots\n\n- ensured the headers panel only operates when a response object exists, to\n  create better stack traces if other panels encounter errors.\n\n- ``utils.dictrepr`` will now fallback to a string comparison of the keys if a\n  typeerror is encountered, which can occur under python3.\n\n  * a test was added to check to ensure sorting errors occur under python3.\n    if the test fails in the future, this workaround may no longer be needed.\n\n- updated toolbar javascript to better handle multiple user-activated panels.\n\n  * ``split`` and ``join`` functions now use the same delimiter.\n  * if the browser supports it, use a \"set\" to de-duplicate active panels.\n\n- inline comments on toolbar.js and toolbar.py to alert future developers on\n  the string delimiters and cookie names.\n\n\n4.8 (2020-10-23)\n----------------\n\n- added tracking of transactional sqlalchemy events to provide more insight\n  into database session behavior during a request's lifecycle.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/368\n\n4.7 (2020-10-22)\n----------------\n\n- added black, isort, and github actions to the pipeline. dropped travis-ci.\n\n- added some extra output to the \"request vars\" panel related to previewing\n  the body contents.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/367\n\n4.6.1 (2020-02-10)\n------------------\n\n- fix parser errors when injecting the toolbar into xhtml formatted pages.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/360\n\n4.6 (2020-01-20)\n----------------\n\n- show the full url in the tooltip on the requests panel.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/358\n\n4.5.2 (2020-01-06)\n------------------\n\n- stop accessing ``request.unauthenticated_userid`` in preparation for\n  pyramid 2.0 where it is deprecated.\n\n- catch a ``valueerror`` when json-serializing sqla objects for display.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/357\n\n4.5.1 (2019-11-08)\n------------------\n\n- add python 3.8 support.\n\n- fix internal deprecation warnings on python 3.7.\n\n4.5 (2018-09-09)\n----------------\n\n- drop python 3.3 support to align with pyramid and its eol.\n\n- add support for testing on python 3.7.\n\n- add a list of engines to the sqlalchemy panel if queries come from\n  multiple engines.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/334\n\n- when the toolbar intercepts an exception via\n  ``debugtoolbar.intercept_exc = true`` and returns the interactive\n  debugger, it will add ``request.exception`` and ``request.exc_info`` to\n  the request to indicate what exception triggered the response. this helps\n  upstream tweens such as ``pyramid_retry`` to possibly retry the requests.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/343\n\n- stop parsing the ``request.remote_addr`` value when it contains chain of\n  comma-separated ip-addresses. reject these values and emit a warning\n  to sanitize the value upstream.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/342\n\n\n4.4 (2018-02-19)\n----------------\n\n- reduce the log output for squashed exceptions and put them at the info\n  level so they can be filtered out if desired.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/328 and\n  https://github.com/pylons/pyramid_debugtoolbar/pull/329\n\n4.3.1 (2018-01-28)\n------------------\n\n- javascript syntax fixes for browsers that don't support trailing commas.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/326\n\n4.3 (2017-07-14)\n----------------\n\n- the logging panel indicator is now color-coded to indicate the severity of\n  the log messages as well as the number of messages at said level. there may\n  be more messages, but the most severe show up in the annotation.\n\n  this feature also added a new ``nav_subtitle_style`` hook to the\n  ``debugpanel`` api for adding a custom css class to the subtitle tag.\n\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/322\n\n4.2.1 (2017-06-30)\n------------------\n\n- fix a bug with the logging of squashed exceptions on python < 3.5.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/320\n\n4.2 (2017-06-21)\n----------------\n\nthis release contains a rewrite of the underlying exception / traceback\ntracking machinery and fixes regressions caused by the 4.1 release that\nbroke the interactive debugger.\nsee https://github.com/pylons/pyramid_debugtoolbar/pull/318\n\n- tracebacks are now tied to the per-request toolbar object one-to-one.\n  a request may have only one traceback. previously they actually stuck\n  around for the entire lifetime of the app instead of being collected by\n  the max_request_history setting.\n\n- the routes for exceptions are standardized to look similar to the sqla ajax\n  routes. for example, ``/{request_id}/exception`` instead of\n  ``/exception?token=...&tb=...`` and\n  ``/{request_id}/exception/execute/{frame_id}?cmd=...`` instead of\n  ``/exception?token=...&tb=...&frm=...&cmd=...``.\n\n- fixed the url generation for the traceback panel link at the bottom of the\n  traceback... it was actually empty previously - it got lost somewhere along\n  the way.\n\n- /favicon.ico is no longer specially handled.. it's just part of\n  ``exclude_prefixes`` like anything else that you want to exclude.\n\n- ``request.pdtb_history`` is available for toolbar requests (mostly ajax\n  requests or panel rendering).\n\n- removed the unused history predicate.\n\n- url generation was broken in the ``debugger.js`` but that's fixed now so the\n  execute/source buttons work in tracebacks.\n\n- drop the license from ``license.txt`` for the removed ipaddr module in 4.1.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/315\n\n4.1 (2017-05-30)\n----------------\n\n- debug squashed exceptions! if you register an exception view for an exception\n  it will render a response. the toolbar will see the squashed exception and\n  enable the ``traceback`` tab in the toolbar and emit a message on the\n  console with the url. you can then debug the exception while returning the\n  original response to the user.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/308\n\n- remove the vendored ipaddr package and use the stdlib ipaddress module on\n  python 3.3+. on python < 3.3 the ipaddress module is a dependency from pypi.\n  this dependency uses environment markers and thus requires pip 8.1.2+.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/304\n\n- display a warning if the toolbar is used to display a request that no longer\n  exists. this may be because the app was restarted or the request fell off\n  the end of the ``max_request_history``.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/305\n\n- enable testing on python 3.6.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/306\n\n- drop the link-local suffix off of local interfaces in order to accept\n  requests on them. see https://github.com/pylons/pyramid_debugtoolbar/pull/307\n\n- headers panel defers its processing to a finished callback. this is best\n  effort of displaying actual headers, since they could be modified by\n  a response callback or another finished callback.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/310\n\n- query log inside sqlalchemy panel does not cause horizontal scrolling\n  anymore, which should improve ux.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/311\n\n4.0.1 (2017-05-09)\n------------------\n\n- fix sticky panel functionality that was broken by other cleanup in the 4.0\n  release. see https://github.com/pylons/pyramid_debugtoolbar/pull/297\n\n4.0 (2017-05-03)\n----------------\n\n- the config settings ``debugtoolbar.panels``, ``debugtoolbar.extra_panels``,\n  ``debugtoolbar.global_panels`` and ``debugtoolbar.extra_global_panels``\n  now all accept panel names as defined in\n  ``pyramid_debugtoolbar.panels.debugpanel.name``. thus you may use names\n  such as ``performance``, ``headers``, etc. these settings still support the\n  dotted python path but it is suggested that panels now support being\n  included via ``debugtoolbar.includes`` and ``config.add_debugtoolbar_panel``\n  instead such that they are automatically added to the toolbar.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/288\n\n- add a new ``config.add_debugtoolbar_panel`` directive that can be invoked\n  from ``includeme`` functions included via the ``debugtoolbar.includes``\n  setting. these panels are automatically added to the default panel list\n  and should become the way to define toolbar panels in the future.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/283\n\n- add a new ``config.inject_parent_action`` directive that can be invoked\n  from ``includeme`` functions included via the ``debugtoolbar.includes``\n  setting. these actions are invoked on the parent config just before it is\n  created such that actions can inspect / wrap existing config.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/288\n\n- added \"sticky\" panel functionality to allow a selected panel to persist\n  across pageviews using cookies.  if a cookied panel does not have content\n  available for display, the first non-disabled panel will be displayed. if a\n  cookied panel is not enabled on the toolbar, the first non-disabled panel will\n  be displayed and will become the new default panel.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/272\n\n- added `customloggerfactory` to javascript, used in the development of pr 272.\n  this javascript factory allows panel developers and maintainers to use verbose\n  console logging during development, partitioned by feature, and silence it for\n  deployment while still leaving the logging lines activated.\n\n- the toolbar registers a ``beforerender`` subscriber in your application to\n  monitor the rendering of templates. previously it was possible that the\n  toolbar would miss rendering information because of the order in which the\n  subscribers were registered. the toolbar now waits until the application\n  is created and then appends a new subscriber that encapsulates the\n  your application's ``beforerender`` subscribers.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/284\n\n- remove duplicate ``id=\"${panel.dom_id}\"`` tags in history tab html. only\n  the top-level ``<li>`` tag has the id now.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/285\n\n- emit a warning and disable the toolbar if the app is being served by\n  a forking / multiprocess wsgi server that sets\n  ``environ['wsgi.multiprocess']`` to ``true``. this should help avoid\n  confusing issues in certain deployments like gunicorn and uwsgi multiprocess\n  modes. see https://github.com/pylons/pyramid_debugtoolbar/pull/286\n\n- the toolbar tween is always placed explicitly over the pyramid_tm tween.\n\n- refactored all debugtoolbar panels to be included using\n  ``config.add_debugtoolbar_panel`` and per-panel ``includeme`` functions.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/288\n\n- exposed a ``request.toolbar_panels`` dictionary which can be used from within\n  ``debugpanel.render_content`` and ``debugpanel.render_vars`` in order to\n  introspect and use the data generated by other panels when rendering the\n  panel. see https://github.com/pylons/pyramid_debugtoolbar/pull/291\n\n- support streaming new requests on microsoft edge and internet explorer 8+ by\n  using a server-sent-events polyfill.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/293\n\n3.0.5 (2016-11-1)\n-----------------\n\n- change static toolbar asset to accommodate color blindness.\n  see https://github.com/pylons/pyramid_debugtoolbar/issues/273\n\n3.0.4 (2016-07-26)\n------------------\n\n- 3.0.3 was a brownbag release missing static assets.\n\n3.0.3 (2016-07-26)\n------------------\n\n- fix another regression where the toolbar was modifying requests to the\n  toolbar itself such that the ``script_name`` and ``path_info`` were\n  different after handling the request than before.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/269\n\n3.0.2 (2016-07-02)\n------------------\n\n- fix a regression with inspecting requests with a session that is loaded\n  before the toolbar executes.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/268\n\n3.0.1 (2016-05-20)\n------------------\n\n- avoid touching ``request.unauthenticated_userid``,\n  ``request.authenticated_userid`` and ``request.effective_principals`` unless\n  they are accessed by the user in the normal request lifecycle. this avoids\n  some issues where unauthenticated requests could trigger side effects on\n  your authentication policy or access the properties outside of the\n  expected lifecycle of the properties.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/263\n\n3.0 (2016-04-23)\n----------------\n\n- the toolbar is now a completely standalone application running inside the\n  tween. there are several minor incompatibilities and improvements related\n  to this extra isolation:\n\n  1. ``pyramid_mako`` and the ``.dbtmako`` renderer are no longer included\n     in the parent application (your app).\n  2. panels must be extra careful now that they only render templates inside\n     of the ``render_vars`` and ``render_content`` functions. these are the\n     only functions in which the ``request`` object is for rendering the\n     toolbar panel.\n  3. the toolbar will not be affected by any global security policies your\n     application may put in place other than via\n     ``config.set_debugtoolbar_request_authorization``.\n     **never run the toolbar in production**\n\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/253\n\n- updated bootstrap to v3.3.6, refactored static assets and dropped require.js.\n  each page now depends on what it needs without extra dependencies included\n  in the debugger pages.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/259\n\n- enabled interactive tablesorting on table columns.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/256\n\n- setuptools-git is now required to install the codebase in non-editable mode.\n\n2.5 (2016-04-20)\n----------------\n\n- drop python 2.6 and python 3.2 support.\n\n- add python 3.5 support.\n\n- remove inline javascript from injected pages to work better with any\n  content security policy that may be in place.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/250\n\n- added the packages' `.location` to the \"versions\" panel so developers can tell\n  which version of each package is actually being used.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/240\n\n- upon exception do a better job guessing the charset of the sourcefile when\n  reading it in to display tracebacks.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/244\n\n- removed jquery code in the toolbar referring to a dom node called 'mytab',\n  which doesn't seem to exist anymore.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/247\n\n- updated the \"request vars\" panel:\n  1. show additional values that were previously missing\n  2. sections upgraded to link to pyramid documentation when possible\n  3. mako reformatted into \"defs\" for simpler reorganization in the future\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/241\n\n- fix to prevent the toolbar from loading the session until it is actually\n  accessed by the user. this avoids unnecessary parsing of the session object\n  as well as waiting to parse it until later in the request which may meet\n  more expectations of the session factory.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/249\n\n2.4.2 (2015-10-28)\n------------------\n\n- fix a long-standing bug in which log messages were not rendered until\n  the end of the response. by this time the arguments passed to the logger\n  may no longer be valid (such as sqlalchemy managed objects) and you would\n  see a ``detachedinstanceerror``.\n  see https://github.com/pylons/pyramid_debugtoolbar/issues/188\n\n2.4.1 (2015-08-12)\n------------------\n\n- remove the extra query hash constructed when indexing into sql queries via\n  url as it was unused after releasing 2.4.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/232\n\n2.4 (2015-06-04)\n----------------\n\nthis release changes some details of the panel api, so if you are writing\nany custom panels for the toolbar please review the changes.\n\n- document the cookie used to activate panels on a per-request basis. it is\n  possible to specify the cookie per-request to turn on certain panels. this\n  is used by default in the browser, but may also be used on a per-request\n  basis by curl or other http apis.\n\n- add new ``debugtoolbar.active_panels`` setting which can specify certain\n  panels to be always active.\n\n- modify ``debugpanel.name`` to be a valid python identifier, used for\n  settings and lookup.\n\n- the toolbar no longer will clobber the ``request.id`` property. it now\n  namespaces its usage as ``request.pdtb_id``, freeing up ``request.id``\n  for applications.\n\n- add a lock icon next to the request method in the sidebar if the request\n  was accessed over https.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/213\n\n- update to bootstrap 3.1.1.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/213\n\n- fix display of post variables where the same key is used multiple times.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/210\n\n- fix auth callback so it protects the toolbar views. auth system is tested\n  now. see https://github.com/pylons/pyramid_debugtoolbar/pull/226\n\n- convert sqlalchemy views to obtain the query and params internally; this\n  allows executing queries with parameters that are not serializable.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/227\n\n- adds pyramid version tests and bumps required pyramid version to 1.4.\n  the pyramid_mako dependency requires 1.3, but debugtoolbar also uses\n  ``invoke_subrequest`` which was added in 1.4. the ``invoke_subrequest`` call\n  was added\n  in pyramid_debugtoolbar 2.0; if you need pyramid 1.3 compatibility, try\n  an older version.\n  see https://github.com/pylons/pyramid_debugtoolbar/issues/183\n  and https://github.com/pylons/pyramid_debugtoolbar/pull/225\n\n2.3 (2015-01-05)\n----------------\n\n- support a ``debugtoolbar.includes`` setting which will allow addons to\n  extend the toolbar's internal pyramid application with custom logic.\n  see https://github.com/pylons/pyramid_debugtoolbar/issues/207\n\n- fixed an issue when the toolbar is not mounted at the root of the domain.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/201\n\n- fixed an issue where the `button_css` was not pulled from the settings.\n  added support for configurable `max_request_history` and\n  `max_visible_requests`.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/206\n\n2.2.2 (2014-11-09)\n------------------\n\n- brownbagged 2.2.1, forgot to include the templates!\n\n2.2.1 (2014-11-09)\n------------------\n\n- several internal links were not relative causing them to fail when the\n  app is mounted at a path prefix. see\n  https://github.com/pylons/pyramid_debugtoolbar/pull/185 and\n  https://github.com/pylons/pyramid_debugtoolbar/pull/196\n\n- pin pygments<2 on 3.2 as the new release has dropped support.\n\n2.2 (2014-08-12)\n----------------\n\n- avoid polluting user code with unnecessary toolbar css just to show the\n  button. see https://github.com/pylons/pyramid_debugtoolbar/pull/174\n\n- inject the toolbar button into ``application/xhtml+xml`` requests.\n  see https://github.com/pylons/pyramid_debugtoolbar/pull/176\n\n- make the toolbar accessible before another request has been served by the\n  application. see https://github.com/pylons/pyramid_debugtoolbar/pull/171\n\n\n2.1 (2014-05-22)\n----------------\n\n- add new \"debugtoolbar.\" configuration settings that allow enabling or\n  disabling various pyramid knobs in a users .ini file. this for instance\n  allows easy enabling/disabling of template reloading for the debugtoolbar.\n\n- allow the toolbar to display always, even when the parent application\n  is using a default permission.\n  see https://github.com/pylons/pyramid_debugtoolbar/issues/147\n\n- stabilize and document the ``pyramid_debugtoolbar.panels.debugpanel``\n  api to allow developers to create their own panels.\n\n- add new ``debugtoolbar.extra_panels`` and\n  ``debugtoolbar.extra_global_panels`` configuration settings to make it\n  simpler to support custom panels without overwriting the default panels.\n\n2.0.2 (2014-02-13)\n------------------\n\n- fix breaking bugs when run under py3k.\n\n2.0.1 (2014-02-12)\n------------------\n\n- fixes a bug in 2.0 expecting pyramid_beaker to be around.\n\n2.0 (2014-02-12)\n----------------\n\n- the toolbar has undergone a major refactoring to mitigate the effects of\n  the toolbar's internal behavior on the application to which it is connected\n  and make it possible to inspect arbitrary requests. it is now available at\n  ``/_debug_toolbar`` and can be used to monitor any and all requests serviced\n  by the pyramid application that it is wrapping, including non-html responses.\n\n  the toolbar will live-update (on conforming browsers via server sent events)\n  when requests come into the pyramid application, and can be used to debug and\n  inspect multiple requests simultaneously.\n\n1.0.9 (2013-10-20)\n------------------\n\n- use new ``pyramid_mako`` configuration directive add_mako_renderer.\n\n1.0.8 (2013-09-09)\n------------------\n\n- depend on ``pyramid_mako`` (mako support will be split out of pyramid in\n  1.5+).\n\n1.0.7 (2013-08-29)\n------------------\n\n- drop support for python 2.5.\n\n- fix computation of proxy addresses.  see\n  https://github.com/pylons/pyramid_debugtoolbar/pull/100 .\n\n- make templates compatible with no-markupsafe mako under python 3.2.\n\n- decode platform name to unicode using utf-8 encoding to cope with nonascii\n  characters in platform (e.g. fedora's schrodinger's cat).  see\n  https://github.com/pylons/pyramid_debugtoolbar/pull/98\n\n- raise a ``pyramid.exceptions.urldecodeerror`` instead of a raw\n  unicodedecodeerror when the request path cannot be decoded.  see\n  https://github.com/pylons/pyramid/issues/1057.\n\n- added new configuration option: `debugtoolbar.show_on_exc_only` (\n  default=false).  if set to true (`debugtoolbar.show_on_exc_only = true`)\n  the debugtoolbar will only be injected into the response in case a\n  exception is raised. if the response is processed without exception the\n  returned html code is not changed at all.\n  see https://github.com/pylons/pyramid_debugtoolbar/issues/54\n\n- fix various unicodedecodeerror exceptions.\n\n1.0.6 (2013-04-17)\n------------------\n\n- packaging release only, no code changes.  1.0.5 was a brownbag release due to\n  missing directories in the tarball.\n\n1.0.5 (2013-04-17)\n------------------\n\n- parse ips correctly when request.remote_addr is a comma separated list\n  of proxies ips.\n\n- if you are also using require.js, the debug toolbar's version of jquery\n  will no longer conflict with your application's version of the library.\n\n- use the \"n\" filter to disable default_filters when including the raw\n  sql in links, leaving only the \"u\" filter (url escaping).\n\n- support for per-request authorization of toolbar middleware via\n  ``config.set_debugtoolbar_request_authorization(callback)`` where callback\n  accepts request object and returns boolean value whether toolbar is enabled\n  or not.\n\n- short term fix for preventing error when converting binary query params to json.\n\n- fix sqlalchemy query duration from microseconds to milliseconds.\n\n1.0.4 (2013-01-05)\n------------------\n\n- add a ``debugtoolbar.excluded_prefixes`` setting.  when a url path prefix\n  matches one of these prefixes, the toolbar will not be shown on the resulting\n  page.\n\n- show the prompt and little text file icons show all the time, instead of\n  only on hover.\n\n- do not set max-height on result boxes (which result in nested scroll on\n  the page, which makes it hard to find information quickly).\n\n- when an expression result is long, do not truncate with an ellipsis, which\n  requires one more click to get at the information i need.\n\n- support ``pip install`` from the github repository by adding all static files\n  required to install in the ``package_data`` ``setup.py``. setuptools usually\n  uses subversion or cvs to tell it what static files it needs to package up\n  for egg distribution, but does not support reading git metadata.\n\n- the debug toolbar now use a patched version of require.js with a distinct\n  private name that cannot clash with the dojo loader or other incompatible\n  versions of require that may already be loaded on the page. you no longer\n  need to add the toolbar to your own require.js to make it work.\n\n1.0.3 (2012-09-23)\n------------------\n\n- the ``valid_host`` custom predicate used internally by pyramid_debugtoolbar\n  views didn't use newer \"ipaddr\"-based logic.  symptom: some views may have\n  been incorrectly inaccessible if you used a network mask as a\n  \"debugtoolbar.hosts\" option.\n\n- the debug console now works with google app engine.\n\n- the debug console now adds a shortcut for accessing the last result through\n  ``_``.\n\n1.0.2 (2012-04-19)\n------------------\n\n- moved the toolbar and debugger javascript files to use requirejs for\n  better dependency loading and module isolation to play better with mutiple\n  library versions. recurrent problem was with async loading and application\n  specific jquery library where the expected version was overrided by the\n  toolbar one.\n\n  if you are already using requirejs and want the toolbar to load, just add it\n  to your path and module::\n\n    require.config({\n      paths: {\n        \"jquery\": \"jquery-1.7.2.min\",\n        \"toolbar\": \"/_debug_toolbar/static/js/toolbar\"\n      }\n    });\n\n    require([\"jquery\", \"toolbar\"], function($, toolbar) {\n      $(function() {\n        // your module\n      });\n    });\n\n1.0.1 (2012-03-27)\n------------------\n\n- if ``request.remote_addr`` is ``none``, disable the toolbar.\n\n1.0 (2012-03-17)\n----------------\n\n- don't url-quote sql parameters on sqlalchemy panel.\n\n- allow hostmask values as ``debugtoolbar.hosts`` entries\n  (e.g. ``192.168.1.0/24``).\n\n0.9.9.1 (2012-02-22)\n--------------------\n\n- when used with pyramid 1.3a9+, views, routes, and other registrations made\n  by ``pyramid_debugtoolbar`` itself will not show up in the introspectables\n  panel.\n\n0.9.9 (2012-02-19)\n------------------\n\n- try to take advantage of makorendererfactoryhelper in pyramid 1.3a8+.  if\n  we can do this, the toolbar templates won't be effected by normal mako\n  settings.  the most visible change is that toolbar mako templates now have\n  a ``dbtmako`` extension.\n\n0.9.8 (2012-01-09)\n------------------\n\n- show request headers instead of mistakenly showing environ values in\n  headers panel under \"request headers\".  this also fixes a potential\n  unicodedecodeerror.\n\n- set content_length on response object when we regenerate app_iter while\n  replacing original content.\n\n0.9.7 (2011-12-09)\n------------------\n\n- the performance panel of the debugtoolbar used a variable named\n  ``function_calls`` which was not initialised when stats are not\n  collected. this caused a ``nameerror`` when mako rendered the template with\n  the ``strict_undefined`` option.\n\n- fix python 3 compatibility in sqlalchemy panel.\n\n- make sqlalchemy explain and select work again.\n\n0.9.6 (2011-12-09)\n------------------\n\n- added \"introspection\" panel; active only under pyramid 1.3dev+ (requires\n  pyramid introspection subsystem).\n\n- address heisenbug reported where performance panel template variables cause\n  unexpected results.  can't repeat, but reporter indicates the fix works for\n  him, so hail marying.  see\n  https://github.com/pylons/pyramid_debugtoolbar/commit/5719c97ea2a3a41fc01e261403d0167cc38f3b49\n\n0.9.5 (2011-11-12)\n------------------\n\n- adjust tox setup to test older pyramid and webob branches under 2.5.\n\n- convert all templates to mako.\n\n- don't rely on ``pyramid.compat.json``.\n\n- add tweens toolbar panel.\n\n0.9.4 (2011-09-28)\n------------------\n\n- upgrade to jquery 1.6.4 and tablesorter plugin 2.0.5b\n\n- introduced new setting ``debugtoolbar.button_style``. which can be used\n  to override the default style (top:30px) set by ``toolbar.css``.\n\n- compatible with python 3.2 (requires pyramid 1.3dev+).\n\n- appease settings values that were sensitive to ``__getattr__`` in the\n  settings debug panel (e.g. mongodb databases).  see\n  https://github.com/pylons/pyramid_debugtoolbar/issues/30\n\n0.9.3 (2011-09-12)\n------------------\n\n- all debug toolbar panels and underlying views are now always executable by\n  entirely anonymous users, regardless of the default permission that may be\n  in effect (use the ``no_permission_required`` permission for all\n  debugtoolbar views).\n\n- toolbar cookie settings name changed (from fldt to p_dt), to avoid messing\n  up folks who use both the flask debugtoolbar and pyramid's.\n\n- fix ie7 and ie8 renderings of the toolbar.\n\n0.9.2 (2011-09-05)\n------------------\n\n- log an exception body to the debug toolbar logger when an exception\n  happens.\n\n- don't reset the root logger level to notset in the logging panel (changes\n  console logging output to sanity again).\n\n0.9.1 (2011-08-30)\n------------------\n\n- the ``debugtoolbar.intercept_exc`` setting is now a tri-state setting.  it\n  can be one of ``debug``, ``display`` or ``false``.  ``debug`` means show\n  the pretty traceback page with debugging controls.  ``display`` means show\n  the pretty traceback package but omit the debugging controls.  ``false``\n  means don't show the pretty traceback page.  for backwards compatibility\n  purposes, ``true`` means ``debug``.\n\n- a url is now logged to the console for each exception when\n  ``debugtoolbar.intercept_exc`` is ``debug`` or ``display``.  this url leads\n  to a rendering of the \"pretty\" traceback page for an exception.  this is\n  useful when the exception was caused by an ajax or non-human-driven\n  request.  this url is also injected into the pretty traceback page (at the\n  bottom).\n\n- \"unfixed\" indentation of sql explain done in 0.9, it broke the explain page\n  when a column value isn't a string.\n\n0.9 (2011-08-29)\n----------------\n\n- fixed indentation of sql explain by replacing spaces with html spaces.\n\n- ``response.charset`` in some undefined user-reported cases may be ``none``,\n  which would lead to an exception when attempting to render the debug\n  toolbar.  in such cases we now assume the charset is utf-8.\n\n- some renderings of the request vars and renderer values would raise an\n  uncaught exception.\n\n0.8 (2011-08-24)\n----------------\n\n- try to cope with braindead debian python installs which package the\n  ``pstats`` module separately from python for god only knows what reason.\n  turn the performance panel off in this case instead of crashing.\n\n0.7 (2011-08-24)\n----------------\n\n- docs-only changes.\n\n0.6 (2011-08-21)\n----------------\n\n- do not register an alias when registering an implicit tween factory (compat\n  with future 1.2 release).\n\n0.5 (2011-08-18)\n----------------\n\n- the toolbar didn't work under windows due to usage of the ``resource``\n  module: https://github.com/pylons/pyramid_debugtoolbar/issues/12\n\n0.4 (2011-08-18)\n----------------\n\n- change the default value for ``debugtoolbar.intercept_redirects`` to\n  ``false.`` rationale: it confuses people when first developing if the\n  application they're working on has a home page which does a redirection.\n\n0.3 (2011-08-15)\n----------------\n\n- request vars panel would cause a unicodedecodeerror under some\n  circumstances (see https://github.com/pylons/pyramid_debugtoolbar/issues/9).\n\n- dynamicize urls for sqlalchemy subpanels.\n\n- require \"pyramid>=1.2dev\" for install; the trunk is now \"1.2dev\" instead of\n  \"1.1.1dev\".\n\n- requires trunk after 2011-08-14: wsgihttpexception \"prepare\" method and\n  ``alias`` param to add_tween, beforerender event has no \"_system\" attr.\n\n- fix memory leak.\n\n- html http exceptions now are rendered with the debug toolbar div.\n\n- added notfound page to demo app and selenium tests.\n\n0.2 (2011-08-07)\n----------------\n\n- add sqlalchemy \"explain\" and \"select\" pages (available from the sqlalchemy\n  panel next to each query shown in the page).\n\n- requires newer pyramid trunk (checked out on 2011-08-07 or later).\n\n- add a link to the sqlalchemy demo page from the demo app index page.\n\n0.1 (2011-07-30)\n----------------\n\n- initial release.\n",
  "docs_url": null,
  "keywords": "wsgi,pylons,pyramid,transaction",
  "license": "bsd",
  "name": "pyramid-debugtoolbar",
  "package_url": "https://pypi.org/project/pyramid-debugtoolbar/",
  "project_url": "https://pypi.org/project/pyramid-debugtoolbar/",
  "project_urls": {
    "Homepage": "https://docs.pylonsproject.org/projects/pyramid-debugtoolbar/en/latest/"
  },
  "release_url": "https://pypi.org/project/pyramid-debugtoolbar/4.10/",
  "requires_dist": [
    "pyramid (>=1.4)",
    "pyramid-mako (>=0.3.1)",
    "Pygments",
    "Sphinx (>=1.7.5) ; extra == 'docs'",
    "pylons-sphinx-themes (>=0.3) ; extra == 'docs'",
    "setuptools ; extra == 'docs'",
    "WebTest ; extra == 'testing'",
    "pytest ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "sqlalchemy ; extra == 'testing'",
    "webob ; extra == 'testing'"
  ],
  "requires_python": ">=3.7",
  "summary": "a package which provides an interactive html debugger for pyramid application development",
  "version": "4.10",
  "releases": [],
  "developers": [
    "chris_mcdonough",
    "pylons-discuss@googlegroups.com"
  ],
  "kwds": "pyramid_debugtoolbar debugtoolbar _debug_toolbar add_debugtoolbar_panel debugger",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_pyramid_debugtoolbar",
  "homepage": "https://docs.pylonsproject.org/projects/pyramid-debugtoolbar/en/latest/",
  "release_count": 63,
  "dependency_ids": [
    "pypi_pygments",
    "pypi_pylons_sphinx_themes",
    "pypi_pyramid",
    "pypi_pyramid_mako",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_setuptools",
    "pypi_sphinx",
    "pypi_sqlalchemy",
    "pypi_webob",
    "pypi_webtest"
  ]
}
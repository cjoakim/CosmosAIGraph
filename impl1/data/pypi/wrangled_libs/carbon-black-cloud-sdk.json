{
  "classifiers": [
    "environment :: web environment",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: security",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# vmware carbon black cloud python sdk\r\n\r\n**latest version:** 1.5.0\r\n<br>\r\n**release date:** october 24, 2023\r\n\r\n[![coverage status](https://coveralls.io/repos/github/carbonblack/carbon-black-cloud-sdk-python/badge.svg?t=id6baf)](https://coveralls.io/github/carbonblack/carbon-black-cloud-sdk-python)\r\n[![codeship status for carbonblack/carbon-black-cloud-sdk-python](https://app.codeship.com/projects/9e55a370-a772-0138-aae4-129773225755/status?branch=develop)](https://app.codeship.com/projects/402767)\r\n\r\n\r\n\r\n## recent updates\r\n\r\nview the latest release notes [here](https://github.com/carbonblack/carbon-black-cloud-sdk-python/releases).\r\n\r\n\r\n## license\r\n\r\nuse of the carbon black cloud python sdk is governed by the license found in [license](https://github.com/carbonblack/carbon-black-cloud-sdk-python/blob/develop/license).\r\n\r\n## support\r\n\r\n1. view all api and integration offerings on the [developer network](https://developer.carbonblack.com) along with reference documentation, video tutorials, and how-to guides.\r\n2. use the [developer community forum](https://community.carbonblack.com/) to discuss issues and get answers from other api developers in the carbon black community.\r\n3. create a github issue for bugs and change requests or create a ticket with [carbon black support](http://carbonblack.com/resources/support/).\r\n\r\n## documentation\r\n\r\nvisit [readthedocs](https://carbon-black-cloud-python-sdk.readthedocs.io/en/latest/) for this project's documentation.\r\n\r\n## requirements\r\n\r\nthe carbon black cloud python sdk is design to work on python 3.8 and above.\r\n\r\nall requirements are installed as part of `pip install carbon-black-cloud-sdk`. if you're planning on pushing changes to the carbon black cloud python sdk, the following can be used after cloning the repo `pip install -r requirements.txt`\r\n\r\n### carbon black cloud\r\n\r\nat least one carbon black cloud product is required to use this sdk:\r\n\r\n* [platform](https://developer.carbonblack.com/reference/carbon-black-cloud/platform-apis/)\r\n* [endpoint standard](https://developer.carbonblack.com/reference/carbon-black-cloud/cb-defense/)\r\n* [audit and remediation](https://developer.carbonblack.com/reference/carbon-black-cloud/cb-liveops/)\r\n* [enterprise edr](https://developer.carbonblack.com/reference/carbon-black-cloud/cb-threathunter/)\r\n* [workload](https://developer.carbonblack.com/reference/carbon-black-cloud/workload-protection/)\r\n\r\n### python packages\r\n\r\n- requests\r\n- pyyaml\r\n- python-dateutil\r\n- schema\r\n- solrq\r\n- jsonschema\r\n- validators\r\n- keyring (for macos)\r\n\r\nif developing the sdk, you also need:\r\n\r\n- pytest==5.4.2\r\n- pymox==1.0.0\r\n- coverage==5.1\r\n- coveralls==2.0.0\r\n- flake8==3.8.1\r\n- flake8-colors==0.1.6\r\n- flake8-docstrings==1.5.0\r\n- pre-commit>=2.15.0\r\n\r\n\r\n## getting started\r\n\r\nvisit the [getting started guide](https://carbon-black-cloud-python-sdk.readthedocs.io/en/latest/getting-started) for an example of authenticating and making an api call using the sdk.\r\n\r\n### setting the user-agent\r\n\r\nthe sdk supports custom user-agent's when making api calls. this allows you to identify yourself when using the sdk. see [setting the user-agent](https://carbon-black-cloud-python-sdk.readthedocs.io/en/latest/getting-started#setting-the-user-agent) section of the documentation for more information.\r\n\r\n## developing improvements for the carbon black cloud python sdk\r\n\r\nuse the following steps if you want to provide additional examples, fix a bug, or add a feature to the sdk.\r\n\r\n### installing for sdk development\r\n\r\nyou will need to fork the repo in order to create pull requests when submitting code for review. for details on forking a repo, see [here](https://help.github.com/en/github/getting-started-with-github/fork-a-repo).\r\n\r\n```\r\ngit clone https://github.com/{fork-name}/carbon-black-cloud-sdk-python\r\ncd carbon-black-cloud-sdk-python\r\npip install -r requirements.txt\r\n```\r\n\r\n**note: before contributing any code please make sure to read the [contributing](contributing.md) page.**\r\n\r\nif you want to test/execute the example scripts from the repo then install the sdk with the following command. this will install the sdk in editable mode so changes to the repo modify the installed package.\r\n\r\n```\r\npip install -e .\r\n```\r\n\r\n**note: the above command needs to be run from the base folder of the repo**\r\n\r\n\r\n### running the sdk tests\r\n\r\nfrom the parent directory `carbon-black-cloud-sdk-python`, run the command `pytest`.\r\n\r\n### building the documentation\r\n\r\n#### locally\r\nreadthedocs hosts [the documentation for the sdk](https://carbon-black-cloud-python-sdk.readthedocs.io/en/latest/). if you make changes to the sdk that require an update to the documentation, first install the documentation packages from pip:\r\n\r\n```\r\npip install sphinxcontrib-apidoc sphinx_rtd_theme sphinx-copybutton\r\n```\r\n\r\nthen, build the docs locally with the following commands:\r\n\r\n```\r\ncd docs\r\nmake html\r\n```\r\n\r\nnote that the module rst files such as ```docs/cbc_sdk.platform.rst ``` are handcrafted to control layout.\r\n* this command will generate new version, but it is not necessary and changes should not be added to the repository.\r\n* all pull requests will trigger a build of the documentation which can be viewed from read the docs --> builds.\r\n```\r\nsphinx-apidoc -f -o docs src/cbc_sdk\r\n```\r\n\r\nthe documentation is built in `docs/_build/html`.\r\n\r\n**n.b.:** if your documentation pages appear to generate incorrectly, check to see if you received the warning message\r\n`no module named 'cbc_sdk'`.  if so, set your `pythonpath` to include the `src/` subdirectory of the sdk project\r\ndirectory before running `make html`, or the equivalent command `sphinx-build -m html . _build`.\r\n\r\n#### pull-requests\r\n\r\nthe webhook with readthedocs will create a build of the branch and report on the status of the build to the github pull request\r\n\r\n#### using docker\r\n\r\nbuild the documentation by running:\r\n```shell\r\n$ docker run -p 7000:7000 -it $(docker build -f ./docker/docs/dockerfile . -q) make livehtml\r\n```\r\n\r\n### development flow\r\n\r\nto begin a code change, start by creating a branch off of the develop branch.\r\n```\r\ngit checkout develop\r\ngit checkout -b {branch-name}\r\n```\r\n\r\nwhen the feature or bug fix is finished you will need to create a pull request to the carbonblack repo, the following will push your changes to github.\r\n```\r\ngit push {remote} {branch-name}\r\n```\r\n\r\nif your branch is behind the develop branch, you will need to rebase.\r\n```\r\ngit checkout {branch-name}\r\ngit rebase develop\r\n```\r\n\r\n**note:** if your develop branch is out of sync with the carbon black repo then you will need to sync your fork. for information on syncing your fork, see [here](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/syncing-a-fork).\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "carbon-black-cloud-sdk",
  "package_url": "https://pypi.org/project/carbon-black-cloud-sdk/",
  "project_url": "https://pypi.org/project/carbon-black-cloud-sdk/",
  "project_urls": {
    "Homepage": "https://github.com/carbonblack/carbon-black-cloud-sdk-python"
  },
  "release_url": "https://pypi.org/project/carbon-black-cloud-sdk/1.5.0/",
  "requires_dist": [
    "requests",
    "pyyaml",
    "python-dateutil",
    "schema",
    "solrq",
    "validators",
    "jsonschema",
    "boto3",
    "backports-datetime-fromisoformat ==2.0.1",
    "keyring ; platform_system == \"Darwin\"",
    "pytest ==7.2.1 ; extra == 'test'",
    "pymox ==1.0.0 ; extra == 'test'",
    "coverage ==6.5.0 ; extra == 'test'",
    "coveralls ==3.3.1 ; extra == 'test'",
    "flake8 ==5.0.4 ; extra == 'test'",
    "flake8-colors ==0.1.9 ; extra == 'test'",
    "flake8-docstrings ==1.7.0 ; extra == 'test'",
    "pre-commit >=2.15.0 ; extra == 'test'",
    "requests-mock ==1.10.0 ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "vmware carbon black cloud python sdk",
  "version": "1.5.0",
  "releases": [],
  "developers": [
    "cb-developer-network@vmware.com",
    "vmware_carbon_black"
  ],
  "kwds": "carbonblack carbon license github cloud",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_carbon_black_cloud_sdk",
  "homepage": "https://github.com/carbonblack/carbon-black-cloud-sdk-python",
  "release_count": 21,
  "dependency_ids": [
    "pypi_backports_datetime_fromisoformat",
    "pypi_boto3",
    "pypi_coverage",
    "pypi_coveralls",
    "pypi_flake8",
    "pypi_flake8_colors",
    "pypi_flake8_docstrings",
    "pypi_jsonschema",
    "pypi_keyring",
    "pypi_pre_commit",
    "pypi_pymox",
    "pypi_pytest",
    "pypi_python_dateutil",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_requests_mock",
    "pypi_schema",
    "pypi_solrq",
    "pypi_validators"
  ]
}
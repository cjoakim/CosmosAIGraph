{
  "classifiers": [],
  "description": "# marshmallow-enum\n\nenum field for use with marshmallow.\n\n## installation\n\n```bash\npip install --user marshmallow_enum\n```\n\nif you're on a version before 3.4, you'll also need to install `enum34`.\n\n## using the field\n\nto make use of the field, you must have an existing enum:\n\n```python\nfrom enum import enum\n\n\nclass stoplight(enum):\n    green = 1\n    yellow = 2\n    red = 3\n```\n\nthen, declare it as a field in a schema:\n\n```python\nfrom marshmallow import schema\nfrom marshmallow_enum import enumfield\n\n\nclass trafficstop(schema):\n    light_color = enumfield(stoplight)\n```\n\nby default, the field will load and dump based on the _name_ given to an enum value.\n\n```python\nschema = trafficstop()\nschema.dump({'light_color': enumfield.red}).data\n# {'light_color': 'red'}\n\nschema.load({'light_color': 'red'}).data\n# {'light_color': stoplight.red}\n```\n\n### customizing loading and dumping behavior\n\nto customize how an enum is serialized or deserialized, there are three options:\n\n-   setting `by_value=true`. this will cause both dumping and loading to use the value of the enum.\n-   setting `load_by=enumfield.value`. this will cause loading to use the value of the enum.\n-   setting `dump_by=enumfield.value`. this will cause dumping to use the value of the enum.\n\nif either `load_by` or `dump_by` are unset, they will follow from `by_value`.\n\nadditionally, there is `enumfield.name` to be explicit about the load and dump behavior, this\nis the same as leaving both `by_value` and either `load_by` and/or `dump_by` unset.\n\n### custom error message\n\na custom error message can be provided via the `error` keyword argument. it can accept three\nformat values:\n\n-   `{input}`: the value provided to the schema field\n-   `{names}`: the names of the individual enum members\n-   `{values}`: the values of the individual enum members\n\npreviously, the following inputs were also available but are deprecated and will be removed in 1.6:\n\n-   `{name}`\n-   `{value}`\n-   `{choices}`\n\n\nversion 1.5\n===========\n\nallow unicode enum values (sergeyzsg)\nadd support for marshmallow 3 (svidela)\n\nversion 1.4\n===========\n\n* deprecate the `{choices}`, `{name}` and `{value}` format keys for custom error messages\n* allow configure loading and dumping independently\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "marshmallow-enum",
  "package_url": "https://pypi.org/project/marshmallow-enum/",
  "project_url": "https://pypi.org/project/marshmallow-enum/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/marshmallow-enum/1.5.1/",
  "requires_dist": [
    "marshmallow (>=2.0.0)"
  ],
  "requires_python": "",
  "summary": "enum field for marshmallow",
  "version": "1.5.1",
  "releases": [],
  "developers": [
    "alec_nikolas_reiter",
    "alecreiter@gmail.com"
  ],
  "kwds": "marshmallow_enum enumfield enum enum34 light_color",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_marshmallow_enum",
  "homepage": "",
  "release_count": 6,
  "dependency_ids": [
    "pypi_marshmallow"
  ]
}
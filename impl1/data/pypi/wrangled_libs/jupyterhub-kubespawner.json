{
  "classifiers": [
    "development status :: 5 - production/stable",
    "programming language :: python :: 3"
  ],
  "description": "# [kubespawner](https://github.com/jupyterhub/kubespawner) (jupyterhub-kubespawner @ pypi)\n\n[![latest pypi version](https://img.shields.io/pypi/v/jupyterhub-kubespawner?logo=pypi)](https://pypi.python.org/pypi/jupyterhub-kubespawner)\n[![latest conda-forge version](https://img.shields.io/conda/vn/conda-forge/jupyterhub-kubespawner?logo=conda-forge)](https://anaconda.org/conda-forge/jupyterhub-kubespawner)\n[![documentation status](https://img.shields.io/readthedocs/jupyterhub-kubespawner?logo=read-the-docs)](https://jupyterhub-kubespawner.readthedocs.io/en/latest/?badge=latest)\n[![github workflow status](https://img.shields.io/github/actions/workflow/status/jupyterhub/kubespawner/test.yaml?logo=github&label=tests)](https://github.com/jupyterhub/kubespawner/actions)\n[![code coverage](https://codecov.io/gh/jupyterhub/kubespawner/branch/main/graph/badge.svg)](https://codecov.io/gh/jupyterhub/kubespawner)\n\nthe _kubespawner_ (also known as the jupyterhub kubernetes spawner) enables jupyterhub to spawn\nsingle-user notebook servers on a [kubernetes](https://kubernetes.io/)\ncluster.\n\nsee the [kubespawner documentation](https://jupyterhub-kubespawner.readthedocs.io) for more\ninformation about features and usage. in particular, here is [a list of all the spawner options](https://jupyterhub-kubespawner.readthedocs.io/en/latest/spawner.html#module-kubespawner.spawner).\n\n## features\n\nkubernetes is an open-source system for automating deployment, scaling, and\nmanagement of containerized applications. if you want to run a jupyterhub\nsetup that needs to scale across multiple nodes (anything with over ~50\nsimultaneous users), kubernetes is a wonderful way to do it. features include:\n\n- easily and elasticly run anywhere between 2 and thousands of nodes with the\n  same set of powerful abstractions. scale up and down as required by simply\n  adding or removing nodes.\n\n- run jupyterhub itself inside kubernetes easily. this allows you to manage\n  many jupyterhub deployments with only kubernetes, without requiring an extra\n  layer of ansible / puppet / bash scripts. this also provides easy integrated\n  monitoring and failover for the hub process itself.\n\n- spawn multiple hubs in the same kubernetes cluster, with support for\n  [namespaces](https://kubernetes.io/docs/admin/namespaces/). you can limit the\n  amount of resources each namespace can use, effectively limiting the amount\n  of resources a single jupyterhub (and its users) can use. this allows\n  organizations to easily maintain multiple jupyterhubs with just one\n  kubernetes cluster, allowing for easy maintenance & high resource\n  utilization.\n\n- provide guarantees and limits on the amount of resources (cpu / ram) that\n  single-user notebooks can use. kubernetes has comprehensive [resource control](https://kubernetes.io/docs/user-guide/compute-resources/) that can\n  be used from the spawner.\n\n- mount various types of [persistent volumes](https://kubernetes.io/docs/user-guide/persistent-volumes/)\n  onto the single-user notebook's container.\n\n- control various security parameters (such as userid/groupid, selinux, etc)\n  via flexible [pod security policies](https://kubernetes.io/docs/user-guide/pod-security-policy/).\n\n- run easily in multiple clouds (or on your own machines). helps avoid vendor\n  lock-in. you can even spread out your cluster across\n  [multiple clouds at the same time](https://kubernetes.io/docs/user-guide/federation/).\n\nin general, kubernetes provides a ton of well thought out, useful features -\nand you can use all of them along with this spawner.\n\n## requirements\n\n### jupyterhub\n\nrequires jupyterhub 4.0+\n\n### kubernetes\n\neverything should work from kubernetes v1.24+.\n\nthe [kube dns addon](https://kubernetes.io/docs/user-guide/connecting-applications/#dns)\nis not strictly required - the spawner uses\n[environment variable](https://kubernetes.io/docs/user-guide/connecting-applications/#environment-variables)\nbased discovery instead. your kubernetes cluster will need to be configured to\nsupport the types of volumes you want to use.\n\nif you are just getting started and want a kubernetes cluster to play with,\n[google container engine](https://cloud.google.com/container-engine/) is\nprobably the nicest option. for aws/azure,\n[kops](https://github.com/kubernetes/kops) is probably the way to go.\n\n## getting help\n\nwe encourage you to ask questions on the\n[jupyter mailing list](https://groups.google.com/forum/#!forum/jupyter).\nyou can also participate in development discussions or get live help on\n[gitter](https://gitter.im/jupyterhub/jupyterhub).\n\n## license\n\nwe use a shared copyright model that enables all contributors to maintain the\ncopyright on their contributions.\n\nall code is licensed under the terms of the revised bsd license.\n\n## resources\n\n#### jupyterhub and kubespawner\n\n- [reporting issues](https://github.com/jupyterhub/kubespawner/issues)\n- [documentation for jupyterhub](https://jupyterhub.readthedocs.io)\n- [documentation for jupyterhub's rest api](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter/jupyterhub/master/docs/rest-api.yml#/default)\n\n#### jupyter\n\n- [documentation for project jupyter](https://jupyter.readthedocs.io/en/latest/index.html) | [pdf](https://media.readthedocs.org/pdf/jupyter/latest/jupyter.pdf)\n- [project jupyter website](https://jupyter.org)\n",
  "docs_url": null,
  "keywords": "jupyterhub,spawner",
  "license": "bsd 3-clause license  copyright (c) 2017, project jupyter contributors all rights reserved.  redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  * redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  * redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  * neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  this software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. in no event shall the copyright holder or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.",
  "name": "jupyterhub-kubespawner",
  "package_url": "https://pypi.org/project/jupyterhub-kubespawner/",
  "project_url": "https://pypi.org/project/jupyterhub-kubespawner/",
  "project_urls": {
    "Documentation": "https://jupyterhub-kubespawner.readthedocs.io",
    "Issues": "https://github.com/jupyterhub/kubespawner/issues",
    "Source": "https://github.com/jupyterhub/kubespawner"
  },
  "release_url": "https://pypi.org/project/jupyterhub-kubespawner/6.2.0/",
  "requires_dist": [
    "escapism",
    "jinja2",
    "jupyterhub>=4.0.0",
    "kubernetes-asyncio>=24.2.3",
    "python-slugify",
    "pyyaml",
    "traitlets",
    "urllib3",
    "kubernetes>=11; extra == 'test'",
    "pytest-asyncio>=0.17; extra == 'test'",
    "pytest-cov; extra == 'test'",
    "pytest>=5.4; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "jupyterhub spawner for kubernetes",
  "version": "6.2.0",
  "releases": [],
  "developers": [
    "jupyter@googlegroups.com"
  ],
  "kwds": "jupyterhub jupyterhubs kubespawner jupyter _kubespawner_",
  "license_kwds": "copyright liability liable negligence redistributions",
  "libtype": "pypi",
  "id": "pypi_jupyterhub_kubespawner",
  "homepage": "",
  "release_count": 38,
  "dependency_ids": [
    "pypi_escapism",
    "pypi_jinja2",
    "pypi_jupyterhub",
    "pypi_kubernetes",
    "pypi_kubernetes_asyncio",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytest_cov",
    "pypi_python_slugify",
    "pypi_pyyaml",
    "pypi_traitlets",
    "pypi_urllib3"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: database",
    "topic :: scientific/engineering :: information analysis"
  ],
  "description": "datasketch: big data looks small\n================================\n\n.. image:: https://github.com/ekzhu/datasketch/workflows/python%20package/badge.svg\n    :target: https://github.com/ekzhu/datasketch/actions\n\n.. image:: https://zenodo.org/badge/doi/10.5281/zenodo.290602.svg\n   :target: https://doi.org/10.5281/zenodo.290602\n\ndatasketch gives you probabilistic data structures that can process and\nsearch very large amount of data super fast, with little loss of\naccuracy.\n\nthis package contains the following data sketches:\n\n+-------------------------+-----------------------------------------------+\n| data sketch             | usage                                         |\n+=========================+===============================================+\n| `minhash`_              | estimate jaccard similarity and cardinality   |\n+-------------------------+-----------------------------------------------+\n| `weighted minhash`_     | estimate weighted jaccard similarity          |\n+-------------------------+-----------------------------------------------+\n| `hyperloglog`_          | estimate cardinality                          |\n+-------------------------+-----------------------------------------------+\n| `hyperloglog++`_        | estimate cardinality                          |\n+-------------------------+-----------------------------------------------+\n\nthe following indexes for data sketches are provided to support\nsub-linear query time:\n\n+---------------------------+-----------------------------+------------------------+\n| index                     | for data sketch             | supported query type   |\n+===========================+=============================+========================+\n| `minhash lsh`_            | minhash, weighted minhash   | jaccard threshold      |\n+---------------------------+-----------------------------+------------------------+\n| `minhash lsh forest`_     | minhash, weighted minhash   | jaccard top-k          |\n+---------------------------+-----------------------------+------------------------+\n| `minhash lsh ensemble`_   | minhash                     | containment threshold  |\n+---------------------------+-----------------------------+------------------------+\n| `hnsw`_                   | any                         | custom metric top-k    |\n+---------------------------+-----------------------------+------------------------+\n\ndatasketch must be used with python 3.7 or above, numpy 1.11 or above, and scipy. \n\nnote that `minhash lsh`_ and `minhash lsh ensemble`_ also support redis and cassandra \nstorage layer (see `minhash lsh at scale`_).\n\ninstall\n-------\n\nto install datasketch using ``pip``:\n\n::\n\n    pip install datasketch\n\nthis will also install numpy as dependency.\n\nto install with redis dependency:\n\n::\n\n    pip install datasketch[redis]\n\nto install with cassandra dependency:\n\n::\n\n    pip install datasketch[cassandra]\n\n\n.. _`minhash`: https://ekzhu.github.io/datasketch/minhash.html\n.. _`weighted minhash`: https://ekzhu.github.io/datasketch/weightedminhash.html\n.. _`hyperloglog`: https://ekzhu.github.io/datasketch/hyperloglog.html\n.. _`hyperloglog++`: https://ekzhu.github.io/datasketch/hyperloglog.html#hyperloglog-plusplus\n.. _`minhash lsh`: https://ekzhu.github.io/datasketch/lsh.html\n.. _`minhash lsh forest`: https://ekzhu.github.io/datasketch/lshforest.html\n.. _`minhash lsh ensemble`: https://ekzhu.github.io/datasketch/lshensemble.html\n.. _`minhash lsh at scale`: http://ekzhu.github.io/datasketch/lsh.html#minhash-lsh-at-scale\n.. _`hnsw`: https://ekzhu.github.io/datasketch/documentation.html#hnsw\n",
  "docs_url": null,
  "keywords": "database datamining",
  "license": "mit",
  "name": "datasketch",
  "package_url": "https://pypi.org/project/datasketch/",
  "project_url": "https://pypi.org/project/datasketch/",
  "project_urls": {
    "Homepage": "https://ekzhu.github.io/datasketch",
    "Source": "https://github.com/ekzhu/datasketch"
  },
  "release_url": "https://pypi.org/project/datasketch/1.6.4/",
  "requires_dist": [
    "numpy >=1.11",
    "scipy >=1.0.0",
    "pyhash >=0.9.3 ; extra == 'benchmark'",
    "matplotlib >=3.1.2 ; extra == 'benchmark'",
    "scikit-learn >=0.21.3 ; extra == 'benchmark'",
    "scipy >=1.3.3 ; extra == 'benchmark'",
    "pandas >=0.25.3 ; extra == 'benchmark'",
    "SetSimilaritySearch >=0.1.7 ; extra == 'benchmark'",
    "pyfarmhash >=0.2.2 ; extra == 'benchmark'",
    "nltk >=3.4.5 ; extra == 'benchmark'",
    "cassandra-driver >=3.20 ; extra == 'cassandra'",
    "aiounittest ; (python_version >= \"3.6\") and extra == 'experimental_aio'",
    "motor ; (python_version >= \"3.6\") and extra == 'experimental_aio'",
    "redis >=2.10.0 ; extra == 'redis'",
    "cassandra-driver >=3.20 ; extra == 'test'",
    "redis >=2.10.0 ; extra == 'test'",
    "mock >=2.0.0 ; extra == 'test'",
    "mockredispy ; extra == 'test'",
    "coverage ; extra == 'test'",
    "pymongo >=3.9.0 ; extra == 'test'",
    "nose >=1.3.7 ; extra == 'test'",
    "nose-exclude >=0.5.0 ; extra == 'test'",
    "pytest ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "probabilistic data structures for processing and searching very large datasets",
  "version": "1.6.4",
  "releases": [],
  "developers": [
    "ekzhu",
    "ekzhu@cs.toronto.edu"
  ],
  "kwds": "datamining datasets searching search data",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_datasketch",
  "homepage": "https://ekzhu.github.io/datasketch",
  "release_count": 83,
  "dependency_ids": [
    "pypi_aiounittest",
    "pypi_cassandra_driver",
    "pypi_coverage",
    "pypi_matplotlib",
    "pypi_mock",
    "pypi_mockredispy",
    "pypi_motor",
    "pypi_nltk",
    "pypi_nose",
    "pypi_nose_exclude",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pyfarmhash",
    "pypi_pyhash",
    "pypi_pymongo",
    "pypi_pytest",
    "pypi_redis",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_setsimilaritysearch"
  ]
}
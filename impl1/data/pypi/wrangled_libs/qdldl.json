{
  "classifiers": [],
  "description": "# qdldl-python\n\n![github actions](https://github.com/oxfordcontrol/qdldl-python/workflows/build/badge.svg?branch=master)\n\npython interface to the [qdldl](https://github.com/oxfordcontrol/qdldl/)\nfree ldl factorization routine for quasi-definite linear systems: `ax =\nb`.\n\n## installation\n\nthis package can be directly installed via pip,\n\n```\npip install qdldl\n```\n\n## usage\n\ninitialize the factorization with\n\n```\nimport qdldl\nf = qdldl.solver(a)\n```\n\nwhere `a` must be a square quasi-definite matrix in [scipy sparse csc\nformat](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.csc_matrix.html).\n\nthe algorithm internally converts the matrix into upper triangular format. if `a` is already upper-triangular, you can specify it with the argument `upper=true` to the `qdldl.solver` constructor.\n\nto solve the linear system for a right-hand side `b`, just write\n\n```\nx = f.solve(b)\n```\n\nto update the factorization without changing the sparsity pattern of `a` you can run\n\n```\nf.update(a_new)\n```\n\nwhere `a_new` is a sparse matrix in csr format with the same sparsity pattern as `a`.\n\nthe algorithm internally converts `a_new` into upper triangular format. if `a_new` is already upper-triangular, you can specify it with the argument `upper=true` to the `f.update` function.\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2.0",
  "name": "qdldl",
  "package_url": "https://pypi.org/project/qdldl/",
  "project_url": "https://pypi.org/project/qdldl/",
  "project_urls": {
    "Homepage": "https://github.com/oxfordcontrol/qdldl-python/"
  },
  "release_url": "https://pypi.org/project/qdldl/0.1.7.post0/",
  "requires_dist": [
    "numpy (>=1.7)",
    "scipy (>=0.13.2)"
  ],
  "requires_python": "",
  "summary": "qdldl, a free ldl factorization routine.",
  "version": "0.1.7.post0",
  "releases": [],
  "developers": [
    "bartolomeo.stellato@gmail.com",
    "bartolomeo_stellato"
  ],
  "kwds": "csc_matrix qdldl factorization solver ldl",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_qdldl",
  "homepage": "https://github.com/oxfordcontrol/qdldl-python/",
  "release_count": 11,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_scipy"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: software development :: quality assurance",
    "topic :: software development :: testing"
  ],
  "description": "robotframework-faker\n====================\n\n.. image:: https://travis-ci.org/guykisel/robotframework-faker.svg?branch=master\n    :target: https://pypi.python.org/pypi/robotframework-faker\n.. image:: https://img.shields.io/pypi/v/robotframework-faker.svg\n    :target: https://pypi.python.org/pypi/robotframework-faker\n.. image:: https://img.shields.io/pypi/dm/robotframework-faker.svg\n    :target: https://pypi.python.org/pypi/robotframework-faker\n.. image:: https://img.shields.io/pypi/l/robotframework-faker.svg\n    :target: https://pypi.python.org/pypi/robotframework-faker\n\nrobot framework keyword library wrapper for\n`faker <https://github.com/joke2k/faker>`__.\n\nthis module allows easy use of faker's random test data generation in\nrobot framework. i hate using static test data, because inevitably the\nsystem under test evolves to pass the tests without necessarily solving\nthe root cause of bugs.\n\nany docstrings faker provides are passed through to robot framework, so\nthey're available in ride and in keyword documentation generated via\nlibdoc.\n\nfor more information on robot framework please visit `the robot\nframework homepage! <http://robotframework.org/>`__\n\ninstallation\n------------\n\n``pip install robotframework-faker``\n\nusage\n-----\n\n`fakerlibrary keyword\ndocumentation <https://guykisel.github.io/robotframework-faker/>`__\n\n.. code:: robotframework\n\n    *** settings ***\n    library    fakerlibrary\n\n    *** test cases ***\n    fakerlibrary words generation\n        ${words}=    fakerlibrary.words\n        log    words: ${words}\n        ${words}=    fakerlibrary.words    nb=${10}\n        log    words: ${words}\n\nyou can also specify seeds and providers:\n\n.. code:: robotframework\n\n    *** settings ***\n    library    fakerlibrary    locale=de_de    seed=124\n\nsee fakerlibrary's tests for more usage examples.\n\ncontribute\n----------\n\nif you like this module, please contribute! i welcome patches,\ndocumentation, issues, ideas, and so on.\n\n\n\n\n",
  "docs_url": null,
  "keywords": "robotframework testing test automation testautomation atdd bdd faker",
  "license": "mit",
  "name": "robotframework-faker",
  "package_url": "https://pypi.org/project/robotframework-faker/",
  "project_url": "https://pypi.org/project/robotframework-faker/",
  "project_urls": {
    "Download": "https://pypi.python.org/pypi/robotframework-faker",
    "Homepage": "https://github.com/guykisel/robotframework-faker"
  },
  "release_url": "https://pypi.org/project/robotframework-faker/5.0.0/",
  "requires_dist": [
    "faker",
    "robotframework",
    "wrapt"
  ],
  "requires_python": "",
  "summary": "robot framework wrapper for faker, a fake test data generator",
  "version": "5.0.0",
  "releases": [],
  "developers": [
    "guy.kisel@gmail.com",
    "guy_kisel"
  ],
  "kwds": "robotframework robot faker testing testautomation",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_robotframework_faker",
  "homepage": "https://github.com/guykisel/robotframework-faker",
  "release_count": 21,
  "dependency_ids": [
    "pypi_faker",
    "pypi_robotframework",
    "pypi_wrapt"
  ]
}
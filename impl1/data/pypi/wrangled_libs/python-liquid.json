{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "<h1 align=\"center\">python liquid</h1>\n\n<p align=\"center\">\na python engine for <a href=\"https://shopify.github.io/liquid/\">liquid</a>, the safe customer-facing template language for flexible web apps.\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/jg-rp/liquid/blob/main/license\">\n    <img src=\"https://img.shields.io/pypi/l/python-liquid.svg?style=flat-square\" alt=\"license\">\n  </a>\n  <br>\n  <a href=\"https://pypi.org/project/python-liquid/\">\n    <img src=\"https://img.shields.io/pypi/v/python-liquid.svg?style=flat-square\" alt=\"pypi - version\">\n  </a>\n  <a href=\"https://anaconda.org/conda-forge/python-liquid\">\n    <img src=\"https://img.shields.io/conda/vn/conda-forge/python-liquid?style=flat-square\" alt=\"conda-forge\">\n  </a>\n  <br>\n  <a href=\"https://pypi.org/project/python-liquid/\">\n    <img src=\"https://img.shields.io/pypi/pyversions/python-liquid.svg?style=flat-square\" alt=\"python versions\">\n  </a>\n  <a href=\"https://github.com/jg-rp/liquid/actions/workflows/coverage.yaml\">\n    <img src=\"https://img.shields.io/badge/pypy-3.7%20%7c%203.8%20%7c%203.9-blue?style=flat-square\" alt=\"pypy versions\">\n  </a>\n  <br>\n  <a href=\"https://github.com/jg-rp/liquid/actions/workflows/tests.yaml\">\n    <img src=\"https://img.shields.io/github/actions/workflow/status/jg-rp/liquid/tests.yaml?branch=main&label=tests&style=flat-square\" alt=\"tests\">\n  </a>\n  <a href=\"https://github.com/jg-rp/liquid/actions/workflows/coverage.yaml\">\n    <img src=\"https://img.shields.io/github/actions/workflow/status/jg-rp/liquid/coverage.yaml?branch=main&label=coverage&style=flat-square\" alt=\"coverage\">\n  </a>\n</p>\n\n---\n\n**table of contents**\n\n- [install](#install)\n- [links](#links)\n- [example](#example)\n- [related projects](#related-projects)\n- [compatibility](#compatibility)\n- [benchmark](#benchmark)\n- [contributing](#contributing)\n\n## install\n\ninstall python liquid using [pipenv](https://pipenv.pypa.io/en/latest/):\n\n```shell\n$ pipenv install -u python-liquid\n```\n\nor [pip](https://pip.pypa.io/en/stable/getting-started/):\n\n```shell\n$ pip install python-liquid\n```\n\nor from [conda-forge](https://anaconda.org/conda-forge/python-liquid):\n\n```shell\n$ conda install -c conda-forge python-liquid\n```\n\n## links\n\n- documentation: https://jg-rp.github.io/liquid/\n- change log: https://github.com/jg-rp/liquid/blob/main/changes.md\n- pypi: https://pypi.org/project/python-liquid/\n- source code: https://github.com/jg-rp/liquid\n- issue tracker: https://github.com/jg-rp/liquid/issues\n\n## example\n\n```python\nfrom liquid import template\n\ntemplate = template(\"hello, {{ you }}!\")\nprint(template.render(you=\"world\"))  # \"hello, world!\"\nprint(template.render(you=\"liquid\"))  # \"hello, liquid!\"\n```\n\n## related projects\n\n- [liquid-babel](https://github.com/jg-rp/liquid-babel) internationalization and localization for liquid templates.\n- [liquidscript](https://github.com/jg-rp/liquidscript): a javascript and typescript engine for liquid with a similar high-level api to python liquid.\n- [django-liquid](https://github.com/jg-rp/django-liquid): a django template backend for liquid. render liquid templates in your django apps.\n- [flask-liquid](https://github.com/jg-rp/flask-liquid): a flask extension for liquid. render liquid templates in your flask applications.\n- [golden-liquid](https://github.com/jg-rp/golden-liquid): a test suite for liquid. see how various liquid template engines compare to the reference implementation.\n\n## compatibility\n\nwe strive to be 100% compatible with the [reference implementation](https://shopify.github.io/liquid/) of liquid, written in ruby. that is, given an equivalent render context, a template rendered with python liquid should produce the same output as when rendered with ruby liquid.\n\nsee the [known issues page](https://jg-rp.github.io/liquid/known_issues) for details of known incompatibilities between python liquid and ruby liquid, and please help by raising an issue if you notice an incompatibility.\n\n## benchmark\n\nyou can run the benchmark using `hatch run benchmark` (or `python -o scripts/performance.py` if you don't have `make`) from the root of the source tree. on my ropey desktop computer with a ryzen 5 1500x and python 3.11.0, we get the following results.\n\n```text\nbest of 5 rounds with 100 iterations per round and 60 ops per iteration (6000 ops per round).\n\nlex template (not expressions): 1.2s (5020.85 ops/s, 83.68 i/s)\n                    lex and parse: 5.0s (1197.32 ops/s, 19.96 i/s)\n                        render: 1.4s (4152.92 ops/s, 69.22 i/s)\n            lex, parse and render: 6.5s (922.08 ops/s, 15.37 i/s)\n```\n\nand pypy3.7 gives us a decent increase in performance.\n\n```text\nbest of 5 rounds with 100 iterations per round and 60 ops per iteration (6000 ops per round).\n\nlex template (not expressions): 0.58s (10308.67 ops/s, 171.81 i/s)\n                    lex and parse: 3.6s (1661.20 ops/s, 27.69 i/s)\n                        render: 0.95s (6341.14 ops/s, 105.69 i/s)\n            lex, parse and render: 4.6s (1298.18 ops/s, 21.64 i/s)\n```\n\non the same machine, running `rake benchmark:run` from the root of the reference implementation source tree gives us these results.\n\n```text\n/usr/bin/ruby ./performance/benchmark.rb lax\n\nrunning benchmark for 10 seconds (with 5 seconds warmup).\n\nwarming up --------------------------------------\n                parse:     3.000  i/100ms\n            render:     8.000  i/100ms\n    parse & render:     2.000  i/100ms\ncalculating -------------------------------------\n                parse:     39.072  (\u00b1 0.0%) i/s -    393.000  in  10.058789s\n            render:     86.995  (\u00b1 1.1%) i/s -    872.000  in  10.024951s\n    parse & render:     26.139  (\u00b1 0.0%) i/s -    262.000  in  10.023365s\n```\n\ni've tried to match the benchmark workload to that of the reference implementation, so that we might compare results directly. the workload is meant to be representative of shopify's use case, although i wouldn't be surprised if their usage has changed subtly since the benchmark fixture was designed.\n\n## contributing\n\nplease see [contributing to python liquid](https://github.com/jg-rp/liquid/blob/main/contributing.md).\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "python-liquid",
  "package_url": "https://pypi.org/project/python-liquid/",
  "project_url": "https://pypi.org/project/python-liquid/",
  "project_urls": {
    "Change Log": "https://github.com/jg-rp/liquid/blob/main/CHANGES.md",
    "Documentation": "https://jg-rp.github.io/liquid/",
    "Homepage": "https://jg-rp.github.io/liquid/",
    "Issue Tracker": "https://github.com/jg-rp/liquid/issues",
    "Source Code": "https://github.com/jg-rp/liquid"
  },
  "release_url": "https://pypi.org/project/python-liquid/1.10.2/",
  "requires_dist": [
    "python-dateutil>=2.8.1",
    "typing-extensions>=4.2.0",
    "markupsafe>=2.0.0; extra == 'autoescape'"
  ],
  "requires_python": ">=3.7",
  "summary": "a python engine for the liquid template language.",
  "version": "1.10.2",
  "releases": [],
  "developers": [
    "jamesgr.prior@gmail.com"
  ],
  "kwds": "liquidscript flask python pypy3 template",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_python_liquid",
  "homepage": "",
  "release_count": 61,
  "dependency_ids": [
    "pypi_markupsafe",
    "pypi_python_dateutil",
    "pypi_typing_extensions"
  ]
}
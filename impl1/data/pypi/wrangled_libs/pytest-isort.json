{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: testing"
  ],
  "description": "py.test plugin to check import ordering using isort\n===================================================\n\n.. image:: https://img.shields.io/pypi/v/pytest-isort.svg\n   :target: https://pypi.python.org/pypi/pytest-isort\n   :alt: latest version\n\n.. image:: https://github.com/stephrdev/pytest-isort/workflows/test/badge.svg?branch=master\n   :target: https://github.com/stephrdev/pytest-isort/actions?workflow=test\n   :alt: ci status\n\n\nsupport\n-------\n\npython 3.7, 3.8, 3.9 and 3.10. pytest>=5.\n\n\nusage\n-----\n\ninstall using ``pip``::\n\n    pip install pytest-isort\n\nactivate isort checks when calling ``py.test``::\n\n    py.test --isort\n\nthis will execute an isort check against every ``.py`` file (if its not ignored).\n\n\nexample\n-------\n\ngiven you have some files with incorrect sorted imports::\n\n    # content of file1.py\n\n    import os\n    import sys\n    import random\n\n    # content of file2.py\n\n    import json\n    import sys\n    import os\n\nif you run ``py.test`` and activate the isort plugin you'll se something like this::\n\n    $ py.test --isort\n    ========================= test session starts ==========================\n    platform darwin -- python 2.7.9 -- py-1.4.26 -- pytest-2.6.4\n    plugins: isort\n    collected 2 items\n\n    file1.py f\n    file2.py f\n\n    =============================== failures ===============================\n    _____________________________ isort-check ______________________________\n    error: file1.py imports are incorrectly sorted.\n\n     import os\n    +import random\n     import sys\n    -import random\n    _____________________________ isort-check ______________________________\n    error: file2.py imports are incorrectly sorted.\n\n     import json\n    +import os\n     import sys\n    -import os\n    ======================= 2 failed in 0.02 seconds =======================\n\nif you can't change the import ordering for ``file2.py``, you have the option to\nexclude ``file2.py`` from isort checks.\n\nsimply add the ``isort_ignore`` setting to your ``py.test`` configuration file::\n\n    [pytest]\n    isort_ignore =\n        file2.py\n\nthen re-run the tests::\n\n    $ py.test --isort\n    ========================= test session starts ==========================\n    platform darwin -- python 2.7.9 -- py-1.4.26 -- pytest-2.6.4\n    plugins: isort\n    collected 1 items\n\n    file1.py f\n\n    =============================== failures ===============================\n    _____________________________ isort-check ______________________________\n    error: file1.py imports are incorrectly sorted.\n\n     import os\n    +import random\n     import sys\n    -import random\n    ======================= 1 failed in 0.02 seconds =======================\n\nas you can see, ``file2.py`` is ignored and not checked. now fix the\nimport ordering in ``file1.py`` and re-run the tests::\n\n    $ py.test --isort\n    ========================= test session starts ==========================\n    platform darwin -- python 2.7.9 -- py-1.4.26 -- pytest-2.6.4\n    plugins: isort\n    collected 1 items\n\n    file1.py .\n\n    ======================= 1 passed in 0.01 seconds ======================\n\neverything is properly again. congratulations!\n\nif you run your testsuite again and again, ``py.test`` will only check changed\nfiles to speed up. you see this by adding ``-rs`` to your ``py.test`` options::\n\n    $ py.test --isort -rs\n    ========================= test session starts ==========================\n    platform darwin -- python 2.7.9 -- py-1.4.26 -- pytest-2.6.4\n    plugins: isort\n    collected 1 items\n\n    file1.py s\n    ======================= short test summary info ========================\n    skip [1] pytest_isort.py:145: file(s) previously passed isort checks\n\n    ====================== 1 skipped in 0.01 seconds ======================\n\n\nconfiguration\n-------------\n\nyou can exclude files from isort checks by using the ``isort_ignore``\nsetting in your ``py.test`` configuration file (e.g. ``pytest.ini``)::\n\n    # content of setup.cfg\n    [pytest]\n    isort_ignore =\n        docs/conf.py\n        *migrations/*.py\n\nthis will ignore the ``conf.py`` python file inside the ``docs`` folder and\nalso ignore any python file in ``migrations`` folders.\n\nin addition, excluded files in isort's configuration will be ignored too.\n\n\nnotes\n-----\n\nyou can use ``isort`` to rewrite your python files and re-order the imports but\nthis is not part of this plugin.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pytest-isort",
  "package_url": "https://pypi.org/project/pytest-isort/",
  "project_url": "https://pypi.org/project/pytest-isort/",
  "project_urls": {
    "Homepage": "https://github.com/stephrdev/pytest-isort",
    "Repository": "https://github.com/stephrdev/pytest-isort"
  },
  "release_url": "https://pypi.org/project/pytest-isort/3.1.0/",
  "requires_dist": [
    "pytest (>=5.0)",
    "importlib-metadata; python_version < \"3.8\"",
    "isort (>=4.0)"
  ],
  "requires_python": ">=3.7,<4",
  "summary": "py.test plugin to check import ordering using isort",
  "version": "3.1.0",
  "releases": [],
  "developers": [
    "steph@rdev.info",
    "stephan_jaekel"
  ],
  "kwds": "pytest_isort pytest isort_ignore isort pypi",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_isort",
  "homepage": "https://github.com/stephrdev/pytest-isort",
  "release_count": 12,
  "dependency_ids": [
    "pypi_importlib_metadata",
    "pypi_isort",
    "pypi_pytest"
  ]
}
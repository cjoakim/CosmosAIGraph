{
  "classifiers": [
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "topic :: database",
    "topic :: database :: database engines/servers"
  ],
  "description": "<p align=\"center\">\n<img src=\"https://github.com/man-group/arcticdb/raw/master/static/arcticdbcropped.png\" width=\"40%\">\n</p>\n\n---\n\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/man-group/arcticdb/master/static/arcticdbterminal.gif\" width=\"100%\">\n</p>\n\n---\n<p align=\"center\">\n <a href=\"http://arcticdb.io\">arcticdb website</a> |  <a href=\"https://medium.com/arcticdb\">arcticdb blog</a> |  <a href=\"https://www.man.com/man-group-brings-powerful-dataframe-database-product-arcticdb-to-market-with-bloomberg\">press release</a> |  <a href=\"https://www.bloomberg.com/company/press/man-group-brings-powerful-dataframe-database-product-arcticdb-to-market-with-bloomberg/\">press release</a> |  <a href=\"#community\">community</a>\n<br /><br />\n<a href=\"https://github.com/man-group/arcticdb/actions\"></a>\n</p>\n\n---\n\n**arcticdb** is a high performance, serverless **dataframe database** built for the python data science ecosystem.\nlaunched in march 2023, it is the successor to [arctic](https://github.com/man-group/arctic).\n\narcticdb offers an intuitive python-centric api enabling you to read and write pandas dataframes to s3 or lmdb utilising a fast c++ data-processing and compression engine.\n\narcticdb allows you to:\n\n * **pandas in, pandas out**: read and write pandas dataframes, numpy arrays and native types to s3 and lmdb without leaving python.\n * **built for time-series data**: efficiently index and query time-series data across _billions_ of rows\n * **time travel**: travel back in time to see previous versions of your data and create customizable snapshots of the database\n * **schemaless database**: append, update and modify data without being constrained by the existing schema\n * **optimised for streaming data**: built in support for efficient sparse data storage\n * **powerful processing**: filter, aggregate and create new columns on-the-fly with a pandas-like syntax\n * **c++ efficiency**: accelerate analytics though concurrency in the c++ data-processing engine\n\narcticdb handles data that is big in both row count and column count, so a 20-year history of more than 400,000 unique securities can be stored in a single *symbol*. each *symbol* is maintained as a separate entity with no shared data which means arcticdb can scale horizontally across *symbols*, maximising the performance potential of your compute, storage and network.\n\narcticdb is designed from the outset to be resilient; there is no single point of failure, and persistent data structures in the storage mean that once a version of a *symbol* has been written, it can never be corrupted by subsequent updates. pulling compressed data directly from  storage to the client means that there is no server to overload, so your data is always available when you need it.\n\n## quickstart\n\n### prebuilt binary availability\n\n|                       | pypi (python 3.6 - 3.11) | conda-forge (python 3.8 - 3.11) |\n| --------------------- | - | - |\n| linux                 | \u2714\ufe0f | \u2714\ufe0f |\n| windows               | \u2714\ufe0f | \u2796 |\n| macos                 | \u2796 | beta\ufe0f |\n\n### storage compatibility\n\n|                       | linux | windows | mac |\n| --------------------- | - | - | - |\n| s3                 | \u2714\ufe0f | \u2714\ufe0f | \u2714\ufe0f |\n| lmdb               | \u2714\ufe0f | \u2714\ufe0f | \u2714\ufe0f |\n| azure blob storage | \u2714\ufe0f | \u2714\ufe0f | \u2796 |\n\nwe have tested against the following s3 backends:\n\n- aws s3\n- vast data s3\n- pure storage s3\n- ceph\n- minio on linux\n- scality s3\n\n### installation\n\ninstall arcticdb:\n\n```bash\n$ pip install arcticdb\n```\nor using conda-forge\n```bash\n$ conda install -c conda-forge arcticdb\n```\n\nimport arcticdb:\n\n```python\n>>> from arcticdb import arctic\n```\n\ncreate an instance on your s3 storage (with or without explicit credentials):\n\n```python\n# leave aws to derive credential information\n>>> ac = arctic('s3://my_endpoint:my_bucket?aws_auth=true')\n\n# manually specify creds\n>>> ac = arctic('s3://my_endpoint:my_bucket?region=your_region&access=abcd&secret=dcba')\n```\n\nor create an instance on your local disk:\n\n```python\n>>> ac = arctic(\"lmdb:///<path>\")\n```\n\ncreate your first library and list the libraries in the instance:\n\n```python\n>>> ac.create_library('travel_data')\n>>> ac.list_libraries()\n```\n\ncreate a test dataframe:\n```python\n>>> import numpy as np\n>>> import pandas as pd\n>>> num_columns=10\n>>> num_rows=100_000\n>>> df = pd.dataframe(np.random.randint(0,100,size=(num_rows, num_columns)), columns=[f\"col_{i}\" for i in range(num_columns)], index=pd.date_range('2000', periods=num_rows, freq='h'))\n```\n\nget the library, write some data to it, and read it back:\n\n```python\n>>> lib = ac['travel_data']\n>>> lib.write(\"my_data\", df)\n>>> data = lib.read(\"my_data\")\n```\n\nto find out more about working with data, visit our [docs](https://docs.arcticdb.io)\n\n---\n\n## documentation\n\nthe source code for the arcticdb docs are located in the [docs](https://github.com/man-group/arcticdb/tree/master/docs) folder, and are hosted at [docs.arcticdb.io](https://docs.arcticdb.io).\n\n## license\n\narcticdb is released under a [business source license 1.1 (bsl)](https://github.com/man-group/arcticdb/blob/master/license.txt)\n\nbsl features are free to use and the source code is available, but users may not use arcticdb for production use or for\na database service, without agreement with man group operations limited.\n\nuse of arcticdb in production or for a database service requires a paid for license from man group operations limited\nand is licensed under the arcticdb software license agreement. for more information please contact [arcticdb@man.com](mailto:arcticdb@man.com).\n\nthe bsl is not certified as an open-source license, but most of the [open source initiative (osi)](https://opensource.org/) criteria are met.\nplease see version conversion dates in the below table:\n\n| arcticdb version | license | converts to apache 2.0 |\n| ------------- | ------------- | ------------- |\n| 1.0 | business source license 1.1 | mar 16, 2025 |\n| 1.2 | business source license 1.1 | may 22, 2025 |\n| 1.3 | business source license 1.1 | jun  9, 2025 |\n| 1.4 | business source license 1.1 | jun  23, 2025 |\n| 1.5 | business source license 1.1 | jul  11, 2025 |\n| 1.6 | business source license 1.1 | jul  25, 2025 |\n| 2.0 | business source license 1.1 | aug  29, 2025 |\n| 3.0 | business source license 1.1 | sep  13, 2025 |\n| 4.0 | business source license 1.1 | sep  27, 2025 |\n| 4.1 | business source licesne 1.1 | nov 1, 2025 |\n\n## code of conduct\n\n[code of conduct](https://github.com/man-group/arcticdb/blob/master/code_of_conduct.md)\n\nthis project has adopted a code of conduct. if you have any concerns about the code, or behaviour that you have\nexperienced in the project, please contact us at [arcticdb@man.com](mailto:arcticdb@man.com).\n\n## contributing/building from source\n\nwe welcome your contributions to help us improve and extend this project!\n\nplease refer to the [contributing](https://github.com/man-group/arcticdb/blob/master/docs/mkdocs/docs/technical/contributing.md)\npage and feel free to open issues on github.\n\nwe are also always looking for feedback from our dedicated community! if you have used arcticdb please let us know, we would love to hear about your experience!\n\nour release process is [documented here](https://github.com/man-group/arcticdb/blob/master/docs/mkdocs/docs/technical/releasing.md).\n\n## community\n\nwe would love to hear how your arcticdb journey evolves, email us at [arcticdb@man.com](mailto:arcticdb@man.com) or come chat to us on [twitter](https://www.twitter.com/arcticdb)!\n\ninterested in learning more about arcticdb? head over to our [blog](https://medium.com/arcticdb)!\n\ndo you have any questions or issues? chat to us and other users through our dedicated slack workspace - sign up for slack access on [our website](https://arcticdb.io).\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "business source license 1.1 (see license.txt)",
  "name": "arcticdb",
  "package_url": "https://pypi.org/project/arcticdb/",
  "project_url": "https://pypi.org/project/arcticdb/",
  "project_urls": {
    "Homepage": "https://github.com/man-group/arcticdb"
  },
  "release_url": "https://pypi.org/project/arcticdb/4.2.1/",
  "requires_dist": [
    "numpy",
    "pandas",
    "attrs",
    "protobuf >=3.5.0.post1",
    "msgpack",
    "pyyaml",
    "packaging",
    "dataclasses ; python_version < \"3.7\"",
    "pytest ; extra == 'testing'",
    "pyarrow ; extra == 'testing'",
    "pytest-cpp ; extra == 'testing'",
    "pytest-timeout ; extra == 'testing'",
    "pytest-xdist ; extra == 'testing'",
    "packaging ; extra == 'testing'",
    "future ; extra == 'testing'",
    "pytest-server-fixtures ; extra == 'testing'",
    "mock ; extra == 'testing'",
    "boto3 ; extra == 'testing'",
    "moto ; extra == 'testing'",
    "flask ; extra == 'testing'",
    "flask-cors ; extra == 'testing'",
    "hypothesis <6.73 ; extra == 'testing'",
    "azure-storage-blob ; extra == 'testing'",
    "azure-identity ; extra == 'testing'",
    "coverage ; extra == 'testing'",
    "asv ; extra == 'testing'",
    "virtualenv ; extra == 'testing'",
    "pymongo ; extra == 'testing'"
  ],
  "requires_python": "",
  "summary": "arcticdb dataframe database",
  "version": "4.2.1",
  "releases": [],
  "developers": [
    "arcticdb@man.com",
    "man_alpha_technology"
  ],
  "kwds": "arcticdbcropped arcticdb href arcticdbterminal gif",
  "license_kwds": "business source license 1.1 (see license.txt)",
  "libtype": "pypi",
  "id": "pypi_arcticdb",
  "homepage": "https://github.com/man-group/arcticdb",
  "release_count": 37,
  "dependency_ids": [
    "pypi_asv",
    "pypi_attrs",
    "pypi_azure_identity",
    "pypi_azure_storage_blob",
    "pypi_boto3",
    "pypi_coverage",
    "pypi_dataclasses",
    "pypi_flask",
    "pypi_flask_cors",
    "pypi_future",
    "pypi_hypothesis",
    "pypi_mock",
    "pypi_moto",
    "pypi_msgpack",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_protobuf",
    "pypi_pyarrow",
    "pypi_pymongo",
    "pypi_pytest",
    "pypi_pytest_cpp",
    "pypi_pytest_server_fixtures",
    "pypi_pytest_timeout",
    "pypi_pytest_xdist",
    "pypi_pyyaml",
    "pypi_virtualenv"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "environment :: web environment",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: os independent",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.13",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: internet :: www/http",
    "topic :: internet :: www/http :: dynamic content",
    "topic :: software development :: libraries :: application frameworks",
    "topic :: software development :: libraries :: python modules",
    "topic :: utilities"
  ],
  "description": "============================\natlassian python api wrapper\n============================\n|build status| |pypi version| |pypi - downloads| |license| |codacy badge| |docs| |discord|\n\nwhat is it?\n___________\nthe **atlassian-python-api** library provides a **simple** and convenient way to interact with atlassian products\n(such as jira service management, jira software, confluence, bitbucket and apps insight, x-ray) using python.\nit is based on the official rest apis of these products, as well as additional private methods and protocols\n(such as xml+rpc and raw http requests).\nthis library can be used to automate tasks, integrate with other tools and systems,\nand build custom applications that interact with atlassian products.\nit supports a wide range of atlassian products, including jira, confluence, bitbucket, statuspage and others,\nand is compatible with both atlassian server and cloud instances.\n\noverall, the **atlassian-python-api** is a useful tool for python developers who want to work with atlassian products.\nit is well-documented and actively maintained, and provides a convenient way to access the full range of\nfunctionality offered by the atlassian rest apis.\n\n\ndocumentation\n_____________\n\n`documentation`_\n\n.. _documentation: https://atlassian-python-api.readthedocs.io\n\nhow to install?\n_______________\n\nfrom pypi\n\n.. code-block:: console\n\n   $ pip install atlassian-python-api\n\nfrom source\n\n- git clone repository\n- use :code:`pip install -r requirements.txt` to install the required packages\n- or :code:`pipenv install && pipenv install --dev`\n\nexamples\n________\nmore **examples** in :code:`examples/` directory.\n\nhere's a short example of how to create a confluence page:\n\n.. code-block:: python\n\n    from atlassian import confluence\n\n    confluence = confluence(\n        url='http://localhost:8090',\n        username='admin',\n        password='admin')\n\n    status = confluence.create_page(\n        space='demo',\n        title='this is the title',\n        body='this is the body. you can use <strong>html tags</strong>!')\n\n    print(status)\n\nplease, note confluence cloud need to be used via token parameter.\nand here's another example of how to get issues from jira using jql query:\n\n.. code-block:: python\n\n    from atlassian import jira\n\n    jira = jira(\n        url='http://localhost:8080',\n        username='admin',\n        password='admin')\n    jql = 'project = demo and status in (\"to do\", \"in progress\") order by issuekey'\n    data = jira.jql(jql)\n    print(data)\n\nalso, you can use the bitbucket module e.g. for getting project list\n\n.. code-block:: python\n\n    from atlassian import bitbucket\n\n    bitbucket = bitbucket(\n            url='http://localhost:7990',\n            username='admin',\n            password='admin')\n\n    data = bitbucket.project_list()\n    print(data)\n\nnow you can use the jira service desk module. see docs.\nexample to get your requests:\n\n.. code-block:: python\n\n    from atlassian import servicedesk\n\n    sd = servicedesk(\n            url='http://localhost:7990',\n            username='admin',\n            password='admin')\n\n    data = sd.get_my_customer_requests()\n    print(data)\n\nusing insight (cmdb tool for jira):\n\n.. code-block:: python\n\n    from atlassian import insight\n\n    insight = insight(\n            url='http://localhost:7990',\n            username='admin',\n            password='admin')\n\n    data = insight.get_object(88)\n    print(data)\n\n\nusing xray (test management tool for jira):\n\n.. code-block:: python\n\n    from atlassian import xray\n\n    xr = xray(\n           url='http://localhost:7990',\n            username='admin',\n            password='admin')\n\n    data = xr.get_tests('test-001')\n    print(data)\n\nusing bamboo:\n\n.. code-block:: python\n\n    from atlassian import bamboo\n\n    bamboo = bamboo(\n            url='http://localhost:6990/bamboo/',\n            token=\"<token>\")\n\n    data = bamboo.get_elastic_configurations()\n    print(data)\n\nif you want to see the response in pretty print format json. feel free for use construction like:\n\n.. code-block:: python\n\n    from pprint import pprint\n    # you code here\n    # and then print using pprint(result) instead of print(result)\n    pprint(response)\n\nhow to contribute?\n__________________\nfirst of all, i am happy for any pr requests.\nlet's fork and provide your changes :)\nsee the `contribution guidelines for this project`_ for details on how to make changes to this library.\n\n.. _contribution guidelines for this project: contributing.rst\n.. |build status| image:: https://github.com/atlassian-api/atlassian-python-api/workflows/test/badge.svg?branch=master\n   :target: https://github.com/atlassian-api/atlassian-python-api/actions?query=workflow%3atest+branch%3amaster\n   :alt: build status\n.. |pypi version| image:: https://badge.fury.io/py/atlassian-python-api.svg\n   :target: https://badge.fury.io/py/atlassian-python-api\n   :alt: pypi version\n.. |license| image:: https://img.shields.io/pypi/l/atlassian-python-api.svg\n   :target: https://pypi.python.org/pypi/atlassian-python-api\n   :alt: license\n.. |codacy badge| image:: https://app.codacy.com/project/badge/grade/2cca43995cf041b8b181e2b2ff04cee6\n   :target: https://app.codacy.com/gh/atlassian-api/atlassian-python-api/dashboard\n   :alt: codacy badge\n.. |pypi - downloads| image:: https://static.pepy.tech/badge/atlassian-python-api/month\n   :alt: pypi - downloads\n.. |docs| image:: https://readthedocs.org/projects/atlassian-python-api/badge/?version=latest\n   :target: https://atlassian-python-api.readthedocs.io/?badge=latest\n   :alt: documentation status\n.. |discord| image:: https://img.shields.io/discord/756142204761669743.svg?label=&logo=discord&logocolor=ffffff&color=7389d8&labelcolor=6a7ec2\n   :alt: discord chat\n   :target: https://discord.gg/fcjsvqh\n\n\ncredits\n_______\nin addition to all the contributors we would like to thank these vendors:\n\n* atlassian_ for developing such a powerful ecosystem.\n* jetbrains_ for providing us with free licenses of pycharm_\n* microsoft_ for providing us with free licenses of vscode_\n* github_ for hosting our repository and continuous integration\n\n.. _atlassian: https://www.atlassian.com/\n.. _jetbrains: http://www.jetbrains.com\n.. _pycharm: http://www.jetbrains.com/pycharm/\n.. _github: https://github.com/\n.. _microsoft: https://github.com/microsoft/vscode/\n.. _vscode: https://code.visualstudio.com/\n",
  "docs_url": null,
  "keywords": "atlassian jira core software confluence bitbucket bamboo crowd portfolio tempo servicedesk assets api",
  "license": "apache license 2.0",
  "name": "atlassian-python-api",
  "package_url": "https://pypi.org/project/atlassian-python-api/",
  "project_url": "https://pypi.org/project/atlassian-python-api/",
  "project_urls": {
    "Download": "https://github.com/atlassian-api/atlassian-python-api",
    "Homepage": "https://github.com/atlassian-api/atlassian-python-api"
  },
  "release_url": "https://pypi.org/project/atlassian-python-api/3.41.4/",
  "requires_dist": [
    "deprecated",
    "requests",
    "six",
    "oauthlib",
    "requests-oauthlib",
    "requests-kerberos ; extra == 'kerberos'"
  ],
  "requires_python": "",
  "summary": "python atlassian rest api wrapper",
  "version": "3.41.4",
  "releases": [],
  "developers": [
    "gonchik.tsymzhitov@gmail.com",
    "gonchik_tsymzhitov",
    "matt@astrotech.io",
    "matt_harasymczuk"
  ],
  "kwds": "atlassian_ atlassian _atlassian jira apis",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_atlassian_python_api",
  "homepage": "https://github.com/atlassian-api/atlassian-python-api",
  "release_count": 208,
  "dependency_ids": [
    "pypi_deprecated",
    "pypi_oauthlib",
    "pypi_requests",
    "pypi_requests_kerberos",
    "pypi_requests_oauthlib",
    "pypi_six"
  ]
}
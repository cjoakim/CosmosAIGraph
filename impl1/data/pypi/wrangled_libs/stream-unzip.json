{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "topic :: system :: archiving :: compression"
  ],
  "description": "<!-- --8<-- [start:intro] -->\n# stream-unzip\n\n[![conda-forge package](https://img.shields.io/conda/v/conda-forge/stream-unzip?label=conda-forge&color=%234c1)](https://anaconda.org/conda-forge/stream-unzip) [![pypi package](https://img.shields.io/pypi/v/stream-unzip?label=pypi%20package&color=%234c1)](https://pypi.org/project/stream-unzip/) [![test suite](https://img.shields.io/github/actions/workflow/status/uktrade/stream-unzip/test.yml?label=test%20suite)](https://github.com/uktrade/stream-unzip/actions/workflows/test.yml) [![code coverage](https://img.shields.io/codecov/c/github/uktrade/stream-unzip?label=code%20coverage)](https://app.codecov.io/gh/uktrade/stream-unzip)\n\npython function to stream unzip all the files in a zip archive, without loading the entire zip file into memory or any of its uncompressed files.\n<!-- --8<-- [end:intro] -->\n\nto create zip files on the fly try [stream-zip](https://github.com/uktrade/stream-zip).\n\n<!-- --8<-- [start:features] -->\n## features\n\nin addition to being memory efficient, stream-unzip supports:\n\n- deflate-compressed zips. the is the historical standard for zip files.\n\n- deflate64-compressed zips. these are created by certain versions of windows explorer in some circumstances. python's zipfile module cannot open deflate64-compressed zips.\n\n- zip64 zip files. these are zip files that allow sizes far beyond the approximate 4gib limit of the original zip format.\n\n- winzip-style aes-encrypted zips. python's zipfile module cannot open aes-encrypted zips.\n\n- legacy-encrypted zip files. this is also known as zipcrypto/zip 2.0.\n\n- zip files created by java's zipoutputstream that are larger than 4gib. at the time of writing libarchive-based stream readers cannot read these without error.\n\n- bzip2-compressed zips.\n<!-- --8<-- [end:features] -->\n\n---\n\nvisit the [stream-unzip documentation](https://stream-unzip.docs.trade.gov.uk/) for usage instructions.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "stream-unzip",
  "package_url": "https://pypi.org/project/stream-unzip/",
  "project_url": "https://pypi.org/project/stream-unzip/",
  "project_urls": {
    "Documentation": "https://stream-unzip.docs.trade.gov.uk/",
    "Source": "https://github.com/uktrade/stream-unzip"
  },
  "release_url": "https://pypi.org/project/stream-unzip/0.0.89/",
  "requires_dist": [
    "pycryptodome>=3.10.1",
    "stream-inflate>=0.0.12",
    "coverage==6.2; extra == 'ci'",
    "pycryptodome==3.10.1; extra == 'ci'",
    "pytest-cov==3.0.0; extra == 'ci'",
    "pytest==6.2.5; extra == 'ci'",
    "stream-inflate==0.0.12; extra == 'ci'",
    "coverage>=6.2; extra == 'dev'",
    "pytest-cov>=3.0.0; extra == 'dev'",
    "pytest>=6.2.5; extra == 'dev'"
  ],
  "requires_python": ">=3.6.7",
  "summary": "python function to stream unzip all the files in a zip archive, without loading the entire zip file into memory or any of its uncompressed files",
  "version": "0.0.89",
  "releases": [],
  "developers": [
    "sre@digital.trade.gov.uk"
  ],
  "kwds": "winzip unzip bzip2 zipoutputstream zipfile",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_stream_unzip",
  "homepage": "",
  "release_count": 89,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_pycryptodome",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_stream_inflate"
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: c++",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: text processing :: linguistic"
  ],
  "description": "# `pycld3`\n\npython bindings to the compact language detector v3 (cld3).\n\n[![circleci](https://circleci.com/gh/bsolomon1124/pycld3.svg?style=svg)](https://circleci.com/gh/bsolomon1124/pycld3)\n[![license](https://img.shields.io/github/license/bsolomon1124/pycld3.svg)](https://github.com/bsolomon1124/pycld3/blob/master/license)\n[![pypi](https://img.shields.io/pypi/v/pycld3.svg)](https://pypi.org/project/pycld3/)\n[![wheel](https://img.shields.io/pypi/wheel/pycld3)](https://img.shields.io/pypi/wheel/pycld3)\n[![status](https://img.shields.io/pypi/status/pycld3.svg)](https://pypi.org/project/pycld3/)\n[![python](https://img.shields.io/pypi/pyversions/pycld3.svg)](https://pypi.org/project/pycld3)\n[![implementation](https://img.shields.io/pypi/implementation/pycld3)](https://pypi.org/project/pycld3)\n\n## newer alternative: `gcld3`\n\n**note**: since the original publication of this `pycld3`, google's `cld3` authors have published the python package [gcld3](https://pypi.org/project/gcld3/), which are official python bindings built with [pybind](https://github.com/pybind/pybind11). please check that project out as it is part of the canonical `cld3` repository and will likely stay in better lock step with any `cld3` changes over time.\n\n## overview\n\nthis package contains python bindings (via cython) to google's [cld3](https://github.com/google/cld3/) library.\n\n```python\n>>> import cld3\n>>> cld3.get_language(\"\u5f71\u97ff\u5305\u542b\u5c0d\u6c23\u5019\u7684\u8b8a\u5316\u4ee5\u53ca\u81ea\u7136\u8cc7\u6e90\u7684\u67af\u7aed\u7a0b\u5ea6\")\nlanguageprediction(language='zh', probability=0.999969482421875, is_reliable=true, proportion=1.0)\n```\n\nthe library outputs bcp-47-style language codes. for some languages, output is differentiated by script. language and script names from unicode cldr. it supports over 100 languages/scripts. see full list of [supported languages/scripts](https://github.com/google/cld3/blob/master/readme.md#supported-languages) in google's cld3 documentation.\n\n## installing with wheels: supported versions and platforms\n\nthis project supports **cpython versions 3.6 through 3.9.**\n\nwe publish [wheels](https://pypi.org/project/pycld3/#files) for the following matrix:\n\n- **macos**: cpython 3.6 thru 3.9\n- **linux**: cpython 3.6 thru 3.9; ([manylinux1](https://www.python.org/dev/peps/pep-0513/#the-manylinux1-policy))\n\n<sup>the wheels for both macos and manylinux1 include the external protobuf library copied into the wheel itself\nvia [auditwheel](https://github.com/pypa/auditwheel) or\n[delocate](https://github.com/matthew-brett/delocate) so that you won't need to install any extra non-pypi dependencies.</sup>\n\nif you are installing on one of the variants listed above, you should **not** need to have `protoc` or `libprotobuf` installed:\n\n```bash\npython -m pip install -u pycld3\n```\n\n## installing from source: prerequisites\n\nif you are not on a platform variant that is eligible to use a wheel, you may still be able to use `pycld3` via its [source distribution](https://docs.python.org/3/distutils/sourcedist.html) (`tar.gz`), but a bit more work is required to install.\nnamely, you'll also need:\n\n- the protobuf compiler (the `protoc` executable)\n- the protobuf development headers and `libprotoc` library\n- a compiler, preferably `g++`\n\nplease consult [the official protobuf repository](https://github.com/protocolbuffers/protobuf) for information on installing protobuf.\nthe project contains an [installation readme](https://github.com/protocolbuffers/protobuf/tree/master/src) that covers installation\non windows and unix.\n\nif for whatever reason you are on a unix host but unable to use the wheels (for instance, if you have an i686 architecture), here is a quick-and-dirty guide to installing.\n\n### debian/ubuntu\n\n```bash\nsudo apt-get update -y\nsudo apt-get install -y --no-install-recommends \\\n    g++ \\\n    protobuf-compiler \\\n    libprotobuf-dev\npython -m pip install -u pycld3\n```\n\n### alpine linux\n\n_note_:\n[alpine linux does not support pypi wheels](https://pythonspeed.com/articles/alpine-docker-python/)\nas of april 2020.  the steps below are mandatory on alpine linux because you will need\nto install from the source distribution.  if the situation permits, using a debian distro\nshould be much easier (and faster).\n\n```bash\napk --update add g++ protobuf protobuf-dev\npython -m pip install -u pycld3\n```\n\n### centos/rhel\n\ninstall from source, as root/uid 0:\n\n```bash\nsudo su -\nset -ex\npushd /opt\nprotobuf_version='3.11.4'\nyum update -y\nyum install -y autoconf automake gcc-c++ glibc-headers gzip libtool make python3-devel zlib-devel\ncurl -lo /opt/protobuf.tar.gz \\\n    \"https://github.com/protocolbuffers/protobuf/releases/download/v${protobuf_version}/protobuf-cpp-${protobuf_version}.tar.gz\"\ntar -xzvf protobuf.tar.gz\nrm -f protobuf.tar.gz\npushd \"protobuf-${protobuf_version}\"\n./configure --with-zlib --disable-debug && make && make install && ldconfig --verbose\npopd && rm -rf \"protobuf-${protobuf_version}\" && popd && set +ex\n\npython -m pip install -u pycld3\n```\n\nnote: the steps above are for centos 8.  for earlier versions, you may need to replace:\n\n- `gcc-c++` with `g++`\n- `python3-devel` with `python-devel`\n\n### macos/homebrew\n\n```bash\nbrew update\nbrew upgrade protobuf || brew install -v protobuf\npython -m pip install -u pycld3\n```\n\n### windows\n\nplease consult protobuf's\n[c++ installation - windows](https://github.com/protocolbuffers/protobuf/tree/master/src#c-installation---windows)\nsection for help with installing protobuf on windows.\n\nif you would like to help contribute windows wheels (preferably as a job within the project's\nci/cd pipelines), please [file an issue](https://github.com/bsolomon1124/pycld3).\n\n## usage\n\n`cld3` exports two module-level functions, `get_language()` and `get_frequent_languages()`:\n\n```python\n>>> import cld3\n\n>>> cld3.get_language(\"\u5f71\u97ff\u5305\u542b\u5c0d\u6c23\u5019\u7684\u8b8a\u5316\u4ee5\u53ca\u81ea\u7136\u8cc7\u6e90\u7684\u67af\u7aed\u7a0b\u5ea6\")\nlanguageprediction(language='zh', probability=0.999969482421875, is_reliable=true, proportion=1.0)\n\n>>> cld3.get_language(\"this is a test\")\nlanguageprediction(language='en', probability=0.9999980926513672, is_reliable=true, proportion=1.0)\n\n>>> for lang in cld3.get_frequent_languages(\n...     \"this piece of text is in english. \u0442\u043e\u0437\u0438 \u0442\u0435\u043a\u0441\u0442 \u0435 \u043d\u0430 \u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438.\",\n...     num_langs=3\n... ):\n...     print(lang)\n...\nlanguageprediction(language='bg', probability=0.9173890948295593, is_reliable=true, proportion=0.5853658318519592)\nlanguageprediction(language='en', probability=0.9999790191650391, is_reliable=true, proportion=0.4146341383457184)\n```\n\n## faq\n\n### `cld3` incorrectly detects my input.  how can i fix this?\n\na first resort is to **preprocess (clean) your input text** based on conditions specific to your program.\n\na salient example is to remove urls and email addresses from the input.  **cld3 (unlike [cld2](https://github.com/cld2owners/cld2))\ndoes almost none of this cleaning for you**, in the spirit of not penalizing other users with overhead that they may not need.\n\nhere's such an example using a simplified url regex from _regular expressions cookbook, 2nd ed._:\n\n```python\n>>> import re\n>>> import cld3\n\n# cld3 does not ignore the url components by default\n>>> s = \"je veux que: https://site.english.com/this/is/a/url/path/component#fragment\"\n>>> cld3.get_language(s)\nlanguageprediction(language='en', probability=0.5319557189941406, is_reliable=false, proportion=1.0)\n\n>>> url_re = r\"\\b(?:https?://|www\\.)[a-z0-9-]+(\\.[a-z0-9-]+)+(?:[/?].*)?\"\n>>> new_s = re.sub(url_re, \"\", s)\n>>> new_s\n'je veux que: '\n>>> cld3.get_language(new_s)\nlanguageprediction(language='fr', probability=0.9799421429634094, is_reliable=true, proportion=1.0)\n```\n\n<sup>_note_: this url regex aims for simplicity.  it requires a domain name, and doesn't allow a username or password; it allows the scheme\n(http or https) to be omitted if it can be inferred from the subdomain (www).  source: _regular expressions cookbook, 2nd ed._ - goyvaerts & levithan.</sup>\n\n**in some other cases, you cannot fix the incorrect detection.**\nlanguage detection algorithms in general may perform poorly with very short inputs.\nrarely should you trust the output of something like `detect(\"hi\")`.  keep this limitation in mind regardless\nof what library you are using.\n\nplease remember that, at the end of the day, this project is just a python wrapper to the cld3 c++ library that does the actual heavy-lifting.\n\n### i'm seeing an error during `pip` installation.  how can i fix this?\n\nfirst, please make sure you have read the [installation](#installation-supported-versions-and-platforms) section that that you have\ninstalled protobuf if necessary.\n\nif that doesn't help, please [file an issue](https://github.com/bsolomon1124/pycld3/issues) in this repository.\nthe build process for this project is somewhat complex because it involves both cython and protobuf, but i do my best\nto make it work everywhere possible.\n\n### protobuf is installed, but i'm still seeing \"cannot open shared object file\"\n\nif you've installed protobuf, but are seeing an error such as:\n\n```\nimporterror: libprotobuf.so.22: cannot open shared object file: no such file or directory\n```\n\nthis likely means that python is not finding the `libprotobuf` shared object,\npossibly because `ldconfig` didn't do what it was supposed to.\nyou may need to tell it where to look.\n\nyou can find where the library sits via:\n\n```bash\n$ find /usr -name 'libprotoc.so' \\( -type l -o -type f \\)\n/usr/local/lib/libprotoc.so\n```\n\nthen, you can add the directory containing this file to `ld_library_path`:\n\n```bash\nexport ld_library_path=\"$(dirname $(find /usr -name 'libprotoc.so' \\( -type l -o -type f \\))):$ld_library_path\"\n```\n\nyou can quickly test that this worked:\n\n```bash\n$ python -c 'import cld3; print(cld3.get_language(\"\u5f71\u97ff\u5305\u542b\u5c0d\u6c23\u5019\u7684\u8b8a\u5316\u4ee5\u53ca\u81ea\u7136\u8cc7\u6e90\u7684\u67af\u7aed\u7a0b\u5ea6\"))'\nlanguageprediction(language='zh', probability=0.999969482421875, is_reliable=true, proportion=1.0)\n```\n\n### authors\n\nthis repository contains a fork of [`google/cld3`](https://github.com/google/cld3/) at commit 06f695f.  the license for `google/cld3` can be found at\n[licenses/cld3\\_license](https://github.com/bsolomon1124/pycld3/blob/master/licenses/cld3_license).\n\nthis repository is a combination of changes [introduced](https://github.com/google/cld3/issues/15) by [various forks](https://github.com/google/cld3/network/members) of `google/cld3` by the following people:\n\n- johannes baiter ([@jbaiter](https://github.com/jbaiter))\n- elizabeth myers ([@elizafox](https://github.com/elizafox))\n- witold bo\u0142t ([@houp](https://github.com/houp))\n- alfredo luque ([@iamthebot](https://github.com/iamthebot))\n- wisesight ([@wisesight](https://github.com/wisesight))\n- rnogales ([@rnogales94](https://github.com/rnogales94))\n- brad solomon ([@bsolomon1124](https://github.com/bsolomon1124))\n\n\n",
  "docs_url": null,
  "keywords": "cld3,cffi,language,langdetect,cld,nlp",
  "license": "apache 2.0",
  "name": "pycld3",
  "package_url": "https://pypi.org/project/pycld3/",
  "project_url": "https://pypi.org/project/pycld3/",
  "project_urls": {
    "Homepage": "https://github.com/bsolomon1124/pycld3"
  },
  "release_url": "https://pypi.org/project/pycld3/0.22/",
  "requires_dist": [],
  "requires_python": ">2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*",
  "summary": "cld3 python bindings",
  "version": "0.22",
  "releases": [],
  "developers": [
    "brad_solomon",
    "bsolomon@protonmail.com"
  ],
  "kwds": "pycld3 cld3 pybind11 pybind python3",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_pycld3",
  "homepage": "https://github.com/bsolomon1124/pycld3",
  "release_count": 19,
  "dependency_ids": []
}
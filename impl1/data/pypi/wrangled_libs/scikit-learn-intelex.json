{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: other audience",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development",
    "topic :: system"
  ],
  "description": "\n# intel(r) extension for scikit-learn*\n\n[![build status](https://dev.azure.com/daal/daal4py/_apis/build/status/ci?branchname=master)](https://dev.azure.com/daal/daal4py/_build/latest?definitionid=9&branchname=master)\n[![coverity scan build status](https://scan.coverity.com/projects/21716/badge.svg)](https://scan.coverity.com/projects/daal4py)\n[![join the community on github discussions](https://badgen.net/badge/join%20the%20discussion/on%20github/black?icon=github)](https://github.com/intel/scikit-learn-intelex/discussions)\n[![pypi version](https://img.shields.io/pypi/v/scikit-learn-intelex)](https://pypi.org/project/scikit-learn-intelex/)\n[![conda version](https://img.shields.io/conda/vn/conda-forge/scikit-learn-intelex)](https://anaconda.org/conda-forge/scikit-learn-intelex)\n\nwith intel(r) extension for scikit-learn you can accelerate your scikit-learn applications and still have full conformance with all scikit-learn apis and algorithms. this is a free software ai accelerator that brings over 10-100x acceleration across a variety of applications. and you do not even need to change the existing code!\n\nthe acceleration is achieved through the use of the intel(r) oneapi data analytics library ([onedal](https://github.com/oneapi-src/onedal)). patching scikit-learn makes it a well-suited machine learning framework for dealing with real-life problems.\n\n\u26a0\ufe0fintel(r) extension for scikit-learn contains scikit-learn patching functionality that was originally available in [**daal4py**](https://github.com/intel/scikit-learn-intelex/tree/master/daal4py) package. all future updates for the patches will be available only in intel(r) extension for scikit-learn. we recommend you to use scikit-learn-intelex package instead of daal4py.\nyou can learn more about daal4py in [daal4py documentation](https://intelpython.github.io/daal4py).\n\n## \ud83d\udc40 follow us on medium\n\nwe publish blogs on medium, so [follow us](https://medium.com/intel-analytics-software/tagged/machine-learning) to learn tips and tricks for more efficient data analysis with the help of intel(r) extension for scikit-learn. here are our latest blogs:\n\n- [save time and money with intel extension for scikit-learn](https://medium.com/intel-analytics-software/save-time-and-money-with-intel-extension-for-scikit-learn-33627425ae4)\n- [superior machine learning performance on the latest intel xeon scalable processors](https://medium.com/intel-analytics-software/superior-machine-learning-performance-on-the-latest-intel-xeon-scalable-processor-efdec279f5a3)\n- [leverage intel optimizations in scikit-learn](https://medium.com/intel-analytics-software/leverage-intel-optimizations-in-scikit-learn-f562cb9d5544)\n- [intel gives scikit-learn the performance boost data scientists need](https://medium.com/intel-analytics-software/intel-gives-scikit-learn-the-performance-boost-data-scientists-need-42eb47c80b18)\n- [from hours to minutes: 600x faster svm](https://medium.com/intel-analytics-software/from-hours-to-minutes-600x-faster-svm-647f904c31ae)\n- [improve the performance of xgboost and lightgbm inference](https://medium.com/intel-analytics-software/improving-the-performance-of-xgboost-and-lightgbm-inference-3b542c03447e)\n- [accelerate kaggle challenges using intel ai analytics toolkit](https://medium.com/intel-analytics-software/accelerate-kaggle-challenges-using-intel-ai-analytics-toolkit-beb148f66d5a)\n- [accelerate your scikit-learn applications](https://medium.com/intel-analytics-software/improving-the-performance-of-xgboost-and-lightgbm-inference-3b542c03447e)\n- [accelerate linear models for machine learning](https://medium.com/intel-analytics-software/accelerating-linear-models-for-machine-learning-5a75ff50a0fe)\n- [accelerate k-means clustering](https://medium.com/intel-analytics-software/accelerate-k-means-clustering-6385088788a1)\n\n## \ud83d\udd17 important links\n- [notebook examples](https://github.com/intel/scikit-learn-intelex/tree/master/examples/notebooks)\n- [documentation](https://intel.github.io/scikit-learn-intelex/)\n- [scikit-learn api and patching](https://intel.github.io/scikit-learn-intelex/)\n- [benchmark code](https://github.com/intelpython/scikit-learn_bench)\n- [building from sources](https://github.com/intel/scikit-learn-intelex/blob/master/install.md)\n- [about intel(r) oneapi data analytics library](https://github.com/oneapi-src/onedal)\n- [about intel(r) daal4py](https://github.com/intel/scikit-learn-intelex/tree/master/daal4py)\n\n## \ud83d\udcac support\n\nreport issues, ask questions, and provide suggestions using:\n\n- [github issues](https://github.com/intel/scikit-learn-intelex/issues)\n- [github discussions](https://github.com/intel/scikit-learn-intelex/discussions)\n- [forum](https://community.intel.com/t5/intel-distribution-for-python/bd-p/distribution-python)\n\nyou may reach out to project maintainers privately at onedal.maintainers@intel.com\n\n# \ud83d\udee0 installation\nintel(r) extension for scikit-learn is available at the [python package index](https://pypi.org/project/scikit-learn-intelex/),\non anaconda cloud in [conda-forge channel](https://anaconda.org/conda-forge/scikit-learn-intelex) and in [intel channel](https://anaconda.org/intel/scikit-learn-intelex).\nintel(r) extension for scikit-learn is also available as a part of [intel\u00ae oneapi ai analytics toolkit](https://software.intel.com/content/www/us/en/develop/tools/oneapi/ai-analytics-toolkit.html)\u202f(ai kit).\n\n- pypi (recommended by default)\n\n```bash\npip install scikit-learn-intelex\n```\n\n- anaconda cloud from conda-forge channel (recommended for conda users by default)\n\n```bash\n  conda config --add channels conda-forge\n  conda config --set channel_priority strict\n  conda install scikit-learn-intelex\n```\n\n- anaconda cloud from intel channel (recommended for intel\u00ae distribution for python users)\n\n```bash\n  conda config --add channels intel\n  conda config --set channel_priority strict\n  conda install scikit-learn-intelex\n```\n\n<details><summary>[click to expand] \u2139\ufe0f supported configurations </summary>\n\n#### \ud83d\udce6 pypi channel\n\n| os / python version     | **python 3.8** | **python 3.9** | **python 3.10**| **python 3.11**| **python 3.12**|\n| :-----------------------| :------------: | :-------------:| :------------: | :------------: | :------------: |\n|    **linux**            |    [cpu, gpu]  |  [cpu, gpu]    |   [cpu, gpu]   |   [cpu, gpu]   |   [cpu, gpu]   |\n|    **windows**          |    [cpu, gpu]  |  [cpu, gpu]    |   [cpu, gpu]   |   [cpu, gpu]   |   [cpu, gpu]   |\n\n#### \ud83d\udce6 anaconda cloud: conda-forge channel\n\n| os / python version     | **python 3.8** | **python 3.9** | **python 3.10**| **python 3.11**| **python 3.12**|\n| :-----------------------| :------------: | :------------: | :------------: | :------------: | :------------: |\n|    **linux**            |     [cpu]      |     [cpu]      |     [cpu]      |     [cpu]      |     [cpu]      |\n|    **windows**          |     [cpu]      |     [cpu]      |     [cpu]      |     [cpu]      |     [cpu]      |\n\n#### \ud83d\udce6 anaconda cloud: intel channel\n\n| os / python version     | **python 3.8** | **python 3.9** | **python 3.10**| **python 3.11**| **python 3.12**|\n| :-----------------------| :------------: | :-------------:| :------------: | :------------: | :------------: |\n|    **linux**            |    [cpu, gpu]  |  [cpu, gpu]    |   [cpu, gpu]   |   [cpu, gpu]   |   [cpu, gpu]   |\n|    **windows**          |    [cpu, gpu]  |  [cpu, gpu]    |   [cpu, gpu]   |   [cpu, gpu]   |   [cpu, gpu]   |\n\n</details>\n\n\u26a0\ufe0f note: *gpu support is an optional dependency. required dependencies for gpu support\nwill not be downloaded. you need to manually install ***dpcpp_cpp_rt*** package.*\n\n<details><summary>[click to expand] \u2139\ufe0f how to install dpcpp_cpp_rt package </summary>\n\n- pypi\n\n```bash\npip install --upgrade dpcpp_cpp_rt\n```\n\n- anaconda cloud\n\n```bash\nconda install dpcpp_cpp_rt -c intel\n```\n\n</details>\n\nyou can [build the package from sources](https://github.com/intel/scikit-learn-intelex/blob/master/install.md) as well.\n\n# \u26a1\ufe0f get started\n\nintel cpu optimizations patching\n```py\nimport numpy as np\nfrom sklearnex import patch_sklearn\npatch_sklearn()\n\nfrom sklearn.cluster import dbscan\n\nx = np.array([[1., 2.], [2., 2.], [2., 3.],\n              [8., 7.], [8., 8.], [25., 80.]], dtype=np.float32)\nclustering = dbscan(eps=3, min_samples=2).fit(x)\n```\n\nintel gpu optimizations patching\n```py\nimport numpy as np\nimport dpctl\nfrom sklearnex import patch_sklearn, config_context\npatch_sklearn()\n\nfrom sklearn.cluster import dbscan\n\nx = np.array([[1., 2.], [2., 2.], [2., 3.],\n              [8., 7.], [8., 8.], [25., 80.]], dtype=np.float32)\nwith config_context(target_offload=\"gpu:0\"):\n    clustering = dbscan(eps=3, min_samples=2).fit(x)\n```\n\n# \ud83d\ude80 scikit-learn patching\n\n![](https://raw.githubusercontent.com/intel/scikit-learn-intelex/master/doc/sources/_static/scikit-learn-acceleration-2021.2.3.png)\nconfigurations:\n- hw: c5.24xlarge aws ec2 instance using an intel xeon platinum 8275cl with 2 sockets and 24 cores per socket\n- sw: scikit-learn version 0.24.2, scikit-learn-intelex version 2021.2.3, python 3.8\n\n[benchmarks code](https://github.com/intelpython/scikit-learn_bench)\n\n<details><summary>[click to expand] \u2139\ufe0f reproduce results </summary>\n\n- with intel\u00ae extension for scikit-learn enabled:\n\n```bash\npython runner.py --configs configs/blogs/skl_conda_config.json -\u2013report\n```\n\n- with the original scikit-learn:\n\n```bash\npython runner.py --configs configs/blogs/skl_conda_config.json -\u2013report --no-intel-optimized\n```\n</details>\n\nintel(r) extension for scikit-learn patching affects performance of specific scikit-learn functionality. refer to the [list of supported algorithms and parameters](https://intel.github.io/scikit-learn-intelex/algorithms.html) for details. in cases when unsupported parameters are used, the package fallbacks into original scikit-learn. if the patching does not cover your scenarios, [submit an issue on github](https://github.com/intel/scikit-learn-intelex/issues).\n\n\u26a0\ufe0f we support optimizations for the last four versions of scikit-learn. the latest release of scikit-learn-intelex-2024.0.x supports scikit-learn 1.0.x, 1.1.x, 1.2.x and 1.3.x.\n\n## \ud83d\udcdc intel(r) extension for scikit-learn verbose\n\nto find out which implementation of the algorithm is currently used (intel(r) extension for scikit-learn or original scikit-learn), set the environment variable:\n- on linux: `export sklearnex_verbose=info`\n- on windows: `set sklearnex_verbose=info`\n\nfor example, for dbscan you get one of these print statements depending on which implementation is used:\n- `sklearnex info: sklearn.cluster.dbscan.fit: running accelerated version on cpu`\n- `sklearnex info: sklearn.cluster.dbscan.fit: fallback to original scikit-learn`\n\n[read more in the documentation](https://intel.github.io/scikit-learn-intelex/).\n\n\n",
  "docs_url": null,
  "keywords": "machine learning,scikit-learn,data science,data analytics",
  "license": "apache v2.0",
  "name": "scikit-learn-intelex",
  "package_url": "https://pypi.org/project/scikit-learn-intelex/",
  "project_url": "https://pypi.org/project/scikit-learn-intelex/",
  "project_urls": {
    "Bug Tracker": "https://github.com/intel/scikit-learn-intelex/issues",
    "Documentation": "https://intel.github.io/scikit-learn-intelex/",
    "Homepage": "https://github.com/intel/scikit-learn-intelex",
    "Source Code": "https://github.com/intel/scikit-learn-intelex"
  },
  "release_url": "https://pypi.org/project/scikit-learn-intelex/2024.0.1/",
  "requires_dist": [
    "daal4py (==2024.0.1)",
    "scikit-learn (>=0.22)"
  ],
  "requires_python": ">=3.7",
  "summary": "intel(r) extension for scikit-learn is a seamless way to speed up your scikit-learn application.",
  "version": "2024.0.1",
  "releases": [],
  "developers": [
    "intel_corporation",
    "onedal.maintainers@intel.com"
  ],
  "kwds": "intelpython scikit patch_sklearn daal4py sklearn",
  "license_kwds": "apache v2.0",
  "libtype": "pypi",
  "id": "pypi_scikit_learn_intelex",
  "homepage": "https://github.com/intel/scikit-learn-intelex",
  "release_count": 23,
  "dependency_ids": [
    "pypi_daal4py",
    "pypi_scikit_learn"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# microsoft azure sdk for python\n\nthis is the microsoft azure batch management client library.\nthis package has been tested with python 3.7+.\nfor a more complete view of azure libraries, see the [azure sdk python release](https://aka.ms/azsdk/python/all).\n\n## _disclaimer_\n\n_azure sdk python packages support for python 2.7 has ended 01 january 2022. for more information and questions, please refer to https://github.com/azure/azure-sdk-for-python/issues/20691_\n\n## getting started\n\n### prerequisites\n\n- python 3.7+ is required to use this package.\n- [azure subscription](https://azure.microsoft.com/free/)\n\n### install the package\n\n```bash\npip install azure-mgmt-batch\npip install azure-identity\n```\n\n### authentication\n\nby default, [azure active directory](https://aka.ms/awps/aad) token authentication depends on correct configure of following environment variables.\n\n- `azure_client_id` for azure client id.\n- `azure_tenant_id` for azure tenant id.\n- `azure_client_secret` for azure client secret.\n\nin addition, azure subscription id can be configured via environment variable `azure_subscription_id`.\n\nwith above configuration, client can be authenticated by following code:\n\n```python\nfrom azure.identity import defaultazurecredential\nfrom azure.mgmt.batch import batchmanagementclient\nimport os\n\nsub_id = os.getenv(\"azure_subscription_id\")\nclient = batchmanagementclient(credential=defaultazurecredential(), subscription_id=sub_id)\n```\n\n## examples\n\ncode samples for this package can be found at:\n- [search batch management](https://docs.microsoft.com/samples/browse/?languages=python&term=getting%20started%20-%20managing&terms=getting%20started%20-%20managing) on docs.microsoft.com\n- [azure python mgmt sdk samples repo](https://aka.ms/azsdk/python/mgmt/samples)\n\n\n## troubleshooting\n\n## next steps\n\n## provide feedback\n\nif you encounter any bugs or have suggestions, please file an issue in the\n[issues](https://github.com/azure/azure-sdk-for-python/issues)\nsection of the project. \n\n\n![impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2fazure-mgmt-batch%2freadme.png)\n\n\n# release history\n\n## 17.2.0 (2023-12-18)\n\n### features added\n\n  - model osdisk has a new parameter caching\n  - model osdisk has a new parameter disk_size_gb\n  - model osdisk has a new parameter managed_disk\n  - model osdisk has a new parameter write_accelerator_enabled\n  - model pool has a new parameter resource_tags\n  - model virtualmachineconfiguration has a new parameter security_profile\n  - model virtualmachineconfiguration has a new parameter service_artifact_reference\n\n## 17.1.0 (2023-07-21)\n\n### features added\n\n  - model networkconfiguration has a new parameter enable_accelerated_networking\n  - model vmextension has a new parameter enable_automatic_upgrade\n  - model containerconfiguration allows two possible values: `dockercompatible` and `cricompatible` instead of fixed value `dockercompatible`\n\n## 17.0.0 (2022-11-23)\n\n### features added\n\n  - model networkconfiguration has a new parameter dynamic_vnet_assignment_scope\n  - model pool has a new parameter current_node_communication_mode\n  - model pool has a new parameter target_node_communication_mode\n  - model privatelinkserviceconnectionstate has a new parameter actions_required\n\n### breaking changes\n\n  - model cifsmountconfiguration has a new required parameter user_name\n  - model cifsmountconfiguration no longer has parameter username\n  - model networkconfiguration no longer has parameter dynamic_v_net_assignment_scope\n  - model privatelinkserviceconnectionstate no longer has parameter action_required\n\n## 16.2.0 (2022-06-06)\n\n**features**\n\n  - added operation privateendpointconnectionoperations.begin_delete\n  - model batchaccount has a new parameter network_profile\n  - model batchaccount has a new parameter node_management_endpoint\n  - model batchaccountcreateparameters has a new parameter network_profile\n  - model batchaccountupdateparameters has a new parameter network_profile\n  - model batchaccountupdateparameters has a new parameter public_network_access\n  - model privateendpointconnection has a new parameter group_ids\n\n## 16.1.0 (2022-02-24)\n\n**features**\n\n  - added operation batchaccountoperations.get_detector\n  - added operation batchaccountoperations.list_detectors\n  - model networkconfiguration has a new parameter dynamic_v_net_assignment_scope\n\n## 16.0.0 (2021-07-30)\n\n**features**\n\n  - model batchaccount has a new parameter allowed_authentication_modes\n  - model autostoragebaseproperties has a new parameter node_identity_reference\n  - model autostoragebaseproperties has a new parameter authentication_mode\n  - model azureblobfilesystemconfiguration has a new parameter identity_reference\n  - model batchaccountupdateparameters has a new parameter allowed_authentication_modes\n  - model containerregistry has a new parameter identity_reference\n  - model operation has a new parameter is_data_action\n  - model batchaccountcreateparameters has a new parameter allowed_authentication_modes\n  - model autostorageproperties has a new parameter node_identity_reference\n  - model autostorageproperties has a new parameter authentication_mode\n  - model resourcefile has a new parameter identity_reference\n  - model virtualmachineconfiguration has a new parameter os_disk\n  - added operation batchaccountoperations.list_outbound_network_dependencies_endpoints\n  - added operation locationoperations.list_supported_cloud_service_skus\n  - added operation locationoperations.list_supported_virtual_machine_skus\n\n**breaking changes**\n\n  - rename `batchmanagement` to `batchmanagementclient`\n\n## 15.0.0 (2021-02-01)\n\n- fix changelog\n\n## 15.0.0b1 (2021-01-28)\n\n**features**\n\n  - added new extensions property to virtualmachineconfiguration on pools to specify virtual machine extensions for nodes\n  - added the ability to specify availability zones using a new property node_placement_configuration on virtualmachineconfiguration\n  - added a new identity property on pool to specify a managed identity\n  - added a new user_assigned_identities on batchaccountidentity to specify a user managed identity\n  - added certificate operation method pooloperations.create\n  - added certificate operation method certificateoperations.create\n\n**breaking changes**\n\n  - removed certificate operation method pooloperations.begin_create. certificate operations are not long running operations so this was incorrect.\n  - removed certificate operation method certificateoperations.begin_create. certificate operations are not long running operations so this was incorrect.\n\n## 14.0.0 (2020-12-22)\n\n- ga release\n\n## 14.0.0b1 (2020-10-23)\n\nthis is beta preview version.\n\nthis version uses a next-generation code generator that introduces important breaking changes, but also important new features (like unified authentication and async programming).\n\n**general breaking changes**\n\n- credential system has been completly revamped:\n\n  - `azure.common.credentials` or `msrestazure.azure_active_directory` instances are no longer supported, use the `azure-identity` classes instead: https://pypi.org/project/azure-identity/\n  - `credentials` parameter has been renamed `credential`\n\n- the `config` attribute no longer exists on a client, configuration should be passed as kwarg. example: `myclient(credential, subscription_id, enable_logging=true)`. for a complete set of\n  supported options, see the [parameters accept in init documentation of azure-core](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/client_library_developer.md#available-policies)\n- you can't import a `version` module anymore, use `__version__` instead\n- operations that used to return a `msrest.polling.lropoller` now returns a `azure.core.polling.lropoller` and are prefixed with `begin_`.\n- exceptions tree have been simplified and most exceptions are now `azure.core.exceptions.httpresponseerror` (`clouderror` has been removed).\n- most of the operation kwarg have changed. some of the most noticeable:\n\n  - `raw` has been removed. equivalent feature can be found using `cls`, a callback that will give access to internal http response for advanced user\n  - for a complete set of\n  supported options, see the [parameters accept in request documentation of azure-core](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/client_library_developer.md#available-policies)\n\n**general new features**\n\n- type annotations support using `typing`. sdks are mypy ready.\n- this client has now stable and official support for async. check the `aio` namespace of your package to find the async client.\n- this client now support natively tracing library like opencensus or opentelemetry. see this [tracing quickstart](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/core/azure-core-tracing-opentelemetry) for an overview.\n\n## 9.0.0 (2020-05-29)\n### rest api version\n- this version targets rest api version 2020-05-01.\n\n### features\n- added ability to access the batch dataplane api without needing a public dns entry for the account via the new `public_network_access` property on `batchaccount`.\n- added new `privatelinkresource` and `privateendpointconnection` resource types. these are both only used when the `public_network_access` property on `batchaccount` is set to `disabled`.\n  - when `public_network_access` is set to `disabled` a new `privatelinkresource` is visible in that account, which can be used to connect to the account using an arm private endpoint in your vnet.\n- added ability to encrypt `computenode` disk drives using the new `disk_encryption_configuration` property of `virtualmachineconfiguration`.\n- **[breaking]** the `id` property of `imagereference` can now only refer to a shared image gallery image.\n- **[breaking]** pools can now be provisioned without a public ip using the new `public_ip_configuration` property of `networkconfiguration`.\n  - the `public_ips` property of `networkconfiguration` has moved in to `publicipaddressconfiguration` as well. this property can only be specified if `ipaddressprovisioningtype` is `usermanaged`.\n- adds a new property `identity` of type `batchaccountidentity` to `batchaccount`. this can be used to configure how customer data is encrypted inside the batch account.\n    - this new property is configurable at  the account level on create and update through a new `identity` property on `batchaccountcreateparameters` and `batchaccountupdateparameters`\n\n### fixes\n- [breaking] move tags from being an argument on create and update pool parameters to being a part of `batchaccountcreateparameters` and `batchaccountupdateparameters` to properly reflect the rest api\n\n## 8.0.1 (2020-05-26) [deprecated]\n### notices\n- this version targeted an invalid rest api. this version does not honor the associated rest api contract.\n\n### bugfixes\n- fix issues in privateendpointconnection get and update methods due to mistakes in the swagger specification causing validation to fail. it is advised to use version 9+ to make use of the features added in this version.\n\n## 8.0.0 (2020-04-10) [deprecated]\n### notices\n- this version targeted an invalid rest api. currently the privateendpoint get() and update() functions do not function correctly. it is advised to use version 9+ to make use of the features added in this version.\n\n### rest api version\n- this version targets rest api version 2020-03-01.\n\n### features\n- added ability to access the batch dataplane api without needing a public dns entry for the account via the new `public_network_access` property on `batchaccount`.\n- added new `privatelinkresource` and `privateendpointconnection` resource types. these are both only used when the `public_network_access` property on `batchaccount` is set to `disabled`.\n  - when `public_network_access` is set to `disabled` a new `privatelinkresource` is visible in that account, which can be used to connect to the account using an arm private endpoint in your vnet.\n- added ability to encrypt `computenode` disk drives using the new `disk_encryption_configuration` property of `virtualmachineconfiguration`.\n- **[breaking]** the `id` property of `imagereference` can now only refer to a shared image gallery image.\n- **[breaking]** pools can now be provisioned without a public ip using the new `public_ip_configuration` property of `networkconfiguration`.\n  - the `public_ips` property of `networkconfiguration` has moved in to `publicipaddressconfiguration` as well. this property can only be specified if `ipaddressprovisioningtype` is `usermanaged`.\n\n\n## 7.0.0 (2019-08-05)\n\n  - added ability to specify a collection of public ips on\n    `networkconfiguration` via the new `public_ips` property. this\n    guarantees nodes in the pool will have an ip from the list user\n    provided ips.\n  - added ability to mount remote file-systems on each node of a pool\n    via the `mount_configuration` property on `pool`.\n  - shared image gallery images can now be specified on the `id`\n    property of `imagereference` by referencing the image via its arm\n    id.\n  - **[breaking]** when not specified, the default value for\n    `wait_for_success` on `starttask` is now `true` (was\n    `false`).\n  - **[breaking]** when not specified, the default value for `scope`\n    on `autouserspecification` is now always `pool` (was `task` on\n    windows nodes, `pool` on linux nodes).\n  - **breaking** model signatures are now using only keywords-arguments\n    syntax. each positional argument must be rewritten as a keyword\n    argument.\n  - enum types now use the \"str\" mixin (class azureenum(str, enum)) to\n    improve the behavior when unrecognized enum values are encountered.\n\n## 6.0.0 (2019-01-14)\n\n  -   - **[breaking]** resourcefile improvements\n\n          - added the ability specify an entire azure storage container\n            in `resourcefile`.\n\n          - a new property `httpurl` replaces `blobsource`. this can\n            be any http url. previously, this had to be an azure blob\n            storage url.\n\n          -   - when constructing a `resourcefile` you can now choose\n                from one of the following options:\n\n                  - `httpurl`: specify an http url pointing to a\n                    specific file to download.\n                  - `storagecontainerurl`: specify an azure storage\n                    container url. all blobs matching the `blobprefix`\n                    in the storage container will be downloaded.\n                  - `autostoragecontainername`: specify the name of a\n                    container in the batch registered auto-storage\n                    account. all blobs matching the `blobprefix` in\n                    the storage container will be downloaded.\n\n  - **[breaking]** removed `osdisk` property from\n    `virtualmachineconfiguration`. this property is no longer\n    supported.\n\n  - **[breaking]** `application` no longer has a `packages`\n    property, instead the packages can be retrieved via the new\n    `applicationpackage.list` api.\n\n  - **[breaking]** `targetosversion` is now `osversion`, and\n    `currentosversion` is no longer supported on\n    `cloudserviceconfiguration`.\n\n  - added support on windows pools for creating users with a specific\n    login mode (either `batch` or `interactive`) via\n    `windowsuserconfiguration.loginmode`.\n\n  - added support for `containerconfiguration` when creating a pool.\n\n## 5.0.1 (2018-05-25)\n\n**bugfixes**\n\n  - compatibility of the sdist with wheel 0.31.0\n  - msrestazure dependency version range\n\n## 5.0.0 (2017-11-13)\n\n  - batch pools are now arm resources that can be created, updated and\n    managed using the new client.pooloperations.\n  - batch certificates are now arm resources that can be created,\n    updated and managed using the new client.certificateoperations.\n\n## 4.1.0 (2017-07-24)\n\n  - new operation to check the availability and validity of a batch\n    account name.\n\n## 4.0.0 (2017-05-10)\n\n  - new operation to list the operations available for the\n    microsoft.batch provider, includes new `operation` and\n    `operationdisplay` models.\n  - renamed `addapplicationparameters` to\n    `applicationcreateparameters`.\n  - renamed `updateapplicationparameters` to\n    `applicationupdateparameters`.\n  - removed `core_quota` attribute from `batchaccount` object, now\n    replaced by separate `dedicated_core_quota` and\n    `low_priority_core_quota`.\n  - `batchaccountkeys` object now has additional `account_name`\n    attribute.\n\n## 3.0.1 (2017-04-19)\n\n  - this wheel package is now built with the azure wheel extension\n\n## 3.0.0 (2017-03-07)\n\n  - updated `batchaccount` model - support for pool allocation in the\n    user's subscription.\n  - updated `batchaccount` model - support for referencing an azure\n    key vault for accounts created with a pool allocation mode of\n    usersubscription.\n  - updated `batchaccount` model - properties are now read only.\n  - updated `applicationpackage` model - properties are now read only.\n  - updated `batchaccountkeys` model - properties are now read only.\n  - updated `batchlocationquota` model - properties are now read only.\n\n## 2.0.0 (2016-10-04)\n\n  - renamed `accountresource` to `batchaccount`.\n  - renamed `accountoperations` to `batchaccountoperations`. the\n    `ibatchmanagementclient.account` property was also renamed to\n    `ibatchmanagementclient.batchaccount`.\n  - split `application` and `applicationpackage` operations up into\n    two separate operation groups.\n  - updated `application` and `applicationpackage` methods to use\n    the standard `create`, `delete`, `update` syntax. for example\n    creating an `application` is done via\n    `applicationoperations.create`.\n  - renamed `subscriptionoperations` to `locationoperations` and\n    changed `subscriptionoperations.getsubscriptionquotas` to be\n    `locationoperations.getquotas`.\n  - this version targets rest api version 2015-12-01.\n\n## 1.0.0 (2016-08-09)\n\n  - initial release\n",
  "docs_url": null,
  "keywords": "azure,azure sdk",
  "license": "mit license",
  "name": "azure-mgmt-batch",
  "package_url": "https://pypi.org/project/azure-mgmt-batch/",
  "project_url": "https://pypi.org/project/azure-mgmt-batch/",
  "project_urls": {
    "Homepage": "https://github.com/Azure/azure-sdk-for-python"
  },
  "release_url": "https://pypi.org/project/azure-mgmt-batch/17.2.0/",
  "requires_dist": [
    "isodate<1.0.0,>=0.6.1",
    "azure-common~=1.1",
    "azure-mgmt-core<2.0.0,>=1.3.2",
    "typing-extensions>=4.3.0; python_version < \"3.8.0\""
  ],
  "requires_python": ">=3.7",
  "summary": "microsoft azure batch management client library for python",
  "version": "17.2.0",
  "releases": [],
  "developers": [
    "azpysdkhelp@microsoft.com",
    "microsoft_corporation"
  ],
  "kwds": "_azure azure_client_secret azure_active_directory azure azure_client_id",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_azure_mgmt_batch",
  "homepage": "https://github.com/azure/azure-sdk-for-python",
  "release_count": 29,
  "dependency_ids": [
    "pypi_azure_common",
    "pypi_azure_mgmt_core",
    "pypi_isodate",
    "pypi_typing_extensions"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: internet :: www/http",
    "topic :: software development :: libraries :: python modules",
    "topic :: utilities"
  ],
  "description": "python-redmine\n==============\n\n.. image:: https://badge.fury.io/py/python-redmine.svg\n   :target: https://badge.fury.io/py/python-redmine\n\n.. image:: https://img.shields.io/travis/com/maxtepkeev/python-redmine/master\n   :target: https://app.travis-ci.com/maxtepkeev/python-redmine\n\n.. image:: https://img.shields.io/coverallscoverage/github/maxtepkeev/python-redmine?branch=master\n   :target: https://coveralls.io/github/maxtepkeev/python-redmine?branch=master\n\npython-redmine is a library for communicating with a `redmine <http://www.redmine.org>`__\nproject management application. redmine exposes some of its data via `rest api\n<http://www.redmine.org/projects/redmine/wiki/rest_api>`__ for which python-redmine provides\na simple but powerful pythonic api inspired by a well-known `django orm\n<https://docs.djangoproject.com/en/dev/topics/db/queries/>`__:\n\n.. code-block:: python\n\n   >>> from redminelib import redmine\n\n   >>> redmine = redmine('http://demo.redmine.org', username='foo', password='bar')\n   >>> project = redmine.project.get('vacation')\n\n   >>> project.id\n   30404\n\n   >>> project.identifier\n   'vacation'\n\n   >>> project.created_on\n   datetime.datetime(2013, 12, 31, 13, 27, 47)\n\n   >>> project.issues\n   <redminelib.resultsets.resourceset object with issue resources>\n\n   >>> project.issues[0]\n   <redminelib.resources.issue #34441 \"vacation\">\n\n   >>> dir(project.issues[0])\n   ['assigned_to', 'author', 'created_on', 'description', 'done_ratio',\n   'due_date', 'estimated_hours', 'id', 'priority', 'project', 'relations',\n   'start_date', 'status', 'subject', 'time_entries', 'tracker', 'updated_on']\n\n   >>> project.issues[0].subject\n   'vacation'\n\n   >>> project.issues[0].time_entries\n   <redminelib.resultsets.resourceset object with timeentry resources>\n\nfeatures\n--------\n\n* supports 100% of redmine api\n* supports external redmine plugins api\n* supports python 3.7 - 3.11 and pypy3\n* supports different request engines\n* extendable via custom resources and custom request engines\n* extensively documented\n* provides orm-style pythonic api\n* and many more...\n\ninstallation\n------------\n\nstandard edition\n++++++++++++++++\n\nthe recommended way to install is from python package index (pypi) with `pip <http://www.pip-installer.org>`__:\n\n.. code-block:: bash\n\n   $ pip install python-redmine\n\npro edition\n+++++++++++\n\nlicense for a pro edition can be bought\n`here <https://secure.2checkout.com/order/checkout.php?prods=4708754&qty=1&cart=1&card=1&disable_short_form_mobile=1>`__.\nyou will receive an email with all the details regarding pro edition installation process.\n\ndocumentation\n-------------\n\ndocumentation is available at https://python-redmine.com.\n\ncontacts and support\n--------------------\n\nsupport for standard edition is provided via `github <https://github.com/maxtepkeev/python-redmine/issues>`__\nonly, while support for pro edition is provided both via `github <https://github.com/maxtepkeev/python-redmine/issues>`__\nand support@python-redmine.com. be sure to write from email that was specified during the purchase procedure.\n\ncopyright and license\n---------------------\n\npython-redmine standard edition is licensed under apache 2.0 license. python-redmine pro edition is licensed\nunder the python-redmine pro edition 1.0 license. check the `license <https://python-redmine.com/license.html>`__\nfor details.\n\n\nchangelog\n---------\n\n2.4.0 (2023-01-18)\n++++++++++++++++++\n\n**deprecations**:\n\n- requests version required >= 2.28.2\n- removed python 2.7, 3.5, 3.6 support as it's not supported by requests anymore\n- removed support for ``python setup.py test`` as it became deprecated by setuptools\n\n**new features**:\n\n- *pro edition:* redmineup `helpdesk plugin <https://www.redmineup.com/pages/plugins/helpdesk>`__ support\n  (`issue #116 <https://github.com/maxtepkeev/python-redmine/issues/116>`__)\n- *pro edition:* redmineup `invoices plugin <https://www.redmineup.com/pages/plugins/invoices>`__ support\n  (`issue #301 <https://github.com/maxtepkeev/python-redmine/issues/301>`__)\n- timezone support (see `docs <https://python-redmine.com/configuration.html#timezone>`__ for details)\n  (`issue #271 <https://github.com/maxtepkeev/python-redmine/issues/271>`__)\n\n**improvements**:\n\n- added support for python 3.10, 3.11 and latest pypy\n- added support for `allowed_statuses` to ``include`` param and on demand includes for issue resource (requires\n  redmine >= 5.0.0)\n- added support for `issue_custom_fields` to ``include`` param and on demand includes for project resource (requires\n  redmine >= 4.2.0)\n- added support for `comments` and `attachments` to ``include`` param and on demand includes for news resource\n  (requires redmine >= 4.1.0)\n- *pro edition:* added support for redmineup contact `projects` to ``include`` param and on demand includes for\n  ``all()`` and ``filter()`` operations\n- *pro edition:* added support for redmineup note ``create()``, ``update()``, ``delete()`` operations (see `docs\n  <https://python-redmine.com/resources/note.html#create-methods>`__ for details)\n- added support for project ``close()``, ``reopen()``, ``archive()``, ``unarchive()`` operations (see `docs\n  <https://python-redmine.com/resources/project.html#additional-methods>`__ for details, requires redmine >= 5.0.0)\n- added support for updating and deleting issue journals (see `docs\n  <https://python-redmine.com/resources/issue.html#journals>`__ for details, requires redmine >= 5.0.0)\n\n**changes**:\n\n- *backwards incompatible:* switched to pytest instead of nose as nose project is dead\n  (`issue #312 <https://github.com/maxtepkeev/python-redmine/issues/312>`__)\n- *backwards incompatible:* removed usage of distutils.looseversion internally since it became deprecated and\n  caused warnings, because of that all version info internally is now being represented as tuples and not strings\n  as before\n\n**bugfixes**:\n\n- stop raising `resourceattrerror` for attributes that actually exist, but their value is `none`\n  (`issue #261 <https://github.com/maxtepkeev/python-redmine/pull/261>`__)\n- *pro edition:* redmineup deal resource ``related_contacts`` attribute was returned as a list instead of being converted to\n  resourceset object\n- project resource ``default_assignee`` attribute was returned as a dict instead of being converted to\n  resource object\n- project resource ``time_entry_activities`` attribute was returned as a list instead of being converted to\n  resourceset object\n\n**documentation**:\n\n- document requirement of `project_id` param for `query_id` filter (`issue #285 <https://github.com/maxtepkeev/\n  python-redmine/pull/285>`__) (thanks to `doezer <https://github.com/doezer>`__)\n- mentioned support for ``user_id`` in timeentry's resource create/update (`issue #298 <https://github.com/\n  maxtepkeev/python-redmine/issues/298>`__)\n- mentioned support for additional scopes for search api\n\n2.3.0 (2020-05-21)\n++++++++++++++++++\n\n**deprecations**:\n\n- requests version required >= 2.23.0\n- removed python 3.4 support as it's not supported by requests anymore\n\n**improvements**:\n\n- support custom filename in ``redmine.upload()``\n- support for ``get()`` and ``update()`` operations for ``/my/account`` endpoint which doesn't require admin\n  privileges by using ``me`` as an id, i.e. ``redmine.user.get('me')`` or ``redmine.user.update('me',firstname='john')``\n  (requires redmine >= 4.1.0)\n- news ``create()``, ``update()``, ``delete()`` operations support (requires redmine >= 4.1.0)\n- resourceset's ``export()`` method now supports ``columns`` keyword argument which can be either an iterable\n  of column names, an \"all\" string which tells python-redmine to export all available columns, \"all_gui\" string\n  for gui like behaviour or iterable of elements with \"all_gui\" string and additional columns to export\n- added support for special characters in wikipage titles (`issue #222 <https://github.com/maxtepkeev/python-redmine/\n  issues/222>`__) (thanks to `radek czajka <https://github.com/rczajka>`__)\n- added ``return_response`` and ``ignore_response`` parameters to engine which allow to skip response processing\n  and speed up the create/update/delete operation in case response body isn't needed (see\n  `docs <https://python-redmine.com/advanced/request_engines.html#session>`__ for details)\n\n**bugfixes**:\n\n- user's ``send_information`` field wasn't sent correctly to redmine so account information emails were\n  never sent (`issue #227 <https://github.com/maxtepkeev/python-redmine/pull/227>`__) (thanks to\n  `wodny <https://github.com/wodny>`__)\n- project resource ``default_version`` attribute was returned as a dict instead of being converted to\n  resource object\n- resource object was leaking memory during initialization (`issue #257 <https://github.com/maxtepkeev/python-redmine/\n  issues/257>`__) (thanks to `yihli <https://github.com/qianyi3210>`__)\n\n**documentation**:\n\n- introduced detailed parameter list for ``redmine.session``\n- mentioned support for ``admin`` in user's resource create/update\n\n2.2.1 (2019-02-28)\n++++++++++++++++++\n\n**bugfixes**:\n\n- projectmembership resource ``group`` attribute was returned as a dict instead of being converted to\n  resource object (`issue #220 <https://github.com/maxtepkeev/python-redmine/issues/220>`__) (thanks\n  to `samuel harmer <https://github.com/samuelharmer>`__)\n\n2.2.0 (2019-01-13)\n++++++++++++++++++\n\n**deprecations**:\n\n- removed vendored requests package and make it an external dependency as requests did\n  the same with its own dependencies\n- removed python 2.6 and 3.3 support as they're not supported by requests anymore\n\n**improvements**:\n\n- ``performancewarning`` will be issued when python-redmine does some unnecessary work under the hood to fix the\n  clients code problems\n\n**bugfixes**:\n\n- ``redmine.upload()`` fails under certain circumstances when used with a file-like object and it contains unicode\n  instead of bytes (`issue #216 <https://github.com/maxtepkeev/python-redmine/issues/216>`__)\n- ``redmine.session()`` doesn't restore previous engine if fails (`issue #211 <https://github.com/maxtepkeev/\n  python-redmine/issues/211>`__) (thanks to `dmitry logvinenko <https://github.com/dm-logv>`__)\n\n2.1.1 (2018-05-02)\n++++++++++++++++++\n\n- fix pypi package\n\n2.1.0 (2018-05-02)\n++++++++++++++++++\n\nthis release concentrates mostly on stability and adds small features here and there. some of them\nare backwards incompatible and are marked as such. they shouldn't affect many users since most of\nthem were used internally by python-redmine. a support for the files api has been finally added, but\nplease be sure to check its documentation as the implementation on the redmine side is horrible and\nthere are things to keep in mind while working with files api. lastly, only until the end of may 2018\nthere is a chance to buy a pro edition for only 14.99$ instead of the usual 24.99$, this is your\nchance to get an edition with additional features for a good price and to support the further development\nof python-redmine, more info `here <https://python-redmine.com/editions.html#pro-edition>`_.\n\n**new features**:\n\n- files api support (`issue #117 <https://github.com/maxtepkeev/python-redmine/issues/117>`__)\n\n**improvements**:\n\n- *backwards incompatible:* resourceset's ``filter()`` method became more advanced. it is now possible\n  to filter on all available resource attributes, to follow resource relationships and apply lookups to\n  the filters (see `docs <https://python-redmine.com/introduction.html#methods>`__ for details)\n- resourcemanager class has been refactored:\n\n  * ``manager_class`` attribute on the ``resource`` class can now be used to assign a separate\n    ``resourcemanager`` to a resource, that allows outsourcing a resource specific functionality to a\n    separate manager class (see ``wikipagemanager`` as an example)\n  * *backwards incompatible:* ``request()`` method has been removed\n  * ``_construct_*_url()``, ``_prepare_*_request()``, ``_process_*_response()`` methods have been added\n    for create, update and delete methods to allow a fine-grained control over these operations\n\n- ability to upload file-like objects (`issue #186 <https://github.com/maxtepkeev/python-redmine/issues/\n  186>`__) (thanks to `hjpotter92 <https://github.com/hjpotter92>`__)\n- support for retrieving project's time entry activities (see `docs <https://python-redmine.com/resources/\n  project.html#get>`__ for details)\n- attachment ``update()`` operation support (requires redmine >= 3.4.0)\n- ``resource.save()`` now accepts ``**attrs`` that need to be changed/set and returns ``self`` instead of a\n  boolean ``true``, which makes it chainable, so you can now do something like ``project.save(name='foo',\n  description='bar').export('txt', '/home/foo')``\n- ``get`` operation support for news, query, enumeration, issuestatus, tracker, customfield, contacttag,\n  dealstatus, dealcategory and crmquery resources\n- ``include`` param in ``get``, ``all`` and ``filter`` operations now accepts lists and tuples instead of\n  comma-separated string which is still accepted for backward compatibility reasons, i.e. one can use\n  ``include=['foo', 'bar']`` instead of ``include='foo,bar'``\n- it is now possible to use ``none`` and ``0`` in addition to ``''`` in ``assigned_to_id`` attribute in\n  issue resource if an assignee needs to be removed from an issue\n\n**changes**:\n\n- *backwards incompatible:* issue ``all`` operation now really returns all issues, i.e. both open and closed,\n  instead of only returning open issues in previous versions due to the respect to redmine's standard behaviour\n- *backwards incompatible:* instead of only returning a token string, ``upload()`` method was modified to return\n  a dict that contains all the data for an upload returned from redmine, i.e. id and token for redmine >= 3.4.0,\n  token only for redmine < 3.4.0. also it is now possible to use this token and pass it using a ``token`` key\n  instead of the ``path`` key with path to the file in ``uploads`` parameter when doing an upload, this gives\n  more control over the uploading process if needed\n- *backwards incompatible:* removed ``resource_paths`` argument from redmine object since ``resourcemanager``\n  now uses a special resource registry, to which, all resources that inherit from any python-redmine resource\n  are being automatically added\n- *backwards incompatible:* removed ``container_many`` in favor of ``container_filter``, ``container_create``\n  and ``container_update`` attributes on ``resource`` object to allow more fine-grained resource setup\n- *backwards incompatible:* ``return_raw`` parameter on ``engine.request()`` and ``engine.process_response()``\n  methods has been removed in favor of ``return_raw_response`` attribute on engine object\n- updated bundled requests library to v2.15.1\n\n**bugfixes**:\n\n- support 204 status code when deleting a resource (`issue #189 <https://github.com/maxtepkeev/python-redmine/\n  pull/189>`__) (thanks to `dotslashlu <https://github.com/dotslashlu>`__)\n- raise ``validationerror`` instead of not helpful ``typeerror`` exception when trying to create a wikipage\n  resource that already exists (`issue #182 <https://github.com/maxtepkeev/python-redmine/issues/182>`__)\n- enumeration, version, group and notes ``custom_fields`` attribute was returned as a list of dicts instead\n  of being converted to ``resourceset`` object\n- downloads were downloaded fully into memory instead of being streamed as needed\n- ``resourcerequirementserror`` exception was broken since v2.0.0\n- *pro edition:* redmineup crm contact and deal resources export functionality didn't work\n- *pro edition:* redmineup crm contact and deal resources sometimes weren't converted to resource objects using search api\n\n**documentation**:\n\n- mentioned support for ``generate_password`` and ``send_information`` in user's resource create/update\n  methods, ``status`` in user's resource update method, ``parent_id`` in issue's filter method and ``include``\n  in issue's all method\n\n2.0.2 (2017-04-19)\n++++++++++++++++++\n\n**bugfixes**:\n\n- filter doesn't work when there are > 100 resources requested (`issue #175 <https://github.com/maxtepkeev/\n  python-redmine/pull/175>`__) (thanks to `niwatolli3 <https://github.com/niwatolli3>`__)\n\n2.0.1 (2017-04-10)\n++++++++++++++++++\n\n- fix pypi package\n\n2.0.0 (2017-04-10)\n++++++++++++++++++\n\nthis version brings a lot of new features and changes, some of them are backward-incompatible, so please\nlook carefully at the changelog below to find out what needs to be changed in your code to make it work\nwith this version. also python-redmine now comes in 2 editions: standard and pro, please have a look at\nthis `document <https://python-redmine.com/editions.html>`__ for more details. documentation was\nalso significantly rewritten, so it is recommended to reread it even if you are an experienced python-redmine\nuser.\n\n**new features**:\n\n- *pro edition:* redmineup `checklist plugin <https://www.redmineup.com/pages/plugins/checklists>`__ support\n- `request engines <https://python-redmine.com/advanced/request_engines.html>`__ support. it is\n  now possible to create engines to define how requests to redmine are made, e.g. synchronous (one by one)\n  or asynchronous using threads or processes etc\n- ``redmine.session()`` context manager which allows to temporary redefine engine's behaviour\n- search api support (`issue #138 <https://github.com/maxtepkeev/python-redmine/issues/138>`__)\n- export functionality (`issue #58 <https://github.com/maxtepkeev/python-redmine/issues/58>`__)\n- redmine_use_external_requests environmental variable for emergency cases which allows to use external\n  requests instead of bundled one even if external requests version is lower than the bundled one\n- wrong http protocol usage detector, e.g. one use http when https should be used\n\n**improvements**:\n\n- resourceset objects were completely rewritten:\n\n  * ``resourceset`` object that was already sliced now supports reslicing\n  * ``resourceset`` object's ``delete()``, ``update()``, ``filter()`` and ``get()`` methods have been\n    optimized for speed\n  * ``resourceset`` object's ``delete()`` and ``update()`` methods now call the corresponding resource's\n    ``pre_*()`` and ``post_*()`` methods\n  * ``resourceset`` object's ``get()`` and ``filter()`` methods now supports non-integer id's, e.g.\n    wikipage's title can now be used with it\n  * *backwards incompatible:* ``valuesresourceset`` class has been removed\n  * *backwards incompatible:* ``resourceset.values()`` method now returns an iterable of dicts instead of\n    ``valuesresourceset`` object\n  * ``resourceset.values_list()`` method has been added which returns an iterable of tuples with resource\n    values or single values if flattened, i.e. ``flat=true``\n\n- new ``resource`` object methods:\n\n  * ``delete()`` deletes current resource from redmine\n  * ``pre_delete()`` and ``post_delete()`` can be used to execute tasks that should be done before/after\n    deleting the resource through ``delete()`` method\n  * ``bulk_decode()``, ``bulk_encode()``, ``decode()`` and ``encode()`` which are used to translate\n    attributes of the resource to/from python/redmine\n\n- attachment ``delete()`` method support (requires redmine >= 3.3.0)\n- *pro edition:* redmineup crm note resource now provides ``type`` attribute which shows text representation of ``type_id``\n- *pro edition:* redmineup crm dealstatus resource now provides ``status`` attribute which shows text representation of\n  ``status_type``\n- wikipage resource now provides ``project_id`` attribute\n- unicode handling was significantly rewritten and shouldn't cause any more troubles\n- ``unknownerror`` exception now contains ``status_code`` attribute which can be used to handle the\n  exception instead of parsing code from exception's text\n- sync engine's speed improved to 8-12% depending on the amount of resources fetched\n\n**changes**:\n\n- *backwards incompatible:* renamed package name from ``redmine`` to ``redminelib``\n- resource class attributes that were previously tuples are now lists\n- *backwards incompatible:* ``_resource`` class renamed to ``resource``\n- *backwards incompatible:* ``redmine.custom_resource_paths`` keyword argument renamed to ``resource_paths``\n- *backwards incompatible:* ``redmine.download()`` method now returns a `requests.response\n  <http://docs.python-requests.org/en/latest/api/#requests.response>`__ object directly instead of\n  ``iter_content()`` method if a ``savepath`` param wasn't provided, this gives user even more control over\n  response data\n- *backwards incompatible:* ``resource.refresh()`` now really refreshes itself instead of returning a new\n  refreshed resource, to get the previous behaviour use ``itself`` param, e.g. ``resource.refresh(itself=false)``\n- *backwards incompatible:* removed python 3.2 support\n- *backwards incompatible:* removed ``container_filter``, ``container_create`` and ``container_update`` attributes\n  on ``resource`` object in favor of ``container_many`` attribute\n- *backwards incompatible:* removed ``resource.translate_params()`` and ``resourcemanager.prepare_params()`` in\n  favor of ``resource.bulk_decode()``\n- *backwards incompatible:* removed ``is_unicode()``, ``is_string()`` and ``to_string()`` from\n  ``redminelib.utilities``\n- updated bundled requests library to v2.13.0\n\n**bugfixes**:\n\n- infinite loop when uploading zero-length files (`issue #152 <https://github.com/maxtepkeev/python-redmine/\n  issues/152>`__)\n- unsupported redmine resource error while trying to use python-redmine without installation (`issue #156\n  <https://github.com/maxtepkeev/python-redmine/issues/156>`__)\n- it was impossible to set ``data``, ``params`` and ``headers`` via ``requests`` keyword argument on\n  redmine object\n- calling ``str()`` or ``repr()`` on a resource was giving incorrect results if exception raising\n  was turned off for a resource\n\n**documentation**:\n\n- switched to the alabaster theme\n- added new sections:\n\n  * `editions <https://python-redmine.com/editions.html>`__\n  * `introduction <https://python-redmine.com/introduction.html>`__\n  * `request engines <https://python-redmine.com/advanced/request_engines.html>`__\n\n- added info about issue journals (`issue #120 <https://github.com/maxtepkeev/python-redmine/issues/120>`__)\n- added note about open/closed issues (`issue #136 <https://github.com/maxtepkeev/python-redmine/issues/136>`__)\n- added note about regexp custom field filter (`issue #164 <https://github.com/maxtepkeev/python-redmine/\n  issues/164>`__)\n- added some new information here and there\n\n1.5.1 (2016-03-27)\n++++++++++++++++++\n\n- changed: updated bundled requests package to 2.9.1\n- changed: `issue #124 <https://github.com/maxtepkeev/python-redmine/issues/124>`__ (``project.url``\n  now uses ``identifier`` rather than ``id`` to generate url for the project resource)\n- fixed: `issue #122 <https://github.com/maxtepkeev/python-redmine/issues/122>`__ (``validationerror`` for\n  empty custom field values was possible under some circumstances with redmine < 2.5.0)\n- fixed: `issue #112 <https://github.com/maxtepkeev/python-redmine/issues/112>`__ (``unicodeencodeerror``\n  on python 2 if ``resource_id`` was of ``unicode`` type) (thanks to `digenis <https://github.com/digenis>`__)\n\n1.5.0 (2015-11-26)\n++++++++++++++++++\n\n- added: documented support for new fields and values in user, issue and issuerelation resources\n- added: `issue #109 <https://github.com/maxtepkeev/python-redmine/issues/109>`__ (smart imports for\n  vendored packages (see `docs <https://python-redmine.com/installation.html#dependencies>`__\n  for details)\n- added: `issue #115 <https://github.com/maxtepkeev/python-redmine/issues/115>`__ (file upload support\n  for wikipage resource)\n\n1.4.0 (2015-10-18)\n++++++++++++++++++\n\n- added: `requests <http://docs.python-requests.org>`__ is now embedded into python-redmine\n- added: python-redmine is now embeddable to other libraries\n- fixed: previous release was broken on pypi\n\n1.3.0 (2015-10-18)\n++++++++++++++++++\n\n- added: `issue #108 <https://github.com/maxtepkeev/python-redmine/issues/108>`__ (tests are now\n  built-in into source package distributed via pypi)\n\n1.2.0 (2015-07-09)\n++++++++++++++++++\n\n- added: `wheel <http://wheel.readthedocs.io>`__ support\n- added: `issue #93 <https://github.com/maxtepkeev/python-redmine/issues/93>`__ (``jsondecodeerror``\n  exception now contains a ``response`` attribute which can be inspected to identify the cause of the\n  exception)\n- added: `issue #98 <https://github.com/maxtepkeev/python-redmine/issues/98>`__ (support for setting\n  wikipage resource parent title and converting parent attribute to resource object instead of being\n  a dict)\n\n1.1.2 (2015-05-20)\n++++++++++++++++++\n\n- fixed: `issue #90 <https://github.com/maxtepkeev/python-redmine/issues/90>`__ (python-redmine\n  fails to install on systems with lc_all=c) (thanks to `spikergit1 <https://github.com/spikergit1>`__)\n\n1.1.1 (2015-03-26)\n++++++++++++++++++\n\n- fixed: `issue #85 <https://github.com/maxtepkeev/python-redmine/issues/85>`__ (python-redmine\n  was trying to convert field to date/datetime even when it shouldn't, i.e. if a field looked like\n  yyyy-mm-dd but wasn't actually a date/datetime field, e.g. wiki page title or issue subject)\n\n1.1.0 (2015-02-20)\n++++++++++++++++++\n\n- added: pypy2/3 is now officially supported\n- added: introduced ``enabled_modules`` on demand include in project resource\n- fixed: `issue #78 <https://github.com/maxtepkeev/python-redmine/issues/78>`__ (redmine <2.5.2\n  returns only single tracker instead of a list of all available trackers when requested from\n  a customfield resource which caused an exception in python-redmine, see `this <http://www.\n  redmine.org/issues/16739>`__ for details)\n- fixed: `issue #80 <https://github.com/maxtepkeev/python-redmine/issues/80>`__ (if a project\n  is read-only or doesn't have crm plugin enabled, an attempt to add/remove contact resource\n  to/from it will lead to improper error message)\n- fixed: `issue #81 <https://github.com/maxtepkeev/python-redmine/issues/81>`__ (contact's\n  resource ``tag_list`` attribute was always splitted into single chars) (thanks to `alexander\n  loechel <https://github.com/loechel>`__)\n\n1.0.3 (2015-02-03)\n++++++++++++++++++\n\n- fixed: `issue #72 <https://github.com/maxtepkeev/python-redmine/issues/72>`__ (if an exception is\n  raised during json decoding process, it should be catched and reraised as python-redmine's own\n  exception, i.e ``redmine.exceptions.jsondecodeerror``)\n- fixed: `issue #76 <https://github.com/maxtepkeev/python-redmine/issues/76>`__ (it was impossible\n  to retrieve more than 100 resources for resources which don't support limit/offset natively by\n  redmine, i.e. this functionality is emulated by python-redmine, e.g. wikipage, groups, roles etc)\n\n1.0.2 (2014-11-13)\n++++++++++++++++++\n\n- fixed: `issue #55 <https://github.com/maxtepkeev/python-redmine/issues/55>`__ (typeerror was\n  raised during processing validation errors from redmine when one of the errors was returned as\n  a list)\n- fixed: `issue #59 <https://github.com/maxtepkeev/python-redmine/issues/59>`__ (raise forbiddenerror\n  when a 403 is encountered) (thanks to `rick harris <https://github.com/rconradharris>`__)\n- fixed: `issue #64 <https://github.com/maxtepkeev/python-redmine/issues/64>`__ (redmine and resource\n  classes weren't picklable) (thanks to `rick harris <https://github.com/rconradharris>`__)\n- fixed: a resourceset object with a limit=100, actually returned 125 resource objects\n\n1.0.1 (2014-09-23)\n++++++++++++++++++\n\n- fixed: `issue #50 <https://github.com/maxtepkeev/python-redmine/issues/50>`__ (issuejournal's\n  ``notes`` attribute was converted to note resource by mistake, bug was introduced in v1.0.0)\n\n1.0.0 (2014-09-22)\n++++++++++++++++++\n\n- added: support for the `crm plugin <https://www.redmineup.com/pages/plugins/crm>`__ resources:\n\n  * `contact <https://python-redmine.com/resources/contact.html>`__\n  * `contacttag <https://python-redmine.com/resources/contact_tag.html>`__\n  * `note <https://python-redmine.com/resources/note.html>`__\n  * `deal <https://python-redmine.com/resources/deal.html>`__\n  * `dealstatus <https://python-redmine.com/resources/deal_status.html>`__\n  * `dealcategory <https://python-redmine.com/resources/deal_category.html>`__\n  * `crmquery <https://python-redmine.com/resources/crm_query.html>`__\n\n- added: introduced new relations for the following resource objects:\n\n  * project - time_entries, deals, contacts and deal_categories relations\n  * user - issues, time_entries, deals and contacts relations\n  * tracker - issues relation\n  * issuestatus - issues relation\n\n- added: introduced a ``values()`` method in a resourceset which returns valuesresourceset - a\n  resourceset subclass that returns dictionaries when used as an iterable, rather than resource-instance\n  objects (see `docs <https://python-redmine.com/introduction.html#methods>`__ for details)\n- added: introduced ``update()`` and ``delete()`` methods in a resourceset object which allow to\n  bulk update or bulk delete all resources in a resourceset object (see\n  `docs <https://python-redmine.com/introduction.html#methods>`__ for details)\n- fixed: it was impossible to use resourceset's ``get()`` and ``filter()`` methods with wikipage\n  resource\n- fixed: several small fixes and enhancements here and there\n\n0.9.0 (2014-09-11)\n++++++++++++++++++\n\n- added: introduced support for file downloads (see\n  `docs <https://python-redmine.com/advanced/working_with_files.html>`__ for details)\n- added: introduced new ``_resource.requirements`` class attribute where all redmine plugins\n  required by resource should be listed (preparations to support non-native resources)\n- added: new exceptions:\n\n  * resourcerequirementserror\n\n- fixed: it was impossible to set a custom field of date/datetime type using date/datetime\n  python objects\n- fixed: `issue #46 <https://github.com/maxtepkeev/python-redmine/issues/46>`__\n  (a unicodeencodeerror was raised in python 2.x while trying to access a ``url`` property of\n  a wikipage resource if it contained non-ascii characters)\n\n0.8.4 (2014-08-08)\n++++++++++++++++++\n\n- added: support for anonymous attachment resource (i.e. attachment with ``id`` attr only)\n- fixed: `issue #42 <https://github.com/maxtepkeev/python-redmine/issues/42>`__ (it was\n  impossible to create a project resource via ``new()`` method)\n\n0.8.3 (2014-08-01)\n++++++++++++++++++\n\n- fixed: `issue #39 <https://github.com/maxtepkeev/python-redmine/issues/39>`__ (it was\n  impossible to save custom_fields in user resource via ``new()`` method)\n\n0.8.2 (2014-05-27)\n++++++++++++++++++\n\n- added: resourceset's ``get()`` method now supports a ``default`` keyword argument which is\n  returned when a requested resource can't be found in a resourceset and defaults to ``none``,\n  previously this was hardcoded to ``none``\n- added: it is now possible to use ``getattr()`` with default value without raising a\n  ``resourceattrerror`` when calling non-existent resource attribute, see `issue #30\n  <https://github.com/maxtepkeev/python-redmine/issues/30>`__ for details (thanks to\n  `hsum <https://github.com/hsum>`__)\n- fixed: `issue #31 <https://github.com/maxtepkeev/python-redmine/issues/31>`__ (unlimited\n  recursion was possible in some situations when on demand includes were used)\n\n0.8.1 (2014-04-02)\n++++++++++++++++++\n\n- added: new exceptions:\n\n  * requestentitytoolargeerror\n  * unknownerror\n\n- fixed: `issue #27 <https://github.com/maxtepkeev/python-redmine/issues/27>`__ (project and\n  issue resources ``parent`` attribute was returned as a dict instead of being converted to\n  resource object)\n\n0.8.0 (2014-03-27)\n++++++++++++++++++\n\n- added: introduced the detection of conflicting packages, i.e. if a conflicting package is\n  found (pyredminews at this time is the only one), the installation procedure will be aborted\n  and a warning message will be shown with the detailed description of the problem\n- added: introduced new ``_resource._members`` class attribute where all instance attributes\n  which are not started with underscore should be listed. this will resolve recursion issues\n  in custom resources because of how ``__setattr__()`` works in python\n- changed: ``_resource.attributes`` renamed to ``_resource._attributes``\n- fixed: python-redmine was unable to upload any binary files\n- fixed: `issue #20 <https://github.com/maxtepkeev/python-redmine/issues/20>`__ (lowered\n  requests version requirements. python-redmine now requires requests starting from 0.12.1\n  instead of 2.1.0 in previous versions)\n- fixed: `issue #23 <https://github.com/maxtepkeev/python-redmine/issues/23>`__ (file uploads\n  via ``update()`` method didn't work)\n\n0.7.2 (2014-03-17)\n++++++++++++++++++\n\n- fixed: `issue #19 <https://github.com/maxtepkeev/python-redmine/issues/19>`__ (resources\n  obtained via ``filter()`` and ``all()`` methods have incomplete url attribute)\n- fixed: redmine server url with forward slash could cause errors in rare cases\n- fixed: python-redmine was incorrectly raising ``resourceattrerror`` when trying to call\n  ``repr()`` on a news resource\n\n0.7.1 (2014-03-14)\n++++++++++++++++++\n\n- fixed: `issue #16 <https://github.com/maxtepkeev/python-redmine/issues/16>`__ (when a resource\n  was created via a ``new()`` method, the next resource created after that inherited all the\n  attribute values of the previous resource)\n\n0.7.0 (2014-03-12)\n++++++++++++++++++\n\n- added: wikipage resource now automatically requests all of its available attributes from\n  redmine in case if some of them are not available in an existent resource object\n- added: support for setting date/datetime resource attributes using date/datetime python objects\n- added: support for using date/datetime python objects in all resourcemanager methods, i.e.\n  ``new()``, ``create()``, ``update()``, ``delete()``, ``get()``, ``all()``, ``filter()``\n- fixed: `issue #14 <https://github.com/maxtepkeev/python-redmine/issues/14>`__ (python-redmine\n  was incorrectly raising ``resourceattrerror`` when trying to call ``repr()``, ``str()`` and\n  ``int()`` on resources, created via ``new()`` method)\n\n0.6.2 (2014-03-09)\n++++++++++++++++++\n\n- fixed: project resource ``status`` attribute was converted to issuestatus resource by mistake\n\n0.6.1 (2014-02-27)\n++++++++++++++++++\n\n- fixed: `issue #10 <https://github.com/maxtepkeev/python-redmine/issues/10>`__ (python\n  redmine was incorrectly raising ``resourceattrerror`` while creating some resources via\n  ``new()`` method)\n\n0.6.0 (2014-02-19)\n++++++++++++++++++\n\n- added: ``redmine.auth()`` shortcut for the case if we just want to check if user provided\n  valid auth credentials, can be used for user authentication on external resource based on\n  redmine user database (see `docs <https://python-redmine.com/advanced/external_auth.html>`__\n  for details)\n- fixed: ``jsondecodeerror`` was raised in some redmine versions during some create/update\n  operations (thanks to `0x55aa <https://github.com/0x55aa>`__)\n- fixed: user resource ``status`` attribute was converted to issuestatus resource by mistake\n\n0.5.0 (2014-02-09)\n++++++++++++++++++\n\n- added: an ability to create custom resources which allow to easily redefine the behaviour\n  of existing resources (see `docs <https://python-redmine.com/advanced/custom_resources.html>`__\n  for details)\n- added: an ability to add/remove watcher to/from issue (see `docs\n  <https://python-redmine.com/resources/issue.html#watchers>`__ for details)\n- added: an ability to add/remove users to/from group (see `docs\n  <https://python-redmine.com/resources/group.html#users>`__ for details)\n\n0.4.0 (2014-02-08)\n++++++++++++++++++\n\n- added: new exceptions:\n\n  * conflicterror\n  * readonlyattrerror\n  * resultsettotalcounterror\n  * customfieldvalueerror\n\n- added: update functionality via ``update()`` and ``save()`` methods for resources (see\n  `docs <https://python-redmine.com/introduction.html#update>`__ for details):\n\n  * user\n  * group\n  * issuecategory\n  * version\n  * timeentry\n  * projectmembership\n  * wikipage\n  * project\n  * issue\n\n- added: limit/offset support via ``all()`` and ``filter()`` methods for resources that\n  doesn't support that feature via redmine:\n\n  * issuerelation\n  * version\n  * wikipage\n  * issuestatus\n  * tracker\n  * enumeration\n  * issuecategory\n  * role\n  * group\n  * customfield\n\n- added: on demand includes, e.g. in addition to ``redmine.group.get(1, include='users')``\n  users for a group can also be retrieved on demand via ``group.users`` if include wasn't set\n  (see `docs <https://python-redmine.com/resources/index.html>`__ for details)\n- added: ``total_count`` attribute to resourceset object which holds the total number\n  of resources for the current resource type available in redmine (thanks to\n  `andrei avram <https://github.com/andreiavram>`__)\n- added: an ability to return ``none`` instead of raising a ``resourceattrerror`` for all\n  or selected resource objects via ``raise_attr_exception`` kwarg on redmine object (see\n  `docs <https://python-redmine.com/configuration.html#exception-control>`__ for\n  details or `issue #6 <https://github.com/maxtepkeev/python-redmine/issues/6>`__)\n- added: ``pre_create()``, ``post_create()``, ``pre_update()``, ``post_update()`` resource\n  object methods which can be used to execute tasks that should be done before/after\n  creating/updating the resource through ``save()`` method\n- added: allow to create resources in alternative way via ``new()`` method (see `docs\n  <https://python-redmine.com/introduction.html#new>`__ for details)\n- added: allow daterange timeentry resource filtering via ``from_date`` and ``to_date``\n  keyword arguments (thanks to `antoni aloy <https://github.com/aaloy>`__)\n- added: an ability to retrieve issue version via ``version`` attribute in addition to\n  ``fixed_version`` to be more obvious\n- changed: documentation for resources rewritten from scratch to be more understandable\n- fixed: saving custom fields to redmine didn't work in some situations\n- fixed: issue's ``fixed_version`` attribute was retrieved as dict instead of version resource\n  object\n- fixed: resource relations were requested from redmine every time instead of caching the\n  result after first request\n- fixed: `issue #2 <https://github.com/maxtepkeev/python-redmine/issues/2>`__ (limit/offset\n  as keyword arguments were broken)\n- fixed: `issue #5 <https://github.com/maxtepkeev/python-redmine/issues/5>`__ (version\n  resource ``status`` attribute was converted to issuestatus resource by mistake) (thanks\n  to `andrei avram <https://github.com/andreiavram>`__)\n- fixed: a lot of small fixes, enhancements and refactoring here and there\n\n0.3.1 (2014-01-23)\n++++++++++++++++++\n\n- added: an ability to pass requests parameters as a dictionary via ``requests`` keyword\n  argument on redmine initialization, i.e. redmine('\\http://redmine.url', requests={}).\n- fixed: `issue #1 <https://github.com/maxtepkeev/python-redmine/issues/1>`__ (unable\n  to connect to redmine server with invalid ssl certificate).\n\n0.3.0 (2014-01-18)\n++++++++++++++++++\n\n- added: delete functionality via ``delete()`` method for resources (see `docs\n  <https://python-redmine.com/introduction.html#delete>`__ for details):\n\n  * user\n  * group\n  * issuecategory\n  * version\n  * timeentry\n  * issuerelation\n  * projectmembership\n  * wikipage\n  * project\n  * issue\n\n- changed: resourcemanager ``get()`` method now raises a ``validationerror`` exception if\n  required keyword arguments aren't passed\n\n0.2.0 (2014-01-16)\n++++++++++++++++++\n\n- added: new exceptions:\n\n  * servererror\n  * nofileerror\n  * validationerror\n  * versionmismatcherror\n  * resourcenofieldsprovidederror\n  * resourcenotfounderror\n\n- added: create functionality via ``create()`` method for resources (see `docs\n  <https://python-redmine.com/introduction.html#id1>`__ for details):\n\n  * user\n  * group\n  * issuecategory\n  * version\n  * timeentry\n  * issuerelation\n  * projectmembership\n  * wikipage\n  * project\n  * issue\n\n- added: file upload support, see ``upload()`` method in redmine class\n- added: integer representation to all resources, i.e. ``__int__()``\n- added: informal string representation to all resources, i.e. ``__str__()``\n- changed: renamed ``version`` attribute to ``redmine_version`` in all resources to avoid\n  name intersections\n- changed: resourcemanager ``get()`` method now raises a ``resourcenotfounderror`` exception\n  if resource wasn't found instead of returning none in previous versions\n- changed: reimplemented fix for ``__repr__()`` from 0.1.1\n- fixed: conversion of issue priorities to enumeration resource object didn't work\n\n0.1.1 (2014-01-10)\n++++++++++++++++++\n\n- added: python 2.6 support\n- changed: wikipage resource ``refresh()`` method now automatically determines its project_id\n- fixed: resource representation, i.e. ``__repr__()``, was broken in python 2.7\n- fixed: ``dir()`` call on a resource object didn't work in python 3.2\n\n0.1.0 (2014-01-09)\n++++++++++++++++++\n\n- initial release\n",
  "docs_url": null,
  "keywords": "redmine redmineup redminecrm redminelib easyredmine",
  "license": "apache 2.0",
  "name": "python-redmine",
  "package_url": "https://pypi.org/project/python-redmine/",
  "project_url": "https://pypi.org/project/python-redmine/",
  "project_urls": {
    "Documentation": "https://python-redmine.com",
    "Homepage": "https://github.com/maxtepkeev/python-redmine"
  },
  "release_url": "https://pypi.org/project/python-redmine/2.4.0/",
  "requires_dist": [
    "requests (>=2.28.2)"
  ],
  "requires_python": ">=3.7, <4",
  "summary": "library for communicating with a redmine project management application",
  "version": "2.4.0",
  "releases": [],
  "developers": [
    "maxim_tepkeev",
    "support@python-redmine.com"
  ],
  "kwds": "redminelib redmine_use_external_requests redmine redmine_version redmineup",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_python_redmine",
  "homepage": "https://github.com/maxtepkeev/python-redmine",
  "release_count": 40,
  "dependency_ids": [
    "pypi_requests"
  ]
}
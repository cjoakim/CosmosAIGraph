{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "environment :: other environment",
    "intended audience :: developers",
    "intended audience :: information technology",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: software development :: build tools",
    "topic :: utilities"
  ],
  "description": "## lambda builders\n\n![apache 2.0 license](https://img.shields.io/github/license/aws/aws-lambda-builders)\n![github release (latest by date)](https://img.shields.io/github/v/release/aws/aws-lambda-builders)\n![pypi - python version](https://img.shields.io/pypi/pyversions/aws-lambda-builders)\n![pip](https://img.shields.io/badge/pip-aws--lambda--builders-9cf)\n\nlambda builders is a python library to compile, build and package aws lambda functions for several runtimes & \nframeworks.\n\nlambda builders currently contains the following workflows\n\n* java with gradle\n* java with maven\n* dotnet with amazon.lambda.tools\n* python with pip\n* javascript with npm\n* typescript with esbuild\n* ruby with bundler\n* go with mod\n* rust with cargo\n\nin addition to above workflows, aws lambda builders also supports *custom workflows* through a makefile.\n\nlambda builders is the brains behind the `sam build` command from [aws sam cli](https://github.com/awslabs/aws-sam-cli)\n\n### integrating with lambda builders\n\nlambda builders is a python library.\nit additionally exposes a json-rpc 2.0 interface to use from other languages.\n\nif you intend to integrate with lambda builders,\ncheck out [this section of the design document](design.md#builders-library).\n\n### contributing\n\nif you are a developer and interested in contributing, read the [design document](./design.md) to understand how this works.\n",
  "docs_url": null,
  "keywords": "aws lambda functions building",
  "license": "apache license 2.0",
  "name": "aws-lambda-builders",
  "package_url": "https://pypi.org/project/aws-lambda-builders/",
  "project_url": "https://pypi.org/project/aws-lambda-builders/",
  "project_urls": {
    "Homepage": "https://github.com/awslabs/aws-lambda-builders"
  },
  "release_url": "https://pypi.org/project/aws-lambda-builders/1.44.0/",
  "requires_dist": [
    "setuptools",
    "wheel",
    "pytest-cov ==4.1.0 ; extra == 'dev'",
    "pytest >=6.1.1 ; extra == 'dev'",
    "parameterized ==0.9.0 ; extra == 'dev'",
    "pyelftools ~=0.30 ; extra == 'dev'",
    "ruff ==0.1.7 ; extra == 'dev'",
    "coverage ==7.2.7 ; (python_version < \"3.8\") and extra == 'dev'",
    "flake8 ==3.3.0 ; (python_version < \"3.8\") and extra == 'dev'",
    "isort <5,>=4.2.5 ; (python_version < \"3.8\") and extra == 'dev'",
    "black ==22.6.0 ; (python_version < \"3.8\") and extra == 'dev'",
    "coverage ==7.3.2 ; (python_version >= \"3.8\") and extra == 'dev'",
    "flake8 ==3.8.4 ; (python_version >= \"3.8\") and extra == 'dev'",
    "black ==23.11.0 ; (python_version >= \"3.8\") and extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "python library to compile, build & package aws lambda functions for several runtimes & frameworks.",
  "version": "1.44.0",
  "releases": [],
  "developers": [
    "amazon_web_services",
    "aws-sam-developers@amazon.com"
  ],
  "kwds": "lambda pip awslabs aws frameworks",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_aws_lambda_builders",
  "homepage": "https://github.com/awslabs/aws-lambda-builders",
  "release_count": 67,
  "dependency_ids": [
    "pypi_black",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_isort",
    "pypi_parameterized",
    "pypi_pyelftools",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_ruff",
    "pypi_setuptools",
    "pypi_wheel"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet"
  ],
  "description": "python client for google bigquery\n=================================\n\n|ga| |pypi| |versions|\n\nquerying massive datasets can be time consuming and expensive without the\nright hardware and infrastructure. google `bigquery`_ solves this problem by\nenabling super-fast, sql queries against append-mostly tables, using the\nprocessing power of google's infrastructure.\n\n-  `client library documentation`_\n-  `product documentation`_\n\n.. |ga| image:: https://img.shields.io/badge/support-ga-gold.svg\n   :target: https://github.com/googleapis/google-cloud-python/blob/main/readme.rst#general-availability\n.. |pypi| image:: https://img.shields.io/pypi/v/google-cloud-bigquery.svg\n   :target: https://pypi.org/project/google-cloud-bigquery/\n.. |versions| image:: https://img.shields.io/pypi/pyversions/google-cloud-bigquery.svg\n   :target: https://pypi.org/project/google-cloud-bigquery/\n.. _bigquery: https://cloud.google.com/bigquery/what-is-bigquery\n.. _client library documentation: https://googleapis.dev/python/bigquery/latest\n.. _product documentation: https://cloud.google.com/bigquery/docs/reference/v2/\n\nquick start\n-----------\n\nin order to use this library, you first need to go through the following steps:\n\n1. `select or create a cloud platform project.`_\n2. `enable billing for your project.`_\n3. `enable the google cloud bigquery api.`_\n4. `setup authentication.`_\n\n.. _select or create a cloud platform project.: https://console.cloud.google.com/project\n.. _enable billing for your project.: https://cloud.google.com/billing/docs/how-to/modify-project#enable_billing_for_a_project\n.. _enable the google cloud bigquery api.:  https://cloud.google.com/bigquery\n.. _setup authentication.: https://googleapis.dev/python/google-api-core/latest/auth.html\n\ninstallation\n~~~~~~~~~~~~\n\ninstall this library in a `virtualenv`_ using pip. `virtualenv`_ is a tool to\ncreate isolated python environments. the basic problem it addresses is one of\ndependencies and versions, and indirectly permissions.\n\nwith `virtualenv`_, it's possible to install this library without needing system\ninstall permissions, and without clashing with the installed system\ndependencies.\n\n.. _`virtualenv`: https://virtualenv.pypa.io/en/latest/\n\n\nsupported python versions\n^^^^^^^^^^^^^^^^^^^^^^^^^\npython >= 3.7\n\nunsupported python versions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\npython == 2.7, python == 3.5, python == 3.6.\n\nthe last version of this library compatible with python 2.7 and 3.5 is\n`google-cloud-bigquery==1.28.0`.\n\n\nmac/linux\n^^^^^^^^^\n\n.. code-block:: console\n\n    pip install virtualenv\n    virtualenv <your-env>\n    source <your-env>/bin/activate\n    <your-env>/bin/pip install google-cloud-bigquery\n\n\nwindows\n^^^^^^^\n\n.. code-block:: console\n\n    pip install virtualenv\n    virtualenv <your-env>\n    <your-env>\\scripts\\activate\n    <your-env>\\scripts\\pip.exe install google-cloud-bigquery\n\nexample usage\n-------------\n\nperform a query\n~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from google.cloud import bigquery\n\n    client = bigquery.client()\n\n    # perform a query.\n    query = (\n        'select name from `bigquery-public-data.usa_names.usa_1910_2013` '\n        'where state = \"tx\" '\n        'limit 100')\n    query_job = client.query(query)  # api request\n    rows = query_job.result()  # waits for query to finish\n\n    for row in rows:\n        print(row.name)\n\ninstrumenting with opentelemetry\n--------------------------------\n\nthis application uses `opentelemetry`_ to output tracing data from\napi calls to bigquery. to enable opentelemetry tracing in\nthe bigquery client the following pypi packages need to be installed:\n\n.. _opentelemetry: https://opentelemetry.io\n\n.. code-block:: console\n\n    pip install google-cloud-bigquery[opentelemetry] opentelemetry-exporter-google-cloud\n\nafter installation, opentelemetry can be used in the bigquery\nclient and in bigquery jobs. first, however, an exporter must be\nspecified for where the trace data will be outputted to. an\nexample of this can be found here:\n\n.. code-block:: python\n\n    from opentelemetry import trace\n    from opentelemetry.sdk.trace import tracerprovider\n    from opentelemetry.sdk.trace.export import batchexportspanprocessor\n    from opentelemetry.exporter.cloud_trace import cloudtracespanexporter\n    trace.set_tracer_provider(tracerprovider())\n    trace.get_tracer_provider().add_span_processor(\n        batchexportspanprocessor(cloudtracespanexporter())\n    )\n\nin this example all tracing data will be published to the google\n`cloud trace`_ console. for more information on opentelemetry, please consult the `opentelemetry documentation`_.\n\n.. _opentelemetry documentation: https://opentelemetry-python.readthedocs.io\n.. _cloud trace: https://cloud.google.com/trace\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2.0",
  "name": "google-cloud-bigquery",
  "package_url": "https://pypi.org/project/google-cloud-bigquery/",
  "project_url": "https://pypi.org/project/google-cloud-bigquery/",
  "project_urls": {
    "Homepage": "https://github.com/googleapis/python-bigquery"
  },
  "release_url": "https://pypi.org/project/google-cloud-bigquery/3.14.1/",
  "requires_dist": [
    "google-api-core !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5",
    "google-cloud-core <3.0.0dev,>=1.6.0",
    "google-resumable-media <3.0dev,>=0.6.0",
    "packaging >=20.0.0",
    "python-dateutil <3.0dev,>=2.7.2",
    "requests <3.0.0dev,>=2.21.0",
    "google-cloud-bigquery-storage <3.0.0dev,>=2.6.0 ; extra == 'all'",
    "grpcio <2.0dev,>=1.47.0 ; extra == 'all'",
    "pyarrow >=3.0.0 ; extra == 'all'",
    "pandas >=1.1.0 ; extra == 'all'",
    "db-dtypes <2.0.0dev,>=0.3.0 ; extra == 'all'",
    "ipywidgets >=7.7.0 ; extra == 'all'",
    "ipykernel >=6.0.0 ; extra == 'all'",
    "geopandas <1.0dev,>=0.9.0 ; extra == 'all'",
    "Shapely <3.0.0dev,>=1.8.4 ; extra == 'all'",
    "ipython !=8.1.0,>=7.23.1 ; extra == 'all'",
    "tqdm <5.0.0dev,>=4.7.4 ; extra == 'all'",
    "opentelemetry-api >=1.1.0 ; extra == 'all'",
    "opentelemetry-sdk >=1.1.0 ; extra == 'all'",
    "opentelemetry-instrumentation >=0.20b0 ; extra == 'all'",
    "proto-plus <2.0.0dev,>=1.15.0 ; extra == 'all'",
    "protobuf !=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.19.5 ; extra == 'all'",
    "importlib-metadata >=1.0.0 ; (python_version < \"3.8\") and extra == 'all'",
    "grpcio <2.0dev,>=1.49.1 ; (python_version >= \"3.11\") and extra == 'all'",
    "proto-plus <2.0.0dev,>=1.15.0 ; extra == 'bigquery_v2'",
    "protobuf !=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.19.5 ; extra == 'bigquery_v2'",
    "google-cloud-bigquery-storage <3.0.0dev,>=2.6.0 ; extra == 'bqstorage'",
    "grpcio <2.0dev,>=1.47.0 ; extra == 'bqstorage'",
    "pyarrow >=3.0.0 ; extra == 'bqstorage'",
    "grpcio <2.0dev,>=1.49.1 ; (python_version >= \"3.11\") and extra == 'bqstorage'",
    "geopandas <1.0dev,>=0.9.0 ; extra == 'geopandas'",
    "Shapely <3.0.0dev,>=1.8.4 ; extra == 'geopandas'",
    "ipython !=8.1.0,>=7.23.1 ; extra == 'ipython'",
    "ipykernel >=6.0.0 ; extra == 'ipython'",
    "ipywidgets >=7.7.0 ; extra == 'ipywidgets'",
    "ipykernel >=6.0.0 ; extra == 'ipywidgets'",
    "opentelemetry-api >=1.1.0 ; extra == 'opentelemetry'",
    "opentelemetry-sdk >=1.1.0 ; extra == 'opentelemetry'",
    "opentelemetry-instrumentation >=0.20b0 ; extra == 'opentelemetry'",
    "pandas >=1.1.0 ; extra == 'pandas'",
    "pyarrow >=3.0.0 ; extra == 'pandas'",
    "db-dtypes <2.0.0dev,>=0.3.0 ; extra == 'pandas'",
    "importlib-metadata >=1.0.0 ; (python_version < \"3.8\") and extra == 'pandas'",
    "tqdm <5.0.0dev,>=4.7.4 ; extra == 'tqdm'"
  ],
  "requires_python": ">=3.7",
  "summary": "google bigquery api client library",
  "version": "3.14.1",
  "releases": [],
  "developers": [
    "google_llc",
    "googleapis-packages@google.com"
  ],
  "kwds": "bigquery _bigquery googleapis _cloud cloudtracespanexporter",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_google_cloud_bigquery",
  "homepage": "https://github.com/googleapis/python-bigquery",
  "release_count": 153,
  "dependency_ids": [
    "pypi_db_dtypes",
    "pypi_geopandas",
    "pypi_google_api_core",
    "pypi_google_cloud_bigquery_storage",
    "pypi_google_cloud_core",
    "pypi_google_resumable_media",
    "pypi_grpcio",
    "pypi_importlib_metadata",
    "pypi_ipykernel",
    "pypi_ipython",
    "pypi_ipywidgets",
    "pypi_opentelemetry_api",
    "pypi_opentelemetry_instrumentation",
    "pypi_opentelemetry_sdk",
    "pypi_packaging",
    "pypi_pandas",
    "pypi_proto_plus",
    "pypi_protobuf",
    "pypi_pyarrow",
    "pypi_python_dateutil",
    "pypi_requests",
    "pypi_shapely",
    "pypi_tqdm"
  ]
}
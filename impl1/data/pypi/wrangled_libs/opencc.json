{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "natural language :: chinese (simplified)",
    "natural language :: chinese (traditional)",
    "programming language :: python",
    "programming language :: python :: 3",
    "topic :: scientific/engineering",
    "topic :: software development",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: localization",
    "topic :: text processing :: linguistic"
  ],
  "description": "# open chinese convert \u958b\u653e\u4e2d\u6587\u8f49\u63db\n\n[![travis](https://img.shields.io/travis/byvoid/opencc.svg)](https://travis-ci.org/byvoid/opencc)\n[![appveyor](https://img.shields.io/appveyor/ci/carbo/opencc.svg)](https://ci.appveyor.com/project/carbo/opencc)\n[![c/c++ ci](https://github.com/byvoid/opencc/actions/workflows/cmake.yml/badge.svg)](https://github.com/byvoid/opencc/actions/workflows/cmake.yml)\n[![node.js ci](https://github.com/byvoid/opencc/actions/workflows/nodejs.yml/badge.svg)](https://github.com/byvoid/opencc/actions/workflows/nodejs.yml)\n[![python ci](https://github.com/byvoid/opencc/actions/workflows/python.yml/badge.svg)](https://github.com/byvoid/opencc/actions/workflows/python.yml)\n\n## introduction \u4ecb\u7d39\n\n![opencc](https://opencc.byvoid.com/img/opencc.png)\n\nopen chinese convert (opencc, \u958b\u653e\u4e2d\u6587\u8f49\u63db) is an opensource project for conversions between traditional chinese, simplified chinese and japanese kanji (shinjitai). it supports character-level and phrase-level conversion, character variant conversion and regional idioms among mainland china, taiwan and hong kong. this is not translation tool between mandarin and cantonese, etc.\n\n\u4e2d\u6587\u7c21\u7e41\u8f49\u63db\u958b\u6e90\u9805\u76ee\uff0c\u652f\u6301\u8a5e\u5f59\u7d1a\u5225\u7684\u8f49\u63db\u3001\u7570\u9ad4\u5b57\u8f49\u63db\u548c\u5730\u5340\u7fd2\u6163\u7528\u8a5e\u8f49\u63db\uff08\u4e2d\u570b\u5927\u9678\u3001\u81fa\u7063\u3001\u9999\u6e2f\u3001\u65e5\u672c\u65b0\u5b57\u9ad4\uff09\u3002\u4e0d\u63d0\u4f9b\u666e\u901a\u8a71\u8207\u7cb5\u8a9e\u7684\u8f49\u63db\u3002\n\ndiscussion (telegram): https://t.me/open_chinese_convert\n\n### features \u7279\u9ede\n\n* \u56b4\u683c\u5340\u5206\u300c\u4e00\u7c21\u5c0d\u591a\u7e41\u300d\u548c\u300c\u4e00\u7c21\u5c0d\u591a\u7570\u300d\u3002\n* \u5b8c\u5168\u517c\u5bb9\u7570\u9ad4\u5b57\uff0c\u53ef\u4ee5\u5be6\u73fe\u52d5\u614b\u66ff\u63db\u3002\n* \u56b4\u683c\u5be9\u6821\u4e00\u7c21\u5c0d\u591a\u7e41\u8a5e\u689d\uff0c\u539f\u5247\u7232\u300c\u80fd\u5206\u5247\u4e0d\u5408\u300d\u3002\n* \u652f\u6301\u4e2d\u570b\u5927\u9678\u3001\u81fa\u7063\u3001\u9999\u6e2f\u7570\u9ad4\u5b57\u548c\u5730\u5340\u7fd2\u6163\u7528\u8a5e\u8f49\u63db\uff0c\u5982\u300c\u88cf\u300d\u300c\u88e1\u300d\u3001\u300c\u9f20\u6a19\u300d\u300c\u6ed1\u9f20\u300d\u3002\n* \u8a5e\u5eab\u548c\u51fd\u6578\u5eab\u5b8c\u5168\u5206\u96e2\uff0c\u53ef\u4ee5\u81ea\u7531\u4fee\u6539\u3001\u5c0e\u5165\u3001\u64f4\u5c55\u3002\n\n## installation \u5b89\u88dd\n\nsee [download](https://github.com/byvoid/opencc/wiki/download).\n\n## usage \u4f7f\u7528\n\n### online demo \u7dda\u4e0a\u8f49\u63db\u5c55\u793a\n\nwarning: **this is not an api.** you will be banned if you make calls programmatically.\n\nhttps://opencc.byvoid.com/\n\n### node.js\n\n[npm](https://www.npmjs.com/opencc) `npm install opencc`\n\n#### javascript\n```js\nconst opencc = require('opencc');\nconst converter = new opencc('s2t.json');\nconverter.convertpromise(\"\u6c49\u5b57\").then(converted => {\n  console.log(converted);  // \u6f22\u5b57\n});\n```\n\n#### typescript\n```ts\nimport { opencc } from 'opencc';\nasync function main() {\n  const converter: opencc = new opencc('s2t.json');\n  const result: string = await converter.convertpromise('\u6c49\u5b57');\n  console.log(result);\n}\n```\n\nsee [demo.js](https://github.com/byvoid/opencc/blob/master/node/demo.js) and [ts-demo.ts](https://github.com/byvoid/opencc/blob/master/node/ts-demo.ts).\n\n### python\n\n[pypi](https://pypi.org/project/opencc/) `pip install opencc` (windows, linux, mac)\n\n```python\nimport opencc\nconverter = opencc.opencc('s2t.json')\nconverter.convert('\u6c49\u5b57')  # \u6f22\u5b57\n```\n\n### c++\n\n```c++\n#include \"opencc.h\"\n\nint main() {\n  const opencc::simpleconverter converter(\"s2t.json\");\n  converter.convert(\"\u6c49\u5b57\");  // \u6f22\u5b57\n  return 0;\n}\n```\n\n### c\n\n```c\n#include \"opencc.h\"\n\nint main() {\n  opencc_t opencc = opencc_open(\"s2t.json\");\n  const char* input = \"\u6c49\u5b57\";\n  char* converted = opencc_convert_utf8(opencc, input, strlen(input));  // \u6f22\u5b57\n  opencc_convert_utf8_free(converted);\n  opencc_close(opencc);\n  return 0;\n}\n\n```\n\ndocument \u6587\u6a94: https://byvoid.github.io/opencc/\n\n### command line\n\n* `opencc --help`\n* `opencc_dict --help`\n* `opencc_phrase_extract --help`\n\n### others (unofficial)\n\n* swift (ios): [swiftyopencc](https://github.com/xqs6lb3a/swiftyopencc)\n* iosopencc (pod): [iosopencc](https://github.com/swiftdo/opencc)\n* java: [opencc4j](https://github.com/houbb/opencc4j)\n* android: [android-opencc](https://github.com/qichuan/android-opencc)\n* php: [opencc4php](https://github.com/nauxliu/opencc4php)\n* pure javascript: [opencc-js](https://github.com/nk2028/opencc-js)\n* webassembly: [wasm-opencc](https://github.com/oyyd/wasm-opencc)\n* browser extension: [opencc-extension](https://github.com/tnychn/opencc-extension)\n* go (pure): [opencc for go](https://github.com/longbridgeapp/opencc)\n\n### configurations \u914d\u7f6e\u6587\u4ef6\n\n#### \u9810\u8a2d\u914d\u7f6e\u6587\u4ef6\n\n* `s2t.json` simplified chinese to traditional chinese \u7c21\u9ad4\u5230\u7e41\u9ad4\n* `t2s.json` traditional chinese to simplified chinese \u7e41\u9ad4\u5230\u7c21\u9ad4\n* `s2tw.json` simplified chinese to traditional chinese (taiwan standard) \u7c21\u9ad4\u5230\u81fa\u7063\u6b63\u9ad4\n* `tw2s.json` traditional chinese (taiwan standard) to simplified chinese \u81fa\u7063\u6b63\u9ad4\u5230\u7c21\u9ad4\n* `s2hk.json` simplified chinese to traditional chinese (hong kong variant) \u7c21\u9ad4\u5230\u9999\u6e2f\u7e41\u9ad4\n* `hk2s.json` traditional chinese (hong kong variant) to simplified chinese \u9999\u6e2f\u7e41\u9ad4\u5230\u7c21\u9ad4\n* `s2twp.json` simplified chinese to traditional chinese (taiwan standard) with taiwanese idiom \u7c21\u9ad4\u5230\u7e41\u9ad4\uff08\u81fa\u7063\u6b63\u9ad4\u6a19\u6e96\uff09\u4e26\u8f49\u63db\u7232\u81fa\u7063\u5e38\u7528\u8a5e\u5f59\n* `tw2sp.json` traditional chinese (taiwan standard) to simplified chinese with mainland chinese idiom \u7e41\u9ad4\uff08\u81fa\u7063\u6b63\u9ad4\u6a19\u6e96\uff09\u5230\u7c21\u9ad4\u4e26\u8f49\u63db\u7232\u4e2d\u570b\u5927\u9678\u5e38\u7528\u8a5e\u5f59\n* `t2tw.json` traditional chinese (opencc standard) to taiwan standard \u7e41\u9ad4\uff08opencc \u6a19\u6e96\uff09\u5230\u81fa\u7063\u6b63\u9ad4\n* `hk2t.json` traditional chinese (hong kong variant) to traditional chinese \u9999\u6e2f\u7e41\u9ad4\u5230\u7e41\u9ad4\uff08opencc \u6a19\u6e96\uff09\n* `t2hk.json` traditional chinese (opencc standard) to hong kong variant \u7e41\u9ad4\uff08opencc \u6a19\u6e96\uff09\u5230\u9999\u6e2f\u7e41\u9ad4\n* `t2jp.json` traditional chinese characters (ky\u016bjitai) to new japanese kanji (shinjitai) \u7e41\u9ad4\uff08opencc \u6a19\u6e96\uff0c\u820a\u5b57\u9ad4\uff09\u5230\u65e5\u6587\u65b0\u5b57\u9ad4\n* `jp2t.json` new japanese kanji (shinjitai) to traditional chinese characters (ky\u016bjitai) \u65e5\u6587\u65b0\u5b57\u9ad4\u5230\u7e41\u9ad4\uff08opencc \u6a19\u6e96\uff0c\u820a\u5b57\u9ad4\uff09\n* `tw2t.json` traditional chinese (taiwan standard) to traditional chinese \u81fa\u7063\u6b63\u9ad4\u5230\u7e41\u9ad4\uff08opencc \u6a19\u6e96\uff09\n\n## build \u7de8\u8b6f\n\n### build with cmake\n\n#### linux & mac os x\n\ng++ 4.6+ or clang 3.2+ is required.\n\n```bash\nmake\n```\n\n#### windows visual studio:\n\n```bash\nbuild.cmd\n```\n\n### test \u6e2c\u8a66\n\n#### linux & mac os x\n\n```\nmake test\n```\n\n#### windows visual studio:\n\n```bash\ntest.cmd\n```\n\n### benchmark \u57fa\u6e96\u6e2c\u8a66\n\n```\nmake benchmark\n```\n\nexample results (from github ci):\n\n```\n1: ------------------------------------------------------------------\n1: benchmark                        time             cpu   iterations\n1: ------------------------------------------------------------------\n1: bm_initialization/hk2s        1.56 ms         1.56 ms          442\n1: bm_initialization/hk2t       0.144 ms        0.144 ms         4878\n1: bm_initialization/jp2t       0.260 ms        0.260 ms         2604\n1: bm_initialization/s2hk        23.8 ms         23.8 ms           29\n1: bm_initialization/s2t         25.6 ms         25.6 ms           28\n1: bm_initialization/s2tw        24.0 ms         23.9 ms           30\n1: bm_initialization/s2twp       24.6 ms         24.6 ms           28\n1: bm_initialization/t2hk       0.052 ms        0.052 ms        12897\n1: bm_initialization/t2jp       0.141 ms        0.141 ms         5012\n1: bm_initialization/t2s         1.30 ms         1.30 ms          540\n1: bm_initialization/tw2s        1.39 ms         1.39 ms          529\n1: bm_initialization/tw2sp       1.69 ms         1.69 ms          426\n1: bm_initialization/tw2t       0.089 ms        0.089 ms         7707\n1: bm_convert2m                   582 ms          582 ms            1\n1: bm_convert/100                1.07 ms         1.07 ms          636\n1: bm_convert/1000               11.0 ms         11.0 ms           67\n1: bm_convert/10000               113 ms          113 ms            6\n1: bm_convert/100000             1176 ms         1176 ms            1\n```\n\n## projects using opencc \u4f7f\u7528 opencc \u7684\u9805\u76ee\n\n* [ibus-pinyin](https://github.com/ibus/ibus-pinyin)\n* [fcitx](https://github.com/fcitx/fcitx)\n* [rimeime](https://rime.im/)\n* [libgooglepinyin](http://code.google.com/p/libgooglepinyin/)\n* [ibus-libpinyin](https://github.com/libpinyin/ibus-libpinyin)\n* [alfred-chinese-converter](https://github.com/amowu/alfred-chinese-converter)\n* [goldendict](https://github.com/goldendict/goldendict)\n\n## license \u8a31\u53ef\u5354\u8b70\n\napache license 2.0\n\n## third party library \u7b2c\u4e09\u65b9\u5eab\n\n* [darts-clone](https://github.com/s-yata/darts-clone) bsd license\n* [marisa-trie](https://github.com/s-yata/marisa-trie) bsd license\n* [tclap](http://tclap.sourceforge.net/) mit license\n* [rapidjson](https://github.com/tencent/rapidjson) mit license\n* [google test](https://github.com/google/googletest) bsd license\n\nall these libraries are statically linked by default.\n\n## change history \u7248\u672c\u6b77\u53f2\n\n* [news](https://github.com/byvoid/opencc/blob/master/news.md)\n\n### links \u76f8\u95dc\u93c8\u63a5\n\n* introduction \u8a73\u7d30\u4ecb\u7d39 https://github.com/byvoid/opencc/wiki/%e7%b7%a3%e7%94%b1\n* \u73fe\u4ee3\u6f22\u8a9e\u5e38\u7528\u7c21\u7e41\u4e00\u5c0d\u591a\u5b57\u7fa9\u8fa8\u6790\u8868 http://ytenx.org/byohlyuk/kienxpyan\n\n## contributors \u8ca2\u737b\u8005\n\n* [byvoid](http://www.byvoid.com/)\n* [\u4f5b\u632f](https://github.com/lotem)\n* [peng huang](https://github.com/phuang)\n* [li daobing](https://github.com/lidaobing)\n* [kefu chai](https://github.com/tchaikov)\n* [kan-ru chen](http://kanru.info/)\n* [ma xiaojun](https://twitter.com/damage3025)\n* [jiang jiang](http://jjgod.org/)\n* [ruey-cheng chen](https://github.com/rueycheng)\n* [paul meng](http://home.mno2.org/)\n* [lawrence lau](https://github.com/ktslwy)\n* [\u747e\u6600](https://github.com/kunki)\n* [\u5167\u6728\u4e00\u90ce](https://github.com/syaoranhinata)\n* [marguerite su](https://www.marguerite.su/)\n* [brian white](http://mscdex.net)\n* [qijiang fan](https://fqj.me/)\n* [leoyoon-tsaw](https://github.com/leoyoon-tsaw)\n* [steven yao](https://github.com/stevenyao)\n* [pellaeon lin](https://github.com/pellaeon)\n* [stony](https://github.com/stony-shixz)\n* [steelywing](https://github.com/steelywing)\n* [\u5415\u65ed\u4e1c](https://github.com/lvxudong)\n* [weng xuetian](https://github.com/wengxt)\n* [ma tao](https://github.com/iwater)\n* [heinz wiesinger](https://github.com/pprkut)\n* [j.w](https://github.com/jakwings)\n* [amo wu](https://github.com/amowu)\n* [mark tsai](https://github.com/mxgit1090)\n* [zhe wang](https://github.com/0x1997)\n* [sgqy](https://github.com/sgqy)\n* [qichuan (sean) zhang](https://github.com/qichuan)\n* [flandre scarlet](https://github.com/xadillax)\n* [\u5b8b\u8fb0\u6587](https://github.com/songchenwen)\n* [iwater](https://github.com/iwater)\n* [xpol wan](https://github.com/xpol)\n* [weihang lo](https://github.com/weihanglo)\n* [cychih](https://github.com/pi314)\n* [kyleskimo](https://github.com/kyleskimo)\n* [ryuan choi](https://github.com/bunhere)\n* [prcuvu](https://github.com/prcuvu)\n* [tony able](https://github.com/tonyable)\n* [xiao liang](https://github.com/yxliang01)\n\nplease feel free to update this list if you have contributed opencc.\n",
  "docs_url": null,
  "keywords": "opencc,convert,chinese",
  "license": "apache license 2.0",
  "name": "opencc",
  "package_url": "https://pypi.org/project/OpenCC/",
  "project_url": "https://pypi.org/project/OpenCC/",
  "project_urls": {
    "Homepage": "https://github.com/BYVoid/OpenCC"
  },
  "release_url": "https://pypi.org/project/OpenCC/1.1.7/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "conversion between traditional and simplified chinese",
  "version": "1.1.7",
  "releases": [],
  "developers": [
    "alexepico@gmail.com",
    "asias.hejun@gmail.com",
    "byvoid@byvoid.com",
    "carbo_kuo",
    "chen.sst@gmail.com",
    "damage3025@gmail.com",
    "lidaobing@gmail.com",
    "shawn.p.huang@gmail.com",
    "tchaikov@gmail.com"
  ],
  "kwds": "open_chinese_convert opencc pinyin \u6587\u6a94 iosopencc",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_opencc",
  "homepage": "https://github.com/byvoid/opencc",
  "release_count": 12,
  "dependency_ids": []
}
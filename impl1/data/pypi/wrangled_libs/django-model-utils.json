{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "==================\ndjango-model-utils\n==================\n\n.. image:: https://jazzband.co/static/img/badge.svg\n   :target: https://jazzband.co/\n   :alt: jazzband\n.. image:: https://github.com/jazzband/django-model-utils/workflows/test/badge.svg\n   :target: https://github.com/jazzband/django-model-utils/actions\n.. image:: https://codecov.io/gh/jazzband/django-model-utils/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/jazzband/django-model-utils\n.. image:: https://img.shields.io/pypi/v/django-model-utils.svg\n   :target: https://pypi.python.org/pypi/django-model-utils\n.. image:: https://img.shields.io/pypi/pyversions/django-model-utils.svg\n   :target: https://pypi.python.org/pypi/django-model-utils\n   :alt: supported python versions\n.. image:: https://img.shields.io/pypi/djversions/django-model-utils.svg\n   :target: https://pypi.org/project/django-model-utils/\n   :alt: supported django versions\n\ndjango model mixins and utilities.\n\n``django-model-utils`` supports `django`_ 3.2+.\n\n.. _django: https://www.djangoproject.com/\n\nthis app is available on `pypi`_.\n\n.. _pypi: https://pypi.python.org/pypi/django-model-utils/\n\ngetting help\n============\n\ndocumentation for django-model-utils is available\nhttps://django-model-utils.readthedocs.io/\n\n\nrun tests\n---------\n\n.. code-block\n\n    pip install -e .\n    py.test\n\ncontributing\n============\n\nplease file bugs and send pull requests to the `github repository`_ and `issue\ntracker`_. see `contributing.rst`_ for details.\n\n.. _github repository: https://github.com/jazzband/django-model-utils/\n.. _issue tracker: https://github.com/jazzband/django-model-utils/issues\n.. _contributing.rst: https://github.com/jazzband/django-model-utils/blob/master/contributing.rst\n\n\nchangelog\n=========\n\n4.3.1 (2022-11-15)\n------------------\n\n- confirm support for `django 4.0`\n- add spanish translation\n- add french translation\n- drop django 1.7 workaround from `select_subclasses()`\n- drop support for `django < 3.2`\n- drop support for `python 3.6`\n- confirm support for `django 4.1`\n\n4.3.0\n-----\n\n- never released due to packaging issues.\n\n4.2.0 (2021-10-11)\n------------------\n\n- add support for `django 3.2`\n- drop support for `django 3.0`\n- add support for `python 3.10`\n- added urlsafe token field.\n- introduce context manager for fieldtracker state reset (gh-#491)\n- fix performance regression of fieldtracker on filefield subclasses on django 3.1+\n  (gh-#498)\n\n4.1.1 (2020-12-01)\n------------------\n\n- applied `isort` to codebase (refs gh-#402)\n- fix `typeerror` in save when model inherits from both timestampmodel\n  and statusmodel. (fixes gh-465)\n\n4.1.0 (2020-11-29)\n------------------\n\n**breaking changes:**\n\n- `fieldtracker` now marks fields as not changed after `refresh_from_db`\n  respecting `fields` argument (gh-#404)\n- `fieldtracker` now respects `update_fields` changed in overridden `save()`\n  method (gh-#404)\n- `fieldtracker` now resets states after `pre_save()` and not anymore `save()`\n  signals, possibly altering the behaviour of overridden `save()`\n  methods (gh-#404)\n\n**other changes:**\n\n- update inheritancequerysetmixin to avoid querying too much tables\n- timestampedmodel now automatically adds 'modified' field as an update_fields\n  parameter even if it is forgotten while using save()\n- replace ugettext_lazy with gettext_lazy to satisfy django deprecation warning\n- add available_objects manager to softdeletablemodel and add deprecation\n  warning to objects manager.\n- statusmodel now automatically adds 'status_changed' field during save as an\n  update_fieldsparameter when 'status' is present in it to make sure it is not\n  forgotten.\n- update test requirements\n- move tests to github actions: https://github.com/jazzband/django-model-utils/actions\n- drop support for `django 2.1`\n- add support for `python 3.9`\n- add support for `django 3.1`\n\n4.0.0 (2019-12-11)\n------------------\n- added `choices.subset`.\n- remove hacks for previously supported django versions. (fixes gh-390)\n- dropped support for python 2.7. (fixes gh-393)\n- dropped usage of `six`\n- drop support for `django 1.11`\n- add support for `python 3.8`\n- add support for `django 3.0`\n\n3.2.0 (2019.06.21)\n-------------------\n- catch `attributeerror` for deferred abstract fields, fixes gh-331.\n- update documentation to explain usage of `timeframed` model manager, fixes gh-118\n- honor `onetoonefield.parent_link=false`.\n- fix handling of deferred attributes on django 1.10+, fixes gh-278\n- fix `fieldtracker.has_changed()` and `fieldtracker.previous()` to return\n  correct responses for deferred fields.\n- add simplified chinese translations.\n- update autolastmodifiedfield so that at instance creation it will\n  always be set equal to created to make querying easier. fixes gh-254\n- support `reversed` for all kinds of `choices` objects, fixes gh-309\n- fix model instance non picklable gh-330\n- fix patched `save` in fieldtracker\n- upgrades test requirements (pytest, pytest-django, pytest-cov) and\n  skips tox test with python 3.5 and django (trunk)\n- add uuidmodel and uuidfield support.\n\n3.1.2 (2018.05.09)\n------------------\n- update inheritanceiterable to inherit from\n  modeliterable instead of baseiterable, fixes gh-277.\n\n- add all_objects manager for 'softdeletablemodel' to include soft\n  deleted objects on queries as per issue gh-255\n\n3.1.1 (2017.12.17)\n------------------\n\n- update classifiers and readme via gh-306, fixes gh-305\n\n3.1.0 (2017.12.11)\n------------------\n\n- support for django 2.0 via gh-298, fixes gh-297\n- remove old travis script via gh-300\n- fix codecov and switch to py.test #301\n\n3.0.0 (2017.04.13)\n------------------\n\n- drop support for python 2.6.\n- drop support for django 1.4, 1.5, 1.6, 1.7.\n- exclude tests from the distribution, fixes gh-258.\n- add support for django 1.11 gh-269\n- add a new model to disable pre_save/post_save signals\n\n\n2.6.1 (2017.01.11)\n------------------\n\n- fix infinite recursion with multiple `monitorfield` and `defer()` or `only()`\n  on django 1.10+. thanks romain garrigues. merge of gh-242, fixes gh-241.\n\n- fix `inheritancemanager` and `softdeletablemanager` to respect\n  `self._queryset_class` instead of hardcoding the queryset class. merge of\n  gh-250, fixes gh-249.\n\n- add mixins for `softdeletablequeryset` and `softdeletablemanager`, as stated\n  in the the documentation.\n\n- fix `softdeletablemodel.delete()` to use the correct database connection.\n  merge of gh-239.\n\n- added boolean keyword argument `soft` to `softdeletablemodel.delete()` that\n  revert to default behavior when set to `false`. merge of gh-240.\n\n- enforced default manager in `statusmodel` to avoid manager order issues when\n  using abstract models that redefine `objects` manager. merge of gh-253, fixes\n  gh-251.\n\n\n2.6 (2016.09.19)\n----------------\n\n- added `softdeletablemodel` abstract class, its manageer\n  `softdeletablemanager` and queryset `softdeletablequeryset`.\n\n- fix issue with field tracker and deferred filefield for django 1.10.\n\n\n2.5.2 (2016.08.09)\n------------------\n\n- include `runtests.py` in sdist.\n\n\n2.5.1 (2016.08.03)\n------------------\n\n- fix `inheritancequeryset` raising an `attributeerror` exception\n  under django 1.9.\n\n- django 1.10 support regressed with changes between pre-alpha and final\n  release; 1.10 currently not supported.\n\n\n2.5 (2016.04.18)\n----------------\n\n- drop support for python 3.2.\n\n- add support for django 1.10 pre-alpha.\n\n- track foreign keys on parent models properly when a tracker\n  is defined on a child model. fixes gh-214.\n\n\n2.4 (2015.12.03)\n----------------\n\n- remove `passthroughmanager`. use django's built-in `queryset.as_manager()`\n  and/or `manager.from_queryset()` utilities instead.\n\n- add support for django 1.9.\n\n\n2.3.1 (2015-07-20)\n------------------\n\n- remove all translation-related automation in `setup.py`. fixes gh-178 and\n  gh-179. thanks joe weiss, matt molyneaux, and others for the reports.\n\n\n2.3 (2015.07.17)\n----------------\n\n- keep track of deferred fields on model instance instead of on\n  fieldinstancetracker instance. fixes accessing deferred fields for multiple\n  instances of a model from the same queryset. thanks bram boogaard. merge of\n  gh-151.\n\n- fix django 1.7 migrations compatibility for splitfield. thanks ad-m. merge of\n  gh-157; fixes gh-156.\n\n- add german translations.\n\n- django 1.8 compatibility.\n\n\n2.2 (2014.07.31)\n----------------\n\n- revert gh-130, restoring ability to access ``fieldtracker`` changes in\n  overridden ``save`` methods or ``post_save`` handlers. this reopens gh-83\n  (inability to pickle models with ``fieldtracker``) until a solution can be\n  found that doesn't break behavior otherwise. thanks brian may for the\n  report. fixes gh-143.\n\n\n2.1.1 (2014.07.28)\n------------------\n\n- ascii-fold all non-ascii characters in changelog; again. argh. apologies to\n  those whose names are mangled by this change. it seems that distutils makes\n  it impossible to handle non-ascii content reliably under python 3 in a\n  setup.py long_description, when the system encoding may be ascii. thanks\n  brian may for the report. fixes gh-141.\n\n\n2.1.0 (2014.07.25)\n------------------\n\n- add support for django's built-in migrations to ``monitorfield`` and\n  ``statusfield``.\n\n- ``passthroughmanager`` now has support for seeing exposed methods via\n  ``dir``, allowing `ipython`_ tab completion to be useful. merge of gh-104,\n  fixes gh-55.\n\n- add pickle support for models using ``fieldtracker``.  thanks ondrej slintak\n  for the report.  thanks matthew schinckel for the fix.  merge of gh-130,\n  fixes gh-83.\n\n.. _ipython: http://ipython.org/\n\n\n2.0.3 (2014.03.19)\n-------------------\n\n- fix ``get_query_set`` vs ``get_queryset`` in ``passthroughmanager`` for\n  django <1.6. fixes issues with related managers not filtering by relation\n  properly. thanks whop, bojan mihelac, daniel shapiro, and matthew schinckel\n  for the report; matthew for the fix. merge of gh-121.\n\n- fix ``fieldtracker`` with deferred model attributes. thanks michael van\n  tellingen. merge of gh-115.\n\n- fix ``inheritancemanager`` with self-referential fk; avoid infinite\n  recursion. thanks rsenkbeil. merge of gh-114.\n\n2.0.2 (2014.02.19)\n-------------------\n\n- ascii-fold all non-ascii characters in changelog. apologies to those whose\n  names are mangled by this change. it seems that distutils makes it impossible\n  to handle non-ascii content reliably under python 3 in a setup.py\n  long_description, when the system encoding may be ascii. thanks simone dalla\n  for the report. fixes gh-113.\n\n\n2.0.1 (2014.02.11)\n-------------------\n\n- fix dependency to be on \"django\" rather than \"django\", which plays better\n  with static pypi mirrors. thanks travis swicegood.\n\n- fix issue with attempt to access ``__slots__`` when copying\n  ``passthroughmanager``. thanks patryk zawadzki. merge of gh-105.\n\n- improve ``inheritancemanager`` so any attributes added by using extra(select)\n  will be propagated onto children. thanks curtis maloney. merge of gh-101,\n  fixes gh-34.\n\n- added ``inheritancemanagermixin``, ``inheritancequerysetmixin``,\n  ``passthroughmanagermixin``, and ``querymanagermixin`` to allow composing\n  their functionality with other custom manager/queryset subclasses (e.g. those\n  in geodjango). thanks douglas meehan!\n\n\n2.0 (2014.01.06)\n----------------\n\n- backwards-incompatible: indexing into a ``choices`` instance now translates\n  database representations to human-readable choice names, rather than simply\n  indexing into an array of choice tuples. (indexing into ``choices`` was\n  previously not documented.) if you have code that is relying on indexing or\n  slicing ``choices``, the simplest workaround is to change e.g. ``status[1:]``\n  to ``list(status)[1:]``.\n\n- fixed bug with checking for field name conflicts for added query managers on\n  `statusmodel`.\n\n- can pass `choices_name` to `statusfield` to use a different name for\n  choices class attribute. ``status`` is used by default.\n\n- can pass model subclasses, rather than strings, into\n  `select_subclasses()`. thanks keryn knight. merge of gh-79.\n\n- deepcopying a `choices` instance no longer fails with infinite recursion in\n  `getattr`. thanks leden. merge of gh-75.\n\n- `get_subclass()` method is now available on both managers and\n  querysets. thanks travis swicegood. merge of gh-82.\n\n- fix bug in `inheritancemanager` with grandchild classes on django 1.6+;\n  `select_subclasses('child', 'child__grandchild')` would only ever get to the\n  child class. thanks keryn knight for report and proposed fix.\n\n- monitorfield now accepts a 'when' parameter. it will update only when the field\n  changes to one of the values specified.\n\n\n1.5.0 (2013.08.29)\n------------------\n\n- `choices` now accepts option-groupings. fixes gh-14.\n\n- `choices` can now be added to other `choices` or to any iterable, and can be\n  compared for equality with itself. thanks tony aldridge. (merge of gh-76.)\n\n- `choices` now `__contains__` its python identifier values. thanks keryn\n  knight. (merge of gh-69).\n\n- fixed a bug causing ``keyerror`` when saving with the parameter\n  ``update_fields`` in which there are untracked fields. thanks mikhail\n  silonov. (merge of gh-70, fixes gh-71).\n\n- fixed ``fieldtracker`` usage on inherited models.  fixes gh-57.\n\n- added mutable field support to ``fieldtracker`` (merge of gh-73, fixes gh-74)\n\n\n1.4.0 (2013.06.03)\n------------------\n\n- introduced ``fieldtracker`` as replacement for ``modeltracker``, which is now\n  deprecated.\n\n- ``passthroughmanager.for_queryset_class()`` no longer ignores superclass\n  ``get_query_set``. thanks andy freeland.\n\n- fixed ``inheritancemanager`` bug with grandchildren in django 1.6. thanks\n  crazycasta.\n\n- fixed lack of ``get_foo_display`` method for ``statusfield``. fixes gh-41.\n\n\n1.3.1 (2013.04.11)\n------------------\n\n- added explicit default to ``booleanfield`` in tests, for django trunk\n  compatibility.\n\n- fixed intermittent ``statusfield`` bug.  fixes gh-29.\n\n- added python 3 support.\n\n- dropped support for django 1.2 and 1.3.  django 1.4.2+ required.\n\n\n1.3.0 (2013.03.27)\n------------------\n\n- allow specifying default value for a ``statusfield``. thanks felipe\n  prenholato.\n\n- fix calling ``create()`` on a ``relatedmanager`` that subclasses a dynamic\n  ``passthroughmanager``. thanks seiryuz for the report. fixes gh-24.\n\n- add workaround for https://code.djangoproject.com/ticket/16855 in\n  inheritancequeryset to avoid overriding prior calls to\n  ``select_related()``. thanks ivirabyan.\n\n- added support for arbitrary levels of model inheritance in\n  inheritancemanager. thanks ivirabyan. (this feature only works in django\n  1.6+ due to https://code.djangoproject.com/ticket/16572).\n\n- added ``modeltracker`` for tracking field changes between model saves. thanks\n  trey hunner.\n\n\n1.2.0 (2013.01.27)\n------------------\n\n- moved primary development from `bitbucket`_ to `github`_. bitbucket mirror\n  will continue to receive updates; bitbucket issue tracker will be closed once\n  all issues tracked in it are resolved.\n\n.. _bitbucket: https://bitbucket.org/carljm/django-model-utils/overview\n.. _github: https://github.com/carljm/django-model-utils/\n\n- removed deprecated ``choiceenum``, ``inheritancecastmodel``,\n  ``inheritancecastmanager``, and ``manager_from``.\n\n- fixed pickling of ``passthroughmanager``. thanks rinat shigapov.\n\n- set ``use_for_related_fields = true`` on ``querymanager``.\n\n- added ``__len__`` method to ``choices``. thanks ryan kaskel and james oakley.\n\n- fixed ``inheritancequeryset`` on django 1.5. thanks javier garcia sogo.\n\n1.1.0 (2012.04.13)\n------------------\n\n- updated autocreatedfield, autolastmodifiedfield, monitorfield, and\n  timeframedmodel to use ``django.utils.timezone.now`` on django 1.4.\n  thanks donald stufft.\n\n- fixed annotation of inheritancequerysets. thanks jeff elmore and facundo\n  gaich.\n\n- dropped support for python 2.5 and django 1.1. both are no longer supported\n  even for security fixes, and should not be used.\n\n- added ``passthroughmanager.for_queryset_class()``, which fixes use of\n  ``passthroughmanager`` with related fields. thanks ryan kaskel for report and\n  fix.\n\n- added ``inheritancemanager.get_subclass()``. thanks smacker.\n\n1.0.0 (2011.06.16)\n------------------\n\n- fixed using splitfield on an abstract base model.\n\n- fixed issue #8, adding ``use_for_related_fields = true`` to\n  ``inheritancemanager``.\n\n- added ``passthroughmanager``. thanks paul mclanahan.\n\n- added pending-deprecation warnings for ``inheritancecastmodel``,\n  ``manager_from``, and django 1.1 support. removed documentation for the\n  deprecated utilities. bumped ``choiceenum`` from pending-deprecation to\n  deprecation.\n\n- fixed issue #6, bug with inheritancemanager and descriptor fields (e.g.\n  filefield).  thanks zyegfryed for the fix and sayane for tests.\n\n0.6.0 (2011.02.18)\n------------------\n\n- updated splitfield to define get_prep_value rather than get_db_prep_value.\n  this avoids deprecation warnings on django trunk/1.3, but makes splitfield\n  incompatible with django versions prior to 1.2.\n\n- added inheritancemanager, a better approach to selecting subclass instances\n  for django 1.2+. thanks jeff elmore.\n\n- added inheritancecastmanager and inheritancecastqueryset, to allow bulk\n  casting of a queryset to child types.  thanks gregor muellegger.\n\n0.5.0 (2010.09.24)\n------------------\n\n- added manager_from (thanks george sakkis)\n- added statusfield, monitorfield, timeframedmodel, and statusmodel\n  (thanks jannis leidel)\n- deprecated choiceenum and replaced with choices\n\n0.4.0 (2010.03.16)\n------------------\n\n- added splitfield\n- added choiceenum\n- added south support for custom model fields\n\n0.3.0\n-----\n\n- added ``querymanager``\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "django-model-utils",
  "package_url": "https://pypi.org/project/django-model-utils/",
  "project_url": "https://pypi.org/project/django-model-utils/",
  "project_urls": {
    "Homepage": "https://github.com/jazzband/django-model-utils"
  },
  "release_url": "https://pypi.org/project/django-model-utils/4.3.1/",
  "requires_dist": [],
  "requires_python": ">=3.7",
  "summary": "django model mixins and utilities",
  "version": "4.3.1",
  "releases": [],
  "developers": [
    "carl@oddbird.net",
    "carl_meyer",
    "jazzband"
  ],
  "kwds": "_django django djangoproject badge statusfield",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_django_model_utils",
  "homepage": "https://github.com/jazzband/django-model-utils",
  "release_count": 39,
  "dependency_ids": []
}
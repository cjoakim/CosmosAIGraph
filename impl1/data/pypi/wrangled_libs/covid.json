{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: utilities"
  ],
  "description": "# covid\n\n[![circleci](https://circleci.com/gh/nf1s/covid.svg?style=shield)](https://circleci.com/gh/nf1s/covid) [![codecov](https://codecov.io/gh/nf1s/covid/branch/master/graph/badge.svg)](https://codecov.io/gh/nf1s/covid) ![github pipenv locked python version](https://img.shields.io/github/pipenv/locked/python-version/nf1s/covid) [![downloads](https://pepy.tech/badge/covid)](https://pepy.tech/project/covid) ![github](https://img.shields.io/github/license/nf1s/covid)\n\n## description\n\npython package to get information regarding the novel corona virus provided\nby johns hopkins university and worldometers.info\n\nfull documentation can be found [here](https://nf1s.github.io/covid/)\n\n![corona.jpeg](docs/img/corona.jpeg)\n\n## requirements\n\n    python >= 3.6\n\n## how to install\n\n    pip install covid\n\n## dependencies\n\n    pydantic\n    requests\n\n## how to use\n\n## john hopkins university api\n\n![john_hopkins](docs/img/john_hopkins.png)\n\n### get all data\n\n```python\nfrom covid import covid\n\ncovid = covid()\ncovid.get_data()\n```\n\n#### result\n\n```python\n[\n    {\n        'id': '53',\n        'country': 'china',\n        'confirmed': 81020,\n        'active': 9960,\n        'deaths': 3217,\n        'recovered': 67843,\n        'latitude': 30.5928,\n        'longitude': 114.3055,\n        'last_update': 1584097775000\n    },\n    {\n        'id': '115',\n        'country': 'italy',\n        'confirmed': 24747,\n        'active': 20603,\n        'deaths': 1809,\n        'recovered': 2335,\n        'latitude': 41.8719,\n        'longitude': 12.5674,\n        'last_update': 1584318130000\n    },\n    ...\n]\n```\n\n### list countries\n\nthis comes in handy when you need to know the available names of countries\nwhen using `get_status_by_country_name`, eg. \"the republic of moldova\" or just \"moldova\"\nso use this when you need to know the country exact name that you can use.\n\n```python\ncountries = covid.list_countries()\n```\n\n#### result\n\n```python\n[\n    {'id': '53', 'country': 'china'},\n    {'id': '115', 'country': 'italy'}\n    ...\n]\n```\n\n### get status by country id\n\n```python\nitaly_cases = covid.get_status_by_country_id(115)\n```\n\n#### result\n\n```python\n{\n    'id': '115',\n    'country': 'italy',\n    'confirmed': 24747,\n    'active': 20603,\n    'deaths': 1809,\n    'recovered': 2335,\n    'latitude': 41.8719,\n    'longitude': 12.5674,\n    'last_update': 1584318130000\n}\n```\n\n### get status by country name\n\n```python\nitaly_cases = covid.get_status_by_country_name(\"italy\")\n```\n\n#### result\n\n```python\n{\n    'id': '115',\n    'country': 'italy',\n    'confirmed': 24747,\n    'active': 20603,\n    'deaths': 1809,\n    'recovered': 2335,\n    'latitude': 41.8719,\n    'longitude': 12.5674,\n    'last_update': 1584318130000\n}\n```\n\n### get total confirmed cases\n\n```python\nconfirmed = covid.get_total_confirmed_cases()\n```\n\n### get total deaths\n\n```python\ndeaths = covid.get_total_deaths()\n```\n\n## getting data from worldometers.info\n\n![worldometers](docs/img/worldometers.png)\n\n```python\ncovid = covid(source=\"worldometers\")\n```\n\n### get data\n\n```python\ncovid.get_data()\n```\n\n#### result\n\n```python\n[\n    {\n        'country': 'usa',\n        'confirmed': 311637,\n        'new_cases': 280,\n        'deaths': 8454,\n        'recovered': 14828,\n        'active': 288355,\n        'critical': 8206,\n        'new_deaths': 2,\n        'total_tests': 1656897,\n        'total_tests_per_million': decimal('0'),\n        'total_cases_per_million': decimal('941'),\n        'total_deaths_per_million': decimal('26')\n    },\n    {\n        'active': 1376,\n        'confirmed': 81669,\n        'country': 'china',\n        'critical': 295,\n        'deaths': 3329,\n        'new_cases': 30,\n        'new_deaths': 3,\n        'recovered': 76964,\n        'total_cases_per_million': decimal('57'),\n        'total_deaths_per_million': decimal('2'),\n        'total_tests': 0,\n        'total_tests_per_million': decimal('0')\n    }\n    ...\n]\n\n```\n\n### get status by country name\n\n```python\ncovid.get_status_by_country_name(\"italy\")\n```\n\n#### result\n\n```python\n{\n    'active': 88274,\n    'confirmed': 124632,\n    'country': 'italy',\n    'critical': 3994,\n    'deaths': 15362,\n    'new_cases': 0,\n    'new_deaths': 0,\n    'recovered': 20996,\n    'total_cases_per_million': decimal('2061'),\n    'total_deaths_per_million': decimal('254'),\n    'total_tests': 657224,\n    'total_tests_per_million': decimal('0')\n }\n```\n\n### list countries\n\n```python\ncountries = covid.list_countries()\n```\n\n#### result\n\n```python\n[\n    'china',\n    'italy',\n    'usa',\n    'spain',\n    'germany',\n...\n]\n```\n\n### get total active cases\n\n```python\nactive = covid.get_total_active_cases()\n```\n\n### get total confirmed cases\n\n```python\nconfirmed = covid.get_total_confirmed_cases()\n```\n\n### get total recovered cases\n\n```python\nrecovered = covid.get_total_recovered()\n```\n\n### get total deaths\n\n```python\ndeaths = covid.get_total_deaths()\n```\n\n## cli 2.0 (new)\n\n```bash\ncovid --help\n```\n### get all data\n\n#### john hopkins source (default)\n\n```bash\ncovid\n```\n\nor\n\n```bash\ncovid -s john_hopkins\n```\n\n#### worldometers source\n\n```bash\ncovid -s worldometers\n```\n\n### list countries\n\nthis comes in handy when you need to know the available names of countries\nwhen using `covid -s 'source' -c 'country_name'`, eg. \"the republic of moldova\" or just \"moldova\"\nso use this when you need to know the country exact name that you can use.\n\n```bash\ncovid -s worldometers --list-countries\n```\n\n### get status by country name\n\n```bash\ncovid -s worldometers -c sweden\n```\n\n### get total active cases\n\n```bash\ncovid -s worldometers -o active\n```\n\n### get total confirmed cases\n\n```bash\ncovid -s worldometers -o confirmed\n```\n\n### get total recovered cases\n\n```bash\ncovid -s worldometers -o recovered\n```\n\n### get total deaths\n\n```bash\ncovid -s worldometers -o deaths\n```\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "covid",
  "package_url": "https://pypi.org/project/covid/",
  "project_url": "https://pypi.org/project/covid/",
  "project_urls": {
    "Documentation": "https:/nf1s.github.io/covid/",
    "Homepage": "https://nf1s.github.io/covid/",
    "Source": "https://github.com/nf1s/covid"
  },
  "release_url": "https://pypi.org/project/covid/2.6.0/",
  "requires_dist": [],
  "requires_python": ">=3.8",
  "summary": "python package to get information regarding the novel corona virus provided by johns hopkins university and worldometers.info",
  "version": "2.6.0",
  "releases": [],
  "developers": [
    "ahmed.nafies@gmail.com",
    "ahmed_nafies"
  ],
  "kwds": "covid codecov pipenv python pip",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_covid",
  "homepage": "https://nf1s.github.io/covid/",
  "release_count": 55,
  "dependency_ids": []
}
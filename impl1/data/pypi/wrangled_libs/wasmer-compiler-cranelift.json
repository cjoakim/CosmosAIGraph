{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: rust",
    "topic :: software development",
    "topic :: software development :: compilers",
    "topic :: software development :: interpreters"
  ],
  "description": "# <img height=\"48\" src=\"https://raw.githubusercontent.com/wasmerio/wasmer/master/assets/logo.png\" alt=\"wasmer logo\" valign=\"middle\"> wasmer python, the cranelift compiler [![pypi version](https://img.shields.io/pypi/v/wasmer_compiler_cranelift)](https://pypi.org/project/wasmer_compiler_cranelift/) [![wasmer python documentation](https://img.shields.io/badge/docs-read-green)](https://wasmerio.github.io/wasmer-python/api/wasmer_compiler_cranelift/) [![wasmer pypi downloads](https://pepy.tech/badge/wasmer_compiler_cranelift)](https://pypi.org/project/wasmer_compiler_cranelift/) [![wasmer slack channel](https://img.shields.io/static/v1?label=chat&message=on%20slack&color=green)](https://slack.wasmer.io)\n\n`wasmer` is a complete and mature webassembly runtime for\npython. `wasmer_compiler_cranelift` provides the cranelift compiler to\n`wasmer`, so that `wasmer` is able to compile webassembly module.\n\nother compilers exist:\n\n* `wasmer_compiler_llvm`,\n* `wasmer_compiler_singlepass`.\n\nto get a more complete view, please see the documentation of [the\n`wasmer` package itself](https://github.com/wasmerio/wasmer-python).\n\n# install\n\nthis package must be used with the `wasmer` package, thus:\n\n```sh\n$ pip install wasmer\n$ pip install wasmer_compiler_cranelift\n```\n\n# usage\n\nany engines in `wasmer.engine` can take the\n`wasmer_compiler_cranelift.compiler` class as argument:\n\n```py\nfrom wasmer import engine, store, module, instance\nfrom wasmer_compiler_cranelift import compiler\n\n# let's use the cranelift compiler with the jit engine\u2026\nstore = store(engine.jit(compiler))\n\n# \u2026 or with the native engine!\nstore = store(engine.native(compiler))\n\n# and now, compile the module.\nmodule = module(store, open('my_program.wasm', 'rb').read())\n\n# now it's compiled, let's instantiate it.\ninstance = instance(module)\n\n# and get fun, for example by calling the `sum` exported function!\nprint(instance.exports.sum(1, 2))\n```\n\n# documentation\n\nbrowse the documentation at\nhttps://wasmerio.github.io/wasmer-python/api/wasmer_compiler_cranelift/.\n\nalternatively, run `just build compiler-cranelift` followed by `just\ndoc` to generate the documentation inside\n`docs/api/wasmer_compiler_cranelift.html`.\n\n",
  "docs_url": null,
  "keywords": "python,extension,webassembly",
  "license": "",
  "name": "wasmer-compiler-cranelift",
  "package_url": "https://pypi.org/project/wasmer-compiler-cranelift/",
  "project_url": "https://pypi.org/project/wasmer-compiler-cranelift/",
  "project_urls": {
    "Bug Tracker": "https://github.com/wasmerio/wasmer-python/issues",
    "Documentation": "https://github.com/wasmerio/wasmer-python/",
    "Source Code": "https://github.com/wasmerio/wasmer-python"
  },
  "release_url": "https://pypi.org/project/wasmer-compiler-cranelift/1.1.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "the cranelift compiler for the `wasmer` package (to compile webassembly module)",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "engineering@wasmer.io"
  ],
  "kwds": "wasmer_compiler_cranelift wasmer_compiler_llvm wasmer_compiler_singlepass wasmer wasmerio",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_wasmer_compiler_cranelift",
  "homepage": "",
  "release_count": 5,
  "dependency_ids": []
}
{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "operating system :: macos",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: utilities"
  ],
  "description": "[![pypi](https://img.shields.io/pypi/v/napalm.svg)](https://pypi.python.org/pypi/napalm)\n[![pypi versions](https://img.shields.io/pypi/pyversions/napalm.svg)](https://pypi.python.org/pypi/napalm)\n[![actions build](https://github.com/napalm-automation/napalm/actions/workflows/commit.yaml/badge.svg?branch=develop)](https://github.com/napalm-automation/napalm/actions/workflows/commit.yaml)\n[![code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n\nnapalm\n======\nnapalm (network automation and programmability abstraction layer with multivendor support) is a python library that implements a set of functions to interact with different router vendor devices using a unified api.\n\n![napalm logo](static/logo.png?raw=true \"napalm logo\")\n\nnapalm supports several methods to connect to the devices, to manipulate configurations or to retrieve data.\n\nsupported network operating systems\n-----------------------------------\n\nplease check the following [link](https://napalm.readthedocs.io/en/latest/support/index.html) to see which devices are supported. make sure you understand the [caveats](https://napalm.readthedocs.io/en/latest/support/index.html#caveats).\n\ndocumentation\n=============\n\nbefore using the library, please read the documentation at: [read the docs](https://napalm.readthedocs.io)\n\nyou can also watch a [live demo](https://youtu.be/93q-dhc0u0i) of napalm to see what it is and what it can do for you.\n\ninstall\n=======\n\n```\npip install napalm\n```\n\n*note*: beginning with release 4.0.0 and later, napalm offers support for\npython 3.7+ only.\n\n*note*: beginning with release 3.0.0 and later, napalm offers support for\npython 3.6+ only.\n\n\nupgrading\n=========\n\nwe plan to upgrade napalm as fast as possible. adding new methods and bugfixes. to upgrade napalm it's a simple as repeating the steps you performed while installing but adding the `-u` flag. for example:\n\n```\npip install napalm -u\n```\n\nwe will be posting news on our slack channel and on twitter.\n\n\nautomation frameworks\n======================\n\ndue to its flexibility, napalm can be integrated in widely used automation frameworks.\n\n\nansible\n-------\n\nplease check [napalm-ansible](https://github.com/napalm-automation/napalm-ansible) for existing ansible modules leveraging the napalm api. make sure you read the documentation and you understand how it works before trying to use it.\n\n\nsaltstack\n---------\n\nbeginning with release code named `carbon` (2016.11), [napalm is fully integrated](https://mirceaulinic.net/2016-11-30-salt-carbon-released/) in saltstack - no additional modules required. for setup recommendations, please see [napalm-salt](https://github.com/napalm-automation/napalm-salt). for documentation and usage examples, you can check the modules documentation, starting from the [release notes](https://docs.saltstack.com/en/develop/topics/releases/2016.11.0.html#network-automation-napalm) and [this blog post](https://mirceaulinic.net/2016-11-17-network-orchestration-with-salt-and-napalm/).\n\nstackstorm\n----------\n\nnapalm is usable from stackstorm using the [napalm integration pack](https://github.com/stackstorm-exchange/stackstorm-napalm). see that repository for instructions on installing and configuring the pack to work with stackstorm. general stackstorm documentation can be found at [https://docs.stackstorm.com/](https://docs.stackstorm.com/), and stackstorm can be easily spun up for testing using [vagrant](https://github.com/stackstorm/st2vagrant) or [docker](https://github.com/stackstorm/st2-docker).\n\n\ncontact\n=======\n\nslack\n-----\n\nslack is probably the easiest way to get help with napalm. you can find us in the channel `napalm` on the [network.tocode()](https://networktocode.herokuapp.com/) team.\n\nfaq\n---\n\nif you have any issues using napalm or encounter any errors, before submitting any questions (directly by email or on slack), please go through the following checklist:\n\n- make sure you have the latest release installed. we release very often, so upgrading to the latest version might help in many cases.\n- double check you are able to access the device using the credentials provided.\n- does your device meet the minimum [requirements](http://napalm.readthedocs.io/en/latest/support/index.html#general-support-matrix)?\n- some operating systems have some specific [constraints](http://napalm.readthedocs.io/en/latest/support/index.html#caveats). (e.g. have you enabled the xml agent on ios-xr, or the nxapi feature on nxos?)\n- are you able to connect to the device using napalm? check using napalm cli to get_facts:\n\n```bash\n$ napalm --vendor vendor --user username --password password --optional_args optional_args hostname call get_facts\n```\n\nwhere vendor, username, password and hostname are mandatory. [optional arguments](http://napalm.readthedocs.io/en/latest/support/index.html#optional-arguments) are specified as comma separated values.\n\nexample:\n\n```bash\n$ napalm --vendor junos --user napalm --password dbejmujz --optional_args 'port=12202, config_lock=false' edge01.bjm01 call get_facts\n```\n\nin case you have any errors, please review the steps above - this looks like a problem with your environment setup.\n\nin order to get help faster, when submitting a bug/error make sure to include all the details requested.\n\nnews\n====\n\nblog posts\n----------\n\n* [napalm, ansible, and cisco ios](https://pynet.twb-tech.com/blog/automation/napalm-ios.html) by kirk byers\n* [adding cisco ios support to napalm (network automation and programmability abstraction layer with multivendor support)](https://projectme10.wordpress.com/2015/12/07/adding-cisco-ios-support-to-napalm-network-automation-and-programmability-abstraction-layer-with-multivendor-support/) by gabriele gerbino\n* [network orchestration with salt and napalm](https://mirceaulinic.net/2016-11-17-network-orchestration-with-salt-and-napalm/) by mircea ulinic\n* [network configuration consistency with stackstorm and napalm](https://stackstorm.com/2017/04/11/ensuring-network-configuration-consistency-stackstorm-napalm/) by matt oswalt\n\npresentations\n-------------\n\n* [nanog 64 presentation & demo](https://youtu.be/93q-dhc0u0i) by david barroso and elisa jasinska\n* [netnod autumn meeting 2015 presentation](https://www.netnod.se/sites/default/files/napalm-david_barroso-netnodautumnmeeting2015.pdf) by david barroso\n* [automating ixp device configurations with ansible at the euro-ix forum](https://www.euro-ix.net/m/uploads/2015/10/26/euroix-berlin-v2.pdf) by elisa jasinska\n* [network automation with salt and napalm at nanog 68](https://www.nanog.org/sites/default/files/nanog68%20network%20automation%20with%20salt%20and%20napalm%20mircea%20ulinic%20cloudflare%20(1).pdf); [video](https://www.youtube.com/watch?v=gv2918bh5_c); [recorded demo](https://www.youtube.com/watch?v=aqbk5fm7qz0) by mircea ulinic\n\npodcasts\n--------\n\n* [napalm: integrating ansible with network devices on software gone wild](http://blog.ipspace.net/2015/06/napalm-integrating-ansible-with-network.html) with david barroso and elisa jasinska\n\nauthors\n=======\n * david barroso ([dbarrosop@dravetech.com](mailto:dbarrosop@dravetech.com))\n * mircea ulinic ([ping@mirceaulinic.net](mailto:ping@mirceaulinic.net))\n * kirk byers ([ktbyers@twb-tech.com](mailto:ktbyers@twb-tech.com))\n * elisa jasinska ([elisa@bigwaveit.org](mailto:elisa@bigwaveit.org))\n * many others, check the [contributors](https://github.com/napalm-automation/napalm/graphs/contributors) page for details.\n\n\nthanks\n======\n\nthis project is maintained by david barroso, mircea ulinic, and kirk byers and a set of other contributors.\n\noriginally it was hosted by the [spotify][spotify] organization but due to the many contributions received by third parties we agreed creating a dedicated organization for napalm and give a big thanks to [spotify][spotify] for the support.\n\n[spotify]: http://www.spotify.com\n[bigwave]: http://bigwaveit.org/\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2.0",
  "name": "napalm",
  "package_url": "https://pypi.org/project/napalm/",
  "project_url": "https://pypi.org/project/napalm/",
  "project_urls": {
    "Homepage": "https://github.com/napalm-automation/napalm"
  },
  "release_url": "https://pypi.org/project/napalm/4.1.0/",
  "requires_dist": [
    "setuptools (>=38.4.0)",
    "cffi (>=1.11.3)",
    "paramiko (>=2.6.0)",
    "requests (>=2.7.0)",
    "future",
    "textfsm",
    "jinja2",
    "netaddr",
    "pyYAML",
    "pyeapi (>=0.8.2)",
    "netmiko (>=4.1.0)",
    "junos-eznc (>=2.6.3)",
    "scp",
    "lxml (>=4.3.0)",
    "ncclient",
    "ttp",
    "ttp-templates",
    "netutils (>=1.0.0)",
    "typing-extensions (>=4.3.0)"
  ],
  "requires_python": "",
  "summary": "network automation and programmability abstraction layer with multivendor support",
  "version": "4.1.0",
  "releases": [],
  "developers": [
    "david_barroso",
    "dbarrosop@dravetech.com",
    "ktbyers@twb-tech.com",
    "ping@mirceaulinic.net"
  ],
  "kwds": "napalm yaml actions workflows badge",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_napalm",
  "homepage": "https://github.com/napalm-automation/napalm",
  "release_count": 41,
  "dependency_ids": [
    "pypi_cffi",
    "pypi_future",
    "pypi_jinja2",
    "pypi_junos_eznc",
    "pypi_lxml",
    "pypi_ncclient",
    "pypi_netaddr",
    "pypi_netmiko",
    "pypi_netutils",
    "pypi_paramiko",
    "pypi_pyeapi",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_scp",
    "pypi_setuptools",
    "pypi_textfsm",
    "pypi_ttp",
    "pypi_ttp_templates",
    "pypi_typing_extensions"
  ]
}
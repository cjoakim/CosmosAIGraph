{
  "classifiers": [
    "development status :: 2 - pre-alpha",
    "operating system :: os independent",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython"
  ],
  "description": "# simple-di\n\na simple, strictly typed dependency injection library.\n\n- [install](#install)\n- [usage](#usage)\n- [api](#api)\n\n[![mypy-strict](https://github.com/bentoml/simple_di/actions/workflows/mypy.yml/badge.svg)](https://github.com/bentoml/simple_di/actions/workflows/mypy.yml)\n\n[![python 3.6](https://github.com/bentoml/simple_di/workflows/python%203.6/badge.svg)](https://github.com/bentoml/simple_di/actions/workflows/py36.yml)\n[![python 3.7](https://github.com/bentoml/simple_di/workflows/python%203.7/badge.svg)](https://github.com/bentoml/simple_di/actions/workflows/py37.yml)\n[![python 3.8](https://github.com/bentoml/simple_di/workflows/python%203.8/badge.svg)](https://github.com/bentoml/simple_di/actions/workflows/py38.yml)\n[![python 3.9](https://github.com/bentoml/simple_di/workflows/python%203.9/badge.svg)](https://github.com/bentoml/simple_di/actions/workflows/py39.yml)\n\n## install\n\n``` bash\n    pip install simple_di\n```\n\n## usage\n\nexamples:\n\n```python\n    from simple_di import inject, provide, provider, container\n    from simple_di.providers import static, factory, configuration\n\n\n    @container\n    class optionsclass(container):\n        cpu: provider[int] = static(2)\n        worker: provider[int] = factory(lambda c: 2 * int(c) + 1, c=cpu)\n\n    options = optionsclass()\n\n    @inject\n    def func(worker: int = provide[options.worker]):\n        return worker\n\n    assert func() == 5\n    assert func(1) == 1\n\n    options.worker.set(2)\n    assert func() == 2\n\n    options.worker.reset()\n    assert func() == 5\n\n    options.cpu.set(1)\n    assert func() == 3\n```\n\n\n## api\n\n- [container](#container)\n- [sync_container](#sync_container)\n- [inject](#inject)\n- [provide](#provide)\n- [providers](#providers)\n  - [static](#static)\n  - [configuration](#configuration)\n  - [factory](#factory)\n  - [singletonfactory](#singletonfactory)\n\n## type annotation supported\n\n\n### inject\n\ninject values into providers in function/method arguments.\n\narguments:\n - squeeze_none: default false. treat none value passed in as not passed.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "simple-di",
  "package_url": "https://pypi.org/project/simple-di/",
  "project_url": "https://pypi.org/project/simple-di/",
  "project_urls": {
    "Homepage": "https://github.com/bentoml/simple_di"
  },
  "release_url": "https://pypi.org/project/simple-di/0.1.5/",
  "requires_dist": [
    "dataclasses ; python_version < \"3.7.0\"",
    "types-dataclasses ; python_version < \"3.7.0\"",
    "pytest ; extra == 'test'",
    "mypy ; extra == 'test'"
  ],
  "requires_python": ">=3.6.1",
  "summary": "simple dependency injection library",
  "version": "0.1.5",
  "releases": [],
  "developers": [
    "bojiang",
    "bojiang_@outlook.com"
  ],
  "kwds": "workflows python yml py36 pip",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_simple_di",
  "homepage": "https://github.com/bentoml/simple_di",
  "release_count": 12,
  "dependency_ids": [
    "pypi_dataclasses",
    "pypi_mypy",
    "pypi_pytest",
    "pypi_types_dataclasses"
  ]
}
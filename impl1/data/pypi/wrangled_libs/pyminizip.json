{
  "classifiers": [
    "development status :: 3 - alpha",
    "environment :: other environment",
    "intended audience :: developers",
    "license :: osi approved :: zlib/libpng license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: archiving :: compression"
  ],
  "description": "## pyminizip\n\nto create a password encrypted zip file in python.\nand the zip file is able to extract in windows.\n\nthis is a simple minizip wrapper of python.\n(http://www.winimage.com/zlibdll/minizip.html)\n\nthis software uses zlib.\nlicense: zlib/libpng license.\n\n## install\n```\n$ pip install pyminizip\n```\n\n## install zlib\n```\n# linux\n$ sudo apt-get install zlib\n# mac\n$ xcode-select --install\n$ brew install zlib\n```\n\n## how to use\n\nthis package just provides three functions.\n\n```\npyminizip.compress(\"/srcfile/path.txt\", \"file_path_prefix\", \"/distfile/path.zip\", \"password\", int(compress_level))\n```\n\n  args:\n  1. src file path (string)\n  2. src file prefix path (string) or none (path to prepend to file)\n  3. dst file path (string)\n  4. password (string) or none (to create no-password zip)\n  5. compress_level(int) between 1 to 9, 1 (more fast) <---> 9 (more compress) or 0 (default)\n\n  return value:\n  - always returns none\n\n```\npyminizip.compress_multiple([u'pyminizip.so', 'file2.txt'], [u'/path_for_file1', u'/path_for_file2'], \"file.zip\", \"1233\", 4, progress)\n```\n\n  args:\n  1. src file list path (list)\n  2. src file list prefix path (list) or []\n  3. dst file path (string)\n  4. password (string) or none (to create no-password zip)\n  5. compress_level(int) between 1 to 9, 1 (more fast)  <---> 9 (more compress)\n  6. optional function to be called during processing which takes one argument, the count of how many files have been compressed\n\n  return value:\n  - always returns none\n\n```\npyminizip.uncompress(\"/srcfile/path.zip\", \"password\", \"/dirtoextract\", int(withoutpath))\n```\n\n  args:\n  1. src file path (string)\n  2. password (string) or none (to unzip encrypted archives)\n  3. dir path to extract files or none (to extract in a specific dir or cwd)\n  4. withoutpath (exclude path of extracted)\n\n  return value:\n  - always returns none\n\n\n",
  "docs_url": null,
  "keywords": "zip,file,compress,password,encryption",
  "license": "",
  "name": "pyminizip",
  "package_url": "https://pypi.org/project/pyminizip/",
  "project_url": "https://pypi.org/project/pyminizip/",
  "project_urls": {
    "Homepage": "https://github.com/smihica/pyminizip"
  },
  "release_url": "https://pypi.org/project/pyminizip/0.2.6/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a minizip wrapper - to create a password encrypted zip file in python.",
  "version": "0.2.6",
  "releases": [],
  "developers": [
    "shin_aoyama",
    "smihica@gmail.com"
  ],
  "kwds": "pyminizip minizip unzip zip compress_multiple",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pyminizip",
  "homepage": "https://github.com/smihica/pyminizip",
  "release_count": 11,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "python interface to map grib files to the netcdf common data model following the cf convention using eccodes.\ncfgrib: a python interface to map grib files to the netcdf common data model following the cf convention using eccodes\n======================================================================================================================\n\n.. image:: https://img.shields.io/pypi/v/cfgrib.svg\n   :target: https://pypi.python.org/pypi/cfgrib/\n\npython interface to map grib files to the\n`unidata's common data model v4 <https://docs.unidata.ucar.edu/netcdf-java/current/userguide/common_data_model_overview.html>`_\nfollowing the `cf conventions <http://cfconventions.org/>`_.\nthe high level api is designed to support a grib engine for `xarray <http://xarray.pydata.org/>`_\nand it is inspired by `netcdf4-python <http://unidata.github.io/netcdf4-python/>`_\nand `h5netcdf <https://github.com/shoyer/h5netcdf>`_.\nlow level access and decoding is performed via the\n`ecmwf eccodes library <https://confluence.ecmwf.int/display/ecc/>`_ and\nthe `eccodes python package <https://pypi.org/project/eccodes>`_.\n\nfeatures with development status **beta**:\n\n- enables the ``engine='cfgrib'`` option to read grib files with *xarray*,\n- reads most grib 1 and 2 files including heterogeneous ones with ``cfgrib.open_datasets``,\n- supports all modern versions of python 3.9, 3.8, 3.7 and pypy3,\n- the 0.9.6.x series with support for python 2 will stay active and receive critical bugfixes,\n- works wherever *eccodes-python* does: *linux*, *macos* and *windows*\n- conda-forge package on all supported platforms,\n- reads the data lazily and efficiently in terms of both memory usage and disk access,\n- allows larger-than-memory and distributed processing via *xarray* and *dask*,\n- supports translating coordinates to different data models and naming conventions,\n- supports writing the index of a grib file to disk, to save a full-file scan on open,\n- accepts objects implementing a generic *fieldset* interface as described in `advanced_usage.rst`.\n\nwork in progress:\n\n- **beta** install a ``cfgrib`` utility that can convert a grib file ``to_netcdf``\n  with a optional conversion to a specific coordinates data model,\n  see `#40 <https://github.com/ecmwf/cfgrib/issues/40>`_.\n- **alpha/broken** support writing carefully-crafted ``xarray.dataset``'s to a grib1 or grib2 file,\n  see the *advanced write usage* section below, `#18 <https://github.com/ecmwf/cfgrib/issues/18>`_\n  and `#156 <https://github.com/ecmwf/cfgrib/issues/156>`_.\n\nlimitations:\n\n- relies on *eccodes* for the cf attributes of the data variables,\n- relies on *eccodes* for anything related to coordinate systems / ``gridtype``,\n  see `#28 <https://github.com/ecmwf/cfgrib/issues/28>`_.\n\n\ninstallation\n============\n\nthe easiest way to install *cfgrib* and all its binary dependencies is via `conda <https://conda.io/>`_::\n\n    $ conda install -c conda-forge cfgrib\n\nalternatively, if you install the binary dependencies yourself, you can install the\npython package from *pypi* with::\n\n    $ pip install cfgrib\n\n\nbinary dependencies\n-------------------\n\n*cfgrib* depends on the `eccodes python package <https://pypi.org/project/eccodes>`_\nto access the ecmwf *eccodes* binary library,\nwhen not using *conda* please follow the *system dependencies* section there.\n\nyou may run a simple selfcheck command to ensure that your system is set up correctly::\n\n    $ python -m cfgrib selfcheck\n    found: eccodes v2.20.0.\n    your system is ready.\n\n\nusage\n=====\n\nfirst, you need a well-formed grib file, if you don't have one at hand you can download our\n`era5 on pressure levels sample <http://download.ecmwf.int/test-data/cfgrib/era5-levels-members.grib>`_::\n\n    $ wget http://download.ecmwf.int/test-data/cfgrib/era5-levels-members.grib\n\n\nread-only *xarray* grib engine\n------------------------------\n\nmost of *cfgrib* users want to open a grib file as a ``xarray.dataset`` and\nneed to have *xarray* installed::\n\n    $ pip install xarray\n\nin a python interpreter try:\n\n.. code-block: python\n\n>>> import xarray as xr\n>>> ds = xr.open_dataset('era5-levels-members.grib', engine='cfgrib')\n>>> ds\n<xarray.dataset>\ndimensions:        (number: 10, time: 4, isobaricinhpa: 2, latitude: 61, longitude: 120)\ncoordinates:\n  * number         (number) int64 0 1 2 3 4 5 6 7 8 9\n  * time           (time) datetime64[ns] 2017-01-01 ... 2017-01-02t12:00:00\n    step           timedelta64[ns] ...\n  * isobaricinhpa  (isobaricinhpa) float64 850.0 500.0\n  * latitude       (latitude) float64 90.0 87.0 84.0 81.0 ... -84.0 -87.0 -90.0\n  * longitude      (longitude) float64 0.0 3.0 6.0 9.0 ... 351.0 354.0 357.0\n    valid_time     (time) datetime64[ns] ...\ndata variables:\n    z              (number, time, isobaricinhpa, latitude, longitude) float32 ...\n    t              (number, time, isobaricinhpa, latitude, longitude) float32 ...\nattributes:\n    grib_edition:            1\n    grib_centre:             ecmf\n    grib_centredescription:  european centre for medium-range weather forecasts\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             european centre for medium-range weather forecasts\n    history:                 ...\n\nthe *cfgrib* ``engine`` supports all read-only features of *xarray* like:\n\n* merge the content of several grib files into a single dataset using ``xarray.open_mfdataset``,\n* work with larger-than-memory datasets with `dask <https://dask.org/>`_,\n* allow distributed processing with `dask.distributed <http://distributed.dask.org>`_.\n\n\nread arbitrary grib keys\n------------------------\n\nby default *cfgrib* reads a limited set of eccodes recognised *keys* from the grib files\nand exposes them as ``dataset`` or ``dataarray`` attributes with the ``grib_`` prefix.\nit is possible to have *cfgrib* read additional keys to the attributes by adding the\n``read_keys`` dictionary key to the ``backend_kwargs`` with values the list of desired grib keys:\n\n.. code-block: python\n\n>>> ds = xr.open_dataset('era5-levels-members.grib', engine='cfgrib',\n...                      backend_kwargs={'read_keys': ['experimentversionnumber']})\n>>> ds.t.attrs['grib_experimentversionnumber']\n'0001'\n\n\ntranslate to a custom data model\n--------------------------------\n\ncontrary to netcdf the grib data format is not self-describing and several details of the mapping\nto the *unidata common data model* are arbitrarily set by the software components decoding the format.\ndetails like names and units of the coordinates are particularly important because\n*xarray* broadcast and selection rules depend on them.\n``cf2cfm`` is a small coordinate translation module distributed with *cfgrib* that make it easy to\ntranslate cf compliant coordinates, like the one provided by *cfgrib*, to a user-defined\ncustom data model with set ``out_name``, ``units`` and ``stored_direction``.\n\nfor example to translate a *cfgrib* styled ``xr.dataset`` to the classic *ecmwf* coordinate\nnaming conventions you can:\n\n.. code-block: python\n\n>>> import cf2cdm\n>>> ds = xr.open_dataset('era5-levels-members.grib', engine='cfgrib')\n>>> cf2cdm.translate_coords(ds, cf2cdm.ecmwf)\n<xarray.dataset>\ndimensions:     (number: 10, time: 4, level: 2, latitude: 61, longitude: 120)\ncoordinates:\n  * number      (number) int64 0 1 2 3 4 5 6 7 8 9\n  * time        (time) datetime64[ns] 2017-01-01 ... 2017-01-02t12:00:00\n    step        timedelta64[ns] ...\n  * level       (level) float64 850.0 500.0\n  * latitude    (latitude) float64 90.0 87.0 84.0 81.0 ... -84.0 -87.0 -90.0\n  * longitude   (longitude) float64 0.0 3.0 6.0 9.0 ... 348.0 351.0 354.0 357.0\n    valid_time  (time) datetime64[ns] ...\ndata variables:\n    z           (number, time, level, latitude, longitude) float32 ...\n    t           (number, time, level, latitude, longitude) float32 ...\nattributes:\n    grib_edition:            1\n    grib_centre:             ecmf\n    grib_centredescription:  european centre for medium-range weather forecasts\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             european centre for medium-range weather forecasts\n    history:                 ...\n\nto translate to the common data model of the climate data store use:\n\n.. code-block: python\n\n>>> import cf2cdm\n>>> cf2cdm.translate_coords(ds, cf2cdm.cds)\n<xarray.dataset>\ndimensions:                  (realization: 10, forecast_reference_time: 4, plev: 2, lat: 61, lon: 120)\ncoordinates:\n  * realization              (realization) int64 0 1 2 3 4 5 6 7 8 9\n  * forecast_reference_time  (forecast_reference_time) datetime64[ns] 2017-01...\n    leadtime                 timedelta64[ns] ...\n  * plev                     (plev) float64 8.5e+04 5e+04\n  * lat                      (lat) float64 -90.0 -87.0 -84.0 ... 84.0 87.0 90.0\n  * lon                      (lon) float64 0.0 3.0 6.0 9.0 ... 351.0 354.0 357.0\n    time                     (forecast_reference_time) datetime64[ns] ...\ndata variables:\n    z                        (realization, forecast_reference_time, plev, lat, lon) float32 ...\n    t                        (realization, forecast_reference_time, plev, lat, lon) float32 ...\nattributes:\n    grib_edition:            1\n    grib_centre:             ecmf\n    grib_centredescription:  european centre for medium-range weather forecasts\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             european centre for medium-range weather forecasts\n    history:                 ...\n\n\nfilter heterogeneous grib files\n-------------------------------\n\n``xr.open_dataset`` can open a grib file only if all the messages\nwith the same ``shortname`` can be represented as a single hypercube.\nfor example, a variable ``t`` cannot have both ``isobaricinhpa`` and ``hybrid`` ``typeoflevel``'s,\nas this would result in multiple hypercubes for the same variable.\nopening a non-conformant grib file will fail with a ``valueerror: multiple values for unique key...``\nerror message, see `#2 <https://github.com/ecmwf/cfgrib/issues/2>`_.\n\nfurthermore if different variables depend on the same coordinate, for example ``step``,\nthe values of the coordinate must match exactly.\nfor example, if variables ``t`` and ``z`` share the same ``step`` coordinate,\nthey must both have exactly the same set of steps.\nopening a non-conformant grib file will fail with a ``valueerror: key present and new value is different...``\nerror message, see `#13 <https://github.com/ecmwf/cfgrib/issues/13>`_.\n\nin most cases you can handle complex grib files containing heterogeneous messages by passing\nthe ``filter_by_keys`` key in ``backend_kwargs`` to select which grib messages belong to a\nwell formed set of hypercubes.\n\nfor example to open\n`us national weather service complex grib2 files <http://ftpprd.ncep.noaa.gov/data/nccf/com/nam/prod/>`_\nyou can use:\n\n.. code-block: python\n\n>>> xr.open_dataset('nam.t00z.awp21100.tm00.grib2', engine='cfgrib',\n...     backend_kwargs={'filter_by_keys': {'typeoflevel': 'surface'}})\n<xarray.dataset>\ndimensions:     (y: 65, x: 93)\ncoordinates:\n    time        datetime64[ns] ...\n    step        timedelta64[ns] ...\n    surface     float64 ...\n    latitude    (y, x) float64 ...\n    longitude   (y, x) float64 ...\n    valid_time  datetime64[ns] ...\ndimensions without coordinates: y, x\ndata variables:\n    gust        (y, x) float32 ...\n    sp          (y, x) float32 ...\n    orog        (y, x) float32 ...\n    tp          (y, x) float32 ...\n    acpcp       (y, x) float32 ...\n    csnow       (y, x) float32 ...\n    cicep       (y, x) float32 ...\n    cfrzr       (y, x) float32 ...\n    crain       (y, x) float32 ...\n    cape        (y, x) float32 ...\n    cin         (y, x) float32 ...\n    hpbl        (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep...\n    history:                 ...\n>>> xr.open_dataset('nam.t00z.awp21100.tm00.grib2', engine='cfgrib',\n...     backend_kwargs={'filter_by_keys': {'typeoflevel': 'heightaboveground', 'level': 2}})\n<xarray.dataset>\ndimensions:            (y: 65, x: 93)\ncoordinates:\n    time               datetime64[ns] ...\n    step               timedelta64[ns] ...\n    heightaboveground  float64 ...\n    latitude           (y, x) float64 ...\n    longitude          (y, x) float64 ...\n    valid_time         datetime64[ns] ...\ndimensions without coordinates: y, x\ndata variables:\n    t2m                (y, x) float32 ...\n    r2                 (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep...\n    history:                 ...\n\n\nautomatic filtering\n-------------------\n\n*cfgrib* also provides a function that automates the selection of appropriate ``filter_by_keys``\nand returns a list of all valid ``xarray.dataset``'s in the grib file.\n\n.. code-block: python\n\n>>> import cfgrib\n>>> cfgrib.open_datasets('nam.t00z.awp21100.tm00.grib2')\n[<xarray.dataset>\ndimensions:                (y: 65, x: 93)\ncoordinates:\n    time                   datetime64[ns] 2018-09-17\n    step                   timedelta64[ns] 00:00:00\n    atmospheresinglelayer  float64 0.0\n    latitude               (y, x) float64 ...\n    longitude              (y, x) float64 ...\n    valid_time             datetime64[ns] ...\ndimensions without coordinates: y, x\ndata variables:\n    pwat                   (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:     (y: 65, x: 93)\ncoordinates:\n    time        datetime64[ns] 2018-09-17\n    step        timedelta64[ns] 00:00:00\n    cloudbase   float64 0.0\n    latitude    (y, x) float64 12.19 12.39 12.58 12.77 ... 57.68 57.49 57.29\n    longitude   (y, x) float64 226.5 227.2 227.9 228.7 ... 308.5 309.6 310.6\n    valid_time  datetime64[ns] 2018-09-17\ndimensions without coordinates: y, x\ndata variables:\n    pres        (y, x) float32 ...\n    gh          (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:     (y: 65, x: 93)\ncoordinates:\n    time        datetime64[ns] 2018-09-17\n    step        timedelta64[ns] 00:00:00\n    cloudtop    float64 0.0\n    latitude    (y, x) float64 12.19 12.39 12.58 12.77 ... 57.68 57.49 57.29\n    longitude   (y, x) float64 226.5 227.2 227.9 228.7 ... 308.5 309.6 310.6\n    valid_time  datetime64[ns] 2018-09-17\ndimensions without coordinates: y, x\ndata variables:\n    pres        (y, x) float32 ...\n    t           (y, x) float32 ...\n    gh          (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:            (y: 65, x: 93)\ncoordinates:\n    time               datetime64[ns] 2018-09-17\n    step               timedelta64[ns] 00:00:00\n    heightaboveground  float64 10.0\n    latitude           (y, x) float64 ...\n    longitude          (y, x) float64 ...\n    valid_time         datetime64[ns] ...\ndimensions without coordinates: y, x\ndata variables:\n    u10                (y, x) float32 ...\n    v10                (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:            (y: 65, x: 93)\ncoordinates:\n    time               datetime64[ns] 2018-09-17\n    step               timedelta64[ns] 00:00:00\n    heightaboveground  float64 2.0\n    latitude           (y, x) float64 12.19 12.39 12.58 ... 57.68 57.49 57.29\n    longitude          (y, x) float64 226.5 227.2 227.9 ... 308.5 309.6 310.6\n    valid_time         datetime64[ns] 2018-09-17\ndimensions without coordinates: y, x\ndata variables:\n    t2m                (y, x) float32 ...\n    r2                 (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:                 (heightabovegroundlayer: 2, y: 65, x: 93)\ncoordinates:\n    time                    datetime64[ns] 2018-09-17\n    step                    timedelta64[ns] 00:00:00\n  * heightabovegroundlayer  (heightabovegroundlayer) float64 1e+03 3e+03\n    latitude                (y, x) float64 ...\n    longitude               (y, x) float64 ...\n    valid_time              datetime64[ns] ...\ndimensions without coordinates: y, x\ndata variables:\n    hlcy                    (heightabovegroundlayer, y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:        (isobaricinhpa: 19, y: 65, x: 93)\ncoordinates:\n    time           datetime64[ns] 2018-09-17\n    step           timedelta64[ns] 00:00:00\n  * isobaricinhpa  (isobaricinhpa) float64 1e+03 950.0 900.0 ... 150.0 100.0\n    latitude       (y, x) float64 12.19 12.39 12.58 12.77 ... 57.68 57.49 57.29\n    longitude      (y, x) float64 226.5 227.2 227.9 228.7 ... 308.5 309.6 310.6\n    valid_time     datetime64[ns] 2018-09-17\ndimensions without coordinates: y, x\ndata variables:\n    t              (isobaricinhpa, y, x) float32 ...\n    u              (isobaricinhpa, y, x) float32 ...\n    v              (isobaricinhpa, y, x) float32 ...\n    w              (isobaricinhpa, y, x) float32 ...\n    gh             (isobaricinhpa, y, x) float32 ...\n    r              (isobaricinhpa, y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:        (isobaricinhpa: 5, y: 65, x: 93)\ncoordinates:\n    time           datetime64[ns] 2018-09-17\n    step           timedelta64[ns] 00:00:00\n  * isobaricinhpa  (isobaricinhpa) float64 1e+03 850.0 700.0 500.0 250.0\n    latitude       (y, x) float64 ...\n    longitude      (y, x) float64 ...\n    valid_time     datetime64[ns] ...\ndimensions without coordinates: y, x\ndata variables:\n    absv           (isobaricinhpa, y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:       (y: 65, x: 93)\ncoordinates:\n    time          datetime64[ns] 2018-09-17\n    step          timedelta64[ns] 00:00:00\n    isothermzero  float64 0.0\n    latitude      (y, x) float64 12.19 12.39 12.58 12.77 ... 57.68 57.49 57.29\n    longitude     (y, x) float64 226.5 227.2 227.9 228.7 ... 308.5 309.6 310.6\n    valid_time    datetime64[ns] 2018-09-17\ndimensions without coordinates: y, x\ndata variables:\n    gh            (y, x) float32 ...\n    r             (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:     (y: 65, x: 93)\ncoordinates:\n    time        datetime64[ns] 2018-09-17\n    step        timedelta64[ns] 00:00:00\n    maxwind     float64 0.0\n    latitude    (y, x) float64 12.19 12.39 12.58 12.77 ... 57.68 57.49 57.29\n    longitude   (y, x) float64 226.5 227.2 227.9 228.7 ... 308.5 309.6 310.6\n    valid_time  datetime64[ns] 2018-09-17\ndimensions without coordinates: y, x\ndata variables:\n    pres        (y, x) float32 ...\n    u           (y, x) float32 ...\n    v           (y, x) float32 ...\n    gh          (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:     (y: 65, x: 93)\ncoordinates:\n    time        datetime64[ns] 2018-09-17\n    step        timedelta64[ns] 00:00:00\n    meansea     float64 0.0\n    latitude    (y, x) float64 12.19 12.39 12.58 12.77 ... 57.68 57.49 57.29\n    longitude   (y, x) float64 226.5 227.2 227.9 228.7 ... 308.5 309.6 310.6\n    valid_time  datetime64[ns] 2018-09-17\ndimensions without coordinates: y, x\ndata variables:\n    prmsl       (y, x) float32 ...\n    mslet       (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:                  (pressurefromgroundlayer: 2, y: 65, x: 93)\ncoordinates:\n    time                     datetime64[ns] 2018-09-17\n    step                     timedelta64[ns] 00:00:00\n  * pressurefromgroundlayer  (pressurefromgroundlayer) float64 9e+03 1.8e+04\n    latitude                 (y, x) float64 12.19 12.39 12.58 ... 57.49 57.29\n    longitude                (y, x) float64 226.5 227.2 227.9 ... 309.6 310.6\n    valid_time               datetime64[ns] 2018-09-17\ndimensions without coordinates: y, x\ndata variables:\n    cape                     (pressurefromgroundlayer, y, x) float32 ...\n    cin                      (pressurefromgroundlayer, y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:                  (pressurefromgroundlayer: 5, y: 65, x: 93)\ncoordinates:\n    time                     datetime64[ns] 2018-09-17\n    step                     timedelta64[ns] 00:00:00\n  * pressurefromgroundlayer  (pressurefromgroundlayer) float64 3e+03 ... 1.5e+04\n    latitude                 (y, x) float64 12.19 12.39 12.58 ... 57.49 57.29\n    longitude                (y, x) float64 226.5 227.2 227.9 ... 309.6 310.6\n    valid_time               datetime64[ns] 2018-09-17\ndimensions without coordinates: y, x\ndata variables:\n    t                        (pressurefromgroundlayer, y, x) float32 ...\n    u                        (pressurefromgroundlayer, y, x) float32 ...\n    v                        (pressurefromgroundlayer, y, x) float32 ...\n    r                        (pressurefromgroundlayer, y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:                  (y: 65, x: 93)\ncoordinates:\n    time                     datetime64[ns] 2018-09-17\n    step                     timedelta64[ns] 00:00:00\n    pressurefromgroundlayer  float64 3e+03\n    latitude                 (y, x) float64 ...\n    longitude                (y, x) float64 ...\n    valid_time               datetime64[ns] ...\ndimensions without coordinates: y, x\ndata variables:\n    pli                      (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:                  (y: 65, x: 93)\ncoordinates:\n    time                     datetime64[ns] 2018-09-17\n    step                     timedelta64[ns] 00:00:00\n    pressurefromgroundlayer  float64 1.8e+04\n    latitude                 (y, x) float64 ...\n    longitude                (y, x) float64 ...\n    valid_time               datetime64[ns] ...\ndimensions without coordinates: y, x\ndata variables:\n    4lftx                    (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:     (y: 65, x: 93)\ncoordinates:\n    time        datetime64[ns] 2018-09-17\n    step        timedelta64[ns] 00:00:00\n    surface     float64 0.0\n    latitude    (y, x) float64 12.19 12.39 12.58 12.77 ... 57.68 57.49 57.29\n    longitude   (y, x) float64 226.5 227.2 227.9 228.7 ... 308.5 309.6 310.6\n    valid_time  datetime64[ns] 2018-09-17\ndimensions without coordinates: y, x\ndata variables:\n    cape        (y, x) float32 ...\n    sp          (y, x) float32 ...\n    acpcp       (y, x) float32 ...\n    cin         (y, x) float32 ...\n    orog        (y, x) float32 ...\n    tp          (y, x) float32 ...\n    crain       (y, x) float32 ...\n    cfrzr       (y, x) float32 ...\n    cicep       (y, x) float32 ...\n    csnow       (y, x) float32 ...\n    gust        (y, x) float32 ...\n    hpbl        (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep , <xarray.dataset>\ndimensions:     (y: 65, x: 93)\ncoordinates:\n    time        datetime64[ns] 2018-09-17\n    step        timedelta64[ns] 00:00:00\n    tropopause  float64 0.0\n    latitude    (y, x) float64 12.19 12.39 12.58 12.77 ... 57.68 57.49 57.29\n    longitude   (y, x) float64 226.5 227.2 227.9 228.7 ... 308.5 309.6 310.6\n    valid_time  datetime64[ns] 2018-09-17\ndimensions without coordinates: y, x\ndata variables:\n    t           (y, x) float32 ...\n    u           (y, x) float32 ...\n    v           (y, x) float32 ...\n    trpp        (y, x) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             kwbc\n    grib_centredescription:  us national weather service - ncep...\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             us national weather service - ncep ]\n\n\nadvanced usage\n==============\n\nwrite support\n=============\n\n**please note that write support is alpha.**\nonly ``xarray.dataset``'s in *canonical* form,\nthat is, with the coordinates names matching exactly the *cfgrib* coordinates,\ncan be saved at the moment:\n\n.. code-block: python\n\n>>> from cfgrib.xarray_to_grib import to_grib\n>>> ds = xr.open_dataset('era5-levels-members.grib', engine='cfgrib').sel(number=0)\n>>> ds\n<xarray.dataset>\ndimensions:        (time: 4, isobaricinhpa: 2, latitude: 61, longitude: 120)\ncoordinates:\n    number         int64 0\n  * time           (time) datetime64[ns] 2017-01-01 ... 2017-01-02t12:00:00\n    step           timedelta64[ns] ...\n  * isobaricinhpa  (isobaricinhpa) float64 850.0 500.0\n  * latitude       (latitude) float64 90.0 87.0 84.0 81.0 ... -84.0 -87.0 -90.0\n  * longitude      (longitude) float64 0.0 3.0 6.0 9.0 ... 351.0 354.0 357.0\n    valid_time     (time) datetime64[ns] ...\ndata variables:\n    z              (time, isobaricinhpa, latitude, longitude) float32 ...\n    t              (time, isobaricinhpa, latitude, longitude) float32 ...\nattributes:\n    grib_edition:            1\n    grib_centre:             ecmf\n    grib_centredescription:  european centre for medium-range weather forecasts\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             european centre for medium-range weather forecasts\n    history:                 ...\n>>> to_grib(ds, 'out1.grib', grib_keys={'edition': 2})\n>>> xr.open_dataset('out1.grib', engine='cfgrib')\n<xarray.dataset>\ndimensions:        (time: 4, isobaricinhpa: 2, latitude: 61, longitude: 120)\ncoordinates:\n    number         ...\n  * time           (time) datetime64[ns] 2017-01-01 ... 2017-01-02t12:00:00\n    step           timedelta64[ns] ...\n  * isobaricinhpa  (isobaricinhpa) float64 850.0 500.0\n  * latitude       (latitude) float64 90.0 87.0 84.0 81.0 ... -84.0 -87.0 -90.0\n  * longitude      (longitude) float64 0.0 3.0 6.0 9.0 ... 351.0 354.0 357.0\n    valid_time     (time) datetime64[ns] ...\ndata variables:\n    z              (time, isobaricinhpa, latitude, longitude) float32 ...\n    t              (time, isobaricinhpa, latitude, longitude) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             ecmf\n    grib_centredescription:  european centre for medium-range weather forecasts\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             european centre for medium-range weather forecasts\n    history:                 ...\n\nper-variable grib keys can be set by setting the ``attrs`` variable with key prefixed by ``grib_``,\nfor example:\n\n.. code-block: python\n\n>>> import numpy as np\n>>> import xarray as xr\n>>> ds2 = xr.dataarray(\n...     np.zeros((5, 6)) + 300.,\n...     coords=[\n...         np.linspace(90., -90., 5),\n...         np.linspace(0., 360., 6, endpoint=false),\n...     ],\n...     dims=['latitude', 'longitude'],\n... ).to_dataset(name='skin_temperature')\n>>> ds2.skin_temperature.attrs['grib_shortname'] = 'skt'\n>>> to_grib(ds2, 'out2.grib')\n>>> xr.open_dataset('out2.grib', engine='cfgrib')\n<xarray.dataset>\ndimensions:     (latitude: 5, longitude: 6)\ncoordinates:\n    time        datetime64[ns] ...\n    step        timedelta64[ns] ...\n    surface     float64 ...\n  * latitude    (latitude) float64 90.0 45.0 0.0 -45.0 -90.0\n  * longitude   (longitude) float64 0.0 60.0 120.0 180.0 240.0 300.0\n    valid_time  datetime64[ns] ...\ndata variables:\n    skt         (latitude, longitude) float32 ...\nattributes:\n    grib_edition:            2\n    grib_centre:             consensus\n    grib_centredescription:  consensus\n    grib_subcentre:          0\n    conventions:             cf-1.7\n    institution:             consensus\n    history:                 ...\n\ndataset / variable api\n----------------------\n\nthe use of *xarray* is not mandatory and you can access the content of a grib file as\nan hypercube with the high level api in a python interpreter:\n\n.. code-block: python\n\n>>> ds = cfgrib.open_file('era5-levels-members.grib')\n>>> ds.attributes['grib_edition']\n1\n>>> sorted(ds.dimensions.items())\n[('isobaricinhpa', 2), ('latitude', 61), ('longitude', 120), ('number', 10), ('time', 4)]\n>>> sorted(ds.variables)\n['isobaricinhpa', 'latitude', 'longitude', 'number', 'step', 't', 'time', 'valid_time', 'z']\n>>> var = ds.variables['t']\n>>> var.dimensions\n('number', 'time', 'isobaricinhpa', 'latitude', 'longitude')\n>>> var.data[:, :, :, :, :].mean()\n262.92133\n>>> ds = cfgrib.open_file('era5-levels-members.grib')\n>>> ds.attributes['grib_edition']\n1\n>>> sorted(ds.dimensions.items())\n[('isobaricinhpa', 2), ('latitude', 61), ('longitude', 120), ('number', 10), ('time', 4)]\n>>> sorted(ds.variables)\n['isobaricinhpa', 'latitude', 'longitude', 'number', 'step', 't', 'time', 'valid_time', 'z']\n>>> var = ds.variables['t']\n>>> var.dimensions\n('number', 'time', 'isobaricinhpa', 'latitude', 'longitude')\n>>> var.data[:, :, :, :, :].mean()\n262.92133\n\n\ngrib index file\n---------------\n\nby default *cfgrib* saves the index of the grib file to disk appending ``.idx``\nto the grib file name.\nindex files are an **experimental** and completely optional feature, feel free to\nremove them and try again in case of problems. index files saving can be disable passing\nadding ``indexpath=''`` to the ``backend_kwargs`` keyword argument.\n\n\nproject resources\n=================\n\n============= =========================================================\ndevelopment   https://github.com/ecmwf/cfgrib\ndownload      https://pypi.org/project/cfgrib\nuser support  https://stackoverflow.com/search?q=cfgrib\ncode quality  .. image:: https://codecov.io/gh/ecmwf/cfgrib/branch/master/graph/badge.svg\n                :target: https://codecov.io/gh/ecmwf/cfgrib\n                :alt: coverage status on codecov\n============= =========================================================\n\n\ncontributing\n============\n\nthe main repository is hosted on github,\ntesting, bug reports and contributions are highly welcomed and appreciated:\n\nhttps://github.com/ecmwf/cfgrib\n\nplease see the contributing.rst document for the best way to help.\n\nlead developers:\n\n- `iain russell <https://github.com/iainrussell>`_ - `ecmwf <https://ecmwf.int>`_\n- `baudouin raoult <https://github.com/b8raoult>`_ - ecmwf\n\nmain contributors:\n\n- `alessandro amici <https://github.com/alexamici>`_ - `b-open <https://bopen.eu>`_\n- `aureliana barghini <https://github.com/aurghs>`_ - b-open\n- `leonardo barcaroli <https://github.com/leophys>`_ - b-open\n\nsee also the list of `contributors <https://github.com/ecmwf/cfgrib/contributors>`_ who participated in this project.\n\n\nlicense\n=======\n\ncopyright 2017-2021 european centre for medium-range weather forecasts (ecmwf).\n\nlicensed under the apache license, version 2.0 (the \"license\");\nyou may not use this file except in compliance with the license.\nyou may obtain a copy of the license at: http://www.apache.org/licenses/license-2.0.\nunless required by applicable law or agreed to in writing, software\ndistributed under the license is distributed on an \"as is\" basis,\nwithout warranties or conditions of any kind, either express or implied.\nsee the license for the specific language governing permissions and\nlimitations under the license.\n\nchangelog for cfgrib\n====================\n\n0.9.10.4 (2023-05-19)\n---------------------\n\n- added --var-encoding-json (or -v) option to the to_netcdf tool, e.g.\n  ``cfgrib to_netcdf -v '{\"dtype\": \"float\", \"scale_factor\": 0.1}' -o $outfile $infile``\n  see `#334 <https://github.com/ecmwf/cfgrib/pull/334>`_.\n- fix issue where xarrays derived from gaussian grids did not have the correct\n  geometry when written back out as grib\n  see `#330 <https://github.com/ecmwf/cfgrib/issues/330>`_.\n- fix issue where open_datasets() could merge different grib fields\n  that have the same data values\n  see `#336 <https://github.com/ecmwf/cfgrib/issues/336>`_.\n\n0.9.10.3 (2022-11-24)\n---------------------\n\n- large reduction in memory leak\n  see `#320 <https://github.com/ecmwf/cfgrib/pull/320/>`_.\n\n- replaced ``distutils.version`` by ``packaging.version`` and\n  added description and url to the xarray plugin.\n  see `#318 <https://github.com/ecmwf/cfgrib/pull/318/>`_.\n\n\n0.9.10.2 (2022-10-04)\n---------------------\n\n- added --netcdf_kwargs_json option to 'cfgrib to_netcdf'\n  see `#294 <https://github.com/ecmwf/cfgrib/pull/294/>`_.\n- fixed support for grib files with alternativerowscanning=1\n  see  `#296 <https://github.com/ecmwf/cfgrib/pull/296/>`_.\n- fixed support for missing values\n  see `#313 <https://github.com/ecmwf/cfgrib/issues/313>`_.\n\n\n0.9.10.1 (2022-03-16)\n---------------------\n\n- fix failure to read index files.\n  see `#292 <https://github.com/ecmwf/cfgrib/issues/292>`_.\n- allow backend kwargs to be provided in the to_netcdf executable,\n  either via a json format string, or a path to a json file via -b.\n  see `#288 <https://github.com/ecmwf/cfgrib/pull/288/>`_.\n- fixed issue where the use of relpath() could cause a problem on windows.\n  see `#284 <https://github.com/ecmwf/cfgrib/issues/284>`_.\n- fix passing of pathlib.path.\n  see `#282 <https://github.com/ecmwf/cfgrib/issues/282>`_.\n- fixed issue where writing an ensemble number into a grib file caused an error.\n  see `#278 <https://github.com/ecmwf/cfgrib/issues/278>`_.\n\n\n0.9.10.0 (2022-01-31)\n---------------------\n\n- big internal refactor to add support for a generic ``fieldset`` similar to metview.\n  see `#243 <https://github.com/ecmwf/cfgrib/issues/243>`_.\n\n\n0.9.9.1 (2021-09-29)\n--------------------\n\n- fix the plugin interface that was missing ``extra_coords``.\n  see `#231 <https://github.com/ecmwf/cfgrib/issues/231>`_.\n- fix the crash when ``extra_coords`` return a scalar.\n  see `#238 <https://github.com/ecmwf/cfgrib/issues/238>`_.\n- improve type-hints.\n  needed by `#243 <https://github.com/ecmwf/cfgrib/issues/243>`_.\n\n\n0.9.9.0 (2021-04-09)\n--------------------\n\n- depend on the ecmwf `eccodes python package <https://pypi.org/project/eccodes>`_ to access\n  the low level eccodes c-library, dropping all other grib decoding options.\n  see: `#95 <https://github.com/ecmwf/cfgrib/issues/95>`_,\n  `#14 <https://github.com/ecmwf/cfgrib/issues/14>`_.\n  `#204 <https://github.com/ecmwf/cfgrib/issues/204>`_,\n  `#147 <https://github.com/ecmwf/cfgrib/issues/147>`_ and\n  `#141 <https://github.com/ecmwf/cfgrib/issues/141>`_.\n- many performance improvements during the generation of the index and during data access.\n  see: `#142 <https://github.com/ecmwf/cfgrib/issues/142>`_ and\n  `#197 <https://github.com/ecmwf/cfgrib/issues/197>`_.\n- ``filter_by_keys`` now can select on all keys known to *eccodes* without the need to\n  add non default ones to ``read_keys`` explicitly.\n  see: `#187 <https://github.com/ecmwf/cfgrib/issues/187>`_.\n- include support for `engine=\"cfgrib\"` using *xarray* 0.18+ new backend api.\n  see: `#216 <https://github.com/ecmwf/cfgrib/pull/216>`_.\n- fixed issue where could not load a grib message that has only one grid point.\n  see: `#199 <https://github.com/ecmwf/cfgrib/issues/199>`_.\n- decode ``level`` coordinates as float in all cases, fixed issue with non-int levels.\n  see: `#195 <https://github.com/ecmwf/cfgrib/issues/195>`_.\n\n\n0.9.8.5 (2020-11-11)\n--------------------\n\n- simpler and clearer messages in the event of errors.\n- use `eccodes_dir` environment variable if present. ported from *eccodes-python*\n  by xavierabellan. see: `#162 <https://github.com/ecmwf/cfgrib/issues/162>`_.\n- fix using current eccodes bindings when setting `cfgrib_use_external_eccodes_bindings=1`.\n\n\n0.9.8.4 (2020-08-03)\n--------------------\n\n- use `ecmwflibs` if present to find the *eccodes* installation.\n\n\n0.9.8.3 (2020-06-25)\n--------------------\n\n- added support for ``indexingdate``, ``indexingtime`` time coordinates.\n- ``lambert_azimuthal_equal_area`` grids are now returned as 2d arrays.\n  see: `#119 <https://github.com/ecmwf/cfgrib/issues/119>`_.\n\n\n0.9.8.2 (2020-05-22)\n--------------------\n\n- add support for multi-field messages used in some grib products to store\n  ``u`` and ``v`` components of wind (e.g. gfs, nam, etc). this has been the single\n  most reported bug in *cfgrib* with two failed attempts at fixing it already.\n  let's see if the third time's a charm. please test!\n  see: `#45 <https://github.com/ecmwf/cfgrib/issues/45>`_,\n  `#76 <https://github.com/ecmwf/cfgrib/issues/76>`_ and\n  `#111 <https://github.com/ecmwf/cfgrib/issues/111>`_.\n\n\n0.9.8.1 (2020-03-13)\n--------------------\n\n- always open grib files in binary mode, by @b8raoult\n\n\n0.9.8.0 (2020-03-12)\n--------------------\n\n- add support of experimental pyeccodes low-level driver by @b8raoult\n\n\n0.9.7.7 (2020-01-24)\n--------------------\n\n- add support for `forecastmonth` in `cf2cdm.translate_coords`.\n\n\n0.9.7.6 (2019-12-05)\n--------------------\n\n- fix the readme.\n\n\n0.9.7.5 (2019-12-05)\n--------------------\n\n- deprecate ``ensure_valid_time`` and the config option ``preferred_time_dimension`` that\n  are now better handled via ``time_dims``.\n\n\n0.9.7.4 (2019-11-22)\n--------------------\n\n- add more options to ``time_dims`` forecasts products may be represented as\n  ``('time', 'verifying_time')`` or ``('time', 'forecastmonth')``.\n  see: `#97 <https://github.com/ecmwf/cfgrib/issues/97>`_.\n\n\n0.9.7.3 (2019-11-04)\n--------------------\n\n- add support for selecting the time coordinates to use as dimensions via ``time_dims``.\n  forecasts products may be represented as ``('time', 'step')`` (the default),\n  ``('time', 'valid_time')`` or ``('valid_time', 'step')``.\n  see: `#97 <https://github.com/ecmwf/cfgrib/issues/97>`_.\n- reduce the in-memory footprint of the ``fieldindex`` and the size of ``.idx`` files.\n\n\n0.9.7.2 (2019-09-24)\n--------------------\n\n- add support to read additional keys from the grib files via ``read_keys``, they\n  appear in the variable ``attrs`` and you can ``filter_by_keys`` on them.\n  this is a general solution for all issues where users know the name of the additional keys\n  they are interested in.\n  see: `#89 <https://github.com/ecmwf/cfgrib/issues/89>`_ and\n  `#101 <https://github.com/ecmwf/cfgrib/issues/101>`_.\n\n\n0.9.7.1 (2019-07-08)\n--------------------\n\n- fix a bytes-in-the-place-of-str bug when attempting to write a grib on windows.\n  see: `#91 <https://github.com/ecmwf/cfgrib/issues/91>`_.\n- honor setting ``indexpath`` in ``open_datasets``,\n  see: `#93 <https://github.com/ecmwf/cfgrib/issues/93>`_.\n\n\n0.9.7 (2019-05-27)\n------------------\n\n- much improved ``cfgrib.open_datasets`` heuristics now reads many more\n  heterogeneous grib files. the function is now a supported api.\n  see: `#63 <https://github.com/ecmwf/cfgrib/issues/63>`_,\n  `#66 <https://github.com/ecmwf/cfgrib/issues/66>`_,\n  `#73 <https://github.com/ecmwf/cfgrib/issues/73>`_ and\n  `#75 <https://github.com/ecmwf/cfgrib/issues/75>`_.\n- fix conda dependencies on python 2 only package,\n  see: `#78 <https://github.com/ecmwf/cfgrib/issues/78>`_.\n\n\n0.9.7rc1 (2019-05-14)\n---------------------\n\n- drop support for python 2, in line with *xarray* 0.12.0.\n  the 0.9.6.x series will be supported long term for python 2 users.\n  see: `#69 <https://github.com/ecmwf/cfgrib/issues/69>`_.\n- sync internal eccodes bindings api to the one in eccodes-python.\n  see: `#81 <https://github.com/ecmwf/cfgrib/issues/81>`_.\n- source code has been formatted with ``black -s -l 99``.\n- added initial support for spectral coordinates.\n\n\n0.9.6.2 (2019-04-15)\n--------------------\n\n- improve merging of variables into a dataset.\n  see: `#63 <https://github.com/ecmwf/cfgrib/issues/63>`_.\n\n\n0.9.6.1.post1 (2019-03-17)\n--------------------------\n\n- fix an issue in the readme format.\n\n\n0.9.6.1 (2019-03-17)\n--------------------\n\n- fixed (for real) multi-field messages,\n  see: `#45 <https://github.com/ecmwf/cfgrib/issues/45>`_.\n- added a protocol version to the index file. old ``*.idx`` files must be removed.\n\n\n0.9.6.post1 (2019-03-07)\n------------------------\n\n- fix an important typo in the readme. see: `#64 <https://github.com/ecmwf/cfgrib/issues/64>`_.\n\n\n0.9.6 (2019-02-26)\n------------------\n\n- add support for *windows* by installing *eccodes* via *conda*.\n  see: `#7 <https://github.com/ecmwf/cfgrib/issues/7>`_.\n- added *conda-forge* package.\n  see: `#5 <https://github.com/ecmwf/cfgrib/issues/5>`_.\n\n\n0.9.5.7 (2019-02-24)\n--------------------\n\n- fixed a serious bug in the computation of the suggested ``filter_by_keys`` for non-cubic\n  grib files. as a result ``cfgrib.xarray_store.open_datasets`` was not finding all the\n  variables in the files.\n  see: `#54 <https://github.com/ecmwf/cfgrib/issues/54>`_.\n- fixed a serious bug in variable naming that could drop or at worse mix the values of variables.\n  again see: `#54 <https://github.com/ecmwf/cfgrib/issues/54>`_.\n- re-opened `#45 <https://github.com/ecmwf/cfgrib/issues/45>`_ as the fix was returning wrong data.\n  now we are back to dropping all variable in a multi-field except the first.\n\n\n0.9.5.6 (2019-02-04)\n--------------------\n\n- do not set explicit timezone in ``units`` to avoid crashing some versions of *xarray*.\n  see: `#44 <https://github.com/ecmwf/cfgrib/issues/44>`_.\n\n\n0.9.5.5 (2019-02-02)\n--------------------\n\n- enable eccodes implicit multi-field support by default, needed for nam products by ncep.\n  see: `#45 <https://github.com/ecmwf/cfgrib/issues/45>`_.\n- added support for ``depthbelowland`` coordinate.\n\n\n0.9.5.4 (2019-01-25)\n--------------------\n\n- add support for building ``valid_time`` from a bad ``time-step`` hypercube.\n\n\n0.9.5.3 (2019-01-25)\n--------------------\n\n- also convert is ``valid_time`` can index all times and steps in ``translate_coords``.\n\n\n0.9.5.2 (2019-01-24)\n--------------------\n\n- set ``valid_time`` as preferred time dimension for the cds data model.\n- fall back to using the generic ``grib2`` *eccodes* template when no better option is found.\n  see: `#39 <https://github.com/ecmwf/cfgrib/issues/39>`_.\n\n\n0.9.5.1 (2018-12-27)\n--------------------\n\n- fix the crash when using ``cf2cdm.translate_coords`` on datasets with non-dimension coordinates.\n  see: `#41 <https://github.com/ecmwf/cfgrib/issues/41>`_.\n- added a ``cfgrib`` script that can translate grib to netcdf.\n  see: `#40 <https://github.com/ecmwf/cfgrib/issues/40>`_.\n\n\n0.9.5 (2018-12-20)\n------------------\n\n- drop support for *xarray* versions prior to *v0.11* to reduce complexity.\n  (this is really only v0.10.9).\n  see: `#32 <https://github.com/ecmwf/cfgrib/issues/32>`_.\n- declare the data as ``cf-1.7`` compliant via the  ``conventions`` global attribute.\n  see: `#36 <https://github.com/ecmwf/cfgrib/issues/36>`_.\n- tested larger-than-memory and distributed processing via *dask* and *dask.distributed*.\n  see: `#33 <https://github.com/ecmwf/cfgrib/issues/33>`_.\n- promote write support via ``cfgrib.to_grib`` to **alpha**.\n  see: `#18 <https://github.com/ecmwf/cfgrib/issues/18>`_.\n- provide the ``cf2cdm.translate_coords`` utility function to translate the coordinates\n  between cf-compliant data models, defined by ``out_name``, ``units`` and ``store_direction``.\n  see: `#24 <https://github.com/ecmwf/cfgrib/issues/24>`_.\n- provide ``cfgrib.__version__``.\n  see: `#31 <https://github.com/ecmwf/cfgrib/issues/31>`_.\n- raise with a better error message when users attempt to open a file that is not a grib.\n  see: `#34 <https://github.com/ecmwf/cfgrib/issues/34>`_.\n- make 2d grids for ``rotated_ll`` and ``rotated_gg`` ``gridtype``'s.\n  see: `#35 <https://github.com/ecmwf/cfgrib/issues/35>`_.\n\n\n0.9.4.1 (2018-11-08)\n--------------------\n\n- fix formatting for pypi page.\n\n\n0.9.4 (2018-11-08)\n------------------\n\n- saves one index file per set of ``index_keys`` in a much more robust way.\n- refactor cf-encoding and add the new ``encode_cf`` option to ``backend_kwargs``.\n  see: `#23 <https://github.com/ecmwf/cfgrib/issues/23>`_.\n- refactor error handling and the option to ignore errors (not well documented yet).\n  see: `#13 <https://github.com/ecmwf/cfgrib/issues/13>`_.\n- do not crash on ``gridtype`` not fully supported by the installed *eccodes*\n  see: `#27 <https://github.com/ecmwf/cfgrib/issues/27>`_.\n- several smaller bug fixes and performance improvements.\n\n\n0.9.3.1 (2018-10-28)\n--------------------\n\n- assorted readme fixes, in particular advertise index file support as alpha.\n\n\n0.9.3 (2018-10-28)\n------------------\n\n- big performance improvement: add alpha support to save to and read from disk\n  the grib index produced by the full-file scan at the first open.\n  see: `#20 <https://github.com/ecmwf/cfgrib/issues/20>`_.\n\n\n0.9.2 (2018-10-22)\n------------------\n\n- rename coordinate ``air_pressure`` to ``isobaricinhpa`` for consistency\n  with all other vertical ``level`` coordinates.\n  see: `#25 <https://github.com/ecmwf/cfgrib/issues/25>`_.\n\n\n0.9.1.post1 (2018-10-19)\n------------------------\n\n- fix pypi description.\n\n\n0.9.1 (2018-10-19)\n------------------\n\n- change the usage of ``cfgrib.open_dataset`` to allign it with ``xarray.open_dataset``,\n  in particular ``filter_by_key`` must be added into the ``backend_kwargs`` dictionary.\n  see: `#21 <https://github.com/ecmwf/cfgrib/issues/21>`_.\n\n0.9.0 (2018-10-14)\n------------------\n\n- beta release with read support.\n\n\n",
  "docs_url": null,
  "keywords": "eccodes grib xarray",
  "license": "apache license version 2.0",
  "name": "cfgrib",
  "package_url": "https://pypi.org/project/cfgrib/",
  "project_url": "https://pypi.org/project/cfgrib/",
  "project_urls": {
    "Homepage": "https://github.com/ecmwf/cfgrib"
  },
  "release_url": "https://pypi.org/project/cfgrib/0.9.10.4/",
  "requires_dist": [
    "attrs (>=19.2)",
    "click",
    "eccodes (>=0.9.8)",
    "numpy",
    "dask[array] ; extra == 'tests'",
    "flake8 ; extra == 'tests'",
    "pytest ; extra == 'tests'",
    "pytest-cov ; extra == 'tests'",
    "scipy ; extra == 'tests'",
    "xarray (>=0.15) ; extra == 'tests'",
    "xarray (>=0.15) ; extra == 'xarray'"
  ],
  "requires_python": ">=3.6",
  "summary": "python interface to map grib files to the netcdf common data model following the cf convention using eccodes.",
  "version": "0.9.10.4",
  "releases": [],
  "developers": [
    "european_centre_for_medium",
    "software.support@ecmwf.int"
  ],
  "kwds": "xarray_to_grib netcdf_kwargs_json to_netcdf grib_keys cfgrib_use_external_eccodes_bindings",
  "license_kwds": "apache license version 2.0",
  "libtype": "pypi",
  "id": "pypi_cfgrib",
  "homepage": "https://github.com/ecmwf/cfgrib",
  "release_count": 54,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_click",
    "pypi_dask",
    "pypi_eccodes",
    "pypi_flake8",
    "pypi_numpy",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_scipy",
    "pypi_xarray"
  ],
  "documentation_summary": "The HTML text provides information about `cfgrib`, a Python package available on PyPI (Python Package Index) for mapping GRIB files to the NetCDF Common Data Model following the CF Convention using ecCodes. The latest version, 0.9.10.4, was released on May 19, 2023. It requires Python version 3.6 or higher and is licensed under the Apache Software License (Version 2.0). The package is developed by the European Centre for Medium-Range Weather Forecasts (ECMWF) and supports various Python versions including 3.6 to 3.9 and PyPy3. `cfgrib` offers features like reading GRIB 1 and 2 files, lazy data reading, and support for larger-than-memory processing via xarray and dask. It also includes functionalities for translating coordinates and writing the index of a GRIB file to disk. The package has beta features like a `cfgrib` utility for converting GRIB files to NetCDF and has some limitations related to ecCodes dependencies. Installation can be done via Conda or pip, and the package supports multiple operating systems including Linux, MacOS, and Windows.",
  "embedding": [
    0.0014832329470664263,
    -0.0009319896926172078,
    -0.0006007137708365917,
    -0.04729383811354637,
    0.036721277981996536,
    0.019081495702266693,
    -0.013251038268208504,
    4.6461453166557476e-05,
    -0.018713999539613724,
    -0.027802444994449615,
    -0.011378224939107895,
    -0.010544292628765106,
    -0.017244018614292145,
    0.02483421377837658,
    -0.006650254596024752,
    0.011053132824599743,
    0.006120212841778994,
    0.004353407770395279,
    -0.0164524894207716,
    0.006053074263036251,
    0.02764696627855301,
    0.027237066999077797,
    -0.025894295424222946,
    -0.022530298680067062,
    0.01762564852833748,
    0.023010870441794395,
    -0.0010379980085417628,
    -0.002759749535471201,
    0.014784625731408596,
    0.01766805164515972,
    0.0179931428283453,
    -0.022261744365096092,
    -0.005353419575840235,
    -0.021060317754745483,
    -0.006940010469406843,
    -0.022473761811852455,
    0.02043840102851391,
    -0.007144960109144449,
    0.011844662018120289,
    0.021074451506137848,
    0.023646919056773186,
    -0.008056631311774254,
    0.004766840022057295,
    0.017215749248862267,
    0.009717428125441074,
    0.003784496570006013,
    0.036382053047418594,
    -0.029908476397395134,
    -0.014424197375774384,
    0.00910258013755083,
    0.005583104211837053,
    0.021964920684695244,
    -0.007590194698423147,
    -0.04390157386660576,
    0.016127396374940872,
    -0.002015924546867609,
    -0.026360733434557915,
    0.023505575954914093,
    0.0024293570313602686,
    -0.015632692724466324,
    0.024113357067108154,
    -0.00574918370693922,
    -0.04212063550949097,
    -0.0021449013147503138,
    -0.007067220751196146,
    -0.011689182370901108,
    0.0037880302406847477,
    -0.019053226336836815,
    0.017173346132040024,
    0.004572491627186537,
    0.03502514585852623,
    0.024650465697050095,
    -0.014629146084189415,
    -0.0009858772391453385,
    0.04087680205702782,
    0.013894155621528625,
    -0.008664412423968315,
    0.019010823220014572,
    -0.013279307633638382,
    0.009526613168418407,
    0.0006214737077243626,
    -0.013561996631324291,
    0.011335821822285652,
    0.03533610329031944,
    0.00797889195382595,
    -0.003081308212131262,
    -0.024056818336248398,
    0.008007161319255829,
    -0.014516071416437626,
    0.010749242268502712,
    0.023505575954914093,
    0.016466623172163963,
    0.001447013346478343,
    0.015491347759962082,
    0.006713859736919403,
    -0.008438261225819588,
    -0.014318188652396202,
    0.030784811824560165,
    0.009985982440412045,
    -0.008148505352437496,
    0.014841163530945778,
    0.014070835895836353,
    -0.011463032104074955,
    -0.00023697274446021765,
    -0.0469263456761837,
    -0.026940245181322098,
    0.006155549082905054,
    -0.011145006865262985,
    0.022374819964170456,
    -0.01964687369763851,
    -0.04330792650580406,
    0.04132910445332527,
    -0.008233311586081982,
    -0.018996689468622208,
    0.03160461038351059,
    0.0010680337436497211,
    0.016650371253490448,
    0.00655131321400404,
    0.006353431381285191,
    -0.010600830428302288,
    -0.01186586357653141,
    0.026049774140119553,
    0.007307506166398525,
    -0.02705332078039646,
    -0.02114512398838997,
    0.025950834155082703,
    -0.008473597466945648,
    -0.017286421731114388,
    0.013067291118204594,
    -0.014035499654710293,
    0.0021166326478123665,
    -0.022742316126823425,
    -0.0110107297077775,
    0.004070719238370657,
    0.006523044779896736,
    0.005611373111605644,
    -0.00369968987070024,
    0.017823530361056328,
    -0.017540840432047844,
    -0.0028957936447113752,
    0.01516625564545393,
    0.015420675277709961,
    -0.022544434294104576,
    -0.013986029662191868,
    -0.01454433985054493,
    0.011879997327923775,
    0.02446671761572361,
    0.015420675277709961,
    0.020070906728506088,
    -0.03465764969587326,
    0.0279861930757761,
    0.006780998315662146,
    0.009724495001137257,
    0.0014584976015612483,
    0.0006740361568517983,
    0.012791668996214867,
    0.006727993953973055,
    -0.006162616424262524,
    -0.025046229362487793,
    -0.02539958991110325,
    -0.006724460516124964,
    0.014070835895836353,
    -0.005735049489885569,
    -0.008183841593563557,
    0.006964745931327343,
    0.022869525477290154,
    -0.004109588917344809,
    -0.03884144499897957,
    0.0017950739711523056,
    0.0104382848367095,
    0.011724518612027168,
    0.011130872182548046,
    -0.022572701796889305,
    -0.007759808097034693,
    0.030643468722701073,
    0.017385361716151237,
    0.004060117993503809,
    0.0026943779084831476,
    -0.013915357179939747,
    0.005028327461332083,
    -0.0036855554208159447,
    0.011766921728849411,
    0.012501913122832775,
    0.013880020938813686,
    -0.011752787977457047,
    -0.03177422285079956,
    0.010728040710091591,
    -0.002447025151923299,
    0.013349979184567928,
    0.019152168184518814,
    0.028678780421614647,
    0.03918066993355751,
    -0.004070719238370657,
    -0.032198257744312286,
    -0.5784944295883179,
    -0.02617698535323143,
    -0.0017721055774018168,
    -0.041640061885118484,
    0.008381723426282406,
    -0.0012411805801093578,
    0.009639688767492771,
    0.007208564784377813,
    -0.03731492534279823,
    0.05077091231942177,
    -0.020297057926654816,
    0.031321920454502106,
    0.0028198210056871176,
    -0.018784672021865845,
    -0.02982367016375065,
    0.005169671960175037,
    0.0006956795114092529,
    0.0026078044902533293,
    -0.01820516027510166,
    0.016169801354408264,
    -0.015279331244528294,
    0.02385893650352955,
    -0.014784625731408596,
    0.006515977438539267,
    0.010876452550292015,
    0.029484443366527557,
    -0.007074287626892328,
    -0.022247610613703728,
    0.025244111195206642,
    0.013392383232712746,
    -0.022940197959542274,
    0.033498626202344894,
    0.008841092698276043,
    -0.04766133427619934,
    0.04392984136939049,
    -0.01762564852833748,
    -0.019053226336836815,
    0.033300742506980896,
    0.01294008083641529,
    0.02982367016375065,
    -0.006353431381285191,
    -0.014176844619214535,
    0.005777452606707811,
    0.015420675277709961,
    0.013130895793437958,
    0.002549499738961458,
    -0.01479875948280096,
    0.0030442052520811558,
    -0.01506731379777193,
    -0.020735224708914757,
    -0.012190955691039562,
    0.010007183998823166,
    -0.0032473879400640726,
    -0.022643374279141426,
    0.021979056298732758,
    0.008516000583767891,
    0.009484210051596165,
    -0.00010010055120801553,
    0.01233229972422123,
    -0.004897583741694689,
    -0.0023569180630147457,
    0.012742199003696442,
    0.008982437662780285,
    -0.03646685928106308,
    -0.008417059667408466,
    -0.013328777626156807,
    0.0012491312809288502,
    -0.017979009076952934,
    -0.004565424285829067,
    -0.03400746360421181,
    0.0052050077356398106,
    0.007879951037466526,
    0.008233311586081982,
    -0.012205089442431927,
    0.018219294026494026,
    0.050120726227760315,
    0.02262924052774906,
    0.007307506166398525,
    -0.009639688767492771,
    0.023010870441794395,
    -0.009788100607693195,
    -0.0013357046991586685,
    -0.011470098979771137,
    0.0035159422550350428,
    0.026162849739193916,
    0.0012429474154487252,
    -0.005561902653425932,
    -0.0075477915816009045,
    0.0081767737865448,
    -0.004629029426723719,
    0.004735037684440613,
    0.01506731379777193,
    0.0031555138994008303,
    -0.020692821592092514,
    0.020523209124803543,
    0.011109670624136925,
    0.002614871598780155,
    -0.0065442463383078575,
    -0.009399402886629105,
    -0.007293371483683586,
    0.00469263456761837,
    -0.013766945339739323,
    -0.008629076182842255,
    -0.010996595025062561,
    -0.014353524893522263,
    0.00713789276778698,
    -0.012388837523758411,
    0.0030724741518497467,
    0.027731772512197495,
    -0.013604399748146534,
    -0.012643257156014442,
    -0.03344208747148514,
    -0.011710384860634804,
    -0.010763376951217651,
    0.0023675188422203064,
    -0.03287671133875847,
    0.013964828103780746,
    -0.0038516351487487555,
    0.009901176206767559,
    -0.00629335967823863,
    0.0012261627707630396,
    -0.002878125524148345,
    -0.020099176093935966,
    -0.011109670624136925,
    0.006777464412152767,
    0.008402924984693527,
    -0.0008613175014033914,
    -0.0175973791629076,
    -0.04169660061597824,
    0.00856547150760889,
    0.026049774140119553,
    0.008148505352437496,
    0.019321780651807785,
    -0.006523044779896736,
    0.02214866876602173,
    0.025357186794281006,
    0.048113636672496796,
    -0.0035760134924203157,
    0.011349956505000591,
    -0.007250968366861343,
    -0.006819867994636297,
    -0.0006917042192071676,
    0.023237021639943123,
    -0.020692821592092514,
    0.0001831956033129245,
    0.024282969534397125,
    0.008197976276278496,
    0.010466553270816803,
    -0.0034329022746533155,
    -0.03355516493320465,
    -0.0013268706388771534,
    -0.021526753902435303,
    0.014713953249156475,
    0.03216998651623726,
    0.0036325512919574976,
    -0.014092037454247475,
    -0.0003803048166446388,
    -0.009307529777288437,
    -0.014643280766904354,
    0.005664377473294735,
    0.014021365903317928,
    0.03496860712766647,
    -0.030728274956345558,
    -0.004226197954267263,
    -0.02590843103826046,
    0.019420722499489784,
    -0.0235621128231287,
    0.034940339624881744,
    0.00023012637393549085,
    -0.021865980699658394,
    -0.011286350898444653,
    0.01294008083641529,
    0.008120235987007618,
    0.018360638990998268,
    -0.013279307633638382,
    0.03143499791622162,
    -0.020268788561224937,
    -0.011413561180233955,
    -0.007809278555214405,
    -0.01069270446896553,
    -0.0004739454889204353,
    0.027237066999077797,
    -0.023774130269885063,
    -0.023887205868959427,
    -0.0023834200110286474,
    0.02781658060848713,
    0.022403089329600334,
    0.010523091070353985,
    -0.014282852411270142,
    0.017215749248862267,
    -0.011759854853153229,
    -0.0033162932377308607,
    -0.03030424192547798,
    0.035505715757608414,
    -0.0062191542237997055,
    -0.0050707305781543255,
    -0.0065018427558243275,
    0.0015980752650648355,
    -0.04212063550949097,
    0.017554976046085358,
    0.00020583279547281563,
    0.0020141578279435635,
    0.0028463229537010193,
    -0.00767500139772892,
    0.0004730620712507516,
    -0.005325150676071644,
    0.03216998651623726,
    -0.0055689699947834015,
    0.008989504538476467,
    -0.020735224708914757,
    0.02651621215045452,
    8.480664837406948e-05,
    -0.0028657580260187387,
    -0.006173217203468084,
    -0.010127327404916286,
    0.024325372651219368,
    -0.0010379980085417628,
    0.010480687953531742,
    -0.009137916378676891,
    0.007070754189044237,
    0.004349874332547188,
    -0.00302477041259408,
    0.023039139807224274,
    0.030756544321775436,
    -0.0043604751117527485,
    0.011038998141884804,
    -0.014402995817363262,
    0.008459462784230709,
    -0.0016228104941546917,
    -0.033696506172418594,
    0.007205031346529722,
    0.022035593166947365,
    0.0023357162717729807,
    -0.013561996631324291,
    0.015406540594995022,
    -0.010932990349829197,
    0.0035018078051507473,
    -0.00908137857913971,
    0.010261604562401772,
    -0.013130895793437958,
    0.012742199003696442,
    0.01179519109427929,
    0.021357139572501183,
    -0.010374680161476135,
    0.001146656577475369,
    0.0003758877865038812,
    0.014431264251470566,
    0.007024817168712616,
    -0.01752670668065548,
    0.027477353811264038,
    -0.010784578509628773,
    0.03632551431655884,
    -0.018388908356428146,
    0.0028834259137511253,
    0.010834049433469772,
    -0.021229930222034454,
    -0.0030371379107236862,
    0.01772458851337433,
    0.029710594564676285,
    0.02590843103826046,
    0.0026837768964469433,
    0.008042496629059315,
    0.0009611420100554824,
    0.021865980699658394,
    0.03233960270881653,
    -0.02466459944844246,
    -0.00688700657337904,
    -0.05272146686911583,
    -0.020254654809832573,
    -0.027505623176693916,
    -0.03197210654616356,
    -0.03214171901345253,
    -0.020551476627588272,
    -0.01967514120042324,
    0.024707002565264702,
    -0.004427613690495491,
    -0.001865746220573783,
    -0.005116667598485947,
    0.003908173181116581,
    0.007887017913162708,
    -0.012770467437803745,
    -0.004413479007780552,
    0.06117385998368263,
    0.0004121072997804731,
    0.0017394196474924684,
    0.0008811940788291395,
    -0.03341381996870041,
    0.005770385731011629,
    -0.03935028240084648,
    0.04387330636382103,
    -0.002045960398390889,
    0.004325138870626688,
    -0.0006387000321410596,
    0.021724635735154152,
    -0.009519546292722225,
    0.029145216569304466,
    0.0019894225988537073,
    -0.014940104447305202,
    0.006367565598338842,
    0.005957666784524918,
    0.019759949296712875,
    0.011802257969975471,
    0.011300485581159592,
    0.00574918370693922,
    0.04299696907401085,
    0.02534305304288864,
    0.010805780068039894,
    -0.013293441385030746,
    -0.00037875885027460754,
    -0.007505387999117374,
    -0.00525447865948081,
    0.01732882484793663,
    0.01967514120042324,
    -0.014254583977162838,
    -0.013894155621528625,
    0.019717546179890633,
    0.0021731702145189047,
    -0.004805710166692734,
    0.018954286351799965,
    -0.0016961329383775592,
    -0.007752740755677223,
    -0.036184169352054596,
    -0.0306717362254858,
    -0.00045892762136645615,
    -0.00958315096795559,
    0.01779526099562645,
    0.030445586889982224,
    0.006752729415893555,
    -0.019194571301341057,
    -0.03361169993877411,
    -0.030445586889982224,
    -0.01659383438527584,
    0.013639735989272594,
    0.014657415449619293,
    0.014643280766904354,
    -0.010339343920350075,
    0.009434739127755165,
    -0.010699772275984287,
    0.03013462759554386,
    0.0033357280772179365,
    -0.004865781404078007,
    -0.01803554594516754,
    -0.012996618635952473,
    -0.004265067633241415,
    0.013031954877078533,
    0.01092592254281044,
    -0.002528298180550337,
    0.020070906728506088,
    0.0076820687390863895,
    0.008904698304831982,
    0.011993072926998138,
    0.011130872182548046,
    0.006950611248612404,
    -0.013314643874764442,
    -0.006141414865851402,
    -0.013554928824305534,
    0.0009673258173279464,
    0.02385893650352955,
    -0.028664646670222282,
    0.018728135153651237,
    0.04927266016602516,
    -0.002894026692956686,
    0.007823413237929344,
    -0.0017862400272861123,
    0.02346317283809185,
    0.00463256286457181,
    0.0028480899054557085,
    -0.008692680858075619,
    0.011286350898444653,
    -0.017809396609663963,
    0.007795144338160753,
    0.025498531758785248,
    0.006901140790432692,
    -0.02138540893793106,
    0.0011360556818544865,
    -0.004151992034167051,
    -0.0055583687499165535,
    -0.022247610613703728,
    -0.0041979290544986725,
    -0.0252017080783844,
    0.013597331941127777,
    -0.041640061885118484,
    0.012360569089651108,
    -0.05144936591386795,
    -0.019024956971406937,
    -0.018756402656435966,
    -0.005759784951806068,
    -0.0055689699947834015,
    0.006554847117513418,
    0.006558380555361509,
    0.0013639735989272594,
    0.009371134452521801,
    -0.026685824617743492,
    -0.01183052733540535,
    -0.0028551570139825344,
    -0.061286937445402145,
    -0.018247563391923904,
    0.01591538079082966,
    0.010417083278298378,
    -0.006102544721215963,
    0.02346317283809185,
    -0.004272134974598885,
    -0.000987644074484706,
    -0.05665083974599838,
    0.00186221266631037,
    -0.04661538824439049,
    0.01649489253759384,
    -0.02674236334860325,
    0.023957878351211548,
    -0.012593787163496017,
    0.007590194698423147,
    -0.007215632125735283,
    0.0015256361803039908,
    0.029343100264668465,
    0.00012135742872487754,
    0.017470169812440872,
    0.003989445976912975,
    -0.015095583163201809,
    0.007759808097034693,
    0.02735014259815216,
    -0.015844708308577538,
    -0.007212098687887192,
    0.002365752123296261,
    -0.0268413033336401,
    0.03581667318940163,
    0.0027827180456370115,
    0.013851752504706383,
    -0.016579698771238327,
    0.01706027053296566,
    0.02412749081850052,
    0.0032067513093352318,
    0.020593879744410515,
    0.013696273788809776,
    0.01488356664776802,
    0.021032048389315605,
    -0.02647380903363228,
    0.013088492676615715,
    0.011583174578845501,
    0.015519616194069386,
    0.0003244295949116349,
    -0.002915228484198451,
    0.015321734361350536,
    -0.006123746745288372,
    -0.0279861930757761,
    0.022770583629608154,
    -0.021639829501509666,
    0.017300555482506752,
    0.028678780421614647,
    -0.0033056924585253,
    0.039604704827070236,
    -0.031180577352643013,
    -0.019547931849956512,
    -0.023138079792261124,
    -0.006480641197413206,
    0.018883613869547844,
    -0.00629335967823863,
    0.017074404284358025,
    -0.008049564436078072,
    0.008070765994489193,
    -0.004296869970858097,
    -0.020735224708914757,
    0.019279377534985542,
    -0.037088774144649506,
    -0.014841163530945778,
    0.007010682951658964,
    0.0016484291991218925,
    -0.012339366599917412,
    0.0009381734998896718,
    -0.017752857878804207,
    -0.02070695534348488,
    0.008388791233301163,
    -0.002598970429971814,
    -0.010586696676909924,
    0.01987302489578724,
    0.0023940210230648518,
    -0.02571054920554161,
    -0.0058516585268080235,
    -0.024820078164339066,
    -0.017017867416143417,
    -0.050657838582992554,
    -0.0017323524225503206,
    0.02268577739596367,
    0.034035734832286835,
    0.03347035497426987,
    0.0524953156709671,
    0.003858702490106225,
    0.024410178884863853,
    0.0038268999196588993,
    0.004802176263183355,
    -0.0023692857939749956,
    -0.011802257969975471,
    -0.0011007195571437478,
    -0.03508168086409569,
    -0.01886947825551033,
    -0.009816369041800499,
    -0.012007207609713078,
    -0.017116807401180267,
    -0.02436777576804161,
    -0.01131462026387453,
    -0.012353501282632351,
    -0.0010008951649069786,
    -0.009378201328217983,
    -0.0027844849973917007,
    -0.019491394981741905,
    -0.006738594733178616,
    0.011258082464337349,
    0.00034342275466769934,
    0.031519804149866104,
    -0.04783094674348831,
    -0.036551665514707565,
    0.040509309619665146,
    -0.02390133962035179,
    -0.007243901025503874,
    0.01672104373574257,
    0.01672104373574257,
    0.003265055827796459,
    0.019929561764001846,
    0.021865980699658394,
    0.01578817144036293,
    -0.00205656117759645,
    0.008233311586081982,
    -0.021357139572501183,
    -0.0179931428283453,
    -0.013795214705169201,
    0.016805849969387054,
    0.014155643060803413,
    -0.007625530939549208,
    -0.018360638990998268,
    0.0055407010950148106,
    9.192907600663602e-05,
    -0.002028292277827859,
    -0.003121944610029459,
    0.04008527472615242,
    -0.016947194933891296,
    -0.024254700168967247,
    -0.021668098866939545,
    -0.01997196488082409,
    0.00026656672707758844,
    0.005717381369322538,
    0.011130872182548046,
    0.002528298180550337,
    0.0380781851708889,
    -0.008035429753363132,
    -0.017003731802105904,
    0.006600784137845039,
    0.018388908356428146,
    0.06688417494297028,
    0.003805698361247778,
    0.029314830899238586,
    0.03626897558569908,
    -0.0012818170944228768,
    -0.006784531753510237,
    -0.016565565019845963,
    -0.018021412193775177,
    -0.028919067233800888,
    0.025456128641963005,
    0.012042543850839138,
    0.0036360849626362324,
    -0.013095559552311897,
    -0.006621985696256161,
    -0.014869431965053082,
    -0.013971894979476929,
    0.0029912011232227087,
    0.031124038621783257,
    0.03154807165265083,
    0.0010335809784010053,
    -0.027336008846759796,
    -0.0015512548852711916,
    -0.024226432666182518,
    0.0014417129568755627,
    -0.012805803678929806,
    -0.03445976600050926,
    0.0035424442030489445,
    -0.00931459665298462,
    0.0010583163239061832,
    0.038021646440029144,
    -0.011145006865262985,
    0.023138079792261124,
    0.014756356365978718,
    -0.024551523849368095,
    -0.012176821008324623,
    -0.021724635735154152,
    -0.004250932950526476,
    0.01853025145828724,
    0.012770467437803745,
    0.01879880577325821,
    0.028876662254333496,
    -0.03321593627333641,
    0.026134582236409187,
    -0.007120224647223949,
    -0.013145030476152897,
    -0.0126008540391922,
    -0.006081343162804842,
    0.0308696199208498,
    0.004247399512678385,
    -0.01568922959268093,
    0.012827005237340927,
    -0.0020512607879936695,
    0.027265336364507675,
    0.011660913936793804,
    -0.014501936733722687,
    0.019491394981741905,
    0.009561949409544468,
    -0.03485553339123726,
    8.265335054602474e-05,
    -0.024042684584856033,
    -0.024509120732545853,
    -0.027505623176693916,
    -0.01256551779806614,
    0.0062191542237997055,
    -0.033668238669633865,
    0.005342818796634674,
    0.006289826240390539,
    -0.0022332416847348213,
    -0.014925969764590263,
    -0.01823342964053154,
    -0.003553045215085149,
    0.008961235173046589,
    -0.0035459778737276793,
    0.016904791817069054,
    0.01024040300399065,
    0.02835368923842907,
    -0.0292300246655941,
    0.0176963210105896,
    0.0003674954641610384,
    -0.00469263456761837,
    -0.009434739127755165,
    0.015576153993606567,
    -0.01639595255255699,
    -0.016509026288986206,
    -0.00038737201248295605,
    -0.010134394280612469,
    -0.019024956971406937,
    -0.03590147942304611,
    -0.0025707015302032232,
    0.047406915575265884,
    0.006954145152121782,
    -0.033837851136922836,
    0.006247423123568296,
    0.03553398326039314,
    0.018728135153651237,
    -0.02402854897081852,
    -0.022247610613703728,
    0.03332901373505592,
    0.017413631081581116,
    -0.00017005499103106558,
    0.013067291118204594,
    -0.004176727496087551,
    -0.007865816354751587,
    -0.01372454222291708,
    -0.000628099252935499,
    0.007781009655445814,
    -0.03720184788107872,
    0.0066113849170506,
    0.021668098866939545,
    0.020961375907063484,
    -0.001227929606102407,
    0.021032048389315605,
    0.027123993262648582,
    -0.0446365661919117,
    -0.030841350555419922,
    0.03734319284558296,
    0.02219107188284397,
    -0.0008798689814284444,
    0.00329332472756505,
    0.02908867970108986,
    -0.026162849739193916,
    -0.002858690684661269,
    -0.011943602934479713,
    -0.00602480536326766,
    -0.018996689468622208,
    -0.0028021528851240873,
    -0.04327965900301933,
    0.013823483139276505,
    -0.017710454761981964,
    0.03626897558569908,
    0.012339366599917412,
    -0.035505715757608414,
    -0.031859029084444046,
    -0.014671550132334232,
    -0.050657838582992554,
    0.00849479902535677,
    -0.02815580740571022,
    0.03669301047921181,
    0.01967514120042324,
    0.009342865087091923,
    0.02004263736307621,
    0.016339413821697235,
    -0.006890540011227131,
    0.017286421731114388,
    -0.02571054920554161,
    -0.0065442463383078575,
    -0.007021283730864525,
    0.011300485581159592,
    0.0032208857592195272,
    -0.0024240566417574883,
    -0.03821953013539314,
    -0.007759808097034693,
    0.007766875438392162,
    0.023576248437166214,
    0.0023692857939749956,
    0.027760041877627373,
    -0.0052756802178919315,
    0.006081343162804842,
    -0.020862435922026634,
    -0.008325185626745224,
    0.010841116309165955,
    0.008459462784230709,
    0.011759854853153229,
    -0.03471418842673302,
    -0.011399426497519016,
    0.024593926966190338,
    0.0033551629167050123,
    -0.016410086303949356,
    -0.04675672948360443,
    0.015675095841288567,
    -0.03279190510511398,
    0.011130872182548046,
    -0.017710454761981964,
    -0.008438261225819588,
    0.013908290304243565,
    -0.01120861154049635,
    0.006547779776155949,
    0.021668098866939545,
    -0.00853013526648283,
    0.020777627825737,
    0.022643374279141426,
    -0.0008409992442466319,
    -0.026261791586875916,
    0.008558403700590134,
    -0.04658711701631546,
    0.00960435252636671,
    0.013894155621528625,
    -0.0015927748754620552,
    0.0011510734912008047,
    -0.0023887206334620714,
    0.03293324634432793,
    -0.020282922312617302,
    -0.024961423128843307,
    -0.025654010474681854,
    -0.005035394802689552,
    0.013795214705169201,
    -0.005957666784524918,
    -0.004311004653573036,
    -0.011724518612027168,
    -0.008841092698276043,
    0.0236610546708107,
    -0.02999328449368477,
    0.006724460516124964,
    -0.010063721798360348,
    0.01236763596534729,
    -0.04130083695054054,
    -0.0022791787050664425,
    -0.008897630497813225,
    0.0006497426074929535,
    -0.029738863930106163,
    0.01206374540925026,
    0.008975369855761528,
    0.002581302309408784,
    0.02996501512825489,
    0.16034109890460968,
    0.0029770666733384132,
    0.011576106771826744,
    -0.007689136080443859,
    -0.007597262039780617,
    -0.01947725936770439,
    -0.004466483369469643,
    0.008452395908534527,
    -0.01104606594890356,
    0.019053226336836815,
    -0.02466459944844246,
    0.005586637649685144,
    -0.009646755643188953,
    0.006378166377544403,
    0.010551360435783863,
    -0.008826958015561104,
    -0.019152168184518814,
    -0.01669277437031269,
    -0.01789420284330845,
    0.02363278530538082,
    0.014092037454247475,
    -0.012466576881706715,
    -0.031124038621783257,
    -0.040565844625234604,
    0.01816275715827942,
    -0.01564682647585869,
    -0.016113262623548508,
    0.02268577739596367,
    0.027307739481329918,
    0.012593787163496017,
    -0.008558403700590134,
    0.01233229972422123,
    -0.03454457223415375,
    -0.016381816938519478,
    -0.023039139807224274,
    -0.005939998663961887,
    0.010954191908240318,
    0.01997196488082409,
    0.01850198395550251,
    -0.005855192430317402,
    -0.007971825078129768,
    -0.021357139572501183,
    0.0073569766245782375,
    -0.03607109189033508,
    0.012198022566735744,
    0.016706909984350204,
    -0.012798736803233624,
    -0.011060199700295925,
    -0.0071626282297074795,
    0.001365740317851305,
    -0.005508898291736841,
    -0.02805686555802822,
    -0.012572585605084896,
    0.04240332171320915,
    0.011632644571363926,
    -0.03652339428663254,
    -0.0055407010950148106,
    -0.005388755816966295,
    0.03751280531287193,
    0.020763494074344635,
    -0.021696366369724274,
    0.05184512957930565,
    -0.00744178332388401,
    0.015872977674007416,
    -0.031321920454502106,
    0.029569251462817192,
    -0.02715226076543331,
    0.0017235183622688055,
    -0.005982402246445417,
    -0.003982378635555506,
    0.0024399578105658293,
    0.007144960109144449,
    -0.02209213189780712,
    0.00600713724270463,
    -0.013872954063117504,
    -0.019123898819088936,
    0.03649512678384781,
    0.012883543036878109,
    0.023519709706306458,
    0.03731492534279823,
    0.005374621134251356,
    0.009109647013247013,
    -0.014940104447305202,
    0.003411700716242194,
    -0.020904839038848877,
    -0.047972291707992554,
    -0.003780962899327278,
    0.0174984373152256,
    -0.026261791586875916,
    -0.018417175859212875,
    0.003508874913677573,
    -0.013378248549997807,
    -0.0029010940343141556,
    -0.0029328966047614813,
    0.025724682956933975,
    0.02979540266096592,
    -0.03666473925113678,
    0.009378201328217983,
    -0.005088398698717356,
    0.007689136080443859,
    -0.03397919610142708,
    0.05834697186946869,
    0.017682185396552086,
    -0.011286350898444653,
    -0.00992237776517868,
    0.0024664599914103746,
    -0.0012058444553986192,
    0.01696132868528366,
    0.0035830808337777853,
    0.004763306584209204,
    -0.013067291118204594,
    -0.020890703424811363,
    -0.004311004653573036,
    0.0012411805801093578,
    -0.006763330195099115,
    0.005678511690348387,
    0.010035453364253044,
    -0.018021412193775177,
    0.0067350612953305244,
    0.0235621128231287,
    0.0017570876516401768,
    -0.01826169714331627,
    -0.013399450108408928,
    0.010593763552606106,
    -0.02383066713809967,
    0.002515930449590087,
    -0.019491394981741905,
    0.012388837523758411,
    -0.009788100607693195,
    -0.022615104913711548,
    0.013017820194363594,
    -0.011569039896130562,
    0.029682327061891556,
    -0.027689369395375252,
    -0.02091897279024124,
    0.00802836287766695,
    0.007420581765472889,
    -0.02204972878098488,
    -0.01508144848048687,
    0.028240613639354706,
    -0.02141367830336094,
    0.013123828917741776,
    0.008289849385619164,
    -0.03129365295171738,
    -0.008233311586081982,
    0.02811340242624283,
    0.003178482409566641,
    0.009929444640874863,
    -0.0017765226075425744,
    -0.002190838335081935,
    0.007328707724809647,
    -0.019364183768630028,
    0.03833260387182236,
    -3.293780309832073e-06,
    0.03841741010546684,
    -0.032763633877038956,
    -0.012141484767198563,
    -0.03126538544893265,
    0.011703317053616047,
    -0.01833236962556839,
    -0.04367542266845703,
    -0.015321734361350536,
    0.009519546292722225,
    -0.012516047805547714,
    -0.013413584791123867,
    0.004869314841926098,
    -0.1786593347787857,
    0.027576293796300888,
    0.0043180715292692184,
    -0.05068610608577728,
    0.0017102673882618546,
    0.002768583595752716,
    -0.007010682951658964,
    0.010296939872205257,
    -0.011173275299370289,
    -0.0058516585268080235,
    0.012070812284946442,
    0.005876393988728523,
    -0.03751280531287193,
    -0.00933579821139574,
    0.021724635735154152,
    0.019180435687303543,
    -0.006530111655592918,
    0.005643175449222326,
    0.012855274602770805,
    0.02882012538611889,
    0.030756544321775436,
    -0.05320203676819801,
    0.008169706910848618,
    0.03338554874062538,
    0.023251155391335487,
    -0.003303925506770611,
    -0.03324420377612114,
    -0.0055689699947834015,
    -0.01977408304810524,
    -0.0005269496468827128,
    -0.005102533381432295,
    0.025696413591504097,
    0.03496860712766647,
    -0.0019876558799296618,
    0.013328777626156807,
    0.001134288846515119,
    0.0009152050479315221,
    -0.009993050247430801,
    -0.01461501233279705,
    0.004466483369469643,
    0.009660890325903893,
    0.021540887653827667,
    0.002915228484198451,
    0.008636143058538437,
    -0.019858889281749725,
    0.018855344504117966,
    -0.004727970343083143,
    -0.026996782049536705,
    -0.004091920796781778,
    -0.01622633822262287,
    0.021470215171575546,
    0.008466530591249466,
    0.0028957936447113752,
    0.007950623519718647,
    0.025597473606467247,
    0.013385315425693989,
    0.010296939872205257,
    0.004855180624872446,
    0.010113192722201347,
    -0.03338554874062538,
    -0.008452395908534527,
    -0.03120884671807289,
    0.0003151538548991084,
    -0.011922401376068592,
    0.0053357514552772045,
    -0.017470169812440872,
    -0.0017959574470296502,
    0.011540771462023258,
    -0.009675025008618832,
    -0.008671479299664497,
    0.008452395908534527,
    -0.019986100494861603,
    -0.0032208857592195272,
    -0.012530181556940079,
    0.014219247736036777,
    0.021964920684695244,
    -0.049951113760471344,
    0.014099105261266232,
    0.02178117446601391,
    -0.00496825622394681,
    -0.036382053047418594,
    0.04695461317896843,
    -0.009625554084777832,
    -0.0035230093635618687,
    0.04407118633389473,
    -0.025498531758785248,
    0.005911729764193296,
    -0.01372454222291708,
    0.0016457790043205023,
    -0.014176844619214535,
    0.008459462784230709,
    -0.0029699993319809437,
    0.04039623215794563,
    -0.0010804013581946492,
    0.0005331334541551769,
    -0.014141508378088474,
    -0.02346317283809185,
    -0.0008211226668208838,
    -0.00661845225840807,
    -0.002568934578448534,
    0.016466623172163963,
    0.019957831129431725,
    -0.013074357993900776,
    -0.010219200514256954,
    0.03779549524188042,
    0.02534305304288864,
    -0.03298978507518768,
    0.019123898819088936,
    0.03412054106593132,
    -0.011604376137256622,
    -0.01615566574037075,
    0.002227941295132041,
    0.025060363113880157,
    0.024381911382079124,
    -0.01077751163393259,
    0.010918855667114258,
    0.01127928402274847,
    -0.011357023380696774,
    -0.013201568275690079,
    -0.01127928402274847,
    0.023208752274513245,
    -0.0022173405159264803,
    0.020989645272493362,
    -0.016367683187127113,
    -0.03126538544893265,
    -0.02295433171093464,
    -0.09436152875423431,
    0.006788065191358328,
    0.024650465697050095,
    0.010049588046967983,
    -0.012876476161181927,
    0.008466530591249466,
    -0.0052050077356398106,
    0.015208658762276173,
    0.006187351420521736,
    -0.017201615497469902,
    -0.021272333338856697,
    0.010678569786250591,
    -0.0007614929927513003,
    0.010904720984399319,
    -0.0163535475730896,
    -0.00968915969133377,
    -0.016509026288986206,
    -0.011590241454541683,
    -0.018007278442382812,
    0.01826169714331627,
    -0.01201427448540926,
    -0.000355348689481616,
    -0.005784519948065281,
    -0.005222675856202841,
    0.012077880091965199,
    0.017385361716151237,
    -0.014784625731408596,
    -0.00020053237676620483,
    0.012261627241969109,
    0.0011351723223924637,
    -0.01132875494658947,
    -0.0561702698469162,
    0.006017738487571478,
    0.0004417012969497591,
    -0.016805849969387054,
    -0.021456081420183182,
    -0.009816369041800499,
    -0.04079199582338333,
    0.03595801815390587,
    -0.025286514312028885,
    -0.002537132240831852,
    -0.01489770133048296,
    -0.005869326647371054,
    -0.020056771114468575,
    -0.0027650499250739813,
    -0.0027332475874572992,
    -0.0325092151761055,
    0.017781127244234085,
    0.024480851367115974,
    -0.022502029314637184,
    -0.010558427311480045,
    -0.041555255651474,
    -0.016297010704874992,
    -0.0033675306476652622,
    -0.006738594733178616,
    -0.002273878315463662,
    -0.004053051117807627,
    0.03253748267889023,
    0.0027738839853554964,
    -0.007851681672036648,
    0.006795132532715797,
    -0.004982390441000462,
    -0.0153358681127429,
    0.02101791463792324,
    -0.01987302489578724,
    -0.0013913590228185058,
    0.0032367869280278683,
    -0.01598605327308178,
    0.03641032055020332,
    -0.00985170528292656,
    -0.023675188422203064,
    0.015406540594995022,
    -0.029173485934734344,
    0.009971847757697105,
    -0.015448943711817265,
    0.028169941157102585,
    -0.008113169111311436,
    -0.00903190765529871,
    0.029710594564676285,
    -0.007597262039780617,
    -0.008947101421654224,
    -0.00521914241835475,
    -0.011978939175605774,
    -0.02788725309073925,
    0.008551336824893951,
    0.022021459415555,
    -0.0035724800545722246,
    -0.003118411172181368,
    0.03624070808291435,
    -0.019901292398571968,
    0.04240332171320915,
    0.011950669810175896,
    0.056057192385196686,
    0.011667980812489986,
    -0.0008295149891637266,
    -0.007035417947918177,
    -0.006236822344362736,
    0.017470169812440872,
    -0.04966842755675316,
    0.003406400326639414,
    -0.058799274265766144,
    -0.00876335334032774,
    -0.08401511609554291,
    0.040367964655160904,
    -0.000737641123123467,
    -0.015576153993606567,
    0.03400746360421181,
    -0.0268413033336401,
    -0.013618533499538898,
    -0.018657462671399117,
    0.001262382254935801,
    0.002015924546867609,
    -0.019491394981741905,
    0.0048163109458982944,
    -0.013314643874764442,
    0.017512572929263115,
    -0.0006148481625132263,
    -0.020028503611683846,
    0.03683435171842575,
    0.010282806120812893,
    0.0621350035071373,
    -0.0005092815845273435,
    -0.02439604513347149,
    0.013653869740664959,
    0.016127396374940872,
    0.011618510819971561,
    -0.042148903012275696,
    0.002415222581475973,
    -0.01426165085285902,
    0.04602174088358879,
    -0.0038410343695431948,
    -0.05037514865398407,
    -0.0006197068723849952,
    2.064953514491208e-05,
    0.0029699993319809437,
    0.03689089044928551,
    0.017653916031122208,
    0.008876428939402103,
    0.032254792749881744,
    0.017682185396552086,
    0.053004153072834015,
    0.008685613982379436,
    -0.019731679931282997,
    0.021074451506137848,
    0.03607109189033508,
    0.01742776669561863,
    0.03183076158165932,
    -0.009950646199285984,
    -0.0008798689814284444,
    0.010028385557234287,
    0.020622149109840393,
    0.002750915475189686,
    0.018219294026494026,
    -0.013745743781328201,
    -0.02349144034087658,
    -0.022883659228682518,
    0.018148621544241905,
    -0.02265750989317894,
    0.011993072926998138,
    -0.006010671146214008,
    0.009060177020728588,
    -0.00933579821139574,
    0.015759902074933052,
    0.0014319955371320248,
    0.028904931619763374,
    -0.006208553444594145,
    0.013053156435489655,
    -0.0016007254598662257,
    -0.027533890679478645,
    -0.023703457787632942,
    -0.021159257739782333,
    -0.029880208894610405,
    -0.03375304490327835,
    -0.04294043034315109,
    0.02490488439798355,
    -0.013738676905632019,
    0.018713999539613724,
    -0.002215573564171791,
    -0.002296846592798829,
    0.018756402656435966,
    0.00906724389642477,
    0.028226478025317192,
    0.023166349157691002,
    -0.008883495815098286,
    -0.028042731806635857,
    -0.0008016878273338079,
    0.008381723426282406,
    0.006123746745288372,
    -0.004254466854035854,
    -0.010487754829227924,
    -0.008713883347809315,
    -0.009915309958159924,
    0.021159257739782333,
    -0.002561867469921708,
    0.013872954063117504,
    0.00767500139772892,
    0.01241710688918829,
    0.033639971166849136,
    0.01131462026387453,
    0.0075195226818323135,
    0.008508933708071709,
    0.037456270307302475,
    -0.010685637593269348,
    0.003830433590337634,
    0.02285539172589779,
    -0.02879185602068901,
    -0.011505435220897198,
    0.01310262642800808,
    0.0001510618458269164,
    -0.012148551642894745,
    -0.008551336824893951,
    0.009971847757697105,
    -0.003378131426870823,
    -0.016466623172163963,
    -0.019759949296712875,
    0.005385221913456917,
    -0.025823622941970825,
    -0.008890563622117043,
    0.01016973052173853,
    -0.014148575253784657,
    -0.019053226336836815,
    -0.0036254841834306717,
    -0.003961177077144384,
    0.003540677484124899,
    0.03160461038351059,
    -0.02811340242624283,
    0.0046855672262609005,
    0.04407118633389473,
    0.03135019168257713,
    0.01399309653788805,
    0.006841069553047419,
    -0.028636377304792404,
    0.007837547920644283,
    0.011053132824599743,
    0.0015362370759248734,
    -0.020961375907063484,
    -0.021710501983761787,
    -0.006936477031558752,
    -0.01725815236568451,
    -0.012996618635952473,
    0.0016272275242954493,
    0.08265820890665054,
    0.018049681559205055,
    -0.009823436848819256,
    0.0007305738981813192,
    -0.012911811470985413,
    0.02363278530538082,
    0.019081495702266693,
    -0.008982437662780285,
    -0.011286350898444653,
    -0.024975556880235672,
    -0.011773989535868168,
    -0.005088398698717356,
    -0.03267882764339447,
    -0.04599346965551376,
    -0.0035707131028175354,
    -0.005646709352731705,
    0.010183865204453468,
    0.04947054386138916,
    -0.010141461156308651,
    0.014629146084189415,
    0.03737146034836769,
    -0.004985923878848553,
    0.027830714359879494,
    -0.030841350555419922,
    -0.0296257883310318,
    -0.003894038498401642,
    0.018685730174183846,
    0.015774035826325417,
    -0.0038268999196588993,
    -0.01268566120415926,
    -0.0055583687499165535,
    -0.01652316190302372,
    0.0033922658767551184,
    0.010650301352143288,
    -0.00849479902535677,
    -0.01181639265269041,
    0.0035230093635618687,
    -0.02178117446601391,
    0.018417175859212875,
    0.006925876252353191,
    -0.016509026288986206,
    -0.013498391024768353,
    -0.03609936311841011,
    -0.028480898588895798,
    0.02312394604086876,
    -0.008275715634226799,
    -0.0012208623811602592,
    -0.0023074476048350334,
    -0.042714279145002365
  ]
}
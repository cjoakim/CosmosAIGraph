{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: system :: monitoring"
  ],
  "description": "prometheus metrics exporter for flask\n# prometheus flask exporter\n\n[![pypi](https://img.shields.io/pypi/v/prometheus-flask-exporter.svg)](https://pypi.python.org/pypi/prometheus-flask-exporter)\n[![pypi](https://img.shields.io/pypi/pyversions/prometheus-flask-exporter.svg)](https://pypi.python.org/pypi/prometheus-flask-exporter)\n[![pypi - downloads](https://img.shields.io/pypi/dm/prometheus-flask-exporter.svg)](https://pypi.python.org/pypi/prometheus-flask-exporter)\n[![coverage status](https://coveralls.io/repos/github/rycus86/prometheus_flask_exporter/badge.svg?branch=master)](https://coveralls.io/github/rycus86/prometheus_flask_exporter?branch=master)\n[![code climate](https://codeclimate.com/github/rycus86/prometheus_flask_exporter/badges/gpa.svg)](https://codeclimate.com/github/rycus86/prometheus_flask_exporter)\n[![test & publish package](https://github.com/rycus86/prometheus_flask_exporter/actions/workflows/test-and-publish.yml/badge.svg)](https://github.com/rycus86/prometheus_flask_exporter/actions/workflows/test-and-publish.yml)\n\nthis library provides http request metrics to export into\n[prometheus](https://prometheus.io/).\nit can also track method invocations using convenient functions.\n\n## installing\n\ninstall using [pip](https://pip.pypa.io/en/stable/quickstart/):\n\n```bash\npip install prometheus-flask-exporter\n```\nor paste it into requirements.txt:\n```\n# newest version\nprometheus-flask-exporter\n\n# or with specific version number\nprometheus-flask-exporter==0.23.0\n```\nand then install dependencies from requirements.txt file as usual:\n```\npip install -r requirements.txt\n```\n\n\n## usage\n\n```python\nfrom flask import flask, request\nfrom prometheus_flask_exporter import prometheusmetrics\n\napp = flask(__name__)\nmetrics = prometheusmetrics(app)\n\n# static information as metric\nmetrics.info('app_info', 'application info', version='1.0.3')\n\n@app.route('/')\ndef main():\n    pass  # requests tracked by default\n\n@app.route('/skip')\n@metrics.do_not_track()\ndef skip():\n    pass  # default metrics are not collected\n\n@app.route('/<item_type>')\n@metrics.do_not_track()\n@metrics.counter('invocation_by_type', 'number of invocations by type',\n         labels={'item_type': lambda: request.view_args['type']})\ndef by_type(item_type):\n    pass  # only the counter is collected, not the default metrics\n\n@app.route('/long-running')\n@metrics.gauge('in_progress', 'long running requests in progress')\ndef long_running():\n    pass\n\n@app.route('/status/<int:status>')\n@metrics.do_not_track()\n@metrics.summary('requests_by_status', 'request latencies by status',\n                 labels={'status': lambda r: r.status_code})\n@metrics.histogram('requests_by_status_and_path', 'request latencies by status and path',\n                   labels={'status': lambda r: r.status_code, 'path': lambda: request.path})\ndef echo_status(status):\n    return 'status: %s' % status, status\n```\n\n## default metrics\n\nthe following metrics are exported by default\n(unless the `export_defaults` is set to `false`).\n\n- `flask_http_request_duration_seconds` (histogram)\n  labels: `method`, `path` and `status`.\n  flask http request duration in seconds for all flask requests.\n- `flask_http_request_total` (counter)\n  labels: `method` and `status`.\n  total number of http requests for all flask requests.\n- `flask_http_request_exceptions_total` (counter)\n  labels: `method` and `status`.\n  total number of uncaught exceptions when serving flask requests.\n- `flask_exporter_info` (gauge)\n  information about the prometheus flask exporter itself (e.g. `version`).\n\nthe prefix for the default metrics can be controlled by the `defaults_prefix` parameter.\nif you don't want to use any prefix, pass the `prometheus_flask_exporter.no_prefix` value in.\nthe buckets on the default request latency histogram can be changed by the `buckets` parameter, and if using a summary for them is more appropriate for your use case, then use the `default_latency_as_histogram=false` parameter.\n\nto register your own *default* metrics that will track all registered\nflask view functions, use the `register_default` function.\n\n```python\napp = flask(__name__)\nmetrics = prometheusmetrics(app)\n\n@app.route('/simple')\ndef simple_get():\n    pass\n    \nmetrics.register_default(\n    metrics.counter(\n        'by_path_counter', 'request count by request paths',\n        labels={'path': lambda: request.path}\n    )\n)\n```\n\n*note:* register your default metrics after all routes have been set up.\nalso note, that gauge metrics registered as default will track the\n`/metrics` endpoint, and this can't be disabled at the moment.\n\nif you want to apply the same metric to multiple (but not all) endpoints,\ncreate its wrapper first, then add to each function.\n\n```python\napp = flask(__name__)\nmetrics = prometheusmetrics(app)\n\nby_path_counter = metrics.counter(\n    'by_path_counter', 'request count by request paths',\n    labels={'path': lambda: request.path}\n)\n\n@app.route('/simple')\n@by_path_counter\ndef simple_get():\n    pass\n    \n@app.route('/plain')\n@by_path_counter\ndef plain():\n    pass\n    \n@app.route('/not/tracked/by/path')\ndef not_tracked_by_path():\n    pass\n```\n\nyou can avoid recording metrics on individual endpoints\nby decorating them with `@metrics.do_not_track()`, or use the \n`excluded_paths` argument when creating the `prometheusmetrics` instance\nthat takes a regular expression (either a single string, or a list) and\nmatching paths will be excluded. these apply to both built-in and user-defined\ndefault metrics, unless you disable it by setting the `exclude_user_defaults`\nargument to `false`. if you have functions that are inherited or otherwise get\nmetrics collected that you don't want, you can use `@metrics.exclude_all_metrics()`\nto exclude both default and non-default metrics being collected from it.\n\n## configuration\n\nby default, the metrics are exposed on the same flask application on the\n`/metrics` endpoint and using the core prometheus registry.\nif this doesn't suit your needs, set the `path` argument to `none` and/or\nthe `export_defaults` argument to `false` plus change the `registry`\nargument if needed.\n\nthe `group_by` constructor argument controls what\nthe default request duration metric is tracked by: endpoint (function)\ninstead of uri path (the default). this parameter also accepts a function\nto extract the value from the request, or a name of a property of the request object.\nexamples:\n\n```python\nprometheusmetrics(app, group_by='path')         # the default\nprometheusmetrics(app, group_by='endpoint')     # by endpoint\nprometheusmetrics(app, group_by='url_rule')     # by url rule\n\ndef custom_rule(req):  # the flask request object\n    \"\"\" the name of the function becomes the label name. \"\"\"\n    return '%s::%s' % (req.method, req.path)\n\nprometheusmetrics(app, group_by=custom_rule)    # by a function\n\n# error: this is not supported:\nprometheusmetrics(app, group_by=lambda r: r.path)\n```\n\n> the `group_by_endpoint` argument is deprecated since 0.4.0,\n> please use the new `group_by` argument.\n\nthe `register_endpoint` allows exposing the metrics endpoint on a specific path.\nit also allows passing in a flask application to register it on but defaults\nto the main one if not defined.\n\nsimilarly, the `start_http_server` allows exposing the endpoint on an\nindependent flask application on a selected http port.\nit also supports overriding the endpoint's path and the http listen address.\n\nyou can also set default labels to add to every request managed by\na `prometheusmetrics` instance, using the `default_labels` argument.\nthis needs to be a dictionary, where each key will become a metric\nlabel name, and the values the label values.\nthese can be constant values, or dynamic functions, see below in the\n[labels](#labels) section.\n\n> the `static_labels` argument is deprecated since 0.15.0,\n> please use the new `default_labels` argument.\n\nif you use another framework over flask (perhaps\n[connexion](https://connexion.readthedocs.io/)) then you might return\nresponses from your endpoints that flask can't deal with by default.\nif that is the case, you might need to pass in a `response_converter`\nthat takes the returned object and should convert that to a flask\nfriendly response.\nsee `connexionprometheusmetrics` for an example.\n\n## labels\n\nwhen defining labels for metrics on functions,\nthe following values are supported in the dictionary:\n\n- a simple static value\n- a no-argument callable\n- a single argument callable that will receive the flask response\n  as the argument\n\nlabel values are evaluated within the request context.\n\n## initial metric values\n_for more info see: https://github.com/prometheus/client_python#labels_\n\nmetrics without any labels will get an initial value.\nmetrics that only have static-value labels will also have an initial value. (except when they are created with the option `initial_value_when_only_static_labels=false`)\nmetrics that have one or more callable-value labels will not have an initial value.\n\n## application information\n\nthe `prometheusmetrics.info(..)` method provides a way to expose\ninformation as a `gauge` metric, the application version for example.\n\nthe metric is returned from the method to allow changing its value\nfrom the default `1`:\n\n```python\nmetrics = prometheusmetrics(app)\ninfo = metrics.info('dynamic_info', 'something dynamic')\n...\ninfo.set(42.1)\n```\n\n## examples\n\nsee some simple examples visualized on a grafana dashboard by running\nthe demo in the [examples/sample-signals](https://github.com/rycus86/prometheus_flask_exporter/tree/master/examples/sample-signals) folder.\n\n![example dashboard](https://github.com/rycus86/prometheus_flask_exporter/raw/master/examples/sample-signals/dashboard.png)\n\n## app factory pattern\n\nthis library also supports the flask [app factory pattern](http://flask.pocoo.org/docs/1.0/patterns/appfactories/). use the `init_app` method to attach the library to one or more application objects. note, that to use this mode, you'll need to use the `for_app_factory()` class method to create the `metrics` instance, or pass in `none` for the `app` in the constructor.\n\n```python\nmetrics = prometheusmetrics.for_app_factory()\n# then later:\nmetrics.init_app(app)\n```\n\n## securing the metrics endpoint\n\nif you wish to have authentication (or any other special handling) on the metrics endpoint,\nyou can use the `metrics_decorator` argument when creating the `prometheusmetrics` instance.\nfor example to integrate with [flask-httpauth](https://github.com/miguelgrinberg/flask-httpauth)\nuse it like it's shown in the example below.\n\n```python\napp = flask(__name__)\nauth = httpbasicauth()\nmetrics = prometheusmetrics(app, metrics_decorator=auth.login_required)\n\n# ... other authentication setup like @auth.verify_password below\n```\n\nsee a full example in the [examples/flask-httpauth](https://github.com/rycus86/prometheus_flask_exporter/tree/master/examples/flask-httpauth) folder.\n\n## custom metrics endpoint\n\nyou can also take full control of the metrics endpoint by generating its contents,\nand managing how it is exposed by yourself.\n\n```python\napp = flask(__name__)\n# path=none to avoid registering a /metrics endpoint on the same flask app\nmetrics = prometheusmetrics(app, path=none)\n\n# later ... generate the response (and its content type) to expose to prometheus\nresponse_data, content_type = metrics.generate_metrics()\n```\n\nsee the related conversation in [issue #135](https://github.com/rycus86/prometheus_flask_exporter/issues/135).\n\n## debug mode\n\nplease note, that changes being live-reloaded, when running the flask\napp with `debug=true`, are not going to be reflected in the metrics.\nsee [https://github.com/rycus86/prometheus_flask_exporter/issues/4](https://github.com/rycus86/prometheus_flask_exporter/issues/4)\nfor more details.\n\nalternatively - since version `0.5.1` - if you set the `debug_metrics`\nenvironment variable, you will get metrics for the latest reloaded code.\nthese will be exported on the main flask app.\nserving the metrics on a different port is not going to work\nmost probably - e.g. `prometheusmetrics.start_http_server(..)` is not\nexpected to work.\n\n## wsgi\n\ngetting accurate metrics for wsgi apps might require a bit more setup.\nsee a working sample app in the `examples` folder, and also the\n[prometheus_flask_exporter#5](https://github.com/rycus86/prometheus_flask_exporter/issues/5) issue.\n\n### multiprocess applications\n\nfor multiprocess applications (wsgi or otherwise), you can find some\nhelper classes in the `prometheus_flask_exporter.multiprocess` module.\nthese provide convenience wrappers for exposing metrics in an\nenvironment where multiple copies of the application will run on a single host.\n\n```python\n# an extension targeted at gunicorn deployments\nfrom prometheus_flask_exporter.multiprocess import gunicornprometheusmetrics\n\napp = flask(__name__)\nmetrics = gunicornprometheusmetrics(app)\n\n# then in the gunicorn config file:\nfrom prometheus_flask_exporter.multiprocess import gunicornprometheusmetrics\n\ndef when_ready(server):\n    gunicornprometheusmetrics.start_http_server_when_ready(8080)\n\ndef child_exit(server, worker):\n    gunicornprometheusmetrics.mark_process_dead_on_child_exit(worker.pid)\n```\n\nalso see the `gunicorninternalprometheusmetrics` class if you want to have\nthe metrics http endpoint exposed internally, on the same flask application.\n\n```python\n# an extension targeted at gunicorn deployments with an internal metrics endpoint\nfrom prometheus_flask_exporter.multiprocess import gunicorninternalprometheusmetrics\n\napp = flask(__name__)\nmetrics = gunicorninternalprometheusmetrics(app)\n\n# then in the gunicorn config file:\nfrom prometheus_flask_exporter.multiprocess import gunicorninternalprometheusmetrics\n\ndef child_exit(server, worker):\n    gunicorninternalprometheusmetrics.mark_process_dead_on_child_exit(worker.pid)\n```\n\nthere's a small wrapper available for [gunicorn](https://gunicorn.org/) and\n[uwsgi](https://uwsgi-docs.readthedocs.io/en/latest/index.html), for everything\nelse you can extend the `prometheus_flask_exporter.multiprocess.multiprocessprometheusmetrics` class\nand implement the `should_start_http_server` method at least.\n\n```python\nfrom prometheus_flask_exporter.multiprocess import multiprocessprometheusmetrics\n\nclass mymultiprocessmetrics(multiprocessprometheusmetrics):\n    def should_start_http_server(self):\n        return this_worker() == primary_worker()\n```\n\nthis should return `true` on one process only, and the underlying\n[prometheus client library](https://github.com/prometheus/client_python)\nwill collect the metrics for all the forked children or siblings.\n\nan additional flask extension for apps with `processes=n` and `threaded=false` exists\nwith the `multiprocessinternalprometheusmetrics` class.\n\n```python\nfrom flask import flask\nfrom prometheus_flask_exporter.multiprocess import multiprocessinternalprometheusmetrics\n\napp = flask(__name__)\nmetrics = multiprocessinternalprometheusmetrics(app)\n\n...\n\nif __name__ == '__main__':\n    app.run('0.0.0.0', 4000, processes=5, threaded=false)\n```\n\n__note:__ this needs the `prometheus_multiproc_dir` environment variable\nto point to a valid, writable directory.\n\nyou'll also have to call the `metrics.start_http_server()` function\nexplicitly somewhere, and the `should_start_http_server` takes care of\nonly starting it once.\nthe [examples](https://github.com/rycus86/prometheus_flask_exporter/tree/master/examples) folder\nhas some working examples on this.\n\nplease also note, that the prometheus client library does not collect process level\nmetrics, like memory, cpu and python gc stats when multiprocessing is enabled.\nsee the [prometheus_flask_exporter#18](https://github.com/rycus86/prometheus_flask_exporter/issues/18)\nissue for some more context and details.\n\na final caveat is that the metrics http server will listen on __any__ paths\non the given http port, not only on `/metrics`, and it is not implemented\nat the moment to be able to change this.\n\n### uwsgi lazy-apps\n\nwhen [uwsgi](https://uwsgi-docs.readthedocs.io/en/latest/) is configured \nto run with [lazy-apps]([lazy-apps](https://uwsgi-docs.readthedocs.io/en/latest/articles/theartofgracefulreloading.html#preforking-vs-lazy-apps-vs-lazy)),\nexposing the metrics endpoint on a separate http server (and port) is not functioning yet.\na workaround is to register the endpoint on the main flask application.\n\n```python\napp = flask(__name__)\nmetrics = uwsgiprometheusmetrics(app)\nmetrics.register_endpoint('/metrics')\n# instead of metrics.start_http_server(port)\n```\n\nsee [#31](https://github.com/rycus86/prometheus_flask_exporter/issues/31)\nfor context, and please let me know if you know a better way!\n\n## connexion integration\n\nthe [connexion](https://connexion.readthedocs.io/) library has some\nsupport to automatically deal with certain response types, for example\ndataclasses, which a plain flask application would not accept.\nto ease the integration, you can use `connexionprometheusmetrics` in\nplace of `prometheusmetrics` that has the `response_converter` set\nappropriately to be able to deal with whatever connexion supports for\nflask integrations.\n\n```python\nimport connexion\nfrom prometheus_flask_exporter import connexionprometheusmetrics\n\napp = connexion.app(__name__)\nmetrics = connexionprometheusmetrics(app)\n```\n\nsee a working sample app in the `examples` folder, and also the\n[prometheus_flask_exporter#61](https://github.com/rycus86/prometheus_flask_exporter/issues/61) issue. \n\nthere's a caveat about this integration, where any endpoints that\ndo not return json responses need to be decorated with\n`@metrics.content_type('...')` as this integration would force them\nto be `application/json` otherwise.\n\n```python\nmetrics = connexionprometheusmetrics(app)\n\n@metrics.content_type('text/plain')\ndef plain_response():\n    return 'plain text'\n```\n\nsee the [prometheus_flask_exporter#64](https://github.com/rycus86/prometheus_flask_exporter/issues/64) issue for more details.\n\n## flask-restful integration\n\nthe [flask-restful library](https://flask-restful.readthedocs.io/) has\nsome custom response handling logic, which can be helpful in some cases.\nfor example, returning `none` would fail on plain flask, but it\nworks on flask-restful.\nto ease the integration, you can use `restfulprometheusmetrics` in\nplace of `prometheusmetrics` that sets the `response_converter` to use\nthe flask-restful `api` response utilities.\n\n```python\nfrom flask import flask\nfrom flask_restful import api\nfrom prometheus_flask_exporter import restfulprometheusmetrics\n\napp = flask(__name__)\nrestful_api = api(app)\nmetrics = restfulprometheusmetrics(app, restful_api)\n```\n\nsee a working sample app in the `examples` folder, and also the\n[prometheus_flask_exporter#62](https://github.com/rycus86/prometheus_flask_exporter/issues/62) issue.\n\n## license\n\nmit\n",
  "docs_url": null,
  "keywords": "prometheus,flask,monitoring,exporter",
  "license": "mit",
  "name": "prometheus-flask-exporter",
  "package_url": "https://pypi.org/project/prometheus-flask-exporter/",
  "project_url": "https://pypi.org/project/prometheus-flask-exporter/",
  "project_urls": {
    "Download": "https://github.com/rycus86/prometheus_flask_exporter/archive/0.23.0.tar.gz",
    "Homepage": "https://github.com/rycus86/prometheus_flask_exporter"
  },
  "release_url": "https://pypi.org/project/prometheus-flask-exporter/0.23.0/",
  "requires_dist": [
    "prometheus-client",
    "flask"
  ],
  "requires_python": "",
  "summary": "prometheus metrics exporter for flask",
  "version": "0.23.0",
  "releases": [],
  "developers": [
    "rycus86@gmail.com",
    "viktor_adam"
  ],
  "kwds": "prometheus_flask_exporter prometheus_multiproc_dir flask_exporter_info prometheus prometheusmetrics",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_prometheus_flask_exporter",
  "homepage": "https://github.com/rycus86/prometheus_flask_exporter",
  "release_count": 70,
  "dependency_ids": [
    "pypi_flask",
    "pypi_prometheus_client"
  ],
  "documentation_summary": "The GitHub repository \"rycus86/prometheus_flask_exporter\" provides a Prometheus exporter for Flask applications. It allows for the collection of HTTP request metrics and method invocation tracking through convenient functions. The exporter can be installed using PIP and is configurable to suit various needs, such as changing the default metrics prefix, adjusting buckets for latency histograms, and excluding certain paths from metrics collection. It supports the Flask app factory pattern and can secure the metrics endpoint with authentication. The exporter is compatible with multiprocess applications and integrates with frameworks like Connexion and Flask-RESTful. It is licensed under the MIT license.",
  "embedding": [
    -0.016053877770900726,
    -0.01668776571750641,
    -0.0005942691350355744,
    -0.038033224642276764,
    0.015061707235872746,
    0.016935808584094048,
    0.013835273683071136,
    -0.009715008549392223,
    0.011830261908471584,
    -0.015488892793655396,
    0.008777957409620285,
    0.00795114878565073,
    -0.02815285325050354,
    0.01809334196150303,
    -0.011024123057723045,
    0.004478550050407648,
    0.03508426994085312,
    -0.017418114468455315,
    0.0035552794579416513,
    0.00848857406526804,
    0.02005012333393097,
    -0.0030660841148346663,
    -0.02866271883249283,
    -0.004792048130184412,
    -0.02512121945619583,
    -0.0018827134044840932,
    0.01059004757553339,
    -0.013435649685561657,
    0.016673985868692398,
    -0.004957410041242838,
    0.027959931641817093,
    0.004340748302638531,
    -0.03006829507648945,
    0.004774823319166899,
    -0.02141435816884041,
    -0.001391795463860035,
    0.018616987392306328,
    -0.005512061528861523,
    0.04178142547607422,
    -0.006710934918373823,
    0.011623559519648552,
    0.018506746739149094,
    0.007551523856818676,
    0.0068556261248886585,
    -0.009701227769255638,
    0.0022857829462736845,
    0.014813665300607681,
    -0.01982964016497135,
    -0.011885382235050201,
    0.02171752229332924,
    0.014551841653883457,
    -0.00480582844465971,
    -0.011706240475177765,
    0.008274981752038002,
    0.02084937132894993,
    -0.015103047713637352,
    0.018286263570189476,
    0.02399124763906002,
    -0.03095022402703762,
    -0.01463452260941267,
    0.032493602484464645,
    -0.0022220497485250235,
    -0.03949391841888428,
    -0.0136561319231987,
    -0.004802383482456207,
    -0.012340127490460873,
    -0.009969941340386868,
    0.023316020146012306,
    -0.005753214005380869,
    0.01787285879254341,
    0.04205702990293503,
    0.04062389209866524,
    0.0073034814558923244,
    -0.02762920781970024,
    0.04850614070892334,
    -0.027422504499554634,
    -0.03434014320373535,
    0.004213281907141209,
    -0.02174508199095726,
    -0.014579402282834053,
    0.007207020185887814,
    -0.025217680260539055,
    -0.014648303389549255,
    0.0345330648124218,
    0.01863076724112034,
    0.02032572589814663,
    -0.0154613321647048,
    0.021910443902015686,
    -0.010211093351244926,
    -0.00849546492099762,
    0.015957416966557503,
    -0.0020325726363807917,
    0.008020048961043358,
    0.010087071917951107,
    0.01296023465692997,
    0.02232384867966175,
    -0.004499220289289951,
    0.031143147498369217,
    0.03210775554180145,
    -0.01871344819664955,
    -0.009990611113607883,
    0.01703226938843727,
    -0.011740691028535366,
    -0.015778275206685066,
    -0.029076123610138893,
    -0.01584717631340027,
    0.00793047808110714,
    -0.037233974784612656,
    0.03599376231431961,
    0.002427029423415661,
    -0.02762920781970024,
    0.0036379604134708643,
    -0.015103047713637352,
    -0.029627330601215363,
    -0.010424685664474964,
    0.0004689558409154415,
    0.03822614625096321,
    0.02396368607878685,
    0.012567499652504921,
    -0.041395582258701324,
    -0.01423489861190319,
    0.02618229202926159,
    0.013049805536866188,
    -0.001538209617137909,
    0.011947393417358398,
    -0.01588851772248745,
    -0.0057118735276162624,
    0.012705301865935326,
    -0.0018809909233823419,
    -0.018176022917032242,
    0.0035070490557700396,
    -0.011761360801756382,
    0.0058531202375888824,
    0.004619796294718981,
    0.009859699755907059,
    -0.004082370549440384,
    -0.042525552213191986,
    0.005208897870033979,
    -0.0005684313364326954,
    -0.014317579567432404,
    0.019857201725244522,
    0.01871344819664955,
    -0.004423429258167744,
    0.013346078805625439,
    -0.03287944570183754,
    0.051427531987428665,
    -0.005077986512333155,
    0.00586345512419939,
    -0.012994684278964996,
    -0.015116828493773937,
    0.0006300113745965064,
    -0.051399972289800644,
    -0.01700470969080925,
    -0.011968063190579414,
    -0.018906369805336,
    0.0009232703014276922,
    -0.002645789412781596,
    0.020243044942617416,
    -0.0012600227491930127,
    0.02288883551955223,
    0.0118509316816926,
    0.025259021669626236,
    -0.0059254658408463,
    -0.027119342237710953,
    -0.005243348423391581,
    0.030895104631781578,
    0.033265288919210434,
    -0.010445356369018555,
    -0.018906369805336,
    0.009198252111673355,
    0.014207337982952595,
    0.012905113399028778,
    -0.023274678736925125,
    0.005753214005380869,
    0.001545099657960236,
    0.02116631530225277,
    -0.023233339190483093,
    0.008130290545523167,
    -0.0005408709985204041,
    0.0011807868722826242,
    0.01668776571750641,
    -0.0054087103344500065,
    0.008323213085532188,
    0.035001590847969055,
    -0.003484656335785985,
    -0.004661136772483587,
    0.0009034613030962646,
    0.0071381195448338985,
    0.0209458339959383,
    0.007840907201170921,
    0.013483880087733269,
    0.04682496190071106,
    0.003586284816265106,
    -0.005215788260102272,
    -0.5604664087295532,
    -0.01620545983314514,
    -0.000893126183655113,
    -0.04704544320702553,
    -0.011595998890697956,
    -0.002497652778401971,
    -0.00250454293563962,
    -0.0034105880185961723,
    -0.019622938707470894,
    0.01565425470471382,
    -0.030867543071508408,
    0.02954464964568615,
    0.0038825583178550005,
    -0.017487013712525368,
    0.025259021669626236,
    -0.01812090165913105,
    0.005977141670882702,
    -0.03406453877687454,
    -0.005801444407552481,
    -0.018506746739149094,
    -0.024707814678549767,
    0.04271847382187843,
    -0.016095219179987907,
    0.027973711490631104,
    -0.011816481128334999,
    0.03894271329045296,
    0.021841542795300484,
    -0.0048368340358138084,
    0.0372890941798687,
    -0.009494525380432606,
    -0.03874979168176651,
    0.050021957606077194,
    -0.0009456630214117467,
    -0.01451050117611885,
    0.053329192101955414,
    0.0023409035056829453,
    -0.03128094971179962,
    0.04318699985742569,
    0.028497356921434402,
    0.043352361768484116,
    -0.0034674310591071844,
    -0.03268652409315109,
    0.01463452260941267,
    0.008874419145286083,
    -0.015957416966557503,
    -0.005856565199792385,
    0.052585065364837646,
    0.01648106426000595,
    0.01982964016497135,
    -0.008550585247576237,
    0.006252744700759649,
    0.015282190404832363,
    0.02174508199095726,
    0.0006842707516625524,
    0.000812598445918411,
    -0.008233641274273396,
    0.026595696806907654,
    0.002828376367688179,
    -0.01755591481924057,
    -0.02505231834948063,
    -0.016825567930936813,
    0.020780472084879875,
    -0.0028197639621794224,
    -0.007799566723406315,
    -0.023302238434553146,
    0.026857519522309303,
    0.002091138157993555,
    -0.02592046931385994,
    0.007958038710057735,
    -0.03318260982632637,
    0.015530233271420002,
    -0.016357041895389557,
    -0.0036069550551474094,
    -0.021262776106595993,
    0.028359554708003998,
    0.040182925760746,
    0.040568772703409195,
    0.016894467175006866,
    -0.00396523904055357,
    0.017611036077141762,
    0.01977452076971531,
    0.01324961706995964,
    -0.026664596050977707,
    -0.027188243344426155,
    0.013904174789786339,
    0.0014658637810498476,
    -0.017514575272798538,
    -0.010100852698087692,
    0.012684631161391735,
    -0.016839347779750824,
    0.005298468749970198,
    0.03070218116044998,
    -0.012567499652504921,
    -0.020684009417891502,
    -0.00508487643674016,
    0.0417538657784462,
    -0.014110877178609371,
    -0.005122771952301264,
    -0.0054913912899792194,
    -0.031143147498369217,
    -0.016357041895389557,
    -0.015764495357871056,
    0.0019550593569874763,
    0.0004840278998017311,
    0.024363311007618904,
    -0.01535109058022499,
    -0.017418114468455315,
    0.01564047485589981,
    0.006325090304017067,
    -0.016508623957633972,
    -0.010224874131381512,
    -0.027188243344426155,
    -0.01925087347626686,
    -0.002421861980110407,
    0.009418735280632973,
    -0.035828400403261185,
    0.04577767103910446,
    0.006142503581941128,
    0.02261323109269142,
    -0.0005180476582609117,
    -0.010665838606655598,
    0.006325090304017067,
    0.03006829507648945,
    0.010038841515779495,
    0.017459454014897346,
    0.021648621186614037,
    0.015709374099969864,
    -0.02924148552119732,
    -0.017349213361740112,
    0.0024063591845333576,
    0.026361433789134026,
    0.004730037413537502,
    0.009604766964912415,
    -0.004709367640316486,
    0.055010370910167694,
    -0.0008496326045133173,
    0.013566561043262482,
    0.012333237566053867,
    0.0033020691480487585,
    -6.53480674372986e-05,
    -0.026127170771360397,
    0.013876614160835743,
    0.01756969466805458,
    0.002799093723297119,
    0.006934862118214369,
    -0.007496403530240059,
    0.007351711858063936,
    -0.00432352302595973,
    0.006697154603898525,
    0.008833078667521477,
    -0.006817731074988842,
    0.009453184902668,
    -0.024886956438422203,
    -0.007834017276763916,
    0.006848736200481653,
    -0.0006097718141973019,
    -0.0019619492813944817,
    -0.0010421241167932749,
    -0.014730984345078468,
    -0.00821297150105238,
    0.0026991874910891056,
    0.024377090856432915,
    -0.0066454787738621235,
    0.009777018800377846,
    -0.01977452076971531,
    -0.0005994366947561502,
    -0.008991549722850323,
    0.018189802765846252,
    0.01308425609022379,
    -0.040816813707351685,
    -0.031143147498369217,
    -0.007275920826941729,
    -0.00040866766357794404,
    0.003934233915060759,
    0.02954464964568615,
    0.008426563814282417,
    -0.026678377762436867,
    0.003910118713974953,
    -0.032438479363918304,
    -0.010727849788963795,
    -0.013635462149977684,
    0.01532353088259697,
    -0.04704544320702553,
    -0.014662083238363266,
    0.034974027425050735,
    -0.0019533366430550814,
    -0.008591925725340843,
    0.028028832748532295,
    -0.019057951867580414,
    0.012023183517158031,
    -0.027215803042054176,
    -0.018286263570189476,
    -0.029930492863059044,
    0.019443796947598457,
    -0.02204824611544609,
    -0.00542938057333231,
    0.010927661322057247,
    0.007861577905714512,
    -0.010149083100259304,
    0.032769203186035156,
    0.026058269664645195,
    0.009652997367084026,
    0.002664737170562148,
    -0.00932916346937418,
    -0.007854687049984932,
    -0.02149703912436962,
    0.02674727700650692,
    -0.011933612637221813,
    -0.005353589542210102,
    0.026003150269389153,
    0.025562183931469917,
    -0.0006670455331914127,
    -0.024184169247746468,
    -0.014441601000726223,
    0.003484656335785985,
    -0.0125399399548769,
    0.012222995981574059,
    0.005177892744541168,
    -0.01841028407216072,
    -0.0036345154512673616,
    -0.016040097922086716,
    0.0008905424037948251,
    -0.0016622310504317284,
    0.01047291699796915,
    -0.001001644879579544,
    -0.0018982160836458206,
    0.009852809831500053,
    0.028580037876963615,
    -0.01113436371088028,
    -0.022668352350592613,
    -0.012932674027979374,
    0.016260581091046333,
    0.010789860039949417,
    -0.010142193175852299,
    0.021827762946486473,
    0.034725986421108246,
    0.006586913485080004,
    -0.031170707195997238,
    0.01810712181031704,
    -0.032162878662347794,
    0.011244605295360088,
    -0.0040858155116438866,
    0.006218294147402048,
    -0.006555907893925905,
    -0.01435892004519701,
    0.01407642662525177,
    0.00398246431723237,
    0.013614791445434093,
    -0.030206095427274704,
    0.005412155296653509,
    -0.007489513140171766,
    0.0462186336517334,
    -0.009901040233671665,
    0.007151899393647909,
    0.015144388191401958,
    0.00025816255947574973,
    -0.0019550593569874763,
    0.014276239089667797,
    0.03395429626107216,
    0.035855960100889206,
    0.010362675413489342,
    0.005970251280814409,
    0.019678058102726936,
    0.008261201903223991,
    0.04258067533373833,
    -0.00989415030926466,
    -0.019691839814186096,
    -0.036159124225378036,
    0.00508832186460495,
    -0.02119387499988079,
    -0.02337113954126835,
    -0.040844373404979706,
    -0.011947393417358398,
    -0.012808652594685555,
    0.020022563636302948,
    -0.003886003280058503,
    0.009026000276207924,
    0.03147387132048607,
    -0.017969319596886635,
    -0.00015276591875590384,
    -0.04828565567731857,
    0.002544160932302475,
    0.01381460390985012,
    -0.03210775554180145,
    0.006989982910454273,
    -0.03508426994085312,
    -0.015695594251155853,
    0.021800203248858452,
    -0.010376455262303352,
    0.012725971639156342,
    0.027119342237710953,
    -0.016549963504076004,
    -0.0013315073447301984,
    -0.019733179360628128,
    -0.01437269989401102,
    0.0071381195448338985,
    0.022778593003749847,
    -0.02426685020327568,
    0.009880369529128075,
    -0.0076410952024161816,
    0.025024758651852608,
    0.012188545428216457,
    -0.013483880087733269,
    0.005501726176589727,
    0.03511182963848114,
    0.0011204987531527877,
    0.01045224629342556,
    -0.031666792929172516,
    -0.007551523856818676,
    -0.009976831264793873,
    -0.003219388425350189,
    0.005818669684231281,
    -0.010493586771190166,
    -0.008157851174473763,
    0.02171752229332924,
    0.018244922161102295,
    0.005794554483145475,
    -0.000699342810548842,
    0.02762920781970024,
    0.02225494757294655,
    -0.014179777354001999,
    -0.026044489815831184,
    -0.014331359416246414,
    -0.017996881157159805,
    0.030178535729646683,
    -0.012367687188088894,
    0.01649484410881996,
    0.008474794216454029,
    -0.038915153592824936,
    -0.0076410952024161816,
    -0.015392431057989597,
    0.009666777215898037,
    0.00689007667824626,
    0.02006390318274498,
    -0.022654572501778603,
    0.04630131646990776,
    -0.01642594300210476,
    0.012946453876793385,
    0.012491708621382713,
    -0.0038205476012080908,
    -0.01977452076971531,
    0.0013375361450016499,
    0.022089585661888123,
    -0.0026854074094444513,
    0.019664278253912926,
    -0.016246801242232323,
    0.017459454014897346,
    0.017170071601867676,
    0.021607279777526855,
    0.016563745215535164,
    0.028580037876963615,
    0.01754213497042656,
    -0.01032822486013174,
    -0.029324166476726532,
    0.00863326620310545,
    0.0055602919310331345,
    0.00989415030926466,
    -0.004202946554869413,
    -0.02316443808376789,
    0.02202068455517292,
    0.02838711626827717,
    0.0183827243745327,
    -0.006783280521631241,
    0.028331995010375977,
    0.02587912790477276,
    0.008626376278698444,
    -0.0016553408931940794,
    0.009019110351800919,
    0.0004982386599294841,
    -0.00934983417391777,
    -0.026650816202163696,
    -0.00316599034704268,
    -0.010004390962421894,
    -0.001367680262774229,
    0.01927843503654003,
    0.01977452076971531,
    -0.0379505418241024,
    -0.033044807612895966,
    0.03764737769961357,
    -0.013049805536866188,
    0.0173354335129261,
    -0.010445356369018555,
    -0.024294409900903702,
    -0.020132804289460182,
    0.003441593376919627,
    -0.0015278744976967573,
    -0.005773884244263172,
    0.0009594431612640619,
    0.007003762759268284,
    0.02090449258685112,
    -0.02058754861354828,
    0.03009585477411747,
    -0.02315065823495388,
    -0.004978080280125141,
    -0.014248678460717201,
    -0.019044172018766403,
    0.012774202041327953,
    -0.0007458507898263633,
    0.023040415719151497,
    0.01074851956218481,
    -0.020022563636302948,
    -0.02425307035446167,
    0.01813468150794506,
    -0.0016269193729385734,
    0.026003150269389153,
    -0.010231764055788517,
    -0.030839983373880386,
    -0.040045127272605896,
    0.00620451383292675,
    -0.02929660677909851,
    0.02255811169743538,
    -0.0038308827206492424,
    0.0018052001250907779,
    0.019030392169952393,
    -0.009115571156144142,
    -0.01074851956218481,
    0.034092098474502563,
    -0.005391485057771206,
    0.014400260522961617,
    0.010093962773680687,
    -0.009804579429328442,
    -0.00586345512419939,
    0.02452867291867733,
    -0.0056980932131409645,
    0.006445666775107384,
    -0.055093053728342056,
    -0.012312566861510277,
    -0.008819297887384892,
    0.041340459138154984,
    0.034698426723480225,
    0.005518951453268528,
    -0.019733179360628128,
    -0.016866907477378845,
    0.02844223566353321,
    0.013821493834257126,
    0.013607901521027088,
    -0.01613655872642994,
    0.012388357892632484,
    -0.0026991874910891056,
    -0.0035897300112992525,
    -0.007634204812347889,
    0.04982903599739075,
    0.011465087532997131,
    0.005928910803049803,
    -0.001195428310893476,
    -0.02339870110154152,
    0.003948013763874769,
    0.002867994364351034,
    0.009026000276207924,
    0.025259021669626236,
    -0.0089295394718647,
    -0.017969319596886635,
    -0.0328243263065815,
    -0.0009249927825294435,
    0.021083634346723557,
    0.0028008162043988705,
    0.008874419145286083,
    -0.029213925823569298,
    -0.008399003185331821,
    0.009522086009383202,
    -0.05093144625425339,
    0.004061700310558081,
    0.005474166013300419,
    -0.018892589956521988,
    -0.04205702990293503,
    0.008295652456581593,
    -0.004475104622542858,
    -0.0231782179325819,
    -0.0040858155116438866,
    -0.03199751675128937,
    -0.002098028315231204,
    -0.009728788398206234,
    -0.01435892004519701,
    0.0007217355305328965,
    -0.008901978842914104,
    -0.003255561226978898,
    -0.02036706730723381,
    0.004395869094878435,
    -0.014262458309531212,
    0.02532792277634144,
    -0.01521328929811716,
    0.019085511565208435,
    0.023288458585739136,
    0.031060466542840004,
    0.017404334619641304,
    -0.007051993627101183,
    0.010121522471308708,
    0.017473233863711357,
    0.02426685020327568,
    0.0007747029885649681,
    -0.016384601593017578,
    -0.015805836766958237,
    0.007765116635710001,
    -0.003196995472535491,
    0.006559352856129408,
    0.03932855650782585,
    -0.00036151372478343546,
    0.015089267864823341,
    -0.008709057234227657,
    0.024308189749717712,
    0.011044792830944061,
    0.0009861422004178166,
    -0.019898541271686554,
    -0.04715568572282791,
    0.005439715459942818,
    0.03128094971179962,
    0.004220171831548214,
    0.03042657859623432,
    -0.04120265692472458,
    -0.04627375677227974,
    0.0077306660823524,
    -0.021400578320026398,
    0.020559988915920258,
    0.008874419145286083,
    0.01809334196150303,
    -0.023040415719151497,
    0.0362418033182621,
    0.03037145733833313,
    -0.0011075797956436872,
    -0.0005003918195143342,
    -0.033596012741327286,
    -0.01089321170002222,
    -0.01806578040122986,
    0.01130661554634571,
    -0.0018861584831029177,
    0.010397125966846943,
    0.009935490787029266,
    0.007489513140171766,
    0.001958504319190979,
    0.012002513743937016,
    -0.0051262169145047665,
    -0.01868588849902153,
    0.019361115992069244,
    -0.012450368143618107,
    -0.031942397356033325,
    -0.011885382235050201,
    -0.02226872742176056,
    -0.030178535729646683,
    0.005673978012055159,
    -0.0033847501035779715,
    -0.01592985726892948,
    0.0018913260428234935,
    -0.015957416966557503,
    -0.016784226521849632,
    -0.0024804275017231703,
    -0.006376766134053469,
    0.046935200691223145,
    0.018341384828090668,
    0.013063585385680199,
    0.037482015788555145,
    -0.01842406578361988,
    -0.009156911633908749,
    -0.01867210865020752,
    -0.013304738327860832,
    -0.017404334619641304,
    0.003951459191739559,
    0.01016975287348032,
    -0.007751336321234703,
    0.014345139265060425,
    0.010707179084420204,
    -0.0010447078384459019,
    -0.023867225274443626,
    -0.01521328929811716,
    0.04291139915585518,
    0.01732165366411209,
    0.0020119023974984884,
    -0.03817102313041687,
    -0.01586095616221428,
    0.00017860370280686766,
    0.02428063005208969,
    -0.016246801242232323,
    -0.0036069550551474094,
    0.04682496190071106,
    -0.01865832693874836,
    -0.03119826689362526,
    0.04216726869344711,
    0.02281993441283703,
    0.01867210865020752,
    0.023329799994826317,
    -0.01145130768418312,
    -0.008722837083041668,
    -0.028221754357218742,
    -0.020022563636302948,
    0.0040410300716757774,
    0.015309750102460384,
    0.014469160698354244,
    -0.004268402699381113,
    0.007916698232293129,
    0.03814346343278885,
    -0.016233021393418312,
    -0.0018913260428234935,
    0.003586284816265106,
    -0.006101163104176521,
    0.03541499376296997,
    -0.008033829741179943,
    0.008288762532174587,
    -0.013008465059101582,
    -0.02729848399758339,
    0.0030161309987306595,
    -0.015364871360361576,
    -0.0030746967531740665,
    -0.00313326227478683,
    -0.006583468057215214,
    0.013056695461273193,
    -0.013973075896501541,
    -0.027463845908641815,
    -0.026251191273331642,
    0.0004973774193786085,
    -0.001439164741896093,
    0.015723155811429024,
    -0.01612277887761593,
    -0.003744756570085883,
    0.029351726174354553,
    -0.017693717032670975,
    -0.014799884520471096,
    -0.03152899071574211,
    0.011802701279520988,
    0.015612914226949215,
    0.014923905953764915,
    0.009494525380432606,
    -0.010410905815660954,
    0.04269091412425041,
    -0.010121522471308708,
    0.022502990439534187,
    0.015020366758108139,
    0.003408865537494421,
    -0.0209458339959383,
    0.025865348055958748,
    -0.004936739802360535,
    0.007599754724651575,
    0.033044807612895966,
    -0.00029691922827623785,
    -0.03199751675128937,
    -0.0178590789437294,
    -0.015447552315890789,
    0.028249314054846764,
    0.022447869181632996,
    0.013959295116364956,
    0.0018017550464719534,
    0.03252116218209267,
    0.010975891724228859,
    -0.042773596942424774,
    -0.006125278305262327,
    0.006311310455203056,
    -0.008206081576645374,
    -0.015364871360361576,
    0.013752592727541924,
    -0.002175541827455163,
    0.01565425470471382,
    0.012353907339274883,
    0.00380332232452929,
    0.01920953392982483,
    -0.015406211838126183,
    -0.04076169431209564,
    -0.027670547366142273,
    0.004475104622542858,
    -0.024873176589608192,
    0.021593499928712845,
    -0.013573450967669487,
    -0.042194828391075134,
    -0.024735374376177788,
    0.02871784009039402,
    0.020752910524606705,
    -0.013911064714193344,
    0.002067022956907749,
    0.014896346256136894,
    -0.0037654268089681864,
    0.0250798799097538,
    -0.014675863087177277,
    -0.011313505470752716,
    -0.04236019030213356,
    0.03321016952395439,
    -0.029076123610138893,
    -0.02618229202926159,
    0.006621363572776318,
    0.0372890941798687,
    0.010121522471308708,
    -0.03516695275902748,
    -0.02760164812207222,
    -0.02477671578526497,
    -0.01809334196150303,
    -0.019016612321138382,
    -0.02484561689198017,
    0.014028196223080158,
    -0.0118509316816926,
    0.01980208046734333,
    -0.0014641412999480963,
    -0.00544660585001111,
    0.012312566861510277,
    0.013297848403453827,
    0.0012763866689056158,
    -0.010782970115542412,
    0.016357041895389557,
    0.0016071103746071458,
    0.009012220427393913,
    -0.026940200477838516,
    -0.03706861287355423,
    -0.008185410872101784,
    0.032217998057603836,
    -0.0013030857080593705,
    -0.007475733291357756,
    0.055616699159145355,
    0.004316633101552725,
    -0.0154613321647048,
    -0.03362357243895531,
    -0.020766690373420715,
    0.008612595498561859,
    -0.0038549979217350483,
    0.03483622893691063,
    -0.04969123378396034,
    -0.01266396138817072,
    0.010817420668900013,
    0.027546526864171028,
    0.003520829137414694,
    -3.041322997887619e-05,
    0.023343579843640327,
    -0.017225190997123718,
    0.01157532911747694,
    -0.009845919907093048,
    -0.0189752709120512,
    0.015268409624695778,
    0.004361418541520834,
    0.0065662432461977005,
    -0.015668034553527832,
    0.024886956438422203,
    0.03566303849220276,
    0.0018155352445319295,
    -0.025162560865283012,
    -0.024101488292217255,
    0.02203446440398693,
    -0.030729742720723152,
    0.02003634348511696,
    0.03770250082015991,
    0.0024718150962144136,
    -0.01127216499298811,
    0.012078304775059223,
    0.025259021669626236,
    -0.0040995958261191845,
    -0.006097717676311731,
    -0.01211275439709425,
    -0.0303990188986063,
    0.007413722574710846,
    -0.012725971639156342,
    0.021083634346723557,
    -0.027257142588496208,
    0.0023409035056829453,
    0.019126852974295616,
    0.012505489401519299,
    -0.027174461632966995,
    -0.015185728669166565,
    0.005939246155321598,
    -0.013725033029913902,
    0.002225494710728526,
    -0.0007462814101018012,
    0.010782970115542412,
    -0.03866710886359215,
    -0.014868785627186298,
    0.0027749782893806696,
    -0.014565622434020042,
    0.011051682755351067,
    0.19865469634532928,
    0.02484561689198017,
    -0.010562487877905369,
    0.03618668392300606,
    0.014896346256136894,
    0.01046602614223957,
    -0.025768887251615524,
    0.012174765579402447,
    -0.0031763254664838314,
    0.03097778558731079,
    0.00048531978973187506,
    -0.038281265646219254,
    -0.012712191790342331,
    0.005308804102241993,
    -0.0030815869104117155,
    0.007117449305951595,
    -0.023646743968129158,
    -0.03927343711256981,
    0.0016854850109666586,
    0.00404447503387928,
    0.0006842707516625524,
    -0.021359236910939217,
    -0.017211411148309708,
    -0.005270908586680889,
    0.03345821052789688,
    -0.006769500207155943,
    -0.013153156265616417,
    0.015089267864823341,
    0.03252116218209267,
    0.014910126104950905,
    -0.005891015753149986,
    -0.005264018662273884,
    0.02838711626827717,
    0.003879113122820854,
    -0.03767494112253189,
    0.003522551618516445,
    0.01586095616221428,
    0.0012815542286261916,
    0.03761981800198555,
    0.015006586909294128,
    0.03290700539946556,
    -0.02366052381694317,
    0.013346078805625439,
    -0.03811590373516083,
    0.008185410872101784,
    -0.0183827243745327,
    -0.027119342237710953,
    -0.01521328929811716,
    -0.0015855788951739669,
    0.018548086285591125,
    -0.03185971453785896,
    -0.0025579410139471292,
    0.011940502561628819,
    0.011065463535487652,
    0.015006586909294128,
    -0.019305994734168053,
    -0.00662480853497982,
    0.017487013712525368,
    0.0023564063012599945,
    -0.008715947158634663,
    -0.01588851772248745,
    0.0351945124566555,
    -0.015406211838126183,
    -0.011458197608590126,
    -0.04263579472899437,
    0.013104925863444805,
    -0.029958052560687065,
    -0.002525213174521923,
    -0.0008603983442299068,
    -0.0028266538865864277,
    -0.021262776106595993,
    -0.004113375674933195,
    -0.04153338074684143,
    -0.0024253069423139095,
    0.0031694353092461824,
    -0.014524281956255436,
    0.010417795740067959,
    0.021028514951467514,
    0.033899176865816116,
    0.04156094416975975,
    0.01169935055077076,
    0.007971818558871746,
    -0.02452867291867733,
    0.019912321120500565,
    -0.013690582476556301,
    0.005105546675622463,
    0.038997832685709,
    -0.014400260522961617,
    -0.010569377802312374,
    -0.009646107442677021,
    -0.02203446440398693,
    -0.03015097603201866,
    0.00025385626940988004,
    0.0033089593052864075,
    -0.005797999445348978,
    -0.006390545982867479,
    0.0025338258128613234,
    0.020284386351704597,
    0.0025166005361825228,
    0.0028852196410298347,
    -0.033899176865816116,
    0.05826248973608017,
    0.002707800129428506,
    -0.004819608759135008,
    -0.009990611113607883,
    -0.015447552315890789,
    -0.026278752833604813,
    0.013904174789786339,
    0.002866271883249283,
    -0.019126852974295616,
    -0.020532429218292236,
    -0.020808031782507896,
    -0.0006739356322214007,
    -0.0062010688707232475,
    -0.0022909503895789385,
    -0.01806578040122986,
    -0.027753228321671486,
    0.028276875615119934,
    -0.039962444454431534,
    0.03144631162285805,
    0.00320388562977314,
    -0.0008151822257786989,
    -0.0026475118938833475,
    -0.014868785627186298,
    -0.010162862949073315,
    -0.002561385976150632,
    -0.02062889002263546,
    0.01842406578361988,
    -0.01671532541513443,
    -0.024404652416706085,
    0.019884761422872543,
    -0.02899344265460968,
    0.010583157651126385,
    -0.006979647558182478,
    -0.00446476973593235,
    -0.020504867658019066,
    0.002859381726011634,
    0.003286566585302353,
    -0.0023770765401422977,
    0.014276239089667797,
    -0.044179171323776245,
    -0.0040169148705899715,
    0.014179777354001999,
    0.0029610104393213987,
    0.003858442883938551,
    0.002594113815575838,
    0.002296118065714836,
    0.039990004152059555,
    0.017418114468455315,
    -0.004199501592665911,
    0.021000953391194344,
    0.0009603044600225985,
    -0.008343882858753204,
    -0.027808349579572678,
    0.021869102492928505,
    -0.031005345284938812,
    -0.01759725622832775,
    -0.04260823503136635,
    0.02145569957792759,
    -0.01338052935898304,
    -0.021510818973183632,
    -0.02620985172688961,
    -0.005112437065690756,
    0.004909179639071226,
    -0.027105562388896942,
    -0.0009904485195875168,
    -0.17120462656021118,
    0.0020394627936184406,
    0.014124657027423382,
    -0.03872223198413849,
    0.016632644459605217,
    -0.022172266617417336,
    0.01981586031615734,
    -0.012767312116920948,
    -0.0011213599937036633,
    -0.003730976488441229,
    0.021345457062125206,
    -0.02899344265460968,
    -0.011196374893188477,
    -0.05520329624414444,
    0.0020997507963329554,
    -0.03150143101811409,
    0.009088011458516121,
    -0.006604138296097517,
    0.025245241820812225,
    0.01061071828007698,
    0.020298166200518608,
    -0.02509365975856781,
    0.019374895840883255,
    0.015034147538244724,
    -0.0029558429960161448,
    -0.0008324073860421777,
    -0.015943637117743492,
    0.008977769874036312,
    -0.01462074276059866,
    -0.02844223566353321,
    -0.023026635870337486,
    0.006879741791635752,
    0.014290018938481808,
    0.013366748578846455,
    0.016260581091046333,
    0.010686509311199188,
    0.0035897300112992525,
    -0.004437209572643042,
    0.0064249965362250805,
    0.017390552908182144,
    0.03034389764070511,
    0.01926465518772602,
    0.014345139265060425,
    -0.023260898888111115,
    0.002650957088917494,
    0.011175704188644886,
    0.012064523994922638,
    -0.030454138293862343,
    0.014855005778372288,
    0.004316633101552725,
    0.017679937183856964,
    -0.0011325563536956906,
    0.0030798641964793205,
    -0.007585974410176277,
    0.023205777630209923,
    -0.010969001799821854,
    0.0051262169145047665,
    0.01227122638374567,
    0.024955857545137405,
    -0.012484818696975708,
    -0.01297401450574398,
    -0.021138755604624748,
    0.023067977279424667,
    -0.01927843503654003,
    -0.018341384828090668,
    -0.03535987436771393,
    -0.014124657027423382,
    0.04770689085125923,
    0.002601003972813487,
    -0.0015726600540801883,
    0.019030392169952393,
    -0.002676794771105051,
    -0.014221117831766605,
    0.00015976365830283612,
    0.01871344819664955,
    0.03687569126486778,
    -0.02846979722380638,
    0.02315065823495388,
    0.0161503404378891,
    -0.002695742528885603,
    -0.0010283439187332988,
    0.02651301585137844,
    0.0029834031593054533,
    -0.004678362049162388,
    0.01521328929811716,
    -0.02535548247396946,
    0.0017251030076295137,
    -0.009122461080551147,
    -0.008164741098880768,
    0.003892893437296152,
    0.00508832186460495,
    -0.01620545983314514,
    -0.011299725621938705,
    -0.02816663309931755,
    0.011988733895123005,
    0.023908566683530807,
    -0.005963361356407404,
    0.0034502060152590275,
    0.010803639888763428,
    -0.020243044942617416,
    -0.002270280383527279,
    0.009232702665030956,
    -0.031914833933115005,
    0.02255811169743538,
    0.014345139265060425,
    0.03839150816202164,
    -0.012560609728097916,
    -0.007275920826941729,
    0.042249951511621475,
    -0.008970879949629307,
    -0.006311310455203056,
    0.018768569454550743,
    0.008833078667521477,
    0.029351726174354553,
    -0.01643972285091877,
    0.011375516653060913,
    0.03321016952395439,
    0.01645350269973278,
    0.02674727700650692,
    -0.0036793008912354708,
    0.029048563912510872,
    -0.008185410872101784,
    -0.0007686741882935166,
    0.015103047713637352,
    -0.0055602919310331345,
    -0.024115268141031265,
    -0.09932734817266464,
    -0.017941759899258614,
    0.020518647506833076,
    -0.006218294147402048,
    0.018010661005973816,
    0.01919575408101082,
    -0.018892589956521988,
    -0.012615730054676533,
    0.012092084623873234,
    -0.019057951867580414,
    -0.019430017098784447,
    0.01423489861190319,
    -0.013401199132204056,
    -0.007896027527749538,
    0.005932356230914593,
    -0.028828080743551254,
    -8.235794666688889e-05,
    -0.007840907201170921,
    -0.00508832186460495,
    0.0011627004714682698,
    -0.005350144580006599,
    -0.02032572589814663,
    -0.002974790520966053,
    0.02809773199260235,
    -0.02090449258685112,
    0.0022668351884931326,
    -0.0312533862888813,
    0.02177264168858528,
    -0.00424773246049881,
    0.0026027264539152384,
    0.013311628252267838,
    -0.006538682617247105,
    0.0012462426675483584,
    -0.0039583491161465645,
    -0.0008298236061818898,
    -2.4438240870949812e-05,
    -0.019443796947598457,
    -0.01521328929811716,
    0.040541213005781174,
    -0.01898905076086521,
    0.019388675689697266,
    -0.029131244868040085,
    0.01696336828172207,
    -0.021910443902015686,
    -0.019857201725244522,
    -0.0034054203424602747,
    -0.014110877178609371,
    0.0065627978183329105,
    0.016949588432908058,
    -0.03902539610862732,
    -0.000456036941614002,
    -0.018837470561265945,
    0.004058255348354578,
    -0.028607597574591637,
    0.005529286339879036,
    -0.04078925400972366,
    -0.00626996997743845,
    0.025010978803038597,
    -0.017459454014897346,
    0.0021893219090998173,
    -0.0007217355305328965,
    0.0036414056085050106,
    0.024928297847509384,
    0.002010179916396737,
    0.0064938971772789955,
    -0.008020048961043358,
    -0.00109638343565166,
    0.015530233271420002,
    0.002061855513602495,
    -0.00920514203608036,
    -0.013139376416802406,
    -0.010851871222257614,
    -0.018217362463474274,
    0.011217044666409492,
    -0.031170707195997238,
    -0.01649484410881996,
    0.013042915612459183,
    -0.01045224629342556,
    -0.00380332232452929,
    -0.034147221595048904,
    -0.022640792652964592,
    7.632913184352219e-05,
    -0.04266335442662239,
    -0.009825249202549458,
    0.00230128550902009,
    0.02007768303155899,
    0.01947135664522648,
    0.021538380533456802,
    0.025134999305009842,
    -0.03398185968399048,
    0.019926100969314575,
    -0.006349205505102873,
    0.03315505012869835,
    0.017748838290572166,
    -0.024749156087636948,
    -0.03161167353391647,
    0.00977012887597084,
    0.007896027527749538,
    0.00903289020061493,
    0.0005180476582609117,
    -0.026609476655721664,
    -0.027436286211013794,
    -0.0841691792011261,
    -0.001793142408132553,
    0.035222072154283524,
    -0.005205452907830477,
    -0.0013332298258319497,
    -0.052033860236406326,
    -0.007909808307886124,
    -0.010507366620004177,
    0.01559913344681263,
    0.013539000414311886,
    -0.014427820220589638,
    -0.0034192006569355726,
    0.0025321030989289284,
    0.0094876354560256,
    -0.013228947296738625,
    -0.00418227631598711,
    0.053907960653305054,
    0.007427502889186144,
    0.0261960718780756,
    0.004881619475781918,
    0.006655814126133919,
    -0.010982782579958439,
    -0.0024011917412281036,
    -0.02197934500873089,
    -0.015158168971538544,
    -0.006807395722717047,
    0.025837788358330727,
    0.03511182963848114,
    -0.013890394940972328,
    -0.04321455955505371,
    0.02479049563407898,
    0.012071413919329643,
    -0.01449672132730484,
    -0.010920771397650242,
    0.01169935055077076,
    0.009081121534109116,
    0.02309553697705269,
    -0.006142503581941128,
    0.031914833933115005,
    -0.004640466533601284,
    -0.020725350826978683,
    -0.008564365096390247,
    0.021538380533456802,
    0.0029041673988103867,
    -0.013545890338718891,
    0.020463528111577034,
    -0.005439715459942818,
    0.011361736804246902,
    0.017183851450681686,
    0.005959916394203901,
    0.027822129428386688,
    -0.011906052939593792,
    -0.0340094193816185,
    -0.013132486492395401,
    0.008116510696709156,
    -0.026361433789134026,
    -0.028276875615119934,
    -0.021000953391194344,
    -0.028221754357218742,
    -0.013242727145552635,
    0.044206731021404266,
    0.0076410952024161816,
    0.0027732558082789183,
    -0.006617918610572815,
    0.012856882996857166,
    -0.0004564675909932703,
    -0.05159289389848709,
    -0.03709617257118225,
    -0.000519770139362663,
    0.0070692189037799835,
    -0.04191922768950462,
    -0.017983099445700645,
    0.009646107442677021,
    -0.003219388425350189,
    0.017170071601867676,
    -0.02339870110154152,
    -0.017514575272798538,
    -0.01409020647406578,
    -0.03169435262680054,
    0.029737571254372597,
    0.03591107949614525,
    -0.02760164812207222,
    -0.008950209245085716,
    0.015736935660243034,
    0.04178142547607422,
    -0.005656752735376358,
    -0.01267774123698473,
    -0.01265707053244114,
    0.009969941340386868,
    0.006393990945070982,
    -0.01841028407216072,
    -0.008640156127512455,
    0.0009249927825294435,
    0.038281265646219254,
    -0.011106804013252258,
    -0.001875823363661766,
    -0.019292214885354042,
    -0.0062837498262524605,
    0.017776397988200188,
    0.00959787704050541,
    0.008660826832056046,
    -4.3036063289036974e-05,
    0.010486696846783161,
    0.011161924339830875,
    -0.0007936506881378591,
    -0.008777957409620285,
    -0.003262451384216547,
    -0.03761981800198555,
    0.0027577532455325127,
    0.0088950889185071,
    -0.011478867381811142,
    -0.004916069563478231,
    -0.015805836766958237,
    0.008715947158634663,
    -0.031032904982566833,
    0.011437526904046535,
    0.01047291699796915,
    0.028083952143788338,
    0.013008465059101582,
    -0.005425935611128807,
    0.010197313502430916,
    0.016343262046575546,
    -0.003603510092943907,
    -0.014593182131648064,
    0.008130290545523167,
    0.0445098951458931,
    -0.014427820220589638,
    -0.011058572679758072,
    0.0008509244653396308,
    -0.00169151381123811,
    -0.0005443160771392286,
    0.010259323753416538,
    -0.019705619663000107,
    -0.04966367408633232,
    -0.02760164812207222,
    -0.010975891724228859,
    0.002938617719337344,
    -0.021097414195537567,
    -0.010362675413489342,
    0.07568059861660004,
    -0.004444099497050047,
    -0.01867210865020752,
    0.02425307035446167,
    0.01535109058022499,
    0.009356724098324776,
    -0.008695276454091072,
    -0.014979026280343533,
    -0.004571565892547369,
    -0.005791109520941973,
    0.015723155811429024,
    0.018796129152178764,
    -0.019609158858656883,
    -0.03367869555950165,
    -0.014248678460717201,
    0.001488256617449224,
    -0.027463845908641815,
    -0.0004172802728135139,
    0.012705301865935326,
    0.012512379325926304,
    0.009680557996034622,
    0.0015623249346390367,
    -0.01643972285091877,
    -0.009005330502986908,
    -0.026306312531232834,
    0.008323213085532188,
    0.03938367962837219,
    0.041340459138154984,
    -0.005467275623232126,
    -0.02587912790477276,
    0.017349213361740112,
    0.013366748578846455,
    0.0038653330411762,
    -0.0014917015796527267,
    -0.0075101833790540695,
    0.024129047989845276,
    -0.006590358447283506,
    -0.024721594527363777,
    0.013339188881218433,
    0.015309750102460384,
    -0.011499538086354733,
    0.0036207353696227074,
    -0.011816481128334999,
    -0.022144706919789314,
    0.011795811355113983,
    0.008660826832056046,
    -0.007703105919063091,
    -0.0016010815743356943,
    -0.02428063005208969
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "=======\nplaster\n=======\n\n.. image:: https://img.shields.io/pypi/v/plaster.svg\n    :target: https://pypi.python.org/pypi/plaster\n\n.. image:: https://github.com/pylons/plaster/workflows/build%20and%20test/badge.svg?branch=master\n        :target: https://github.com/pylons/plaster/actions?query=workflow%3a%22build+and+test%22\n        :alt: master ci status\n\n.. image:: https://readthedocs.org/projects/plaster/badge/?version=latest\n    :target: https://readthedocs.org/projects/plaster/?badge=latest\n    :alt: documentation status\n\n``plaster`` is a loader interface around multiple config file formats. it\nexists to define a common api for applications to use when they wish to load\nconfiguration. the library itself does not aim to handle anything except\na basic api that applications may use to find and load configuration settings.\nany specific constraints should be implemented in a pluggable loader which can\nbe registered via an entrypoint.\n\nsee https://docs.pylonsproject.org/projects/plaster/en/latest/ or\n``docs/index.rst`` in this distribution for detailed documentation.\n\n1.1.2 (2022-11-20)\n==================\n\n- fix a bug in which plaster would crash harder than expected if a uri\n  is specified to a distribution that does not have the specified entry points.\n  now a loadernotfound exception will be raised instead of a bad unpacking\n  of tuples.\n\n1.1.1 (2022-11-20)\n==================\n\n- add support for python 3.11.\n\n- fix an bug introduced in 1.1 on some systems where\n  ``plaster.exceptions.multipleloadersfound`` would be raised due to\n  ``lib`` and ``lib64`` being symlinked to each other and both added to the\n  ``sys.path``.\n  see https://github.com/pylons/plaster/pull/27\n\n1.1 (2022-10-06)\n================\n\n- drop support for python 2.7, 3.4, 3.5, 3.6.\n\n- add support for python 3.8, 3.9, 3.10.\n\n- drop runtime dependency on setuptools / pkg_resources by switching to\n  ``importlib.metadata``.\n\n1.0 (2017-10-11)\n================\n\n- improve the exception message for ``invaliduri`` to show the ``config_uri``.\n  see https://github.com/pylons/plaster/pull/17\n\n0.5 (2017-06-02)\n================\n\n- when a scheme is not supplied, ``plaster.parse_uri`` will now autogenerate\n  a scheme from the file extension with the format ``file+<ext>`` instead of\n  simply ``<ext>`` (for example, ``file+ini`` instead of ``ini``).\n  see https://github.com/pylons/plaster/pull/16\n\n- absolute lookups are now pulled from the start of the scheme instead of\n  the end. this means that if you want to explicitly define the package that\n  the loader is pulled from, use ``package+scheme`` instead of\n  ``scheme+package``.\n  see https://github.com/pylons/plaster/pull/16\n\n0.4 (2017-03-30)\n================\n\n- removed the ``plaster.nosectionerror`` exception. it's expected that\n  individual loaders should return an empty dictionary of settings in the\n  case that a section cannot be found.\n  see https://github.com/pylons/plaster/pull/12\n\n- expect the ``wsgi`` protocol to raise ``lookuperror`` exceptions when\n  a named wsgi component cannot be found.\n  see https://github.com/pylons/plaster/pull/12\n\n0.3 (2017-03-27)\n================\n\n- lookup now works differently. first \"foo+bar\" looks for an installed project\n  distribution named \"bar\" with a loader named \"foo\". if this fails then it\n  looks for any loader named \"foo+bar\".\n\n- rename the loader entry point to ``plaster.loader_factory``.\n\n- add the concept of protocols to ``plaster.get_loader`` and\n  ``plaster.find_loaders``.\n\n- ``plaster.find_loaders`` now works on just schemes and protocols\n  instead of full ``plasterurl`` objects and implements the lookup\n  algorithm for finding loader factories.\n\n- change the ``iloaderinfo`` interface to avoid being coupled to a\n  particular uri. ``iloaderinfo.load`` now takes a ``config_uri``\n  parameter.\n\n- add a ``options`` dictionary to ``plasterurl`` containing any arguments\n  decoded from the query string. loaders may use these for whatever they wish\n  but one good option is default values in a config file.\n\n- define the ``iwsgiprotocol`` interface which addons can use to implement\n  a loader that can return full wsgi apps, servers and filters.\n\n- the scheme is now case-insensitive.\n\n0.2 (2016-06-15)\n================\n\n- allow ``config_uri`` syntax ``scheme:path`` alongside ``scheme://path``.\n  see https://github.com/pylons/plaster/issues/3\n\n- improve errors to show the user-supplied values in the error message.\n  see https://github.com/pylons/plaster/pull/4\n\n- add ``plaster.find_loaders`` which can be used by people who need a way\n  to recover when ambiguous loaders are discovered via ``plaster.get_loader``.\n  see https://github.com/pylons/plaster/pull/5\n\n- rename ``plaster.loader`` to ``plaster.iloader`` to signify its purpose\n  as an interface with no actual implementation.\n  see https://github.com/pylons/plaster/pull/5\n\n- introduce ``plaster.iloaderfactory`` to document what the entry point targets\n  are expected to implement.\n  see https://github.com/pylons/plaster/pull/5\n\n0.1 (2016-06-12)\n================\n\n- initial release.\n",
  "docs_url": null,
  "keywords": "plaster,pastedeploy,ini,config",
  "license": "",
  "name": "plaster",
  "package_url": "https://pypi.org/project/plaster/",
  "project_url": "https://pypi.org/project/plaster/",
  "project_urls": {
    "Homepage": "https://docs.pylonsproject.org/projects/plaster/en/latest/"
  },
  "release_url": "https://pypi.org/project/plaster/1.1.2/",
  "requires_dist": [
    "importlib-metadata ; python_version < \"3.8\"",
    "Sphinx ; extra == 'docs'",
    "pylons-sphinx-themes ; extra == 'docs'",
    "pytest ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'"
  ],
  "requires_python": ">=3.7",
  "summary": "a loader interface around multiple config file formats.",
  "version": "1.1.2",
  "releases": [],
  "developers": [
    "michael_merickel",
    "pylons-discuss@googlegroups.com"
  ],
  "kwds": "plasterurl plaster importlib pkg_resources loader_factory",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_plaster",
  "homepage": "https://docs.pylonsproject.org/projects/plaster/en/latest/",
  "release_count": 9,
  "dependency_ids": [
    "pypi_importlib_metadata",
    "pypi_pylons_sphinx_themes",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_sphinx"
  ]
}
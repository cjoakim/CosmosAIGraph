{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "a toolkit for reinforcement learning in card games\n# rlcard: a toolkit for reinforcement learning in card games\n<img width=\"500\" src=\"https://dczha.com/files/rlcard/logo.jpg\" alt=\"logo\" />\n\n[![testing](https://github.com/datamllab/rlcard/actions/workflows/python-package.yml/badge.svg)](https://github.com/datamllab/rlcard/actions/workflows/python-package.yml)\n[![pypi version](https://badge.fury.io/py/rlcard.svg)](https://badge.fury.io/py/rlcard)\n[![coverage status](https://coveralls.io/repos/github/datamllab/rlcard/badge.svg)](https://coveralls.io/github/datamllab/rlcard?branch=master)\n[![downloads](https://pepy.tech/badge/rlcard)](https://pepy.tech/project/rlcard)\n[![downloads](https://pepy.tech/badge/rlcard/month)](https://pepy.tech/project/rlcard)\n[![license: mit](https://img.shields.io/badge/license-mit-yellow.svg)](https://opensource.org/licenses/mit)\n\n[\u4e2d\u6587\u6587\u6863](readme.zh-cn.md)\n\nrlcard is a toolkit for reinforcement learning (rl) in card games. it supports multiple card environments with easy-to-use interfaces for implementing various reinforcement learning and searching algorithms. the goal of rlcard is to bridge reinforcement learning and imperfect information games. rlcard is developed by [data lab](http://faculty.cs.tamu.edu/xiahu/) at rice and texas a&m university, and community contributors.\n\n*   official website: [https://www.rlcard.org](https://www.rlcard.org)\n*   tutorial in jupyter notebook: [https://github.com/datamllab/rlcard-tutorial](https://github.com/datamllab/rlcard-tutorial)\n*   paper: [https://arxiv.org/abs/1910.04376](https://arxiv.org/abs/1910.04376)\n*   video: [youtube](https://youtu.be/krk2jmsdkzc)\n*   gui: [rlcard-showdown](https://github.com/datamllab/rlcard-showdown)\n*   dou dizhu demo: [demo](https://douzero.org/)\n*   resources: [awesome-game-ai](https://github.com/datamllab/awesome-game-ai)\n*   related project: [douzero project](https://github.com/kwai/douzero)\n*   zhihu: https://zhuanlan.zhihu.com/p/526723604\n*   miscellaneous resources: have you heard of data-centric ai? please check out our [data-centric ai survey](https://arxiv.org/abs/2303.10158) and [awesome data-centric ai resources](https://github.com/daochenzha/data-centric-ai)!\n\n**community:**\n*  **slack**: discuss in our [#rlcard-project](https://join.slack.com/t/rlcard/shared_invite/zt-rkvktsaq-xkmwz8bfkupcm6zgho01xg) slack channel.\n*  **qq group**: join our qq group to discuss. password: rlcardqqgroup\n\t*  group 1: 665647450\n\t*  group 2: 117349516\n\n**news:**\n*   we have updated the tutorials in jupyter notebook to help you walk through rlcard! please check [rlcard tutorial](https://github.com/datamllab/rlcard-tutorial).\n*   all the algorithms can suppport [pettingzoo](https://github.com/pettingzoo-team/pettingzoo) now. please check [here](examples/pettingzoo). thanks the contribtuion from [yifei cheng](https://github.com/ycheng517).\n*   please follow [douzero](https://github.com/kwai/douzero), a strong dou dizhu ai and the [icml 2021 paper](https://arxiv.org/abs/2106.06135). an online demo is available [here](https://douzero.org/). the algorithm is also integrated in rlcard. see [training dmc on dou dizhu](docs/toy-examples.md#training-dmc-on-dou-dizhu).\n*   our package is used in [pettingzoo](https://github.com/pettingzoo-team/pettingzoo). please check it out!\n*   we have released rlcard-showdown, gui demo for rlcard. please check out [here](https://github.com/datamllab/rlcard-showdown)!\n*   jupyter notebook tutorial available! we add some examples in r to call python interfaces of rlcard with reticulate. see [here](docs/toy-examples-r.md)\n*   thanks for the contribution of [@clarit7](https://github.com/clarit7) for supporting different number of players in blackjack. we call for contributions for gradually making the games more configurable. see [here](contributing.md#making-configurable-environments) for more details.\n*   thanks for the contribution of [@clarit7](https://github.com/clarit7) for the blackjack and limit hold'em human interface.\n*   now rlcard supports environment local seeding and multiprocessing. thanks for the testing scripts provided by [@weepingwillowben](https://github.com/weepingwillowben).\n*   human interface of nolimit holdem available. the action space of nolimit holdem has been abstracted. thanks for the contribution of [@adrianp-](https://github.com/adrianp-).\n*   new game gin rummy and human gui available. thanks for the contribution of [@billh0420](https://github.com/billh0420).\n*   pytorch implementation available. thanks for the contribution of [@mjudell](https://github.com/mjudell).\n\n## contributors\nthe following games are mainly developed and maintained by community contributors. thank you!\n*   gin rummy: [@billh0420](https://github.com/billh0420)\n*   bridge: [@billh0420](https://github.com/billh0420)\n\nthank all the contributors!\n\n<a href=\"https://github.com/daochenzha\"><img src=\"https://github.com/daochenzha.png\" width=\"40px\" alt=\"daochenzha\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/hsywhu\"><img src=\"https://github.com/hsywhu.png\" width=\"40px\" alt=\"hsywhu\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/caoyuanpu\"><img src=\"https://github.com/caoyuanpu.png\" width=\"40px\" alt=\"caoyuanpu\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/billh0420\"><img src=\"https://github.com/billh0420.png\" width=\"40px\" alt=\"billh0420\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/ruzhwei\"><img src=\"https://github.com/ruzhwei.png\" width=\"40px\" alt=\"ruzhwei\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/adrianpgob\"><img src=\"https://github.com/adrianpgob.png\" width=\"40px\" alt=\"adrianpgob\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/zhigal\"><img src=\"https://github.com/zhigal.png\" width=\"40px\" alt=\"zhigal\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/aypee19\"><img src=\"https://github.com/aypee19.png\" width=\"40px\" alt=\"aypee19\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/clarit7\"><img src=\"https://github.com/clarit7.png\" width=\"40px\" alt=\"clarit7\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/lhenry15\"><img src=\"https://github.com/lhenry15.png\" width=\"40px\" alt=\"lhenry15\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/ismael-elatifi\"><img src=\"https://github.com/ismael-elatifi.png\" width=\"40px\" alt=\"ismael-elatifi\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/mjudell\"><img src=\"https://github.com/mjudell.png\" width=\"40px\" alt=\"mjudell\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/jkterry1\"><img src=\"https://github.com/jkterry1.png\" width=\"40px\" alt=\"jkterry1\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/kaanozdogru\"><img src=\"https://github.com/kaanozdogru.png\" width=\"40px\" alt=\"kaanozdogru\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/junyuguo\"><img src=\"https://github.com/junyuguo.png\" width=\"40px\" alt=\"junyuguo\" /></a>&nbsp;&nbsp;\n<br />\n<a href=\"https://github.com/xixo99\"><img src=\"https://github.com/xixo99.png\" width=\"40px\" alt=\"xixo99\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/rodrigodelazcano\"><img src=\"https://github.com/rodrigodelazcano.png\" width=\"40px\" alt=\"rodrigodelazcano\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/michael1015198808\"><img src=\"https://github.com/michael1015198808.png\" width=\"40px\" alt=\"michael1015198808\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/mia1996\"><img src=\"https://github.com/mia1996.png\" width=\"40px\" alt=\"mia1996\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/kaiks\"><img src=\"https://github.com/kaiks.png\" width=\"40px\" alt=\"kaiks\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/claude9493\"><img src=\"https://github.com/claude9493.png\" width=\"40px\" alt=\"claude9493\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/sonsang\"><img src=\"https://github.com/sonsang.png\" width=\"40px\" alt=\"sonsang\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/rishabhvarshney14\"><img src=\"https://github.com/rishabhvarshney14.png\" width=\"40px\" alt=\"rishabhvarshney14\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/aetheryang\"><img src=\"https://github.com/aetheryang.png\" width=\"40px\" alt=\"aetheryang\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/rxng8\"><img src=\"https://github.com/rxng8.png\" width=\"40px\" alt=\"rxng8\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/nondecidibile\"><img src=\"https://github.com/nondecidibile.png\" width=\"40px\" alt=\"nondecidibile\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/benblack769\"><img src=\"https://github.com/benblack769.png\" width=\"40px\" alt=\"benblack769\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/zhengsx\"><img src=\"https://github.com/zhengsx.png\" width=\"40px\" alt=\"zhengsx\" /></a>&nbsp;&nbsp;\n<a href=\"https://github.com/andrewnc\"><img src=\"https://github.com/andrewnc.png\" width=\"40px\" alt=\"andrewnc\" /></a>&nbsp;&nbsp;\n\n## cite this work\nif you find this repo useful, you may cite:\n\nzha, daochen, et al. \"rlcard: a platform for reinforcement learning in card games.\" ijcai. 2020.\n```bibtex\n@inproceedings{zha2020rlcard,\n  title={rlcard: a platform for reinforcement learning in card games},\n  author={zha, daochen and lai, kwei-herng and huang, songyi and cao, yuanpu and reddy, keerthana and vargas, juan and nguyen, alex and wei, ruzhe and guo, junyu and hu, xia},\n  booktitle={ijcai},\n  year={2020}\n}\n```\n\n## installation\nmake sure that you have **python 3.6+** and **pip** installed. we recommend installing the stable version of `rlcard` with `pip`:\n\n```\npip3 install rlcard\n```\nthe default installation will only include the card environments. to use pytorch implementation of the training algorithms, run\n```\npip3 install rlcard[torch]\n```\nif you are in china and the above command is too slow, you can use the mirror provided by tsinghua university:\n```\npip3 install rlcard -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\nalternatively, you can clone the latest version with (if you are in china and github is slow, you can use the mirror in [gitee](https://gitee.com/daochenzha/rlcard)):\n```\ngit clone https://github.com/datamllab/rlcard.git\n```\nor only clone one branch to make it faster:\n```\ngit clone -b master --single-branch --depth=1 https://github.com/datamllab/rlcard.git\n```\nthen install with\n```\ncd rlcard\npip3 install -e .\npip3 install -e .[torch]\n```\n\nwe also provide [**conda** installation method](https://anaconda.org/toubun/rlcard):\n\n```\nconda install -c toubun rlcard\n```\n\nconda installation only provides the card environments, you need to manually install pytorch on your demands.\n\n## examples\na **short example** is as below.\n\n```python\nimport rlcard\nfrom rlcard.agents import randomagent\n\nenv = rlcard.make('blackjack')\nenv.set_agents([randomagent(num_actions=env.num_actions)])\n\nprint(env.num_actions) # 2\nprint(env.num_players) # 1\nprint(env.state_shape) # [[2]]\nprint(env.action_shape) # [none]\n\ntrajectories, payoffs = env.run()\n```\n\nrlcard can be flexibly connected to various algorithms. see the following examples:\n\n*   [playing with random agents](docs/toy-examples.md#playing-with-random-agents)\n*   [deep-q learning on blackjack](docs/toy-examples.md#deep-q-learning-on-blackjack)\n*   [training cfr (chance sampling) on leduc hold'em](docs/toy-examples.md#training-cfr-on-leduc-holdem)\n*   [having fun with pretrained leduc model](docs/toy-examples.md#having-fun-with-pretrained-leduc-model)\n*   [training dmc on dou dizhu](docs/toy-examples.md#training-dmc-on-dou-dizhu)\n*   [evaluating agents](docs/toy-examples.md#evaluating-agents)\n*   [training agents on pettingzoo](examples/pettingzoo)\n\n## demo\nrun `examples/human/leduc_holdem_human.py` to play with the pre-trained leduc hold'em model. leduc hold'em is a simplified version of texas hold'em. rules can be found [here](docs/games.md#leduc-holdem).\n\n```\n>> leduc hold'em pre-trained model\n\n>> start a new game!\n>> agent 1 chooses raise\n\n=============== community card ===============\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2502\n\u2502\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2502\n\u2502\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2502\n\u2502\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2502\n\u2502\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2502\n\u2502\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2502\n\u2502\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n===============   your hand    ===============\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502j        \u2502\n\u2502         \u2502\n\u2502         \u2502\n\u2502    \u2665    \u2502\n\u2502         \u2502\n\u2502         \u2502\n\u2502        j\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n===============     chips      ===============\nyours:   +\nagent 1: +++\n=========== actions you can choose ===========\n0: call, 1: raise, 2: fold\n\n>> you choose action (integer):\n```\nwe also provide a gui for easy debugging. please check [here](https://github.com/datamllab/rlcard-showdown/). some demos:\n\n![doudizhu-replay](https://github.com/datamllab/rlcard-showdown/blob/master/docs/imgs/doudizhu-replay.png?raw=true)\n![leduc-replay](https://github.com/datamllab/rlcard-showdown/blob/master/docs/imgs/leduc-replay.png?raw=true)\n\n## available environments\nwe provide a complexity estimation for the games on several aspects. **infoset number:** the number of information sets; **infoset size:** the average number of states in a single information set; **action size:** the size of the action space. **name:** the name that should be passed to `rlcard.make` to create the game environment. we also provide the link to the documentation and the random example.\n\n| game                                                                                                                                                                                           | infoset number  | infoset size      | action size | name            | usage                                                                                       |\n| :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | :-------------: | :---------------: | :---------: | :-------------: | :-----------------------------------------------------------------------------------------: |\n| blackjack ([wiki](https://en.wikipedia.org/wiki/blackjack), [baike](https://baike.baidu.com/item/21%e7%82%b9/5481683?fr=aladdin))                                                              | 10^3            | 10^1              | 10^0        | blackjack       | [doc](docs/games.md#blackjack), [example](examples/run_random.py)                           |\n| leduc hold\u2019em ([paper](http://poker.cs.ualberta.ca/publications/uai05.pdf))                                                                                                                    | 10^2            | 10^2              | 10^0        | leduc-holdem    | [doc](docs/games.md#leduc-holdem), [example](examples/run_random.py)                        |\n| limit texas hold'em ([wiki](https://en.wikipedia.org/wiki/texas_hold_%27em), [baike](https://baike.baidu.com/item/%e5%be%b7%e5%85%8b%e8%90%a8%e6%96%af%e6%89%91%e5%85%8b/83440?fr=aladdin))    | 10^14           | 10^3              | 10^0        | limit-holdem    | [doc](docs/games.md#limit-texas-holdem), [example](examples/run_random.py)                  |\n| dou dizhu ([wiki](https://en.wikipedia.org/wiki/dou_dizhu), [baike](https://baike.baidu.com/item/%e6%96%97%e5%9c%b0%e4%b8%bb/177997?fr=aladdin))                                               | 10^53 ~ 10^83   | 10^23             | 10^4        | doudizhu        | [doc](docs/games.md#dou-dizhu), [example](examples/run_random.py)                           |\n| mahjong ([wiki](https://en.wikipedia.org/wiki/competition_mahjong_scoring_rules), [baike](https://baike.baidu.com/item/%e9%ba%bb%e5%b0%86/215))                                                | 10^121          | 10^48             | 10^2        | mahjong         | [doc](docs/games.md#mahjong), [example](examples/run_random.py)                             | \n| no-limit texas hold'em ([wiki](https://en.wikipedia.org/wiki/texas_hold_%27em), [baike](https://baike.baidu.com/item/%e5%be%b7%e5%85%8b%e8%90%a8%e6%96%af%e6%89%91%e5%85%8b/83440?fr=aladdin)) | 10^162          | 10^3              | 10^4        | no-limit-holdem | [doc](docs/games.md#no-limit-texas-holdem), [example](examples/run_random.py)               |\n| uno ([wiki](https://en.wikipedia.org/wiki/uno_\\(card_game\\)), [baike](https://baike.baidu.com/item/uno%e7%89%8c/2249587))                                                                      |  10^163         | 10^10             | 10^1        | uno             | [doc](docs/games.md#uno), [example](examples/run_random.py)                                 |\n| gin rummy ([wiki](https://en.wikipedia.org/wiki/gin_rummy), [baike](https://baike.baidu.com/item/%e9%87%91%e6%8b%89%e7%b1%b3/3471710))                                                         | 10^52           | -                 | -           | gin-rummy       | [doc](docs/games.md#gin-rummy), [example](examples/run_random.py)                           |\n| bridge ([wiki](https://en.wikipedia.org/wiki/bridge), [baike](https://baike.baidu.com/item/%e6%a1%a5%e7%89%8c/332030))                                                                         |                 | -                 | -           | bridge          | [doc](docs/games.md#bridge), [example](examples/run_random.py)                              |\n\n## supported algorithms\n| algorithm | example | reference |\n| :--------------------------------------: | :-----------------------------------------: | :------------------------------------------------------------------------------------------------------: |\n| deep monte-carlo (dmc)                   | [examples/run\\_dmc.py](examples/run_dmc.py) | [[paper]](https://arxiv.org/abs/2106.06135)                                                              |\n| deep q-learning (dqn)                    | [examples/run\\_rl.py](examples/run_rl.py)   | [[paper]](https://arxiv.org/abs/1312.5602)                                                               |\n| neural fictitious self-play (nfsp)       | [examples/run\\_rl.py](examples/run_rl.py)   | [[paper]](https://arxiv.org/abs/1603.01121)                                                              |\n| counterfactual regret minimization (cfr) | [examples/run\\_cfr.py](examples/run_cfr.py) | [[paper]](http://papers.nips.cc/paper/3306-regret-minimization-in-games-with-incomplete-information.pdf) |\n\n## pre-trained and rule-based models\nwe provide a [model zoo](rlcard/models) to serve as the baselines.\n\n| model                                    | explanation                                              |\n| :--------------------------------------: | :------------------------------------------------------: |\n| leduc-holdem-cfr                         | pre-trained cfr (chance sampling) model on leduc hold'em |\n| leduc-holdem-rule-v1                     | rule-based model for leduc hold'em, v1                   |\n| leduc-holdem-rule-v2                     | rule-based model for leduc hold'em, v2                   |\n| uno-rule-v1                              | rule-based model for uno, v1                             |\n| limit-holdem-rule-v1                     | rule-based model for limit texas hold'em, v1             |\n| doudizhu-rule-v1                         | rule-based model for dou dizhu, v1                       |\n| gin-rummy-novice-rule                    | gin rummy novice rule model                              |\n\n## api cheat sheet\n### how to create an environment\nyou can use the the following interface to make an environment. you may optionally specify some configurations with a dictionary.\n*   **env = rlcard.make(env_id, config={})**: make an environment. `env_id` is a string of a environment; `config` is a dictionary that specifies some environment configurations, which are as follows.\n\t*   `seed`: default `none`. set a environment local random seed for reproducing the results.\n\t*   `allow_step_back`: default `false`. `true` if allowing `step_back` function to traverse backward in the tree.\n\t*   game specific configurations: these fields start with `game_`. currently, we only support `game_num_players` in blackjack, .\n\nonce the environemnt is made, we can access some information of the game.\n*   **env.num_actions**: the number of actions.\n*   **env.num_players**: the number of players.\n*   **env.state_shape**: the shape of the state space of the observations.\n*   **env.action_shape**: the shape of the action features (dou dizhu's action can encoded as features)\n\n### what is state in rlcard\nstate is a python dictionary. it consists of observation `state['obs']`, legal actions `state['legal_actions']`, raw observation `state['raw_obs']` and raw legal actions `state['raw_legal_actions']`.\n\n### basic interfaces\nthe following interfaces provide a basic usage. it is easy to use but it has assumtions on the agent. the agent must follow [agent template](docs/developping-algorithms.md). \n*   **env.set_agents(agents)**: `agents` is a list of `agent` object. the length of the list should be equal to the number of the players in the game.\n*   **env.run(is_training=false)**: run a complete game and return trajectories and payoffs. the function can be used after the `set_agents` is called. if `is_training` is `true`, it will use `step` function in the agent to play the game. if `is_training` is `false`, `eval_step` will be called instead.\n\n### advanced interfaces\nfor advanced usage, the following interfaces allow flexible operations on the game tree. these interfaces do not make any assumtions on the agent.\n*   **env.reset()**: initialize a game. return the state and the first player id.\n*   **env.step(action, raw_action=false)**: take one step in the environment. `action` can be raw action or integer; `raw_action` should be `true` if the action is raw action (string).\n*   **env.step_back()**: available only when `allow_step_back` is `true`. take one step backward. this can be used for algorithms that operate on the game tree, such as cfr (chance sampling).\n*   **env.is_over()**: return `true` if the current game is over. otherewise, return `false`.\n*   **env.get_player_id()**: return the player id of the current player.\n*   **env.get_state(player_id)**: return the state that corresponds to `player_id`.\n*   **env.get_payoffs()**: in the end of the game, return a list of payoffs for all the players.\n*   **env.get_perfect_information()**: (currently only support some of the games) obtain the perfect information at the current state.\n\n## library structure\nthe purposes of the main modules are listed as below:\n\n*   [/examples](examples): examples of using rlcard.\n*   [/docs](docs): documentation of rlcard.\n*   [/tests](tests): testing scripts for rlcard.\n*   [/rlcard/agents](rlcard/agents): reinforcement learning algorithms and human agents.\n*   [/rlcard/envs](rlcard/envs): environment wrappers (state representation, action encoding etc.)\n*   [/rlcard/games](rlcard/games): various game engines.\n*   [/rlcard/models](rlcard/models): model zoo including pre-trained models and rule models.\n\n## more documents\nfor more documentation, please refer to the [documents](docs/readme.md) for general introductions. api documents are available at our [website](http://www.rlcard.org).\n\n## contributing\ncontribution to this project is greatly appreciated! please create an issue for feedbacks/bugs. if you want to contribute codes, please refer to [contributing guide](./contributing.md). if you have any questions, please contact [daochen zha](https://github.com/daochenzha) with [daochen.zha@rice.edu](mailto:daochen.zha@rice.edu).\n\n## acknowledgements\nwe would like to thank jj world network technology co.,ltd for the generous support and all the contributions from the community contributors.\n",
  "docs_url": null,
  "keywords": "reinforcement learning,game,rl,ai",
  "license": "",
  "name": "rlcard",
  "package_url": "https://pypi.org/project/rlcard/",
  "project_url": "https://pypi.org/project/rlcard/",
  "project_urls": {
    "Homepage": "https://github.com/datamllab/rlcard"
  },
  "release_url": "https://pypi.org/project/rlcard/1.2.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a toolkit for reinforcement learning in card games",
  "version": "1.2.0",
  "releases": [],
  "developers": [
    "daochen.zha@tamu.edu",
    "data_analytics_at_texas_a"
  ],
  "kwds": "reinforcement card_game rlcard card badge",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_rlcard",
  "homepage": "https://github.com/datamllab/rlcard",
  "release_count": 36,
  "dependency_ids": [],
  "documentation_summary": "The GitHub repository \"datamllab/rlcard\" is a toolkit for Reinforcement Learning (RL) in card games, developed by DATA Lab at Rice and Texas A&M University, along with community contributors. It supports multiple card games like Blackjack, Leduc, Texas Hold'em, DouDizhu, Mahjong, and UNO, providing easy-to-use interfaces for implementing various RL and searching algorithms. The goal is to bridge RL with imperfect information games. The project is open-source under the MIT license, has 2.6k stars, and 583 forks. It includes documentation, tutorials, and examples for users to get started. The toolkit also supports PyTorch for training algorithms and offers a model zoo with pre-trained and rule-based models for different games.",
  "embedding": [
    -0.034332625567913055,
    0.009889595210552216,
    -0.0043864003382623196,
    -0.030146406963467598,
    0.004403959959745407,
    0.014778201468288898,
    0.01777036488056183,
    -0.007181896828114986,
    -0.029022589325904846,
    -0.029809260740876198,
    0.0034416913986206055,
    -0.001130841439589858,
    -0.011645560152828693,
    0.013773789629340172,
    0.013190808705985546,
    0.021914443001151085,
    0.003810443915426731,
    -0.015958210453391075,
    0.00967887882143259,
    0.01279747299849987,
    0.021914443001151085,
    0.011308414861559868,
    -0.0310173649340868,
    -0.041468869894742966,
    -0.016379641368985176,
    0.0022370994556695223,
    0.022392066195607185,
    -0.00894839782267809,
    0.021422773599624634,
    0.022237541154026985,
    0.030034024268388748,
    -0.0029623128939419985,
    -0.0072977906093001366,
    -0.034978821873664856,
    -0.017377030104398727,
    -0.007803508546203375,
    0.01277640089392662,
    0.008969468995928764,
    0.03124212846159935,
    0.01255866140127182,
    0.02528589591383934,
    0.02546851523220539,
    -0.006145877297967672,
    0.0006905332556925714,
    0.0002958801051136106,
    0.016688691452145576,
    -0.0007814044365659356,
    -0.020130382850766182,
    -0.0029236816335469484,
    0.02539827674627304,
    0.02506113238632679,
    0.016590356826782227,
    0.016154877841472626,
    -0.005864922888576984,
    0.0013160957023501396,
    -0.0037226458080112934,
    -0.0024284995160996914,
    0.03711407631635666,
    -0.0003729230666067451,
    -0.029387829825282097,
    0.0009464651229791343,
    0.007129217963665724,
    -0.023024212568998337,
    0.007241599727421999,
    0.0063460576348006725,
    0.016787026077508926,
    -0.016941549256443977,
    0.028249964118003845,
    0.015761541202664375,
    0.016070591285824776,
    0.03323690593242645,
    0.03053974360227585,
    0.011708774603903294,
    0.0013108279090374708,
    0.034192148596048355,
    -0.020973246544599533,
    -0.034079767763614655,
    0.020228717476129532,
    -0.017152266576886177,
    0.00042406553984619677,
    -0.011814132332801819,
    -0.0028727587778121233,
    -0.008702562190592289,
    0.029275448992848396,
    0.021464915946125984,
    0.023108499124646187,
    -0.015803685411810875,
    0.011118770577013493,
    -0.017573697492480278,
    -0.023038260638713837,
    0.01531201507896185,
    0.012916878797113895,
    0.027126146480441093,
    0.016604404896497726,
    -0.023417549207806587,
    0.022616829723119736,
    -0.010107334703207016,
    0.027969010174274445,
    -0.01859918050467968,
    -0.009966856800019741,
    0.022153254598379135,
    0.01844465546309948,
    -0.004681402817368507,
    -0.013549026101827621,
    -0.03733883798122406,
    -0.027112100273370743,
    -0.017461316660046577,
    0.0059000421315431595,
    0.035063110291957855,
    0.020608004182577133,
    -0.020256811752915382,
    0.02521565742790699,
    0.0037542530335485935,
    -0.028446633368730545,
    -0.00634956918656826,
    -0.01931561529636383,
    0.01973704621195793,
    0.0009736825595609844,
    -0.01875370554625988,
    0.00018613228166941553,
    0.01262889988720417,
    0.0066270120441913605,
    0.005271406844258308,
    0.008562085218727589,
    0.0017700126627460122,
    0.00014739131438545883,
    0.015101298689842224,
    -0.009650783613324165,
    0.012235564179718494,
    -0.014750106260180473,
    0.004730569664388895,
    -0.008246012032032013,
    -0.03643978387117386,
    0.014153078198432922,
    -0.021872300654649734,
    -0.0017480631358921528,
    0.0025338574778288603,
    0.005271406844258308,
    -0.0020140919368714094,
    -0.01531201507896185,
    -0.00969292689114809,
    0.013570097275078297,
    -0.00461818790063262,
    -0.022335873916745186,
    -0.0016286575701087713,
    0.029893547296524048,
    -0.007020348217338324,
    0.016239164397120476,
    -0.011687702499330044,
    0.005313550122082233,
    0.011708774603903294,
    -0.021212056279182434,
    -0.0023881124798208475,
    0.0013196077197790146,
    0.021422773599624634,
    -0.00492021394893527,
    -0.01248139888048172,
    0.009938761591911316,
    -0.00977018941193819,
    0.007747317664325237,
    0.008112558163702488,
    0.027842581272125244,
    -0.016182973980903625,
    -0.006960645318031311,
    0.012692115269601345,
    0.01847275160253048,
    0.023417549207806587,
    0.0012414671946316957,
    -0.0030149919912219048,
    -0.00047718349378556013,
    0.0040352074429392815,
    0.009868523105978966,
    -0.015972256660461426,
    -0.015916066244244576,
    0.0031379093416035175,
    -0.002635703422129154,
    0.002258170861750841,
    0.00960161630064249,
    -0.03351785987615585,
    -0.005854387301951647,
    0.016899406909942627,
    0.0012862443691119552,
    0.016492024064064026,
    0.04214315861463547,
    0.021745869889855385,
    -0.028488775715231895,
    0.0076770787127316,
    -0.012664019130170345,
    -0.005359204951673746,
    0.003202880034223199,
    0.022279683500528336,
    0.03169165551662445,
    8.851160964695737e-05,
    -0.014307602308690548,
    -0.5691012144088745,
    0.010205668397247791,
    -0.0052643828094005585,
    0.002983384532853961,
    0.0038841946516186,
    -0.0059808166697621346,
    0.010226740501821041,
    0.03663645312190056,
    -0.020523719489574432,
    0.02417612634599209,
    -0.006230163853615522,
    -0.021535154432058334,
    -0.007041419390588999,
    -0.006570821162313223,
    -0.023937314748764038,
    -0.03879980370402336,
    0.023192785680294037,
    -0.010985316708683968,
    -0.01956847310066223,
    0.02466779574751854,
    -0.040822673588991165,
    0.03739503026008606,
    -0.0013986261328682303,
    -0.027294719591736794,
    -0.02473803423345089,
    0.034388817846775055,
    -0.01000197697430849,
    -0.007986128330230713,
    0.011617464013397694,
    -0.0011492790654301643,
    -0.0065778447315096855,
    -0.011132817715406418,
    0.013731646351516247,
    -0.015480587258934975,
    0.0638890266418457,
    -0.013169737532734871,
    -0.014342721551656723,
    0.03677693009376526,
    0.013520929962396622,
    0.028390441089868546,
    -0.010093286633491516,
    0.00628635473549366,
    0.00242498773150146,
    -0.022897783666849136,
    -0.0017348934197798371,
    -0.00960161630064249,
    0.023403501138091087,
    0.046891290694475174,
    -0.006995764560997486,
    0.010023048147559166,
    -0.009187208488583565,
    -0.029528306797146797,
    -0.01859918050467968,
    -0.026704715564846992,
    0.016295354813337326,
    -0.015031060203909874,
    0.010669243521988392,
    -0.00901863630861044,
    0.005183608736842871,
    -0.022097064182162285,
    -0.006700762547552586,
    0.026592332869768143,
    0.016604404896497726,
    -0.02445708028972149,
    0.0009921202436089516,
    0.006314449943602085,
    -0.006932549644261599,
    -0.0036102640442550182,
    -0.013808908872306347,
    -0.026142805814743042,
    0.00902566034346819,
    -0.003046599216759205,
    -0.0037893725093454123,
    -0.01813560724258423,
    0.028966398909687996,
    0.03787265345454216,
    0.027013765648007393,
    0.001595294219441712,
    -0.009742094203829765,
    0.04498079791665077,
    0.00899756420403719,
    0.011350557208061218,
    0.006683202926069498,
    -0.020776577293872833,
    0.015887971967458725,
    0.014160101301968098,
    0.027533531188964844,
    0.013942361809313297,
    -0.011097698472440243,
    0.021029436960816383,
    0.016955597326159477,
    0.01989157125353813,
    -0.0011088919127359986,
    -0.028755683451890945,
    0.007592792622745037,
    0.03320880979299545,
    -0.011996752582490444,
    -0.016787026077508926,
    -0.028053296729922295,
    -0.00983340386301279,
    -0.007466363254934549,
    -0.0029535330832004547,
    0.0017945962026715279,
    0.026676619425415993,
    0.00010030950215877965,
    0.0017998641123995185,
    -0.03183213248848915,
    -0.008611252531409264,
    0.020650148391723633,
    -0.023080402985215187,
    -0.04374460130929947,
    -0.026339475065469742,
    -0.020158477127552032,
    0.022068968042731285,
    0.014237363822758198,
    -0.041328392922878265,
    0.020888959988951683,
    0.015986304730176926,
    0.03981123864650726,
    -0.002827103715389967,
    0.0076911267824471,
    -0.005046643316745758,
    0.0018507870845496655,
    -0.0049483091570436954,
    0.03200070559978485,
    -0.01944204419851303,
    0.010177573189139366,
    -0.002760377014055848,
    -0.005854387301951647,
    0.009868523105978966,
    0.03051164746284485,
    -0.0027480851858854294,
    0.02560899406671524,
    -0.02428850717842579,
    0.04436269775032997,
    0.016421783715486526,
    0.030005929991602898,
    0.01771417446434498,
    0.006532189901918173,
    0.008793872781097889,
    -0.005959745030850172,
    0.0035277337301522493,
    0.014300579205155373,
    -0.04262078180909157,
    -0.028544966131448746,
    -0.016281306743621826,
    0.0040316954255104065,
    0.011743893846869469,
    -0.011217104271054268,
    -0.007487434893846512,
    0.00048728028195910156,
    -0.0026760906912386417,
    -0.02574947103857994,
    0.01792488992214203,
    -0.010655195452272892,
    0.011378653347492218,
    -0.02604447305202484,
    -0.009426020085811615,
    -0.007389100734144449,
    -0.010922102257609367,
    0.021900394931435585,
    -0.005320573691278696,
    -0.007030883803963661,
    -0.002547905081883073,
    -0.013893195427954197,
    -0.009896618314087391,
    -0.009959833696484566,
    0.03197260946035385,
    -0.03068022057414055,
    -0.05793279781937599,
    -0.0030940102878957987,
    -0.03711407631635666,
    -0.013485810719430447,
    0.009812332689762115,
    0.006672666873782873,
    0.017067980021238327,
    -0.030230693519115448,
    0.029781166464090347,
    -0.02618495002388954,
    -0.012762353755533695,
    -0.013239976018667221,
    0.012685091234743595,
    -0.014497246593236923,
    -0.022574685513973236,
    0.013921290636062622,
    0.004930749535560608,
    0.03829408437013626,
    0.034332625567913055,
    -0.008309226483106613,
    0.011540201492607594,
    -0.011680679395794868,
    0.04374460130929947,
    -0.03034307435154915,
    0.021830156445503235,
    0.007915889844298363,
    0.023305166512727737,
    0.020270859822630882,
    0.004252947401255369,
    0.010205668397247791,
    0.03146689385175705,
    0.0008424242259934545,
    0.02528589591383934,
    -0.011582344770431519,
    -0.011673655360937119,
    -0.021198010072112083,
    -0.023670408874750137,
    0.040626004338264465,
    -0.005534801632165909,
    0.040288861840963364,
    0.0033872565254569054,
    0.0308768879622221,
    0.008147677406668663,
    -0.014244387857615948,
    -0.02497684583067894,
    0.0019140018848702312,
    0.026845192536711693,
    -0.00925042387098074,
    0.01255163736641407,
    -0.023642312735319138,
    -0.0077543412335217,
    -0.002749841194599867,
    0.015958210453391075,
    0.01796703413128853,
    -0.016506070271134377,
    0.004467174876481295,
    -0.007234575692564249,
    -0.023726599290966988,
    0.00968590285629034,
    0.01911894604563713,
    -0.040485527366399765,
    -0.005482122767716646,
    -0.0018929302459582686,
    0.010929126292467117,
    -0.014181173406541348,
    -0.010985316708683968,
    -0.01954037882387638,
    0.03202880173921585,
    -0.014862488023936749,
    0.023487787693738937,
    -0.01278342492878437,
    0.006669154856353998,
    0.0030290395952761173,
    0.034388817846775055,
    -0.008969468995928764,
    0.017573697492480278,
    -0.0021738845389336348,
    -0.0017814264865592122,
    0.03343357518315315,
    -0.028123535215854645,
    0.017292743548750877,
    -0.010886983014643192,
    0.02586185187101364,
    -0.020116334781050682,
    0.014693914912641048,
    0.004730569664388895,
    -0.016702739521861076,
    -0.0026111199986189604,
    0.004941285587847233,
    0.033630240708589554,
    -0.002149301115423441,
    0.014132006093859673,
    0.022097064182162285,
    0.0038841946516186,
    -0.016477975994348526,
    0.0014214536640793085,
    -0.05147084593772888,
    -0.010901031084358692,
    -0.02626923657953739,
    -0.003669966710731387,
    0.006651595234870911,
    0.005545337218791246,
    -0.011083651334047318,
    -0.028011152520775795,
    -0.023501835763454437,
    0.010472575202584267,
    0.026522094383835793,
    0.016983693465590477,
    0.016801072284579277,
    0.015002964995801449,
    0.000579029438085854,
    -0.006237187422811985,
    -0.020425384864211082,
    0.02577756531536579,
    0.02635352313518524,
    0.00910292286425829,
    -0.01876775361597538,
    -0.03309642896056175,
    0.011167936958372593,
    -0.03048355132341385,
    0.03239404037594795,
    0.015649160370230675,
    0.005770100746303797,
    0.016098687425255775,
    0.002372308634221554,
    -0.0002862222900148481,
    -0.01932966336607933,
    0.03051164746284485,
    0.0037963963113725185,
    -0.016379641368985176,
    -0.008864111267030239,
    0.016730833798646927,
    0.0031660047825425863,
    -0.010627100244164467,
    -0.022757306694984436,
    0.03832218050956726,
    0.004428543616086245,
    -0.01789679564535618,
    0.03351785987615585,
    -0.00605456717312336,
    0.00016451196279376745,
    -0.014651771634817123,
    -0.0009368073078803718,
    0.01294497400522232,
    -0.008330297656357288,
    0.041075531393289566,
    0.008126606233417988,
    0.013745693489909172,
    -0.02431660331785679,
    -0.0007076538749970496,
    0.008716610260307789,
    -0.0007612108020111918,
    -0.013457715511322021,
    -0.015157490037381649,
    -0.0153822535648942,
    0.05492658540606499,
    0.0005943941650912166,
    -0.013401525095105171,
    0.00977018941193819,
    -0.054139912128448486,
    -0.013352357782423496,
    -0.026831144466996193,
    -0.0016154877375811338,
    0.0037999083288013935,
    0.027688056230545044,
    -0.008548037149012089,
    -0.00969292689114809,
    -0.003603240242227912,
    0.008274107240140438,
    0.02593209035694599,
    0.005517242010682821,
    -0.0071783848106861115,
    0.009664831683039665,
    0.03110165148973465,
    -0.0012915122788399458,
    0.011919490061700344,
    0.010037096217274666,
    -0.004319673869758844,
    0.01991966739296913,
    0.01954037882387638,
    0.004210804123431444,
    0.01924537681043148,
    0.007403148338198662,
    -0.004871047101914883,
    -0.028053296729922295,
    0.0006677056662738323,
    -0.0037472292315214872,
    -0.00030970832449384034,
    0.005159025080502033,
    -0.03273118659853935,
    0.010606028139591217,
    0.02426041290163994,
    0.030034024268388748,
    0.01924537681043148,
    0.014047719538211823,
    0.03849075362086296,
    0.03225356340408325,
    -0.016744881868362427,
    -0.028797825798392296,
    0.01876775361597538,
    -0.0006778024835512042,
    0.01293794997036457,
    -0.0012476131087169051,
    -0.003302970202639699,
    -0.04211506247520447,
    0.03747931495308876,
    0.007719221990555525,
    -0.03905266150832176,
    0.006089686416089535,
    0.04000790789723396,
    -0.007634935900568962,
    0.005229263566434383,
    -0.021591344848275185,
    -0.005366228986531496,
    -0.021464915946125984,
    0.002886806381866336,
    -0.011842227540910244,
    0.021338487043976784,
    -0.005320573691278696,
    0.0026532630436122417,
    0.0053521813824772835,
    -0.02417612634599209,
    0.009896618314087391,
    -0.04380078986287117,
    0.02551065944135189,
    0.005857899319380522,
    -0.01932966336607933,
    -0.02581970952451229,
    -0.003594460431486368,
    -0.0028446633368730545,
    -0.007051955442875624,
    0.015944162383675575,
    0.01796703413128853,
    0.029275448992848396,
    0.01990561932325363,
    0.01869751513004303,
    -0.029247352853417397,
    -0.01883799210190773,
    -0.04582366347312927,
    0.0030149919912219048,
    -0.0308768879622221,
    0.0013477031607180834,
    -0.006605940405279398,
    0.013801884837448597,
    0.026774954050779343,
    0.00977018941193819,
    0.004748129285871983,
    0.023923266679048538,
    -0.0026216558180749416,
    0.009292567148804665,
    0.02414803020656109,
    0.011842227540910244,
    0.0009508550283499062,
    0.0026076079811900854,
    -0.01900656521320343,
    0.004491758532822132,
    -0.0005162536981515586,
    -0.011153889819979668,
    0.014764153398573399,
    0.01955442689359188,
    -0.03211308643221855,
    -0.008238987997174263,
    0.01984942890703678,
    -0.006367128808051348,
    0.014230339787900448,
    0.029472116380929947,
    -0.0155086824670434,
    0.004965868778526783,
    0.007318862248212099,
    0.01931561529636383,
    -0.004168660845607519,
    0.0036945503670722246,
    0.028727587312459946,
    0.00241796369664371,
    -0.03186022862792015,
    0.009742094203829765,
    -0.016379641368985176,
    0.010725433938205242,
    0.02562304027378559,
    -0.0015654427697882056,
    0.01235496997833252,
    -0.0006703396211378276,
    -0.027884723618626595,
    -0.034276437014341354,
    -0.0015970501117408276,
    0.02433065138757229,
    0.011062579229474068,
    -0.022743258625268936,
    -0.023319214582443237,
    -0.01777036488056183,
    0.016337499022483826,
    0.004221339710056782,
    -0.0059456974267959595,
    -0.0046708667650818825,
    -0.017503459006547928,
    -0.03171975165605545,
    -0.0053943246603012085,
    -0.016463927924633026,
    2.9686783818760887e-05,
    0.017489410936832428,
    -0.03357405215501785,
    -0.004878070671111345,
    0.03096117451786995,
    -0.011160913854837418,
    -0.0030940102878957987,
    -0.013275095261633396,
    -0.004488246515393257,
    -0.03132641687989235,
    0.0004859633045271039,
    -0.01958252117037773,
    0.011807108297944069,
    0.0003558024181984365,
    -0.010268882848322392,
    0.004593604244291782,
    0.03245023265480995,
    0.060236621648073196,
    -0.005801708437502384,
    0.01788274757564068,
    -0.012059967964887619,
    0.0015496391570195556,
    -0.01965275965631008,
    -0.005411884281784296,
    0.003810443915426731,
    -0.011217104271054268,
    -0.021254200488328934,
    -0.0012546370271593332,
    0.017166312783956528,
    0.006296890322118998,
    -0.04503699019551277,
    -0.0029728487133979797,
    0.026718763634562492,
    0.010318050161004066,
    0.010226740501821041,
    -0.00892732571810484,
    -0.023136595264077187,
    0.005893018562346697,
    0.0036137758288532495,
    -6.272087193792686e-05,
    0.00953137781471014,
    -0.03132641687989235,
    -0.017461316660046577,
    0.04568318650126457,
    -0.002149301115423441,
    0.023403501138091087,
    0.0010342634050175548,
    -0.012966045178472996,
    -0.013998553156852722,
    0.008533990010619164,
    0.034950725734233856,
    0.015663208439946175,
    0.013703551143407822,
    0.0003320968826301396,
    -0.046891290694475174,
    -0.0035786565858870745,
    -0.0018630787963047624,
    0.016660595312714577,
    0.01218639686703682,
    0.020846815779805183,
    -0.0018648348050191998,
    -0.021745869889855385,
    0.017419172450900078,
    -0.01218639686703682,
    -0.022209445014595985,
    0.020706338807940483,
    -0.015002964995801449,
    -0.01880989782512188,
    -0.028095439076423645,
    -0.011167936958372593,
    -0.016801072284579277,
    0.006314449943602085,
    -0.005331109743565321,
    -0.012973069213330746,
    0.035203587263822556,
    -0.014946773648262024,
    -0.019947761669754982,
    0.008238987997174263,
    0.022209445014595985,
    0.03247832879424095,
    0.00894137378782034,
    0.013506882824003696,
    0.027533531188964844,
    -0.014188197441399097,
    -0.01858513429760933,
    -0.023263024166226387,
    0.00959459226578474,
    -0.016618452966213226,
    0.03289975970983505,
    0.035372160375118256,
    -0.05130227282643318,
    -0.016730833798646927,
    -0.005780636798590422,
    0.00616343691945076,
    -0.04975702241063118,
    -0.029275448992848396,
    0.01878180168569088,
    0.033883098512887955,
    0.014103910885751247,
    -0.040626004338264465,
    -0.009503282606601715,
    -0.011743893846869469,
    -0.02483636885881424,
    -0.021619440987706184,
    -0.027238529175519943,
    0.010114358738064766,
    -0.027041859924793243,
    -0.014848439954221249,
    0.03739503026008606,
    0.007915889844298363,
    -0.00937685277312994,
    0.014862488023936749,
    -0.026831144466996193,
    -0.010360193438827991,
    -0.020523719489574432,
    -0.011476987041532993,
    0.004878070671111345,
    0.02518756128847599,
    0.028854016214609146,
    -0.020060144364833832,
    -0.014321650378406048,
    0.028854016214609146,
    -0.007332909852266312,
    0.009060779586434364,
    0.0068939183838665485,
    -0.023066356778144836,
    0.04309840500354767,
    -0.03236594796180725,
    -0.006907966453582048,
    -0.022673020139336586,
    -0.020116334781050682,
    0.01949823461472988,
    0.0007230186020024121,
    -0.007627911865711212,
    0.0006466340855695307,
    -0.03157927468419075,
    0.0025496610905975103,
    0.013640335761010647,
    -0.0153682054951787,
    -0.013970457017421722,
    0.026957575231790543,
    -0.010023048147559166,
    0.0025162978563457727,
    -0.026845192536711693,
    -0.0017638668650761247,
    0.02560899406671524,
    -0.021773966029286385,
    -0.01270616240799427,
    -0.016365593299269676,
    -0.029472116380929947,
    -0.012369017116725445,
    0.014335698448121548,
    0.022673020139336586,
    0.0015996841248124838,
    0.0614166297018528,
    -0.0309049841016531,
    0.028544966131448746,
    -0.02628328464925289,
    0.010430431924760342,
    -0.006739393807947636,
    -0.005144977476447821,
    0.002507518045604229,
    -0.0074944584630429745,
    0.021689679473638535,
    -0.022378018125891685,
    -0.04500889405608177,
    -0.040036000311374664,
    -0.011357581242918968,
    0.00654974952340126,
    0.0053908126428723335,
    -0.004621699918061495,
    0.007887794636189938,
    -0.01225663535296917,
    0.0021703727543354034,
    0.008210891857743263,
    0.008231963962316513,
    0.03874361142516136,
    0.004867535084486008,
    -0.014258435927331448,
    0.007796484511345625,
    -0.01938585378229618,
    0.03214118257164955,
    -0.013268071226775646,
    0.013373428955674171,
    0.007139753550291061,
    -0.023459691554307938,
    -0.017264647409319878,
    -0.006795584689825773,
    0.006669154856353998,
    -0.01806536689400673,
    -0.000327487476170063,
    -0.021296342834830284,
    0.0025215656496584415,
    -0.021521106362342834,
    0.016506070271134377,
    0.0006927282083779573,
    -0.029247352853417397,
    0.041553154587745667,
    0.040176477283239365,
    0.0078105321153998375,
    -0.004965868778526783,
    0.006121294107288122,
    0.0001869005209300667,
    -0.01204591989517212,
    0.034725964069366455,
    -0.03202880173921585,
    -0.022476350888609886,
    0.0012449792120605707,
    0.03233785182237625,
    0.01559296902269125,
    -0.028713539242744446,
    -0.016618452966213226,
    -0.011420796625316143,
    -0.03264690190553665,
    -0.012593780644237995,
    -0.01528391893953085,
    0.029134970158338547,
    -0.015466539189219475,
    -0.005092298611998558,
    0.011912466026842594,
    0.0005557629046961665,
    -0.016477975994348526,
    0.03149498626589775,
    0.0030009441543370485,
    0.009257446974515915,
    0.01810751110315323,
    -0.005854387301951647,
    0.011280318722128868,
    -0.0007383832708001137,
    -0.04236792400479317,
    -0.006609452422708273,
    0.016772978007793427,
    0.0047130100429058075,
    -0.0029710927046835423,
    0.033798813819885254,
    0.0017752805724740028,
    -0.008161725476384163,
    -0.023178737610578537,
    0.00642683170735836,
    -0.00944709125906229,
    -0.008337321691215038,
    0.014174149371683598,
    -0.007192432414740324,
    -0.008414584212005138,
    0.01968085579574108,
    -0.010767577216029167,
    -0.007055467460304499,
    -0.005468075163662434,
    0.00613885372877121,
    -0.021731821820139885,
    0.015480587258934975,
    -0.020397288724780083,
    -0.02576351910829544,
    0.0003083913470618427,
    -0.00227046268992126,
    0.012818544171750546,
    -0.014455103315412998,
    -0.00031234227935783565,
    0.03256261348724365,
    -0.003241511294618249,
    0.005183608736842871,
    -0.020537765696644783,
    0.0015118859009817243,
    -0.020046096295118332,
    -0.006444391328841448,
    0.01786869950592518,
    -0.01263592392206192,
    0.013415572233498096,
    -0.015101298689842224,
    0.029612593352794647,
    0.0071748727932572365,
    -0.003891218453645706,
    0.005299502518028021,
    -0.00461116386577487,
    -0.029612593352794647,
    0.016871310770511627,
    -0.004916701931506395,
    -0.022602781653404236,
    -0.0059421854093670845,
    0.003940385300666094,
    -0.011420796625316143,
    0.0043969363905489445,
    -0.03214118257164955,
    0.008695538155734539,
    -0.003957944922149181,
    -0.008463751524686813,
    0.0009315393981523812,
    -0.00929959025233984,
    -0.015269871801137924,
    -0.002967580920085311,
    0.015087251551449299,
    -0.028797825798392296,
    -0.006886894814670086,
    0.20768149197101593,
    -0.022068968042731285,
    0.015410348773002625,
    0.001041287207044661,
    -0.000289514719042927,
    0.008646371774375439,
    -0.004108957946300507,
    -0.021844204515218735,
    -0.017405124381184578,
    0.017545601353049278,
    0.00984042789787054,
    0.006746417377144098,
    -0.010353169403970242,
    -0.0025162978563457727,
    -0.011786037124693394,
    -0.016295354813337326,
    -0.010451504029333591,
    -0.053156573325395584,
    0.01247437484562397,
    0.015930114313960075,
    0.011210080236196518,
    -0.0015268115093931556,
    -0.020987292751669884,
    -0.021759917959570885,
    0.03112974762916565,
    -0.01227068342268467,
    -0.020706338807940483,
    -0.00924339983612299,
    0.02605852112174034,
    -0.0021932001691311598,
    -0.023094451054930687,
    0.013949385844171047,
    -0.01806536689400673,
    0.0038736588321626186,
    -0.01809346303343773,
    -0.030455457046628,
    0.009285543113946915,
    0.0020597469992935658,
    0.015241775661706924,
    0.00915208924561739,
    0.0015241776127368212,
    -0.03208499401807785,
    -0.0026040959637612104,
    -0.016028448939323425,
    -0.013429620303213596,
    0.010844839736819267,
    -0.013759741559624672,
    -0.020018000155687332,
    0.02570732682943344,
    0.015635112300515175,
    -0.028544966131448746,
    -0.02424636483192444,
    0.03312452509999275,
    0.026620429009199142,
    0.0059421854093670845,
    -0.016225116327404976,
    -0.003968480974435806,
    0.03146689385175705,
    0.02483636885881424,
    0.015803685411810875,
    -0.014012600295245647,
    0.026494000107049942,
    0.006771001033484936,
    0.01886608824133873,
    -0.06956430524587631,
    0.0029693366959691048,
    -0.028053296729922295,
    0.015986304730176926,
    0.013935337774455547,
    0.008541014045476913,
    -0.003599728224799037,
    -0.04613271355628967,
    -0.04225554317235947,
    -0.0305678378790617,
    -0.02549661137163639,
    -0.040794577449560165,
    0.0307645071297884,
    -0.0076911267824471,
    0.01920323260128498,
    0.039417900145053864,
    0.01778441295027733,
    0.009742094203829765,
    -0.01824798807501793,
    0.005520754028111696,
    -0.007831604219973087,
    -0.029640689492225647,
    0.022953974083065987,
    -0.009517330676317215,
    -0.028165677562355995,
    -0.004084374755620956,
    0.00034351064823567867,
    -0.017166312783956528,
    -0.007361005060374737,
    0.002979872515425086,
    0.01899251714348793,
    0.006630523595958948,
    0.014890583232045174,
    0.01277640089392662,
    -0.01793893799185753,
    -1.381450601911638e-05,
    -0.02431660331785679,
    0.04374460130929947,
    0.0053030140697956085,
    0.012235564179718494,
    -0.010746506042778492,
    0.0053943246603012085,
    -0.0017691347748041153,
    0.011926514096558094,
    0.017222505062818527,
    0.006152901332825422,
    -0.0008086218731477857,
    -0.04596414044499397,
    -0.011181985028088093,
    -0.023782789707183838,
    0.011877346783876419,
    0.014216292649507523,
    0.03638359531760216,
    0.009650783613324165,
    -0.005896530579775572,
    -0.010402336716651917,
    -0.015733446925878525,
    -0.005854387301951647,
    -0.008836016058921814,
    -0.023403501138091087,
    -0.0008832503808662295,
    -0.02553875558078289,
    -0.028334250673651695,
    0.006490046624094248,
    0.00026076080393977463,
    -0.005496170371770859,
    0.023796837776899338,
    -0.013359381817281246,
    -0.0006470730877481401,
    0.007311838213354349,
    0.0018911742372438312,
    0.014188197441399097,
    -0.016098687425255775,
    -0.001989508280530572,
    -0.00932768639177084,
    -0.005587480496615171,
    -0.029247352853417397,
    0.008007200434803963,
    0.017011789605021477,
    -0.012593780644237995,
    0.02538423053920269,
    -0.003736693412065506,
    -0.007206480484455824,
    0.013232951983809471,
    0.015789637342095375,
    0.019863475114107132,
    0.008562085218727589,
    0.008014224469661713,
    -0.011111746542155743,
    -0.026522094383835793,
    0.01921728067100048,
    -0.017433220520615578,
    -0.011048532091081142,
    -0.015255823731422424,
    0.016562262549996376,
    0.009735070168972015,
    -0.04166553542017937,
    0.0017875724006444216,
    0.010079238563776016,
    -0.011687702499330044,
    -0.020144430920481682,
    -0.00967887882143259,
    -0.17733842134475708,
    0.03638359531760216,
    0.040878865867853165,
    -0.05236990004777908,
    0.015621064230799675,
    -0.009496258571743965,
    -0.008667442947626114,
    0.022083016112446785,
    -0.02472398616373539,
    -0.007958033122122288,
    0.04273316264152527,
    -0.0001329046062892303,
    0.006602428387850523,
    0.0009526109788566828,
    -0.002070282818749547,
    0.01241116039454937,
    -0.006145877297967672,
    0.016674643382430077,
    0.02580566145479679,
    0.007276718970388174,
    0.035203587263822556,
    -0.03691740706562996,
    -0.011364605277776718,
    0.010009000077843666,
    0.0028692467603832483,
    -0.02469589188694954,
    0.0010070459684357047,
    0.011329486034810543,
    -0.028278060257434845,
    -0.04287363961338997,
    -0.010929126292467117,
    -0.005099322181195021,
    0.014223316684365273,
    -0.0010772845707833767,
    0.006732369773089886,
    0.010156501084566116,
    0.033489763736724854,
    -0.010542813688516617,
    -0.01982133276760578,
    0.03908075764775276,
    0.022855639457702637,
    0.03672074154019356,
    0.016379641368985176,
    -0.026943527162075043,
    -0.03127022460103035,
    0.03051164746284485,
    0.00020961831614840776,
    -0.02549661137163639,
    -0.004748129285871983,
    -0.010936150327324867,
    0.02424636483192444,
    -0.014328674413263798,
    0.01559296902269125,
    -0.019947761669754982,
    0.03846265748143196,
    0.03554072976112366,
    -0.0018999541644006968,
    0.004906166344881058,
    -0.005078250542283058,
    0.016548214480280876,
    -0.008463751524686813,
    -0.000943831168115139,
    0.0072977906093001366,
    0.00602295994758606,
    0.0003643627278506756,
    -0.023768741637468338,
    -0.03253452107310295,
    0.026803050190210342,
    -0.005260871257632971,
    0.011069603264331818,
    0.02499089390039444,
    -0.01309247501194477,
    -0.013675455003976822,
    0.007965057156980038,
    0.01906275562942028,
    0.021619440987706184,
    0.007480410858988762,
    0.013197832740843296,
    0.03309642896056175,
    -0.01959656924009323,
    -0.023305166512727737,
    0.015564873814582825,
    0.01833227463066578,
    -0.011926514096558094,
    0.0002046796726062894,
    -0.020341098308563232,
    -0.010346145369112492,
    -0.013689503073692322,
    -0.01220044493675232,
    -0.026311378926038742,
    0.02587589994072914,
    -0.028446633368730545,
    0.017011789605021477,
    -0.029191162437200546,
    0.0008345223614014685,
    0.016463927924633026,
    -0.0005197656573727727,
    -0.006191532593220472,
    0.00229329033754766,
    -0.03643978387117386,
    0.014054743573069572,
    0.01286771148443222,
    0.004137053620070219,
    -0.0015241776127368212,
    0.023038260638713837,
    -0.0017305035144090652,
    -0.05085274577140808,
    0.004561997018754482,
    0.03978314250707626,
    -0.01241818442940712,
    0.0028832945972681046,
    -0.002765644807368517,
    0.011491035111248493,
    0.02596018649637699,
    -0.016435831785202026,
    0.017222505062818527,
    -0.016000352799892426,
    -0.020860863849520683,
    0.023656360805034637,
    -0.016421783715486526,
    0.02525779977440834,
    -0.003996576182544231,
    -0.011743893846869469,
    0.02556684985756874,
    -0.0036840145476162434,
    -0.027294719591736794,
    -0.08647776395082474,
    -0.001466230722144246,
    0.008260059170424938,
    0.01195460930466652,
    -0.03688931092619896,
    0.014693914912641048,
    -0.003638359485194087,
    0.027688056230545044,
    -0.007181896828114986,
    0.00902566034346819,
    -0.01862727664411068,
    0.009713998064398766,
    -0.013612240552902222,
    0.004256458953022957,
    -0.0007923791999928653,
    -0.010929126292467117,
    -0.0029078780207782984,
    -0.013745693489909172,
    -0.013141642324626446,
    0.016421783715486526,
    -0.014539389871060848,
    -0.017208456993103027,
    -0.008800896815955639,
    -0.007396124303340912,
    -0.012811520136892796,
    -0.0014513051137328148,
    -0.026803050190210342,
    0.02551065944135189,
    -0.00967887882143259,
    0.020341098308563232,
    0.020509671419858932,
    -0.017461316660046577,
    -0.011020435951650143,
    -0.010577932931482792,
    0.013155689463019371,
    -0.0035189539194107056,
    -0.012081039138138294,
    -0.017362982034683228,
    0.03938980773091316,
    -0.027983058243989944,
    0.016941549256443977,
    -0.002600584179162979,
    -0.005552361253648996,
    -0.0018209356348961592,
    0.004512830171734095,
    0.004895630292594433,
    -0.006166948936879635,
    0.029472116380929947,
    -0.0015733445761725307,
    -0.02496279776096344,
    -0.01882394403219223,
    -0.029078779742121696,
    0.00450931815430522,
    0.02574947103857994,
    0.04486841708421707,
    0.014300579205155373,
    0.017377030104398727,
    0.0026778466999530792,
    -0.017096074298024178,
    -0.014455103315412998,
    0.013190808705985546,
    -0.008576133288443089,
    -0.021759917959570885,
    0.01543844398111105,
    0.028011152520775795,
    -0.0012660507345572114,
    -0.020678244531154633,
    0.013275095261633396,
    0.026479952037334442,
    -0.016899406909942627,
    0.0049869404174387455,
    -0.008604228496551514,
    -0.022363970056176186,
    0.008463751524686813,
    -0.020931102335453033,
    -0.0007770145311951637,
    -0.027252577245235443,
    -0.01998990587890148,
    0.0022441232576966286,
    -0.007153801154345274,
    -0.01903466135263443,
    -0.003842051373794675,
    -0.014665819704532623,
    -0.010296978987753391,
    0.015031060203909874,
    0.004474198911339045,
    -0.013865099288523197,
    -0.0028639789670705795,
    -0.02537018246948719,
    -0.04978511855006218,
    -0.0007313594105653465,
    0.010620076209306717,
    0.028193773701786995,
    -0.02600232884287834,
    0.01250949501991272,
    0.006879870779812336,
    -0.022968022152781487,
    -0.008182796649634838,
    -0.012909854762256145,
    0.011273295618593693,
    -0.029331639409065247,
    -0.012685091234743595,
    -0.07771198451519012,
    0.016463927924633026,
    -0.003662942908704281,
    -0.006461950950324535,
    0.007740293629467487,
    -0.029753070324659348,
    0.013127594254910946,
    -0.021226104348897934,
    0.029612593352794647,
    -0.01928751915693283,
    -0.04217125475406647,
    -0.006461950950324535,
    0.00157949049025774,
    -0.00152505561709404,
    -0.011498059146106243,
    -0.020762529224157333,
    0.03593406826257706,
    -0.0036137758288532495,
    0.034304533153772354,
    0.007831604219973087,
    -0.0007805264322087169,
    0.02463970147073269,
    0.03157927468419075,
    0.014427008107304573,
    -0.00042428504093550146,
    -0.0009385632583871484,
    -0.01227770745754242,
    0.03745122253894806,
    -0.007417195942252874,
    -0.01909085176885128,
    -0.002558440901339054,
    -0.010844839736819267,
    -0.008014224469661713,
    0.014736058190464973,
    0.005085274577140808,
    -0.004368840716779232,
    0.023417549207806587,
    0.009187208488583565,
    -0.0068587991409003735,
    0.02524375170469284,
    -0.021998729556798935,
    -0.008976493030786514,
    -0.001637437380850315,
    0.016969645395874977,
    -0.023333262652158737,
    -0.0012695626355707645,
    -0.022476350888609886,
    0.006152901332825422,
    0.0308768879622221,
    0.015621064230799675,
    0.029556402936577797,
    0.009053755551576614,
    -0.034557390958070755,
    -0.013633311726152897,
    0.003842051373794675,
    -0.010149477981030941,
    0.02529994398355484,
    -0.0010193376801908016,
    -0.03677693009376526,
    0.007389100734144449,
    0.028320202603936195,
    -0.0014275995781645179,
    0.02486446499824524,
    -0.009257446974515915,
    -0.007480410858988762,
    -0.022968022152781487,
    -0.03618692606687546,
    0.01265699602663517,
    0.017433220520615578,
    0.0010641147382557392,
    -0.006876358762383461,
    -0.02515946701169014,
    -0.014651771634817123,
    0.002577756531536579,
    0.00023507981677539647,
    -0.001025483594276011,
    -0.005777124781161547,
    -0.01892227865755558,
    -0.04894225671887398,
    0.03340547904372215,
    0.013815932907164097,
    -0.010521742515265942,
    -0.029472116380929947,
    -0.02382493205368519,
    -0.006742905359715223,
    0.010409360751509666,
    -0.015396300703287125,
    0.013436644338071346,
    0.003561096964403987,
    0.005152001045644283,
    -0.005081762559711933,
    0.017573697492480278,
    -0.01559296902269125,
    0.0062231398187577724,
    0.00617748498916626,
    0.03809741511940956,
    -0.0007335543632507324,
    -0.016660595312714577,
    0.03877170756459236,
    0.00975614134222269,
    0.039895523339509964,
    -0.011104722507297993,
    -0.005338133778423071,
    -0.03950218856334686,
    0.004909677896648645,
    -0.020369194447994232,
    -0.005127417854964733,
    -0.020888959988951683,
    0.01813560724258423,
    0.02594613842666149,
    0.028769729658961296,
    -0.012755329720675945,
    -0.027491386979818344,
    0.02452731877565384,
    -0.005078250542283058,
    0.005116881802678108,
    0.011399724520742893,
    -0.026339475065469742,
    -0.03750741109251976,
    0.0010500670177862048,
    0.003666454926133156,
    0.01810751110315323,
    0.027069956064224243,
    0.012755329720675945,
    0.002405672101303935,
    0.052931807935237885,
    0.02508922852575779,
    0.022167302668094635,
    0.011575320735573769,
    -0.014223316684365273,
    -0.009039707481861115,
    0.011793061159551144,
    -0.021324438974261284,
    -0.009271495044231415,
    -0.013829980045557022,
    -0.01560701709240675,
    -0.01792488992214203,
    -0.008983517065644264,
    -0.016042497009038925,
    0.07304814457893372,
    0.009334709495306015,
    -0.023473739624023438,
    0.016365593299269676,
    0.0017928401939570904,
    0.013492834754288197,
    -0.010360193438827991,
    0.008990541100502014,
    -0.01959656924009323,
    -0.029977833852171898,
    -0.022363970056176186,
    -0.006760464981198311,
    0.0038701468147337437,
    -0.022448256611824036,
    -0.01836037077009678,
    0.014412960968911648,
    -0.03273118659853935,
    0.016857264563441277,
    0.004038719460368156,
    -0.009187208488583565,
    0.035372160375118256,
    0.005647183395922184,
    -0.009559473022818565,
    -0.005401348229497671,
    -0.022335873916745186,
    -0.02406374365091324,
    0.017531555145978928,
    0.0055839684791862965,
    -0.006785048637539148,
    -0.021071579307317734,
    0.023628264665603638,
    0.020411336794495583,
    0.0041159819811582565,
    -0.0076770787127316,
    0.010458527132868767,
    0.021099675446748734,
    -0.007311838213354349,
    0.009433044120669365,
    -0.001989508280530572,
    0.01837441697716713,
    -0.008274107240140438,
    0.006546237505972385,
    -0.03683312237262726,
    -0.0650690421462059,
    -0.0027428173925727606,
    -0.0019719486590474844,
    -0.009728046134114265,
    -0.020467527210712433,
    -0.0613604411482811
  ]
}
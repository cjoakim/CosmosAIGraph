{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: legal industry",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: security",
    "topic :: software development",
    "topic :: system :: software distribution",
    "typing :: typed"
  ],
  "description": "# cyclonedx python sbom generation tool\n\n[![shield_pypi-version]][link_pypi]\n[![shield_docker-version]][link_docker]\n[![shield_rtfd]][link_rtfd]\n[![shield_gh-workflow-test]][link_gh-workflow-test]\n[![shield_coverage]][link_codacy]\n[![shield_license]][license_file]  \n[![shield_website]][link_website]\n[![shield_slack]][link_slack]\n[![shield_groups]][link_discussion]\n[![shield_twitter-follow]][link_twitter]\n\n----\n\nthis project provides a runnable python-based application for generating cyclonedx bill-of-material documents from either:\n\n* your current python environment\n* your project's manifest (e.g. `pipfile.lock`, `poetry.lock` or `requirements.txt`)\n* conda as a package manager\n\nthe bom will contain an aggregate of all your current project's dependencies, or those defined by the manifest you supply.\n\n[cyclonedx](https://cyclonedx.org/) is a lightweight bom specification that is easily created, human-readable, and simple to parse.\n\nread the full [documentation][link_rtfd] for more details.\n\n## installation\n\ninstall this from [pypi.org][link_pypi] using your preferred python package manager.\n\nexample using `pip`:\n\n```shell\npip install cyclonedx-bom\n```\n\nexample using `poetry`:\n\n```shell\npoetry add cyclonedx-bom\n```\n\n## usage\n\ncall via one of commands:\n\n```shell\ncyclonedx-py\npython3 -m cyclonedx_py\n```\n\n## basic usage\n\n```shellsession\n$ cyclonedx-py --help\nusage: cyclonedx-py [-h] (-c | -cj | -e | -p | -pip | -r) [-i file_path]\n                 [--format {json,xml}] [--schema-version {1.4,1.3,1.2,1.1,1.0}]\n                 [-o file_path] [-f] [-x]\n\ncyclonedx sbom generator\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c, --conda           build a sbom based on the output from `conda list\n                        --explicit` or `conda list --explicit --md5`\n  -cj, --conda-json     build a sbom based on the output from `conda list\n                        --json`\n  -e, --e, --environment\n                        build a sbom based on the packages installed in your\n                        current python environment (default)\n  -p, --p, --poetry     build a sbom based on a poetry poetry.lock's contents.\n                        use with -i to specify absolute path to a `poetry.lock`\n                        you wish to use, else we'll look for one in the\n                        current working directory.\n  -pip, --pip           build a sbom based on a pipenv pipfile.lock's\n                        contents. use with -i to specify absolute path to a\n                        `pipfile.lock` you wish to use, else we'll look for\n                        one in the current working directory.\n  -r, --r, --requirements\n                        build a sbom based on a requirements.txt's contents.\n                        use with -i to specify absolute path to a\n                        `requirements.txt` you wish to use, else we'll look\n                        for one in the current working directory.\n  -x                    enable debug output\n\ninput method:\n  flags to determine how this tool obtains its input\n\n  -i file_path, --in-file file_path\n                        file to read input from. use \"-\" to read from stdin.\n\nsbom output configuration:\n  choose the output format and schema version\n\n  --format {json,xml}   the output format for your sbom (default: xml)\n  --schema-version {1.4,1.3,1.2,1.1,1.0}\n                        the cyclonedx schema version for your sbom (default:\n                        1.4)\n  -o file_path, --o file_path, --output file_path\n                        output file path for your sbom (set to '-' to output\n                        to stdout)\n  -f, --force           if outputting to a file and the stated file already\n                        exists, it will be overwritten.\n  -pb, --purl-bom-ref   use a component's purl for the bom-ref value, instead\n                        of a random uuid\n```\n\n### advanced usage and details\n\nsee the full [documentation][link_rtfd] for advanced usage and details on input formats, switches and options.\n\n## python support\n\nwe endeavour to support all functionality for all [current actively supported python versions](https://www.python.org/downloads/).\nhowever, some features may not be possible/present in older python versions due to their lack of support.\n\n## contributing\n\nfeel free to open issues, bugreports or pull requests.  \nsee the [contributing][contributing_file] file for details.\n\n## copyright & license\n\ncyclonedx bom is copyright (c) owasp foundation. all rights reserved.  \npermission to modify and redistribute is granted under the terms of the apache 2.0 license.  \nsee the [license][license_file] file for the full license.\n\n[license_file]: https://github.com/cyclonedx/cyclonedx-python/blob/main/license\n[contributing_file]: https://github.com/cyclonedx/cyclonedx-python/blob/main/contributing.md\n[link_rtfd]: https://cyclonedx-bom-tool.readthedocs.io/\n\n[shield_gh-workflow-test]: https://img.shields.io/github/actions/workflow/status/cyclonedx/cyclonedx-python/python.yml?branch=main&logo=github&logocolor=white \"build\"\n[shield_rtfd]: https://img.shields.io/readthedocs/cyclonedx-bom-tool?logo=readthedocs&logocolor=white\n[shield_pypi-version]: https://img.shields.io/pypi/v/cyclonedx-bom?logo=python&logocolor=white&label=pypi \"pypi\"\n[shield_docker-version]: https://img.shields.io/docker/v/cyclonedx/cyclonedx-python?logo=docker&logocolor=white&label=docker \"docker\"\n[shield_license]: https://img.shields.io/github/license/cyclonedx/cyclonedx-python?logo=open%20source%20initiative&logocolor=white \"license\"\n[shield_website]: https://img.shields.io/badge/https://-cyclonedx.org-blue.svg \"homepage\"\n[shield_slack]: https://img.shields.io/badge/slack-join-blue?logo=slack&logocolor=white \"slack join\"\n[shield_groups]: https://img.shields.io/badge/discussion-groups.io-blue.svg \"groups discussion\"\n[shield_twitter-follow]: https://img.shields.io/badge/twitter-follow-blue?logo=twitter&logocolor=white \"twitter follow\"\n[link_gh-workflow-test]: https://github.com/cyclonedx/cyclonedx-python/actions/workflows/python.yml?query=branch%3amain\n[shield_coverage]: https://img.shields.io/codacy/coverage/682ceda9a1044832a087afb95ae280fe?logo=codacy&logocolor=white \"test coverage\"\n[link_pypi]: https://pypi.org/project/cyclonedx-bom/\n[link_docker]: https://hub.docker.com/r/cyclonedx/cyclonedx-python\n[link_codacy]: https://app.codacy.com/gh/cyclonedx/cyclonedx-python\n[link_website]: https://cyclonedx.org/\n[link_slack]: https://cyclonedx.org/slack/invite\n[link_discussion]: https://groups.io/g/cyclonedx\n[link_twitter]: https://twitter.com/cyclonedx_spec\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "cyclonedx-bom",
  "package_url": "https://pypi.org/project/cyclonedx-bom/",
  "project_url": "https://pypi.org/project/cyclonedx-bom/",
  "project_urls": {
    "Documentation": "https://cyclonedx-bom-tool.readthedocs.io/",
    "Homepage": "https://github.com/CycloneDX/cyclonedx-python/#readme",
    "Repository": "https://github.com/CycloneDX/cyclonedx-python"
  },
  "release_url": "https://pypi.org/project/cyclonedx-bom/3.11.7/",
  "requires_dist": [
    "chardet (>=5.0,<6.0)",
    "cyclonedx-python-lib (>=2.0.0,<4.0.0)",
    "importlib-metadata (>=3.4) ; python_version < \"3.8\"",
    "packageurl-python (>=0.9)",
    "pip-requirements-parser (>=32.0.0,<33.0.0)",
    "setuptools (>=47.0.0)",
    "toml (>=0.10.0,<0.11.0)"
  ],
  "requires_python": ">=3.6,<4.0",
  "summary": "cyclonedx software bill of materials (sbom) generation utility",
  "version": "3.11.7",
  "releases": [],
  "developers": [
    "paul_horton",
    "phorton@sonatype.com",
    "steve.springett@owasp.org",
    "steven_springett"
  ],
  "kwds": "cyclonedx_py cyclonedx_spec shield_docker cyclonedx pipfile",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_cyclonedx_bom",
  "homepage": "https://github.com/cyclonedx/cyclonedx-python/#readme",
  "release_count": 70,
  "dependency_ids": [
    "pypi_chardet",
    "pypi_cyclonedx_python_lib",
    "pypi_importlib_metadata",
    "pypi_packageurl_python",
    "pypi_pip_requirements_parser",
    "pypi_setuptools",
    "pypi_toml"
  ]
}
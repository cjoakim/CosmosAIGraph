{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: scientific/engineering :: image recognition",
    "topic :: scientific/engineering :: information analysis"
  ],
  "description": "<div align=\"center\">\n\n<img src=\"https://github.com/lightning-ai/lightning-bolts/raw/0.7.0/docs/source/_images/logos/bolts_logo.png\" width=\"400px\">\n\n**deep learning components for extending pytorch lightning**\n\n______________________________________________________________________\n\n<p align=\"center\">\n  <a href=\"#install\">installation</a> \u2022\n  <a href=\"https://lightning-bolts.readthedocs.io/en/latest/\">latest docs</a> \u2022\n  <a href=\"https://lightning-bolts.readthedocs.io/en/0.7.0\">stable docs</a> \u2022\n  <a href=\"#what-is-bolts\">about</a> \u2022\n  <a href=\"#team\">community</a> \u2022\n  <a href=\"https://www.lightning.ai/\">website</a> \u2022\n  <a href=\"#license\">license</a>\n</p>\n\n[![pypi status](https://badge.fury.io/py/lightning-bolts.svg)](https://badge.fury.io/py/lightning-bolts)\n[![pypi status](https://pepy.tech/badge/lightning-bolts)](https://pepy.tech/project/lightning-bolts)\n[![build status](https://dev.azure.com/lightning-ai/compatibility/_apis/build/status%2fprojects%2flightning-universe.bolts?branchname=master)](https://dev.azure.com/lightning-ai/compatibility/_build/latest?definitionid=51&branchname=master)\n[![codecov](https://codecov.io/gh/lightning-universe/lightning-bolts/release/0.7.0/graph/badge.svg?token=o8p0qhvj90)](https://codecov.io/gh/lightning-universe/lightning-bolts)\n\n[![documentation status](https://readthedocs.org/projects/lightning-bolts/badge/?version=latest)](https://lightning-bolts.readthedocs.io/en/latest/)\n[![slack](https://img.shields.io/badge/slack-chat-green.svg?logo=slack)](https://www.pytorchlightning.ai/community)\n[![license](https://img.shields.io/badge/license-apache%202.0-blue.svg)](https://github.com/pytorchlightning/lightning-bolts/blob/master/license)\n[![doi](https://zenodo.org/badge/250025410.svg)](https://zenodo.org/badge/latestdoi/250025410)\n\n</div>\n\n______________________________________________________________________\n\n## getting started\n\npip / conda\n\n```bash\npip install lightning-bolts\n```\n\n<details>\n  <summary>other installations</summary>\n\ninstall bleeding-edge (no guarantees)\n\n```bash\npip install https://github.com/lightning-universe/lightning-bolts/archive/refs/heads/master.zip\n```\n\nto install all optional dependencies\n\n```bash\npip install lightning-bolts[\"extra\"]\n```\n\n</details>\n\n## what is bolts?\n\nbolts package provides a variety of components to extend pytorch lightning, such as callbacks & datasets, for applied research and production.\n\n#### example 1: accelerate lightning training with the torch ort callback\n\ntorch ort converts your model into an optimized onnx graph, speeding up training & inference when using nvidia or amd gpus. see the [documentation](https://lightning-bolts.readthedocs.io/en/latest/callbacks/torch_ort.html) for more details.\n\n```python\nfrom pytorch_lightning import lightningmodule, trainer\nimport torchvision.models as models\nfrom pl_bolts.callbacks import ortcallback\n\n\nclass visionmodel(lightningmodule):\n    def __init__(self):\n        super().__init__()\n        self.model = models.vgg19_bn(pretrained=true)\n\n    ...\n\n\nmodel = visionmodel()\ntrainer = trainer(gpus=1, callbacks=ortcallback())\ntrainer.fit(model)\n```\n\n#### example 2: introduce sparsity with the sparsemlcallback to accelerate inference\n\nwe can introduce sparsity during fine-tuning with [sparseml](https://github.com/neuralmagic/sparseml), which ultimately allows us to leverage the [deepsparse](https://github.com/neuralmagic/deepsparse) engine to see performance improvements at inference time.\n\n```python\nfrom pytorch_lightning import lightningmodule, trainer\nimport torchvision.models as models\nfrom pl_bolts.callbacks import sparsemlcallback\n\n\nclass visionmodel(lightningmodule):\n    def __init__(self):\n        super().__init__()\n        self.model = models.vgg19_bn(pretrained=true)\n\n    ...\n\n\nmodel = visionmodel()\ntrainer = trainer(gpus=1, callbacks=sparsemlcallback(recipe_path=\"recipe.yaml\"))\ntrainer.fit(model)\n```\n\n## are specific research implementations supported?\n\nwe'd like to encourage users to contribute general components that will help a broad range of problems; however, components that help specific domains will also be welcomed!\n\nfor example, a callback to help train ssl models would be a great contribution; however, the next greatest ssl model from your latest paper would be a good contribution to [lightning flash](https://github.com/pytorchlightning/lightning-flash).\n\nuse [lightning flash](https://github.com/pytorchlightning/lightning-flash) to train, predict and serve state-of-the-art models for applied research. we suggest looking at our [vissl](https://lightning-flash.readthedocs.io/en/latest/integrations/vissl.html) flash integration for ssl-based tasks.\n\n## contribute!\n\nbolts is supported by the pytorch lightning team and the pytorch lightning community!\n\njoin our slack and/or read our [contributing](./.github/contributing.md) guidelines to get help becoming a contributor!\n\n______________________________________________________________________\n\n## license\n\nplease observe the apache 2.0 license that is listed in this repository.\nin addition, the lightning framework is patent pending.\n",
  "docs_url": null,
  "keywords": "deep learning,pytorch,ai",
  "license": "apache-2.0",
  "name": "lightning-bolts",
  "package_url": "https://pypi.org/project/lightning-bolts/",
  "project_url": "https://pypi.org/project/lightning-bolts/",
  "project_urls": {
    "Bug Tracker": "https://github.com/PyTorchLightning/lightning-bolts/issues",
    "Documentation": "https://lightning-bolts.rtfd.io/en/latest/",
    "Download": "https://github.com/PyTorchLightning/lightning-bolts",
    "Homepage": "https://github.com/Lightning-AI/lightning-bolts",
    "Source Code": "https://github.com/PyTorchLightning/lightning-bolts"
  },
  "release_url": "https://pypi.org/project/lightning-bolts/0.7.0/",
  "requires_dist": [
    "numpy",
    "pytorch-lightning (<2.0.0,>1.7.0)",
    "torchmetrics",
    "lightning-utilities (>0.3.1)",
    "torchvision (>=0.10.0)",
    "tensorboard (>=2.9.1)",
    "torchvision (>=0.10.0) ; extra == 'dev'",
    "scikit-learn (>=1.0.2) ; extra == 'dev'",
    "Pillow (>9.0.0) ; extra == 'dev'",
    "gym[atari] (<0.22.0,>=0.17.2) ; extra == 'dev'",
    "atari-py (!=0.2.6,<0.3,>0.2) ; extra == 'dev'",
    "box2d-py (<2.4,>2.3) ; extra == 'dev'",
    "opencv-python-headless (>=4.5.5.62) ; extra == 'dev'",
    "matplotlib (>3.0.0) ; extra == 'dev'",
    "wandb (>0.13.0) ; extra == 'dev'",
    "scipy (>1.5.0) ; extra == 'dev'",
    "coverage[toml] (>7.0.0) ; extra == 'dev'",
    "pytest (==7.4.0) ; extra == 'dev'",
    "pytest-cov (==4.1.0) ; extra == 'dev'",
    "pytest-timeout (==2.1.0) ; extra == 'dev'",
    "pytest-rerunfailures (==11.1.2) ; extra == 'dev'",
    "sparseml (>1.0.0) ; extra == 'dev'",
    "ale-py (>=0.7) ; extra == 'dev'",
    "jsonargparse[signatures] (>4.0.0) ; extra == 'dev'",
    "torchvision (>=0.10.0) ; extra == 'extra'",
    "scikit-learn (>=1.0.2) ; extra == 'extra'",
    "Pillow (>9.0.0) ; extra == 'extra'",
    "gym[atari] (<0.22.0,>=0.17.2) ; extra == 'extra'",
    "atari-py (!=0.2.6,<0.3,>0.2) ; extra == 'extra'",
    "box2d-py (<2.4,>2.3) ; extra == 'extra'",
    "opencv-python-headless (>=4.5.5.62) ; extra == 'extra'",
    "matplotlib (>3.0.0) ; extra == 'extra'",
    "wandb (>0.13.0) ; extra == 'extra'",
    "scipy (>1.5.0) ; extra == 'extra'",
    "matplotlib (>3.0.0) ; extra == 'loggers'",
    "wandb (>0.13.0) ; extra == 'loggers'",
    "scipy (>1.5.0) ; extra == 'loggers'",
    "torchvision (>=0.10.0) ; extra == 'models'",
    "scikit-learn (>=1.0.2) ; extra == 'models'",
    "Pillow (>9.0.0) ; extra == 'models'",
    "gym[atari] (<0.22.0,>=0.17.2) ; extra == 'models'",
    "atari-py (!=0.2.6,<0.3,>0.2) ; extra == 'models'",
    "box2d-py (<2.4,>2.3) ; extra == 'models'",
    "opencv-python-headless (>=4.5.5.62) ; extra == 'models'",
    "coverage[toml] (>7.0.0) ; extra == 'test'",
    "pytest (==7.4.0) ; extra == 'test'",
    "pytest-cov (==4.1.0) ; extra == 'test'",
    "pytest-timeout (==2.1.0) ; extra == 'test'",
    "pytest-rerunfailures (==11.1.2) ; extra == 'test'",
    "scikit-learn (>=1.0.2) ; extra == 'test'",
    "sparseml (>1.0.0) ; extra == 'test'",
    "ale-py (>=0.7) ; extra == 'test'",
    "jsonargparse[signatures] (>4.0.0) ; extra == 'test'",
    "mypy (==1.3.0) ; extra == 'typing'"
  ],
  "requires_python": ">=3.8",
  "summary": "lightning bolts is a community contribution for ml researchers.",
  "version": "0.7.0",
  "releases": [],
  "developers": [
    "lightning_ai_et_al",
    "pytorch@lightning.ai"
  ],
  "kwds": "pytorch_lightning pytorchlightning pytorch lightning pl_bolts",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_lightning_bolts",
  "homepage": "https://github.com/lightning-ai/lightning-bolts",
  "release_count": 11,
  "dependency_ids": [
    "pypi_ale_py",
    "pypi_atari_py",
    "pypi_box2d_py",
    "pypi_coverage",
    "pypi_gym",
    "pypi_jsonargparse",
    "pypi_lightning_utilities",
    "pypi_matplotlib",
    "pypi_mypy",
    "pypi_numpy",
    "pypi_opencv_python_headless",
    "pypi_pillow",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_rerunfailures",
    "pypi_pytest_timeout",
    "pypi_pytorch_lightning",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_sparseml",
    "pypi_tensorboard",
    "pypi_torchmetrics",
    "pypi_torchvision",
    "pypi_wandb"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: cc0 1.0 universal (cc0 1.0) public domain dedication",
    "license :: dfsg approved",
    "license :: osi approved",
    "license :: osi approved :: apache software license",
    "license :: osi approved :: gnu general public license v3 or later (gplv3+)",
    "license :: other/proprietary license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "<!--\nspdx-filecopyrighttext: 2017 free software foundation europe e.v. <https://fsfe.org>\n\nspdx-license-identifier: cc-by-sa-4.0\n-->\n\n# reuse\n\n[![the latest version of reuse can be found on pypi.](https://img.shields.io/pypi/v/reuse.svg)](https://pypi.python.org/pypi/reuse)\n[![information on what versions of python reuse supports can be found on pypi.](https://img.shields.io/pypi/pyversions/reuse.svg)](https://pypi.python.org/pypi/reuse)\n[![reuse status](https://api.reuse.software/badge/github.com/fsfe/reuse-tool)](https://api.reuse.software/info/github.com/fsfe/reuse-tool)\n[![standard-readme compliant](https://img.shields.io/badge/readme%20style-standard-brightgreen.svg)](https://github.com/richardlitt/standard-readme)\n[![packaging status](https://repology.org/badge/tiny-repos/reuse.svg?header=in%20distro%20repos)](https://repology.org/project/reuse/versions)\n[![translation status](https://hosted.weblate.org/widgets/fsfe/-/reuse-tool/svg-badge.svg)](https://hosted.weblate.org/projects/fsfe/reuse-tool/)\n\nreuse is a tool for compliance with the [reuse](https://reuse.software/)\nrecommendations.\n\n- documentation: <https://reuse.readthedocs.io> and <https://reuse.software>\n- source code: <https://github.com/fsfe/reuse-tool>\n- pypi: <https://pypi.python.org/pypi/reuse>\n- reuse: 3.0\n- python: 3.8+\n\n## table of contents\n\n- [background](#background)\n- [install](#install)\n- [usage](#usage)\n- [maintainers](#maintainers)\n- [contributing](#contributing)\n- [license](#license)\n\n## background\n\n<!-- reuse-ignorestart -->\n\ncopyright and licensing is difficult, especially when reusing software from\ndifferent projects that are released under various different licenses.\n[reuse](https://reuse.software) was started by the\n[free software foundation europe](https://fsfe.org) (fsfe) to provide a set of\nrecommendations to make licensing your free software projects easier. not only\ndo these recommendations make it easier for you to declare the licenses under\nwhich your works are released, but they also make it easier for a computer to\nunderstand how your project is licensed.\n\n<!-- reuse-ignoreend -->\n\nas a short summary, the recommendations are threefold:\n\n1. choose and provide licenses\n2. add copyright and licensing information to each file\n3. confirm reuse compliance\n\nyou are recommended to read [our tutorial](https://reuse.software/tutorial) for\na step-by-step guide through these three steps. the\n[faq](https://reuse.software/faq) covers basic questions about licensing,\ncopyright, and more complex use cases. advanced users and integrators will find\nthe [full specification](https://reuse.software/spec) helpful.\n\nthis tool exists to facilitate the developer in complying with the above\nrecommendations.\n\nthere are [other tools](https://reuse.software/comparison) that have a lot more\nfeatures and functionality surrounding the analysis and inspection of copyright\nand licenses in software projects. the reuse helper tool, on the other hand, is\nsolely designed to be a simple tool to assist in compliance with the reuse\nrecommendations.\n\n## install\n\n### installation via package manager (recommended)\n\nthere are packages available for easy install on many operating systems. you are\nwelcome to help us package this tool for more distributions!\n\nan automatically generated list can be found at\n[repology.org](https://repology.org/project/reuse/versions), without any\nguarantee for completeness.\n\n### install and run via pipx (recommended)\n\nthe following one-liner both installs and runs this tool from\n[pypi](https://pypi.org/project/reuse/) via\n[pipx](https://pypa.github.io/pipx/):\n\n```bash\npipx run reuse lint\n```\n\npipx automatically isolates reuse into its own python virtualenv, which means\nthat it won't interfere with other python packages, and other python packages\nwon't interfere with it.\n\nif you want to be able to use reuse without prepending it with `pipx run` every\ntime, install it globally like so:\n\n```bash\npipx install reuse\n```\n\nreuse will then be available in `~/.local/bin`, which must be added to your\n`$path`.\n\nafter this, make sure that `~/.local/bin` is in your `$path`. on windows, the\nrequired path for your environment may look like\n`%userprofile%\\appdata\\roaming\\python\\python39\\scripts`, depending on the python\nversion you have installed.\n\nto upgrade reuse, run this command:\n\n```bash\npipx upgrade reuse\n```\n\nfor full functionality, the following pieces of software are recommended:\n\n- git\n- mercurial 4.3+\n\n### installation via pip\n\nto install reuse into `~/.local/bin`, run:\n\n```bash\npip3 install --user reuse\n```\n\nsubsequently, make sure that `~/.local/bin` is in your `$path` like described in\nthe previous section.\n\nto upgrade reuse, run this command:\n\n```bash\npip3 install --user --upgrade reuse\n```\n\n### installation from source\n\nyou can also install this tool from the source code, but we recommend the\nmethods above for easier and more stable updates. please make sure the\nrequirements for the installation via pip are present on your machine.\n\n```bash\npip install .\n```\n\n## usage\n\nfirst, read the [reuse tutorial](https://reuse.software/tutorial/). in a\nnutshell:\n\n<!-- reuse-ignorestart -->\n\n1. put your licenses in the `licenses/` directory.\n2. add a comment header to each file that says\n   `spdx-license-identifier: gpl-3.0-or-later`, and\n   `spdx-filecopyrighttext: $year $name`. you can be flexible with the format,\n   just make sure that the line starts with `spdx-filecopyrighttext:`.\n3. verify your work using this tool.\n\nexample of header:\n\n```\n# spdx-filecopyrighttext: 2017 free software foundation europe e.v. <https://fsfe.org>\n#\n# spdx-license-identifier: cc-by-sa-4.0\n```\n\n<!-- reuse-ignoreend -->\n\n### cli\n\nto check against the recommendations, use `reuse lint`:\n\n```\n~/projects/reuse-tool $ reuse lint\n[...]\n\ncongratulations! your project is compliant with version 3.0 of the reuse specification :-)\n```\n\nthis tool can do various more things, detailed in the documentation. here a\nshort summary:\n\n- `annotate` --- add copyright and/or licensing information to the header of a\n  file.\n- `download` --- download the specified license into the `licenses/` directory.\n- `init` --- set up the project for reuse compliance.\n- `lint` --- verify the project for reuse compliance.\n- `spdx` --- generate an spdx document of all files in the project.\n- `supported-licenses` --- prints all licenses supported by reuse.\n\n### example demo\n\nin this screencast, we are going to follow the\n[tutorial](https://reuse.software/tutorial), making the\n[reuse example repository](https://github.com/fsfe/reuse-example/) compliant.\n\n![demo of some basic reuse tool commands](https://download.fsfe.org/videos/reuse/screencasts/reuse-tool.gif)\n\n### run in docker\n\nthe `fsfe/reuse` docker image is available on\n[docker hub](https://hub.docker.com/r/fsfe/reuse). with it, you can easily\ninclude reuse in ci/cd processes. this way, you can check for reuse compliance\nfor each build. in our [resources for developers](https://reuse.software/dev/)\nyou can learn how to integrate the reuse tool in drone, travis, github, or\ngitlab ci.\n\nyou can run the helper tool simply by providing the command you want to run\n(e.g., `lint`, `spdx`). the image's working directory is `/data` by default. so\nif you want to lint a project that is in your current working directory, you can\nmount it on the container's `/data` directory, and tell the tool to lint. that\nlooks a little like this:\n\n```bash\ndocker run --rm --volume $(pwd):/data fsfe/reuse lint\n```\n\nyou can also provide additional arguments, like so:\n\n```bash\ndocker run --rm --volume $(pwd):/data fsfe/reuse --include-submodules spdx -o out.spdx\n```\n\nthere are a number of tags available:\n\n- `latest` is the most recent stable release.\n- `dev` follows the `main` branch of this repository. up-to-date, but\n  potentially unstable.\n- `latest-extra` has a few extra packages installed, currently `openssh-client`.\n- `latest-debian` is based on `python:slim`. it is larger, but may be better\n  suited for license compliance.\n\n### run as pre-commit hook\n\nyou can automatically run `reuse lint` on every commit as a pre-commit hook for\ngit. this uses [pre-commit](https://pre-commit.com/). once you\n[have it installed](https://pre-commit.com/#install), add this to the\n`.pre-commit-config.yaml` in your repository:\n\n```yaml\nrepos:\n  - repo: https://github.com/fsfe/reuse-tool\n    rev: v2.1.0\n    hooks:\n      - id: reuse\n```\n\nthen run `pre-commit install`. now, every time you commit, `reuse lint` is run\nin the background, and will prevent your commit from going through if there was\nan error.\n\n## maintainers\n\n- carmen bianca bakker <carmenbianca@fsfe.org>\n- max mehl <max.mehl@fsfe.org>\n- linus sehn <linus@fsfe.org>\n\n## contributing\n\nif you're interested in contributing to the reuse project, there are several\nways to get involved. development of the project takes place on github at\n<https://github.com/fsfe/reuse-tool>. there, you can submit bug reports, feature\nrequests, and pull requests. even and especially when in doubt, feel free to\nopen an issue with a question. contributions of all types are welcome, and the\ndevelopment team is happy to provide guidance and support for new contributors.\n\nadditionally, the <reuse@lists.fsfe.org> mailing list is available for\ndiscussion and support related to the project.\n\nyou can find the full contribution guidelines at\n<https://reuse.readthedocs.io/en/latest/contributing.html>.\n\n## license\n\nthis work is licensed under multiple licences. because keeping this section\nup-to-date is challenging, here is a brief summary as of february 2023:\n\n- all original source code is licensed under gpl-3.0-or-later.\n- all documentation is licensed under cc-by-sa-4.0.\n- some configuration and data files are licensed under cc0-1.0.\n- some code borrowed from\n  [spdx/tools-python](https://github.com/spdx/tools-python) is licensed under\n  apache-2.0.\n\nfor more accurate information, check the individual files.\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0 and cc0-1.0 and cc-by-sa-4.0 and gpl-3.0-or-later",
  "name": "reuse",
  "package_url": "https://pypi.org/project/reuse/",
  "project_url": "https://pypi.org/project/reuse/",
  "project_urls": {
    "Documentation": "https://reuse.readthedocs.org/",
    "Homepage": "https://reuse.software/",
    "Repository": "https://github.com/fsfe/reuse-tool"
  },
  "release_url": "https://pypi.org/project/reuse/2.1.0/",
  "requires_dist": [
    "Jinja2 (>=3.0.0,<4.0.0)",
    "binaryornot (>=0.4.4,<0.5.0)",
    "boolean.py (>=3.8)",
    "license-expression (>=1.0)",
    "python-debian (>=0.1.38,<0.2.0,!=0.1.45,!=0.1.46,!=0.1.47)"
  ],
  "requires_python": ">=3.8,<4.0",
  "summary": "reuse is a tool for compliance with the reuse recommendations.",
  "version": "2.1.0",
  "releases": [],
  "developers": [
    "carmen_bianca_bakker",
    "carmenbianca@fsfe.org",
    "contact@fsfe.org",
    "free_software_foundation_europe"
  ],
  "kwds": "pyversions reuse pipx pip3 pypi",
  "license_kwds": "apache-2.0 and cc0-1.0 and cc-by-sa-4.0 and gpl-3.0-or-later",
  "libtype": "pypi",
  "id": "pypi_reuse",
  "homepage": "https://reuse.software/",
  "release_count": 18,
  "dependency_ids": [
    "pypi_binaryornot",
    "pypi_boolean.py",
    "pypi_jinja2",
    "pypi_license_expression",
    "pypi_python_debian"
  ]
}
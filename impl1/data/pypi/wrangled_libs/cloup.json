{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": ".. docs-index-start\n\n.. |pypi-release| image:: https://img.shields.io/pypi/v/cloup.svg\n    :alt: latest release on pypi\n    :target: https://pypi.org/project/cloup/\n\n.. |tests-status| image:: https://github.com/janluke/cloup/workflows/tests/badge.svg\n    :alt: tests status\n    :target: https://github.com/janluke/cloup/actions?query=workflow%3atests\n\n.. |coverage| image:: https://codecov.io/github/janluke/cloup/coverage.svg?branch=master\n    :alt: coverage status\n    :target: https://app.codecov.io/github/janluke/cloup/tree/master\n\n.. |python-versions| image:: https://img.shields.io/pypi/pyversions/cloup.svg\n    :alt: supported versions\n    :target: https://pypi.org/project/cloup\n\n.. |dev-docs| image:: https://readthedocs.org/projects/cloup/badge/?version=latest\n    :alt: documentation status (master branch)\n    :target: https://cloup.readthedocs.io/en/latest/\n\n.. |release-docs| image:: https://readthedocs.org/projects/cloup/badge/?version=stable\n    :alt: documentation status (latest release)\n    :target: https://cloup.readthedocs.io/en/stable/\n\n.. |downloads| image:: https://static.pepy.tech/personalized-badge/cloup?period=week&units=international_system&left_color=grey&right_color=blue&left_text=downloads%20/%20week\n    :alt: pypi - downloads\n    :target: https://pepy.tech/project/cloup\n\n.. |donate| image:: https://img.shields.io/badge/donate-paypal-green.svg\n    :alt: donate with paypal\n    :target: https://www.paypal.com/donate/?hosted_button_id=4gtn24hxpmnbj\n\n========\noverview\n========\n|pypi-release| |python-versions| |downloads| |tests-status| |coverage| |dev-docs| |donate|\n\n**cloup** \u2014 originally from \"**cl**\\ick + option gr\\ **oup**\\s\" \u2014 enriches\n`click <https://github.com/pallets/click>`_ with several features that make it\nmore expressive and configurable:\n\n- **option groups** and an (optional) help section for positional arguments\n\n- **constraints**, like ``mutually_exclusive``, that can be applied to option groups\n  or to any group of parameters, even *conditionally*\n\n- **subcommand aliases**\n\n- **subcommands sections**, i.e. the possibility of organizing the subcommands of a\n  ``group`` in multiple help sections\n\n- a **themeable helpformatter**  that:\n\n  - has more parameters for adjusting widths and spacing, which can be provided\n    at the context and command level\n  - use a different layout when the terminal width is below a certain threshold\n    in order to improve readability\n\n- suggestions like \"did you mean <subcommand>?\" when you mistype a subcommand.\n\nmoreover, cloup improves on **ide support** providing decorators with *detailed*\ntype hints and adding the static methods ``context.settings()`` and\n``helpformatter.settings()`` for creating dictionaries of settings.\n\ncloup is **statically type-checked** with mypy in strict mode and extensively **tested**\nagainst multiple versions of python with nearly 100% coverage.\n\n\na simple example\n================\n\n.. code-block:: python\n\n    from cloup import (\n        helpformatter, helptheme, style,\n        command, option, option_group\n    )\n    from cloup.constraints import requireatleast, mutually_exclusive\n\n    # check the docs for all available arguments of helpformatter and helptheme.\n    formatter_settings = helpformatter.settings(\n        theme=helptheme(\n            invoked_command=style(fg='bright_yellow'),\n            heading=style(fg='bright_white', bold=true),\n            constraint=style(fg='magenta'),\n            col1=style(fg='bright_yellow'),\n        )\n    )\n\n    # in a multi-command app, you can pass formatter_settings as part\n    # of your context_settings so that they are propagated to subcommands.\n    @command(formatter_settings=formatter_settings)\n    @option_group(\n        \"cool options\",\n        option('--foo', help='this text should describe the option --foo.'),\n        option('--bar', help='this text should describe the option --bar.'),\n        constraint=mutually_exclusive,\n    )\n    @option_group(\n        \"other cool options\",\n        \"this is the optional description of this option group.\",\n        option('--pippo', help='this text should describe the option --pippo.'),\n        option('--pluto', help='this text should describe the option --pluto.'),\n        constraint=requireatleast(1),\n    )\n    def cmd(**kwargs):\n        \"\"\"this is the command description.\"\"\"\n        pass\n\n    if __name__ == '__main__':\n        cmd(prog_name='invoked-command')\n\n\n.. image:: https://raw.githubusercontent.com/janluke/cloup/master/docs/_static/basic-example.png\n    :alt: basic example --help screenshot\n\nif you don't provide ``--pippo`` or ``--pluto``:\n\n.. code-block:: text\n\n    usage: invoked-command [options]\n    try 'invoked-command --help' for help.\n\n    error: at least 1 of the following parameters must be set:\n      --pippo\n      --pluto\n\nthis simple example just scratches the surface. read more in the documentation\n(links below).\n\n\nsupporting the project\n======================\ndesigning, testing and documenting a library takes a lot of time. the most\nconcrete way to show your appreciation and to support future development is by\ndonating. any amount is appreciated.\n\n|donate|\n\napart from that, you can help the project by starring it on github, reporting\nissues, proposing improvements and contributing with your code!\n\n.. docs-index-end\n\n\nlinks\n=====\n\n* documentation (release_ | development_)\n* `changelog <https://cloup.readthedocs.io/en/stable/pages/changelog.html>`_\n* `github repository <https://github.com/janluke/cloup>`_\n* `q&a and discussions <https://github.com/janluke/cloup/discussions>`_\n\n.. _release: https://cloup.readthedocs.io/en/stable/#user-guide\n.. _development: https://cloup.readthedocs.io/en/latest/#user-guide\n",
  "docs_url": null,
  "keywords": "cli,click,argument groups,option groups,constraints,help colors,help themes,help styles",
  "license": "bsd 3-clause",
  "name": "cloup",
  "package_url": "https://pypi.org/project/cloup/",
  "project_url": "https://pypi.org/project/cloup/",
  "project_urls": {
    "Homepage": "https://github.com/janLuke/cloup"
  },
  "release_url": "https://pypi.org/project/cloup/3.0.3/",
  "requires_dist": [
    "click <9.0,>=8.0",
    "typing-extensions ; python_version <= \"3.8\""
  ],
  "requires_python": ">=3.7",
  "summary": "adds features to click: option groups, constraints, subcommand sections and help themes.",
  "version": "3.0.3",
  "releases": [],
  "developers": [
    "gianluca.gippetto@gmail.com",
    "gianluca_gippetto"
  ],
  "kwds": "cli documentation pyversions cl documenting",
  "license_kwds": "bsd 3-clause",
  "libtype": "pypi",
  "id": "pypi_cloup",
  "homepage": "https://github.com/janluke/cloup",
  "release_count": 39,
  "dependency_ids": [
    "pypi_click",
    "pypi_typing_extensions"
  ]
}
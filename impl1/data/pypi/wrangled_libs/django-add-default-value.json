{
  "classifiers": [
    "development status :: 3 - alpha",
    "environment :: web environment",
    "framework :: django",
    "framework :: django :: 1.11",
    "framework :: django :: 2.0",
    "framework :: django :: 2.1",
    "framework :: django :: 2.2",
    "framework :: django :: 3.0",
    "framework :: django :: 3.1",
    "framework :: django :: 3.2",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "django add default value\n========================\n\ndjango migration operation that can be used to transfer a field's default value\nto the database scheme.\n\n[![pypi](https://img.shields.io/pypi/v/django-add-default-value.svg?branch=master)](https://pypi.python.org/pypi/django-add-default-value/)\n[![license](https://img.shields.io/github/license/3yourmind/django-add-default-value.svg)](./license)\n[![contributing](https://img.shields.io/badge/pr-welcome-green.svg)](https://github.com/3yourmind/django-add-default-value/pulls)\n[![3yourmind-careers](https://img.shields.io/badge/3yourmind-hiring-brightgreen.svg)](https://www.3yourmind.com/career)\n[![stars](https://img.shields.io/github/stars/3yourmind/django-add-default-value.svg?style=social&label=stars)](https://github.com/3yourmind/django-add-default-value/stargazers)\n\n\nsupported databases\n------------\n\n* mysql (or compatible)\n* postgresql\n* mssql (currently not tested)\n* cockroachdb\n\ninstallation\n------------\n`pip install django-add-default-value`\n\nyou can then use ``adddefaultvalue`` in your migration file to transfer the default\nvalues to your database. afterwards, it's just the usual ``./manage.py migrate``.\n\nusage\n-----\n\nadd this manually to a autogenerated migration, that adds a new field\n\n```python\nadddefaultvalue(\n    model_name='my_model',\n    name='my_field',\n    value='my_default'\n)\n```\n\n### example\n\ngiven the following migration:\n\n**before**\n\n```python\nfrom django.db import migrations, models\n\n\nclass migration(migrations.migration):\n    dependencies = [\n        ...\n    ]\n\n    operations = [\n         migrations.addfield(\n             field=models.charfield(default='my_default', max_length=255),\n             model_name='my_model',\n             name='my_field',\n         ),\n     ]\n```\n\nmodify the migration to add a default value:\n\n**after**\n\n```python\nfrom django.db import migrations, models\n\nfrom django_add_default_value import adddefaultvalue\n\n\nclass migration(migrations.migration):\n    dependencies = [\n        ...\n    ]\n\n    operations = [\n         migrations.addfield(\n             field=models.charfield(default='my_default', max_length=255),\n             model_name='my_model',\n             name='my_field',\n         ),\n         adddefaultvalue(\n             model_name='my_model',\n             name='my_field',\n             value='my_default'\n         )\n     ]\n```\n\nif you check ``python manage.py sqlmigrate [app name] [migration]``,\nyou will see that the default value now gets set.\n\ncontributing\n------------\n\nfirst of all, thank you very much for contributing to this project. please base\nyour work on the ``master`` branch and target ``master`` in your pull request.\n\nto succesfully use the `dbshell` management command (very useful for debugging),\nthe client binaries for the respective database engines are needed.\n\nthen install [pipenv](https://pipenv.readthedocs.io/en/latest/install/#installing-pipenv).\nedit the `pipfile` to select your django version and the accompanying ms-sql\ndriver. make sure you don't commit this change in any pull request - we always\nset it to the oldest supported version.\n\nonce you've updated the pipfile, run `pipenv install --python 3 --dev`. you\nshould now have a working development environment as a virtualenv. to access it,\nrun `pipenv shell` or prefix commands with `pipenv run`. for more information\nsee the [pipenv documentation](https://pipenv.readthedocs.io/en/latest/basics/).\n\n### testing\ncopy the relevant sample settings file in `test_project` to the file without\n `.sample` in it. adjust the values to match your environment (or match your\nenvironment to the values).\n\nyou should now be able to run the tests using `tox`. select your environment\nwhen needed, using the `-e` command line flag. see\n[tox's excellent documentation](https://tox.readthedocs.io/en/latest/).\n\n\nlicense\n-------\n\n``django-add-default-value`` is released under the apache 2.0 license.\n\n\n\n\n",
  "docs_url": null,
  "keywords": "django,migration,default,database backward compatibility",
  "license": "apache-2.0",
  "name": "django-add-default-value",
  "package_url": "https://pypi.org/project/django-add-default-value/",
  "project_url": "https://pypi.org/project/django-add-default-value/",
  "project_urls": {
    "Homepage": "https://github.com/3YOURMIND/django-add-default-value"
  },
  "release_url": "https://pypi.org/project/django-add-default-value/0.10.0/",
  "requires_dist": [
    "Django (>=1.11)"
  ],
  "requires_python": "",
  "summary": "this django migration operation can be used to transfer a fields default value to the database scheme.",
  "version": "0.10.0",
  "releases": [],
  "developers": [
    "3yourmind_gmbh"
  ],
  "kwds": "django_add_default_value django my_field migrations migration",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_django_add_default_value",
  "homepage": "https://github.com/3yourmind/django-add-default-value",
  "release_count": 19,
  "dependency_ids": [
    "pypi_django"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering"
  ],
  "description": "![](http://i.imgur.com/eoowdsd.png)\n\n[![pypi version](https://badge.fury.io/py/lifelines.svg)](https://badge.fury.io/py/lifelines)\n[![anaconda-server badge](https://anaconda.org/conda-forge/lifelines/badges/version.svg\n)](https://conda.anaconda.org/conda-forge)\n[![doi](https://zenodo.org/badge/12420595.svg)](https://zenodo.org/badge/latestdoi/12420595)\n\n\n[what is survival analysis and why should i learn it?](http://lifelines.readthedocs.org/en/latest/survival%20analysis%20intro.html)\n survival analysis was originally developed and applied heavily by the actuarial and medical community. its purpose was to answer *why do events occur now versus later* under uncertainty (where *events* might refer to deaths, disease remission, etc.). this is great for researchers who are interested in measuring lifetimes: they can answer questions like *what factors might influence deaths?*\n\nbut outside of medicine and actuarial science, there are many other interesting and exciting applications of survival analysis. for example:\n- saas providers are interested in measuring subscriber lifetimes, or time to some first action\n- inventory stock out is a censoring event for true \"demand\" of a good.\n- sociologists are interested in measuring political parties' lifetimes, or relationships, or marriages\n- a/b tests to determine how long it takes different groups to perform an action.\n\n*lifelines* is a pure python implementation of the best parts of survival analysis.\n\n\n## documentation and intro to survival analysis\n\nif you are new to survival analysis, wondering why it is useful, or are interested in *lifelines* examples, api, and syntax, please read the [documentation and tutorials page](http://lifelines.readthedocs.org/en/latest/index.html)\n\n## contact\n - start a conversation in our [discussions room](https://github.com/camdavidsonpilon/lifelines/discussions).\n - some users have posted common questions at [stats.stackexchange.com](https://stats.stackexchange.com/search?tab=votes&q=%22lifelines%22%20is%3aquestion)\n - creating an issue in the [github repository](https://github.com/camdavidsonpilon/lifelines).\n\n## development\n\nsee our [contributing](https://github.com/camdavidsonpilon/lifelines/blob/master/.github/contributing.md) guidelines.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "lifelines",
  "package_url": "https://pypi.org/project/lifelines/",
  "project_url": "https://pypi.org/project/lifelines/",
  "project_urls": {
    "Homepage": "https://github.com/CamDavidsonPilon/lifelines"
  },
  "release_url": "https://pypi.org/project/lifelines/0.27.8/",
  "requires_dist": [
    "numpy <2.0,>=1.14.0",
    "scipy >=1.2.0",
    "pandas >=1.0.0",
    "matplotlib >=3.0",
    "autograd >=1.5",
    "autograd-gamma >=0.3",
    "formulaic >=0.2.2"
  ],
  "requires_python": ">=3.7",
  "summary": "survival analysis in python, including kaplan meier, nelson aalen and regression",
  "version": "0.27.8",
  "releases": [],
  "developers": [
    "cam.davidson.pilon@gmail.com",
    "cameron_davidson"
  ],
  "kwds": "survival lifelines lifetimes deaths events",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_lifelines",
  "homepage": "https://github.com/camdavidsonpilon/lifelines",
  "release_count": 169,
  "dependency_ids": [
    "pypi_autograd",
    "pypi_autograd_gamma",
    "pypi_formulaic",
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_scipy"
  ]
}
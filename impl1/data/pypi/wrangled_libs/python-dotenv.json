{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: pypy",
    "topic :: system :: systems administration",
    "topic :: utilities"
  ],
  "description": "# python-dotenv\n\n[![build status][build_status_badge]][build_status_link]\n[![pypi version][pypi_badge]][pypi_link]\n\npython-dotenv reads key-value pairs from a `.env` file and can set them as environment\nvariables. it helps in the development of applications following the\n[12-factor](http://12factor.net/) principles.\n\n- [getting started](#getting-started)\n- [other use cases](#other-use-cases)\n  * [load configuration without altering the environment](#load-configuration-without-altering-the-environment)\n  * [parse configuration as a stream](#parse-configuration-as-a-stream)\n  * [load .env files in ipython](#load-env-files-in-ipython)\n- [command-line interface](#command-line-interface)\n- [file format](#file-format)\n  * [multiline values](#multiline-values)\n  * [variable expansion](#variable-expansion)\n- [related projects](#related-projects)\n- [acknowledgements](#acknowledgements)\n\n## getting started\n\n```shell\npip install python-dotenv\n```\n\nif your application takes its configuration from environment variables, like a 12-factor\napplication, launching it in development is not very practical because you have to set\nthose environment variables yourself.\n\nto help you with that, you can add python-dotenv to your application to make it load the\nconfiguration from a `.env` file when it is present (e.g. in development) while remaining\nconfigurable via the environment:\n\n```python\nfrom dotenv import load_dotenv\n\nload_dotenv()  # take environment variables from .env.\n\n# code of your application, which uses environment variables (e.g. from `os.environ` or\n# `os.getenv`) as if they came from the actual environment.\n```\n\nby default, `load_dotenv` doesn't override existing environment variables.\n\nto configure the development environment, add a `.env` in the root directory of your\nproject:\n\n```\n.\n\u251c\u2500\u2500 .env\n\u2514\u2500\u2500 foo.py\n```\n\nthe syntax of `.env` files supported by python-dotenv is similar to that of bash:\n\n```bash\n# development settings\ndomain=example.org\nadmin_email=admin@${domain}\nroot_url=${domain}/app\n```\n\nif you use variables in values, ensure they are surrounded with `{` and `}`, like\n`${domain}`, as bare variables such as `$domain` are not expanded.\n\nyou will probably want to add `.env` to your `.gitignore`, especially if it contains\nsecrets like a password.\n\nsee the section \"file format\" below for more information about what you can write in a\n`.env` file.\n\n## other use cases\n\n### load configuration without altering the environment\n\nthe function `dotenv_values` works more or less the same way as `load_dotenv`, except it\ndoesn't touch the environment, it just returns a `dict` with the values parsed from the\n`.env` file.\n\n```python\nfrom dotenv import dotenv_values\n\nconfig = dotenv_values(\".env\")  # config = {\"user\": \"foo\", \"email\": \"foo@example.org\"}\n```\n\nthis notably enables advanced configuration management:\n\n```python\nimport os\nfrom dotenv import dotenv_values\n\nconfig = {\n    **dotenv_values(\".env.shared\"),  # load shared development variables\n    **dotenv_values(\".env.secret\"),  # load sensitive variables\n    **os.environ,  # override loaded values with environment variables\n}\n```\n\n### parse configuration as a stream\n\n`load_dotenv` and `dotenv_values` accept [streams][python_streams] via their `stream`\nargument.  it is thus possible to load the variables from sources other than the\nfilesystem (e.g. the network).\n\n```python\nfrom io import stringio\n\nfrom dotenv import load_dotenv\n\nconfig = stringio(\"user=foo\\nemail=foo@example.org\")\nload_dotenv(stream=config)\n```\n\n### load .env files in ipython\n\nyou can use dotenv in ipython.  by default, it will use `find_dotenv` to search for a\n`.env` file:\n\n```python\n%load_ext dotenv\n%dotenv\n```\n\nyou can also specify a path:\n\n```python\n%dotenv relative/or/absolute/path/to/.env\n```\n\noptional flags:\n\n- `-o` to override existing variables.\n- `-v` for increased verbosity.\n\n## command-line interface\n\na cli interface `dotenv` is also included, which helps you manipulate the `.env` file\nwithout manually opening it.\n\n```shell\n$ pip install \"python-dotenv[cli]\"\n$ dotenv set user foo\n$ dotenv set email foo@example.org\n$ dotenv list\nuser=foo\nemail=foo@example.org\n$ dotenv list --format=json\n{\n  \"user\": \"foo\",\n  \"email\": \"foo@example.org\"\n}\n$ dotenv run -- python foo.py\n```\n\nrun `dotenv --help` for more information about the options and subcommands.\n\n## file format\n\nthe format is not formally specified and still improves over time.  that being said,\n`.env` files should mostly look like bash files.\n\nkeys can be unquoted or single-quoted. values can be unquoted, single- or double-quoted.\nspaces before and after keys, equal signs, and values are ignored. values can be followed\nby a comment.  lines can start with the `export` directive, which does not affect their\ninterpretation.\n\nallowed escape sequences:\n\n- in single-quoted values: `\\\\`, `\\'`\n- in double-quoted values: `\\\\`, `\\'`, `\\\"`, `\\a`, `\\b`, `\\f`, `\\n`, `\\r`, `\\t`, `\\v`\n\n### multiline values\n\nit is possible for single- or double-quoted values to span multiple lines.  the following\nexamples are equivalent:\n\n```bash\nfoo=\"first line\nsecond line\"\n```\n\n```bash\nfoo=\"first line\\nsecond line\"\n```\n\n### variable without a value\n\na variable can have no value:\n\n```bash\nfoo\n```\n\nit results in `dotenv_values` associating that variable name with the value `none` (e.g.\n`{\"foo\": none}`. `load_dotenv`, on the other hand, simply ignores such variables.\n\nthis shouldn't be confused with `foo=`, in which case the variable is associated with the\nempty string.\n\n### variable expansion\n\npython-dotenv can interpolate variables using posix variable expansion.\n\nwith `load_dotenv(override=true)` or `dotenv_values()`, the value of a variable is the\nfirst of the values defined in the following list:\n\n- value of that variable in the `.env` file.\n- value of that variable in the environment.\n- default value, if provided.\n- empty string.\n\nwith `load_dotenv(override=false)`, the value of a variable is the first of the values\ndefined in the following list:\n\n- value of that variable in the environment.\n- value of that variable in the `.env` file.\n- default value, if provided.\n- empty string.\n\n## related projects\n\n-   [honcho](https://github.com/nickstenning/honcho) - for managing\n    procfile-based applications.\n-   [django-dotenv](https://github.com/jpadilla/django-dotenv)\n-   [django-environ](https://github.com/joke2k/django-environ)\n-   [django-environ-2](https://github.com/sergeyklay/django-environ-2)\n-   [django-configuration](https://github.com/jezdez/django-configurations)\n-   [dump-env](https://github.com/sobolevn/dump-env)\n-   [environs](https://github.com/sloria/environs)\n-   [dynaconf](https://github.com/rochacbruno/dynaconf)\n-   [parse_it](https://github.com/naorlivne/parse_it)\n-   [python-decouple](https://github.com/hbnetwork/python-decouple)\n\n## acknowledgements\n\nthis project is currently maintained by [saurabh kumar](https://saurabh-kumar.com) and\n[bertrand bonnefoy-claudet](https://github.com/bbc2) and would not have been possible\nwithout the support of these [awesome\npeople](https://github.com/theskumar/python-dotenv/graphs/contributors).\n\n[build_status_badge]: https://github.com/theskumar/python-dotenv/actions/workflows/test.yml/badge.svg\n[build_status_link]: https://github.com/theskumar/python-dotenv/actions/workflows/test.yml\n[pypi_badge]: https://badge.fury.io/py/python-dotenv.svg\n[pypi_link]: http://badge.fury.io/py/python-dotenv\n[python_streams]: https://docs.python.org/3/library/io.html\n\n# changelog\n\nall notable changes to this project will be documented in this file.\n\nthe format is based on [keep a changelog](https://keepachangelog.com/en/1.0.0/), and this\nproject adheres to [semantic versioning](https://semver.org/spec/v2.0.0.html).\n\n## [1.0.0]\n\n**fixed**\n\n* drop support for python 3.7, add python 3.12-dev (#449 by [@theskumar])\n* handle situations where the cwd does not exist. (#446 by [@jctanner])\n\n## [0.21.1] - 2022-01-21\n\n**added**\n\n* use python 3.11 non-beta in ci (#438 by [@bbc2])\n* modernize variables code (#434 by [@nougat-waffle])\n* modernize main.py and parser.py code (#435 by [@nougat-waffle])\n* improve conciseness of cli.py and __init__.py (#439 by [@nougat-waffle])\n* improve error message for `get` and `list` commands when env file can't be opened (#441 by [@bbc2])\n* updated license to align with bsd osi template (#433 by [@lsmith77])\n\n\n**fixed**\n\n* fix out-of-scope error when \"dest\" variable is undefined (#413 by [@thegotoguy])\n* fix ipython test warning about deprecated `magic` (#440 by [@bbc2])\n* fix type hint for dotenv_path var, add strpath alias (#432 by [@eaf])\n\n## [0.21.0] - 2022-09-03\n\n**added**\n\n* cli: add support for invocations via 'python -m'. (#395 by [@theskumar])\n* `load_dotenv` function now returns `false`. (#388 by [@larsks])\n* cli: add --format= option to list command. (#407 by [@sammck])\n\n**fixed**\n\n* drop python 3.5 and 3.6 and upgrade ga (#393 by [@eggplants])\n* use `open` instead of `io.open`. (#389 by [@rabinadk1])\n* improve documentation for variables without a value (#390 by [@bbc2])\n* add `parse_it` to related projects (#410 by [@naorlivne])\n* update readme.md (#415 by [@harveer07])\n* improve documentation with direct use of mkdocs (#398 by [@bbc2])\n\n## [0.20.0] - 2022-03-24\n\n**added**\n\n- add `encoding` (`optional[str]`) parameter to `get_key`, `set_key` and `unset_key`.\n  (#379 by [@bbc2])\n\n**fixed**\n\n- use dict to specify the `entry_points` parameter of `setuptools.setup` (#376 by\n  [@mgorny]).\n- don't build universal wheels (#387 by [@bbc2]).\n\n## [0.19.2] - 2021-11-11\n\n**fixed**\n\n- in `set_key`, add missing newline character before new entry if necessary. (#361 by\n  [@bbc2])\n\n## [0.19.1] - 2021-08-09\n\n**added**\n\n- add support for python 3.10. (#359 by [@theskumar])\n\n## [0.19.0] - 2021-07-24\n\n**changed**\n\n- require python 3.5 or a later version.  python 2 and 3.4 are no longer supported. (#341\n  by [@bbc2]).\n\n**added**\n\n- the `dotenv_path` argument of `set_key` and `unset_key` now has a type of `union[str,\n  os.pathlike]` instead of just `os.pathlike` (#347 by [@bbc2]).\n- the `stream` argument of `load_dotenv` and `dotenv_values` can now be a text stream\n  (`io[str]`), which includes values like `io.stringio(\"foo\")` and `open(\"file.env\",\n  \"r\")` (#348 by [@bbc2]).\n\n## [0.18.0] - 2021-06-20\n\n**changed**\n\n- raise `valueerror` if `quote_mode` isn't one of `always`, `auto` or `never` in\n  `set_key` (#330 by [@bbc2]).\n- when writing a value to a .env file with `set_key` or `dotenv set <key> <value>` (#330\n  by [@bbc2]):\n  - use single quotes instead of double quotes.\n  - don't strip surrounding quotes.\n  - in `auto` mode, don't add quotes if the value is only made of alphanumeric characters\n    (as determined by `string.isalnum`).\n\n## [0.17.1] - 2021-04-29\n\n**fixed**\n\n- fixed tests for build environments relying on `pythonpath` (#318 by [@befeleme]).\n\n## [0.17.0] - 2021-04-02\n\n**changed**\n\n- make `dotenv get <key>` only show the value, not `key=value` (#313 by [@bbc2]).\n\n**added**\n\n- add `--override`/`--no-override` option to `dotenv run` (#312 by [@zueve] and [@bbc2]).\n\n## [0.16.0] - 2021-03-27\n\n**changed**\n\n- the default value of the `encoding` parameter for `load_dotenv` and `dotenv_values` is\n  now `\"utf-8\"` instead of `none` (#306 by [@bbc2]).\n- fix resolution order in variable expansion with `override=false` (#287 by [@bbc2]).\n\n## [0.15.0] - 2020-10-28\n\n**added**\n\n- add `--export` option to `set` to make it prepend the binding with `export` (#270 by\n  [@jadutter]).\n\n**changed**\n\n- make `set` command create the `.env` file in the current directory if no `.env` file was\n  found (#270 by [@jadutter]).\n\n**fixed**\n\n- fix potentially empty expanded value for duplicate key (#260 by [@bbc2]).\n- fix import error on python 3.5.0 and 3.5.1 (#267 by [@gongqingkui]).\n- fix parsing of unquoted values containing several adjacent space or tab characters\n  (#277 by [@bbc2], review by [@x-yuri]).\n\n## [0.14.0] - 2020-07-03\n\n**changed**\n\n- privilege definition in file over the environment in variable expansion (#256 by\n  [@elbehery95]).\n\n**fixed**\n\n- improve error message for when file isn't found (#245 by [@snobu]).\n- use https url in package meta data (#251 by [@ekohl]).\n\n## [0.13.0] - 2020-04-16\n\n**added**\n\n- add support for a bash-like default value in variable expansion (#248 by [@bbc2]).\n\n## [0.12.0] - 2020-02-28\n\n**changed**\n\n- use current working directory to find `.env` when bundled by pyinstaller (#213 by\n  [@gergelyk]).\n\n**fixed**\n\n- fix escaping of quoted values written by `set_key` (#236 by [@bbc2]).\n- fix `dotenv run` crashing on environment variables without values (#237 by [@yannham]).\n- remove warning when last line is empty (#238 by [@bbc2]).\n\n## [0.11.0] - 2020-02-07\n\n**added**\n\n- add `interpolate` argument to `load_dotenv` and `dotenv_values` to disable interpolation\n  (#232 by [@ulyssessouza]).\n\n**changed**\n\n- use logging instead of warnings (#231 by [@bbc2]).\n\n**fixed**\n\n- fix installation in non-utf-8 environments (#225 by [@altendky]).\n- fix pypi classifiers (#228 by [@bbc2]).\n\n## [0.10.5] - 2020-01-19\n\n**fixed**\n\n- fix handling of malformed lines and lines without a value (#222 by [@bbc2]):\n  - don't print warning when key has no value.\n  - reject more malformed lines (e.g. \"a: b\", \"a='b',c\").\n- fix handling of lines with just a comment (#224 by [@bbc2]).\n\n## [0.10.4] - 2020-01-17\n\n**added**\n\n- make typing optional (#179 by [@techalchemy]).\n- print a warning on malformed line (#211 by [@bbc2]).\n- support keys without a value (#220 by [@ulyssessouza]).\n\n## 0.10.3\n\n- improve interactive mode detection ([@andrewsmith])([#183]).\n- refactor parser to fix parsing inconsistencies ([@bbc2])([#170]).\n  - interpret escapes as control characters only in double-quoted strings.\n  - interpret `#` as start of comment only if preceded by whitespace.\n\n## 0.10.2\n\n- add type hints and expose them to users ([@qnighy])([#172])\n- `load_dotenv` and `dotenv_values` now accept an `encoding` parameter, defaults to `none`\n  ([@theskumar])([@earlbread])([#161])\n- fix `str`/`unicode` inconsistency in python 2: values are always `str` now. ([@bbc2])([#121])\n- fix unicode error in python 2, introduced in 0.10.0. ([@bbc2])([#176])\n\n## 0.10.1\n- fix parsing of variable without a value ([@asyncee])([@bbc2])([#158])\n\n## 0.10.0\n\n- add support for utf-8 in unquoted values ([@bbc2])([#148])\n- add support for trailing comments ([@bbc2])([#148])\n- add backslashes support in values ([@bbc2])([#148])\n- add support for newlines in values ([@bbc2])([#148])\n- force environment variables to str with python2 on windows ([@greyli])\n- drop python 3.3 support ([@greyli])\n- fix stderr/-out/-in redirection ([@venthur])\n\n\n## 0.9.0\n\n- add `--version` parameter to cli ([@venthur])\n- enable loading from current directory ([@cjauvin])\n- add 'dotenv run' command for calling arbitrary shell script with .env ([@venthur])\n\n## 0.8.1\n\n-   add tests for docs ([@flimm])\n-   make 'cli' support optional. use `pip install python-dotenv[cli]`. ([@theskumar])\n\n## 0.8.0\n\n-   `set_key` and `unset_key` only modified the affected file instead of\n    parsing and re-writing file, this causes comments and other file\n    entact as it is.\n-   add support for `export` prefix in the line.\n-   internal refractoring ([@theskumar])\n-   allow `load_dotenv` and `dotenv_values` to work with `stringio())` ([@alanjds])([@theskumar])([#78])\n\n## 0.7.1\n\n-   remove hard dependency on ipython ([@theskumar])\n\n## 0.7.0\n\n-   add support to override system environment variable via .env.\n    ([@milonimrod](https://github.com/milonimrod))\n    ([\\#63](https://github.com/theskumar/python-dotenv/issues/63))\n-   disable \".env not found\" warning by default\n    ([@maxkoryukov](https://github.com/maxkoryukov))\n    ([\\#57](https://github.com/theskumar/python-dotenv/issues/57))\n\n## 0.6.5\n\n-   add support for special characters `\\`.\n    ([@pjona](https://github.com/pjona))\n    ([\\#60](https://github.com/theskumar/python-dotenv/issues/60))\n\n## 0.6.4\n\n-   fix issue with single quotes ([@flimm])\n    ([\\#52](https://github.com/theskumar/python-dotenv/issues/52))\n\n## 0.6.3\n\n-   handle unicode exception in setup.py\n    ([\\#46](https://github.com/theskumar/python-dotenv/issues/46))\n\n## 0.6.2\n\n-   fix dotenv list command ([@ticosax](https://github.com/ticosax))\n-   add ipython support\n    ([@tillahoffmann](https://github.com/tillahoffmann))\n\n## 0.6.0\n\n-   drop support for python 2.6\n-   handle escaped characters and newlines in quoted values. (thanks\n    [@iameugenejo](https://github.com/iameugenejo))\n-   remove any spaces around unquoted key/value. (thanks\n    [@paulochf](https://github.com/paulochf))\n-   added posix variable expansion. (thanks\n    [@hugochinchilla](https://github.com/hugochinchilla))\n\n## 0.5.1\n\n-   fix find\\_dotenv - it now start search from the file where this\n    function is called from.\n\n## 0.5.0\n\n-   add `find_dotenv` method that will try to find a `.env` file.\n    (thanks [@isms](https://github.com/isms))\n\n## 0.4.0\n\n-   cli: added `-q/--quote` option to control the behaviour of quotes\n    around values in `.env`. (thanks\n    [@hugochinchilla](https://github.com/hugochinchilla)).\n-   improved test coverage.\n\n[#78]: https://github.com/theskumar/python-dotenv/issues/78\n[#121]: https://github.com/theskumar/python-dotenv/issues/121\n[#148]: https://github.com/theskumar/python-dotenv/issues/148\n[#158]: https://github.com/theskumar/python-dotenv/issues/158\n[#170]: https://github.com/theskumar/python-dotenv/issues/170\n[#172]: https://github.com/theskumar/python-dotenv/issues/172\n[#176]: https://github.com/theskumar/python-dotenv/issues/176\n[#183]: https://github.com/theskumar/python-dotenv/issues/183\n[#359]: https://github.com/theskumar/python-dotenv/issues/359\n\n[@alanjds]: https://github.com/alanjds\n[@altendky]: https://github.com/altendky\n[@andrewsmith]: https://github.com/andrewsmith\n[@asyncee]: https://github.com/asyncee\n[@bbc2]: https://github.com/bbc2\n[@befeleme]: https://github.com/befeleme\n[@cjauvin]: https://github.com/cjauvin\n[@eaf]: https://github.com/eaf\n[@earlbread]: https://github.com/earlbread\n[@eggplants]: https://github.com/@eggplants\n[@ekohl]: https://github.com/ekohl\n[@elbehery95]: https://github.com/elbehery95\n[@flimm]: https://github.com/flimm\n[@gergelyk]: https://github.com/gergelyk\n[@gongqingkui]: https://github.com/gongqingkui\n[@greyli]: https://github.com/greyli\n[@harveer07]: https://github.com/@harveer07\n[@jadutter]: https://github.com/jadutter\n[@jctanner]: https://github.com/jctanner\n[@larsks]: https://github.com/@larsks\n[@lsmith77]: https://github.com/lsmith77\n[@mgorny]: https://github.com/mgorny\n[@naorlivne]: https://github.com/@naorlivne\n[@nougat-waffle]: https://github.com/nougat-waffle\n[@qnighy]: https://github.com/qnighy\n[@rabinadk1]: https://github.com/@rabinadk1\n[@sammck]: https://github.com/@sammck\n[@snobu]: https://github.com/snobu\n[@techalchemy]: https://github.com/techalchemy\n[@thegotoguy]: https://github.com/thegotoguy\n[@theskumar]: https://github.com/theskumar\n[@ulyssessouza]: https://github.com/ulyssessouza\n[@venthur]: https://github.com/venthur\n[@x-yuri]: https://github.com/x-yuri\n[@yannham]: https://github.com/yannham\n[@zueve]: https://github.com/zueve\n\n\n[unreleased]: https://github.com/theskumar/python-dotenv/compare/v1.0.0...head\n[1.0.0]: https://github.com/theskumar/python-dotenv/compare/v0.21.0...v1.0.0\n[0.21.1]: https://github.com/theskumar/python-dotenv/compare/v0.21.0...v0.21.1\n[0.21.0]: https://github.com/theskumar/python-dotenv/compare/v0.20.0...v0.21.0\n[0.20.0]: https://github.com/theskumar/python-dotenv/compare/v0.19.2...v0.20.0\n[0.19.2]: https://github.com/theskumar/python-dotenv/compare/v0.19.1...v0.19.2\n[0.19.1]: https://github.com/theskumar/python-dotenv/compare/v0.19.0...v0.19.1\n[0.19.0]: https://github.com/theskumar/python-dotenv/compare/v0.18.0...v0.19.0\n[0.18.0]: https://github.com/theskumar/python-dotenv/compare/v0.17.1...v0.18.0\n[0.17.1]: https://github.com/theskumar/python-dotenv/compare/v0.17.0...v0.17.1\n[0.17.0]: https://github.com/theskumar/python-dotenv/compare/v0.16.0...v0.17.0\n[0.16.0]: https://github.com/theskumar/python-dotenv/compare/v0.15.0...v0.16.0\n[0.15.0]: https://github.com/theskumar/python-dotenv/compare/v0.14.0...v0.15.0\n[0.14.0]: https://github.com/theskumar/python-dotenv/compare/v0.13.0...v0.14.0\n[0.13.0]: https://github.com/theskumar/python-dotenv/compare/v0.12.0...v0.13.0\n[0.12.0]: https://github.com/theskumar/python-dotenv/compare/v0.11.0...v0.12.0\n[0.11.0]: https://github.com/theskumar/python-dotenv/compare/v0.10.5...v0.11.0\n[0.10.5]: https://github.com/theskumar/python-dotenv/compare/v0.10.4...v0.10.5\n[0.10.4]: https://github.com/theskumar/python-dotenv/compare/v0.10.3...v0.10.4\n",
  "docs_url": null,
  "keywords": "environment variables,deployments,settings,env,dotenv,configurations,python",
  "license": "bsd-3-clause",
  "name": "python-dotenv",
  "package_url": "https://pypi.org/project/python-dotenv/",
  "project_url": "https://pypi.org/project/python-dotenv/",
  "project_urls": {
    "Homepage": "https://github.com/theskumar/python-dotenv"
  },
  "release_url": "https://pypi.org/project/python-dotenv/1.0.0/",
  "requires_dist": [
    "click (>=5.0) ; extra == 'cli'"
  ],
  "requires_python": ">=3.8",
  "summary": "read key-value pairs from a .env file and set them as environment variables",
  "version": "1.0.0",
  "releases": [],
  "developers": [
    "me+github@saurabh-kumar.com",
    "saurabh_kumar"
  ],
  "kwds": "dotenv_path pythonpath dotenv_values load_dotenv env",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_python_dotenv",
  "homepage": "https://github.com/theskumar/python-dotenv",
  "release_count": 44,
  "dependency_ids": [
    "pypi_click"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering"
  ],
  "description": "# gsw-python\n\n[![tests](https://github.com/teos-10/gsw-python/actions/workflows/tests.yml/badge.svg)](https://github.com/teos-10/gsw-python/actions/workflows/tests.yml)\n[![wheels](https://github.com/teos-10/gsw-python/actions/workflows/cibuildwheel.yml/badge.svg)](https://github.com/teos-10/gsw-python/actions/workflows/cibuildwheel.yml)\n[![doi](https://zenodo.org/badge/86503067.svg)](https://zenodo.org/badge/latestdoi/86503067)\n\n\nthis python implementation of the thermodynamic equation of seawater 2010 (teos-10) is based primarily on numpy ufunc wrappers of the gsw-c implementation.\nthis library replaces the original [python-gsw](https://github.com/teos-10/python-gsw) pure-python implementation..\nthe primary reasons for this change are that by building on the c implementation we reduce code duplication and we gain an immediate update to the 75-term equation.  \nadditional benefits include a major increase in speed,\na reduction in memory usage,\nand the inclusion of more functions.\nthe penalty is that a c (or msvc c++ for windows) compiler is required to build the package from source.\n\n**warning: this is for python >=3.8 only.**\n\ndocumentation is provided at https://teos-10.github.io/gsw-python/.\n\nfor the core functionality, we use an auto-generated c extension\nmodule to wrap the c functions as numpy [ufuncs](https://docs.scipy.org/doc/numpy/reference/ufuncs.html),\nand then use an autogenerated python module to add docstrings and handle masked arrays.\n165 scalar c functions with only double-precision arguments and return values are wrapped as ufuncs,\nand 158 of these are exposed in the ``gsw`` namespace with an additional wrapper in python.\n\na hand-written wrapper is used for one c function, and others are re-implemented directly in python instead of being wrapped.\nadditional functions present in gsw-matlab but not in gsw-c may be re-implemented in python,\nbut there is no expectation that all such functions will be provided.\n\n## installation\n\npip users can install the pre-built wheels with:\n\n```shell\npip install gsw\n```\n\nconda users will find binaries on conda-forge,\n\n```shell\nconda install gsw --channel conda-forge\n```\n\nthe development version of the package can be installed from a clone of the repo using\n\n```shell\npip install .\n```\n\nit is neither necessary nor recommended to run the code generators,\nand no instructions are provided for them;\ntheir output is included in the repo.\nyou will need a suitable compiler:\ngcc or clang for unix-like systems,\nor the msvc compiler set used for python itself on windows.\nfor windows, some of the source code has been modified to c++ because the msvc c compiler does not support the\nc99 complex data type used in original gsw-c.\n\nto test, after installation, run \"pytest\" from the source directory.\n\n## note for xarray users\n\na wrapper around gsw called [gsw-xarray](https://github.com/docotak/gsw-xarray) exists for xarray.\nit adds cf compliant attributes when possible, units, and name.\n\n## note on generating the docstrings\n\nthe autogenerated docstrings are checked with codespell in the cis.\nwhen autogenerating them we need to run ``pre-commit run --all-files`` and fix the documentation issues found.\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd-3-clause",
  "name": "gsw",
  "package_url": "https://pypi.org/project/gsw/",
  "project_url": "https://pypi.org/project/gsw/",
  "project_urls": {
    "documentation": "https://teos-10.github.io/GSW-Python/",
    "homepage": "https://www.teos-10.org/",
    "repository": "https://github.com/TEOS-10/GSW-python"
  },
  "release_url": "https://pypi.org/project/gsw/3.6.17/",
  "requires_dist": [
    "numpy (>=1.21)"
  ],
  "requires_python": ">=3.8",
  "summary": "gibbs seawater oceanographic package of teos-10",
  "version": "3.6.17",
  "releases": [],
  "developers": [
    "efiring@hawaii.edu"
  ],
  "kwds": "python thermodynamic yml scipy seawater",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_gsw",
  "homepage": "",
  "release_count": 16,
  "dependency_ids": [
    "pypi_numpy"
  ]
}
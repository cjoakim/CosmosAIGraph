{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "# optimum-deepsparse\n\naccelerated inference of \ud83e\udd17 models on cpus using the [deepsparse inference runtime](https://github.com/neuralmagic/deepsparse).\n\n[![deepsparse modeling / python - test](https://github.com/neuralmagic/optimum-deepsparse/actions/workflows/test_check.yaml/badge.svg)](https://github.com/neuralmagic/optimum-deepsparse/actions/workflows/test_check.yaml)\n[![deepsparse modeling nightly](https://github.com/neuralmagic/optimum-deepsparse/actions/workflows/test_nightly.yaml/badge.svg)](https://github.com/neuralmagic/optimum-deepsparse/actions/workflows/test_nightly.yaml)\n\n## install\noptimum deepsparse is a fast-moving project, and you may want to install from source.\n\n`pip install git+https://github.com/neuralmagic/optimum-deepsparse.git`\n\n### installing in developer mode\n\nif you are working on the `optimum-deepsparse` code then you should use an editable install by cloning and installing `optimum` and `optimum-deepsparse`:\n\n```\ngit clone https://github.com/huggingface/optimum\ngit clone https://github.com/neuralmagic/optimum-deepsparse\npip install -e optimum -e optimum-deepsparse\n```\n\nnow whenever you change the code, you'll be able to run with those changes instantly.\n\n\n## how to use it?\nto load a model and run inference with deepsparse, you can just replace your `automodelforxxx` class with the corresponding `deepsparsemodelforxxx` class. \n\n```diff\nimport requests\nfrom pil import image\n\n- from transformers import automodelforimageclassification\n+ from optimum.deepsparse import deepsparsemodelforimageclassification\nfrom transformers import autofeatureextractor, pipeline\n\nurl = \"http://images.cocodataset.org/val2017/000000039769.jpg\"\nimage = image.open(requests.get(url, stream=true).raw)\n\nmodel_id = \"microsoft/resnet-50\"\n- model = automodelforimageclassification.from_pretrained(model_id)\n+ model = deepsparsemodelforimageclassification.from_pretrained(model_id, export=true, input_shapes=\"[1,3,224,224]\")\nfeature_extractor = autofeatureextractor.from_pretrained(model_id)\ncls_pipe = pipeline(\"image-classification\", model=model, feature_extractor=feature_extractor)\noutputs = cls_pipe(image)\n```\n\n| supported task                              | model class |\n| ------------------------------------------- | ------------- |\n| \"image-classification\"                      | deepsparsemodelforimageclassification  |\n| \"text-classification\"/\"sentiment-analysis\"  | deepsparsemodelforsequenceclassification  |\n| \"audio-classification\"                      | deepsparsemodelforaudioclassification  |\n| \"question-answering\"                        | deepsparsemodelforquestionanswering  |\n| \"image-segmentation\"                        | deepsparsemodelforsemanticsegmentation  |\n\nif you find any issue while using those, please open an issue or a pull request.\n\n\n",
  "docs_url": null,
  "keywords": "inference,cpu,x86,arm,transformers,quantization,pruning,sparsity",
  "license": "neural magic deepsparse community license, apache",
  "name": "optimum-deepsparse",
  "package_url": "https://pypi.org/project/optimum-deepsparse/",
  "project_url": "https://pypi.org/project/optimum-deepsparse/",
  "project_urls": {
    "Homepage": "https://github.com/neuralmagic/deepsparse"
  },
  "release_url": "https://pypi.org/project/optimum-deepsparse/0.1.0.dev1/",
  "requires_dist": [
    "deepsparse-nightly",
    "optimum[exporters] ==1.13.2",
    "diffusers ==0.21.4",
    "pytest ; extra == 'dev'",
    "parameterized ; extra == 'dev'",
    "Pillow ; extra == 'dev'",
    "evaluate ; extra == 'dev'",
    "diffusers ; extra == 'dev'",
    "py-cpuinfo ; extra == 'dev'",
    "torchaudio ; extra == 'dev'",
    "black ~=23.1 ; extra == 'dev'",
    "ruff <=0.0.259,>=0.0.241 ; extra == 'dev'",
    "black ~=23.1 ; extra == 'quality'",
    "ruff <=0.0.259,>=0.0.241 ; extra == 'quality'",
    "pytest ; extra == 'tests'",
    "parameterized ; extra == 'tests'",
    "Pillow ; extra == 'tests'",
    "evaluate ; extra == 'tests'",
    "diffusers ; extra == 'tests'",
    "py-cpuinfo ; extra == 'tests'",
    "torchaudio ; extra == 'tests'"
  ],
  "requires_python": ">=3.8, <3.11",
  "summary": "optimum deepsparse is an extension of the hugging face transformers library that integrates the deepsparse inference runtime. deepsparse offers gpu-class performance on cpus, making it possible to run transformers and other deep learning models on commodity hardware with sparsity. optimum deepsparse provides a framework for developers to easily integrate deepsparse into their applications, regardless of the hardware platform.",
  "version": "0.1.0.dev1",
  "releases": [],
  "developers": [
    "michael@neuralmagic.com",
    "neuralmagic"
  ],
  "kwds": "deepsparse deepsparsemodelforxxx deepsparsemodelforquestionanswering deepsparsemodelforsemanticsegmentation deepsparsemodelforsequenceclassification",
  "license_kwds": "neural magic deepsparse community license, apache",
  "libtype": "pypi",
  "id": "pypi_optimum_deepsparse",
  "homepage": "https://github.com/neuralmagic/deepsparse",
  "release_count": 2,
  "dependency_ids": [
    "pypi_black",
    "pypi_deepsparse_nightly",
    "pypi_diffusers",
    "pypi_evaluate",
    "pypi_optimum",
    "pypi_parameterized",
    "pypi_pillow",
    "pypi_py_cpuinfo",
    "pypi_pytest",
    "pypi_ruff",
    "pypi_torchaudio"
  ]
}
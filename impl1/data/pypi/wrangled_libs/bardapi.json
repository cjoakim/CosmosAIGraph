{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: scientific/engineering :: artificial intelligence"
  ],
  "description": "development status :: 5 - production/stable\r\n\r\n\r\n# google <a href=\"https://bard.google.com/\"><img src=\"https://camo.githubusercontent.com/adb54264fe2ad5067d07d0752fc32600b4e6250073b01ce8c386575b431e3f06/68747470733a2f2f7777772e677374617469632e636f6d2f6c616d64612f696d616765732f66617669636f6e5f76315f31353031363063646466663766323934636533302e737667\" height=\"20px\"></a> bard api\r\n\r\n<p align=\"left\">\r\n<a href=\"https://github.com/dsdanielpark/bard-api\"><img alt=\"pypi package\" src=\"https://img.shields.io/badge/pypi-bardapi-black\"></a>\r\n<!-- <a href=\"https://pepy.tech/project/bardapi\"><img alt=\"downloads\" src=\"https://pepy.tech/badge/bardapi\"></a> -->\r\n<!-- <a><img alt=\"commit update\" src=\"https://img.shields.io/github/last-commit/dsdanielpark/bard-api?color=black\"></a> -->\r\n<a href=\"https://github.com/psf/black\"><img alt=\"code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\r\n<a href=\"https://github.com/dsdanielpark/bard-api\"><img src=\"https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3a%2f%2fgithub.com%2fdsdanielpark%2fbard_api&count_bg=%23000000&title_bg=%23555555&icon=&icon_color=%23e7e7e7&title=bardapi&edge_flat=false\"/></a>\r\n<a href=\"https://github.com/dsdanielpark/bard-api/stargazers\"><img src=\"https://img.shields.io/github/stars/dsdanielpark/bard-api?style=social\"></a>\r\n<a href=\"https://pypi.org/project/bardapi/\"><img alt=\"pypi\" src=\"https://img.shields.io/pypi/v/bardapi\"></a>\r\n\r\n</p>\r\n\r\n\r\n\r\n> the python package that returns response of [google bard](https://bard.google.com/) through value of cookie.\r\n\r\n![](./assets/bard_api.gif)\r\n\r\n\r\n**please exercise caution and use this package responsibly.**\r\n\r\ni referred to this github repository([github.com/acheong08/bard](https://github.com/acheong08/bard)) where inference process of bard was reverse engineered. using `__secure-1psid`, you can ask questions and get answers from google bard. this package is designed for application to the python package [exceptnotifier](https://github.com/dsdanielpark/exceptnotifier) and [co-coder](https://github.com/dsdanielpark/co-coder). please note that the bardapi is not a free service, but rather a tool provided to assist developers with testing certain functionalities due to the delayed development and release of google bard's api. it has been designed with a lightweight structure that can easily adapt to the emergence of an official api. therefore, i strongly discourage using it for any other purposes. if you have access to official [palm-2 api](https://blog.google/technology/ai/google-palm-2-ai-large-language-model/), replace the provided response with the corresponding official code.\r\n\r\n<br>\r\n\r\n- [google  bard api](#google--bard-api)\r\n  - [what is google bard?](#what-is-google-bard)\r\n  - [install](#install)\r\n  - [authentication](#authentication)\r\n  - [usage](#usage)\r\n  - [further](#further)\r\n    - [behind a proxy](#behind-a-proxy)\r\n    - [reusable session object](#reusable-session-object)\r\n  - [auto cookie bard](#auto-cookie-bard)\r\n  - [bard `ask_about_image` method](#bard-ask_about_image-method)\r\n  - [text to speech(tts) from bard](#text-to-speechtts-from-bard)\r\n  - [more features](#more-features)\r\n\r\n\r\n<br>\r\n\r\n## what is google bard?\r\nbard is a conversational generative artificial intelligence chatbot developed by google, based initially on the lamda family of llms(large language models) and later the palm llm. please check official documents for [updates](https://bard.google.com/updates) on bard, including [available regions and languages](https://support.google.com/bard/answer/13575153?hl=en).\r\n\r\n## install\r\n```\r\n$ pip install bardapi\r\n```\r\n```\r\n$ pip install git+https://github.com/dsdanielpark/bard-api.git\r\n```\r\ndue to certain dependency packages that are not compatible with 64bit windows(os), we are releasing a lightweight alpha release of bard that only returns responses for simple requests. this release is a continuation of the pypi `0.1.18` version, which was maintained with lightweight and simple functionality. see [alpha-release github branch](https://github.com/dsdanielpark/bard-api/tree/alpha-release) for more details.\r\n```\r\n$ pip install bardapi==0.1.23a\r\n```\r\n\r\n<br>\r\n\r\n## authentication\r\n> **warning** do not expose the `__secure-1psid` \r\n1. visit https://bard.google.com/\r\n2. f12 for console\r\n3. session: application \u2192 cookies \u2192 copy the value of  `__secure-1psid` cookie.\r\n\r\nnote that while i referred to `__secure-1psid` value as an api key for convenience, it is not an officially provided api key. \r\ncookie value subject to frequent changes. verify the value again if an error occurs. most errors occur when an invalid cookie value is entered.\r\n\r\n<br>\r\n\r\nif you need to set multiple cookie values\r\n\r\n- [bard cookies](https://github.com/dsdanielpark/bard-api/blob/main/bardapi/core_cookies.py) - after confirming that multiple cookie values are required to receive responses reliably in certain countries, i will deploy it for testing purposes. please debug and create a pull request\r\n\r\n\r\n<br>\r\n\r\n## usage \r\n[![open in colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1zzzltih0kt2mdjlzvxrby1rwbhzmog8t?usp=sharing) \r\n\r\n\r\nsimple usage\r\n\r\n```python\r\nfrom bardapi import bard\r\n\r\ntoken = 'xxxxxxx'\r\nbard = bard(token=token)\r\nbard.get_answer(\"\ub098\uc640 \ub0b4 \ub3d9\ub144\ubc30\ub4e4\uc774 \uc88b\uc544\ud558\ub294 \ub274\uc9c4\uc2a4\uc5d0 \ub300\ud574\uc11c \uc54c\ub824\uc918\")['content']\r\n```\r\nor you can use this\r\n```python\r\nfrom bardapi import bard\r\nimport os\r\nos.environ['_bard_api_key']=\"xxxxxxx\"\r\n\r\nbard().get_answer(\"\ub098\uc640 \ub0b4 \ub3d9\ub144\ubc30\ub4e4\uc774 \uc88b\uc544\ud558\ub294 \ub274\uc9c4\uc2a4\uc5d0 \ub300\ud574\uc11c \uc54c\ub824\uc918\")['content']\r\n```\r\n\r\nto get reponse dictionary\r\n```python\r\nimport bardapi\r\nimport os\r\n\r\n# set your __secure-1psid value to key\r\ntoken = 'xxxxxxx'\r\n\r\n# set your input text\r\ninput_text = \"\ub098\uc640 \ub0b4 \ub3d9\ub144\ubc30\ub4e4\uc774 \uc88b\uc544\ud558\ub294 \ub274\uc9c4\uc2a4\uc5d0 \ub300\ud574\uc11c \uc54c\ub824\uc918\"\r\n\r\n# send an api request and get a response.\r\nresponse = bardapi.core.bard(token).get_answer(input_text)\r\n```\r\n\r\n\r\n\r\naddressing errors caused by delayed responses in environments like google colab and containers. if an error occurs despite following the proper procedure, utilize the timeout argument.\r\n```python\r\nfrom bardapi import bard\r\nimport os\r\nos.environ['_bard_api_key']=\"xxxxxxx\"\r\n\r\nbard = bard(timeout=30) # set timeout in seconds\r\nbard.get_answer(\"\ub098\uc640 \ub0b4 \ub3d9\ub144\ubc30\ub4e4\uc774 \uc88b\uc544\ud558\ub294 \ub274\uc9c4\uc2a4\uc5d0 \ub300\ud574\uc11c \uc54c\ub824\uc918\")['content']\r\n```\r\n\r\n<br>\r\n\r\n## further\r\n### behind a proxy\r\nif you are working behind a proxy, use the following.\r\n```python\r\nfrom bardapi import bard\r\nimport os\r\n\r\n# change 'http://proxy.example.com:8080' to your http proxy\r\n# timeout in seconds\r\nproxies = {\r\n    'http': 'http://proxy.example.com:8080',\r\n    'https': 'https://proxy.example.com:8080'\r\n}\r\n\r\nbard = bard(token='xxxxxxx', proxies=proxies, timeout=30)\r\nbard.get_answer(\"\ub098\uc640 \ub0b4 \ub3d9\ub144\ubc30\ub4e4\uc774 \uc88b\uc544\ud558\ub294 \ub274\uc9c4\uc2a4\uc5d0 \ub300\ud574\uc11c \uc54c\ub824\uc918\")['content']\r\n```\r\n\r\n\r\n### reusable session object\r\nyou can continue the conversation using a reusable session.\r\n```python\r\nfrom bardapi import bard\r\nimport os\r\nimport requests\r\nos.environ['_bard_api_key'] = 'xxxxxxx'\r\n# token='xxxxxxx'\r\n\r\nsession = requests.session()\r\nsession.headers = {\r\n            \"host\": \"bard.google.com\",\r\n            \"x-same-domain\": \"1\",\r\n            \"user-agent\": \"mozilla/5.0 (windows nt 10.0; wow64) applewebkit/537.36 (khtml, like gecko) chrome/91.0.4472.114 safari/537.36\",\r\n            \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n            \"origin\": \"https://bard.google.com\",\r\n            \"referer\": \"https://bard.google.com/\",\r\n        }\r\nsession.cookies.set(\"__secure-1psid\", os.getenv(\"_bard_api_key\")) \r\n# session.cookies.set(\"__secure-1psid\", token) \r\n\r\nbard = bard(token=token, session=session, timeout=30)\r\nbard.get_answer(\"\ub098\uc640 \ub0b4 \ub3d9\ub144\ubc30\ub4e4\uc774 \uc88b\uc544\ud558\ub294 \ub274\uc9c4\uc2a4\uc5d0 \ub300\ud574\uc11c \uc54c\ub824\uc918\")['content']\r\n\r\n# continued conversation without set new session\r\nbard.get_answer(\"what is my last prompt??\")['content']\r\n```\r\n\r\n<br>\r\n\r\n## auto cookie bard\r\nusing [browser_cookie3](https://github.com/borisbabic/browser_cookie3) we extract the `__secure-1psid` cookie from all browsers, and then we can use the api without passing the token. however, there are still incomplete dependency packages and various variables, so please seek assistance in the following [github issues](https://github.com/borisbabic/browser_cookie3/issues) or adjust your browser's version.\r\n- visit https://bard.google.com/ in your browser and execute the following command while in the chat-enabled state. refer to browser_cookie3 for details on how it works. if any issues arise, please restart the browser or log in to your google account again. \r\n*recommended to keep the browser open.*\r\n```python\r\nfrom bardapi import bard\r\n\r\nbard = bard(token_from_browser=true)\r\nres = bard.get_answer(\"do you like cookies?\")\r\nprint(res['content'])\r\n```\r\n\r\n<br>\r\n\r\n## bard `ask_about_image` method \r\n*it may not work as it is only available for certain accounts, regions, and other restrictions.*\r\nas an experimental feature, it is possible to ask questions with an image. however, this functionality is only available for accounts with image upload capability in bard's web ui. \r\n\r\n```python\r\nfrom bardapi import bard\r\n\r\nbard = bard(token='xxxxxxx')\r\nimage = open('image.jpg', 'rb').read() # (jpeg, png, webp) are supported.\r\nbard_answer = bard.ask_about_image('what is in the image?', image)\r\nprint(bard_answer['content'])\r\n```\r\n\r\n<br>\r\n\r\n## [text to speech(tts)](https://cloud.google.com/text-to-speech?hl=ko) from bard\r\nbusiness users and high traffic volume may be subject to account restrictions according to google's policies. please use the [official google cloud api](https://cloud.google.com/text-to-speech) for any other purpose. \r\nthe user is solely responsible for all code, and it is imperative to consult google's official services and policies. furthermore, the code in this repository is provided under the mit license, and it disclaims any liability, including explicit or implied legal responsibilities.\r\n```python\r\nfrom bardapi import bard\r\n\r\nbard = bard(token='xxxxxxx')\r\naudio = bard.speech('hello, i am bard! how can i help you today?')\r\nwith open(\"speech.ogg\", \"wb\") as f:\r\n  f.write(bytes(audio['audio']))\r\n```\r\n\r\n<br>\r\n\r\n## [more features](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md)\r\nstarting from version `0.1.18`, the github version of bardapi will be synchronized with the pypi version and released simultaneously. however, the version undergoing qa can still be used from the github repository.<br>\r\n```\r\n$ pip install git+https://github.com/dsdanielpark/bard-api.git\r\n```\r\n\r\n- [auto cookie bard](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#auto-cookie-bard)\r\n- [tts from bard](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#text-to-speechtts)\r\n- [multi-language bard api](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#multi-language-bard-api)\r\n- [get image links](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#get-image-links)\r\n- [chatbard](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#chatbard)\r\n- [export conversation](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#export-conversation)\r\n- [export code to repl.it](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#export-code-to-replit)\r\n- [executing python code received as a response from bard](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#chatbard)\r\n- [using bard asynchronously](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#using-bard-asynchronously)\r\n- [bard cookies](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#bard-which-can-get-cookies)\r\n- [fix coversation id (fix context)](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#fix-conversation-id-fix-context)\r\n- [max_token-max_sentence](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#max_token-max_sentence)\r\n- [translation to another programming language](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_dev.md#translation-to-another-programming-language)\r\n\r\n<br>\r\n<br>\r\n<br>\r\n\r\n\r\n\r\n\r\n##  [amazing bard prompts](https://github.com/dsdanielpark/amazing-bard-prompts) is all you need!\r\n- helpful prompts for google bard\r\n\r\n<br>\r\n\r\n# google palm api\r\nyou can explore information about various generative ai models by google. although the palm2 api seems to be under preparation, you can check out demos related to palm2 on the demo page.\r\n## palm api\r\ntry demo at https://makersuite.google.com/app/prompts/new_text.\r\n```\r\nwho are you?\r\n>> i am powered by palm 2, which stands for pathways language model 2, a large language model from google ai.\r\n```\r\n\r\ngoogle generative ai\r\n- official page: https://blog.google/technology/ai/google-palm-2-ai-large-language-model/\r\n- github: https://github.com/googlecloudplatform/generative-ai\r\n- try demo: https://makersuite.google.com/app/prompts/new_text.\r\n- official library: https://makersuite.google.com/app/library\r\n- get api key: https://makersuite.google.com/app/apikey\r\n- quick start tutorial: https://developers.generativeai.google/tutorials/text_quickstart\r\n\r\n### quick start\r\n```\r\n$ pip install -q google-generativeai\r\n```\r\n\r\n```python\r\nimport pprint\r\nimport google.generativeai as palm\r\n\r\npalm.configure(api_key='your_api_key')\r\n\r\nmodels = [m for m in palm.list_models() if 'generatetext' in m.supported_generation_methods]\r\nmodel = models[0].name\r\nprint(model)\r\n\r\nprompt = \"who are you?\"\r\n\r\ncompletion = palm.generate_text(\r\n    model=model,\r\n    prompt=prompt,\r\n    temperature=0,\r\n    # the maximum length of the response\r\n    max_output_tokens=800,\r\n)\r\nprint(completion.result)\r\n```\r\n\r\n<br>\r\n\r\n# [hf-transllm](https://github.com/dsdanielpark/hf-transllm)\r\nif you want to test the open-llama model, which is `released under the apache license (allowing free commercial use)` in `various languages`, you can try using the [hf-transllm](https://github.com/dsdanielpark/hf-transllm) package. hf-transllm also supports multilingual inference for various llms stored in hugging face repository.\r\n\r\n<br>\r\n\r\n## example code of [hf-transllm](https://github.com/dsdanielpark/hf-transllm)\r\n<details>\r\n<summary>in case the google package is no longer available due to policy restrictions, here's a simple example code for using open-source language models (llms) in both english and multiple languages.</summary>\r\n\r\n<br>\r\n\r\n### usage\r\nfor the decoder models provided by hugging face, you can easily use them by either following a simple approach or overriding the inference method. you can explore various open-source language models at [this link](https://huggingface.co/models). through the ranking information from [open llm leader board report repository](https://github.com/dsdanielpark/open-llm-leaderboard-report), you can find information about good models.\r\n\r\n#### for llm that use languages `other than english`\r\n```python\r\nfrom transllm import llmtranslator\r\n\r\nopen_llama3b_kor = llmtranslator('openlm-research/open_llama_3b', target_lang='ko', translator='google') # korean\r\n\r\ntrnaslated_answer = open_llama3b_kor.generate(\"\ub098\uc640 \ub0b4 \ub3d9\ub144\ubc30\ub4e4\uc774 \uc88b\uc544\ud558\ub294 \ub274\uc9c4\uc2a4\uc5d0 \ub300\ud574\uc11c \uc54c\ub824\uc918\")\r\nprint(trnaslated_answer)\r\n```\r\n\r\n\r\n#### for llm that use `english`\r\nrefer https://github.com/openlm-research/open_llama or using like this:\r\n```python\r\nfrom transllm import llmtranslator\r\n\r\nopen_llama3b = llmtranslator('openlm-research/open_llama_3b) \r\n\r\nanswer = open_llama3b.generate(\"tell me about the korean girl group newjeans.\")\r\nprint(answer)\r\n```\r\n\r\n</details>\r\n\r\n<br><br>\r\n\r\n\r\n## [faq](https://github.com/dsdanielpark/bard-api/blob/main/documents/readme_faq.md)\r\nplease check the faq and open issues for similar questions before creating a new issue. repeated questions will be kept as open issues. too many requests can trigger a temporary account block (http 429). maintain proper intervals, using functions like sleep to avoid rate limits. policies may vary by country and language, so all users could face temporary or permanent errors via the api.\r\n\r\n## scripts\r\nin the scripts [folder](./scripts/), i have released a script to help you compare [openai-chatgpt](./scripts/openai_api.ipynb), [microsoft-edgegpt](./scripts/microsoft_api.ipynb) and [google-bard](./scripts/google_api.ipynb). i hope they will help more developers.\r\n\r\n## contributors\r\ni would like to express my sincere gratitude to all the contributors.\r\n\r\n<a href=\"https://github.com/dsdanielpark/bard_api/graphs/contributors\">\r\n  <img src=\"https://contrib.rocks/image?repo=dsdanielpark/bard_api\" />\r\n</a>\r\n\r\n\r\n<br>\r\n\r\n## license\r\n[mit](https://opensource.org/license/mit/) <br>\r\nwe hold no legal responsibility; for more information, please refer to the bottom of the readme file. we just want you to give me and [them](https://github.com/acheong08/bard) a star.\r\n```\r\nthe mit license (mit)\r\n\r\ncopyright (c) 2023 minwoo park\r\n\r\npermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"software\"), to deal\r\nin the software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the software, and to permit persons to whom the software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nthe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the software.\r\n\r\nthe software is provided \"as is\", without warranty of any kind, express or\r\nimplied, including but not limited to the warranties of merchantability,\r\nfitness for a particular purpose and noninfringement. in no event shall the\r\nauthors or copyright holders be liable for any claim, damages or other\r\nliability, whether in an action of contract, tort or otherwise, arising from,\r\nout of or in connection with the software or the use or other dealings in the\r\nsoftware.\r\n```\r\n\r\n## shifting service policies: bard and google's dynamics \r\nbard's service status and google's api interfaces are in constant flux. *the number of replies is currently limited, but certain users,* such as those utilizing vpns or proxy servers, have reported slightly higher message caps. adaptability is crucial in navigating these dynamic service policies. please note that the cookie values used in this package are not official api values.\r\n            \r\n## bugs and issues\r\nsincerely grateful for any reports on new features or bugs. your valuable feedback on the code is highly appreciated.\r\n\r\n## contacts\r\n- core maintainer: [daniel park, south korea](https://github.com/dsdanielpark) <br>\r\n- e-mail: parkminwoo1991@gmail.com <br>\r\n\r\n## reference \r\n[1] https://github.com/acheong08/bard <br>\r\n            \r\n> **warning** important notice\r\n  the user assumes all legal responsibilities associated with using the bardapi package. this python package merely facilitates easy access to google bard for developers. users are solely responsible for managing data and using the package appropriately. for further information, please consult the google bard official document.\r\n    \r\n> **warning** caution\r\nthis python package is not an official google package or api service. it is not affiliated with google and uses google account cookies, which means that excessive or commercial usage may result in restrictions on your google account. the package was created to support developers in testing functionalities due to delays in the official google package. however, it should not be misused or abused. please be cautious and refer to the readme for more information.\r\n  \r\n<br><br>\r\n  \r\n*copyright (c) 2023 minwoo park, south korea*<br>\r\n",
  "docs_url": null,
  "keywords": "python,api,bard,google bard,large language model,chatbot api,google api,chatbot",
  "license": "",
  "name": "bardapi",
  "package_url": "https://pypi.org/project/bardapi/",
  "project_url": "https://pypi.org/project/bardapi/",
  "project_urls": {
    "Homepage": "https://github.com/dsdanielpark/Bard-API"
  },
  "release_url": "https://pypi.org/project/bardapi/0.1.38/",
  "requires_dist": [
    "httpx[http2] >=0.20.0",
    "requests",
    "deep-translator",
    "colorama",
    "google-cloud-translate",
    "browser-cookie3",
    "langdetect"
  ],
  "requires_python": ">=3.6",
  "summary": "the python package that returns response of google bard through api.",
  "version": "0.1.38",
  "releases": [],
  "developers": [
    "daniel_park",
    "parkminwoo1991@gmail.com"
  ],
  "kwds": "bard_api _bard_api_key bardapi chatbot bard",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_bardapi",
  "homepage": "https://github.com/dsdanielpark/bard-api",
  "release_count": 35,
  "dependency_ids": [
    "pypi_browser_cookie3",
    "pypi_colorama",
    "pypi_deep_translator",
    "pypi_google_cloud_translate",
    "pypi_httpx",
    "pypi_langdetect",
    "pypi_requests"
  ]
}
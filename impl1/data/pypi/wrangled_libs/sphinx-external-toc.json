{
  "classifiers": [
    "development status :: 3 - alpha",
    "framework :: sphinx :: extension",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development :: libraries :: python modules",
    "topic :: text processing :: markup"
  ],
  "description": "# sphinx-external-toc\n\n[![github-ci][github-ci]][github-link]\n[![coverage status][codecov-badge]][codecov-link]\n[![code style: black][black-badge]][black-link]\n[![pypi][pypi-badge]][pypi-link]\n\na sphinx extension that allows the documentation site-map (a.k.a table of contents) to be defined external to the documentation files.\nas used by [jupyter book](https://jupyterbook.org)!\n\nin normal sphinx documentation, the documentation site-map is defined *via* a bottom-up approach - adding [`toctree` directives](https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#table-of-contents) within pages of the documentation.\n\nthis extension facilitates a **top-down** approach to defining the site-map structure, within a single yaml file.\n\n![toc graphic](https://raw.githubusercontent.com/executablebooks/sphinx-external-toc/main/docs/toc-graphic.png)\n\nit also allows for documents not specified in the toc to be auto-excluded.\n\n## user guide\n\n### sphinx configuration\n\nadd to your `conf.py`:\n\n```python\nextensions = [\"sphinx_external_toc\"]\nexternal_toc_path = \"_toc.yml\"  # optional, default: _toc.yml\nexternal_toc_exclude_missing = false  # optional, default: false\n```\n\nnote the `external_toc_path` is always read as a unix path, and can either be specified relative to the source directory (recommended) or as an absolute path.\n\n### basic structure\n\na minimal toc defines the top level `root` key, for a single root document file:\n\n```yaml\nroot: intro\n```\n\nthe value of the `root` key will be a path to a file, in unix format (folders split by `/`), relative to the source directory, and can be with or without the file extension.\n\n:::{note}\nthis root file will be set as the [`master_doc`](https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-master_doc).\n:::\n\ndocument files can then have a `subtrees` key - denoting a list of individual toctrees for that document - and in-turn each subtree should have a `entries` key - denoting a list of children links, that are one of:\n\n- `file`: path to a single document file in unix format,  with or without the file extension (as for `root`)\n- `glob`: path to one or more document files *via* unix shell-style wildcards (similar to [`fnmatch`](https://docs.python.org/3/library/fnmatch.html), but single stars don't match slashes.)\n- `url`: path for an external url (starting e.g. `http` or `https`)\n\n:::{important}\neach document file can only occur once in the toc!\n:::\n\nthis can proceed recursively to any depth.\n\n```yaml\nroot: intro\nsubtrees:\n- entries:\n  - file: doc1\n    subtrees:\n    - entries:\n      - file: doc2\n        subtrees:\n        - entries:\n          - file: doc3\n  - url: https://example.com\n  - glob: subfolder/other*\n```\n\nthis is equivalent to having a single `toctree` directive in `intro`, containing `doc1`,\nand a single `toctree` directive in `doc1`, with the `:glob:` flag and containing `doc2`, `https://example.com` and `subfolder/other*`.\n\nas a shorthand, the `entries` key can be at the same level as the `file`, which denotes a document with a single subtree.\nfor example, this file is exactly equivalent to the one above:\n\n```yaml\nroot: intro\nentries:\n- file: doc1\n  entries:\n  - file: doc2\n    entries:\n    - file: doc3\n- url: https://example.com\n- glob: subfolder/other*\n```\n\n### file and url titles\n\nby default, the initial header within a `file` document will be used as its title in generated table of contents.\nwith the `title` key you can set an alternative title for a document. and also for `url`:\n\n```yaml\nroot: intro\nsubtrees:\n- entries:\n  - file: doc1\n    title: document 1 title\n  - url: https://example.com\n    title: example url title\n```\n\n### toc tree options\n\neach subtree can be configured with a number of options (see also [sphinx `toctree` options](https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#directive-toctree)):\n\n- `caption` (string): a title for the whole the subtree, e.g. shown above the subtree in tocs\n- `hidden` (boolean): whether to show the toc within (inline of) the document (default `false`).\n  by default it is appended to the end of the document, but see also the `tableofcontents` directive for positioning of the toc.\n- `maxdepth` (integer): a maximum nesting depth to use when showing the toc within the document (default -1, meaning infinite).\n- `numbered` (boolean or integer): automatically add numbers to all documents within a subtree (default `false`).\n  if set to `true`, all sub-trees will also be numbered based on nesting (e.g. with `1.1` or `1.1.1`),\n  or if set to an integer then the numbering will only be applied to that depth.\n- `reversed` (boolean): if `true` then the entries in the subtree will be listed in reverse order (default `false`).\n  this can be useful when using `glob` entries.\n- `titlesonly` (boolean): if `true` then only the first heading in the document will be shown in the toc, not other headings of the same level (default `false`).\n\nthese options can be set at the level of the subtree:\n\n```yaml\nroot: intro\nsubtrees:\n- caption: subtree caption\n  hidden: false\n  maxdepth: 1\n  numbered: true\n  reversed: false\n  titlesonly: true\n  entries:\n  - file: doc1\n    subtrees:\n    - titlesonly: true\n      entries:\n      - file: doc2\n```\n\nor, if you are using the shorthand for a single subtree, set options under an `options` key:\n\n```yaml\nroot: intro\noptions:\n  caption: subtree caption\n  hidden: false\n  maxdepth: 1\n  numbered: true\n  reversed: false\n  titlesonly: true\nentries:\n- file: doc1\n  options:\n    titlesonly: true\n  entries:\n  - file: doc2\n```\n\nyou can also use the top-level `defaults` key, to set default options for all subtrees:\n\n```yaml\nroot: intro\ndefaults:\n  titlesonly: true\noptions:\n  caption: subtree caption\n  hidden: false\n  maxdepth: 1\n  numbered: true\n  reversed: false\nentries:\n- file: doc1\n  entries:\n  - file: doc2\n```\n\n:::{warning}\n`numbered` should not generally be used as a default, since numbering cannot be changed by nested subtrees, and sphinx will log a warning.\n:::\n\n:::{note}\nby default, title numbering restarts for each subtree.\nif you want want this numbering to be continuous, check-out the [sphinx-multitoc-numbering extension](https://github.com/executablebooks/sphinx-multitoc-numbering).\n:::\n\n### using different key-mappings\n\nfor certain use-cases, it is helpful to map the `subtrees`/`entries` keys to mirror e.g. an output [latex structure](https://www.overleaf.com/learn/latex/sections_and_chapters).\n\nthe `format` key can be used to provide such mappings (and also initial defaults).\ncurrently available:\n\n- `jb-article`:\n  - maps `entries` -> `sections`\n  - sets the default of `titlesonly` to `true`\n- `jb-book`:\n  - maps the top-level `subtrees` to `parts`\n  - maps the top-level `entries` to `chapters`\n  - maps other levels of `entries` to `sections`\n  - sets the default of `titlesonly` to `true`\n\nfor example:\n\n```yaml\ndefaults:\n  titlesonly: true\nroot: index\nsubtrees:\n- entries:\n  - file: doc1\n    entries:\n    - file: doc2\n```\n\nis equivalent to:\n\n```yaml\nformat: jb-book\nroot: index\nparts:\n- chapters:\n  - file: doc1\n    sections:\n    - file: doc2\n```\n\n:::{important}\nthese change in key names do not change the output site-map structure.\n:::\n\n## add a toc to a page's content\n\nby default, the `toctree` generated per document (one per subtree) are appended to the end of the document and hidden (then, for example, most html themes show them in a side-bar).\nbut if you would like them to be visible at a certain place within the document body, you may do so by using the `tableofcontents` directive:\n\nrestructuredtext:\n\n```restructuredtext\n.. tableofcontents::\n```\n\nmyst markdown:\n\n````md\n```{tableofcontents}\n```\n````\n\ncurrently, only one `tableofcontents` should be used per page (all `toctree` will be added here), and only if it is a page with child/descendant documents.\n\nnote, this will override the `hidden` option set for a subtree.\n\n## excluding files not in toc\n\nby default, sphinx will build all document files, regardless of whether they are specified in the table of contents, if they:\n\n1. have a file extension relating to a loaded parser (e.g. `.rst` or `.md`)\n2. do not match a pattern in [`exclude_patterns`](https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-exclude_patterns)\n\nto automatically add any document files that do not match a `file` or `glob` in the toc to the `exclude_patterns` list, add to your `conf.py`:\n\n```python\nexternal_toc_exclude_missing = true\n```\n\nnote that, for performance, files that are in *hidden folders* (e.g. in `.tox` or `.venv`) will not be added to `exclude_patterns` even if they are not specified in the toc.\nyou should exclude these folders explicitly.\n\n:::{important}\nthis feature is not currently compatible with [orphan files](https://www.sphinx-doc.org/en/master/usage/restructuredtext/field-lists.html#metadata).\n:::\n\n## command-line\n\nthis package comes with the `sphinx-etoc` command-line program, with some additional tools.\n\nto see all options:\n\n```console\n$ sphinx-etoc --help\nusage: sphinx-etoc [options] command [args]...\n\n  command-line for sphinx-external-toc.\n\noptions:\n  --version   show the version and exit.\n  -h, --help  show this message and exit.\n\ncommands:\n  from-project  create a toc file from a project directory.\n  migrate    migrate a toc from a previous revision.\n  parse      parse a toc file to a site-map yaml.\n  to-project    create a project directory from a toc file.\n```\n\nto build a template project from only a toc file:\n\n```console\n$ sphinx-etoc to-project -p path/to/site -e rst path/to/_toc.yml\n```\n\nnote, you can also add additional files in `meta`/`create_files` amd append text to the end of files with `meta`/`create_append`, e.g.\n\n```yaml\nroot: intro\nentries:\n- glob: doc*\nmeta:\n  create_append:\n    intro: |\n      this is some\n      appended text\n  create_files:\n  - doc1\n  - doc2\n  - doc3\n```\n\nto build a toc file from an existing site:\n\n```console\n$ sphinx-etoc from-project path/to/folder\n```\n\nsome rules used:\n\n- files/folders will be skipped if they match a pattern added by `-s` (based on [fnmatch](https://docs.python.org/3/library/fnmatch.html) unix shell-style wildcards)\n- sub-folders with no content files inside will be skipped\n- file and folder names will be sorted by [natural order](https://en.wikipedia.org/wiki/natural_sort_order)\n- if there is a file called `index` (or the name set by `-i`) in any folder, it will be treated as the index file, otherwise the first file by ordering will be used.\n\nthe command can also guess a `title` for each file, based on its path:\n\n- the folder name is used for index files, otherwise the file name\n- words are split by `_`\n- the first \"word\" is removed if it is an integer\n\nfor example, for a project with files:\n\n```\nindex.rst\n1_a_title.rst\n11_another_title.rst\n.hidden_file.rst\n.hidden_folder/index.rst\n1_a_subfolder/index.rst\n2_another_subfolder/index.rst\n2_another_subfolder/other.rst\n3_subfolder/1_no_index.rst\n3_subfolder/2_no_index.rst\n14_subfolder/index.rst\n14_subfolder/subsubfolder/index.rst\n14_subfolder/subsubfolder/other.rst\n```\n\nwill create the toc:\n\n```console\n$ sphinx-etoc from-project path/to/folder -i index -s \".*\" -e \".rst\" -t\nroot: index\nentries:\n- file: 1_a_title\n  title: a title\n- file: 11_another_title\n  title: another title\n- file: 1_a_subfolder/index\n  title: a subfolder\n- file: 2_another_subfolder/index\n  title: another subfolder\n  entries:\n  - file: 2_another_subfolder/other\n    title: other\n- file: 3_subfolder/1_no_index\n  title: no index\n  entries:\n  - file: 3_subfolder/2_no_index\n    title: no index\n- file: 14_subfolder/index\n  title: subfolder\n  entries:\n  - file: 14_subfolder/subsubfolder/index\n    title: subsubfolder\n    entries:\n    - file: 14_subfolder/subsubfolder/other\n      title: other\n```\n\n## api\n\nthe toc file is parsed to a `sitemap`, which is a `mutablemapping` subclass, with keys representing docnames mapping to a `document` that stores information on the toctrees it should contain:\n\n```python\nimport yaml\nfrom sphinx_external_toc.parsing import parse_toc_yaml\npath = \"path/to/_toc.yml\"\nsite_map = parse_toc_yaml(path)\nyaml.dump(site_map.as_json())\n```\n\nwould produce e.g.\n\n```yaml\nroot: intro\ndocuments:\n  doc1:\n    docname: doc1\n    subtrees: []\n    title: null\n  intro:\n    docname: intro\n    subtrees:\n    - caption: subtree caption\n      numbered: true\n      reversed: false\n      items:\n      - doc1\n      titlesonly: true\n    title: null\nmeta: {}\n```\n\n## development notes\n\nquestions / todos:\n\n- add additional top-level keys, e.g. `appendices` (see https://github.com/sphinx-doc/sphinx/issues/2502) and `bibliography`\n- using `external_toc_exclude_missing` to exclude a certain file suffix:\n  currently if you had files `doc.md` and `doc.rst`, and put `doc.md` in your toc,\n  it will add `doc.rst` to the excluded patterns but then, when looking for `doc.md`,\n  will still select `doc.rst` (since it is first in `source_suffix`).\n  maybe open an issue on sphinx, that `doc2path` should respect exclude patterns.\n- integrate https://github.com/executablebooks/sphinx-multitoc-numbering into this extension? (or upstream pr)\n- document suppressing warnings\n- test against orphan file\n- https://github.com/executablebooks/sphinx-book-theme/pull/304\n- cli command to generate toc from existing documentation `toctrees` (and then remove toctree directives)\n- test rebuild on toc changes (and document how rebuilds are controlled when toc changes)\n- some jupyter-book issues point to potential changes in numbering, based on where the `toctree` is in the document.\n  so could look into placing it e.g. under the first heading/title\n\n[github-ci]: https://github.com/executablebooks/sphinx-external-toc/workflows/continuous-integration/badge.svg?branch=main\n[github-link]: https://github.com/executablebooks/sphinx-external-toc\n[codecov-badge]: https://codecov.io/gh/executablebooks/sphinx-external-toc/branch/main/graph/badge.svg\n[codecov-link]: https://codecov.io/gh/executablebooks/sphinx-external-toc\n[black-badge]: https://img.shields.io/badge/code%20style-black-000000.svg\n[black-link]: https://github.com/ambv/black\n[pypi-badge]: https://img.shields.io/pypi/v/sphinx-external-toc.svg\n[pypi-link]: https://pypi.org/project/sphinx-external-toc\n",
  "docs_url": null,
  "keywords": "sphinx,extension,toc",
  "license": "",
  "name": "sphinx_external_toc",
  "package_url": "https://pypi.org/project/sphinx_external_toc/",
  "project_url": "https://pypi.org/project/sphinx_external_toc/",
  "project_urls": {
    "Documentation": "https://sphinx-external-toc.readthedocs.io",
    "Homepage": "https://github.com/executablebooks/sphinx-external-toc"
  },
  "release_url": "https://pypi.org/project/sphinx_external_toc/1.0.1/",
  "requires_dist": [
    "click>=7.1",
    "pyyaml",
    "sphinx>=5",
    "pre-commit>=2.12 ; extra == \"code_style\"",
    "myst-parser>=1.0.0 ; extra == \"rtd\"",
    "sphinx-book-theme>=1.0.0 ; extra == \"rtd\"",
    "coverage ; extra == \"testing\"",
    "pytest>=7.1 ; extra == \"testing\"",
    "pytest-cov ; extra == \"testing\"",
    "pytest-regressions ; extra == \"testing\""
  ],
  "requires_python": ">=3.9",
  "summary": "a sphinx extension that allows the site-map to be defined in a single yaml file.",
  "version": "1.0.1",
  "releases": [],
  "developers": [
    "chrisj_sewell@hotmail.com"
  ],
  "kwds": "sphinx_external_toc sphinx documentation toctree toctrees",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_sphinx_external_toc",
  "homepage": "",
  "release_count": 19,
  "dependency_ids": [
    "pypi_click",
    "pypi_coverage",
    "pypi_myst_parser",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_regressions",
    "pypi_pyyaml",
    "pypi_sphinx",
    "pypi_sphinx_book_theme"
  ]
}
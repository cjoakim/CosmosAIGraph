{
  "classifiers": [
    "intended audience :: developers",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "flask-swagger\n=============\n\na swagger 2.0 spec extractor for flask\n\ninstall:\n\n::\n\n    pip install flask-swagger\n\nflask-swagger provides a method (swagger) that inspects the flask app\nfor endpoints that contain yaml docstrings with swagger 2.0\n`operation <https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#operation-object>`__\nobjects.\n\n::\n\n    class userapi(methodview):\n\n        def post(self):\n            \"\"\"\n            create a new user\n            ---\n            tags:\n              - users\n            definitions:\n              - schema:\n                  id: group\n                  properties:\n                    name:\n                     type: string\n                     description: the group's name\n            parameters:\n              - in: body\n                name: body\n                schema:\n                  id: user\n                  required:\n                    - email\n                    - name\n                  properties:\n                    email:\n                      type: string\n                      description: email for user\n                    name:\n                      type: string\n                      description: name for user\n                    address:\n                      description: address for user\n                      schema:\n                        id: address\n                        properties:\n                          street:\n                            type: string\n                          state:\n                            type: string\n                          country:\n                            type: string\n                          postalcode:\n                            type: string\n                    groups:\n                      type: array\n                      description: list of groups\n                      items:\n                        $ref: \"#/definitions/group\"\n            responses:\n              201:\n                description: user created\n            \"\"\"\n            return {}\n\nflask-swagger supports docstrings in methods of methodview classes and\nregular flask view functions.\n\nfollowing yaml conventions, flask-swagger searches for ``---``,\neverything preceding is provided as ``summary`` (first line) and\n``description`` (following lines) for the endpoint while everything\nafter is parsed as a swagger\n`operation <https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#operation-object>`__\nobject.\n\nin order to support inline definition of\n`schema <https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#schemaobject>`__\nobjects in\n`parameter <https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#parameterobject>`__\nand\n`response <https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#responsesobject>`__\nobjects, flask-swagger veers a little off from the standard. we require\nan ``id`` field for the inline schema which is then used to correctly\nplace the\n`schema <https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#schemaobject>`__\nobject in the\n`definitions <https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#definitionsobject>`__\nobject.\n\n`schema <https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#schemaobject>`__\nobjects can be defined in a definitions section within the docstrings (see group object above) or within responses or parameters (see user object above). we alo support schema objects nested within the properties of other\n`schema <https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#schemaobject>`__\nobjects. an example is shown above with the address property of user.\n\nto expose your swagger specification to the world you provide a flask\nroute that does something along these lines\n\n::\n\n    from flask import flask, jsonify\n    from flask_swagger import swagger\n\n    app = flask(__name__)\n\n    @app.route(\"/spec\")\n    def spec():\n        return jsonify(swagger(app))\n\nnote that the swagger specification returned by ``swagger(app)`` is as\nminimal as it can be. it's your job to override and add to the\nspecification as you see fit.\n\n::\n\n    @app.route(\"/spec\")\n    def spec():\n        swag = swagger(app)\n        swag['info']['version'] = \"1.0\"\n        swag['info']['title'] = \"my api\"\n        return jsonify(swag)\n\n`swagger-ui <https://github.com/swagger-api/swagger-ui>`__\n\nswagger-ui is the reason we embarked on this mission to begin with,\nflask-swagger does not however include swagger-ui. simply follow the\nawesome documentation over at https://github.com/swagger-api/swagger-ui\nand point your\n`swaggerui.url <https://github.com/swagger-api/swagger-ui#swaggerui>`__\nto your new flask-swagger endpoint and enjoy.\n\nacknowledgments\n\nflask-swagger builds on ideas and code from\n`flask-sillywalk <https://github.com/hobbeswalsh/flask-sillywalk>`__ and\n`flask-restful-swagger <https://github.com/rantav/flask-restful-swagger>`__\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "flask-swagger",
  "package_url": "https://pypi.org/project/flask-swagger/",
  "project_url": "https://pypi.org/project/flask-swagger/",
  "project_urls": {
    "Homepage": "https://github.com/gangverk/flask-swagger"
  },
  "release_url": "https://pypi.org/project/flask-swagger/0.2.14/",
  "requires_dist": [
    "Flask (>=0.10)",
    "PyYAML (>=5.1)"
  ],
  "requires_python": "",
  "summary": "extract swagger specs from your flask project",
  "version": "0.2.14",
  "releases": [],
  "developers": [
    "atli_thorbjornsson"
  ],
  "kwds": "flask_swagger swagger swaggerui api flask",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_flask_swagger",
  "homepage": "https://github.com/gangverk/flask-swagger",
  "release_count": 16,
  "dependency_ids": [
    "pypi_flask",
    "pypi_pyyaml"
  ]
}
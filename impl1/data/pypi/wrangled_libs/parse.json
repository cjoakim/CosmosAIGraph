{
  "classifiers": [
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "topic :: software development :: code generators",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "parse() is the opposite of format()\ninstallation\n------------\n\n.. code-block:: pycon\n\n    pip install parse\n\nusage\n-----\n\nparse strings using a specification based on the python `format()`_ syntax.\n\n   ``parse()`` is the opposite of ``format()``\n\nthe module is set up to only export ``parse()``, ``search()``, ``findall()``,\nand ``with_pattern()`` when ``import *`` is used:\n\n>>> from parse import *\n\nfrom there it's a simple thing to parse a string:\n\n.. code-block:: pycon\n\n    >>> parse(\"it's {}, i love it!\", \"it's spam, i love it!\")\n    <result ('spam',) {}>\n    >>> _[0]\n    'spam'\n\nor to search a string for some pattern:\n\n.. code-block:: pycon\n\n    >>> search('age: {:d}\\n', 'name: rufus\\nage: 42\\ncolor: red\\n')\n    <result (42,) {}>\n\nor find all the occurrences of some pattern in a string:\n\n.. code-block:: pycon\n\n    >>> ''.join(r[0] for r in findall(\">{}<\", \"<p>the <b>bold</b> text</p>\"))\n    'the bold text'\n\nif you're going to use the same pattern to match lots of strings you can\ncompile it once:\n\n.. code-block:: pycon\n\n    >>> from parse import compile\n    >>> p = compile(\"it's {}, i love it!\")\n    >>> print(p)\n    <parser \"it's {}, i love it!\">\n    >>> p.parse(\"it's spam, i love it!\")\n    <result ('spam',) {}>\n\n(\"compile\" is not exported for ``import *`` usage as it would override the\nbuilt-in ``compile()`` function)\n\nthe default behaviour is to match strings case insensitively. you may match with\ncase by specifying `case_sensitive=true`:\n\n.. code-block:: pycon\n\n    >>> parse('spam', 'spam', case_sensitive=true) is none\n    true\n\n.. _format():\n  https://docs.python.org/3/library/stdtypes.html#str.format\n\n\nformat syntax\n-------------\n\na basic version of the `format string syntax`_ is supported with anonymous\n(fixed-position), named and formatted fields::\n\n   {[field name]:[format spec]}\n\nfield names must be a valid python identifiers, including dotted names;\nelement indexes imply dictionaries (see below for example).\n\nnumbered fields are also not supported: the result of parsing will include\nthe parsed fields in the order they are parsed.\n\nthe conversion of fields to types other than strings is done based on the\ntype in the format specification, which mirrors the ``format()`` behaviour.\nthere are no \"!\" field conversions like ``format()`` has.\n\nsome simple parse() format string examples:\n\n.. code-block:: pycon\n\n    >>> parse(\"bring me a {}\", \"bring me a shrubbery\")\n    <result ('shrubbery',) {}>\n    >>> r = parse(\"the {} who {} {}\", \"the knights who say ni!\")\n    >>> print(r)\n    <result ('knights', 'say', 'ni!') {}>\n    >>> print(r.fixed)\n    ('knights', 'say', 'ni!')\n    >>> print(r[0])\n    knights\n    >>> print(r[1:])\n    ('say', 'ni!')\n    >>> r = parse(\"bring out the holy {item}\", \"bring out the holy hand grenade\")\n    >>> print(r)\n    <result () {'item': 'hand grenade'}>\n    >>> print(r.named)\n    {'item': 'hand grenade'}\n    >>> print(r['item'])\n    hand grenade\n    >>> 'item' in r\n    true\n\nnote that `in` only works if you have named fields.\n\ndotted names and indexes are possible with some limits. only word identifiers\nare supported (ie. no numeric indexes) and the application must make additional\nsense of the result:\n\n.. code-block:: pycon\n\n    >>> r = parse(\"mmm, {food.type}, i love it!\", \"mmm, spam, i love it!\")\n    >>> print(r)\n    <result () {'food.type': 'spam'}>\n    >>> print(r.named)\n    {'food.type': 'spam'}\n    >>> print(r['food.type'])\n    spam\n    >>> r = parse(\"my quest is {quest[name]}\", \"my quest is to seek the holy grail!\")\n    >>> print(r)\n    <result () {'quest': {'name': 'to seek the holy grail!'}}>\n    >>> print(r['quest'])\n    {'name': 'to seek the holy grail!'}\n    >>> print(r['quest']['name'])\n    to seek the holy grail!\n\nif the text you're matching has braces in it you can match those by including\na double-brace ``{{`` or ``}}`` in your format string, just like format() does.\n\n\nformat specification\n--------------------\n\nmost often a straight format-less ``{}`` will suffice where a more complex\nformat specification might have been used.\n\nmost of `format()`'s `format specification mini-language`_ is supported:\n\n   [[fill]align][sign][0][width][.precision][type]\n\nthe differences between `parse()` and `format()` are:\n\n- the align operators will cause spaces (or specified fill character) to be\n  stripped from the parsed value. the width is not enforced; it just indicates\n  there may be whitespace or \"0\"s to strip.\n- numeric parsing will automatically handle a \"0b\", \"0o\" or \"0x\" prefix.\n  that is, the \"#\" format character is handled automatically by d, b, o\n  and x formats. for \"d\" any will be accepted, but for the others the correct\n  prefix must be present if at all.\n- numeric sign is handled automatically.  a sign specifier can be given, but\n  has no effect.\n- the thousands separator is handled automatically if the \"n\" type is used.\n- the types supported are a slightly different mix to the format() types.  some\n  format() types come directly over: \"d\", \"n\", \"%\", \"f\", \"e\", \"b\", \"o\" and \"x\".\n  in addition some regular expression character group types \"d\", \"w\", \"w\", \"s\"\n  and \"s\" are also available.\n- the \"e\" and \"g\" types are case-insensitive so there is not need for\n  the \"e\" or \"g\" types. the \"e\" type handles fortran formatted numbers (no\n  leading 0 before the decimal point).\n\n===== =========================================== ========\ntype  characters matched                          output\n===== =========================================== ========\nl     letters (ascii)                             str\nw     letters, numbers and underscore             str\nw     not letters, numbers and underscore         str\ns     whitespace                                  str\ns     non-whitespace                              str\nd     digits (effectively integer numbers)        int\nd     non-digit                                   str\nn     numbers with thousands separators (, or .)  int\n%     percentage (converted to value/100.0)       float\nf     fixed-point numbers                         float\nf     decimal numbers                             decimal\ne     floating-point numbers with exponent        float\n      e.g. 1.1e-10, nan (all case insensitive)\ng     general number format (either d, f or e)    float\nb     binary numbers                              int\no     octal numbers                               int\nx     hexadecimal numbers (lower and upper case)  int\nti    iso 8601 format date/time                   datetime\n      e.g. 1972-01-20t10:21:36z (\"t\" and \"z\"\n      optional)\nte    rfc2822 e-mail format date/time             datetime\n      e.g. mon, 20 jan 1972 10:21:36 +1000\ntg    global (day/month) format date/time         datetime\n      e.g. 20/1/1972 10:21:36 am +1:00\nta    us (month/day) format date/time             datetime\n      e.g. 1/20/1972 10:21:36 pm +10:30\ntc    ctime() format date/time                    datetime\n      e.g. sun sep 16 01:03:52 1973\nth    http log format date/time                   datetime\n      e.g. 21/nov/2011:00:07:11 +0000\nts    linux system log format date/time           datetime\n      e.g. nov  9 03:37:44\ntt    time                                        time\n      e.g. 10:21:36 pm -5:30\n===== =========================================== ========\n\nthe type can also be a datetime format string, following the\n`1989 c standard format codes`_, e.g. ``%y-%m-%d``. depending on the\ndirectives contained in the format string, parsed output may be an instance\nof ``datetime.datetime``, ``datetime.time``, or ``datetime.date``.\n\n.. code-block:: pycon\n\n    >>> parse(\"{:%y-%m-%d %h:%m:%s}\", \"2023-11-23 12:56:47\")\n    <result (datetime.datetime(2023, 11, 23, 12, 56, 47),) {}>\n    >>> parse(\"{:%h:%m}\", \"10:26\")\n    <result (datetime.time(10, 26),) {}>\n    >>> parse(\"{:%y/%m/%d}\", \"2023/11/25\")\n    <result (datetime.date(2023, 11, 25),) {}>\n\n\nsome examples of typed parsing with ``none`` returned if the typing\ndoes not match:\n\n.. code-block:: pycon\n\n    >>> parse('our {:d} {:w} are...', 'our 3 weapons are...')\n    <result (3, 'weapons') {}>\n    >>> parse('our {:d} {:w} are...', 'our three weapons are...')\n    >>> parse('meet at {:tg}', 'meet at 1/2/2011 11:00 pm')\n    <result (datetime.datetime(2011, 2, 1, 23, 0),) {}>\n\nand messing about with alignment:\n\n.. code-block:: pycon\n\n    >>> parse('with {:>} herring', 'with     a herring')\n    <result ('a',) {}>\n    >>> parse('spam {:^} spam', 'spam    lovely     spam')\n    <result ('lovely',) {}>\n\nnote that the \"center\" alignment does not test to make sure the value is\ncentered - it just strips leading and trailing whitespace.\n\nwidth and precision may be used to restrict the size of matched text\nfrom the input. width specifies a minimum size and precision specifies\na maximum. for example:\n\n.. code-block:: pycon\n\n    >>> parse('{:.2}{:.2}', 'look')           # specifying precision\n    <result ('lo', 'ok') {}>\n    >>> parse('{:4}{:4}', 'look at that')     # specifying width\n    <result ('look', 'at that') {}>\n    >>> parse('{:4}{:.4}', 'look at that')    # specifying both\n    <result ('look at ', 'that') {}>\n    >>> parse('{:2d}{:2d}', '0440')           # parsing two contiguous numbers\n    <result (4, 40) {}>\n\nsome notes for the special date and time types:\n\n- the presence of the time part is optional (including iso 8601, starting\n  at the \"t\"). a full datetime object will always be returned; the time\n  will be set to 00:00:00. you may also specify a time without seconds.\n- when a seconds amount is present in the input fractions will be parsed\n  to give microseconds.\n- except in iso 8601 the day and month digits may be 0-padded.\n- the date separator for the tg and ta formats may be \"-\" or \"/\".\n- named months (abbreviations or full names) may be used in the ta and tg\n  formats in place of numeric months.\n- as per rfc 2822 the e-mail format may omit the day (and comma), and the\n  seconds but nothing else.\n- hours greater than 12 will be happily accepted.\n- the am/pm are optional, and if pm is found then 12 hours will be added\n  to the datetime object's hours amount - even if the hour is greater\n  than 12 (for consistency.)\n- in iso 8601 the \"z\" (utc) timezone part may be a numeric offset\n- timezones are specified as \"+hh:mm\" or \"-hh:mm\". the hour may be one or two\n  digits (0-padded is ok.) also, the \":\" is optional.\n- the timezone is optional in all except the e-mail format (it defaults to\n  utc.)\n- named timezones are not handled yet.\n\nnote: attempting to match too many datetime fields in a single parse() will\ncurrently result in a resource allocation issue. a toomanyfields exception\nwill be raised in this instance. the current limit is about 15. it is hoped\nthat this limit will be removed one day.\n\n.. _`format string syntax`:\n  https://docs.python.org/3/library/string.html#format-string-syntax\n.. _`format specification mini-language`:\n  https://docs.python.org/3/library/string.html#format-specification-mini-language\n.. _`1989 c standard format codes`:\n  https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes\n\n\n\nresult and match objects\n------------------------\n\nthe result of a ``parse()`` and ``search()`` operation is either ``none`` (no match), a\n``result`` instance or a ``match`` instance if ``evaluate_result`` is false.\n\nthe ``result`` instance has three attributes:\n\n``fixed``\n   a tuple of the fixed-position, anonymous fields extracted from the input.\n``named``\n   a dictionary of the named fields extracted from the input.\n``spans``\n   a dictionary mapping the names and fixed position indices matched to a\n   2-tuple slice range of where the match occurred in the input.\n   the span does not include any stripped padding (alignment or width).\n\nthe ``match`` instance has one method:\n\n``evaluate_result()``\n   generates and returns a ``result`` instance for this ``match`` object.\n\n\n\ncustom type conversions\n-----------------------\n\nif you wish to have matched fields automatically converted to your own type you\nmay pass in a dictionary of type conversion information to ``parse()`` and\n``compile()``.\n\nthe converter will be passed the field string matched. whatever it returns\nwill be substituted in the ``result`` instance for that field.\n\nyour custom type conversions may override the builtin types if you supply one\nwith the same identifier:\n\n.. code-block:: pycon\n\n    >>> def shouty(string):\n    ...    return string.upper()\n    ...\n    >>> parse('{:shouty} world', 'hello world', {\"shouty\": shouty})\n    <result ('hello',) {}>\n\nif the type converter has the optional ``pattern`` attribute, it is used as\nregular expression for better pattern matching (instead of the default one):\n\n.. code-block:: pycon\n\n    >>> def parse_number(text):\n    ...    return int(text)\n    >>> parse_number.pattern = r'\\d+'\n    >>> parse('answer: {number:number}', 'answer: 42', {\"number\": parse_number})\n    <result () {'number': 42}>\n    >>> _ = parse('answer: {:number}', 'answer: alice', {\"number\": parse_number})\n    >>> assert _ is none, \"mismatch\"\n\nyou can also use the ``with_pattern(pattern)`` decorator to add this\ninformation to a type converter function:\n\n.. code-block:: pycon\n\n    >>> from parse import with_pattern\n    >>> @with_pattern(r'\\d+')\n    ... def parse_number(text):\n    ...    return int(text)\n    >>> parse('answer: {number:number}', 'answer: 42', {\"number\": parse_number})\n    <result () {'number': 42}>\n\na more complete example of a custom type might be:\n\n.. code-block:: pycon\n\n    >>> yesno_mapping = {\n    ...     \"yes\":  true,   \"no\":    false,\n    ...     \"on\":   true,   \"off\":   false,\n    ...     \"true\": true,   \"false\": false,\n    ... }\n    >>> @with_pattern(r\"|\".join(yesno_mapping))\n    ... def parse_yesno(text):\n    ...     return yesno_mapping[text.lower()]\n\n\nif the type converter ``pattern`` uses regex-grouping (with parenthesis),\nyou should indicate this by using the optional ``regex_group_count`` parameter\nin the ``with_pattern()`` decorator:\n\n.. code-block:: pycon\n\n    >>> @with_pattern(r'((\\d+))', regex_group_count=2)\n    ... def parse_number2(text):\n    ...    return int(text)\n    >>> parse('answer: {:number2} {:number2}', 'answer: 42 43', {\"number2\": parse_number2})\n    <result (42, 43) {}>\n\notherwise, this may cause parsing problems with unnamed/fixed parameters.\n\n\npotential gotchas\n-----------------\n\n``parse()`` will always match the shortest text necessary (from left to right)\nto fulfil the parse pattern, so for example:\n\n\n.. code-block:: pycon\n\n    >>> pattern = '{dir1}/{dir2}'\n    >>> data = 'root/parent/subdir'\n    >>> sorted(parse(pattern, data).named.items())\n    [('dir1', 'root'), ('dir2', 'parent/subdir')]\n\nso, even though `{'dir1': 'root/parent', 'dir2': 'subdir'}` would also fit\nthe pattern, the actual match represents the shortest successful match for\n``dir1``.\n\ndevelopers\n----------\n\nwant to contribute to parse? fork the repo to your own github account, and create a pull-request.\n\n.. code-block:: bash\n\n   git clone git@github.com:r1chardj0n3s/parse.git\n   git remote rename origin upstream\n   git remote add origin git@github.com:yourusername/parse.git\n   git checkout -b myfeature\n\nto run the tests locally:\n\n.. code-block:: bash\n\n   python -m venv .venv\n   source .venv/bin/activate\n   pip install -r tests/requirements.txt\n   pip install -e .\n   pytest\n\n----\n\nchangelog\n---------\n\n- 1.20.0 added support for strptime codes (thanks @bendichter)\n- 1.19.1 added support for sign specifiers in number formats (thanks @anntzer)\n- 1.19.0 added slice access to fixed results (thanks @jonathangjertsen).\n  also corrected matching of *full string* vs. *full line* (thanks @giladreti)\n  fix issue with using digit field numbering and types\n- 1.18.0 correct bug in int parsing introduced in 1.16.0 (thanks @maxxk)\n- 1.17.0 make left- and center-aligned search consume up to next space\n- 1.16.0 make compiled parse objects pickleable (thanks @martinresearch)\n- 1.15.0 several fixes for parsing non-base 10 numbers (thanks @vladikcomper)\n- 1.14.0 more broad acceptance of fortran number format (thanks @purpleskyfall)\n- 1.13.1 project metadata correction.\n- 1.13.0 handle fortran formatted numbers with no leading 0 before decimal\n  point (thanks @purpleskyfall).\n  handle comparison of fixedtzoffset with other types of object.\n- 1.12.1 actually use the `case_sensitive` arg in compile (thanks @jacquev6)\n- 1.12.0 do not assume closing brace when an opening one is found (thanks @mattsep)\n- 1.11.1 revert having unicode char in docstring, it breaks bamboo builds(?!)\n- 1.11.0 implement `__contains__` for result instances.\n- 1.10.0 introduce a \"letters\" matcher, since \"w\" matches numbers\n  also.\n- 1.9.1 fix deprecation warnings around backslashes in regex strings\n  (thanks mickael schoentgen). also fix some documentation formatting\n  issues.\n- 1.9.0 we now honor precision and width specifiers when parsing numbers\n  and strings, allowing parsing of concatenated elements of fixed width\n  (thanks julia signell)\n- 1.8.4 add license file at request of packagers.\n  correct handling of am/pm to follow most common interpretation.\n  correct parsing of hexadecimal that looks like a binary prefix.\n  add ability to parse case sensitively.\n  add parsing of numbers to decimal with \"f\" (thanks john vandenberg)\n- 1.8.3 add regex_group_count to with_pattern() decorator to support\n  user-defined types that contain brackets/parenthesis (thanks jens engel)\n- 1.8.2 add documentation for including braces in format string\n- 1.8.1 ensure bare hexadecimal digits are not matched\n- 1.8.0 support manual control over result evaluation (thanks timo furrer)\n- 1.7.0 parse dict fields (thanks mark visser) and adapted to allow\n  more than 100 re groups in python 3.5+ (thanks david king)\n- 1.6.6 parse linux system log dates (thanks alex cowan)\n- 1.6.5 handle precision in float format (thanks levi kilcher)\n- 1.6.4 handle pipe \"|\" characters in parse string (thanks martijn pieters)\n- 1.6.3 handle repeated instances of named fields, fix bug in pm time\n  overflow\n- 1.6.2 fix logging to use local, not root logger (thanks necku)\n- 1.6.1 be more flexible regarding matched iso datetimes and timezones in\n  general, fix bug in timezones without \":\" and improve docs\n- 1.6.0 add support for optional ``pattern`` attribute in user-defined types\n  (thanks jens engel)\n- 1.5.3 fix handling of question marks\n- 1.5.2 fix type conversion error with dotted names (thanks sebastian thiel)\n- 1.5.1 implement handling of named datetime fields\n- 1.5 add handling of dotted field names (thanks sebastian thiel)\n- 1.4.1 fix parsing of \"0\" in int conversion (thanks james rowe)\n- 1.4 add __getitem__ convenience access on result.\n- 1.3.3 fix python 2.5 setup.py issue.\n- 1.3.2 fix python 3.2 setup.py issue.\n- 1.3.1 fix a couple of python 3.2 compatibility issues.\n- 1.3 added search() and findall(); removed compile() from ``import *``\n  export as it overwrites builtin.\n- 1.2 added ability for custom and override type conversions to be\n  provided; some cleanup\n- 1.1.9 to keep things simpler number sign is handled automatically;\n  significant robustification in the face of edge-case input.\n- 1.1.8 allow \"d\" fields to have number base \"0x\" etc. prefixes;\n  fix up some field type interactions after stress-testing the parser;\n  implement \"%\" type.\n- 1.1.7 python 3 compatibility tweaks (2.5 to 2.7 and 3.2 are supported).\n- 1.1.6 add \"e\" and \"g\" field types; removed redundant \"h\" and \"x\";\n  removed need for explicit \"#\".\n- 1.1.5 accept textual dates in more places; result now holds match span\n  positions.\n- 1.1.4 fixes to some int type conversion; implemented \"=\" alignment; added\n  date/time parsing with a variety of formats handled.\n- 1.1.3 type conversion is automatic based on specified field types. also added\n  \"f\" and \"n\" types.\n- 1.1.2 refactored, added compile() and limited ``from parse import *``\n- 1.1.1 documentation improvements\n- 1.1.0 implemented more of the `format specification mini-language`_\n  and removed the restriction on mixing fixed-position and named fields\n- 1.0.0 initial release\n\nthis code is copyright 2012-2021 richard jones <richard@python.org>\nsee the end of the source file for the license of use.\n",
  "docs_url": null,
  "keywords": "",
  "license": "copyright (c) 2012-2019 richard jones <richard@python.org>  permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"software\"), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:  the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.  the software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software. ",
  "name": "parse",
  "package_url": "https://pypi.org/project/parse/",
  "project_url": "https://pypi.org/project/parse/",
  "project_urls": {
    "homepage": "https://github.com/r1chardj0n3s/parse"
  },
  "release_url": "https://pypi.org/project/parse/1.20.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "parse() is the opposite of format()",
  "version": "1.20.0",
  "releases": [],
  "developers": [
    "richard@python.org"
  ],
  "kwds": "parse parser parse_number parsing parse_number2",
  "license_kwds": "copyright python liable copies liability",
  "libtype": "pypi",
  "id": "pypi_parse",
  "homepage": "",
  "release_count": 51,
  "dependency_ids": [],
  "documentation_summary": "The HTML text provides information about the Python package \"parse\" version 1.20.1, released on January 28, 2024. This package, authored by Richard Jones and maintained by Wim Glenn, is designed for parsing strings using a specification based on the Python `format()` syntax, effectively acting as the opposite of `format()`. It supports a variety of formats for parsing, including custom type conversions and date/time formats. The package is licensed under the MIT License and is intended for developers working in a web environment. It also includes a warning for users with JavaScript disabled and those using unsupported browsers, specifically Internet Explorer 9 and below, advising them to upgrade for a better experience.",
  "embedding": [
    0.007584801875054836,
    0.036757659167051315,
    0.005803469102829695,
    0.002551829908043146,
    -0.0218708086758852,
    0.020739803090691566,
    0.01785574108362198,
    -0.014095149002969265,
    -0.013451890088617802,
    -0.018788820132613182,
    0.0020888247527182102,
    0.03209226578474045,
    -0.037577640265226364,
    0.024359019473195076,
    -0.007036971393972635,
    0.011076780036091805,
    0.01539580523967743,
    -0.011515043675899506,
    0.0031456074211746454,
    0.00549244275316596,
    0.02997163124382496,
    0.0034813745878636837,
    -0.03316672146320343,
    -0.02114979177713394,
    -0.01969362422823906,
    0.0009648886043578386,
    -0.0004881876811850816,
    0.006238199304789305,
    -0.016017857939004898,
    -0.012957075610756874,
    0.019368460401892662,
    -0.016583360731601715,
    -0.03704041242599487,
    -0.013876017183065414,
    -0.009627679362893105,
    -0.007344463374465704,
    -0.01719127595424652,
    -0.00847546849399805,
    0.014886852353811264,
    0.0027091102674603462,
    0.011804863810539246,
    0.0012988884700462222,
    0.0006445844774134457,
    -0.008744082413613796,
    -0.011260568164288998,
    0.01809607818722725,
    0.02765307016670704,
    -0.035796307027339935,
    -0.011126261204481125,
    0.020259125158190727,
    0.041932009160518646,
    0.014604100957512856,
    -0.004361437633633614,
    -0.0070475745014846325,
    0.006121564190834761,
    -0.02573036216199398,
    0.0037181787192821503,
    0.02495279721915722,
    0.0025500627234578133,
    0.00428368104621768,
    0.025362785905599594,
    -0.012730874121189117,
    -0.03472185134887695,
    0.004053945653140545,
    0.008411848917603493,
    -0.006793098524212837,
    -0.01719127595424652,
    0.011401943862438202,
    -0.026818955317139626,
    0.007029902655631304,
    0.019778449088335037,
    0.0511779747903347,
    -0.0007793331169523299,
    0.009627679362893105,
    0.04179063439369202,
    -0.013070175424218178,
    -0.019481560215353966,
    0.010384039022028446,
    0.00028915732400491834,
    -0.0006794865475967526,
    0.008998557925224304,
    -0.008383573964238167,
    0.007881690748035908,
    0.04518364742398262,
    0.002747988561168313,
    -0.012801562435925007,
    -0.023425940424203873,
    0.03050885908305645,
    -0.013020694255828857,
    -0.02114979177713394,
    0.027935821563005447,
    0.007040505763143301,
    -0.0009516346035525203,
    0.010617309249937534,
    -0.014017392881214619,
    0.02365214005112648,
    -0.02037222683429718,
    0.024938659742474556,
    0.012031065300107002,
    -0.01767195202410221,
    0.004273077938705683,
    0.03786038979887962,
    -0.011974514462053776,
    -0.002288517775014043,
    -0.029858531430363655,
    -0.01893019489943981,
    0.010532483458518982,
    -0.024698320776224136,
    0.02606966346502304,
    0.0019386131316423416,
    -0.028614424169063568,
    0.05016006901860237,
    -0.005319257732480764,
    -0.02988680638372898,
    0.025065897032618523,
    -0.023044224828481674,
    0.032318465411663055,
    -0.020400501787662506,
    -0.027780309319496155,
    -0.015042365528643131,
    -0.021319443359971046,
    -0.006962749175727367,
    0.026394827291369438,
    -0.03576803207397461,
    0.013162069953978062,
    -0.022040458396077156,
    -0.004195321351289749,
    -0.02809133566915989,
    -0.03271431848406792,
    -0.011903827078640461,
    0.023256288841366768,
    0.0061781145632267,
    0.010228525847196579,
    0.015367529354989529,
    0.002198390895500779,
    -0.009500441141426563,
    -0.012052271515130997,
    -0.012610705569386482,
    -0.0251507218927145,
    -0.01453341357409954,
    0.023341113701462746,
    0.01833641715347767,
    -0.01047593355178833,
    -0.015890618786215782,
    0.011232293210923672,
    0.004417988006025553,
    0.03573975712060928,
    -0.019721899181604385,
    -0.008482537232339382,
    -0.011380737647414207,
    0.0628838762640953,
    -0.002832813886925578,
    -0.021262893453240395,
    -0.013918429613113403,
    0.0005451797042042017,
    0.02245044894516468,
    -0.006771892309188843,
    0.017049899324774742,
    0.027497557923197746,
    0.001441147760488093,
    0.011939170770347118,
    0.019340185448527336,
    -0.023256288841366768,
    0.0001181811821879819,
    -0.019608797505497932,
    0.023383527994155884,
    0.007005162071436644,
    0.012433985248208046,
    -0.02727135643362999,
    -0.009981119073927402,
    0.0008239547605626285,
    -0.0067436168901622295,
    -0.021178066730499268,
    -0.012872249819338322,
    0.011783657595515251,
    0.0033258614130318165,
    0.048435285687446594,
    0.029943356290459633,
    -0.02095186710357666,
    -0.001509184716269374,
    -0.0020358089823275805,
    0.00574338436126709,
    -0.019340185448527336,
    0.04611672833561897,
    -0.003852485679090023,
    -0.003760591382160783,
    0.0020128353498876095,
    0.027624795213341713,
    -0.005280379205942154,
    0.02021671272814274,
    0.03588113188743591,
    -0.003172115422785282,
    -0.023058364167809486,
    -0.015904756262898445,
    -0.5641452670097351,
    0.007924103178083897,
    -0.01165641937404871,
    -0.01332465186715126,
    0.028105473145842552,
    0.018703993409872055,
    -0.0046830675564706326,
    -0.004934009164571762,
    -0.03596595674753189,
    0.026055525988340378,
    -0.01189675834029913,
    0.03562665730714798,
    -0.010553689673542976,
    -0.0059377760626375675,
    0.010610240511596203,
    -0.014844439923763275,
    0.000750616192817688,
    -0.013402408920228481,
    -0.008213923312723637,
    0.03175296261906624,
    -0.020867040380835533,
    0.01494340319186449,
    -0.019622934982180595,
    0.005386411212384701,
    -0.02021671272814274,
    0.0014711900148540735,
    -0.007803934160619974,
    -0.03161158785223961,
    0.0011769520351663232,
    0.017219550907611847,
    -0.04504227265715599,
    0.02303008735179901,
    0.0001956064224941656,
    0.006089754868298769,
    0.05660679563879967,
    0.0023503697011619806,
    -0.0056338184513151646,
    0.016809560358524323,
    0.002297353697940707,
    0.02539106085896492,
    -0.01931190863251686,
    0.012038134038448334,
    0.006863786373287439,
    -0.013932567089796066,
    0.036418359726667404,
    0.002094126306474209,
    -0.02307250164449215,
    0.011875552125275135,
    -0.03469357639551163,
    -0.02567381225526333,
    -0.005577268078923225,
    0.010603171773254871,
    0.020400501787662506,
    -0.024415569379925728,
    0.05035799369215965,
    0.008270473219454288,
    0.00454876059666276,
    -0.011069711297750473,
    -0.014031530357897282,
    -0.015212016180157661,
    -0.0115645257756114,
    -0.00880770105868578,
    -0.00695214606821537,
    -0.018166767433285713,
    0.006824907846748829,
    0.044137466698884964,
    0.004866855684667826,
    0.0018343486590310931,
    -0.004527554381638765,
    -0.020047063007950783,
    0.0031827185302972794,
    0.007563595660030842,
    -0.007135934196412563,
    -0.02505175955593586,
    -0.002822210779413581,
    0.016244057565927505,
    0.0321488156914711,
    0.01635715924203396,
    -0.003792400937527418,
    0.034099798649549484,
    0.007457563653588295,
    0.005439426749944687,
    -0.02021671272814274,
    -0.037634190171957016,
    0.05372273549437523,
    -0.017049899324774742,
    -0.02452866919338703,
    0.007478770334273577,
    0.015537180006504059,
    -0.0040044644847512245,
    -0.007443426176905632,
    0.036757659167051315,
    0.01973603665828705,
    -0.01281569991260767,
    -0.014293074607849121,
    0.01679542288184166,
    -0.018279867246747017,
    0.012794493697583675,
    -0.008284611627459526,
    -0.04532502219080925,
    6.897583807585761e-05,
    -0.02901027724146843,
    0.03011300601065159,
    0.0197925865650177,
    -0.0042942846193909645,
    0.021785981953144073,
    0.014519276097416878,
    -0.005117797292768955,
    0.017601264640688896,
    -0.0103062829002738,
    -0.0050153001211583614,
    -0.03022610768675804,
    -0.02920820191502571,
    -0.011649350635707378,
    0.004555829335004091,
    -0.03152676299214363,
    0.018209179863333702,
    -0.006315955892205238,
    0.014066874049603939,
    0.0035909407306462526,
    0.0001665581512497738,
    -0.008355299010872841,
    -0.01679542288184166,
    0.0041175647638738155,
    0.01532511692494154,
    0.008659256622195244,
    0.04492917284369469,
    0.00428368104621768,
    -0.012893456034362316,
    -0.0038348136004060507,
    0.009705436415970325,
    0.0024952797684818506,
    0.016639910638332367,
    -0.016130957752466202,
    0.012052271515130997,
    0.015819931402802467,
    0.010991954244673252,
    0.0031562107615172863,
    -0.024924522265791893,
    -0.022365622222423553,
    -0.007153606042265892,
    0.013253964483737946,
    -0.010624377988278866,
    -0.03732316195964813,
    -0.0037747290916740894,
    -0.036616284400224686,
    -0.012158303521573544,
    0.013345858082175255,
    -0.018887782469391823,
    0.00955699197947979,
    -0.005223829299211502,
    0.010673859156668186,
    -0.029038552194833755,
    0.026295864954590797,
    -0.029999906197190285,
    -0.017686089500784874,
    0.007171278353780508,
    -0.03557010367512703,
    -0.013607403263449669,
    -0.0259707011282444,
    0.008722875267267227,
    0.016102682799100876,
    -0.004188252612948418,
    0.0013333488022908568,
    -0.03862381726503372,
    -0.03254466876387596,
    -0.040914103388786316,
    0.029095102101564407,
    0.017403338104486465,
    -0.04130995646119118,
    0.01743161305785179,
    0.0006008463678881526,
    -0.013176207430660725,
    0.008524949662387371,
    -0.004124633502215147,
    0.03658800944685936,
    -0.02549002319574356,
    -0.00031809514621272683,
    -0.01617337018251419,
    -0.008065478876233101,
    -0.01240571029484272,
    0.02287457510828972,
    -0.028982002288103104,
    -0.01182607002556324,
    -0.008835976012051105,
    0.027836859226226807,
    -0.002371575916185975,
    -0.0017486396245658398,
    -0.009641816839575768,
    -0.0017601264407858253,
    0.027836859226226807,
    -0.0032180624548345804,
    -0.009641816839575768,
    0.014151698909699917,
    -0.01679542288184166,
    0.04000930115580559,
    -0.007634283509105444,
    -0.0005018834490329027,
    -0.007952378131449223,
    0.014151698909699917,
    0.020485326647758484,
    -0.0017645444022491574,
    -0.002919406397268176,
    -0.02509417198598385,
    0.001647909521125257,
    -0.011401943862438202,
    0.022902850061655045,
    -0.02539106085896492,
    0.020739803090691566,
    0.000841626722831279,
    0.013572059571743011,
    -0.03002818115055561,
    -0.022818025201559067,
    0.01394670456647873,
    0.01597544550895691,
    0.02481142058968544,
    -0.013126726262271404,
    0.016484396532177925,
    0.009952843189239502,
    0.005301585886627436,
    0.0031190996523946524,
    0.0006061479798518121,
    0.012921731919050217,
    0.017601264640688896,
    -0.015819931402802467,
    0.02331283874809742,
    0.007224293891340494,
    0.003795935306698084,
    -0.0031332371290773153,
    -0.03803003951907158,
    0.02245044894516468,
    0.018746407702565193,
    0.01579165644943714,
    -0.005407617427408695,
    0.02447211928665638,
    -0.0017892852192744613,
    0.047954607754945755,
    -0.014858577400445938,
    0.029179926961660385,
    -0.012561223469674587,
    0.01228554081171751,
    0.01683783531188965,
    0.021545644849538803,
    -0.025461748242378235,
    0.0019368459470570087,
    -0.006344230845570564,
    -0.011458493769168854,
    0.011324186809360981,
    -0.003686369163915515,
    0.018520206212997437,
    0.01603199541568756,
    0.02171529456973076,
    -0.02254941128194332,
    0.009500441141426563,
    0.021489093080163002,
    0.006248802412301302,
    0.001126586925238371,
    0.014759614132344723,
    -0.0063689714297652245,
    0.00471841124817729,
    0.017205413430929184,
    -0.024104543030261993,
    0.025815187022089958,
    0.039839647710323334,
    0.018845370039343834,
    -0.028416499495506287,
    -0.024500394240021706,
    -0.04427884519100189,
    -0.013515508733689785,
    -0.0026949727907776833,
    -0.015918893739581108,
    -0.059547409415245056,
    -0.03653145954012871,
    -0.01549476757645607,
    0.02008947543799877,
    0.007408082485198975,
    0.012165372259914875,
    0.021022554486989975,
    -0.0001180707331513986,
    -0.00043539272155612707,
    -0.020160162821412086,
    -0.013218619860708714,
    0.033336371183395386,
    0.005605543032288551,
    -0.0021330046001821756,
    -0.014229455962777138,
    -0.03523080423474312,
    -0.01549476757645607,
    -0.007401013746857643,
    -0.0064926752820611,
    0.00615337397903204,
    0.021064966917037964,
    0.019820861518383026,
    0.006036738865077496,
    -0.008673394098877907,
    0.014999953098595142,
    0.0197925865650177,
    -0.01579165644943714,
    0.007379807066172361,
    0.02017430029809475,
    -0.018520206212997437,
    0.006231130566447973,
    -0.02153150737285614,
    0.00042854485218413174,
    0.05165864899754524,
    0.006252336781471968,
    0.002820443594828248,
    -0.01382653508335352,
    -0.013437752611935139,
    -0.02124875597655773,
    0.01693679951131344,
    0.016540946438908577,
    -0.005082453601062298,
    0.003831279231235385,
    -0.0038984327111393213,
    0.010334557853639126,
    0.024118680506944656,
    0.007549458183348179,
    0.03268604353070259,
    0.011882620863616467,
    0.0010691530769690871,
    -0.023228013888001442,
    -0.0016081476351246238,
    0.01549476757645607,
    0.0312722884118557,
    0.039613448083400726,
    0.02495279721915722,
    -0.012271403335034847,
    -0.008489605970680714,
    -0.017558852210640907,
    -0.010822303593158722,
    -0.026338277384638786,
    -0.0016408407827839255,
    0.008532018400728703,
    0.0009587034001015127,
    0.033336371183395386,
    0.004859786946326494,
    -0.0004859787004534155,
    -0.008150304667651653,
    -0.0034866761416196823,
    -0.03678593412041664,
    0.023807654157280922,
    0.021220481023192406,
    0.024302469566464424,
    0.02707342989742756,
    -0.0008990605711005628,
    -0.008411848917603493,
    0.013381201773881912,
    0.025560712441802025,
    -0.002152443863451481,
    -0.000841626722831279,
    0.01901501975953579,
    -0.011769520118832588,
    -0.027002742514014244,
    -0.014307212084531784,
    -0.007521182764321566,
    0.028303397819399834,
    0.03585285693407059,
    -0.020287401974201202,
    0.03016955778002739,
    0.01915639638900757,
    -0.0004926056717522442,
    0.015551318414509296,
    0.003647490870207548,
    0.02495279721915722,
    0.006107426714152098,
    0.0030448774341493845,
    -0.003232200164347887,
    0.022535273805260658,
    -0.026705853641033173,
    -0.00011917523079318926,
    0.018887782469391823,
    -0.012363297864794731,
    -0.010730409063398838,
    -0.005093056708574295,
    0.01399618573486805,
    -0.028699250891804695,
    -0.01863330602645874,
    0.00784634705632925,
    0.003672231687232852,
    -0.006676463410258293,
    -0.01955224759876728,
    -0.017926428467035294,
    -0.028939589858055115,
    0.02683309279382229,
    -0.017078174278140068,
    0.017827466130256653,
    -0.012490536086261272,
    -0.0009374970686621964,
    0.0010267404140904546,
    -0.017177138477563858,
    0.0036545596085488796,
    -0.03616388142108917,
    0.019043296575546265,
    0.027483420446515083,
    -0.05035799369215965,
    -0.014731339178979397,
    -0.02452866919338703,
    0.026338277384638786,
    0.006156908348202705,
    0.002804538933560252,
    -0.028515461832284927,
    0.005785797256976366,
    -0.01436376292258501,
    0.00013894571748096496,
    -0.02003292553126812,
    -0.005453564692288637,
    -0.027045154944062233,
    0.01815262995660305,
    0.015339254401624203,
    0.01786987856030464,
    -0.017049899324774742,
    -0.010150769725441933,
    0.03254466876387596,
    0.004460400901734829,
    0.02756824530661106,
    0.003370041260495782,
    -0.008680462837219238,
    0.004167046397924423,
    0.018746407702565193,
    -0.003343533258885145,
    -0.008828907273709774,
    0.015862343832850456,
    -0.008715806528925896,
    -0.014448587782680988,
    -0.030819885432720184,
    -0.01173417642712593,
    0.0022584754042327404,
    0.007549458183348179,
    0.004760824143886566,
    -0.0006918569561094046,
    0.005093056708574295,
    -0.01635715924203396,
    -0.00897735171020031,
    0.03155503794550896,
    0.00040601310320198536,
    -0.011281774379312992,
    0.020782215520739555,
    0.013868948444724083,
    -0.027002742514014244,
    -0.0329122431576252,
    0.03910449519753456,
    0.014589963480830193,
    -0.014038599096238613,
    -0.013911360874772072,
    -0.019608797505497932,
    0.00036735570756718516,
    0.020400501787662506,
    -0.017205413430929184,
    -0.001519787940196693,
    0.012214853428304195,
    -0.027667207643389702,
    -0.022902850061655045,
    0.012561223469674587,
    0.021559782326221466,
    -0.003757057012990117,
    0.005570199340581894,
    -0.02047118917107582,
    -0.00922475941479206,
    -0.017304375767707825,
    -0.022818025201559067,
    0.0020693857222795486,
    -0.009330790489912033,
    0.014102217741310596,
    -0.019128121435642242,
    -0.011550388298928738,
    -0.0213759932667017,
    -0.01611682027578354,
    -0.016738872975111008,
    -0.02635241486132145,
    -0.04082927852869034,
    -0.012964144349098206,
    0.01833641715347767,
    0.016866112127900124,
    -0.006626982241868973,
    0.0018555549904704094,
    0.011387806385755539,
    -0.016767147928476334,
    -0.035796307027339935,
    -0.034637026488780975,
    -0.016724735498428345,
    0.004078686702996492,
    0.022139422595500946,
    0.01603199541568756,
    0.012009859085083008,
    -0.010596102103590965,
    0.0035803376231342554,
    0.006333627738058567,
    0.0069168019108474255,
    0.00258894101716578,
    -0.01127470564097166,
    0.02708756923675537,
    -0.0088571822270751,
    9.355089423479512e-05,
    -0.01240571029484272,
    0.013586197048425674,
    -0.02065497823059559,
    -0.04532502219080925,
    -0.025334510952234268,
    0.04518364742398262,
    -0.004396781791001558,
    0.017884016036987305,
    -0.003852485679090023,
    -0.0014517508680000901,
    -0.004174115136265755,
    0.0011734176659956574,
    0.006213458254933357,
    0.0057610562071204185,
    -0.02915165200829506,
    -0.0011389573337510228,
    0.03098953515291214,
    -0.006361902691423893,
    0.013692229054868221,
    0.03325154632329941,
    -0.0013572059106081724,
    0.006376040168106556,
    0.002479374874383211,
    -0.0066163791343569756,
    0.021277030929923058,
    -0.0056479559279978275,
    0.005697437562048435,
    -0.027794446796178818,
    -0.0012564758071675897,
    -0.020937729626893997,
    0.003157977946102619,
    0.014618238434195518,
    0.0059660510160028934,
    0.030056456103920937,
    -0.0010223224526271224,
    0.02707342989742756,
    0.0062240613624453545,
    -0.003159745130687952,
    0.036079056560993195,
    -0.020386364310979843,
    -0.026635166257619858,
    -0.0035096497740596533,
    -0.02505175955593586,
    -0.02592828869819641,
    -0.004785564728081226,
    -0.017007486894726753,
    0.015424080193042755,
    0.019580522552132607,
    -0.03268604353070259,
    -0.0054040830582380295,
    -0.01945328526198864,
    -0.03045230731368065,
    0.043374039232730865,
    0.018548481166362762,
    0.03868037089705467,
    0.04212993383407593,
    -0.008906664326786995,
    -0.009083383716642857,
    -0.0251507218927145,
    -0.022506998851895332,
    -0.010101287625730038,
    0.03480667620897293,
    -0.012617774307727814,
    -0.014703064225614071,
    -0.001320978393778205,
    -0.003479607403278351,
    0.0061781145632267,
    -0.0592646598815918,
    -0.017799191176891327,
    0.03316672146320343,
    0.0226342361420393,
    0.023807654157280922,
    -0.025504160672426224,
    0.0017221317393705249,
    -0.0339018739759922,
    0.023383527994155884,
    -0.024995209649205208,
    -0.016385434195399284,
    -0.009938705712556839,
    -0.006305352784693241,
    -0.02669171616435051,
    0.04662567749619484,
    0.01883123256266117,
    0.029717154800891876,
    0.03036748245358467,
    0.03031093254685402,
    -0.00044113610056228936,
    -0.01989154890179634,
    -0.0035449936985969543,
    0.022987674921751022,
    0.03118746168911457,
    0.00892787054181099,
    -0.001683253445662558,
    0.0016885549994185567,
    0.024486256763339043,
    0.004845649469643831,
    -0.02737031877040863,
    -0.0067577543668448925,
    -0.003283448750153184,
    0.03698386251926422,
    -0.002818676410242915,
    0.02433074451982975,
    -0.016060270369052887,
    0.00026264938060194254,
    -0.00400799885392189,
    -0.009988187812268734,
    -0.021347718313336372,
    0.002090591937303543,
    0.010270938277244568,
    0.0035944750998169184,
    0.03364739567041397,
    0.006725945044308901,
    -0.008772357366979122,
    -0.0007921452634036541,
    0.0015957773430272937,
    0.013508439995348454,
    -0.004690136294811964,
    -0.00093661347636953,
    0.02433074451982975,
    -0.02307250164449215,
    -0.05683299899101257,
    -0.004506347700953484,
    -0.016427846625447273,
    0.016526808962225914,
    0.006542156916111708,
    -0.00683197658509016,
    -0.0066128442995250225,
    0.027539970353245735,
    -0.013628609478473663,
    0.0051142629235982895,
    -0.02756824530661106,
    0.016441984102129936,
    -0.018279867246747017,
    -0.02065497823059559,
    -0.009747848846018314,
    -8.399699436267838e-05,
    0.02321387641131878,
    0.029321303591132164,
    -0.015424080193042755,
    0.013487233780324459,
    0.020343951880931854,
    0.005849416367709637,
    0.015212016180157661,
    -0.022365622222423553,
    -0.014505138620734215,
    0.01073747780174017,
    0.0043084220960736275,
    -0.007040505763143301,
    -0.028713388368487358,
    0.004675998352468014,
    -0.008602706715464592,
    0.0009737245854921639,
    -0.01891605742275715,
    -0.021899083629250526,
    0.012822768650949001,
    0.007415151223540306,
    -0.009620610624551773,
    0.0017733804415911436,
    -0.012843974865972996,
    -0.011811932548880577,
    0.008666325360536575,
    0.008192717097699642,
    -0.017007486894726753,
    0.009295446798205376,
    -0.002907036105170846,
    -0.002763893222436309,
    -0.002079988829791546,
    0.036276984959840775,
    0.011232293210923672,
    0.0011778356274589896,
    0.012342091649770737,
    0.014469794929027557,
    0.026041388511657715,
    0.009889224544167519,
    -0.019241221249103546,
    -0.01675301045179367,
    -0.0004709575150627643,
    -0.011387806385755539,
    0.003951448481529951,
    -0.04682360589504242,
    -0.03268604353070259,
    0.028826488181948662,
    0.015466492623090744,
    -0.020004650577902794,
    -0.04611672833561897,
    -0.005591405555605888,
    -0.01833641715347767,
    -0.01917053386569023,
    -0.017162999138236046,
    0.042836811393499374,
    0.03220536559820175,
    0.03836934268474579,
    0.006524484604597092,
    0.046851880848407745,
    0.001966888317838311,
    0.021743569523096085,
    -0.02509417198598385,
    0.010942473076283932,
    0.0109354043379426,
    0.010193182155489922,
    -0.007874622009694576,
    -0.008991489186882973,
    -0.025574849918484688,
    -0.007811002898961306,
    0.027158256620168686,
    -0.01310552004724741,
    0.0185343436896801,
    0.023765241727232933,
    -0.0006631400319747627,
    -0.008588569238781929,
    -0.029095102101564407,
    -0.02674826607108116,
    -0.0060968236066401005,
    0.00931665301322937,
    0.00668706651777029,
    -0.01655508577823639,
    -0.015551318414509296,
    -0.016908524557948112,
    0.016229920089244843,
    -0.02114979177713394,
    0.015254429541528225,
    0.03508942946791649,
    -0.024019718170166016,
    -0.011168673634529114,
    -0.008546155877411366,
    -0.04340231418609619,
    -0.010779891163110733,
    -0.022068733349442482,
    0.022408034652471542,
    -0.014674789272248745,
    0.00755652692168951,
    0.02543347328901291,
    0.03166813775897026,
    -0.013451890088617802,
    -0.020485326647758484,
    0.018901919946074486,
    -0.049509741365909576,
    -0.001956285210326314,
    0.014356694184243679,
    -0.017657814547419548,
    0.006991024129092693,
    -0.007613076828420162,
    0.050301443785429,
    -0.00805841013789177,
    0.02631000243127346,
    -0.023001812398433685,
    -0.006867320742458105,
    -0.0020658511202782393,
    -0.008291680365800858,
    0.03441082686185837,
    -0.0197925865650177,
    0.028854763135313988,
    0.00396912032738328,
    0.00486332131549716,
    0.005902431905269623,
    -0.016880249604582787,
    -0.02457108162343502,
    -0.019481560215353966,
    0.006174580194056034,
    -0.011868483386933804,
    0.01086471602320671,
    -0.04020722582936287,
    0.032940518110990524,
    0.002504115691408515,
    -0.03582458198070526,
    0.006114495452493429,
    0.17055554687976837,
    0.004912802949547768,
    0.01893019489943981,
    0.0034106867387890816,
    -0.0012361530680209398,
    0.03918932005763054,
    -0.010539552196860313,
    0.011034366674721241,
    -0.017686089500784874,
    0.0011009626323357224,
    0.0202308502048254,
    -0.018689855933189392,
    -0.006733013782650232,
    0.004806770943105221,
    0.028939589858055115,
    0.006676463410258293,
    -0.01945328526198864,
    -0.051771752536296844,
    -0.023807654157280922,
    0.002504115691408515,
    0.012723805382847786,
    -0.008362367749214172,
    -0.026875505223870277,
    -0.023807654157280922,
    0.02215356007218361,
    -0.01963707245886326,
    0.010327489115297794,
    -0.0031297027599066496,
    -0.011359530501067638,
    0.021206343546509743,
    -0.006771892309188843,
    -0.0005394363543018699,
    0.0064537967555224895,
    0.015537180006504059,
    -0.0321488156914711,
    -0.0038489513099193573,
    -0.004022136330604553,
    0.0005968702025711536,
    0.03438255190849304,
    0.005587871186435223,
    -0.0013121424708515406,
    -0.02409040555357933,
    -0.00749290781095624,
    -0.043091289699077606,
    0.004195321351289749,
    -0.00977612379938364,
    -0.004343765787780285,
    -0.0014013857580721378,
    -0.026196902617812157,
    0.03070678375661373,
    -0.017558852210640907,
    -0.02906682714819908,
    0.026818955317139626,
    -0.001246756175532937,
    0.0073515321128070354,
    -0.0033647397067397833,
    0.025659674778580666,
    -0.006206389516592026,
    -0.0018396502127870917,
    -0.0035096497740596533,
    -0.01873227022588253,
    0.016046132892370224,
    0.006093289237469435,
    0.007570664398372173,
    -0.05086694657802582,
    0.016088545322418213,
    -0.013013625517487526,
    -0.026578616350889206,
    -0.008235129527747631,
    0.026776542887091637,
    -0.0041776495054364204,
    -0.023736966773867607,
    -0.020881177857518196,
    -0.014420312829315662,
    -0.04082927852869034,
    -0.03848244249820709,
    0.048350460827350616,
    0.027214806526899338,
    0.0012025763280689716,
    0.024966934695839882,
    -0.026917917653918266,
    -0.0009017113479785621,
    -0.0027091102674603462,
    0.01230674795806408,
    -0.002325628884136677,
    -0.006301817949861288,
    0.030395757406949997,
    -0.014031530357897282,
    0.022097008302807808,
    -0.01873227022588253,
    -0.002763893222436309,
    -0.018322279676795006,
    0.003831279231235385,
    0.0009560526232235134,
    0.014604100957512856,
    0.0020888247527182102,
    0.0024404965806752443,
    0.03141366317868233,
    -0.033081892877817154,
    0.006669394671916962,
    -0.00955699197947979,
    0.038114868104457855,
    0.007881690748035908,
    0.025207271799445152,
    -0.023963166400790215,
    0.003831279231235385,
    0.02205459587275982,
    0.013720504008233547,
    0.002541226800531149,
    -0.0019403803162276745,
    0.01511305384337902,
    0.006026135757565498,
    -0.013593265786767006,
    -0.02370869182050228,
    -0.006429056171327829,
    -0.014717201702296734,
    0.00017163883603643626,
    0.011267636902630329,
    0.02235148474574089,
    0.017177138477563858,
    -0.009860949590802193,
    -0.010871784761548042,
    0.00162935396656394,
    -0.01621578261256218,
    -0.0210508294403553,
    -0.029123377054929733,
    -0.03935897350311279,
    0.015720969066023827,
    -0.025914151221513748,
    0.0034601681400090456,
    -0.0048562525771558285,
    -0.02698860503733158,
    0.037238337099552155,
    0.014844439923763275,
    -0.007613076828420162,
    -0.024867970496416092,
    -0.03848244249820709,
    -0.013091382570564747,
    0.011288843117654324,
    0.007514114025980234,
    -0.004569966811686754,
    -0.005958982277661562,
    0.01139487512409687,
    0.01115453615784645,
    0.014674789272248745,
    0.008510812185704708,
    0.008023066446185112,
    -0.019085709005594254,
    0.007606008090078831,
    0.01549476757645607,
    -0.0034955120645463467,
    0.0009224758832715452,
    0.013635678216814995,
    -0.02761065773665905,
    -0.0007020183256827295,
    -0.0478980578482151,
    -0.01081523485481739,
    -0.014491001144051552,
    0.016343021765351295,
    0.014858577400445938,
    -0.0380583181977272,
    -0.0071465373039245605,
    0.0007616611546836793,
    -0.002262009773403406,
    -0.005944844800978899,
    -0.027596520259976387,
    -0.17745468020439148,
    0.017898153513669968,
    0.0067436168901622295,
    -0.014632376842200756,
    0.010030600242316723,
    0.022266659885644913,
    0.03438255190849304,
    -0.011663488112390041,
    0.008072547614574432,
    0.0014870947925373912,
    -0.011515043675899506,
    -0.020725665614008904,
    0.008404780179262161,
    -0.026097938418388367,
    -0.023666277527809143,
    0.0048103053122758865,
    0.001660279929637909,
    0.019439147785305977,
    0.024754870682954788,
    0.01556545589119196,
    0.03616388142108917,
    -0.024316607043147087,
    0.020739803090691566,
    0.019043296575546265,
    0.007690833415836096,
    -0.018944332376122475,
    -0.026225177571177483,
    -0.005280379205942154,
    -0.0010921265929937363,
    -0.0023415337782353163,
    0.00919648353010416,
    0.007881690748035908,
    0.027016879990696907,
    -0.0238924790173769,
    0.005269776098430157,
    -0.007485839072614908,
    0.0033399988897144794,
    -0.018223317340016365,
    -0.027144119143486023,
    0.018562618643045425,
    0.02215356007218361,
    -0.0010612007463350892,
    0.01390429213643074,
    -0.04159270599484444,
    -0.007796865422278643,
    0.019227083772420883,
    0.025461748242378235,
    -0.04238440841436386,
    0.03624871000647545,
    -0.013522577472031116,
    0.015310979448258877,
    -0.02259182371199131,
    0.02099427953362465,
    0.02163046970963478,
    0.025221411138772964,
    0.009253034368157387,
    0.009875087067484856,
    -0.0017433380708098412,
    0.002627819310873747,
    0.029038552194833755,
    -0.004866855684667826,
    -0.04365679249167442,
    0.006054410710930824,
    0.022803887724876404,
    -0.03022610768675804,
    0.020980142056941986,
    -0.0026154490187764168,
    0.025447610765695572,
    -0.011811932548880577,
    0.017148861661553383,
    0.0012732641771435738,
    -0.005305120255798101,
    0.02442970685660839,
    0.004559363704174757,
    0.018845370039343834,
    0.004280146677047014,
    -0.011119192466139793,
    0.015014090575277805,
    0.016229920089244843,
    -0.007959446869790554,
    -0.032799143344163895,
    0.03311017155647278,
    0.0034089195542037487,
    -0.004414453636854887,
    0.025716224685311317,
    0.002613681834191084,
    0.018322279676795006,
    -0.018689855933189392,
    0.025263823568820953,
    0.001124819740653038,
    0.02505175955593586,
    0.01185434591025114,
    -5.8262216043658555e-05,
    -0.02983025461435318,
    0.016767147928476334,
    0.02167288213968277,
    -0.019241221249103546,
    -0.0029830255080014467,
    0.006973352283239365,
    -0.032120540738105774,
    0.024457981809973717,
    0.00374645390547812,
    -0.025645537301898003,
    0.006273542996495962,
    0.016060270369052887,
    0.02225252240896225,
    -0.03169641271233559,
    -0.011472631245851517,
    0.014081011526286602,
    0.0005650606472045183,
    -0.0022195971105247736,
    0.005655024666339159,
    0.02800651080906391,
    0.025956563651561737,
    -0.02195563353598118,
    0.0206125658005476,
    0.028162023052573204,
    -0.0428650863468647,
    0.004039808176457882,
    -0.028897175565361977,
    0.016597498208284378,
    -0.0142435934394598,
    -0.009839743375778198,
    0.018067803233861923,
    0.00294414721429348,
    -0.023821791633963585,
    -0.11049918085336685,
    -0.04179063439369202,
    0.014095149002969265,
    -0.001356322318315506,
    -0.018506068736314774,
    -0.03336464613676071,
    -0.00019516462634783238,
    -0.012921731919050217,
    -0.007902896963059902,
    0.02467004582285881,
    -0.001118634594604373,
    0.024019718170166016,
    -0.03590940684080124,
    0.016328884288668633,
    -0.039896197617053986,
    0.014342556707561016,
    -0.007153606042265892,
    0.008192717097699642,
    -0.002857554703950882,
    0.022860437631607056,
    -0.006672929041087627,
    0.01597544550895691,
    0.0024917451664805412,
    0.004909268114715815,
    0.012426916509866714,
    0.004205924458801746,
    -0.023256288841366768,
    0.004333162680268288,
    -0.0011257033329457045,
    0.002057015197351575,
    -0.004205924458801746,
    -0.035174254328012466,
    0.0015789889730513096,
    -0.02606966346502304,
    0.01709231175482273,
    0.0019068036926910281,
    -0.015551318414509296,
    -0.008284611627459526,
    0.03144193813204765,
    -0.0017671951791271567,
    -0.017700226977467537,
    -0.016201645135879517,
    -0.00033444169093854725,
    -0.007811002898961306,
    0.017247825860977173,
    -0.006570431869477034,
    -0.010878853499889374,
    0.027695484459400177,
    0.03209226578474045,
    -0.014717201702296734,
    -0.02195563353598118,
    -0.002345068147405982,
    -0.01556545589119196,
    -0.027681345120072365,
    0.03243156522512436,
    -0.004545226227492094,
    -0.007924103178083897,
    -0.004640654660761356,
    0.0024157557636499405,
    -0.007952378131449223,
    -0.01747402548789978,
    0.029858531430363655,
    -0.019269496202468872,
    0.02321387641131878,
    0.013331720605492592,
    0.011515043675899506,
    -0.026875505223870277,
    -0.01231381669640541,
    0.00394437974318862,
    -0.01741747558116913,
    -0.01577751897275448,
    -0.0022796818520873785,
    -0.015622005797922611,
    0.017884016036987305,
    0.0028893642593175173,
    0.01274501159787178,
    0.024599358439445496,
    0.003332930151373148,
    -0.006708273198455572,
    0.003135004313662648,
    -0.026324139907956123,
    0.0009807933820411563,
    -0.0012803329154849052,
    0.003962051589041948,
    -0.0007766822818666697,
    0.009019764140248299,
    0.039415523409843445,
    -0.009981119073927402,
    0.027158256620168686,
    -0.021842533722519875,
    0.012271403335034847,
    0.011614006944000721,
    0.051149699836969376,
    -0.013939635828137398,
    -0.010412313975393772,
    -0.012540017254650593,
    -0.01332465186715126,
    -0.01753057725727558,
    -0.022535273805260658,
    -0.004043342545628548,
    -0.05813365429639816,
    -0.034637026488780975,
    -0.06158322095870972,
    0.01110505498945713,
    -0.01182607002556324,
    -0.007358600851148367,
    0.002447565319016576,
    -0.024401431903243065,
    -0.0012617773609235883,
    -0.009175277315080166,
    0.00830581784248352,
    -0.021517369896173477,
    -0.035796307027339935,
    -0.020386364310979843,
    -0.021602194756269455,
    -0.021927358582615852,
    0.006733013782650232,
    -0.017346788197755814,
    0.0006750685861334205,
    -0.010553689673542976,
    0.02688964270055294,
    -0.0059660510160028934,
    -0.005852950736880302,
    0.0019774914253503084,
    0.024387294426560402,
    0.00784634705632925,
    -0.012469329871237278,
    0.002611914649605751,
    -0.028359949588775635,
    0.002039343351498246,
    -0.004492210224270821,
    -0.015212016180157661,
    0.022775612771511078,
    -0.010751615278422832,
    -0.0060968236066401005,
    -0.0008778542396612465,
    0.025744499638676643,
    0.018788820132613182,
    0.01747402548789978,
    0.012469329871237278,
    0.005587871186435223,
    -0.0052450355142354965,
    -0.030254382640123367,
    -0.026762403547763824,
    0.005860019475221634,
    0.0018414173973724246,
    0.01723368838429451,
    -0.011670556850731373,
    -0.01815262995660305,
    0.011677625589072704,
    0.04345886409282684,
    -0.002834581071510911,
    0.02997163124382496,
    0.02346835285425186,
    -0.03568320721387863,
    -0.010122493840754032,
    0.0008579732966609299,
    -0.028953727334737778,
    0.01795470342040062,
    0.021446680650115013,
    0.00187322695273906,
    0.019396735355257988,
    0.033081892877817154,
    -0.010087150149047375,
    0.013607403263449669,
    0.00038966655847616494,
    -0.0034990464337170124,
    -0.014469794929027557,
    -0.03616388142108917,
    0.009839743375778198,
    -0.027539970353245735,
    0.004485141485929489,
    -0.01815262995660305,
    -0.0095145795494318,
    0.021800119429826736,
    0.030480584129691124,
    0.03376049920916557,
    0.011804863810539246,
    -0.023920753970742226,
    -0.026083800941705704,
    -0.013211551122367382,
    0.018619168549776077,
    0.011076780036091805,
    -0.0008367669652216136,
    -0.029745429754257202,
    0.019820861518383026,
    0.045438122004270554,
    -0.002237269189208746,
    -0.01131711807101965,
    -0.02437315694987774,
    -0.0062275961972773075,
    0.03002818115055561,
    0.021262893453240395,
    -0.005545458756387234,
    -0.032516393810510635,
    -0.00965595431625843,
    0.011804863810539246,
    -0.005817606579512358,
    0.030904710292816162,
    0.0016346556367352605,
    0.015268567018210888,
    -0.0070793842896819115,
    0.0005977537948638201,
    -0.019269496202468872,
    -0.006291214842349291,
    -0.010426451452076435,
    -0.025504160672426224,
    0.024698320776224136,
    -0.018166767433285713,
    -0.02172943204641342,
    0.017403338104486465,
    0.0296323299407959,
    0.018364692106842995,
    -0.02920820191502571,
    0.008680462837219238,
    0.022323209792375565,
    -0.038454167544841766,
    0.006301817949861288,
    0.006566897500306368,
    0.00147207360714674,
    -0.016682323068380356,
    -0.003887829603627324,
    -0.008694600313901901,
    0.009429753758013248,
    0.04238440841436386,
    -0.007429288700222969,
    -0.009910430759191513,
    0.009839743375778198,
    0.03924586996436119,
    -0.018887782469391823,
    0.0012635445455089211,
    -0.0059519135393202305,
    -0.04812426120042801,
    -0.004230665508657694,
    -0.03678593412041664,
    -0.014335487969219685,
    -0.0213759932667017,
    -0.008051341399550438,
    0.038793470710515976,
    -0.00469367066398263,
    0.0006361902924254537,
    0.09986773878335953,
    0.0070793842896819115,
    0.014618238434195518,
    0.0071783470921218395,
    0.004760824143886566,
    0.018802957609295845,
    0.030904710292816162,
    -0.007379807066172361,
    -0.008256335742771626,
    -0.010822303593158722,
    -0.0016010788967832923,
    -0.013409477658569813,
    -0.009401478804647923,
    -0.02770962193608284,
    -0.010249732062220573,
    0.005852950736880302,
    -0.01428600586950779,
    0.033279821276664734,
    -0.014392037875950336,
    0.003962051589041948,
    0.05440133810043335,
    0.015918893739581108,
    -0.010497139766812325,
    0.00793824065476656,
    -0.02467004582285881,
    0.04040515050292015,
    0.006167511455714703,
    0.01344482135027647,
    0.006581034976989031,
    -0.04806771129369736,
    -0.0038736918941140175,
    -0.015014090575277805,
    -0.027822721749544144,
    -0.017459888011217117,
    -0.001075338339433074,
    0.0024263591039925814,
    0.002732083899900317,
    -0.018901919946074486,
    0.03325154632329941,
    0.003283448750153184,
    -0.018859507516026497,
    0.007966515608131886,
    -0.03494805097579956,
    -0.010391107760369778,
    0.008072547614574432,
    -0.004481607116758823,
    0.005255638621747494,
    0.005192019511014223,
    -0.02683309279382229
  ]
}
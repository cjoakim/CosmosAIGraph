{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5"
  ],
  "description": "\ngenerate sql queries using a jinja template, without worrying about sql injection\n\njinjasql automatically binds parameters that are inserted into the template.\nafter jinjasql evaluates the template, you get 1) query with placeholders\nfor parameters, and 2) list of values that need to be bound to the query. \n\njinjasql doesn't actually execute the query - it only prepares the \nquery and the bind parameters. you can execute the query using any \ndatabase engine / driver you are working with.\n\n\n\n",
  "docs_url": null,
  "keywords": "jinja2,sql,python,template",
  "license": "mit",
  "name": "jinjasql",
  "package_url": "https://pypi.org/project/jinjasql/",
  "project_url": "https://pypi.org/project/jinjasql/",
  "project_urls": {
    "Download": "http://cloud.github.com/downloads/hashedin/jinjasql/jinjasql-0.1.8.tar.gz",
    "Homepage": "https://github.com/hashedin/jinjasql"
  },
  "release_url": "https://pypi.org/project/jinjasql/0.1.8/",
  "requires_dist": [
    "Jinja2 (>=2.5)"
  ],
  "requires_python": "",
  "summary": "generate sql queries and corresponding bind parameters using a jinja2 template",
  "version": "0.1.8",
  "releases": [],
  "developers": [
    "sripathi@hashedin.com",
    "sripathi_krishnan"
  ],
  "kwds": "jinjasql jinja jinja2 queries parameters",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_jinjasql",
  "homepage": "https://github.com/hashedin/jinjasql",
  "release_count": 9,
  "dependency_ids": [
    "pypi_jinja2"
  ]
}
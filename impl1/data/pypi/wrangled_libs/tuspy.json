{
  "classifiers": [
    "development status :: 3 - alpha",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "topic :: communications :: file sharing",
    "topic :: internet :: file transfer protocol (ftp)",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# tus-py-client [![build status](https://github.com/tus/tus-py-client/actions/workflows/ci.yml/badge.svg)](https://github.com/tus/tus-py-client/actions/workflows/ci.yml)\n\n> **tus** is a protocol based on http for _resumable file uploads_. resumable\n> means that an upload can be interrupted at any moment and can be resumed without\n> re-uploading the previous data again. an interruption may happen willingly, if\n> the user wants to pause, or by accident in case of a network issue or server\n> outage.\n\n**tus-py-client** is a python client for uploading files using the _tus_ protocol to any remote server supporting it.\n\n## documentation\n\nsee documentation here: http://tus-py-client.readthedocs.io/en/latest/\n\n## get started\n\n```bash\npip install tuspy\n```\n\nnow you are ready to use the api.\n\n```python\nfrom tusclient import client\n\n# set authorization headers if it is required\n# by the tus server.\nmy_client = client.tusclient('http://tusd.tusdemo.net/files/',\n                              headers={'authorization': 'basic xxyyzzaabbcc='})\n\n# set more headers.\nmy_client.set_headers({'header_name': 'header_value'})\n\nuploader = my_client.uploader('path/to/file.ext', chunk_size=200)\n\n# a file stream may also be passed in place of a file path.\nfs = open('path/to/file.ext', mode=)\nuploader = my_client.uploader(file_stream=fs, chunk_size=200)\n\n# upload a chunk i.e 200 bytes.\nuploader.upload_chunk()\n\n# uploads the entire file.\n# this uploads chunk by chunk.\nuploader.upload()\n\n# you could increase the chunk size to reduce the\n# number of upload_chunk cycles.\nuploader.chunk_size = 800\nuploader.upload()\n\n# continue uploading chunks till total chunks uploaded reaches 1000 bytes.\nuploader.upload(stop_at=1000)\n```\n\nif the upload url is known and the client headers are not required, uploaders can also be used standalone.\n\n```python\nfrom tusclient.uploader import uploader\n\nmy_uploader = uploader('path/to/file.ext',\n                       url='http://tusd.tusdemo.net/files/abcdef123456',\n                       chunk_size=200)\n```\n\n## development\n\nif you want to work on tus-py-client internally, follow these few steps:\n\n1. setup virtual environment and install dependencies\n\n   ```bash\n   python -m venv env/\n   source env/bin/activate\n   pip install -e .[test]\n   ```\n\n2. running tests\n\n   ```bash\n   pytest\n   ```\n\n3. releasing a new version (see https://realpython.com/pypi-publish-python-package/)\n\n   ```bash\n   # update version in tusclient/__init__.py\n   vim tusclient/__init__.py\n\n   # update changelogs\n   vim changelog.md\n\n   pytest\n\n   # commit and tag\n   git commit -m 'v1.2.3'\n   git tag v1.2.3\n\n   # build and release\n   pip install build twine\n   python -m build\n   twine check dist/*\n   twine upload dist/*\n\n   # then: make release on github\n   ```\n\n## license\n\nmit\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "tuspy",
  "package_url": "https://pypi.org/project/tuspy/",
  "project_url": "https://pypi.org/project/tuspy/",
  "project_urls": {
    "Homepage": "http://github.com/tus/tus-py-client/"
  },
  "release_url": "https://pypi.org/project/tuspy/1.0.3/",
  "requires_dist": [
    "requests >=2.18.4",
    "tinydb >=3.5.0",
    "aiohttp >=3.6.2",
    "tox >=2.3.1 ; extra == 'dev'",
    "sphinx-autobuild ==2021.3.14 ; extra == 'dev'",
    "Sphinx ==1.7.1 ; extra == 'dev'",
    "responses >=0.5.1 ; extra == 'test'",
    "aioresponses >=0.6.2 ; extra == 'test'",
    "coverage >=4.2 ; extra == 'test'",
    "pytest >=3.0.3 ; extra == 'test'",
    "pytest-cov <2.6,>=2.3.1 ; extra == 'test'",
    "parametrize >=0.1.1 ; extra == 'test'"
  ],
  "requires_python": ">=3.5.3",
  "summary": "a python client for the tus resumable upload protocol ->  http://tus.io",
  "version": "1.0.3",
  "releases": [],
  "developers": [
    "ifedapo_olarewaju",
    "ifedapoolarewaju@gmail.com"
  ],
  "kwds": "tus pip tuspy uploading upload_chunk",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_tuspy",
  "homepage": "http://github.com/tus/tus-py-client/",
  "release_count": 16,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_aioresponses",
    "pypi_coverage",
    "pypi_parametrize",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_requests",
    "pypi_responses",
    "pypi_sphinx",
    "pypi_sphinx_autobuild",
    "pypi_tinydb",
    "pypi_tox"
  ]
}
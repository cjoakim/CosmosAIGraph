{
  "classifiers": [
    "license :: osi approved :: mit license",
    "natural language :: chinese (simplified)",
    "natural language :: chinese (traditional)",
    "natural language :: english",
    "natural language :: german",
    "natural language :: japanese",
    "natural language :: korean",
    "natural language :: serbian",
    "natural language :: thai",
    "natural language :: vietnamese",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "topic :: text processing :: linguistic"
  ],
  "description": "[![current pypi packages](https://badge.fury.io/py/esupar.svg)](https://pypi.org/project/esupar/)\n\n# esupar\n\ntokenizer, pos-tagger, and dependency-parser with [transformers](https://huggingface.co/transformers/) and [supar](https://pypi.org/project/supar/).\n\n## basic usage\n\n```py\n>>> import esupar\n>>> nlp=esupar.load(\"ja\")\n>>> doc=nlp(\"\u592a\u90ce\u306f\u82b1\u5b50\u304c\u8aad\u3093\u3067\u3044\u308b\u672c\u3092\u6b21\u90ce\u306b\u6e21\u3057\u305f\")\n>>> print(doc)\n1\t\u592a\u90ce\t_\tpropn\t_\t_\t12\tnsubj\t_\tspaceafter=no\n2\t\u306f\t_\tadp\t_\t_\t1\tcase\t_\tspaceafter=no\n3\t\u82b1\u5b50\t_\tpropn\t_\t_\t5\tnsubj\t_\tspaceafter=no\n4\t\u304c\t_\tadp\t_\t_\t3\tcase\t_\tspaceafter=no\n5\t\u8aad\u3093\t_\tverb\t_\t_\t8\tacl\t_\tspaceafter=no\n6\t\u3067\t_\tsconj\t_\t_\t5\tmark\t_\tspaceafter=no\n7\t\u3044\u308b\t_\taux\t_\t_\t5\taux\t_\tspaceafter=no\n8\t\u672c\t_\tnoun\t_\t_\t12\tobj\t_\tspaceafter=no\n9\t\u3092\t_\tadp\t_\t_\t8\tcase\t_\tspaceafter=no\n10\t\u6b21\u90ce\t_\tpropn\t_\t_\t12\tobl\t_\tspaceafter=no\n11\t\u306b\t_\tadp\t_\t_\t10\tcase\t_\tspaceafter=no\n12\t\u6e21\u3057\t_\tverb\t_\t_\t0\troot\t_\tspaceafter=no\n13\t\u305f\t_\taux\t_\t_\t12\taux\t_\t_\n\n>>> import deplacy\n>>> deplacy.render(doc,japanese=true)\n\u592a\u90ce propn \u2550\u2557<\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 nsubj(\u4e3b\u8a9e)\n\u306f   adp   <\u255d         \u2551 case(\u683c\u8868\u793a)\n\u82b1\u5b50 propn \u2550\u2557<\u2550\u2550\u2557     \u2551 nsubj(\u4e3b\u8a9e)\n\u304c   adp   <\u255d   \u2551     \u2551 case(\u683c\u8868\u793a)\n\u8aad\u3093 verb  \u2550\u2557\u2550\u2557\u2550\u255d<\u2557   \u2551 acl(\u9023\u4f53\u4fee\u98fe\u7bc0)\n\u3067   sconj <\u255d \u2551   \u2551   \u2551 mark(\u6a19\u8b58)\n\u3044\u308b aux   <\u2550\u2550\u255d   \u2551   \u2551 aux(\u52d5\u8a5e\u88dc\u52a9\u6210\u5206)\n\u672c   noun  \u2550\u2557\u2550\u2550\u2550\u2550\u2550\u255d<\u2557 \u2551 obj(\u76ee\u7684\u8a9e)\n\u3092   adp   <\u255d       \u2551 \u2551 case(\u683c\u8868\u793a)\n\u6b21\u90ce propn \u2550\u2557<\u2557     \u2551 \u2551 obl(\u659c\u683c\u88dc\u8a9e)\n\u306b   adp   <\u255d \u2551     \u2551 \u2551 case(\u683c\u8868\u793a)\n\u6e21\u3057 verb  \u2550\u2557\u2550\u255d\u2550\u2550\u2550\u2550\u2550\u255d\u2550\u255d root(\u89aa)\n\u305f   aux   <\u255d           aux(\u52d5\u8a5e\u88dc\u52a9\u6210\u5206)\n```\n\n`esupar.load(model)` loads a natural language processor pipeline, working on [universal dependencies](https://universaldependencies.org/format.html). available `model` options are:\n\n* `model=\"ja\"` japanese model [bert-base-japanese-upos](https://huggingface.co/koichiyasuoka/bert-base-japanese-upos) (default)\n* `model=\"ja_large\"` japanese model [bert-large-japanese-upos](https://huggingface.co/koichiyasuoka/bert-large-japanese-upos)\n* `model=\"ja_luw_small\"` japanese long-unit-word model [roberta-small-japanese-char-luw-upos](https://huggingface.co/koichiyasuoka/roberta-small-japanese-char-luw-upos)\n* `model=\"ja_luw_base\"` japanese long-unit-word model [bert-base-japanese-luw-upos](https://huggingface.co/koichiyasuoka/bert-base-japanese-luw-upos)\n* `model=\"ja_luw_large\"` japanese long-unit-word model [bert-large-japanese-luw-upos](https://huggingface.co/koichiyasuoka/bert-large-japanese-luw-upos)\n* `model=\"ko\"` korean model [roberta-base-korean-upos](https://huggingface.co/koichiyasuoka/roberta-base-korean-upos)\n* `model=\"ko_large\"` korean model [roberta-large-korean-upos](https://huggingface.co/koichiyasuoka/roberta-large-korean-upos)\n* `model=\"ko_morph_base\"` korean morpheme model [roberta-base-korean-morph-upos](https://huggingface.co/koichiyasuoka/roberta-base-korean-morph-upos)\n* `model=\"ko_morph_large\"` korean morpheme model [roberta-large-korean-morph-upos](https://huggingface.co/koichiyasuoka/roberta-large-korean-morph-upos)\n* `model=\"zh\"` chinese model [chinese-bert-wwm-ext-upos](https://huggingface.co/koichiyasuoka/chinese-bert-wwm-ext-upos)\n* `model=\"zh_base\"` chinese model [chinese-roberta-base-upos](https://huggingface.co/koichiyasuoka/chinese-roberta-base-upos)\n* `model=\"zh_large\"` chinese model [chinese-roberta-large-upos](https://huggingface.co/koichiyasuoka/chinese-roberta-large-upos)\n* `model=\"lzh\"` classical chinese model [roberta-classical-chinese-base-upos](https://huggingface.co/koichiyasuoka/roberta-classical-chinese-base-upos)\n* `model=\"lzh_large\"` classical chinese model [roberta-classical-chinese-large-upos](https://huggingface.co/koichiyasuoka/roberta-classical-chinese-large-upos)\n* `model=\"th\"` thai model [roberta-base-thai-spm-upos](https://huggingface.co/koichiyasuoka/roberta-base-thai-spm-upos)\n* `model=\"vi\"` vietnamese model [bert-base-vietnamese-upos](https://huggingface.co/koichiyasuoka/bert-base-vietnamese-upos)\n* `model=\"en\"` english model [roberta-base-english-upos](https://huggingface.co/koichiyasuoka/roberta-base-english-upos)\n* `model=\"en_large\"` english model [roberta-large-english-upos](https://huggingface.co/koichiyasuoka/roberta-large-english-upos)\n* `model=\"de\"` german model [bert-base-german-upos](https://huggingface.co/koichiyasuoka/bert-base-german-upos)\n* `model=\"de_large\"` german model [bert-large-german-upos](https://huggingface.co/koichiyasuoka/bert-large-german-upos)\n* `model=\"sr\"` serbian (cyrillic and latin) model [roberta-base-serbian-upos](https://huggingface.co/koichiyasuoka/roberta-base-serbian-upos)\n* `model=\"cop\"` coptic model [roberta-base-coptic-upos](https://huggingface.co/koichiyasuoka/roberta-base-coptic-upos)\n* `model=\"ain\"` ainu model [roberta-base-ainu-upos](https://huggingface.co/koichiyasuoka/roberta-base-ainu-upos)\n\n## installation for linux\n\n```sh\npip3 install esupar --user\n```\n\n## installation for cygwin64\n\nmake sure to get `python37-devel` `python37-pip` `python37-cython` `python37-numpy` `python37-wheel` `gcc-g++` `mingw64-x86_64-gcc-g++` `git` `curl` `make` `cmake`, and then:\n\n```sh\ncurl -l https://raw.githubusercontent.com/koichiyasuoka/cygtorch/master/installer/supar.sh | sh\npip3.7 install esupar\n```\n\n## installation for google colaboratory\n\n```py\n!pip install esupar\n```\n\ntry [notebook](https://colab.research.google.com/github/koichiyasuoka/esupar/blob/master/esupar.ipynb).\n\n## author\n\nkoichi yasuoka (\u5b89\u5ca1\u5b5d\u4e00)\n\n\n\n",
  "docs_url": null,
  "keywords": "nlp japanese korean chinese thai vietnamese english german serbian coptic ainu",
  "license": "mit",
  "name": "esupar",
  "package_url": "https://pypi.org/project/esupar/",
  "project_url": "https://pypi.org/project/esupar/",
  "project_urls": {
    "Homepage": "https://github.com/KoichiYasuoka/esupar",
    "Source": "https://github.com/KoichiYasuoka/esupar",
    "Tracker": "https://github.com/KoichiYasuoka/esupar/issues"
  },
  "release_url": "https://pypi.org/project/esupar/1.6.7/",
  "requires_dist": [
    "deplacy (>=2.0.5)",
    "supar (>=1.1.4)",
    "transformers (>=4.19.0)"
  ],
  "requires_python": ">=3.7",
  "summary": "tokenizer pos-tagger and dependency-parser with bert/roberta/deberta models for japanese and other languages",
  "version": "1.6.7",
  "releases": [],
  "developers": [
    "koichi_yasuoka",
    "yasuoka@kanji.zinbun.kyoto-u.ac.jp"
  ],
  "kwds": "parser nlp tokenizer vietnamese languages",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_esupar",
  "homepage": "https://github.com/koichiyasuoka/esupar",
  "release_count": 91,
  "dependency_ids": [
    "pypi_deplacy",
    "pypi_supar",
    "pypi_transformers"
  ]
}
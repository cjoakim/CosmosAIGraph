{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: gnu general public license (gpl)",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "topic :: utilities"
  ],
  "description": "\n[mailjet]:(http://www.mailjet.com/)\n[api_credential]: https://app.mailjet.com/account/api_keys\n[doc]: http://dev.mailjet.com/guides/?python#\n[api_doc]: https://github.com/mailjet/api-documentation\n\n![alt text](https://www.mailjet.com/images/email/transac/logo_header.png \"mailjet\")\n\n# official mailjet python wrapper\n\n[![build status](https://travis-ci.org/mailjet/mailjet-apiv3-python.svg?branch=master)](https://travis-ci.org/mailjet/mailjet-apiv3-python)\n![current version](https://img.shields.io/badge/version-1.3.2-green.svg)\n\n## overview\n\nwelcome to the [mailjet][mailjet] official python api wrapper!\n\ncheck out all the resources and python code examples in the official [mailjet documentation][doc].\n\n## table of contents\n\n- [compatibility](#compatibility)\n- [installation](#installation)\n- [authentication](#authentication)\n- [make your first call](#make-your-first-call)\n- [client / call configuration specifics](#client--call-configuration-specifics)\n  - [api versioning](#api-versioning)\n  - [base url](#base-url)\n- [request examples](#request-examples)\n  - [post request](#post-request)\n    - [simple post request](#simple-post-request)\n    - [using actions](#using-actions)\n  - [get request](#get-request)\n    - [retrieve all objects](#retrieve-all-objects)\n    - [use filtering](#use-filtering)\n    - [retrieve a single object](#retrieve-a-single-object)\n  - [put request](#put-request)\n  - [delete request](#delete-request)\n- [contribute](#contribute)\n\n## compatibility\n\nthis library officially supports the following python versions:\n\n - v2.7\n - v3.5\n - v3.6\n\n## installation\n\nuse the below code to install the wrapper:\n\n``` bash\n(sudo) pip install mailjet_rest\n```\n\n## authentication\n\nthe mailjet email api uses your api and secret keys for authentication. [grab][api_credential] and save your mailjet api credentials.\n\n```bash\nexport mj_apikey_public='your api key'\nexport mj_apikey_private='your api secret'\n```\n\ninitialize your [mailjet][mailjet] client:\n\n```python\n# import the mailjet wrapper\nfrom mailjet_rest import client\nimport os\n\n# get your environment mailjet keys\napi_key = os.environ['mj_apikey_public']\napi_secret = os.environ['mj_apikey_private']\n\nmailjet = client(auth=(api_key, api_secret))\n```\n\n## make your first call\n\nhere's an example on how to send an email:\n\n```python\nfrom mailjet_rest import client\nimport os\napi_key = os.environ['mj_apikey_public']\napi_secret = os.environ['mj_apikey_private']\nmailjet = client(auth=(api_key, api_secret), version='v3.1')\ndata = {\n  'messages': [\n    {\n      \"from\": {\n        \"email\": \"$sender_email\",\n        \"name\": \"me\"\n      },\n      \"to\": [\n        {\n          \"email\": \"$recipient_email\",\n          \"name\": \"you\"\n        }\n      ],\n      \"subject\": \"my first mailjet email!\",\n      \"textpart\": \"greetings from mailjet!\",\n      \"htmlpart\": \"<h3>dear passenger 1, welcome to <a href=\\\"https://www.mailjet.com/\\\">mailjet</a>!</h3><br />may the delivery force be with you!\"\n    }\n  ]\n}\nresult = mailjet.send.create(data=data)\nprint result.status_code\nprint result.json()\n```\n\n## client / call configuration specifics\n\n### api versioning\n\nthe mailjet api is spread among three distinct versions:\n\n- `v3` - the email api\n- `v3.1` - email send api v3.1, which is the latest version of our send api\n- `v4` - sms api (not supported in python)\n\nsince most email api endpoints are located under `v3`, it is set as the default one and does not need to be specified when making your request. for the others you need to specify the version using `version`. for example, if using send api `v3.1`:\n\n``` python\n# import the mailjet wrapper\nfrom mailjet_rest import client\nimport os\n\n# get your environment mailjet keys\napi_key = os.environ['mj_apikey_public']\napi_secret = os.environ['mj_apikey_private']\n\nmailjet = client(auth=(api_key, api_secret), version='v3.1')\n```\n\nfor additional information refer to our [api reference](https://dev.preprod.mailjet.com/reference/overview/versioning/).\n\n### base url\n\nthe default base domain name for the mailjet api is `api.mailjet.com`. you can modify this base url by setting a value for `api_url` in your call:\n\n```python\nmailjet = client(auth=(api_key, api_secret),api_url=\"https://api.us.mailjet.com/\")\n```\n\nif your account has been moved to mailjet's **us architecture**, the url value you need to set is `https://api.us.mailjet.com`.\n\n## request examples\n\n### post request\n\n#### simple post request\n\n```python\n\"\"\"\ncreate a new contact:\n\"\"\"\nfrom mailjet_rest import client\nimport os\napi_key = os.environ['mj_apikey_public']\napi_secret = os.environ['mj_apikey_private']\nmailjet = client(auth=(api_key, api_secret))\ndata = {\n  'email': 'mister@mailjet.com'\n}\nresult = mailjet.contact.create(data=data)\nprint result.status_code\nprint result.json()\n```\n\n#### using actions\n\n```python\n\"\"\"\nmanage the subscription status of a contact to multiple lists:\n\"\"\"\nfrom mailjet_rest import client\nimport os\napi_key = os.environ['mj_apikey_public']\napi_secret = os.environ['mj_apikey_private']\nmailjet = client(auth=(api_key, api_secret))\nid = '$id'\ndata = {\n  'contactslists': [\n                {\n                        \"listid\": \"$listid_1\",\n                        \"action\": \"addnoforce\"\n                },\n                {\n                        \"listid\": \"$listid_2\",\n                        \"action\": \"addforce\"\n                }\n        ]\n}\nresult = mailjet.contact_managecontactslists.create(id=id, data=data)\nprint result.status_code\nprint result.json()\n```\n\n### get request\n\n#### retrieve all objects\n\n```python\n\"\"\"\nretrieve all contacts:\n\"\"\"\nfrom mailjet_rest import client\nimport os\napi_key = os.environ['mj_apikey_public']\napi_secret = os.environ['mj_apikey_private']\nmailjet = client(auth=(api_key, api_secret))\nresult = mailjet.contact.get()\nprint result.status_code\nprint result.json()\n```\n\n#### using filtering\n\n```python\n\"\"\"\nretrieve all contacts that are not in the campaign exclusion list:\n\"\"\"\nfrom mailjet_rest import client\nimport os\napi_key = os.environ['mj_apikey_public']\napi_secret = os.environ['mj_apikey_private']\nmailjet = client(auth=(api_key, api_secret))\nfilters = {\n  'isexcludedfromcampaigns': false,\n}\nresult = mailjet.contact.get(filters=filters)\nprint result.status_code\nprint result.json()\n```\n\n#### retrieve a single object\n\n```python\n\"\"\"\nretrieve a specific contact id:\n\"\"\"\nfrom mailjet_rest import client\nimport os\napi_key = os.environ['mj_apikey_public']\napi_secret = os.environ['mj_apikey_private']\nmailjet = client(auth=(api_key, api_secret))\nid = 'contact_id'\nresult = mailjet.contact.get(id=id)\nprint result.status_code\nprint result.json()\n```\n\n### put request\n\na `put` request in the mailjet api will work as a `patch` request - the update will affect only the specified properties. the other properties of an existing resource will neither be modified, nor deleted. it also means that all non-mandatory properties can be omitted from your payload.\n\nhere's an example of a `put` request:\n\n```python\n\"\"\"\nupdate the contact properties for a contact:\n\"\"\"\nfrom mailjet_rest import client\nimport os\napi_key = os.environ['mj_apikey_public']\napi_secret = os.environ['mj_apikey_private']\nmailjet = client(auth=(api_key, api_secret))\nid = '$contact_id'\ndata = {\n  'data': [\n                {\n                        \"name\": \"first_name\",\n                        \"value\": \"john\"\n                },\n                {\n                        \"name\": \"last_name\",\n                        \"value\": \"smith\"\n                }\n        ]\n}\nresult = mailjet.contactdata.update(id=id, data=data)\nprint result.status_code\nprint result.json()\n```\n\n### delete request\n\nupon a successful `delete` request the response will not include a response body, but only a `204 no content` response code.\n\nhere's an example of a `delete` request:\n\n```python\n\"\"\"\ndelete an email template:\n\"\"\"\nfrom mailjet_rest import client\nimport os\napi_key = os.environ['mj_apikey_public']\napi_secret = os.environ['mj_apikey_private']\nmailjet = client(auth=(api_key, api_secret))\nid = 'template_id'\nresult = mailjet.template.delete(id=id)\nprint result.status_code\nprint result.json()\n```\n\n## contribute\n\nmailjet loves developers. you can be part of this project!\n\nthis wrapper is a great introduction to the open source world, check out the code!\n\nfeel free to ask anything, and contribute:\n\n- fork the project.\n- create a new branch.\n- implement your feature or bug fix.\n- add documentation to it.\n- commit, push, open a pull request and voila.\n\nif you have suggestions on how to improve the guides, please submit an issue in our [official api documentation repo](https://github.com/mailjet/api-documentation).\n\n\n",
  "docs_url": null,
  "keywords": "mailjet api v3 / v3.1 python wrapper",
  "license": "mit",
  "name": "mailjet-rest",
  "package_url": "https://pypi.org/project/mailjet-rest/",
  "project_url": "https://pypi.org/project/mailjet-rest/",
  "project_urls": {
    "Download": "https://github.com/mailjet/mailjet-apiv3-python/releases/latest",
    "Homepage": "https://github.com/mailjet/mailjet-apiv3-python"
  },
  "release_url": "https://pypi.org/project/mailjet-rest/1.3.4/",
  "requires_dist": [
    "requests (>=2.4.3)"
  ],
  "requires_python": "",
  "summary": "mailjet v3 api wrapper",
  "version": "1.3.4",
  "releases": [],
  "developers": [
    "api@mailjet.com",
    "mailjet",
    "starenka",
    "starenka0@gmail.com"
  ],
  "kwds": "mailjet_rest mailjet email recipient_email apiv3",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_mailjet_rest",
  "homepage": "https://github.com/mailjet/mailjet-apiv3-python",
  "release_count": 13,
  "dependency_ids": [
    "pypi_requests"
  ]
}
{
  "classifiers": [
    "framework :: hatch",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# hatch-nodejs-version\n\n[![pypi - version](https://img.shields.io/pypi/v/hatch-nodejs-version.svg)](https://pypi.org/project/hatch-nodejs-version)\n[![pypi - python version](https://img.shields.io/pypi/pyversions/hatch-nodejs-version.svg)](https://pypi.org/project/hatch-nodejs-version)\n[![hatch project](https://img.shields.io/badge/%f0%9f%a5%9a-hatch-4051b5.svg)](https://github.com/pypa/hatch)\n\n-----\nthis package provides two hatch plugins:\n\n- [version source plugin](https://hatch.pypa.io/latest/plugins/version-source/) that reads/writes the package version\n  from the `version` field of the node.js `package.json` file.\n- [metadata hook plugin](https://hatch.pypa.io/latest/plugins/metadata-hook/) that reads pep 621 metadata from the\n  node.js `package.json` file.\n\n**table of contents**\n\n- [installation](#installation)\n- [global dependency](#global-dependency)\n- [version source](#version-source)\n- [metadata hook](#metadata-hook)\n- [license](#license)\n\n## global dependency\n\nensure `hatch-nodejs-version` is defined within the `build-system.requires` field in your `pyproject.toml` file.\n\n```toml\n[build-system]\nrequires = [\"hatchling\", \"hatch-nodejs-version\"]\nbuild-backend = \"hatchling.build\"\n```\n\n## version source\n\nthe [version source plugin](https://hatch.pypa.io/latest/plugins/version-source/) name is `nodejs`.\n\n- ***pyproject.toml***\n\n    ```toml\n    [tool.hatch.version]\n    source = \"nodejs\"\n    ```\n\n- ***hatch.toml***\n\n    ```toml\n    [version]\n    source = \"nodejs\"\n    ```\n\n### semver\n\nthe semver specification defines the following version sections:\n\n- `major`\n- `minor`\n- `patch`\n- `pre-release`\n- `build`\n\nmeanwhile, [pep 440](https://peps.python.org/pep-0440/#version-scheme) defines:\n\n- `epoch`\n- `major`\n- `minor`\n- `patch`\n- `pre-release`\n- `post-release`\n- `dev-release`\n\nin order to ensure contentful round-trip support, and ensure semantic consistency between node.js and python, this plugin only\naccepts the common version parts:\n\n- `major`\n- `minor`\n- `patch`\n- `pre-release`\n\ne.g. `1.2.3-rc0`.\n\nnote that where normalisation occurs, the round-trip result will differ. this can be avoided by careful choice of the delimeters e.g. `-.`.\n\n\n### version source options\n\n| option        | type | default       | description                                |\n|---------------| --- |---------------|--------------------------------------------|\n| `path`        | `str` | `package.json` | relative path to the `package.json` file. |\n\n## metadata hook\n\nthe [metadata hook plugin](https://hatch.pypa.io/dev/plugins/metadata-hook/reference/) name is `nodejs`.\n\n- ***pyproject.toml***\n\n    ```toml\n    [tool.hatch.metadata.hooks.nodejs]\n    ```\n\n- ***hatch.toml***\n\n    ```toml\n    [metadata.hooks.nodejs]\n    ```\n\n### metadata hook options\n\n| option                        | type            | default          | description                                                                                                                               |\n|-------------------------------|-----------------|------------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n| `path`                        | `str`           | `\"package.json\"` | relative path to the `package.json` file.                                                                                                 |\n| `fields`                      | `list` of `str` | `none`           | optional list of `pyproject.toml` fields to take from their counterparts in `package.json`. if missing, take all of the available fields. |\n| `contributors-as-maintainers` | `bool`          | `true`           | whether contributors in `package.json` should be considered maintainers (otherwise, treat them as authors).                               |\n| `bugs-label`                  | `str`           | `\"bug tracker\"`  | the key in the urls table of `pyproject.toml` that is populated by the `bugs` field in `package.json`                                     |\n| `homepage-label`              | `str`           | `\"homepage\"`     | the key in the urls table of `pyproject.toml` that is populated by the `homepage` field in `package.json`                                 |\n| `repository-label`            | `str`           | `\"repository\"`   | the key in the urls table of `pyproject.toml` that is populated by the `repository` field in `package.json`                               |\n\n## license\n\n`hatch-nodejs-version` is distributed under the terms of the [mit](https://spdx.org/licenses/mit.html) license.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "hatch-nodejs-version",
  "package_url": "https://pypi.org/project/hatch-nodejs-version/",
  "project_url": "https://pypi.org/project/hatch-nodejs-version/",
  "project_urls": {
    "Homepage": "https://github.com/agoose77/hatch-nodejs-version",
    "Issue Tracker": "https://github.com/agoose77/hatch-nodejs-version/issues",
    "Source Code": "https://github.com/agoose77/hatch-nodejs-version"
  },
  "release_url": "https://pypi.org/project/hatch-nodejs-version/0.3.2/",
  "requires_dist": [
    "hatchling>=0.21.0"
  ],
  "requires_python": ">=3.7",
  "summary": "hatch plugin for versioning from a package.json file",
  "version": "0.3.2",
  "releases": [],
  "developers": [
    "goosey15@gmail.com"
  ],
  "kwds": "pyversions hatchling hatch version pypi",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_hatch_nodejs_version",
  "homepage": "",
  "release_count": 8,
  "dependency_ids": [
    "pypi_hatchling"
  ]
}
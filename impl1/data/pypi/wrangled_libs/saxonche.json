{
  "classifiers": [],
  "description": "# welcome to saxonc-he\n\nthis is the official [saxonica](https://www.saxonica.com/) python wheel package for\nsaxon, an xml document processor. [saxonc](https://www.saxonica.com/saxon-c/index.xml) \nprovides apis to run xslt 3.0 transformations, xquery 3.1 queries, xpath 3.1, and \nxml schema validation.\n\nthe saxonc release comes in separate wheels for the three product editions:\n* **saxonche** (saxonc-he: open-source home edition)\n* **saxoncpe** (saxonc-pe: professional edition) \n* **saxoncee** (saxonc-ee: enterprise edition)\n\nsaxonc-pe and saxonc-ee are commercial products that require a valid\nlicense key. licenses can be purchased from the \n[saxonica online store](https://www.saxonica.com/shop/shop.xml). \nalternatively a 30-day [evaluation license](https://www.saxonica.com/download/download.xml) \nis available free of charge. by downloading the software, you are agreeing to our \n[terms and conditions](https://www.saxonica.com/license/terms.xml).\n\nfor full documentation for the latest saxonc release, see the\n[saxonc 12 documentation](https://www.saxonica.com/saxon-c/documentation12/index.html).\n\n## why choose saxonc?\n\nthe main reason for using saxonc in preference to other xml\ntools available for python is that it supports all the latest w3c\nstandards: xslt 3.0, xpath 3.1, xquery 3.1, and xsd 1.1. it even\nincludes experimental support for the draft 4.0 specifications\ncurrently under development.\n\n## about saxonc\n\nsaxonc is a version of saxon developed by compiling the java source code to native \nexecutables that run on the c/c++ platform, with extensions for php and python. all \nfeatures of saxon have been ported, other than those (such as collations) that are \nnecessarily platform dependent. in particular, saxonc provides processing in xslt, \nxquery and xpath, and schema validation. it therefore makes these processing capabilities \navailable to a plethora of other languages that are strongly coupled to c/c++ such as php, \nperl, python, and ruby.\n\n\n## about saxonica\n\nsaxon is developed by saxonica, a company created in 2004 by michael kay, who was \nthe editor of the xslt 2.0 and 3.0 specifications in w3c. the original saxon product \non the java platform has been continually developed for over 20 years, and has \nacquired a reputation for standards conformance, performance, and reliability.\n\n\n## installation\n\n```bash\npip install saxonche\n```\n\n## getting started\n\neither import the whole api:\n\n```python \nfrom saxonche import *\n```\n\nor specific modules:\n\n```python \nfrom saxonche import pysaxonprocessor\n```\n\nthe saxonc api includes classes for constructing xdm data models\nand for a variety of processors. for full details see the [saxonc python api \ndocumentation](https://www.saxonica.com/saxon-c/documentation/index.html#!api/saxon_c_python_api).\n\nthe following short example shows how to get the saxon version from\nthe `pysaxonprocessor`:\n\n```python\nfrom saxonche import pysaxonprocessor\n\nwith pysaxonprocessor(license=false) as proc:\n\tprint(proc.version)\n```\n\nit will print something like this:\n\n```bash\nsaxonc-he 12.4.1 from saxonica\n```\n\n**note**: `license=false` requests the open-source version of saxon, whereas \n`license=true` requests the commercial product - which requires a license file.\nsaxonc looks for the license key in the directory where the main saxonc library has been \ninstalled, and the directory identified by the environment variable `saxonc_home`.\n\n### example: running a transformation\n\nthe following basic example shows how an xslt stylesheet can be run against a source \nxml document in python using saxonc:\n\n```python \nfrom saxonche import *\n\nwith pysaxonprocessor(license=false) as proc:\n \nxsltproc = proc.new_xslt30_processor()\ndocument = proc.parse_xml(xml_text=\"<doc><item>text1</item><item>text2</item><item>text3</item></doc>\")\nexecutable = xsltproc.compile_stylesheet(stylesheet_file=\"test.xsl\")\noutput = executable.transform_to_string(xdm_node=document)\nprint(output)\n```\n\nfor more python examples, and further details about installing and configuring the product, \nsee the [saxonc 12 documentation](https://www.saxonica.com/saxon-c/documentation12/index.html).\n\n\n\n## support\n\nall users are welcome to use the public [support site](http://saxonica.plan.io) for \nreporting issues and seeking help (registration required). in addition, many \nquestions are asked and answered on [stackoverflow](https://stackoverflow.com): \nplease use the **saxon** tag.\n\n## acknowledgement\n\nwe learned a lot about how to create python wheels for saxon from the\nsaxonpy wheel package, which is a third-party project\n[on github](https://github.com/tennom/saxonpy).\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "saxonche",
  "package_url": "https://pypi.org/project/saxonche/",
  "project_url": "https://pypi.org/project/saxonche/",
  "project_urls": {
    "Homepage": "https://www.saxonica.com/saxon-c/index.xml"
  },
  "release_url": "https://pypi.org/project/saxonche/12.4.1.0/",
  "requires_dist": [],
  "requires_python": ">=3.8",
  "summary": "official saxonica python package for the saxonc-he 12.4.1 processor: for xslt 3.0, xquery 3.1, xpath 3.1 and xml schema processing.",
  "version": "12.4.1.0",
  "releases": [],
  "developers": [
    "oneil@saxonica.com",
    "oneil_delpratt"
  ],
  "kwds": "saxon_c_python_api saxoncpe saxonc saxonpy saxon",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_saxonche",
  "homepage": "https://www.saxonica.com/saxon-c/index.xml",
  "release_count": 6,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "framework :: django :: 2.2",
    "framework :: django :: 3.0",
    "framework :: django :: 3.1",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: pypy",
    "topic :: internet :: www/http",
    "topic :: internet :: www/http :: dynamic content",
    "topic :: software development :: libraries :: python modules",
    "topic :: utilities"
  ],
  "description": "pipeline\n========\n\n.. image:: https://jazzband.co/static/img/badge.svg\n    :alt: jazzband\n    :target: https://jazzband.co/\n\n.. image:: https://github.com/jazzband/django-pipeline/workflows/test/badge.svg\n   :target: https://github.com/jazzband/django-pipeline/actions\n   :alt: github actions\n\n.. image:: https://codecov.io/gh/jazzband/django-pipeline/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/jazzband/django-pipeline\n   :alt: coverage\n\n.. image:: https://readthedocs.org/projects/django-pipeline/badge/?version=latest\n    :alt: documentation status\n    :target: https://django-pipeline.readthedocs.io/en/latest/?badge=latest\n\n\npipeline is an asset packaging library for django, providing both css and\njavascript concatenation and compression, built-in javascript template support,\nand optional data-uri image and font embedding.\n\n.. image:: https://github.com/jazzband/django-pipeline/raw/master/img/django-pipeline.svg\n   :alt: django pipeline overview\n\n\ninstallation\n------------\n\nto install it, simply:\n\n.. code-block:: bash\n\n    pip install django-pipeline\n\n\nquickstart\n----------\n\npipeline compiles and compress your assets files from\n``staticfiles_dirs`` to your ``static_root`` when you run django's\n``collectstatic`` command.\n\nthese simple steps add pipeline to your project to compile multiple ``.js`` and\n``.css`` file into one and compress them.\n\nadd pipeline to your installed apps:\n\n.. code-block:: python\n\n    # settings.py\n    installed_apps = [\n        ...\n        'pipeline',\n    ]\n\n\nuse pipeline specified classes for ``staticfiles_finders`` and ``staticfiles_storage``:\n\n.. code-block:: python\n\n    staticfiles_storage = 'pipeline.storage.pipelinemanifeststorage'\n\n    staticfiles_finders = (\n        'django.contrib.staticfiles.finders.filesystemfinder',\n        'django.contrib.staticfiles.finders.appdirectoriesfinder',\n        'pipeline.finders.pipelinefinder',\n    )\n\n\nconfigure pipeline:\n\n.. code-block:: python\n\n    # the folowing config merges css files(main.css, normalize.css)\n    # and javascript files(app.js, script.js) and compress them using\n    # `yuglify` into `css/styles.css` and `js/main.js`\n    # note: pipeline only works when debug is false\n    pipeline = {\n        'stylesheets': {\n            'css_files': {\n                'source_filenames': (\n                    'css/main.css',\n                    'css/normalize.css',\n                ),\n                'output_filename': 'css/styles.css',\n                'extra_context': {\n                    'media': 'screen,projection',\n                },\n            },\n        },\n        'javascript': {\n            'js_files': {\n                'source_filenames': (\n                    'js/app.js',\n                    'js/script.js',\n                ),\n                'output_filename': 'js/main.js',\n            }\n        }\n    }\n\n\nthen, you have to install compilers and compressors binary manually.\n\nfor example, you can install them using `npm <https://www.npmjs.com/>`_\nand address them from ``node_modules`` directory in your project path:\n\n.. code-block:: python\n\n    pipeline.update({\n        'yuglify_binary': path.join(base_dir, 'node_modules/.bin/yuglify'),\n    })\n    # for a list of all supported compilers and compressors see documentation\n\n\nload static files in your template:\n\n.. code-block::\n\n    {% load pipeline %}\n    {% stylesheet 'css_files' %}\n    {% javascript 'js_files' %}\n\n\ndocumentation\n-------------\n\nfor documentation, usage, and examples, see:\nhttps://django-pipeline.readthedocs.io\n\n\nissues\n------\nyou can report bugs and discuss features on the `issues page <https://github.com/jazzband/django-pipeline/issues>`_.\n\n\nchangelog\n---------\n\nsee `history.rst <https://github.com/jazzband/django-pipeline/blob/master/history.rst>`_.\n\n\n.. :changelog:\n\nhistory\n=======\n\n2.1.0\n=====\n\n* update readme.rst and add pipeline overview image.\n* add typescript compiler support.\n* drop support for ``manifesto`` package.\n* add support for python 3.11 and django 4.1\n\n\n2.0.9\n=====\n\n* fixed some typos in the docs.\n* fixed string type of errors reported from compilers and compressors.\n* updated github actions matrix for host and django support.\n* updated github actions configuration to use modern versions of third-party\n  actions.\n* improved the packager to copy files to (s3) storage if it does not exist\n  (#502).\n\n\n2.0.8\n=====\n\n* added **django 4.0** compatibility. thanks to @kevinmarsh (#760)\n* add tests for **django 4.0**,  **python 3.9** and **python 3.10**.\n  thank to @kevinmarsh (#739)\n* introduce code_of_conduct.md for the project. thank to @hugovk (#758)\n* add precision in the documentation for pipelinecachedstorage.\n  thank to @gatsinski (#739)\n* drop support for slimit compressor (#765) due to package not released\n  an official version for python 3 and not any new package release from 2013.\n* edit github actions matrix: django 3.2.9 support python 3.10, remove\n  python 4.0 (doesn't exist) and exclude pypy-3.8 for django-main.\n* add .pre-commit-config.yaml. thanks to @hugovk (#762)\n* update package.json due to coffeescript on npm has moved to \"coffeescript\" \n* update setup.py with django 4.0 and python 3.10\n\n2.0.7\n=====\n\n* added **django 3.2** compatibility (thanks to @jramnai in #751)\n\n2.0.6\n======\n\n* added terser (js compressor for es5 and es6) (thanks to @felix-last in #696)\n* moved tests to github actions: https://github.com/jazzband/django-pipeline/actions (#738)\n* fixed deprecation warnings from django (thanks to @edelvalle in #731)\n\n2.0.5\n======\n\n* adding **django 3.1** compatibility.\n* cachedstaticfilesstorage is removed from django. add a check\n  of the current version to prevent error while importing. thank to @vmsp\n* context in django.template.base is removed from django and\n  not used anymore in django-pipeline.\n* fixing widgets tests of django-pipeline due to media.render_js change in \n  django. more information in django ticket #31892\n\n2.0.4\n======\n\n* adding **css-html-js-minify** support to compress js and css.\n* update compressors documentation with css-html-js-minify.\n* create tests for css-html-js-minify compressor.\n* optimization by grouping the tests yuglify compressor.\n\n2.0.3\n======\n\n* remove futures from pipeline **setup.py** requirements.\n\n2.0.2\n=====\n\n* fix middleware to properly decode html. thank to @gatsinski\n* keep mimetypes as str. thank to @benspaulding\n* based on #642 add 'nonpackagingpipelinemanifeststorage' and update\n  the documentation: **storages.rst**. thank to @kronion\n\n2.0.1\n=====\n\n* add subclass of manifeststaticfilesstorage. thank to @jhpinson\n* change the documentation to use pipelinemanifeststorage in configuration\n  instead of pipelinecachedstorage now deprecated.\n* change import mutablemapping from collections.abc. thank to @colons\n\n2.0.0\n=====\n\n* **definitely drop the support of python 2**.\n* drop support for python 3.5 (not compatible with pep 498).\n* remove 'decorator.py' how was used for backward compatibility\n  between python 2 and 3 for metaclass inheritance on pipelineformmedia.\n* replace 'format' by 'fstring' (pep 498: literal string interpolation).\n* remove of old imports form 'django.utils.six' and these fixes (1.7.0).\n* remove tests of uncovered versions of python and django.\n* replace tests for pypy by pypy3.\n* explicitly specify when files are read / write in binary mode.\n* set opening files for tests to deal with universal newlines.\n* upgrade documentation version to 2.0 to follow the project version.\n\n1.7.0\n=====\n\n* release the last major version of django-pipeline working on python 2.\n* thank you for all the modifications made since version 1.6.14, which we cannot quote.\n* apply an optimization to save time during development. thank to @blankser\n* edit setup.py to follow the recommendation of the documentation. thank to @shaneikennedy\n* add tests for django 3.0 and python 3.8\n* add alternatives imports for django.utils.six, who has been removed in django 3.0\n\n1.6.14\n======\n\n* fix packaging issues.\n\n1.6.13\n======\n\n* fix forward-slashed paths on windows. thanks to @etiago\n* fix css url detector to match quotes correctly. thanks to @vskh\n* add a compiler_options dict to compile, to allow passing options to custom\n  compilers. thanks to @sassanh\n* verify support for django 1.11. thanks to @jwhitlock\n\n1.6.12\n======\n\n* supports django 1.11\n* fix a bug with os.rename on windows. thanks to @wismill\n* fix to view compile error if happens. thanks to @brawaga\n* add support for pipeline css/js packages in forms and widgets. thanks to @chipx86\n\n1.6.11\n======\n\n* fix performance regression. thanks to christian hammond.\n\n1.6.10\n======\n\n* added django 1.10 compatiblity issues. thanks to austin pua and silvan spross.\n* documentation improvements. thanks to chris streeter.\n\n1.6.9\n=====\n\n* various build improvements.\n* improved setup.py classifiers. thanks to sobolev nikita.\n* documentation improvements. thanks to adam chainz.\n\n1.6.8\n=====\n\n* made templatetags easier to subclass for special rendering behavior. thanks\n  to christian hammond.\n* updated the link to readthedocs. thanks to corey farwell.\n* fixed some log messages to correctly refer to the new pipeline settings\n  tructure. thanks to alvin mites.\n* changed file outdated checks to use os.path methods directly, avoiding\n  potential suspiciousfileoperation errors which could appear with some django\n  storage configurations.\n\n1.6.7\n=====\n\n* add a view for collecting static files before serving them. this behaves like\n  django's built-in ``static`` view and allows running the collector for\n  images, fonts, and other static files that do not need to be compiled. thanks\n  to christian hammond.\n* update documentation for the es6compiler to clarify filename requirements.\n  thanks to nathan cox.\n* add error output for compiler errors within the browser. this provides for a\n  much better experience when compiling files from the devserver. thanks to\n  christian hammond.\n* make unit tests run against django 1.6 and 1.7. thanks to s\u0142awek ehlert.\n\n1.6.6\n=====\n\n* fix filtering-out of files which require a finder to locate.\n* allow compilers to override the output path.\n* fix error reporting when a compiler fails to execute.\n* fix ioerrors when running collectstatic with some nodejs-based compilers and\n  compressors. thanks to frankie dintino.\n* fix compatibility of unit tests when running on windows. thanks to frankie\n  dintino.\n* add unit tests for compilers and compressors. thanks to frankie dintino.\n\n1.6.5\n=====\n\n* fix django < 1.8 compatibility. thanks to david trowbridge.\n* allow to disable collector during development. thanks to leonardo orozco.\n\n1.6.4\n=====\n\n* fix compressor subprocess calls.\n\n1.6.3\n=====\n\n* fix compressor command flattening.\n\n1.6.2\n=====\n\n* remove subprocess32 usage since it breaks universal support.\n\n1.6.1\n=====\n\n* fix path quoting issues. thanks to chad miller.\n* use subprocess32 package when possible.\n* documentation fixes. thanks to s\u0142awek ehlert and jannis leidel.\n\n1.6.0\n=====\n\n* add full support for django 1.9.\n* drop support for django 1.7.\n* drop support for python 2.6.\n* **backward incompatible** : change configuration settings.\n",
  "docs_url": null,
  "keywords": "django pipeline asset compiling concatenation compression packaging",
  "license": "mit",
  "name": "django-pipeline",
  "package_url": "https://pypi.org/project/django-pipeline/",
  "project_url": "https://pypi.org/project/django-pipeline/",
  "project_urls": {
    "Homepage": "https://github.com/jazzband/django-pipeline"
  },
  "release_url": "https://pypi.org/project/django-pipeline/2.1.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "pipeline is an asset packaging library for django.",
  "version": "2.1.0",
  "releases": [],
  "developers": [
    "timothee.peignier@tryphon.org"
  ],
  "kwds": "pipelinemanifeststorage pipeline pipelinefinder nonpackagingpipelinemanifeststorage django",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_django_pipeline",
  "homepage": "https://github.com/jazzband/django-pipeline",
  "release_count": 131,
  "dependency_ids": []
}
{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: gnu general public license v2 (gplv2)",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6"
  ],
  "description": ".. image:: https://travis-ci.org/seatgeek/fuzzywuzzy.svg?branch=master\n    :target: https://travis-ci.org/seatgeek/fuzzywuzzy\n\nfuzzywuzzy\n==========\n\nfuzzy string matching like a boss. it uses `levenshtein distance <https://en.wikipedia.org/wiki/levenshtein_distance>`_ to calculate the differences between sequences in a simple-to-use package.\n\nrequirements\n============\n\n-  python 2.7 or higher\n-  difflib\n-  `python-levenshtein <https://github.com/ztane/python-levenshtein/>`_ (optional, provides a 4-10x speedup in string\n   matching, though may result in `differing results for certain cases <https://github.com/seatgeek/fuzzywuzzy/issues/128>`_)\n\nfor testing\n~~~~~~~~~~~\n-  pycodestyle\n-  hypothesis\n-  pytest\n\ninstallation\n============\n\nusing pip via pypi\n\n.. code:: bash\n\n    pip install fuzzywuzzy\n\nor the following to install `python-levenshtein` too\n\n.. code:: bash\n\n    pip install fuzzywuzzy[speedup]\n\n\nusing pip via github\n\n.. code:: bash\n\n    pip install git+git://github.com/seatgeek/fuzzywuzzy.git@0.18.0#egg=fuzzywuzzy\n\nadding to your ``requirements.txt`` file (run ``pip install -r requirements.txt`` afterwards)\n\n.. code:: bash\n\n    git+ssh://git@github.com/seatgeek/fuzzywuzzy.git@0.18.0#egg=fuzzywuzzy\n\nmanually via git\n\n.. code:: bash\n\n    git clone git://github.com/seatgeek/fuzzywuzzy.git fuzzywuzzy\n    cd fuzzywuzzy\n    python setup.py install\n\n\nusage\n=====\n\n.. code:: python\n\n    >>> from fuzzywuzzy import fuzz\n    >>> from fuzzywuzzy import process\n\nsimple ratio\n~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> fuzz.ratio(\"this is a test\", \"this is a test!\")\n        97\n\npartial ratio\n~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> fuzz.partial_ratio(\"this is a test\", \"this is a test!\")\n        100\n\ntoken sort ratio\n~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> fuzz.ratio(\"fuzzy wuzzy was a bear\", \"wuzzy fuzzy was a bear\")\n        91\n    >>> fuzz.token_sort_ratio(\"fuzzy wuzzy was a bear\", \"wuzzy fuzzy was a bear\")\n        100\n\ntoken set ratio\n~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> fuzz.token_sort_ratio(\"fuzzy was a bear\", \"fuzzy fuzzy was a bear\")\n        84\n    >>> fuzz.token_set_ratio(\"fuzzy was a bear\", \"fuzzy fuzzy was a bear\")\n        100\n\nprocess\n~~~~~~~\n\n.. code:: python\n\n    >>> choices = [\"atlanta falcons\", \"new york jets\", \"new york giants\", \"dallas cowboys\"]\n    >>> process.extract(\"new york jets\", choices, limit=2)\n        [('new york jets', 100), ('new york giants', 78)]\n    >>> process.extractone(\"cowboys\", choices)\n        (\"dallas cowboys\", 90)\n\nyou can also pass additional parameters to ``extractone`` method to make it use a specific scorer. a typical use case is to match file paths:\n\n.. code:: python\n\n    >>> process.extractone(\"system of a down - hypnotize - heroin\", songs)\n        ('/music/library/good/system of a down/2005 - hypnotize/01 - attack.mp3', 86)\n    >>> process.extractone(\"system of a down - hypnotize - heroin\", songs, scorer=fuzz.token_sort_ratio)\n        (\"/music/library/good/system of a down/2005 - hypnotize/10 - she's like heroin.mp3\", 61)\n\n.. |build status| image:: https://api.travis-ci.org/seatgeek/fuzzywuzzy.png?branch=master\n   :target: https:travis-ci.org/seatgeek/fuzzywuzzy\n\nknown ports\n============\n\nfuzzywuzzy is being ported to other languages too! here are a few ports we know about:\n\n-  java: `xpresso's fuzzywuzzy implementation <https://github.com/wantedtechnologies/xpresso/wiki/approximate-string-comparison-and-pattern-matching-in-java>`_\n-  java: `fuzzywuzzy (java port) <https://github.com/xdrop/fuzzywuzzy>`_\n-  rust: `fuzzyrusty (rust port) <https://github.com/logannc/fuzzyrusty>`_\n-  javascript: `fuzzball.js (javascript port) <https://github.com/nol13/fuzzball.js>`_\n-  c++: `tmplt/fuzzywuzzy <https://github.com/tmplt/fuzzywuzzy>`_\n-  c#: `fuzzysharp (.net port) <https://github.com/boomtownroi/boomtown.fuzzysharp>`_\n-  go: `go-fuzzywuzz (go port) <https://github.com/paul-mannino/go-fuzzywuzzy>`_\n-  free pascal: `fuzzywuzzy.pas (free pascal port) <https://github.com/davidmoraisferreira/fuzzywuzzy.pas>`_\n-  kotlin multiplatform: `fuzzywuzzy-kotlin <https://github.com/willowtreeapps/fuzzywuzzy-kotlin>`_\n-  r: `fuzzywuzzyr (r port) <https://github.com/mlampros/fuzzywuzzyr>`_\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "gplv2",
  "name": "fuzzywuzzy",
  "package_url": "https://pypi.org/project/fuzzywuzzy/",
  "project_url": "https://pypi.org/project/fuzzywuzzy/",
  "project_urls": {
    "Homepage": "https://github.com/seatgeek/fuzzywuzzy"
  },
  "release_url": "https://pypi.org/project/fuzzywuzzy/0.18.0/",
  "requires_dist": [
    "python-levenshtein (>=0.12) ; extra == 'speedup'"
  ],
  "requires_python": "",
  "summary": "fuzzy string matching in python",
  "version": "0.18.0",
  "releases": [],
  "developers": [
    "adam@seatgeek.com",
    "adam_cohen"
  ],
  "kwds": "levenshtein_distance fuzzywuzzyr fuzzywuzzy fuzzywuzz fuzzysharp",
  "license_kwds": "gplv2",
  "libtype": "pypi",
  "id": "pypi_fuzzywuzzy",
  "homepage": "https://github.com/seatgeek/fuzzywuzzy",
  "release_count": 27,
  "dependency_ids": [
    "pypi_python_levenshtein"
  ]
}
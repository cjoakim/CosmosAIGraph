{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: webassembly :: emscripten",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: physics"
  ],
  "description": ".. image:: https://raw.githubusercontent.com/scikit-hep/pyhf/main/docs/_static/img/pyhf-logo.svg\n   :alt: pyhf logo\n   :width: 320\n   :align: center\n\npure-python fitting/limit-setting/interval estimation histfactory-style\n=======================================================================\n\n|github project| |doi| |joss doi| |scikit-hep| |nsf award number iris-hep v1| |nsf award number iris-hep v2| |numfocus affiliated project|\n\n|docs from latest| |docs from main| |jupyter book tutorial| |binder|\n\n|pypi version| |conda-forge version| |supported python versions| |docker hub pyhf| |docker hub pyhf cuda|\n\n|code coverage| |codefactor| |pre-commit.ci status| |code style: black|\n\n|github actions status: ci| |github actions status: docs| |github actions status: publish|\n|github actions status: docker|\n\nthe histfactory p.d.f. template\n[`cern-open-2012-016 <https://cds.cern.ch/record/1456844>`__] is per-se\nindependent of its implementation in root and sometimes, it\u2019s useful to\nbe able to run statistical analysis outside of root, roofit, roostats\nframework.\n\nthis repo is a pure-python implementation of that statistical model for\nmulti-bin histogram-based analysis and its interval estimation is based\non the asymptotic formulas of \u201casymptotic formulae for likelihood-based\ntests of new physics\u201d\n[`arxiv:1007.1727 <https://arxiv.org/abs/1007.1727>`__]. the aim is also\nto support modern computational graph libraries such as pytorch and\ntensorflow in order to make use of features such as autodifferentiation\nand gpu acceleration.\n\n..\n  comment: jupyterlite segment goes here in docs\n\nuser guide\n----------\n\nfor an in depth walkthrough of usage of the latest release of ``pyhf`` visit the |pyhf tutorial|_.\n\n.. |pyhf tutorial| replace:: ``pyhf`` tutorial\n.. _pyhf tutorial: https://pyhf.github.io/pyhf-tutorial/\n\nhello world\n-----------\n\nthis is how you use the ``pyhf`` python api to build a statistical model and run basic inference:\n\n.. code:: pycon\n\n   >>> import pyhf\n   >>> pyhf.set_backend(\"numpy\")\n   >>> model = pyhf.simplemodels.uncorrelated_background(\n   ...     signal=[12.0, 11.0], bkg=[50.0, 52.0], bkg_uncertainty=[3.0, 7.0]\n   ... )\n   >>> data = [51, 48] + model.config.auxdata\n   >>> test_mu = 1.0\n   >>> cls_obs, cls_exp = pyhf.infer.hypotest(\n   ...     test_mu, data, model, test_stat=\"qtilde\", return_expected=true\n   ... )\n   >>> print(f\"observed: {cls_obs:.8f}, expected: {cls_exp:.8f}\")\n   observed: 0.05251497, expected: 0.06445321\n\nalternatively the statistical model and observational data can be read from its serialized json representation (see next section).\n\n.. code:: pycon\n\n   >>> import pyhf\n   >>> import requests\n   >>> pyhf.set_backend(\"numpy\")\n   >>> url = \"https://raw.githubusercontent.com/scikit-hep/pyhf/main/docs/examples/json/2-bin_1-channel.json\"\n   >>> wspace = pyhf.workspace(requests.get(url).json())\n   >>> model = wspace.model()\n   >>> data = wspace.data(model)\n   >>> test_mu = 1.0\n   >>> cls_obs, cls_exp = pyhf.infer.hypotest(\n   ...     test_mu, data, model, test_stat=\"qtilde\", return_expected=true\n   ... )\n   >>> print(f\"observed: {cls_obs:.8f}, expected: {cls_exp:.8f}\")\n   observed: 0.35998409, expected: 0.35998409\n\n\nfinally, you can also use the command line interface that ``pyhf`` provides\n\n.. code:: bash\n\n   $ cat << eof  | tee likelihood.json | pyhf cls\n   {\n       \"channels\": [\n           { \"name\": \"singlechannel\",\n             \"samples\": [\n               { \"name\": \"signal\",\n                 \"data\": [12.0, 11.0],\n                 \"modifiers\": [ { \"name\": \"mu\", \"type\": \"normfactor\", \"data\": null} ]\n               },\n               { \"name\": \"background\",\n                 \"data\": [50.0, 52.0],\n                 \"modifiers\": [ {\"name\": \"uncorr_bkguncrt\", \"type\": \"shapesys\", \"data\": [3.0, 7.0]} ]\n               }\n             ]\n           }\n       ],\n       \"observations\": [\n           { \"name\": \"singlechannel\", \"data\": [51.0, 48.0] }\n       ],\n       \"measurements\": [\n           { \"name\": \"measurement\", \"config\": {\"poi\": \"mu\", \"parameters\": []} }\n       ],\n       \"version\": \"1.0.0\"\n   }\n   eof\n\nwhich should produce the following json output:\n\n.. code:: json\n\n   {\n      \"cls_exp\": [\n         0.0026062609501074576,\n         0.01382005356161206,\n         0.06445320535890459,\n         0.23525643861460702,\n         0.573036205919389\n      ],\n      \"cls_obs\": 0.05251497423736956\n   }\n\nwhat does it support\n--------------------\n\nimplemented variations:\n  - \u2611 histosys\n  - \u2611 overallsys\n  - \u2611 shapesys\n  - \u2611 normfactor\n  - \u2611 multiple channels\n  - \u2611 import from xml + root via `uproot <https://github.com/scikit-hep/uproot4>`__\n  - \u2611 shapefactor\n  - \u2611 staterror\n  - \u2611 lumi uncertainty\n  - \u2611 non-asymptotic calculators\n\ncomputational backends:\n  - \u2611 numpy\n  - \u2611 pytorch\n  - \u2611 tensorflow\n  - \u2611 jax\n\noptimizers:\n  - \u2611 scipy (``scipy.optimize``)\n  - \u2611 minuit (``iminuit``)\n\nall backends can be used in combination with all optimizers.\ncustom user backends and optimizers can be used as well.\n\ntodo\n----\n\n-  \u2610 statconfig\n\nresults obtained from this package are validated against output computed\nfrom histfactory workspaces\n\na one bin example\n-----------------\n\n.. code:: python\n\n   import pyhf\n   import numpy as np\n   import matplotlib.pyplot as plt\n   from pyhf.contrib.viz import brazil\n\n   pyhf.set_backend(\"numpy\")\n   model = pyhf.simplemodels.uncorrelated_background(\n       signal=[10.0], bkg=[50.0], bkg_uncertainty=[7.0]\n   )\n   data = [55.0] + model.config.auxdata\n\n   poi_vals = np.linspace(0, 5, 41)\n   results = [\n       pyhf.infer.hypotest(\n           test_poi, data, model, test_stat=\"qtilde\", return_expected_set=true\n       )\n       for test_poi in poi_vals\n   ]\n\n   fig, ax = plt.subplots()\n   fig.set_size_inches(7, 5)\n   brazil.plot_results(poi_vals, results, ax=ax)\n   fig.show()\n\n**pyhf**\n\n.. image:: https://raw.githubusercontent.com/scikit-hep/pyhf/main/docs/_static/img/readme_1bin_example.png\n   :alt: manual\n   :width: 500\n   :align: center\n\n**root**\n\n.. image:: https://raw.githubusercontent.com/scikit-hep/pyhf/main/docs/_static/img/hfh_1bin_55_50_7.png\n   :alt: manual\n   :width: 500\n   :align: center\n\na two bin example\n-----------------\n\n.. code:: python\n\n   import pyhf\n   import numpy as np\n   import matplotlib.pyplot as plt\n   from pyhf.contrib.viz import brazil\n\n   pyhf.set_backend(\"numpy\")\n   model = pyhf.simplemodels.uncorrelated_background(\n       signal=[30.0, 45.0], bkg=[100.0, 150.0], bkg_uncertainty=[15.0, 20.0]\n   )\n   data = [100.0, 145.0] + model.config.auxdata\n\n   poi_vals = np.linspace(0, 5, 41)\n   results = [\n       pyhf.infer.hypotest(\n           test_poi, data, model, test_stat=\"qtilde\", return_expected_set=true\n       )\n       for test_poi in poi_vals\n   ]\n\n   fig, ax = plt.subplots()\n   fig.set_size_inches(7, 5)\n   brazil.plot_results(poi_vals, results, ax=ax)\n   fig.show()\n\n\n**pyhf**\n\n.. image:: https://raw.githubusercontent.com/scikit-hep/pyhf/main/docs/_static/img/readme_2bin_example.png\n   :alt: manual\n   :width: 500\n   :align: center\n\n**root**\n\n.. image:: https://raw.githubusercontent.com/scikit-hep/pyhf/main/docs/_static/img/hfh_2_bin_100.0_145.0_100.0_150.0_15.0_20.0_30.0_45.0.png\n   :alt: manual\n   :width: 500\n   :align: center\n\ninstallation\n------------\n\nto install ``pyhf`` from pypi with the numpy backend run\n\n.. code:: bash\n\n   python -m pip install pyhf\n\nand to install ``pyhf`` with all additional backends run\n\n.. code:: bash\n\n   python -m pip install pyhf[backends]\n\nor a subset of the options.\n\nto uninstall run\n\n.. code:: bash\n\n   python -m pip uninstall pyhf\n\ndocumentation\n-------------\n\nfor model specification, api reference, examples, and answers to faqs visit the |pyhf documentation|_.\n\n.. |pyhf documentation| replace:: ``pyhf`` documentation\n.. _pyhf documentation: https://pyhf.readthedocs.io/\n\nquestions\n---------\n\nif you have a question about the use of ``pyhf`` not covered in `the\ndocumentation <https://pyhf.readthedocs.io/>`__, please ask a question\non the `github discussions <https://github.com/scikit-hep/pyhf/discussions>`__.\n\nif you believe you have found a bug in ``pyhf``, please report it in the\n`github\nissues <https://github.com/scikit-hep/pyhf/issues/new?template=bug-report.md&labels=bug&title=bug+report+:+title+here>`__.\nif you're interested in getting updates from the ``pyhf`` dev team and release\nannouncements you can join the |pyhf-announcements mailing list|_.\n\n.. |pyhf-announcements mailing list| replace:: ``pyhf-announcements`` mailing list\n.. _pyhf-announcements mailing list: https://groups.google.com/group/pyhf-announcements/subscribe\n\ncitation\n--------\n\nas noted in `use and citations <https://scikit-hep.org/pyhf/citations.html>`__,\nthe preferred bibtex entry for citation of ``pyhf`` includes both the\n`zenodo <https://zenodo.org/>`__ archive and the\n`joss <https://joss.theoj.org/>`__ paper:\n\n.. code:: bibtex\n\n   @software{pyhf,\n     author = {lukas heinrich and matthew feickert and giordon stark},\n     title = \"{pyhf: v0.7.5}\",\n     version = {0.7.5},\n     doi = {10.5281/zenodo.1169739},\n     url = {https://doi.org/10.5281/zenodo.1169739},\n     note = {https://github.com/scikit-hep/pyhf/releases/tag/v0.7.5}\n   }\n\n   @article{pyhf_joss,\n     doi = {10.21105/joss.02823},\n     url = {https://doi.org/10.21105/joss.02823},\n     year = {2021},\n     publisher = {the open journal},\n     volume = {6},\n     number = {58},\n     pages = {2823},\n     author = {lukas heinrich and matthew feickert and giordon stark and kyle cranmer},\n     title = {pyhf: pure-python implementation of histfactory statistical models},\n     journal = {journal of open source software}\n   }\n\nauthors\n-------\n\n``pyhf`` is openly developed by lukas heinrich, matthew feickert, and giordon stark.\n\nplease check the `contribution statistics for a list of\ncontributors <https://github.com/scikit-hep/pyhf/graphs/contributors>`__.\n\nmilestones\n----------\n\n- 2022-09-12: 2000 github issues and pull requests. (see pr `#2000 <https://github.com/scikit-hep/pyhf/pull/2000>`__)\n- 2021-12-09: 1000 commits to the project. (see pr `#1710 <https://github.com/scikit-hep/pyhf/pull/1710>`__)\n- 2020-07-28: 1000 github issues and pull requests. (see pr `#1000 <https://github.com/scikit-hep/pyhf/pull/1000>`__)\n\nacknowledgements\n----------------\n\nmatthew feickert has received support to work on ``pyhf`` provided by nsf\ncooperative agreements `oac-1836650 <https://nsf.gov/awardsearch/showaward?awd_id=1836650>`__\nand `phy-2323298 <https://nsf.gov/awardsearch/showaward?awd_id=2323298>`__ (iris-hep)\nand grant `oac-1450377 <https://www.nsf.gov/awardsearch/showaward?awd_id=1450377>`__ (diana/hep).\n\n``pyhf`` is a `numfocus affiliated project <https://numfocus.org/sponsored-projects/affiliated-projects>`__.\n\n.. |github project| image:: https://img.shields.io/badge/github--blue?style=social&logo=github\n   :target: https://github.com/scikit-hep/pyhf\n.. |doi| image:: https://zenodo.org/badge/doi/10.5281/zenodo.1169739.svg\n   :target: https://doi.org/10.5281/zenodo.1169739\n.. |joss doi| image:: https://joss.theoj.org/papers/10.21105/joss.02823/status.svg\n   :target: https://doi.org/10.21105/joss.02823\n.. |scikit-hep| image:: https://scikit-hep.org/assets/images/scikit--hep-project-blue.svg\n   :target: https://scikit-hep.org/\n.. |nsf award number iris-hep v1| image:: https://img.shields.io/badge/nsf-1836650-blue.svg\n   :target: https://nsf.gov/awardsearch/showaward?awd_id=1836650\n.. |nsf award number iris-hep v2| image:: https://img.shields.io/badge/nsf-2323298-blue.svg\n   :target: https://nsf.gov/awardsearch/showaward?awd_id=2323298\n.. |numfocus affiliated project| image:: https://img.shields.io/badge/numfocus-affiliated%20project-orange.svg?style=flat&colora=e1523d&colorb=007d8a\n   :target: https://numfocus.org/sponsored-projects/affiliated-projects\n.. |docs from latest| image:: https://img.shields.io/badge/docs-v0.7.5-blue.svg\n   :target: https://pyhf.readthedocs.io/\n.. |docs from main| image:: https://img.shields.io/badge/docs-main-blue.svg\n   :target: https://scikit-hep.github.io/pyhf\n.. |jupyter book tutorial| image:: https://jupyterbook.org/_images/badge.svg\n   :target: https://pyhf.github.io/pyhf-tutorial/\n.. |binder| image:: https://mybinder.org/badge_logo.svg\n   :target: https://mybinder.org/v2/gh/scikit-hep/pyhf/main?labpath=docs%2fexamples%2fnotebooks%2fbinderexample%2fstatisticalanalysis.ipynb\n\n.. |pypi version| image:: https://badge.fury.io/py/pyhf.svg\n   :target: https://badge.fury.io/py/pyhf\n.. |conda-forge version| image:: https://img.shields.io/conda/vn/conda-forge/pyhf.svg\n   :target: https://prefix.dev/channels/conda-forge/packages/pyhf\n.. |supported python versions| image:: https://img.shields.io/pypi/pyversions/pyhf.svg\n   :target: https://pypi.org/project/pyhf/\n.. |docker hub pyhf| image:: https://img.shields.io/badge/pyhf-v0.7.5-blue?logo=docker\n   :target: https://hub.docker.com/r/pyhf/pyhf/tags\n.. |docker hub pyhf cuda| image:: https://img.shields.io/badge/pyhf-cuda-blue?logo=docker\n   :target: https://hub.docker.com/r/pyhf/cuda/tags\n\n.. |code coverage| image:: https://codecov.io/gh/scikit-hep/pyhf/graph/badge.svg?branch=main\n   :target: https://codecov.io/gh/scikit-hep/pyhf?branch=main\n.. |codefactor| image:: https://www.codefactor.io/repository/github/scikit-hep/pyhf/badge\n   :target: https://www.codefactor.io/repository/github/scikit-hep/pyhf\n.. |pre-commit.ci status| image:: https://results.pre-commit.ci/badge/github/scikit-hep/pyhf/main.svg\n  :target: https://results.pre-commit.ci/latest/github/scikit-hep/pyhf/main\n  :alt: pre-commit.ci status\n.. |code style: black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n\n.. |github actions status: ci| image:: https://github.com/scikit-hep/pyhf/workflows/ci/cd/badge.svg?branch=main\n   :target: https://github.com/scikit-hep/pyhf/actions?query=workflow%3aci%2fcd+branch%3amain\n.. |github actions status: docs| image:: https://github.com/scikit-hep/pyhf/workflows/docs/badge.svg?branch=main\n   :target: https://github.com/scikit-hep/pyhf/actions?query=workflow%3adocs+branch%3amain\n.. |github actions status: publish| image:: https://github.com/scikit-hep/pyhf/workflows/publish%20distributions/badge.svg?branch=main\n   :target: https://github.com/scikit-hep/pyhf/actions?query=workflow%3a%22publish+distributions%22+branch%3amain\n.. |github actions status: docker| image:: https://github.com/scikit-hep/pyhf/actions/workflows/docker.yml/badge.svg?branch=main\n   :target: https://github.com/scikit-hep/pyhf/actions/workflows/docker.yml?query=branch%3amain\n",
  "docs_url": null,
  "keywords": "fitting,jax,numpy,physics,pytorch,scipy,tensorflow",
  "license": "apache-2.0",
  "name": "pyhf",
  "package_url": "https://pypi.org/project/pyhf/",
  "project_url": "https://pypi.org/project/pyhf/",
  "project_urls": {
    "Documentation": "https://pyhf.readthedocs.io/",
    "Homepage": "https://github.com/scikit-hep/pyhf",
    "Issue Tracker": "https://github.com/scikit-hep/pyhf/issues",
    "Release Notes": "https://pyhf.readthedocs.io/en/stable/release-notes.html",
    "Releases": "https://github.com/scikit-hep/pyhf/releases",
    "Source Code": "https://github.com/scikit-hep/pyhf"
  },
  "release_url": "https://pypi.org/project/pyhf/0.7.5/",
  "requires_dist": [
    "click>=8.0.0",
    "importlib-resources>=1.4.0; python_version < '3.9'",
    "jsonpatch>=1.15",
    "jsonschema>=4.15.0",
    "numpy",
    "pyyaml>=5.1",
    "scipy>=1.2.0",
    "tqdm>=4.56.0",
    "typing-extensions>=3.7.4.3; python_version == '3.7'",
    "pyhf[backends,contrib,shellcomplete,xmlio]; extra == 'all'",
    "pyhf[jax,minuit,tensorflow,torch]; extra == 'backends'",
    "matplotlib>=3.0.0; extra == 'contrib'",
    "requests>=2.22.0; extra == 'contrib'",
    "codemetapy>=2.3.0; extra == 'develop'",
    "nox; extra == 'develop'",
    "pre-commit; extra == 'develop'",
    "pyhf[docs,test]; extra == 'develop'",
    "tbump>=6.7.0; extra == 'develop'",
    "ipython!=8.7.0; extra == 'docs'",
    "ipywidgets; extra == 'docs'",
    "jupyterlite-pyodide-kernel>=0.0.7; extra == 'docs'",
    "jupyterlite-sphinx>=0.8.0; extra == 'docs'",
    "jupytext>=1.14.0; extra == 'docs'",
    "nbsphinx!=0.8.8; extra == 'docs'",
    "pyhf[contrib,xmlio]; extra == 'docs'",
    "sphinx-click; extra == 'docs'",
    "sphinx-copybutton!=0.5.1,>=0.3.2; extra == 'docs'",
    "sphinx-issues; extra == 'docs'",
    "sphinx-rtd-theme>=1.3.0; extra == 'docs'",
    "sphinx>=7.0.0; extra == 'docs'",
    "sphinxcontrib-bibtex~=2.1; extra == 'docs'",
    "jax>=0.2.10; extra == 'jax'",
    "jaxlib!=0.1.68,>=0.1.61; extra == 'jax'",
    "iminuit>=2.7.0; extra == 'minuit'",
    "click-completion; extra == 'shellcomplete'",
    "tensorflow-macos>=2.7.0; platform_machine == 'arm64' and platform_system == 'Darwin' and extra == 'tensorflow'",
    "tensorflow-probability!=0.20.0,>=0.11.0; extra == 'tensorflow'",
    "tensorflow>=2.7.0; platform_machine != 'arm64' and extra == 'tensorflow'",
    "graphviz; extra == 'test'",
    "ipympl>=0.3.0; extra == 'test'",
    "jupyter; extra == 'test'",
    "papermill~=2.3.4; extra == 'test'",
    "pydocstyle; extra == 'test'",
    "pyhf[all]; extra == 'test'",
    "pytest-benchmark[histogram]; extra == 'test'",
    "pytest-console-scripts>=1.4.0; extra == 'test'",
    "pytest-cov>=2.5.1; extra == 'test'",
    "pytest-mock; extra == 'test'",
    "pytest-mpl; extra == 'test'",
    "pytest-socket>=0.2.0; extra == 'test'",
    "pytest>=6.0; extra == 'test'",
    "requests-mock>=1.9.0; extra == 'test'",
    "scikit-hep-testdata>=0.4.11; extra == 'test'",
    "scrapbook~=0.5.0; extra == 'test'",
    "torch>=1.10.0; extra == 'torch'",
    "uproot>=4.1.1; extra == 'xmlio'"
  ],
  "requires_python": ">=3.7",
  "summary": "pure-python histfactory implementation with tensors and autodiff",
  "version": "0.7.5",
  "releases": [],
  "developers": [
    "gstark@cern.ch",
    "lukas.heinrich@cern.ch",
    "matthew.feickert@cern.ch",
    "scikit-hep-admins@googlegroups.com"
  ],
  "kwds": "matplotlib jupyterbook scipy numpy python",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_pyhf",
  "homepage": "",
  "release_count": 46,
  "dependency_ids": [
    "pypi_click",
    "pypi_click_completion",
    "pypi_codemetapy",
    "pypi_graphviz",
    "pypi_iminuit",
    "pypi_importlib_resources",
    "pypi_ipympl",
    "pypi_ipython!",
    "pypi_ipywidgets",
    "pypi_jax",
    "pypi_jaxlib!",
    "pypi_jsonpatch",
    "pypi_jsonschema",
    "pypi_jupyter",
    "pypi_jupyterlite_pyodide_kernel",
    "pypi_jupyterlite_sphinx",
    "pypi_jupytext",
    "pypi_matplotlib",
    "pypi_nbsphinx!",
    "pypi_nox",
    "pypi_numpy",
    "pypi_papermill",
    "pypi_pre_commit",
    "pypi_pydocstyle",
    "pypi_pyhf",
    "pypi_pytest",
    "pypi_pytest_benchmark",
    "pypi_pytest_console_scripts",
    "pypi_pytest_cov",
    "pypi_pytest_mock",
    "pypi_pytest_mpl",
    "pypi_pytest_socket",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_requests_mock",
    "pypi_scikit_hep_testdata",
    "pypi_scipy",
    "pypi_scrapbook",
    "pypi_sphinx",
    "pypi_sphinx_click",
    "pypi_sphinx_copybutton!",
    "pypi_sphinx_issues",
    "pypi_sphinx_rtd_theme",
    "pypi_sphinxcontrib_bibtex",
    "pypi_tbump",
    "pypi_tensorflow",
    "pypi_tensorflow_macos",
    "pypi_tensorflow_probability!",
    "pypi_torch",
    "pypi_tqdm",
    "pypi_typing_extensions",
    "pypi_uproot"
  ]
}
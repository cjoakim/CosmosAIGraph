{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: software development :: build tools",
    "topic :: software development :: code generators"
  ],
  "description": "## aws cloudformation resource provider java plugin\n\nthe cloudformation cli (cfn) allows you to author your own resource providers that can be used by cloudformation.\n\nthis plugin library helps to provide java runtime bindings for the execution of your providers by cloudformation.\n\nusage\n-----\n\nif you are using this package to build resource providers for cloudformation, install the [cloudformation cli java plugin](https://github.com/aws-cloudformation/cloudformation-cli-java-plugin) - this will automatically install the the [cloudformation cli](https://github.com/aws-cloudformation/cloudformation-cli)! a python virtual environment is recommended.\n\n**prerequisites**\n\n - python version 3.6 or above\n - your choice of java ide\n - lombok: the code generated by the cloudformation cli uses [lombok](https://projectlombok.org/), which requires support in ides for some syntax highlighting to work. for the best development experience, it is recommended you install lombok support in your ide.\n\n**installation**\n\n```shell\npip3 install cloudformation-cli-java-plugin\n```\n\nrefer to the [cloudformation cli user guide](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-types.html) for the [cloudformation cli](https://github.com/aws-cloudformation/cloudformation-cli) for usage instructions.\n\n### alternate type formats\nthe `format` keyword can be specified on primitive types defined in a resource provider's schema to allow the cloudformation cli java plugin to generate more than the defaults for primitive types. consult the table below for what formats are available and defaults for various types. the `default` value is used if omitted:\n\n| json schema type | format value | generated variable type  |\n| ---- | ----------- | ---------------------- |\n| boolean | `default` | [boolean](https://docs.oracle.com/javase/8/docs/api/java/lang/boolean.html)|\n| integer | `default`, `int32` | [integer](https://docs.oracle.com/javase/8/docs/api/java/lang/integer.html)|\n| integer | `int64` | [long](https://docs.oracle.com/javase/8/docs/api/java/lang/long.html)|\n| number | `default` | [double](https://docs.oracle.com/javase/8/docs/api/java/lang/double.html)|\n| string | `default` | [string](https://docs.oracle.com/javase/8/docs/api/java/lang/string.html)|\n\nfor example, the below schema for a property would generate a variable of type `long`.\n```\n{\n    \"type\": \"integer\",\n    \"format\": \"int64\"\n}\n```\n\n\ndevelopment\n-----------\n\nfor changes to the plugin, a python virtual environment is recommended. check out and install the plugin in editable mode:\n\n```shell\npython3 -m venv env\nsource env/bin/activate\npip3 install -e /path/to/cloudformation-cli-java-plugin\n```\n\nyou may also want to check out the [cloudformation cli](https://github.com/aws-cloudformation/cloudformation-cli) if you wish to make edits to that. in this case, installing them in one operation works well:\n\n```shell\npip3 install \\\n  -e /path/to/cloudformation-cli \\\n  -e /path/to/cloudformation-cli-java-plugin\n```\n\nthat ensures neither is accidentally installed from pypi.\n\nlinting and running unit tests is done via [pre-commit](https://pre-commit.com/), and so is performed automatically on commit after being installed (`pre-commit install`). the continuous integration also runs these checks. manual options are available so you don't have to commit:\n\n```shell\n# run all hooks on all files, mirrors what the ci runs\npre-commit run --all-files\n# run unit tests only. can also be used for other hooks, e.g. black, flake8, pylint-local\npre-commit run pytest-local\n```\n\nlicense\n-------\n\nthis library is licensed under the apache 2.0 license.\n\n\n",
  "docs_url": null,
  "keywords": "amazon web services aws cloudformation",
  "license": "apache license 2.0",
  "name": "cloudformation-cli-java-plugin",
  "package_url": "https://pypi.org/project/cloudformation-cli-java-plugin/",
  "project_url": "https://pypi.org/project/cloudformation-cli-java-plugin/",
  "project_urls": {
    "Homepage": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk-java-plugin/"
  },
  "release_url": "https://pypi.org/project/cloudformation-cli-java-plugin/2.0.18/",
  "requires_dist": [
    "cloudformation-cli >=0.2.23"
  ],
  "requires_python": ">=3.6",
  "summary": "",
  "version": "2.0.18",
  "releases": [],
  "developers": [
    "amazon_web_services",
    "aws-cloudformation-developers@amazon.com"
  ],
  "kwds": "cloudformation aws javase python3 pip3",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_cloudformation_cli_java_plugin",
  "homepage": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk-java-plugin/",
  "release_count": 26,
  "dependency_ids": [
    "pypi_cloudformation_cli"
  ]
}
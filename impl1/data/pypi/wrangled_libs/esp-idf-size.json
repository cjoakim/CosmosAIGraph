{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: embedded systems"
  ],
  "description": "# esp-idf-size\n\nthe ```esp-idf-size``` package is part of the [esp-idf](https://github.com/espressif/esp-idf) sdk for espressif products and is automatically installed.\n\nit is responsible for analyzing firmware binary size of esp-idf projects.\n",
  "docs_url": null,
  "keywords": "espressif,embedded,project,size",
  "license": "",
  "name": "esp-idf-size",
  "package_url": "https://pypi.org/project/esp-idf-size/",
  "project_url": "https://pypi.org/project/esp-idf-size/",
  "project_urls": {
    "Homepage": "https://github.com/espressif/esp-idf-size"
  },
  "release_url": "https://pypi.org/project/esp-idf-size/1.0.2/",
  "requires_dist": [
    "pyyaml",
    "rich",
    "pyelftools",
    "pre-commit ; extra == 'dev'",
    "coverage ; extra == 'dev'",
    "jsonschema ; extra == 'dev'",
    "pytest ; extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "firmware size analysis for esp-idf",
  "version": "1.0.2",
  "releases": [],
  "developers": [
    "espressif_systems"
  ],
  "kwds": "espressif firmware idf sdk esp",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_esp_idf_size",
  "homepage": "https://github.com/espressif/esp-idf-size",
  "release_count": 14,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_jsonschema",
    "pypi_pre_commit",
    "pypi_pyelftools",
    "pypi_pytest",
    "pypi_pyyaml",
    "pypi_rich"
  ]
}
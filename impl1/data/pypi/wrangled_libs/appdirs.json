{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "\n.. image:: https://secure.travis-ci.org/activestate/appdirs.png\n    :target: http://travis-ci.org/activestate/appdirs\n\nthe problem\n===========\n\nwhat directory should your app use for storing user data? if running on mac os x, you\nshould use::\n\n    ~/library/application support/<appname>\n\nif on windows (at least english win xp) that should be::\n\n    c:\\documents and settings\\<user>\\application data\\local settings\\<appauthor>\\<appname>\n\nor possibly::\n\n    c:\\documents and settings\\<user>\\application data\\<appauthor>\\<appname>\n\nfor `roaming profiles <http://bit.ly/9yl3b6>`_ but that is another story.\n\non linux (and other unices) the dir, according to the `xdg\nspec <http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html>`_, is::\n\n    ~/.local/share/<appname>\n\n\n``appdirs`` to the rescue\n=========================\n\nthis kind of thing is what the ``appdirs`` module is for. ``appdirs`` will\nhelp you choose an appropriate:\n\n- user data dir (``user_data_dir``)\n- user config dir (``user_config_dir``)\n- user cache dir (``user_cache_dir``)\n- site data dir (``site_data_dir``)\n- site config dir (``site_config_dir``)\n- user log dir (``user_log_dir``)\n\nand also:\n\n- is a single module so other python packages can include their own private copy\n- is slightly opinionated on the directory names used. look for \"opinion\" in\n  documentation and code for when an opinion is being applied.\n\n\nsome example output\n===================\n\non mac os x::\n\n    >>> from appdirs import *\n    >>> appname = \"superapp\"\n    >>> appauthor = \"acme\"\n    >>> user_data_dir(appname, appauthor)\n    '/users/trentm/library/application support/superapp'\n    >>> site_data_dir(appname, appauthor)\n    '/library/application support/superapp'\n    >>> user_cache_dir(appname, appauthor)\n    '/users/trentm/library/caches/superapp'\n    >>> user_log_dir(appname, appauthor)\n    '/users/trentm/library/logs/superapp'\n\non windows 7::\n\n    >>> from appdirs import *\n    >>> appname = \"superapp\"\n    >>> appauthor = \"acme\"\n    >>> user_data_dir(appname, appauthor)\n    'c:\\\\users\\\\trentm\\\\appdata\\\\local\\\\acme\\\\superapp'\n    >>> user_data_dir(appname, appauthor, roaming=true)\n    'c:\\\\users\\\\trentm\\\\appdata\\\\roaming\\\\acme\\\\superapp'\n    >>> user_cache_dir(appname, appauthor)\n    'c:\\\\users\\\\trentm\\\\appdata\\\\local\\\\acme\\\\superapp\\\\cache'\n    >>> user_log_dir(appname, appauthor)\n    'c:\\\\users\\\\trentm\\\\appdata\\\\local\\\\acme\\\\superapp\\\\logs'\n\non linux::\n\n    >>> from appdirs import *\n    >>> appname = \"superapp\"\n    >>> appauthor = \"acme\"\n    >>> user_data_dir(appname, appauthor)\n    '/home/trentm/.local/share/superapp\n    >>> site_data_dir(appname, appauthor)\n    '/usr/local/share/superapp'\n    >>> site_data_dir(appname, appauthor, multipath=true)\n    '/usr/local/share/superapp:/usr/share/superapp'\n    >>> user_cache_dir(appname, appauthor)\n    '/home/trentm/.cache/superapp'\n    >>> user_log_dir(appname, appauthor)\n    '/home/trentm/.cache/superapp/log'\n    >>> user_config_dir(appname)\n    '/home/trentm/.config/superapp'\n    >>> site_config_dir(appname)\n    '/etc/xdg/superapp'\n    >>> os.environ['xdg_config_dirs'] = '/etc:/usr/local/etc'\n    >>> site_config_dir(appname, multipath=true)\n    '/etc/superapp:/usr/local/etc/superapp'\n\n\n``appdirs`` for convenience\n===========================\n\n::\n\n    >>> from appdirs import appdirs\n    >>> dirs = appdirs(\"superapp\", \"acme\")\n    >>> dirs.user_data_dir\n    '/users/trentm/library/application support/superapp'\n    >>> dirs.site_data_dir\n    '/library/application support/superapp'\n    >>> dirs.user_cache_dir\n    '/users/trentm/library/caches/superapp'\n    >>> dirs.user_log_dir\n    '/users/trentm/library/logs/superapp'\n\n\n\nper-version isolation\n=====================\n\nif you have multiple versions of your app in use that you want to be\nable to run side-by-side, then you may want version-isolation for these\ndirs::\n\n    >>> from appdirs import appdirs\n    >>> dirs = appdirs(\"superapp\", \"acme\", version=\"1.0\")\n    >>> dirs.user_data_dir\n    '/users/trentm/library/application support/superapp/1.0'\n    >>> dirs.site_data_dir\n    '/library/application support/superapp/1.0'\n    >>> dirs.user_cache_dir\n    '/users/trentm/library/caches/superapp/1.0'\n    >>> dirs.user_log_dir\n    '/users/trentm/library/logs/superapp/1.0'\n\n\n\nappdirs changelog\n=================\n\nappdirs 1.4.4\n-------------\n- [pr #92] don't import appdirs from setup.py\n\nproject officially classified as stable which is important\nfor inclusion in other distros such as activepython.\n\nfirst of several incremental releases to catch up on maintenance.\n\nappdirs 1.4.3\n-------------\n- [pr #76] python 3.6 invalid escape sequence deprecation fixes\n- fix for python 3.6 support\n\nappdirs 1.4.2\n-------------\n- [pr #84] allow installing without setuptools\n- [pr #86] fix string delimiters in setup.py description\n- add python 3.6 support\n\nappdirs 1.4.1\n-------------\n- [issue #38] fix _winreg import on windows py3\n- [issue #55] make appname optional\n\nappdirs 1.4.0\n-------------\n- [pr #42] appauthor is now optional on windows\n- [issue 41] support jython on windows, mac, and unix-like platforms. windows\n  support requires `jna <https://github.com/twall/jna>`_.\n- [pr #44] fix incorrect behaviour of the site_config_dir method\n\nappdirs 1.3.0\n-------------\n- [unix, issue 16] conform to xdg standard, instead of breaking it for\n  everybody\n- [unix] removes gratuitous case mangling of the case, since \\*nix-es are\n  usually case sensitive, so mangling is not wise\n- [unix] fixes the utterly wrong behaviour in ``site_data_dir``, return result\n  based on xdg_data_dirs and make room for respecting the standard which\n  specifies xdg_data_dirs is a multiple-value variable\n- [issue 6] add ``*_config_dir`` which are distinct on nix-es, according to\n  xdg specs; on windows and mac return the corresponding ``*_data_dir``\n\nappdirs 1.2.0\n-------------\n\n- [unix] put ``user_log_dir`` under the *cache* dir on unix. seems to be more\n  typical.\n- [issue 9] make ``unicode`` work on py3k.\n\nappdirs 1.1.0\n-------------\n\n- [issue 4] add ``appdirs.user_log_dir``.\n- [unix, issue 2, issue 7] appdirs now conforms to `xdg base directory spec\n  <http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html>`_.\n- [mac, issue 5] fix ``site_data_dir()`` on mac.\n- [mac] drop use of 'carbon' module in favour of hardcoded paths; supports\n  python3 now.\n- [windows] append \"cache\" to ``user_cache_dir`` on windows by default. use\n  ``opinion=false`` option to disable this.\n- add ``appdirs.appdirs`` convenience class. usage:\n\n        >>> dirs = appdirs(\"superapp\", \"acme\", version=\"1.0\")\n        >>> dirs.user_data_dir\n        '/users/trentm/library/application support/superapp/1.0'\n\n- [windows] cherry-pick komodo's change to downgrade paths to the windows short\n  paths if there are high bit chars.\n- [linux] change default ``user_cache_dir()`` on linux to be singular, e.g.\n  \"~/.superapp/cache\".\n- [windows] add ``roaming`` option to ``user_data_dir()`` (for use on windows only)\n  and change the default ``user_data_dir`` behaviour to use a *non*-roaming\n  profile dir (``csidl_local_appdata`` instead of ``csidl_appdata``). why? because\n  a large roaming profile can cause login speed issues. the \"only syncs on\n  logout\" behaviour can cause surprises in appdata info.\n\n\nappdirs 1.0.1 (never released)\n------------------------------\n\nstarted this changelog 27 july 2010. before that this module originated in the\n`komodo <http://www.activestate.com/komodo>`_ product as ``applib.py`` and then\nas `applib/location.py\n<http://github.com/activestate/applib/blob/master/applib/location.py>`_ (used by\n`pypm <http://code.activestate.com/pypm/>`_ in `activepython\n<http://www.activestate.com/activepython>`_). this is basically a fork of\napplib.py 1.0.1 and applib/location.py 1.0.1.\n\n\n\n",
  "docs_url": null,
  "keywords": "application directory log cache user",
  "license": "mit",
  "name": "appdirs",
  "package_url": "https://pypi.org/project/appdirs/",
  "project_url": "https://pypi.org/project/appdirs/",
  "project_urls": {
    "Homepage": "http://github.com/ActiveState/appdirs"
  },
  "release_url": "https://pypi.org/project/appdirs/1.4.4/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a small python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\".",
  "version": "1.4.4",
  "releases": [],
  "developers": [
    "jeff_rouse",
    "jr@its.to",
    "trent_mick",
    "trentm@gmail.com"
  ],
  "kwds": "user_cache_dir csidl_local_appdata user_data_dir travis directory",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_appdirs",
  "homepage": "http://github.com/activestate/appdirs",
  "release_count": 8,
  "dependency_ids": []
}
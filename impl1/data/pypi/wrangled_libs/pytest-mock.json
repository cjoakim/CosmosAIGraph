{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: testing"
  ],
  "description": "===========\npytest-mock\n===========\n\nthis plugin provides a ``mocker`` fixture which is a thin-wrapper around the patching api\nprovided by the `mock package <http://pypi.python.org/pypi/mock>`_:\n\n.. code-block:: python\n\n    import os\n\n    class unixfs:\n\n        @staticmethod\n        def rm(filename):\n            os.remove(filename)\n\n    def test_unix_fs(mocker):\n        mocker.patch('os.remove')\n        unixfs.rm('file')\n        os.remove.assert_called_once_with('file')\n\n\nbesides undoing the mocking automatically after the end of the test, it also provides other\nnice utilities such as ``spy`` and ``stub``, and uses pytest introspection when\ncomparing calls.\n\n|python| |version| |anaconda| |docs| |ci| |coverage| |black| |pre-commit|\n\n.. |version| image:: http://img.shields.io/pypi/v/pytest-mock.svg\n  :target: https://pypi.python.org/pypi/pytest-mock\n\n.. |anaconda| image:: https://img.shields.io/conda/vn/conda-forge/pytest-mock.svg\n    :target: https://anaconda.org/conda-forge/pytest-mock\n\n.. |ci| image:: https://github.com/pytest-dev/pytest-mock/workflows/test/badge.svg\n  :target: https://github.com/pytest-dev/pytest-mock/actions\n\n.. |coverage| image:: https://coveralls.io/repos/github/pytest-dev/pytest-mock/badge.svg?branch=master\n  :target: https://coveralls.io/github/pytest-dev/pytest-mock?branch=master\n\n.. |python| image:: https://img.shields.io/pypi/pyversions/pytest-mock.svg\n  :target: https://pypi.python.org/pypi/pytest-mock/\n\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n  :target: https://github.com/ambv/black\n\n.. |pre-commit| image:: https://results.pre-commit.ci/badge/github/pytest-dev/pytest-mock/master.svg\n   :target: https://results.pre-commit.ci/latest/github/pytest-dev/pytest-mock/master\n\n.. |docs| image:: https://readthedocs.org/projects/pytest-mock/badge/?version=latest\n   :target: https://pytest-mock.readthedocs.io/en/latest/?badge=latest\n\n\n`professionally supported pytest-mock is available <https://tidelift.com/subscription/pkg/pypi-pytest_mock?utm_source=pypi-pytest-mock&utm_medium=referral&utm_campaign=readme>`_.\n\n\ndocumentation\n=============\n\nfor full documentation, please see https://pytest-mock.readthedocs.io/en/latest.\n\nlicense\n=======\n\ndistributed under the terms of the `mit`_ license.\n\n\n.. _mit: https://github.com/pytest-dev/pytest-mock/blob/master/license\n",
  "docs_url": null,
  "keywords": "pytest mock",
  "license": "mit",
  "name": "pytest-mock",
  "package_url": "https://pypi.org/project/pytest-mock/",
  "project_url": "https://pypi.org/project/pytest-mock/",
  "project_urls": {
    "Changelog": "https://pytest-mock.readthedocs.io/en/latest/changelog.html",
    "Documentation": "https://pytest-mock.readthedocs.io/en/latest/",
    "Homepage": "https://github.com/pytest-dev/pytest-mock/",
    "Source": "https://github.com/pytest-dev/pytest-mock/",
    "Tracker": "https://github.com/pytest-dev/pytest-mock/issues"
  },
  "release_url": "https://pypi.org/project/pytest-mock/3.12.0/",
  "requires_dist": [
    "pytest >=5.0",
    "pre-commit ; extra == 'dev'",
    "tox ; extra == 'dev'",
    "pytest-asyncio ; extra == 'dev'"
  ],
  "requires_python": ">=3.8",
  "summary": "thin-wrapper around the mock package for easier use with pytest",
  "version": "3.12.0",
  "releases": [],
  "developers": [
    "bruno_oliveira",
    "nicoddemus@gmail.com"
  ],
  "kwds": "pytest_mock pytest test_unix_fs mock mocking",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pytest_mock",
  "homepage": "https://github.com/pytest-dev/pytest-mock/",
  "release_count": 61,
  "dependency_ids": [
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_tox"
  ]
}
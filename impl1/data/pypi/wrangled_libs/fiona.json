{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: gis"
  ],
  "description": "=====\nfiona\n=====\n\n.. image:: https://github.com/toblerity/fiona/workflows/tests/badge.svg?branch=maint-1.9\n   :target: https://github.com/toblerity/fiona/actions?query=branch%3amaint-1.9\n\nfiona streams simple feature data to and from gis formats like geopackage and\nshapefile.\n\nfiona can read and write real-world data using multi-layered gis formats,\nzipped and in-memory virtual file systems, from files on your hard drive or in\ncloud storage. this project includes python modules and a command line\ninterface (cli).\n\nfiona depends on `gdal <https://gdal.org>`__ but is different from gdal's own\n`bindings <https://gdal.org/api/python_bindings.html>`__. fiona is designed to\nbe highly productive and to make it easy to write code which is easy to read.\n\ninstallation\n============\n\nfiona has several `extension modules\n<https://docs.python.org/3/extending/extending.html>`__ which link against\nlibgdal. this complicates installation. binary distributions (wheels)\ncontaining libgdal and its own dependencies are available from the python\npackage index and can be installed using pip.\n\n.. code-block:: console\n\n    pip install fiona\n\nthese wheels are mainly intended to make installation easy for simple\napplications, not so much for production. they are not tested for compatibility\nwith all other binary wheels, conda packages, or qgis, and omit many of gdal's\noptional format drivers. if you need, for example, gml support you will need to\nbuild and install fiona from a source distribution. it is possible to install\nfiona from source using pip (version >= 22.3) and the `--no-binary` option. a\nspecific gdal installation can be selected by setting the gdal_config\nenvironment variable.\n\n.. code-block:: console\n\n    pip install -u pip\n    pip install --no-binary fiona fiona\n\nmany users find anaconda and conda-forge a good way to install fiona and get\naccess to more optional format drivers (like gml).\n\nfiona 1.9 requires python 3.7 or higher and gdal 3.2 or higher.\n\npython usage\n============\n\nfeatures are read from and written to file-like ``collection`` objects returned\nfrom the ``fiona.open()`` function. features are data classes modeled on the\ngeojson format. they don't have any spatial methods of their own, so if you\nwant to transform them you will need shapely or something like it. here is an\nexample of using fiona to read some features from one data file, change their\ngeometry attributes using shapely, and write them to a new data file.\n\n.. code-block:: python\n\n    import fiona\n    from fiona import feature, geometry\n    from shapely.geometry import mapping, shape\n\n    # open a file for reading. we'll call this the source.\n    with fiona.open(\n        \"zip+https://github.com/toblerity/fiona/files/11151652/coutwildrnp.zip\"\n    ) as src:\n\n        # the file we'll write to must be initialized with a coordinate\n        # system, a format driver name, and a record schema. we can get\n        # initial values from the open source's profile property and then\n        # modify them as we need.\n        profile = src.profile\n        profile[\"schema\"][\"geometry\"] = \"point\"\n        profile[\"driver\"] = \"gpkg\"\n\n        # open an output file, using the same format driver and coordinate\n        # reference system as the source. the profile mapping fills in the\n        # keyword parameters of fiona.open.\n        with fiona.open(\"centroids.gpkg\", \"w\", **profile) as dst:\n\n            # process only the feature records intersecting a box.\n            for feat in src.filter(bbox=(-107.0, 37.0, -105.0, 39.0)):\n\n                # get the feature's centroid.\n                centroid_shp = shape(feat.geometry).centroid\n                new_geom = geometry.from_dict(centroid_shp)\n\n                # write the feature out.\n                dst.write(\n                    feature(geometry=new_geom, properties=f.properties)\n                )\n\n        # the destination's contents are flushed to disk and the file is\n        # closed when its with block ends. this effectively\n        # executes ``dst.flush(); dst.close()``.\n\ncli usage\n=========\n\nfiona's command line interface, named \"fio\", is documented at `docs/cli.rst\n<https://github.com/toblerity/fiona/blob/master/docs/cli.rst>`__. the cli has a\nnumber of different commands. its ``fio cat`` command streams geojson features\nfrom any dataset.\n\n.. code-block:: console\n\n    $ fio cat --compact tests/data/coutwildrnp.shp | jq -c '.'\n    {\"geometry\":{\"coordinates\":[[[-111.73527526855469,41.995094299316406],...]]}}\n    ...\n\ndocumentation\n=============\n\nfor more details about this project, please see:\n\n* fiona `home page <https://github.com/toblerity/fiona>`__\n* `docs and manual <https://fiona.readthedocs.io/>`__\n* `examples <https://github.com/toblerity/fiona/tree/master/examples>`__\n* main `user discussion group <https://fiona.groups.io/g/main>`__\n* `developers discussion group <https://fiona.groups.io/g/dev>`__\n\nchanges\n=======\n\nall issue numbers are relative to https://github.com/toblerity/fiona/issues.\n\n1.9.5 (2023-10-11)\n------------------\n\nbug fixes:\n\n- expand keys in schema mismatch exception, resolving #1278.\n- preserve the null properties and geometry of a feature when serializing\n  (#1276).\n\npackaging:\n\n* builds now require cython >= 3.0.2 (#1276).\n* pypi wheels include gdal 3.6.4, proj 9.0.1, and geos 3.11.2.\n* pypi wheels include curl 8.4.0, addressing cve-2023-38545 and cve-38546.\n* pypi wheels are now available for python 3.12.\n\n1.9.4.post1 (2023-05-23)\n------------------------\n\nextraneous files were unintentionally packaged in the 1.9.4 wheels. this post1\nrelease excludes them so that wheel contents are as in version 1.9.3.\n\n1.9.4 (2023-05-16)\n------------------\n\n- the performance of feature.from_dict() has been improved (#1267).\n- several sources of meaningless log messages from fiona._geometry about null\n  geometries are avoided (#1264).\n- the parquet driver has been added to the list of supported drivers and will\n  be available if your system's gdal library links libarrow. note that fiona\n  wheels on pypi do not include libarrow as it is rather large.\n- ensure that fiona._vendor modules are found and included.\n- bytes type feature properties are now hex encoded when serializing to geojson\n  (#1263).\n- docstrings for listdir and listlayers have been clarified and harmonized.\n- nose style test cases have been converted to unittest.testcase (#1256).\n- the munch package used by fio-filter and fio-calc is now vendored and patched\n  to remove usage of the deprecated pkg_resources module (#1255).\n\n1.9.3 (2023-04-10)\n------------------\n\n- rasterio crs objects are compatible with the collection constructor and are\n  now accepted (#1248).\n- enable append mode for fio-load (#1237).\n- reading a geojson with an empty array property can result in a segmentation\n  fault since version 1.9.0. this has been fixed (#1228).\n\n1.9.2 (2023-03-20)\n------------------\n\n- get command entry points using importlib.metadata (#1220).\n- instead of warning, transform_geom() raises an exception when some points\n  can't be reprojected unless the caller opts in to partial reprojection. this\n  restores the behavior of version 1.8.22.\n- add support for open options to all cli commands that call fiona.open\n  (#1215).\n- fix a memory leak that can occur when iterating over a dataset using strides\n  (#1205).\n- zipmemoryfile now supports zipped gdb data (#1203).\n\n1.9.1 (2023-02-09)\n------------------\n\n- log a warning message when identically named fields are encountered (#1201).\n- avoid dependence on listdir order in tests (#1193).\n- prevent empty geometries arrays from appearing in __geo_interface__ (#1197).\n- setuptools added to pyproject.toml. its pkg_resources module is used by the\n  cli (#1191).\n\n1.9.0 (2023-01-30)\n------------------\n\n- citation.txt has been replaced by a new citation.cff file and the credits\n  have been updated.\n- in setup.py the distutils (deprecated) logger is no longer used.\n\n1.9b2 (2023-01-22)\n------------------\n\n- add feature.__geo_interface__ property (#1181).\n- invalid creation options are filtered and ignored (#1180).\n- the readme doc has been shortened and freshened up, with a modern example for\n  version 1.9.0 (#1174).\n- the geometry class now provides and looks for __geo_interface__ (#1174).\n- the top level fiona module now exports feature, geometry, and properties\n  (#1174).\n- functions that take feature or geometry objects will continue to take dicts\n  or objects that provide __geo_interface__ (#1177). this reverses the\n  deprecation introduced in 1.9a2.\n- python ignores sigpipe by default. by never catching brokenpipeerror via\n  `except exception` when, for example, piping the output of rio-shapes to\n  the unix head program, we avoid getting an unhandled brokenpipeerror message\n  when the interpreter shuts down (#2689).\n\n1.9b1 (2022-12-13)\n------------------\n\nnew features:\n\n* add listdir and listlayers method to io.memoryfile (resolving #754).\n* add support for tin and triangle geometries (#1163).\n* add an allow_unsupported_drivers option to fiona.open() (#1126).\n* added support for the ogr stringlist field type (#1141).\n\nchanges and bug fixes:\n\n* missing and unused imports have been added or removed.\n* make sure that errors aren't lost when a collection can't be saved properly\n  (#1169).\n* ensure that zipmemoryfile have the proper gdal name after creation so that we\n  can use listdir() (#1092).\n* the fiona._loading module, which supports dll loading on windows,\n  has been moved into __init__.py and is no longer used anywhere else (#1168).\n* move project metadata to pyproject.toml (#1165).\n* update drvsupport.py to reflect new format capabilities in gdal 3.6.0\n  (#1122).\n* remove debug logging from env and _env modules.\n\n1.9a3 (2022-10-17)\n------------------\n\npackaging:\n\n* builds now require cython >= 0.29.29 because of\n* https://github.com/cython/cython/issues/4609 (see #1143).\n* pypi wheels now include gdal 3.5.2, proj 9.0.1, and geos 3.11.0.\n* pypi wheels are now available for python 3.11.\n\n1.9a2 (2022-06-10)\n------------------\n\ndeprecations:\n\n- fiona's api methods will accept feature and geometry dicts in 1.9.0, but this\n  usage is deprecated. instances of feature and geometry will be required in\n  2.0.\n- the precision keyword argument of fiona.transform.transform_geom is\n  deprecated and will be removed in version 2.0.\n- deprecated usage has been eliminated in the project. fiona's tests pass when\n  run with a -werror::deprecationwarning filter.\n\nchanges:\n\n- fiona's fionadeprecationwarning now sub-classes deprecationwarning.\n- some test modules have beeen re-formatted using black.\n\nnew features:\n\n- fiona collections now carry a context exit stack into which we can push fiona\n  envs and memoryfiles (#1059).\n- fiona has a new crs class, like rasterio's, which is compatible with the crs\n  dicts of previous versions (#714).\n\n1.9a1 (2022-05-19)\n------------------\n\ndeprecations:\n\n- the fiona.drivers() function has been deprecated and will be removed in\n  version 2.0. it should be replaced by fiona.env().\n- the new fiona.meta module will be renamed to fiona.drivers in version 2.0.\n\npackaging:\n\n- source distributions contain no c source files and require cython to create\n  them from .pyx files (#1096).\n\nchanges:\n\n- shims for various versions of gdal have been removed and are replaced by\n  cython compilation conditions (#1093).\n- use of curl_ca_bundle environment variable is replaced by a more specific\n  gdal/proj_curl_ca_bundle (#1095).\n- fiona's feature accessors now return instances of fiona.model.feature instead\n  of python dicts (#787). the feature class is compatible with code that\n  expects geojson-like dicts but also provides id, geometry, and properties\n  attributes. the last two of these are instances of fiona.model.geometry and\n  fiona.model.properties.\n- gdal 3.1.0 is the minimum gdal version.\n- drop python 2, and establish python 3.7 as the minimum version (#1079).\n- remove six and reduce footprint of fiona.compat (#985).\n\nnew features:\n\n- the appropriate format driver can be detected from filename in write mode (#948).\n- driver metadata including dataset open and dataset and layer creations\n  options are now exposed through methods of the fiona.meta module (#950).\n- crs wkt format support (#979).\n- add 'where' sql clause to set attribute filter (#961, #1097).\n\nbug fixes:\n\n- env and session classes have been updated for parity with rasterio and to\n  resolve a credential refresh bug (#1055).\n\n1.8.21 (2022-02-07)\n-------------------\n\nchanges:\n\n- driver mode support tests have been made more general and less susceptible to\n  driver quirks involving feature fields and coordinate values (#1060).\n- oserror is raised on attempts to open a dataset in a python file object in\n  \"a\" mode (see #1027).\n- upgrade attrs, cython, etc to open up python 3.10 support (#1049).\n\nbug fixes:\n\n- allow fieldskiplogfilter to handle exception messages as well as strings\n  (reported in #1035).\n- clean up vsi files left by memoryfilebase, resolving #1041.\n- hard-coded \"utf-8\" collection encoding added in #423 has been removed\n  (#1057).\n\n1.8.20 (2021-05-31)\n-------------------\n\npackaging:\n\n- wheels include gdal 3.3.0 and geos 3.9.1.\n\nbug fixes:\n\n- allow use with click 8 and higher (#1015).\n\n1.8.19 (2021-04-07)\n-------------------\n\npackaging:\n\n- wheels include gdal 3.2.1 and proj 7.2.1.\n\nbug fixes:\n\n- in fiona/env.py the gdal data path is now configured using set_gdal_config\n  instead by setting the gdal_data environment variable (#1007).\n- spurious iterator reset warnings have been eliminatged (#987).\n\n1.8.18 (2020-11-17)\n-------------------\n\n- the precision option of transform has been fixed for the case of\n  geometrycollections (#971, #972).\n- added missing --co (creation) option to fio-load (#390).\n- if the certifi package can be imported, its certificate store location will\n  be passed to gdal during import of fiona._env unless curl_ca_bundle is\n  already set.\n- warn when feature fields named \"\" are found (#955).\n\n1.8.17 (2020-09-09)\n-------------------\n\n- to fix issue #952 the fio-cat command no longer cuts feature geometries at\n  the anti-meridian by default. a --cut-at-antimeridian option has been added\n  to allow cutting of geometries in a geographic destination coordinate\n  reference system.\n\n1.8.16 (2020-09-04)\n-------------------\n\n- more ogr errors and warnings arising in calls to gdal c api functions are\n  surfaced (#946).\n- a circular import introduced in some cases in 1.8.15 has been fixed (#945).\n\n1.8.15 (2020-09-03)\n-------------------\n\n- change shim functions to not return tuples (#942) as a solution for the\n  packaging problem reported in #941.\n- raise a python exception when vsifopenl fails (#937).\n\n1.8.14 (2020-08-31)\n-------------------\n\n- when creating a new collection in a memoryfile with a default (random) name\n  fiona will attempt to use a format driver-supported file extension (#934).\n  when initializing a memoryfile with bytes of data formatted for a vector\n  driver that requires a certain file name or extension, the user should\n  continue to pass an appropriate filename and/or extension.\n- read support for flatgeobuf has been enabled in the drvsupport module.\n- the memoryfile implementation has been improved so that it can support multi-part\n  s3 downloads (#906). this is largely a port of code from rasterio.\n- axis ordering for results of fiona.transform was wrong when crs were passed\n  in the \"epsg:dddd\" form (#919). this has been fixed by (#926).\n- allow implicit access to the only dataset in a zipmemoryfile. the path\n  argument of zipmemoryfile.open() is now optional (#928).\n- improve support for datetime types: support milliseconds (#744), timezones (#914)\n  and improve warnings if type is not supported by driver (#572).\n- fix \"failed to commit transaction\" transactionerror for filegdb driver.\n- load gdal dll dependencies on python 3.8+ / windows with add_dll_directory() (#851).\n- do not require optional properties (#848).\n- ensure that slice does not overflow available data (#884).\n- resolve issue when \"error 4: unable to open epsg support file gcs.csv.\" is raised on\n  importing fiona (#897).\n- resolve issue resulting in possible mixed up fields names (affecting only dxf, gpx,\n  gpstrackmacker and dgn driver) (#916).\n- ensure crs_wkt is passed when writing to memoryfile (#907).\n\n\n1.8.13.post1 (2020-02-21)\n-------------------------\n\n- this release is being made to improve binary wheel compatibility with shapely\n  1.7.0. there have been no changes to the fiona package code since 1.8.13.\n\n1.8.13 (2019-12-05)\n-------------------\n\n- the python version specs for argparse and ordereddict in 1.8.12 were wrong\n  and have been corrected (#843).\n\n1.8.12 (2019-12-04)\n-------------------\n\n- specify python versions for argparse, enum34, and ordereddict requirements\n  (#842).\n\n1.8.11 (2019-11-07)\n-------------------\n\n- fix an access violation on windows (#826).\n\n1.8.10 (2019-11-07)\n-------------------\n\ndeprecations:\n\n- use of vfs keyword argument with open or listlayers has been previously noted\n  as deprecated, but now triggers a deprecation warning.\n\nbug fixes:\n\n- fiona.open() can now create new datasets using crs urns (#823).\n- listlayers() now accepts file and path objects, like open() (#825).\n- use new set_proj_search_path() function to set the proj data search path. for\n  gdal versions before 3.0 this sets the proj_lib environment variable. for\n  gdal version 3.0 this calls osrsetprojsearchpaths(), which overrides\n  proj_lib.\n- remove old and unused _drivers extension module.\n- check for header.dxf file instead of pcs.csv when looking for installed gdal\n  data. the latter is gone with gdal 3.0 but the former remains (#818).\n\n1.8.9.post2 (2019-10-22)\n------------------------\n\n- the 1.8.9.post1 release introduced a bug affecting builds of the package from\n  a source distribution using gdal 2.x. this bug has been fixed in commit\n  960568d.\n\n1.8.9.post1 (2019-10-22)\n------------------------\n\n- a change has been made to the package setup script so that the shim module\n  for gdal 3 is used when building the package from a source distribution.\n  there are no other changes to the package.\n\n1.8.9 (2019-10-21)\n------------------\n\n- a shim module and support for gdal 3.0 has been added. the package can now be\n  built and used with gdal 3.0 and proj 6.1 or 6.2. note that the 1.8.9 wheels\n  we will upload to pypi will contain gdal 2.4.2 and proj 4.9.3 as in the 1.8.8\n  wheels.\n\n1.8.8 (2019-09-25)\n------------------\n\n- the schema of geopackage files with a geometry type code of 3000 could not be\n  reported using fiona 1.8.7. this bug is fixed.\n\n1.8.7 (2019-09-24)\n------------------\n\nbug fixes:\n\n- regression in handling of polygons with m values noted under version 1.8.5\n  below was in fact not fixed then (see new report #789), but is fixed in\n  version 1.8.7.\n- windows filenames containing \"!\" are now parsed correctly, fixing issue #742.\n\nupcoming changes:\n\n- in version 1.9.0, the objects yielded when a collection is iterated will be\n  mutable mappings but will no longer be instances of python's dict. version\n  1.9 is intended to be backwards compatible with 1.8 except where user code\n  tests `isinstance(feature, dict)`. in version 2.0 the new feature, geometry,\n  and properties classes will become immutable mappings. see\n  https://github.com/toblerity/fiona-rfc/blob/master/rfc/0001-fiona-2-0-changes.md\n  for more discussion of the upcoming changes for version 2.0.\n\n1.8.6 (2019-03-18)\n------------------\n\n- the advertisement for json driver enablement in 1.8.5 was false (#176), but\n  in this release they are ready for use.\n\n1.8.5 (2019-03-15)\n------------------\n\n- gdal seems to work best if gdal_data is set as early as possible. ideally it\n  is set when building the library or in the environment before importing\n  fiona, but for wheels we patch gdal_data into os.environ when fiona.env\n  is imported. this resolves #731.\n- a combination of bugs which allowed .cpg files to be overlooked has been\n  fixed (#726).\n- on entering a collection context (collection.__enter__) a new anonymous gdal\n  environment is created if needed and entered. this makes `with\n  fiona.open(...) as collection:` roughly equivalent to `with fiona.open(...)\n  as collection, env():`. this helps prevent bugs when collections are created\n  and then used later or in different scopes.\n- missing gdal support for topojson, geojsonseq, and esrijson has been enabled\n  (#721).\n- a regression in handling of polygons with m values (#724) has been fixed.\n- per-feature debug logging calls in ogrfeaturebuilder methods have been\n  eliminated to improve feature writing performance (#718).\n- native support for datasets in google cloud storage identified by \"gs\"\n  resource names has been added (#709).\n- support has been added for triangle, polyhedral surface, and tin geometry\n  types (#679).\n- notes about using the memoryfile and zipmemoryfile classes has been added to\n  the manual (#674).\n\n1.8.4 (2018-12-10)\n------------------\n\n- 3d geometries can now be transformed with a specified precision (#523).\n- a bug producing a spurious driversupporterror for shapefiles with a \"time\"\n  field (#692) has been fixed.\n- patching of the gdal_data environment variable was accidentally left in place\n  in 1.8.3 and now has been removed.\n\n1.8.3 (2018-11-30)\n------------------\n\n- the rasterio_env config environment marker this project picked up from\n  rasterio has been renamed to fiona_env (#665).\n- options --gdal-data and --proj-data have been added to the fio-env command so\n  that users of rasterio wheels can get paths to set gdal_data and proj_lib\n  environment variables.\n- the unsuccessful attempt to make gdal and proj support file discovery and\n  configuration automatic within collection's crs and crs_wkt properties has\n  been reverted.  users must execute such code inside a `with env()` block or\n  set the gdal_data and proj_lib environment variables needed by gdal.\n\n1.8.2 (2018-11-19)\n------------------\n\nbug fixes:\n\n- raise fionavalueerror when an iterator's __next__ is called and the session\n  is found to be missing or inactive instead of passing a null pointer to\n  ogr_l_getnextfeature (#687).\n\n1.8.1 (2018-11-15)\n------------------\n\nbug fixes:\n\n- add checks around osrgetauthorityname and osrgetauthoritycode calls that will\n  log problems with looking up these items.\n- opened data sources are now released before we raise exceptions in\n  writingsession.start (#676). this fixes an issue with locked files on\n  windows.\n- we now ensure that an env instance exists when getting the crs or crs_wkt\n  properties of a collection (#673, #690). otherwise, required gdal and proj\n  data files included in fiona wheels can not be found.\n- gdal and proj data search has been refactored to improve testability (#678).\n- in the project's cython code, void* pointers have been replaced with proper\n  gdal types (#672).\n- pervasive warning level log messages about encoding creation options (#668)\n  have been eliminated.\n\n1.8.0 (2018-10-31)\n------------------\n\nthis is the final 1.8.0 release. thanks, everyone!\n\nbug fixes:\n\n- we cpdef session.stop so that it has a c version that can be called safely\n  from __dealloc__, fixing a pypy issue (#659, #553).\n\n1.8rc1 (2018-10-26)\n-------------------\n\nthere are no changes in 1.8rc1 other than more test standardization and the\nintroduction of a temporary test_collection_legacy.py module to support the\nbuild of fully tested python 2.7 macosx wheels on travis-ci.\n\n1.8b2 (2018-10-23)\n------------------\n\nbug fixes:\n\n- the ensure_env_with_credentials decorator will no longer clobber credentials\n  of the outer environment. this fixes a bug reported to the rasterio project\n  and which also existed in fiona.\n- an unused import of the packaging module and the dependency have been \n  removed (#653).\n- the env class logged to the 'rasterio' hierarchy instead of 'fiona'. this\n  mistake has been corrected (#646).\n- the mapping abstract base class is imported from collections.abc when\n  possible (#647).\n\nrefactoring:\n\n- standardization of the tests on pytest functions and fixtures continues and\n  is nearing completion (#648, #649, #650, #651, #652).\n\n1.8b1 (2018-10-15)\n------------------\n\ndeprecations:\n\n- collection slicing has been deprecated and will be prohibited in a future\n  version.\n\nbug fixes:\n\n- rasterio crs objects passed to transform module methods will be converted\n  to dicts as needed (#590).\n- implicitly convert curve geometries to their linear approximations rather\n  than failing (#617).\n- migrated unittest test cases in test_collection.py and test_layer.py to the\n  use of the standard data_dir and path_coutwildrnp_shp fixtures (#616).\n- root logger configuration has been removed from all test scripts (#615).\n- an aws session is created for the cli context env only if explicitly\n  requested, matching the behavior of rasterio's cli (#635).\n- dependency on attrs is made explicit.\n- other dependencies are pinned to known good versions in requirements files.\n- unused arguments have been removed from the env constructor (#637).\n\nrefactoring:\n\n- a with_context_env decorator has been added and used to set up the gdal\n  environment for cli commands. the command functions themselves are now\n  simplified.\n\n1.8a3 (2018-10-01)\n------------------\n\ndeprecations:\n\n- the ``fiona.drivers()`` context manager is officially deprecated. all\n  users should switch to ``fiona.env()``, which registers format drivers and\n  manages gdal configuration in a reversible manner.\n\nbug fixes:\n\n- the collection class now filters log messages about skipped fields to\n  a maximum of one warning message per field (#627).\n- the boto3 module is only imported when needed (#507, #629).\n- compatibility with click 7.0 is achieved (#633).\n- use of %r instead of %s in a debug() call prevents unicodedecodeerrors\n  (#620).\n\n1.8a2 (2018-07-24)\n------------------\n\nnew features:\n\n- 64-bit integers are the now the default for int type fields (#562, #564).\n- 'http', 's3', 'zip+http', and 'zip+s3' uri schemes for datasets are now\n  supported (#425, #426).\n- we've added a ``memoryfile`` class which supports formatted in-memory\n  feature collections (#501).\n- added support for gdal 2.x boolean field sub-type (#531).\n- a new ``fio rm`` command makes it possible to cleanly remove multi-file\n  datasets (#538).\n- the geometry type in a feature collection is more flexible. we can now\n  specify not only a single geometry type, but a sequence of permissible types,\n  or \"any\" to permit any geometry type (#539).\n- support for gdal 2.2+ null fields has been added (#554).\n- the new ``gdal_open_vector()`` function of our internal api provides much\n  improved error handling (#557).\n\nbug fixes:\n\n- the bug involving ordereddict import on python 2.7 has been fixed (#533).\n- an ``attributeerror`` raised when the ``--bbox`` option of fio-cat is used\n  with more than one input file has been fixed (#543, #544).\n- obsolete and derelict fiona.tool module has been removed.\n- revert the change in 0a2bc7c that discards z in geometry types when a\n  collection's schema is reported (#541).\n- require six version 1.7 or higher (#550).\n- a regression related to \"zip+s3\" uris has been fixed.\n- debian's gdal data locations are now searched by default (#583).\n\n1.8a1 (2017-11-06)\n------------------\n\nnew features:\n\n- each call of ``writerecords()`` involves one or more transactions of up to\n  20,000 features each. this improves performance when writing geopackage files\n  as the previous transaction size was only 200 features (#476, #491).\n\npackaging:\n\n- fiona's cython source files have been refactored so that there are no longer\n  separate extension modules for gdal 1.x and gdal 2.x. instead there is a base\n  extension module based on gdal 2.x and shim modules for installations that\n  use gdal 1.x.\n\n1.7.11.post1 (2018-01-08)\n-------------------------\n\n- this post-release adds missing expat (and thereby gpx format) support to\n  the included gdal library (still version 2.2.2).\n\n1.7.11 (2017-12-14)\n-------------------\n\n- the ``encoding`` keyword argument for ``fiona.open()``, which is intended\n  to allow a caller to override a data source's own and possibly erroneous\n  encoding, has not been working (#510, #512). the problem is that we weren't\n  always setting gdal open or config options before opening the data sources.\n  this bug is resolved by a number of commits in the maint-1.7 branch and\n  the fix is demonstrated in tests/test_encoding.py.\n- an ``--encoding`` option has been added to fio-load to enable creation of\n  encoded shapefiles with an accompanying .cpg file (#499, #517).\n\n1.7.10.post1 (2017-10-30)\n-------------------------\n\n- a post-release has been made to fix a problem with macosx wheels uploaded\n  to pypi.\n\n1.7.10 (2017-10-26)\n-------------------\n\nbug fixes:\n\n- an extraneous printed line from the ``rio cat --layers`` validator has been\n  removed (#478).\n\npackaging:\n\n- official os x and manylinux1 wheels (on pypi) for this release will be\n  compatible with shapely 1.6.2 and rasterio 1.0a10 wheels.\n\n1.7.9.post1 (2017-08-21)\n------------------------\n\nthis release introduces no changes in the fiona package. it upgrades gdal\nfrom 2.2.0 to 2.2.1 in wheels that we publish to the python package index.\n\n1.7.9 (2017-08-17)\n------------------\n\nbug fixes:\n\n- acquire the gil for gdal error callback functions to prevent crashes when\n  gdal errors occur when the gil has been released by user code.\n- sync and flush layers when closing even when the number of features is not\n  precisely known (#467).\n\n1.7.8 (2017-06-20)\n------------------\n\nbug fixes:\n\n- provide all arguments needed by cplerror based exceptions (#456).\n\n1.7.7 (2017-06-05)\n------------------\n\nbug fixes:\n\n- switch logger `warn()` (deprecated) calls to `warning()`.\n- replace all relative imports and cimports in cython modules with absolute\n  imports (#450).\n- avoid setting `proj_lib` to a non-existent directory (#439).\n\n1.7.6 (2017-04-26)\n------------------\n\nbug fixes:\n\n- fall back to `share/proj` for proj_lib (#440).\n- replace every call to `osrdestroyspatialreference()` with `osrrelease()`,\n  fixing the gpkg driver crasher reported in #441 (#443).\n- add a `driverioerror` derived from `ioerror` to use for driver-specific\n  errors such as the geojson driver's refusal to overwrite existing files.\n  also we now ensure that when this error is raised by `fiona.open()` any\n  created read or write session is deleted, this eliminates spurious \n  exceptions on teardown of broken `collection` objects (#437, #444).\n\n1.7.5 (2017-03-20)\n------------------\n\nbug fixes:\n\n- opening a data file in read (the default) mode with `fiona.open()` using the\n  the `driver` or `drivers` keyword arguments (to specify certain format \n  drivers) would sometimes cause a crash on windows due to improperly\n  terminated lists of strings (#428). the fix: fiona's buggy `string_list()`\n  has been replaced by gdal's `csladdstring()`.\n\n1.7.4 (2017-02-20)\n------------------\n\nbug fixes:\n\n- ogr's esrijson detection fails when certain keys aren't found in the first\n  6000 bytes of data passed to `bytescollection` (#422). a .json file extension\n  is now explicitly given to the in-memory file behind `bytescollection` when\n  the `driver='geojson'` keyword argument is given (#423). \n\n1.7.3 (2017-02-14)\n------------------\n\nroses are red.\ntan is a pug.\nsoftware regression's\nthe most embarrassing bug.\n\nbug fixes:\n\n- use __stdcall for gdal error handling callback on windows as in rasterio.\n- turn on latent support for zip:// urls in rio-cat and rio-info (#421).\n- the 1.7.2 release broke support for zip files with absolute paths (#418).\n  this regression has been fixed with tests to confirm.\n\n1.7.2 (2017-01-27)\n------------------\n\nfuture deprecation:\n\n- `collection.__next__()` is buggy in that it can lead to duplication of \n  features when used in combination with `collection.filter()` or\n  `collection.__iter__()`. it will be removed in fiona 2.0. please check for\n  usage of this deprecated feature by running your tests or programs with\n  `pythonwarnings=\"always:::fiona\"` or `-w\"always:::fiona\"` and switch from\n  `next(collection)` to `next(iter(collection))` (#301).\n\nbug fix:\n\n- zipped streams of bytes can be accessed by `bytescollection` (#318).\n\n1.7.1.post1 (2016-12-23)\n------------------------\n- new binary wheels using version 1.2.0 of sgillies/frs-wheel-builds. see\n  https://github.com/sgillies/frs-wheel-builds/blob/master/changes.txt.\n\n1.7.1 (2016-11-16)\n------------------\n\nbug fixes:\n\n- prevent fiona from stumbling over 'z', 'm', and 'zm' geometry types\n  introduced in gdal 2.1 (#384). fiona 1.7.1 doesn't add explicit support for\n  these types, they are coerced to geometry types 1-7 ('point', 'linestring',\n  etc.)\n- raise an `unsupportedgeometrytypeerror` when a bogus or unsupported \n  geometry type is encountered in a new collection's schema or elsewhere\n  (#340).\n- enable `--precision 0` for fio-cat (#370).\n- prevent datetime exceptions from unnecessarily stopping collection iteration\n  by yielding `none` (#385)\n- replace log.warn calls with log.warning calls (#379).\n- print an error message if neither gdal-config or `--gdalversion` indicate\n  a gdal c api version when running `setup.py` (#364).\n- let dict-like subclasses through crs type checks (#367).\n\n1.7.0post2 (2016-06-15)\n-----------------------\n\npackaging: define extension modules for 'clean' and 'config' targets (#363).\n\n1.7.0post1 (2016-06-15)\n-----------------------\n\npackaging: no files are copied for the 'clean' setup target (#361, #362).\n\n1.7.0 (2016-06-14)\n------------------\n\nthe c extension modules in this library can now be built and used with either\na 1.x or 2.x release of the gdal library. big thanks to ren\u00e9 buffat for\nleading this effort.\n\nrefactoring:\n\n- the `ogrext1.pyx` and `ogrext2.pyx` files now use separate\n  c apis defined in `ogrext1.pxd` and `ogrex2.pxd`. the other extension\n  modules have been refactored so that they do not depend on either of these\n  modules and use subsets of the gdal/ogr api compatible with both gdal 1.x and\n  2.x (#359).\n\npackaging:\n\n- source distributions now contain two different sources for the\n  `ogrext` extension module. the `ogrext1.c` file will be used with gdal 1.x\n  and the `ogrext2.c` file will be used with gdal 2.x.\n\n1.7b2 (2016-06-13)\n------------------\n\n- new feature: enhancement of the `--layer` option for fio-cat and fio-dump\n  to allow separate layers of one or more multi-layer input files to be\n  selected (#349).\n\n1.7b1 (2016-06-10)\n------------------\n\n- new feature: support for gdal version 2+ (#259).\n- new feature: a new fio-calc cli command (#273).\n- new feature: `--layer` options for fio-info (#316) and fio-load (#299).\n- new feature: a `--no-parse` option for fio-collect that lets a careful user\n  avoid extra json serialization and deserialization (#306).\n- bug fix: `+wktext` is now preserved when serializing crs from wkt to proj.4\n  dicts (#352).\n- bug fix: a small memory leak when opening a collection has been fixed (#337).\n- bug fix: internal unicode errors now result in a log message and a \n  `unicodeerror` exception, not a `typeerror` (#356).\n\n1.6.4 (2016-05-06)\n------------------\n- raise importerror if the active gdal library version is >= 2.0 instead of\n  failing unpredictably (#338, #341). support for gdal>=2.0 is coming in\n  fiona 1.7.\n\n1.6.3.post1 (2016-03-27)\n------------------------\n- no changes to the library in this post-release version, but there is a\n  significant change to the distributions on pypi: to help make fiona more\n  compatible with shapely on os x, the gdal shared library included in the\n  macosx (only) binary wheels now statically links the geos library. see\n  https://github.com/sgillies/frs-wheel-builds/issues/5.\n\n1.6.3 (2015-12-22)\n------------------\n- daytime has been decreasing in the northern hemisphere, but is now\n  increasing again as it should.\n- non-utf strings were being passed into ogr functions in some situations\n  and on windows this would sometimes crash a python process (#303). fiona\n  now raises errors derived from unicodeerror when field names or field\n  values can't be encoded.\n\n1.6.2 (2015-09-22)\n------------------\n- providing only proj4 representations in the dataset meta property resulted in\n  loss of crs information when using the `fiona.open(..., **src.meta) as dst`\n  pattern (#265). this bug has been addressed by adding a crs_wkt item to the`\n  meta property and extending the `fiona.open()` and the collection constructor\n  to look for and prioritize this keyword argument.\n\n1.6.1 (2015-08-12)\n------------------\n- bug fix: fiona now deserializes json-encoded string properties provided by\n  the ogr geojson driver (#244, #245, #246).\n- bug fix: proj4 data was not copied properly into binary distributions due to\n  a typo (#254).\n\nspecial thanks to wfmu dj liz berg for the awesome playlist that's fueling my\nrelease sprint. check it out at https://wfmu.org/playlists/shows/62083. you\ncan't unhear love coffin.\n\n1.6.0 (2015-07-21)\n------------------\n- upgrade cython requirement to 0.22 (#214).\n- new bytescollection class (#215).\n- add gdal's openfilegdb driver to registered drivers (#221).\n- implement cli commands as plugins (#228).\n- raise click.abort instead of calling sys.exit, preventing suprising exits\n  (#236).\n\n1.5.1 (2015-03-19)\n------------------\n- restore test data to sdists by fixing manifest.in (#216).\n\n1.5.0 (2015-02-02)\n------------------\n- finalize geojson feature sequence options (#174).\n- fix for reading of datasets that don't support feature counting (#190).\n- new test dataset (#188).\n- fix for encoding error (#191).\n- remove confusing warning (#195).\n- add data files for binary wheels (#196).\n- add control over drivers enabled when reading datasets (#203).\n- use cligj for cli options involving geojson (#204).\n- fix fio-info --bounds help (#206).\n\n1.4.8 (2014-11-02)\n------------------\n- add missing crs_wkt property as in rasterio (#182).\n\n1.4.7 (2014-10-28)\n------------------\n- fix setting of crs from epsg codes (#149).\n\n1.4.6 (2014-10-21)\n------------------\n- handle 3d coordinates in bounds() #178.\n\n1.4.5 (2014-10-18)\n------------------\n- add --bbox option to fio-cat (#163).\n- skip geopackage tests if run from an sdist (#167).\n- add fio-bounds and fio-distrib.\n- restore fio-dump to working order.\n\n1.4.4 (2014-10-13)\n------------------\n- fix accidental requirement on gdal 1.11 introduced in 1.4.3 (#164).\n\n1.4.3 (2014-10-10)\n------------------\n- add support for geopackage format (#160).\n- add -f and --format aliases for --driver in cli (#162).\n- add --version option and env command to cli.\n\n1.4.2 (2014-10-03)\n------------------\n- --dst-crs and --src-crs options for fio cat and collect (#159).\n\n1.4.1 (2014-09-30)\n------------------\n- fix encoding bug in collection's __getitem__ (#153).\n\n1.4.0 (2014-09-22)\n------------------\n- add fio cat and fio collect commands (#150).\n- return of python 2.6 compatibility (#148).\n- improved crs support (#149).\n\n1.3.0 (2014-09-17)\n------------------\n- add single metadata item accessors to fio inf (#142).\n- move fio to setuptools entry point (#142).\n- add fio dump and load commands (#143).\n- remove fio translate command.\n\n1.2.0 (2014-09-02)\n------------------\n- always show property width and precision in schema (#123).\n- write datetime properties of features (#125).\n- reset spatial filtering in filter() (#129).\n- accept datetime.date objects as feature properties (#130).\n- add slicing to collection iterators (#132).\n- add geometry object masks to collection iterators (#136).\n- change source layout to match shapely and rasterio (#138).\n\n1.1.6 (2014-07-23)\n------------------\n- implement collection __getitem__() (#112).\n- leave gdal finalization to the dll's destructor (#113).\n- add collection keys(), values(), items(), __contains__() (#114).\n- crs bug fix (#116).\n- add fio cli program.\n  \n1.1.5 (2014-05-21)\n------------------\n- addition of cpl_errs context manager (#108).\n- check for nulls with '==' test instead of 'is' (#109).\n- open auxiliary files with encoding='utf-8' in setup for python 3 (#110).\n\n1.1.4 (2014-04-03)\n------------------\n- convert 'long' in schemas to 'int' (#101).\n- carefully map python schema to the possibly munged internal schema (#105).\n- allow writing of features with geometry: none (#71).\n\n1.1.3 (2014-03-23)\n------------------\n- always register all gdal and ogr drivers when entering the drivermanager\n  context (#80, #92).\n- skip unsupported field types with a warning (#91).\n- allow ogr config options to be passed to fiona.drivers() (#90, #93).\n- add a bounds() function (#100).\n- turn on gpx driver.\n\n1.1.2 (2014-02-14)\n------------------\n- remove collection slice left in dumpgj (#88).\n\n1.1.1 (2014-02-02)\n------------------\n- add an interactive file inspector like the one in rasterio.\n- crs to_string bug fix (#83).\n\n1.1 (2014-01-22)\n----------------\n- use a context manager to manage drivers (#78), a backwards compatible but\n  big change. fiona is now compatible with rasterio and plays better with the\n  osgeo package.\n\n1.0.3 (2014-01-21)\n------------------\n- fix serialization of +init projections (#69).\n\n1.0.2 (2013-09-09)\n------------------\n- smarter, better test setup (#65, #66, #67).\n- add type='feature' to records read from a collection (#68).\n- skip geometry validation when using geojson driver (#61).\n- dumpgj file description reports record properties as a list (as in\n  dict.items()) instead of a dict.\n\n1.0.1 (2013-08-16)\n------------------\n- allow ordering of written fields and preservation of field order when\n  reading (#57).\n\n1.0 (2013-07-30)\n-----------------\n- add prop_type() function.\n- allow utf-8 encoded paths for python 2 (#51). for python 3, paths must\n  always be str, never bytes.\n- remove encoding from collection.meta, it's a file creation option only.\n- support for linking gdal frameworks (#54).\n\n0.16.1 (2013-07-02)\n-------------------\n- add listlayers, open, prop_width to __init__py:__all__.\n- reset reading of ogr layer whenever we ask for a collection iterator (#49).\n\n0.16 (2013-06-24)\n-----------------\n- add support for writing layers to multi-layer files.\n- add tests to reach 100% python code coverage.\n\n0.15 (2013-06-06)\n-----------------\n- get and set numeric field widths (#42).\n- add support for multi-layer data sources (#17).\n- add support for zip and tar virtual filesystems (#45).\n- add listlayers() function.\n- add geojson to list of supported formats (#47).\n- allow selection of layers by index or name.\n\n0.14 (2013-05-04)\n-----------------\n- add option to add json-ld in the dumpgj program.\n- compare values to six.string_types in collection constructor.\n- add encoding to collection.meta.\n- document dumpgj in readme.\n\n0.13 (2013-04-30)\n-----------------\n- python 2/3 compatibility in a single package. pythons 2.6, 2.7, 3.3 now supported.\n\n0.12.1 (2013-04-16)\n-------------------\n- fix messed up linking of readme in sdist (#39).\n\n0.12 (2013-04-15)\n-----------------\n- fix broken installation of extension modules (#35).\n- log cpl errors at their matching python log levels.\n- use upper case for encoding names within ogr, lower case in python.\n\n0.11 (2013-04-14)\n-----------------\n- cythonize .pyx files (#34).\n- work with or around ogr's internal recoding of record data (#35).\n- fix bug in serialization of int/float proj.4 params.\n\n0.10 (2013-03-23)\n-----------------\n- add function to get the width of str type properties.\n- handle validation and schema representation of 3d geometry types (#29).\n- return {'geometry': none} in the case of a null geometry (#31).\n\n0.9.1 (2013-03-07)\n------------------\n- silence the logger in ogrext.so (can be overridden).\n- allow user specification of record field encoding (like 'windows-1252' for\n  natural earth shapefiles) to help when ogr can't detect it.\n\n0.9 (2013-03-06)\n----------------\n- accessing file metadata (crs, schema, bounds) on never inspected closed files\n  returns none without exceptions.\n- add a dict of supported_drivers and their supported modes.\n- raise valueerror for unsupported drivers and modes.\n- remove asserts from ogrext.pyx.\n- add validate_record method to collections.\n- add helpful coordinate system functions to fiona.crs.\n- promote use of fiona.open over fiona.collection.\n- handle shapefile's mix of linestring/polygon and multis (#18).\n- allow users to specify width of shapefile text fields (#20).\n\n0.8 (2012-02-21)\n----------------\n- replaced .opened attribute with .closed (product of collection() is always\n  opened). also a __del__() which will close a collection, but still not to be\n  depended upon.\n- added writerecords method.\n- added a record buffer and better counting of records in a collection.\n- manage one iterator per collection/session.\n- added a read-only bounds property.\n\n0.7 (2012-01-29)\n----------------\n- initial timezone-naive support for date, time, and datetime fields. don't use\n  these field types if you can avoid them. rfc 3339 datetimes in a string field\n  are much better.\n\n0.6.2 (2012-01-10)\n------------------\n- diagnose and set the driver property of collection in read mode.\n- fail if collection paths are not to files. multi-collection workspaces are\n  a (maybe) todo.\n\n0.6.1 (2012-01-06)\n------------------\n- handle the case of undefined crs for disk collections.\n\n0.6 (2012-01-05)\n----------------\n- support for collection coordinate reference systems based on proj4.\n- redirect ogr warnings and errors to the fiona log.\n- assert that pointers returned from the ograpi functions are not null before\n  using.\n\n0.5 (2011-12-19)\n----------------\n- support for reading and writing collections of any geometry type.\n- feature and geometry classes replaced by mappings (dicts).\n- removal of workspace class.\n\n0.2 (2011-09-16)\n----------------\n- rename worldmill to fiona.\n\n0.1.1 (2008-12-04)\n------------------\n- support for features with no geometry.\n\n\ncredits\n=======\n\nfiona is written by:\n\n- alan d. snow <alansnow21@gmail.com>\n- ariel nunez <ingenieroariel@gmail.com>\n- ariki <ariki@users.noreply.github.com>\n- bas couwenberg <sebastic@xs4all.nl>\n- brandon liu <bdon@bdon.org>\n- brendan ward <bcward@consbio.org>\n- chris mutel <cmutel@gmail.com>\n- denis rykov <rykovd@gmail.com>\n- dimlev <dimlev@gmail.com>\n- efr\u00e9n <chefren@users.noreply.github.com>\n- egor fedorov <egor.fedorov@emlid.com>\n- elliott sales de andrade <quantum.analyst@gmail.com>\n- even rouault <even.rouault@mines-paris.org>\n- ewout ter hoeven <e.m.terhoeven@student.tudelft.nl>\n- filipe fernandes <ocefpaf@gmail.com>\n- fredj <frederic.junod@camptocamp.com>\n- g\u00e9raud <galak75@users.noreply.github.com>\n- hannes gr\u00e4uler <hgraeule@uos.de>\n- jacob wasserman <jwasserman@gmail.com>\n- jesse crocker <jesse@gaiagps.com>\n- johan van de wauw <johan.vandewauw@gmail.com>\n- joris van den bossche <jorisvandenbossche@gmail.com>\n- joshua arnott <josh@snorfalorpagus.net>\n- juan luis cano rodr\u00edguez <juanlu001@users.noreply.github.com>\n- kelsey jordahl <kjordahl@enthought.com>\n- kevin wurster <wursterk@gmail.com>\n- ludovic delaun\u00e9 <ludotux@gmail.com>\n- martijn visser <mgvisser@gmail.com>\n- matthew perry <perrygeo@gmail.com>\n- micah cochran <micahcochran@users.noreply.github.com>\n- michael weisman <mweisman@gmail.com>\n- michele citterio <michele@citterio.net>\n- mike taves <mwtoews@gmail.com>\n- miro hron\u010dok <miro@hroncok.cz>\n- oliver tonnhofer <olt@bogosoft.com>\n- patrick young <patrick.mckendree.young@gmail.com>\n- qinfeng <guo.qinfeng+github@gmail.com>\n- ren\u00e9 buffat <buffat@gmail.com>\n- ryan grout <rgrout@continuum.io>\n- sean gillies <sean.gillies@gmail.com>\n- sid kapur <sid-kap@users.noreply.github.com>\n- simon norris <snorris@hillcrestgeo.ca>\n- stefano costa <steko@iosa.it>\n- stephane poss <stephposs@gmail.com>\n- tim tr\u00f6ndle <tim.troendle@usys.ethz.ch>\n- wilsaj <wilson.andrew.j+github@gmail.com>\n\nthe geopandas project (joris van den bossche et al.) has been a major driver\nfor new features in 1.8.0.\n\nfiona would not be possible without the great work of frank warmerdam and other\ngdal/ogr developers.\n\nsome portions of this work were supported by a grant (for pleiades_) from the\nu.s. national endowment for the humanities (https://www.neh.gov).\n\n.. _pleiades: https://pleiades.stoa.org\n",
  "docs_url": null,
  "keywords": "gis,vector,feature,data",
  "license": "bsd 3-clause",
  "name": "fiona",
  "package_url": "https://pypi.org/project/fiona/",
  "project_url": "https://pypi.org/project/fiona/",
  "project_urls": {
    "Documentation": "https://fiona.readthedocs.io/",
    "Repository": "https://github.com/Toblerity/Fiona"
  },
  "release_url": "https://pypi.org/project/fiona/1.9.5/",
  "requires_dist": [
    "attrs >=19.2.0",
    "certifi",
    "click ~=8.0",
    "click-plugins >=1.0",
    "cligj >=0.5",
    "six",
    "setuptools",
    "importlib-metadata ; python_version < \"3.10\"",
    "Fiona[calc,s3,test] ; extra == 'all'",
    "shapely ; extra == 'calc'",
    "boto3 >=1.3.1 ; extra == 's3'",
    "Fiona[s3] ; extra == 'test'",
    "pytest >=7 ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytz ; extra == 'test'"
  ],
  "requires_python": ">=3.7",
  "summary": "fiona reads and writes spatial data files",
  "version": "1.9.5",
  "releases": [],
  "developers": [
    "fiona_contributors",
    "sean_gillies"
  ],
  "kwds": "fiona_env fionadeprecationwarning fiona fionavalueerror pythons",
  "license_kwds": "bsd 3-clause",
  "libtype": "pypi",
  "id": "pypi_fiona",
  "homepage": "",
  "release_count": 108,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_boto3",
    "pypi_certifi",
    "pypi_click",
    "pypi_click_plugins",
    "pypi_cligj",
    "pypi_fiona",
    "pypi_importlib_metadata",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytz",
    "pypi_setuptools",
    "pypi_shapely",
    "pypi_six"
  ]
}
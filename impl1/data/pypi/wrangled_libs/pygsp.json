{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "topic :: scientific/engineering :: mathematics"
  ],
  "description": "========================================\npygsp: graph signal processing in python\n========================================\n\n+--------------------------------------------------+\n| |doc|  |pypi|  |zenodo|  |license|  |pyversions| |\n+--------------------------------------------------+\n| |binder|  |travis|  |coveralls|  |github|        |\n+--------------------------------------------------+\n\n.. |doc| image:: https://readthedocs.org/projects/pygsp/badge/?version=latest\n   :target: https://pygsp.readthedocs.io\n.. |pypi| image:: https://img.shields.io/pypi/v/pygsp.svg\n   :target: https://pypi.python.org/pypi/pygsp\n.. |zenodo| image:: https://zenodo.org/badge/16276560.svg\n   :target: https://doi.org/10.5281/zenodo.1003157\n.. |license| image:: https://img.shields.io/pypi/l/pygsp.svg\n   :target: https://github.com/epfl-lts2/pygsp/blob/master/license.txt\n.. |pyversions| image:: https://img.shields.io/pypi/pyversions/pygsp.svg\n   :target: https://pypi.python.org/pypi/pygsp\n.. |travis| image:: https://img.shields.io/travis/epfl-lts2/pygsp.svg\n   :target: https://travis-ci.org/epfl-lts2/pygsp\n.. |coveralls| image:: https://img.shields.io/coveralls/epfl-lts2/pygsp.svg\n   :target: https://coveralls.io/github/epfl-lts2/pygsp\n.. |github| image:: https://img.shields.io/github/stars/epfl-lts2/pygsp.svg?style=social\n   :target: https://github.com/epfl-lts2/pygsp\n.. |binder| image:: https://mybinder.org/badge.svg\n   :target: https://mybinder.org/v2/gh/epfl-lts2/pygsp/master?filepath=playground.ipynb\n\nthe pygsp is a python package to ease\n`signal processing on graphs <https://arxiv.org/abs/1211.0053>`_.\nit is a free software, distributed under the bsd license, and\navailable on `pypi <https://pypi.python.org/pypi/pygsp>`_.\nthe documentation is available on\n`read the docs <https://pygsp.readthedocs.io>`_\nand development takes place on\n`github <https://github.com/epfl-lts2/pygsp>`_.\n(a `matlab counterpart <https://lts2.epfl.ch/gsp>`_ exists.)\n\nthe pygsp facilitates a wide variety of operations on graphs, like computing\ntheir fourier basis, filtering or interpolating signals, plotting graphs,\nsignals, and filters. its core is spectral graph theory, and many of the\nprovided operations scale to very large graphs. the package includes a wide\nrange of graphs, from point clouds like the stanford bunny and the swiss roll;\nto networks like the minnesota road network; to models for generating random\ngraphs like stochastic block models, sensor networks, erd\u0151s\u2013r\u00e9nyi model,\nbarab\u00e1si-albert model; to simple graphs like the path, the ring, and the grid.\nmany filter banks are also provided, e.g. various wavelets like the mexican\nhat, meyer, half cosine; some low-pass filters like the heat kernel and the\nexponential window; and gabor filters. despite all the pre-defined models, you\ncan easily use a custom graph by defining its adjacency matrix, and a custom\nfilter bank by defining a set of functions in the spectral domain.\n\nthe following demonstrates how to instantiate a graph and a filter, the two\nmain objects of the package.\n\n>>> from pygsp import graphs, filters\n>>> g = graphs.logo()\n>>> g.estimate_lmax()\n>>> g = filters.heat(g, tau=100)\n\nlet's now create a graph signal: a set of three kronecker deltas for that\nexample. we can now look at one step of heat diffusion by filtering the deltas\nwith the above defined filter. note how the diffusion follows the local\nstructure!\n\n>>> import numpy as np\n>>> deltas = [20, 30, 1090]\n>>> s = np.zeros(g.n)\n>>> s[deltas] = 1\n>>> s = g.filter(s)\n>>> g.plot_signal(s, highlight=deltas, backend='matplotlib')\n\n.. image:: ../pygsp/data/readme_example.png\n    :alt:\n.. image:: pygsp/data/readme_example.png\n    :alt:\n\nyou can\n`try it online <https://mybinder.org/v2/gh/epfl-lts2/pygsp/master?filepath=playground.ipynb>`_,\nlook at the\n`tutorials <https://pygsp.readthedocs.io/en/stable/tutorials/index.html>`_\nto learn how to use it, or look at the\n`reference guide <https://pygsp.readthedocs.io/en/stable/reference/index.html>`_\nfor an exhaustive documentation of the api. enjoy the package!\n\ninstallation\n------------\n\nthe pygsp is available on pypi::\n\n    $ pip install pygsp\n\nnote that you will need a recent version of ``pip`` and ``setuptools``. please\nrun ``pip install --upgrade pip setuptools`` if you get any installation error.\n\ncontributing\n------------\n\nsee the guidelines for contributing in ``contributing.rst``.\n\nacknowledgments\n---------------\n\nthe pygsp was started in 2014 as an academic open-source project for\nresearch purpose at the `epfl lts2 laboratory <https://lts2.epfl.ch>`_.\nthis project has been partly funded by the swiss national science foundation\nunder grant 200021_154350 \"towards signal processing on graphs\".\n\nif you are using the library for your research, for the sake of\nreproducibility, please cite the version you used as indexed by\n`zenodo <https://doi.org/10.5281/zenodo.1003157>`_.\n\n\n",
  "docs_url": null,
  "keywords": "graph signal processing",
  "license": "bsd",
  "name": "pygsp",
  "package_url": "https://pypi.org/project/PyGSP/",
  "project_url": "https://pypi.org/project/PyGSP/",
  "project_urls": {
    "Homepage": "https://github.com/epfl-lts2/pygsp"
  },
  "release_url": "https://pypi.org/project/PyGSP/0.5.1/",
  "requires_dist": [
    "numpy",
    "scipy",
    "scikit-image; extra == 'alldeps'",
    "pyunlocbox; extra == 'alldeps'",
    "matplotlib; extra == 'alldeps'",
    "pyqtgraph; extra == 'alldeps'",
    "PyOpenGL; extra == 'alldeps'",
    "PySide; python_version < \"3.5\" and extra == 'alldeps'",
    "pyflann; python_version == \"2.*\" and extra == 'alldeps'",
    "pyflann3; python_version == \"3.*\" and extra == 'alldeps'",
    "PyQt5; python_version >= \"3.5\" and extra == 'alldeps'",
    "sphinx; extra == 'doc'",
    "numpydoc; extra == 'doc'",
    "sphinxcontrib-bibtex; extra == 'doc'",
    "sphinx-rtd-theme; extra == 'doc'",
    "wheel; extra == 'pkg'",
    "twine; extra == 'pkg'",
    "flake8; extra == 'test'",
    "coverage; extra == 'test'",
    "coveralls; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "graph signal processing in python",
  "version": "0.5.1",
  "releases": [],
  "developers": [
    "epfl_lts2"
  ],
  "kwds": "pygsp plot_signal python pyversions graphs",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_pygsp",
  "homepage": "https://github.com/epfl-lts2/pygsp",
  "release_count": 7,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_coveralls",
    "pypi_flake8",
    "pypi_matplotlib",
    "pypi_numpy",
    "pypi_numpydoc",
    "pypi_pyflann",
    "pypi_pyflann3",
    "pypi_pyopengl",
    "pypi_pyqt5",
    "pypi_pyqtgraph",
    "pypi_pyside",
    "pypi_pyunlocbox",
    "pypi_scikit_image",
    "pypi_scipy",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_sphinxcontrib_bibtex",
    "pypi_twine",
    "pypi_wheel"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: science/research",
    "operating system :: macos",
    "operating system :: unix",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "[![](https://github.com/keras-team/keras-core/workflows/tests/badge.svg?branch=main)](https://github.com/keras-team/keras-core/actions?query=workflow%3atests+branch%3amain)\n[![](https://badge.fury.io/py/keras-core.svg)](https://badge.fury.io/py/keras-core)\n\n# keras core: a new multi-backend keras\n\nkeras core is a new multi-backend implementation of the keras api, with support for tensorflow, jax, and pytorch.\n\n**warning:** at this time, this package is experimental.\nit has rough edges and not everything might work as expected.\nwe are currently hard at work improving it.\n\nonce ready, this package will become keras 3.0 and subsume `tf.keras`.\n\n## local installation\n\nkeras core is compatible with linux and macos systems. to install a local development version:\n\n1. install dependencies:\n\n```\npip install -r requirements.txt\n```\n\n2. run installation command from the root directory.\n\n```\npython pip_build.py --install\n```\n\nyou should also install your backend of choice: `tensorflow`, `jax`, or `torch`.\nnote that `tensorflow` is required for using certain keras core features: certain preprocessing layers as\nwell as `tf.data` pipelines.\n\n## configuring your backend\n\nyou can export the environment variable `keras_backend` or you can edit your local config file at `~/.keras/keras.json`\nto configure your backend. available backend options are: `\"tensorflow\"`, `\"jax\"`, `\"torch\"`. example:\n\n```\nexport keras_backend=\"jax\"\n```\n\nin colab, you can do:\n\n```python\nimport os\nos.environ[\"keras_backend\"] = \"jax\"\n\nimport keras_core as keras\n```\n\n**note:** the backend must be configured before importing `keras_core`, and the backend cannot be changed after \nthe package has been imported.\n\n## backwards compatibility\n\nkeras core is intended to work as a drop-in replacement for `tf.keras` (when using the tensorflow backend). just take your\nexisting `tf.keras` code, change the `keras` imports to `keras_core`, make sure that your calls to `model.save()` are using\nthe up-to-date `.keras` format, and you're done.\n\nif your `tf.keras` model does not include custom components, you can start running it on top of jax or pytorch immediately.\n\nif it does include custom components (e.g. custom layers or a custom `train_step()`), it is usually possible to convert it\nto a backend-agnostic implementation in just a few minutes.\n\nin addition, keras models can consume datasets in any format, regardless of the backend you're using:\nyou can train your models with your existing `tf.data.dataset` pipelines or pytorch `dataloaders`.\n\n## why use keras core?\n\n- run your high-level keras workflows on top of any framework -- benefiting at will from the advantages of each framework,\ne.g. the scalability and performance of jax or the production ecosystem options of tensorflow.\n- write custom components (e.g. layers, models, metrics) that you can use in low-level workflows in any framework.\n    - you can take a keras model and train it in a training loop written from scratch in native tf, jax, or pytorch.\n    - you can take a keras model and use it as part of a pytorch-native `module` or as part of a jax-native model function.\n- make your ml code future-proof by avoiding framework lock-in.\n- as a pytorch user: get access to power and usability of keras, at last!\n- as a jax user: get access to a fully-featured, battle-tested, well-documented modeling and training library.\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "keras-core",
  "package_url": "https://pypi.org/project/keras-core/",
  "project_url": "https://pypi.org/project/keras-core/",
  "project_urls": {
    "Homepage": "https://github.com/keras-team/keras-core"
  },
  "release_url": "https://pypi.org/project/keras-core/0.1.7/",
  "requires_dist": [
    "absl-py",
    "numpy",
    "rich",
    "namex",
    "h5py",
    "dm-tree"
  ],
  "requires_python": ">=3.9",
  "summary": "multi-backend keras.",
  "version": "0.1.7",
  "releases": [],
  "developers": [
    "keras-users@googlegroups.com",
    "keras_team"
  ],
  "kwds": "keras_core keras_backend keras tensorflow pip_build",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_keras_core",
  "homepage": "https://github.com/keras-team/keras-core",
  "release_count": 9,
  "dependency_ids": [
    "pypi_absl_py",
    "pypi_dm_tree",
    "pypi_h5py",
    "pypi_namex",
    "pypi_numpy",
    "pypi_rich"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: testing"
  ],
  "description": ".. image:: https://results.pre-commit.ci/badge/github/nose-devs/nose2/main.svg\n   :target: https://results.pre-commit.ci/latest/github/nose-devs/nose2/main\n   :alt: pre-commit.ci status\n\n.. image:: https://github.com/nose-devs/nose2/workflows/build/badge.svg?event=push\n    :alt: build status\n    :target: https://github.com/nose-devs/nose2/actions?query=workflow%3abuild\n\n.. image:: https://readthedocs.org/projects/nose2/badge/\n    :target: https://nose2.io/\n    :alt: documentation\n\n.. image:: https://img.shields.io/pypi/v/nose2.svg\n    :target: https://pypi.org/project/nose2/\n    :alt: latest pypi version\n\n.. image:: https://img.shields.io/pypi/pyversions/nose2.svg\n    :alt: supported python versions\n    :target: https://pypi.org/project/nose2/\n\n.. image:: https://img.shields.io/badge/mailing%20list-discuss%40nose2.io-blue.svg\n    :target: https://groups.google.com/a/nose2.io/forum/#!forum/discuss\n    :alt: join discuss@nose2.io\n\nwelcome to nose2\n================\n\nnose2's extends ``unittest`` to make testing nicer.\n\nnose2 vs nose\n-------------\n\n``nose2`` originated as the successor to ``nose``.\n\n``nose2`` is a distinct project and does not support all of the behaviors of ``nose``.\nsee `differences`_ for a thorough rundown.\n\nnose2 vs pytest\n---------------\n\n`pytest`_ is an excellent test framework and we encourage users to consider\nit for new projects.\n\nit has a bigger team of maintainers and a larger community of users.\n\nquickstart\n----------\n\nbecause ``nose2`` is based on unittest, you can start from the python standard\nlibrary's `documentation for unittest <https://docs.python.org/library/unittest.html>`_\nand then use nose2 to add value on top of that.\n\n``nose2`` looks for tests in python files whose names start with ``test`` and\nruns every test function it discovers.\n\nhere's an example of a simple test, written in typical unittest style:\n\n.. code-block:: python\n\n    # in test_simple.py\n    import unittest\n\n    class teststrings(unittest.testcase):\n        def test_upper(self):\n            self.assertequal(\"spam\".upper(), \"spam\")\n\nyou can then run this test like so::\n\n    $ nose2 -v\n    test_upper (test_simple.teststrings) ... ok\n\n    ----------------------------------------------------------------------\n    ran 1 test in 0.000s\n\n    ok\n\nhowever, ``nose2`` supports more testing configuration and provides more tools\nthan ``unittest`` on its own.\n\nfor example, this test exercises just a few of ``nose2``'s features:\n\n.. code-block:: python\n\n    # in test_fancy.py\n    from nose2.tools import params\n\n    @params(\"sir bedevere\", \"miss islington\", \"duck\")\n    def test_is_knight(value):\n        assert value.startswith('sir')\n\nand then run this like so::\n\n    $ nose2 -v --pretty-assert\n    test_fancy.test_is_knight:1\n    'sir bedevere' ... ok\n    test_fancy.test_is_knight:2\n    'miss islington' ... fail\n    test_fancy.test_is_knight:3\n    'duck' ... fail\n\n    ======================================================================\n    fail: test_fancy.test_is_knight:2\n    'miss islington'\n    ----------------------------------------------------------------------\n    traceback (most recent call last):\n      file \"/mnt/ebs/home/sirosen/tmp/test_fancy.py\", line 6, in test_is_knight\n        assert value.startswith('sir')\n    assertionerror\n\n    >>> assert value.startswith('sir')\n\n    values:\n        value = 'miss islington'\n        value.startswith = <built-in method startswith of str object at 0x7f3c3172f430>\n    ======================================================================\n    fail: test_fancy.test_is_knight:3\n    'duck'\n    ----------------------------------------------------------------------\n    traceback (most recent call last):\n      file \"/mnt/ebs/home/sirosen/tmp/test_fancy.py\", line 6, in test_is_knight\n        assert value.startswith('sir')\n    assertionerror\n\n    >>> assert value.startswith('sir')\n\n    values:\n        value = 'duck'\n        value.startswith = <built-in method startswith of str object at 0x7f3c3172d490>\n    ----------------------------------------------------------------------\n    ran 3 tests in 0.001s\n\n    failed (failures=2)\n\nfull docs\n---------\n\nfull documentation for ``nose2`` is available at `docs.nose2.io`_\n\nversions and support\n--------------------\n\nchangelog and version scheme\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nnose2 versions are numbered ``0.major.minor``. minor releases contain bugfixes or\nsmaller features. major features or backwards incompatible changes are done in\nmajor releases.\n\nfor a full description of all past versions and changes, see the `changelog`_.\n\npython versions\n~~~~~~~~~~~~~~~\n\nnose2 requires python 3.\n\nit supports all versions currently supported by the cpython team, and also aims\nto support pypy and cpython betas.\n\npython 2\n********\n\npython 2 is no longer supported. the `0.12.x line of releases <py2line>`_\ncontains the last versions which supported python 2.\n\nusers of python 2 should understand that python 2 is eol and the python 2\nsupport line for ``nose2`` is similarly considered eol.\n\n.. note::\n\n    fixes to 0.12.x may still be accepted on an as-needed basis for a short\n    while as the python3-only line of releases gets started.\n\ncontributing\n------------\n\nif you want to make contributions, please read the `contributing`_ guide.\n\n.. _py2line: https://github.com/nose-devs/nose2/tree/0.12.x-line\n\n.. _differences: https://docs.nose2.io/en/latest/differences.html\n\n.. _changelog: https://docs.nose2.io/en/latest/changelog.html\n\n.. _pytest: http://pytest.readthedocs.io/en/latest/\n\n.. _contributing: https://github.com/nose-devs/nose2/blob/main/contributing.rst\n\n.. _docs.nose2.io: https://docs.nose2.io/en/latest/\n",
  "docs_url": null,
  "keywords": "testing,tests,unittest",
  "license": "bsd-2-clause",
  "name": "nose2",
  "package_url": "https://pypi.org/project/nose2/",
  "project_url": "https://pypi.org/project/nose2/",
  "project_urls": {
    "changelog": "https://docs.nose2.io/en/latest/changelog.html",
    "documentation": "https://docs.nose2.io/",
    "repository": "https://github.com/nose-devs/nose2"
  },
  "release_url": "https://pypi.org/project/nose2/0.14.0/",
  "requires_dist": [
    "coverage ; extra == 'coverage_plugin'",
    "Sphinx ; extra == 'dev'",
    "sphinx-issues ; extra == 'dev'",
    "sphinx-rtd-theme ; extra == 'dev'"
  ],
  "requires_python": ">=3.8",
  "summary": "unittest with plugins",
  "version": "0.14.0",
  "releases": [],
  "developers": [
    "dev@nose2.io"
  ],
  "kwds": "nose2 nose badge svg alt",
  "license_kwds": "bsd-2-clause",
  "libtype": "pypi",
  "id": "pypi_nose2",
  "homepage": "",
  "release_count": 30,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_sphinx",
    "pypi_sphinx_issues",
    "pypi_sphinx_rtd_theme"
  ]
}
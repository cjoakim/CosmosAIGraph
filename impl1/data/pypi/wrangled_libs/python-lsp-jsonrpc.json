{
  "classifiers": [
    "license :: osi approved :: mit license"
  ],
  "description": "# python json rpc server\n\na python 3.8+ server implementation of the [json rpc 2.0](http://www.jsonrpc.org/specification) protocol. this library has been pulled out of the [python lsp server](https://github.com/python-lsp/python-lsp-server) project.\n\n## installation\n\n    pip install -u python-lsp-jsonrpc\n\n## examples\n\nthe examples directory contains two examples of running language servers over websockets. `examples/langserver.py` shows how to run a language server in-memory. `examples/langserver_ext.py` shows how to run a subprocess language server, in this case the python lsp server.\n\nstart by installing `tornado` and `python-lsp-server`\n\n    pip install python-lsp-server[all] tornado\n\nthen running `python examples/langserver.py` or `python examples/langserver_ext.py` will host a websocket on ``ws://localhost:3000/python``.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "python-lsp-jsonrpc",
  "package_url": "https://pypi.org/project/python-lsp-jsonrpc/",
  "project_url": "https://pypi.org/project/python-lsp-jsonrpc/",
  "project_urls": {
    "Homepage": "https://github.com/python-lsp/python-lsp-jsonrpc"
  },
  "release_url": "https://pypi.org/project/python-lsp-jsonrpc/1.1.2/",
  "requires_dist": [
    "ujson >=3.0.0",
    "pylint ; extra == 'test'",
    "pycodestyle ; extra == 'test'",
    "pyflakes ; extra == 'test'",
    "pytest ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "coverage ; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "json rpc 2.0 server library",
  "version": "1.1.2",
  "releases": [],
  "developers": [
    "python_language_server_contributors"
  ],
  "kwds": "websocket websockets pip jsonrpc lsp",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_python_lsp_jsonrpc",
  "homepage": "",
  "release_count": 4,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_pycodestyle",
    "pypi_pyflakes",
    "pypi_pylint",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_ujson"
  ]
}
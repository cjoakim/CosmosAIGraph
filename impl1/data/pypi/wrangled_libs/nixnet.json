{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: manufacturing",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: system :: hardware :: hardware drivers"
  ],
  "description": "===========  =============================================================\ninfo         communicate over can or lin via ni-xnet hardware with python.\nauthor       national instruments\n===========  =============================================================\n\n.. image:: https://img.shields.io/pypi/v/nixnet.svg\n    :target: https://pypi.python.org/pypi/nixnet\n    :alt: pypi\n\n.. image:: https://readthedocs.org/projects/nixnet/badge/?version=latest\n    :target: http://nixnet.readthedocs.io/en/latest/?badge=latest\n    :alt: documentation\n\n.. image:: https://img.shields.io/pypi/l/nixnet.svg\n    :target: https://github.com/ni/nixnet-python/blob/main/license\n    :alt: license\n\n.. image:: https://img.shields.io/pypi/pyversions/nixnet.svg\n    :target: https://pypi.python.org/pypi/nixnet\n    :alt: language versions\n\n.. image:: https://travis-ci.org/ni/nixnet-python.svg?branch=main\n    :target: https://travis-ci.org/ni/nixnet-python\n    :alt: build\n\n.. image:: https://coveralls.io/repos/github/ni/nixnet-python/badge.svg?branch=main\n    :target: https://coveralls.io/github/ni/nixnet-python?branch=main\n    :alt: unit-test coverage\n\n.. code-block:: python\n\n   >>> import nixnet\n   >>> with nixnet.frameinstreamsession('can1') as input_session:\n   >>>     input_session.intf.can_term = constants.canterm.on\n   >>>     input_session.intf.baud_rate = 125000\n\n   >>>     frames = input_session.frames.read(count)\n   >>>     for frame in frames:\n   >>>         print('received frame:')\n   >>>         print(frame)\n\nquick start\n===========\n\nrunning **nixnet** requires ni-xnet or ni-xnet runtime. visit the\n`ni.com/downloads <http://www.ni.com/downloads/>`__ to download the latest version\nof ni-xnet.\n\n**nixnet** can be installed with `pip <http://pypi.python.org/pypi/pip>`__::\n\n  $ python -m pip install nixnet~=0.3.2\n\nnow you should be able to move onto the `examples <https://github.com/ni/nixnet-python/tree/main/nixnet_examples>`__.\n\nresources\n=========\n\n* `documentation <http://nixnet.readthedocs.io>`__.\n* `source <https://github.com/ni/nixnet-python>`__.\n\nproduct support\n---------------\n\nthe **nixnet** package and ni-xnet are supported by ni. for support, open\na request through the ni support portal at `ni.com <http://www.ni.com>`__.\n\nbugs / feature requests\n-----------------------\n\nwe welcome all kinds of contributions.  if you have a bug to report or a feature\nrequest for **nixnet**, feel free to `open an issue on github\n<https://github.com/ni/nixnet-python/issues>`__ or `contribute the change yourself\n<https://github.com/ni/nixnet-python/blob/main/contributing.rst>`__.\n\nstatus\n======\n\n**nixnet** package is created and maintained by national instruments.\n\n* the following support is included:\n   * can and lin protocol\n   * frames, signals, and frame/signal conversion\n   * database apis\n   * for a complete list of supported features and functions, see the `documentation <http://nixnet.readthedocs.io>`__.\n* see the `enhancement issues <https://github.com/ni/nixnet-python/issues?q=is%3aissue+is%3aopen+label%3aenhancement>`__ for potential future work.\n* breaking api changes will be kept to a minimum. if a breaking change is made, it will be planned through\n  `breaking-change isssues <https://github.com/ni/nixnet-python/issues?q=is%3aissue+is%3aopen+label%3abreaking-change>`__\n  and communicated via `semver <http://semver.org/>`__ and the `release notes <https://github.com/ni/nixnet-python/releases>`__.\n* `known issues <https://github.com/ni/nixnet-python/issues?q=is%3aissue+is%3aopen+label%3abug>`__.\n\n**nixnet** currently supports\n\n* windows operating system.\n* cpython 2.7.0+, 3.4+, pypy2, and pypy3.\n* ni-xnet 15.5+\n\nlicense\n=======\n\n**nixnet** is licensed under an mit-style license (see\n`license <https://github.com/ni/nixnet-python/blob/main/license>`__).\nother incorporated projects may be licensed under different licenses. all\nlicenses allow for non-commercial and commercial use.\n\n\n",
  "docs_url": null,
  "keywords": "nixnet",
  "license": "mit",
  "name": "nixnet",
  "package_url": "https://pypi.org/project/nixnet/",
  "project_url": "https://pypi.org/project/nixnet/",
  "project_urls": {
    "Homepage": "https://github.com/ni/nixnet-python"
  },
  "release_url": "https://pypi.org/project/nixnet/0.3.2/",
  "requires_dist": [
    "six",
    "enum34 ; python_version < \"3.4\"",
    "typing ; python_version < \"3.5\""
  ],
  "requires_python": "",
  "summary": "ni-xnet python api",
  "version": "0.3.2",
  "releases": [],
  "developers": [
    "national_instruments",
    "opensource@ni.com"
  ],
  "kwds": "nixnet nixnet_examples xnet protocol communicate",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_nixnet",
  "homepage": "https://github.com/ni/nixnet-python",
  "release_count": 13,
  "dependency_ids": [
    "pypi_enum34",
    "pypi_six",
    "pypi_typing"
  ]
}
{
  "classifiers": [],
  "description": "sip - a python bindings generator for c and c++ libraries\n=========================================================\n\nwhat is sip?\n------------\n\none of the features of python that makes it so powerful is the ability to take\nexisting libraries, written in c or c++, and make them available as python\nextension modules.  such extension modules are often called bindings for the\nlibrary.\n\nsip is a collection of tools that makes it very easy to create python bindings\nfor c and c++ libraries.  it was originally developed in 1998 to create pyqt,\nthe python bindings for the qt toolkit, but can be used to create bindings for\nany c or c++ library.  for example it is also used to generate wxpython, the\npython bindings for wxwidgets.\n\nsip comprises a set of build tools and a sip module. the build tools process a\nset of specification files and generates c or c++ code which is then compiled\nto create the bindings extension module.  several extension modules may be\ninstalled in the same python package.  extension modules can be built so that\nthey are are independent of the version of python being used.  in other words a\nwheel created from them can be installed with any version of python starting\nwith v3.8.\n\nthe specification files contain a description of the interface of the c or c++\nlibrary, i.e. the classes, methods, functions and variables.  the format of a\nspecification file is almost identical to a c or c++ header file, so much so\nthat the easiest way of creating a specification file is to edit a copy of the\ncorresponding header file.\n\nthe sip module provides support functions to the automatically generated\ncode.  the sip module is installed as part of the same python package as the\ngenerated extension modules.  unlike the extension modules the sip module is\nspecific to a particular version of python (e.g. v3.8, v3.9, v3.10, v3.11).\n\nsip makes it easy to exploit existing c or c++ libraries in a productive\ninterpretive programming environment.  sip also makes it easy to take a python\napplication (maybe a prototype) and selectively implement parts of the\napplication (maybe for performance reasons) in c or c++.\n\n\nauthor\n------\n\nsip is copyright (c) riverbank computing limited.  its homepage is\nhttps://www.riverbankcomputing.com/software/sip/.\n\nsupport may be obtained from the pyqt mailing list at\nhttps://www.riverbankcomputing.com/mailman/listinfo/pyqt/.\n\n\nlicense\n-------\n\nsip is released under the gpl v2, gpl v3 licenses, and under a license similar\nto the bsd license.\n\n\ninstallation\n------------\n\nsip can be installed from pypi::\n\n    pip install sip\n\n\ndocumentation\n-------------\n\nthe documentation for the latest release can be found\n`here <https://www.riverbankcomputing.com/static/docs/sip/>`__.\n",
  "docs_url": null,
  "keywords": "",
  "license": "sip",
  "name": "sip",
  "package_url": "https://pypi.org/project/sip/",
  "project_url": "https://pypi.org/project/sip/",
  "project_urls": {
    "Homepage": "https://www.riverbankcomputing.com/software/sip/"
  },
  "release_url": "https://pypi.org/project/sip/6.8.1/",
  "requires_dist": [
    "packaging",
    "setuptools",
    "tomli ; python_version < \"3.11\""
  ],
  "requires_python": ">=3.7",
  "summary": "a python bindings generator for c/c++ libraries",
  "version": "6.8.1",
  "releases": [],
  "developers": [
    "info@riverbankcomputing.com",
    "riverbank_computing_limited"
  ],
  "kwds": "python pyqt wxpython libraries pip",
  "license_kwds": "sip",
  "libtype": "pypi",
  "id": "pypi_sip",
  "homepage": "https://www.riverbankcomputing.com/software/sip/",
  "release_count": 50,
  "dependency_ids": [
    "pypi_packaging",
    "pypi_setuptools",
    "pypi_tomli"
  ]
}
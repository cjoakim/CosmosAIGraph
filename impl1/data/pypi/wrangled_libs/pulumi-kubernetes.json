{
  "classifiers": [],
  "description": "[![build status](https://travis-ci.com/pulumi/pulumi-kubernetes.svg?token=ehg7zp5zdddjftjy8ejq&branch=master)](https://travis-ci.com/pulumi/pulumi-kubernetes)\n[![slack](http://www.pulumi.com/images/docs/badges/slack.svg)](https://slack.pulumi.com)\n[![npm version](https://badge.fury.io/js/%40pulumi%2fkubernetes.svg)](https://www.npmjs.com/package/@pulumi/kubernetes)\n[![python version](https://badge.fury.io/py/pulumi-kubernetes.svg)](https://pypi.org/project/pulumi-kubernetes/)\n[![godoc](https://godoc.org/github.com/pulumi/pulumi-kubernetes/sdk/v4?status.svg)](https://pkg.go.dev/github.com/pulumi/pulumi-kubernetes/sdk/v4)\n[![license](https://img.shields.io/github/license/pulumi/pulumi-kubernetes)](https://github.com/pulumi/pulumi-kubernetes/blob/master/license)\n\n# pulumi kubernetes resource provider\n\nthe kubernetes resource provider for pulumi lets you create, deploy, and manage kubernetes api resources and workloads in a running cluster. for a streamlined pulumi walkthrough, including language runtime installation and kubernetes configuration, select \"get started\" below.\n<div>\n    <p>\n        <a href=\"https://www.pulumi.com/docs/get-started/kubernetes\" title=\"get started\">\n            <img src=\"https://www.pulumi.com/images/get-started.svg?\" width=\"120\">\n        </a>\n    </p>  \n</div>\n\n* [introduction](#introduction)\n  * [kubernetes api version support](#kubernetes-api-version-support)\n  * [how does api support for kubernetes work?](#how-does-api-support-for-kubernetes-work)\n* [references](#references)\n* [prerequisites](#prerequisites)\n* [installing](#installing)\n* [quick examples](#quick-examples)\n  * [deploying a yaml manifest](#deploying-a-yaml-manifest)\n  * [deploying a helm chart](#deploying-a-helm-chart)\n  * [deploying a workload using the resource api](#deploying-a-workload-using-the-resource-api)\n* [contributing](#contributing)\n* [code of conduct](#code-of-conduct)\n\n## introduction\n\n`pulumi-kubernetes` provides an sdk to create any of the api resources\navailable in kubernetes.\n\nthis includes the resources you know and love, such as:\n- deployments\n- replicasets\n- configmaps\n- secrets\n- jobs etc.\n\n#### kubernetes api version support\n\nthe `pulumi-kubernetes` sdk closely tracks the latest upstream release, and provides access\nto the full api surface, including deprecated endpoints.\nthe sdk api is 100% compatible with the kubernetes api, and is\nschematically identical to what kubernetes users expect.\n\nwe support kubernetes clusters with version >=1.9.0.\n\n#### how does api support for kubernetes work?\n\npulumi\u2019s kubernetes sdk is manufactured by automatically wrapping our\nlibrary functionality around the kubernetes resource [openapi\nspec](https://github.com/kubernetes/kubernetes/tree/master/api/openapi-spec) as soon as a\nnew version is released! ultimately, this means that pulumi users do not have\nto learn a new kubernetes api model, nor wait long to work with the latest\navailable versions.\n\n> note: pulumi also supports alpha and beta apis.\n\nvisit the [faq](https://www.pulumi.com/docs/reference/clouds/kubernetes/faq/)\nfor more details.\n\n## references\n\n* [reference documentation](https://www.pulumi.com/registry/packages/kubernetes/)\n* api documentation\n    * [node.js api](https://pulumi.io/reference/pkg/nodejs/@pulumi/kubernetes)\n    * [python api](https://www.pulumi.com/docs/reference/pkg/python/pulumi_kubernetes/)\n* [all examples](./examples)\n* [how-to guides](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/)\n\n## prerequisites\n\n1. [install pulumi](https://www.pulumi.com/docs/get-started/kubernetes/install-pulumi/).\n1. install a language runtime such as [node.js](https://nodejs.org/en/download), [python](https://www.python.org/downloads/) or [.net](https://dotnet.microsoft.com/download/dotnet-core/3.1).\n1. install a package manager\n    * for node.js, use [npm](https://www.npmjs.com/get-npm) or [yarn](https://yarnpkg.com/lang/en/docs/install).\n    * for python, use [pip](https://pip.pypa.io/en/stable/installing/).\n    * for .net, use nuget which is integrated with the `dotnet` cli.\n1. have access to a running kubernetes cluster\n    * if `kubectl` already works for your running cluster, pulumi respects and uses this configuration.\n    * if you do not have a cluster already running and available, we encourage you to\n      explore pulumi's sdks for aws eks, azure aks, and gcp gke. visit the \n      [api reference docs in the pulumi registry](https://www.pulumi.com/registry/packages/kubernetes/api-docs/) for more details.\n1. [install `kubectl`](https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl).\n\n## installing\n\nthis package is available in many languages in the standard packaging formats.\n\nfor node.js use either `npm` or `yarn`:\n\n`npm`:\n\n```bash\nnpm install @pulumi/kubernetes\n```\n\n`yarn`:\n\n```bash\nyarn add @pulumi/kubernetes\n```\n\nfor python use `pip`:\n\n```bash\npip install pulumi-kubernetes\n```\n\nfor .net, dependencies will be automatically installed as part of your pulumi deployments using `dotnet build`.\n\nto use from go, use `go install` to grab the latest version of the library\n\n    $ go install github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes@latest\n\n## quick examples\n\nthe following examples demonstrate how to work with `pulumi-kubernetes` in\na couple of ways.\n\nexamples may include the creation of an aws eks cluster, although an eks cluster\nis **not** required to use `pulumi/kubernetes`. it is simply used to ensure\nwe have access to a running kubernetes cluster to deploy resources and workloads into.\n\n### deploying a yaml manifest\n\nthis example deploys resources from a yaml manifest file path, using the\ntransient, default `kubeconfig` credentials on the local machine, just as `kubectl` does.\n\n```typescript\nimport * as k8s from \"@pulumi/kubernetes\";\n\nconst myapp = new k8s.yaml.configfile(\"app\", {\n    file: \"app.yaml\"\n});\n```\n\n### deploying a helm chart\n\nthis example creates an eks cluster with [`pulumi/eks`](https://github.com/pulumi/pulumi-eks),\nand then deploys a helm chart from the stable repo using the \n`kubeconfig` credentials from the cluster's [pulumi provider](https://www.pulumi.com/docs/intro/concepts/resources/providers/).\n\n```typescript\nimport * as eks from \"@pulumi/eks\";\nimport * as k8s from \"@pulumi/kubernetes\";\n\n// create an eks cluster.\nconst cluster = new eks.cluster(\"my-cluster\");\n\n// deploy wordpress into our cluster.\nconst wordpress = new k8s.helm.v2.chart(\"wordpress\", {\n    repo: \"stable\",\n    chart: \"wordpress\",\n    values: {\n        wordpressblogname: \"my cool kubernetes blog!\",\n    },\n}, { providers: { \"kubernetes\": cluster.provider } });\n\n// export the cluster's kubeconfig.\nexport const kubeconfig = cluster.kubeconfig;\n```\n\n### deploying a workload using the resource api\n\nthis example creates a eks cluster with [`pulumi/eks`](https://github.com/pulumi/pulumi-eks),\nand then deploys an nginx deployment and service using the sdk resource api, and the \n`kubeconfig` credentials from the cluster's [pulumi provider](https://www.pulumi.com/docs/intro/concepts/resources/providers/).\n\n```typescript\nimport * as eks from \"@pulumi/eks\";\nimport * as k8s from \"@pulumi/kubernetes\";\n\n// create an eks cluster with the default configuration.\nconst cluster = new eks.cluster(\"my-cluster\");\n\n// create a nginx deployment and service.\nconst appname = \"my-app\";\nconst applabels = { appclass: appname };\nconst deployment = new k8s.apps.v1.deployment(`${appname}-dep`, {\n    metadata: { labels: applabels },\n    spec: {\n        replicas: 2,\n        selector: { matchlabels: applabels },\n        template: {\n            metadata: { labels: applabels },\n            spec: {\n                containers: [{\n                    name: appname,\n                    image: \"nginx\",\n                    ports: [{ name: \"http\", containerport: 80 }]\n                }],\n            }\n        }\n    },\n}, { provider: cluster.provider });\n\nconst service = new k8s.core.v1.service(`${appname}-svc`, {\n    metadata: { labels: applabels },\n    spec: {\n        type: \"loadbalancer\",\n        ports: [{ port: 80, targetport: \"http\" }],\n        selector: applabels,\n    },\n}, { provider: cluster.provider });\n\n// export the url for the load balanced service.\nexport const url = service.status.loadbalancer.ingress[0].hostname;\n\n// export the cluster's kubeconfig.\nexport const kubeconfig = cluster.kubeconfig;\n```\n\n## contributing\n\nif you are interested in contributing, please see the [contributing docs][contributing].\n\n## code of conduct\n\nyou can read the code of conduct [here][code-of-conduct].\n\n[pulumi-kubernetes]: https://github.com/pulumi/pulumi-kubernetes\n[contributing]: contributing.md\n[code-of-conduct]: code-of-conduct.md\n[workload-example]: #deploying-a-workload-on-aws-eks\n[how-pulumi-works]: https://www.pulumi.com/docs/intro/concepts/how-pulumi-works\n",
  "docs_url": null,
  "keywords": "pulumi,kubernetes,category/cloud,kind/native",
  "license": "apache-2.0",
  "name": "pulumi-kubernetes",
  "package_url": "https://pypi.org/project/pulumi-kubernetes/",
  "project_url": "https://pypi.org/project/pulumi-kubernetes/",
  "project_urls": {
    "Homepage": "https://pulumi.com",
    "Repository": "https://github.com/pulumi/pulumi-kubernetes"
  },
  "release_url": "https://pypi.org/project/pulumi-kubernetes/4.6.1/",
  "requires_dist": [
    "parver >=0.2.1",
    "pulumi <4.0.0,>=3.25.0",
    "requests <3.0,>=2.21",
    "semver >=2.8.1"
  ],
  "requires_python": ">=3.7",
  "summary": "a pulumi package for creating and managing kubernetes resources.",
  "version": "4.6.1",
  "releases": [],
  "developers": [],
  "kwds": "pulumi_kubernetes kubernetes kubeconfig kubectl slack",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_pulumi_kubernetes",
  "homepage": "",
  "release_count": 1065,
  "dependency_ids": [
    "pypi_parver",
    "pypi_pulumi",
    "pypi_requests",
    "pypi_semver"
  ]
}
{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: rust",
    "topic :: software development :: embedded systems",
    "topic :: system :: hardware :: hardware drivers",
    "topic :: system :: networking"
  ],
  "description": "# cantact\n[![crates.io](https://img.shields.io/crates/v/cantact?label=cantact)](https://crates.io/crates/cantact)\n[![crates.io](https://img.shields.io/crates/v/cantact-driver?label=cantact-driver)](https://crates.io/crates/cantact-driver)\n[![pypi](https://img.shields.io/pypi/v/cantact)](https://pypi.org/project/cantact/)\n[![docs.rs](https://docs.rs/cantact-driver/badge.svg)](https://docs.rs/cantact-driver/)\n![rust build](https://github.com/linklayer/cantact/workflows/rust/badge.svg)\n![python build](https://github.com/linklayer/cantact/workflows/python/badge.svg)\n\nsoftware support for cantact devices. includes a driver (see `driver/`), apis, and a cross-platform command line interface.\n\n## getting a device\n\ncantact pro is currently a pre-launch project on crowdsupply. you can subscribe on the [product page](https://www.crowdsupply.com/linklayer-labs/cantact-pro)\nto get updates about the hardware release.\n\nthis tool should work fine with other cantact/gs_usb compatible devices such as canable.\n\n## installing\n\nthe cli and driver are built using `cargo`, which can be installed using [rustup](https://rustup.rs/).\n\nonce `cargo` is installed, use it to build and install the `can` binary:\n\n```\ngit clone https://github.com/linklayer/cantact\ncd cantact\ncargo install --path .\n```\n\n### setting udev rules (linux only)\n\non linux, only root can access the device by default. this results in a `devicenotfound` error when trying to access the device as a normal user. \nto allow access for all users, create a file at `/etc/udev/rules.d/99-cantact.rules` which contains:\n```\nsubsystem==\"usb\", attrs{idvendor}==\"1d50\", attrs{idproduct}==\"606f\", mode=\"0666\"\n```\n\nthen reload the udev rules:\n```\nsudo udevadm control --reload-rules\nsudo udevadm trigger\n```\n\n\n## command line interface\n\nthe cli is invoked using the `can` binary:\n\n```\ncan help\n\ncan 0.1.0\neric evenchick <eric@evenchick.com>\ncommand line utilities for cantact devices\n\nusage:\n    can [flags] [subcommand]\n\nflags:\n    -h, --help       prints help information\n    -v, --verbose    print verbose debugging information\n    -v, --version    prints version information\n\nsubcommands:\n    cfg     set device configurations\n    dump    receive and display can frames\n    help    prints this message or the help of the given subcommand(s)\n    send    send a single can frame\n```\n\nthe `can cfg` command is used to set the bitrate and other device settings. once set, other commands will use these options.\n\nfor example, to set channels 0 and 1 to 500000 kbps, then dump all frames on all channels:\n\n```\ncan cfg --channel 0 --bitrate 500000\ncan cfg --channel 1 --bitrate 500000\ncan dump\n```\n\nuse `can help [subcommand]` for additional documentation.\n\n## rust support\n\nthe driver can be used from rust by installing the [`cantact-driver` crate](https://crates.io/crates/cantact-driver).\ndocumentation for the crate can be found on [docs.rs](https://docs.rs/cantact-driver/).\n\n## python support\n\ncantact supports python 3.5+ on windows, macos, and linux. the python modules are hosted on [pypi](https://pypi.org/project/cantact/).\ninstallation requires `pip 19.0+` (for manylinux2010 wheels).\n\npython end-users should not use this repository directly. instead, install python support using `pip`:\n\n```\npython3 -m pip -u pip\npython3 -m pip install cantact\n```\n\nthis will attempt to install a binary distribution for your system. if none exists, it will attempt to build\nfrom source. this requires nightly rust, which can be enabled by running `rustup default nightly` before \ninstalling.\n\nsee the `examples/` folder for python examples. [python-can](https://github.com/hardbyte/python-can/) supports\ncantact, and is recommended over using the `cantact` module directly. to install cantact, `python-can`, \nand run a test:\n\n```\npython3 -m pip install cantact git+https://github.com/ericevenchick/python-can@cantact\ncan_logger.py -i cantact -c 0 -b 500000\n```\n\n### building python support\n\nbuilding python support is only required if you want to make modifications to the `cantact` python module, or if\nyou are using a platform that does not have packaged support.\n\npython support is implemented using [pyo3](https://github.com/pyo3/pyo3), and is gated by the `python` feature.\nthanks to [rust-setuptools](https://github.com/pyo3/setuptools-rust), the `cantact` python module can be built\nlike any other python module using `setuptools`. pyo3 requires nightly rust, which can be configured using `rustup override`.\n\n```\ncd driver\nrustup override set nightly\npython setup.py build\n```\n\npython builds for windows, macos, and manylinux are automated using [github actions](https://github.com/linklayer/cantact/actions?query=workflow%3apython).\ntagged releases are automatically pushed to pypi.\n\n## c / c++ support\n\nc / c++ support is provided by the driver. this is currently used to implement [busmaster](https://rbei-etas.github.io/busmaster/) \nsupport on windows.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "cantact",
  "package_url": "https://pypi.org/project/cantact/",
  "project_url": "https://pypi.org/project/cantact/",
  "project_urls": {
    "Homepage": "https://github.com/linklayer/cantact"
  },
  "release_url": "https://pypi.org/project/cantact/0.1.2/",
  "requires_dist": [],
  "requires_python": ">=3.5",
  "summary": "support for the cantact controller area network devices",
  "version": "0.1.2",
  "releases": [],
  "developers": [
    "eric@evenchick.com",
    "eric_evenchick"
  ],
  "kwds": "cantact shields crate pip rustup",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_cantact",
  "homepage": "https://github.com/linklayer/cantact",
  "release_count": 8,
  "dependency_ids": []
}
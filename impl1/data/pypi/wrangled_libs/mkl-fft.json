{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: c",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "## ``mkl_fft`` --  a numpy-based python interface to intel (r) mkl fft functionality\n[![build status](https://travis-ci.com/intelpython/mkl_fft.svg?branch=master)](https://travis-ci.com/intelpython/mkl_fft)\n\n`mkl_fft` started as a part of intel (r) distribution for python* optimizations to numpy, and is now being released\nas a stand-alone package. it can be installed into conda environment using\n\n```\n   conda install -c intel mkl_fft\n```\n\n---\n\nto install mkl_fft pypi package please use following command:\n\n```\n   python -m pip install --index-url https://pypi.anaconda.org/intel/simple  mkl_fft\n```\n\n---\n\nsince mkl fft supports performing discrete fourier transforms over non-contiguously laid out arrays, mkl can be directly\nused on any well-behaved floating point array with no internal overlaps for both in-place and not in-place transforms of\narrays in single and double floating point precision.\n\nthis eliminates the need to copy input array contiguously into an intermediate buffer.\n\n`mkl_fft` directly supports n-dimensional fourier transforms.\n\nmore details can be found in scipy 2017 conference proceedings:\n     https://github.com/scipy-conference/scipy_proceedings/tree/2017/papers/oleksandr_pavlyk\n\n---\n\nit implements the following functions:\n\n### complex transforms, similar to those in `scipy.fftpack`:\n\n`fft(x, n=none, axis=-1, overwrite_x=false)`\n\n`ifft(x, n=none, axis=-1, overwrite_x=false)`\n\n`fft2(x, shape=none, axes=(-2,-1), overwrite_x=false)`\n\n`ifft2(x, shape=none, axes=(-2,-1), overwrite_x=false)`\n\n`fftn(x, n=none, axes=none, overwrite_x=false)`\n\n`ifftn(x, n=none, axes=none, overwrite_x=false)`\n\n### real transforms\n\n`rfft(x, n=none, axis=-1, overwrite_x=false)` - real 1d fourier transform, like `scipy.fftpack.rfft`\n\n`rfft_numpy(x, n=none, axis=-1)` - real 1d fourier transform, like `numpy.fft.rfft`\n\n`rfft2_numpy(x, s=none, axes=(-2,-1))` - real 2d fourier transform, like `numpy.fft.rfft2`\n\n`rfftn_numpy(x, s=none, axes=none)` - real 2d fourier transform, like `numpy.fft.rfftn`\n\n... and similar `irfft*` functions.\n\n\nthe package also provides `mkl_fft._numpy_fft` and `mkl_fft._scipy_fft` interfaces which provide drop-in replacements for equivalent functions in numpy and scipy respectively.\n\n---\n\nto build ``mkl_fft`` from sources on linux:\n  - install a recent version of mkl, if necessary;\n  - execute ``source /path/to/mklroot/bin/mklvars.sh intel64`` ;\n  - execute ``pip install .``\n\n\n",
  "docs_url": null,
  "keywords": "dfti,fft,fourier,mkl",
  "license": "bsd",
  "name": "mkl-fft",
  "package_url": "https://pypi.org/project/mkl-fft/",
  "project_url": "https://pypi.org/project/mkl-fft/",
  "project_urls": {
    "Download": "http://github.com/IntelPython/mkl_fft",
    "Homepage": "http://github.com/IntelPython/mkl_fft"
  },
  "release_url": "https://pypi.org/project/mkl-fft/1.3.6/",
  "requires_dist": [
    "numpy>=1.24.3,<1.25.0",
    "mkl",
    "dpcpp_cpp_rt"
  ],
  "requires_python": ">=3.7",
  "summary": "mkl-based fft transforms for numpy arrays",
  "version": "1.3.6",
  "releases": [],
  "developers": [
    "intel_corp",
    "intel_corporation",
    "scripting@intel.com"
  ],
  "kwds": "mkl_fft _numpy_fft _scipy_fft rfft_numpy rfft2_numpy",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_mkl_fft",
  "homepage": "http://github.com/intelpython/mkl_fft",
  "release_count": 7,
  "dependency_ids": [
    "pypi_dpcpp_cpp_rt",
    "pypi_mkl",
    "pypi_numpy"
  ]
}
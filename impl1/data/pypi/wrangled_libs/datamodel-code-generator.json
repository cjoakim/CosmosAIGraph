{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython"
  ],
  "description": "datamodel code generator\n# datamodel-code-generator\n\nthis code generator creates [pydantic v1 and v2](https://docs.pydantic.dev/) model, [dataclasses.dataclass](https://docs.python.org/3/library/dataclasses.html), [typing.typeddict](https://docs.python.org/3/library/typing.html#typing.typeddict) \nand [msgspec.struct](https://github.com/jcrist/msgspec) from an openapi file and others.\n\n[![pypi version](https://badge.fury.io/py/datamodel-code-generator.svg)](https://pypi.python.org/pypi/datamodel-code-generator)\n[![conda-forge](https://img.shields.io/conda/v/conda-forge/datamodel-code-generator)](https://anaconda.org/conda-forge/datamodel-code-generator)\n[![downloads](https://pepy.tech/badge/datamodel-code-generator/month)](https://pepy.tech/project/datamodel-code-generator)\n[![pypi - python version](https://img.shields.io/pypi/pyversions/datamodel-code-generator)](https://pypi.python.org/pypi/datamodel-code-generator)\n[![codecov](https://codecov.io/gh/koxudaxi/datamodel-code-generator/graph/badge.svg?token=plzssfb9li)](https://codecov.io/gh/koxudaxi/datamodel-code-generator)\n![license](https://img.shields.io/github/license/koxudaxi/datamodel-code-generator.svg)\n[![ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)\n[![pydantic v1](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/pydantic/pydantic/main/docs/badge/v1.json)](https://pydantic.dev)\n[![pydantic v2](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/pydantic/pydantic/main/docs/badge/v2.json)](https://pydantic.dev)\n\n## help\nsee [documentation](https://koxudaxi.github.io/datamodel-code-generator) for more details.\n\n## sponsors\n[![jetbrains](https://avatars.githubusercontent.com/u/60931315?s=200&v=4)](https://github.com/jetbrainsofficial)\n\n## quick installation\n\nto install `datamodel-code-generator`:\n```bash\n$ pip install datamodel-code-generator\n```\n\n## simple usage\nyou can generate models from a local file.\n```bash\n$ datamodel-codegen --input api.yaml --output model.py\n```\n\n<details>\n<summary>api.yaml</summary>\n\n```yaml\nopenapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: swagger petstore\n  license:\n    name: mit\nservers:\n  - url: http://petstore.swagger.io/v1\npaths:\n  /pets:\n    get:\n      summary: list all pets\n      operationid: listpets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: how many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: a paged array of pets\n          headers:\n            x-next:\n              description: a link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n                x-amazon-apigateway-integration:\n                  uri:\n                    fn::sub: arn:aws:apigateway:${aws::region}:lambda:path/2015-03-31/functions/${pythonversionfunction.arn}/invocations\n                  passthroughbehavior: when_no_templates\n                  httpmethod: post\n                  type: aws_proxy\n    post:\n      summary: create a pet\n      operationid: createpets\n      tags:\n        - pets\n      responses:\n        '201':\n          description: null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n                x-amazon-apigateway-integration:\n                  uri:\n                    fn::sub: arn:aws:apigateway:${aws::region}:lambda:path/2015-03-31/functions/${pythonversionfunction.arn}/invocations\n                  passthroughbehavior: when_no_templates\n                  httpmethod: post\n                  type: aws_proxy\n  /pets/{petid}:\n    get:\n      summary: info for a specific pet\n      operationid: showpetbyid\n      tags:\n        - pets\n      parameters:\n        - name: petid\n          in: path\n          required: true\n          description: the id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n    x-amazon-apigateway-integration:\n      uri:\n        fn::sub: arn:aws:apigateway:${aws::region}:lambda:path/2015-03-31/functions/${pythonversionfunction.arn}/invocations\n      passthroughbehavior: when_no_templates\n      httpmethod: post\n      type: aws_proxy\ncomponents:\n  schemas:\n    pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n    pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/pet\"\n    error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    apis:\n      type: array\n      items:\n        type: object\n        properties:\n          apikey:\n            type: string\n            description: to be used as a dataset parameter value\n          apiversionnumber:\n            type: string\n            description: to be used as a version parameter value\n          apiurl:\n            type: string\n            format: uri\n            description: \"the url describing the dataset's fields\"\n          apidocumentationurl:\n            type: string\n            format: uri\n            description: a url to the api console for each api\n```\n\n</details>\n\n<details>\n<summary>model.py</summary>\n\n```python\n# generated by datamodel-codegen:\n#   filename:  api.yaml\n#   timestamp: 2020-06-02t05:28:24+00:00\n\nfrom __future__ import annotations\n\nfrom typing import list, optional\n\nfrom pydantic import anyurl, basemodel, field\n\n\nclass pet(basemodel):\n    id: int\n    name: str\n    tag: optional[str] = none\n\n\nclass pets(basemodel):\n    __root__: list[pet]\n\n\nclass error(basemodel):\n    code: int\n    message: str\n\n\nclass api(basemodel):\n    apikey: optional[str] = field(\n        none, description='to be used as a dataset parameter value'\n    )\n    apiversionnumber: optional[str] = field(\n        none, description='to be used as a version parameter value'\n    )\n    apiurl: optional[anyurl] = field(\n        none, description=\"the url describing the dataset's fields\"\n    )\n    apidocumentationurl: optional[anyurl] = field(\n        none, description='a url to the api console for each api'\n    )\n\n\nclass apis(basemodel):\n    __root__: list[api]\n```\n</details>\n\n## projects that use datamodel-code-generator\n \nthese oss projects use datamodel-code-generator to generate many models. \nsee the following linked projects for real world examples and inspiration.\n\n- [airbytehq/airbyte](https://github.com/airbytehq/airbyte)\n  - *[code-generator/dockerfile](https://github.com/airbytehq/airbyte/blob/master/tools/code-generator/dockerfile)*\n- [apache/iceberg](https://github.com/apache/iceberg)\n  - *[generate python code](https://github.com/apache/iceberg/blob/d2e1094ee0cc6239d43f63ba5114272f59d605d2/open-api/readme.md?plain=1#l39)* \n    *[`make generate`](https://github.com/apache/iceberg/blob/d2e1094ee0cc6239d43f63ba5114272f59d605d2/open-api/makefile#l24-l34)*\n- [argoproj-labs/hera](https://github.com/argoproj-labs/hera)\n  - *[`makefile`](https://github.com/argoproj-labs/hera/blob/c8cbf0c7a676de57469ca3d6aeacde7a5e84f8b7/makefile#l53-l62)*\n- [awslabs/aws-lambda-powertools-python](https://github.com/awslabs/aws-lambda-powertools-python)\n  - *recommended for [advanced-use-cases](https://awslabs.github.io/aws-lambda-powertools-python/2.6.0/utilities/parser/#advanced-use-cases) in the official documentation*\n- [datadog/integrations-core](https://github.com/datadog/integrations-core)\n  - *[config models](https://github.com/datadog/integrations-core/blob/master/docs/developer/meta/config-models.md)*\n- [hashintel/hash](https://github.com/hashintel/hash)\n  - *[`codegen.sh`](https://github.com/hashintel/hash/blob/9762b1a1937e14f6b387677e4c7fe4a5f3d4a1e1/libs/%40local/hash-graph-client/python/scripts/codegen.sh#l21-l39)*\n- [ibm/compliance-trestle](https://github.com/ibm/compliance-trestle)\n  - *[building the models from the oscal schemas.](https://github.com/ibm/compliance-trestle/blob/develop/docs/contributing/website.md#building-the-models-from-the-oscal-schemas)*\n- [netflix/consoleme](https://github.com/netflix/consoleme)\n  - *[how do i generate models from the swagger specification?](https://github.com/netflix/consoleme/blob/master/docs/gitbook/faq.md#how-do-i-generate-models-from-the-swagger-specification)*\n- [nike-inc/brickflow](https://github.com/nike-inc/brickflow)\n  - *[code generate tools](https://github.com/nike-inc/brickflow/blob/e3245bf638588867b831820a6675ada76b2010bf/tools/readme.md?plain=1#l8)[`./tools/gen-bundle.sh`](https://github.com/nike-inc/brickflow/blob/e3245bf638588867b831820a6675ada76b2010bf/tools/gen-bundle.sh#l15-l22)*\n- [open-metadata/openmetadata](https://github.com/open-metadata/openmetadata)\n  - *[makefile](https://github.com/open-metadata/openmetadata/blob/main/makefile)*\n- [posthog/posthog](https://github.com/posthog/posthog)\n  - *[generate models via `npm run`](https://github.com/posthog/posthog/blob/e1a55b9cb38d01225224bebf8f0c1e28faa22399/package.json#l41)* \n- [seldonio/mlserver](https://github.com/seldonio/mlserver)\n  - *[generate-types.sh](https://github.com/seldonio/mlserver/blob/master/hack/generate-types.sh)*\n\n## supported input types\n-  openapi 3 (yaml/json, [openapi data type](https://github.com/oai/openapi-specification/blob/main/versions/3.0.2.md#data-types));\n-  json schema ([json schema core](http://json-schema.org/draft/2019-09/json-schema-validation.html)/[json schema validation](http://json-schema.org/draft/2019-09/json-schema-validation.html));\n-  json/yaml/csv data (it will be converted to json schema);\n-  python dictionary (it will be converted to json schema);\n-  graphql schema ([graphql schemas and types](https://graphql.org/learn/schema/));\n\n## supported output types\n- [pydantic](https://docs.pydantic.dev/1.10/).basemodel;\n- [pydantic_v2](https://docs.pydantic.dev/2.0/).basemodel;\n- [dataclasses.dataclass](https://docs.python.org/3/library/dataclasses.html);\n- [typing.typeddict](https://docs.python.org/3/library/typing.html#typing.typeddict);\n- [msgspec.struct](https://github.com/jcrist/msgspec);\n- custom type from your [jinja2](https://jinja.palletsprojects.com/en/3.1.x/) template;\n\n## installation\n\nto install `datamodel-code-generator`:\n```bash\n$ pip install datamodel-code-generator\n```\n\n### `http` extra option\nif you want to resolve `$ref` for remote files then you should specify `http` extra option.\n```bash\n$ pip install 'datamodel-code-generator[http]'\n```\n\n### `graphql` extra option\n\nif you want to generate data model from a graphql schema then you should specify `graphql` extra option.\n```bash\n$ pip install 'datamodel-code-generator[graphql]'\n```\n\n### docker image\nthe docker image is in [docker hub](https://hub.docker.com/r/koxudaxi/datamodel-code-generator)\n```bash\n$ docker pull koxudaxi/datamodel-code-generator\n```\n\n## advanced uses\nyou can generate models from a url.\n```bash\n$ datamodel-codegen --url https://<input file url> --output model.py\n```\nthis method needs the [http extra option](#http-extra-option)\n\n\n## all command options\n\nthe `datamodel-codegen` command:\n```bash\nusage:\n  datamodel-codegen [options]\n\ngenerate python data models from schema definitions or structured data\n\noptions:\n  --http-headers http_header [http_header ...]\n                        set headers in http requests to the remote host.\n                        (example: \"authorization: basic dxnlcjpwyxnz\")\n  --http-ignore-tls     disable verification of the remote host's tls\n                        certificate\n  --input input         input file/directory (default: stdin)\n  --input-file-type {auto,openapi,jsonschema,json,yaml,dict,csv}\n                        input file type (default: auto)\n  --output output       output file (default: stdout)\n  --output-model-type {pydantic.basemodel,pydantic_v2.basemodel,dataclasses.dataclass,typing.typeddict,msgspec.struct}\n  --url url             input file url. `--input` is ignored when `--url` is\n                        used\n\ntyping customization:\n  --base-class base_class\n                        base class (default: pydantic.basemodel)\n  --enum-field-as-literal {all,one}\n                        parse enum field as literal. all: all enum field type\n                        are literal. one: field type is literal when an enum\n                        has only one possible value\n  --field-constraints   use field constraints and not con* annotations\n  --set-default-enum-member\n                        set enum members as default values for enum field\n  --strict-types {str,bytes,int,float,bool} [{str,bytes,int,float,bool} ...]\n                        use strict types\n  --use-annotated       use typing.annotated for field(). also, `--field-\n                        constraints` option will be enabled.\n  --use-generic-container-types\n                        use generic container types for type hinting\n                        (typing.sequence, typing.mapping). if `--use-standard-\n                        collections` option is set, then import from\n                        collections.abc instead of typing\n  --use-non-positive-negative-number-constrained-types\n                        use the non{positive,negative}{floatint} types instead\n                        of the corresponding con* constrained types.\n  --use-one-literal-as-default\n                        use one literal as default value for one literal field\n  --use-standard-collections\n                        use standard collections for type hinting (list, dict)\n  --use-subclass-enum   define enum class as subclass with field type when\n                        enum has type (int, float, bytes, str)\n  --use-union-operator  use | operator for union type (pep 604).\n  --use-unique-items-as-set\n                        define field type as `set` when the field attribute\n                        has `uniqueitems`\n\nfield customization:\n  --capitalise-enum-members, --capitalize-enum-members\n                        capitalize field names on enum\n  --empty-enum-field-name empty_enum_field_name\n                        set field name when enum value is empty (default: `_`)\n  --field-extra-keys field_extra_keys [field_extra_keys ...]\n                        add extra keys to field parameters\n  --field-extra-keys-without-x-prefix field_extra_keys_without_x_prefix [field_extra_keys_without_x_prefix ...]\n                        add extra keys with `x-` prefix to field parameters.\n                        the extra keys are stripped of the `x-` prefix.\n  --field-include-all-keys\n                        add all keys to field parameters\n  --force-optional      force optional for required fields\n  --original-field-name-delimiter original_field_name_delimiter\n                        set delimiter to convert to snake case. this option\n                        only can be used with --snake-case-field (default: `_`\n                        )\n  --remove-special-field-name-prefix\n                        remove field name prefix if it has a special meaning\n                        e.g. underscores\n  --snake-case-field    change camel-case field name to snake-case\n  --special-field-name-prefix special_field_name_prefix\n                        set field name prefix when first character can't be\n                        used as python field name (default: `field`)\n  --strip-default-none  strip default none on fields\n  --use-default         use default value even if a field is required\n  --use-default-kwarg   use `default=` instead of a positional argument for\n                        fields that have default values.\n  --use-field-description\n                        use schema description to populate field docstring\n\nmodel customization:\n  --allow-extra-fields  allow to pass extra fields, if this flag is not\n                        passed, extra fields are forbidden.\n  --allow-population-by-field-name\n                        allow population by field name\n  --class-name class_name\n                        set class name of root model\n  --collapse-root-models\n                        models generated with a root-type field will be\n                        mergedinto the models using that root-type model\n  --disable-appending-item-suffix\n                        disable appending `item` suffix to model name in an\n                        array\n  --disable-timestamp   disable timestamp on file headers\n  --enable-faux-immutability\n                        enable faux immutability\n  --enable-version-header\n                        enable package version on file headers\n  --keep-model-order    keep generated models' order\n  --reuse-model         re-use models on the field when a module has the model\n                        with the same content\n  --target-python-version {3.6,3.7,3.8,3.9,3.10,3.11}\n                        target python version (default: 3.7)\n  --use-schema-description\n                        use schema description to populate class docstring\n  --use-title-as-name   use titles as class names of models\n\ntemplate customization:\n  --aliases aliases     alias mapping file\n  --custom-file-header custom_file_header\n                        custom file header\n  --custom-file-header-path custom_file_header_path\n                        custom file header file path\n  --custom-template-dir custom_template_dir\n                        custom template directory\n  --encoding encoding   the encoding of input and output (default: utf-8)\n  --extra-template-data extra_template_data\n                        extra template data\n  --use-double-quotes   model generated with double quotes. single quotes or\n                        your black config skip_string_normalization value will\n                        be used without this option.\n  --wrap-string-literal\n                        wrap string literal by using black `experimental-\n                        string-processing` option (require black 20.8b0 or\n                        later)\n  --additional-imports  custom imports for output (delimited list input).\n                        for example \"datetime.date,datetime.datetime\"\n  --custom-formatters   list of modules with custom formatter (delimited list input).\n  --custom-formatters-kwargs a file with kwargs for custom formatters.\n\nopenapi-only options:\n  --openapi-scopes {schemas,paths,tags,parameters} [{schemas,paths,tags,parameters} ...]\n                        scopes of openapi model generation (default: schemas)\n  --strict-nullable     treat default field as a non-nullable field (only\n                        openapi)\n  --use-operation-id-as-name\n                        use operation id of openapi as class names of models\n  --validation          deprecated: enable validation (only openapi). this\n                        option is deprecated. it will be removed in future\n                        releases\n\ngeneral options:\n  --debug               show debug message (require \"debug\". `$ pip install 'datamodel-code-generator[debug]'`)\n  --disable-warnings    disable warnings\n  --no-color            disable colorized output\n  --version             show version\n  -h, --help            show this help message and exit\n```\n\n## related projects\n### fastapi-code-generator\nthis code generator creates [fastapi](https://github.com/tiangolo/fastapi) app from an openapi file.\n\n[https://github.com/koxudaxi/fastapi-code-generator](https://github.com/koxudaxi/fastapi-code-generator)\n\n### pydantic-pycharm-plugin\n[a jetbrains pycharm plugin](https://plugins.jetbrains.com/plugin/12861-pydantic) for [`pydantic`](https://github.com/samuelcolvin/pydantic).\n\n[https://github.com/koxudaxi/pydantic-pycharm-plugin](https://github.com/koxudaxi/pydantic-pycharm-plugin)\n\n## pypi\n\n[https://pypi.org/project/datamodel-code-generator](https://pypi.org/project/datamodel-code-generator)\n\n## contributing\n\nsee `docs/development-contributing.md` for how to get started!\n\n## license\n\ndatamodel-code-generator is released under the mit license. http://www.opensource.org/licenses/mit-license\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "datamodel-code-generator",
  "package_url": "https://pypi.org/project/datamodel-code-generator/",
  "project_url": "https://pypi.org/project/datamodel-code-generator/",
  "project_urls": {
    "Homepage": "https://github.com/koxudaxi/datamodel-code-generator",
    "Repository": "https://github.com/koxudaxi/datamodel-code-generator"
  },
  "release_url": "https://pypi.org/project/datamodel-code-generator/0.25.2/",
  "requires_dist": [
    "PySnooper (>=0.4.1,<2.0.0) ; extra == \"debug\"",
    "argcomplete (>=1.10,<4.0)",
    "black (>=19.10b0)",
    "genson (>=1.2.1,<2.0)",
    "graphql-core (>=3.2.3,<4.0.0) ; extra == \"graphql\"",
    "httpx ; extra == \"http\"",
    "inflect (>=4.1.0,<6.0)",
    "isort (>=4.3.21,<6.0)",
    "jinja2 (>=2.10.1,<4.0)",
    "openapi-spec-validator (>=0.2.8,<0.7.0) ; extra == \"validation\"",
    "packaging",
    "prance (>=0.18.2) ; extra == \"validation\"",
    "pydantic[email] (>=1.10.0,!=2.0.0,!=2.0.1,<3.0,!=2.4.0) ; python_version >= \"3.12\" and python_version < \"4.0\"",
    "pydantic[email] (>=1.10.0,<3.0,!=2.4.0) ; python_version >= \"3.11\" and python_version < \"4.0\"",
    "pydantic[email] (>=1.5.1,<3.0,!=2.4.0) ; python_version < \"3.10\"",
    "pydantic[email] (>=1.9.0,<3.0,!=2.4.0) ; python_version >= \"3.10\" and python_version < \"3.11\"",
    "pyyaml (>=6.0.1)",
    "toml (>=0.10.0,<1.0.0) ; python_version < \"3.11\""
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "datamodel code generator",
  "version": "0.25.2",
  "releases": [],
  "developers": [
    "koudai_aono",
    "koxudaxi@gmail.com"
  ],
  "kwds": "pydantic_v2 openapi python dataclasses typeddict",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_datamodel_code_generator",
  "homepage": "https://github.com/koxudaxi/datamodel-code-generator",
  "release_count": 182,
  "dependency_ids": [
    "pypi_argcomplete",
    "pypi_black",
    "pypi_genson",
    "pypi_graphql_core",
    "pypi_httpx",
    "pypi_inflect",
    "pypi_isort",
    "pypi_jinja2",
    "pypi_openapi_spec_validator",
    "pypi_packaging",
    "pypi_prance",
    "pypi_pydantic",
    "pypi_pysnooper",
    "pypi_pyyaml",
    "pypi_toml"
  ],
  "documentation_summary": "The GitHub repository \"datamodel-code-generator\" by koxudaxi is a tool designed for generating Pydantic models and dataclasses from various data sources like JSON, OpenAPI, JSON Schema, and YAML. It simplifies the conversion process, making it easier to work with these data formats in Python. The project is open-source, licensed under the MIT license, and supports a range of input and output types including OpenAPI 3, JSON Schema, and GraphQL schema. It offers features like custom type generation through Jinja2 templates, installation via pip, and advanced usage options for generating models from URLs. The repository includes documentation for further details and has garnered significant interest with 2.2k stars and 247 forks on GitHub.",
  "embedding": [
    -0.02343265525996685,
    -0.00038771145045757294,
    0.007918912917375565,
    -0.02415127493441105,
    -0.0014627795899286866,
    0.04601987451314926,
    0.0004614669014699757,
    -0.05179701745510101,
    -0.0066965543664991856,
    -0.028603902086615562,
    0.019571833312511444,
    0.014273770153522491,
    -0.05154338851571083,
    0.02215041220188141,
    -0.005650327540934086,
    -0.006636668927967548,
    0.021389519795775414,
    -0.03150656446814537,
    0.009877505712211132,
    0.00695018470287323,
    0.03629736602306366,
    0.024898076429963112,
    0.001042703865095973,
    -0.007672327570617199,
    -0.00825708732008934,
    0.033732879906892776,
    -0.0031052143312990665,
    -0.02099498361349106,
    0.0008973946096375585,
    0.013336746022105217,
    0.029759330675005913,
    -0.0022016551811248064,
    -0.0199663694947958,
    -0.005777142941951752,
    0.011061115190386772,
    -0.009645010344684124,
    0.022136321291327477,
    0.02543351985514164,
    0.022685853764414787,
    0.006499285809695721,
    0.003448672592639923,
    0.0030717491172254086,
    -0.0025010802783071995,
    -0.02598305232822895,
    -0.023644015192985535,
    0.008186634629964828,
    0.007066432386636734,
    -0.03128111734986305,
    -0.010391811840236187,
    -0.008397993631660938,
    0.026433952152729034,
    0.013364926911890507,
    0.009511150419712067,
    -0.00840503815561533,
    0.012850620783865452,
    0.003924230113625526,
    -0.00977182574570179,
    0.022615401074290276,
    -0.014499220065772533,
    -0.001697035739198327,
    0.03604373708367348,
    -0.019459107890725136,
    -0.027913464233279228,
    0.009997275657951832,
    -0.013759464025497437,
    -0.016246452927589417,
    -0.024390816688537598,
    0.022615401074290276,
    0.0015420392155647278,
    -0.009630920365452766,
    0.023573560640215874,
    0.019135024398565292,
    0.0010268519399687648,
    -0.015471470542252064,
    0.05128975585103035,
    -0.02415127493441105,
    -0.0013667874736711383,
    -0.0016644512070342898,
    -0.02587032876908779,
    0.0025151707231998444,
    -0.0024817055091261864,
    -0.03071749210357666,
    -0.015302383340895176,
    0.03528284281492233,
    0.0031298729591071606,
    0.011800871230661869,
    -0.019106844440102577,
    0.011850188486278057,
    -0.0164578128606081,
    -0.018599582836031914,
    -0.0014407631242647767,
    0.02804027870297432,
    0.014090592972934246,
    0.006640191655606031,
    -0.00934910774230957,
    0.025940781459212303,
    0.002812834456562996,
    0.0229958463460207,
    0.013526968657970428,
    -0.008503672666847706,
    -0.019529560580849648,
    0.0329156257212162,
    -0.023883555084466934,
    -0.010356585495173931,
    -0.031478382647037506,
    0.0022104617673903704,
    0.027814829722046852,
    -0.015527833253145218,
    0.024066731333732605,
    0.028519360348582268,
    -0.014823303557932377,
    0.06746575981378555,
    -0.01004659291356802,
    -0.05560147762298584,
    0.010088864713907242,
    -0.01772596500813961,
    0.00662962393835187,
    -0.0074186972342431545,
    -0.0053297667764127254,
    0.024686718359589577,
    0.007644146680831909,
    0.04613260179758072,
    0.01517556793987751,
    0.0045195575803518295,
    0.0147246690467,
    -0.015541923232376575,
    -0.018839122727513313,
    0.00409683957695961,
    -0.004378651734441519,
    0.0024764216504991055,
    0.016049185767769814,
    0.0033359478693455458,
    0.025109436362981796,
    -0.004759097471833229,
    -0.03130929544568062,
    0.02712439000606537,
    -0.028942076489329338,
    0.016302816569805145,
    -0.012019275687634945,
    -0.0038819583132863045,
    -0.0012716760393232107,
    0.02277039736509323,
    -0.009708418510854244,
    0.007411651778966188,
    -0.01838822290301323,
    0.012132000178098679,
    0.006840982940047979,
    -0.011392244137823582,
    0.027420293539762497,
    0.0021558606531471014,
    0.019895916804671288,
    -0.004575919825583696,
    -0.013865143060684204,
    0.0010110000148415565,
    -0.005604533012956381,
    0.018289588391780853,
    0.0073905158787965775,
    0.0003359725815244019,
    -0.00704177375882864,
    0.02981569431722164,
    -0.002571533201262355,
    0.04751347750425339,
    -0.03356379270553589,
    -0.03023841232061386,
    -0.0029783989302814007,
    0.027476655319333076,
    0.036889173090457916,
    -0.019501380622386932,
    -0.033056531101465225,
    -0.015711011365056038,
    -2.3860437067924067e-05,
    0.04413173720240593,
    -0.013590376824140549,
    0.011645874939858913,
    -0.014372404664754868,
    0.02488398738205433,
    0.008200724609196186,
    0.004572397097945213,
    -0.03866458684206009,
    0.007623010780662298,
    0.005125453229993582,
    -0.0044526271522045135,
    0.0014927221927791834,
    0.039369117468595505,
    -0.02191087231040001,
    -0.013879233971238136,
    -0.014182181097567081,
    -0.006312585435807705,
    0.010391811840236187,
    0.007869595661759377,
    0.03407105430960655,
    0.025151707231998444,
    0.013407198712229729,
    -0.005470672622323036,
    -0.5726416707038879,
    -0.025940781459212303,
    -0.012780167162418365,
    -0.04435718432068825,
    0.015401017852127552,
    -0.0007674969383515418,
    -0.011948822066187859,
    -0.0024253432638943195,
    -0.018190955743193626,
    0.02475717104971409,
    -0.024123094975948334,
    0.0052874949760735035,
    -0.004984546918421984,
    -0.004646372981369495,
    -0.008327540010213852,
    -0.010462265461683273,
    0.014837394468486309,
    -0.0366637222468853,
    -0.022474495694041252,
    0.006330198608338833,
    -0.004734439309686422,
    0.03266199305653572,
    -0.026743944734334946,
    0.009645010344684124,
    -0.021629059687256813,
    -0.006425310391932726,
    0.003850254463031888,
    0.021164070814847946,
    0.0427226759493351,
    0.0016935131279751658,
    -0.04291994497179985,
    0.03229563683271408,
    -0.018007777631282806,
    -0.04745711758732796,
    0.05455877631902695,
    0.01101884339004755,
    0.005858163814991713,
    0.03150656446814537,
    0.014752850867807865,
    0.029054801911115646,
    -0.011159749701619148,
    0.0017401882214471698,
    -4.111590897082351e-05,
    0.022136321291327477,
    0.012759031727910042,
    -0.019881825894117355,
    0.011695192195475101,
    -0.0032584494911134243,
    -0.007510285824537277,
    -0.002846299670636654,
    0.020262273028492928,
    0.009482968598604202,
    0.023686286062002182,
    -0.036156460642814636,
    -0.0003179190098308027,
    -0.015415108762681484,
    0.014541491866111755,
    -0.032746538519859314,
    0.007672327570617199,
    -0.009687282145023346,
    0.02835027314722538,
    0.04018637165427208,
    0.009426606819033623,
    -0.023390384390950203,
    0.0039488887414336205,
    0.014781031757593155,
    0.01007477380335331,
    -0.01809232123196125,
    -0.01796550489962101,
    -0.038636405020952225,
    -0.00010435844887979329,
    -0.00383264129050076,
    -0.008750258013606071,
    0.004262404050678015,
    0.014485129155218601,
    0.04866890609264374,
    0.023784920573234558,
    0.004125020932406187,
    0.006907912902534008,
    0.03796005621552467,
    0.011617694050073624,
    0.01535874605178833,
    -0.031957462430000305,
    -0.009940912947058678,
    0.02191087231040001,
    -0.0162182729691267,
    -0.01827549934387207,
    0.0030330000445246696,
    0.017204614356160164,
    -0.019628195092082024,
    0.005255790892988443,
    0.01719052344560623,
    -0.009990230202674866,
    -0.03198564425110817,
    -0.00191632064525038,
    0.008905254304409027,
    -0.0174159724265337,
    -0.010201589204370975,
    -0.015626467764377594,
    -0.05810960382223129,
    -0.027406202629208565,
    -0.004575919825583696,
    0.01583782583475113,
    0.00825708732008934,
    0.021290885284543037,
    -0.016133729368448257,
    -0.027941646054387093,
    -2.0957004380761646e-05,
    -0.020121365785598755,
    -0.011934732086956501,
    -0.003022432094439864,
    -0.03207018971443176,
    -0.03359197452664375,
    -0.016190091148018837,
    -0.011096341535449028,
    -0.027645742520689964,
    0.010863847099244595,
    -0.0024940348230302334,
    0.007439832668751478,
    -0.009666146710515022,
    -0.018557310104370117,
    0.007933003827929497,
    -0.0017260975437238812,
    -0.004829550627619028,
    0.015992822125554085,
    0.01754278689622879,
    -0.003534977324306965,
    -0.026363499462604523,
    -0.006094181444495916,
    0.0010206872830167413,
    0.010765212588012218,
    -0.0025750556960701942,
    0.016838258132338524,
    -0.019642286002635956,
    0.027659833431243896,
    0.0013271577190607786,
    0.023094480857253075,
    0.02701166644692421,
    0.0021734738256782293,
    0.007524376269429922,
    -0.016556445509195328,
    0.013012662529945374,
    0.015795554965734482,
    -0.00037075873115099967,
    -0.002876242157071829,
    -0.0019480243790894747,
    -0.016908710822463036,
    -0.010081819258630276,
    0.012420857325196266,
    -0.013111296109855175,
    -0.021164070814847946,
    -0.007876641117036343,
    -0.021206341683864594,
    0.004942275583744049,
    -0.0019445017678663135,
    0.003850254463031888,
    0.0053544254042208195,
    -0.025701241567730904,
    -0.018796849995851517,
    0.00028181186644360423,
    0.04111634939908981,
    0.027702104300260544,
    -0.018120501190423965,
    0.016119638457894325,
    -0.039312753826379776,
    0.0003907937789335847,
    -0.02495444007217884,
    0.028308000415563583,
    -0.007876641117036343,
    -0.01893775723874569,
    -0.003719916334375739,
    -0.010962480679154396,
    4.004260063084075e-06,
    0.004741484299302101,
    0.022432222962379456,
    0.008313450030982494,
    -0.014752850867807865,
    0.011032934300601482,
    -0.024869896471500397,
    -0.001802715240046382,
    -0.018923666328191757,
    0.0022245522122830153,
    -0.033958327025175095,
    -0.019388655200600624,
    0.02512352727353573,
    0.024982620030641556,
    0.032380182296037674,
    0.012582899071276188,
    0.015020571649074554,
    0.019318202510476112,
    -0.01378059946000576,
    0.02409491315484047,
    -0.014527400955557823,
    0.01354105956852436,
    -0.004745007026940584,
    -0.009997275657951832,
    0.023813102394342422,
    0.0034979896154254675,
    -0.02548988163471222,
    0.02343265525996685,
    -0.001541158533655107,
    -0.0032566881272941828,
    0.002182280644774437,
    -0.01111043244600296,
    0.0027459042612463236,
    -0.017500516027212143,
    0.029223889112472534,
    -0.022192683070898056,
    0.010095909237861633,
    0.0013359643053263426,
    0.03525466099381447,
    0.01627463474869728,
    0.004332857206463814,
    -0.007432787679135799,
    0.008982752449810505,
    0.01283652987331152,
    -0.004117975477129221,
    0.016063274815678596,
    -0.0248276237398386,
    0.02379901148378849,
    0.00706995464861393,
    0.006897345185279846,
    -0.007048818748444319,
    0.002862151712179184,
    0.0217981468886137,
    -0.0006036938284523785,
    0.004466718062758446,
    0.01857140101492405,
    0.014527400955557823,
    -0.022234955802559853,
    -0.0028868101071566343,
    0.014865575358271599,
    0.006368947681039572,
    -0.015274202451109886,
    0.007876641117036343,
    0.016105547547340393,
    0.010279087349772453,
    -0.006886777002364397,
    0.033845603466033936,
    -0.039679110050201416,
    0.013717192225158215,
    -0.018064139410853386,
    0.023813102394342422,
    -0.01809232123196125,
    0.018557310104370117,
    0.011737463995814323,
    0.013090160675346851,
    0.00014112608914729208,
    -0.019642286002635956,
    -0.013498787768185139,
    -0.03302834928035736,
    0.032690174877643585,
    -0.0029819216579198837,
    0.008390948176383972,
    0.02130497619509697,
    -0.012695623561739922,
    0.018289588391780853,
    0.013491742312908173,
    0.033169254660606384,
    0.017317337915301323,
    0.014696488156914711,
    -0.01429490651935339,
    0.030999302864074707,
    0.01226586103439331,
    0.023813102394342422,
    -0.01295629981905222,
    -0.01917729713022709,
    -0.03125293552875519,
    -0.000726546160876751,
    -0.020135456696152687,
    -0.012195408344268799,
    -0.018360042944550514,
    -0.012392676435410976,
    -0.03604373708367348,
    0.02811073139309883,
    -0.0013500548666343093,
    0.0030153868719935417,
    0.048161644488573074,
    -0.0023231864906847477,
    0.019163206219673157,
    -0.03325380012392998,
    -0.02161496877670288,
    0.01858549192547798,
    -0.01712007075548172,
    0.01559828594326973,
    -0.010419993661344051,
    -0.041736334562301636,
    0.016176000237464905,
    -0.005646804813295603,
    0.023460837081074715,
    -0.0019321724539622664,
    0.003170383395627141,
    0.0027670401614159346,
    0.016922801733016968,
    -0.01585191674530506,
    0.0007613323396071792,
    0.008989797905087471,
    -0.0253067035228014,
    -0.008552989922463894,
    -0.004928184673190117,
    0.004854209255427122,
    0.030548404902219772,
    -0.011793825775384903,
    -0.014386494643986225,
    0.03409923240542412,
    -0.001988534815609455,
    -0.030125686898827553,
    -0.018923666328191757,
    -0.01875457912683487,
    -0.03883367404341698,
    -0.010419993661344051,
    0.022375861182808876,
    0.0033711742144078016,
    -0.013104251585900784,
    -0.007249610032886267,
    -0.026067595928907394,
    0.0073975613340735435,
    0.009870460256934166,
    0.02209404855966568,
    0.011011797934770584,
    -0.0025010802783071995,
    -0.01280834898352623,
    -0.01235745009034872,
    0.004938752856105566,
    0.01743006333708763,
    0.021657241508364677,
    -0.004508989863097668,
    -0.002097737044095993,
    -0.028265729546546936,
    0.014048321172595024,
    -0.01706370711326599,
    0.01602100394666195,
    -0.0039488887414336205,
    -0.004234223160892725,
    -0.016542356461286545,
    0.008940480649471283,
    -0.003705825889483094,
    0.007228474132716656,
    0.01906457170844078,
    0.0005865209386684,
    0.001308663748204708,
    0.01882503181695938,
    0.0031598154455423355,
    -0.005361470393836498,
    0.0022439269814640284,
    -0.007182679604738951,
    0.019769102334976196,
    -0.007376425433903933,
    0.05498149245977402,
    0.012850620783865452,
    0.02615213952958584,
    0.020374996587634087,
    0.0016160148661583662,
    -0.024264000356197357,
    -0.0020501811522990465,
    0.0027793694753199816,
    0.005868731997907162,
    0.02913934551179409,
    -0.018853213638067245,
    0.022671762853860855,
    0.019529560580849648,
    0.022474495694041252,
    -0.014013093896210194,
    0.019346384331583977,
    0.026293044909834862,
    0.02022000029683113,
    -0.002037852071225643,
    -0.006728257983922958,
    -0.012667442671954632,
    -0.018486857414245605,
    -0.015739191323518753,
    0.01068771444261074,
    0.004861254245042801,
    -0.041679974645376205,
    -0.0007115749176591635,
    0.020008642226457596,
    -0.03880549222230911,
    -0.02453172206878662,
    0.009687282145023346,
    0.004868299700319767,
    -0.017091888934373856,
    -0.03655099868774414,
    0.003432820551097393,
    -0.018684126436710358,
    -0.004907048773020506,
    -0.023714467883110046,
    0.00769346347078681,
    -0.015795554965734482,
    -0.004727393854409456,
    0.025292614474892616,
    -0.0006032534874975681,
    -0.001211790950037539,
    -0.04387810453772545,
    0.007975275628268719,
    0.013132432475686073,
    -0.03460649400949478,
    -0.013393108732998371,
    -0.016852349042892456,
    -0.019135024398565292,
    0.006914958357810974,
    -0.005720780696719885,
    0.006442923564463854,
    0.022263135761022568,
    -0.011089296080172062,
    -0.0033553224056959152,
    -0.03680462762713432,
    0.0022280749399214983,
    -0.045146260410547256,
    0.02269994467496872,
    -0.015556014142930508,
    -0.0015085741179063916,
    -0.01286471076309681,
    0.01186427939683199,
    0.04401900991797447,
    -0.0019233658676967025,
    0.019205477088689804,
    0.0035613973159343004,
    -0.008574125356972218,
    0.024503540247678757,
    -0.0011325313244014978,
    0.011800871230661869,
    0.0010532718151807785,
    0.0010065967217087746,
    0.0024764216504991055,
    0.019092753529548645,
    -0.04184906184673309,
    -0.023827191442251205,
    -0.028434816747903824,
    0.03404287248849869,
    0.004079226404428482,
    0.0066437143832445145,
    0.007940049283206463,
    -0.013414244167506695,
    0.00260147568769753,
    0.021713603287935257,
    -0.015062843449413776,
    -0.0026913031470030546,
    -0.0010277326218783855,
    0.003318334463983774,
    0.0045583066530525684,
    -0.008771393448114395,
    0.028787080198526382,
    -0.023207206279039383,
    -0.0017745340010151267,
    0.021319067105650902,
    -0.03370469808578491,
    0.03956638276576996,
    0.02470080927014351,
    0.012878801673650742,
    0.04066545143723488,
    -0.013886279426515102,
    -0.0009097238653339446,
    -0.021149979904294014,
    0.01638735830783844,
    0.016133729368448257,
    -0.0028304478619247675,
    -0.01838822290301323,
    -0.03635372966527939,
    0.005488285794854164,
    -0.0008793410379439592,
    -0.016471901908516884,
    0.0024658537004143,
    -0.008221860975027084,
    -0.008095045574009418,
    -0.006273836363106966,
    -0.010448174551129341,
    -0.019839555025100708,
    0.002191087231040001,
    -0.007376425433903933,
    -0.024376725777983665,
    -0.026673492044210434,
    0.009616829454898834,
    0.013484696857631207,
    0.013829916715621948,
    -0.002145292703062296,
    0.012244724668562412,
    -0.020079094916582108,
    -0.03717098385095596,
    -0.017585059627890587,
    0.007503240369260311,
    -0.018176864832639694,
    -0.012279951013624668,
    0.001718171639367938,
    0.03440922871232033,
    0.03350742906332016,
    0.007911867462098598,
    0.02615213952958584,
    0.012899937108159065,
    0.009426606819033623,
    -0.006333721335977316,
    -0.0018934233812615275,
    0.015527833253145218,
    -0.015626467764377594,
    -0.021037254482507706,
    -0.03562101721763611,
    0.032633811235427856,
    0.005939184688031673,
    -0.030576586723327637,
    -0.0013209930621087551,
    -0.005889867898076773,
    0.004058090504258871,
    -0.022742215543985367,
    0.002816357184201479,
    -0.03460649400949478,
    -0.007475059479475021,
    0.012829484418034554,
    -0.007013592403382063,
    0.012343359179794788,
    -0.033479247242212296,
    -0.012117909267544746,
    0.030604766681790352,
    -0.01967046782374382,
    0.015992822125554085,
    0.008877073414623737,
    -5.611468441202305e-05,
    -0.01657053641974926,
    0.03229563683271408,
    0.011244293302297592,
    -0.0025098868645727634,
    0.004667508881539106,
    0.016401449218392372,
    -0.022206773981451988,
    -0.02725120633840561,
    -0.0013694295194000006,
    0.014950118958950043,
    0.014992390759289265,
    0.023150844499468803,
    -9.043298632605001e-05,
    0.011667010374367237,
    0.02464444562792778,
    0.01607736572623253,
    -0.007827323861420155,
    0.004748529754579067,
    -0.03046386130154133,
    -0.027659833431243896,
    -0.04286358132958412,
    -0.011730418540537357,
    -0.027603471651673317,
    0.002759994938969612,
    0.0025151707231998444,
    0.00934910774230957,
    0.018726397305727005,
    0.012012230232357979,
    -0.01566873863339424,
    0.007446878124028444,
    -0.009025024250149727,
    0.02919570729136467,
    0.025334885343909264,
    0.03488830849528313,
    0.04951434209942818,
    0.0059920246712863445,
    -0.008271178230643272,
    -0.004318766761571169,
    -0.023207206279039383,
    -0.016767805442214012,
    0.015866007655858994,
    0.02471490018069744,
    -0.00801754742860794,
    -0.015541923232376575,
    0.010081819258630276,
    -0.020910440012812614,
    -0.027547108009457588,
    -0.006485195364803076,
    0.018317770212888718,
    0.014273770153522491,
    0.028336182236671448,
    -0.03612827882170677,
    0.0011219634907320142,
    0.004287062678486109,
    0.0014830349246039987,
    -0.023404473438858986,
    0.006316108163446188,
    0.016373269259929657,
    -0.02222086489200592,
    -0.01735961064696312,
    0.008390948176383972,
    0.0417645163834095,
    0.003550829365849495,
    0.014809212647378445,
    -0.008686850778758526,
    0.0009290984598919749,
    -0.03314107283949852,
    -0.006252700462937355,
    0.015485561452805996,
    0.01049749180674553,
    0.01930411159992218,
    0.013738327659666538,
    -0.009377289563417435,
    0.034578315913677216,
    -0.010913164354860783,
    -0.003529693465679884,
    0.008651623502373695,
    0.0059215715155005455,
    0.039791833609342575,
    -0.008235950954258442,
    -6.307741568889469e-05,
    -0.027476655319333076,
    0.016063274815678596,
    -0.0016054469160735607,
    -0.022742215543985367,
    -0.013322655111551285,
    -0.010574989952147007,
    -0.029477519914507866,
    -0.004921139683574438,
    -0.007098136004060507,
    -0.018951846286654472,
    -0.014541491866111755,
    -0.011800871230661869,
    -0.0025451132096350193,
    -0.009645010344684124,
    -0.015372836962342262,
    0.010441129095852375,
    0.021347247064113617,
    -0.03660735860466957,
    -0.01633099652826786,
    0.00932092685252428,
    -0.024686718359589577,
    -0.002321425126865506,
    0.008235950954258442,
    0.008088000118732452,
    0.006294972263276577,
    0.02348901703953743,
    -0.009447742253541946,
    0.03728370741009712,
    0.004410355351865292,
    0.01092725433409214,
    -0.0176555123180151,
    0.019332293421030045,
    -0.02429218217730522,
    -0.014978299848735332,
    -0.0016644512070342898,
    0.016500083729624748,
    -0.034578315913677216,
    -0.015161477960646152,
    0.004234223160892725,
    0.016711443662643433,
    0.007721644826233387,
    -0.006777575239539146,
    0.017866872251033783,
    0.014048321172595024,
    0.020783623680472374,
    -0.006731780711561441,
    -0.01991000771522522,
    0.02475717104971409,
    -0.0004526602861005813,
    -0.005407264921814203,
    -0.028617992997169495,
    0.007158020976930857,
    -0.002333754440769553,
    0.00825708732008934,
    0.008686850778758526,
    -0.0021505767945200205,
    -0.037847332656383514,
    -0.02391173504292965,
    -0.0009290984598919749,
    -0.009525240398943424,
    -0.01783869042992592,
    0.038213688880205154,
    -0.0197268296033144,
    -0.031224753707647324,
    -0.025095345452427864,
    0.018684126436710358,
    0.022502675652503967,
    0.006220996845513582,
    0.015922369435429573,
    0.02403855137526989,
    0.0162182729691267,
    0.005449536722153425,
    -0.003221461782231927,
    -0.011836097575724125,
    -0.028336182236671448,
    0.019036389887332916,
    -0.029533881694078445,
    -0.027208933606743813,
    -0.01253358181566,
    0.04024273157119751,
    0.029787512496113777,
    -0.013534014113247395,
    -0.01821913570165634,
    -0.015048752538859844,
    -0.005097271874547005,
    -0.021079527214169502,
    -0.023756738752126694,
    0.037368252873420715,
    -0.006132930517196655,
    0.003984115086495876,
    0.01298448070883751,
    -0.005428400821983814,
    0.0051501113921403885,
    0.04511807858943939,
    -0.012794258072972298,
    0.008862982504069805,
    -0.003154531354084611,
    0.015302383340895176,
    0.005033864174038172,
    -0.022319499403238297,
    -0.04249722883105278,
    0.004322289489209652,
    0.0003190198331139982,
    -0.018670035526156425,
    -0.02313675358891487,
    0.04117271304130554,
    -0.0122940419241786,
    -0.002904423512518406,
    -0.00472034839913249,
    -0.012491310015320778,
    -0.016922801733016968,
    0.011025888845324516,
    0.005682031624019146,
    -0.04382174462080002,
    -0.020797714591026306,
    0.010877937078475952,
    0.015471470542252064,
    0.01796550489962101,
    -0.025954872369766235,
    0.0028304478619247675,
    -0.013188794255256653,
    -0.007091090548783541,
    -0.019459107890725136,
    0.0032320297323167324,
    -0.008700940757989883,
    0.0007186201983131468,
    0.0248276237398386,
    0.004487853962928057,
    0.02651849575340748,
    0.047992557287216187,
    0.00920115690678358,
    -0.00870798621326685,
    -0.0007256655371747911,
    -0.006361902691423893,
    -0.007637101225554943,
    -0.008313450030982494,
    0.02051590196788311,
    -0.03528284281492233,
    0.02543351985514164,
    -0.02246040478348732,
    0.0431172139942646,
    -0.020121365785598755,
    0.0014337177854031324,
    -0.014851484447717667,
    -0.002069555688649416,
    -0.010455220006406307,
    0.008503672666847706,
    0.008038682863116264,
    -0.01557010505348444,
    0.010060682892799377,
    0.006566216237843037,
    0.010532718151807785,
    -0.0025222161784768105,
    -0.022446313872933388,
    0.004322289489209652,
    -0.023770829662680626,
    -0.014196272008121014,
    0.006397129036486149,
    -0.008644578978419304,
    -0.026969393715262413,
    0.01413990929722786,
    0.010448174551129341,
    -0.011476787738502026,
    0.010025456547737122,
    0.19963552057743073,
    0.00861639715731144,
    0.01675371453166008,
    0.014654216356575489,
    0.028336182236671448,
    0.006245655007660389,
    0.012582899071276188,
    0.0005231132381595671,
    -0.015288293361663818,
    0.03525466099381447,
    -0.020713170990347862,
    -0.0003610714338719845,
    0.0072355191223323345,
    -0.001545561826787889,
    0.03035113587975502,
    0.005611578468233347,
    -0.013379017822444439,
    -0.038749128580093384,
    -0.027843011543154716,
    0.005808847025036812,
    0.013280383311212063,
    0.006865641102194786,
    -0.039002761244773865,
    -0.0357055626809597,
    0.024052642285823822,
    0.004117975477129221,
    -0.019769102334976196,
    0.0053332895040512085,
    0.02027636207640171,
    -0.002127679530531168,
    -0.02471490018069744,
    0.010920208878815174,
    0.02240404300391674,
    0.008884118869900703,
    -0.02585623785853386,
    -0.026391679421067238,
    -0.00043526722583919764,
    -0.03192928433418274,
    0.006594397127628326,
    0.03770642727613449,
    0.017923234030604362,
    -0.04424446076154709,
    -0.0018722874810919166,
    -0.025024892762303352,
    -0.001532351947389543,
    -0.04353993013501167,
    -0.004054568242281675,
    0.0052910177037119865,
    0.010934299789369106,
    0.02093861997127533,
    -0.0366637222468853,
    -0.006682463455945253,
    0.018233226612210274,
    -0.016359178349375725,
    0.002789937425404787,
    -0.02768801525235176,
    -0.007792097516357899,
    0.013851052150130272,
    0.029787512496113777,
    0.007961184717714787,
    -0.009236383251845837,
    0.03029477410018444,
    -0.03412741422653198,
    0.015739191323518753,
    -0.04382174462080002,
    0.0014293144922703505,
    -0.030942941084504128,
    -0.008341630920767784,
    0.020896349102258682,
    -0.009630920365452766,
    -0.023770829662680626,
    -0.011955867521464825,
    -0.007383470423519611,
    -0.014118773862719536,
    -0.016908710822463036,
    -0.04390628635883331,
    0.0227563064545393,
    0.007108704186975956,
    0.021924961358308792,
    0.03708643838763237,
    -0.010567944496870041,
    0.015415108762681484,
    -0.0019515471067279577,
    -0.00882775615900755,
    -0.003719916334375739,
    -0.017387790605425835,
    0.021206341683864594,
    -0.019811373203992844,
    -0.0026772127021104097,
    -0.020544083788990974,
    -0.013738327659666538,
    -0.021023163571953773,
    0.013519923202693462,
    0.005044432356953621,
    -0.005104317329823971,
    0.008475491777062416,
    0.016979163512587547,
    0.023235388100147247,
    0.005664418451488018,
    -0.006731780711561441,
    -0.03593100979924202,
    0.05923685058951378,
    0.022488586604595184,
    -0.005858163814991713,
    -0.01906457170844078,
    0.017951415851712227,
    0.008419129066169262,
    0.02313675358891487,
    -0.0034592405427247286,
    -0.0025063641369342804,
    0.0027282910887151957,
    -0.02185450866818428,
    0.0044948989525437355,
    0.004417400807142258,
    0.02253085747361183,
    0.0009467116906307638,
    0.01071589533239603,
    -0.014611944556236267,
    -0.005234654992818832,
    0.005745439324527979,
    0.008954571560025215,
    -0.012526536360383034,
    -0.011800871230661869,
    0.009947958402335644,
    -0.012963345274329185,
    -0.013604466803371906,
    -0.022911302745342255,
    0.010363630950450897,
    -0.023235388100147247,
    0.009940912947058678,
    0.004878867883235216,
    -0.008841847069561481,
    0.02167133055627346,
    0.018740488216280937,
    -0.0072355191223323345,
    -0.013005617074668407,
    0.005037386901676655,
    -0.008602307178080082,
    -0.003719916334375739,
    0.005548170767724514,
    -0.02148815430700779,
    0.010067728348076344,
    0.035001032054424286,
    -0.01031431369483471,
    0.027406202629208565,
    -0.02293948456645012,
    0.0073482440784573555,
    -0.005590442568063736,
    0.003966501913964748,
    -0.017697785049676895,
    -0.003381742164492607,
    0.0034944668877869844,
    0.017711874097585678,
    -0.006805756129324436,
    0.012589944526553154,
    -0.02379901148378849,
    -0.007672327570617199,
    -0.022840850055217743,
    0.005763052497059107,
    -0.017993686720728874,
    -0.018543219193816185,
    -0.013012662529945374,
    0.003441627137362957,
    0.0016820644959807396,
    0.011737463995814323,
    -0.04170815274119377,
    -0.17787964642047882,
    0.013667874969542027,
    0.011039979755878448,
    -0.06340766698122025,
    0.007918912917375565,
    0.02658894844353199,
    0.011927686631679535,
    -0.02433445304632187,
    -0.00021135888528078794,
    -0.0029731150716543198,
    0.03288744390010834,
    -0.0066190557554364204,
    -0.025757603347301483,
    -0.01888139359652996,
    0.004526603035628796,
    0.009180021472275257,
    -0.009158885106444359,
    -0.0013474129373207688,
    0.034211959689855576,
    0.01662690006196499,
    0.026490313932299614,
    -0.030266592279076576,
    0.015443289652466774,
    0.028561631217598915,
    -0.0012699146755039692,
    0.00374105223454535,
    -0.009130704216659069,
    0.015443289652466774,
    -0.02293948456645012,
    -0.01429490651935339,
    -0.014809212647378445,
    0.005185338202863932,
    0.021234523504972458,
    0.028575722128152847,
    0.02258721925318241,
    0.00406865868717432,
    0.046414412558078766,
    0.00024328289146069437,
    -0.023629924282431602,
    0.027828920632600784,
    0.008672759868204594,
    0.01375241857022047,
    0.017218703404068947,
    -0.03066113032400608,
    0.006122362334281206,
    0.020008642226457596,
    0.016471901908516884,
    -0.022108139470219612,
    0.0002461450349073857,
    -0.008715031668543816,
    0.0408063568174839,
    -0.023869464173913002,
    0.005865209270268679,
    -0.009976139292120934,
    0.0016459573525935411,
    0.017148250713944435,
    0.005315675865858793,
    0.010786348953843117,
    0.009659101255238056,
    -0.01864185370504856,
    0.004265926778316498,
    -0.027758467942476273,
    -0.006073045544326305,
    0.008447309955954552,
    -0.007658237125724554,
    -0.017035527154803276,
    -0.0352264828979969,
    0.03229563683271408,
    -0.018853213638067245,
    0.004836596082895994,
    -0.009962049312889576,
    0.027659833431243896,
    0.00040158189949579537,
    0.022192683070898056,
    0.008884118869900703,
    0.004663986153900623,
    -0.01490784715861082,
    0.02313675358891487,
    0.03004114329814911,
    -0.01906457170844078,
    -0.012970390729606152,
    0.033901967108249664,
    -0.013012662529945374,
    0.012124954722821712,
    0.013400153256952763,
    0.018078230321407318,
    -0.0015666977269575,
    -0.009327972307801247,
    -0.009264565072953701,
    0.011617694050073624,
    0.01979728229343891,
    -0.011483833193778992,
    0.013315609656274319,
    0.0027423815336078405,
    -0.01943092793226242,
    0.008545944467186928,
    -0.00314924749545753,
    -2.2883452402311377e-05,
    -0.02981569431722164,
    -0.0073693799786269665,
    0.018740488216280937,
    0.00959569402039051,
    -0.026321226730942726,
    0.008433219976723194,
    0.01589418761432171,
    0.02512352727353573,
    -0.022361770272254944,
    0.027180753648281097,
    0.02040317840874195,
    0.010906118899583817,
    -0.00543544627726078,
    0.04035545885562897,
    0.02271403558552265,
    0.0014416438061743975,
    -0.007714599370956421,
    0.029787512496113777,
    -0.003593101166188717,
    0.001219716970808804,
    -0.0022492108400911093,
    0.014280815608799458,
    0.026729853823781013,
    -0.0038432092405855656,
    -0.0005733110010623932,
    0.009468878619372845,
    -0.0187686700373888,
    -0.041736334562301636,
    -0.11030115932226181,
    -0.04570988193154335,
    0.006541557610034943,
    -0.006661327555775642,
    -0.03277471661567688,
    -0.006636668927967548,
    -0.0021769965533167124,
    0.027180753648281097,
    -0.018064139410853386,
    0.010758167132735252,
    -0.009687282145023346,
    0.007876641117036343,
    -0.018486857414245605,
    0.004396264906972647,
    -0.012815393507480621,
    -0.027814829722046852,
    -0.024137185886502266,
    -0.02062862738966942,
    -0.0010409425012767315,
    0.010067728348076344,
    -0.014555581845343113,
    -0.008841847069561481,
    -0.006999501958489418,
    0.007038251031190157,
    -0.0016935131279751658,
    0.0029731150716543198,
    -0.04204632714390755,
    0.006562693510204554,
    0.012279951013624668,
    0.006721212528645992,
    0.025588516145944595,
    -0.03083021752536297,
    -0.0053544254042208195,
    -0.005773620214313269,
    -0.0097436448559165,
    0.0007683776202611625,
    -0.012237679213285446,
    -0.03209837153553963,
    0.04511807858943939,
    -0.022375861182808876,
    -0.0017216942505910993,
    6.86916391714476e-05,
    0.013886279426515102,
    -0.005889867898076773,
    -0.01626054383814335,
    0.008327540010213852,
    -0.006291449535638094,
    0.039369117468595505,
    0.028026187792420387,
    -0.01814868301153183,
    -0.014013093896210194,
    -0.010039547458291054,
    -0.025447610765695572,
    0.00867980532348156,
    0.020177729427814484,
    -0.009236383251845837,
    0.002951979171484709,
    0.0013095444301143289,
    -0.0225167665630579,
    0.011011797934770584,
    0.004678076598793268,
    -0.007228474132716656,
    0.011385198682546616,
    0.01199109386652708,
    -0.014738759957253933,
    0.014541491866111755,
    -0.014752850867807865,
    -0.0011298893950879574,
    0.03491649031639099,
    -0.025405338034033775,
    0.001891662017442286,
    0.004001728259027004,
    -0.01723279431462288,
    -0.0023654582910239697,
    -0.024362634867429733,
    -0.007672327570617199,
    -0.014541491866111755,
    0.008031637407839298,
    0.001726978225633502,
    -0.012878801673650742,
    -0.011209066025912762,
    0.012223589234054089,
    -0.0215586069971323,
    -0.019261840730905533,
    0.006777575239539146,
    0.012899937108159065,
    0.029223889112472534,
    0.013160613365471363,
    0.015076934359967709,
    -0.05906776338815689,
    -0.0024817055091261864,
    -0.00011052308400394395,
    0.021643150597810745,
    -0.01899411901831627,
    0.002192848362028599,
    0.011758599430322647,
    -0.0031650993041694164,
    0.010264996439218521,
    -0.028195274993777275,
    0.013224021531641483,
    -0.02603941597044468,
    -0.01954365149140358,
    -0.0789073184132576,
    0.01511920616030693,
    0.018303679302334785,
    -0.008841847069561481,
    0.015429198741912842,
    -0.03581828624010086,
    0.0019092753063887358,
    -0.0037375297397375107,
    0.023150844499468803,
    0.041679974645376205,
    -0.03429650142788887,
    -0.002918513957411051,
    -0.024489449337124825,
    -0.0012989764800295234,
    -0.02355947159230709,
    -0.00846844632178545,
    0.027335749939084053,
    -0.004593532998114824,
    0.028942076489329338,
    -0.005727825686335564,
    0.018543219193816185,
    -0.0017701307078823447,
    0.023474927991628647,
    0.010701805353164673,
    -0.0217981468886137,
    -0.012970390729606152,
    -0.021924961358308792,
    0.03965092822909355,
    -0.01609145663678646,
    -0.025109436362981796,
    0.011631784029304981,
    -0.006375993136316538,
    -0.0053544254042208195,
    0.013505833223462105,
    0.012885847128927708,
    0.002321425126865506,
    0.026377588510513306,
    -0.0014363598311319947,
    0.014766940847039223,
    0.02805436961352825,
    -0.01144156139343977,
    -0.04728803038597107,
    0.027349840849637985,
    -0.005703167524188757,
    -0.027039846405386925,
    -0.007242564577609301,
    -0.012272906489670277,
    -0.014358313754200935,
    0.016246452927589417,
    -0.010518627241253853,
    0.036748263984918594,
    -0.004952843300998211,
    -0.03824186697602272,
    -0.037368252873420715,
    -0.005671463441103697,
    -0.014280815608799458,
    0.028575722128152847,
    0.007538467179983854,
    -0.010469309985637665,
    0.027406202629208565,
    0.01869821548461914,
    0.0032373135909438133,
    -0.0023654582910239697,
    -0.016838258132338524,
    -0.00953228585422039,
    -0.0032584494911134243,
    -0.0299284178763628,
    -0.014259680174291134,
    9.604720253264531e-05,
    -0.030971122905611992,
    -0.022685853764414787,
    -0.02512352727353573,
    0.021037254482507706,
    -0.005622146651148796,
    0.02756119892001152,
    -0.006066000089049339,
    -0.0273780208081007,
    -0.0012153135612607002,
    -0.014062411151826382,
    0.0529242642223835,
    0.025053072720766068,
    -0.016908710822463036,
    -0.01123020239174366,
    0.025884417816996574,
    0.029421158134937286,
    0.014950118958950043,
    -0.028448905795812607,
    -0.014034230262041092,
    0.0007630936452187598,
    -0.003154531354084611,
    -0.008961617015302181,
    0.005703167524188757,
    -0.008278222754597664,
    0.025278523564338684,
    0.011807916685938835,
    -0.01116679422557354,
    0.005047954618930817,
    -0.018599582836031914,
    0.010546808131039143,
    0.01602100394666195,
    0.02271403558552265,
    -0.027223024517297745,
    0.0035244093742221594,
    -0.02919570729136467,
    -0.014583763666450977,
    -0.00546362716704607,
    -0.010469309985637665,
    -0.032267458736896515,
    0.0017463528783991933,
    0.02750483714044094,
    0.0025821011513471603,
    -0.024418996647000313,
    -0.02082589641213417,
    0.030435679480433464,
    -0.006372470408678055,
    0.041792698204517365,
    0.014365359209477901,
    -0.030520223081111908,
    -0.022629491984844208,
    0.019346384331583977,
    -0.000240640903939493,
    0.003055897308513522,
    0.022065868601202965,
    -0.010448174551129341,
    0.026081686839461327,
    0.03212654963135719,
    0.005667940713465214,
    -0.018190955743193626,
    0.003140440909191966,
    -0.005400219466537237,
    -0.03277471661567688,
    0.0007516450714319944,
    -0.021643150597810745,
    -0.021882690489292145,
    -0.02756119892001152,
    -0.009792962111532688,
    -0.012674488127231598,
    -0.00807390920817852,
    -0.0073130177333951,
    0.08521990478038788,
    0.024193547666072845,
    0.0001330900558969006,
    0.0033130506053566933,
    -0.006474627181887627,
    0.017204614356160164,
    0.026870759204030037,
    0.0018810940673574805,
    -0.0009854608215391636,
    -0.03728370741009712,
    -0.0012593467254191637,
    -0.004044000059366226,
    -0.035592835396528244,
    -0.025348976254463196,
    -0.0005935662193223834,
    0.011025888845324516,
    -0.010856801643967628,
    0.01001136563718319,
    0.006703599356114864,
    0.0352264828979969,
    0.027730286121368408,
    0.020473631098866463,
    -0.012286996468901634,
    0.006400651764124632,
    -0.021995415911078453,
    0.004230700433254242,
    0.023207206279039383,
    0.020191818475723267,
    -0.0065133762545883656,
    -0.03359197452664375,
    0.01538692694157362,
    0.023756738752126694,
    0.0020114320795983076,
    -0.011272474192082882,
    -0.023573560640215874,
    0.00546362716704607,
    -0.006840982940047979,
    -0.003466285765171051,
    -0.006724735256284475,
    0.017387790605425835,
    0.014682397246360779,
    -0.03322561830282211,
    -0.022601310163736343,
    -0.02422172948718071,
    0.02130497619509697,
    0.012885847128927708,
    0.014851484447717667,
    -0.015992822125554085,
    -0.014301951043307781
  ]
}
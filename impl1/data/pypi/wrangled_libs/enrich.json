{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: system :: systems administration",
    "topic :: utilities"
  ],
  "description": "# enrich\n\nenriched extends [rich](https://pypi.org/project/rich/) library functionality\nwith a set of changes that were not accepted to rich itself.\n\n## console with redirect support\n\nour console class adds one additional option to rich.console in order to\nredirect `sys.stdout` and `sys.stderr` streams using a fileproxy.\n\n```python\nfrom enrich.console import console\nimport sys\n\nconsole = console(\n    redirect=true,  # <-- not supported by rich.cosole.console\n    record=true)\nsys.write(\"foo\")\n\n# this assert would have passed without redirect=true\nassert console.export_text() == \"foo\"\n```\n\n## console with implicit soft wrapping\n\nif you want to produce fluid terminal output, one where the client terminal\ndecides where to wrap the text instead of the application, you can now\ntell the console constructor the soft_wrap preference.\n\n```python\nfrom enrich.console import console\nimport sys\n\nconsole = console(soft_wrap=true)\nconsole.print(...)  # no longer need to pass soft_wrap to each print\n```\n\n## console.print can also deal with ansi escapes\n\nextends rich console to detect if original text already had ansi escapes and\ndecodes it before processing it. this solves the case where printing\noutput captured from other processes that contained ansi escapes would brake.\n[upstream-404](https://github.com/willmcgugan/rich/discussions/404)\n\n## soft-wrapping logger\n\nrich logger assumes that you always have a fixed width console and it does\nwrap logged output according to it. our alternative logger does exactly the\nopposite: it ignores the columns of the current console and prints output\nusing a console with soft wrapping enabled.\n\nthe result are logged lines that can be displayed on any terminal or web\npage as they will allow the client to decide when to perform the wrapping.\n\n```python\nimport logging\nfrom enrich.logging import richhandler\n\nformat = \"%(message)s\"\nlogging.basicconfig(\n    level=\"notset\", format=format, datefmt=\"[%x]\", handlers=[richhandler()]\n)\n\nlog = logging.getlogger(\"rich\")\nlog.info(\"text that we do not want pre-wrapped by logger: %s\", 100 * \"x\")\n```\n\n\n",
  "docs_url": null,
  "keywords": "console,logging,rich",
  "license": "mit",
  "name": "enrich",
  "package_url": "https://pypi.org/project/enrich/",
  "project_url": "https://pypi.org/project/enrich/",
  "project_urls": {
    "Bug Tracker": "https://github.com/pycontribs/enrich/issues",
    "CI": "https://github.com/pycontribs/enrich/actions",
    "Homepage": "https://github.com/pycontribs/enrich",
    "Release Management": "https://github.com/pycontribs/enrich/releases",
    "Source Code": "https://github.com/pycontribs/enrich"
  },
  "release_url": "https://pypi.org/project/enrich/1.2.7/",
  "requires_dist": [
    "rich (>=9.5.1)",
    "mock (>=3.0.5) ; extra == 'test'",
    "pytest-cov (>=2.7.1) ; extra == 'test'",
    "pytest-mock (>=3.3.1) ; extra == 'test'",
    "pytest-plus ; extra == 'test'",
    "pytest-xdist (>=1.29.0) ; extra == 'test'",
    "pytest (>=5.4.0) ; extra == 'test'"
  ],
  "requires_python": ">=3.6",
  "summary": "enrich",
  "version": "1.2.7",
  "releases": [],
  "developers": [
    "sorin.sbarnea@gmail.com",
    "sorin_sbarnea"
  ],
  "kwds": "stdout enrich export_text pypi enriched",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_enrich",
  "homepage": "https://github.com/pycontribs/enrich",
  "release_count": 12,
  "dependency_ids": [
    "pypi_mock",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_mock",
    "pypi_pytest_plus",
    "pypi_pytest_xdist",
    "pypi_rich"
  ]
}
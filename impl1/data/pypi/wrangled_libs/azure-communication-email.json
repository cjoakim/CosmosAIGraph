{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# azure communication email client library for python\n\nthis package contains a python sdk for azure communication services for email.\n\n## key concepts\n\nthe azure communication email package is used to send emails to multiple types of recipients.\n\n## getting started\n\n### prerequisites\n\nyou need an [azure subscription][azure_sub], a [communication service resource][communication_resource_docs], and an [email communication resource][email_resource_docs] with an active [domain][domain_overview].\n\nto create these resource, you can use the [azure portal][communication_resource_create_portal], the [azure powershell][communication_resource_create_power_shell], or the [.net management client library][communication_resource_create_net].\n\n### installing\n\ninstall the azure communication email client library for python with [pip](https://pypi.org/project/pip/):\n\n```bash\npip install azure-communication-email\n```\n\n## examples\n\n`emailclient` provides the functionality to send email messages.\n\n## authentication\n\nemail clients can be authenticated using the connection string acquired from an azure communication resource in the [azure portal][azure_portal].\n\n```python\nfrom azure.communication.email import emailclient\n\nconnection_string = \"endpoint=https://<resource-name>.communication.azure.com/;accesskey=<base64-encoded-key>\"\nclient = emailclient.from_connection_string(connection_string);\n```\n\nalternatively, you can also use active directory authentication using defaultazurecredential.\n\n```python\nfrom azure.communication.email import emailclient\nfrom azure.identity import defaultazurecredential\n\n# to use azure active directory authentication (defaultazurecredential) make sure to have azure_tenant_id, azure_client_id and azure_client_secret as env variables.\nendpoint = \"https://<resource-name>.communication.azure.com\"\nclient = emailclient(endpoint, defaultazurecredential())\n```\n\nemail clients can also be authenticated using an [azurekeycredential][azure-key-credential].\n\n```python\nfrom azure.communication.email import emailclient\nfrom azure.core.credentials import azurekeycredential\n\ncredential = azurekeycredential(\"<api_key>\")\nendpoint = \"https://<resource-name>.communication.azure.com/\"\nclient = emailclient(endpoint, credential);\n```\n\n### send an email message\n\nto send an email message, call the `begin_send` function from the `emailclient`. this will return a poller. you can use this poller to check on the status of the operation and retrieve the result once it's finished.\n\n```python\nmessage = {\n    \"content\": {\n        \"subject\": \"this is the subject\",\n        \"plaintext\": \"this is the body\",\n        \"html\": \"html><h1>this is the body</h1></html>\"\n    },\n    \"recipients\": {\n        \"to\": [\n            {\n                \"address\": \"customer@domain.com\",\n                \"displayname\": \"customer name\"\n            }\n        ]\n    },\n    \"senderaddress\": \"sender@contoso.com\"\n}\n\npoller = email_client.begin_send(message)\nresult = poller.result()\n```\n\n### send an email message to multiple recipients\n\nto send an email message to multiple recipients, add a object for each recipient type and an object for each recipient.\n\n```python\nmessage = {\n    \"content\": {\n        \"subject\": \"this is the subject\",\n        \"plaintext\": \"this is the body\",\n        \"html\": \"html><h1>this is the body</h1></html>\"\n    },\n    \"recipients\": {\n        \"to\": [\n            {\"address\": \"customer@domain.com\", \"displayname\": \"customer name\"},\n            {\"address\": \"customer2@domain.com\", \"displayname\": \"customer name 2\"}\n        ],\n        \"cc\": [\n            {\"address\": \"cccustomer@domain.com\", \"displayname\": \"cc customer name\"},\n            {\"address\": \"cccustomer2@domain.com\", \"displayname\": \"cc customer name 2\"}\n        ],\n        \"bcc\": [\n            {\"address\": \"bcccustomer@domain.com\", \"displayname\": \"bcc customer name\"},\n            {\"address\": \"bcccustomer2@domain.com\", \"displayname\": \"bcc customer name 2\"}\n        ]\n    },\n    \"senderaddress\": \"sender@contoso.com\"\n}\n\npoller = email_client.begin_send(message)\nresult = poller.result()\n```\n\n### send email with attachments\n\nazure communication services support sending email with attachments.\n\n```python\nimport base64\n\nwith open(\"c://readme.txt\", \"r\") as file:\n    file_contents = file.read()\n\nfile_bytes_b64 = base64.b64encode(bytes(file_contents, 'utf-8'))\n\nmessage = {\n    \"content\": {\n        \"subject\": \"this is the subject\",\n        \"plaintext\": \"this is the body\",\n        \"html\": \"html><h1>this is the body</h1></html>\"\n    },\n    \"recipients\": {\n        \"to\": [\n            {\n                \"address\": \"customer@domain.com\",\n                \"displayname\": \"customer name\"\n            }\n        ]\n    },\n    \"senderaddress\": \"sender@contoso.com\",\n    \"attachments\": [\n        {\n            \"name\": \"attachment.txt\",\n            \"attachmenttype\": \"text/plain\",\n            \"contentinbase64\": file_bytes_b64.decode()\n        }\n    ]\n}\n\npoller = email_client.begin_send(message)\nresult = poller.result()\n```\n\n## troubleshooting\n\nemail operations will throw an exception if the request to the server fails. the email client will raise exceptions defined in [azure core](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/readme.md).\n\n```python\nfrom azure.core.exceptions import httpresponseerror\n\ntry:\n    response = email_client.send(message)\nexcept httpresponseerror as ex:\n    print('exception:')\n    print(ex)\n```\n\n## next steps\n\n- [read more about email in azure communication services][nextsteps]\n\n## contributing\n\nthis project welcomes contributions and suggestions. most contributions require you to agree to a contributor license agreement (cla) declaring that you have the right to, and actually do, grant us the rights to use your contribution. for details, visit [cla.microsoft.com][cla].\n\nthis project has adopted the [microsoft open source code of conduct][coc]. for more information see the [code of conduct faq][coc_faq] or contact [opencode@microsoft.com][coc_contact] with any additional questions or comments.\n\n<!-- links -->\n\n[azure_sub]: https://azure.microsoft.com/free/dotnet/\n[azure_portal]: https://portal.azure.com\n[azure-key-credential]: https://aka.ms/azsdk-python-core-azurekeycredential\n[cla]: https://cla.microsoft.com\n[coc]: https://opensource.microsoft.com/codeofconduct/\n[coc_faq]: https://opensource.microsoft.com/codeofconduct/faq/\n[coc_contact]: mailto:opencode@microsoft.com\n[communication_resource_docs]: https://docs.microsoft.com/azure/communication-services/quickstarts/create-communication-resource?tabs=windows&pivots=platform-azp\n[email_resource_docs]: https://aka.ms/acsemail/createemailresource\n[communication_resource_create_portal]: https://docs.microsoft.com/azure/communication-services/quickstarts/create-communication-resource?tabs=windows&pivots=platform-azp\n[communication_resource_create_power_shell]: https://docs.microsoft.com/powershell/module/az.communication/new-azcommunicationservice\n[communication_resource_create_net]: https://docs.microsoft.com/azure/communication-services/quickstarts/create-communication-resource?tabs=windows&pivots=platform-net\n[package]: https://www.nuget.org/packages/azure.communication.common/\n[product_docs]: https://aka.ms/acsemail/overview\n[nextsteps]: https://aka.ms/acsemail/overview\n[nuget]: https://www.nuget.org/\n[source]: https://github.com/azure/azure-sdk-for-net/tree/main/sdk/communication\n[domain_overview]: https://aka.ms/acsemail/domainsoverview\n\n\n# release history\n\n## 1.0.0 (2023-03-31)\n\n### features added\nthe public release of the azure communication services sdk for email has the following features:\n\n- send emails with a variety of options (multiple recipients, attachments, etc.)\n- poll for the status of the email that was sent to track its progress\n\n## 1.0.0b2 (2023-03-01)\n\n### features added\n- adding support for aad token authentication\n- added the ability to specify the api version by an optional `api_version` keyword parameter.\n\n### breaking changes\n- made the sdk model-less. objects are now constructed using a dictionary instead of a model.\n- reworked the sdk to follow the lro (long running operation) approach. the 'begin_send' method returns a poller that can be used to check for the status of sending the email and retrieve the result. the return object has been adjusted to fit this approach. \n- the `get_send_status` method has been removed.\n- the `sender` property has been changed to `senderaddress`.\n- the `email` property under the recipient object has been changed to `address`.\n- the `attachmenttype` property under `attachments` has been changed to 'contenttype'. this now accepts the attachment mime type.\n- the `contentbytesbase64` property under `attachments` has been changed to `contentinbase64`\n- custom headers in the email message are now key/value pairs.\n- the importance property was removed. email importance can now be specified through either the `x-priority` or `x-msmail-priority` custom headers.\n\n### other changes\npython 3.6 is no longer supported. please use python version 3.7 or later. for more details, please read our page on [azure sdk for python version support policy](https://github.com/azure/azure-sdk-for-python/wiki/azure-sdks-python-version-support-policy).\n\n## 1.0.0b1 (2022-08-09)\n\nthe first preview of the azure communication email client has the following features:\n\n- send emails to multiple recipients with attachments\n- get the status of a sent message\n",
  "docs_url": null,
  "keywords": "azure,azure sdk",
  "license": "mit license",
  "name": "azure-communication-email",
  "package_url": "https://pypi.org/project/azure-communication-email/",
  "project_url": "https://pypi.org/project/azure-communication-email/",
  "project_urls": {
    "Homepage": "https://github.com/Azure/azure-sdk-for-python"
  },
  "release_url": "https://pypi.org/project/azure-communication-email/1.0.0/",
  "requires_dist": [
    "msrest (>=0.7.1)",
    "azure-common (~=1.1)",
    "azure-mgmt-core (<2.0.0,>=1.3.2)"
  ],
  "requires_python": ">=3.7",
  "summary": "microsoft azure myservice management client library for python",
  "version": "1.0.0",
  "releases": [],
  "developers": [
    "azpysdkhelp@microsoft.com",
    "microsoft_corporation"
  ],
  "kwds": "emailclient azure_portal azure email_client azure_sub",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_azure_communication_email",
  "homepage": "https://github.com/azure/azure-sdk-for-python",
  "release_count": 3,
  "dependency_ids": [
    "pypi_azure_common",
    "pypi_azure_mgmt_core",
    "pypi_msrest"
  ]
}
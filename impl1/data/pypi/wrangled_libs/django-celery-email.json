{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: django",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "operating system :: posix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: communications",
    "topic :: communications :: email",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: distributed computing"
  ],
  "description": "==========================================================\ndjango-celery-email - a celery-backed django email backend\n==========================================================\n\n.. image:: https://img.shields.io/travis/pmclanahan/django-celery-email/master.svg\n    :target: https://travis-ci.org/pmclanahan/django-celery-email\n.. image:: https://img.shields.io/pypi/v/django-celery-email.svg\n    :target: https://pypi.python.org/pypi/django-celery-email\n\na `django`_ email backend that uses a `celery`_ queue for out-of-band sending\nof the messages.\n\n.. _`celery`: http://celeryproject.org/\n.. _`django`: http://www.djangoproject.org/\n\n.. warning::\n\n\tthis version requires the following versions:\n\n\t* python >= 3.5\n\t* django 2.2, and 3.0\n\t* celery 4.0\n\nusing django-celery-email\n=========================\n\nto enable ``django-celery-email`` for your project you need to add ``djcelery_email`` to\n``installed_apps``::\n\n    installed_apps += (\"djcelery_email\",)\n\nyou must then set ``django-celery-email`` as your ``email_backend``::\n\n    email_backend = 'djcelery_email.backends.celeryemailbackend'\n\nby default ``django-celery-email`` will use django's builtin ``smtp`` email backend\nfor the actual sending of the mail. if you'd like to use another backend, you\nmay set it in ``celery_email_backend`` just like you would normally have set\n``email_backend`` before you were using celery. in fact, the normal installation\nprocedure will most likely be to get your email working using only django, then\nchange ``email_backend`` to ``celery_email_backend``, and then add the new\n``email_backend`` setting from above.\n\nmass email are sent in chunks of size ``celery_email_chunk_size`` (defaults to 10).\n\nif you need to set any of the settings (attributes) you'd normally be able to set on a\n`celery task`_ class had you written it yourself, you may specify them in a ``dict``\nin the ``celery_email_task_config`` setting::\n\n    celery_email_task_config = {\n        'queue' : 'email',\n        'rate_limit' : '50/m',  # * celery_email_chunk_size (default: 10)\n        ...\n    }\n\nthere are some default settings. unless you specify otherwise, the equivalent of the\nfollowing settings will apply::\n\n    celery_email_task_config = {\n        'name': 'djcelery_email_send',\n        'ignore_result': true,\n    }\n\nafter this setup is complete, and you have a working celery install, sending\nemail will work exactly like it did before, except that the sending will be\nhandled by your celery workers::\n\n    from django.core import mail\n\n    emails = (\n        ('hey man', \"i'm the dude! so that's what you call me.\", 'dude@aol.com', ['mr@lebowski.com']),\n        ('dammit walter', \"let's go bowlin'.\", 'dude@aol.com', ['wsobchak@vfw.org']),\n    )\n    results = mail.send_mass_mail(emails)\n\n``results`` will be a list of celery `asyncresult`_ objects that you may ignore, or use to check the\nstatus of the email delivery task, or even wait for it to complete if want. you have to enable a result\nbackend and set ``ignore_result`` to ``false`` in ``celery_email_task_config`` if you want to use these.\nyou should also set ``celery_email_chunk_size = 1`` in settings if you are concerned about task status\nand results.\n\nsee the `celery docs`_ for more info.\n\n\n``len(results)`` will be the number of emails you attempted to send divided by celery_email_chunk_size, and is in no way a reflection on the success or failure\nof their delivery.\n\n.. _`celery task`: http://celery.readthedocs.org/en/latest/userguide/tasks.html#basics\n.. _`celery docs`: http://celery.readthedocs.org/en/latest/userguide/tasks.html#task-states\n.. _`asyncresult`: http://celery.readthedocs.org/en/latest/reference/celery.result.html#celery.result.asyncresult\n\nchangelog\n=========\n\n3.0.0 - 2019.12.10\n------------------\n\n* support for django 3.0\n* support for python 3.8\n* droppped support for django 1.x, django 2.0 and django 2.1\n* droppped support for python 2.7\n\n2.0.2 - 2019.05.29\n------------------\n\n* reduce memory usage by running email_to_dict on chunks. thanks `paul brown`_.\n* simplify dict_to_email for readability and efficiency. thanks `paul brown`_.\n* update test matrix for supported versions of django, celery and python. thanks `james`_.\n\n.. _paul brown: https://github.com/pawl\n.. _james: https://github.com/jmsmkn\n\n2.0.1 - 2018.18.27\n------------------\n* fix bug preventing sending text/* encoded mime attachments. thanks `cesar canassa`_.\n\n.. _cesar canassa: https://github.com/canassa\n\n2.0 - 2017.07.10\n----------------\n* support for django 1.11 and celery 4.0\n* dropped support for celery 2.x and 3.x\n* dropped support for python 3.3\n\n1.1.5 - 2016.07.20\n------------------\n* support extra email attributes via celery_email_message_extra_attributes setting\n* updated version requirements in readme\n\n\n1.1.4 - 2016.01.19\n------------------\n\n* support sending email with embedded images. thanks `georg zimmer`_.\n* document celery_email_chunk_size. thanks `jonas haag`_.\n* add exception handling to email backend connection. thanks `tom`_.\n\n.. _georg zimmer: https://github.com/georgmzimmer\n.. _tom: https://github.com/tomleo\n\n1.1.3 - 2015.11.06\n------------------\n\n* support setting celery.base from string. thanks `matthew jacobi`_.\n* use six for py2/3 string compatibility. thanks `matthew jacobi`_.\n* pass content_subtype back in for retries. thanks `mark joshua tan`_.\n* rework how tests work, add tox, rework travis-ci matrix.\n* use six from django.utils.\n* release a universal wheel.\n\n.. _matthew jacobi: https://github.com/oppianmatt\n.. _mark joshua tan: https://github.com/mark-tan\n\n1.1.2 - 2015.07.06\n------------------\n\n* fix for html-only emails. thanks `gnarvaja`_.\n\n.. _gnarvaja: https://github.com/gnarvaja\n\n1.1.1 - 2015.03.20\n------------------\n\n* fix for backward compatibility of task kwarg handling - thanks `jeremy thurgood`_.\n\n.. _jeremy thurgood: https://github.com/jerith\n\n1.1.0 - 2015.03.06\n------------------\n\n* new pypi release rolling up 1.0.5 changes and some cleanup.\n* more backward compatability in task. will still accept message objects and lists of message objects.\n* thanks again to everyone who contributed to 1.0.5.\n\n1.0.5 - 2014.08.24\n------------------\n\n* django 1.6 support, travis ci testing, chunked sending & more - thanks `jonas haag`_.\n* html email support - thanks `andres riancho`_.\n* support for json transit for celery, sponsored by `digiactive`_.\n* drop support for django 1.2.\n\n.. _`jonas haag`: https://github.com/jonashaag\n.. _`andres riancho`: https://github.com/andresriancho\n.. _`digiactive`: https://github.com/digiactive\n\n1.0.4 - 2013.10.12\n------------------\n\n* add django 1.5.2 and python 3 support.\n* thanks to `stefan wehrmeyer`_ for the contribution.\n\n.. _`stefan wehrmeyer`: https://github.com/stefanw\n\n1.0.3 - 2012.03.06\n------------------\n\n* backend will now pass any kwargs with which it is initialized to the\n  email sending backend.\n* thanks to `fedor tyurin`_ for the contribution.\n\n.. _`fedor tyurin`: https://bitbucket.org/ftyurin\n\n\n1.0.2 - 2012.02.21\n------------------\n\n* task and backend now accept kwargs that can be used in signal handlers.\n* task now returns the result from the email sending backend.\n* thanks to `yehonatan daniv`_ for these changes.\n\n.. _`yehonatan daniv`: https://bitbucket.org/ydaniv\n\n1.0.1 - 2011.10.06\n------------------\n\n* fixed a bug that resulted in tasks that were throwing errors reporting success.\n* if there is an exception thrown by the sending email backend, the result of the task will\n  now be this exception.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "django-celery-email",
  "package_url": "https://pypi.org/project/django-celery-email/",
  "project_url": "https://pypi.org/project/django-celery-email/",
  "project_urls": {
    "Homepage": "https://github.com/pmclanahan/django-celery-email"
  },
  "release_url": "https://pypi.org/project/django-celery-email/3.0.0/",
  "requires_dist": [
    "django (>=2.2)",
    "celery (>=4.0)",
    "django-appconf"
  ],
  "requires_python": "",
  "summary": "an async django email backend using celery",
  "version": "3.0.0",
  "releases": [],
  "developers": [
    "paul@mclanahan.net",
    "paul_mclanahan"
  ],
  "kwds": "celery_email_backend celery_email_message_extra_attributes celery_email_task_config celery_email_chunk_size celeryemailbackend",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_django_celery_email",
  "homepage": "https://github.com/pmclanahan/django-celery-email",
  "release_count": 17,
  "dependency_ids": [
    "pypi_celery",
    "pypi_django",
    "pypi_django_appconf"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "environment :: web environment",
    "intended audience :: developers",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: application frameworks",
    "topic :: system :: monitoring"
  ],
  "description": "<div align=\"center\">\n  <!-- note: do not try adding the dark mode version here with the `picture` element, it will break formatting in pypi -->\n  <a target=\"_blank\" href=\"https://dagster.io\" style=\"background:none\">\n    <img alt=\"dagster logo\" src=\".github/dagster-readme-header.svg\" width=\"auto\" height=\"100%\">\n  </a>\n  <a target=\"_blank\" href=\"https://github.com/dagster-io/dagster\" style=\"background:none\">\n    <img src=\"https://img.shields.io/github/stars/dagster-io/dagster?labelcolor=4f43dd&color=163b36&logo=github\">\n  </a>\n  <a target=\"_blank\" href=\"https://github.com/dagster-io/dagster/blob/master/license\" style=\"background:none\">\n    <img src=\"https://img.shields.io/badge/license-apache_2.0-blue.svg?label=license&labelcolor=4f43dd&color=163b36\">\n  </a>\n  <a target=\"_blank\" href=\"https://pypi.org/project/dagster/\" style=\"background:none\">\n    <img src=\"https://img.shields.io/pypi/v/dagster?labelcolor=4f43dd&color=163b36\">\n  </a>\n  <a target=\"_blank\" href=\"https://pypi.org/project/dagster/\" style=\"background:none\">\n    <img src=\"https://img.shields.io/pypi/pyversions/dagster?labelcolor=4f43dd&color=163b36\">\n  </a>\n  <a target=\"_blank\" href=\"https://twitter.com/dagster\" style=\"background:none\">\n    <img src=\"https://img.shields.io/badge/twitter-dagster-blue.svg?labelcolor=4f43dd&color=163b36&logo=twitter\" />\n  </a>\n  <a target=\"_blank\" href=\"https://dagster.io/slack\" style=\"background:none\">\n    <img src=\"https://img.shields.io/badge/slack-dagster-blue.svg?labelcolor=4f43dd&color=163b36&logo=slack\" />\n  </a>\n  <a target=\"_blank\" href=\"https://linkedin.com/showcase/dagster\" style=\"background:none\">\n    <img src=\"https://img.shields.io/badge/linkedin-dagster-blue.svg?labelcolor=4f43dd&color=163b36&logo=linkedin\" />\n  </a>\n</div>\n\n**dagster is a cloud-native data pipeline orchestrator for the whole development lifecycle, with integrated lineage and observability, a declarative programming model, and best-in-class testability.**\n\nit is designed for **developing and maintaining data assets**, such as tables, data sets, machine learning models, and reports.\n\nwith dagster, you declare\u2014as python functions\u2014the data assets that you want to build. dagster then helps you run your functions at the right time and keep your assets up-to-date.\n\nhere is an example of a graph of three assets defined in python:\n\n```python\nfrom dagster import asset\nfrom pandas import dataframe, read_html, get_dummies\nfrom sklearn.linear_model import linearregression\n\n@asset\ndef country_populations() -> dataframe:\n    df = read_html(\"https://tinyurl.com/mry64ebh\")[0]\n    df.columns = [\"country\", \"continent\", \"rg\", \"pop2018\", \"pop2019\", \"change\"]\n    df[\"change\"] = df[\"change\"].str.rstrip(\"%\").str.replace(\"\u2212\", \"-\").astype(\"float\")\n    return df\n\n@asset\ndef continent_change_model(country_populations: dataframe) -> linearregression:\n    data = country_populations.dropna(subset=[\"change\"])\n    return linearregression().fit(get_dummies(data[[\"continent\"]]), data[\"change\"])\n\n@asset\ndef continent_stats(country_populations: dataframe, continent_change_model: linearregression) -> dataframe:\n    result = country_populations.groupby(\"continent\").sum()\n    result[\"pop_change_factor\"] = continent_change_model.coef_\n    return result\n```\n\nthe graph loaded into dagster's web ui:\n\n<p align=\"center\">\n  <img width=\"432\" alt=\"an example asset graph as rendered in the dagster ui\" src=\"https://github.com/dagster-io/dagster/assets/654855/5b302b1b-4cc9-49bf-8689-232f7de87d31\">\n</p>\n\ndagster is built to be used at every stage of the data development lifecycle - local development, unit tests, integration tests, staging environments, all the way up to production.\n\n## quick start:\n\nif you're new to dagster, we recommend reading about its [core concepts](https://docs.dagster.io/concepts) or learning with the hands-on [tutorial](https://docs.dagster.io/tutorial).\n\ndagster is available on pypi and officially supports python 3.8, python 3.9, python 3.10, and python 3.11.\n\n```bash\npip install dagster dagster-webserver\n```\n\nthis installs two packages:\n\n- `dagster`: the core programming model.\n- `dagster-webserver`: the server that hosts dagster's web ui for developing and operating dagster jobs and assets.\n\nrunning on using a mac with an m1 or m2 chip? check the [install details here](https://docs.dagster.io/getting-started/install#installing-dagster-into-an-existing-python-environment).\n\n## documentation\n\nyou can find the full dagster documentation [here](https://docs.dagster.io), including the ['getting started' guide](https://docs.dagster.io/getting-started).\n\n<hr/>\n\n## key features:\n\n  <p align=\"center\">\n    <img width=\"100%\" alt=\"image\" src=\".github/key-features-cards.svg\">\n  </p>\n\n### dagster as a productivity platform\n\nidentify the key assets you need to create using a declarative approach, or you can focus on running basic tasks. embrace ci/cd best practices from the get-go: build reusable components, spot data quality issues, and flag bugs early.\n\n### dagster as a robust orchestration engine\n\nput your pipelines into production with a robust multi-tenant, multi-tool engine that scales technically and organizationally.\n\n### dagster as a unified control plane\n\nmaintain control over your data as the complexity scales. centralize your metadata in one tool with built-in observability, diagnostics, cataloging, and lineage. spot any issues and identify performance improvement opportunities.\n\n<hr />\n\n## master the modern data stack with integrations\n\ndagster provides a growing library of integrations for today\u2019s most popular data tools. integrate with the tools you already use, and deploy to your infrastructure.\n\n<br/>\n<p align=\"center\">\n    <a target=\"_blank\" href=\"https://dagster.io/integrations\" style=\"background:none\">\n        <img width=\"100%\" alt=\"image\" src=\".github/integrations-bar-for-readme.png\">\n    </a>\n</p>\n\n## community\n\nconnect with thousands of other data practitioners building with dagster. share knowledge, get help,\nand contribute to the open-source project. to see featured material and upcoming events, check out\nour [dagster community](https://dagster.io/community) page.\n\njoin our community here:\n\n- \ud83c\udf1f [star us on github](https://github.com/dagster-io/dagster)\n- \ud83d\udce5 [subscribe to our newsletter](https://dagster.io/newsletter-signup)\n- \ud83d\udc26 [follow us on twitter](https://twitter.com/dagster)\n- \ud83d\udd74\ufe0f [follow us on linkedin](https://linkedin.com/showcase/dagster)\n- \ud83d\udcfa [subscribe to our youtube channel](https://www.youtube.com/@dagsterio)\n- \ud83d\udcda [read our blog posts](https://dagster.io/blog)\n- \ud83d\udc4b [join us on slack](https://dagster.io/slack)\n- \ud83d\uddc3 [browse slack archives](https://discuss.dagster.io)\n- \u270f\ufe0f [start a github discussion](https://github.com/dagster-io/dagster/discussions)\n\n## contributing\n\nfor details on contributing or running the project for development, check out our [contributing\nguide](https://docs.dagster.io/community/contributing/).\n\n## license\n\ndagster is [apache 2.0 licensed](https://github.com/dagster-io/dagster/blob/master/license).\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "dagster",
  "package_url": "https://pypi.org/project/dagster/",
  "project_url": "https://pypi.org/project/dagster/",
  "project_urls": {
    "Blog": "https://dagster.io/blog",
    "Changelog": "https://github.com/dagster-io/dagster/releases",
    "Documentation": "https://docs.dagster.io",
    "GitHub": "https://github.com/dagster-io/dagster",
    "Homepage": "https://dagster.io",
    "Issue Tracker": "https://github.com/dagster-io/dagster/issues",
    "Newsletter": "https://dagster.io/newsletter-signup",
    "Slack": "https://dagster.io/slack",
    "Twitter": "https://twitter.com/dagster",
    "YouTube": "https://www.youtube.com/@dagsterio"
  },
  "release_url": "https://pypi.org/project/dagster/1.5.13/",
  "requires_dist": [
    "click >=5.0",
    "coloredlogs <=14.0,>=6.1",
    "Jinja2",
    "PyYAML >=5.1",
    "alembic !=1.11.0,!=1.6.3,!=1.7.0,>=1.2.1",
    "croniter >=0.3.34",
    "grpcio >=1.44.0",
    "grpcio-health-checking >=1.44.0",
    "packaging >=20.9",
    "pendulum <3,>=0.7.0",
    "protobuf >=3.20.0",
    "python-dateutil",
    "python-dotenv",
    "pytz",
    "requests",
    "setuptools",
    "tabulate",
    "tomli",
    "tqdm",
    "typing-extensions >=4.4.0",
    "sqlalchemy >=1.0",
    "toposort >=1.0",
    "watchdog >=0.8.3",
    "docstring-parser",
    "universal-pathlib",
    "pydantic !=1.10.7,>1.10.0",
    "dagster-pipes ==1.5.13",
    "psutil >=1.0 ; platform_system == \"Windows\"",
    "pywin32 !=226 ; platform_system == \"Windows\"",
    "docker ; extra == 'docker'",
    "mypy ==0.991 ; extra == 'mypy'",
    "pyright ==1.1.339 ; extra == 'pyright'",
    "pandas-stubs ; extra == 'pyright'",
    "types-backports ; extra == 'pyright'",
    "types-certifi ; extra == 'pyright'",
    "types-chardet ; extra == 'pyright'",
    "types-croniter ; extra == 'pyright'",
    "types-cryptography ; extra == 'pyright'",
    "types-mock ; extra == 'pyright'",
    "types-paramiko ; extra == 'pyright'",
    "types-pkg-resources ; extra == 'pyright'",
    "types-pyOpenSSL ; extra == 'pyright'",
    "types-python-dateutil ; extra == 'pyright'",
    "types-PyYAML ; extra == 'pyright'",
    "types-pytz ; extra == 'pyright'",
    "types-requests ; extra == 'pyright'",
    "types-simplejson ; extra == 'pyright'",
    "types-six ; extra == 'pyright'",
    "types-sqlalchemy ==1.4.53.34 ; extra == 'pyright'",
    "types-tabulate ; extra == 'pyright'",
    "types-tzlocal ; extra == 'pyright'",
    "types-toml ; extra == 'pyright'",
    "ruff ==0.1.7 ; extra == 'ruff'",
    "docker ; extra == 'test'",
    "grpcio-tools >=1.44.0 ; extra == 'test'",
    "mock ==3.0.5 ; extra == 'test'",
    "mypy-protobuf ; extra == 'test'",
    "objgraph ; extra == 'test'",
    "pytest-cov ==2.10.1 ; extra == 'test'",
    "pytest-dependency ==0.5.1 ; extra == 'test'",
    "pytest-mock ==3.3.1 ; extra == 'test'",
    "pytest-rerunfailures ==10.0 ; extra == 'test'",
    "pytest-runner ==5.2 ; extra == 'test'",
    "pytest-xdist ==3.3.1 ; extra == 'test'",
    "pytest >=7.0.1 ; extra == 'test'",
    "responses <=0.23.1 ; extra == 'test'",
    "syrupy <4 ; extra == 'test'",
    "tox ==3.25.0 ; extra == 'test'",
    "buildkite-test-collector ; (python_version >= \"3.8\") and extra == 'test'",
    "morefs[asynclocal] ; (python_version >= \"3.8\") and extra == 'test'"
  ],
  "requires_python": "",
  "summary": "dagster is an orchestration platform for the development, production, and observation of data assets.",
  "version": "1.5.13",
  "releases": [],
  "developers": [
    "dagster_labs",
    "hello@dagsterlabs.com"
  ],
  "kwds": "dagster dagsterio div svg png",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_dagster",
  "homepage": "",
  "release_count": 570,
  "dependency_ids": [
    "pypi_alembic",
    "pypi_buildkite_test_collector",
    "pypi_click",
    "pypi_coloredlogs",
    "pypi_croniter",
    "pypi_dagster_pipes",
    "pypi_docker",
    "pypi_docstring_parser",
    "pypi_grpcio",
    "pypi_grpcio_health_checking",
    "pypi_grpcio_tools",
    "pypi_jinja2",
    "pypi_mock",
    "pypi_morefs",
    "pypi_mypy",
    "pypi_mypy_protobuf",
    "pypi_objgraph",
    "pypi_packaging",
    "pypi_pandas_stubs",
    "pypi_pendulum",
    "pypi_protobuf",
    "pypi_psutil",
    "pypi_pydantic",
    "pypi_pyright",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_dependency",
    "pypi_pytest_mock",
    "pypi_pytest_rerunfailures",
    "pypi_pytest_runner",
    "pypi_pytest_xdist",
    "pypi_python_dateutil",
    "pypi_python_dotenv",
    "pypi_pytz",
    "pypi_pywin32",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_responses",
    "pypi_ruff",
    "pypi_setuptools",
    "pypi_sqlalchemy",
    "pypi_syrupy",
    "pypi_tabulate",
    "pypi_tomli",
    "pypi_toposort",
    "pypi_tox",
    "pypi_tqdm",
    "pypi_types_backports",
    "pypi_types_certifi",
    "pypi_types_chardet",
    "pypi_types_croniter",
    "pypi_types_cryptography",
    "pypi_types_mock",
    "pypi_types_paramiko",
    "pypi_types_pkg_resources",
    "pypi_types_pyopenssl",
    "pypi_types_python_dateutil",
    "pypi_types_pytz",
    "pypi_types_pyyaml",
    "pypi_types_requests",
    "pypi_types_simplejson",
    "pypi_types_six",
    "pypi_types_sqlalchemy",
    "pypi_types_tabulate",
    "pypi_types_toml",
    "pypi_types_tzlocal",
    "pypi_typing_extensions",
    "pypi_universal_pathlib",
    "pypi_watchdog"
  ]
}
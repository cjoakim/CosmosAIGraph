{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: other environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: documentation :: sphinx",
    "topic :: software development :: libraries :: python modules",
    "topic :: text processing :: markup"
  ],
  "description": "docstring_parser_fork\n================\n\nthis is a fork of [docstring_parser](https://github.com/rr-/docstring_parser). the reason i'm forking that is to quickly get some bug fixes out for users of [pydoclint](https://github.com/jsh9/pydoclint).\n\n------\n\n[![build](https://github.com/rr-/docstring_parser/actions/workflows/build.yml/badge.svg)](https://github.com/rr-/docstring_parser/actions/workflows/build.yml)\n\nparse python docstrings. currently support rest, google, numpydoc-style and\nepydoc docstrings.\n\nexample usage:\n\n```python\n>>> from docstring_parser import parse\n>>>\n>>>\n>>> docstring = parse(\n...     '''\n...     short description\n...\n...     long description spanning multiple lines\n...     - first line\n...     - second line\n...     - third line\n...\n...     :param name: description 1\n...     :param int priority: description 2\n...     :param str sender: description 3\n...     :raises valueerror: if name is invalid\n...     ''')\n>>>\n>>> docstring.long_description\n'long description spanning multiple lines\\n- first line\\n- second line\\n- third line'\n>>> docstring.params[1].arg_name\n'priority'\n>>> docstring.raises[0].type_name\n'valueerror'\n```\n\nread [api documentation](https://rr-.github.io/docstring_parser/).\n\n# installation\n\ninstallation using pip\n\n```shell\npip install docstring_parser_fork\n\n# or if you want to install it in a virtual environment\n\npython -m venv venv # create environment\nsource venv/bin/activate # activate environment\npython -m pip install docstring_parser_fork\n```\n\ninstallation using conda\n\n\n1. download and install miniconda or anaconda\n2. install the package from the conda-forge channel via:\n  - `conda install -c conda-forge docstring_parser`\n  - or create a new conda environment via `conda create -n my-new-environment -c conda-forge docstring_parser`\n\n\n# contributing\n\nto set up the project:\n```sh\npip install --user poetry\n\ngit clone https://github.com/rr-/docstring_parser.git\ncd docstring_parser\n\npoetry install\npoetry run pre-commit install\n```\n\nto run tests:\n```\npoetry run pytest\n```\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "docstring-parser-fork",
  "package_url": "https://pypi.org/project/docstring-parser-fork/",
  "project_url": "https://pypi.org/project/docstring-parser-fork/",
  "project_urls": {
    "Homepage": "https://github.com/jsh9/docstring_parser_fork",
    "Repository": "https://github.com/jsh9/docstring_parser_fork"
  },
  "release_url": "https://pypi.org/project/docstring-parser-fork/0.0.5/",
  "requires_dist": [],
  "requires_python": ">=3.6,<4.0",
  "summary": "parse python docstrings in rest, google and numpydoc format",
  "version": "0.0.5",
  "releases": [],
  "developers": [
    "dash@wind.garden",
    "marcin_kurczewski"
  ],
  "kwds": "docstring_parser docstring_parser_fork docstrings docstring pydoclint",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_docstring_parser_fork",
  "homepage": "https://github.com/jsh9/docstring_parser_fork",
  "release_count": 5,
  "dependency_ids": []
}
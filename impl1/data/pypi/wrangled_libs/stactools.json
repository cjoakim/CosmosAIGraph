{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# stactools\n\n![build status](https://github.com/stac-utils/stactools/workflows/ci/badge.svg)\n[![documentation](https://readthedocs.org/projects/stactools/badge/?version=latest)](https://stactools.readthedocs.io/en/latest/)\n[![pypi version](https://img.shields.io/pypi/v/stactools)](https://pypi.org/project/stactools/)\n[![conda (channel only)](https://img.shields.io/conda/vn/conda-forge/stactools)](https://anaconda.org/conda-forge/stactools)\n[![license](https://img.shields.io/badge/license-apache%202.0-blue.svg)](https://opensource.org/licenses/apache-2.0)\n\n`stactools` is a high-level command line tool and python library for working with [stac](https://stacspec.org).\nit is based on [pystac](https://github.com/stac-utils/pystac).\n\nthis is the core `stactools` repository, which provides a basic command line interface (cli) and api for working with stac catalogs.\nthere are a suite of packages available in other repositories for working with a variety of datasets and for doing more complicated operations on stac data.\nsee [packages](#packages) for more information.\n\n## table of contents\n\n- [installation](#installation)\n- [running](#running)\n- [documentation](#documentation)\n- [packages](#packages)\n- [developing](#developing)\n\n## installation\n\nto install the latest version via pip:\n\n```sh\npip install stactools\n```\n\nto install the latest version with [conda](https://docs.conda.io/en/latest/):\n\n```sh\nconda install -c conda-forge stactools\n```\n\nto install the latest development version from the source repository:\n\n```sh\ngit clone https://github.com/stac-utils/stactools.git\ncd stactools\npip install .\n```\n\n**note:** in order to read and write cloud optimized geotiffs, gdal version 3.1 or greater is required.\nif your system gdal is older than version 3.1, consider using [docker](#using-docker) or [conda](#using-conda) to get a modern gdal.\n\n### optional dependencies\n\n`stactools` includes two optional dependency:\n\n- `s3`: enables s3 hrefs via `fsspec` and `s3fs`\n- `validate`: enables `stac validate` and `stac lint`\n\nto install optional dependencies:\n\n```sh\npip install 'stactools[s3]'\npip install 'stactools[validate]'\n```\n\n### docker\n\nto download the docker image from the registry:\n\n```sh\ndocker pull ghcr.io/stac-utils/stactools:latest\n```\n\n## running\n\n```sh\nstac --help\n```\n\n### running from docker\n\n```sh\ndocker run --rm ghcr.io/stac-utils/stactools:latest --help\n```\n\n## documentation\n\nsee the [documentation page](https://stactools.readthedocs.io/) for the latest docs.\n\n## packages\n\n`stactools` is comprised of many other sub-packages that provide library and cli functionality.\nofficially supported packages are hosted in the github [`stactools-packages` organization](https://github.com/stactools-packages/stactools-packages.github.io), and other subpackages may be available from other sources.\n\nthere are over 25 packages that translate specific types of data into stac,\nincluding imagery sources like\n[aster](https://github.com/stactools-packages/aster),\n[landsat](https://github.com/stactools-packages/landsat),\n[modis](https://github.com/stactools-packages/modis),\n[naip](https://github.com/stactools-packages/naip),\n[planet](https://github.com/stactools-packages/planet),\n[sentinel1](https://github.com/stactools-packages/sentinel1),\n[sentinel1-grd](https://github.com/stactools-packages/sentinel1-grd),\n[sentinel2](https://github.com/stactools-packages/sentinel2),\n[sentinel3](https://github.com/stactools-packages/sentinel3), landuse/landcover\ndata ([corine](https://github.com/stactools-packages/corine),\n[cgls_lc100](https://github.com/stactools-packages/cgls_lc100),\n[aafc-landuse](https://github.com/stactools-packages/aafc-landuse)), digital\nelevation models (dems)\n([cop-dem](https://github.com/stactools-packages/cop-dem),\n[alos-dem](https://github.com/stactools-packages/alos-dem)), population data\n([gpw](https://github.com/stactools-packages/gpw),\n[worldpop](https://github.com/stactools-packages/worldpop)),\n[pointclouds](https://github.com/stactools-packages/pointcloud) and many more.\n\nthere are also cool tools like [stactools-browse](https://github.com/stactools-packages/stactools-browse) which makes it super easy to deploy a\n[stac browser](https://github.com/radiantearth/stac-browser) from the command line to browse any local data.\n\nfor the list of officially supported packages see the [list of stac packages](https://github.com/stactools-packages/stactools-packages.github.io#list-of-stac-packages)\non the [stactools-packages github organization](https://github.com/stactools-packages).\neach package can be installed via `pip install stactools-{package}`, e.g. `pip install stactools-landsat`.\nthird-party packages can be installed in the same way, or, if they are not on pypi, directly from the source repository, e.g. `pip install /path/to/my/code/stactools-greatdata`.\n\n## developing\n\nclone the repository and install it in editable mode with the `dev` optional dependencies:\n\n```sh\ngit clone https://github.com/stac-utils/stactools.git\ncd stactools\npip install -e '.[dev]'\n```\n\nlinting and formatting are handled with [pre-commit](https://pre-commit.com/).\nyou will need to install pre-commit before committing any changes:\n\n```sh\npre-commit install\n```\n\ntests are handled with [pytest](https://docs.pytest.org/en/7.1.x/):\n\n```sh\npytest\n```\n\nrun a juypter notebook:\n\n```sh\nscripts/notebook\n```\n\n### using docker\n\nyou can also develop in a docker container.\nbuild the container with:\n\n```sh\ndocker/build\n```\n\nonce the container is built, you can run the `scripts/` scripts inside a docker console by running:\n\n```sh\ndocker/console\n```\n\na complete build and test can be run with:\n\n```sh\ndocker/cibuild\n```\n\nin scenarios where you want to run scripts in `docker/` but don't want to run the build, images can be downloaded via the `pull` script:\n\n```sh\ndocker/pull\n```\n\nrun a [juypter](https://jupyter.org/) notebook:\n\n```sh\ndocker/notebook\n```\n\nyou can run the cli through docker by running:\n\n```sh\ndocker/stac --help\n```\n\n### using conda\n\n[conda](https://docs.conda.io/en/latest/) is a useful tool for managing dependencies, both binary and python-based.\nif you have conda installed, you can create a new environment for `stactools` development by running the following command from the top-level directory in this repo:\n\n```sh\nconda env create -f environment.yml\n```\n\nthen activate the `stactools` environment:\n\n```sh\nconda activate stactools\n```\n\nfinally, install `stactools` in editable mode and all development requirements:\n\n```sh\npip install -e '.[dev]'\n```\n\n### developing the docs\n\nto build and serve the docs, the development requirements must be installed with `pip install -e '.[docs]'`.\nto build the docs, you can use `make html` from inside of the docs directory, and to build the docs and start a server that watches for changes, use `make livehtml`:\n\n```sh\ncd docs\nmake html\nmake livehtml\n```\n\nif using `make livehtml`, once the server starts, navigate to [http://localhost:8000](http://localhost:8000/) to see the docs.\nuse 'make' without arguments to see a list of available commands.\n\nyou can also run the previous commands in the docker container using:\n\n```sh\ndocker/console\n```\n\n### code owners and repository maintainer(s)\n\nthis repository uses a [code owners file](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners) to automatically request reviews for new pull requests.\nthe current primary maintainer(s) of this repository are listed under the `*` rule in the [codeowners](./codeowners) file.\n\n### adding a new package\n\nto create a new `stactools` package, use the [`stactools` package template](https://github.com/stactools-packages/template).\n`stactools` utilizes python's [namespace packages](https://packaging.python.org/guides/packaging-namespace-packages/) to provide a suite of tools all under the `stactools` namespace.\nif you would like your package to be considered for inclusion as a core `stactools` package, please open an issue on this repository with a link to your package repository.\n\n### releasing\n\nsee [releasing.md](./releasing.md) for the steps to create a new release.\n",
  "docs_url": null,
  "keywords": "pystac,imagery,raster,catalog,stac",
  "license": "apache-2.0",
  "name": "stactools",
  "package_url": "https://pypi.org/project/stactools/",
  "project_url": "https://pypi.org/project/stactools/",
  "project_urls": {
    "changelog": "https://github.com/stac-utils/stactools/blob/main/CHANGELOG.md",
    "discussions": "https://github.com/radiantearth/stac-spec/discussions/categories/stac-software",
    "documentation": "https://stactools.readthedocs.io/",
    "homepage": "https://github.com/stac-utils/stactools",
    "repository": "https://github.com/stac-utils/stactools.git"
  },
  "release_url": "https://pypi.org/project/stactools/0.5.3/",
  "requires_dist": [
    "antimeridian >=0.2.6",
    "click >=8.1.3",
    "fsspec[http] >=2021.7",
    "lxml >=4.9.2",
    "numpy >=1.23.0",
    "pyproj >=3.3",
    "pystac[validation] >=1.8.2",
    "rasterio >=1.3.2",
    "shapely >=2.0.1",
    "black ~=23.3 ; extra == 'dev'",
    "codespell ~=2.2 ; extra == 'dev'",
    "importlib-metadata ~=6.6 ; extra == 'dev'",
    "lxml-stubs ~=0.4 ; extra == 'dev'",
    "mypy ~=1.3 ; extra == 'dev'",
    "packaging ~=23.1 ; extra == 'dev'",
    "pre-commit ~=3.3 ; extra == 'dev'",
    "pylint ~=2.17 ; extra == 'dev'",
    "pytest-cov ~=3.0 ; extra == 'dev'",
    "pytest ~=7.3 ; extra == 'dev'",
    "requests >=2.27.1 ; extra == 'dev'",
    "ruff ==0.0.265 ; extra == 'dev'",
    "types-certifi ~=2021.10.8 ; extra == 'dev'",
    "types-orjson ~=3.6 ; extra == 'dev'",
    "types-python-dateutil ~=2.8 ; extra == 'dev'",
    "types-requests ~=2.30 ; extra == 'dev'",
    "ipython ~=8.12 ; extra == 'docs'",
    "jupyter ~=1.0 ; extra == 'docs'",
    "nbsphinx ~=0.9 ; extra == 'docs'",
    "pydata-sphinx-theme ~=0.13 ; extra == 'docs'",
    "sphinx ~=7.0 ; extra == 'docs'",
    "sphinx-autobuild ==2021.3.14 ; extra == 'docs'",
    "sphinx-click ~=4.4 ; extra == 'docs'",
    "sphinxcontrib-fulltoc ~=1.2 ; extra == 'docs'",
    "s3fs >=2021.7 ; extra == 's3'",
    "stac-check >=1.3.2 ; extra == 'validate'",
    "stac-validator >=3.1.0 ; extra == 'validate'"
  ],
  "requires_python": ">=3.8",
  "summary": "command line tool and python library for working with stac",
  "version": "0.5.3",
  "releases": [],
  "developers": [
    "pete.gadomski@gmail.com",
    "rdemanuele@gmail.com"
  ],
  "kwds": "stac stacspec stactools pystac pypi",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_stactools",
  "homepage": "",
  "release_count": 32,
  "dependency_ids": [
    "pypi_antimeridian",
    "pypi_black",
    "pypi_click",
    "pypi_codespell",
    "pypi_fsspec",
    "pypi_importlib_metadata",
    "pypi_ipython",
    "pypi_jupyter",
    "pypi_lxml",
    "pypi_lxml_stubs",
    "pypi_mypy",
    "pypi_nbsphinx",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_pre_commit",
    "pypi_pydata_sphinx_theme",
    "pypi_pylint",
    "pypi_pyproj",
    "pypi_pystac",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_rasterio",
    "pypi_requests",
    "pypi_ruff",
    "pypi_s3fs",
    "pypi_shapely",
    "pypi_sphinx",
    "pypi_sphinx_autobuild",
    "pypi_sphinx_click",
    "pypi_sphinxcontrib_fulltoc",
    "pypi_stac_check",
    "pypi_stac_validator",
    "pypi_types_certifi",
    "pypi_types_orjson",
    "pypi_types_python_dateutil",
    "pypi_types_requests"
  ]
}
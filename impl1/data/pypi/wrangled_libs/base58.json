{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3"
  ],
  "description": "# base58\n\n[![pypi version][pypi-image]](https://pypi.python.org/pypi?name=base58&:action=display)\n[![pypi downloads][pypi-downloads-image]](https://pypi.python.org/pypi?name=base58&:action=display)\n[![build status][travis-image]](https://travis-ci.org/keis/base58)\n[![coverage status][coveralls-image]](https://coveralls.io/r/keis/base58?branch=master)\n\nbase58 and base58check implementation compatible with what is used by the\nbitcoin network. any other alternative alphabet (like the xrp one) can be used.\n\nstarting from version 2.0.0 **python2 is no longer supported** the 1.x series\nwill remain supported but no new features will be added.\n\n\n## command line usage\n\n    $ printf \"hello world\" | base58\n    stv1dl6cwtrykyv\n\n    $ printf \"hello world\" | base58 -c\n    3vqb7b6mrgqzaxcufg4oh\n\n    $ printf \"3vqb7b6mrgqzaxcufg4oh\" | base58 -dc\n    hello world\n\n    $ printf \"4vqb7b6mrgqzaxcufg4oh\" | base58 -dc\n    invalid checksum\n\n\n## module usage\n\n    >>> import base58\n    >>> base58.b58encode(b'hello world')\n    b'stv1dl6cwtrykyv'\n    >>> base58.b58decode(b'stv1dl6cwtrykyv')\n    b'hello world'\n    >>> base58.b58encode_check(b'hello world')\n    b'3vqb7b6mrgqzaxcufg4oh'\n    >>> base58.b58decode_check(b'3vqb7b6mrgqzaxcufg4oh')\n    b'hello world'\n    >>> base58.b58decode_check(b'4vqb7b6mrgqzaxcufg4oh')\n    traceback (most recent call last):\n      file \"<stdin>\", line 1, in <module>\n      file \"base58.py\", line 89, in b58decode_check\n        raise valueerror(\"invalid checksum\")\n    valueerror: invalid checksum\n    # use another alphabet. here, using the built-in xrp/ripple alphabet.\n    # ripple_alphabet is provided as an option for compatibility with existing code\n    # it is recommended to use xrp_alphabet instead\n    >>> base58.b58encode(b'hello world', alphabet=base58.xrp_alphabet)\n    b'stvrdlauatiykyv'\n    >>> base58.b58decode(b'stvrdlauatiykyv', alphabet=base58.xrp_alphabet)\n    b'hello world'\n\n\n[pypi-image]: https://img.shields.io/pypi/v/base58.svg?style=flat\n[pypi-downloads-image]: https://img.shields.io/pypi/dm/base58.svg?style=flat\n[travis-image]: https://img.shields.io/travis/keis/base58.svg?style=flat\n[coveralls-image]: https://img.shields.io/coveralls/keis/base58.svg?style=flat\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "base58",
  "package_url": "https://pypi.org/project/base58/",
  "project_url": "https://pypi.org/project/base58/",
  "project_urls": {
    "Homepage": "https://github.com/keis/base58"
  },
  "release_url": "https://pypi.org/project/base58/2.1.1/",
  "requires_dist": [
    "mypy ; extra == 'tests'",
    "PyHamcrest (>=2.0.2) ; extra == 'tests'",
    "pytest (>=4.6) ; extra == 'tests'",
    "pytest-benchmark ; extra == 'tests'",
    "pytest-cov ; extra == 'tests'",
    "pytest-flake8 ; extra == 'tests'"
  ],
  "requires_python": ">=3.5",
  "summary": "base58 and base58check implementation.",
  "version": "2.1.1",
  "releases": [],
  "developers": [
    "david_keijser",
    "keijser@gmail.com"
  ],
  "kwds": "pypi xrp_alphabet base58check base58 b58encode_check",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_base58",
  "homepage": "https://github.com/keis/base58",
  "release_count": 16,
  "dependency_ids": [
    "pypi_mypy",
    "pypi_pyhamcrest",
    "pypi_pytest",
    "pypi_pytest_benchmark",
    "pypi_pytest_cov",
    "pypi_pytest_flake8"
  ]
}
{
  "classifiers": [],
  "description": "# \u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f summary \u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f the **`sklearn` pypi package is deprecated use `scikit-learn` instead** \u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f\n\n# how to fix the error for the main use cases\n\n- use `pip install scikit-learn` rather than `pip install sklearn`\n- replace `sklearn` by `scikit-learn` in your pip requirements files\n  (`requirements.txt`, `setup.py,` `setup.cfg`, `pipfile`, etc ...)\n- if the `sklearn` package is used by one of your dependencies\n  it would be great if you take some time to track which package uses\n  `sklearn` instead of `scikit-learn` and report it to their issue tracker\n- as a last resort, set the environment variable\n  `sklearn_allow_deprecated_sklearn_package_install=true` to avoid this error\n\n# reason for the deprecation\n\n`sklearn` package on pypi exists to prevent malicious actors from using the\n`sklearn` package, since `sklearn` (the import name) and `scikit-learn` (the\nproject name) are sometimes used interchangeably. `scikit-learn` is the actual\npackage name and should be used with pip, e.g. for:\n- pip commands: `pip install scikit-learn`\n- pip requirement files (`requirements.txt`, `setup.py,` `setup.cfg`,\n  `pipfile`, etc ...)\n\nat the time of writing (october 2022) `sklearn` downloads is about 1/5 of the\n`scikit-learn` downloads on pypi so a lot of people are using it.\n\nthere are some edge cases with the way the pypi `sklearn` package is\nimplemented:\n- `pip install sklearn==1.1.3` will say that the 1.1.3 version does not exist,\n  which is confusing. the only available version at the time of writing of\n  `sklearn` is 0.0.\n- `pip uninstall sklearn` will actually not uninstall `scikit-learn`, you can\n  still do `import sklearn` afterwards\n- it can be confusing to have both `sklearn` and `scikit-learn` in the `pip\n  list` output, prompting questions like \"why do i have scikit-learn 1.1.3 and\n  sklearn 0.0, and what does it even mean\"?\n\n# historical brownout schedule\n\nstarting 2023 december 1st, trying to install the `sklearn` pypi package will\nraise an error.\n\nthe following table shows the historical brownout schedule that was used\nbetween 2022 december 1st and 2023 december 1st, in order to get more people\naware of the deprecation.\n\n| dates                                 | window(s)                      |\n|---------------------------------------|--------------------------------|\n| 2022 december 1st - 2023 january 31st | :00-:05 every hour             |\n| 2023 february 1st - march 31st        | :00-:10 every hour             |\n| 2023 april 1st - may 31st             | :00-:15 every hour             |\n| 2023 june 1st - july 31st             | :00-:10 and :30-:40 every hour |\n| 2023 august 1st - september 30th      | :00-:15 and :30-:45 every hour |\n| 2023 october 1st - november 30th      | :00-:20 and :30-:50 every hour |\n| 2023 december 1st onwards             | always raise an exception      |\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "sklearn",
  "package_url": "https://pypi.org/project/sklearn/",
  "project_url": "https://pypi.org/project/sklearn/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/sklearn/0.0.post12/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "deprecated sklearn package, use scikit-learn instead",
  "version": "0.0.post12",
  "releases": [],
  "developers": [],
  "kwds": "sklearn_allow_deprecated_sklearn_package_install sklearn pipfile scikit pip",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_sklearn",
  "homepage": "",
  "release_count": 10,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "environment :: macos x",
    "environment :: other environment",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: end users/desktop",
    "intended audience :: other audience",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "operating system :: macos",
    "operating system :: macos :: macos x",
    "operating system :: posix",
    "operating system :: posix :: bsd",
    "operating system :: posix :: bsd :: freebsd",
    "operating system :: posix :: linux",
    "operating system :: posix :: sunos/solaris",
    "operating system :: unix",
    "programming language :: other scripting engines",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation",
    "programming language :: python :: implementation :: ironpython",
    "programming language :: python :: implementation :: pypy",
    "programming language :: unix shell",
    "topic :: desktop environment",
    "topic :: education :: computer aided instruction (cai)",
    "topic :: education :: testing",
    "topic :: office/business",
    "topic :: other/nonlisted topic",
    "topic :: software development",
    "topic :: software development :: build tools",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: pre-processors",
    "topic :: software development :: user interfaces",
    "topic :: system",
    "topic :: system :: installation/setup",
    "topic :: system :: shells",
    "topic :: system :: system shells",
    "topic :: terminals",
    "topic :: utilities"
  ],
  "description": "|logo|\n\nshtab\n=====\n\n|pypi-downloads| |tests| |coverage| |pypi| |conda|\n\n- what: automatically generate shell tab completion scripts for python cli apps\n- why: speed & correctness. alternatives like\n  `argcomplete <https://pypi.org/project/argcomplete>`_ and\n  `pyzshcomplete <https://pypi.org/project/pyzshcomplete>`_ are slow and have\n  side-effects\n- how: ``shtab`` processes an ``argparse.argumentparser`` object to generate a\n  tab completion script for your shell\n\nfeatures\n--------\n\n- outputs tab completion scripts for\n\n  - ``bash``\n  - ``zsh``\n  - ``tcsh``\n\n- supports\n\n  - `argparse <https://docs.python.org/library/argparse>`_\n  - `docopt <https://pypi.org/project/docopt>`_ (via `argopt <https://pypi.org/project/argopt>`_)\n\n- supports arguments, options and subparsers\n- supports choices (e.g. ``--say={hello,goodbye}``)\n- supports file and directory path completion\n- supports custom path completion (e.g. ``--file={*.txt}``)\n\n------------------------------------------\n\n.. contents:: table of contents\n   :backlinks: top\n\ninstallation\n------------\n\nchoose one of:\n\n- ``pip install shtab``, or\n- ``conda install -c conda-forge shtab``\n\nsee `operating system-specific instructions in the docs <https://docs.iterative.ai/shtab/#installation>`_.\n\nusage\n-----\n\nthere are two ways of using ``shtab``:\n\n- `cli usage <https://docs.iterative.ai/shtab/use/#cli-usage>`_: ``shtab``'s own cli interface for external applications\n\n  - may not require any code modifications whatsoever\n  - end-users execute ``shtab your_cli_app.your_parser_object``\n\n- `library usage <https://docs.iterative.ai/shtab/use/#library-usage>`_: as a library integrated into your cli application\n\n  - adds a couple of lines to your application\n  - argument mode: end-users execute ``your_cli_app --print-completion {bash,zsh,tcsh}``\n  - subparser mode: end-users execute ``your_cli_app completion {bash,zsh,tcsh}``\n\nexamples\n--------\n\nsee `the docs for usage examples <https://docs.iterative.ai/shtab/use/#main.py>`_.\n\nfaqs\n----\n\nnot working? check out `frequently asked questions <https://docs.iterative.ai/shtab/#faqs>`_.\n\nalternatives\n------------\n\n- `argcomplete <https://pypi.org/project/argcomplete>`_\n\n  - executes the underlying script *every* time ``<tab>`` is pressed (slow and\n    has side-effects)\n  - only provides ``bash`` completion\n\n- `pyzshcomplete <https://pypi.org/project/pyzshcomplete>`_\n\n  - executes the underlying script *every* time ``<tab>`` is pressed (slow and\n    has side-effects)\n  - only provides ``zsh`` completion\n\n- `click <https://pypi.org/project/click>`_\n\n  - different framework completely replacing the builtin ``argparse``\n  - solves multiple problems (rather than posix-style \"do one thing well\")\n\ncontributions\n-------------\n\nplease do open `issues <https://github.com/iterative/shtab/issues>`_ & `pull requests <https://github.com/iterative/shtab/pulls>`_! some ideas:\n\n- support ``fish``\n- support ``powershell``\n\nsee\n`contributing.md <https://github.com/iterative/shtab/tree/main/contributing.md>`_\nfor more guidance.\n\n|hits|\n\n.. |logo| image:: https://github.com/iterative/shtab/raw/main/meta/logo.png\n.. |tests| image:: https://img.shields.io/github/actions/workflow/status/iterative/shtab/test.yml?logo=github&label=tests\n   :target: https://github.com/iterative/shtab/actions\n   :alt: tests\n.. |coverage| image:: https://codecov.io/gh/iterative/shtab/branch/main/graph/badge.svg\n   :target: https://codecov.io/gh/iterative/shtab\n   :alt: coverage\n.. |conda| image:: https://img.shields.io/conda/v/conda-forge/shtab.svg?label=conda&logo=conda-forge\n   :target: https://anaconda.org/conda-forge/shtab\n   :alt: conda-forge\n.. |pypi| image:: https://img.shields.io/pypi/v/shtab.svg?label=pip&logo=pypi&logocolor=white\n   :target: https://pypi.org/project/shtab\n   :alt: pypi\n.. |pypi-downloads| image:: https://img.shields.io/pypi/dm/shtab.svg?label=pypi%20downloads&logo=pypi&logocolor=white\n   :target: https://pepy.tech/project/shtab\n   :alt: downloads\n.. |hits| image:: https://caspersci.uk.to/cgi-bin/hits.cgi?q=shtab&style=social&r=https://github.com/iterative/shtab&a=hidden\n   :target: https://caspersci.uk.to/cgi-bin/hits.cgi?q=shtab&a=plot&r=https://github.com/iterative/shtab&style=social\n   :alt: hits\n",
  "docs_url": null,
  "keywords": "tab,complete,completion,shell,bash,zsh,argparse",
  "license": "apache-2.0",
  "name": "shtab",
  "package_url": "https://pypi.org/project/shtab/",
  "project_url": "https://pypi.org/project/shtab/",
  "project_urls": {
    "changelog": "https://github.com/iterative/shtab/releases",
    "documentation": "https://docs.iterative.ai/shtab",
    "repository": "https://github.com/iterative/shtab"
  },
  "release_url": "https://pypi.org/project/shtab/1.6.5/",
  "requires_dist": [
    "pytest >=6 ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-timeout ; extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "automagic shell tab completion for python cli applications",
  "version": "1.6.5",
  "releases": [],
  "developers": [
    "casper.dcl@physics.org",
    "support@iterative.ai"
  ],
  "kwds": "pyzshcomplete shell tab completion pypi",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_shtab",
  "homepage": "",
  "release_count": 43,
  "dependency_ids": [
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_timeout"
  ]
}
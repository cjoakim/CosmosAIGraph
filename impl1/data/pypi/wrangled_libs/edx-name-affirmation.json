{
  "classifiers": [
    "framework :: django",
    "framework :: django :: 2.2",
    "intended audience :: developers",
    "license :: osi approved :: gnu affero general public license v3 or later (agplv3+)",
    "natural language :: english",
    "programming language :: python :: 3.8"
  ],
  "description": "####################\nedx-name-affirmation\n####################\n\n| |build status| |coveralls|\n\nthis library contains data model and business logic to store verified \npersonal information for learners of the edx-platform.\nthis library is designed to be a pluggable library to the edx-platform.\n\noverview\n========\n\nthis library mainly stores various stages of a learner's verified identifying information.\nthe prevalent example is the learner's full name. to verify the full name, the learner\nhas to first initiate from ui that is part of the platform.\nhere are the steps of which the pii information, for example: full name, goes through:\n\n1. learner requests to update the name\n2. learner is brought to go through id verification process\n3. learner submit the id verification after providing supporting evidence\n4. the id verification reviewer approves or denies the verification\n5. the library receives the verdict and updates the name record in the model accordingly\n\nthe above process can also be triggered by a proctored exam attempt, where the exam attempt status\ncan be the input into this library to create and update the name record's status. in this case,\nthe learner do not have to go through id verification. the proctoring process always collects id\nverification evidence.\n\nfor more context of the library, see `context`_.\n\ndependencies\n------------\n\nin addition to the edx-platform repository this library is installing into, the library also leverages\nthe `frontend-app-account`_ micro-frontend to capture learners' attempt to update their full name.\n\ninstalling in docker devstack\n-----------------------------\n\nassuming that your ``devstack`` repo lives at ``~/edx/devstack``\nand that ``edx-platform`` lives right alongside that directory, you'll want\nto checkout ``edx-name-affirmation`` and have it live in ``~/edx/src/edx-name-affirmation``.\nthis will make it so that you can access it inside an lms container shell\nand easily make modifications for local testing.\n\nrun ``make lms-shell`` from your ``devstack`` directory to enter a running lms container.\nonce in there, you can do the following to have your devstack pointing at a local development\nversion of ``edx-name-affirmation``:\n\n.. code:: bash\n\n    $ pushd /edx/src/edx-name-affirmation\n    $ virtualenv venv/\n    $ source venv/bin/activate\n    $ make install\n    $ make test  # optional, if you want to see that everything works\n    $ deactivate\n    $ pushd  # should take you back to /edx/edx-platform\n    $ pip uninstall -y edx_name_affirmation\n    $ pip install -e /edx/src/edx-name-affirmation\n\nalternatively, you can add ``./src/edx-name-affirmation`` to the edx-platform ``private.txt`` of the ``requirements`` folder\nthis way, when you are pip installing within edx-platform, you don't have to perform the above step again.\n\nenabling in lms\n---------------\nmake sure your lms settings have the feature ``enable_special_exams`` enabled.\ncheck your edx-platform ``lms/env`` settings file.\n\ndisable the plugin library\n--------------------------\n\nthere are two ways to disable the plugin library:\n\n- you can uninstall the library from edx-platform.\n- in the `setup.py`_, you can remove the ``entry_points`` into either ``lms`` or ``cms``\n\ndevelopment\n-----------\n\ninstallation and settings\n=========================\n\ninstall to the python virtualenv with help from virtualenvwrapper:\n\n.. code:: bash\n\n    $ pip install --user virtualenvwrapper\n    $ mkvirtualenv nameaffirmation\n\nfor detailed instructions on virtualenvwrapper: https://virtualenvwrapper.readthedocs.io/en/latest/install.html\n\nrunning tests\n=============\n\nfrom the edx-name-affirmation repo root, run the tests with the following command:\n\n.. code:: bash\n\n    $ make test\n\nrunning code quality check\n==========================\n\nfrom the edx-name-affirmation repo root, run the quality checks with the following command:\n\n.. code:: bash\n\n    $ make quality\n\n\npackage requirements\n====================\n\n``requirements/dev.txt`` contains a list of package dependencies which are required for this package.\n\n``requirements/test.txt`` is used to install the same dependencies when running the tests for this package.\n\n\nlicense\n-------\n\nthe code in this repository is licensed under the agpl 3.0 unless\notherwise noted.\n\n\nhow to contribute\n-----------------\n\ncontributions are very welcome.\n\nplease read `how to contribute <https://github.com/edx/edx-platform/blob/master/contributing.rst>`_ for details.\n\neven though they were written with ``edx-platform`` in mind, the guidelines\nshould be followed for open edx code in general.\n\nreporting security issues\n-------------------------\n\nplease do not report security issues in public. please email security@edx.org.\n\ngetting help\n------------\n\nhave a question about this repository, or about open edx in general?  please\nrefer to this `list of resources`_ if you need any assistance.\n\n.. _list of resources: https://open.edx.org/getting-help\n.. _context: ./docs/context.rst\n.. _frontend-app-account: https://github.com/openedx/frontend-app-account\n.. _setup.py: ./setup.py\n\n\n.. |build status| image:: https://github.com/edx/edx-name-affirmation/workflows/python%20ci/badge.svg?branch=main\n  :target: https://github.com/edx/edx-name-affirmation/actions?query=workflow%3a%22python+ci%22\n\n.. |coveralls| image:: https://coveralls.io/repos/edx/edx-name-affirmation/badge.svg?branch=main&service=github\n  :target: https://coveralls.io/github/edx/edx-name-affirmation?branch=main\n\nchange log\n----------\n\n..\n   all enhancements and patches to edx-name-affirmation will be documented\n   in this file.  it adheres to the structure of https://keepachangelog.com/ ,\n   but in restructuredtext instead of markdown (for ease of incorporation into\n   sphinx documentation and the pypi description).\n\n   this project adheres to semantic versioning (https://semver.org/).\n\n.. there should always be an \"unreleased\" section for changes pending release.\n\nunreleased\n~~~~~~~~~~\n\n[2.3.6] - 2023-07-28\n~~~~~~~~~~~~~~~~~~~~\n* upgrade django-simple-history. added new migration. fixed packages upgrade issues.\n\n[2.3.5] - 2022-09-09\n~~~~~~~~~~~~~~~~~~~~\n* fix bug that prevents a verified name from being updated if the user already has an approved verified name associated with a proctored exam attempt\n\n[2.3.4] - 2022-05-17\n~~~~~~~~~~~~~~~~~~~~\n* fix bug that prevents new verified names from being created if the user is trying to verify the same name\n\n[2.3.3] - 2022-04-21\n~~~~~~~~~~~~~~~~~~~~\n* leverage edx-api-doc-tools to provide better swagger documentation for the restful api endpoints\n* updated internal documentation. added to the readme and a new docs context\n\n[2.3.2] - 2022-03-11\n~~~~~~~~~~~~~~~~~~~~\n* add simple_history tracking to the verifiedname model\n\n[2.3.1] - 2022-03-02\n~~~~~~~~~~~~~~~~~~~~\n* add two signal handlers to capture post_delete signals from proctoredexamstudentattempt and softwaresecurephotoverification models.\n  if those signals are received, the corresponding verifiedname(s), if it exists, will be deleted.\n\n[2.3.0] - 2022-02-28\n~~~~~~~~~~~~~~~~~~~~\n* add rest api functionality to update verified name status, and to delete verified names.\n\n[2.2.1] - 2022-02-23\n~~~~~~~~~~~~~~~~~~~~\n* update verified name status to `denied` if proctoring `error` status is received\n\n[2.2.0] - 2022-02-14\n~~~~~~~~~~~~~~~~~~~~\n* added django40 testing and dropped django22, 30 and 31 support\n\n[2.1.0] - 2022-01-11\n~~~~~~~~~~~~~~~~~~~~\n* add optional `statuses_to_exclude` argument to `get_verified_name` in order to filter out one or\n  more statuses from the result.\n\n[2.0.3] - 2021-11-17\n~~~~~~~~~~~~~~~~~~~~\n* remove unused celery tasks\n\n[2.0.2] - 2021-11-16\n~~~~~~~~~~~~~~~~~~~~\n* cut over to new celery tasks for idv and proctoring handlers.\n\n[2.0.1] - 2021-11-15\n~~~~~~~~~~~~~~~~~~~~\n* if we receive a non-relevant status for either idv or proctoring, do not\n  trigger a celery task.\n\n[2.0.0] - 2021-10-27\n~~~~~~~~~~~~~~~~~~~~~\n* remove verified_name_flag and all references to it.\n* remove verifiednameenabledview view.\n* remove verified_name_enabled key from responses for verifiednameview view and verifiednamehistoryview\n\n[1.0.3] - 2021-10-26\n~~~~~~~~~~~~~~~~~~~~~\n* add system check to ci.\n* add additional logs to idv signal handler and celery task logic.\n\n[1.0.2] - 2021-09-29\n~~~~~~~~~~~~~~~~~~~~~\n* add automatic retry logic to celery tasks.\n\n[1.0.1] - 2021-09-28\n~~~~~~~~~~~~~~~~~~~~~\n* move toggle check out of tasks\n\n[1.0.0] - 2021-09-23\n~~~~~~~~~~~~~~~~~~~~~\n* move signal receiver logic into celery task\n\n[0.11.0] - 2021-09-15\n~~~~~~~~~~~~~~~~~~~~~\n* add name change validator\n\n[0.10.0] - 2021-09-13\n~~~~~~~~~~~~~~~~~~~~~\n* add is verified name enabled endpoint\n\n[0.9.2] - 2021-09-07\n~~~~~~~~~~~~~~~~~~~~\n* update idv signal handler field names to be more explicit about the received names.\n\n[0.9.1] - 2021-09-07\n~~~~~~~~~~~~~~~~~~~~\n* add extra validation for the verifiedname serializer, throwing a 400 error if\n  `verified_name` contains html or a url.\n\n[0.9.0] - 2021-09-01\n~~~~~~~~~~~~~~~~~~~~\n* add is verified name enabled to the api\n* adr for the use of signals in name affirmation service\n\n[0.8.2] - 2021-08-31\n~~~~~~~~~~~~~~~~~~~~\n* update django admin to allow editing of verifiedname and verifiednameconfig\n\n[0.8.1] - 2021-08-30\n~~~~~~~~~~~~~~~~~~~~\n* emit signal when `verifiedname` status changes to \"approved\".\n\n[0.8.0] - 2021-08-30\n~~~~~~~~~~~~~~~~~~~~\n* add signal receivers for idv and proctoring attempts\n\n[0.7.0] - 2021-08-26\n~~~~~~~~~~~~~~~~~~~~\n* add verified_name_enabled and use_verified_name_for_certs to the get response of verifiednamehistoryview.\n\n[0.6.4] - 2021-08-18\n~~~~~~~~~~~~~~~~~~~~\n* remove verified name is_verified from db\n\n[0.6.3] - 2021-08-18\n~~~~~~~~~~~~~~~~~~~~\n* update admin for verified name status\n\n[0.6.2] - 2021-08-17\n~~~~~~~~~~~~~~~~~~~~\n* remove verified name is_verified from model\n\n[0.6.1] - 2021-08-17\n~~~~~~~~~~~~~~~~~~~~\n* django settings updates for admin app\n\n[0.6.0] - 2021-08-11\n~~~~~~~~~~~~~~~~~~~~\n* add name verification status field, replacing single is_verified boolean.\n\n[0.5.0] - 2021-08-11\n~~~~~~~~~~~~~~~~~~~~\n* add api method and endpoint to return a complete list of the user's\n  verifiednames, ordered by most recently created.\n\n[0.4.0] - 2021-08-06\n~~~~~~~~~~~~~~~~~~~~\n* expose api methods through `nameaffirmationservice`.\n\n[0.3.1] - 2021-08-03\n~~~~~~~~~~~~~~~~~~~~\n* update `manifest.in` to include all directories under `edx_name_affirmation`.\n\n[0.3.0] - 2021-08-02\n~~~~~~~~~~~~~~~~~~~~\n* add `use_verified_name_for_certs` field to the verifiednameview\n  response, and create a new endpoint to update the user's verified\n  name config.\n* admin page configuration for verifiedname and verifiednameconfig.\n\n[0.2.0] - 2021-07-22\n~~~~~~~~~~~~~~~~~~~~\n* add verified_name_enabled to verifiednameview get response.\n* add pr template.\n* add verifiednameconfig model and api functions.\n\n[0.1.2] - 2021-07-02\n~~~~~~~~~~~~~~~~~~~~\n* add plugin support.\n\n[0.1.1] - 2021-06-30\n~~~~~~~~~~~~~~~~~~~~\n* fix typo in publish-pypi job.\n\n[0.1.0] - 2021-06-30\n~~~~~~~~~~~~~~~~~~~~\n* initialize project along with `verifiedname` model, python api, and rest endpoints.\n\n\n",
  "docs_url": null,
  "keywords": "django edx",
  "license": "agpl 3.0",
  "name": "edx-name-affirmation",
  "package_url": "https://pypi.org/project/edx-name-affirmation/",
  "project_url": "https://pypi.org/project/edx-name-affirmation/",
  "project_urls": {
    "Homepage": "https://github.com/edx/edx-name-affirmation"
  },
  "release_url": "https://pypi.org/project/edx-name-affirmation/2.3.7/",
  "requires_dist": [
    "django-simple-history",
    "django-model-utils",
    "djangorestframework",
    "edx-api-doc-tools",
    "edx-django-utils >=3.12.0",
    "edx-celeryutils",
    "edx-toggles",
    "django-config-models",
    "Django >=2.2",
    "edx-drf-extensions"
  ],
  "requires_python": "",
  "summary": "name affirmation app for open edx",
  "version": "2.3.7",
  "releases": [],
  "developers": [
    "edx",
    "oscm@edx.org"
  ],
  "kwds": "edx_name_affirmation verified_name_enabled get_verified_name verified_name verifiednameview",
  "license_kwds": "agpl 3.0",
  "libtype": "pypi",
  "id": "pypi_edx_name_affirmation",
  "homepage": "https://github.com/edx/edx-name-affirmation",
  "release_count": 39,
  "dependency_ids": [
    "pypi_django",
    "pypi_django_config_models",
    "pypi_django_model_utils",
    "pypi_django_simple_history",
    "pypi_djangorestframework",
    "pypi_edx_api_doc_tools",
    "pypi_edx_celeryutils",
    "pypi_edx_django_utils",
    "pypi_edx_drf_extensions",
    "pypi_edx_toggles"
  ]
}
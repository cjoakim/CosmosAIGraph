{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: scientific/engineering :: gis",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "geopy\n=====\n\n.. image:: https://img.shields.io/pypi/v/geopy.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/geopy/\n    :alt: latest version\n\n.. image:: https://img.shields.io/github/actions/workflow/status/geopy/geopy/ci.yml?branch=master&style=flat-square\n    :target: https://github.com/geopy/geopy/actions/workflows/ci.yml?query=branch%3amaster\n    :alt: build status\n\n.. image:: https://img.shields.io/github/license/geopy/geopy.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/geopy/\n    :alt: license\n\n\ngeopy is a python client for several popular geocoding web\nservices.\n\ngeopy makes it easy for python developers to locate the coordinates of\naddresses, cities, countries, and landmarks across the globe using\nthird-party geocoders and other data sources.\n\ngeopy includes geocoder classes for the `openstreetmap nominatim`_,\n`google geocoding api (v3)`_, and many other geocoding services.\nthe full list is available on the `geocoders doc section`_.\ngeocoder classes are located in `geopy.geocoders`_.\n\n.. _openstreetmap nominatim: https://nominatim.org\n.. _google geocoding api (v3): https://developers.google.com/maps/documentation/geocoding/\n.. _geocoders doc section: https://geopy.readthedocs.io/en/latest/#geocoders\n.. _geopy.geocoders: https://github.com/geopy/geopy/tree/master/geopy/geocoders\n\ngeopy is tested against cpython (versions 3.7, 3.8, 3.9, 3.10, 3.11, 3.12)\nand pypy3. geopy 1.x line also supported cpython 2.7, 3.4 and pypy2.\n\n\u00a9 geopy contributors 2006-2018 (see authors) under the `mit\nlicense <https://github.com/geopy/geopy/blob/master/license>`__.\n\ninstallation\n------------\n\ninstall using `pip <http://www.pip-installer.org/en/latest/>`__ with:\n\n::\n\n    pip install geopy\n\nor, `download a wheel or source archive from\npypi <https://pypi.python.org/pypi/geopy>`__.\n\ngeocoding\n---------\n\nto geolocate a query to an address and coordinates:\n\n.. code:: pycon\n\n    >>> from geopy.geocoders import nominatim\n    >>> geolocator = nominatim(user_agent=\"specify_your_app_name_here\")\n    >>> location = geolocator.geocode(\"175 5th avenue nyc\")\n    >>> print(location.address)\n    flatiron building, 175, 5th avenue, flatiron, new york, nyc, new york, ...\n    >>> print((location.latitude, location.longitude))\n    (40.7410861, -73.9896297241625)\n    >>> print(location.raw)\n    {'place_id': '9167009604', 'type': 'attraction', ...}\n\nto find the address corresponding to a set of coordinates:\n\n.. code:: pycon\n\n    >>> from geopy.geocoders import nominatim\n    >>> geolocator = nominatim(user_agent=\"specify_your_app_name_here\")\n    >>> location = geolocator.reverse(\"52.509669, 13.376294\")\n    >>> print(location.address)\n    potsdamer platz, mitte, berlin, 10117, deutschland, european union\n    >>> print((location.latitude, location.longitude))\n    (52.5094982, 13.3765983)\n    >>> print(location.raw)\n    {'place_id': '654513', 'osm_type': 'node', ...}\n\nmeasuring distance\n------------------\n\ngeopy can calculate geodesic distance between two points using the\n`geodesic distance\n<https://en.wikipedia.org/wiki/geodesics_on_an_ellipsoid>`_ or the\n`great-circle distance\n<https://en.wikipedia.org/wiki/great-circle_distance>`_,\nwith a default of the geodesic distance available as the function\n`geopy.distance.distance`.\n\nhere's an example usage of the geodesic distance, taking pair\nof :code:`(lat, lon)` tuples:\n\n.. code:: pycon\n\n    >>> from geopy.distance import geodesic\n    >>> newport_ri = (41.49008, -71.312796)\n    >>> cleveland_oh = (41.499498, -81.695391)\n    >>> print(geodesic(newport_ri, cleveland_oh).miles)\n    538.390445368\n\nusing great-circle distance, also taking pair of :code:`(lat, lon)` tuples:\n\n.. code:: pycon\n\n    >>> from geopy.distance import great_circle\n    >>> newport_ri = (41.49008, -71.312796)\n    >>> cleveland_oh = (41.499498, -81.695391)\n    >>> print(great_circle(newport_ri, cleveland_oh).miles)\n    536.997990696\n\ndocumentation\n-------------\n\nmore documentation and examples can be found at\n`read the docs <http://geopy.readthedocs.io/en/latest/>`__.\n\n\n",
  "docs_url": null,
  "keywords": "geocode,geocoding,gis,geographical,maps,earth,distance",
  "license": "mit",
  "name": "geopy",
  "package_url": "https://pypi.org/project/geopy/",
  "project_url": "https://pypi.org/project/geopy/",
  "project_urls": {
    "Download": "https://github.com/geopy/geopy/archive/2.4.1.tar.gz",
    "Homepage": "https://github.com/geopy/geopy"
  },
  "release_url": "https://pypi.org/project/geopy/2.4.1/",
  "requires_dist": [
    "geographiclib (<3,>=1.52)",
    "aiohttp ; extra == 'aiohttp'",
    "coverage ; extra == 'dev'",
    "flake8 (<5.1,>=5.0) ; extra == 'dev'",
    "isort (<5.11.0,>=5.10.0) ; extra == 'dev'",
    "pytest-asyncio (>=0.17) ; extra == 'dev'",
    "pytest (>=3.10) ; extra == 'dev'",
    "readme-renderer ; extra == 'dev'",
    "sphinx-issues ; extra == 'dev'",
    "sphinx (<=4.3.2) ; extra == 'dev'",
    "sphinx-rtd-theme (>=0.5.0) ; extra == 'dev'",
    "readme-renderer ; extra == 'dev-docs'",
    "sphinx (<=4.3.2) ; extra == 'dev-docs'",
    "sphinx-issues ; extra == 'dev-docs'",
    "sphinx-rtd-theme (>=0.5.0) ; extra == 'dev-docs'",
    "flake8 (<5.1,>=5.0) ; extra == 'dev-lint'",
    "isort (<5.11.0,>=5.10.0) ; extra == 'dev-lint'",
    "coverage ; extra == 'dev-test'",
    "pytest-asyncio (>=0.17) ; extra == 'dev-test'",
    "pytest (>=3.10) ; extra == 'dev-test'",
    "sphinx (<=4.3.2) ; extra == 'dev-test'",
    "urllib3 (>=1.24.2) ; extra == 'requests'",
    "requests (>=2.16.2) ; extra == 'requests'",
    "pytz ; extra == 'timezone'"
  ],
  "requires_python": ">=3.7",
  "summary": "python geocoding toolbox",
  "version": "2.4.1",
  "releases": [],
  "developers": [
    "kostya@esmukov.net",
    "kostya_esmukov"
  ],
  "kwds": "geopy _geopy python geocoding geolocator",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_geopy",
  "homepage": "https://github.com/geopy/geopy",
  "release_count": 60,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_geographiclib",
    "pypi_isort",
    "pypi_pytest",
    "pypi_pytest_asyncio",
    "pypi_pytz",
    "pypi_readme_renderer",
    "pypi_requests",
    "pypi_sphinx",
    "pypi_sphinx_issues",
    "pypi_sphinx_rtd_theme",
    "pypi_urllib3"
  ]
}
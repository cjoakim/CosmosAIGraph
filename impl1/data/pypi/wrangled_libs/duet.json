{
  "classifiers": [],
  "description": "# duet\n\na simple future-based async library for python\n\nduet takes inspiration from the amazing [trio](https://trio.readthedocs.io/en/stable/)\nlibrary and the [structured concurrency](https://vorpus.org/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/)\napproach to async programming that it uses.\nhowever, duet differs from trio in two major ways:\n\n- instead of a full-blown implementation of asynchronous io, duet relies  on the\n  `future` interface for parallelism, and provides a way to run async/await\n  coroutines around those `future`s. this is useful if you are using an api that\n  returns futures, such as rpc libraries like grpc. the standard `future`\n  interface does not implement `__await__` directly, so `future` instances must\n  be wrapped in `duet.awaitablefuture`.\n\n- duet is re-entrant. at the top level, you run async code by calling\n  `duet.run(foo)`. inside `foo` suppose you call a function that has not yet\n  been fully refactored to be asynchronous, but itself calls `duet.run(bar)`.\n  most async libraries, including `trio` and `asyncio`, will raise an exception\n  if you try to \"re-enter\" the event loop in this way, but duet allows it. we\n  have found that this can simplify the process of refactoring code to be\n  asynchronous because you don't have to completely separate the sync and async\n  parts of your codebase all at once.\n\n## installation\n  \ninstall from pypi:\n\n```\npip install duet\n```\n\n## note\n\nduet is not an official google project.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache 2",
  "name": "duet",
  "package_url": "https://pypi.org/project/duet/",
  "project_url": "https://pypi.org/project/duet/",
  "project_urls": {
    "Homepage": "http://github.com/google/duet"
  },
  "release_url": "https://pypi.org/project/duet/0.2.9/",
  "requires_dist": [
    "typing-extensions (>=3.10.0) ; python_version <= \"3.7\"",
    "black (==22.3.0) ; extra == 'dev_env'",
    "isort (==5.7.*) ; extra == 'dev_env'",
    "mypy (==0.931.*) ; extra == 'dev_env'",
    "pylint (==2.10.*) ; extra == 'dev_env'",
    "pytest (==6.2.*) ; extra == 'dev_env'",
    "twine (==3.3.*) ; extra == 'dev_env'",
    "wheel ; extra == 'dev_env'"
  ],
  "requires_python": ">=3.9.0",
  "summary": "a simple future-based async library for python.",
  "version": "0.2.9",
  "releases": [],
  "developers": [
    "maffoo@google.com",
    "the_duet_authors"
  ],
  "kwds": "async asynchronous awaitablefuture concurrency await",
  "license_kwds": "apache 2",
  "libtype": "pypi",
  "id": "pypi_duet",
  "homepage": "http://github.com/google/duet",
  "release_count": 34,
  "dependency_ids": [
    "pypi_black",
    "pypi_isort",
    "pypi_mypy",
    "pypi_pylint",
    "pypi_pytest",
    "pypi_twine",
    "pypi_typing_extensions",
    "pypi_wheel"
  ]
}
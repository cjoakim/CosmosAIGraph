{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# lazy parsing for pydantic models\n\nthis library provides a lazy interface for parsing objects from dictionaries. during the parsing, it saves the raw data inside the object and parses each field on demand.\n\n## install\n\npoetry\n```shell\npoetry add lazy-model\n```\n\npip\n```shell\npip install lazy-model\n```\n\n## usage\n\n```python\nfrom lazy_model import lazymodel\nfrom pydantic import validator\n\n\nclass sample(lazymodel):\n    i: int\n    s: str\n\n    @validator(\"s\")\n    def s_upper(cls, v):\n        return v.upper()\n\n\nobj = sample.lazy_parse({\"i\": \"10\", \"s\": \"test\"})\n\n# at this point the data is stored in a raw format inside the object\n\nprint(obj.__dict__)\n\n# >>> {'i': nao, 's': nao}\n\n# nao - not an object. it shows that the field was not parsed yet.\n\nprint(obj.s)\n\n# >>> test\n\n# custom validator works during lazy parsing\n\nprint(obj.__dict__)\n\n# >>> {'i': nao, 's': 'test'}\n\n# the `s` field  was already parsed by this step\n\nprint(obj.i, type(obj.i))\n\n# >>> 10 <class 'int'>\n\n# it converted `10` from string to int based on the annotations\n\nprint(obj.__dict__)\n\n# >>> {'i': 10, 's': 'test'}\n\n# everything was parsed\n```",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "lazy-model",
  "package_url": "https://pypi.org/project/lazy-model/",
  "project_url": "https://pypi.org/project/lazy-model/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/lazy-model/0.2.0/",
  "requires_dist": [
    "pydantic (>=1.9.0)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "",
  "version": "0.2.0",
  "releases": [],
  "developers": [
    "roman-right@protonmail.com",
    "roman_right"
  ],
  "kwds": "lazy_parse lazy_model parsing __dict__ dictionaries",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_lazy_model",
  "homepage": "",
  "release_count": 7,
  "dependency_ids": [
    "pypi_pydantic"
  ]
}
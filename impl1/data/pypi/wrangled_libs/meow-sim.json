{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: physics"
  ],
  "description": "# meow\n\n> **m**odeling of **e**igenmodes and **o**verlaps in **w**aveguides\n\n![meow](https://flaport.github.io/meow/_static/meow.png)\n\na simple electromagnetic [eigenmode expansion (eme)](https://en.wikipedia.org/wiki/eigenmode_expansion) tool for python.\n\n## installation\n\n### minimal installation\n```sh\npip install meow-sim[min]\n```\n\n### full installation\n```sh\npip install meow-sim[full]\n```\n\n### selecting features\nyou can select which features to enable during installation as follows:\n```sh\npip install meow-sim[feature1,feature2,...]\n```\n\n#### available features\n* `min`: minimal installation (equivalent to not specifying any features)\n* `vis`: explicitly installs matplotlib and trimesh.\n* `jax`: use jax in stead of numpy to calculate the s-matrices\n* `klu`: use `klujax` to speed up s-matric calculations (implies `jax`). note: you need\nthe suitesparse headers on your computer for this to work.\n* `gds`: enable gds creation with gdsfactory (see gds taper example).\n* `ipy`: install useful jupyter/ipython packages.\n* `dev`: install dev dependencies\n* `full`: enable all the above features.\n\n\n## documentation\n\n- [examples](https://flaport.github.io/meow/examples.html)\n- [api docs](https://flaport.github.io/meow/meow.html)\n\n## contributors\n\n- [@flaport](https://gitub.com/flaport): creator of meow\n- [@jan-david-black](https://github.com/jan-david-black): fixing mode overlaps and more\n\n## credits\n\n- [dall-e](https://labs.openai.com): _\u201ca drawing of a kitten with laser eyes walking towards me\u201d_ (logo)\n- [tidy3d](https://github.com/flexcompute/tidy3d): meow uses the free fde mode solver from tidy3d.\n- [sax](https://github.com/flaport/sax): meow uses sax as its circuit simulator when cascading the overlap s-matrices.\n- [klujax](https://github.com/flaport/sax): although technically an optional backend for sax, klujax will significantly speed up the final s-matrix calculation of your structures.\n- [emepy](https://github.com/byucamacholab/emepy): an excellent alternative python-based eme solver with optional neural network mode solver.\n- [rigorous and efficient modeling of wavelength scale photonic components](http://photonics.intec.ugent.be/download/phd_104.pdf): phd thesis of peter bienstman.\n",
  "docs_url": null,
  "keywords": "eigenmodes,eme,fde,modeling,overlaps,photonics,waveguides",
  "license": "apache software license",
  "name": "meow-sim",
  "package_url": "https://pypi.org/project/meow-sim/",
  "project_url": "https://pypi.org/project/meow-sim/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/meow-sim/0.8.1/",
  "requires_dist": [
    "matplotlib",
    "numpy >=1.24",
    "packaging",
    "pydantic >=2",
    "sax >=0.10.1",
    "scipy",
    "shapely",
    "tidy3d >=2.4.0",
    "trimesh[easy]",
    "bump2version ; extra == 'dev'",
    "nbstripout ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "black[jupyter] ; extra == 'dev'",
    "autoimport ; extra == 'dev'",
    "isort ; extra == 'dev'",
    "sphinx ; extra == 'dev'",
    "autodoc-pydantic ; extra == 'dev'",
    "myst-nb >0.17.1 ; extra == 'dev'",
    "jupyter-book ; extra == 'dev'",
    "papermill ; extra == 'dev'",
    "meow-sim[gds,ipy,jax,klu,vis] ; extra == 'full'",
    "gdsfactory[cad] >=7.4.0 ; extra == 'gds'",
    "klayout >0.28.2 ; extra == 'gds'",
    "kweb ; extra == 'gds'",
    "kfactory ; extra == 'gds'",
    "ipykernel ; extra == 'ipy'",
    "ipywidgets ; extra == 'ipy'",
    "ipympl ; extra == 'ipy'",
    "nbstripout ; extra == 'ipy'",
    "tqdm ; extra == 'ipy'",
    "jax ; extra == 'jax'",
    "jaxlib ; extra == 'jax'",
    "klujax >0.1.2 ; extra == 'klu'",
    "meow-sim ; extra == 'min'",
    "matplotlib ; extra == 'vis'",
    "trimesh[easy] ; extra == 'vis'"
  ],
  "requires_python": ">=3.8",
  "summary": "modeling of eigenmodes and overlaps in waveguide structures",
  "version": "0.8.1",
  "releases": [],
  "developers": [
    "floris.laporte@rockleyphotonics.com",
    "rockley_photonics"
  ],
  "kwds": "eigenmode_expansion eigenmodes eigenmode pip python",
  "license_kwds": "apache software license",
  "libtype": "pypi",
  "id": "pypi_meow_sim",
  "homepage": "",
  "release_count": 55,
  "dependency_ids": [
    "pypi_autodoc_pydantic",
    "pypi_autoimport",
    "pypi_black",
    "pypi_bump2version",
    "pypi_gdsfactory",
    "pypi_ipykernel",
    "pypi_ipympl",
    "pypi_ipywidgets",
    "pypi_isort",
    "pypi_jax",
    "pypi_jaxlib",
    "pypi_jupyter_book",
    "pypi_kfactory",
    "pypi_klayout",
    "pypi_klujax",
    "pypi_kweb",
    "pypi_matplotlib",
    "pypi_meow_sim",
    "pypi_myst_nb",
    "pypi_nbstripout",
    "pypi_numpy",
    "pypi_packaging",
    "pypi_papermill",
    "pypi_pre_commit",
    "pypi_pydantic",
    "pypi_sax",
    "pypi_scipy",
    "pypi_shapely",
    "pypi_sphinx",
    "pypi_tidy3d",
    "pypi_tqdm",
    "pypi_trimesh"
  ]
}
{
  "classifiers": [
    "license :: osi approved :: mit license"
  ],
  "description": "node.js pypi distribution\n=====================\n\n[node.js][nodejs] is an open-source, cross-platform, back-end javascript runtime environment that runs on the v8 engine and executes javascript code outside a web browser. \n\nthe [nodejs-bin][pypi] python package redistributes node.js so that it can be used as a dependency of python projects. with `nodejs-bin` you can call `nodejs`, `npm` and `npx` from both the [command line](#command-line-usage) and a [python api](#python-api-usage).\n\n**note: this is an unofficial node.js distribution.**\n\n**this is intended for use within python virtual environments and containers, it should probably not be used for global installation.**\n\nthis pypi distribution is provided by <https://github.com/samwillis/nodejs-pypi>.\n\n[nodejs]: https://nodejs.org/\n[pypi]: https://pypi.org/project/nodejs-bin/\n\ninstall\n-------\n\nto install:\n\n```shell\npip install nodejs-bin\n```\n\nby default the command line `node`, `npm` and `npx` commands are not installed to prevent collisions with already installed node.js versions. to install them:\n\n```shell\npip install 'nodejs-bin[cmd]'\n```\n\nyou can specify the node.js version to install with:\n\n```shell\npip install nodejs-bin==<version>\n\n# example:\npip install nodejs-bin==16.15.1\n```\n\ncommand line usage\n------------------\n\nto run node.js from the command line, use:\n\n```shell\npython -m nodejs\n```\n\n`npm` and `npx` are also available as `nodejs.npm` and `nodejs.npx`:\n\n```shell\npython -m nodejs.npm\npython -m nodejs.npx\n```\n\nif you installed the optional command line commands with `pip install 'nodejs-bin[cmd]'` (see above), you can use them directly from the command line as you would normally with node.js:\n\n```shell\nnode\nnpm\nnpx\n```\n\npython api usage\n----------------\n\n`node-bin` has a simple python api that wraps the node.js command line with the [python `subprocess`](https://docs.python.org/3/library/subprocess.html).\n\nfor `node`, `npm` and `npx` there are `.call()`, `.run()` and `.popen()` methods that match the equivalent `subprocess` methods.\n\nto run node.js from a python program and return the exit code:\n\n```python\nfrom nodejs import node, npm, npx\n\n# run node.js and return the exit code.\nnode.call(['script.js', 'arg1', ...], **kwargs)\n\n# run npm and return the exit code.\nnpm.call(['command', 'arg1', ...], **kwargs)\n\n# run npx and return the exit code.\nnpx.call(['command', 'arg1', ...], **kwargs)\n```\n\nthe `call(args, **kwargs)` functions wrap [`subprocess.call()`](https://docs.python.org/3/library/subprocess.html#subprocess.call), passes though all `kwargs` and returns the exit code of the process.\n\nto run node.js from a python program and return a [completedprocess](https://docs.python.org/3/library/subprocess.html#subprocess.completedprocess) object:\n\n```python\nfrom nodejs import node, npm, npx\n\n# run node.js and return the exit code.\nnode.run(['script.js', 'arg1', ...], **kwargs)\n\n# run npm and return the exit code.\nnpm.run(['command', 'arg1', ...], **kwargs)\n\n# run npx and return the exit code.\nnpx.run(['command', 'arg1', ...], **kwargs)\n```\n\nthe `run(args, **kwargs)` functions wrap [`subprocess.run()`](https://docs.python.org/3/library/subprocess.html#subprocess.run), passes though all `kwargs` and returns a `completedprocess`.\n\nadditionally, to start a node.js process and return a `subprocess.popen` object, you can use the `popen(args, **kwargs)` functions:\n\n```python\nfrom nodejs import node, npm, npx\n\n# start node.js and return the popen object.\nnode_process = node.popen(['script.js', 'arg1', ...], **kwargs)\n\n# start npm and return the popen object.\nnpm_process = npm.popen(['command', 'arg1', ...], **kwargs)\n\n# start npx and return the popen object.\nnpx_process = npx.popen(['command', 'arg1', ...], **kwargs)\n```\n\nthe `popen(args, **kwargs)` functions wrap [`subprocess.popen()`](https://docs.python.org/3/library/subprocess.html#subprocess.popen), passes though all `kwargs` and returns a [`popen` object](https://docs.python.org/3/library/subprocess.html#popen-objects).\n\nthe `nodejs.node` api is also available as `nodejs.run` and `nodejs.call` and `nodejs.popen`.\n\nfinally, there are a number of convenient attributes on the `nodejs` module:\n\n  * `nodejs.node_version`: the version of node.js that is installed.\n  * `nodejs.path`: the path to the node.js executable.\n\n\nversions\n--------\n\nnodejs-bin offers node.js *current* and *lts* (long-term support) versions. see the [node.js documentation](https://nodejs.org/en/about/releases/) for more information.\n\nthe full list of versions is available on pypi is here: <https://pypi.org/project/nodejs-bin/#history>\n\n\nlicense\n-------\n\nthe [node.js license](https://raw.githubusercontent.com/nodejs/node/master/license).",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "nodejs-bin",
  "package_url": "https://pypi.org/project/nodejs-bin/",
  "project_url": "https://pypi.org/project/nodejs-bin/",
  "project_urls": {
    "Node.js Homepage": "https://nodejs.org",
    "Project Homepage": "https://github.com/samwillis/nodejs-pypi"
  },
  "release_url": "https://pypi.org/project/nodejs-bin/18.4.0a4/",
  "requires_dist": [
    "nodejs-cmd; extra == 'cmd'"
  ],
  "requires_python": "~=3.5",
  "summary": "node.js is an open-source, cross-platform, back-end javascript runtime environment that runs on the v8 engine and executes javascript code outside a web browser.",
  "version": "18.4.0a4",
  "releases": [],
  "developers": [],
  "kwds": "npx_process nodejs npm_process node_version npx",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_nodejs_bin",
  "homepage": "",
  "release_count": 10,
  "dependency_ids": [
    "pypi_nodejs_cmd"
  ]
}
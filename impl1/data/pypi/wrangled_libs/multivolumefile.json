{
  "classifiers": [
    "development status :: 3 - alpha",
    "environment :: console",
    "license :: osi approved :: gnu lesser general public license v2 or later (lgplv2+)",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.8",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "===============\nmultivolumefile\n===============\n\n.. image:: https://coveralls.io/repos/github/miurahr/multivolume/badge.svg?branch=master\n  :target: https://coveralls.io/github/miurahr/multivolume?branch=master\n\n.. image:: https://github.com/miurahr/multivolume/workflows/run%20tox%20tests/badge.svg\n  :target: https://github.com/miurahr/multivolume/actions\n\nmultivolumefile is a python library to provide a file-object wrapping multiple files\nas virtually like as a single file. it inherit io.rawiobase class and support some of\nits standard methods.\n\nsee api details at `python library reference`_\n\n.. _`python library reference`: https://docs.python.org/3/library/io.html\n\nstatus\n======\n\nmultivolumefile module is under active development and considered as ***alpha*** state.\nit is not good idea to use it on production systems, but it may work well in a limited range\nof usage. please check limitations and passed test cases.\n\n\ninstall\n=======\n\nyou can install it as usual public libraries, you can use pip command\n\n```\npip install multivolumefile\n```\n\nyou are also able to add it to your setup.py/cfg as dependency.\n\nusages\n------\n\n- for reading multi-volume files, that has names `archive.7z.0001`, `archive.7z.0002` and so on,\n  you can call multivolumefile as follows;\n\n.. code-block::\n\n    with multivolumefile.open('archive.7z', 'rb') as vol:\n        data = vol.read(100)\n        vol.seek(500)\n\n- for writing multi-volue files, that has names `archive.7z.0001`, `archive.7z.0002` and so on,\n  you can call multivolumefile as follows;\n\n\n.. code-block::\n\n    data = b'abcdefg'\n    with multivolumefile.open('archive.7z', 'wb') as vol:\n        size = vol.write(data)\n        vol.seek(0)\n\nyou will see file `archive.7z.001` are written.\n\nlimitations and known issues\n============================\n\n- fileno() is not supported and when call it, you will get runtimeerror exception.\n- there are several non-implemented functions such as truncate() and writeline() that will raise notimplementederror\n- there are several non-implemented functions such as readlines(), readline() and readall().\n- text mode is not implemented.\n- ***caution***: when globbing existent volumes, it glob all files other than 4-digit extensions, it may break your data.\n\n\ncontribution\n============\n\nyou are welcome to contribute the project, as usual on github projects, pull-requests are always welcome.\n\nlicense\n=======\n\nmultivolume is licensed under gnu lesser general public license version 2.1 or later.\n\n=========\nchangelog\n=========\n\nall notable changes to this project will be documented in this file.\n\n`unreleased`_\n=============\n\nadded\n-----\n\nchanged\n-------\n\nfixed\n-----\n\ndeprecated\n----------\n\nremoved\n-------\n\nsecurity\n--------\n\n`v0.2.3`_\n=========\n\nadded\n-----\n* implement readall()\n\nchnaged\n-------\n* lint with black\n\n\n`v0.2.2`_\n=========\n\nadded\n-----\n\n* add py.typed file for type hinting.\n\n\n`v0.2.1`_\n=========\n\nadded\n-----\n\n* add `name` property that indicate basename of volumes\n* add `stat()` that return `stat_result` which has as mostly same methods as `os.stat_result` class\n  except for platform dependent methods.\n\n\n`v0.2.0`_\n=========\n\nadded\n-----\n\n* type hint information bundled.\n\nfixed\n-----\n\n* seek() returns current position.\n\nchanged\n-------\n\n* explanation of unsupported methods an modes in readme\n\n`v0.1.4`_\n=========\n\nfixed\n-----\n\n* fix append mode bug.\n\n`v0.1.3`_\n=========\n\nfixed\n-----\n\n* fix added volume size become wrong\n\n`v0.1.2`_\n=========\n\nfixed\n-----\n\n* fix append mode (#1)\n\n`v0.1.1`_\n=========\n\nfixed\n-----\n\n* fin notimplementederror when writing boudning of target files\n\n`v0.1.0`_\n=========\n\n* ***api changed***\n\nadded\n-----\n\n* add mode 'x', 'xb' and 'xt'\n* add mode 'a', 'ab' and 'at'\n* support flush()\n\nchanged\n-------\n\n* change api: file argument of 'r' and 'rb' now single basename instead of list of files\n\n`v0.0.5`_\n=========\n\n* support context manager\n* support read functions.\n\n.. history links\n.. _unreleased: https://github.com/miurahr/py7zr/compare/v0.2.2...head\n.. _v0.2.2: https://github.com/miurahr/py7zr/compare/v0.2.1...v0.2.2\n.. _v0.2.1: https://github.com/miurahr/py7zr/compare/v0.2.0...v0.2.1\n.. _v0.2.0: https://github.com/miurahr/py7zr/compare/v0.1.4...v0.2.0\n.. _v0.1.4: https://github.com/miurahr/py7zr/compare/v0.1.3...v0.1.4\n.. _v0.1.3: https://github.com/miurahr/py7zr/compare/v0.1.2...v0.1.3\n.. _v0.1.2: https://github.com/miurahr/py7zr/compare/v0.1.1...v0.1.2\n.. _v0.1.1: https://github.com/miurahr/py7zr/compare/v0.1.0...v0.1.1\n.. _v0.1.0: https://github.com/miurahr/py7zr/compare/v0.0.5...v0.1.0\n.. _v0.0.5: https://github.com/miurahr/py7zr/compare/v0.0.1...v0.0.5\n\n\n",
  "docs_url": null,
  "keywords": "multivolume,file",
  "license": "lgpl-2.1+",
  "name": "multivolumefile",
  "package_url": "https://pypi.org/project/multivolumefile/",
  "project_url": "https://pypi.org/project/multivolumefile/",
  "project_urls": {
    "Homepage": "https://github.com/miurahr/multivolume"
  },
  "release_url": "https://pypi.org/project/multivolumefile/0.2.3/",
  "requires_dist": [
    "check-manifest ; extra == 'check'",
    "flake8 ; extra == 'check'",
    "flake8-black ; extra == 'check'",
    "readme-renderer ; extra == 'check'",
    "pygments ; extra == 'check'",
    "isort (>=5.0.3) ; extra == 'check'",
    "twine ; extra == 'check'",
    "pytest ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pyannotate ; extra == 'test'",
    "coverage[toml] (>=5.2) ; extra == 'test'",
    "coveralls (>=2.1.1) ; extra == 'test'",
    "hypothesis ; extra == 'test'",
    "mypy ; extra == 'type'",
    "mypy-extensions ; extra == 'type'"
  ],
  "requires_python": ">=3.6",
  "summary": "multi volume file wrapper library",
  "version": "0.2.3",
  "releases": [],
  "developers": [
    "hiroshi_miura",
    "miurahr@linux.com"
  ],
  "kwds": "multivolumefile multivolume fileno files file",
  "license_kwds": "lgpl-2.1+",
  "libtype": "pypi",
  "id": "pypi_multivolumefile",
  "homepage": "https://github.com/miurahr/multivolume",
  "release_count": 11,
  "dependency_ids": [
    "pypi_check_manifest",
    "pypi_coverage",
    "pypi_coveralls",
    "pypi_flake8",
    "pypi_flake8_black",
    "pypi_hypothesis",
    "pypi_isort",
    "pypi_mypy",
    "pypi_mypy_extensions",
    "pypi_pyannotate",
    "pypi_pygments",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_readme_renderer",
    "pypi_twine"
  ]
}
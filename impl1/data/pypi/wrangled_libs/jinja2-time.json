{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "===========\njinja2 time\n===========\n\n|pypi| |pyversions| |license| |travis-ci|\n\njinja2 extension for dates and times\n\n.. |pypi| image:: https://img.shields.io/pypi/v/jinja2-time.svg\n   :target: https://pypi.python.org/pypi/jinja2-time\n   :alt: pypi package\n\n.. |pyversions| image:: https://img.shields.io/pypi/pyversions/jinja2-time.svg\n   :target: https://pypi.python.org/pypi/jinja2-time/\n   :alt: pypi python versions\n\n.. |license| image:: https://img.shields.io/pypi/l/jinja2-time.svg\n   :target: https://pypi.python.org/pypi/jinja2-time\n   :alt: pypi package license\n\n.. |travis-ci| image:: https://travis-ci.org/hackebrot/jinja2-time.svg?branch=master\n    :target: https://travis-ci.org/hackebrot/jinja2-time\n    :alt: see build status on travis ci\n\ninstallation\n------------\n\n**jinja2-time** is available for download from `pypi`_ via `pip`_::\n\n    $ pip install jinja2-time\n\nit will automatically install `jinja2`_ along with `arrow`_.\n\n.. _`jinja2`: https://github.com/mitsuhiko/jinja2\n.. _`pypi`: https://pypi.python.org/pypi\n.. _`arrow`: https://github.com/crsmithdev/arrow\n.. _`pip`: https://pypi.python.org/pypi/pip/\n\nusage\n-----\n\nnow tag\n~~~~~~~\n\nthe extension comes with a ``now`` tag that provides convenient access to the\n`arrow.now()`_ api from your templates.\n\nyou can control the output by specifying a format, that will be passed to\npython's `strftime()`_:\n\n.. _`arrow.now()`: http://crsmithdev.com/arrow/#arrow.factory.arrowfactory.now\n.. _`strftime()`: https://docs.python.org/3.5/library/datetime.html#strftime-and-strptime-behavior\n\n.. code-block:: python\n\n    from jinja2 import environment\n\n    env = environment(extensions=['jinja2_time.timeextension'])\n\n    # timezone 'local', default format -> \"2015-12-10\"\n    template = env.from_string(\"{% now 'local' %}\")\n\n    # timezone 'utc', explicit format -> \"thu, 10 dec 2015 15:49:01\"\n    template = env.from_string(\"{% now 'utc', '%a, %d %b %y %h:%m:%s' %}\")\n\n    # timezone 'europe/berlin', explicit format -> \"cet +0100\"\n    template = env.from_string(\"{% now 'europe/berlin', '%z %z' %}\")\n\n    # timezone 'utc', explicit format -> \"2015\"\n    template = env.from_string(\"{% now 'utc', '%y' %}\")\n\n    template.render()\n\ndefault datetime format\n~~~~~~~~~~~~~~~~~~~~~~~\n\n**timeextension** extends the environment with a ``datetime_format`` attribute.\n\nit is used as a fallback if you omit the format for ``now``.\n\n.. code-block:: python\n\n    from jinja2 import environment\n\n    env = environment(extensions=['jinja2_time.timeextension'])\n\n    env.datetime_format = '%a, %d %b %y %h:%m:%s'\n\n    # timezone 'utc', default format -> \"thu, 10 dec 2015 15:49:01\"\n    template = env.from_string(\"{% now 'utc' %}\")\n\n    template.render()\n\ntime offset\n~~~~~~~~~~~\n\n**jinja2-time** implements a convenient interface to modify ``now`` by a\nrelative time offset:\n\n.. code-block:: python\n\n    # examples for now \"2015-12-09 23:33:01\"\n\n    # \"thu, 10 dec 2015 01:33:31\"\n    \"{% now 'utc' + 'hours=2, seconds=30' %}\"\n\n    # \"wed, 09 dec 2015 23:22:01\"\n    \"{% now 'utc' - 'minutes=11' %}\"\n\n    # \"07 dec 2015 23:00:00\"\n    \"{% now 'utc' - 'days=2, minutes=33, seconds=1', '%d %b %y %h:%m:%s' %}\"\n\nfurther documentation on the underlying functionality can be found in the\n`arrow replace docs`_.\n\n.. _`arrow replace docs`: http://arrow.readthedocs.io/en/latest/#replace-shift\n\n\nissues\n------\n\nif you encounter any problems, please `file an issue`_ along with a detailed description.\n\n.. _`file an issue`: https://github.com/hackebrot/jinja2-time/issues\n\n\ncode of conduct\n---------------\n\neveryone interacting in the jinja2-time project's codebases, issue trackers, chat\nrooms, and mailing lists is expected to follow the `pypa code of conduct`_.\n\n.. _`pypa code of conduct`: https://www.pypa.io/en/latest/code-of-conduct/\n\nlicense\n-------\n\ndistributed under the terms of the `mit`_ license, jinja2-time is free and open source software\n\n.. image:: https://opensource.org/trademarks/osi-certified/web/osi-certified-120x100.png\n   :align: left\n   :alt: osi certified\n   :target: https://opensource.org/\n\n.. _`mit`: http://opensource.org/licenses/mit",
  "docs_url": null,
  "keywords": "jinja2,extension,time",
  "license": "mit",
  "name": "jinja2-time",
  "package_url": "https://pypi.org/project/jinja2-time/",
  "project_url": "https://pypi.org/project/jinja2-time/",
  "project_urls": {
    "Homepage": "https://github.com/hackebrot/jinja2-time"
  },
  "release_url": "https://pypi.org/project/jinja2-time/0.2.0/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "jinja2 extension for dates and times",
  "version": "0.2.0",
  "releases": [],
  "developers": [
    "raphael@hackebrot.de",
    "raphael_pierzina"
  ],
  "kwds": "jinja2_time jinja2 pyversions pypi travis",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_jinja2_time",
  "homepage": "https://github.com/hackebrot/jinja2-time",
  "release_count": 2,
  "dependency_ids": []
}
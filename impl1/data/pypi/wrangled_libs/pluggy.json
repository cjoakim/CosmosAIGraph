{
  "classifiers": [
    "development status :: 6 - mature",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: software development :: libraries",
    "topic :: software development :: testing",
    "topic :: utilities"
  ],
  "description": "====================================================\npluggy - a minimalist production ready plugin system\n====================================================\n\n|pypi| |conda-forge| |versions| |github-actions| |gitter| |black| |codecov|\n\nthis is the core framework used by the `pytest`_, `tox`_, and `devpi`_ projects.\n\nplease `read the docs`_ to learn more!\n\na definitive example\n====================\n.. code-block:: python\n\n    import pluggy\n\n    hookspec = pluggy.hookspecmarker(\"myproject\")\n    hookimpl = pluggy.hookimplmarker(\"myproject\")\n\n\n    class myspec:\n        \"\"\"a hook specification namespace.\"\"\"\n\n        @hookspec\n        def myhook(self, arg1, arg2):\n            \"\"\"my special little hook that you can customize.\"\"\"\n\n\n    class plugin_1:\n        \"\"\"a hook implementation namespace.\"\"\"\n\n        @hookimpl\n        def myhook(self, arg1, arg2):\n            print(\"inside plugin_1.myhook()\")\n            return arg1 + arg2\n\n\n    class plugin_2:\n        \"\"\"a 2nd hook implementation namespace.\"\"\"\n\n        @hookimpl\n        def myhook(self, arg1, arg2):\n            print(\"inside plugin_2.myhook()\")\n            return arg1 - arg2\n\n\n    # create a manager and add the spec\n    pm = pluggy.pluginmanager(\"myproject\")\n    pm.add_hookspecs(myspec)\n\n    # register plugins\n    pm.register(plugin_1())\n    pm.register(plugin_2())\n\n    # call our ``myhook`` hook\n    results = pm.hook.myhook(arg1=1, arg2=2)\n    print(results)\n\n\nrunning this directly gets us::\n\n    $ python docs/examples/toy-example.py\n    inside plugin_2.myhook()\n    inside plugin_1.myhook()\n    [-1, 3]\n\n\n.. badges\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pluggy.svg\n    :target: https://pypi.org/pypi/pluggy\n\n.. |versions| image:: https://img.shields.io/pypi/pyversions/pluggy.svg\n    :target: https://pypi.org/pypi/pluggy\n\n.. |github-actions| image:: https://github.com/pytest-dev/pluggy/workflows/main/badge.svg\n    :target: https://github.com/pytest-dev/pluggy/actions\n\n.. |conda-forge| image:: https://img.shields.io/conda/vn/conda-forge/pluggy.svg\n    :target: https://anaconda.org/conda-forge/pytest\n\n.. |gitter| image:: https://badges.gitter.im/pytest-dev/pluggy.svg\n    :alt: join the chat at https://gitter.im/pytest-dev/pluggy\n    :target: https://gitter.im/pytest-dev/pluggy?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n.. |codecov| image:: https://codecov.io/gh/pytest-dev/pluggy/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/pytest-dev/pluggy\n    :alt: code coverage status\n\n.. links\n.. _pytest:\n    http://pytest.org\n.. _tox:\n    https://tox.readthedocs.org\n.. _devpi:\n    http://doc.devpi.net\n.. _read the docs:\n   https://pluggy.readthedocs.io/en/latest/\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pluggy",
  "package_url": "https://pypi.org/project/pluggy/",
  "project_url": "https://pypi.org/project/pluggy/",
  "project_urls": {
    "Homepage": "https://github.com/pytest-dev/pluggy"
  },
  "release_url": "https://pypi.org/project/pluggy/1.3.0/",
  "requires_dist": [
    "pre-commit ; extra == 'dev'",
    "tox ; extra == 'dev'",
    "pytest ; extra == 'testing'",
    "pytest-benchmark ; extra == 'testing'"
  ],
  "requires_python": ">=3.8",
  "summary": "plugin and hook calling mechanisms for python",
  "version": "1.3.0",
  "releases": [],
  "developers": [
    "holger@merlinux.eu",
    "holger_krekel"
  ],
  "kwds": "pytest pyversions _pytest github python",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pluggy",
  "homepage": "https://github.com/pytest-dev/pluggy",
  "release_count": 21,
  "dependency_ids": [
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytest_benchmark",
    "pypi_tox"
  ]
}
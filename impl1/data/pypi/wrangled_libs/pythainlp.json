{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: thai",
    "programming language :: python :: 3",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: text processing",
    "topic :: text processing :: general",
    "topic :: text processing :: linguistic"
  ],
  "description": "\n![pythainlp logo](https://avatars0.githubusercontent.com/u/32934255?s=200&v=4)\n\npythainlp is a python library for thai natural language processing.\nthe library provides functions like word tokenization, part-of-speech tagging,\ntransliteration, soundex generation, spell checking, and\ndate and time parsing/formatting.\n\nwebsite: [pythainlp.github.io](https://pythainlp.github.io/)\n\n# install\n\nfor stable version:\n\n```sh\npip install pythainlp\n```\n\nfor development version:\n\n```sh\npip install --upgrade --pre pythainlp\n```\n\nsome functionalities, like named-entity recognition, required extra packages.\nsee https://github.com/pythainlp/pythainlp for installation options.\n\n\n",
  "docs_url": null,
  "keywords": "pythainlp,nlp,natural language processing,text analytics,text processing,localization,computational linguistics,thainlp,thai nlp,thai language",
  "license": "apache software license 2.0",
  "name": "pythainlp",
  "package_url": "https://pypi.org/project/pythainlp/",
  "project_url": "https://pypi.org/project/pythainlp/",
  "project_urls": {
    "Bug Tracker": "https://github.com/PyThaiNLP/pythainlp/issues",
    "Documentation": "https://pythainlp.github.io/docs/4.0/",
    "Homepage": "https://github.com/PyThaiNLP/pythainlp",
    "Source Code": "https://github.com/PyThaiNLP/pythainlp",
    "Tutorials": "https://pythainlp.github.io/tutorials/"
  },
  "release_url": "https://pypi.org/project/pythainlp/4.0.2/",
  "requires_dist": [
    "requests (>=2.22.0)",
    "backports.zoneinfo ; python_version < \"3.9\"",
    "attacut (>=1.0.6) ; extra == 'attacut'",
    "PyYAML (>=5.3.1) ; extra == 'benchmarks'",
    "numpy (>=1.22) ; extra == 'benchmarks'",
    "pandas (>=0.24) ; extra == 'benchmarks'",
    "spacy-thai (>=0.7.1) ; extra == 'dependency_parsing'",
    "ufal.chu-liu-edmonds (>=1.0.2) ; extra == 'dependency_parsing'",
    "transformers (>=4.22.1) ; extra == 'dependency_parsing'",
    "esupar (>=1.3.8) ; extra == 'esupar'",
    "numpy ; extra == 'esupar'",
    "transformers (>=4.22.1) ; extra == 'esupar'",
    "PyYAML (>=5.3.1) ; extra == 'full'",
    "attacut (>=1.0.4) ; extra == 'full'",
    "emoji (>=0.5.1) ; extra == 'full'",
    "epitran (>=1.1) ; extra == 'full'",
    "fairseq (>=0.10.0) ; extra == 'full'",
    "gensim (>=4.0.0) ; extra == 'full'",
    "nltk (>=3.3) ; extra == 'full'",
    "numpy (>=1.22) ; extra == 'full'",
    "pandas (>=0.24) ; extra == 'full'",
    "pyicu (>=2.3) ; extra == 'full'",
    "sacremoses (>=0.0.41) ; extra == 'full'",
    "sentencepiece (>=0.1.91) ; extra == 'full'",
    "ssg (>=0.0.8) ; extra == 'full'",
    "torch (>=1.0.0) ; extra == 'full'",
    "fastai (<2.0) ; extra == 'full'",
    "bpemb (>=0.3.2) ; extra == 'full'",
    "transformers (>=4.22.1) ; extra == 'full'",
    "sefr-cut (>=1.1) ; extra == 'full'",
    "phunspell (>=0.1.6) ; extra == 'full'",
    "spylls (>=0.1.5) ; extra == 'full'",
    "symspellpy (>=6.7.6) ; extra == 'full'",
    "oskut (>=1.3) ; extra == 'full'",
    "nlpo3 (>=1.2.2) ; extra == 'full'",
    "onnxruntime (>=1.10.0) ; extra == 'full'",
    "thai-nner ; extra == 'full'",
    "wunsen (>=0.0.3) ; extra == 'full'",
    "spacy-thai (>=0.7.1) ; extra == 'full'",
    "ufal.chu-liu-edmonds (>=1.0.2) ; extra == 'full'",
    "fastai (<2.0) ; extra == 'generate'",
    "pyicu (>=2.3) ; extra == 'icu'",
    "epitran (>=1.1) ; extra == 'ipa'",
    "numpy (>=1.22) ; extra == 'ml'",
    "torch (>=1.0.0) ; extra == 'ml'",
    "transformers (>=4.6.0) ; extra == 'mt5'",
    "sentencepiece (>=0.1.91) ; extra == 'mt5'",
    "nlpo3 (>=1.2.2) ; extra == 'nlpo3'",
    "sentencepiece (>=0.1.91) ; extra == 'onnx'",
    "numpy (>=1.22) ; extra == 'onnx'",
    "onnxruntime (>=1.10.0) ; extra == 'onnx'",
    "oskut (>=1.3) ; extra == 'oskut'",
    "sefr-cut (>=1.1) ; extra == 'sefr_cut'",
    "spacy-thai (>=0.7.1) ; extra == 'spacy_thai'",
    "phunspell (>=0.1.6) ; extra == 'spell'",
    "spylls (>=0.1.5) ; extra == 'spell'",
    "symspellpy (>=6.7.6) ; extra == 'spell'",
    "ssg (>=0.0.8) ; extra == 'ssg'",
    "bpemb ; extra == 'textaugment'",
    "gensim (>=4.0.0) ; extra == 'textaugment'",
    "emoji (>=0.5.1) ; extra == 'thai2fit'",
    "gensim (>=4.0.0) ; extra == 'thai2fit'",
    "numpy (>=1.22) ; extra == 'thai2fit'",
    "numpy (>=1.22) ; extra == 'thai2rom'",
    "torch (>=1.0.0) ; extra == 'thai2rom'",
    "thai-nner ; extra == 'thai_nner'",
    "ufal.chu-liu-edmonds (>=1.0.2) ; extra == 'transformers_ud'",
    "transformers (>=4.22.1) ; extra == 'transformers_ud'",
    "fairseq (>=0.10.0) ; extra == 'translate'",
    "sacremoses (>=0.0.41) ; extra == 'translate'",
    "sentencepiece (>=0.1.91) ; extra == 'translate'",
    "torch (>=1.0.0) ; extra == 'translate'",
    "transformers (>=4.6.0) ; extra == 'translate'",
    "transformers (>=4.6.0) ; extra == 'wangchanberta'",
    "sentencepiece (>=0.1.91) ; extra == 'wangchanberta'",
    "nltk (>=3.3) ; extra == 'wordnet'",
    "wunsen (>=0.0.1) ; extra == 'wunsen'"
  ],
  "requires_python": ">=3.7",
  "summary": "thai natural language processing library",
  "version": "4.0.2",
  "releases": [],
  "developers": [
    "email@wannaphong.com",
    "pythainlp"
  ],
  "kwds": "thainlp transliteration pythainlp python linguistics",
  "license_kwds": "apache software license 2.0",
  "libtype": "pypi",
  "id": "pypi_pythainlp",
  "homepage": "https://github.com/pythainlp/pythainlp",
  "release_count": 100,
  "dependency_ids": [
    "pypi_attacut",
    "pypi_backports.zoneinfo",
    "pypi_bpemb",
    "pypi_emoji",
    "pypi_epitran",
    "pypi_esupar",
    "pypi_fairseq",
    "pypi_fastai",
    "pypi_gensim",
    "pypi_nlpo3",
    "pypi_nltk",
    "pypi_numpy",
    "pypi_onnxruntime",
    "pypi_oskut",
    "pypi_pandas",
    "pypi_phunspell",
    "pypi_pyicu",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_sacremoses",
    "pypi_sefr_cut",
    "pypi_sentencepiece",
    "pypi_spacy_thai",
    "pypi_spylls",
    "pypi_ssg",
    "pypi_symspellpy",
    "pypi_thai_nner",
    "pypi_torch",
    "pypi_transformers",
    "pypi_ufal.chu_liu_edmonds",
    "pypi_wunsen"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: internet :: www/http :: dynamic content"
  ],
  "description": "homepage: http://spyne.io\n\nspyne aims to save the protocol implementers the hassle of\nimplementing their own remote procedure call api and the application programmers\nthe hassle of jumping through hoops just to expose their services using multiple\nprotocols and transports.\n\n\n\nchangelog\n=========\n\nspyne-2.14.0\n------------\n* python 3.10 support\n* msgpack 1.x support\n* sqlalchemy 1.2, 1.3, 1.4 support\n* ported the http subsystem to python 3\n* support for interface document customization\n  thanks to github.com/pygudev\n* dropped deprecated integration for sqlalchemy.\n  in other words, ``spyne.model.table`` is gone.\n* bug fixes and one dos fix: ghsl-2021-115.\n  thanks to github.com/kevinbackhouse and github security team.\n* jenkins run: https://jenkins.arskom.com.tr/job/spyne/job/origin-stable/192/\n\nspyne-2.13.16\n-------------\n* python 3.9 support\n* a lot of small fixes here and there.\n\nspyne-2.13.15\n-------------\n* a lot of small fixes here and there blocking the stable release.\n\nspyne-2.13.14-beta\n-------------------\n* test and fix polymorphic roundtrip via xmldocument.\n* implement support for relationship tables with >2 foreign keys.\n\nspyne-2.13.13-beta\n-------------------\n* implement wrapped/not_wrapped for complexmodel and hierdict family.\n\nspyne-2.13.12-beta\n-------------------\n* python 3 support is now beta !!!!. all tests pass and there are no known bugs\n\nspyne-2.13.11-alpha\n-------------------\n* soap: repaired mtom parsing.\n* faults: the fault api is now much more consistent.\n* various fixes across the board.\n* ``sqla_column_args`` is now only a dict. it can override column name without\n  changing mapped object attribute name.\n* various python 3 fixes for the twisted frontend.\n\n\nspyne-2.13.4-alpha\n------------------\n* ``date(format=\"%y\")`` no longer works. use ``date(date_format=\"%y\")`` just\n  like the api docs say\n\nspyne-2.13.3-alpha\n------------------\n* add support for sqlalchemy-1.2.\n* implement _logged for @rpc.\n* fix memory leak in complexmodelbase.as_dict. \n* switch to homegrown jenkins as test infrastructure. see\n  https://jenkins.arskom.com.tr\n* fix decimal totaldigits blunder.\n\nspyne-2.13.2-alpha\n------------------\n* ``servicebase`` is deprecated in favor of ``service``. it's just a name change\n  in order to make it consistent with the rest of the package. servicebase will\n  be kept until spyne 3.\n\n* introduced internal keys for services and methods. uniqueness is enforced\n  during application instantiation. if your server refuses to boot after\n  migrating to 2.13 raising ``methodalreadyexistserror``, explicitly setting a\n  unique ``__service_name__`` in one of the offending ``servicebase``\n  subclasses should fix the problem.\n\n  see 2fee1435c30dc50f7503f0915b5e56220dff34d0 for the change.\n\n* experimental library-wide python 3 support! yay!\n\n    * messagepack uses backwards-compatible raws with a hard-coded utf-8 encoding\n      for unicode (non-bytearray) types. please open an issue if not happy with\n      this.\n    * it's the transports' job to decide on a codec. use utf-8 when in doubt, as\n      that's what we're doing.\n    * avoid the async keyword for python 3.7.\n    * float rounding behaviour seems to have changed in python 3. in python 2,\n      ``round(2.5) = 3`` and ``round(3.5) = 4`` whereas in python 3,\n      ``round(2.5) = 2`` and ``round(3.5) = 4``. this is called half-to-even\n      rounding and while being counterintuitive, it seems to make better sense from\n      a statistical standpoint.\n\n      you will have to live with this or use ``decimal.decimal``.\n\n      this changes the way datetime and time microseconds are rounded. see\n      ``test_datetime_usec`` and ``test_time_usec`` in\n      ``spyne.test.model.test_primitive``.\n\n* ``spyne.model.unicode`` used to tolerate (i.e. implicitly but not-so-silenty\n  casted to ``str``) int values. this is no longer the case. if you want to\n  set proper numbers to a unicode-designated field, you must provide a\n  casting function. generally, ``unicode(cast=str)`` is what you want to do.\n  see d495aa3d56451bd02c0076a9a1f14c6450eadc8e for the change.\n* ``exc_table`` is deprecated in favour of ``exc_db``\\. please do a\n  s/exc_table/exc_db/g in your codebase when convenient.\n* django 1.6 support dropped. supporting 1.7-1.10.\n* bare methods with non-empty output now have\n  ``descriptior.body_style = spyne.body_style_empty_out_bare``\\, which was\n  ``spyne.body_style_empty`` before. this hould not break anything unless you\n  are doing some real fancy stuff in the method decorators or service events.\n* auxproc is deprecated. just get rid of it.\n* ``spyne.protocol.dictdoc.simple``, ``spyne.server.twisted.http`` and\n  ``spyne.server.django`` are not experimental anymore.\n* no major changes otherwise but we paid a lot of technical debt. e.g. we\n  revamped the test infrastructure.\n* ``_in_variable_names`` argument to ``@rpc`` was deprecated in favour of\n  ``_in_arg_names``\n* ``_udp`` argument to ``@rpc`` was deprecated in favour of ``_udd``. udp is\n  too well known as user datagram protocol which could be confusing.\n* ``_when`` argument to ``@mrpc`` now needs to be a callable that satisfies\n  the ``f(self, ctx)`` signature. it was ``f(self)`` before.\n* attachment is removed. it's been deprecated since ages.\n* usual bug fixes.\n\nspyne-2.12.15\n-------------\n* fix graceful import failures for python 3\n\nspyne-2.12.14\n-------------\n* fixed inclusive ranges for datetime and friends. #506\n* turns out sqlalchemy 1.1 causes funky crashes. we're fixated on 1.0 until\n  the issue can be investiaged.\n* implemented min_gc_interval to prevent excessive calls to ``gc.collect()``\n  see issue #472. pr: #515\n\nspyne-2.12.13\n-------------\n* dang.\n\nspyne-2.12.12\n-------------\n* return to pre 2.12 behaviour - coroutine exceptions are not silenced but\n  sent up the stack. this is backport of 2.13 fix.\n* proper serialization of complexmodels subclasses of other complexmodels\n  when initialized from lists.\n* minor bug fixes all around.\n\nspyne-2.12.11\n-------------\n* fix self-referential relationships pointing the wrong way\n* fix wrong use of string interpolation operator in logging call slowing spyne\n  down for no visible reason\n* detect and prevent name clashes between the foreign key column name and the\n  object itself.\n* silence a lot of (wrong) customized class instantiation warnings.\n\nspyne-2.12.10\n-------------\n* ipaddress types now support postgresql's pginet.\n* drop trial for twisted tests and switch to pytest-twisted.\n* ``_safe_set`` now returns true on success so that protocols can react\n  accordingly.\n* \\*dictdoc now logs properly whether a value is discarded or passed to the\n  deserialized instance.\n* minor bug fixes here and there.\n\nspyne-2.12.9\n------------\n* make ``datetime`` handle unicode date format strings for python 2.\n* fix idle timer not starting on connectionmade for ``messagepacktransportbase``\n\nspyne-2.12.7\n------------\n* not beta anymore. woo!\n* made servicebase subclasses reusable\n* implemented class customization via ``__getitem__``\\.\n* fixed an ``importerror`` running python 3.4 under pydev using pycharm.\n  (eclipse still has issues, see\n  `issue #432 <https://github.com/arskom/spyne/issues/432>`_. any help would be\n  much appreciated)\n* fixed datetime corner case with \u03bcs values between 999995 and 999999.\n* help misguided user code that returns an int for a string type by implicitly\n  yet not-so-silently converting the ``int``/``long`` to ``str``\\.\n* fixed \\*cloth sometimes getting stuck ``repr()``\\'ing  passed instance.\n* fixed ``simpledictdocument`` confusing a missing value and an empty value for\n  array types. when the client wants to denote an empty array, it should pass\n  ``array_field=empty``\\. normally it passes something along the lines of:\n  ``array_field[0]=something&array_field[1]=somethingelse``\\.\n* split ``messagepackserverbase`` to ``messagepacktransportbase`` and\n  ``messagepackserverbase``\\. no api was harmed during this change.\n* implement optional idle timeout for ``messagepacktransportbase``\\.\n* add support for pgobjectjson, pgobjectxml and pgfilejson to sql table\n  reflection.\n* ``log_repr`` now consults ``native_map`` as a last resort before freaking out.\n* removed some dead code.\n\nspyne-2.12.6-beta\n-----------------\n* thanks to `issue #446 <https://github.com/arskom/spyne/issues/446>`_\n  we noticed that in some cases, soap messages inside http requests got\n  processed even when the request method != 'post'. this got resolved, but you\n  should check whether this is the case in your setup and take the necessary\n  precautions before deploying spyne.\n\nspyne-2.12.[12345]-beta\n-----------------------\n* many bugs fixed very quick.\n\nspyne-2.12.0-beta\n-----------------\n* xmlobject: support for ``attribute_of`` is removed.\n* nullserver now supports async.\n* xmlcloth was rewritten while less sleep-deprived.\n* protocolbase now also implements serializing primitives to unicode.\n* add initial support for input polymorphism to xmldocument (parsing xsi:type).\n  it's an experimental feature.\n* add output polymorphism for all protocols. it's off-by-default for xmldocument\n  and friends, on-by-default for others.\n* add stub implementation for soap 1.2\n* add initial implementation for soap 1.2 faults.\n* remove the deprecated ``interface`` argument to ``application``\\.\n* hierdictdocument's broken wrapped dict support was fixed. even though this is\n  supposed to break compatibility with 2.11, virtually no one seems to use this\n  feature. only now it's mature enough to be set on stone. let us know!\n* we now validate kwargs passed to ``@rpc``\\. be sure to test your daemons\n  before deploying for production, because if you got leftovers, the server will\n  refuse to boot!\n* it's now forbidden (by assert) to inherit from a customized class.\n* it's also forbidden (by convention) to instantiate a customized class. don't\n  do it! the warning will be converted to an assert in the future.\n\nspyne-2.11.0\n------------\n* experimental python 3 support for all of the xml-related (non-html)\n  components.\n* add support for altering output protocol by setting ``ctx.out_protocol``.\n* add returning ctx.out_string support to null server (the ``ostr`` argument).\n* add support for xmldata modifier. it lets mapping the data in the xml body\n  to an object field via xsd:simplecontent.\n* remove deprecated ``jsonobject`` identifier. just do a gentle\n  ``s/jsonobject/jsondocument/g`` if you're still using it.\n* sqlalchemy: implement storing arrays of simple types in a table.\n* sqlalchemy: make it work with multiple foreign keys from one table to\n  another.\n* sqlalchemy: implement a hybrid file container that puts file metadata in a\n  json column in database and and file data in file system. fully supported by\n  all protocols as a binary file.value instance.\n* implement an xml schema parser.\n* import all model markers as well as the ``@rpc``\\, ``@srpc``\\, ``@mrpc``,\n  ``servicebase`` and ``application`` to the root ``spyne`` package.\n* implement jsonp protocol.\n* implement spynejsonrpc 1.0 protocol -- it supports request headers.\n\n  sample request:  ``{\"ver\":1, \"body\": {\"div\": [4,2]}, \"head\": {\"id\": 1234}}``\n  sample response: ``{\"ver\":1, \"body\": 2}``\n\n  sample request:  ``{\"ver\":1, \"body\": {\"div\": {\"dividend\":4,\"divisor\":0]}}``\n  sample response: ``{\"ver\":1, \"fault\": {\"faultcode\": \"server\", \"faultstring\": \"internal error\"}}}``\n\n* steal and integrate the experimental websocket tranport from twisted.\n* support django natively using `spyne.server.django.djangoview` and\n  `spyne.server.django.djangoserver`.\n* it's now possible to override the ``jsonencoder`` class ``jsondocument`` uses.\n* remove hard-coded utf-8 defaults from almost everywhere.\n* remove hard-coded pytz.utc defaults from everywhere. use spyne.local_tz to\n  configure the default time zone.\n* as a result of the above change, ``datetime`` objects deserialized by spyne\n  are forced to the above time zone during soft validation (nothing should have\n  changed from the user code perspective).\n* add ``default_factory`` to modelbase customizer. it's a callable that produces\n  default values on demand. suitable to be used with e.g. lambdas that return\n  mutable defaults.\n* new ``spyne.util.attrdict`` can be used for passing various dynamic\n  configuration data.\n* ``child_attrs`` can now be passed to the complexmodelbase customizer in order\n  to make object-specific in-place customizations to child types.\n* add mapper between django models and `spyne.util.django.djangocomplexmodel`\n  types.\n* spyne now tracks subclasses and adds them to the interface if they are in the\n  same namespace as their parent.\n* simple dictionary protocol's ``hier_delim`` default value is now '.'\n* fixes support for xmlattributes with max_occurs>1 referencing the same\n  'attribute_of' element in a complexmodel subclass.\n* renders ``spyne.model.file`` as ``twisted.web.static.file`` when using httprpc\n  over ``twistedwebresource``. this lets twisted handle http 1.1-specific\n  functionality like range requests.\n* many, many, many bugs fixed.\n\ncheck the documentation at http://spyne.io/docs for changelogs of the older\nversions\n\n\n",
  "docs_url": null,
  "keywords": "soap,wsdl,wsgi,zeromq,rest,rpc,json,http,msgpack,xml,django,pyramid,postgresql,sqlalchemy,twisted,yaml",
  "license": "lgpl-2.1",
  "name": "spyne",
  "package_url": "https://pypi.org/project/spyne/",
  "project_url": "https://pypi.org/project/spyne/",
  "project_urls": {
    "Homepage": "http://spyne.io"
  },
  "release_url": "https://pypi.org/project/spyne/2.14.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a transport and architecture agnostic rpc library that focuses on exposing public services with a well-defined api.",
  "version": "2.14.0",
  "releases": [],
  "developers": [
    "burak+package@spyne.io",
    "burak_arslan"
  ],
  "kwds": "sqlalchemy spynejsonrpc spyne wsgi out_protocol",
  "license_kwds": "lgpl-2.1",
  "libtype": "pypi",
  "id": "pypi_spyne",
  "homepage": "http://spyne.io",
  "release_count": 45,
  "dependency_ids": []
}
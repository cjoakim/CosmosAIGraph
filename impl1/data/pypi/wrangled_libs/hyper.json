{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: implementation :: cpython"
  ],
  "description": "===============================\nhyper: http/2 client for python\n===============================\n\n.. image:: https://raw.github.com/lukasa/hyper/development/docs/source/images/hyper.png\n\n.. image:: https://travis-ci.org/lukasa/hyper.png?branch=master\n    :target: https://travis-ci.org/lukasa/hyper\n\nhttp is changing under our feet. http/1.1, our old friend, is being\nsupplemented by the brand new http/2 standard. http/2 provides many benefits:\nimproved speed, lower bandwidth usage, better connection management, and more.\n\n``hyper`` provides these benefits to your python code. how? like this::\n\n    from hyper import httpconnection\n\n    conn = httpconnection('http2bin.org:443')\n    conn.request('get', '/get')\n    resp = conn.get_response()\n\n    print(resp.read())\n\nsimple.\n\ncaveat emptor!\n==============\n\nplease be warned: ``hyper`` is in a very early alpha. you *will* encounter bugs\nwhen using it. in addition, there are very many rough edges. with that said,\nplease try it out in your applications: i need your feedback to fix the bugs\nand file down the rough edges.\n\nversions\n========\n\n``hyper`` supports the final draft of the http/2 specification: additionally,\nit provides support for drafts 14, 15, and 16 of the http/2 specification. it\nalso supports the final draft of the hpack specification.\n\ncompatibility\n=============\n\n``hyper`` is intended to be a drop-in replacement for ``http.client``, with a\nsimilar api. however, ``hyper`` intentionally does not name its classes the\nsame way ``http.client`` does. this is because most servers do not support\nhttp/2 at this time: i don't want you accidentally using ``hyper`` when you\nwanted ``http.client``.\n\ndocumentation\n=============\n\nlooking to learn more? documentation for ``hyper`` can be found on `read the docs`_.\n\n.. _read the docs: http://hyper.readthedocs.io/en/latest/\n\ncontributing\n============\n\n``hyper`` welcomes contributions from anyone! unlike many other projects we are\nhappy to accept cosmetic contributions and small contributions, in addition to\nlarge feature requests and changes.\n\nbefore you contribute (either by opening an issue or filing a pull request),\nplease `read the contribution guidelines`_.\n\n.. _read the contribution guidelines: http://hyper.readthedocs.org/en/development/contributing.html\n\nlicense\n=======\n\n``hyper`` is made available under the mit license. for more details, see the\n``license`` file in the repository.\n\nauthors\n=======\n\n``hyper`` is maintained by cory benfield, with contributions from others. for\nmore details about the contributors, please see ``contributors.rst``.\n\n\nrelease history\n===============\n\nv0.7.0 (2016-09-27)\n-------------------\n\n*major changes*\n\n- added a ``ping`` method, allowing the user to use the http/2 ``ping`` frame\n  to check connection liveness before, instead of, or between issuing requests.\n\n*bugfixes*\n\n- don't send windowupdate frames on closed streams.\n- clean up the outstanding stream reads on stream close.\n- ensured that connection state is always unconditionally reset on stream\n  close, regardless of whether the connection has a socket object open or not.\n\n0.6.2 (2016-06-13)\n------------------\n\n*bugfixes*\n\n- fixed packaging error made in prior release.\n\n0.6.1 (2016-06-13)\n------------------\n\n*bugfixes*\n\n- tolerate errors when attempting to send a rst_stream frame.\n- ensure that calls to ``fileno()`` on the compatibility ``sslsocket`` object\n  actually work correctly. thanks to @benlast!\n- improved some problems with thread-safety in the ``stream`` class. thanks to\n  @fredthomsen!\n- allowed for systems to use hyper without the bundled cert file being present.\n  thanks to @jasongowthorpe!\n\n0.6.0 (2016-05-06)\n------------------\n\n*major changes*\n\n- the ``http20connection`` object is now thread-safe, so long as stream ids are\n  used on all method calls.\n- replaced the http/2 state machine logic entirely to use hyper-h2. this will\n  dramatically change the behaviour of the library in many situations, mostly\n  for the better. however, this is also likely to introduce new bugs, so please\n  be cautious.\n\n*api changes*\n\n- allow non-dictionary headers in ``request``.\n- ``http20connection`` now has a ``force_proto`` keyword argument to allow the\n  ``http20connection`` to ignore the npn/alpn result.\n- the ``--h2`` cli flag now ignores the result of npn/alpn negotiation when\n  hitting https urls.\n- added support for https client certificates.\n- notifications about streams being reset is now delayed to fire when the\n  stream in question is next accessed, rather than immediately.\n\n*bugfixes*\n\n- overriding http/2 special headers no longer leads to ill-formed header blocks\n  with special headers at the end.\n- vastly improved ipv6 support.\n- fix converting unicode bodies to bytestrings on python 2.7.\n- allow overriding the http/2 pseudo-headers from the cli.\n- fixed problems with incorrectly generating the ``http2-settings`` header.\n- improved handling of socket errors.\n\n0.5.0 (2015-10-11)\n------------------\n\n*feature enhancement*\n\n- pay attention to max frame length changes from remote peers. thanks to\n  @jdecuyper!\n\n*bugfixes*\n\n- prevent hyper from emitting oversized frames. thanks to @jdecuyper!\n- prevent hyper from emitting rst_stream frames whenever it finishes consuming\n  a stream.\n- prevent hyper from emitting lots of rst_stream frames.\n- hyper cli tool now correctly uses tls for any ``https``-schemed url.\n- hyper cli tool no longer attempts to decode bytes, instead writing them\n  straight to the terminal.\n- added new ``--h2`` flag to the hyper cli tool, which allows straight http/2\n  in plaintext, rather than attempting to upgrade from http/1.1.\n- allow arguments and keyword arguments in abstract version of\n  ``get_response``.\n\n*software updates*\n\n- updated hyperframe to version 2.1.0\n\n0.4.0 (2015-06-21)\n------------------\n\n*new features*\n\n- http/1.1 and http/2 abstraction layer. don't specify what version you want to\n  use, just automatically get the best version the server supports!\n- support for upgrading plaintext http/1.1 to plaintext http/2, with thanks to\n  @fredthomsen! (`issue #28`_)\n- ``http11connection`` and ``httpconnection`` objects are now both context\n  managers.\n- added support for alpn negotiation when using pyopenssl. (`issue #31`_)\n- added support for user-provided sslcontext objects, with thanks to\n  @jdecuyper! (`issue #8`_)\n- better support for http/2 error codes, with thanks to @jdecuyper!\n  (`issue #119`_)\n- more gracefully close connections, with thanks to @jdecuyper! (`issue #15`_)\n\n*structural changes*\n\n- the framing and hpack layers were stripped out into their own libraries.\n\n*bugfixes*\n\n- properly verify hostnames when using pyopenssl.\n\n.. _issue #8: https://github.com/lukasa/hyper/issues/8\n.. _issue #15: https://github.com/lukasa/hyper/issues/15\n.. _issue #28: https://github.com/lukasa/hyper/issues/28\n.. _issue #31: https://github.com/lukasa/hyper/issues/31\n.. _issue #119: https://github.com/lukasa/hyper/issues/119\n\n0.3.1 (2015-04-03)\n------------------\n\n*bugfixes*\n\n- fix blocking ``importerror``. (`issue #114`_)\n\n.. _issue #114: https://github.com/lukasa/hyper/issues/114\n\n0.3.0 (2015-04-03)\n------------------\n\n*new features*\n\n- http/1.1 support! see the documentation for more. (`issue #75`_)\n- implementation of a ``httpheadermap`` data structure that provides dictionary\n  style lookups while retaining all the semantic information of http headers.\n\n*major changes*\n\n- various changes in the http/2 apis:\n\n  - the ``getheader``, ``getheaders``, ``gettrailer``, and ``gettrailers``\n    methods on the response object have been removed, replaced instead with\n    simple ``.headers`` and ``.trailers`` properties that contain\n    ``httpheadermap`` structures.\n  - headers and trailers are now bytestrings, rather than unicode strings.\n  - an ``iter_chunked()`` method was added to response objects that allows\n    iterating over data in units of individual data frames.\n  - changed the name of ``getresponse()`` to ``get_response()``, because\n    ``getresponse()`` was a terrible name forced upon me by httplib.\n\n.. _issue #75: https://github.com/lukasa/hyper/issues/75\n\n0.2.2 (2015-04-03)\n------------------\n\n*bugfixes*\n\n- hyper now correctly handles 'never indexed' header fields. (`issue #110`_)\n\n.. _issue #110: https://github.com/lukasa/hyper/issues/110\n\n0.2.1 (2015-03-29)\n------------------\n\n*new features*\n\n- there is now a `hyper` command-line client that supports making http/2\n  requests directly from the command-line.\n\n*major changes*\n\n- support for the final drafts of http/2 and hpack. updated to offer the 'h2'\n  alpn token.\n\n*minor changes*\n\n- we not only remove the connection header but all headers it refers to.\n\n0.2.0 (2015-02-07)\n------------------\n\n*major changes*\n\n- python 2.7.9 is now fully supported.\n\n0.1.2 (2015-02-07)\n------------------\n\n*minor changes*\n\n- we now remove the ``connection`` header if it's given to us, as that header\n  is not valid in http/2.\n\n*bugfixes*\n\n- adds workaround for httpie to make our responses look more like urllib3\n  responses.\n\n0.1.1 (2015-02-06)\n------------------\n\n*minor changes*\n\n- support for http/2 draft 15, and 16. no drop of support for draft 14.\n- updated bundled certificate file.\n\n*bugfixes*\n\n- fixed ``attributeerror`` being raised when a ping frame was received, thanks\n  to @t2y. (`issue #79`_)\n- fixed bug where large frames could be incorrectly truncated by the buffered\n  socket implementation, thanks to @t2y. (`issue #80`_)\n\n.. _issue #79: https://github.com/lukasa/hyper/issues/79\n.. _issue #80: https://github.com/lukasa/hyper/issues/80\n\n0.1.0 (2014-08-16)\n------------------\n\n*regressions and known bugs*\n\n- support for python 3.3 has been temporarily dropped due to features missing\n  from the python 3.3 ``ssl`` module. pyopenssl has been identified as a\n  replacement, but until npn support is merged it cannot be used. python 3.3\n  support *will* be re-added when a suitable release of pyopenssl is shipped.\n- technically this release also includes support for pypy and python 2.7. that\n  support is also blocked behind a suitable pyopenssl release.\n\nfor more information on these regressions, please see `issue #37`_.\n\n*major changes*\n\n- support for hpack draft 9.\n- support for http/2 draft 14.\n- support for sever push, thanks to @alekstorm. (`issue #40`_)\n- use a buffered socket to avoid unnecessary syscalls. (`issue #56`_)\n- if `nghttp2`_ is present, use its hpack encoder for improved speed and\n  compression efficiency. (`issue #60`_)\n- add ``http20response.gettrailer()`` and ``http20response.gettrailers()``,\n  supporting downloading and examining http trailers. (discussed in part in\n  `issue #71`_.)\n\n*bugfixes*\n\n- ``http20response`` objects are context managers. (`issue #24`_)\n- pluggable window managers are now correctly informed about the document size.\n  (`issue #26`_)\n- header blocks can no longer be corrupted if read in a different order to the\n  one in which they were sent. (`issue #39`_)\n- default window manager is now smarter about sending windowupdate frames.\n  (`issue #41`_ and `issue #52`_)\n- fixed inverted window sizes. (`issue #27`_)\n- correct reply to ping frames. (`issue #48`_)\n- made the wheel universal, befitting a pure-python package. (`issue #46`_)\n- hpack encoder correctly encodes header sets with duplicate headers.\n  (`issue #50`_)\n\n.. _issue #24: https://github.com/lukasa/hyper/issues/24\n.. _issue #26: https://github.com/lukasa/hyper/issues/26\n.. _issue #27: https://github.com/lukasa/hyper/issues/27\n.. _issue #33: https://github.com/lukasa/hyper/issues/33\n.. _issue #37: https://github.com/lukasa/hyper/issues/37\n.. _issue #39: https://github.com/lukasa/hyper/issues/39\n.. _issue #40: https://github.com/lukasa/hyper/issues/40\n.. _issue #41: https://github.com/lukasa/hyper/issues/41\n.. _issue #46: https://github.com/lukasa/hyper/issues/46\n.. _issue #48: https://github.com/lukasa/hyper/issues/48\n.. _issue #50: https://github.com/lukasa/hyper/issues/50\n.. _issue #52: https://github.com/lukasa/hyper/issues/52\n.. _issue #56: https://github.com/lukasa/hyper/issues/56\n.. _issue #60: https://github.com/lukasa/hyper/issues/60\n.. _issue #71: https://github.com/lukasa/hyper/issues/71\n.. _nghttp2: https://nghttp2.org/\n\n0.0.4 (2014-03-08)\n------------------\n\n- add logic for pluggable objects to manage the flow-control window for both\n  connections and streams.\n- raise new ``hpackdecodingerror`` when we're unable to validly map a\n  huffman-encoded string.\n- correctly respect the hpack eos character.\n\n0.0.3 (2014-02-26)\n------------------\n\n- use bundled ssl certificates in addition to the os ones, which have limited\n  platform availability. (`issue #9`_)\n- connection objects reset to their basic state when they're closed, enabling\n  them to be reused. note that they may not be reused if exceptions are thrown\n  when they're in use: you must open a new connection in that situation.\n- connection objects are now context managers. (`issue #13`_)\n- the ``http20adapter`` correctly reuses connections.\n- stop sending windowupdate frames with a zero-size window increment.\n- provide basic functionality for gracelessly closing streams.\n- exhausted streams are now disposed of. (`issue #14`_)\n\n.. _issue #9: https://github.com/lukasa/hyper/issues/9\n.. _issue #13: https://github.com/lukasa/hyper/issues/13\n.. _issue #14: https://github.com/lukasa/hyper/issues/14\n\n0.0.2 (2014-02-20)\n------------------\n\n- implemented logging. (`issue #12`_)\n- stopped http/2.0 special headers appearing in the response headers.\n  (`issue #16`_)\n- `http20connection` objects are now context managers. (`issue #13`_)\n- response bodies are automatically decompressed. (`issue #20`_)\n- provide a requests transport adapter. (`issue #19`_)\n- fix the build status indicator. (`issue #22`_)\n\n\n.. _issue #12: https://github.com/lukasa/hyper/issues/12\n.. _issue #16: https://github.com/lukasa/hyper/issues/16\n.. _issue #13: https://github.com/lukasa/hyper/issues/13\n.. _issue #20: https://github.com/lukasa/hyper/issues/20\n.. _issue #19: https://github.com/lukasa/hyper/issues/19\n.. _issue #22: https://github.com/lukasa/hyper/issues/22\n\n0.0.1 (2014-02-11)\n------------------\n\n- initial release\n- support for http/2.0 draft 09.\n- support for hpack draft 05.\n- support for http/2.0 flow control.\n- verifies tls certificates.\n- support for streaming uploads.\n- support for streaming downloads.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "hyper",
  "package_url": "https://pypi.org/project/hyper/",
  "project_url": "https://pypi.org/project/hyper/",
  "project_urls": {
    "Homepage": "http://hyper.rtfd.org"
  },
  "release_url": "https://pypi.org/project/hyper/0.7.0/",
  "requires_dist": [
    "h2 (<3.0,>=2.4)",
    "hyperframe (>=3.2,<4.0)",
    "cryptography (<1.0); platform_python_implementation == \"PyPy\" and python_full_version < \"2.7.9\"",
    "pyOpenSSL (>=0.15); python_full_version < \"2.7.9\"",
    "service-identity (>=14.0.0); python_full_version < \"2.7.9\"",
    "pycohttpparser; extra == 'fast'"
  ],
  "requires_python": "",
  "summary": "http/2 client for python",
  "version": "0.7.0",
  "releases": [],
  "developers": [
    "cory@lukasa.co.uk",
    "cory_benfield"
  ],
  "kwds": "http2 http httplib httpconnection http2bin",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_hyper",
  "homepage": "http://hyper.rtfd.org",
  "release_count": 18,
  "dependency_ids": [
    "pypi_cryptography",
    "pypi_h2",
    "pypi_hyperframe",
    "pypi_pycohttpparser",
    "pypi_pyopenssl",
    "pypi_service_identity"
  ]
}
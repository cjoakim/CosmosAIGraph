{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6"
  ],
  "description": "## walrus\n\n![](http://media.charlesleifer.com/blog/photos/walrus-logo-0.png)\n\nlightweight python utilities for working with [redis](http://redis.io).\n\nthe purpose of [walrus](https://github.com/coleifer/walrus) is to make working\nwith redis in python a little easier. rather than ask you to learn a new\nlibrary, walrus subclasses and extends the popular `redis-py` client, allowing\nit to be used as a drop-in replacement. in addition to all the features in\n`redis-py`, walrus adds support for some newer commands, including full support\nfor streams and consumer groups.\n\nwalrus consists of:\n\n* pythonic container classes for the redis data-types:\n    * [hash](https://walrus.readthedocs.io/en/latest/containers.html#hashes)\n    * [list](https://walrus.readthedocs.io/en/latest/containers.html#lists)\n    * [set](https://walrus.readthedocs.io/en/latest/containers.html#sets)\n    * [sorted set](https://walrus.readthedocs.io/en/latest/containers.html#sorted-sets-zset)\n    * [hyperloglog](https://walrus.readthedocs.io/en/latest/containers.html#hyperloglog)\n    * [array](https://walrus.readthedocs.io/en/latest/containers.html#arrays) (custom type)\n    * [bitfield](https://walrus.readthedocs.io/en/latest/containers.html#bitfield)\n    * [bloomfilter](https://walrus.readthedocs.io/en/latest/containers.html#bloomfilter)\n    * [**streams**](https://walrus.readthedocs.io/en/latest/streams.html)\n* [autocomplete](https://walrus.readthedocs.io/en/latest/autocomplete.html)\n* [cache](https://walrus.readthedocs.io/en/latest/cache.html) implementation that exposes several decorators for caching function and method calls.\n* [full-text search](https://walrus.readthedocs.io/en/latest/full-text-search.html) supporting set operations.\n* [graph store](https://walrus.readthedocs.io/en/latest/graph.html)\n* [rate-limiting](https://walrus.readthedocs.io/en/latest/rate-limit.html)\n* [locking](https://walrus.readthedocs.io/en/latest/api.html#walrus.lock)\n* **experimental** active-record style [models](https://walrus.readthedocs.io/en/latest/models.html) that support persisting structured information and performing complex queries using secondary indexes.\n* more? [more!](https://walrus.readthedocs.io)\n\n### models\n\npersistent structures implemented on top of hashes. supports secondary indexes to allow filtering on equality, inequality, ranges, less/greater-than, and a basic full-text search index. the full-text search features a boolean search query parser, porter stemmer, stop-word filtering, and optional double-metaphone implementation.\n\n### found a bug?\n\n![](http://media.charlesleifer.com/blog/photos/p1420743625.21.png)\n\nplease open a [github issue](https://github.com/coleifer/walrus/issues/new) and i will try my best to fix it!\n\n### alternative backends\n\nwalrus also can integrate with the redis-like databases [rlite](https://github.com/seppo0010/rlite), [ledis](http://ledisdb.io/), and [vedis](http://vedis.symisc.net). check the [documentation](https://walrus.readthedocs.io/en/latest/alt-backends.html) for more details.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "walrus",
  "package_url": "https://pypi.org/project/walrus/",
  "project_url": "https://pypi.org/project/walrus/",
  "project_urls": {
    "Homepage": "http://github.com/coleifer/walrus/"
  },
  "release_url": "https://pypi.org/project/walrus/0.9.3/",
  "requires_dist": [],
  "requires_python": null,
  "summary": "walrus",
  "version": "0.9.3",
  "releases": [],
  "developers": [
    "charles_leifer",
    "coleifer@gmail.com"
  ],
  "kwds": "redis walrus ledis pythonic ledisdb",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_walrus",
  "homepage": "http://github.com/coleifer/walrus/",
  "release_count": 40,
  "dependency_ids": []
}
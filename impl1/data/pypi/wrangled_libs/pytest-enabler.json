{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: pytest",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only"
  ],
  "description": ".. image:: https://img.shields.io/pypi/v/pytest-enabler.svg\n   :target: https://pypi.org/project/pytest-enabler\n\n.. image:: https://img.shields.io/pypi/pyversions/pytest-enabler.svg\n\n.. image:: https://github.com/jaraco/pytest-enabler/actions/workflows/main.yml/badge.svg\n   :target: https://github.com/jaraco/pytest-enabler/actions?query=workflow%3a%22tests%22\n   :alt: tests\n\n.. image:: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json\n    :target: https://github.com/astral-sh/ruff\n    :alt: ruff\n\n.. image:: https://readthedocs.org/projects/pytest-enabler/badge/?version=latest\n   :target: https://pytest-enabler.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://img.shields.io/badge/skeleton-2023-informational\n   :target: https://blog.jaraco.com/skeleton\n\nthe ``enabler`` plugin allows configuration of plugins if present, but omits the settings if the plugin is not present. for example, the following config enables black to be enabled when present::\n\n    [tool.pytest-enabler.black]\n    addopts = \"--black\"\n\nthen, to temporarily disable a plugin, use pytest's built-in support for disabling a plugin::\n\n    pytest -p no:black\n\n``enabler`` includes a `default config <https://github.com/jaraco/pytest-enabler/blob/main/pytest_enabler/default.toml>`_.\n\nknown to work with the following plugins:\n\n- pytest-black\n- pytest-cov\n- pytest-flake8\n- pytest-mypy\n- pytest-ruff\n- pytest-xdist\n- pytest-ignore-flaky\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "pytest-enabler",
  "package_url": "https://pypi.org/project/pytest-enabler/",
  "project_url": "https://pypi.org/project/pytest-enabler/",
  "project_urls": {
    "Homepage": "https://github.com/jaraco/pytest-enabler"
  },
  "release_url": "https://pypi.org/project/pytest-enabler/3.0.0/",
  "requires_dist": [
    "toml",
    "jaraco.functools",
    "jaraco.context",
    "importlib-resources >=5.10",
    "sphinx >=3.5 ; extra == 'docs'",
    "sphinx <7.2.5 ; extra == 'docs'",
    "jaraco.packaging >=9.3 ; extra == 'docs'",
    "rst.linker >=1.9 ; extra == 'docs'",
    "furo ; extra == 'docs'",
    "sphinx-lint ; extra == 'docs'",
    "pytest >=6 ; extra == 'testing'",
    "pytest-checkdocs >=2.4 ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pytest-enabler >=2.2 ; extra == 'testing'",
    "pytest-ruff >=0.2.1 ; extra == 'testing'",
    "types-toml ; extra == 'testing'",
    "pytest-mypy ; (platform_python_implementation != \"PyPy\") and extra == 'testing'"
  ],
  "requires_python": ">=3.8",
  "summary": "enable installed pytest plugins",
  "version": "3.0.0",
  "releases": [],
  "developers": [
    "jaraco@jaraco.com",
    "jason_r"
  ],
  "kwds": "pytest_enabler pytest pypi pyversions badge",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pytest_enabler",
  "homepage": "https://github.com/jaraco/pytest-enabler",
  "release_count": 14,
  "dependency_ids": [
    "pypi_furo",
    "pypi_importlib_resources",
    "pypi_jaraco.context",
    "pypi_jaraco.functools",
    "pypi_jaraco.packaging",
    "pypi_pytest",
    "pypi_pytest_checkdocs",
    "pypi_pytest_cov",
    "pypi_pytest_enabler",
    "pypi_pytest_mypy",
    "pypi_pytest_ruff",
    "pypi_rst.linker",
    "pypi_sphinx",
    "pypi_sphinx_lint",
    "pypi_toml",
    "pypi_types_toml"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: testing"
  ],
  "description": "![python application](https://github.com/marketsquare/robotframework-requests/workflows/python%20application/badge.svg?branch=master)\n[![codecov](https://codecov.io/gh/marketsquare/robotframework-requests/branch/master/graph/badge.svg)](https://codecov.io/gh/marketsquare/robotframework-requests)\n[![pypi downloads](https://img.shields.io/pypi/dm/robotframework-requests)](https://pypi.python.org/pypi/robotframework-requests)\n[![latest version](https://img.shields.io/pypi/v/robotframework-requests)](https://pypi.python.org/pypi/robotframework-requests)\n\n\ud83c\udfe0 ``requestslibrary`` is a [robot framework](https://robotframework.org/) library\naimed to provide http api testing functionalities by wrapping the well known [python requests library](https://github.com/kennethreitz/requests).\n\n## install stable version\n```sh\npip install robotframework-requests\n```\n\n## \ud83e\udd16 quick start\n```robotframework\n*** settings ***\nlibrary               requestslibrary\n\n*** test cases ***\n\nquick get request test\n    ${response}=    get  https://www.google.com\n\nquick get request with parameters test\n    ${response}=    get  https://www.google.com/search  params=query=ciao  expected_status=200\n\nquick get a json body test\n    ${response}=    get  https://jsonplaceholder.typicode.com/posts/1\n    should be equal as strings    1  ${response.json()}[id]\n```\n\n### what's new in 0.9\nsessionless keywords are now available, you can just `get`, `post`, etc.. no need to create a session anymore!\n```robotframework\n${resp}=  get  https://www.google.com\n```\n\n`status should be` and `request should be successfull` can use the last response, no need to pass the response anymore!\n```robotframework\nget  https://www.google.com\nstatus should be  200\n```\n\n### what's new in 0.8\n\n**new keywords structure:**\nall requests keywords have been rewritten because of many not backward compatible changes\nand to allow in the near future requests keywords without a session.\nexample `get request` become `get on session` and soon there will be also just `get`\nwhen a session is not needed.\nold keywords `* request` are now deprecated and will be removed in 1.0.0 version.\n\n**implicit assert on status code:**\n`* on session` keywords automatically fail if an error status code is returned.\n`expect_status=` could be used to specify a status code (`201`, `ok`, `bad request`)\nor `any` if you want to evaluate the response in any case.\n\n**closer to the original requests library:**\nnew keywords have the same parameter orders and structure as the original.\nlot of pre-parsing / encoding has been removed to have a more accurate and unchanged behaviour.\n\n**cleaner project architecture:**\nmain keywords file has been split with a more logic division to allow better and faster maintenance.\n\n## \ud83e\udd16 more examples\n```robotframework\n*** settings ***                                                                                       \nlibrary    collections                                                                                 \nlibrary    requestslibrary                                                                             \n                                                                                                       \nsuite setup    create session  jsonplaceholder  https://jsonplaceholder.typicode.com                   \n                                                                                                       \n*** test cases ***                                                                                     \n                                                                                                       \nget request test                                                                                       \n    create session    google  http://www.google.com                                                    \n                                                                                                       \n    ${resp_google}=   get on session  google  /  expected_status=200                                   \n    ${resp_json}=     get on session  jsonplaceholder  /posts/1                                        \n                                                                                                       \n    should be equal as strings          ${resp_google.reason}  ok                                      \n    dictionary should contain value     ${resp_json.json()}  sunt aut facere repellat provident        \n                                                                                                       \npost request test                                                                                      \n    &{data}=    create dictionary  title=robotframework requests  body=this is a test!  userid=1       \n    ${resp}=    post on session    jsonplaceholder  /posts  json=${data}  expected_status=anything     \n                                                                                                       \n    status should be                 201  ${resp}                                                      \n```\n\n### \ud83d\udcd6 keywords documentation\nrobotframework-requests offers a wide set of keywords which can be found in the [keywords documentation](http://marketsquare.github.io/robotframework-requests/doc/requestslibrary.html)\n\n### \ud83d\udd2c test examples\nyou can find many test examples inside the `atests` folder.\n\n## \ud83e\udd1d contributing \u270d\ufe0f\nfeel free to contribute and open an issue in order to discuss it. before doing it take a look at the [contribution guidelines](contributing.md).\n\n\ud83d\udce2 get in touch with the community via slack and users group\n- [robot framework slack #requests channel](https://robotframework-slack-invite.herokuapp.com/)\n- [robot framework users group](https://groups.google.com/forum/#!forum/robotframework-users)\n\n",
  "docs_url": null,
  "keywords": "robotframework testing test automation http client requests rest api",
  "license": "mit",
  "name": "robotframework-requests",
  "package_url": "https://pypi.org/project/robotframework-requests/",
  "project_url": "https://pypi.org/project/robotframework-requests/",
  "project_urls": {
    "Homepage": "https://github.com/MarketSquare/robotframework-requests"
  },
  "release_url": "https://pypi.org/project/robotframework-requests/0.9.6/",
  "requires_dist": [
    "robotframework",
    "requests",
    "robotframework >=3.2.1 ; extra == 'test'",
    "pytest ; extra == 'test'",
    "flask ; extra == 'test'",
    "six ; extra == 'test'",
    "coverage ; extra == 'test'",
    "flake8 ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "robot framework keyword library wrapper around requests",
  "version": "0.9.6",
  "releases": [],
  "developers": [
    "bulkan@gmail.com",
    "bulkan_savun_evcimen",
    "luca@giovenzana.org",
    "luca_giovenzana"
  ],
  "kwds": "requestslibrary robotframework requests robot pip",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_robotframework_requests",
  "homepage": "https://github.com/marketsquare/robotframework-requests",
  "release_count": 64,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_flake8",
    "pypi_flask",
    "pypi_pytest",
    "pypi_requests",
    "pypi_robotframework",
    "pypi_six"
  ]
}
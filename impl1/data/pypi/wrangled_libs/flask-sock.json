{
  "classifiers": [
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# flask-sock\n[![build status](https://github.com/miguelgrinberg/flask-sock/workflows/build/badge.svg)](https://github.com/miguelgrinberg/flask-sock/actions) [![codecov](https://codecov.io/gh/miguelgrinberg/flask-sock/branch/main/graph/badge.svg)](https://codecov.io/gh/miguelgrinberg/flask-sock)\n\nwebsocket support for flask. what makes this extension different than others\nis that it does not require a greenlet based server (gevent, eventlet) to work.\n\nthis websocket implementation is compatible with the flask development web\nserver. for a production deployment it can be used with gunicorn, eventlet or\ngevent.\n\n## resources\n\n- [documentation](http://flask-sock.readthedocs.io/en/latest/)\n- [pypi](https://pypi.python.org/pypi/flask-sock)\n- [change log](https://github.com/miguelgrinberg/flask-sock/blob/main/changes.md)\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "flask-sock",
  "package_url": "https://pypi.org/project/flask-sock/",
  "project_url": "https://pypi.org/project/flask-sock/",
  "project_urls": {
    "Bug Tracker": "https://github.com/miguelgrinberg/flask-sock/issues",
    "Homepage": "https://github.com/miguelgrinberg/flask-sock"
  },
  "release_url": "https://pypi.org/project/flask-sock/0.7.0/",
  "requires_dist": [
    "flask >=2",
    "simple-websocket >=0.5.1",
    "sphinx ; extra == 'docs'"
  ],
  "requires_python": ">=3.6",
  "summary": "websocket support for flask",
  "version": "0.7.0",
  "releases": [],
  "developers": [
    "miguel.grinberg@gmail.com",
    "miguel_grinberg"
  ],
  "kwds": "flask websocket eventlet badge sock",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_flask_sock",
  "homepage": "https://github.com/miguelgrinberg/flask-sock",
  "release_count": 14,
  "dependency_ids": [
    "pypi_flask",
    "pypi_simple_websocket",
    "pypi_sphinx"
  ]
}
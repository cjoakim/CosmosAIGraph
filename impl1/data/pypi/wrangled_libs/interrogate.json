{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: software development :: documentation",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: quality assurance"
  ],
  "description": "interrogate a codebase for docstring coverage.\n.. image:: https://interrogate.readthedocs.io/en/latest/_static/logo_pink.png\n    :alt: pink sloth logo\n\n=================================\n``interrogate``: explain yourself\n=================================\n\n.. image:: https://interrogate.readthedocs.io/en/latest/_static/interrogate_badge.svg\n   :target: https://github.com/econchick/interrogate\n   :alt: documentation coverage\n\n.. image:: https://codecov.io/gh/econchick/interrogate/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/econchick/interrogate\n   :alt: testing coverage\n\n.. image:: https://readthedocs.org/projects/interrogate/badge/?version=latest&style=flat\n   :target: https://interrogate.readthedocs.io/en/latest/?badge=latest\n   :alt: documentation status\n\n.. image:: https://github.com/econchick/interrogate/workflows/ci/badge.svg?branch=master\n   :target: https://github.com/econchick/interrogate/actions?workflow=ci\n   :alt: ci status\n\n.. start-readme\n\ninterrogate a codebase for docstring coverage.\n\nwhy do i need this?\n===================\n\n``interrogate`` checks your code base for missing docstrings.\n\ndocumentation should be as important as code itself. and it should live *within* code. python `standardized <https://www.python.org/dev/peps/pep-0257/>`_ docstrings, allowing for developers to navigate libraries as simply as calling ``help()`` on objects, and with powerful tools like `sphinx <https://www.sphinx-doc.org/en/master/>`_, `pydoc <https://docs.python.org/3/library/pydoc.html>`_, and `docutils <https://docutils.sourceforge.io/>`_ to automatically generate html, latex, pdfs, etc.\n\n*enter:* ``interrogate``.\n\n``interrogate`` will tell you which methods, functions, classes, and modules have docstrings, and which do not. use ``interrogate`` to:\n\n* get an understanding of how well your code is documented;\n* add it to ci/cd checks to enforce documentation on newly-added code;\n* assess a new code base for (one aspect of) code quality and maintainability.\n\nlet's get started.\n\nrequirements\n============\n\n``interrogate`` supports python 3.6 and above.\n\n\ninstallation\n============\n\n``interrogate`` is available on `pypi <https://pypi.org/project/interrogate/>`_ and `github <https://github.com/econchick/interrogate>`_. the recommended installation method is `pip <https://pip.pypa.io/en/stable/>`_-installing into a `virtualenv <https://hynek.me/articles/virtualenv-lives/>`_:\n\n.. code-block:: console\n\n    $ pip install interrogate\n\nextras\n------\n\n``interrogate`` provides a way to generate a `shields.io-like coverage badge <#other-usage>`_ as an **svg file**.\nto generate a **png file** instead, install ``interrogate`` with the extras ``[png]``:\n\n.. code-block:: console\n\n    $ pip install interrogate[png]\n\n**notice:** additional system libraries/tools may be required in order to generate a png file of the coverage badge:\n\n* on windows, install visual c++ compiler for cairo;\n* on macos, install ``cairo`` and ``libffi`` (with homebrew for example);\n* on linux, install the ``cairo``, ``python3-dev`` and ``libffi-dev`` packages (names may vary depending on distribution).\n\nrefer to the ``cairosvg`` `documentation <https://cairosvg.org/documentation/>`_ for more information.\n\nusage\n=====\n\ntry it out on a python project:\n\n.. code-block:: console\n\n    $ interrogate [path]\n    result: passed (minimum: 80.0%, actual: 100.0%)\n\n\nadd verbosity to see a summary:\n\n.. code-block:: console\n\n    $ interrogate -v [path]\n\n    ================== coverage for /users/lynn/dev/interrogate/ ====================\n    ------------------------------------ summary ------------------------------------\n    | name                                  |   total |   miss |   cover |   cover% |\n    |---------------------------------------|---------|--------|---------|----------|\n    | src/interrogate/__init__.py           |       1 |      0 |       1 |     100% |\n    | src/interrogate/__main__.py           |       1 |      0 |       1 |     100% |\n    | src/interrogate/badge_gen.py          |       6 |      0 |       6 |     100% |\n    | src/interrogate/cli.py                |       2 |      0 |       2 |     100% |\n    | src/interrogate/config.py             |       8 |      0 |       8 |     100% |\n    | src/interrogate/coverage.py           |      27 |      0 |      27 |     100% |\n    | src/interrogate/utils.py              |      10 |      0 |      10 |     100% |\n    | src/interrogate/visit.py              |      18 |      0 |      18 |     100% |\n    | tests/functional/__init__.py          |       1 |      0 |       1 |     100% |\n    | tests/functional/test_cli.py          |       8 |      0 |       8 |     100% |\n    | tests/functional/test_coverage.py     |      10 |      0 |      10 |     100% |\n    | tests/unit/__init__.py                |       1 |      0 |       1 |     100% |\n    | tests/unit/test_badge_gen.py          |       8 |      0 |       8 |     100% |\n    | tests/unit/test_config.py             |      10 |      0 |      10 |     100% |\n    | tests/unit/test_utils.py              |      13 |      0 |      13 |     100% |\n    |---------------------------------------|---------|--------|---------|----------|\n    | total                                 |     124 |      0 |     124 |   100.0% |\n    ---------------- result: passed (minimum: 80.0%, actual: 100.0%) ----------------\n\n\nadd even *more* verbosity:\n\n\n.. code-block:: console\n\n    $ interrogate -vv [path]\n\n    ================== coverage for /users/lynn/dev/interrogate/ ====================\n    ------------------------------- detailed coverage -------------------------------\n    | name                                                                |  status |\n    |---------------------------------------------------------------------|---------|\n    | src/interrogate/__init__.py (module)                                | covered |\n    |---------------------------------------------------------------------|---------|\n    | src/interrogate/__main__.py (module)                                | covered |\n    |---------------------------------------------------------------------|---------|\n    | src/interrogate/badge_gen.py (module)                               | covered |\n    |   save_badge (l42)                                                  | covered |\n    |   get_badge (l87)                                                   | covered |\n    |   should_generate_badge (l103)                                      | covered |\n    |   get_color (l160)                                                  | covered |\n    |   create (l173)                                                     | covered |\n    |---------------------------------------------------------------------|---------|\n    | src/interrogate/cli.py (module)                                     | covered |\n    |   main (l258)                                                       | covered |\n    |---------------------------------------------------------------------|---------|\n    | src/interrogate/config.py (module)                                  | covered |\n    |   interrogateconfig (l19)                                           | covered |\n    |   find_project_root (l61)                                           | covered |\n    |   find_project_config (l89)                                         | covered |\n    |   parse_pyproject_toml (l100)                                       | covered |\n    |   sanitize_list_values (l116)                                       | covered |\n    |   parse_setup_cfg (l139)                                            | covered |\n    |   read_config_file (l173)                                           | covered |\n    |---------------------------------------------------------------------|---------|\n    | src/interrogate/coverage.py (module)                                | covered |\n    |   baseinterrogateresult (l23)                                       | covered |\n    |     baseinterrogateresult.perc_covered (l37)                        | covered |\n    |   interrogatefileresult (l54)                                       | covered |\n    |     interrogatefileresult.combine (l67)                             | covered |\n    |   interrogateresults (l81)                                          | covered |\n    |     interrogateresults.combine (l93)                                | covered |\n    |   interrogatecoverage (l101)                                        | covered |\n    |     interrogatecoverage._add_common_exclude (l121)                  | covered |\n    |     interrogatecoverage._filter_files (l128)                        | covered |\n    |     interrogatecoverage.get_filenames_from_paths (l141)             | covered |\n    |     interrogatecoverage._filter_nodes (l168)                        | covered |\n    |     interrogatecoverage._filter_inner_nested (l194)                 | covered |\n    |     interrogatecoverage._get_file_coverage (l203)                   | covered |\n    |     interrogatecoverage._get_coverage (l231)                        | covered |\n    |     interrogatecoverage.get_coverage (l248)                         | covered |\n    |     interrogatecoverage._get_filename (l253)                        | covered |\n    |     interrogatecoverage._get_detailed_row (l264)                    | covered |\n    |     interrogatecoverage._create_detailed_table (l281)               | covered |\n    |       interrogatecoverage._create_detailed_table._sort_nodes (l288) | covered |\n    |     interrogatecoverage._print_detailed_table (l315)                | covered |\n    |     interrogatecoverage._create_summary_table (l338)                | covered |\n    |     interrogatecoverage._print_summary_table (l381)                 | covered |\n    |     interrogatecoverage._sort_results (l399)                        | covered |\n    |     interrogatecoverage._get_header_base (l429)                     | covered |\n    |     interrogatecoverage._print_omitted_file_count (l438)            | covered |\n    |     interrogatecoverage.print_results (l469)                        | covered |\n    |---------------------------------------------------------------------|---------|\n    | src/interrogate/utils.py (module)                                   | covered |\n    |   parse_regex (l21)                                                 | covered |\n    |   smart_open (l40)                                                  | covered |\n    |   get_common_base (l60)                                             | covered |\n    |   outputformatter (l80)                                             | covered |\n    |     outputformatter.should_markup (l90)                             | covered |\n    |     outputformatter.set_detailed_markup (l105)                      | covered |\n    |     outputformatter.set_summary_markup (l129)                       | covered |\n    |     outputformatter._interrogate_line_formatter (l158)              | covered |\n    |     outputformatter.get_table_formatter (l226)                      | covered |\n    |---------------------------------------------------------------------|---------|\n    | src/interrogate/visit.py (module)                                   | covered |\n    |   covnode (l15)                                                     | covered |\n    |   coveragevisitor (l44)                                             | covered |\n    |     coveragevisitor._has_doc (l58)                                  | covered |\n    |     coveragevisitor._visit_helper (l65)                             | covered |\n    |     coveragevisitor._is_nested_func (l112)                          | covered |\n    |     coveragevisitor._is_nested_cls (l121)                           | covered |\n    |     coveragevisitor._is_private (l133)                              | covered |\n    |     coveragevisitor._is_semiprivate (l141)                          | covered |\n    |     coveragevisitor._is_ignored_common (l151)                       | covered |\n    |     coveragevisitor._has_property_decorators (l168)                 | covered |\n    |     coveragevisitor._has_setters (l182)                             | covered |\n    |     coveragevisitor._is_func_ignored (l193)                         | covered |\n    |     coveragevisitor._is_class_ignored (l217)                        | covered |\n    |     coveragevisitor.visit_module (l221)                             | covered |\n    |     coveragevisitor.visit_classdef (l228)                           | covered |\n    |     coveragevisitor.visit_functiondef (l237)                        | covered |\n    |     coveragevisitor.visit_asyncfunctiondef (l246)                   | covered |\n    |---------------------------------------------------------------------|---------|\n    | tests/functional/__init__.py (module)                               | covered |\n    |---------------------------------------------------------------------|---------|\n    | tests/functional/test_cli.py (module)                               | covered |\n    |   runner (l22)                                                      | covered |\n    |   test_run_no_paths (l30)                                           | covered |\n    |   test_run_shortflags (l77)                                         | covered |\n    |   test_run_longflags (l106)                                         | covered |\n    |   test_run_multiple_flags (l124)                                    | covered |\n    |   test_generate_badge (l135)                                        | covered |\n    |   test_incompatible_options (l170)                                  | covered |\n    |---------------------------------------------------------------------|---------|\n    | tests/functional/test_coverage.py (module)                          | covered |\n    |   test_coverage_simple (l60)                                        | covered |\n    |   test_coverage_errors (l73)                                        | covered |\n    |   test_print_results (l101)                                         | covered |\n    |   test_print_results_omit_covered (l130)                            | covered |\n    |   test_print_results_omit_none (l156)                               | covered |\n    |   test_print_results_omit_all_summary (l174)                        | covered |\n    |   test_print_results_omit_all_detailed (l198)                       | covered |\n    |   test_print_results_ignore_module (l226)                           | covered |\n    |   test_print_results_single_file (l253)                             | covered |\n    |---------------------------------------------------------------------|---------|\n    | tests/unit/__init__.py (module)                                     | covered |\n    |---------------------------------------------------------------------|---------|\n    | tests/unit/test_badge_gen.py (module)                               | covered |\n    |   test_save_badge (l26)                                             | covered |\n    |   test_save_badge_windows (l50)                                     | covered |\n    |   test_save_badge_no_cairo (l62)                                    | covered |\n    |   test_get_badge (l73)                                              | covered |\n    |   test_should_generate (l96)                                        | covered |\n    |   test_get_color (l115)                                             | covered |\n    |   test_create (l136)                                                | covered |\n    |---------------------------------------------------------------------|---------|\n    | tests/unit/test_config.py (module)                                  | covered |\n    |   test_find_project_root (l29)                                      | covered |\n    |   test_find_project_config (l48)                                    | covered |\n    |   test_parse_pyproject_toml (l57)                                   | covered |\n    |   test_sanitize_list_values (l93)                                   | covered |\n    |   test_parse_setup_cfg (l98)                                        | covered |\n    |   test_parse_setup_cfg_raises (l123)                                | covered |\n    |   test_read_config_file_none (l134)                                 | covered |\n    |   test_read_config_file (l193)                                      | covered |\n    |   test_read_config_file_raises (l207)                               | covered |\n    |---------------------------------------------------------------------|---------|\n    | tests/unit/test_utils.py (module)                                   | covered |\n    |   test_parse_regex (l32)                                            | covered |\n    |   test_smart_open (l39)                                             | covered |\n    |   test_get_common_base (l69)                                        | covered |\n    |   test_get_common_base_windows (l100)                               | covered |\n    |   test_output_formatter_should_markup (l132)                        | covered |\n    |   test_output_formatter_set_detailed_markup (l163)                  | covered |\n    |   test_output_formatter_set_summary_markup (l206)                   | covered |\n    |   test_output_formatter_interrogate_line_formatter (l258)           | covered |\n    |   test_output_formatter_interrogate_line_formatter_windows (l319)   | covered |\n    |   test_output_formatter_get_table_formatter (l343)                  | covered |\n    |   test_output_formatter_get_table_formatter_py38 (l381)             | covered |\n    |   test_output_formatter_get_table_formatter_raises (l395)           | covered |\n    |---------------------------------------------------------------------|---------|\n\n    ------------------------------------ summary ------------------------------------\n    | name                                  |   total |   miss |   cover |   cover% |\n    |---------------------------------------|---------|--------|---------|----------|\n    | src/interrogate/__init__.py           |       1 |      0 |       1 |     100% |\n    | src/interrogate/__main__.py           |       1 |      0 |       1 |     100% |\n    | src/interrogate/badge_gen.py          |       6 |      0 |       6 |     100% |\n    | src/interrogate/cli.py                |       2 |      0 |       2 |     100% |\n    | src/interrogate/config.py             |       8 |      0 |       8 |     100% |\n    | src/interrogate/coverage.py           |      27 |      0 |      27 |     100% |\n    | src/interrogate/utils.py              |      10 |      0 |      10 |     100% |\n    | src/interrogate/visit.py              |      18 |      0 |      18 |     100% |\n    | tests/functional/__init__.py          |       1 |      0 |       1 |     100% |\n    | tests/functional/test_cli.py          |       8 |      0 |       8 |     100% |\n    | tests/functional/test_coverage.py     |      10 |      0 |      10 |     100% |\n    | tests/unit/__init__.py                |       1 |      0 |       1 |     100% |\n    | tests/unit/test_badge_gen.py          |       8 |      0 |       8 |     100% |\n    | tests/unit/test_config.py             |      10 |      0 |      10 |     100% |\n    | tests/unit/test_utils.py              |      13 |      0 |      13 |     100% |\n    |---------------------------------------|---------|--------|---------|----------|\n    | total                                 |     124 |      0 |     124 |   100.0% |\n    ---------------- result: passed (minimum: 80.0%, actual: 100.0%) ----------------\n\nother usage\n===========\n\ngenerate a `shields.io <https://shields.io/>`_ badge (like this one! |interrogate-badge| ):\n\n.. code-block:: console\n\n    $ interrogate --generate-badge path\n    result: passed (minimum: 80.0%, actual: 100.0%)\n    generated badge to /users/lynn/dev/interrogate/docs/_static/interrogate_badge.svg\n\n`see below <#badge-options>`_ for more badge configuration.\n\nadd it to your ``tox.ini`` file to enforce a level of coverage:\n\n.. code-block:: ini\n\n    [testenv:doc]\n    deps = interrogate\n    skip_install = true\n    commands =\n        interrogate --quiet --fail-under 95 src tests\n\nor use it with `pre-commit <https://pre-commit.com/>`_:\n\n.. code-block:: yaml\n\n    repos:\n      - repo: https://github.com/econchick/interrogate\n        rev: 1.5.0  # or master if you're bold\n        hooks:\n          - id: interrogate\n            args: [--quiet, --fail-under=95]\n\nuse it within your code directly:\n\n.. code-block:: pycon\n\n    >>> from interrogate import coverage\n    >>> cov = coverage.interrogatecoverage(paths=[\"src\"])\n    >>> results = cov.get_coverage()\n    >>> results\n    interrogateresults(total=68, covered=65, missing=3)\n\n\nuse ``interrogate`` with `github actions <https://github.com/features/actions>`_. check out the `action <https://github.com/marketplace/actions/python-interrogate-check>`_ written & maintained by `jack mckew <https://github.com/jackmckew>`_ (thank you, jack!).\n\n\nconfiguration\n=============\n\nconfigure within your ``pyproject.toml`` (``interrogate`` will automatically detect a ``pyproject.toml`` file and pick up default values for the command line options):\n\n.. code-block:: console\n\n    $ interrogate -c pyproject.toml [options] [paths]...\n\n.. code-block:: toml\n\n    [tool.interrogate]\n    ignore-init-method = true\n    ignore-init-module = false\n    ignore-magic = false\n    ignore-semiprivate = false\n    ignore-private = false\n    ignore-property-decorators = false\n    ignore-module = false\n    ignore-nested-functions = false\n    ignore-nested-classes = true\n    ignore-setters = false\n    fail-under = 95\n    exclude = [\"setup.py\", \"docs\", \"build\"]\n    ignore-regex = [\"^get$\", \"^mock_.*\", \".*baseclass.*\"]\n    # possible values: 0 (minimal output), 1 (-v), 2 (-vv)\n    verbose = 0\n    quiet = false\n    whitelist-regex = []\n    color = true\n    omit-covered-files = false\n    generate-badge = \".\"\n    badge-format = \"svg\"\n\n\nor configure within your ``setup.cfg`` (``interrogate`` will automatically detect a ``setup.cfg`` file and pick up default values for the command line options):\n\n.. code-block:: console\n\n    $ interrogate -c setup.cfg [options] [paths]...\n\n.. code-block:: ini\n\n    [tool:interrogate]\n    ignore-init-method = true\n    ignore-init-module = false\n    ignore-magic = false\n    ignore-semiprivate = false\n    ignore-private = false\n    ignore-property-decorators = false\n    ignore-module = false\n    ignore-nested-functions = false\n    ignore-nested-classes = true\n    ignore-setters = false\n    fail-under = 95\n    exclude = setup.py,docs,build\n    ignore-regex = ^get$,^mock_.*,.*baseclass.*\n    ; possible values: 0 (minimal output), 1 (-v), 2 (-vv)\n    verbose = 0\n    quiet = false\n    whitelist-regex =\n    color = true\n    omit-covered-files = false\n    generate-badge = .\n    badge-format = svg\n\n\n.. warning::\n\n    the use of ``setup.cfg`` is not recommended unless for very simple use cases. ``.cfg`` files use a different parser than ``pyproject.toml`` which might cause hard to track down problems. when possible, it is recommended to use ``pyproject.toml`` to define your interrogate configuration.\n\n.. _badge-opts:\n\nbadge options\n=============\n\nbadge format\n------------\n\nthe default file format is ``svg``. use the ``--badge-format`` flag to create a ``png`` file instead.\n**note**: ``interrogate`` must be installed with ``interrogate[png]`` in order to generate ``png`` files (see `above <#extras>`_).\n\n.. code-block:: console\n\n    $ interrogate --generate-badge path --badge-format png\n    result: passed (minimum: 80.0%, actual: 100.0%)\n    generated badge to /users/lynn/dev/interrogate/docs/_static/interrogate_badge.png\n\nbadge style\n-----------\n\nthe following badge styles are available via the ``--badge-style`` flag:\n\n+------------------------------------+--------------------------------+\n| option                             | example                        |\n+====================================+================================+\n| ``flat``                           | |flat-example|                 |\n+------------------------------------+--------------------------------+\n| ``flat-square``                    | |flat-square-example|          |\n+------------------------------------+--------------------------------+\n| ``flat-square-modified`` (default) | |interrogate-badge|            |\n+------------------------------------+--------------------------------+\n| ``for-the-badge``                  | |for-the-badge-example|        |\n+------------------------------------+--------------------------------+\n| ``plastic``                        | |plastic-example|              |\n+------------------------------------+--------------------------------+\n| ``social``                         | |social-example|               |\n+------------------------------------+--------------------------------+\n\n.. end-readme\n\nto view all options available, run ``interrogate --help``:\n\n.. code-block:: console\n\n    interrogate -h\n    usage: interrogate [options] [paths]...\n\n      measure and report on documentation coverage in python modules.\n\n    options:\n      --version                       show the version and exit.\n      -v, --verbose                   level of verbosity.\n\n                                      note: when configuring verbosity in\n                                      pyproject.toml or setup.cfg, `verbose=1`\n                                      maps to `-v`, and `verbose=2` maps to `-vv`.\n                                      `verbose=0` is the equivalent of no verbose\n                                      flags used, producing minimal output.\n      -q, --quiet                     do not print output  [default: false]\n      -f, --fail-under int | float    fail when coverage % is less than a given\n                                      amount.  [default: 80.0]\n\n      -e, --exclude path              exclude paths of files and/or directories.\n                                      multiple `-e/--exclude` invocations\n                                      supported.\n\n      -i, --ignore-init-method        ignore `__init__` method of classes.\n                                      [default: false]\n\n      -i, --ignore-init-module        ignore `__init__.py` modules.  [default:\n                                      false]\n\n      -m, --ignore-magic              ignore all magic methods of classes.\n                                      [default: false]\n\n                                      note: this does not include the `__init__`\n                                      method. to ignore `__init__` methods, use\n                                      `--ignore-init-method`.\n\n      -m, --ignore-module             ignore module-level docstrings.  [default:\n                                      false]\n\n      -n, --ignore-nested-functions   ignore nested functions and methods.\n                                      [default: false]\n\n      -c, --ignore-nested-classes     ignore nested classes.  [default: false]\n\n      -p, --ignore-private            ignore private classes, methods, and\n                                      functions starting with two underscores.\n                                      [default: false]\n\n                                      note: this does not include magic methods;\n                                      use `--ignore-magic` and/or `--ignore-init-\n                                      method` instead.\n\n      -p, --ignore-property-decorators\n                                      ignore methods with property setter/getter\n                                      decorators.  [default: false]\n\n      -s, --ignore-setters            ignore methods with property setter\n                                      decorators.  [default: false]\n\n      -s, --ignore-semiprivate        ignore semiprivate classes, methods, and\n                                      functions starting with a single underscore.\n                                      [default: false]\n\n      -r, --ignore-regex str          regex identifying class, method, and\n                                      function names to ignore. multiple\n                                      `-r/--ignore-regex` invocations supported.\n\n      -w, --whitelist-regex str       regex identifying class, method, and\n                                      function names to include. multiple\n                                      `-w/--whitelist-regex` invocations\n                                      supported.\n\n      -o, --output file               write output to a given file.  [default:\n                                      stdout]\n\n      --color / --no-color            toggle color output on/off when printing to\n                                      stdout.  [default: true]\n\n      --omit-covered-files            omit reporting files that have 100%\n                                      documentation coverage. this option is\n                                      ignored if verbosity is not set.  [default:\n                                      false]\n\n      -g, --generate-badge path       generate a 'shields.io' status badge (an svg\n                                      image) in at a given file or directory. will\n                                      not generate a badge if results did not\n                                      change from an existing badge of the same\n                                      path.\n\n      --badge-format [svg|png]        file format for the generated badge. used\n                                      with the `-g/--generate-badge` flag.\n                                      [default: svg]\n\n                                      note: to generate a png file, interrogate\n                                      must be installed with `interrogate[png]`,\n                                      i.e. `pip install interrogate[png]`.\n\n      --badge-style [flat|flat-square|flat-square-modified|for-the-badge|plastic|social]\n                                      desired style of shields.io badge. used with\n                                      the `-g/--generate-badge` flag. [default:\n                                      flat-square-modified]\n\n      -h, --help                      show this message and exit.\n      -c, --config file               read configuration from `pyproject.toml` or\n                                      `setup.cfg`.\n\n\n.. start-uses-this\n\nusers of interrogate\n====================\n\n* `attrs <https://github.com/python-attrs/attrs>`_\n* `openmmlab <https://github.com/open-mmlab>`_'s ecosystem\n* `pyjanitor <https://github.com/ericmjl/pyjanitor>`_\n* `klio <https://github.com/spotify/klio>`_\n\ninterrogate in the wild\n-----------------------\n\n* `why you should document your tests <https://hynek.me/articles/document-your-tests/>`_ by `hynek schlawack <https://twitter.com/hynek>`_\n* `episode #181: it's time to interrogate your python code <https://pythonbytes.fm/episodes/show/181/it-s-time-to-interrogate-your-python-code>`_ - `pythonbytes podcast <https://pythonbytes.fm/>`_\n\n.. end-uses-this\n\n.. start-credits\n\ncredits\n=======\n\n.. role:: smol\n\n``interrogate`` was inspired by |docstr-coverage|_, which was forked from alexey \"datagreed\" strelkov's |docstring-coverage|_, which was inspired by a 2004 `recipe from james harlow <http://code.activestate.com/recipes/355731/>`_ :smol:`(turtles...)`.\n\nthe cute |sloth| logo is by `justinew <https://thenounproject.com/wojcik.justine/>`_ purchased via `the noun project <https://thenounproject.com/>`_ (but also available under the `creative commons license <https://creativecommons.org/licenses/by/3.0/us/legalcode>`_ with attribution).\n\n\n.. |interrogate-badge|  image:: https://interrogate.readthedocs.io/en/latest/_static/interrogate_badge.svg\n.. |flat-example| image:: https://interrogate.readthedocs.io/en/latest/_static/badge_examples/interrogate_badge_f.svg\n.. |flat-square-example| image:: https://interrogate.readthedocs.io/en/latest/_static/badge_examples/interrogate_badge_fs.svg\n.. |for-the-badge-example| image:: https://interrogate.readthedocs.io/en/latest/_static/badge_examples/interrogate_badge_ftb.svg\n.. |plastic-example| image:: https://interrogate.readthedocs.io/en/latest/_static/badge_examples/interrogate_badge_p.svg\n.. |social-example| image:: https://interrogate.readthedocs.io/en/latest/_static/badge_examples/interrogate_badge_s.svg\n.. |sloth| image:: https://interrogate.readthedocs.io/en/latest/_static/logo_smol.png\n\n.. |docstr-coverage| replace:: ``docstr-coverage``\n.. _docstr-coverage: https://pypi.org/project/docstr-coverage\n.. |docstring-coverage| replace:: ``docstring-coverage``\n.. _docstring-coverage: https://bitbucket.org/datagreed/docstring-coverage\n\n.. end-credits\n\nrelease information\n===================\n\n1.5.0 (2021-09-10)\n------------------\n\nadded\n^^^^^\n\n* set minimum ``click`` version (thank you bildzeitung! `#81 <https://github.com/econchick/interrogate/issues/81>`_, `#82 <https://github.com/econchick/interrogate/pull/82>`_).\n* add ``--omit-covered-files`` flag to skip reporting fully-covered files (`#85 <https://github.com/econchick/interrogate/issues/85>`_).\n* add support for different badge styles via new ``--badge-style`` flag (`#86 <https://github.com/econchick/interrogate/issues/86>`_).\n* add 3.10 support!\n\nfixed\n^^^^^\n* clarify ``verbose`` configuration (`#83 <https://github.com/econchick/interrogate/issues/83>`_).\n\n\n`full changelog <https://interrogate.readthedocs.io/en/latest/#changelog>`_.\n\n",
  "docs_url": null,
  "keywords": "documentation,coverage,quality",
  "license": "",
  "name": "interrogate",
  "package_url": "https://pypi.org/project/interrogate/",
  "project_url": "https://pypi.org/project/interrogate/",
  "project_urls": {
    "Bug Tracker": "https://github.com/econchick/interrogate/issues",
    "Documentation": "https://interrogate.readthedocs.io",
    "Homepage": "https://interrogate.readthedocs.io",
    "Source Code": "https://github.com/econchick/interrogate"
  },
  "release_url": "https://pypi.org/project/interrogate/1.5.0/",
  "requires_dist": [
    "attrs",
    "click (>=7.1)",
    "colorama",
    "py",
    "tabulate",
    "toml",
    "cairosvg ; extra == 'dev'",
    "sphinx ; extra == 'dev'",
    "sphinx-autobuild ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "pytest-mock ; extra == 'dev'",
    "wheel ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "sphinx ; extra == 'docs'",
    "sphinx-autobuild ; extra == 'docs'",
    "cairosvg ; extra == 'png'",
    "pytest ; extra == 'tests'",
    "pytest-cov ; extra == 'tests'",
    "pytest-mock ; extra == 'tests'"
  ],
  "requires_python": ">=3.6",
  "summary": "interrogate a codebase for docstring coverage.",
  "version": "1.5.0",
  "releases": [],
  "developers": [
    "lynn@lynnroot.com",
    "lynn_root"
  ],
  "kwds": "interrogate_badge interrogate_badge_f interrogate_badge_s interrogate_badge_fs interrogate_badge_p",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_interrogate",
  "homepage": "https://interrogate.readthedocs.io",
  "release_count": 14,
  "dependency_ids": [
    "pypi_attrs",
    "pypi_cairosvg",
    "pypi_click",
    "pypi_colorama",
    "pypi_pre_commit",
    "pypi_py",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_mock",
    "pypi_sphinx",
    "pypi_sphinx_autobuild",
    "pypi_tabulate",
    "pypi_toml",
    "pypi_wheel"
  ],
  "documentation_summary": "Interrogate is a Python tool designed to check a codebase for missing docstrings, promoting the importance of documentation living within code. It supports Python 3.8 and above and can be installed via pip. Interrogate allows users to understand how well their code is documented, enforce documentation in CI/CD checks, and assess code quality. It offers features like generating coverage badges in SVG or PNG format, configuring through `pyproject.toml` or `setup.cfg`, and various command line options to customize its behavior. The tool is useful for maintaining high documentation standards in Python projects, with support for generating documentation coverage reports and enforcing coverage thresholds.",
  "embedding": [
    -0.007363003212958574,
    0.004249484743922949,
    0.0045265499502420425,
    -0.02734631858766079,
    0.005264235660433769,
    0.02512979879975319,
    0.0026286544743925333,
    -0.028981002047657967,
    -0.03673882409930229,
    -0.0070894015952944756,
    0.016887113451957703,
    -0.01343765389174223,
    -0.014587474055588245,
    -0.002834721701219678,
    -0.015626467764377594,
    -0.0064833215437829494,
    0.025531543418765068,
    -0.0015913923271000385,
    -0.009572597220540047,
    -0.015515642240643501,
    0.024922000244259834,
    0.014144170098006725,
    -0.04114415869116783,
    0.010327599011361599,
    -0.007674701511859894,
    0.02867623046040535,
    0.007033988367766142,
    -0.024118511006236076,
    -0.004488453734666109,
    0.014739859849214554,
    0.008478189818561077,
    -0.00991200190037489,
    -0.04225241765379906,
    -0.008457410149276257,
    -0.017538215965032578,
    -0.03097587078809738,
    0.01591738685965538,
    -0.008561309427022934,
    0.041338104754686356,
    0.007584655191749334,
    0.00121302530169487,
    -0.016000505536794662,
    0.0014580547576770186,
    -0.020946117118000984,
    -0.0029542059637606144,
    0.01457362063229084,
    0.0017714845016598701,
    -0.02296869084239006,
    -0.006729216780513525,
    0.030255502089858055,
    0.032887618988752365,
    0.009565670043230057,
    -0.0033213170245289803,
    -0.011401225812733173,
    0.02640429697930813,
    -0.011442786082625389,
    -0.009212411940097809,
    0.03565827012062073,
    -0.003788864240050316,
    0.00231522461399436,
    0.0059568979777395725,
    -0.039481766521930695,
    -0.021056942641735077,
    -0.00042187480721622705,
    0.016416102647781372,
    -0.00010303356248186901,
    0.0061369906179606915,
    0.01764904335141182,
    0.0014346773969009519,
    0.0052261389791965485,
    0.03493789955973625,
    0.04782142490148544,
    0.0005017474759370089,
    0.013167515397071838,
    0.05463722348213196,
    -0.029258066788315773,
    -0.014670593664050102,
    0.013624672777950764,
    0.006566441152244806,
    -0.00309966504573822,
    0.016956379637122154,
    -0.01435196865350008,
    -0.014012563973665237,
    0.036877356469631195,
    0.011574392206966877,
    0.03047715313732624,
    0.0003610503626987338,
    0.023938419297337532,
    -0.008208051323890686,
    0.009614156559109688,
    0.016526930034160614,
    0.024603374302387238,
    0.013430727645754814,
    0.025351449847221375,
    -0.0110133346170187,
    0.013312974944710732,
    -0.004031296353787184,
    0.024437135085463524,
    -0.007965619675815105,
    -0.014081830158829689,
    0.011830677278339863,
    0.01624986343085766,
    0.0017186690820381045,
    -0.0110479686409235,
    -0.036877356469631195,
    -0.021347859874367714,
    0.007840940728783607,
    0.006670340895652771,
    0.014254995621740818,
    0.0025039752945303917,
    -0.016443809494376183,
    0.06954332441091537,
    0.0015922581078484654,
    -0.06228422001004219,
    0.03047715313732624,
    -0.03565827012062073,
    0.028108248487114906,
    0.004675472620874643,
    -0.007473829202353954,
    -0.002751602092757821,
    -0.013631599955260754,
    -0.017953814938664436,
    0.016000505536794662,
    -0.028537698090076447,
    0.015612614341080189,
    0.023231903091073036,
    -0.0015325159765779972,
    -0.0011939770774915814,
    -0.02162492647767067,
    -0.014726006425917149,
    0.00750846229493618,
    0.02246997505426407,
    0.00694394251331687,
    -0.01669316738843918,
    -0.004997560754418373,
    -0.014615180902183056,
    -0.009662643074989319,
    0.010694710537791252,
    -0.009281679056584835,
    -0.02212364226579666,
    0.00484171137213707,
    0.017067205160856247,
    -0.00605040742084384,
    -0.013319901190698147,
    -0.03410670533776283,
    0.013901738449931145,
    0.02073831856250763,
    -0.00881759449839592,
    0.00408670911565423,
    -0.00018810118490364403,
    0.01897895522415638,
    -0.019103633239865303,
    -0.020641345530748367,
    -0.01763518899679184,
    -0.004734348971396685,
    0.021334007382392883,
    0.011802970431745052,
    0.0068677496165037155,
    -0.00617855042219162,
    0.015155456960201263,
    -0.005087606608867645,
    0.040368374437093735,
    -0.022857865318655968,
    0.008270391263067722,
    -0.0019290653290227056,
    0.023204196244478226,
    0.010881729423999786,
    0.00542354816570878,
    -0.023675207048654556,
    -0.008034885860979557,
    0.02339814230799675,
    0.04092250391840935,
    -0.027900448068976402,
    0.006227036472409964,
    0.004581963177770376,
    0.01482297945767641,
    0.014698299579322338,
    -0.009773468598723412,
    -0.010237553156912327,
    -0.025476129725575447,
    0.009621082805097103,
    0.04139351472258568,
    -0.019242165610194206,
    0.027055401355028152,
    -0.02425704337656498,
    -0.014975365251302719,
    0.004820931702852249,
    0.02116776816546917,
    -0.008464336395263672,
    0.007013208698481321,
    -0.013499993830919266,
    0.025891726836562157,
    0.004235631786286831,
    -0.008672135882079601,
    -0.5581197738647461,
    0.006251279730349779,
    -0.016928672790527344,
    -0.013396094553172588,
    0.0007649592589586973,
    -0.013922518119215965,
    -0.003899690229445696,
    0.0012580484617501497,
    -0.017773721367120743,
    0.03615698590874672,
    -0.017538215965032578,
    0.03128064051270485,
    0.005804512649774551,
    -0.004270264878869057,
    -0.028787055984139442,
    -0.032943032681941986,
    0.0031914429273456335,
    -0.017538215965032578,
    0.011671364307403564,
    0.011941502802073956,
    -0.034688543528318405,
    0.02331502176821232,
    0.006476395297795534,
    0.026210352778434753,
    -0.013624672777950764,
    0.016623901203274727,
    0.00485210120677948,
    -0.021056942641735077,
    0.01816161349415779,
    0.014753713272511959,
    -0.03039403446018696,
    0.015584908425807953,
    0.01237788051366806,
    -0.029923023656010628,
    0.057186223566532135,
    -0.007224470842629671,
    -0.006808873265981674,
    0.042113885283470154,
    -0.003996663261204958,
    0.022636212408542633,
    -0.009835808537900448,
    -0.0056105670519173145,
    -0.007148277945816517,
    0.017482804134488106,
    0.004484990146011114,
    0.007536168675869703,
    0.0036330153234302998,
    0.013673159293830395,
    -0.01584812067449093,
    -0.004623522516340017,
    -0.022774744778871536,
    0.0074391961097717285,
    -0.0008935347432270646,
    -0.019505377858877182,
    0.010459205135703087,
    -0.00629976624622941,
    0.011775263585150242,
    0.005728319752961397,
    0.01190686970949173,
    0.003139493055641651,
    0.020114921033382416,
    0.04061773419380188,
    0.030754217877984047,
    -0.03238890320062637,
    -0.022663919255137444,
    0.04457976296544075,
    0.009080806747078896,
    -0.010064387694001198,
    -0.008041813038289547,
    -0.01588968001306057,
    0.026196498423814774,
    -0.015293990261852741,
    -0.017344271764159203,
    -0.01760748215019703,
    0.03238890320062637,
    0.06289376318454742,
    0.01057003065943718,
    -0.0033022689167410135,
    0.031557708978652954,
    0.01989326998591423,
    0.01501692458987236,
    0.004966390784829855,
    -0.044191874563694,
    -0.01803693361580372,
    0.029341187328100204,
    -0.016069771721959114,
    -0.0009013271774165332,
    -0.006472931709140539,
    -0.006857359781861305,
    -0.01541866920888424,
    -0.00507375318557024,
    0.0539722666144371,
    -0.012952790595591068,
    -0.03003384917974472,
    0.01939455233514309,
    0.004221778362989426,
    -0.03177936002612114,
    -0.0025109017733484507,
    -0.0012753650080412626,
    -0.04269571974873543,
    -0.0023758327588438988,
    -0.0046546924859285355,
    -0.013631599955260754,
    0.008228831924498081,
    0.011837603524327278,
    0.0016182329272851348,
    0.003207027679309249,
    0.02289942465722561,
    -0.007737040985375643,
    -0.0049421475268900394,
    -0.010763976722955704,
    -0.02828834019601345,
    -0.011789117008447647,
    -0.01413031667470932,
    0.003201832761988044,
    -0.01947767101228237,
    0.01904822140932083,
    0.009600303135812283,
    0.02386915311217308,
    0.004734348971396685,
    -0.0018580673495307565,
    0.005638273432850838,
    -0.011228060349822044,
    -0.015765000134706497,
    0.016873260959982872,
    0.011851456947624683,
    0.016125185415148735,
    -0.0021801553666591644,
    -0.04017442837357521,
    0.0014658471336588264,
    -0.008741402067244053,
    0.008893787860870361,
    0.007737040985375643,
    -0.004401870537549257,
    0.01370779238641262,
    0.043000493198633194,
    0.034189824014902115,
    -0.018646476790308952,
    -0.03150229528546333,
    -0.004762055352330208,
    -0.02033657394349575,
    -0.014836832880973816,
    0.029452012851834297,
    0.003021740587428212,
    -0.028897883370518684,
    -0.03089275024831295,
    -0.025032825767993927,
    -0.0026061430107802153,
    0.006403665523976088,
    0.029452012851834297,
    -0.01850794441998005,
    -0.004772445186972618,
    -0.03964800760149956,
    0.013382241129875183,
    -0.008131858892738819,
    -0.008803741075098515,
    -0.01860491745173931,
    -0.026667509227991104,
    -0.015335549600422382,
    -0.0045888894237577915,
    0.010909435339272022,
    0.03945406153798103,
    0.00903924647718668,
    -0.0053404285572469234,
    -0.02216520346701145,
    -0.011477419175207615,
    -0.003958566579967737,
    0.03006155602633953,
    -0.023730620741844177,
    -0.033774226903915405,
    0.0006259938236325979,
    0.004235631786286831,
    0.004048612900078297,
    0.005555153824388981,
    7.3000141128432e-05,
    0.015695733949542046,
    -0.014338115230202675,
    -0.012869670987129211,
    -0.021112356334924698,
    -0.013832471333444118,
    0.0073907095938920975,
    0.028371458873152733,
    -0.03355257585644722,
    -0.03000614233314991,
    0.013797838240861893,
    0.011989989317953587,
    0.041698288172483444,
    0.0019740883726626635,
    0.017302710562944412,
    0.020530518144369125,
    0.011844529770314693,
    -0.006507564801722765,
    -0.007889427244663239,
    0.013049762696027756,
    -0.0230102501809597,
    0.04161516949534416,
    -0.004803615156561136,
    0.01432426180690527,
    -0.010999482125043869,
    0.024561814963817596,
    0.03344174847006798,
    0.006230500061064959,
    -0.018798861652612686,
    0.019630057737231255,
    -0.022774744778871536,
    -0.01679014042019844,
    0.03358028084039688,
    -0.01863262429833412,
    0.03003384917974472,
    -0.02246997505426407,
    0.014144170098006725,
    -0.01766289584338665,
    -0.015224723145365715,
    0.005835682153701782,
    0.0009844467276707292,
    0.021361714228987694,
    -0.02295483835041523,
    0.018327852711081505,
    0.004848638083785772,
    -0.0003813973453361541,
    0.001755033852532506,
    0.0062928395345807076,
    0.01322292909026146,
    0.011622877791523933,
    0.018355557695031166,
    -0.006334399338811636,
    -0.0009506794158369303,
    0.006587221287190914,
    -0.0014519939431920648,
    -0.034605421125888824,
    -0.0005467705195769668,
    0.011643658392131329,
    0.032887618988752365,
    -0.024589521810412407,
    0.04244636371731758,
    0.013153661973774433,
    0.0010545788099989295,
    -0.026335030794143677,
    0.027277052402496338,
    -0.03327551111578941,
    0.020447399467229843,
    0.03352486714720726,
    0.021860431879758835,
    -0.026625949889421463,
    0.013389167375862598,
    -0.006940478924661875,
    0.01717803254723549,
    0.02169419266283512,
    -0.004907514434307814,
    0.005233065690845251,
    -0.011477419175207615,
    0.008512822911143303,
    0.002303102985024452,
    0.01084709633141756,
    0.002497048582881689,
    -0.013389167375862598,
    0.008145712316036224,
    0.024894293397665024,
    0.022331440821290016,
    0.011311179958283901,
    0.02478346787393093,
    -0.0019411868415772915,
    0.023993831127882004,
    0.0423632450401783,
    0.03238890320062637,
    -0.003442533081397414,
    -0.017482804134488106,
    -0.023536674678325653,
    -0.007369929924607277,
    -0.017441242933273315,
    -0.009988194331526756,
    -0.04050690680742264,
    -0.006240889895707369,
    -0.007300663739442825,
    0.021444832906126976,
    0.0024710737634450197,
    0.0018424824811518192,
    0.028482286259531975,
    -0.0012086961651220918,
    -0.0006402799626812339,
    -0.029285773634910583,
    -0.014726006425917149,
    0.04723958671092987,
    -0.012287834659218788,
    0.0037126713432371616,
    0.00271177408285439,
    -0.034660834819078445,
    -0.024409430101513863,
    -0.02686145529150963,
    0.031086696311831474,
    0.012606458738446236,
    -0.003149883123114705,
    0.018688036128878593,
    -0.0034321430139243603,
    -0.012758844532072544,
    -0.002287518233060837,
    0.008263465017080307,
    -0.006220109760761261,
    -0.009745762683451176,
    -0.003187979571521282,
    0.0141095370054245,
    0.0029576693195849657,
    -0.012183934450149536,
    -0.019768590107560158,
    0.029867609962821007,
    0.00025325475144200027,
    -0.015986653044819832,
    -0.02115391567349434,
    -0.021735752001404762,
    -0.011553611606359482,
    -0.016970233991742134,
    0.03047715313732624,
    0.0026840674690902233,
    0.00044330404489301145,
    -0.000503912044223398,
    0.009621082805097103,
    0.012225494720041752,
    -0.010195992887020111,
    0.014144170098006725,
    0.029008708894252777,
    0.0020329647231847048,
    -0.03587992116808891,
    -0.01933913864195347,
    -0.011006408371031284,
    0.030172381550073624,
    0.021888136863708496,
    -0.007293737027794123,
    0.005981141235679388,
    -0.013139809481799603,
    -0.0008978638797998428,
    -0.020128775388002396,
    0.00770933460444212,
    0.01018214039504528,
    -0.024090804159641266,
    -0.00453001307323575,
    0.0033247803803533316,
    0.020405840128660202,
    -0.0032347342930734158,
    0.025683928281068802,
    0.006504101678729057,
    0.006382885854691267,
    0.03092045709490776,
    -0.006594147998839617,
    0.0019862100016325712,
    0.00759850861504674,
    -0.012426367029547691,
    -0.01594509184360504,
    -0.0010554445907473564,
    0.04200305789709091,
    -0.011858383193612099,
    0.017385831102728844,
    0.020461251959204674,
    0.0021403273567557335,
    -0.026238057762384415,
    -0.015598760917782784,
    0.022663919255137444,
    0.009503331035375595,
    0.016028212383389473,
    -0.04020213708281517,
    0.004204461816698313,
    0.013416874222457409,
    0.006725753657519817,
    0.012495633214712143,
    -0.00396549329161644,
    0.027180079370737076,
    0.029784491285681725,
    0.004263338167220354,
    0.015751147642731667,
    0.00761928828433156,
    -0.016166744753718376,
    -0.01324370875954628,
    0.041310396045446396,
    -0.011796044185757637,
    -0.027623383328318596,
    -0.0037680843379348516,
    0.0067569236271083355,
    -0.03299844637513161,
    -0.02341199479997158,
    0.0033957783598452806,
    -0.010833242908120155,
    2.8409987862687558e-05,
    -0.0159035325050354,
    -0.014296555891633034,
    -0.03457771614193916,
    0.0004588889714796096,
    -0.037154421210289,
    0.012544119730591774,
    -0.014670593664050102,
    -0.0008437496144324541,
    -0.01638839580118656,
    0.0032468559220433235,
    -0.018452530726790428,
    -0.02166648581624031,
    0.03141917288303375,
    -0.004928294103592634,
    -0.04557719826698303,
    -0.01415109634399414,
    0.008873007260262966,
    -0.002678872551769018,
    0.01672087423503399,
    -0.010320672765374184,
    0.0041455854661762714,
    0.02334272861480713,
    -0.02025345340371132,
    0.01586197316646576,
    -0.016859406605362892,
    0.014989218674600124,
    -0.02517135813832283,
    0.013783985748887062,
    0.0049421475268900394,
    -0.02072446420788765,
    -0.017870694398880005,
    -0.01013365387916565,
    0.032887618988752365,
    0.0021056942641735077,
    0.021514099091291428,
    0.009634936228394508,
    -0.02731861174106598,
    0.019131340086460114,
    0.021043090149760246,
    -0.013229855336248875,
    -0.004633912816643715,
    0.00034221861278638244,
    -0.006576830986887217,
    0.011581318452954292,
    -0.024547962471842766,
    -0.005859925411641598,
    -0.015474081970751286,
    0.01721959188580513,
    -0.021832725033164024,
    -0.032943032681941986,
    0.0017169374041259289,
    -0.015307842753827572,
    -0.008533602580428123,
    0.03743148595094681,
    -0.006033090874552727,
    -0.012280907481908798,
    0.015141604468226433,
    0.01807849295437336,
    -0.017302710562944412,
    -0.022747039794921875,
    0.041670579463243484,
    -0.0035568224266171455,
    -0.01415802352130413,
    0.014781419187784195,
    -0.006902382709085941,
    0.016014358028769493,
    0.04995482414960861,
    0.013153661973774433,
    0.0017160715069621801,
    -0.0361015722155571,
    -0.005298868753015995,
    -0.02339814230799675,
    0.003941250033676624,
    0.019311433658003807,
    -0.0016641218680888414,
    -0.01588968001306057,
    -0.044829122722148895,
    -0.0024450989440083504,
    -0.020946117118000984,
    -0.011422006413340569,
    0.0015403084689751267,
    -0.03083733841776848,
    -0.010341452434659004,
    -0.013603893108665943,
    -0.01523857656866312,
    -0.019685471430420876,
    -0.02339814230799675,
    0.019990243017673492,
    -0.023259609937667847,
    0.01345843356102705,
    0.025753194466233253,
    -0.007584655191749334,
    0.02643200382590294,
    -0.0007017537718638778,
    0.005870315246284008,
    -0.013513847254216671,
    0.011470491997897625,
    -0.040340669453144073,
    -0.04095021262764931,
    -0.01943611167371273,
    0.013493066653609276,
    0.03189018368721008,
    0.03931552916765213,
    -0.0009896416449919343,
    0.0006372495554387569,
    0.025919433683156967,
    0.02654282934963703,
    0.011816823855042458,
    -0.00440879724919796,
    0.0008000253001227975,
    0.003653795225545764,
    -0.005184579640626907,
    -0.00552398432046175,
    -0.02742943912744522,
    0.014850685372948647,
    0.004613132681697607,
    -0.036877356469631195,
    0.0010692978976294398,
    0.02644585818052292,
    -0.009697276167571545,
    -0.0044815270230174065,
    -0.0014970169868320227,
    -0.0010320672299712896,
    -0.011297326534986496,
    0.022303735837340355,
    -0.0044815270230174065,
    0.02213749662041664,
    -0.021735752001404762,
    -0.002907451242208481,
    0.028953295201063156,
    -0.02420162968337536,
    0.028897883370518684,
    0.02522677183151245,
    0.004886734299361706,
    -0.011740630492568016,
    0.023966126143932343,
    0.014490501023828983,
    0.018868127837777138,
    -0.010895582847297192,
    0.0005446059512905777,
    -0.026833748444914818,
    -0.008263465017080307,
    -0.0018909688806161284,
    0.017773721367120743,
    0.010985628701746464,
    -0.007716261316090822,
    0.008568236604332924,
    -0.003747304668650031,
    0.04804307594895363,
    0.013513847254216671,
    -0.011796044185757637,
    0.030338620766997337,
    -0.016610048711299896,
    -0.014878392219543457,
    0.006902382709085941,
    -0.008956126868724823,
    -0.013257562182843685,
    -0.01168521773070097,
    0.02339814230799675,
    0.014144170098006725,
    0.015100044198334217,
    0.011893016286194324,
    -0.011089527979493141,
    -0.023924564942717552,
    0.008727548643946648,
    0.04410875216126442,
    0.005614030174911022,
    0.025517689064145088,
    0.03590762987732887,
    0.01892354153096676,
    -0.006670340895652771,
    0.011609025299549103,
    -0.00795869342982769,
    -0.007369929924607277,
    0.025905581191182137,
    0.03709900751709938,
    -0.0029611324425786734,
    -0.030754217877984047,
    0.017330417409539223,
    -0.008478189818561077,
    -0.02120932750403881,
    -0.01170599739998579,
    0.03402358666062355,
    0.014005637727677822,
    0.027124667540192604,
    -0.05211593210697174,
    -0.003295342205092311,
    0.003002692246809602,
    0.005094533320516348,
    -0.01684555411338806,
    -0.026293471455574036,
    -0.001234671100974083,
    -0.0023827592376619577,
    0.012204715050756931,
    0.03396817296743393,
    0.015598760917782784,
    -0.0053889150731265545,
    0.010202920064330101,
    0.0006441762088797987,
    -0.012301687151193619,
    -0.029230361804366112,
    0.011110307648777962,
    0.027512557804584503,
    0.004155975300818682,
    0.01987941563129425,
    0.007418416440486908,
    0.008498969487845898,
    0.03310927003622055,
    -0.009170852601528168,
    0.0058980220928788185,
    0.003826960688456893,
    -0.0031914429273456335,
    0.04421957954764366,
    -0.008921493776142597,
    -0.0022061304189264774,
    -0.042612601071596146,
    -0.014947658404707909,
    -0.002036428079009056,
    0.010036680847406387,
    -0.00969034992158413,
    0.006829652935266495,
    -0.0015922581078484654,
    -0.004291044548153877,
    0.003406168194487691,
    -0.022262174636125565,
    -0.015681881457567215,
    -0.02069675736129284,
    -0.012273981235921383,
    0.016111331060528755,
    -0.007203690707683563,
    -0.015127751044929028,
    0.02165263146162033,
    -0.012260127812623978,
    -0.03662799671292305,
    -0.015183163806796074,
    0.0033767300192266703,
    0.02118162252008915,
    0.010583884082734585,
    0.0037680843379348516,
    -0.018341705203056335,
    0.05740787461400032,
    -0.010639296844601631,
    0.011539758183062077,
    -0.018757302314043045,
    0.01037608552724123,
    -0.02382759191095829,
    -0.01848023757338524,
    -0.010826315730810165,
    -0.004329141229391098,
    0.024049244821071625,
    -0.013416874222457409,
    -0.025780901312828064,
    -0.04297278821468353,
    0.0033576819114387035,
    0.04471829533576965,
    0.015626467764377594,
    -0.03768084570765495,
    -0.006230500061064959,
    0.017746014520525932,
    0.015668027102947235,
    -0.014781419187784195,
    -0.04904051125049591,
    0.016236010938882828,
    -0.0318070650100708,
    0.030587980523705482,
    0.015972798690199852,
    -0.0045265499502420425,
    0.012862743809819221,
    -0.010008974000811577,
    0.001899627153761685,
    0.020890703424811363,
    -0.0512293241918087,
    -0.012336320243775845,
    0.00033897176035679877,
    0.012814258225262165,
    -0.013721645809710026,
    0.011761411093175411,
    -0.005399304907768965,
    -0.017995374277234077,
    -0.028454579412937164,
    0.016623901203274727,
    0.0054512545466423035,
    0.00484171137213707,
    0.006382885854691267,
    0.03261055424809456,
    0.002005258109420538,
    0.004363774321973324,
    0.00203815964050591,
    -0.013846324756741524,
    0.0019533084705471992,
    0.012204715050756931,
    -0.011207280680537224,
    -0.009828882291913033,
    -0.04189223423600197,
    0.03358028084039688,
    0.03297073766589165,
    -0.037154421210289,
    -0.013749352656304836,
    -0.008256537839770317,
    -0.03266596794128418,
    -0.010493838228285313,
    -0.03895534202456474,
    0.020959969609975815,
    0.006670340895652771,
    -0.007009745109826326,
    0.01593123935163021,
    0.03934323415160179,
    -0.024838879704475403,
    0.03679423779249191,
    -0.02253924123942852,
    -0.00773011427372694,
    0.016180597245693207,
    0.007785527501255274,
    -0.013056689873337746,
    -0.02690301463007927,
    -0.020946117118000984,
    -0.014296555891633034,
    0.008540529757738113,
    0.03147458657622337,
    0.004166365601122379,
    0.06006769835948944,
    -0.00203815964050591,
    -0.004976780619472265,
    -0.0031862477771937847,
    -0.029285773634910583,
    0.01985170878469944,
    0.005177652928978205,
    -0.00970420241355896,
    -0.01526628341525793,
    -0.005908411927521229,
    0.01212852168828249,
    0.034189824014902115,
    0.005548227112740278,
    -0.015737293288111687,
    0.023245755583047867,
    -0.02819136716425419,
    -0.004280654713511467,
    -0.028177514672279358,
    -0.026348885148763657,
    0.01102026179432869,
    -0.011373519897460938,
    0.024644935503602028,
    0.011989989317953587,
    0.0010753587121143937,
    0.020655198022723198,
    -0.01594509184360504,
    -0.03128064051270485,
    -0.03881680965423584,
    0.017122618854045868,
    -0.036877356469631195,
    0.01863262429833412,
    -0.0021351324394345284,
    -0.03709900751709938,
    -0.014532061293721199,
    -0.03352486714720726,
    0.032056424766778946,
    0.004059002734720707,
    0.0035845288075506687,
    -0.024506401270627975,
    -0.030200088396668434,
    -0.0318070650100708,
    0.013174442574381828,
    0.02511594444513321,
    0.020045654848217964,
    0.010757049545645714,
    -0.013874031603336334,
    0.00971112959086895,
    0.013853251934051514,
    -0.012080035172402859,
    -0.01856335811316967,
    -0.04045149311423302,
    0.035076431930065155,
    0.005136093124747276,
    0.025947140529751778,
    -0.02213749662041664,
    -0.010750123299658298,
    0.016263717785477638,
    -0.035492029041051865,
    -0.00046148645924404263,
    0.20901785790920258,
    0.010729343630373478,
    0.011255767196416855,
    0.011151867918670177,
    -0.013319901190698147,
    -0.008325804024934769,
    0.02115391567349434,
    0.00991200190037489,
    -0.01482297945767641,
    0.03169624134898186,
    -0.0023948808666318655,
    -0.02294098399579525,
    -0.017094912007451057,
    0.0022996398620307446,
    0.031585413962602615,
    -0.020433546975255013,
    -0.02555924840271473,
    -0.042640309780836105,
    -0.013825545087456703,
    -0.00617855042219162,
    0.008270391263067722,
    -0.01770445518195629,
    -0.0397588312625885,
    -0.019297579303383827,
    0.015377108938992023,
    0.011394299566745758,
    -0.003903153585270047,
    0.016540782526135445,
    0.024506401270627975,
    -0.014241143129765987,
    -0.006805409677326679,
    0.010563104413449764,
    0.0016052455175668001,
    -0.014781419187784195,
    -0.008526676334440708,
    0.0013255829690024257,
    -0.01504463143646717,
    0.007806307170540094,
    0.010195992887020111,
    0.013063616119325161,
    0.004516160115599632,
    -0.05081372708082199,
    -0.0030702268704771996,
    -0.04228012263774872,
    0.0029749858658760786,
    -0.02917494811117649,
    -0.002077987650409341,
    0.00430836109444499,
    0.017316564917564392,
    0.03981424495577812,
    -0.02331502176821232,
    -0.013603893108665943,
    0.025379156693816185,
    0.01676243357360363,
    -0.010687783360481262,
    -0.02607182040810585,
    0.00039589995867572725,
    -0.0090600261464715,
    0.028135953471064568,
    -0.001666719326749444,
    -0.0014104341389611363,
    0.03125293552875519,
    -0.01039686519652605,
    0.02206823043525219,
    -0.04100562632083893,
    0.04751665145158768,
    -0.017399683594703674,
    0.010916362516582012,
    0.0005320514319464564,
    0.01767674833536148,
    0.006587221287190914,
    -0.02118162252008915,
    -0.016014358028769493,
    -0.024478696286678314,
    -0.00968342274427414,
    -0.023522822186350822,
    0.04469059035181999,
    0.017053352668881416,
    0.05388914793729782,
    0.03169624134898186,
    -0.0018753838958218694,
    0.0016900966875255108,
    0.0027273588348180056,
    -0.004152512177824974,
    -0.013340681791305542,
    -0.014268849045038223,
    0.0040832459926605225,
    -0.013506920076906681,
    0.01388788502663374,
    -0.01388788502663374,
    -0.03482707589864731,
    -0.028925590217113495,
    0.024492548778653145,
    -0.010715490207076073,
    -0.011200353503227234,
    0.020031802356243134,
    -0.0005173323443159461,
    0.03629551827907562,
    -0.006573367863893509,
    -0.025822460651397705,
    -0.03648946434259415,
    0.045189306139945984,
    -0.0036399418022483587,
    -0.016928672790527344,
    -0.0159035325050354,
    0.018618769943714142,
    -0.0033230488188564777,
    0.007349149789661169,
    -0.01849409006536007,
    -0.0007208019960671663,
    -0.0006225304678082466,
    -0.024520255625247955,
    0.0034477279987186193,
    0.0099050747230649,
    0.007453049533069134,
    -0.002026038011536002,
    0.014684447087347507,
    -0.00883837416768074,
    0.0009108512895181775,
    0.01807849295437336,
    0.009136219508945942,
    -0.014587474055588245,
    -0.002564583206549287,
    -0.005797585938125849,
    -0.02522677183151245,
    -0.025254476815462112,
    -0.025503836572170258,
    0.011532831937074661,
    0.0023948808666318655,
    -0.002796625252813101,
    -0.011006408371031284,
    -0.005011413712054491,
    0.03169624134898186,
    0.0005978543777018785,
    0.003826960688456893,
    0.00031970706186257303,
    -0.002003526547923684,
    -0.018203172832727432,
    -0.0185772106051445,
    -0.0007467768737114966,
    -0.020101068541407585,
    -0.004626986104995012,
    -0.023231903091073036,
    0.007785527501255274,
    0.012080035172402859,
    0.0038061807863414288,
    0.005018340423703194,
    -0.006154307164251804,
    0.021361714228987694,
    0.007536168675869703,
    -0.024506401270627975,
    -0.01860491745173931,
    0.015113897621631622,
    -0.026251912117004395,
    0.020904555916786194,
    -0.048735737800598145,
    -0.010466131381690502,
    -0.0026563610881567,
    0.006130063906311989,
    0.006130063906311989,
    -0.03457771614193916,
    0.007674701511859894,
    -0.00859594251960516,
    0.02511594444513321,
    -0.02781732939183712,
    -0.02640429697930813,
    -0.17266692221164703,
    0.007113644853234291,
    0.023619793355464935,
    -0.035935334861278534,
    0.02427089773118496,
    0.00539584131911397,
    -0.019768590107560158,
    -0.008007179014384747,
    -0.0033646083902567625,
    -0.0163606908172369,
    -0.011345813050866127,
    -0.023273462429642677,
    -0.0224838275462389,
    -0.0035395058803260326,
    -0.00012067480565747246,
    0.001257182564586401,
    0.011740630492568016,
    -0.0016199646051973104,
    0.020017948001623154,
    0.02564236894249916,
    0.03878910467028618,
    -0.01680399477481842,
    0.0048798080533742905,
    0.012495633214712143,
    0.004135195631533861,
    -0.033801935613155365,
    -0.028371458873152733,
    0.005863388534635305,
    0.0001102307578548789,
    -0.01165751088410616,
    -0.01721959188580513,
    0.0015143335331231356,
    -0.010909435339272022,
    0.02381373941898346,
    0.01057695783674717,
    -0.012668798677623272,
    0.0351872593164444,
    -0.010410718619823456,
    -0.02073831856250763,
    0.008720621466636658,
    0.03150229528546333,
    0.028593111783266068,
    0.023093370720744133,
    -0.009724983014166355,
    -0.0318070650100708,
    0.004914441145956516,
    0.008685988374054432,
    -0.022663919255137444,
    0.019560791552066803,
    -0.0031550780404359102,
    0.019256019964814186,
    -0.022151349112391472,
    -0.005326575133949518,
    -0.0017169374041259289,
    0.03845662623643875,
    -0.0007541363593190908,
    0.022414561361074448,
    0.028593111783266068,
    0.01437967550009489,
    -0.008727548643946648,
    -0.023966126143932343,
    -0.031003577634692192,
    -0.010722416453063488,
    0.0053404285572469234,
    -0.010452277958393097,
    -0.029479719698429108,
    -0.031086696311831474,
    0.013811691664159298,
    0.007646995130926371,
    0.013416874222457409,
    0.0014519939431920648,
    -0.016429957002401352,
    0.0022632749751210213,
    0.012738064862787724,
    0.010119800455868244,
    0.018660329282283783,
    -0.016859406605362892,
    0.003941250033676624,
    0.017953814938664436,
    0.0006277254433371127,
    -0.02071061171591282,
    0.024492548778653145,
    0.00903924647718668,
    -0.005662516690790653,
    0.002116084098815918,
    -0.019089780747890472,
    -0.011200353503227234,
    -0.000564520014449954,
    -0.021500246599316597,
    -0.0063551790080964565,
    0.0024710737634450197,
    -0.01546022854745388,
    -0.015307842753827572,
    -0.009032320231199265,
    -0.0058495355769991875,
    0.005333501845598221,
    0.006043481174856424,
    0.006829652935266495,
    -0.010216773487627506,
    -0.03587992116808891,
    0.011747557669878006,
    0.0047412752173841,
    -0.0028503064531832933,
    0.023134930059313774,
    0.009101586416363716,
    0.028870176523923874,
    -0.03086504526436329,
    0.0006294571212492883,
    0.024631081148982048,
    0.006701510399580002,
    -0.02427089773118496,
    0.003449459560215473,
    0.021998964250087738,
    0.0076123615726828575,
    -0.026709068566560745,
    0.014504354447126389,
    -0.0014892244944348931,
    -0.00398627296090126,
    -0.020987676456570625,
    -0.017053352668881416,
    0.02291327901184559,
    0.004384553991258144,
    -0.015307842753827572,
    -0.0032312709372490644,
    -0.012204715050756931,
    -0.037819378077983856,
    -0.11603483557701111,
    -0.013555406592786312,
    0.008443556725978851,
    0.017926108092069626,
    0.025877874344587326,
    -0.025365304201841354,
    -0.0006402799626812339,
    0.015654174610972404,
    0.019740883260965347,
    0.021929698064923286,
    -0.0025489982217550278,
    0.01670702174305916,
    -0.009766542352735996,
    -0.001766289584338665,
    -0.03047715313732624,
    -0.003051178762689233,
    -0.029368894174695015,
    0.00901846680790186,
    0.01279347762465477,
    0.013825545087456703,
    -0.0061369906179606915,
    -0.02204052358865738,
    0.012031548656523228,
    0.01766289584338665,
    -0.010099020786583424,
    0.002895329613238573,
    -0.044884536415338516,
    0.010258332826197147,
    -0.010223699733614922,
    -0.0024606839288026094,
    -0.0167485810816288,
    -0.025697782635688782,
    0.00861672218888998,
    -0.005330038722604513,
    0.00946177076548338,
    0.007342223543673754,
    -0.004055539611726999,
    -0.027277052402496338,
    0.023204196244478226,
    -0.017953814938664436,
    0.007577728480100632,
    -0.0004662484861910343,
    4.391372567624785e-05,
    -0.02379988692700863,
    0.010313745588064194,
    0.01681784726679325,
    -0.005877241957932711,
    0.02123703435063362,
    0.013922518119215965,
    -0.011969209648668766,
    -0.01017521321773529,
    8.083318334684009e-07,
    -0.008069518953561783,
    -0.02162492647767067,
    0.025767048820853233,
    -0.016956379637122154,
    0.0073907095938920975,
    -0.013583113439381123,
    0.0033213170245289803,
    0.002015648176893592,
    -0.014629033394157887,
    -0.0024502938613295555,
    -0.018424823880195618,
    0.011027188040316105,
    -0.0021940087899565697,
    0.021056942641735077,
    -0.020419692620635033,
    0.019117487594485283,
    0.0029871074948459864,
    -0.017039500176906586,
    -0.01435196865350008,
    0.011144940741360188,
    -0.012890450656414032,
    0.01282118447124958,
    -0.0177321620285511,
    0.002723895711824298,
    0.03233348950743675,
    -0.01126962061971426,
    -0.006507564801722765,
    -0.005458181258291006,
    -0.019505377858877182,
    0.002819136716425419,
    0.016942527145147324,
    -0.005773342680186033,
    -0.010895582847297192,
    0.025351449847221375,
    0.011214206926524639,
    0.004893661011010408,
    0.018009226769208908,
    -0.03867827728390694,
    0.02479732036590576,
    -0.0022788599599152803,
    0.019574644044041634,
    -0.009094659239053726,
    -0.013645452447235584,
    0.00969034992158413,
    -0.00028247645241208375,
    0.0027775769121944904,
    -0.04117186367511749,
    0.01640225015580654,
    -0.02299639768898487,
    -0.0379302017390728,
    -0.06599689275026321,
    0.021860431879758835,
    0.0017307905945926905,
    -0.016443809494376183,
    0.024894293397665024,
    -0.021444832906126976,
    -0.00650063855573535,
    -0.010341452434659004,
    0.0087968148291111,
    0.024977412074804306,
    -0.04241865500807762,
    0.006223573349416256,
    -0.011560538783669472,
    0.012003842741250992,
    0.0020243064500391483,
    -0.002741212258115411,
    0.027664942666888237,
    -0.011671364307403564,
    0.0396202988922596,
    0.023204196244478226,
    0.007743967697024345,
    0.009427137672901154,
    0.013271414674818516,
    0.016887113451957703,
    -0.020211894065141678,
    0.016914820298552513,
    -0.02072446420788765,
    0.02080758474767208,
    0.012779624201357365,
    -0.04272342845797539,
    0.017967667430639267,
    -0.001728193135932088,
    -0.013451507315039635,
    0.019560791552066803,
    0.010008974000811577,
    0.007653921376913786,
    0.015058484859764576,
    0.008062592707574368,
    0.009309384971857071,
    0.010985628701746464,
    -0.01723344437777996,
    -0.01892354153096676,
    0.022788599133491516,
    0.008609795942902565,
    -0.03396817296743393,
    0.0008900714456103742,
    -0.026141086593270302,
    0.01760748215019703,
    0.004983707331120968,
    -0.002642507664859295,
    0.03147458657622337,
    0.00220439862459898,
    -0.06189632788300514,
    -0.01863262429833412,
    -0.009073879569768906,
    -0.03485478088259697,
    0.002131669083610177,
    0.007868646644055843,
    0.01237788051366806,
    -0.012724211439490318,
    0.043028198182582855,
    0.0017888011643663049,
    -0.0014745055232197046,
    0.014684447087347507,
    0.025406863540410995,
    -0.01584812067449093,
    -0.055440712720155716,
    -0.021777311339974403,
    0.00673268036916852,
    -0.0063551790080964565,
    -0.01523857656866312,
    -0.04155975580215454,
    0.006490248255431652,
    0.003996663261204958,
    0.009420211426913738,
    0.01763518899679184,
    -0.006528344936668873,
    0.008485116995871067,
    -0.012211641296744347,
    0.045272424817085266,
    0.009544890373945236,
    -0.01627757027745247,
    0.012703431770205498,
    0.009115439839661121,
    0.028814762830734253,
    0.020184187218546867,
    -0.011325033381581306,
    -0.014088757336139679,
    0.014670593664050102,
    0.004498843569308519,
    -0.004782835021615028,
    -0.00948947761207819,
    -0.039537180215120316,
    0.02391071245074272,
    -0.0008892056066542864,
    -0.014864538796246052,
    0.014310409314930439,
    -0.0016303545562550426,
    0.01017521321773529,
    0.000896998040843755,
    0.009233192540705204,
    -0.022373002022504807,
    -0.009593376889824867,
    -0.023037957027554512,
    -0.02122318185865879,
    0.012537192553281784,
    -0.0018511407542973757,
    -0.0336356945335865,
    0.010036680847406387,
    0.032915327697992325,
    0.011602098122239113,
    -7.785689376760274e-06,
    -0.005260772537440062,
    0.0159035325050354,
    -0.029673665761947632,
    0.0141095370054245,
    -0.003454654710367322,
    -0.038595158606767654,
    -0.02028116025030613,
    0.01715032570064068,
    0.024437135085463524,
    -0.0014935537474229932,
    0.04715646803379059,
    -0.02778962254524231,
    0.015086190775036812,
    -0.0022667383309453726,
    0.0011879163794219494,
    -0.01460132747888565,
    -0.002036428079009056,
    -0.03535349667072296,
    -0.00694394251331687,
    -0.00834658369421959,
    -0.026362737640738487,
    -0.010092093609273434,
    0.00550666730850935,
    -0.014338115230202675,
    0.010410718619823456,
    -0.005766415968537331,
    -0.015390962362289429,
    0.07569416612386703,
    0.0060711875557899475,
    -0.033358629792928696,
    0.004959464073181152,
    -0.03435606509447098,
    0.03737607225775719,
    0.016222158446907997,
    -0.002036428079009056,
    -0.020198041573166847,
    -0.010459205135703087,
    0.00014751548587810248,
    -0.007307590451091528,
    -0.01676243357360363,
    -0.021555660292506218,
    -0.01938069984316826,
    0.01593123935163021,
    -0.0006567307282239199,
    0.016485368832945824,
    0.009247045032680035,
    0.007182911038398743,
    0.020599784329533577,
    0.01188609004020691,
    0.004872881341725588,
    -0.004599279724061489,
    -0.03316468372941017,
    0.01633298397064209,
    0.03967571258544922,
    0.01933913864195347,
    -0.0316685326397419,
    -0.05485887825489044,
    0.026279618963599205,
    -0.00971112959086895,
    0.0008818460628390312,
    -0.008921493776142597,
    -0.004266801290214062,
    0.01587582565844059,
    0.0002625624183565378,
    0.006860822904855013,
    0.012869670987129211,
    0.0336356945335865,
    0.009143145754933357,
    -0.014684447087347507,
    -0.02774806320667267,
    -0.02335658296942711,
    0.0073976363055408,
    0.020059509202837944,
    0.009170852601528168,
    -0.0015861972933635116,
    -0.03435606509447098
  ]
}
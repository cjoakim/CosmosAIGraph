{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.6",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "\n# overview\n\nthe hub-rest-api-python provides python bindings for hub rest api.\n\n# paging and black duck v2022.2\n\nin v2022.2 of black duck the rest api introduced a max page size to protect system resource usage. see the black duck [release notes on synopsys community](https://community.synopsys.com/s/article/black-duck-release-notes) for the details of which api endpoints are affected. users of the the python bindings here should leverage the client interface which provides automatic paging support to make best use of these endpoints.\n\n**the old hubinstance interface and many of the examples using it do not perform paging and will break as a result of the changes in v2022.2**.\n\nany issues related to the hubinstance interface will be closed as *won't fix*\n\nany prs with new or modified example scripts/utilities **must** use the client interface.\n\n# new in 1.0.0\n\nintroducing the new client class.\n\nin order to provide a more robust long-term connection, faster performance, and an overall better experience a new\nclient class has been designed.\n\nit is backed by a [requests session](https://docs.python-requests.org/en/master/user/advanced/#session-objects) object. the user specifies a base url, timeout, retries, proxies, and tls verification upon initialization and these attributes are persisted across all requests.\n\nat the rest api level, the client class provides a consistent way to discover and traverse public resources, uses a\n[generator](https://wiki.python.org/moin/generators) to fetch all items using pagination, and automatically renews the bearer token.\n\nsee [client versus hubinstance comparison](https://github.com/blackducksoftware/hub-rest-api-python/wiki/client-versus-hubinstance-comparison) and also read the [client user guide](https://github.com/blackducksoftware/hub-rest-api-python/wiki/client-user-guide) on the [hub rest api python wiki](https://github.com/blackducksoftware/hub-rest-api-python/wiki).\n\n### important notes\nthe old hubinstance (in hubrestapi.py) keeps its existing functionality for backwards compatibility and therefore does **not** currently leverage any of the new features in the client class.\n\nwe believe that the new features are compelling enough to strongly encourage users to consider moving from hubinstance to client.\nsee [client versus hubinstance comparison](https://github.com/blackducksoftware/hub-rest-api-python/wiki/client-versus-hubinstance-comparison).\n\n\nplease give it a try and let us know what you think!\n\n# to use\n\n```\npip3 install blackduck\n```\n\n```python\nfrom blackduck import client\nimport logging\nimport os\n\nlogging.basicconfig(\n    level=logging.info,\n    format=\"[%(asctime)s] {%(module)s:%(lineno)d} %(levelname)s - %(message)s\"\n)\n\nbd = client(\n    token=os.environ.get('blackduck_token'),\n    base_url=\"https://your.blackduck.url\",\n    # verify=false  # tls certificate verification\n)\n\nfor project in bd.get_resource(name='projects'):\n    print(project.get('name'))\n```\n\n### examples\n\nexample code showing how to work with the new client can be found in the *examples/client* folder.\n\n**examples which use the old hubinstance interface -which is not maintained- are not guaranteed to work. use at your own risk.**\n\n# version history\n\nincluding a version history on a go-forward basis. \n\n## v1.1.0\n\nretries will be attempted for all http verbs, not just get.\n\n# test #\n\nusing [pytest](https://pytest.readthedocs.io/en/latest/contents.html)\n\n```bash\ngit clone https://github.com/blackducksoftware/hub-rest-api-python.git\ncd hub-rest-api-python\n# optional but advisable: create/use virtualenv\n# you should have 3.x+, e.g. python 3.8.0+\n\npip3 install -r requirements.txt\npip3 install .\ncd test\npytest\n```\n\n## install package locally\n\ndo this when testing a new version.\n\n```\ngit clone https://github.com/blackducksoftware/hub-rest-api-python.git\ncd hub-rest-api-python\npip3 install -r requirements.txt\npip3 install .\n```\n\nto uninstall:\n\n```\npip3 uninstall blackduck\n```\n\n## where can i get the latest release? ##\nthis package is available on pypi:\n\n`pip3 install blackduck`\n\n## documentation ##\ndocumentation for hub-rest-api-python can be found on the base project:\n[hub rest api python wiki](https://github.com/blackducksoftware/hub-rest-api-python/wiki)\n\n\n\n",
  "docs_url": null,
  "keywords": "api",
  "license": "apache",
  "name": "blackduck",
  "package_url": "https://pypi.org/project/blackduck/",
  "project_url": "https://pypi.org/project/blackduck/",
  "project_urls": {
    "Homepage": "https://github.com/blackducksoftware/hub-rest-api-python"
  },
  "release_url": "https://pypi.org/project/blackduck/1.1.0/",
  "requires_dist": [
    "requests",
    "python-dateutil"
  ],
  "requires_python": ">=3.6.0",
  "summary": "package for using the synopsys black duck hub rest api.",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "glenn_snyder",
    "gsnyder@synopsys.com"
  ],
  "kwds": "synopsys hub hubinstance paging hubrestapi",
  "license_kwds": "apache",
  "libtype": "pypi",
  "id": "pypi_blackduck",
  "homepage": "https://github.com/blackducksoftware/hub-rest-api-python",
  "release_count": 63,
  "dependency_ids": [
    "pypi_python_dateutil",
    "pypi_requests"
  ]
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "framework :: asyncio",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "================================================\n``asyncstdlib`` -- the missing ``async`` toolbox\n================================================\n\n.. image:: https://readthedocs.org/projects/asyncstdlib/badge/?version=latest\n    :target: http://asyncstdlib.readthedocs.io/en/latest/?badge=latest\n    :alt: documentation status\n\n.. image:: https://img.shields.io/pypi/v/asyncstdlib.svg\n    :alt: available on pypi\n    :target: https://pypi.python.org/pypi/asyncstdlib/\n\n.. image:: https://anaconda.org/conda-forge/asyncstdlib/badges/version.svg\n    :alt: available on conda-forge\n    :target: https://anaconda.org/conda-forge/asyncstdlib\n\n.. image:: https://img.shields.io/github/license/maxfischer2781/asyncstdlib.svg\n    :alt: license\n    :target: https://github.com/maxfischer2781/asyncstdlib/blob/master/license\n\n.. image:: https://badges.gitter.im/maxfischer2781/asyncstdlib.svg\n    :target: https://gitter.im/maxfischer2781/asyncstdlib?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n    :alt: development chat\n\nthe ``asyncstdlib`` library re-implements functions and classes of the python\nstandard library to make them compatible with ``async`` callables, iterables\nand context managers.\nit is fully agnostic to ``async`` event loops and seamlessly works with\n``asyncio``, third-party libraries such as ``trio``, as well as\nany custom ``async`` event loop.\n\n* full set of ``async`` versions of advantageous standard library helpers,\n  such as ``zip``, ``map``, ``enumerate``, ``functools.reduce``,\n  ``itertools.tee``, ``itertools.groupby`` and many others.\n* safe handling of ``async`` iterators to ensure prompt cleanup, as well as\n  various helpers to simplify safely using custom ``async`` iterators.\n* small but powerful toolset to seamlessly integrate existing sync code\n  into ``async`` programs and libraries.\n\ncheck out the `documentation`_ to get started or take a look around.\n\n.. _documentation: http://asyncstdlib.readthedocs.io/\n",
  "docs_url": null,
  "keywords": "async,enumerate,itertools,builtins,functools,contextlib",
  "license": "",
  "name": "asyncstdlib",
  "package_url": "https://pypi.org/project/asyncstdlib/",
  "project_url": "https://pypi.org/project/asyncstdlib/",
  "project_urls": {
    "Documentation": "https://asyncstdlib.readthedocs.io/en/latest/",
    "Source": "https://github.com/maxfischer2781/asyncstdlib"
  },
  "release_url": "https://pypi.org/project/asyncstdlib/3.10.9/",
  "requires_dist": [
    "typing_extensions; python_version<'3.8'",
    "sphinx ; extra == \"doc\"",
    "sphinxcontrib-trio ; extra == \"doc\"",
    "pytest ; extra == \"test\"",
    "flake8 ; extra == \"test\"",
    "flake8-bugbear ; extra == \"test\"",
    "black ; extra == \"test\" and ( implementation_name=='cpython')",
    "coverage ; extra == \"test\"",
    "pytest-cov ; extra == \"test\"",
    "flake8-2020 ; extra == \"test\"",
    "mypy ; extra == \"test\" and ( implementation_name=='cpython')"
  ],
  "requires_python": "~=3.6",
  "summary": "the missing async toolbox",
  "version": "3.10.9",
  "releases": [],
  "developers": [
    "maxfischer2781@gmail.com"
  ],
  "kwds": "asyncstdlib async functools itertools asyncio",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_asyncstdlib",
  "homepage": "",
  "release_count": 20,
  "dependency_ids": [
    "pypi_black",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_flake8_2020",
    "pypi_flake8_bugbear",
    "pypi_mypy",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_sphinx",
    "pypi_sphinxcontrib_trio",
    "pypi_typing_extensions"
  ]
}
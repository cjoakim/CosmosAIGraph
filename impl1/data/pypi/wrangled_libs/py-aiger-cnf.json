{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# py-aiger-cnf\npython library to convert between aiger and cnf\n\n[![build status](https://cloud.drone.io/api/badges/mvcisback/py-aiger-cnf/status.svg)](https://cloud.drone.io/mvcisback/py-aiger-cnf)\n[![pypi version](https://badge.fury.io/py/py-aiger-cnf.svg)](https://badge.fury.io/py/py-aiger-cnf)\n[![license: mit](https://img.shields.io/badge/license-mit-yellow.svg)](https://opensource.org/licenses/mit)\n\n<!-- markdown-toc start - don't edit this section. run m-x markdown-toc-generate-toc again -->\n**table of contents**\n\n- [installation](#installation)\n- [usage](#usage)\n\n<!-- markdown-toc end -->\n\n# installation\n\nif you just need to use `aiger_cnf`, you can just run:\n\n`$ pip install py-aiger-cnf`\n\nfor developers, note that this project uses the\n[poetry](https://poetry.eustace.io/) python package/dependency\nmanagement tool. please familarize yourself with it and then\nrun:\n\n`$ poetry install`\n\n# usage\n\nthe primary entry point for using `aiger_cnf` is the `aig2cnf`\nfunction which, unsurprisingly, maps `aig` objects to `cnf` objects.\n\n```python\nimport aiger\nfrom aiger_cnf import aig2cnf\n\nx, y, z = map(aiger.atom, ('x', 'y', 'z'))\nexpr = (x & y) | ~z\ncnf = aig2cnf(expr.aig)\n```\n\nnote that this library also supports `aiger` wrapper libraries so long\nas they export a `.aig` attribute. thus, could also\nwrite:\n\n```python\ncnf = aig2cnf(expr)\n```\n\n\nthe `cnf` object is a `namedtuple` with the following three fields:\n\n1. `clauses`: a list of tuples of ints, e.g., `[(1,2,3), (-1,\n   2)]`. each integer represents a variable's id, with the sign\n   indicating the polarity of the variable.\n2. `input2lit`: a [bidict](https://bidict.readthedocs.io/en/master/)\n   from input names to variable ids.\n2. `output2lit`: a [bidict](https://bidict.readthedocs.io/en/master/)\n   from output names to variable ids.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "py-aiger-cnf",
  "package_url": "https://pypi.org/project/py-aiger-cnf/",
  "project_url": "https://pypi.org/project/py-aiger-cnf/",
  "project_urls": {
    "Homepage": "https://github.com/mvcisback/py-aiger-cnf",
    "Repository": "https://github.com/mvcisback/py-aiger-cnf"
  },
  "release_url": "https://pypi.org/project/py-aiger-cnf/5.0.7/",
  "requires_dist": [
    "bidict (>=0.22.0,<0.23.0)",
    "funcy (>=1.12,<2.0)",
    "py-aiger (>=6.0.0,<7.0.0)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "python library to convert between aiger and cnf",
  "version": "5.0.7",
  "releases": [],
  "developers": [
    "marcell_vazquez",
    "mvc@linux.com"
  ],
  "kwds": "aiger_cnf markdown aiger aig2cnf cnf",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_py_aiger_cnf",
  "homepage": "https://github.com/mvcisback/py-aiger-cnf",
  "release_count": 17,
  "dependency_ids": [
    "pypi_bidict",
    "pypi_funcy",
    "pypi_py_aiger"
  ]
}
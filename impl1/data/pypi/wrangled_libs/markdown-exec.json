{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: documentation",
    "topic :: software development",
    "topic :: utilities",
    "typing :: typed"
  ],
  "description": "# markdown exec\n\n[![ci](https://github.com/pawamoy/markdown-exec/workflows/ci/badge.svg)](https://github.com/pawamoy/markdown-exec/actions?query=workflow%3aci)\n[![documentation](https://img.shields.io/badge/docs-mkdocs%20material-blue.svg?style=flat)](https://pawamoy.github.io/markdown-exec/)\n[![pypi version](https://img.shields.io/pypi/v/markdown-exec.svg)](https://pypi.org/project/markdown-exec/)\n[![gitpod](https://img.shields.io/badge/gitpod-workspace-blue.svg?style=flat)](https://gitpod.io/#https://github.com/pawamoy/markdown-exec)\n[![gitter](https://badges.gitter.im/join%20chat.svg)](https://gitter.im/markdown-exec/community)\n\nutilities to execute code blocks in markdown files.\n\nfor example, you write a python code block that computes some html,\nand this html is injected in place of the code block.\n\n## installation\n\nwith `pip`:\n\n```bash\npip install markdown-exec[ansi]\n```\n\nthe `ansi` extra provides the necessary bits (`pygments-ansi-color` and a css file)\nto render ansi colors in html code blocks. the css file is automatically added\nto mkdocs' `extra_css` when markdown exec is activated via `plugins` (see below).\n\n## configuration\n\nthis extension relies on the\n[superfences](https://facelessuser.github.io/pymdown-extensions/extensions/superfences/)\nextension of\n[pymdown extensions](https://facelessuser.github.io/pymdown-extensions/).\n\nto allow execution of code blocks,\nconfigure a custom fence from python:\n\n```python\nfrom markdown import markdown\nfrom markdown_exec import formatter, validator\n\nmarkdown(\n    extensions=[\"pymdownx.superfences\"],\n    extension_configs={\n        \"pymdownx.superfences\": {\n            \"custom_fences\": [\n                {\n                    \"name\": \"python\",\n                    \"class\": \"python\",\n                    \"validator\": validator,\n                    \"format\": formatter,\n                }\n                # ...one fence for each language we support:\n                # bash, console, md, markdown, py, python, pycon, sh, tree\n            ]\n        }\n    }\n)\n```\n\n...or in mkdocs configuration file, as a markdown extension:\n\n```yaml\n# mkdocs.yml\nmarkdown_extensions:\n- pymdownx.superfences:\n    custom_fences:\n    - name: python\n      class: python\n      validator: !!python/name:markdown_exec.validator\n      format: !!python/name:markdown_exec.formatter\n    # ...one fence for each language we support:\n    # bash, console, md, markdown, py, python, pycon, sh, tree\n```\n\n...or in mkdocs configuration file, as a plugin:\n\n```yaml\n# mkdocs.yml\nplugins:\n- search\n- markdown-exec\n```\n\nwe do recommend enabling markdown exec with the mkdocs plugin\nif you are using mkdocs: it will take care of adding relevant\nassets (css/js) to the final site when needed. \n\n## usage\n\nyou are now able to execute code blocks instead of displaying them:\n\n````md\n```python exec=\"on\"\nprint(\"hello markdown!\")\n```\n````\n\nthe `exec` option will be true for every possible value except `0`, `no`, `off` and `false` (case insensitive).\n\nbelow you can see an example of running a bash script that is expected to\nreturn a non-zero exit code:\n\n````md\n```bash exec=\"1\" source=\"tabbed-left\" returncode=\"2\"\ngrep extra_css readme.md && exit 2\n```\n````\n\nsee [usage](https://pawamoy.github.io/markdown-exec/usage/) for more details,\nand the [gallery](https://pawamoy.github.io/markdown-exec/gallery/) for more examples!\n",
  "docs_url": null,
  "keywords": "markdown python exec shell bash mkdocs",
  "license": "isc",
  "name": "markdown-exec",
  "package_url": "https://pypi.org/project/markdown-exec/",
  "project_url": "https://pypi.org/project/markdown-exec/",
  "project_urls": {
    "Changelog": "https://pawamoy.github.io/markdown-exec/changelog",
    "Discussions": "https://github.com/pawamoy/markdown-exec/discussions",
    "Documentation": "https://pawamoy.github.io/markdown-exec",
    "Funding": "https://github.com/sponsors/pawamoy",
    "Gitter": "https://gitter.im/markdown-exec/community",
    "Homepage": "https://pawamoy.github.io/markdown-exec",
    "Issues": "https://github.com/pawamoy/markdown-exec/issues",
    "Repository": "https://github.com/pawamoy/markdown-exec"
  },
  "release_url": "https://pypi.org/project/markdown-exec/1.7.0/",
  "requires_dist": [
    "pymdown-extensions>=9",
    "pygments-ansi-color; extra == \"ansi\""
  ],
  "requires_python": ">=3.8",
  "summary": "utilities to execute code blocks in markdown files.",
  "version": "1.7.0",
  "releases": [],
  "developers": [
    "pawamoy@pm.me"
  ],
  "kwds": "markdown_exec markdown markdown_extensions mkdocs exec",
  "license_kwds": "isc",
  "libtype": "pypi",
  "id": "pypi_markdown_exec",
  "homepage": "",
  "release_count": 24,
  "dependency_ids": [
    "pypi_pygments_ansi_color",
    "pypi_pymdown_extensions"
  ]
}
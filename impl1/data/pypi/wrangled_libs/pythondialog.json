{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console :: curses",
    "intended audience :: developers",
    "license :: osi approved :: gnu library or lesser general public license (lgpl)",
    "operating system :: unix",
    "programming language :: python :: 3",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: user interfaces",
    "topic :: software development :: widget sets"
  ],
  "description": "===============================================================================\npython wrapper for the unix \"dialog\" utility\n===============================================================================\neasy writing of graphical interfaces for terminal-based applications\n-------------------------------------------------------------------------------\n\noverview\n--------\n\npythondialog is a python wrapper for the unix dialog_ utility\noriginally written by savio lam and later rewritten by thomas e. dickey.\nits purpose is to provide an easy to use, pythonic and as complete as\npossible interface to dialog_ from python code.\n\n.. _dialog: https://invisible-island.net/dialog/dialog.html\n\npythondialog is free software, licensed under the gnu lgpl (gnu lesser\ngeneral public license). its home page is located at:\n\n  https://pythondialog.sourceforge.io/\n\nand contains a `short example`_, screenshots_, a `summary of the recent\nchanges`_, links to the `documentation`_, the `git repository`_, the\n`mailing list`_, the `issue tracker`_, etc.\n\n.. _short example:  https://pythondialog.sourceforge.io/#example\n.. _screenshots:    https://pythondialog.sourceforge.io/gallery.html\n.. _summary of the recent changes:\n                    https://pythondialog.sourceforge.io/news.html\n.. _documentation:  https://pythondialog.sourceforge.io/doc/\n.. _git repository: https://sourceforge.net/p/pythondialog/code/\n.. _mailing list:   https://sourceforge.net/p/pythondialog/mailman/\n.. _issue tracker:  https://sourceforge.net/p/pythondialog/_list/tickets\n\nif you want to get a quick idea of what this module allows one to do,\nyou can download a release tarball and run ``demo.py``::\n\n  pythonpath=. python3 examples/demo.py\n\n\nwhat is pythondialog good for? what are its limitations?\n--------------------------------------------------------\n\nas you might infer from the name, dialog is a high-level program that\ngenerates dialog boxes. so is pythondialog. they allow you to build nice\ninterfaces quickly and easily, but you don't have full control over the\nwidgets, nor can you create new widgets without modifying dialog itself.\nif you need to do low-level stuff, you should have a look at `ncurses`_\n(cf.\u00a0the ``curses`` module in the python standard library), `blessings`_\nor slang instead. for sophisticated text-mode interfaces, the `urwid\npython library`_ looks rather interesting, too.\n\n.. _ncurses: https://invisible-island.net/ncurses/ncurses.html\n.. _blessings: https://github.com/erikrose/blessings\n.. _urwid python library: http://excess.org/urwid/\n\n\nrequirements\n------------\n\n* as of version 2.12, pythondialog requires python 3.0 or later in the 3.x\n  series. pythondialog 3.5.3 has been tested with python 3.9.\n\n* dialog_ version 1.3-20201126-1 (the version shipped in debian stable\n  and unstable in november 2021) is `broken\n  <https://bugs.debian.org/990043>`_; don't waste your time with that\n  version. dialog_ 1.3-20210621 works fine.\n\n* versions of pythondialog up to and including 3.5.1 had a backport to\n  python\u00a02, however this outdated python dialect isn't supported\n  anymore. you may find pointers to the old packages with python\u00a02\n  support on the `pythondialog home page`_.\n\n  .. _pythondialog home page: https://pythondialog.sourceforge.io/\n\n* apart from that, pythondialog requires the dialog_ program (or a\n  drop-in replacement for dialog). you can download dialog from:\n\n    https://invisible-island.net/dialog/dialog.html\n\n  note that some features of pythondialog may require recent versions of\n  dialog.\n\n\nquick installation instructions\n-------------------------------\n\nif you have a working `pip <https://pypi.org/project/pip/>`_ setup,\nyou should be able to install pythondialog with::\n\n  pip install pythondialog\n\nwhen doing so, make sure that your ``pip`` executable runs with the\npython\u00a03 installation you want to install pythondialog for.\n\nfor more detailed instructions, you can read the ``install`` file from a\nrelease tarball. you may also want to consult the `pip documentation\n<https://pip.pypa.io/>`_.\n\n\ndocumentation\n-------------\n\nthe pythondialog manual\n^^^^^^^^^^^^^^^^^^^^^^^\n\nthe pythondialog manual is written in `restructuredtext`_ format for the\n`sphinx`_ documentation generator. the html documentation for the latest\nversion of pythondialog as rendered by sphinx should be available at:\n\n  https://pythondialog.sourceforge.io/doc/\n\n.. _pythondialog manual: https://pythondialog.sourceforge.io/doc/\n.. _restructuredtext: http://docutils.sourceforge.net/rst.html\n.. _sphinx: https://www.sphinx-doc.org/en/master/\n.. _latex: https://www.latex-project.org/\n.. _make: https://www.gnu.org/software/make/\n\nthe sources for the pythondialog manual are located in the ``doc``\ntop-level directory of the pythondialog distribution, but the\ndocumentation build process pulls many parts from ``dialog.py`` (mainly\ndocstrings).\n\nto generate the documentation yourself from ``dialog.py`` and the\nsources in the ``doc`` directory, first make sure you have `sphinx`_ and\n`make`_ installed. then, you can go to the ``doc`` directory and type,\nfor instance::\n\n  make html\n\nyou will then find the output in the ``_build/html`` subdirectory of\n``doc``. `sphinx`_ can build the documentation in many other formats.\nfor instance, if you have `latex`_ installed, you can generate the\npythondialog manual in pdf format using::\n\n  make latexpdf\n\nyou can run ``make`` from the ``doc`` directory to see a list of the\navailable formats. run ``make clean`` to clean up after the\ndocumentation build process.\n\nfor those who have installed `sphinx`_ but not `make`_, it is still\npossible to build the documentation with a command such as::\n\n  sphinx-build -b html . _build/html\n\nrun from the ``doc`` directory. please refer to `sphinx-build`_ for more\ndetails.\n\n.. _sphinx-build: https://www.sphinx-doc.org/en/master/man/sphinx-build.html\n\n\nreading the docstrings from an interactive python interpreter\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nif you have already installed pythondialog, you may consult its\ndocstrings in an interactive python interpreter this way::\n\n   >>> import dialog; help(dialog)\n\nbut only parts of the documentation are available using this method, and\nthe result is much less convenient to use than the `pythondialog\nmanual`_ as generated by `sphinx`_.\n\n\nenabling deprecation warnings\n-----------------------------\n\nthere are a few places in ``dialog.py`` that send a\n``deprecationwarning`` to warn developers about obsolete features.\nhowever, because of:\n\n  - the dialog output to the terminal;\n  - the fact that such warnings are silenced by default since python 2.7\n    and 3.2;\n\nyou have to do two things in order to see them:\n\n  - redirect the standard error stream to a file;\n  - enable the warnings for the python interpreter.\n\nfor instance, to see the warnings produced when running the demo, you\ncan do::\n\n  pythonpath=. python3 -wd examples/demo.py 2>/path/to/file\n\nand examine ``/path/to/file``. this can also help you to find files that\nare still open when your program exits.\n\n**note:**\n\n  if your program is terminated by an unhandled exception while stderr\n  is redirected as in the preceding command, you won't see the traceback\n  until you examine the file stderr was redirected to. this can be\n  disturbing, as your program may exit with no apparent reason in such\n  conditions.\n\nfor more explanations and other methods to enable deprecation warnings,\nplease refer to:\n\n  https://docs.python.org/3/whatsnew/2.7.html\n\n\ntroubleshooting\n---------------\n\nif you have a problem with a pythondialog call, you should read its\ndocumentation and the dialog(1) manual page. if this is not enough, you\ncan enable logging of shell command-line equivalents of all dialog calls\nmade by your program with a simple call to ``dialog.setup_debug()``,\nfirst available in pythondialog 2.12 (the ``expand_file_opt`` parameter\nmay be useful in versions 3.3 and later). an example of this can be\nfound in ``demo.py`` from the ``examples`` directory.\n\nas of version 2.12, you can also enable this debugging facility for\n``demo.py`` by calling it with the ``--debug`` flag (possibly combined\nwith ``--debug-expand-file-opt`` in pythondialog 3.3 and later, cf.\n``demo.py --help``).\n\n\nusing xdialog instead of dialog\n-------------------------------\n\nas far as i can tell, `xdialog`_ has not been ported to `gtk+`_ version\n2 or later. it is not in `debian`_ stable nor unstable (november 30, 2019).\nit is not installed on my system (because of the gtk+ 1.2 dependency),\nand according to the xdialog-specific patches i received from peter\n\u00e5strand in 2004, was not a drop-in replacement for `dialog`_ (in\nparticular, xdialog seemed to want to talk to the caller through stdout\ninstead of stderr, grrrrr!).\n\n.. _xdialog: http://xdialog.free.fr/\n.. _gtk+: https://www.gtk.org/\n.. _debian: https://www.debian.org/\n\nall this to say that, even though i didn't remove the options to use\nanother backend than dialog, nor did i remove the handful of little,\nnon-invasive modifications that help pythondialog work better with\n`xdialog`_, i don't really support the latter. i test everything with\ndialog, and nothing with xdialog.\n\nthat being said, here is the *old* text of this section (from 2004), in\ncase you are still interested:\n\n  starting with 2.06, there is an \"xdialog\" compatibility mode that you\n  can use if you want pythondialog to run the graphical xdialog program\n  (which *should* be found under http://xdialog.free.fr/) instead of\n  dialog (text-mode, based on the ncurses library).\n\n  the primary supported platform is still dialog, but as long as only\n  small modifications are enough to make pythondialog work with xdialog,\n  i am willing to support xdialog if people are interested in it (which\n  turned out to be the case for xdialog).\n\n  the demo.py from pythondialog 2.06 has been tested with xdialog 2.0.6\n  and found to work well (barring xdialog's annoying behaviour with the\n  file selection dialog box).\n\n\nwhiptail, anyone?\n-----------------\n\nwell, pythondialog seems not to work very well with whiptail. the reason\nis that whiptail is not compatible with dialog anymore. although you can\ntell pythondialog the program you want it to invoke, only programs that\nare mostly dialog-compatible are supported.\n\n\nhistory\n-------\n\npythondialog was originally written by robb shecter. sultanbek tezadov\nadded some features to it (mainly the first gauge implementation, i\nguess). florent rougon rewrote most parts of the program to make it more\nrobust and flexible so that it can give access to most features of the\ndialog program. peter \u00e5strand took over maintainership between 2004 and\n2009, with particular care for the `xdialog`_ support. florent rougon\ntook over maintainership again starting from 2009...\n\n.. \n  # local variables:\n  # coding: utf-8\n  # fill-column: 72\n  # end:\n\n\n",
  "docs_url": null,
  "keywords": "dialog,ncurses,xdialog,text-mode interface,terminal",
  "license": "",
  "name": "pythondialog",
  "package_url": "https://pypi.org/project/pythondialog/",
  "project_url": "https://pypi.org/project/pythondialog/",
  "project_urls": {
    "Documentation": "https://pythondialog.sourceforge.io/doc/",
    "Git repository": "https://sourceforge.net/p/pythondialog/code/",
    "Homepage": "https://pythondialog.sourceforge.io/",
    "Issue tracker": "https://sourceforge.net/p/pythondialog/_list/tickets",
    "Mailing list": "https://sourceforge.net/p/pythondialog/mailman/",
    "SourceForge project page": "https://sourceforge.net/projects/pythondialog"
  },
  "release_url": "https://pypi.org/project/pythondialog/3.5.3/",
  "requires_dist": [],
  "requires_python": ">=3",
  "summary": "a python interface to the unix dialog utility and mostly-compatible programs",
  "version": "3.5.3",
  "releases": [],
  "developers": [
    "f.rougon@free.fr",
    "florent_rougon",
    "robb@acm.org",
    "robb_shecter"
  ],
  "kwds": "pythondialog _pythondialog xdialog _xdialog _dialog",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_pythondialog",
  "homepage": "https://pythondialog.sourceforge.io/",
  "release_count": 16,
  "dependency_ids": []
}
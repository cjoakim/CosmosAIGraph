{
  "classifiers": [
    "development status :: 2 - pre-alpha",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "topic :: scientific/engineering"
  ],
  "description": "##################################################\nnb2plots - converting between notebooks and sphinx\n##################################################\n\nsee the nb2plots documentation_ for more information.\n\n.. shared-text-body\n\n************\nwhat it does\n************\n\n``nb2plots`` converts jupyter_ notebooks to rest_ files for sphinx_, and back\nagain.\n\nnb2plots assumes that the rest document will become the source for your sphinx\nweb pages, but also for future versions of the notebook.  the notebook may\nserve as a draft for the polished rest page, and an output format from the\nsphinx build.  why? read on.\n\n****************************************\nwhy convert jupyter notebooks to sphinx?\n****************************************\n\njupyter notebooks are just what the doctor ordered when hacking up a quick\ntutorial, or preparing a software demo.  the problems start when you want to\ndo not-trivial edits to the notebooks, or you need features that notebooks\ndon't have, such as flexible cross-referencing, extensible markup, and so on.\nnotebooks are also painful to use with version control.  these times make you\nwish your notebook was in a standard extensible text format, such as rest_.\n\nyou could convert your notebook to rest using the standard `nbconvert`_\ncommand, but this gives rather ugly rest, and you lose all the nice code\nexecution and figure generation that the notebook is good at.\n\nenter nb2plots.  the ``nb2plots`` command converts notebooks to specially\nformatted rest pages. use with::\n\n    nb2plots notebook.ipynb > with_plots.rst\n\nnb2plots converts your notebook to not-very-ugly rest, where the code cells\nbecome ``nbplot`` directives in your rest file.\n\nspecifically, a notebook code cell like this::\n\n    a = 1\n\nbecomes (in the rest document)::\n\n    .. nbplot::\n\n        >>> a = 1\n\nthe ``nbplot`` directives run the contained code when sphinx builds your rest\nfiles, and embed the results of any plots that your code makes.  actually,\n``nbplot`` is an extended and edited version of the `matplotlib plot\ndirective`_.  building your pages runs all the code and regenerates the\nfigures, and you get much of the reproducible goodness of the notebook\nexperience.\n\nyou can also run the standard sphinx ``doctest`` extension over your pages to\ncheck the doctest output of the code cells.\n\nthe rest version of your notebook has many advantages - it is easier to edit\nin your favorite text editor, and you can extend and configure the execution\nand display of the code in several different ways.  for example, you can hide\nsome code cells (nbplot directives) if the code is not interesting to your\npoint, but you still want the generated figure.  you can configure your nbplot\ndirectives to run different code for different configurations.  for these\noptions, see |nbplot-documentation|.  but - what do you lose, when going from\na notebook to a nb2plots rest document?\n\n**********************************\ni want notebooks and .py files too\n**********************************\n\nyou may also want a version of your document that your users can execute.\nperhaps the page build is generating some tricky errors or warnings, and you\nwant to experiment with the code in the page interactively.  perhaps your\nusers are used to notebooks, and prefer the code in that format.\n\nnb2plots also contains sphinx extensions that cause the sphinx build to\ngenerate python code files and jupyter notebooks from the rest source.  when\nyou add the nb2plots rest directive ``code-links`` to your rest page, it will\ncause the sphinx build to create a python code file and notebook versions of\nyour page, and adds download links to these versions::\n\n    .. code-links::\n\nsee |code-links-documentation| for details.\n\n**************************\nshow me what it looks like\n**************************\n\nfor a very simple example, see |worked-example|.\n\nfor a moderate-sized teaching site that makes extensive use of nb2plots, see\nhttps://matthew-brett.github.io/teaching.\n\n************\ninstallation\n************\n\n::\n\n    pip install nb2plots\n\nyou will need pandoc_ installed and available as the ``pandoc`` command.\n\nto install pandoc on osx, we recommend homebrew_::\n\n    brew install pandoc\n\n*************\nconfiguration\n*************\n\nadd the following to your sphinx ``conf.py`` file::\n\n    extensions = [\"nb2plots\"]\n\nsee |nbplot-documentation| for the various ``conf.py`` configuration settings.\n\n****\ncode\n****\n\nsee https://github.com/matthew-brett/nb2plots\n\nreleased under the bsd two-clause license - see the file ``license`` in the\nsource distribution.\n\ngithub actions kindly tests the code automatically under python versions 3.8\nthrough 3.11.\n\nthe latest released version is at https://pypi.python.org/pypi/nb2plots\n\n*****\ntests\n*****\n\n* install ``nb2plots``\n* install the pytest_ testing framework, the ``mock`` package, and the\n  ``scripttester`` package::\n\n    pip install pytest mock scripttester\n\n* run the tests with::\n\n    py.test --pyargs nb2plots\n\n*******\nsupport\n*******\n\nplease put up issues on the `nb2plots issue tracker`_.\n\n.. standalone-references\n\n.. |nbplot-documentation| replace:: `nbplots documentation`_\n.. |worked-example| replace:: `worked example`_\n.. |code-links-documentation| replace:: `code-links documentation`_\n.. _nbplots documentation:\n    https://matthew-brett.github.io/nb2plots/nbplots.html\n.. _code-links documentation:\n    https://matthew-brett.github.io/nb2plots/code_links.html\n.. _worked example:\n    https://matthew-brett.github.io/nb2plots/worked_example.html\n.. _documentation: https://matthew-brett.github.io/nb2plots\n.. _pandoc: http://pandoc.org\n.. _jupyter: jupyter.org\n.. _homebrew: brew.sh\n.. _sphinx: http://sphinx-doc.org\n.. _rest: http://docutils.sourceforge.net/rst.html\n.. _nb2plots issue tracker: https://github.com/matthew-brett/nb2plots/issues\n.. _matplotlib plot directive: http://matplotlib.org/sampledoc/extensions.html\n.. _nbconvert: http://nbconvert.readthedocs.org/en/latest/\n.. _pytest: https://pytest.readthedocs.io\n.. _mock: https://github.com/testing-cabal/mock\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd license",
  "name": "nb2plots",
  "package_url": "https://pypi.org/project/nb2plots/",
  "project_url": "https://pypi.org/project/nb2plots/",
  "project_urls": {
    "Homepage": "http://github.com/matthew-brett/nb2plots"
  },
  "release_url": "https://pypi.org/project/nb2plots/0.7.2/",
  "requires_dist": [
    "ipython[notebook]>=7.16.3",
    "sphinx>=4",
    "numpy>=1.20",
    "matplotlib>=3.2",
    "sphinxtesters>=0.2.3",
    "texext>=0.6.6",
    "nbconvert>=6.0.7",
    "pytest; extra == \"test\"",
    "mock; extra == \"test\"",
    "scripttester; extra == \"test\""
  ],
  "requires_python": ">=3.7",
  "summary": "converting between ipython notebooks and sphinx docs",
  "version": "0.7.2",
  "releases": [],
  "developers": [
    "matthew.brett@gmail.com",
    "matthew_brett"
  ],
  "kwds": "sphinx sphinx_ _nb2plots _sphinx nb2plots",
  "license_kwds": "bsd license",
  "libtype": "pypi",
  "id": "pypi_nb2plots",
  "homepage": "http://github.com/matthew-brett/nb2plots",
  "release_count": 12,
  "dependency_ids": [
    "pypi_ipython",
    "pypi_matplotlib",
    "pypi_mock",
    "pypi_nbconvert",
    "pypi_numpy",
    "pypi_pytest",
    "pypi_scripttester",
    "pypi_sphinx",
    "pypi_sphinxtesters",
    "pypi_texext"
  ]
}
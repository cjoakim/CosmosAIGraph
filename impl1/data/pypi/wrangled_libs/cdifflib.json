{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python",
    "topic :: software development",
    "topic :: text processing :: general"
  ],
  "description": "cdifflib\n========\n  [<img src=\"https://travis-ci.org/mduggan/cdifflib.svg?branch=master\">](https://travis-ci.org/mduggan/cdifflib/)\n\npython [difflib](http://docs.python.org/2/library/difflib.html) sequence\nmatcher reimplemented in c.\n\nactually only contains reimplemented parts.  creates a `csequencematcher` type\nwhich inherets most functions from `difflib.sequencematcher`.\n\n`cdifflib` is about 4x the speed of the pure python `difflib` when diffing\nlarge streams.\n\nlimitations\n-----------\nthe c part of the code can only work on `list` rather than generic iterables,\nso anything that isn't a `list` will be converted to `list` in the\n`csequencematcher` constructor.  this may cause undesirable behavior if you're\nnot expecting it.\n\nworks with python 2.7 and 3.6 (should work on all 3.3+)\n\nusage\n-----\ncan be used just like the `difflib.sequencematcher` as long as you pass lists.  these examples are right out of the [difflib docs](http://docs.python.org/2/library/difflib.html):\n```python\n>>> from cdifflib import csequencematcher\n>>> s = csequencematcher(none, ' abcd', 'abcd abcd')\n>>> s.find_longest_match(0, 5, 0, 9)\nmatch(a=1, b=0, size=4)\n>>> s = csequencematcher(lambda x: x == \" \",\n...                      \"private thread currentthread;\",\n...                      \"private volatile thread currentthread;\")\n>>> print round(s.ratio(), 3)\n0.866\n```\n\nit's completely compatible, so you can replace the difflib version on startup\nand then other libraries will use csequencematcher too, eg:\n```python\nfrom cdifflib import csequencematcher\nimport difflib\ndifflib.sequencematcher = csequencematcher\nimport library_that_uses_difflib\n\n# now the library will transparantely be using the c sequencematcher - other\n# things remain the same\nlibrary_that_uses_difflib.do_some_diffing()\n```\n\n\nmaking\n------\nto install:\n```\npython setup.py install\n```\n\nto test:\n```\npython setup.py test\n```\n\nlicense etc\n-----------\nthis code lives at https://github.com/mduggan.  see license for the license.\n\n\nchangelog\n---------\n* 1.2.6 - clear state correctly when replacing seq1 (#10)\n* 1.2.5 - fix some memory leaks (#7)\n* 1.2.4 - repackage yet again using twine for pypi upload (no binary changes)\n* 1.2.3 - repackage again with changelog update and corrected src package (no binary changes)\n* 1.2.2 - repackage to add readme.md in a way pypi supports (no binary changes)\n* 1.2.1 - fix bug for longer sequences with \"autojunk\"\n* 1.2.0 - python 3 support for other versions\n* 1.1.0 - added python 3.6 support (thanks bclavie)\n* 1.0.4 - changes to make it compile on msvc++ compiler, no change for other platforms\n* 1.0.2 - bugfix - also replace set_seq1 implementation so `difflib.compare` works with a `csequencematcher`\n* 1.0.1 - implement more bits in c to squeeze a bit more speed out\n* 1.0.0 - first release\n",
  "docs_url": null,
  "keywords": "difflib,c,diff",
  "license": "copyright (c) 2013, matthew duggan all rights reserved. redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * neither the name of the {organization} nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. this software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. in no event shall the copyright holder or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.",
  "name": "cdifflib",
  "package_url": "https://pypi.org/project/cdifflib/",
  "project_url": "https://pypi.org/project/cdifflib/",
  "project_urls": {
    "Bug Tracker": "https://github.com/mduggan/cdifflib/issues",
    "Homepage": "https://github.com/mduggan/cdifflib"
  },
  "release_url": "https://pypi.org/project/cdifflib/1.2.6/",
  "requires_dist": [],
  "requires_python": ">=3.4",
  "summary": "c implementation of parts of difflib",
  "version": "1.2.6",
  "releases": [],
  "developers": [
    "matthew_duggan",
    "mgithub@guarana.org"
  ],
  "kwds": "library_that_uses_difflib csequencematcher difflib cdifflib sequencematcher",
  "license_kwds": "copyright liability liable negligence disclaimer",
  "libtype": "pypi",
  "id": "pypi_cdifflib",
  "homepage": "https://github.com/mduggan/cdifflib",
  "release_count": 10,
  "dependency_ids": []
}
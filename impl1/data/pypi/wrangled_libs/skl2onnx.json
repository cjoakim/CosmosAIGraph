{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "## introduction\r\n*sklearn-onnx* converts [scikit-learn](https://scikit-learn.org/stable/) models to [onnx](https://github.com/onnx/onnx).\r\nonce in the onnx format, you can use tools like [onnx runtime](https://github.com/microsoft/onnxruntime) for high performance scoring.\r\nall converters are tested with [onnxruntime](https://onnxruntime.ai/).\r\nany external converter can be registered to convert scikit-learn pipeline\r\nincluding models or transformers coming from external libraries.\r\n\r\n## documentation\r\nfull documentation including tutorials is available at [https://onnx.ai/sklearn-onnx/](https://onnx.ai/sklearn-onnx/).\r\n[supported scikit-learn models](https://onnx.ai/sklearn-onnx/supported.html)\r\nlast supported opset is 15.\r\n\r\nyou may also find answers in [existing issues](https://github.com/onnx/sklearn-onnx/issues?utf8=%e2%9c%93&q=is%3aissue)\r\nor submit a new one.\r\n\r\n## installation\r\nyou can install from [pypi](https://pypi.org/project/skl2onnx/):\r\n```\r\npip install skl2onnx\r\n```\r\nor you can install from the source with the latest changes.\r\n```\r\npip install git+https://github.com/onnx/sklearn-onnx.git\r\n```\r\n\r\n## getting started\r\n\r\n```python\r\n# train a model.\r\nimport numpy as np\r\nfrom sklearn.datasets import load_iris\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.ensemble import randomforestclassifier\r\n\r\niris = load_iris()\r\nx, y = iris.data, iris.target\r\nx = x.astype(np.float32)\r\nx_train, x_test, y_train, y_test = train_test_split(x, y)\r\nclr = randomforestclassifier()\r\nclr.fit(x_train, y_train)\r\n\r\n# convert into onnx format.\r\nfrom skl2onnx import to_onnx\r\n\r\nonx = to_onnx(clr, x[:1])\r\nwith open(\"rf_iris.onnx\", \"wb\") as f:\r\n    f.write(onx.serializetostring())\r\n\r\n# compute the prediction with onnxruntime.\r\nimport onnxruntime as rt\r\n\r\nsess = rt.inferencesession(\"rf_iris.onnx\", providers=[\"cpuexecutionprovider\"])\r\ninput_name = sess.get_inputs()[0].name\r\nlabel_name = sess.get_outputs()[0].name\r\npred_onx = sess.run([label_name], {input_name: x_test.astype(np.float32)})[0]\r\n```\r\n\r\n## contribute\r\nwe welcome contributions in the form of feedback, ideas, or code.\r\n\r\n## license\r\n[apache license v2.0](license)\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license v2.0",
  "name": "skl2onnx",
  "package_url": "https://pypi.org/project/skl2onnx/",
  "project_url": "https://pypi.org/project/skl2onnx/",
  "project_urls": {
    "Homepage": "https://github.com/onnx/sklearn-onnx"
  },
  "release_url": "https://pypi.org/project/skl2onnx/1.16.0/",
  "requires_dist": [
    "onnx (>=1.2.1)",
    "scikit-learn (>=0.19)",
    "onnxconverter-common (>=1.7.0)"
  ],
  "requires_python": "",
  "summary": "convert scikit-learn models to onnx",
  "version": "1.16.0",
  "releases": [],
  "developers": [
    "onnx",
    "onnx-technical-discuss@lists.lfaidata.foundation"
  ],
  "kwds": "onnxruntime onnx sklearn to_onnx skl2onnx",
  "license_kwds": "apache license v2.0",
  "libtype": "pypi",
  "id": "pypi_skl2onnx",
  "homepage": "https://github.com/onnx/sklearn-onnx",
  "release_count": 35,
  "dependency_ids": [
    "pypi_onnx",
    "pypi_onnxconverter_common",
    "pypi_scikit_learn"
  ]
}
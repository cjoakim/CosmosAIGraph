{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: scientific/engineering :: artificial intelligence",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# neptune + optuna integration\n\nneptune is a tool for experiment tracking, model registry, data versioning, and monitoring model training live.\n\nthis integration lets you use it as an optuna visualization dashboard to log and monitor hyperparameter sweeps live.\n\n## what will you get with this integration?\n\n* log and monitor the optuna hyperparameter sweep live:\n  * values and params for each trial\n  * best values and params for the study\n  * hardware consumption and console logs\n  * interactive plots from the optuna.visualization module\n  * parameter distributions for each trial\n  * study object itself for 'inmemorystorage' or the database location for the studies with database storage\n* load the study directly from the existing neptune run\n\n![image](https://user-images.githubusercontent.com/97611089/160636423-82951249-a5d8-40d3-be34-4c2ff470b9db.png)\n*parallel coordinate plot logged to neptune*\n\n## resources\n\n* [documentation](https://docs.neptune.ai/integrations/optuna)\n* [code example on github](https://github.com/neptune-ai/examples/blob/main/integrations-and-supported-tools/optuna/scripts)\n* [runs logged in the neptune app](https://app.neptune.ai/o/common/org/optuna-integration/experiments?split=bth&dash=parallel-coordinates-plot&viewid=b6190a29-91be-4e64-880a-8f6085a6bb78)\n* [run example in google colab](https://colab.research.google.com/github/neptune-ai/examples/blob/master/integrations-and-supported-tools/optuna/notebooks/neptune_optuna_integration.ipynb)\n\n## example\n\non the command line:\n\n```\npip install neptune-optuna\n```\n\nin python:\n\n```python\nimport neptune\nimport neptune.integrations.optuna as npt_utils\n\n# start a run\nrun = neptune.init_run(\n    api_token=neptune.anonymous_api_token,\n    project=\"common/optuna-integration\",\n)\n\n# create a neptunecallback instance\nneptune_callback = npt_utils.neptunecallback(run)\n\n# pass the callback to study.optimize()\nstudy = optuna.create_study(direction=\"maximize\")\nstudy.optimize(objective, n_trials=100, callbacks=[neptune_callback])\n\n# watch the optimization live in neptune\n```\n\n## support\n\nif you got stuck or simply want to talk to us, here are your options:\n\n* check our [faq page](https://docs.neptune.ai/getting_help)\n* you can submit bug reports, feature requests, or contributions directly to the repository.\n* chat! when in the neptune application click on the blue message icon in the bottom-right corner and send a message. a real person will talk to you asap (typically very asap),\n* you can just shoot us an email at support@neptune.ai\n\n",
  "docs_url": null,
  "keywords": "mlops,ml experiment tracking,ml model registry,ml model store,ml metadata store",
  "license": "apache-2.0",
  "name": "neptune-optuna",
  "package_url": "https://pypi.org/project/neptune-optuna/",
  "project_url": "https://pypi.org/project/neptune-optuna/",
  "project_urls": {
    "Documentation": "https://docs.neptune.ai/integrations-and-supported-tools/model-training/optuna",
    "Homepage": "https://neptune.ai/",
    "Repository": "https://github.com/neptune-ai/neptune-optuna",
    "Tracker": "https://github.com/neptune-ai/neptune-optuna/issues"
  },
  "release_url": "https://pypi.org/project/neptune-optuna/1.1.0/",
  "requires_dist": [
    "deepdiff (>=6.2.3) ; extra == \"dev\"",
    "importlib-metadata ; python_version < \"3.8\"",
    "neptune (>=1.0.0) ; extra == \"dev\"",
    "optuna (>=2.4.0)",
    "plotly",
    "pre-commit ; extra == \"dev\"",
    "pytest (>=5.0) ; extra == \"dev\"",
    "pytest-cov (==2.10.1) ; extra == \"dev\"",
    "scikit-learn"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "neptune.ai optuna integration library",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "contact@neptune.ai",
    "neptune"
  ],
  "kwds": "neptune_optuna_integration optuna neptunecallback monitoring neptune",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_neptune_optuna",
  "homepage": "https://neptune.ai/",
  "release_count": 13,
  "dependency_ids": [
    "pypi_deepdiff",
    "pypi_importlib_metadata",
    "pypi_neptune",
    "pypi_optuna",
    "pypi_plotly",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_scikit_learn"
  ]
}
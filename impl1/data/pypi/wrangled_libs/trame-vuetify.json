{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: javascript",
    "programming language :: python :: 3 :: only",
    "topic :: software development :: libraries :: application frameworks",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "trame-vuetify: material design widgets for trame\n===========================================================================\n\n.. image:: https://github.com/kitware/trame-vuetify/actions/workflows/test_and_release.yml/badge.svg\n    :target: https://github.com/kitware/trame-vuetify/actions/workflows/test_and_release.yml\n    :alt: test and release\n\ntrame-vuetify extend trame **widgets** and **ui** with all the beautiful vuetify ui components.\nvuetify is a ui library with beautifully handcrafted material components. no design skills required \u2014 everything you need to create amazing applications is at your fingertips.\n\nthis package is not supposed to be used by itself but rather should come as a dependency of **trame**.\nfor any specificity, please refer to `the trame documentation <https://kitware.github.io/trame/>`_.\n\n\ninstalling\n-----------------------------------------------------------\n\ntrame-vuetify can be installed with `pip <https://pypi.org/project/trame-vuetify/>`_:\n\n.. code-block:: bash\n\n    pip install --upgrade trame-vuetify\n\n\nusage\n-----------------------------------------------------------\n\nthe `trame tutorial <https://kitware.github.io/trame/docs/tutorial.html>`_ is the place to go to learn how to use the library and start building your own application.\n\nthe `api reference <https://trame.readthedocs.io/en/latest/index.html>`_ documentation provides api-level documentation.\n\nthe `vuetify website <https://vuetifyjs.com/en/>`_ is very well made for exploring components and understanding components' parameters and controls, while a reference to our wrapper api is available `here <https://trame-vuetify.readthedocs.io/en/latest/trame.html.vuetify.html>`_.\n\nthe way trame translate vue templates into plain python code is by doing the following.\n\n\nmaterial design widgets\n```````````````````````````````````````````````````````````\n\nfirst you need to import the `vuetify` module so you can instantiate the various material components like illustrated below. moreover, in the documentation the component names use dashes as separators while in python we use the camelcase notation for the class name.\n\n.. code-block:: python\n\n    from trame.widgets import vuetify\n\n    # <v-btn>hello world</v-btn>\n    btn = vuetify.vbtn(\"hello world\")\n\nboolean attributes\n```````````````````````````````````````````````````````````\n\nimplicit attribute values must be made explicit in python by assigning `true` to them.\n\n.. code-block:: python\n\n    # <v-text-field disabled />\n    vuetify.vtextfield(disabled=true)\n\n\ndash and colon separators\n```````````````````````````````````````````````````````````\n\nany special characters (`-` and `:`) become `_` in python.\n\n.. code-block:: python\n\n    # <v-text-field v-model=\"mytext\" />\n    vuetify.vtextfield(v_model=(\"mytext\",))\n\n\nevents\n```````````````````````````````````````````````````````````\n\nevents in vue are prefixed with a `@` but in python we declare them the same way we declare regular attributes.\n\n.. code-block:: python\n\n    def runmethod():\n        pass\n\n    # <v-btn @click=\"runmethod\" />\n    vuetify.vbtn(click=runmethod)\n\n\nlicense\n-----------------------------------------------------------\n\ntrame-vuetify is made available under the mit license. for more details, see `license <https://github.com/kitware/trame-vuetify/blob/master/license>`_\nthis license has been chosen to match the one use by `vuetify <https://github.com/vuetifyjs/vuetify/blob/master/license.md>`_ which is instrumental for making that library possible.\n\n\ncommunity\n-----------------------------------------------------------\n\n`trame <https://kitware.github.io/trame/>`_ | `discussions <https://github.com/kitware/trame/discussions>`_ | `issues <https://github.com/kitware/trame/issues>`_ | `roadmap <https://github.com/kitware/trame/projects/1>`_ | `contact us <https://www.kitware.com/contact-us/>`_\n\n.. image:: https://zenodo.org/badge/410108340.svg\n    :target: https://zenodo.org/badge/latestdoi/410108340\n\n\nenjoying trame?\n-----------------------------------------------------------\n\nshare your experience `with a testimonial <https://github.com/kitware/trame/issues/18>`_ or `with a brand approval <https://github.com/kitware/trame/issues/19>`_.\n",
  "docs_url": null,
  "keywords": "python,interactive,web,application,framework",
  "license": "mit",
  "name": "trame-vuetify",
  "package_url": "https://pypi.org/project/trame-vuetify/",
  "project_url": "https://pypi.org/project/trame-vuetify/",
  "project_urls": null,
  "release_url": "https://pypi.org/project/trame-vuetify/2.3.1/",
  "requires_dist": [
    "trame-client"
  ],
  "requires_python": "",
  "summary": "vuetify widgets for trame",
  "version": "2.3.1",
  "releases": [],
  "developers": [
    "kitware_inc"
  ],
  "kwds": "vuetify vuetifyjs vue widgets ui",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_trame_vuetify",
  "homepage": "",
  "release_count": 16,
  "dependency_ids": [
    "pypi_trame_client"
  ]
}
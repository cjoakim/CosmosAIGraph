{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: implementation :: pypy",
    "topic :: utilities"
  ],
  "description": "puremagic\n=========\n\npuremagic is a pure python module that will identify a file based off\nit's magic numbers.\n\n|coveragestatus| |license| |pypi|\n\nit is designed to be minimalistic and inherently cross platform\ncompatible. it is also designed to be a stand in for python-magic, it\nincorporates the functions from\\_file(filename[, mime]) and\nfrom\\_string(string[, mime]) however the magic\\_file() and\nmagic\\_string() are more powerful and will also display confidence and\nduplicate matches.\n\nit does not try to match files off non-magic string. in other words it\nwill not search for a string within a certain window of bytes like\nothers might.\n\nadvantages over using a wrapper for 'file' or 'libmagic':\n\n-  faster\n-  lightweight\n-  cross platform compatible\n-  no dependencies\n\ndisadvantages:\n\n-  does not have as many file types\n-  no multilingual comments\n-  duplications due to small or reused magic numbers\n\n(help fix the first two disadvantages by contributing!)\n\ncompatibility\n~~~~~~~~~~~~~\n\n-  python 3.7+\n-  pypy\n\nusing travis-ci to run continuous integration tests on listed platforms.\n\ninstall from pypy\n-----------------\n\n.. code:: bash\n\n        $ pip install puremagic\n\non linux environments, you may want to be clear you are using python3\n\n.. code:: bash\n\n        $ python3 -m pip install puremagic\n\n\ninstall from source\n-------------------\n\nin either a virtualenv or globally, simply run:\n\n.. code:: bash\n\n        $ python setup.py install\n\nusage\n-----\n\n\"from_file\" will return the most likely file extension. \"magic_file\"\nwill give you every possible result it finds, as well as the confidence.\n\n.. code:: python\n\n        import puremagic\n\n        filename = \"test/resources/images/test.gif\"\n\n        ext = puremagic.from_file(filename)\n        # '.gif'\n\n        puremagic.magic_file(filename)\n        # [['.gif', 'image/gif', 'graphics interchange format file (gif87a)', 0.7],\n        #  ['.gif', '', 'gif file', 0.5]]\n\nwith \"magic_file\" it gives each match, highest confidence first:\n\n-  possible extension(s)\n-  mime type\n-  description\n-  confidence (all headers have to perfectly match to make the list,\n   however this orders it by longest header, therefore most precise,\n   first)\n\nif you already have a file open, or raw byte string, you could also use:\n\n* from_string\n* from_stream\n* magic_string\n* magic_stream\n\n.. code:: python\n\n        with open(r\"test\\resources\\video\\test.mp4\", \"rb\") as file:\n            print(puremagic.magic_stream(file))\n\n        # [puremagicwithconfidence(byte_match=b'ftypisom', offset=4, extension='.mp4', mime_type='video/mp4', name='mpeg-4 video', confidence=0.8),\n        #  puremagicwithconfidence(byte_match=b'iso2avc1mp4', offset=20, extension='.mp4', mime_type='video/mp4', name='mp4 video', confidence=0.8)]\n\nscript\n------\n\n*usage*\n\n.. code:: bash\n\n        $ python -m puremagic [options] filename <filename2>...\n\n*examples*\n\n.. code:: bash\n\n        $ python -m puremagic test/resources/images/test.gif\n        'test/resources/images/test.gif' : .gif\n\n        $ python -m puremagic -m test/resources/images/test.gif test/resources/audio/test.mp3\n        'test/resources/images/test.gif' : image/gif\n        'test/resources/audio/test.mp3' : audio/mpeg\n\nfaq\n---\n\n*the file type is actually x but it's showing up as y with higher\nconfidence?*\n\nthis can happen when the file's signature happens to match a subset of a\nfile standard. the subset signature will be longer, therefore report\nwith greater confidence, because it will have both the base file type\nsignature plus the additional subset one.\n\n*you don't have sliding offsets that could better detect plenty of\ncommon formats, why's that?*\n\ndesign choice, so it will be a lot faster and more accurate. without\nmore intelligent or deeper identification past a sliding offset i don't\nfeel comfortable including it as part of a 'magic number' library.\n\n*your version isn't as complete as i want it to be, where else should i\nlook?*\n\nlook into python modules that wrap around libmagic or use something like\napache tika.\n\nacknowledgements\n----------------\n\ngary c. kessler\n\n\nfor use of his file signature tables, available at:\nhttp://www.garykessler.net/library/file_sigs.html\n\nfreedesktop.org\n\nfor use of their shared-mime-info file (even if they do use xml, blea), available at:\nhttps://cgit.freedesktop.org/xdg/shared-mime-info/\n\nlicense\n-------\n\nmit licenced, see license, copyright (c) 2013-2023 chris griffith\n\n.. |coveragestatus| image:: https://coveralls.io/repos/github/cdgriffith/puremagic/badge.svg?branch=develop\n   :target: https://coveralls.io/github/cdgriffith/puremagic?branch=develop\n.. |pypi| image:: https://img.shields.io/pypi/v/puremagic.svg?maxage=2592000\n   :target: https://pypi.python.org/pypi/puremagic/\n.. |license| image:: https://img.shields.io/pypi/l/puremagic.svg\n   :target: https://pypi.python.org/pypi/puremagic/\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "puremagic",
  "package_url": "https://pypi.org/project/puremagic/",
  "project_url": "https://pypi.org/project/puremagic/",
  "project_urls": {
    "Homepage": "https://github.com/cdgriffith/puremagic"
  },
  "release_url": "https://pypi.org/project/puremagic/1.15/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "pure python implementation of magic file detection",
  "version": "1.15",
  "releases": [],
  "developers": [
    "chris@cdgriffith.com",
    "chris_griffith"
  ],
  "kwds": "magic_file byte_match magic_string puremagic file_sigs",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_puremagic",
  "homepage": "https://github.com/cdgriffith/puremagic",
  "release_count": 14,
  "dependency_ids": []
}
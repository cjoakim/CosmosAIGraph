{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: healthcare industry",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "operating system :: macos :: macos x",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: astronomy",
    "topic :: scientific/engineering :: atmospheric science",
    "topic :: scientific/engineering :: bio-informatics",
    "topic :: scientific/engineering :: information analysis",
    "topic :: scientific/engineering :: medical science apps.",
    "topic :: system :: distributed computing",
    "topic :: utilities"
  ],
  "description": "common workflow language reference implementation\n#############################################################################################\n``cwltool``: the reference reference implementation of the common workflow language standards\n#############################################################################################\n\n|linux status| |coverage status| |docs status|\n\npypi: |pypi version| |pypi downloads month| |total pypi downloads|\n\nconda: |conda version| |conda installs|\n\ndebian: |debian testing package| |debian stable package|\n\nquay.io (docker): |quay.io container|\n\n.. |linux status| image:: https://github.com/common-workflow-language/cwltool/actions/workflows/ci-tests.yml/badge.svg?branch=main\n   :target: https://github.com/common-workflow-language/cwltool/actions/workflows/ci-tests.yml\n\n.. |debian stable package| image:: https://badges.debian.net/badges/debian/stable/cwltool/version.svg\n   :target: https://packages.debian.org/stable/cwltool\n\n.. |debian testing package| image:: https://badges.debian.net/badges/debian/testing/cwltool/version.svg\n   :target: https://packages.debian.org/testing/cwltool\n\n.. |coverage status| image:: https://img.shields.io/codecov/c/github/common-workflow-language/cwltool.svg\n   :target: https://codecov.io/gh/common-workflow-language/cwltool\n\n.. |pypi version| image:: https://badge.fury.io/py/cwltool.svg\n   :target: https://badge.fury.io/py/cwltool\n\n.. |pypi downloads month| image:: https://pepy.tech/badge/cwltool/month\n   :target: https://pepy.tech/project/cwltool\n\n.. |total pypi downloads| image:: https://static.pepy.tech/personalized-badge/cwltool?period=total&units=international_system&left_color=black&right_color=orange&left_text=total%20pypi%20downloads\n   :target: https://pepy.tech/project/cwltool\n\n.. |conda version| image:: https://anaconda.org/conda-forge/cwltool/badges/version.svg\n   :target: https://anaconda.org/conda-forge/cwltool\n\n.. |conda installs| image:: https://anaconda.org/conda-forge/cwltool/badges/downloads.svg\n   :target: https://anaconda.org/conda-forge/cwltool\n\n.. |quay.io container| image:: https://quay.io/repository/commonwl/cwltool/status\n   :target: https://quay.io/repository/commonwl/cwltool\n\n.. |docs status| image:: https://readthedocs.org/projects/cwltool/badge/?version=latest\n   :target: https://cwltool.readthedocs.io/en/latest/?badge=latest\n   :alt: documentation status\n\nthis is the reference implementation of the `common workflow language open\nstandards <https://www.commonwl.org/>`_.  it is intended to be feature complete\nand provide comprehensive validation of cwl\nfiles as well as provide other tools related to working with cwl.\n\n``cwltool`` is written and tested for\n`python <https://www.python.org/>`_ ``3.x {x = 6, 8, 9, 10, 11}``\n\nthe reference implementation consists of two packages.  the ``cwltool`` package\nis the primary python module containing the reference implementation in the\n``cwltool`` module and console executable by the same name.\n\nthe ``cwlref-runner`` package is optional and provides an additional entry point\nunder the alias ``cwl-runner``, which is the implementation-agnostic name for the\ndefault cwl interpreter installed on a host.\n\n``cwltool`` is provided by the cwl project, `a member project of software freedom conservancy <https://sfconservancy.org/news/2018/apr/11/cwl-new-member-project/>`_\nand our `many contributors <https://github.com/common-workflow-language/cwltool/graphs/contributors>`_.\n\n.. contents:: table of contents\n\n*******\ninstall\n*******\n\n``cwltool`` packages\n====================\n\nyour operating system may offer cwltool directly. for `debian <https://tracker.debian.org/pkg/cwltool>`_, `ubuntu <https://launchpad.net/ubuntu/+source/cwltool>`_,\nand similar linux distribution try\n\n.. code:: bash\n\n   sudo apt-get install cwltool\n\nif you encounter an error, first try to update package information by using\n\n.. code:: bash\n\n   sudo apt-get update\n\nif you are running macos x or other unixes and you want to use packages prepared by the conda-forge project, then\nplease follow the install instructions for `conda-forge <https://conda-forge.org/#about>`_ (if you haven't already) and then\n\n.. code:: bash\n\n   conda install -c conda-forge cwltool\n\nall of the above methods of installing ``cwltool`` use packages that might contain bugs already fixed in newer versions or be missing desired features.\nif the packaged version of ``cwltool`` available to you is too old, then we recommend installing using ``pip`` and ``venv``\n\n.. code:: bash\n\n   python3 -m venv env      # create a virtual environment named 'env' in the current directory\n   source env/bin/activate  # activate environment before installing `cwltool`\n\nthen install the latest ``cwlref-runner`` package from pypi (which will install the latest ``cwltool`` package as\nwell)\n\n.. code:: bash\n\n  pip install cwlref-runner\n\nif installing alongside another cwl implementation (like ``toil-cwl-runner`` or ``arvados-cwl-runner``) then instead run\n\n.. code:: bash\n\n  pip install cwltool\n\nms windows users\n================\n\n1. `install windows subsystem for linux 2 and docker desktop <https://docs.docker.com/docker-for-windows/wsl/#prerequisites>`_. \n2. `install debian from the microsoft store <https://www.microsoft.com/en-us/p/debian/9msvkqc78pk6>`_.\n3. set debian as your default wsl 2 distro: ``wsl --set-default debian``.\n4. return to the docker desktop, choose ``settings`` \u2192 ``resources`` \u2192 ``wsl integration`` and under \"enable integration with additional distros\" select \"debian\",\n5. reboot if you have not yet already.\n6. launch debian and follow the linux instructions above (``apt-get install cwltool`` or use the ``venv`` method)\n\nnetwork problems from within wsl2? try `these instructions <https://github.com/microsoft/wsl/issues/4731#issuecomment-702176954>`_ followed by ``wsl --shutdown``.\n\n``cwltool`` development version\n===============================\n\nor you can skip the direct ``pip`` commands above and install the latest development version of ``cwltool``:\n\n.. code:: bash\n\n  git clone https://github.com/common-workflow-language/cwltool.git # clone (copy) the cwltool git repository\n  cd cwltool           # change to source directory that git clone just downloaded\n  pip install .[deps]  # installs ``cwltool`` from source\n  cwltool --version    # check if the installation works correctly\n\nremember, if co-installing multiple cwl implementations, then you need to\nmaintain which implementation ``cwl-runner`` points to via a symbolic file\nsystem link or `another facility <https://wiki.debian.org/debianalternatives>`_.\n\nrecommended software\n====================\n\nwe strongly suggested to have the following installed:\n\n* one of the following software container engines\n\n  * `podman <https://podman.io/getting-started/installation>`_\n  * `docker <https://docs.docker.com/engine/install/>`_\n  * singularity/apptainer: see `using singularity`_\n  * udocker: see `using udocker`_\n\n* `node.js <https://nodejs.org/en/download/>`_ for evaluating cwl expressions quickly\n  (required for `udocker` users, optional but recommended for the other container engines).\n\nwithout these, some examples in the cwl tutorials at http://www.commonwl.org/user_guide/ may not work.\n\n***********************\nrun on the command line\n***********************\n\nsimple command::\n\n  cwl-runner my_workflow.cwl my_inputs.yaml\n\nor if you have multiple cwl implementations installed and you want to override\nthe default cwl-runner then use::\n\n  cwltool my_workflow.cwl my_inputs.yml\n\nyou can set cwltool options in the environment with ``cwltool_options``,\nthese will be inserted at the beginning of the command line::\n\n  export cwltool_options=\"--debug\"\n\nuse with boot2docker on macos\n=============================\nboot2docker runs docker inside a virtual machine, and it only mounts ``users``\non it. the default behavior of cwl is to create temporary directories under e.g.\n``/var`` which is not accessible to docker containers.\n\nto run cwl successfully with boot2docker you need to set the ``--tmpdir-prefix``\nand ``--tmp-outdir-prefix`` to somewhere under ``/users``::\n\n    $ cwl-runner --tmp-outdir-prefix=/users/username/project --tmpdir-prefix=/users/username/project wc-tool.cwl wc-job.json\n\nusing udocker\n=============\n\nsome shared computing environments don't support docker software containers for technical or policy reasons.\nas a workaround, the cwl reference runner supports using the `udocker <https://github.com/indigo-dc/udocker>`_\nprogram on linux using ``--udocker``.\n\nudocker installation: https://indigo-dc.github.io/udocker/installation_manual.html\n\nrun `cwltool` just as you usually would, but with ``--udocker`` prior to the workflow path:\n\n.. code:: bash\n\n  cwltool --udocker https://github.com/common-workflow-language/common-workflow-language/raw/main/v1.0/v1.0/test-cwl-out2.cwl https://github.com/common-workflow-language/common-workflow-language/raw/main/v1.0/v1.0/empty.json\n\nas was mentioned in the `recommended software`_ section,\n\nusing singularity\n=================\n\n``cwltool`` can also use `singularity <https://github.com/hpcng/singularity/releases/>`_ version 2.6.1\nor later as a docker container runtime.\n``cwltool`` with singularity will run software containers specified in\n``dockerrequirement`` and therefore works with docker images only, native\nsingularity images are not supported. to use singularity as the docker container\nruntime, provide ``--singularity`` command line option to ``cwltool``.\nwith singularity, ``cwltool`` can pass all cwl v1.0 conformance tests, except\nthose involving docker container entrypoints.\n\nexample\n\n.. code:: bash\n\n  cwltool --singularity https://github.com/common-workflow-language/common-workflow-language/raw/main/v1.0/v1.0/cat3-tool-mediumcut.cwl https://github.com/common-workflow-language/common-workflow-language/raw/main/v1.0/v1.0/cat-job.json\n\nrunning a tool or workflow from remote or local locations\n=========================================================\n\n``cwltool`` can run tool and workflow descriptions on both local and remote\nsystems via its support for http[s] urls.\n\ninput job files and workflow steps (via the `run` directive) can reference cwl\ndocuments using absolute or relative local filesystem paths. if a relative path\nis referenced and that document isn't found in the current directory, then the\nfollowing locations will be searched:\nhttp://www.commonwl.org/v1.0/commandlinetool.html#discovering_cwl_documents_on_a_local_filesystem\n\nyou can also use `cwldep <https://github.com/common-workflow-language/cwldep>`_\nto manage dependencies on external tools and workflows.\n\noverriding workflow requirements at load time\n=============================================\n\nsometimes a workflow needs additional requirements to run in a particular\nenvironment or with a particular dataset.  to avoid the need to modify the\nunderlying workflow, cwltool supports requirement \"overrides\".\n\nthe format of the \"overrides\" object is a mapping of item identifier (workflow,\nworkflow step, or command line tool) to the process requirements that should be applied.\n\n.. code:: yaml\n\n  cwltool:overrides:\n    echo.cwl:\n      requirements:\n        envvarrequirement:\n          envdef:\n            message: override_value\n\noverrides can be specified either on the command line, or as part of the job\ninput document.  workflow steps are identified using the name of the workflow\nfile followed by the step name as a document fragment identifier \"#id\".\noverride identifiers are relative to the top-level workflow document.\n\n.. code:: bash\n\n  cwltool --overrides overrides.yml my-tool.cwl my-job.yml\n\n.. code:: yaml\n\n  input_parameter1: value1\n  input_parameter2: value2\n  cwltool:overrides:\n    workflow.cwl#step1:\n      requirements:\n        envvarrequirement:\n          envdef:\n            message: override_value\n\n.. code:: bash\n\n  cwltool my-tool.cwl my-job-with-overrides.yml\n\n\ncombining parts of a workflow into a single document\n====================================================\n\nuse ``--pack`` to combine a workflow made up of multiple files into a\nsingle compound document.  this operation takes all the cwl files\nreferenced by a workflow and builds a new cwl document with all\nprocess objects (commandlinetool and workflow) in a list in the\n``$graph`` field.  cross references (such as ``run:`` and ``source:``\nfields) are updated to internal references within the new packed\ndocument.  the top-level workflow is named ``#main``.\n\n.. code:: bash\n\n  cwltool --pack my-wf.cwl > my-packed-wf.cwl\n\n\nrunning only part of a workflow\n===============================\n\nyou can run a partial workflow with the ``--target`` (``-t``) option.  this\ntakes the name of an output parameter, workflow step, or input\nparameter in the top-level workflow.  you may provide multiple\ntargets.\n\n.. code:: bash\n\n  cwltool --target step3 my-wf.cwl\n\nif a target is an output parameter, it will only run only the steps\nthat contribute to that output.  if a target is a workflow step, it\nwill run the workflow starting from that step.  if a target is an\ninput parameter, it will only run the steps connected to\nthat input.\n\nuse ``--print-targets`` to get a listing of the targets of a workflow.\nto see which steps will run, use ``--print-subgraph`` with\n``--target`` to get a printout of the workflow subgraph for the\nselected targets.\n\n.. code:: bash\n\n  cwltool --print-targets my-wf.cwl\n\n  cwltool --target step3 --print-subgraph my-wf.cwl > my-wf-starting-from-step3.cwl\n\n\nvisualizing a cwl document\n==========================\n\nthe ``--print-dot`` option will print a file suitable for graphviz ``dot`` program.  here is a bash onliner to generate a scalable vector graphic (svg) file:\n\n.. code:: bash\n\n  cwltool --print-dot my-wf.cwl | dot -tsvg > my-wf.svg\n\nmodeling a cwl document as rdf\n==============================\n\ncwl documents can be expressed as rdf triple graphs.\n\n.. code:: bash\n\n  cwltool --print-rdf --rdf-serializer=turtle mywf.cwl\n\n\nenvironment variables in cwltool\n================================\n\nthis reference implementation supports several ways of setting\nenvironment variables for tools, in addition to the standard\n``envvarrequirement``. the sequence of steps applied to create the\nenvironment is:\n\n0. if the ``--preserve-entire-environment`` flag is present, then begin with the current\n   environment, else begin with an empty environment.\n\n1. add any variables specified by ``--preserve-environment`` option(s).\n\n2. set ``tmpdir`` and ``home`` per `the cwl v1.0+ commandlinetool specification <https://www.commonwl.org/v1.0/commandlinetool.html#runtime_environment>`_.\n\n3. apply any ``envvarrequirement`` from the ``commandlinetool`` description.\n\n4. apply any manipulations required by any ``cwltool:mpirequirement`` extensions.\n\n5. substitute any secrets required by ``secrets`` extension.\n\n6. modify the environment in response to ``softwarerequirement`` (see below).\n\n\nleveraging softwarerequirements (beta)\n--------------------------------------\n\ncwl tools may be decorated with ``softwarerequirement`` hints that cwltool\nmay in turn use to resolve to packages in various package managers or\ndependency management systems such as `environment modules\n<http://modules.sourceforge.net/>`__.\n\nutilizing ``softwarerequirement`` hints using cwltool requires an optional\ndependency, for this reason be sure to use specify the ``deps`` modifier when\ninstalling cwltool. for instance::\n\n  $ pip install 'cwltool[deps]'\n\ninstalling cwltool in this fashion enables several new command line options.\nthe most general of these options is ``--beta-dependency-resolvers-configuration``.\nthis option allows one to specify a dependency resolver's configuration file.\nthis file may be specified as either xml or yaml and very simply describes various\nplugins to enable to \"resolve\" ``softwarerequirement`` dependencies.\n\nusing these hints will allow cwltool to modify the environment in\nwhich your tool runs, for example by loading one or more environment\nmodules. the environment is constructed as above, then the environment\nmay modified by the selected tool resolver.  this currently means that\nyou cannot override any environment variables set by the selected tool\nresolver. note that the environment given to the configured dependency\nresolver has the variable `_cwltool` set to `1` to allow introspection.\n\nto discuss some of these plugins and how to configure them, first consider the\nfollowing ``hint`` definition for an example cwl tool.\n\n.. code:: yaml\n\n  softwarerequirement:\n    packages:\n    - package: seqtk\n      version:\n      - r93\n\nnow imagine deploying cwltool on a cluster with software modules installed\nand that a ``seqtk`` module is available at version ``r93``. this means cluster\nusers likely won't have the binary ``seqtk`` on their ``path`` by default, but after\nsourcing this module with the command ``modulecmd sh load seqtk/r93`` ``seqtk`` is\navailable on the ``path``. a simple dependency resolvers configuration file, called\n``dependency-resolvers-conf.yml`` for instance, that would enable cwltool to source\nthe correct module environment before executing the above tool would simply be:\n\n.. code:: yaml\n\n  - type: modules\n\nthe outer list indicates that one plugin is being enabled, the plugin parameters are\ndefined as a dictionary for this one list item. there is only one required parameter\nfor the plugin above, this is ``type`` and defines the plugin type. this parameter\nis required for all plugins. the available plugins and the parameters\navailable for each are documented (incompletely) `here\n<https://docs.galaxyproject.org/en/latest/admin/dependency_resolvers.html>`__.\nunfortunately, this documentation is in the context of galaxy tool\n``requirement`` s instead of cwl ``softwarerequirement`` s, but the concepts map fairly directly.\n\ncwltool is distributed with an example of such seqtk tool and sample corresponding\njob. it could executed from the cwltool root using a dependency resolvers\nconfiguration file such as the above one using the command::\n\n  cwltool --beta-dependency-resolvers-configuration /path/to/dependency-resolvers-conf.yml \\\n      tests/seqtk_seq.cwl \\\n      tests/seqtk_seq_job.json\n\nthis example demonstrates both that cwltool can leverage\nexisting software installations and also handle workflows with dependencies\non different versions of the same software and libraries. however the above\nexample does require an existing module setup so it is impossible to test this example\n\"out of the box\" with cwltool. for a more isolated test that demonstrates all\nthe same concepts - the resolver plugin type ``galaxy_packages`` can be used.\n\n\"galaxy packages\" are a lighter-weight alternative to environment modules that are\nreally just defined by a way to lay out directories into packages and versions\nto find little scripts that are sourced to modify the environment. they have\nbeen used for years in galaxy community to adapt galaxy tools to cluster\nenvironments but require neither knowledge of galaxy nor any special tools to\nsetup. these should work just fine for cwl tools.\n\nthe cwltool source code repository's test directory is setup with a very simple\ndirectory that defines a set of \"galaxy  packages\" (but really just defines one\npackage named ``random-lines``). the directory layout is simply::\n\n  tests/test_deps_env/\n    random-lines/\n      1.0/\n        env.sh\n\nif the ``galaxy_packages`` plugin is enabled and pointed at the\n``tests/test_deps_env`` directory in cwltool's root and a ``softwarerequirement``\nsuch as the following is encountered.\n\n.. code:: yaml\n\n  hints:\n    softwarerequirement:\n      packages:\n      - package: 'random-lines'\n        version:\n        - '1.0'\n\nthen cwltool will simply find that ``env.sh`` file and source it before executing\nthe corresponding tool. that ``env.sh`` script is only responsible for modifying\nthe job's ``path`` to add the required binaries.\n\nthis is a full example that works since resolving \"galaxy packages\" has no\nexternal requirements. try it out by executing the following command from cwltool's\nroot directory::\n\n  cwltool --beta-dependency-resolvers-configuration tests/test_deps_env_resolvers_conf.yml \\\n      tests/random_lines.cwl \\\n      tests/random_lines_job.json\n\nthe resolvers configuration file in the above example was simply:\n\n.. code:: yaml\n\n  - type: galaxy_packages\n    base_path: ./tests/test_deps_env\n\nit is possible that the ``softwarerequirement`` s in a given cwl tool will not\nmatch the module names for a given cluster. such requirements can be re-mapped\nto specific deployed packages or versions using another file specified using\nthe resolver plugin parameter `mapping_files`. we will\ndemonstrate this using `galaxy_packages,` but the concepts apply equally well\nto environment modules or conda packages (described below), for instance.\n\nso consider the resolvers configuration file.\n(`tests/test_deps_env_resolvers_conf_rewrite.yml`):\n\n.. code:: yaml\n\n  - type: galaxy_packages\n    base_path: ./tests/test_deps_env\n    mapping_files: ./tests/test_deps_mapping.yml\n\nand the corresponding mapping configuration file (`tests/test_deps_mapping.yml`):\n\n.. code:: yaml\n\n  - from:\n      name: randomlines\n      version: 1.0.0-rc1\n    to:\n      name: random-lines\n      version: '1.0'\n\nthis is saying if cwltool encounters a requirement of ``randomlines`` at version\n``1.0.0-rc1`` in a tool, to rewrite to our specific plugin as ``random-lines`` at\nversion ``1.0``. cwltool has such a test tool called ``random_lines_mapping.cwl``\nthat contains such a source ``softwarerequirement``. to try out this example with\nmapping, execute the following command from the cwltool root directory::\n\n  cwltool --beta-dependency-resolvers-configuration tests/test_deps_env_resolvers_conf_rewrite.yml \\\n      tests/random_lines_mapping.cwl \\\n      tests/random_lines_job.json\n\nthe previous examples demonstrated leveraging existing infrastructure to\nprovide requirements for cwl tools. if instead a real package manager is used\ncwltool has the opportunity to install requirements as needed. while initial\nsupport for homebrew/linuxbrew plugins is available, the most developed such\nplugin is for the `conda <https://conda.io/docs/#>`__ package manager. conda has the nice properties\nof allowing multiple versions of a package to be installed simultaneously,\nnot requiring evaluated permissions to install conda itself or packages using\nconda, and being cross-platform. for these reasons, cwltool may run as a normal\nuser, install its own conda environment and manage multiple versions of conda packages\non linux and mac os x.\n\nthe conda plugin can be endlessly configured, but a sensible set of defaults\nthat has proven a powerful stack for dependency management within the galaxy tool\ndevelopment ecosystem can be enabled by simply passing cwltool the\n``--beta-conda-dependencies`` flag.\n\nwith this, we can use the seqtk example above without docker or any externally managed services - cwltool should install everything it needs\nand create an environment for the tool. try it out with the following command::\n\n  cwltool --beta-conda-dependencies tests/seqtk_seq.cwl tests/seqtk_seq_job.json\n\nthe cwl specification allows uris to be attached to ``softwarerequirement`` s\nthat allow disambiguation of package names. if the mapping files described above\nallow deployers to adapt tools to their infrastructure, this mechanism allows\ntools to adapt their requirements to multiple package managers. to demonstrate\nthis within the context of the seqtk, we can simply break the package name we\nuse and then specify a specific conda package as follows:\n\n.. code:: yaml\n\n  hints:\n    softwarerequirement:\n      packages:\n      - package: seqtk_seq\n        version:\n        - '1.2'\n        specs:\n        - https://anaconda.org/bioconda/seqtk\n        - https://packages.debian.org/sid/seqtk\n\nthe example can be executed using the command::\n\n  cwltool --beta-conda-dependencies tests/seqtk_seq_wrong_name.cwl tests/seqtk_seq_job.json\n\nthe plugin framework for managing the resolution of these software requirements\nas maintained as part of `galaxy-tool-util <https://github.com/galaxyproject/galaxy/tree/dev/packages/tool_util>`__ - a small,\nportable subset of the galaxy project. more information on configuration and implementation can be found\nat the following links:\n\n- `dependency resolvers in galaxy <https://docs.galaxyproject.org/en/latest/admin/dependency_resolvers.html>`__\n- `conda for [galaxy] tool dependencies <https://docs.galaxyproject.org/en/latest/admin/conda_faq.html>`__\n- `mapping files - implementation <https://github.com/galaxyproject/galaxy/commit/495802d229967771df5b64a2f79b88a0eaf00edb>`__\n- `specifications - implementation <https://github.com/galaxyproject/galaxy/commit/81d71d2e740ee07754785306e4448f8425f890bc>`__\n- `initial cwltool integration pull request <https://github.com/common-workflow-language/cwltool/pull/214>`__\n\nuse with ga4gh tool registry api\n================================\n\ncwltool can launch tools directly from `ga4gh tool registry api`_ endpoints.\n\nby default, cwltool searches https://dockstore.org/ .  use ``--add-tool-registry`` to add other registries to the search path.\n\nfor example ::\n\n  cwltool quay.io/collaboratory/dockstore-tool-bamstats:develop test.json\n\nand (defaults to latest when a version is not specified) ::\n\n  cwltool quay.io/collaboratory/dockstore-tool-bamstats test.json\n\nfor this example, grab the test.json (and input file) from https://github.com/cancercollaboratory/dockstore-tool-bamstats ::\n\n  wget https://dockstore.org/api/api/ga4gh/v2/tools/quay.io%2fbriandoconnor%2fdockstore-tool-bamstats/versions/develop/plain-cwl/descriptor/test.json\n  wget https://github.com/cancercollaboratory/dockstore-tool-bamstats/raw/develop/rna.srr948778.bam\n\n\n.. _`ga4gh tool registry api`: https://github.com/ga4gh/tool-registry-schemas\n\nrunning mpi-based tools that need to be launched\n================================================\n\ncwltool supports an extension to the cwl spec\n``http://commonwl.org/cwltool#mpirequirement``. when the tool\ndefinition has this in its ``requirements``/``hints`` section, and\ncwltool has been run with ``--enable-ext``, then the tool's command\nline will be extended with the commands needed to launch it with\n``mpirun`` or similar. you can specify the number of processes to\nstart as either a literal integer or an expression (that will result\nin an integer). for example::\n\n  #!/usr/bin/env cwl-runner\n  cwlversion: v1.1\n  class: commandlinetool\n  $namespaces:\n    cwltool: \"http://commonwl.org/cwltool#\"\n  requirements:\n    cwltool:mpirequirement:\n      processes: $(inputs.nproc)\n  inputs:\n    nproc:\n      type: int\n\ninteraction with containers: the mpirequirement currently prepends its\ncommands to the front of the command line that is constructed. if you\nwish to run a containerized application in parallel, for simple use\ncases, this does work with singularity, depending upon the platform\nsetup. however, this combination should be considered \"alpha\" -- please\ndo report any issues you have! this does not work with docker at the\nmoment. (more precisely, you get `n` copies of the same single process\nimage run at the same time that cannot communicate with each other.)\n\nthe host-specific parameters are configured in a simple yaml file\n(specified with the ``--mpi-config-file`` flag). the allowed keys are\ngiven in the following table; all are optional.\n\n+----------------+------------------+----------+------------------------------+\n| key            | type             | default  | description                  |\n+================+==================+==========+==============================+\n| runner         | str              | \"mpirun\" | the primary command to use.  |\n+----------------+------------------+----------+------------------------------+\n| nproc_flag     | str              | \"-n\"     | flag to set number of        |\n|                |                  |          | processes to start.          |\n+----------------+------------------+----------+------------------------------+\n| default_nproc  | int              | 1        | default number of processes. |\n+----------------+------------------+----------+------------------------------+\n| extra_flags    | list[str]        | []       | a list of any other flags to |\n|                |                  |          | be added to the runner's     |\n|                |                  |          | command line before          |\n|                |                  |          | the ``basecommand``.         |\n+----------------+------------------+----------+------------------------------+\n| env_pass       | list[str]        | []       | a list of environment        |\n|                |                  |          | variables that should be     |\n|                |                  |          | passed from the host         |\n|                |                  |          | environment through to the   |\n|                |                  |          | tool (e.g., giving the       |\n|                |                  |          | node list as set by your     |\n|                |                  |          | scheduler).                  |\n+----------------+------------------+----------+------------------------------+\n| env_pass_regex | list[str]        | []       | a list of python regular     |\n|                |                  |          | expressions that will be     |\n|                |                  |          | matched against the host's   |\n|                |                  |          | environment. those that match|\n|                |                  |          | will be passed through.      |\n+----------------+------------------+----------+------------------------------+\n| env_set        | mapping[str,str] | {}       | a dictionary whose keys are  |\n|                |                  |          | the environment variables set|\n|                |                  |          | and the values being the     |\n|                |                  |          | values.                      |\n+----------------+------------------+----------+------------------------------+\n\n\nenabling fast parser (experimental)\n===================================\n\nfor very large workflows, `cwltool` can spend a lot of time in\ninitialization, before the first step runs.  there is an experimental\nflag ``--fast-parser`` which can dramatically reduce the\ninitialization overhead, however as of this writing it has several limitations:\n\n- error reporting in general is worse than the standard parser, you will want to use it with workflows that you know are already correct.\n\n- it does not check for dangling links (these will become runtime errors instead of loading errors)\n\n- several other cases fail, as documented in https://github.com/common-workflow-language/cwltool/pull/1720\n\n***********\ndevelopment\n***********\n\nrunning tests locally\n=====================\n\n-  running basic tests ``(/tests)``:\n\nto run the basic tests after installing `cwltool` execute the following:\n\n.. code:: bash\n\n  pip install -rtest-requirements.txt\n  pytest   ## n.b. this requires node.js or docker to be available\n\nto run various tests in all supported python environments, we use `tox <https://github.com/common-workflow-language/cwltool/tree/main/tox.ini>`_. to run the test suite in all supported python environments\nfirst clone the complete code repository (see the ``git clone`` instructions above) and then run\nthe following in the terminal:\n``pip install \"tox<4\"; tox -p``\n\nlist of all environment can be seen using:\n``tox --listenvs``\nand running a specific test env using:\n``tox -e <env name>``\nand additionally run a specific test using this format:\n``tox -e py310-unit -- -v tests/test_examples.py::test_scandeps``\n\n-  running the entire suite of cwl conformance tests:\n\nthe github repository for the cwl specifications contains a script that tests a cwl\nimplementation against a wide array of valid cwl files using the `cwltest <https://github.com/common-workflow-language/cwltest>`_\nprogram\n\ninstructions for running these tests can be found in the common workflow language specification repository at https://github.com/common-workflow-language/common-workflow-language/blob/main/conformance_tests.md .\n\nimport as a module\n==================\n\nadd\n\n.. code:: python\n\n  import cwltool\n\nto your script.\n\nthe easiest way to use cwltool to run a tool or workflow from python is to use a factory\n\n.. code:: python\n\n  import cwltool.factory\n  fac = cwltool.factory.factory()\n\n  echo = fac.make(\"echo.cwl\")\n  result = echo(inp=\"foo\")\n\n  # result[\"out\"] == \"foo\"\n\n\ncwl tool control flow\n=====================\n\ntechnical outline of how cwltool works internally, for maintainers.\n\n#. use cwl ``load_tool()`` to load document.\n\n   #. fetches the document from file or url\n   #. applies preprocessing (syntax/identifier expansion and normalization)\n   #. validates the document based on cwlversion\n   #. if necessary, updates the document to the latest spec\n   #. constructs a process object using ``make_tool()``` callback.  this yields a\n      commandlinetool, workflow, or expressiontool.  for workflows, this\n      recursively constructs each workflow step.\n   #. to construct custom types for commandlinetool, workflow, or\n      expressiontool, provide a custom ``make_tool()``\n\n#. iterate on the ``job()`` method of the process object to get back runnable jobs.\n\n   #. ``job()`` is a generator method (uses the python iterator protocol)\n   #. each time the ``job()`` method is invoked in an iteration, it returns one\n      of: a runnable item (an object with a ``run()`` method), ``none`` (indicating\n      there is currently no work ready to run) or end of iteration (indicating\n      the process is complete.)\n   #. invoke the runnable item by calling ``run()``.  this runs the tool and gets output.\n   #. an output callback reports the output of a process.\n   #. ``job()`` may be iterated over multiple times.  it will yield all the work\n      that is currently ready to run and then yield none.\n\n#. ``workflow`` objects create a corresponding ``workflowjob`` and ``workflowjobstep`` objects to hold the workflow state for the duration of the job invocation.\n\n   #. the workflowjob iterates over each workflowjobstep and determines if the\n      inputs the step are ready.\n   #. when a step is ready, it constructs an input object for that step and\n      iterates on the ``job()`` method of the workflow job step.\n   #. each runnable item is yielded back up to top-level run loop\n   #. when a step job completes and receives an output callback, the\n      job outputs are assigned to the output of the workflow step.\n   #. when all steps are complete, the intermediate files are moved to a final\n      workflow output, intermediate directories are deleted, and the workflow's output callback is called.\n\n#. ``commandlinetool`` job() objects yield a single runnable object.\n\n   #. the commandlinetool ``job()`` method calls ``make_job_runner()`` to create a\n      ``commandlinejob`` object\n   #. the job method configures the commandlinejob object by setting public\n      attributes\n   #. the job method iterates over file and directories inputs to the\n      commandlinetool and creates a \"path map\".\n   #. files are mapped from their \"resolved\" location to a \"target\" path where\n      they will appear at tool invocation (for example, a location inside a\n      docker container.)  the target paths are used on the command line.\n   #. files are staged to targets paths using either docker volume binds (when\n      using containers) or symlinks (if not).  this staging step enables files\n      to be logically rearranged or renamed independent of their source layout.\n   #. the ``run()`` method of commandlinejob executes the command line tool or\n      docker container, waits for it to complete, collects output, and makes\n      the output callback.\n\nextension points\n================\n\nthe following functions can be passed to main() to override or augment\nthe listed behaviors.\n\nexecutor\n  ::\n\n    executor(tool, job_order_object, runtimecontext, logger)\n      (process, dict[text, any], runtimecontext) -> tuple[dict[text, any], text]\n\n  an implementation of the top-level workflow execution loop should\n  synchronously run a process object to completion and return the\n  output object.\n\nversionfunc\n  ::\n\n    ()\n      () -> text\n\n  return version string.\n\nlogger_handler\n  ::\n\n    logger_handler\n      logging.handler\n\n  handler object for logging.\n\nthe following functions can be set in loadingcontext to override or\naugment the listed behaviors.\n\nfetcher_constructor\n  ::\n\n    fetcher_constructor(cache, session)\n      (dict[unicode, unicode], requests.sessions.session) -> fetcher\n\n  construct a fetcher object with the supplied cache and http session.\n\nresolver\n  ::\n\n    resolver(document_loader, document)\n      (loader, union[text, dict[text, any]]) -> text\n\n  resolve a relative document identifier to an absolute one that can be fetched.\n\nthe following functions can be set in runtimecontext to override or\naugment the listed behaviors.\n\nconstruct_tool_object\n  ::\n\n    construct_tool_object(toolpath_object, loadingcontext)\n      (mutablemapping[text, any], loadingcontext) -> process\n\n  hook to construct a process object (eg commandlinetool) object from a document.\n\nselect_resources\n  ::\n\n    selectresources(request)\n      (dict[str, int], runtimecontext) -> dict[text, int]\n\n  take a resource request and turn it into a concrete resource assignment.\n\nmake_fs_access\n  ::\n\n    make_fs_access(basedir)\n      (text) -> stdfsaccess\n\n  return a file system access object.\n\nin addition, when providing custom subclasses of process objects, you can override the following methods:\n\ncommandlinetool.make_job_runner\n  ::\n\n    make_job_runner(runtimecontext)\n      (runtimecontext) -> type[jobbase]\n\n  create and return a job runner object (this implements concrete execution of a command line tool).\n\nworkflow.make_workflow_step\n  ::\n\n    make_workflow_step(toolpath_object, pos, loadingcontext, parentworkflowprov)\n      (dict[text, any], int, loadingcontext, optional[provenanceprofile]) -> workflowstep\n\n  create and return a workflow step object.\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "cwltool",
  "package_url": "https://pypi.org/project/cwltool/",
  "project_url": "https://pypi.org/project/cwltool/",
  "project_urls": {
    "Download": "https://github.com/common-workflow-language/cwltool",
    "Homepage": "https://github.com/common-workflow-language/cwltool"
  },
  "release_url": "https://pypi.org/project/cwltool/3.1.20231207110929/",
  "requires_dist": [
    "setuptools",
    "requests >=2.6.1",
    "ruamel.yaml <0.19,>=0.16",
    "rdflib <7.1.0,>=4.2.2",
    "shellescape <3.9,>=3.4.1",
    "schema-salad <9,>=8.4.20230426093816",
    "prov ==1.5.1",
    "mypy-extensions",
    "psutil >=5.6.6",
    "coloredlogs",
    "pydot >=1.4.1",
    "argcomplete",
    "pyparsing !=3.0.2",
    "cwl-utils >=0.32",
    "spython >=0.3.0",
    "importlib-resources >=1.4 ; python_version < \"3.9\"",
    "galaxy-tool-util !=23.0.1,!=23.0.2,!=23.0.3,!=23.0.4,!=23.0.5,<23.2,>=22.1.2 ; extra == 'deps'",
    "galaxy-util <23.2 ; extra == 'deps'"
  ],
  "requires_python": ">=3.8, <4",
  "summary": "common workflow language reference implementation",
  "version": "3.1.20231207110929",
  "releases": [],
  "developers": [
    "common-workflow-language@googlegroups.com",
    "common_workflow_language_working_group"
  ],
  "kwds": "make_workflow_step my_workflow workflowstep workflow workflows",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_cwltool",
  "homepage": "https://github.com/common-workflow-language/cwltool",
  "release_count": 425,
  "dependency_ids": [
    "pypi_argcomplete",
    "pypi_coloredlogs",
    "pypi_cwl_utils",
    "pypi_galaxy_tool_util",
    "pypi_galaxy_util",
    "pypi_importlib_resources",
    "pypi_mypy_extensions",
    "pypi_prov",
    "pypi_psutil",
    "pypi_pydot",
    "pypi_pyparsing",
    "pypi_rdflib",
    "pypi_requests",
    "pypi_ruamel.yaml",
    "pypi_schema_salad",
    "pypi_setuptools",
    "pypi_shellescape",
    "pypi_spython"
  ],
  "documentation_summary": "The HTML text is about the GitHub repository for `cwltool`, the reference implementation of the Common Workflow Language (CWL). This tool is designed to be feature-complete, offering comprehensive validation of CWL files and additional tools related to working with CWL. It supports Python 3.x and is provided by the CWL project, a member project of Software Freedom Conservancy. The repository includes various files and documentation for installing, using, and contributing to `cwltool`, as well as running tests and using it as a module in other Python scripts. It also outlines how to leverage SoftwareRequirements for dependency management and provides information on running CWL tools and workflows from both local and remote locations. The project is open-source under the Apache-2.0 license, with contributions from the community encouraged.",
  "embedding": [
    -0.013538281433284283,
    0.02218577079474926,
    -0.0030443412251770496,
    -0.019931752234697342,
    -0.0023302147164940834,
    0.010433691553771496,
    -0.012418360449373722,
    -0.009951700456440449,
    -0.01572141796350479,
    -0.022852052003145218,
    0.025063540786504745,
    0.003214455908164382,
    -0.007591361179947853,
    0.03300222009420395,
    -0.019719108939170837,
    -0.0018446794711053371,
    0.017918730154633522,
    -0.03595086932182312,
    -0.004557651933282614,
    0.014970079064369202,
    0.006453719921410084,
    0.02167542651295662,
    -0.015324483625590801,
    -0.018131373450160027,
    -0.001358258188702166,
    0.031102607026696205,
    0.009143656119704247,
    -0.04576081037521362,
    0.019648227840662003,
    0.00022504734806716442,
    0.020385392010211945,
    0.001936824875883758,
    -0.017918730154633522,
    -0.013616250827908516,
    0.0023408469278365374,
    -0.04077078402042389,
    -0.0021884525194764137,
    -0.0003466526686679572,
    0.0005697064916603267,
    -0.004777383059263229,
    0.026878096163272858,
    0.006712435744702816,
    0.02261105738580227,
    -0.00664509879425168,
    -0.048992983996868134,
    -0.011631581000983715,
    -0.00504318717867136,
    -0.02677886188030243,
    -0.013190964236855507,
    0.008463198319077492,
    0.009894995018839836,
    0.015154369175434113,
    -0.01254594698548317,
    -0.022029832005500793,
    0.0074283345602452755,
    0.009051511064171791,
    -0.0030071288347244263,
    0.058349285274744034,
    0.011461466550827026,
    0.0015398908872157335,
    -0.0061666518449783325,
    0.011170853860676289,
    -0.005549986381083727,
    -0.01881183125078678,
    0.007676418405026197,
    -0.022114889696240425,
    -0.017890378832817078,
    0.022157417610287666,
    -0.010093462653458118,
    0.0012625687522813678,
    0.036206044256687164,
    0.03731178864836693,
    0.017578501254320145,
    0.005581883247941732,
    0.01186548825353384,
    -0.016274290159344673,
    -0.03895622864365578,
    0.018457425758242607,
    0.0050786277279257774,
    -0.009731968864798546,
    0.014403030276298523,
    0.013616250827908516,
    0.03521370887756348,
    0.044966939836740494,
    0.014814140275120735,
    -0.00130509736482054,
    -0.0022664216812700033,
    0.01815972663462162,
    -0.026523690670728683,
    -0.0173233300447464,
    0.006209180224686861,
    -0.004795103333890438,
    0.007711858954280615,
    0.026977328583598137,
    0.004121733363717794,
    0.007127089891582727,
    -0.006673451513051987,
    0.03141448274254799,
    -0.020016809925436974,
    -0.043747786432504654,
    -0.003359762020409107,
    0.01838654652237892,
    -0.0155654801055789,
    -0.01369422022253275,
    -0.04783053696155548,
    -0.01371548417955637,
    -0.0059681846760213375,
    -0.0031152223236858845,
    0.010093462653458118,
    0.0045292992144823074,
    -0.014374678023159504,
    0.0379071868956089,
    -0.01652946136891842,
    -0.020654739812016487,
    -0.00044632915523834527,
    -0.02588576078414917,
    0.016345171257853508,
    -0.01312717143446207,
    0.01620340906083584,
    -0.011922193691134453,
    0.022214122116565704,
    0.040600668638944626,
    0.025545531883835793,
    -0.021505311131477356,
    0.010781008750200272,
    0.005546442698687315,
    -0.014225827530026436,
    -0.001509766443632543,
    -0.003177243284881115,
    -0.03575240448117256,
    0.015069312416017056,
    0.014502263627946377,
    -0.007853620685636997,
    -0.0020218819845467806,
    -0.004121733363717794,
    0.004373360890895128,
    -6.804304575780407e-06,
    0.009618558920919895,
    -0.004281215835362673,
    0.009675264358520508,
    0.00547556160017848,
    0.008087527938187122,
    -0.015324483625590801,
    0.008158409036695957,
    -0.008725457824766636,
    0.011362233199179173,
    0.0064430879428982735,
    0.0034217829816043377,
    0.02110837772488594,
    -0.020470447838306427,
    0.00476320693269372,
    0.004114645067602396,
    0.031329426914453506,
    -0.002473748754709959,
    0.004465506412088871,
    0.01844325102865696,
    0.01867006905376911,
    0.013672955334186554,
    0.002977004274725914,
    0.020229453220963478,
    -0.0035103843547403812,
    0.023319866508245468,
    -0.015579655766487122,
    -0.01787620224058628,
    0.005231021903455257,
    0.028394950553774834,
    0.014828316867351532,
    -0.015069312416017056,
    -0.008945189416408539,
    0.0015815335791558027,
    0.0017330418340861797,
    0.03252022713422775,
    -0.031669653952121735,
    0.020186925306916237,
    -0.004550563637167215,
    -0.00547556160017848,
    0.018131373450160027,
    0.027686139568686485,
    -0.02592829056084156,
    0.0029220713768154383,
    -0.0006822301656939089,
    0.001633808366023004,
    -0.015849003568291664,
    0.006995960138738155,
    -0.03895622864365578,
    -0.0269206240773201,
    0.0024099559523165226,
    0.0013786365743726492,
    0.017493443563580513,
    0.021505311131477356,
    0.016160881146788597,
    0.026509514078497887,
    0.01820225454866886,
    -0.014332149177789688,
    -0.6060613989830017,
    -0.01125591155141592,
    -0.027884606271982193,
    -0.03589416667819023,
    0.009661087766289711,
    -0.004504491109400988,
    0.007874885573983192,
    0.012623915448784828,
    -0.03861599788069725,
    0.02312139980494976,
    -0.02288040518760681,
    0.0015168546233326197,
    0.00837814062833786,
    -0.014339237473905087,
    -0.017096510156989098,
    -0.022497646510601044,
    -0.019123708829283714,
    -0.01209939643740654,
    -0.020385392010211945,
    0.02733173407614231,
    -0.026084227487444878,
    0.020853206515312195,
    -0.03600757569074631,
    -0.017564324662089348,
    -0.012333303689956665,
    0.0018482235027477145,
    0.015182722359895706,
    -0.028309892863035202,
    0.007357453461736441,
    -0.0135737219825387,
    -0.0175501499325037,
    0.02700568176805973,
    -0.003333181608468294,
    -0.010958211496472359,
    0.05426653474569321,
    -0.001954545034095645,
    -0.03631945326924324,
    0.00026225991314277053,
    0.008300171233713627,
    0.04091254621744156,
    -0.024780016392469406,
    0.012843647040426731,
    -0.0034341870341449976,
    -0.00578034995123744,
    0.003965795040130615,
    -0.01699727773666382,
    0.014729083515703678,
    0.014799964614212513,
    -0.011808783747255802,
    -0.029288051649928093,
    -0.009037334471940994,
    -0.01610417477786541,
    0.0049333213828504086,
    -0.021944774314761162,
    -0.0038665614556521177,
    -0.011206294409930706,
    0.045704104006290436,
    -0.02008769102394581,
    0.004185526166111231,
    -0.004206790588796139,
    -0.02149113640189171,
    0.021306844428181648,
    -0.011099972762167454,
    -0.01685551553964615,
    0.008335611782968044,
    0.002052006544545293,
    -0.005762629676610231,
    -0.014112417586147785,
    -0.016954747959971428,
    0.003242808161303401,
    0.011688285507261753,
    -0.0030815538484603167,
    0.006141843274235725,
    -0.01867006905376911,
    0.021335197612643242,
    0.04573245719075203,
    0.020158572122454643,
    0.0016860830364748836,
    0.009164920076727867,
    0.014757435768842697,
    0.007378717884421349,
    0.003430643118917942,
    0.011596140451729298,
    -0.022157417610287666,
    0.041167717427015305,
    -0.01577812246978283,
    -0.0022859140299260616,
    -0.030734024941921234,
    0.019733285531401634,
    0.001234216382727027,
    0.025205302983522415,
    0.0057874382473528385,
    -0.017436739057302475,
    -0.03379608690738678,
    0.003923266194760799,
    0.03178306668996811,
    -0.011227559298276901,
    0.00038209318881854415,
    -0.009058598428964615,
    -0.014013184234499931,
    -0.00994461216032505,
    -0.013786365278065205,
    0.008151321671903133,
    0.014473911374807358,
    0.01346031203866005,
    0.015749771147966385,
    -0.023560862988233566,
    0.00634031044319272,
    0.0210658498108387,
    -0.007605537306517363,
    -0.0173233300447464,
    -0.011206294409930706,
    -0.011652844958007336,
    -0.010972387157380581,
    -0.003317233407869935,
    -0.02523365616798401,
    0.010575453750789165,
    0.01647275686264038,
    0.015310307964682579,
    -0.011659933254122734,
    0.00723341153934598,
    -0.01667122356593609,
    -0.021944774314761162,
    0.002760817063972354,
    0.008229290135204792,
    0.0049156011082232,
    0.0049333213828504086,
    -0.03561064228415489,
    -0.010540013201534748,
    0.028919469565153122,
    0.004153629764914513,
    -0.0044229780323803425,
    0.04649797081947327,
    -0.005503913853317499,
    0.03841753304004669,
    0.006152475718408823,
    0.027912959456443787,
    0.006524601019918919,
    -0.014970079064369202,
    -0.02092408761382103,
    -0.013956479728221893,
    0.008675840683281422,
    0.013885598629713058,
    -0.01769191212952137,
    -0.012021427042782307,
    -0.021873893216252327,
    -0.01929382234811783,
    0.009427180513739586,
    -0.007272396236658096,
    0.011248823255300522,
    -0.010376986116170883,
    0.0017994927475228906,
    -0.029032880440354347,
    0.021264316514134407,
    0.010703039355576038,
    -0.014084065333008766,
    -0.01722409576177597,
    -0.012978320941329002,
    0.006248164921998978,
    -0.029316404834389687,
    -0.013587898574769497,
    0.011489818803966045,
    -0.012957056984305382,
    -0.0029468799475580454,
    -0.0043769050389528275,
    0.02358921431005001,
    0.0033048291224986315,
    0.03294551372528076,
    -0.0030230770353227854,
    -0.05457841232419014,
    0.006570674013346434,
    0.004291847813874483,
    -0.002810433739796281,
    0.0043308325111866,
    0.022625232115387917,
    0.00013766430492978543,
    -0.004979393910616636,
    0.0022221209947019815,
    -0.021831365302205086,
    0.0075063034892082214,
    -0.02289457991719246,
    0.009590206667780876,
    -0.015806475654244423,
    -0.0351002998650074,
    0.002360339043661952,
    0.015579655766487122,
    0.03731178864836693,
    0.0155654801055789,
    -0.007690594531595707,
    -0.005925656296312809,
    -0.024609902873635292,
    0.002360339043661952,
    -0.003556456882506609,
    0.025247830897569656,
    0.0014592637307941914,
    0.00938465166836977,
    -0.013913950882852077,
    0.0017197516281157732,
    0.005344431381672621,
    0.035638995468616486,
    0.003588353516533971,
    0.03294551372528076,
    0.011454378254711628,
    -0.013439048081636429,
    -0.015707241371273994,
    -0.03220834955573082,
    0.01675628125667572,
    -0.0170823335647583,
    0.01919458992779255,
    0.008052087388932705,
    0.024127911776304245,
    -0.017380034551024437,
    -0.005759085528552532,
    -0.008030823431909084,
    0.01834401674568653,
    -0.005482649430632591,
    0.0001550523011246696,
    -0.0012634547892957926,
    -0.011489818803966045,
    0.013488664291799068,
    0.021831365302205086,
    -0.0011340968776494265,
    0.02237006090581417,
    -0.02649533748626709,
    0.0018375912914052606,
    0.021774660795927048,
    -0.012524682097136974,
    0.02682139165699482,
    -0.000790323771070689,
    -0.005886671599000692,
    -0.0034873478580266237,
    0.01359498593956232,
    0.02771449275314808,
    -0.025389593094587326,
    0.006538777146488428,
    0.01838654652237892,
    0.02808307483792305,
    -0.028068898245692253,
    0.03107425384223461,
    -0.0035475967451930046,
    -0.00031387017224915326,
    -0.010688862763345242,
    0.04099760204553604,
    -0.03521370887756348,
    0.021264316514134407,
    0.015437893569469452,
    0.05063742399215698,
    0.005117611959576607,
    0.006715979892760515,
    -0.02021527662873268,
    0.009391739964485168,
    0.020725620910525322,
    -0.017025629058480263,
    0.0062446207739412785,
    0.01764938235282898,
    -0.010844801552593708,
    0.008711281232535839,
    -0.004277671687304974,
    0.02743096835911274,
    0.025347065180540085,
    0.02672215737402439,
    0.0018818919779732823,
    0.03436313569545746,
    0.01268770918250084,
    0.045704104006290436,
    -0.01793290674686432,
    -0.008640400134027004,
    -0.02523365616798401,
    -0.007010136265307665,
    0.002945107873529196,
    -0.002078586956486106,
    0.00880342721939087,
    -0.0007637433591298759,
    -0.021335197612643242,
    0.030904140323400497,
    0.014162034727633,
    0.005695292726159096,
    0.03487347811460495,
    0.009760321117937565,
    -0.003657462541013956,
    -0.01858501322567463,
    -0.025347065180540085,
    0.023475805297493935,
    0.014870845712721348,
    -0.0104124266654253,
    0.0062410770915448666,
    -0.013864334672689438,
    0.025758175179362297,
    -0.014729083515703678,
    0.03478842228651047,
    -0.0016922851791605353,
    0.0006649529095739126,
    0.015948237851262093,
    0.03005356714129448,
    0.0076551539823412895,
    -0.0010667599271982908,
    0.006053241901099682,
    -0.020980792120099068,
    -0.006825845688581467,
    -0.010306105017662048,
    -0.008293083868920803,
    0.014105330221354961,
    0.015225250273942947,
    0.0032516682986170053,
    0.06804580986499786,
    0.01807466894388199,
    -0.013283109292387962,
    -0.011248823255300522,
    0.004734854679554701,
    -0.014204563573002815,
    -0.008278907276690006,
    -0.016075823456048965,
    0.018216431140899658,
    -0.026268519461154938,
    0.023617567494511604,
    -0.006106402724981308,
    -0.0045292992144823074,
    0.022965461015701294,
    0.00504318717867136,
    -0.0004859782347921282,
    -0.0021246597170829773,
    -0.017564324662089348,
    -0.0060638743452727795,
    0.014970079064369202,
    0.027459321543574333,
    0.023575039580464363,
    0.01214901264756918,
    0.015537126921117306,
    -0.03867270424962044,
    -0.003646830329671502,
    -0.06277225911617279,
    -0.002484380966052413,
    0.03186812251806259,
    -0.012928704731166363,
    0.009150744415819645,
    -0.010164342820644379,
    0.006616746541112661,
    -0.0013892686692997813,
    0.01273023709654808,
    -0.0043272883631289005,
    0.006131211295723915,
    0.015381189063191414,
    -0.01268770918250084,
    -0.000283967237919569,
    -0.01251759473234415,
    -0.007307836785912514,
    0.019719108939170837,
    0.011893841437995434,
    0.001331677776761353,
    0.006712435744702816,
    0.00781818013638258,
    0.01516854576766491,
    0.006584850139915943,
    -0.009320858865976334,
    -0.019067004323005676,
    0.001995301805436611,
    0.009398828260600567,
    0.04298227280378342,
    -0.029316404834389687,
    0.044966939836740494,
    0.03019532933831215,
    0.03992021083831787,
    0.008767986670136452,
    -0.01699727773666382,
    0.017096510156989098,
    0.003420010907575488,
    -0.001239532488398254,
    0.008144233375787735,
    0.0015824194997549057,
    -0.02700568176805973,
    -0.0006091340910643339,
    0.03870105743408203,
    -0.013375255279242992,
    -0.018925242125988007,
    0.01369422022253275,
    0.010483307763934135,
    0.0022770538926124573,
    -0.031329426914453506,
    0.03623439371585846,
    0.010043845511972904,
    0.019010299816727638,
    0.007577184587717056,
    0.022129064425826073,
    -0.041309479624032974,
    -0.009965876117348671,
    -0.04848264157772064,
    0.006131211295723915,
    -0.00823637843132019,
    -0.025531355291604996,
    0.024354729801416397,
    0.0013015533331781626,
    -0.032605286687612534,
    -0.02017274871468544,
    -0.020853206515312195,
    0.005227477755397558,
    -0.01399900857359171,
    -0.03169800713658333,
    0.00823637843132019,
    0.001650642603635788,
    0.007088105659931898,
    0.016628695651888847,
    0.016090000048279762,
    -0.010703039355576038,
    -2.8767741241608746e-05,
    -0.018854361027479172,
    -0.02288040518760681,
    0.004139453638345003,
    -0.02785625495016575,
    0.0032215439714491367,
    -0.01331854984164238,
    -0.034618306905031204,
    0.0005174317047931254,
    0.017521796748042107,
    0.03904128447175026,
    -0.024822546169161797,
    0.023816034197807312,
    -0.014644025824964046,
    -0.0196624044328928,
    0.021973127499222755,
    0.025545531883835793,
    0.01567889004945755,
    0.021732131019234657,
    0.0059398324228823185,
    -0.020399566739797592,
    -0.006733700167387724,
    -0.019619876518845558,
    0.011199207045137882,
    0.012723149731755257,
    0.00954767782241106,
    -0.0035635449457913637,
    -0.005819334648549557,
    0.028068898245692253,
    -0.02027198113501072,
    0.009023157879710197,
    0.017819497734308243,
    0.0007668444304727018,
    0.008427757769823074,
    0.006535233464092016,
    0.0008098160615190864,
    -0.0092428894713521,
    0.015097664669156075,
    0.0472634881734848,
    0.014169123023748398,
    -0.024609902873635292,
    -0.024652430787682533,
    -0.022993814200162888,
    0.01698310114443302,
    0.019548995420336723,
    0.002218577079474926,
    0.04096924886107445,
    -0.001304211444221437,
    -0.014714906923472881,
    -0.02523365616798401,
    -0.013027938082814217,
    0.020016809925436974,
    0.006999504286795855,
    -0.016812985762953758,
    -0.00047003000508993864,
    0.014431382529437542,
    -0.018854361027479172,
    -0.005585426930338144,
    -0.0016178600490093231,
    -0.03654627129435539,
    -0.012886175885796547,
    -0.0008000698871910572,
    0.0003849727218039334,
    -0.019648227840662003,
    -0.001126122777350247,
    0.0004531957383733243,
    -0.02102332003414631,
    -0.007073929067701101,
    0.017294976860284805,
    0.0027147443033754826,
    0.0038771936669945717,
    0.021335197612643242,
    0.021845541894435883,
    0.004617900587618351,
    -0.019577346742153168,
    0.006662819068878889,
    -0.002495013177394867,
    -0.01927964761853218,
    0.006400559097528458,
    0.02991180494427681,
    0.018003787845373154,
    0.03130107372999191,
    -0.003404062706977129,
    0.01413368247449398,
    -0.0129854092374444,
    -0.011007827706634998,
    -0.018287312239408493,
    -0.01638769917190075,
    0.010029668919742107,
    0.002647407352924347,
    -0.009001893922686577,
    0.016642872244119644,
    0.01258847489953041,
    -0.004228055011481047,
    -0.005316079128533602,
    0.01913788542151451,
    0.015579655766487122,
    -0.008420669473707676,
    0.007811092305928469,
    -0.003134714672341943,
    0.0002236075815744698,
    0.0034891199320554733,
    -0.005092803854495287,
    -0.004798647481948137,
    0.010958211496472359,
    -0.034419842064380646,
    -0.023007990792393684,
    0.04564739763736725,
    0.02303634211421013,
    0.01514019351452589,
    0.01820225454866886,
    -0.0041465419344604015,
    -0.0017675963463261724,
    0.007967030629515648,
    0.02495013177394867,
    0.03206658735871315,
    -0.003306601196527481,
    0.0008886712021194398,
    -0.026878096163272858,
    -0.014232915826141834,
    0.015296131372451782,
    0.029174642637372017,
    0.010433691553771496,
    0.000750010134652257,
    0.017294976860284805,
    0.000820005196146667,
    0.025531355291604996,
    0.003987059462815523,
    -0.009866642765700817,
    0.012319127097725868,
    -0.025432122871279716,
    -0.013148435391485691,
    -0.04006197303533554,
    -0.031102607026696205,
    -0.0052841827273368835,
    -0.011014916002750397,
    -0.014346325770020485,
    0.021788835525512695,
    0.01502678357064724,
    -0.01502678357064724,
    -0.018556660041213036,
    0.03200988471508026,
    0.003354446031153202,
    0.021193435415625572,
    0.02602752298116684,
    0.04337920621037483,
    0.02269611321389675,
    0.02116508223116398,
    -0.005603147204965353,
    -0.003979971166700125,
    -0.003372166072949767,
    -0.002450712490826845,
    0.02466660737991333,
    0.021632898598909378,
    -0.006599026266485453,
    -0.012829471379518509,
    -0.02470913529396057,
    -0.003951618913561106,
    -0.005156596656888723,
    -0.03855929523706436,
    0.0031967356335371733,
    -0.00851990282535553,
    0.02789878286421299,
    -0.03816235810518265,
    0.004887248855084181,
    -0.020725620910525322,
    0.008718369528651237,
    0.007740211207419634,
    -0.012879087589681149,
    0.0033969746436923742,
    -0.02008769102394581,
    0.008789250627160072,
    0.040799133479595184,
    0.005160140804946423,
    -0.011404762044548988,
    0.010781008750200272,
    -0.01624593697488308,
    0.007300748489797115,
    -0.019449761137366295,
    -0.043265797197818756,
    0.00737162958830595,
    0.0011704234639182687,
    0.03271869570016861,
    -0.026608748361468315,
    -0.031329426914453506,
    0.029883453622460365,
    0.00691444706171751,
    -0.014629850164055824,
    -0.017068158835172653,
    -0.006329677999019623,
    0.03141448274254799,
    -0.024638254195451736,
    0.008902660571038723,
    -0.008690017275512218,
    -0.025474650785326958,
    -0.0003393430379219353,
    0.0002443181292619556,
    -0.02147695980966091,
    -0.02405703067779541,
    -0.016784634441137314,
    -0.003000040538609028,
    0.01055418886244297,
    -0.017762793228030205,
    -0.026268519461154938,
    -0.009845378808677197,
    0.004876616410911083,
    0.003930354490876198,
    -0.026849742978811264,
    -0.028139779344201088,
    0.026381928473711014,
    -0.026948977261781693,
    -0.03373938053846359,
    0.008300171233713627,
    -0.02509189397096634,
    0.025573885068297386,
    0.011326792649924755,
    -0.003140030661597848,
    0.005245198030024767,
    0.07292243093252182,
    -0.023319866508245468,
    0.020753972232341766,
    -0.025630589574575424,
    0.0025286816526204348,
    -0.025106068700551987,
    0.004578916355967522,
    0.001936824875883758,
    -0.020853206515312195,
    0.04187652841210365,
    -0.013112994842231274,
    -0.04649797081947327,
    -0.041167717427015305,
    0.006499792914837599,
    0.035695698112249374,
    0.008626224473118782,
    -0.02733173407614231,
    0.002298318315297365,
    0.015537126921117306,
    -0.001240418408997357,
    0.0006104630883783102,
    -0.012496329843997955,
    0.02818230725824833,
    -0.031839769333601,
    -0.00023479349329136312,
    0.040373850613832474,
    -0.006981784012168646,
    -0.002257561543956399,
    -0.0051814052276313305,
    0.01399192027747631,
    -0.011574876494705677,
    -0.02373097650706768,
    -0.03393784910440445,
    0.009717792272567749,
    0.00015759959933348,
    0.009008982218801975,
    0.0035972134210169315,
    -0.026878096163272858,
    -0.026240166276693344,
    -0.031754713505506516,
    0.012219893746078014,
    -0.02985510043799877,
    -0.02007351443171501,
    0.01652946136891842,
    0.014785788021981716,
    -0.019917575642466545,
    -0.01013599056750536,
    -0.01329728588461876,
    -0.008739634416997433,
    -0.02017274871468544,
    -0.006003625225275755,
    -0.04241522401571274,
    -0.021632898598909378,
    -0.021703779697418213,
    0.01153943594545126,
    0.016742104664444923,
    -0.031754713505506516,
    -0.03141448274254799,
    -0.009398828260600567,
    -0.01567889004945755,
    -0.024723311886191368,
    -0.016926396638154984,
    0.025021012872457504,
    -0.0019634051714092493,
    0.002571210265159607,
    0.0020431464072316885,
    0.02607005275785923,
    -0.02269611321389675,
    0.030393796041607857,
    -0.020810678601264954,
    0.002094535157084465,
    0.016316818073391914,
    0.004692325834184885,
    0.0061666518449783325,
    0.0013245897134765983,
    -0.027501849457621574,
    0.016274290159344673,
    -0.003944530617445707,
    0.005245198030024767,
    -0.014445559121668339,
    0.022171594202518463,
    -0.011744990944862366,
    -0.005266462452709675,
    -0.009370475076138973,
    0.00912947952747345,
    -0.013474488630890846,
    -0.0007265307940542698,
    -0.00692862318828702,
    -0.0008802540833130479,
    0.0062446207739412785,
    0.012411273084580898,
    -0.005450753029435873,
    -0.00029925093986094,
    -0.006825845688581467,
    -0.0035387366078794003,
    -0.006949887610971928,
    0.006159563548862934,
    0.006081594619899988,
    -0.043265797197818756,
    -0.0013414239510893822,
    0.02584323287010193,
    0.0005670484388247132,
    0.006120579317212105,
    0.023007990792393684,
    0.003675182582810521,
    0.0031861034221947193,
    0.0011677653528749943,
    -0.013446136377751827,
    -0.009965876117348671,
    -0.03895622864365578,
    -0.005156596656888723,
    0.003143574809655547,
    -0.0161467045545578,
    -0.021037496626377106,
    0.005138876382261515,
    0.018967770040035248,
    -0.0007907667895779014,
    -0.015196898020803928,
    -0.005702381022274494,
    -0.019719108939170837,
    -0.01854248344898224,
    -0.005670484155416489,
    0.006467896047979593,
    0.013077554292976856,
    -0.009462621062994003,
    -0.0013724344316869974,
    -0.01371548417955637,
    0.006921534892171621,
    -0.014509351924061775,
    -0.023660095408558846,
    -0.013417784124612808,
    0.02443978749215603,
    -0.026552043855190277,
    -0.014431382529437542,
    -0.0019403689075261354,
    0.012021427042782307,
    0.017521796748042107,
    -0.018457425758242607,
    0.016699576750397682,
    0.16353677213191986,
    -0.002365655265748501,
    0.011964721605181694,
    0.04862440377473831,
    0.0008217772119678557,
    -0.006840021815150976,
    0.04142288863658905,
    -0.00563858775421977,
    -0.016642872244119644,
    0.008952276781201363,
    0.0019031562842428684,
    -8.998571138363332e-05,
    -0.012957056984305382,
    0.0020537786185741425,
    0.0007269738125614822,
    0.0067726848646998405,
    -0.031386129558086395,
    -0.03731178864836693,
    -0.03918304666876793,
    0.004922689404338598,
    0.01643022894859314,
    -0.008271818980574608,
    -0.02100914530456066,
    -0.03237846493721008,
    0.009398828260600567,
    -0.011454378254711628,
    -0.013531193137168884,
    -0.015154369175434113,
    0.024326378479599953,
    0.016019118949770927,
    -0.04113936424255371,
    0.019010299816727638,
    -0.005585426930338144,
    -0.01651528663933277,
    0.0030390252359211445,
    -0.005925656296312809,
    0.006769140716642141,
    -0.01156069990247488,
    0.006230444647371769,
    0.01694057136774063,
    -0.011390585452318192,
    -0.06407647579908371,
    -0.013141348026692867,
    -0.03518535569310188,
    0.01881183125078678,
    0.006503336597234011,
    -0.008647488430142403,
    -0.0006529917009174824,
    0.013566633686423302,
    0.01793290674686432,
    -0.014814140275120735,
    0.008831779472529888,
    0.04235851764678955,
    0.040090326219797134,
    -0.014729083515703678,
    -0.0067939492873847485,
    0.0013006674125790596,
    0.02954322285950184,
    0.024539021775126457,
    0.00809461623430252,
    -0.019038651138544083,
    0.014303796924650669,
    -0.011759166605770588,
    0.01830148883163929,
    -0.034760069102048874,
    0.009774497710168362,
    -0.004440698307007551,
    0.009462621062994003,
    -0.003675182582810521,
    0.002689935965463519,
    -0.009767409414052963,
    -0.015239426866173744,
    -0.005376327782869339,
    0.00839940458536148,
    -0.021306844428181648,
    -0.019449761137366295,
    0.018514132127165794,
    0.00810170453041792,
    -0.005344431381672621,
    0.04499529302120209,
    -0.005564162973314524,
    0.013644603081047535,
    -0.005138876382261515,
    0.0009657543851062655,
    0.016401875764131546,
    -0.016401875764131546,
    0.002771449275314808,
    0.0017711403779685497,
    -0.013339814729988575,
    -0.030620615929365158,
    -0.01610417477786541,
    0.0010897961910814047,
    -0.0037247994914650917,
    0.006102859042584896,
    0.02724667824804783,
    0.00927124172449112,
    -0.004440698307007551,
    -0.025403769686818123,
    -0.013141348026692867,
    -0.008349788375198841,
    -0.017989611253142357,
    0.07212856411933899,
    0.010660510510206223,
    0.03841753304004669,
    0.00778274005278945,
    0.007414158433675766,
    0.0074566868133842945,
    0.00880342721939087,
    -0.007470863405615091,
    -0.02906123176217079,
    0.009030246175825596,
    -0.03385279327630997,
    -0.007619713433086872,
    -0.012978320941329002,
    -0.014955902472138405,
    0.010759743861854076,
    0.01387851033359766,
    -0.023248985409736633,
    -0.00679749296978116,
    -0.004819911904633045,
    0.004589548334479332,
    0.0023390748538076878,
    0.010433691553771496,
    -0.0036503742448985577,
    -0.010568365454673767,
    -0.024808369576931,
    -0.026240166276693344,
    -0.01844325102865696,
    -0.026155108585953712,
    -0.021080026403069496,
    0.017422562465071678,
    0.007662241812795401,
    0.021547840908169746,
    -0.006099314894527197,
    -0.013680043630301952,
    -0.023433277383446693,
    -0.032321762293577194,
    -0.01840072125196457,
    -0.02602752298116684,
    -0.004848264157772064,
    -0.04176311567425728,
    0.0033314095344394445,
    0.007938678376376629,
    -0.019435584545135498,
    0.04666808620095253,
    -0.0198892243206501,
    -0.007056208793073893,
    -0.00037655560299754143,
    -0.004323744215071201,
    0.0025907026138156652,
    0.00723341153934598,
    -0.022157417610287666,
    0.01397065632045269,
    0.00332432147115469,
    0.03042214922606945,
    -0.02517694979906082,
    -0.003242808161303401,
    0.0010313193779438734,
    0.021547840908169746,
    -0.01667122356593609,
    -0.044456597417593,
    -0.007570096757262945,
    0.02625434286892414,
    -0.002518049441277981,
    -0.009788673371076584,
    -0.006024889647960663,
    -0.181568905711174,
    0.009809938259422779,
    0.014899197965860367,
    -0.03892787545919418,
    0.02761525847017765,
    0.0009489201474934816,
    -0.004547019489109516,
    0.014346325770020485,
    -0.008243466727435589,
    0.008860131725668907,
    0.03200988471508026,
    0.01499843131750822,
    -0.03186812251806259,
    -0.0030425693839788437,
    -0.0025428577791899443,
    0.010483307763934135,
    -0.0017826585099101067,
    0.014913373626768589,
    0.011525259353220463,
    0.03294551372528076,
    0.033625971525907516,
    -0.009200360625982285,
    0.01937888003885746,
    0.014317973516881466,
    0.006581305991858244,
    -0.006460808217525482,
    -0.014062801375985146,
    -0.00474903080612421,
    -0.014204563573002815,
    -0.000947148073464632,
    -0.008782162331044674,
    0.02578652836382389,
    0.003469627583399415,
    0.005156596656888723,
    0.02570147067308426,
    -0.013701307587325573,
    -0.0020927630830556154,
    -0.019350528717041016,
    -0.008080440573394299,
    0.03668803349137306,
    0.01793290674686432,
    0.017209921032190323,
    0.01946393772959709,
    -0.011546524241566658,
    -0.005422400776296854,
    0.033909495919942856,
    0.016954747959971428,
    -0.01947811432182789,
    0.00709164934232831,
    -0.03458995372056961,
    0.028607593849301338,
    -0.020711444318294525,
    -5.4046802688390017e-05,
    -0.018046315759420395,
    0.011099972762167454,
    -0.017706086859107018,
    0.012928704731166363,
    0.004681693855673075,
    -0.011163766495883465,
    0.0012138381134718657,
    0.007414158433675766,
    -0.03600757569074631,
    0.0019456850131973624,
    -0.003512156195938587,
    -0.009306682273745537,
    -0.0005590743385255337,
    -0.03847423568367958,
    0.024539021775126457,
    0.0032321761827915907,
    -0.002440080279484391,
    0.009824113920331001,
    -0.02649533748626709,
    -0.004111101385205984,
    -0.003983515314757824,
    0.032180000096559525,
    0.004809279460459948,
    -0.03450489789247513,
    0.01287199929356575,
    0.03192482888698578,
    -0.03833247348666191,
    0.003150662872940302,
    0.020527154207229614,
    0.009838290512561798,
    -0.0066982596181333065,
    0.019307998940348625,
    -0.005915023852139711,
    -0.025290360674262047,
    3.75171221094206e-05,
    0.008243466727435589,
    -0.008030823431909084,
    0.012723149731755257,
    -0.0015221706125885248,
    -0.020938264206051826,
    -0.02395779639482498,
    -0.015083488076925278,
    0.005429488606750965,
    0.007846532389521599,
    0.0008248782833106816,
    0.004309568088501692,
    0.0019492290448397398,
    0.01499843131750822,
    0.00022449358948506415,
    -0.0022114890161901712,
    -0.02115090750157833,
    0.038502588868141174,
    0.02218577079474926,
    -0.024255497381091118,
    0.012297863140702248,
    0.02397197298705578,
    0.007017224561423063,
    -0.029514871537685394,
    0.014091153629124165,
    0.009136567823588848,
    -0.006652187090367079,
    -0.014658202417194843,
    0.020016809925436974,
    -0.000633499410469085,
    -0.01942140981554985,
    0.005000658333301544,
    -0.008739634416997433,
    0.025021012872457504,
    0.009902083314955235,
    -0.013112994842231274,
    0.0031471187248826027,
    -0.04221675544977188,
    -0.00812296848744154,
    -0.0894235372543335,
    -0.021604545414447784,
    -0.011674109846353531,
    0.021916422992944717,
    -0.020342862233519554,
    -0.01815972663462162,
    -0.01226242259144783,
    0.031329426914453506,
    0.013779276981949806,
    0.004391081165522337,
    -0.003533420618623495,
    0.014261268079280853,
    -0.022525999695062637,
    -0.00818676222115755,
    -0.009398828260600567,
    -0.012942880392074585,
    -0.00997296441346407,
    -0.00868292897939682,
    0.01139767374843359,
    0.018755126744508743,
    -0.000221946305828169,
    -0.015324483625590801,
    -0.023419100791215897,
    0.00738580571487546,
    0.0036503742448985577,
    0.02326316200196743,
    -0.03507194668054581,
    0.008810515515506268,
    0.019875047728419304,
    0.01499843131750822,
    -0.014658202417194843,
    -0.022993814200162888,
    -0.003625565906986594,
    -0.00622690049931407,
    -0.0054861935786902905,
    -0.0055889710783958435,
    -0.015849003568291664,
    -0.04578915983438492,
    0.04754701256752014,
    -0.023248985409736633,
    0.007796916179358959,
    -0.002792713465169072,
    0.024539021775126457,
    -0.029798395931720734,
    -0.0016054558800533414,
    0.01373674813657999,
    -0.00795994233340025,
    0.02078232541680336,
    -0.0006786860758438706,
    -0.004724222235381603,
    -0.040940895676612854,
    -0.006917990744113922,
    -0.028763532638549805,
    -0.011099972762167454,
    0.013935215771198273,
    -0.0056350440718233585,
    0.0010481536155566573,
    -0.005358607973903418,
    -0.005833510775119066,
    -0.003567089093849063,
    0.00406148424372077,
    -0.01933635212481022,
    -0.016118351370096207,
    0.02523365616798401,
    0.010206871666014194,
    -0.0037283434066921473,
    0.020470447838306427,
    0.006531689316034317,
    0.008895572274923325,
    -0.02045627310872078,
    0.0018978402949869633,
    0.016841338947415352,
    -0.013488664291799068,
    0.019435584545135498,
    -0.00818676222115755,
    -0.005071539431810379,
    0.0004567397991195321,
    -0.002950423862785101,
    -0.008477373979985714,
    -0.045562341809272766,
    -0.011064532212913036,
    0.0010153710609301925,
    -0.006177283823490143,
    -0.019775813445448875,
    0.014459734782576561,
    0.026438632979989052,
    0.00310636218637228,
    -0.0012590247206389904,
    0.007867797277867794,
    -0.035979222506284714,
    0.02086738310754299,
    0.008420669473707676,
    0.028749356046319008,
    -0.009696528315544128,
    0.01929382234811783,
    -0.0015363468555733562,
    -0.010256488807499409,
    -0.005213301628828049,
    -0.03028038702905178,
    0.005982360802590847,
    -0.03759531304240227,
    0.003529876470565796,
    -0.08466032892465591,
    0.007407070137560368,
    -0.007619713433086872,
    -0.050155434757471085,
    -0.00812296848744154,
    -0.021944774314761162,
    -0.005287726875394583,
    -0.010646334849298,
    0.01226242259144783,
    0.019761638715863228,
    -0.02176048420369625,
    0.004306023940443993,
    -0.03501524031162262,
    -0.000941832026001066,
    -0.004132365342229605,
    -0.0028441022150218487,
    0.008406492881476879,
    -0.016557814553380013,
    0.04218840226531029,
    0.0056633963249623775,
    -0.005957552697509527,
    -0.0008412695024162531,
    0.03407961130142212,
    0.0175501499325037,
    -0.046271152794361115,
    -5.853224502061494e-05,
    -0.02181718870997429,
    0.04043055325746536,
    -0.009462621062994003,
    -0.008853043429553509,
    -2.768791205198795e-07,
    -0.01460149697959423,
    0.005301903001964092,
    0.02822483517229557,
    0.030734024941921234,
    0.02035703882575035,
    0.022341707721352577,
    0.0104124266654253,
    0.011078708805143833,
    0.035979222506284714,
    -0.004951041657477617,
    -0.012616828083992004,
    -0.0039976914413273335,
    0.003880737815052271,
    -0.005245198030024767,
    -0.0008585467585362494,
    0.003377482295036316,
    0.01170246209949255,
    0.04950333014130592,
    0.04394625499844551,
    0.02724667824804783,
    0.004366273060441017,
    -0.026225989684462547,
    -0.040317144244909286,
    0.01712486334145069,
    -0.0005005974671803415,
    0.014084065333008766,
    -0.012553034350275993,
    -0.018882712349295616,
    0.02256852760910988,
    0.04309568181633949,
    0.008037911728024483,
    0.018372369930148125,
    -0.001785316620953381,
    0.0047525749541819096,
    0.005231021903455257,
    -0.02991180494427681,
    0.01184422429651022,
    -0.0019084723899140954,
    -0.028848588466644287,
    -0.031953178346157074,
    -0.015310307964682579,
    -0.0033473577350378036,
    0.009483885020017624,
    0.023192280903458595,
    -0.02041374333202839,
    -0.021420255303382874,
    0.02531871199607849,
    0.00310636218637228,
    0.019123708829283714,
    0.0006636238540522754,
    0.0076835062354803085,
    -0.02584323287010193,
    0.012815294787287712,
    0.027955487370491028,
    0.013183875940740108,
    -0.042755451053380966,
    -0.005277094431221485,
    -0.0058157905004918575,
    -0.008250555023550987,
    0.0026048787403851748,
    0.006021345499902964,
    0.002278825966641307,
    0.024411436170339584,
    0.002204400720074773,
    0.00692862318828702,
    -0.008817602880299091,
    -0.007754387333989143,
    0.022355884313583374,
    0.006769140716642141,
    -0.0008262072806246579,
    -0.002055550692602992,
    0.006184372119605541,
    -0.013722572475671768,
    -0.03042214922606945,
    -0.007555920630693436,
    -0.0061666518449783325,
    -0.007322012912482023,
    0.007747299503535032,
    0.008952276781201363,
    0.03478842228651047,
    -0.015196898020803928,
    0.017961259931325912,
    0.013035026378929615,
    -0.026296870782971382,
    -0.0016116580227389932,
    -0.0007934247842058539,
    0.0009949927916750312,
    -0.021462783217430115,
    0.011624492704868317,
    0.002062638755887747,
    0.011050356552004814,
    0.044116370379924774,
    -0.014140770770609379,
    0.008193849585950375,
    0.012198629789054394,
    0.000925883767195046,
    -0.02073979750275612,
    0.012949968688189983,
    -0.009824113920331001,
    0.005762629676610231,
    0.009462621062994003,
    -0.03773707523941994,
    -0.005886671599000692,
    -0.005698836874216795,
    0.010476219467818737,
    -0.01446682307869196,
    -0.011426026001572609,
    0.002679303986951709,
    0.08040747046470642,
    0.021278493106365204,
    -0.018103022128343582,
    0.012574299238622189,
    -0.007343277335166931,
    0.014126594178378582,
    0.020342862233519554,
    -0.00936338771134615,
    -0.016132527962327003,
    -0.026750510558485985,
    -0.011794607155025005,
    -0.025304537266492844,
    -0.010327369906008244,
    0.0008682929328642786,
    -0.03328574448823929,
    -0.00980284996330738,
    -0.020768148824572563,
    0.014615673571825027,
    0.011801695451140404,
    -0.013403607532382011,
    0.011964721605181694,
    0.013602074235677719,
    0.015480422414839268,
    -0.0035688611678779125,
    -0.031471189111471176,
    -0.025616412982344627,
    0.027813725173473358,
    0.0018818919779732823,
    0.005666940473020077,
    -0.026084227487444878,
    0.025531355291604996,
    0.027870431542396545,
    0.009094038978219032,
    -0.022710289806127548,
    0.0032392642460763454,
    0.007034944836050272,
    0.003632653970271349,
    -0.018570836633443832,
    0.0020218819845467806,
    0.00940591562539339,
    0.017776967957615852,
    -0.025290360674262047,
    -0.029599929228425026,
    -0.038729406893253326,
    0.014452647417783737,
    -0.0034660836681723595,
    0.01572141796350479,
    -0.004259951412677765,
    -0.018230607733130455
  ]
}
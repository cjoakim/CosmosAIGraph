{
  "classifiers": [
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3.7"
  ],
  "description": "### logz\nlog easy \u5feb\u901f\u4e0a\u624b\u7684\u65e5\u5fd7\u8bb0\u5f55\u5de5\u5177\n\n### \u7279\u6027\n\n- \u4e0a\u624b\u5bb9\u6613\n- \u65e5\u5fd7\u6587\u4ef6\u6309\u65e5\u671f\u52a8\u6001\u751f\u6210\n- dayrottinglogger\n- \u8bb0\u5f55\u65e5\u5fd7\u5230email\n- safe extra fields\n- \u652f\u6301\u591a\u4e2a\u53d8\u91cf\n- multiline log and indent for json\n- debug as default level\n\n### \u5b89\u88c5\u65b9\u6cd5\n```\n$ pip install logz\n```\n\n### \u4f7f\u7528\u65b9\u6cd5\n#### \u7b80\u5355\u4f7f\u7528\n\n```python\nfrom logz import log\n\nlog.debug('debug msg')\nlog.info('info msg')\nlog.warning('warning msg')\nlog.error('error msg')\nlog.critical('critical mst')\ntry:\n    assert 0\nexcept assertionerror as ex:\n    log.exception(ex)\n```\n\u8f93\u51fa:\n```\n2019-12-12 22:39:43,584 debug debug msg\n2019-12-12 22:39:43,584 info info msg\n2019-12-12 22:39:43,584 warning warning msg\n2019-12-12 22:39:43,585 error error msg\n2019-12-12 22:39:43,585 critical critical mst\ntraceback (most recent call last):\n  file \"/users/apple/documents/projects/logz/logz/__init__.py\", line 199, in <module>\n    assert 0\nassertionerror\n```\n\n### \u4e00\u6b21\u8f93\u51fa\u591a\u4e2a\u53d8\u91cf\n\u50cfprint\u51fd\u6570\u4e00\u6837,log.info\u7b49\u65b9\u6cd5\u53ef\u4ee5\u4e00\u6b21\u8f93\u51fa\u591a\u4e2a\u53d8\u91cf\n```python\na = 'hello'\nb = 1\nc = [2]\nd = {'name': 'kevin'}\nlog.info(a,b,c,d)\n```\n\u8f93\u51fa:\n```\n2019-12-12 22:40:20,221 info hello 1 [2] {'name': 'kevin'}\n```\n\n> \u6ce8\u610f: log\u65b9\u6cd5\u4e2d\u539f\u6765\u652f\u6301%s\u683c\u5f0f\u8bdd\u7684\u53d8\u91cf\u88ab\u4fee\u6539\u4e3a\u652f\u6301log\u591a\u4e2a\u53d8\u91cf\n\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u539f\u6709\u7684\u65e5\u5fd7\u65b9\u5f0f:\n```python\nimport logging\nlogging.info('name=%s,age=%d', 'kevin',18)\n```\n\u4f60\u53ef\u4ee5\u5c06\u53d8\u91cf\u76f4\u63a5\u683c\u5f0f\u5316\u5230\u5b57\u7b26\u4e32\u4e2d\uff0c\u5982\u4e0b\uff1a\n```python\nlog.info('name=%s,age=%d' % ('kevin',18))\n```\n\u8f93\u51fa:\n```\n2019-12-12 22:41:58,024 info name=kevin,age=18\n```\n\n#### \u65e5\u5fd7\u6587\u4ef6\n```python\nlog.file='tmps/tmp.log'\nlog.info('info msg')\n```\n> \u6ce8\u610f: \u65e5\u5fd7\u76ee\u5f55\u5fc5\u987b\u5b58\u5728\n\nby default it's a rotting file and maxbytes=10240 and backups=5\n\n#### \u6309\u65e5\u671f\u8bb0\u5f55\u65e5\u5fd7\n```python\nlog.file='tmps/%y-%m-%d.log'\nlog.info('info msg')\n```\n\u7ed3\u679c\u662f\u4e00\u4e2a\u6309\u5929\u6eda\u52a8\u7684\u65e5\u5fd7\u6587\u4ef6\uff0c\u7279\u522b\u5bf9\u4e8eflask\u7b49\u642d\u5efa\u7b49\u5e38\u9a7b\u578b\uff0cweb\u670d\u52a1\uff0c\u65e5\u5fd7\u53ef\u4ee5\u6309\u5929\u5728\u65b0\u7684\u65e5\u671f\u81ea\u52a8\u751f\u6210\u65b0\u7684\u65e5\u5fd7\uff0c\u800c\u65e0\u9700\u91cd\u542f\n\n\n\n#### \u8bb0\u5f55\u65e5\u5fd7\u5230email\u4e2d  \n> \u5e9f\u5f03 \u26a0\ufe0f\n\n```python\nlog.email = dict(host=\"smtp.sina.com\", user='test_results@sina.com', password='***',\n                    receivers=['superhin@126.com'], capacity=10)\n\nfor i in range(20):\n    log.error('\u8fd9\u4e2a\u662f\u4e2a\u9519\u8bef\u65e5\u5fd7')\n```\n\n#### \u4fee\u6539\u65e5\u5fd7\u7b49\u7ea7\n```\nlog.level = 'info'\nlog.level = logging.info\nlog.debug('not show')\nlog.info('show info')\n```\n\u8f93\u51fa:\n```\n2019-12-12 22:43:24,479 info show info\n```\n\n> \u4f7f\u7528\u5b57\u7b26\u4e32\u8d4b\u503clevel\u65f6\u5927\u5c0f\u5199\u4e0d\u654f\u611f, `log.level = 'info'` \u6216 `log.level = 'info'`\u90fd\u53ef\u4ee5\n\n#### \u4fee\u6539\u65e5\u5fd7\u683c\u5f0f\n```\nlog.format = '%(levelname)s|%(filename)s|%(funcname)s|%(lineno)d|%(message)s'\n```\n\n#### \u4f7f\u7528\u989d\u5916\u5b57\u6bb5\n```\nlog.format = '%(asctime)s %(levelname)s %(user)s %(message)s'\nlog.info('hello with no user')\nlog.info('hello with kevin', extra={'user': 'kevin'})\n```\n\u8f93\u51fa:\n```\n2019-12-12 22:45:18,604 info none hello with no user\n2019-12-12 22:45:18,604 info kevin hello with kevin\n```\n\n### json\u591a\u884c\u8f93\u51fa\u548c\u5b57\u6bb5\u7f29\u8fdb\n```python\nlog.info({'foo': 'bar'}, indent=2)\n```\n\n\u8f93\u51fa:\n```\n2019-12-09 19:30:16,419 debug log none ->\n{\n  \"foo\": \"bar\"\n}\n```\n\n#### \u4f7f\u7528logit\u88c5\u9970\u5668\n\u4f7f\u7528logit\u88c5\u9970\u5668\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c06\u81ea\u52a8\u8f93\u51fa`debug`\u65e5\u5fd7\uff0c\u5305\u542b\u8c03\u7528\u65b9\u3001\u8c03\u7528\u53c2\u6570\uff0c\u8fd4\u56de\u503c\uff0c\u8017\u65f6\u4fe1\u606f\u7b49\n```python\nfrom logz import logit\n\n@logit\ndef add(a, b):\n    return a+b\n    \ndef calc():\n    add(1, 20)\n\ncalc()\n```\n\u8f93\u51fa:\n```\n2020-06-30 12:39:06,124 debug calc -> add(1,20) return: 21 duration: 0.017280101776123047s\n```\n\n\u5bf9\u8c61\u65b9\u6cd5\u4e2d\u4f7f\u7528logit\n```python\nclass calculator(object):\n    @logit\n    def add(self, a, b):\n        return a + b\n            \n\ncalculator.add(2,30)\n```\n\n\n### \u5f85\u5b8c\u5584\n- [ ] \u901a\u7528extra\u5b57\u6bb5\u53ca\u9ed8\u8ba4\u503c\u914d\u7f6e\n- log file to config maxbytes or else\n- log to html\n- log to db\n- log diff\n- log assert\n- log print\n- log to server using websocket\n- more decorators such as @explain @exception @timeit @email\n- support verbosity\n\n### bugs\n- [ ] logit\u88c5\u9970\u5668\u5728\u5bf9\u8c61\u65b9\u6cd5\u4e2d\u62a5\u9519\n- [ ] \u8fd8\u539f\u4e3alogging.getlogger\u540e`%(funcname)s`\u5b57\u6bb5\u663e\u793a\u4e0d\u6b63\u786e\n\n### \u5bf9\u6bd4\nlogging |logz |logzero |loguru\n---| --- | --- | ---\n\u529f\u80fd | \n\u6613\u7528\u6027 | \n\n\n\n\n",
  "docs_url": null,
  "keywords": "logz,extra,log",
  "license": "mit license",
  "name": "logz",
  "package_url": "https://pypi.org/project/logz/",
  "project_url": "https://pypi.org/project/logz/",
  "project_urls": {
    "Homepage": "https://github.com/hanzhichao/logz"
  },
  "release_url": "https://pypi.org/project/logz/0.19/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "easy log use for extra infos",
  "version": "0.19",
  "releases": [],
  "developers": [
    "han_zhichao",
    "superhin@126.com"
  ],
  "kwds": "s\u683c\u5f0f\u8bdd\u7684\u53d8\u91cf\u88ab\u4fee\u6539\u4e3a\u652f\u6301log\u591a\u4e2a\u53d8\u91cf logging assertionerror \u8fd8\u539f\u4e3alogging log",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_logz",
  "homepage": "https://github.com/hanzhichao/logz",
  "release_count": 9,
  "dependency_ids": []
}
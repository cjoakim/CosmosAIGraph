{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: other environment",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development",
    "topic :: utilities"
  ],
  "description": "# docker sdk for python\n\n[![build status](https://github.com/docker/docker-py/actions/workflows/ci.yml/badge.svg)](https://github.com/docker/docker-py/actions/workflows/ci.yml)\n\na python library for the docker engine api. it lets you do anything the `docker` command does, but from within python apps \u2013 run containers, manage containers, manage swarms, etc.\n\n## installation\n\nthe latest stable version [is available on pypi](https://pypi.python.org/pypi/docker/). either add `docker` to your `requirements.txt` file or install with pip:\n\n    pip install docker\n\n> older versions (< 6.0) required installing `docker[tls]` for ssl/tls support.\n> this is no longer necessary and is a no-op, but is supported for backwards compatibility.\n\n## usage\n\nconnect to docker using the default socket or the configuration in your environment:\n\n```python\nimport docker\nclient = docker.from_env()\n```\n\nyou can run containers:\n\n```python\n>>> client.containers.run(\"ubuntu:latest\", \"echo hello world\")\n'hello world\\n'\n```\n\nyou can run containers in the background:\n\n```python\n>>> client.containers.run(\"bfirsh/reticulate-splines\", detach=true)\n<container '45e6d2de7c54'>\n```\n\nyou can manage containers:\n\n```python\n>>> client.containers.list()\n[<container '45e6d2de7c54'>, <container 'db18e4f20eaa'>, ...]\n\n>>> container = client.containers.get('45e6d2de7c54')\n\n>>> container.attrs['config']['image']\n\"bfirsh/reticulate-splines\"\n\n>>> container.logs()\n\"reticulating spline 1...\\n\"\n\n>>> container.stop()\n```\n\nyou can stream logs:\n\n```python\n>>> for line in container.logs(stream=true):\n...   print(line.strip())\nreticulating spline 2...\nreticulating spline 3...\n...\n```\n\nyou can manage images:\n\n```python\n>>> client.images.pull('nginx')\n<image 'nginx'>\n\n>>> client.images.list()\n[<image 'ubuntu'>, <image 'nginx'>, ...]\n```\n\n[read the full documentation](https://docker-py.readthedocs.io) to see everything you can do.\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "docker",
  "package_url": "https://pypi.org/project/docker/",
  "project_url": "https://pypi.org/project/docker/",
  "project_urls": {
    "Changelog": "https://docker-py.readthedocs.io/en/stable/change-log.html",
    "Documentation": "https://docker-py.readthedocs.io",
    "Homepage": "https://github.com/docker/docker-py",
    "Source": "https://github.com/docker/docker-py",
    "Tracker": "https://github.com/docker/docker-py/issues"
  },
  "release_url": "https://pypi.org/project/docker/7.0.0/",
  "requires_dist": [
    "packaging >=14.0",
    "requests >=2.26.0",
    "urllib3 >=1.26.0",
    "pywin32 >=304 ; sys_platform == \"win32\"",
    "paramiko >=2.4.3 ; extra == 'ssh'",
    "websocket-client >=1.3.0 ; extra == 'websockets'"
  ],
  "requires_python": ">=3.8",
  "summary": "a python library for the docker engine api.",
  "version": "7.0.0",
  "releases": [],
  "developers": [
    "docker",
    "no-reply@docker.com"
  ],
  "kwds": "docker pypi pip containers container",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_docker",
  "homepage": "https://github.com/docker/docker-py",
  "release_count": 64,
  "dependency_ids": [
    "pypi_packaging",
    "pypi_paramiko",
    "pypi_pywin32",
    "pypi_requests",
    "pypi_urllib3",
    "pypi_websocket_client"
  ]
}
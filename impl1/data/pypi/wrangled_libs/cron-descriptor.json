{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development"
  ],
  "description": "# cron descriptor\n\n[![python tests](https://github.com/salamek/cron-descriptor/actions/workflows/python-test.yml/badge.svg)](https://github.com/salamek/cron-descriptor/actions/workflows/python-test.yml)\n[![donate](https://img.shields.io/badge/donate-paypal-green.svg)](https://www.paypal.me/salamek)\n\na python library that converts cron expressions into human readable strings. ported to python from https://github.com/bradyholt/cron-expression-descriptor.\n\n**author**: adam schubert (https://www.salamek.cz)  \n**original author & credit**: brady holt (http://www.geekytidbits.com)  \n**license**: [mit](http://opensource.org/licenses/mit)\n\n## features         \n * supports all cron expression special characters including * / , - ? l w, #\n * supports 5, 6 (w/ seconds or year), or 7 (w/ seconds and year) part cron expressions\n * provides casing options (sentence, title, lower, etc.)\n * localization with support for 17 languages\n * supports python 2.7 - 3.10\n\n## installation\nusing pip\n```bash\npip install cron-descriptor\n```\n\n## usage example\n\n### simple\n```python\nfrom cron_descriptor import get_description, expressiondescriptor\n\nprint(get_description(\"* 2 3 * *\"))\n\n#or\n\nprint(str(expressiondescriptor(\"* 2 3 * *\")))\n```\n\n### advanced\n```python\n# consult options.py/casingtypeenum.py/descriptiontypeenum.py for more info\nfrom cron_descriptor import options, casingtypeenum, descriptiontypeenum, expressiondescriptor\n\ndescriptor = expressiondescriptor(\n    expression = \"*/10 * * * *\",\n    casing_type = casingtypeenum.sentence,\n    use_24hour_time_format = true\n)\n\n# getdescription uses descriptiontypeenum.full by default:\nprint(descriptor.get_description())\nprint(\"{}\".format(descriptor))\n\n# or passing options class as second argument:\n\noptions = options()\noptions.casing_type = casingtypeenum.sentence\noptions.use_24hour_time_format = true\ndescriptor = expressiondescriptor(\"*/10 * * * *\", options)\nprint(descriptor.get_description(descriptiontypeenum.full))\n```\n\n## languages available\n\n|language| locale code | contributor |\n|--------|-------------|-------------|\n|english |en|[brady holt](https://github.com/bradyholt)|\n|brazilian |pt_pt|[renato lima](https://github.com/natenho)|\n|chinese simplified | zh_cn |[star peng](https://github.com/starpeng)|\n|spanish |es_es|[ivan santos](https://github.com/ivansg)|\n|norwegian |nb_no|[siarhei khalipski](https://github.com/khalipskisiarhei)|\n|turkish |tr_tr|[mustafa sadedi\u0307l](https://github.com/sadedil)|\n|dutch |nl_nl|[totalmace](https://github.com/totalmace)|\n|russian |ru_ru|[lbiss](https://github.com/lbiss)|\n|french |fr_fr|[arnaud tamaillon](https://github.com/greybird)|\n|german |de_de|[michael schuler](https://github.com/mschuler)|\n|ukrainian |uk_ua|[taras](https://github.com/tbudurovych)|\n|italian |it_it|[rinaldihno](https://github.com/rinaldihno)|\n|czech |cs_cz|[adam schubert](https://github.com/salamek)|\n|swedish |sv_se|[\u00e5ke engelbrektson](https://github.com/eson57)|\n|tamil |ta_in|[sankar hari](https://github.com/sankarhari)|\n|persian|fa_ir|[m. yas. davoodeh](https://github.com/davoodeh)|\n|korean|ko_kr|[kyujoo han](https://github.com/hanqyu)|\n|japanese |ja_jp|[tho nguyen](https://github.com/tho-asterist)|\n\n<!-- soon\n## demo\n\n\n\n## download\n\n-->\n\n## original source\n - .net - [https://github.com/bradyholt/cron-expression-descriptor](https://github.com/bradyholt/cron-expression-descriptor)\n\n## ports\n - java     - [https://github.com/redhogs/cron-parser](https://github.com/redhogs/cron-parser)\n - ruby     - [https://github.com/alpinweis/cronex](https://github.com/alpinweis/cronex)\n - golang   - [https://github.com/jsuar/go-cron-descriptor](https://github.com/jsuar/go-cron-descriptor)\n\n## running unit tests\n\n```bash\npython setup.py test\n```\n\n## translating\ncron-descriptor is using [gettext](https://www.gnu.org/software/gettext/) for translations.\n\n> to create new translation or edit existing one, i suggest using [poedit](https://poedit.net/).\n\nyou can copy/rename and translate any file from `locale` directory:\n```bash\ncp ./cron_descriptor/locale/de_de.po ./cron_descriptor/locale/your_locale_code.po\npoedit ./cron_descriptor/locale/your_locale_code.po\n```\nor you can generate new untranslated *.po file from sources by running in `cron_descriptor` directory:\n```bash\ncd cron_descriptor\nxgettext *.py -o locale/your_locale_code.po\n```\n\ngenerating *.mo file from *.po file. in root directory run command:\n```bash\nmsgfmt -o cron_descriptor/locale/your_locale_code.mo cron_descriptor/locale/your_locale_code.po\n```\n\n## developing\n\nall suggestions and pr's are welcomed\n\njust clone this repository and register pre-commit hook by running:\n\n```bash\nln -s ../../pre-commit.sh .git/hooks/pre-commit\n```\n\nthen install dev requirements:\n\n```bash\npip install pep8\npip install flake8\npip install pep8-naming\n```",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "cron-descriptor",
  "package_url": "https://pypi.org/project/cron-descriptor/",
  "project_url": "https://pypi.org/project/cron-descriptor/",
  "project_urls": {
    "Homepage": "https://github.com/Salamek/cron-descriptor"
  },
  "release_url": "https://pypi.org/project/cron-descriptor/1.4.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a python library that converts cron expressions into human readable strings.",
  "version": "1.4.0",
  "releases": [],
  "developers": [
    "adam.schubert@sg1-game.net",
    "adam_schubert"
  ],
  "kwds": "cron_descriptor cron python workflows cronex",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_cron_descriptor",
  "homepage": "https://github.com/salamek/cron-descriptor",
  "release_count": 27,
  "dependency_ids": []
}
{
  "classifiers": [
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "# python discord webhook\n\n[![github license](https://img.shields.io/badge/license-mit-brightgreen.svg)](https://raw.githubusercontent.com/lovvskillz/python-discord-webhook/master/license)\n[![pypi version](https://badge.fury.io/py/discord-webhook.svg)](https://badge.fury.io/py/discord-webhook)\n[![downloads](https://pepy.tech/badge/discord-webhook)](https://pepy.tech/project/discord-webhook)\n\neasily send discord webhooks with python (also has [async support](#async-support))\n\n## install\n\ninstall via pip:\n```\npip install discord-webhook\n```\n\n## examples\n\n* [basic webhook](#basic-webhook)\n* [create multiple instances / use multiple urls](#create-multiple-instances)\n* [get webhook by id](#get-webhook-by-id)\n* [send webhook to thread](#send-webhook-to-thread)\n* [manage being rate limited](#manage-being-rate-limited)\n* [embedded content](#webhook-with-embedded-content)\n* [edit webhook message](#edit-webhook-messages)\n* [delete webhook message](#delete-webhook-messages)\n* [send files](#send-files)\n* [remove embeds and files](#remove-embeds-and-files)\n* [allowed mentions](#allowed-mentions)\n* [use proxies](#use-proxies)\n* [timeout](#timeout)\n* [async support](#async-support)\n\n### basic webhook\n\n```python\nfrom discord_webhook import discordwebhook\n\nwebhook = discordwebhook(url=\"your webhook url\", content=\"webhook message\")\nresponse = webhook.execute()\n```\n\n### create multiple instances\nif you want to use multiple urls you need to create multiple instances.\n\n```python\nfrom discord_webhook import discordwebhook\n\n# you can provide any kwargs except url\nwebhook1, webhook2 = discordwebhook.create_batch(urls=[\"first url\", \"second url\"], content=\"webhook message\")\nresponse1 = webhook1.execute()\nresponse2 = webhook2.execute()\n```\n![image](img/multiple_urls.png \"multiple urls result\")\n\n### get webhook by id\nyou can access a webhook that has already been sent by providing the id.\n\n````python\nfrom discord_webhook import discordwebhook\n\nwebhook = discordwebhook(url=\"your webhook url\", id=\"your webhook message id\")\n# now you could delete or edit the webhook\n# ...\n````\n### send webhook to thread\nyou can send a message to an existing thread by setting `thread_id` or create a new thread in a forum channel by using a `thread_name`.\n```python\nfrom discord_webhook import discordwebhook\n\n# send to an existing thread\nwebhook = discordwebhook(url=\"your webhook url\", thread_id=\"the thread id\")\nwebhook.execute()\n\n# create a new thread in a forum channel\nwebhook = discordwebhook(url=\"your webhook url\", thread_name=\"some-thread-name\")\nwebhook.execute()\n```\n\n### manage being rate limited\n\n```python\nfrom discord_webhook import discordwebhook\n\n# if rate_limit_retry is true then in the event that you are being rate \n# limited by discord your webhook will automatically be sent once the \n# rate limit has been lifted\nwebhook = discordwebhook(url=\"your webhook url\", rate_limit_retry=true, content=\"webhook message\")\nresponse = webhook.execute()\n```\n\n![image](img/basic_webhook.png \"basic example result\")\n\n### webhook with embedded content\n\n```python\nfrom discord_webhook import discordwebhook, discordembed\n\nwebhook = discordwebhook(url=\"your webhook url\")\n\n# create embed object for webhook\n# you can set the color as a decimal (color=242424) or hex (color=\"03b2f8\") number\nembed = discordembed(title=\"your title\", description=\"lorem ipsum dolor sit\", color=\"03b2f8\")\n\n# add embed object to webhook\nwebhook.add_embed(embed)\n\nresponse = webhook.execute()\n```\n\n![image](img/simple_embed.png \"basic embed example result\")\n\n```python\nfrom discord_webhook import discordwebhook, discordembed\n\nwebhook = discordwebhook(url=\"your webhook url\")\n\n# create embed object for webhook\nembed = discordembed(title=\"your title\", description=\"lorem ipsum dolor sit\", color=\"03b2f8\")\n\n# set author\nembed.set_author(name=\"author name\", url=\"author url\", icon_url=\"author icon url\")\n\n# set image\nembed.set_image(url=\"your image url\")\n\n# set thumbnail\nembed.set_thumbnail(url=\"your thumbnail url\")\n\n# set footer\nembed.set_footer(text=\"embed footer text\", icon_url=\"url of icon\")\n\n# set timestamp (default is now) accepted types are int, float and datetime\nembed.set_timestamp()\n\n# add fields to embed\nembed.add_embed_field(name=\"field 1\", value=\"lorem ipsum\")\nembed.add_embed_field(name=\"field 2\", value=\"dolor sit\")\n\n# add embed object to webhook\nwebhook.add_embed(embed)\n\nresponse = webhook.execute()\n```\n\n![image](img/extended_embed.png \"basic embed example result\")\n\nthis is another example with embedded content\n\n```python\nfrom discord_webhook import discordwebhook, discordembed\n\nwebhook = discordwebhook(url=\"your webhook url\", username=\"new webhook username\")\n\nembed = discordembed(title=\"embed title\", description=\"your embed description\", color=\"03b2f8\")\nembed.set_author(name=\"author name\", url=\"https://github.com/lovvskillz\", icon_url=\"https://avatars0.githubusercontent.com/u/14542790\")\nembed.set_footer(text=\"embed footer text\")\nembed.set_timestamp()\nembed.add_embed_field(name=\"field 1\", value=\"lorem ipsum\")\nembed.add_embed_field(name=\"field 2\", value=\"dolor sit\")\nembed.add_embed_field(name=\"field 3\", value=\"amet consetetur\")\nembed.add_embed_field(name=\"field 4\", value=\"sadipscing elitr\")\n\nwebhook.add_embed(embed)\nresponse = webhook.execute()\n```\n\n![image](img/extended_embed2.png \"example embed result\")\n\nby default, the embed fields are placed side by side. we can arrange them in a new line by setting `inline=false` as follows:\n\n```python\nfrom discord_webhook import discordwebhook, discordembed\n\nwebhook = discordwebhook(url=\"your webhook url\", username=\"new webhook username\")\n\nembed = discordembed(\n    title=\"embed title\", description=\"your embed description\", color=\"03b2f8\"\n)\nembed.set_author(\n    name=\"author name\",\n    url=\"https://github.com/lovvskillz\",\n    icon_url=\"https://avatars0.githubusercontent.com/u/14542790\",\n)\nembed.set_footer(text=\"embed footer text\")\nembed.set_timestamp()\n# set `inline=false` for the embed field to occupy the whole line\nembed.add_embed_field(name=\"field 1\", value=\"lorem ipsum\", inline=false)\nembed.add_embed_field(name=\"field 2\", value=\"dolor sit\", inline=false)\nembed.add_embed_field(name=\"field 3\", value=\"amet consetetur\")\nembed.add_embed_field(name=\"field 4\", value=\"sadipscing elitr\")\n\nwebhook.add_embed(embed)\nresponse = webhook.execute()\n```\n\n![image](img/extended_embed3.png \"example non-inline embed result\")\n\n### edit webhook messages\n\n```python\nfrom discord_webhook import discordwebhook\nfrom time import sleep\n\nwebhook = discordwebhook(url=\"your webhook url\", content=\"webhook content before edit\")\nwebhook.execute()\nwebhook.content = \"after edit\"\nsleep(10)\nwebhook.edit()\n```\n\n### delete webhook messages\n\n```python\nfrom discord_webhook import discordwebhook\nfrom time import sleep\n\nwebhook = discordwebhook(url=\"your webhook url\", content=\"webhook content\")\nwebhook.execute()\nsleep(10)\nwebhook.delete()\n```\n\n### send files\n\n```python\nfrom discord_webhook import discordwebhook\n\nwebhook = discordwebhook(url=\"your webhook url\", username=\"webhook with files\")\n\n# send two images\nwith open(\"path/to/first/image.jpg\", \"rb\") as f:\n    webhook.add_file(file=f.read(), filename=\"example.jpg\")\nwith open(\"path/to/second/image.jpg\", \"rb\") as f:\n    webhook.add_file(file=f.read(), filename=\"example2.jpg\")\n\nresponse = webhook.execute()\n```\n\n![image](img/webhook_files.png \"example files result\")\n\nyou can use uploaded attachments in embeds:\n\n```python\nfrom discord_webhook import discordwebhook, discordembed\n\nwebhook = discordwebhook(url=\"your webhook url\")\n\nwith open(\"path/to/image.jpg\", \"rb\") as f:\n    webhook.add_file(file=f.read(), filename=\"example.jpg\")\n\nembed = discordembed(title=\"embed title\", description=\"your embed description\", color=\"03b2f8\")\nembed.set_thumbnail(url=\"attachment://example.jpg\")\n\nwebhook.add_embed(embed)\nresponse = webhook.execute()\n```\n\n### remove embeds and files\n\n```python\nfrom discord_webhook import discordwebhook, discordembed\n\nwebhook = discordwebhook(url=\"your webhook url\")\n\nwith open(\"path/to/image.jpg\", \"rb\") as f:\n    webhook.add_file(file=f.read(), filename=\"example.jpg\")\n\nembed = discordembed(title=\"embed title\", description=\"your embed description\", color=\"03b2f8\")\nembed.set_thumbnail(url=\"attachment://example.jpg\")\n\nwebhook.add_embed(embed)\nresponse = webhook.execute(remove_embeds=true)\n# webhook.embeds will be empty after webhook is executed\n# you could also manually call the function webhook.remove_embeds()\n```\n\n`.remove_file()` removes the given file\n\n```python\nfrom discord_webhook import discordwebhook\n\nwebhook = discordwebhook(url=\"your webhook url\", username=\"webhook with files\")\n\n# send two images\nwith open(\"path/to/first/image.jpg\", \"rb\") as f:\n    webhook.add_file(file=f.read(), filename=\"example.jpg\")\nwith open(\"path/to/second/image.jpg\", \"rb\") as f:\n    webhook.add_file(file=f.read(), filename=\"example2.jpg\")\n# remove \"example.jpg\"\nwebhook.remove_file(\"example.jpg\")\n# only \"example2.jpg\" is sent to the webhook\nresponse = webhook.execute()\n```\n\n### allowed mentions\n\nlook into the [discord docs](https://discord.com/developers/docs/resources/channel#allowed-mentions-object) for examples and for more explanation\n\nthis example would only ping user `123` and `124` but not everyone else.\n\n```python\nfrom discord_webhook import discordwebhook\n\ncontent = \"@everyone say hello to our new friends <@123> and <@124>\"\nallowed_mentions = {\n    \"users\": [\"123\", \"124\"]\n}\n\nwebhook = discordwebhook(url=\"your webhook url\", content=content, allowed_mentions=allowed_mentions)\nresponse = webhook.execute()\n```\n\n### use proxies\n\n```python\nfrom discord_webhook import discordwebhook\n\nproxies = {\n  \"http\": \"http://10.10.1.10:3128\",\n  \"https\": \"http://10.10.1.10:1080\",\n}\nwebhook = discordwebhook(url=\"your webhook url\", content=\"webhook message\", proxies=proxies)\nresponse = webhook.execute()\n```\nor\n```python\nfrom discord_webhook import discordwebhook\n\nproxies = {\n  \"http\": \"http://10.10.1.10:3128\",\n  \"https\": \"http://10.10.1.10:1080\",\n}\nwebhook = discordwebhook(url=\"your webhook url\", content=\"webhook message\")\nwebhook.set_proxies(proxies)\nresponse = webhook.execute()\n```\n\n### timeout\n\n```python\nfrom requests.exceptions import timeout\nfrom discord_webhook import discordwebhook, discordembed\n\n# we will set ridiculously low timeout threshold for testing purposes\nwebhook = discordwebhook(url=\"your webhook url\", timeout=0.1)\n\n# you can also set timeout later using\n# webhook.timeout = 0.1\n\nembed = discordembed(title=\"embed title\", description=\"your embed description\", color=\"03b2f8\")\n\nwebhook.add_embed(embed)\n\n# handle timeout exception\ntry:\n    response = webhook.execute()\nexcept timeout as err:\n    print(f\"oops! connection to discord timed out: {err}\")\n```\n\n### async support\nin order to use the async version, you need to install the package using:\n```\npip install discord-webhook[async]\n```\nexample usage:\n```python\nimport asyncio\nfrom discord_webhook import asyncdiscordwebhook\n\n\nasync def send_webhook(message):\n    webhook = asyncdiscordwebhook(url=\"your webhook url\", content=message)\n    await webhook.execute()\n\n\nasync def main():\n    await asyncio.gather(\n        send_webhook(\"async webhook message 1\"),\n        send_webhook(\"async webhook message 2\"),\n    )  # sends both messages asynchronously\n\n\nasyncio.run(main())\n```\n\n### use cli\n\n```\nusage: discord_webhook [-h] -u url [url ...] -c content [--username username]\n                       [--avatar_url avatar_url]\n\ntrigger discord webhook(s).\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -u url [url ...], --url url [url ...]\n                        webhook(s) url(s)\n  -c content, --content content\n                        message content\n  --username username   override the default username of the webhook\n  --avatar_url avatar_url\n                        override the default avatar of the webhook\n```\n\n## development\n\n### dev setup\nthis project uses [poetry](https://python-poetry.org/docs/) for dependency management and packaging.\n\ninstall poetry and add poetry to [path](https://python-poetry.org/docs/#installation).\n\n**debian / ubuntu / mac**\n\n`curl -ssl https://install.python-poetry.org | python3 -`\n\n**windows**\n\nopen powershell and run: `(invoke-webrequest -uri https://install.python-poetry.org -usebasicparsing).content | py -`\n\ninstall dependencies: `poetry install`\n\ninstall the defined pre-commit hooks: `poetry run pre-commit install`\n\nactivate the virtualenv: `poetry shell`",
  "docs_url": null,
  "keywords": "discord,webhook",
  "license": "mit",
  "name": "discord-webhook",
  "package_url": "https://pypi.org/project/discord-webhook/",
  "project_url": "https://pypi.org/project/discord-webhook/",
  "project_urls": {
    "Homepage": "https://github.com/lovvskillz/python-discord-webhook",
    "Repository": "https://github.com/lovvskillz/python-discord-webhook"
  },
  "release_url": "https://pypi.org/project/discord-webhook/1.3.0/",
  "requires_dist": [
    "requests (>=2.28.1,<3.0.0)",
    "httpx (>=0.23.0,<0.24.0) ; extra == \"async\""
  ],
  "requires_python": ">=3.8,<4.0",
  "summary": "easily send discord webhooks with python",
  "version": "1.3.0",
  "releases": [],
  "developers": [
    "14542790+lovvskillz@users.noreply.github.com",
    "lovvskillz"
  ],
  "kwds": "discord_webhook basic_webhook webhook2 send_webhook webhook",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_discord_webhook",
  "homepage": "https://github.com/lovvskillz/python-discord-webhook",
  "release_count": 27,
  "dependency_ids": [
    "pypi_httpx",
    "pypi_requests"
  ]
}
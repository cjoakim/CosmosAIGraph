{
  "classifiers": [
    "intended audience :: developers",
    "license :: public domain",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 2.6",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.2",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "topic :: utilities"
  ],
  "description": "# pip-upgrader [![build status](https://travis-ci.org/simion/pip-upgrader.svg?branch=master)](https://travis-ci.org/simion/pip-upgrader)\n\nan interactive pip requirements upgrader. because upgrading\nrequirements, package by package, is a pain in the ass. it also updates\nthe version in your requirements.txt file.\n\n## purpose\n\nthis cli tools helps you interactively(or not) upgrade packages from\nrequirements file, and also **update the pinned version from\nrequirements file(s)**.\n\nif no requirements are given, the command **attempts to detect the\nrequirements file(s)** in the current directory.\n\nquick preview:\n\n![image](https://raw.githubusercontent.com/simion/pip-upgrader/master/demo.gif)\n\n## installation\n\n    pip install pip-upgrader\n\n**note:** this packages installs the following requirements: `'docopt',\n'packaging', 'requests', 'terminaltables', 'colorclass'`\n\nto avoid installing all these dependencies in your project, you can\ninstall `pip-upgrader` in your system, rather than your virtualenv. if\nyou install it in your system, and need to upgrade it, run `pip install\n-u pip-upgrader`\n\n## usage\n\n**activate your virtualenv** (important, because it will also install\nthe new versions of upgraded packages in current virtualenv)\n\n**cd into your project.** then: :\n\n    $ pip-upgrade\n\narguments: :\n\n    requirements_file(s)          the requirement file, or wildcard path to multiple files. (positional arguments)\n    --prerelease                  include prerelease versions for upgrade, when querying pypi repositories.\n    -p <package>                  pre-choose which packages tp upgrade. skips any prompt.\n    --dry-run                     simulates the upgrade, but does not execute the actual upgrade.\n    --skip-package-installation   only upgrade the version in requirements files, don't install the new package.\n    --skip-virtualenv-check       disable virtualenv check. allows installing the new packages outside the virtualenv.\n    --use-default-index           skip searching for custom index-url in pip configuration file(s).\n\nexamples:\n\n    pip-upgrade             # auto discovers requirements file. prompts for selecting upgrades\n    pip-upgrade requirements.txt\n    pip-upgrade requirements/dev.txt requirements/production.txt\n\n    # skip prompt and manually choose some/all packages for upgrade\n    pip-upgrade requirements.txt -p django -p celery\n    pip-upgrade requirements.txt -p all\n\n    # include pre-release versions\n    pip-upgrade --prerelease\n\nto use `pip-upgrader` on install requirements located in a `setup.py`\nfile, try this:\n\n``` sh\n./setup.py egg_info\npip-upgrade $(./setup.py --name | tr -- - _)*.egg-info/requires.txt\n```\n\nthis will display any versions that can be upgraded, and helps you to\nmanually main\n\n\n",
  "docs_url": null,
  "keywords": "cli,pip,pypi,requirements,upgrade",
  "license": "apache license 2.0",
  "name": "pip-upgrader",
  "package_url": "https://pypi.org/project/pip-upgrader/",
  "project_url": "https://pypi.org/project/pip-upgrader/",
  "project_urls": {
    "Homepage": "https://github.com/simion/pip-upgrader"
  },
  "release_url": "https://pypi.org/project/pip-upgrader/1.4.15/",
  "requires_dist": [
    "docopt",
    "packaging",
    "requests",
    "terminaltables",
    "colorclass",
    "coverage ; extra == 'test'",
    "pytest ; extra == 'test'",
    "pytest-cov ; extra == 'test'",
    "pytest-pep8 ; extra == 'test'",
    "mock ; extra == 'test'",
    "responses ; extra == 'test'"
  ],
  "requires_python": "",
  "summary": "an interactive pip requirements upgrader. it also updates the version in your requirements.txt file.",
  "version": "1.4.15",
  "releases": [],
  "developers": [
    "simion.agv@gmail.com",
    "simion_baws"
  ],
  "kwds": "requirements_file travis pip upgrader upgrades",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_pip_upgrader",
  "homepage": "https://github.com/simion/pip-upgrader",
  "release_count": 19,
  "dependency_ids": [
    "pypi_colorclass",
    "pypi_coverage",
    "pypi_docopt",
    "pypi_mock",
    "pypi_packaging",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_pep8",
    "pypi_requests",
    "pypi_responses",
    "pypi_terminaltables"
  ]
}
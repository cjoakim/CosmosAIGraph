{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: macos :: macos x",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: posix :: linux",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "topic :: security",
    "topic :: software development"
  ],
  "description": "# securesystemslib\n\n[![ci](https://github.com/secure-systems-lab/securesystemslib/workflows/run%20securesystemslib%20tests/badge.svg)](https://github.com/secure-systems-lab/securesystemslib/actions?query=workflow%3a%22run+securesystemslib+tests%22+branch%3amain)\n[![documentation status](https://readthedocs.org/projects/python-securesystemslib/badge/?version=latest)](https://python-securesystemslib.readthedocs.io/en/latest/?badge=latest)\n\nsecuresystemslib is a cryptography interface for signing and verifying digital\nsignatures. it is developed for the [tuf](https://theupdateframework.io) and\n[in-toto](https://in-toto.io) projects: the key and signature containers are\ncompatible with metadata formats from those projects.\n\nunder the hood, securesystemslib can use various digital signing systems\n(e.g. [cryptography](https://pypi.org/project/cryptography/), piv hardware keys\nand multiple cloud-based key management systems).\n\n## installation\n\nthe default installation supports [pure-python `ed25519` signature\nverification](https://github.com/pyca/ed25519) only. to enable other schemes and\nsignature creation, `securesystemslib` can be installed with *extras*. see\n[pyproject.toml](pyproject.toml) for available *optional dependencies*.\n\n```bash\n# install with ed25519, rsa, ecdsa sign and verify support\npip install securesystemslib[crypto]\n```\n\n```bash\n# ...or with hsm (e.g. yubikey) support\npip install securesystemslib[hsm]\n```\n\n## usage\n[python-securesystemslib.readthedocs.io](https://python-securesystemslib.readthedocs.io)\n\n## contact\n- questions and discussions:\n  [`#securesystemslib-python`](https://cloud-native.slack.com/archives/c05pf3ga7al)\n  on [cncf slack](https://communityinviter.com/apps/cloud-native/cncf)\n- security issues: [*report a vulnerability*](https://github.com/secure-systems-lab/securesystemslib/security/advisories/new)\n- other issues and requests: [*open a new\n  issue*](https://github.com/secure-systems-lab/securesystemslib/issues/new)\n\n## testing\n`tox` is used for testing. it can be installed via\n[pip](https://tox.wiki/en/4.9.0/installation.html#via-pip) and executed from the\ncommand line in the root of the repository.\n\n```bash\ntox\n```\n\n## legacy key migration\n\nuse [`migrate_keys`](docs/migrate_key.py) script to convert key pairs generated\nwith legacy `keys` or `interface` modules to a consistent standard format, which\nis compatible with [`cryptosigner`](docs/crypto_signer.md).\n",
  "docs_url": null,
  "keywords": "cryptography,ecdsa,ed25519,keys,rsa,signatures",
  "license": "mit",
  "name": "securesystemslib",
  "package_url": "https://pypi.org/project/securesystemslib/",
  "project_url": "https://pypi.org/project/securesystemslib/",
  "project_urls": {
    "Homepage": "https://github.com/secure-systems-lab/securesystemslib",
    "Issues": "https://github.com/secure-systems-lab/securesystemslib/issues",
    "Source": "https://github.com/secure-systems-lab/securesystemslib"
  },
  "release_url": "https://pypi.org/project/securesystemslib/0.31.0/",
  "requires_dist": [
    "boto3; extra == 'awskms'",
    "botocore; extra == 'awskms'",
    "cryptography>=40.0.0; extra == 'awskms'",
    "azure-identity; extra == 'azurekms'",
    "azure-keyvault-keys; extra == 'azurekms'",
    "cryptography>=40.0.0; extra == 'azurekms'",
    "cryptography>=40.0.0; extra == 'crypto'",
    "cryptography>=40.0.0; extra == 'gcpkms'",
    "google-cloud-kms; extra == 'gcpkms'",
    "asn1crypto; extra == 'hsm'",
    "cryptography>=40.0.0; extra == 'hsm'",
    "pykcs11; extra == 'hsm'",
    "pynacl>1.2.0; extra == 'pynacl'",
    "pyspx>=0.5.0; extra == 'pyspx'",
    "sigstore~=2.0; extra == 'sigstore'"
  ],
  "requires_python": "~=3.8",
  "summary": "a library that provides cryptographic and general-purpose routines for secure systems lab projects at nyu",
  "version": "0.31.0",
  "releases": [],
  "developers": [
    "theupdateframework@googlegroups.com"
  ],
  "kwds": "securesystemslib 20securesystemslib signatures crypto_signer signature",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_securesystemslib",
  "homepage": "",
  "release_count": 42,
  "dependency_ids": [
    "pypi_asn1crypto",
    "pypi_azure_identity",
    "pypi_azure_keyvault_keys",
    "pypi_boto3",
    "pypi_botocore",
    "pypi_cryptography",
    "pypi_google_cloud_kms",
    "pypi_pykcs11",
    "pypi_pynacl",
    "pypi_pyspx",
    "pypi_sigstore"
  ]
}
{
  "classifiers": [
    "environment :: web environment",
    "framework :: django",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet :: www/http :: dynamic content",
    "topic :: software development",
    "topic :: software development :: libraries :: application frameworks"
  ],
  "description": "===============================================================================\ndjango-js-asset -- script tag with additional attributes for django.forms.media\n===============================================================================\n\n.. image:: https://github.com/matthiask/django-js-asset/workflows/tests/badge.svg\n    :target: https://github.com/matthiask/django-js-asset\n\nusage\n=====\n\nuse this to insert a script tag via ``forms.media`` containing additional\nattributes (such as ``id`` and ``data-*`` for csp-compatible data\ninjection.):\n\n.. code-block:: python\n\n    from js_asset import js\n\n    forms.media(js=[\n        js(\"asset.js\", {\n            \"id\": \"asset-script\",\n            \"data-answer\": \"42\",\n        }),\n    ])\n\nthe rendered media tag (via ``{{ media.js }}`` or ``{{ media }}`` will\nnow contain a script tag as follows, without line breaks:\n\n.. code-block:: html\n\n    <script type=\"text/javascript\" src=\"/static/asset.js\"\n        data-answer=\"42\" id=\"asset-script\"></script>\n\nthe attributes are automatically escaped. the data attributes may now be\naccessed inside ``asset.js``:\n\n.. code-block:: javascript\n\n    var answer = document.queryselector(\"#asset-script\").dataset.answer;\n\nalso, because the implementation of ``static`` differs between supported\ndjango versions (older do not take the presence of\n``django.contrib.staticfiles`` in ``installed_apps`` into account), a\n``js_asset.static`` function is provided which does the right thing\nautomatically.\n\nwhen adding external script assets, you should pass ``static=false`` to the\n``js`` object to avoid passing the script url through ``static()``. in this\ncase, you probably want to add ``defer`` or ``async``, and maybe also\n``integrity`` and ``crossorigin`` attributes. please note that boolean\nattributes are not properly supported when using django before 4.1 so specify\nthem as follows:\n\n.. code-block:: python\n\n    js(\n        \"https://cdn.example.com/script.js\",\n        {\"defer\": \"defer\"},\n        static=false,\n    )\n\n\ncompatibility\n=============\n\nat the time of writing this app is compatible with django 1.8 and better\n(up to and including the django master branch), but have a look at the\n`tox configuration\n<https://github.com/matthiask/django-js-asset/blob/main/tox.ini>`_ for\ndefinitive answers.\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd-3-clause",
  "name": "django-js-asset",
  "package_url": "https://pypi.org/project/django-js-asset/",
  "project_url": "https://pypi.org/project/django-js-asset/",
  "project_urls": {
    "Homepage": "https://github.com/matthiask/django-js-asset/"
  },
  "release_url": "https://pypi.org/project/django-js-asset/2.2.0/",
  "requires_dist": [
    "django>=3.2",
    "coverage; extra == 'tests'"
  ],
  "requires_python": ">=3.8",
  "summary": "script tag with additional attributes for django.forms.media",
  "version": "2.2.0",
  "releases": [],
  "developers": [
    "mk@feinheit.ch"
  ],
  "kwds": "js_asset django asset assets script",
  "license_kwds": "bsd-3-clause",
  "libtype": "pypi",
  "id": "pypi_django_js_asset",
  "homepage": "",
  "release_count": 11,
  "dependency_ids": [
    "pypi_coverage",
    "pypi_django"
  ]
}
{
  "classifiers": [
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "===============================================\npynacl: python binding to the libsodium library\n===============================================\n\n.. image:: https://img.shields.io/pypi/v/pynacl.svg\n    :target: https://pypi.org/project/pynacl/\n    :alt: latest version\n\n.. image:: https://codecov.io/github/pyca/pynacl/coverage.svg?branch=main\n    :target: https://codecov.io/github/pyca/pynacl?branch=main\n\n.. image:: https://img.shields.io/pypi/pyversions/pynacl.svg\n    :target: https://pypi.org/project/pynacl/\n    :alt: compatible python versions\n\npynacl is a python binding to `libsodium`_, which is a fork of the\n`networking and cryptography library`_. these libraries have a stated goal of\nimproving usability, security and speed. it supports python 3.6+ as well as\npypy 3.\n\n.. _libsodium: https://github.com/jedisct1/libsodium\n.. _networking and cryptography library: https://nacl.cr.yp.to/\n\nfeatures\n--------\n\n* digital signatures\n* secret-key encryption\n* public-key encryption\n* hashing and message authentication\n* password based key derivation and password hashing\n\n`changelog`_\n------------\n\n.. _changelog: https://pynacl.readthedocs.io/en/stable/changelog/\n\ninstallation\n============\n\nbinary wheel install\n--------------------\n\npynacl ships as a binary wheel on macos, windows and linux ``manylinux1`` [#many]_ ,\nso all dependencies are included. make sure you have an up-to-date pip\nand run:\n\n.. code-block:: console\n\n    $ pip install pynacl\n\nfaster wheel build\n------------------\n\nyou can define the environment variable ``libsodium_make_args`` to pass arguments to ``make``\nand enable `parallelization`_:\n\n.. code-block:: console\n\n    $ libsodium_make_args=-j4 pip install pynacl\n\nlinux source build\n------------------\n\npynacl relies on `libsodium`_, a portable c library. a copy is bundled\nwith pynacl so to install you can run:\n\n.. code-block:: console\n\n    $ pip install pynacl\n\nif you'd prefer to use the version of ``libsodium`` provided by your\ndistribution, you can disable the bundled copy during install by running:\n\n.. code-block:: console\n\n    $ sodium_install=system pip install pynacl\n\n.. warning:: usage of the legacy ``easy_install`` command provided by setuptools\n   is generally discouraged, and is completely unsupported in pynacl's case.\n\n.. _parallelization: https://www.gnu.org/software/make/manual/html_node/parallel.html\n\n.. _libsodium: https://github.com/jedisct1/libsodium\n\n.. [#many] `manylinux1 wheels <https://www.python.org/dev/peps/pep-0513/>`_\n    are built on a baseline linux environment based on centos 5.11\n    and should work on most x86 and x86_64 glibc based linux environments.\n\nchangelog\n=========\n\n1.5.0 (2022-01-07)\n------------------\n\n* **backwards incompatible:** removed support for python 2.7 and python 3.5.\n* **backwards incompatible:** we no longer distribute ``manylinux1``\n  wheels.\n* added ``manylinux2014``, ``manylinux_2_24``, ``musllinux``, and macos\n  ``universal2`` wheels (the latter supports macos ``arm64``).\n* update ``libsodium`` to 1.0.18-stable (july 25, 2021 release).\n* add inline type hints.\n\n1.4.0 (2020-05-25)\n------------------\n\n* update ``libsodium`` to 1.0.18.\n* **backwards incompatible:** we no longer distribute 32-bit ``manylinux1``\n  wheels. continuing to produce them was a maintenance burden.\n* added support for python 3.8, and removed support for python 3.4.\n* add low level bindings for extracting the seed and the public key\n  from crypto_sign_ed25519 secret key\n* add low level bindings for deterministic random generation.\n* add ``wheel`` and ``setuptools`` setup_requirements in ``setup.py`` (#485)\n* fix checks on very slow builders (#481, #495)\n* add low-level bindings to ed25519 arithmetic functions\n* update low-level blake2b state implementation\n* fix wrong short-input behavior of sealedbox.decrypt() (#517)\n* raise cryptprefixerror exception instead of invalidkeyerror when trying\n  to check a password against a verifier stored in a unknown format (#519)\n* add support for minimal builds of libsodium. trying to call functions\n  not available in a minimal build will raise an unavailableerror\n  exception. to compile a minimal build of the bundled libsodium, set\n  the sodium_install_minimal environment variable to any non-empty\n  string (e.g. ``sodium_install_minimal=1``) for setup.\n\n1.3.0 2018-09-26\n----------------\n\n* added support for python 3.7.\n* update ``libsodium`` to 1.0.16.\n* run and test all code examples in pynacl docs through sphinx's\n  doctest builder.\n* add low-level bindings for chacha20-poly1305 aead constructions.\n* add low-level bindings for the chacha20-poly1305 secretstream constructions.\n* add low-level bindings for ed25519ph pre-hashed signing construction.\n* add low-level bindings for constant-time increment and addition\n  on fixed-precision big integers represented as little-endian\n  byte sequences.\n* add low-level bindings for the iso/iec 7816-4 compatible padding api.\n* add low-level bindings for libsodium's crypto_kx... key exchange\n  construction.\n* set hypothesis deadline to none in tests/test_pwhash.py to avoid\n  incorrect test failures on slower processor architectures.  github\n  issue #370\n\n1.2.1 - 2017-12-04\n------------------\n\n* update hypothesis minimum allowed version.\n* infrastructure: add proper configuration for readthedocs builder\n  runtime environment.\n\n1.2.0 - 2017-11-01\n------------------\n\n* update ``libsodium`` to 1.0.15.\n* infrastructure: add jenkins support for automatic build of\n  ``manylinux1`` binary wheels\n* added support for ``sealedbox`` construction.\n* added support for ``argon2i`` and ``argon2id`` password hashing constructs\n  and restructured high-level password hashing implementation to expose\n  the same interface for all hashers.\n* added support for 128 bit ``siphashx24`` variant of ``siphash24``.\n* added support for ``from_seed`` apis for x25519 keypair generation.\n* dropped support for python 3.3.\n\n1.1.2 - 2017-03-31\n------------------\n\n* reorder link time library search path when using bundled\n  libsodium\n\n1.1.1 - 2017-03-15\n------------------\n\n* fixed a circular import bug in ``nacl.utils``.\n\n1.1.0 - 2017-03-14\n------------------\n\n* dropped support for python 2.6.\n* added ``shared_key()`` method on ``box``.\n* you can now pass ``none`` to ``nonce`` when encrypting with ``box`` or\n  ``secretbox`` and it will automatically generate a random nonce.\n* added support for ``siphash24``.\n* added support for ``blake2b``.\n* added support for ``scrypt``.\n* update ``libsodium`` to 1.0.11.\n* default to the bundled ``libsodium`` when compiling.\n* all raised exceptions are defined mixing-in\n  ``nacl.exceptions.cryptoerror``\n\n1.0.1 - 2016-01-24\n------------------\n\n* fix an issue with absolute paths that prevented the creation of wheels.\n\n1.0 - 2016-01-23\n----------------\n\n* pynacl has been ported to use the new apis available in cffi 1.0+.\n  due to this change we no longer support pypy releases older than 2.6.\n* python 3.2 support has been dropped.\n* functions to convert between ed25519 and curve25519 keys have been added.\n\n0.3.0 - 2015-03-04\n------------------\n\n* the low-level api (`nacl.c.*`) has been changed to match the\n  upstream nacl c/c++ conventions (as well as those of other nacl bindings).\n  the order of arguments and return values has changed significantly. to\n  avoid silent failures, `nacl.c` has been removed, and replaced with\n  `nacl.bindings` (with the new argument ordering). if you have code which\n  calls these functions (e.g. `nacl.c.crypto_box_keypair()`), you must review\n  the new docstrings and update your code/imports to match the new\n  conventions.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "pynacl",
  "package_url": "https://pypi.org/project/PyNaCl/",
  "project_url": "https://pypi.org/project/PyNaCl/",
  "project_urls": {
    "Homepage": "https://github.com/pyca/pynacl/"
  },
  "release_url": "https://pypi.org/project/PyNaCl/1.5.0/",
  "requires_dist": [],
  "requires_python": ">=3.6",
  "summary": "python binding to the networking and cryptography (nacl) library",
  "version": "1.5.0",
  "releases": [],
  "developers": [
    "cryptography-dev@python.org",
    "the_pynacl_developers"
  ],
  "kwds": "pynacl _libsodium libsodium_make_args libsodium pypy",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_pynacl",
  "homepage": "https://github.com/pyca/pynacl/",
  "release_count": 16,
  "dependency_ids": []
}
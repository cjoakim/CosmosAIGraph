{
  "classifiers": [
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 2",
    "programming language :: python :: 3"
  ],
  "description": "# spark-nlp-display\na library for the simple visualization of different types of spark nlp annotations. \n\n## supported visualizations:\n- dependency parser\n- named entity recognition\n- entity resolution\n- relation extraction\n- assertion status\n\n## complete tutorial\n[![open in colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/johnsnowlabs/spark-nlp-display/blob/main/tutorials/spark_nlp_display.ipynb)\n\nhttps://github.com/johnsnowlabs/spark-nlp-display/blob/main/tutorials/spark_nlp_display.ipynb\n\n### requirements\n- spark-nlp\n- ipython\n- svgwrite\n- pandas\n- numpy\n\n### installation\n```bash\npip install spark-nlp-display\n```\n\n### how to use\n\n### databricks\n#### for all modules, pass in the additional parameter \"return_html=true\" in the display function and use databrick's function displayhtml() to render visualization as explained below:\n```python\nfrom sparknlp_display import nervisualizer\n\nner_vis = nervisualizer()\n\n## to set custom label colors:\nner_vis.set_label_colors({'loc':'#800080', 'per':'#77b5fe'}) #set label colors by specifying hex codes\n\npipeline_result = ner_light_pipeline.fullannotate(text) ##light pipeline\n#pipeline_result = ner_full_pipeline.transform(df).collect()##full pipeline\n\nvis_html = ner_vis.display(pipeline_result[0], #should be the results of a single example, not the complete dataframe\n                    label_col='entities', #specify the entity column\n                    document_col='document', #specify the document column (default: 'document')\n                    labels=['per'], #only allow these labels to be displayed. (default: [] - all labels will be displayed)\n                    return_html=true)\n\ndisplayhtml(vis_html)\n```\n![title](https://raw.githubusercontent.com/johnsnowlabs/spark-nlp-display/main/assets/ner_viz.png)\n\n### jupyter\n\nto save the visualization as html, provide the export file path: `save_path='./export.html'` for each visualizer.\n\n\n#### dependency parser\n```python\nfrom sparknlp_display import dependencyparservisualizer\n\ndependency_vis = dependencyparservisualizer()\n\npipeline_result = dp_pipeline.fullannotate(text)\n#pipeline_result = dp_full_pipeline.transform(df).collect()##full pipeline\n\ndependency_vis.display(pipeline_result[0], #should be the results of a single example, not the complete dataframe.\n                       pos_col = 'pos', #specify the pos column\n                       dependency_col = 'dependency', #specify the dependency column\n                       dependency_type_col = 'dependency_type', #specify the dependency type column\n                       save_path='./export.html' # optional - to save viz as html. (default: none)\n                       )\n```\n\n![title](https://raw.githubusercontent.com/johnsnowlabs/spark-nlp-display/main/assets/dp_viz.png)\n\n#### named entity recognition\n\n```python\nfrom sparknlp_display import nervisualizer\n\nner_vis = nervisualizer()\n\npipeline_result = ner_light_pipeline.fullannotate(text)\n#pipeline_result = ner_full_pipeline.transform(df).collect()##full pipeline\n\nner_vis.display(pipeline_result[0], #should be the results of a single example, not the complete dataframe\n                    label_col='entities', #specify the entity column\n                    document_col='document', #specify the document column (default: 'document')\n                    labels=['per'], #only allow these labels to be displayed. (default: [] - all labels will be displayed)\n                    save_path='./export.html' # optional - to save viz as html. (default: none)\n                    )\n\n## to set custom label colors:\nner_vis.set_label_colors({'loc':'#800080', 'per':'#77b5fe'}) #set label colors by specifying hex codes\n\n```\n\n![title](https://raw.githubusercontent.com/johnsnowlabs/spark-nlp-display/main/assets/ner_viz.png)\n\n#### entity resolution\n\n```python\nfrom sparknlp_display import entityresolvervisualizer\n\ner_vis = entityresolvervisualizer()\n\npipeline_result = er_light_pipeline.fullannotate(text)\n\ner_vis.display(pipeline_result[0], #should be the results of a single example, not the complete dataframe\n               label_col='entities', #specify the ner result column\n               resolution_col = 'resolution',\n               document_col='document', #specify the document column (default: 'document')\n               save_path='./export.html' # optional - to save viz as html. (default: none)\n               )\n\n## to set custom label colors:\ner_vis.set_label_colors({'treatment':'#800080', 'problem':'#77b5fe'}) #set label colors by specifying hex codes\n\n```\n\n![title](https://raw.githubusercontent.com/johnsnowlabs/spark-nlp-display/main/assets/er_viz.png)\n\n#### relation extraction\n```python\nfrom sparknlp_display import relationextractionvisualizer\n\nre_vis = relationextractionvisualizer()\n\npipeline_result = re_light_pipeline.fullannotate(text)\n\nre_vis.display(pipeline_result[0], #should be the results of a single example, not the complete dataframe\n               relation_col = 'relations', #specify relations column\n               document_col = 'document', #specify document column\n               show_relations=true, #display relation names on arrows (default: true)\n               save_path='./export.html' # optional - to save viz as html. (default: none)\n               )\n\n```\n\n![title](https://raw.githubusercontent.com/johnsnowlabs/spark-nlp-display/main/assets/re_viz.png)\n\n#### assertion status\n```python\nfrom sparknlp_display import assertionvisualizer\n\nassertion_vis = assertionvisualizer()\n\npipeline_result = ner_assertion_light_pipeline.fullannotate(text)\n\nassertion_vis.display(pipeline_result[0], \n                      label_col = 'entities', #specify the ner result column\n                      assertion_col = 'assertion', #specify assertion column\n                      document_col = 'document', #specify the document column (default: 'document')\n                      save_path='./export.html' # optional - to save viz as html. (default: none)\n                      )\n                      \n## to set custom label colors:\nassertion_vis.set_label_colors({'treatment':'#008080', 'problem':'#800080'}) #set label colors by specifying hex codes\n\n```\n\n![title](https://raw.githubusercontent.com/johnsnowlabs/spark-nlp-display/main/assets/assertion_viz.png)\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "spark-nlp-display",
  "package_url": "https://pypi.org/project/spark-nlp-display/",
  "project_url": "https://pypi.org/project/spark-nlp-display/",
  "project_urls": {
    "Homepage": "http://nlp.johnsnowlabs.com"
  },
  "release_url": "https://pypi.org/project/spark-nlp-display/5.0/",
  "requires_dist": [
    "spark-nlp",
    "ipython",
    "svgwrite (==1.4)",
    "pandas",
    "numpy"
  ],
  "requires_python": ">=2.7",
  "summary": "visualization package for spark nlp",
  "version": "5.0",
  "releases": [],
  "developers": [
    "john@johnsnowlabs.com",
    "john_snow_labs"
  ],
  "kwds": "spark_nlp_display sparknlp_display annotations databricks databrick",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_spark_nlp_display",
  "homepage": "http://nlp.johnsnowlabs.com",
  "release_count": 17,
  "dependency_ids": [
    "pypi_ipython",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_spark_nlp",
    "pypi_svgwrite"
  ]
}
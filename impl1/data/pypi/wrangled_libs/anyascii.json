{
  "classifiers": [
    "license :: osi approved :: isc license (iscl)",
    "programming language :: python :: 3 :: only",
    "topic :: text processing :: general",
    "topic :: text processing :: linguistic"
  ],
  "description": "# anyascii\n\nunicode to ascii transliteration\n\n[**web demo**](https://anyascii.com)\n\nconverts unicode characters to their best ascii representation\n\nanyascii provides ascii-only replacement strings for practically all unicode characters. text is converted character-by-character without considering the context. the mappings for each script are based on popular existing romanization systems. symbolic characters are converted based on their meaning or appearance. all ascii characters in the input are left unchanged, every other character is replaced with printable ascii characters. unknown characters and some known characters are replaced with an empty string and removed.\n\n```python\nfrom anyascii import anyascii\n\ns = anyascii('\u03ac\u03bd\u03b8\u03c1\u03c9\u03c0\u03bf\u03b9')\nassert s == 'anthropoi'\n```\n\npython 3.3+ compatible\n\n`pip install anyascii`\n\n[**full readme**](https://github.com/anyascii/anyascii)\n",
  "docs_url": null,
  "keywords": "unicode,ascii,transliteration,utf8,romanization,slug,emoji,unidecode,normalization",
  "license": "",
  "name": "anyascii",
  "package_url": "https://pypi.org/project/anyascii/",
  "project_url": "https://pypi.org/project/anyascii/",
  "project_urls": {
    "homepage": "https://github.com/anyascii/anyascii"
  },
  "release_url": "https://pypi.org/project/anyascii/0.3.2/",
  "requires_dist": [],
  "requires_python": ">=3.3",
  "summary": "unicode to ascii transliteration",
  "version": "0.3.2",
  "releases": [],
  "developers": [
    "hunter@hunterwb.com"
  ],
  "kwds": "unicode ascii transliteration romanization python",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_anyascii",
  "homepage": "",
  "release_count": 12,
  "dependency_ids": []
}
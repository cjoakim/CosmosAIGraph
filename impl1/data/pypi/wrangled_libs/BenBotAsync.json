{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python :: 3"
  ],
  "description": "# benbotasync\r\npython wrapper for the benbot api.\r\n\r\n[![downloads](https://pepy.tech/badge/benbotasync)](https://pepy.tech/project/benbotasync)\r\n[![requires: python 3.x](https://img.shields.io/pypi/pyversions/benbotasync.svg)](https://pypi.org/project/benbotasync/)\r\n[![benbot version: 1.0.1](https://img.shields.io/pypi/v/benbotasync.svg)](https://pypi.org/project/benbotasync/)\r\n\r\n## installing:\r\n### ~~synchronous~~: **deprecated, use the async version.**\r\n~~windows:~~ ``py -3 -m pip install benbot``<br>\r\n~~linux/macos:~~ ``python3 -m pip install benbot``\r\n\r\n### asynchronous:\r\nwindows: ``py -3 -m pip install benbotasync``<br>\r\nlinux/macos: ``python3 -m pip install benbotasync``\r\n\r\n## examples:\r\n```py\r\nimport benbotasync\r\nimport asyncio\r\n\r\n\r\nasync def ben_search():\r\n    result = await benbotasync.get_cosmetic(\r\n        lang=\"en\",\r\n        searchlang=\"en\",\r\n        matchmethod=\"full\",\r\n        name=\"ghoul trooper\"\r\n    )\r\n\r\n    print(result.id)\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(ben_search())\r\n\r\n```\r\n\r\nthis would output:<br>\r\n```cid_029_athena_commando_f_halloween```\r\n\r\nfortnitepy example:\r\n```py\r\nimport fortnitepy\r\nimport benbotasync\r\n\r\n\r\nclient = fortnitepy.client(\r\n    auth=fortnitepy.emailandpasswordauth(\r\n        email='example@email.com',\r\n        password='password123'\r\n    )\r\n)\r\n\r\n\r\n@client.event\r\nasync def event_friend_message(message: fortnitepy.friendmessage) -> none:\r\n    args = message.content.split()\r\n    split = args[1:]\r\n    content = \" \".join(split)\r\n\r\n    if args[0] == '!skin':\r\n        skin = await benbotasync.get_cosmetic(\r\n            lang=\"en\",\r\n            searchlang=\"en\",\r\n            matchmethod=\"contains\",\r\n            name=content,\r\n            backendtype=\"athenacharacter\"\r\n        )\r\n\r\n        await client.user.party.me.set_outfit(asset=skin.id)\r\n\r\n\r\nclient.run()\r\n\r\n```\r\n\r\nyou can check out the documentation for benbotasync [here](https://stoplight.io/p/docs/gh/xmistt/benbotasync).\r\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "benbotasync",
  "package_url": "https://pypi.org/project/BenBotAsync/",
  "project_url": "https://pypi.org/project/BenBotAsync/",
  "project_urls": {
    "Homepage": "https://github.com/xMistt/BenBot"
  },
  "release_url": "https://pypi.org/project/BenBotAsync/3.0.2/",
  "requires_dist": [
    "aiohttp"
  ],
  "requires_python": "",
  "summary": "asynchronous python wrapper for benbot api.",
  "version": "3.0.2",
  "releases": [],
  "developers": [
    "xmistt"
  ],
  "kwds": "benbotasync benbot python3 pip pyversions",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_benbotasync",
  "homepage": "https://github.com/xmistt/benbot",
  "release_count": 41,
  "dependency_ids": [
    "pypi_aiohttp"
  ]
}
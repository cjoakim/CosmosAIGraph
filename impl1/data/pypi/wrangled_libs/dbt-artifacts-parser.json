{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: information technology",
    "intended audience :: system administrators",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "typing :: typed"
  ],
  "description": "[![test python](https://github.com/yu-iskw/dbt-artifacts-parser/actions/workflows/test.yml/badge.svg)](https://github.com/yu-iskw/dbt-artifacts-parser/actions/workflows/test.yml)\n<a href=\"https://pypi.org/project/dbt-artifacts-parser\" target=\"_blank\">\n<img src=\"https://img.shields.io/pypi/v/dbt-artifacts-parser?color=%2334d058&label=pypi%20package\" alt=\"package version\">\n</a>\n<a href=\"https://pypi.org/project/dbt-artifacts-parser\" target=\"_blank\">\n<img src=\"https://img.shields.io/pypi/pyversions/dbt-artifacts-parser.svg?color=%2334d058\" alt=\"supported python versions\">\n</a>\n\n\n# dbt-artifacts-parser\nthis is a dbt artifacts parse in python.\nit enables us to deal with `catalog.json`, `manifest.json`, `run-results.json` and `sources.json` as python objects.\n\n## installation\n\n```bash\npip install -u dbt-artifacts-parser\n```\n\n## python classes\nthose are the classes to parse dbt artifacts.\n\n### catalog\n- [catalogv1](dbt_artifacts_parser/parsers/catalog/catalog_v1.py) for catalog.json v1\n\n### manifest\n- [manifestv1](dbt_artifacts_parser/parsers/manifest/manifest_v1.py) for manifest.json v1\n- [manifestv2](dbt_artifacts_parser/parsers/manifest/manifest_v2.py) for manifest.json v2\n- [manifestv3](dbt_artifacts_parser/parsers/manifest/manifest_v3.py) for manifest.json v3\n- [manifestv4](dbt_artifacts_parser/parsers/manifest/manifest_v4.py) for manifest.json v4\n- [manifestv5](dbt_artifacts_parser/parsers/manifest/manifest_v5.py) for manifest.json v5\n- [manifestv6](dbt_artifacts_parser/parsers/manifest/manifest_v6.py) for manifest.json v6\n- [manifestv7](dbt_artifacts_parser/parsers/manifest/manifest_v7.py) for manifest.json v7\n- [manifestv8](dbt_artifacts_parser/parsers/manifest/manifest_v8.py) for manifest.json v8\n- [manifestv9](dbt_artifacts_parser/parsers/manifest/manifest_v9.py) for manifest.json v9\n- [manifestv10](dbt_artifacts_parser/parsers/manifest/manifest_v10.py) for manifest.json v10\n- [manifestv11](dbt_artifacts_parser/parsers/manifest/manifest_v11.py) for manifest.json v11\n\n### run results\n- [runresultsv1](dbt_artifacts_parser/parsers/manifest/manifest_v1.py) for run_results.json v1\n- [runresultsv2](dbt_artifacts_parser/parsers/manifest/manifest_v2.py) for run_results.json v2\n- [runresultsv3](dbt_artifacts_parser/parsers/manifest/manifest_v3.py) for run_results.json v3\n- [runresultsv4](dbt_artifacts_parser/parsers/manifest/manifest_v4.py) for run_results.json v4\n- [runresultsv5](dbt_artifacts_parser/parsers/manifest/manifest_v5.py) for run_results.json v5\n\n### sources\n- [sourcesv1](dbt_artifacts_parser/parsers/sources/sources_v1.py) for sources.json v1\n- [sourcesv2](dbt_artifacts_parser/parsers/sources/sources_v2.py) for sources.json v2\n- [sourcesv3](dbt_artifacts_parser/parsers/sources/sources_v3.py) for sources.json v3\n\n## examples\n\n### parse catalog.json\n```python\nimport json\n\n# parse any version of catalog.json\nfrom dbt_artifacts_parser.parser import parse_catalog\n\nwith open(\"path/to/catalog.json\", \"r\") as fp:\n    catalog_dict = json.load(fp)\n    catalog_obj = parse_catalog(catalog=catalog_dict)\n\n# parse catalog.json v1\nfrom dbt_artifacts_parser.parser import parse_catalog_v1\n\nwith open(\"path/to/catalog.json\", \"r\") as fp:\n    catalog_dict = json.load(fp)\n    catalog_obj = parse_catalog_v1(catalog=catalog_dict)\n```\n\n### parse manifest.json\n\n```python\nimport json\n\n# parse any version of manifest.json\nfrom dbt_artifacts_parser.parser import parse_manifest\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest(manifest=manifest_dict)\n\n# parse manifest.json v1\nfrom dbt_artifacts_parser.parser import parse_manifest_v1\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest_v1(manifest=manifest_dict)\n\n# parse manifest.json v2\nfrom dbt_artifacts_parser.parser import parse_manifest_v2\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest_v2(manifest=manifest_dict)\n\n# parse manifest.json v3\nfrom dbt_artifacts_parser.parser import parse_manifest_v3\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest_v3(manifest=manifest_dict)\n\n# parse manifest.json v4\nfrom dbt_artifacts_parser.parser import parse_manifest_v4\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest_v4(manifest=manifest_dict)\n\n# parse manifest.json v5\nfrom dbt_artifacts_parser.parser import parse_manifest_v5\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest_v5(manifest=manifest_dict)\n\n# parse manifest.json v6\nfrom dbt_artifacts_parser.parser import parse_manifest_v6\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest_v6(manifest=manifest_dict)\n\n# parse manifest.json v7\nfrom dbt_artifacts_parser.parser import parse_manifest_v7\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest_v7(manifest=manifest_dict)\n\n# parse manifest.json v8\nfrom dbt_artifacts_parser.parser import parse_manifest_v8\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest_v8(manifest=manifest_dict)\n\n# parse manifest.json v9\nfrom dbt_artifacts_parser.parser import parse_manifest_v9\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest_v9(manifest=manifest_dict)\n\n# parse manifest.json v10\nfrom dbt_artifacts_parser.parser import parse_manifest_v10\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest_v10(manifest=manifest_dict)\n\n# parse manifest.json v11\nfrom dbt_artifacts_parser.parser import parse_manifest_v11\n\nwith open(\"path/to/manifest.json\", \"r\") as fp:\n    manifest_dict = json.load(fp)\n    manifest_obj = parse_manifest_v11(manifest=manifest_dict)\n```\n\n### parse run-results.json\n\n```python\nimport json\n\n# parse any version of run-results.json\nfrom dbt_artifacts_parser.parser import parse_run_results\n\nwith open(\"path/to/run-resultsjson\", \"r\") as fp:\n    run_results_dict = json.load(fp)\n    run_results_obj = parse_run_results(run_results=run_results_dict)\n\n# parse run-results.json v1\nfrom dbt_artifacts_parser.parser import parse_run_results_v1\n\nwith open(\"path/to/run-results.json\", \"r\") as fp:\n    run_results_dict = json.load(fp)\n    run_results_obj = parse_run_results_v1(run_results=run_results_dict)\n\n# parse run-results.json v2\nfrom dbt_artifacts_parser.parser import parse_run_results_v2\n\nwith open(\"path/to/run-results.json\", \"r\") as fp:\n    run_results_dict = json.load(fp)\n    run_results_obj = parse_run_results_v2(run_results=run_results_dict)\n\n# parse run-results.json v3\nfrom dbt_artifacts_parser.parser import parse_run_results_v3\n\nwith open(\"path/to/run-results.json\", \"r\") as fp:\n    run_results_dict = json.load(fp)\n    run_results_obj = parse_run_results_v3(run_results=run_results_dict)\n\n# parse run-results.json v4\nfrom dbt_artifacts_parser.parser import parse_run_results_v4\n\nwith open(\"path/to/run-results.json\", \"r\") as fp:\n    run_results_dict = json.load(fp)\n    run_results_obj = parse_run_results_v4(run_results=run_results_dict)\n\n# parse run-results.json v5\nfrom dbt_artifacts_parser.parser import parse_run_results_v5\n\nwith open(\"path/to/run-results.json\", \"r\") as fp:\n    run_results_dict = json.load(fp)\n    run_results_obj = parse_run_results_v5(run_results=run_results_dict)\n```\n\n### parse sources.json\n\n```python\nimport json\n\n# parse any version of sources.json\nfrom dbt_artifacts_parser.parser import parse_sources\n\nwith open(\"path/to/sources.json\", \"r\") as fp:\n    sources_dict = json.load(fp)\n    sources_obj = parse_sources(sources=sources_dict)\n\n# parse sources.json v1\nfrom dbt_artifacts_parser.parser import parse_sources_v1\n\nwith open(\"path/to/sources.json\", \"r\") as fp:\n    sources_dict = json.load(fp)\n    sources_obj = parse_sources_v1(sources=sources_dict)\n\n# parse sources.json v2\nfrom dbt_artifacts_parser.parser import parse_sources_v2\n\nwith open(\"path/to/sources.json\", \"r\") as fp:\n    sources_dict = json.load(fp)\n    sources_obj = parse_sources_v2(sources=sources_dict)\n\n# parse sources.json v3\nfrom dbt_artifacts_parser.parser import parse_sources_v3\n\nwith open(\"path/to/sources.json\", \"r\") as fp:\n    sources_dict = json.load(fp)\n    sources_obj = parse_sources_v3(sources=sources_dict)\n```\n\n## contributors\n<!-- readme: contributors -start -->\n<table>\n<tr>\n    <td align=\"center\">\n        <a href=\"https://github.com/yu-iskw\">\n            <img src=\"https://avatars.githubusercontent.com/u/1523515?v=4\" width=\"100;\" alt=\"yu-iskw\"/>\n            <br />\n            <sub><b>yu ishikawa</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/dlawin\">\n            <img src=\"https://avatars.githubusercontent.com/u/11282254?v=4\" width=\"100;\" alt=\"dlawin\"/>\n            <br />\n            <sub><b>null</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/bbrewington\">\n            <img src=\"https://avatars.githubusercontent.com/u/10573749?v=4\" width=\"100;\" alt=\"bbrewington\"/>\n            <br />\n            <sub><b>brent brewington</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/judahrand\">\n            <img src=\"https://avatars.githubusercontent.com/u/17158624?v=4\" width=\"100;\" alt=\"judahrand\"/>\n            <br />\n            <sub><b>judah rand</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/nabilm\">\n            <img src=\"https://avatars.githubusercontent.com/u/987369?v=4\" width=\"100;\" alt=\"nabilm\"/>\n            <br />\n            <sub><b>mohamed nabil mahmoud hafez</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/meyer-glean\">\n            <img src=\"https://avatars.githubusercontent.com/u/134302890?v=4\" width=\"100;\" alt=\"meyer-glean\"/>\n            <br />\n            <sub><b>null</b></sub>\n        </a>\n    </td></tr>\n</table>\n<!-- readme: contributors -end -->\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "dbt-artifacts-parser",
  "package_url": "https://pypi.org/project/dbt-artifacts-parser/",
  "project_url": "https://pypi.org/project/dbt-artifacts-parser/",
  "project_urls": {
    "Home": "https://github.com/yu-iskw/dbt-artifacts-parser"
  },
  "release_url": "https://pypi.org/project/dbt-artifacts-parser/0.5.0/",
  "requires_dist": [
    "pydantic >=1.6,<2.0",
    "flit ==3.7.1 ; extra == \"dev\"",
    "build ==0.7.0 ; extra == \"dev\"",
    "yapf >=0.29.0 ; extra == \"dev\"",
    "pyyaml >=5.3 ; extra == \"dev\"",
    "pdoc3 >=0.9.2 ; extra == \"dev\"",
    "pre-commit >=2.15.0 ; extra == \"dev\"",
    "datamodel-code-generator >=0.12.0,<0.20.0 ; extra == \"dev\"",
    "pytest >=6.2.4,<7.0.0 ; extra == \"test\"",
    "pylint >=2.12.0 ; extra == \"test\"",
    "mypy ==0.910 ; extra == \"test\"",
    "flake8 >=3.8.3,<4.0.0 ; extra == \"test\"",
    "black ==21.9b0 ; extra == \"test\"",
    "isort >=5.0.6,<6.0.0 ; extra == \"test\"",
    "yapf >=0.29.0 ; extra == \"test\""
  ],
  "requires_python": ">=3.7.0",
  "summary": "a dbt artifacts parser in python",
  "version": "0.5.0",
  "releases": [],
  "developers": [
    "yu"
  ],
  "kwds": "dbt_artifacts_parser artifacts dbt yml parse_sources_v3",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_dbt_artifacts_parser",
  "homepage": "",
  "release_count": 14,
  "dependency_ids": [
    "pypi_black",
    "pypi_build",
    "pypi_datamodel_code_generator",
    "pypi_flake8",
    "pypi_flit",
    "pypi_isort",
    "pypi_mypy",
    "pypi_pdoc3",
    "pypi_pre_commit",
    "pypi_pydantic",
    "pypi_pylint",
    "pypi_pytest",
    "pypi_pyyaml",
    "pypi_yapf"
  ]
}
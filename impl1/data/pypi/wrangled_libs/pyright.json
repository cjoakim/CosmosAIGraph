{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "typing :: typed"
  ],
  "description": "# pyright for python\n\n[![downloads](https://pepy.tech/badge/pyright)](https://pepy.tech/project/pyright)\n![pypi](https://img.shields.io/pypi/v/pyright)\n![supported python versions](https://img.shields.io/pypi/pyversions/pyright)\n\n> this project is not affiliated with microsoft in any way, shape, or form\n\npyright for python is a python command-line wrapper over [pyright](https://github.com/microsoft/pyright), a static type checker for python.\n\n## installation\n\nuse the package manager [pip](https://pip.pypa.io/en/stable/) to install pyright.\n\n```bash\npip install pyright\n```\n\n## usage\n\npyright can be invoked using two different methods\n\n```bash\npyright --help\n```\n\nor\n\n```bash\npython3 -m pyright --help\n```\n\npyright for python should work exactly the same as pyright does, see the [pyright documentation](https://github.com/microsoft/pyright/blob/main/docs/getting-started.md) for details on how to make use of pyright.\n\n### pre-commit\n\nyou can also setup pyright to run automatically before each commit by setting up [pre-commit](https://pre-commit.com) and registering pyright in your `.pre-commit-config.yaml` file\n\n```yaml\nrepos:\n  - repo: https://github.com/robertcraigie/pyright-python\n    rev: v1.1.342\n    hooks:\n    - id: pyright\n```\n\npre-commit will install pyright-python in its own virtual environment which can cause pyright to not be able to detect your installed dependencies.\n\nto fix this you can either [tell pre-commit](https://pre-commit.com/#config-additional_dependencies) to also install those dependencies or explicitly tell pyright which virtual environment to use by updating your [pyright configuration file](https://github.com/microsoft/pyright/blob/main/docs/configuration.md):\n\n```toml\n[tool.pyright]\n# ...\nvenvpath = \".\"\nvenv = \".venv\"\n```\n\n## motivation\n\n[pyright](https://github.com/microsoft/pyright) is written in typescript, requiring node to be installed, and is normally installed with npm. this could be an entry barrier for some python developers as they may not have node or npm installed on their machine; i wanted to make pyright as easy to install as any normal python package.\n\n## how pyright for python works\n\nthis project works by first checking if node is in the `path`. if it is not, then we download node at runtime using [nodeenv](https://github.com/ekalinin/nodeenv), then install the pyright npm package using `npm` and finally, run the downloaded js with `node`.\n\n## automatically keeping pyright up to date\n\nby default pyright for python is set to target a specific pyright version and new releases will be automatically created whenever a new pyright version is released. it is highly recommended to use an automatic dependency update tool such as [dependabot](https://docs.github.com/en/code-security/supply-chain-security/managing-vulnerabilities-in-your-projects-dependencies/configuring-dependabot-security-updates).\n\nif you would rather not have to update your installation every time a new pyright release is created then you can automatically use the latest available pyright version by setting the environment variable `pyright_python_force_version` to `latest`.\n\n## configuration\n\nyou can configure pyright for python using environment variables.\n\n### debugging\n\nset `pyright_python_debug` to any value.\n\n### modify pyright version\n\nset `pyright_python_force_version` to the desired version, e.g. `1.1.156`, `latest`\n\n### keeping pyright and pylance in sync\n\nset `pyright_python_pylance_version` to your pylance version, e.g. `2023.11.11`, `latest-release`, `latest-prerelease`. the corresponding pyright version will be used. see [pylance's changelog](https://github.com/microsoft/pylance-release/blob/main/changelog.md) for details on recent releases. note that `pyright_python_force_version` takes precedence over `pyright_python_pylance_version`, so you'll want to set one or the other, not both.\n\n### show npm logs\n\nby default, pyright for python disables npm error messages, if you want to display the npm error messages then set `pyright_python_verbose` to any truthy value.\n\n### modify npm package location\n\npyright for python will resolve the root cache directory by checking the following environment variables, in order:\n\n- `pyright_python_cache_dir`\n- `xdg_cache_home`\n\nif neither of them are set it defaults to `~/.cache`\n\n### force node env\n\nset `pyright_python_global_node` to any non-truthy value, i.e. anything apart from 1, t, on, or true.\ne.g. `off`\nyou can optionally choose the version of node used by setting `pyright_python_node_version` to the desired version\n\n### modify node env location\n\nset `pyright_python_env_dir` to a valid [nodeenv](https://github.com/ekalinin/nodeenv) directory. e.g. `~/.cache/nodeenv`\n\n### ignore warnings\n\nset `pyright_python_ignore_warnings` to a truthy value, e.g. 1, t, on, or true.\n\npyright for python will print warnings for the following case(s)\n\n- there is a new pyright version available.\n\n## contributing\n\nall pull requests are welcome.\n\n## license\n[mit](https://choosealicense.com/licenses/mit/)\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "pyright",
  "package_url": "https://pypi.org/project/pyright/",
  "project_url": "https://pypi.org/project/pyright/",
  "project_urls": {
    "Homepage": "https://github.com/RobertCraigie/pyright-python",
    "Source": "https://github.com/RobertCraigie/pyright-python",
    "Tracker": "https://github.com/RobertCraigie/pyright-python/issues"
  },
  "release_url": "https://pypi.org/project/pyright/1.1.342/",
  "requires_dist": [
    "nodeenv >=1.6.0",
    "typing-extensions >=3.7 ; python_version < \"3.8\"",
    "twine >=3.4.1 ; extra == 'all'",
    "twine >=3.4.1 ; extra == 'dev'"
  ],
  "requires_python": ">=3.7",
  "summary": "command line wrapper for pyright",
  "version": "1.1.342",
  "releases": [],
  "developers": [
    "robert_craigie"
  ],
  "kwds": "pyright_python_verbose pyright_python_force_version pyright_python_pylance_version pyright_python_debug pyright_python_env_dir",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pyright",
  "homepage": "https://github.com/robertcraigie/pyright-python",
  "release_count": 134,
  "dependency_ids": [
    "pypi_nodeenv",
    "pypi_twine",
    "pypi_typing_extensions"
  ]
}
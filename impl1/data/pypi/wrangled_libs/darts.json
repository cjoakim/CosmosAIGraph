{
  "classifiers": [
    "intended audience :: developers",
    "intended audience :: science/research",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: pypy",
    "topic :: scientific/engineering",
    "topic :: software development"
  ],
  "description": "# time series made easy in python\n\n![darts](https://github.com/unit8co/darts/raw/master/static/images/darts-logo-trim.png \"darts\")\n\n---\n[![pypi version](https://badge.fury.io/py/u8darts.svg)](https://badge.fury.io/py/darts)\n[![conda version](https://img.shields.io/conda/vn/conda-forge/u8darts-all.svg)](https://anaconda.org/conda-forge/u8darts-all)\n![supported versions](https://img.shields.io/badge/python-3.8+-blue.svg)\n[![docker image version (latest by date)](https://img.shields.io/docker/v/unit8/darts?label=docker&sort=date)](https://hub.docker.com/r/unit8/darts)\n![github release date](https://img.shields.io/github/release-date/unit8co/darts)\n![github workflow status](https://img.shields.io/github/actions/workflow/status/unit8co/darts/release.yml?branch=master)\n[![downloads](https://pepy.tech/badge/darts)](https://pepy.tech/project/darts)\n[![downloads](https://pepy.tech/badge/u8darts)](https://pepy.tech/project/u8darts)\n[![codecov](https://codecov.io/gh/unit8co/darts/branch/master/graph/badge.svg?token=7f1tlufhqw)](https://codecov.io/gh/unit8co/darts)\n[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) [![join the chat at https://gitter.im/u8darts/darts](https://badges.gitter.im/u8darts/darts.svg)](https://gitter.im/u8darts/darts?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n**darts** is a python library for user-friendly forecasting and anomaly detection\non time series. it contains a variety of models, from classics such as arima to\ndeep neural networks. the forecasting models can all be used in the same way,\nusing `fit()` and `predict()` functions, similar to scikit-learn.\nthe library also makes it easy to backtest models,\ncombine the predictions of several models, and take external data into account. \ndarts supports both univariate and multivariate time series and models. \nthe ml-based models can be trained on potentially large datasets containing multiple time\nseries, and some of the models offer a rich support for probabilistic forecasting.\n\ndarts also offers extensive anomaly detection capabilities.\nfor instance, it is trivial to apply pyod models on time series to obtain anomaly scores,\nor to wrap any of darts forecasting or filtering models to obtain fully\nfledged anomaly detection models.\n\n\n## documentation\n* [quickstart](https://unit8co.github.io/darts/quickstart/00-quickstart.html)\n* [user guide](https://unit8co.github.io/darts/userguide.html)\n* [api reference](https://unit8co.github.io/darts/generated_api/darts.html)\n* [examples](https://unit8co.github.io/darts/examples.html)\n\n##### high level introductions\n* [introductory blog post](https://medium.com/unit8-machine-learning-publication/darts-time-series-made-easy-in-python-5ac2947a8878)\n* [introduction video (25 minutes)](https://youtu.be/g6oxdnxetfa)\n\n##### articles on selected topics\n* [training models on multiple time series](https://medium.com/unit8-machine-learning-publication/training-forecasting-models-on-multiple-time-series-with-darts-dc4be70b1844)\n* [using past and future covariates](https://medium.com/unit8-machine-learning-publication/time-series-forecasting-using-past-and-future-external-data-with-darts-1f0539585993)\n* [temporal convolutional networks and forecasting](https://medium.com/unit8-machine-learning-publication/temporal-convolutional-networks-and-forecasting-5ce1b6e97ce4)\n* [probabilistic forecasting](https://medium.com/unit8-machine-learning-publication/probabilistic-forecasting-in-darts-e88fbe83344e)\n* [transfer learning for time series forecasting](https://medium.com/unit8-machine-learning-publication/transfer-learning-for-time-series-forecasting-87f39e375278)\n* [hierarchical forecast reconciliation](https://medium.com/unit8-machine-learning-publication/hierarchical-forecast-reconciliation-with-darts-8b4b058bb543)\n\n## quick install\n\nwe recommend to first setup a clean python environment for your project with python 3.8+ using your favorite tool\n([conda](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html \"conda-env\"),\n[venv](https://docs.python.org/3/library/venv.html), [virtualenv](https://virtualenv.pypa.io/en/latest/) with\nor without [virtualenvwrapper](https://virtualenvwrapper.readthedocs.io/en/latest/)).\n\nonce your environment is set up you can install darts using pip:\n\n    pip install darts\n\nfor more details you can refer to our \n[installation instructions](https://github.com/unit8co/darts/blob/master/install.md).\n\n## example usage\n\n### forecasting\n\ncreate a `timeseries` object from a pandas dataframe, and split it in train/validation series:\n\n```python\nimport pandas as pd\nfrom darts import timeseries\n\n# read a pandas dataframe\ndf = pd.read_csv(\"airpassengers.csv\", delimiter=\",\")\n\n# create a timeseries, specifying the time and value columns\nseries = timeseries.from_dataframe(df, \"month\", \"#passengers\")\n\n# set aside the last 36 months as a validation series\ntrain, val = series[:-36], series[-36:]\n```\n\nfit an exponential smoothing model, and make a (probabilistic) prediction over the validation series' duration:\n```python\nfrom darts.models import exponentialsmoothing\n\nmodel = exponentialsmoothing()\nmodel.fit(train)\nprediction = model.predict(len(val), num_samples=1000)\n```\n\nplot the median, 5th and 95th percentiles:\n```python\nimport matplotlib.pyplot as plt\n\nseries.plot()\nprediction.plot(label=\"forecast\", low_quantile=0.05, high_quantile=0.95)\nplt.legend()\n```\n\n<div style=\"text-align:center;\">\n<img src=\"https://github.com/unit8co/darts/raw/master/static/images/example.png\" alt=\"darts forecast example\" />\n</div>\n\n### anomaly detection\n\nload a multivariate series, trim it, keep 2 components, split train and validation sets:\n\n```python\nfrom darts.datasets import etth2dataset\n\nseries = etth2dataset().load()[:10000][[\"mufl\", \"lull\"]]\ntrain, val = series.split_before(0.6)\n```\n\nbuild a k-means anomaly scorer, train it on the train set\nand use it on the validation set to get anomaly scores:\n\n```python\nfrom darts.ad import kmeansscorer\n\nscorer = kmeansscorer(k=2, window=5)\nscorer.fit(train)\nanom_score = scorer.score(val)\n```\n\nbuild a binary anomaly detector and train it over train scores,\nthen use it over validation scores to get binary anomaly classification:\n\n```python\nfrom darts.ad import quantiledetector\n\ndetector = quantiledetector(high_quantile=0.99)\ndetector.fit(scorer.score(train))\nbinary_anom = detector.detect(anom_score)\n```\n\nplot (shifting and scaling some of the series\nto make everything appear on the same figure):\n\n```python\nimport matplotlib.pyplot as plt\n\nseries.plot()\n(anom_score / 2. - 100).plot(label=\"computed anomaly score\", c=\"orangered\", lw=3)\n(binary_anom * 45 - 150).plot(label=\"detected binary anomaly\", lw=4)\n```\n\n<div style=\"text-align:center;\">\n<img src=\"https://github.com/unit8co/darts/raw/master/static/images/example_ad.png\" alt=\"darts anomaly detection example\" />\n</div>\n\n\n## features\n* **forecasting models:** a large collection of forecasting models; from statistical models (such as\n  arima) to deep learning models (such as n-beats). see [table of models below](#forecasting-models).\n\n* **anomaly detection** the `darts.ad` module contains a collection of anomaly scorers,\n  detectors and aggregators, which can all be combined to detect anomalies in time series.\n  it is easy to wrap any of darts forecasting or filtering models to build\n  a fully fledged anomaly detection model that compares predictions with actuals.\n  the `pyodscorer` makes it trivial to use pyod detectors on time series.\n\n* **multivariate support:** `timeseries` can be multivariate - i.e., contain multiple time-varying\n  dimensions instead of a single scalar value. many models can consume and produce multivariate series.\n\n* **multiple series training (global models):** all machine learning based models (incl. all neural networks) \n  support being trained on multiple (potentially multivariate) series. this can scale to large datasets too.\n\n* **probabilistic support:** `timeseries` objects can (optionally) represent stochastic\n  time series; this can for instance be used to get confidence intervals, and many models support different\n  flavours of probabilistic forecasting (such as estimating parametric distributions or quantiles).\n  some anomaly detection scorers are also able to exploit these predictive distributions.\n\n* **past and future covariates support:** many models in darts support past-observed and/or future-known \n  covariate (external data) time series as inputs for producing forecasts.\n\n* **static covariates support:** in addition to time-dependent data, `timeseries` can also contain\n  static data for each dimension, which can be exploited by some models.\n\n* **hierarchical reconciliation:** darts offers transformers to perform reconciliation.\n  these can make the forecasts add up in a way that respects the underlying hierarchy.\n\n* **regression models:** it is possible to plug-in any scikit-learn compatible model\n  to obtain forecasts as functions of lagged values of the target series and covariates.\n\n* **explainability:** darts has the ability to *explain* some forecasting models using shap values.\n\n* **data processing:** tools to easily apply (and revert) common transformations on\n  time series data (scaling, filling missing values, differencing, boxcox, ...)\n\n* **metrics:** a variety of metrics for evaluating time series' goodness of fit;\n  from r2-scores to mean absolute scaled error.\n\n* **backtesting:** utilities for simulating historical forecasts, using moving time windows.\n\n* **pytorch lightning support:** all deep learning models are implemented using pytorch lightning,\n  supporting among other things custom callbacks, gpus/tpus training and custom trainers.\n\n* **filtering models:** darts offers three filtering models: `kalmanfilter`, `gaussianprocessfilter`,\n  and `movingaveragefilter`, which allow to filter time series, and in some cases obtain probabilistic\n  inferences of the underlying states/values.\n\n* **datasets** the `darts.datasets` submodule contains some popular time series datasets for rapid\n  and reproducible experimentation.\n\n## forecasting models\nhere's a breakdown of the forecasting models currently implemented in darts. we are constantly working\non bringing more models and features.\n\n\n| model                                                                                                                                                                                                                                                                                                   | sources                                                                                                                                                                                                                           | target series support:<br/><br/>univariate/<br/>multivariate | covariates support:<br/><br/>past-observed/<br/>future-known/<br/>static | probabilistic forecasting:<br/><br/>sampled/<br/>distribution parameters | training & forecasting on multiple series |\n|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------|--------------------------------------------------------------------------|--------------------------------------------------------------------------|-------------------------------------------|\n| **baseline models**<br/>([localforecastingmodel](https://unit8co.github.io/darts/userguide/covariates.html#local-forecasting-models-lfms))                                                                                                                                                              |                                                                                                                                                                                                                                   |                                                              |                                                                          |                                                                          |                                           |\n| [naivemean](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.baselines.html#darts.models.forecasting.baselines.naivemean)                                                                                                                                                         |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe5 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe5 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [naiveseasonal](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.baselines.html#darts.models.forecasting.baselines.naiveseasonal)                                                                                                                                                 |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe5 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe5 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [naivedrift](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.baselines.html#darts.models.forecasting.baselines.naivedrift)                                                                                                                                                       |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe5 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe5 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [naivemovingaverage](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.baselines.html#darts.models.forecasting.baselines.naivemovingaverage)                                                                                                                                       |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe5 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe5 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| **statistical / classic models**<br/>([localforecastingmodel](https://unit8co.github.io/darts/userguide/covariates.html#local-forecasting-models-lfms))                                                                                                                                                 |                                                                                                                                                                                                                                   |                                                              |                                                                          |                                                                          |                                           |\n| [arima](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.arima.html#darts.models.forecasting.arima.arima)                                                                                                                                                                         |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe9 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [varima](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.varima.html#darts.models.forecasting.varima.varima)                                                                                                                                                                     |                                                                                                                                                                                                                                   | \ud83d\udfe5 \ud83d\udfe9                                                        | \ud83d\udfe5 \ud83d\udfe9 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [autoarima](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.auto_arima.html#darts.models.forecasting.auto_arima.autoarima)                                                                                                                                                       |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe9 \ud83d\udfe5                                                                 | \ud83d\udfe5 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [statsforecastautoarima](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.sf_auto_arima.html#darts.models.forecasting.sf_auto_arima.statsforecastautoarima) (faster autoarima)                                                                                                    | [nixtla's statsforecast](https://github.com/nixtla/statsforecast)                                                                                                                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe9 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [exponentialsmoothing](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.exponential_smoothing.html#darts.models.forecasting.exponential_smoothing.exponentialsmoothing)                                                                                                           |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [statsforecastautoets](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.sf_auto_ets.html#darts.models.forecasting.sf_auto_ets.statsforecastautoets)                                                                                                                               | [nixtla's statsforecast](https://github.com/nixtla/statsforecast)                                                                                                                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe9 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [statsforecastautoces](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.sf_auto_ces.html#darts.models.forecasting.sf_auto_ces.statsforecastautoces)                                                                                                                               | [nixtla's statsforecast](https://github.com/nixtla/statsforecast)                                                                                                                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe5 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [bats](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.tbats_model.html#darts.models.forecasting.tbats_model.bats) and [tbats](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.tbats_model.html#darts.models.forecasting.tbats_model.tbats)               | [tbats paper](https://robjhyndman.com/papers/complexseasonality.pdf)                                                                                                                                                              | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [theta](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.theta.html#darts.models.forecasting.theta.theta) and [fourtheta](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.theta.html#darts.models.forecasting.theta.fourtheta)                             | [theta](https://robjhyndman.com/papers/theta.pdf) & [4 theta](https://github.com/mcompetitions/m4-methods/blob/master/4theta%20method.r)                                                                                          | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe5 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [statsforecastautotheta](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.sf_auto_theta.html#darts.models.forecasting.sf_auto_theta.statsforecastautotheta)                                                                                                                       | [nixtla's statsforecast](https://github.com/nixtla/statsforecast)                                                                                                                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [prophet](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.prophet_model.html#darts.models.forecasting.prophet_model.prophet) | [prophet repo](https://github.com/facebook/prophet)                                                                                                                                                                               | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe9 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [fft](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.fft.html#darts.models.forecasting.fft.fft) (fast fourier transform)                                                                                                                         |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe5 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [kalmanforecaster](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.kalman_forecaster.html#darts.models.forecasting.kalman_forecaster.kalmanforecaster) using the kalman filter and n4sid for system identification                                                               | [n4sid paper](https://people.duke.edu/~hpgavin/systemid/references/vanoverschee-automatica-1994.pdf)                                                                                                                              | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe5 \ud83d\udfe9 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| [croston](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.croston.html#darts.models.forecasting.croston.croston) method                                                                                                                                                          |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe5                                                        | \ud83d\udfe5 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe5 \ud83d\udfe5                                                                    | \ud83d\udfe5                                        |\n| **regression models**<br/>([globalforecastingmodel](https://unit8co.github.io/darts/userguide/covariates.html#global-forecasting-models-gfms))                                                                                                                                                          |                                                                                                                                                                                                                                   |                                                              |                                                                          |                                                                          |                                           |\n| [regressionmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.regression_model.html#darts.models.forecasting.regression_model.regressionmodel): generic wrapper around any sklearn regression model                                                                          |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe5 \ud83d\udfe5                                                                    | \ud83d\udfe9                                        |\n| [linearregressionmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.linear_regression_model.html#darts.models.forecasting.linear_regression_model.linearregressionmodel)                                                                                                     |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [randomforest](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.random_forest.html#darts.models.forecasting.random_forest.randomforest)                                                                                                                                           |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe5 \ud83d\udfe5                                                                    | \ud83d\udfe9                                        |\n| [lightgbmmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.lgbm.html#darts.models.forecasting.lgbm.lightgbmmodel)                                                                                                                                                          |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [xgbmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.xgboost.html#darts.models.forecasting.xgboost.xgbmodel)                                                                                                                                                               |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [catboostmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.catboost_model.html#darts.models.forecasting.catboost_model.catboostmodel)                                                                                                                                       |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| **pytorch (lightning)-based models**<br/>([globalforecastingmodel](https://unit8co.github.io/darts/userguide/covariates.html#global-forecasting-models-gfms))                                                                                                                                           |                                                                                                                                                                                                                                   |                                                              |                                                                          |                                                                          |                                           |\n| [rnnmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.rnn_model.html#darts.models.forecasting.rnn_model.rnnmodel) (incl. lstm and gru); equivalent to deepar in its probabilistic version                                                                                   | [deepar paper](https://arxiv.org/abs/1704.04110)                                                                                                                                                                                  | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe5 \ud83d\udfe9 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [blockrnnmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.block_rnn_model.html#darts.models.forecasting.block_rnn_model.blockrnnmodel) (incl. lstm and gru)                                                                                                                |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [nbeatsmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.nbeats.html#darts.models.forecasting.nbeats.nbeatsmodel)                                                                                                                                                           | [n-beats paper](https://arxiv.org/abs/1905.10437)                                                                                                                                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [nhitsmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.nhits.html#darts.models.forecasting.nhits.nhitsmodel)                                                                                                                                                               | [n-hits paper](https://arxiv.org/abs/2201.12886)                                                                                                                                                                                  | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [tcnmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.tcn_model.html#darts.models.forecasting.tcn_model.tcnmodel)                                                                                                                                                           | [tcn paper](https://arxiv.org/abs/1803.01271), [deeptcn paper](https://arxiv.org/abs/1906.04397), [blog post](https://medium.com/unit8-machine-learning-publication/temporal-convolutional-networks-and-forecasting-5ce1b6e97ce4) | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [transformermodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.transformer_model.html#darts.models.forecasting.transformer_model.transformermodel)                                                                                                                           |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe5 \ud83d\udfe5                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [tftmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.tft_model.html#darts.models.forecasting.tft_model.tftmodel) (temporal fusion transformer)                                                                                                                             | [tft paper](https://arxiv.org/pdf/1912.09363.pdf), [pytorch forecasting](https://pytorch-forecasting.readthedocs.io/en/latest/models.html)                                                                                        | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [dlinearmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.dlinear.html#darts.models.forecasting.dlinear.dlinearmodel)                                                                                                                                                       | [dlinear paper](https://arxiv.org/pdf/2205.13504.pdf)                                                                                                                                                                             | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [nlinearmodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.nlinear.html#darts.models.forecasting.nlinear.nlinearmodel)                                                                                                                                                       | [nlinear paper](https://arxiv.org/pdf/2205.13504.pdf)                                                                                                                                                                             | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [tidemodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.tide_model.html#darts.models.forecasting.tide_model.tidemodel)                                                                                                                                                       | [tide paper](https://arxiv.org/pdf/2304.08424.pdf)                                                                                                                                                                                | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| **ensemble models**<br/>([globalforecastingmodel](https://unit8co.github.io/darts/userguide/covariates.html#global-forecasting-models-gfms)): model support is dependent on ensembled forecasting models and the ensemble model itself                                                                  |                                                                                                                                                                                                                                   |                                                              |                                                                          |                                                                          |                                           |\n| [naiveensemblemodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.baselines.html#darts.models.forecasting.baselines.naiveensemblemodel)                                                                                                                                       |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n| [regressionensemblemodel](https://unit8co.github.io/darts/generated_api/darts.models.forecasting.regression_ensemble_model.html#darts.models.forecasting.regression_ensemble_model.regressionensemblemodel)                                                                                             |                                                                                                                                                                                                                                   | \ud83d\udfe9 \ud83d\udfe9                                                        | \ud83d\udfe9 \ud83d\udfe9 \ud83d\udfe9                                                                 | \ud83d\udfe9 \ud83d\udfe9                                                                    | \ud83d\udfe9                                        |\n\n\n## community & contact\nanyone is welcome to join our [gitter room](https://gitter.im/u8darts/darts) to ask questions, make proposals, \ndiscuss use-cases, and more. if you spot a bug or have suggestions, github issues are also welcome.\n\nif what you want to tell us is not suitable for gitter or github,\nfeel free to send us an email at <a href=\"mailto:darts@unit8.co\">darts@unit8.co</a> for\ndarts related matters or <a href=\"mailto:info@unit8.co\">info@unit8.co</a> for any other\ninquiries.\n\n## contribute\nthe development is ongoing, and we welcome suggestions, pull requests and issues on github.\nall contributors will be acknowledged on the\n[change log page](https://github.com/unit8co/darts/blob/master/changelog.md).\n\nbefore working on a contribution (a new feature or a fix),\n[check our contribution guidelines](https://github.com/unit8co/darts/blob/master/contributing.md).\n\n## citation\nif you are using darts in your scientific work, we would appreciate citations to the following jmlr paper.\n\n[darts: user-friendly modern machine learning for time series](https://www.jmlr.org/papers/v23/21-1177.html)\n\nbibtex entry:\n```\n@article{jmlr:v23:21-1177,\n  author  = {julien herzen and francesco l\u00e3\u00a4ssig and samuele giuliano piazzetta and thomas neuer and l\u00e3\u00a9o tafti and guillaume raille and tomas van pottelbergh and marek pasieka and andrzej skrodzki and nicolas huguenin and maxime dumonal and jan ko\u00e5\u203acisz and dennis bader and fr\u00e3\u00a9d\u00e3\u00a9rick gusset and mounir benheddi and camila williamson and michal kosinski and matej petrik and ga\u00e3\u00abl grosch},\n  title   = {darts: user-friendly modern machine learning for time series},\n  journal = {journal of machine learning research},\n  year    = {2022},\n  volume  = {23},\n  number  = {124},\n  pages   = {1-6},\n  url     = {http://jmlr.org/papers/v23/21-1177.html}\n}\n```\n",
  "docs_url": null,
  "keywords": "time series forecasting",
  "license": "apache license 2.0",
  "name": "darts",
  "package_url": "https://pypi.org/project/darts/",
  "project_url": "https://pypi.org/project/darts/",
  "project_urls": {
    "Bug Tracker": "https://github.com/unit8co/darts/issues",
    "Documentation": "https://unit8co.github.io/darts/",
    "Homepage": "https://unit8co.github.io/darts/",
    "Source Code": "https://github.com/unit8co/darts"
  },
  "release_url": "https://pypi.org/project/darts/0.27.1/",
  "requires_dist": [
    "holidays >=0.11.1",
    "joblib >=0.16.0",
    "matplotlib >=3.3.0",
    "nfoursid >=1.0.0",
    "numpy >=1.19.0",
    "pmdarima >=1.8.0",
    "pyod >=0.9.5",
    "requests >=2.22.0",
    "scikit-learn >=1.0.1",
    "scipy >=1.3.2",
    "shap >=0.40.0",
    "statsforecast >=1.4",
    "statsmodels >=0.14.0",
    "tbats >=1.1.0",
    "tqdm >=4.60.0",
    "typing-extensions",
    "xarray >=0.17.0",
    "xgboost >=1.6.0",
    "pytorch-lightning >=1.5.0",
    "tensorboardX >=2.1",
    "torch >=1.8.0",
    "pandas <2.0.0,>=1.0.5 ; python_version < \"3.9\"",
    "pandas >=1.0.5 ; python_version >= \"3.9\""
  ],
  "requires_python": ">=3.8",
  "summary": "a python library for easy manipulation and forecasting of time series.",
  "version": "0.27.1",
  "releases": [],
  "developers": [
    "darts@unit8.co",
    "unit8_sa"
  ],
  "kwds": "timeseries forecasts forecast forecasting kalman_forecaster",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_darts",
  "homepage": "https://unit8co.github.io/darts/",
  "release_count": 32,
  "dependency_ids": [
    "pypi_holidays",
    "pypi_joblib",
    "pypi_matplotlib",
    "pypi_nfoursid",
    "pypi_numpy",
    "pypi_pandas",
    "pypi_pmdarima",
    "pypi_pyod",
    "pypi_pytorch_lightning",
    "pypi_requests",
    "pypi_scikit_learn",
    "pypi_scipy",
    "pypi_shap",
    "pypi_statsforecast",
    "pypi_statsmodels",
    "pypi_tbats",
    "pypi_tensorboardx",
    "pypi_torch",
    "pypi_tqdm",
    "pypi_typing_extensions",
    "pypi_xarray",
    "pypi_xgboost"
  ]
}
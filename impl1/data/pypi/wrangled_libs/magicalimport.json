{
  "classifiers": [
    "programming language :: python",
    "programming language :: python :: implementation :: cpython"
  ],
  "description": "magicalimport\n========================================\n\n.. image:: https://travis-ci.org/podhmo/magicalimport.svg?branch=master\n  :target: https://travis-ci.org/podhmo/magicalimport\n\nimporting a module from physical file path.\n\nexamples\n----------------------------------------\n\nthese files are existed, then..\n\n.. code-block:: bash\n\n  $ tree\n  .\n  \u251c\u2500\u2500 a\n  \u2502\u00a0\u00a0 \u2514\u2500\u2500 b\n  \u2502\u00a0\u00a0     \u2514\u2500\u2500 c\n  \u2502\u00a0\u00a0         \u2514\u2500\u2500 foo.py\n  \u2514\u2500\u2500 main.py\n\n  4 directories, 3 files\n\n\na/b/c/foo.py\n\n.. code-block:: python\n\n  name = \"foo\"\n  _age = \"*secret*\"\n\n.. code-block:: python\n\n  from magicalimport import import_from_physical_path\n\n  # importing foo.py as the module named foo2\n  foo = import_from_physical_path(\"./a/b/c/foo.py\", as_=\"foo2\")\n  print(foo.name)\n\n  # cached in sys.modules, so it is ok.\n  import foo2\n  print(foo2.name)\n\n\nhere option\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n  from magicalimport import import_from_physical_path\n\n  import_from_physical_path(\"bar.py\", here=\"/tmp/foo\", as_=\"bar\")\n\nstar import\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n   from magicalimport import import_from_physical_path\n   from magicalimport import expose_all_members\n\n   # something of like a `from foo import *`\n   expose_all_members(import_from_physical_path(\"./a/b/c/foo.py\"))\n   print(name)  # \"foo\"\n   # print(_age)  # nameerror.. because expose_all_members() doesn't expose the symbols started by \"_\"\n\n   # or\n   from magicalimport import expose_members\n   expose_members(import_from_physical_path(\"./a/b/c/foo.py\"), members=[\"_age\"])\n   print(_age)  # \"*secret*\"\n\n\n0.9.1\n\n- import_module() and import_symbol()'s cwd is true\n\n0.9.0\n\n- revert default behaviour (detail https://github.com/podhmo/magicalimport/pull/18 )\n\n0.8.1\n\n- cwd option\n\n0.8.0\n\n- default behaviour is changed, from now, if here option is omitted, treated as `here=__file__` on caller module.\n- ( previous behaviour is `here=os.getcwd()` )\n\n0.7.3\n\n- skip needless __init__.py creation, in some cases\n\n0.7.2\n\n- fix directly import module handling is not enough, now, treated as a same module\n\n0.7.1\n\n- fix permission error, and same file, treated as a same module\n\n0.7.0\n\n- fix same file, treated as a same module\n\n0.6.0\n\n- fix module_id is not stored in sys.modules, on exec_module()\n\n0.5.0\n\n- raised exception adjustment\n\n0.3.0\n\n- ns option in import_symbol\n\n0.2.1\n\n- here option is supported\n\n0.2\n\n- python2 support\n\n0.1\n\n- first release\n\n\n",
  "docs_url": null,
  "keywords": "import,physical address,file path",
  "license": "",
  "name": "magicalimport",
  "package_url": "https://pypi.org/project/magicalimport/",
  "project_url": "https://pypi.org/project/magicalimport/",
  "project_urls": {
    "Homepage": "https://github.com/podhmo/magicalimport"
  },
  "release_url": "https://pypi.org/project/magicalimport/0.9.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "importing a module by physical file path",
  "version": "0.9.1",
  "releases": [],
  "developers": [
    "ababjam61+github@gmail.com",
    "podhmo"
  ],
  "kwds": "import_from_physical_path import_module import_symbol exec_module importing",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_magicalimport",
  "homepage": "https://github.com/podhmo/magicalimport",
  "release_count": 19,
  "dependency_ids": []
}
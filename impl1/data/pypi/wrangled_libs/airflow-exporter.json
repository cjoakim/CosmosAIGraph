{
  "classifiers": [
    "environment :: web environment",
    "intended audience :: system administrators",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: system :: monitoring"
  ],
  "description": "# airflow prometheus exporter\n\nexposes dag and task based metrics from airflow to a prometheus compatible endpoint.\n\n## compatibility with airflow versions\n\n### >=2.0\ncurrent version is compatible with airflow 2.0+\n\n### <=1.10.14, >=1.10.3\nversion v1.3.2 is compatible\n\n**note: airflow 1.10.14 with python 3.8 users**\n\nyou should install `importlib-metadata` package in order for plugin to be loaded. see [#85](https://github.com/epoch8/airflow-exporter/issues/85) for details.\n\n### <1.10.3\nversion [v0.5.4](https://github.com/epoch8/airflow-exporter/releases/tag/v0.5.4) is compatible\n\n## install\n\n```sh\npip install airflow-exporter\n```\n\nthat's it. you're done.\n\n## exporting extra labels to prometheus\n\nit is possible to add extra labels to dag-related metrics by providing `labels` dict to dag `params`.\n\n### example\n\n```python\ndag = dag(\n    'dummy_dag',\n    schedule_interval=timedelta(hours=5),\n    default_args=default_args,\n    catchup=false,\n    params={\n        'labels': {\n            'env': 'test'\n        }\n    }\n)\n```\n\nlabel `env` with value `test` will be added to all metrics related to `dummy_dag`:\n\n`airflow_dag_status{dag_id=\"dummy_dag\",env=\"test\",owner=\"owner\",status=\"running\"} 12.0`\n\n## metrics\n\nmetrics will be available at \n\n```\nhttp://<your_airflow_host_and_port>/admin/metrics/\n```\n\n### `airflow_task_status`\n\nlabels:\n\n* `dag_id`\n* `task_id`\n* `owner`\n* `status`\n\nvalue: number of tasks in a specific status.\n\n### `airflow_dag_status`\n\nlabels:\n\n* `dag_id`\n* `owner`\n* `status`\n\nvalue: number of dags in a specific status.\n\n### `airflow_dag_run_duration`\n\nlabels:\n\n* `dag_id`: unique identifier for a given dag\n\nvalue: duration in seconds of the longest dag run for given dag. this metric \nis not available for dags that have already finished.\n\n### `airflow_dag_last_status`\n\nlabels:\n\n* `dag_id`\n* `owner`\n* `status`\n\nvalue: 0 or 1 depending on wherever the current state of each `dag_id` is `status`.\n\n## license\n\ndistributed under the bsd license. see [license](license) for more\ninformation.\n\n\n",
  "docs_url": null,
  "keywords": "airflow plugin prometheus exporter metrics",
  "license": "",
  "name": "airflow-exporter",
  "package_url": "https://pypi.org/project/airflow-exporter/",
  "project_url": "https://pypi.org/project/airflow-exporter/",
  "project_urls": {
    "Homepage": "https://github.com/epoch8/airflow-exporter"
  },
  "release_url": "https://pypi.org/project/airflow-exporter/1.5.3/",
  "requires_dist": [
    "apache-airflow (>=2.0.0)",
    "prometheus-client (>=0.4.2)"
  ],
  "requires_python": "",
  "summary": "airflow plugin to export dag and task based metrics to prometheus.",
  "version": "1.5.3",
  "releases": [],
  "developers": [],
  "kwds": "airflow_task_status airflow_dag_status prometheus airflow_dag_run_duration airflow_dag_last_status",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_airflow_exporter",
  "homepage": "https://github.com/epoch8/airflow-exporter",
  "release_count": 12,
  "dependency_ids": [
    "pypi_apache_airflow",
    "pypi_prometheus_client"
  ]
}
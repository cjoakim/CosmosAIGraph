{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "natural language :: english",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6"
  ],
  "description": "=============================\nbinaryornot\n=============================\n\n.. image:: https://img.shields.io/pypi/v/binaryornot.svg?style=flat\n      :target: https://pypi.python.org/pypi/binaryornot\n\n.. image:: https://readthedocs.org/projects/binaryornot/badge/?version=latest\n    :target: http://binaryornot.readthedocs.io/en/latest/?badge=latest\n    :alt: documentation status\n\n\n.. image:: https://pyup.io/repos/github/audreyr/binaryornot/shield.svg\n   :target: https://pyup.io/repos/github/audreyr/binaryornot/\n   :alt: updates\n\nultra-lightweight pure python package to guess whether a file is binary or text,\nusing a heuristic similar to perl's `pp_fttext` and its analysis by @eliben.\n\n* free software: bsd license\n* documentation: https://binaryornot.readthedocs.io\n\nstatus\n------\n\nit works, and people are using this package in various places. but it doesn't cover all edge cases yet.\n\nthe code could be improved. pull requests welcome! as of now, it is based on these snippets, but that may change:\n\n* http://stackoverflow.com/questions/898669/how-can-i-detect-if-a-file-is-binary-non-text-in-python\n* http://stackoverflow.com/questions/1446549/how-to-identify-binary-and-text-files-using-python\n* http://code.activestate.com/recipes/173220/\n* http://eli.thegreenplace.net/2011/10/19/perls-guess-if-file-is-text-or-binary-implemented-in-python/\n\nfeatures\n--------\n\nhas tests for these file types:\n\n* text: .txt, .css, .json, .svg, .js, .lua, .pl, .rst\n* binary: .png, .gif, .jpg, .tiff, .bmp, .ds_store, .eot, .otf, .ttf, .woff, .rgb\n\nhas tests for numerous encodings.\n\nwhy?\n----\n\nyou may be thinking, \"i can write this in 2 lines of code?!\"\n\nit's actually not that easy. here's a great article about how perl's\nheuristic to guess file types works: http://eli.thegreenplace.net/2011/10/19/perls-guess-if-file-is-text-or-binary-implemented-in-python/\n\nand that's just where we started. over time, we've found more edge cases and\nour heuristic has gotten more complex.\n\nalso, this package saves you from having to write and thoroughly test\nyour code with all sorts of weird file types and encodings, cross-platform.\n\nbuilds\n------\n\nlinux (ubuntu 12.04 lts server edition 64 bit):\n\n.. image:: https://img.shields.io/travis/audreyr/binaryornot/master.svg\n        :target: https://travis-ci.org/audreyr/binaryornot\n\nwindows (windows server 2012 r2 (x64)):\n\n.. image:: https://img.shields.io/appveyor/ci/audreyr/binaryornot/master.svg\n        :target: https://ci.appveyor.com/project/audreyr/binaryornot\n\ncredits\n-------\n\n* special thanks to eli bendersky (@eliben) for his writeup explaining the heuristic and his implementation, which this is largely based on.\n* source code from the portion of perl's `pp_fttext` that checks for textiness: https://github.com/perl/perl5/blob/v5.23.1/pp_sys.c#l3527-l3587\n\n\n\n\nhistory\n-------\n\n0.4.4 (2017-04-13)\n~~~~~~~~~~~~~~~~~~\n\n* notify users for file i/o issues. thanks @lukehinds!\n\n\n0.4.3 (2017-04-13)\n~~~~~~~~~~~~~~~~~~\n\n* restricted chardet to anything 3.0.2 or higher due to https://github.com/chardet/chardet/issues/113. thanks @dan-blanchard for the quick fix!\n\n0.4.2 (2017-04-12)\n~~~~~~~~~~~~~~~~~~\n\n* restricted chardet to anything under 3.0 due to https://github.com/chardet/chardet/issues/113\n* added pyup badge\n* added utilities for pushing new versions up\n\n0.4.0 (2015-08-21)\n~~~~~~~~~~~~~~~~~~\n\n* enhanced detection for some binary streams and utf texts. (#10, 11) thanks `@pombredanne`_.\n* set up appveyor for continuous testing on windows. thanks `@pydanny`_.\n* update link to perl source implementation. (#9) thanks `@asmeurer`_ `@pombredanne`_ `@audreyr`_.\n* handle unicodedecodeerror in check. (#12) thanks `@drmaciver`_.\n* add very simple hypothesis based tests. (#13) thanks `@drmaciver`_.\n* use setup to determine requirements and remove redundant requirements.txt. (#14) thanks `@hackebrot`_.\n* add documentation status badge to readme.rst. (#15) thanks `@hackebrot`_.\n* run tox in travis.yml. add pypy and python 3.4 to tox environments. (#16) thanks `@hackebrot`_ `@pydanny`_.\n* handle lookuperror when detecting encoding. (#17) thanks `@drmaciver`_.\n\n\n.. _`@pombredanne`: https://github.com/pombredanne\n.. _`@pydanny`: https://github.com/pydanny\n.. _`@asmeurer`: https://github.com/asmeurer\n.. _`@audreyr`: https://github.com/audreyr\n.. _`@drmaciver`: https://github.com/drmaciver\n.. _`@hackebrot`: https://github.com/hackebrot\n\n0.3.0 (2014-05-05)\n~~~~~~~~~~~~~~~~~~\n\n* include tests, docs in source package. (#6) thanks `@vincentbernat`_.\n* drop unnecessary shebangs and executable bits. (#8) thanks `@scop`_.\n* generate string of printable extended ascii bytes only once. (#7) thanks `@scop`_.\n* make number of bytes to read parametrizable. (#7) thanks `@scop`_.\n\n.. _`@vincentbernat`: https://github.com/vincentbernat\n.. _`@scop`: https://github.com/scop\n\n0.2.0 (2013-09-22)\n~~~~~~~~~~~~~~~~~~\n\n* complete rewrite of everything. thanks `@ncoghlan`_.\n\n.. _`@ncoghlan`: https://github.com/ncoghlan\n\n0.1.1 (2013-08-17)\n~~~~~~~~~~~~~~~~~~\n\n* tests pass under python 2.6, 2.7, 3.3, pypy.\n\n\n0.1.0 (2013-08-17)\n~~~~~~~~~~~~~~~~~~\n\n* first release on pypi.\n",
  "docs_url": null,
  "keywords": "binaryornot",
  "license": "bsd",
  "name": "binaryornot",
  "package_url": "https://pypi.org/project/binaryornot/",
  "project_url": "https://pypi.org/project/binaryornot/",
  "project_urls": {
    "Homepage": "https://github.com/audreyr/binaryornot"
  },
  "release_url": "https://pypi.org/project/binaryornot/0.4.4/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "ultra-lightweight pure python package to check if a file is binary or text.",
  "version": "0.4.4",
  "releases": [],
  "developers": [
    "aroy@alum.mit.edu",
    "audrey_roy_greenfeld"
  ],
  "kwds": "binaryornot binary python unicodedecodeerror detect",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_binaryornot",
  "homepage": "https://github.com/audreyr/binaryornot",
  "release_count": 8,
  "dependency_ids": []
}
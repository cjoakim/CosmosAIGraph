{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: console",
    "intended audience :: developers",
    "intended audience :: end users/desktop",
    "license :: osi approved :: gnu general public license v3 (gplv3)",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: home automation",
    "topic :: system :: hardware"
  ],
  "description": "python-miio\n===========\n\n|chat| |pypi version| |pypi downloads| |build status| |coverage status| |docs| |black|\n\nthis library (and its accompanying cli tool) can be used to interface with devices using xiaomi's `miio <https://github.com/openmihome/mihome-binary-protocol/blob/master/doc/protocol.md>`__ and miot protocols.\n\n\ngetting started\n---------------\n\nif you already have a token for your device and the device type, you can directly start using `miiocli` tool.\nif you don't have a token for your device, refer to `getting started <https://python-miio.readthedocs.io/en/latest/discovery.html>`__ section of `the manual <https://python-miio.readthedocs.io>`__ for instructions how to obtain it.\n\nthe `miiocli` is the main way to execute commands from command line.\nyou can always use `--help` to get more information about the available commands.\nfor example, executing it without any extra arguments will print out options and available commands::\n\n    $ miiocli --help\n    usage: miiocli [options] command [args]...\n\n    options:\n      -d, --debug\n      -o, --output [default|json|json_pretty]\n      --help                          show this message and exit.\n\n    commands:\n      airconditioningcompanion\n      ..\n\nyou can get some information from any miio/miot device, including its device model, using the `info` command::\n\n    miiocli device --ip <ip> --token <token> info\n\n    model: some.device.model1\n    hardware version: esp8285\n    firmware version: 1.0.1_0012\n    network: {'localip': '<ip>', 'mask': '255.255.255.0', 'gw': '<ip>'}\n    ap: {'rssi': -73, 'ssid': '<nnetwork>', 'primary': 11, 'bssid': '<bssid>'}\n\ndifferent devices are supported by their corresponding modules (e.g., `roborockvacuum` or `fan`).\nyou can get the list of available commands for any given module by passing `--help` argument to it::\n\n    $ miiocli roborockvacuum --help\n\n    usage: miiocli roborockvacuum [options] command [args]...\n\n    options:\n      --ip text       [required]\n      --token text    [required]\n      --id-file file\n      --help          show this message and exit.\n\n    commands:\n      add_timer                add a timer.\n      ..\n\neach command invocation will automatically detect the device model necessary for some actions by querying the device.\nyou can avoid this by specifying the model manually::\n\n    miiocli roborockvacuum --model roborock.vacuum.s5 --ip <ip> --token <token> start\n\n\napi usage\n---------\nall functionality is accessible through the `miio` module::\n\n    from miio import roborockvacuum\n\n    vac = roborockvacuum(\"<ip address>\", \"<token>\")\n    vac.start()\n\neach separate device type inherits from `miio.device`\n(and in case of miot devices, `miio.miotdevice`) which provides a common api.\n\neach command invocation will automatically detect (and cache) the device model necessary for some actions\nby querying the device.\nyou can avoid this by specifying the model manually::\n\n    from miio import roborockvacuum\n\n    vac = roborockvacuum(\"<ip address>\", \"<token>\", model=\"roborock.vacuum.s5\")\n\nplease refer to `api documentation <https://python-miio.readthedocs.io/en/latest/api/miio.html>`__ for more information.\n\n\ntroubleshooting\n---------------\nyou can find some solutions for the most common problems can be found in `troubleshooting <https://python-miio.readthedocs.io/en/latest/troubleshooting.html>`__ section.\n\nif you have any questions, or simply want to join up for a chat, check `our matrix room <https://matrix.to/#/#python-miio-chat:matrix.org>`__.\n\ncontributing\n------------\n\nwe welcome all sorts of contributions from patches to add improvements or fixing bugs to improving the documentation.\nto ease the process of setting up a development environment we have prepared `a short guide <https://python-miio.readthedocs.io/en/latest/contributing.html>`__ for getting you started.\n\n\nsupported devices\n-----------------\n\n-  xiaomi mi robot vacuum v1, s4, s4 max, s5, s5 max, s6 pure, m1s, s7\n-  xiaomi mi home air conditioner companion\n-  xiaomi mi smart air conditioner a (xiaomi.aircondition.mc1, mc2, mc4, mc5)\n-  xiaomi mi air purifier 2, 3h, 3c, 4, pro, pro h, 4 pro (zhimi.airpurifier.m2, mb3, mb4, mb5, v7, vb2, va2), 4 lite\n-  xiaomi mi air (purifier) dog x3, x5, x7sm (airdog.airpurifier.x3, airdog.airpurifier.x5, airdog.airpurifier.x7sm)\n-  xiaomi mi air humidifier\n-  smartmi air purifier\n-  xiaomi aqara camera\n-  xiaomi aqara gateway (basic implementation, alarm, lights)\n-  xiaomi mijia 360 1080p\n-  xiaomi mijia styj02ym (viomi)\n-  xiaomi mijia 1c stytj01zhm (dreame)\n-  dreame f9, d9, z10 pro\n-  xiaomi mi home (mijia) g1 robot vacuum mop mjstg1\n-  xiaomi roidmi eve\n-  xiaomi mi smart wifi socket\n-  xiaomi chuangmi plug v1 (1 socket, 1 usb port)\n-  xiaomi chuangmi plug v3 (1 socket, 2 usb ports)\n-  xiaomi smart power strip v1 and v2 (wifi, 6 ports)\n-  xiaomi philips eyecare smart lamp 2\n-  xiaomi philips rw read (philips.light.rwread)\n-  xiaomi philips led ceiling lamp\n-  xiaomi philips led ball lamp (philips.light.bulb)\n-  xiaomi philips led ball lamp white (philips.light.hbulb)\n-  xiaomi philips zhirui smart led bulb e14 candle lamp\n-  xiaomi philips zhirui bedroom smart lamp\n-  huayi huizuo lamps\n-  xiaomi universal ir remote controller (chuangmi ir)\n-  xiaomi mi smart pedestal fan v2, v3, sa1, za1, za3, za4, za5 1c, p5, p9, p10, p11, p33\n-  xiaomi rosou ss4 ventilator (leshow.fan.ss4)\n-  xiaomi mi air humidifier v1, ca1, ca4, cb1, mjjsq, jsq, jsq1, jsq001\n-  xiaomi mi water purifier (basic support: turn on & off)\n-  xiaomi mi water purifier d1, c1 (triple setting)\n-  xiaomi pm2.5 air quality monitor v1, b1, s1\n-  xiaomi smart wifi speaker\n-  xiaomi mi wifi repeater 2\n-  xiaomi mi smart rice cooker\n-  xiaomi smartmi fresh air system va2 (zhimi.airfresh.va2), va4 (zhimi.airfresh.va4),\n   a1 (dmaker.airfresh.a1), t2017 (dmaker.airfresh.t2017)\n-  yeelight lights (basic support, we recommend using `python-yeelight <https://gitlab.com/stavros/python-yeelight/>`__)\n-  xiaomi mi air dehumidifier\n-  xiaomi tinymu smart toilet cover\n-  xiaomi 16 relays module\n-  xiaomi xiao ai smart alarm clock\n-  smartmi radiant heater smart version (za1 version)\n-  xiaomi mi smart space heater\n-  xiaomiyoupin curtain controller (wi-fi) (lumi.curtain.hagl05)\n-  xiaomi xiaomi mi smart space heater s (zhimi.heater.mc2)\n-  xiaomi xiaomi mi smart space heater 1s (zhimi.heater.za2)\n-  yeelight dual control module (yeelink.switch.sw1)\n-  scishare coffee maker (scishare.coffee.s1102)\n-  qingping air monitor lite (cgllc.airm.cgdn1)\n-  xiaomi walkingpad a1 (ksmb.walkingpad.v3)\n-  xiaomi smart pet water dispenser (mmgg.pet_waterer.s1, s4)\n-  xiaomi mi smart humidifer s (jsqs, jsq5)\n-  xiaomi mi robot vacuum mop 2 (pro+, ultra)\n\n\n*feel free to create a pull request to add support for new devices as\nwell as additional features for supported devices.*\n\nprojects using this library\n---------------------------\n\nthis library is used by various projects to support miio/miot devices.\nif you are using this library for your project, feel free to open a pr to get it listed here!\n\nhome assistant (official)\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nhome assistant uses this library to support several platforms out-of-the-box.\nthis list is incomplete as the platforms (in parentheses) may also support other devices listed above.\n\n-  `xiaomi mi robot vacuum <https://home-assistant.io/components/vacuum.xiaomi_miio/>`__ (vacuum)\n-  `xiaomi philips light <https://home-assistant.io/components/light.xiaomi_miio/>`__ (light)\n-  `xiaomi mi air purifier and air humidifier <https://home-assistant.io/components/fan.xiaomi_miio/>`__ (fan)\n-  `xiaomi smart wifi socket and smart power strip <https://home-assistant.io/components/switch.xiaomi_miio/>`__ (switch)\n-  `xiaomi universal ir remote controller <https://home-assistant.io/components/remote.xiaomi_miio/>`__ (remote)\n-  `xiaomi mi air quality monitor (pm2.5) <https://home-assistant.io/components/sensor.xiaomi_miio/>`__ (sensor)\n-  `xiaomi aqara gateway alarm <https://home-assistant.io/components/alarm_control_panel.xiaomi_miio/>`__ (alarm_control_panel)\n-  `xiaomi mi wifi repeater 2 <https://www.home-assistant.io/components/device_tracker.xiaomi_miio/>`__ (device_tracker)\n\nhome assistant (custom)\n^^^^^^^^^^^^^^^^^^^^^^^\n\n-  `xiaomi mi home air conditioner companion <https://github.com/syssi/xiaomi_airconditioningcompanion>`__\n-  `xiaomi mi smart pedestal fan <https://github.com/syssi/xiaomi_fan>`__\n-  `xiaomi mi smart rice cooker <https://github.com/syssi/xiaomi_cooker>`__\n-  `xiaomi raw sensor <https://github.com/syssi/xiaomi_raw>`__\n-  `xiaomi miot devices <https://github.com/ha0y/xiaomi_miot_raw>`__\n-  `xiaomi miot auto <https://github.com/al-one/hass-xiaomi-miot>`__\n\nother related projects\n----------------------\n\nthis is a list of other projects around the xiaomi ecosystem that you can find interesting.\nfeel free to submit more related projects.\n\n-  `dustcloud <https://github.com/dgiese/dustcloud>`__ (reverse engineering and rooting xiaomi devices)\n-  `valetudo <https://github.com/hypfer/valetudo>`__ (cloud free vacuum firmware)\n-  `micloud <https://github.com/squachen/micloud>`__ (library to access xiaomi cloud services, can be used to obtain device tokens)\n-  `micloudfaker <https://github.com/unrelentingtech/micloudfaker>`__ (dummy cloud server, can be used to fix powerstrip status requests when without internet access)\n-  `your project here? feel free to open a pr! <https://github.com/rytilahti/python-miio/pulls>`__\n\n.. |chat| image:: https://img.shields.io/matrix/python-miio-chat:matrix.org\n   :target: https://matrix.to/#/#python-miio-chat:matrix.org\n.. |pypi version| image:: https://badge.fury.io/py/python-miio.svg\n   :target: https://badge.fury.io/py/python-miio\n.. |pypi downloads| image:: https://img.shields.io/pypi/dw/python-miio\n   :target: https://pypi.org/project/python-miio/\n.. |build status| image:: https://github.com/rytilahti/python-miio/actions/workflows/ci.yml/badge.svg\n   :target: https://github.com/rytilahti/python-miio/actions/workflows/ci.yml\n.. |coverage status| image:: https://codecov.io/gh/rytilahti/python-miio/branch/master/graph/badge.svg?token=lykwubxklu\n   :target: https://codecov.io/gh/rytilahti/python-miio\n.. |docs| image:: https://readthedocs.org/projects/python-miio/badge/?version=latest\n   :alt: documentation status\n   :target: https://python-miio.readthedocs.io/en/latest/?badge=latest\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n",
  "docs_url": null,
  "keywords": "xiaomi,miio,miot,smart home",
  "license": "gpl-3.0-only",
  "name": "python-miio",
  "package_url": "https://pypi.org/project/python-miio/",
  "project_url": "https://pypi.org/project/python-miio/",
  "project_urls": {
    "Documentation": "https://python-miio.readthedocs.io",
    "Homepage": "https://github.com/rytilahti/python-miio",
    "Repository": "https://github.com/rytilahti/python-miio"
  },
  "release_url": "https://pypi.org/project/python-miio/0.5.12/",
  "requires_dist": [
    "PyYAML (>=5,<7)",
    "android_backup (>=0,<1)",
    "appdirs (>=1,<2)",
    "attrs",
    "click (>=8)",
    "construct (>=2.10.56,<3.0.0)",
    "croniter (>=1)",
    "cryptography (>=35)",
    "defusedxml (>=0,<1)",
    "importlib_metadata (>=1,<2); python_version <= \"3.7\"",
    "micloud",
    "netifaces (>=0,<1)",
    "pytz",
    "sphinx (>=4.2); extra == \"docs\"",
    "sphinx_click; extra == \"docs\"",
    "sphinx_rtd_theme (>=0,<1); extra == \"docs\"",
    "sphinxcontrib-apidoc (>=0,<1); extra == \"docs\"",
    "tqdm (>=4,<5)",
    "zeroconf (>=0,<1)"
  ],
  "requires_python": ">=3.7,<4.0",
  "summary": "python library for interfacing with xiaomi smart appliances",
  "version": "0.5.12",
  "releases": [],
  "developers": [
    "teemu_r",
    "tpr@iki.fi"
  ],
  "kwds": "xiaomi_miio xiaomi_miot_raw xiaomi_cooker xiaomi xiaomi_raw",
  "license_kwds": "gpl-3.0-only",
  "libtype": "pypi",
  "id": "pypi_python_miio",
  "homepage": "https://github.com/rytilahti/python-miio",
  "release_count": 39,
  "dependency_ids": [
    "pypi_android_backup",
    "pypi_appdirs",
    "pypi_attrs",
    "pypi_click",
    "pypi_construct",
    "pypi_croniter",
    "pypi_cryptography",
    "pypi_defusedxml",
    "pypi_importlib_metadata",
    "pypi_micloud",
    "pypi_netifaces",
    "pypi_pytz",
    "pypi_pyyaml",
    "pypi_sphinx",
    "pypi_sphinx_click",
    "pypi_sphinx_rtd_theme",
    "pypi_sphinxcontrib_apidoc",
    "pypi_tqdm",
    "pypi_zeroconf"
  ]
}
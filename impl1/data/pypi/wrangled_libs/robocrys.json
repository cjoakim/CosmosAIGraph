{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: other/nonlisted topic",
    "topic :: scientific/engineering",
    "topic :: scientific/engineering :: chemistry",
    "topic :: scientific/engineering :: physics"
  ],
  "description": "<p align=\"center\">\n  <img alt=\"robocrystallographer logo\" src=\"https://raw.githubusercontent.com/hackingmaterials/robocrystallographer/master/docs/src/_static/logo-01.png\" height=\"200px\">\n</p>\n\n<p align=\"center\">\n  <a href=\"https://pypi.org/project/robocrys/\"><img alt=\"pypi version\" src=\"https://img.shields.io/pypi/v/robocrys.svg?colorb=blue\"> </a>\n  <a href=\"https://github.com/hackingmaterials/robocrystallographer/actions?query=workflow%3a%22run+tests%22\"><img alt=\"circleci\" src=\"https://img.shields.io/github/actions/workflow/status/hackingmaterials/robocrystallographer/tests.yml?branch=main\"> </a>\n</p>\n\n\n\n\nrobocrystallographer is a tool to generate text descriptions of crystal\nstructures. similar to how a real-life crystallographer would analyse a\nstructure, robocrystallographer looks at the symmetry, local environment, and\nextended connectivity when generating a description. the package includes\nutilities for identifying molecule names, component orientations,\nheterostructure information, and more...\n\n## usage\n\nrobocrystallographer can be used from the command-line or from a python api.\nthe package integrates with the [materials project](https://materialsproject.org)\nto for allow generation of structure descriptions directly from materials project\nids. for example, to generate the description of sno<sub>2</sub>\n([mp-856](https://materialsproject.org/materials/mp-856/)), one\ncan simply run:\n\n```bash\nrobocrys mp-856\n```\n\nalternatively, a structure file can be specified in place of a materials project id.\nrobocrystallographer supports the same file formats as\n[pymatgen](http://pymatgen.org), including the crystallographic information\nformat (cif), and common electronic structure package formats such as poscar files.\nmore information can be found on the\n[command-line interface page](https://hackingmaterials.github.io/robocrystallographer/cli.html).\n\n### python interface\n\nthe two core classes in robocrystallographer are:\n\n- `structurecondenser`: to condense the structure into an descriptive json\n  representation.\n- `structuredescriber`: to turn the condensed structure into a text description.\n\na minimal working example for generating text descriptions is simply:\n\n```python\nfrom pymatgen import structure\nfrom robocrys import structurecondenser, structuredescriber\n\nstructure = structure.from_file(\"my_structure.cif\") # other file formats also supported\n\n# alternatively, uncomment the lines below to use the mprester object\n#\u00a0to fetch structures from the materials project database\n# from pymatgen import mprester\n# structure = mprester(api_key=none).get_structure_by_material_id(\"mp-856\")\n\ncondenser = structurecondenser()\ndescriber = structuredescriber()\n\ncondensed_structure = condenser.condense_structure(structure)\ndescription = describer.describe(condensed_structure)\n```\n\nwhere `structure` is a pymatgen structure object. both classes have many\noptions for customising the output of the structure\ndescriptions. more information is provided in the\n[module documentation](https://hackingmaterials.github.io/robocrystallographer/modules).\n\n### intermediate json format\n\nthe format of the intermediate json representation is detailed on the\n[condensed structure format page](https://hackingmaterials.github.io/robocrystallographer/format.html).\n\n\n### example output\n\nan example of the output generated by robocrystallographer for sno<sub>2</sub> ([mp-856](https://materialsproject.org/materials/mp-856/)) is given below:\n\n<p align=\"center\">\n<img alt=\"sno2 crystal structure\" src=\"https://raw.githubusercontent.com/hackingmaterials/robocrystallographer/master/docs/src//_static/rutile.jpg\" height=\n\"200px\">\n</p>\n\n> sno2 is rutile structured and crystallizes in the tetragonal p4_2/mnm space\n> group. the structure is three-dimensional. sn(1) is bonded to six equivalent\n> o(1) atoms to form a mixture of edge and corner-sharing sno6 octahedra. the\n> corner-sharing octahedral tilt angles are 51\u00b0. all sn(1)\u2013o(1) bond lengths\n> are 2.09 \u00e5. o(1) is bonded in a trigonal planar geometry to three equivalent\n> sn(1) atoms.\n\n## how to cite robocrystallographer\n\nplease considering citing the following publication if using robocrystallographer in your work:\n\n> ganose, a., & jain, a. (2019). robocrystallographer: automated crystal structure  text descriptions and analysis. mrs communications, 9(3), 874-881. https://doi.org/10.1557/mrc.2019.94\n\n## installation\n\nrobocrystallographer can be installed using pip:\n\n```bash\npip install robocrys\n```\n\nrobocrystallographer requires python 3.7+. the\n[openbabel](http://openbabel.org/wiki/python)\npackage is required to determine molecule names. this is an optional\nrequirement but its use is recommended for best\nresults. if you are using the [conda](https://conda.io/) package management\nsystem, openbabel can be installed using:\n\n```bash\nconda install -c conda-forge openbabel\n```\n\n## what\u2019s new?\n\ntrack changes to robocrystallographer through the\n[changelog](https://hackingmaterials.github.io/robocrystallographer/changelog.html).\n\n## contributing\n\nrobocrystallographer is in early development but we still welcome your\ncontributions. please read our [contribution guidelines](https://hackingmaterials.github.io/robocrystallographer/contributing.html)\nfor more information. we maintain a list of all\ncontributors [here](https://hackingmaterials.github.io/robocrystallographer/contributors.html).\n\n## license\n\nrobocrystallographer is released under a modified bsd license;\nthe full text can be found\n[here](https://hackingmaterials.github.io/robocrystallographer/license.html).\n\n## acknowledgements\n\nlogo by somewan from the noun project.\n\n\n",
  "docs_url": null,
  "keywords": "crystal-structure crystallography materials-science",
  "license": "modified bsd",
  "name": "robocrys",
  "package_url": "https://pypi.org/project/robocrys/",
  "project_url": "https://pypi.org/project/robocrys/",
  "project_urls": {
    "Homepage": "https://github.com/hackingmaterials/robocrystallographer"
  },
  "release_url": "https://pypi.org/project/robocrys/0.2.8/",
  "requires_dist": [
    "inflect",
    "matminer",
    "monty",
    "networkx",
    "numpy",
    "pubchempy",
    "pybtex",
    "pymatgen (>=2020.10.20)",
    "ruamel.yaml",
    "scipy",
    "spglib",
    "maggma ; extra == 'dev'",
    "pebble ; extra == 'dev'",
    "pybel ; extra == 'dev'",
    "tqdm ; extra == 'dev'",
    "m2r2 (==0.3.2) ; extra == 'docs'",
    "sphinx-argparse (==0.4.0) ; extra == 'docs'",
    "sphinx-autodoc-typehints (==1.23.0) ; extra == 'docs'",
    "sphinx (==5.3.0) ; extra == 'docs'",
    "sphinx-rtd-theme (==1.2.0) ; extra == 'docs'",
    "black (==23.3.0) ; extra == 'lint'",
    "codacy-coverage (==1.3.11) ; extra == 'lint'",
    "coverage (==7.2.5) ; extra == 'lint'",
    "flake8 (==6.0.0) ; extra == 'lint'",
    "mypy (==1.2.0) ; extra == 'lint'",
    "pycodestyle (==2.9.1) ; extra == 'lint'",
    "pydocstyle (==6.1.1) ; extra == 'lint'",
    "pylint (==2.17.3) ; extra == 'lint'",
    "pytest-cov (==4.0.0) ; extra == 'tests'",
    "pytest (==7.3.1) ; extra == 'tests'"
  ],
  "requires_python": ">=3.8",
  "summary": "automatic generation of crystal structure descriptions",
  "version": "0.2.8",
  "releases": [],
  "developers": [
    "aganose@lbl.gov",
    "alex_ganose"
  ],
  "kwds": "crystallographer crystallography crystallographic crystal robocrystallographer",
  "license_kwds": "modified bsd",
  "libtype": "pypi",
  "id": "pypi_robocrys",
  "homepage": "https://github.com/hackingmaterials/robocrystallographer",
  "release_count": 13,
  "dependency_ids": [
    "pypi_black",
    "pypi_codacy_coverage",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_inflect",
    "pypi_m2r2",
    "pypi_maggma",
    "pypi_matminer",
    "pypi_monty",
    "pypi_mypy",
    "pypi_networkx",
    "pypi_numpy",
    "pypi_pebble",
    "pypi_pubchempy",
    "pypi_pybel",
    "pypi_pybtex",
    "pypi_pycodestyle",
    "pypi_pydocstyle",
    "pypi_pylint",
    "pypi_pymatgen",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_ruamel.yaml",
    "pypi_scipy",
    "pypi_spglib",
    "pypi_sphinx",
    "pypi_sphinx_argparse",
    "pypi_sphinx_autodoc_typehints",
    "pypi_sphinx_rtd_theme",
    "pypi_tqdm"
  ]
}
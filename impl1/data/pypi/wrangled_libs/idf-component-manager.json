{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "natural language :: english",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython"
  ],
  "description": "# idf component manager\n\nthe idf component manager is a tool that downloads dependencies for any [esp-idf](https://www.espressif.com/en/products/sdks/esp-idf) cmake project. it makes sure that the right versions of all components required for a successful build of your project are in place. the download happens automatically during a run of cmake. it can source components either from [the component registry](https://components.espressif.com/) or from a git repository.\n\n**a list of components can be found at https://components.espressif.com/**\n\n## [official documentation](https://docs.espressif.com/projects/idf-component-manager/en/latest/)\n\n## disabling the component manager\n\nthe component manager can be explicitly disabled by setting `idf_component_manager` environment variable to `0`.\n\n## using with a project\n\nyou can add `idf_component.yml` manifest files with the list of dependencies to any component in your project.\n\nidf component manager will download dependencies automatically during the project build process.\n\nwhen cmake configures the project (e.g. `idf.py reconfigure`) component manager does a few things:\n\n- processes `idf_component.yml` manifests for every component in the project\n- creates a `dependencies.lock` file in the root of the project with a full list of dependencies\n- downloads all dependencies to the `managed_components` directory\n\nthe component manager won't try to regenerate `dependencies.lock` or download any components if manifests, lock file, and content of `managed_component` directory weren't modified since the last successful build.\n\n## defining dependencies in the manifest\n\nall dependencies are defined in the manifest file.\n\n```yaml\ndependencies:\n  # required idf version\n  idf: \">=4.1\"\n  # for components maintained by espressif only name can be used.\n  # same as `espressif/component`\n  component:\n    version: \"~2.0.0\"\n  # or in a shorter form\n  component2: \">=1.0.0\"\n  # for 3rd party components :\n  username/component:\n    version: \"~1.0.0\"\n    # for transient dependencies `public` flag can be set.\n    public: true\n  anotheruser/component: \"<3.2.20\"\n  # for components hosted on non-default registry:\n  company_user/component:\n    version: \"~1.0.0\"\n    service_url: \"https://componentregistry.company.com\"\n  # for components in git repository:\n  test_component:\n    path: test_component\n    git: ssh://git@gitlab.com/user/components.git\n  # for test projects during component development\n  # components can be used from a local directory\n  # with relative or absolute path\n  some_local_component:\n    path: ../../projects/component\n  # for optional dependencies\n  optional_component:\n    version: \"~1.0.0\"\n    rules: # will add \"optional_component\" only when all if clauses are true\n      - if: \"idf_version >=3.3,<5.0\" # supports all simplespec grammars (https://python-semanticversion.readthedocs.io/en/latest/reference.html#semantic_version.simplespec)\n      - if: \"target in [esp32, esp32c3]\" # supports boolean operator ==, !=, in, not in.\n  # for example of the component\n  namespace/component_with_example:\n    version: \"~1.0.0\" # if there is no `override_path` field, use component from registry\n    override_path: \"../../\" # use component in a local directory, not from registry\n  namespace/no_required_component:\n    version: \"*\"\n    require: no # download component but don't add it as a requirement\n  namespace/pre_release_component:\n    version: \"*\"\n    pre_release: true # allow downloading of pre-release versions\n```\n\n## component metadata caching\n\nby default, information about available versions of components not cached. if you make many requests to the registry from one machine, you can enable caching by setting `idf_component_api_cache_expiration_minutes` environment variable to the number of minutes to cache the data.\n\n## external links\n\nyou can add links to the `idf_component.yml` file to the root of the manifest:\n\n```yaml\nurl: \"https://example.com/homepage\" # url of the component homepage\nrepository: \"https://gitexample.com/test_project\" # url of the public repository with component source code, i.e github, gitlab, etc.\ndocumentation: \"https://example.com/documentation\" # url of the component documentation\nissues: \"https://git.example.com/test_project/tracker\" # url of the issue tracker\ndiscussion: \"https://discord.example.com/test_project\" # url of the component discussion, i.e. discord, gitter, forum, etc.\n```\n\na link should be a correct http(s) url like `https://example.com/path` except the `repository` field,\nit is expected to be a valid [git remote](https://git-scm.com/book/en/v2/git-basics-working-with-remotes) url.\n\n## add examples to the component\n\nto add examples to your component, place them in the `examples` directory inside your component.\nexamples are discovered recursively in subdirectories at this path.\na directory with `cmakelists.txt` that registers a project is considered as an example.\n\n## custom example paths\n\nyou can specify custom example paths for uploading them to the component registry.\nfor that, add `examples` field to the root of the manifest:\n\n```yaml\nexamples:\n  - path: ../some/path\n  - path: ../some/other_path\n```\n\n## environment variables\n\n| variable                                    | default value (or example for required) | required? | description                                                                                     |\n| ------------------------------------------- | --------------------------------------- | --------- | ----------------------------------------------------------------------------------------------- |\n| idf_component_api_token                     |                                         | no        | api token to access the component registry                                                      |\n| idf_component_registry_url                  | https://components.espressif.com/       | no        | url of the default component registry                                                           |\n| idf_component_storage_url                   | https://components-file.espressif.com/  | no        | url of the default file storage server                                                          |\n| idf_component_registry_profile              | default                                 | no        | profile in the config file to use for component registry                                        |\n| idf_component_api_cache_expiration_minutes  | 0                                       | no        | api cache expiration time in minutes                                                            |\n| idf_component_cache_path                    | \\* depends on os                        | no        | cache directory for component manager                                                           |\n| component_manager_job_timeout               | 300                                     | no        | timeout in seconds to wait for component processing                                             |\n| idf_component_overwrite_managed_components  | 0                                       | no        | overwrite files in the managed_component directory, even if they have been modified by the user |\n| ignore_unknown_files_for_managed_components | 0                                       | no        | ignore unknown files in managed_components directory                                            |\n\n## contributions guide\n\nwe welcome all contributions to the component manager project.\n\nyou can contribute by fixing bugs, adding features, adding documentation, or reporting an [issue](https://github.com/espressif/idf-component-manager/issues). we accept contributions via [github pull requests](https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests).\n\nbefore reporting an issue, make sure you've searched for a similar one that was already created. if you are reporting a new issue, please follow the issue template.\n\n## installing a development version of the component manager\n\nyou can install the development version of the component manager from the main branch of this repository:\n\n**on linux/macos:**\n\ngo to the directory with your esp-idf installation and run:\n\n```bash\n# activate esp-idf environment\nsource ./export.sh # or . ./export.fish, if you use fish shell\n# remove old version of the component manager\npython -m pip uninstall -y idf-component-manager\n# install the development version (from the main branch)\npython -m pip install git+https://github.com/espressif/idf-component-manager.git@main\n```\n\n**on windows:**\n\nrun `esp-idf powershell environment` or `esp-idf command prompt (cmd.exe)` from the start menu and run the following command:\n\n```powershell\n# remove old version of the component manager\npython -m pip uninstall -y idf-component-manager\n# install the development version (from the main branch)\npython -m pip install git+https://github.com/espressif/idf-component-manager.git@main\n```\n\n## resources\n\n- the component manager [documentation](https://docs.espressif.com/projects/idf-component-manager/en/latest/)\n- the python package index project page https://pypi.org/project/idf-component-manager/\n- the component manager section in the [esp-idf programming guide](https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-guides/tools/idf-component-manager.html)\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache license 2.0",
  "name": "idf-component-manager",
  "package_url": "https://pypi.org/project/idf-component-manager/",
  "project_url": "https://pypi.org/project/idf-component-manager/",
  "project_urls": {
    "Homepage": "https://github.com/espressif/idf-component-manager"
  },
  "release_url": "https://pypi.org/project/idf-component-manager/1.4.1/",
  "requires_dist": [
    "packaging",
    "requests <3",
    "urllib3 <2",
    "requests-file",
    "requests-toolbelt",
    "schema",
    "six",
    "tqdm <5",
    "pyparsing",
    "click <8.0 ; python_version < \"3\"",
    "pathlib ; python_version < \"3.4\"",
    "cachecontrol[filecache] <=0.12.6 ; python_version < \"3.6\"",
    "cffi <1.15 ; python_version < \"3.6\"",
    "contextlib2 <=0.6.0 ; python_version < \"3.6\"",
    "brotli <=1.0.9 ; python_version == \"2.7.*\"",
    "colorama ; python_version == \"2.7.*\"",
    "pyyaml <=5.2 ; python_version == \"2.7.*\"",
    "click ==7.0 ; python_version == \"3.4.*\"",
    "pyyaml <=5.2 ; python_version == \"3.4.*\"",
    "click <8.0.0 ; python_version == \"3.5.*\"",
    "click <8.1.0 ; python_version == \"3.6.*\"",
    "colorama ; python_version >= \"3.5\"",
    "pyyaml >5.2 ; python_version >= \"3.5\"",
    "cachecontrol[filecache] >0.12.6 ; python_version >= \"3.6\"",
    "contextlib2 >0.6.0 ; python_version >= \"3.6\"",
    "click ; python_version >= \"3.7\""
  ],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
  "summary": "the component manager for esp-idf",
  "version": "1.4.1",
  "releases": [],
  "developers": [
    "sergei.silnov@espressif.com",
    "sergei_silnov"
  ],
  "kwds": "idf_component_manager idf_component idf_component_overwrite_managed_components idf_component_cache_path idf_version",
  "license_kwds": "apache license 2.0",
  "libtype": "pypi",
  "id": "pypi_idf_component_manager",
  "homepage": "https://github.com/espressif/idf-component-manager",
  "release_count": 26,
  "dependency_ids": [
    "pypi_brotli",
    "pypi_cachecontrol",
    "pypi_cffi",
    "pypi_click",
    "pypi_colorama",
    "pypi_contextlib2",
    "pypi_packaging",
    "pypi_pathlib",
    "pypi_pyparsing",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_requests_file",
    "pypi_requests_toolbelt",
    "pypi_schema",
    "pypi_six",
    "pypi_tqdm",
    "pypi_urllib3"
  ]
}
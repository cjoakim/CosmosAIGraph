{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "topic :: software development :: user interfaces",
    "topic :: utilities"
  ],
  "description": "[![build status](https://travis-ci.org/alejandroautalan/pygubu.svg?branch=master)](https://travis-ci.org/alejandroautalan/pygubu)\n\n[leer en espa\u00f1ol](leeme.md)\n\nwelcome to pygubu!\n==================\n\n`pygubu` is a [rad tool](https://en.wikipedia.org/wiki/rapid_application_development) to enable _quick_ and _easy development of user interfaces_ for the python's `tkinter` module.\n\nthe user interfaces designed are saved as [xml](https://en.wikipedia.org/wiki/xml) files, and, by using the _pygubu builder_, these can be loaded by applications dynamically as needed.\n\npygubu is inspired by [glade](https://glade.gnome.org).\n\ninstallation\n============\n\nthe latest version of pygubu requires python >= 3.6\n\nyou can install pygubu using pip:\n\n```\npip install pygubu\n```\n\nusage\n=====\n\nsince version 0.10 the project was splitted in two main modules:\n\n- the **pygubu core** (this project), that load and build user interfaces defined in xml.\n- the **interface editor** [pygubu-designer](https://github.com/alejandroautalan/pygubu-designer), that helps you create the xml definition graphically.\n\nstart creating your tkinter application xml ui definition using the pygubu-designer editor.\n\nthe following is a ui definition example called [helloworld.ui](https://github.com/alejandroautalan/pygubu-designer/blob/master/examples/helloworld/helloworld.ui):\n\n\n```xml\n<?xml version='1.0' encoding='utf-8'?>\n<interface version=\"1.2\">\n  <object class=\"tk.toplevel\" id=\"mainwindow\">\n    <property name=\"height\">200</property>\n    <property name=\"resizable\">both</property>\n    <property name=\"title\" translatable=\"yes\">hello world app</property>\n    <property name=\"width\">200</property>\n    <child>\n      <object class=\"ttk.frame\" id=\"mainframe\">\n        <property name=\"height\">200</property>\n        <property name=\"padding\">20</property>\n        <property name=\"width\">200</property>\n        <layout manager=\"pack\">\n          <property name=\"expand\">true</property>\n          <property name=\"side\">top</property>\n        </layout>\n        <child>\n          <object class=\"ttk.label\" id=\"label1\">\n            <property name=\"anchor\">center</property>\n            <property name=\"font\">helvetica 26</property>\n            <property name=\"foreground\">#0000b8</property>\n            <property name=\"text\" translatable=\"yes\">hello world !</property>\n            <layout manager=\"pack\">\n              <property name=\"side\">top</property>\n            </layout>\n          </object>\n        </child>\n      </object>\n    </child>\n  </object>\n</interface>\n```\n\nthen, you should create your _application script_ as shown below ([helloworld.py](https://github.com/alejandroautalan/pygubu-designer/blob/master/examples/helloworld/helloworld.py)):\n\n```python\n# helloworld.py\nimport pathlib\nimport tkinter as tk\nimport tkinter.ttk as ttk\nimport pygubu\n\nproject_path = pathlib.path(__file__).parent\nproject_ui = project_path / \"helloworld.ui\"\n\n\nclass helloworldapp:\n    def __init__(self, master=none):\n        # 1: create a builder and setup resources path (if you have images)\n        self.builder = builder = pygubu.builder()\n        builder.add_resource_path(project_path)\n\n        # 2: load an ui file\n        builder.add_from_file(project_ui)\n\n        # 3: create the mainwindow\n        self.mainwindow = builder.get_object('mainwindow', master)\n\n        # 4: connect callbacks\n        builder.connect_callbacks(self)\n\n    def run(self):\n        self.mainwindow.mainloop()\n\n\nif __name__ == '__main__':\n    app = helloworldapp()\n    app.run()\n\n```\n\nnote that instead of `helloworld.ui`, you should insert the _filename_ (or full path) of your ui definition:\n\n```python\nproject_ui = project_path / \"helloworld.ui\"\n```\n\nnote also that instead of 'mainwindow', you should have the name of your _main_widget_ (the parent of all widgets) in the following line:\n\n```python\nself.mainwindow = builder.get_object('_your_main_widget_')\n```\n\ndocumentation\n=============\n\nvisit the pygubu [wiki](https://github.com/alejandroautalan/pygubu/wiki) for more documentation.\n\n\nthe following are some good tkinter (and tk) references:\n\n- [tkdocs](http://www.tkdocs.com)\n- [graphical user interfaces with tk](https://docs.python.org/3/library/tk.html)\n- [tkinter 8.5 reference: a gui for python](https://tkdocs.com/shipman)\n- [an introduction to tkinter](http://effbot.org/tkinterbook) [(archive)](http://web.archive.org/web/20200504141939/http://www.effbot.org/tkinterbook)\n- [tcl/tk 8.5 manual](http://www.tcl.tk/man/tcl8.5/)\n\n\nyou can also see the [examples](https://github.com/alejandroautalan/pygubu-designer/tree/master/examples) directory or watch [this introductory video tutorial](http://youtu.be/wuzv9p8gedg).\n\n\nhistory\n=======\n\nsee the list of changes [here](history.md).\n",
  "docs_url": null,
  "keywords": "gui,tkinter,designer",
  "license": "mit",
  "name": "pygubu",
  "package_url": "https://pypi.org/project/pygubu/",
  "project_url": "https://pypi.org/project/pygubu/",
  "project_urls": {
    "Documentation": "https://github.com/alejandroautalan/pygubu#readme",
    "Issues": "https://github.com/alejandroautalan/pygubu/issues",
    "Source": "https://github.com/alejandroautalan/pygubu"
  },
  "release_url": "https://pypi.org/project/pygubu/0.31/",
  "requires_dist": [
    "dataclasses ; python_version < \"3.7\"",
    "importlib-resources ; python_version < \"3.9\"",
    "AwesomeTkinter ; extra == 'all'",
    "tkintertable ; extra == 'all'",
    "tksheet ; extra == 'all'",
    "ttkwidgets ; extra == 'all'",
    "tkinterweb ; extra == 'all'",
    "tkcalendar ; extra == 'all'",
    "customtkinter ; extra == 'all'",
    "tkintermapview ; extra == 'all'",
    "AwesomeTkinter ; extra == 'awesometkinter'",
    "customtkinter (>=5.0.3) ; extra == 'customtkinter'",
    "tkcalendar ; extra == 'tkcalendar'",
    "tkintermapview ; extra == 'tkintermapview'",
    "tkintertable ; extra == 'tkintertable'",
    "tkinterweb ; extra == 'tkinterweb'",
    "tksheet ; extra == 'tksheet'",
    "ttkwidgets ; extra == 'ttkwidgets'"
  ],
  "requires_python": ">=3.6",
  "summary": "a simple gui builder for the python tkinter module",
  "version": "0.31",
  "releases": [],
  "developers": [
    "alejandroautalan@gmail.com"
  ],
  "kwds": "tkinter tkinterbook _pygubu pygubu _main_widget_",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pygubu",
  "homepage": "",
  "release_count": 67,
  "dependency_ids": [
    "pypi_awesometkinter",
    "pypi_customtkinter",
    "pypi_dataclasses",
    "pypi_importlib_resources",
    "pypi_tkcalendar",
    "pypi_tkintermapview",
    "pypi_tkintertable",
    "pypi_tkinterweb",
    "pypi_tksheet",
    "pypi_ttkwidgets"
  ]
}
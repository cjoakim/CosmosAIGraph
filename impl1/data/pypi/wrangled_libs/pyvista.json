{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: posix",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: information analysis"
  ],
  "description": "#######\npyvista\n#######\n\n.. image:: https://github.com/pyvista/pyvista/raw/main/doc/source/_static/pyvista_banner_small.png\n   :target: https://docs.pyvista.org/examples/index.html\n   :alt: pyvista\n\n\n.. |zenodo| image:: https://zenodo.org/badge/doi/10.5281/zenodo.8415866.svg\n   :target: https://zenodo.org/records/8415866\n\n.. |joss| image:: http://joss.theoj.org/papers/10.21105/joss.01450/status.svg\n   :target: https://doi.org/10.21105/joss.01450\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pyvista.svg?logo=python&logocolor=white\n   :target: https://pypi.org/project/pyvista/\n\n.. |conda| image:: https://img.shields.io/conda/vn/conda-forge/pyvista.svg?logo=conda-forge&logocolor=white\n   :target: https://anaconda.org/conda-forge/pyvista\n\n.. |gh-ci| image:: https://github.com/pyvista/pyvista/actions/workflows/testing-and-deployment.yml/badge.svg\n   :target: https://github.com/pyvista/pyvista/actions/workflows/testing-and-deployment.yml\n\n.. |codecov| image:: https://codecov.io/gh/pyvista/pyvista/branch/main/graph/badge.svg\n   :target: https://app.codecov.io/gh/pyvista/pyvista\n\n.. |codacy| image:: https://app.codacy.com/project/badge/grade/779ac6aed37548839384acfc0c1aab44\n   :target: https://app.codacy.com/gh/pyvista/pyvista/dashboard\n\n.. |mit| image:: https://img.shields.io/badge/license-mit-yellow.svg\n   :target: https://opensource.org/license/mit/\n\n.. |slack| image:: https://img.shields.io/badge/slack-pyvista-green.svg?logo=slack\n   :target: https://communityinviter.com/apps/pyvista/pyvista\n\n.. |pypiact| image:: https://img.shields.io/pypi/dm/pyvista.svg?label=pypi%20downloads\n   :target: https://pypi.org/project/pyvista/\n\n.. |condaact| image:: https://img.shields.io/conda/dn/conda-forge/pyvista.svg?label=conda%20downloads\n   :target: https://anaconda.org/conda-forge/pyvista\n\n.. |discuss| image:: https://img.shields.io/badge/github-discussions-green?logo=github\n   :target: https://github.com/pyvista/pyvista/discussions\n\n.. |isort| image:: https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat\n  :target: https://timothycrosley.github.io/isort\n  :alt: isort\n\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg?style=flat\n  :target: https://github.com/psf/black\n  :alt: black\n\n.. |python| image:: https://img.shields.io/badge/python-3.8+-blue.svg\n   :target: https://www.python.org/downloads/\n\n.. |numfocus affiliated| image:: https://img.shields.io/badge/affiliated-numfocus-orange.svg?style=flat&colora=e1523d&colorb=007d8a\n   :target: https://numfocus.org/sponsored-projects/affiliated-projects\n\n.. |pre-commit.ci status| image:: https://results.pre-commit.ci/badge/github/pyvista/pyvista/main.svg\n   :target: https://results.pre-commit.ci/latest/github/pyvista/pyvista/main\n\n.. |ruff| image:: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json\n   :target: https://github.com/astral-sh/ruff\n   :alt: ruff\n\n+----------------------+------------------------+-------------+\n| deployment           | |pypi|                 | |conda|     |\n+----------------------+------------------------+-------------+\n| build status         | |gh-ci|                | |python|    |\n|                      +------------------------+-------------+\n|                      | |pre-commit.ci status| |             |\n+----------------------+------------------------+-------------+\n| metrics              | |codacy|               | |codecov|   |\n+----------------------+------------------------+-------------+\n| activity             | |pypiact|              | |condaact|  |\n+----------------------+------------------------+-------------+\n| citation             | |joss|                 | |zenodo|    |\n+----------------------+------------------------+-------------+\n| license              | |mit|                  |             |\n+----------------------+------------------------+-------------+\n| community            | |slack|                | |discuss|   |\n+----------------------+------------------------+-------------+\n| formatter            | |black|                | |isort|     |\n+----------------------+------------------------+-------------+\n| linter               | |ruff|                               |\n+----------------------+------------------------+-------------+\n| affiliated           | |numfocus affiliated|                |\n+----------------------+------------------------+-------------+\n\n\n    3d plotting and mesh analysis through a streamlined interface for the visualization toolkit (vtk)\n\npyvista is:\n\n* *pythonic vtk*: a high-level api to the `visualization toolkit`_ (vtk)\n* mesh data structures and filtering methods for spatial datasets\n* 3d plotting made simple and built for large/complex data geometries\n\n.. _visualization toolkit: https://vtk.org\n\npyvista is a helper module for the visualization toolkit (vtk) that wraps the vtk library\nthrough numpy and direct array access through a variety of methods and classes.\nthis package provides a pythonic, well-documented interface exposing\nvtk's powerful visualization backend to facilitate rapid prototyping, analysis,\nand visual integration of spatially referenced datasets.\n\nthis module can be used for scientific plotting for presentations and research\npapers as well as a supporting module for other mesh 3d rendering dependent\npython modules; see connections for a list of projects that leverage\npyvista.\n\n\n.. |tweet| image:: https://img.shields.io/twitter/url.svg?style=social&url=http%3a%2f%2fshields.io\n   :target: https://twitter.com/intent/tweet?text=check%20out%20this%20project%20for%203d%20visualization%20in%20python&url=https://github.com/pyvista/pyvista&hashtags=3d,visualization,python,vtk,mesh,plotting,pyvista\n\nshare this project on x: |tweet|\n\n\npyvista is a numfocus affiliated project\n\n.. image:: https://raw.githubusercontent.com/numfocus/templates/master/images/numfocus-logo.png\n   :target: https://numfocus.org/sponsored-projects/affiliated-projects\n   :alt: numfocus affiliated projects\n   :height: 60px\n\n\nhighlights\n==========\n\n.. |binder| image:: https://static.mybinder.org/badge_logo.svg\n   :target: https://mybinder.org/v2/gh/pyvista/pyvista-examples/master\n   :alt: launch on binder\n\nhead over to the `quick examples`_ page in the docs to explore our gallery of\nexamples showcasing what pyvista can do. want to test-drive pyvista?\nall of the examples from the gallery are live on mybinder for you to test\ndrive without installing anything locally: |binder|\n\n.. _quick examples: http://docs.pyvista.org/examples/index.html\n\n\noverview of features\n--------------------\n\n* extensive gallery of examples (see `quick examples`_)\n* interactive plotting in jupyter notebooks with server-side and client-side\n  rendering with `trame`_.\n* filtering/plotting tools built for interactivity (see `widgets`_)\n* direct access to mesh analysis and transformation routines (see filters_)\n* intuitive plotting routines with ``matplotlib`` similar syntax (see plotting_)\n* import meshes from many common formats (use ``pyvista.read()``). support for all formats handled by `meshio`_ is built-in.\n* export meshes as vtk, stl, obj, or ply (``mesh.save()``) file types or any formats supported by meshio_ (``pyvista.save_meshio()``)\n\n.. _trame: https://github.com/kitware/trame\n.. _widgets: https://docs.pyvista.org/api/plotting/index.html#widget-api\n.. _filters: https://docs.pyvista.org/api/core/filters.html\n.. _plotting: https://docs.pyvista.org/api/plotting/index.html\n.. _meshio: https://github.com/nschloe/meshio\n\n\ndocumentation\n=============\n\nrefer to the `documentation <http://docs.pyvista.org/>`_ for detailed\ninstallation and usage details.\n\nfor general questions about the project, its applications, or about software\nusage, please create a discussion in `pyvista/discussions`_\nwhere the community can collectively address your questions. you are also\nwelcome to join us on slack_.\n\n.. _pyvista/discussions: https://github.com/pyvista/pyvista/discussions\n.. _slack: https://communityinviter.com/apps/pyvista/pyvista\n\n\ninstallation\n============\n\npyvista can be installed from `pypi <https://pypi.org/project/pyvista/>`_\nusing ``pip`` on python >= 3.8::\n\n    pip install pyvista\n\nyou can also visit `pypi <https://pypi.org/project/pyvista/>`_,\n`anaconda <https://anaconda.org/conda-forge/pyvista>`_, or\n`github <https://github.com/pyvista/pyvista>`_ to download the source.\n\nsee the `installation <http://docs.pyvista.org/getting-started/installation.html#install-ref.>`_\nfor more details regarding optional dependencies or if the installation through pip doesn't work out.\n\n\nconnections\n===========\n\npyvista is a powerful tool that researchers can harness to create compelling,\nintegrated visualizations of large datasets in an intuitive, pythonic manner.\n\nlearn more about how pyvista is used across science and engineering disciplines\nby a diverse community of users on our `connections page`_.\n\n.. _connections page: https://docs.pyvista.org/getting-started/connections.html\n\n\nauthors\n=======\n\n.. |contrib.rocks| image:: https://contrib.rocks/image?repo=pyvista/pyvista\n   :target: https://github.com/pyvista/pyvista/graphs/contributors\n   :alt: contrib.rocks\n\nplease take a look at the `contributors page`_ and the active `list of authors`_\nto learn more about the developers of pyvista.\n\n|contrib.rocks|\n\nmade with `contrib rocks`_.\n\n.. _contributors page: https://github.com/pyvista/pyvista/graphs/contributors/\n.. _list of authors: https://docs.pyvista.org/getting-started/authors.html#authors\n.. _contrib rocks: https://contrib.rocks\n\n\ncontributing\n============\n\n.. |contributor covenant| image:: https://img.shields.io/badge/contributor%20covenant-2.1-4baaaa.svg\n   :target: code_of_conduct.md\n\n.. |codetriage| image:: https://www.codetriage.com/pyvista/pyvista/badges/users.svg\n   :target: https://www.codetriage.com/pyvista/pyvista\n   :alt: code triage\n\n.. |open in github codespaces| image:: https://github.com/codespaces/badge.svg\n   :target: https://codespaces.new/pyvista/pyvista\n   :alt: open in github codespaces\n\n|contributor covenant|\n|codetriage|\n|open in github codespaces|\n\nwe absolutely welcome contributions and we hope that our `contributing guide`_\nwill facilitate your ability to make pyvista better. pyvista is mostly\nmaintained on a volunteer basis and thus we need to foster a community that can\nsupport user questions and develop new features to make this software a useful\ntool for all users while encouraging every member of the community to share\ntheir ideas. to learn more about contributing to pyvista, please see the\n`contributing guide`_ and our `code of conduct`_.\n\n.. _contributing guide: https://github.com/pyvista/pyvista/blob/main/contributing.rst\n.. _code of conduct: https://github.com/pyvista/pyvista/blob/main/code_of_conduct.md\n\n\nciting pyvista\n==============\n\nthere is a `paper about pyvista <https://doi.org/10.21105/joss.01450>`_.\n\nif you are using pyvista in your scientific research, please help our scientific\nvisibility by citing our work.\n\n\n    sullivan and kaszynski, (2019). pyvista: 3d plotting and mesh analysis through a streamlined interface for the visualization toolkit (vtk). journal of open source software, 4(37), 1450, https://doi.org/10.21105/joss.01450\n\n\nbibtex:\n\n.. code::\n\n    @article{sullivan2019pyvista,\n      doi = {10.21105/joss.01450},\n      url = {https://doi.org/10.21105/joss.01450},\n      year = {2019},\n      month = {may},\n      publisher = {the open journal},\n      volume = {4},\n      number = {37},\n      pages = {1450},\n      author = {bane sullivan and alexander kaszynski},\n      title = {{pyvista}: {3d} plotting and mesh analysis through a streamlined interface for the {visualization toolkit} ({vtk})},\n      journal = {journal of open source software}\n    }\n\nprofessional support\n====================\n\nwhile pyvista is an open source project with a big community, you might be looking for professional support.\nthis section aims to list companies with vtk/pyvista expertise who can help you with your software project.\n\n+---------------+-----------------------------------------+\n| company name  | kitware inc.                            |\n+---------------+-----------------------------------------+\n| description   | kitware is dedicated to build solutions |\n|               | for our customers based on our          |\n|               | well-established open source platforms. |\n+---------------+-----------------------------------------+\n| expertise     | cmake, vtk, pyvista, paraview, trame    |\n+---------------+-----------------------------------------+\n| contact       | https://www.kitware.com/contact/        |\n+---------------+-----------------------------------------+\n",
  "docs_url": null,
  "keywords": "vtk,numpy,plotting,mesh",
  "license": "mit",
  "name": "pyvista",
  "package_url": "https://pypi.org/project/pyvista/",
  "project_url": "https://pypi.org/project/pyvista/",
  "project_urls": {
    "Bug Tracker": "https://github.com/pyvista/pyvista/issues",
    "Documentation": "https://docs.pyvista.org/",
    "Source Code": "https://github.com/pyvista/pyvista"
  },
  "release_url": "https://pypi.org/project/pyvista/0.43.1/",
  "requires_dist": [
    "matplotlib >=3.0.1",
    "numpy >=1.21.0",
    "pillow",
    "pooch",
    "scooby >=0.5.1",
    "vtk",
    "pyvista[colormaps,io,jupyter] ; extra == 'all'",
    "cmocean ; extra == 'colormaps'",
    "colorcet ; extra == 'colormaps'",
    "imageio ; extra == 'io'",
    "meshio >=5.2 ; extra == 'io'",
    "ipywidgets ; extra == 'jupyter'",
    "jupyter-server-proxy ; extra == 'jupyter'",
    "nest-asyncio ; extra == 'jupyter'",
    "trame >=2.5.2 ; extra == 'jupyter'",
    "trame-client >=2.12.7 ; extra == 'jupyter'",
    "trame-server >=2.11.7 ; extra == 'jupyter'",
    "trame-vtk >=2.5.8 ; extra == 'jupyter'",
    "trame-vuetify >=2.3.1 ; extra == 'jupyter'"
  ],
  "requires_python": ">=3.8",
  "summary": "easier pythonic interface to vtk",
  "version": "0.43.1",
  "releases": [],
  "developers": [
    "info@pyvista.org"
  ],
  "kwds": "pyvista_banner_small pyvista _pyvista matplotlib plotting_",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_pyvista",
  "homepage": "",
  "release_count": 83,
  "dependency_ids": [
    "pypi_cmocean",
    "pypi_colorcet",
    "pypi_imageio",
    "pypi_ipywidgets",
    "pypi_jupyter_server_proxy",
    "pypi_matplotlib",
    "pypi_meshio",
    "pypi_nest_asyncio",
    "pypi_numpy",
    "pypi_pillow",
    "pypi_pooch",
    "pypi_pyvista",
    "pypi_scooby",
    "pypi_trame",
    "pypi_trame_client",
    "pypi_trame_server",
    "pypi_trame_vtk",
    "pypi_trame_vuetify",
    "pypi_vtk"
  ]
}
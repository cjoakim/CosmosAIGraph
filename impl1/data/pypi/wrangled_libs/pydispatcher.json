{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 3",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "# pydispatcher multi-producer multi-consumer observables\n\npydispatcher provides the python programmer with a multiple-producer-multiple-consumer signal-registration and\nrouting infrastructure for use in multiple contexts. the mechanism\nof pydispatcher started life as a highly rated [recipe](http://aspn.activestate.com/aspn/cookbook/python/recipe/87056)\nin the [python cookbook](http://aspn.activestate.com/aspn/python/cookbook/). the [project](https://github.com/mcfletch/pydispatcher) aims\nto include various enhancements to the recipe developed during use in\nvarious applications. it is primarily maintained by [mike fletcher](http://www.vrplumber.com). a derivative\nof the project provides the django web framework's \"signal\" system.\n\n## installation\n\npydispatcher is available on pypi via standard pip:\n```\npip install pydispatcher\n```\n[![latest pypi version](https://img.shields.io/pypi/v/pydispatcher.svg)](https://pypi.python.org/pypi/pydispatcher)\n[![latest pypi version](https://img.shields.io/pypi/dm/pydispatcher.svg)](https://pypi.python.org/pypi/pydispatcher)\n\n\n## usage\n\n[documentation](https://mcfletch.github.io/pydispatcher/) is available\nfor detailed usage, but the basic idea is:\n\n```\nfrom pydispatch import dispatcher\n\nmetakey = \"moo\"\nmynode = object()\nevent = {\"sample\": \"event\"}\n\n\ndef callback(event=none):\n    \"\"\"handle signal being sent\"\"\"\n    print(\"signal received\", event)\n\n\ndispatcher.connect(callback, sender=mynode, signal=metakey)\ndispatcher.send(metakey, mynode, event=event)\n```\n\n",
  "docs_url": null,
  "keywords": "dispatcher,dispatch,pydispatch,event,signal,sender,receiver,propagate,multi-consumer,multi-producer,saferef,robustapply,apply",
  "license": "bsd",
  "name": "pydispatcher",
  "package_url": "https://pypi.org/project/PyDispatcher/",
  "project_url": "https://pypi.org/project/PyDispatcher/",
  "project_urls": {
    "Download": "https://pypi.org/project/pydispatcher/",
    "Homepage": "https://github.com/mcfletch/pydispatcher"
  },
  "release_url": "https://pypi.org/project/PyDispatcher/2.0.7/",
  "requires_dist": [
    "tox ; extra == 'dev'"
  ],
  "requires_python": "",
  "summary": "multi-producer multi-consumer in-memory signal dispatch system",
  "version": "2.0.7",
  "releases": [],
  "developers": [
    "mcfletch@vrplumber.com",
    "mike_c",
    "patrick_k"
  ],
  "kwds": "pydispatcher pydispatch django pip python",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_pydispatcher",
  "homepage": "https://github.com/mcfletch/pydispatcher",
  "release_count": 11,
  "dependency_ids": [
    "pypi_tox"
  ]
}
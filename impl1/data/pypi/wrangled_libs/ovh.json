{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: software development :: libraries :: python modules",
    "topic :: system :: archiving :: packaging"
  ],
  "description": "\"official module to perform http requests to the ovhcloud apis\"\n.. image:: https://github.com/ovh/python-ovh/raw/master/docs/img/logo.png\n           :alt: python & ovh apis\n           :target: https://pypi.python.org/pypi/ovh\n\nlightweight wrapper around ovhcloud's apis. handles all the hard work including\ncredential creation and requests signing.\n\n.. image:: https://img.shields.io/pypi/v/ovh.svg\n           :alt: pypi version\n           :target: https://pypi.python.org/pypi/ovh\n.. image:: https://img.shields.io/pypi/status/ovh.svg\n           :alt: pypi repository status\n           :target: https://pypi.python.org/pypi/ovh\n.. image:: https://img.shields.io/pypi/pyversions/ovh.svg\n           :alt: pypi supported python versions\n           :target: https://pypi.python.org/pypi/ovh\n.. image:: https://img.shields.io/pypi/wheel/ovh.svg\n           :alt: pypi wheel status\n           :target: https://pypi.python.org/pypi/ovh\n.. image:: https://github.com/ovh/python-ovh/actions/workflows/test.yaml/badge.svg?branch=master\n           :alt: build status\n           :target: https://github.com/ovh/python-ovh/actions/workflows/test.yaml\n.. image:: https://coveralls.io/repos/github/ovh/python-ovh/badge.svg\n           :alt: coverage status\n           :target: https://coveralls.io/github/ovh/python-ovh\n\n.. code:: python\n\n    import ovh\n\n    # instantiate. visit https://api.ovh.com/createtoken/?get=/me\n    # to get your credentials\n    client = ovh.client(\n        endpoint='ovh-eu',\n        application_key='<application key>',\n        application_secret='<application secret>',\n        consumer_key='<consumer key>',\n    )\n\n    # print nice welcome message\n    print(\"welcome\", client.get('/me')['firstname'])\n\ninstallation\n============\n\nthe python wrapper works with python 3.6+.\n\nthe easiest way to get the latest stable release is to grab it from `pypi\n<https://pypi.python.org/pypi/ovh>`_ using ``pip``.\n\n.. code:: bash\n\n    pip install ovh\n\nalternatively, you may get latest development version directly from git.\n\n.. code:: bash\n\n    pip install -e git+https://github.com/ovh/python-ovh.git#egg=ovh\n\npeople looking for python 2 compatibility should use 0.6.x version.\n\nexample usage\n=============\n\nuse the api on behalf of a user\n-------------------------------\n\n1. create an application\n************************\n\nto interact with the apis, the sdk needs to identify itself using an\n``application_key`` and an ``application_secret``. to get them, you need\nto register your application. depending the api you plan to use, visit:\n\n- `ovh europe <https://eu.api.ovh.com/createapp/>`_\n- `ovh us <https://api.us.ovhcloud.com/createapp/>`_\n- `ovh north-america <https://ca.api.ovh.com/createapp/>`_\n- `so you start europe <https://eu.api.soyoustart.com/createapp/>`_\n- `so you start north america <https://ca.api.soyoustart.com/createapp/>`_\n- `kimsufi europe <https://eu.api.kimsufi.com/createapp/>`_\n- `kimsufi north america <https://ca.api.kimsufi.com/createapp/>`_\n\nonce created, you will obtain an **application key (ak)** and an **application\nsecret (as)**.\n\n2. configure your application\n*****************************\n\nthe easiest and safest way to use your application's credentials is to create an\n``ovh.conf`` configuration file in application's working directory. here is how\nit looks like:\n\n.. code:: ini\n\n    [default]\n    ; general configuration: default endpoint\n    endpoint=ovh-eu\n\n    [ovh-eu]\n    ; configuration specific to 'ovh-eu' endpoint\n    application_key=my_app_key\n    application_secret=my_application_secret\n    ; uncomment following line when writing a script application\n    ; with a single consumer key.\n    ;consumer_key=my_consumer_key\n\ndepending on the api you want to use, you may set the ``endpoint`` to:\n\n* ``ovh-eu`` for ovh europe api\n* ``ovh-us`` for ovh us api\n* ``ovh-ca`` for ovh north-america api\n* ``soyoustart-eu`` for so you start europe api\n* ``soyoustart-ca`` for so you start north america api\n* ``kimsufi-eu`` for kimsufi europe api\n* ``kimsufi-ca`` for kimsufi north america api\n\nsee configuration_ for more information on available configuration mechanisms.\n\n.. note:: when using a versioning system, make sure to add ``ovh.conf`` to ignored\n          files. it contains confidential/security-sensitive information!\n\n3. authorize your application to access a customer account\n**********************************************************\n\nto allow your application to access a customer account using the api on your\nbehalf, you need a **consumer key (ck)**.\n\nhere is a sample code you can use to allow your application to access a\ncustomer's information:\n\n.. code:: python\n\n    import ovh\n\n    # create a client using configuration\n    client = ovh.client()\n\n    # request ro, /me api access\n    ck = client.new_consumer_key_request()\n    ck.add_rules(ovh.api_read_only, \"/me\")\n\n    # request token\n    validation = ck.request()\n\n    print(\"please visit %s to authenticate\" % validation['validationurl'])\n    input(\"and press enter to continue...\")\n\n    # print nice welcome message\n    print(\"welcome\", client.get('/me')['firstname'])\n    print(\"btw, your 'consumerkey' is '%s'\" % validation['consumerkey'])\n\nreturned ``consumerkey`` should then be kept to avoid re-authenticating your\nend-user on each use.\n\n.. note:: to request full and unlimited access to the api, you may use ``add_recursive_rules``:\n\n.. code:: python\n\n    # allow all get, post, put, delete on /* (full api)\n    ck.add_recursive_rules(ovh.api_read_write, '/')\n\ninstall a new mail redirection\n------------------------------\n\ne-mail redirections may be freely configured on domains and dns zones hosted by\novh to an arbitrary destination e-mail using api call\n``post /email/domain/{domain}/redirection``.\n\nfor this call, the api specifies that the source address shall be given under the\n``from`` keyword. which is a problem as this is also a reserved python keyword.\nin this case, simply prefix it with a '_', the wrapper will automatically detect\nit as being a prefixed reserved keyword and will substitute it. such aliasing\nis only supported with reserved keywords.\n\n.. code:: python\n\n    import ovh\n\n    domain = \"example.com\"\n    source = \"sales@example.com\"\n    destination = \"contact@example.com\"\n\n    # create a client\n    client = ovh.client()\n\n    # create a new alias\n    client.post('/email/domain/%s/redirection' % domain,\n            _from=source,\n            to=destination,\n            localcopy=false\n        )\n    print(\"installed new mail redirection from %s to %s\" % (source, destination))\n\ngrab bill list\n--------------\n\nlet's say you want to integrate ovh bills into your own billing system, you\ncould just script around the ``/me/bills`` endpoints and even get the details\nof each bill lines using ``/me/bill/{billid}/details/{billdetailid}``.\n\nthis example assumes an existing configuration_ with valid ``application_key``,\n``application_secret`` and ``consumer_key``.\n\n.. code:: python\n\n    import ovh\n\n    # create a client\n    client = ovh.client()\n\n    # grab bill list\n    bills = client.get('/me/bill')\n    for bill in bills:\n        details = client.get('/me/bill/%s' % bill)\n        print(\"%12s (%s): %10s --> %s\" % (\n            bill,\n            details['date'],\n            details['pricewithtax']['text'],\n            details['pdfurl'],\n        ))\n\nenable network burst in sbg1\n----------------------------\n\n'network burst' is a free service but is opt-in. what if you have, say, 10\nservers in ``sbg-1`` datacenter? you certainly don't want to activate it\nmanually for each servers. you could take advantage of a code like this.\n\nthis example assumes an existing configuration_ with valid ``application_key``,\n``application_secret`` and ``consumer_key``.\n\n.. code:: python\n\n    import ovh\n\n    # create a client\n    client = ovh.client()\n\n    # get list of all server names\n    servers = client.get('/dedicated/server/')\n\n    # find all servers in sbg-1 datacenter\n    for server in servers:\n        details = client.get('/dedicated/server/%s' % server)\n        if details['datacenter'] == 'sbg1':\n            # enable burst on server\n            client.put('/dedicated/server/%s/burst' % server, status='active')\n            print(\"enabled burst for %s server located in sbg-1\" % server)\n\nlist application authorized to access your account\n--------------------------------------------------\n\nthanks to the application key / consumer key mechanism, it is possible to\nfinely track applications having access to your data and revoke this access.\nthis examples lists validated applications. it could easily be adapted to\nmanage revocation too.\n\nthis example assumes an existing configuration_ with valid ``application_key``,\n``application_secret`` and ``consumer_key``.\n\n.. code:: python\n\n    import ovh\n    from tabulate import tabulate\n\n    # create a client\n    client = ovh.client()\n\n    credentials = client.get('/me/api/credential', status='validated')\n\n    # pretty print credentials status\n    table = []\n    for credential_id in credentials:\n        credential_method = '/me/api/credential/'+str(credential_id)\n        credential = client.get(credential_method)\n        application = client.get(credential_method+'/application')\n\n        table.append([\n            credential_id,\n            '[%s] %s' % (application['status'], application['name']),\n            application['description'],\n            credential['creation'],\n            credential['expiration'],\n            credential['lastuse'],\n        ])\n    print(tabulate(table, headers=['id', 'app name', 'description',\n                                   'token creation', 'token expiration', 'token last use']))\n\nbefore running this example, make sure you have the\n`tabulate <https://pypi.python.org/pypi/tabulate>`_ library installed. it's a\npretty cool library to pretty print tabular data in a clean and easy way.\n\n>>> pip install tabulate\n\n\nopen a kvm (remote screen) on a dedicated server\n------------------------------------------------\n\nrecent dedicated servers come with an ipmi interface. a lightweight control board embedded\non the server. using ipmi, it is possible to get a remote screen on a server. this is\nparticularly useful to tweak the bios or troubleshoot boot issues.\n\nhopefully, this can easily be automated using a simple script. it assumes java web start is\nfully installed on the machine and a consumer key allowed on the server exists.\n\n.. code:: python\n\n    import ovh\n    import sys\n    import time\n    import tempfile\n    import subprocess\n\n    # check arguments\n    if len(sys.argv) != 3:\n        print(\"usage: %s server_name allowed_ip_v4\" % sys.argv[0])\n        sys.exit(1)\n\n    server_name = sys.argv[1]\n    allowed_ip = sys.argv[2]\n\n    # create a client\n    client = ovh.client()\n\n    # create a kvm\n    client.post('/dedicated/server/'+server_name+'/features/ipmi/access', iptoallow=allowed_ip, ttl=15, type=\"kvmipjnlp\")\n\n    # open the kvm, when ready\n    while true:\n        try:\n            # use a named temfile and feed it to java web start\n            with tempfile.namedtemporaryfile() as f:\n                f.write(client.get('/dedicated/server/'+server_name+'/features/ipmi/access?type=kvmipjnlp')['value'])\n                f.flush()\n                subprocess.call([\"javaws\", f.name])\n            break\n        except:\n            time.sleep(1)\n\nrunning is only a simple command line:\n\n.. code:: bash\n\n    # basic\n    python open_kvm.py ns1234567.ip-42-42-42.eu $(curl ifconfig.ovh)\n\n    # use a specific consumer key\n    ovh_consumer_key=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa python open_kvm.py ns1234567.ip-42-42-42.eu $(curl -s ifconfig.ovh)\n\nconfiguration\n=============\n\nyou have 3 ways to provide configuration to the client:\n - write it directly in the application code\n - read environment variables or predefined configuration files\n - read it from a custom configuration file\n\nembed the configuration in the code\n-----------------------------------\n\nthe straightforward way to use ovh's api keys is to embed them directly in the\napplication code. while this is very convenient, it lacks of elegance and\nflexibility.\n\nexample usage:\n\n.. code:: python\n\n    client = ovh.client(\n        endpoint='ovh-eu',\n        application_key='<application key>',\n        application_secret='<application secret>',\n        consumer_key='<consumer key>',\n    )\n\nenvironment vars and predefined configuration files\n---------------------------------------------------\n\nalternatively it is suggested to use configuration files or environment\nvariables so that the same code may run seamlessly in multiple environments.\nproduction and development for instance.\n\nthis wrapper will first look for direct instantiation parameters then\n``ovh_endpoint``, ``ovh_application_key``, ``ovh_application_secret`` and\n``ovh_consumer_key`` environment variables. if either of these parameter is not\nprovided, it will look for a configuration file of the form:\n\n.. code:: ini\n\n    [default]\n    ; general configuration: default endpoint\n    endpoint=ovh-eu\n\n    [ovh-eu]\n    ; configuration specific to 'ovh-eu' endpoint\n    application_key=my_app_key\n    application_secret=my_application_secret\n    consumer_key=my_consumer_key\n\nthe client will successively attempt to locate this configuration file in\n\n1. current working directory: ``./ovh.conf``\n2. current user's home directory ``~/.ovh.conf``\n3. system wide configuration ``/etc/ovh.conf``\n\nthis lookup mechanism makes it easy to overload credentials for a specific\nproject or user.\n\nexample usage:\n\n.. code:: python\n\n    client = ovh.client()\n\nuse v1 and v2 api versions\n--------------------------\n\nwhen using ovhcloud apis (not so you start or kimsufi ones), you are given the\nopportunity to aim for two api versions. for the european api, for example:\n\n- the v1 is reachable through https://eu.api.ovh.com/v1\n- the v2 is reachable through https://eu.api.ovh.com/v2\n- the legacy url is https://eu.api.ovh.com/1.0\n\n calling ``client.get``, you can target the api version you want:\n\n.. code:: python\n\n    client = ovh.client(endpoint=\"ovh-eu\")\n\n    # call to https://eu.api.ovh.com/v1/xdsl/xdsl-yourservice\n    client.get(\"/v1/xdsl/xdsl-yourservice\")\n\n    # call to https://eu.api.ovh.com/v2/xdsl/xdsl-yourservice\n    client.get(\"/v2/xdsl/xdsl-yourservice\")\n\n    # legacy call to https://eu.api.ovh.com/1.0/xdsl/xdsl-yourservice\n    client.get(\"/xdsl/xdsl-yourservice\")\n\ncustom configuration file\n-------------------------\n\nyou can also specify a custom configuration file. with this method, you won't be able to inherit values from environment.\n\nexample usage:\n\n.. code:: python\n\n    client = ovh.client(config_file='/my/config.conf')\n\npassing parameters\n==================\n\nyou can call all the methods of the api with the necessary arguments.\n\nif an api needs an argument colliding with a python reserved keyword, it\ncan be prefixed with an underscore. for example, ``from`` argument of\n``post /email/domain/{domain}/redirection`` may be replaced by ``_from``.\n\nwith characters invalid in python argument name like a dot, you can:\n\n.. code:: python\n\n    import ovh\n\n    params = {}\n    params['date.from'] = '2014-01-01'\n    params['date.to'] = '2015-01-01'\n\n    # create a client\n    client = ovh.client()\n\n    # pass parameters using **\n    client.post('/me/bills', **params)\n\nadvanced usage\n==============\n\nun-authenticated calls\n----------------------\n\nif the user has not authenticated yet (ie, there is no valid consumer key), you\nmay force ``python-ovh`` to issue the call by passing ``_need_auth=true`` to\nthe high level ``get()``, ``post()``, ``put()`` and ``delete()`` helpers or\n``need_auth=true`` to the low level method ``client.call()`` and\n``client.raw_call()``.\n\nthis is needed when calling ``post /auth/credential`` and ``get /auth/time``\nwhich are used internally for authentication and can optionally be done for\nmost of the ``/order`` calls.\n\naccess the raw requests response objects\n----------------------------------------\n\nthe high level ``get()``, ``post()``, ``put()`` and ``delete()`` helpers as well\nas the lower level ``call()`` will returned a parsed json response or raise in\ncase of error.\n\nin some rare scenario, advanced setups, you may need to perform customer\nprocessing on the raw request response. it may be accessed via ``raw_call()``.\nthis is the lowest level call in ``python-ovh``. see the source for more\ninformation.\n\nhacking\n=======\n\nthis wrapper uses standard python tools, so you should feel at home with it.\nhere is a quick outline of what it may look like. a good practice is to run\nthis from a ``virtualenv``.\n\nget the sources\n---------------\n\n.. code:: bash\n\n    git clone https://github.com/ovh/python-ovh.git\n    cd python-ovh\n    python setup.py develop\n\nyou've developed a new cool feature? fixed an annoying bug? we'd be happy\nto hear from you!\n\nrun the tests\n-------------\n\nsimply run ``pytest``. it will automatically load its configuration from\n``setup.cfg`` and output full coverage status. since we all love quality, please\nnote that we do not accept contributions with test coverage under 100%.\n\n.. code:: bash\n\n    pip install -e .[dev]\n    pytest\n\nbuild the documentation\n-----------------------\n\ndocumentation is managed using the excellent ``sphinx`` system. for example, to\nbuild html documentation:\n\n.. code:: bash\n\n    cd python-ovh/docs\n    make html\n\nsupported apis\n==============\n\novh europe\n----------\n\n- **documentation**: https://eu.api.ovh.com/\n- **community support**: api-subscribe@ml.ovh.net\n- **console**: https://eu.api.ovh.com/console\n- **create application credentials**: https://eu.api.ovh.com/createapp/\n- **create script credentials** (all keys at once): https://eu.api.ovh.com/createtoken/\n\novh us\n----------\n\n- **documentation**: https://api.us.ovhcloud.com/\n- **console**: https://api.us.ovhcloud.com/console/\n- **create application credentials**: https://api.us.ovhcloud.com/createapp/\n- **create script credentials** (all keys at once): https://api.us.ovhcloud.com/createtoken/\n\novh north america\n-----------------\n\n- **documentation**: https://ca.api.ovh.com/\n- **community support**: api-subscribe@ml.ovh.net\n- **console**: https://ca.api.ovh.com/console\n- **create application credentials**: https://ca.api.ovh.com/createapp/\n- **create script credentials** (all keys at once): https://ca.api.ovh.com/createtoken/\n\nso you start europe\n-------------------\n\n- **documentation**: https://eu.api.soyoustart.com/\n- **community support**: api-subscribe@ml.ovh.net\n- **console**: https://eu.api.soyoustart.com/console/\n- **create application credentials**: https://eu.api.soyoustart.com/createapp/\n- **create script credentials** (all keys at once): https://eu.api.soyoustart.com/createtoken/\n\nso you start north america\n--------------------------\n\n- **documentation**: https://ca.api.soyoustart.com/\n- **community support**: api-subscribe@ml.ovh.net\n- **console**: https://ca.api.soyoustart.com/console/\n- **create application credentials**: https://ca.api.soyoustart.com/createapp/\n- **create script credentials** (all keys at once): https://ca.api.soyoustart.com/createtoken/\n\nkimsufi europe\n--------------\n\n- **documentation**: https://eu.api.kimsufi.com/\n- **community support**: api-subscribe@ml.ovh.net\n- **console**: https://eu.api.kimsufi.com/console/\n- **create application credentials**: https://eu.api.kimsufi.com/createapp/\n- **create script credentials** (all keys at once): https://eu.api.kimsufi.com/createtoken/\n\nkimsufi north america\n---------------------\n\n- **documentation**: https://ca.api.kimsufi.com/\n- **community support**: api-subscribe@ml.ovh.net\n- **console**: https://ca.api.kimsufi.com/console/\n- **create application credentials**: https://ca.api.kimsufi.com/createapp/\n- **create script credentials** (all keys at once): https://ca.api.kimsufi.com/createtoken/\n\nrelated links\n=============\n\n- **contribute**: https://github.com/ovh/python-ovh\n- **report bugs**: https://github.com/ovh/python-ovh/issues\n- **download**: http://pypi.python.org/pypi/ovh\n\nlicense\n=======\n\n3-clause bsd\n",
  "docs_url": null,
  "keywords": "ovh,sdk,rest,ovhcloud",
  "license": "bsd",
  "name": "ovh",
  "package_url": "https://pypi.org/project/ovh/",
  "project_url": "https://pypi.org/project/ovh/",
  "project_urls": {
    "Homepage": "https://api.ovh.com"
  },
  "release_url": "https://pypi.org/project/ovh/1.1.0/",
  "requires_dist": [
    "requests (>=2.11.0)",
    "Sphinx (==1.2.2) ; extra == 'dev'",
    "black ; extra == 'dev'",
    "coverage (~=7.2.2) ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "isort ; extra == 'dev'",
    "pytest (~=7.2.2) ; extra == 'dev'",
    "pytest-cov (==4.0.0) ; extra == 'dev'",
    "setuptools (>=30.3.0) ; extra == 'dev'",
    "wheel ; extra == 'dev'"
  ],
  "requires_python": "",
  "summary": "\"official module to perform http requests to the ovhcloud apis\"",
  "version": "1.1.0",
  "releases": [],
  "developers": [
    "api@ml.ovh.net",
    "ovhcloud_team"
  ],
  "kwds": "ovh_application_secret ovh_application_key ovhcloud ovh_endpoint ovh_consumer_key",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_ovh",
  "homepage": "https://api.ovh.com",
  "release_count": 20,
  "dependency_ids": [
    "pypi_black",
    "pypi_coverage",
    "pypi_flake8",
    "pypi_isort",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_requests",
    "pypi_setuptools",
    "pypi_sphinx",
    "pypi_wheel"
  ],
  "documentation_summary": "The HTML text provides detailed information about the \"ovh\" Python package version 1.1.0, released on April 7, 2023. This package is an official module for performing HTTP requests to OVHcloud APIs. It includes a lightweight wrapper that simplifies credential creation and request signing for interacting with OVHcloud's APIs. The package supports Python versions 3.6 and above, and it's licensed under the BSD License. The documentation covers installation instructions, example usage for various operations such as creating an application, configuring the application, authorizing access, and handling email redirections and bill lists. It also provides guidance on enabling network burst, listing authorized applications, opening a KVM on a dedicated server, and configuring the client through code, environment variables, or configuration files. Additionally, it mentions support for OVH APIs in Europe, the US, and North America, as well as So you Start and Kimsufi APIs.",
  "embedding": [
    -0.006300442852079868,
    -0.00597560778260231,
    0.0011301545891910791,
    -0.006117723416537046,
    0.012614420615136623,
    0.02923513762652874,
    0.022941462695598602,
    -0.033701617270708084,
    0.0019033292774111032,
    -0.030399128794670105,
    0.02636576257646084,
    -0.03833051398396492,
    -0.034378357231616974,
    0.011558706872165203,
    -0.01510482095181942,
    7.190355245256796e-05,
    0.026663528755307198,
    -0.03900725394487381,
    -0.008635193109512329,
    -0.016864342615008354,
    -0.00454768817871809,
    -0.003749135648831725,
    -0.020924778655171394,
    -0.0005160137079656124,
    -0.001854265690781176,
    -0.00528195034712553,
    0.0017984346486628056,
    -0.018881026655435562,
    0.01629588194191456,
    0.015294307842850685,
    0.01653950847685337,
    -0.003850646549835801,
    -0.02524237520992756,
    -0.002399040851742029,
    -0.004172097891569138,
    0.0032195872627198696,
    0.01954423077404499,
    -0.012045959942042828,
    0.025986788794398308,
    -0.01067217905074358,
    0.023117413744330406,
    0.020694687962532043,
    -0.00019667735614348203,
    0.01150456815958023,
    -0.013886690139770508,
    0.018393773585557938,
    0.008865284733474255,
    -0.05067423731088638,
    -0.0048657553270459175,
    0.038520000874996185,
    -0.0041517955251038074,
    0.018393773585557938,
    0.004896208643913269,
    0.004358201287686825,
    0.013859621249139309,
    -0.0018948700744658709,
    0.002045444445684552,
    0.0309675894677639,
    -0.006026363465934992,
    -0.02502581849694252,
    0.006381651386618614,
    -0.0031468376982957125,
    -0.0329165980219841,
    -0.013399438001215458,
    -0.005951921921223402,
    0.020654084160923958,
    -0.0017256852006539702,
    0.01653950847685337,
    -0.013697203248739243,
    -0.008594589307904243,
    0.03613787889480591,
    0.019354743883013725,
    -0.003975843545049429,
    0.010807526297867298,
    0.05200064927339554,
    -0.01832609996199608,
    -0.02509349398314953,
    -0.0011910611065104604,
    -0.009711208753287792,
    -0.027259059250354767,
    -0.0014566812897101045,
    -0.030263781547546387,
    -0.00648316228762269,
    0.053327057510614395,
    0.016566578298807144,
    0.014441616833209991,
    -0.024633310735225677,
    0.02766510285437107,
    -0.0033143307082355022,
    -0.007437364663928747,
    0.010611272417008877,
    0.006148176733404398,
    -0.0010523295495659113,
    0.019503626972436905,
    -0.02051873505115509,
    0.02383475750684738,
    -0.014116781763732433,
    0.024619774892926216,
    0.016796668991446495,
    -0.013061068020761013,
    -0.02533711865544319,
    0.027935797348618507,
    -0.004852220881730318,
    -0.020261574536561966,
    -0.0406043566763401,
    -0.0338369645178318,
    -0.010381180793046951,
    -0.02855839766561985,
    0.051215630024671555,
    -0.011944448575377464,
    0.005254880525171757,
    0.04785900190472603,
    -0.021100731566548347,
    -0.0066252779215574265,
    -0.008905889466404915,
    -0.008574286475777626,
    0.03749135881662369,
    0.014752916991710663,
    -0.020681152120232582,
    0.007505038753151894,
    -0.009230723604559898,
    0.022968532517552376,
    0.0014203066239133477,
    -0.02330690063536167,
    0.020640548318624496,
    -0.01624174229800701,
    -0.004141644574701786,
    -0.021547378972172737,
    0.017987729981541634,
    -0.014062642119824886,
    0.010171392001211643,
    -0.004334515426307917,
    -0.014536360278725624,
    -0.0181230790913105,
    -0.0035291954409331083,
    -0.0006670111906714737,
    -0.0010844747303053737,
    -0.00045172349200583994,
    -0.01423859503120184,
    -0.028071146458387375,
    0.0003529618261381984,
    0.02487693727016449,
    -0.0014803672675043344,
    0.013176114298403263,
    -0.030236711725592613,
    0.04111868143081665,
    0.004141644574701786,
    -0.004117958713322878,
    0.00014592190564144403,
    -0.007058390881866217,
    0.008696099743247032,
    -0.014441616833209991,
    -0.0034158416092395782,
    -0.004990952089428902,
    0.00038870214484632015,
    0.0031180763617157936,
    -0.015808630734682083,
    0.04883350804448128,
    0.005928236059844494,
    0.008087034337222576,
    -0.02013976126909256,
    0.04669501259922981,
    -0.03131949529051781,
    -0.017676429823040962,
    -0.011071454733610153,
    0.020126227289438248,
    0.007924617268145084,
    -0.032510556280612946,
    -0.015280772931873798,
    0.013013696298003197,
    0.01217454019933939,
    0.02337457612156868,
    -0.03470319136977196,
    -0.00037728215102106333,
    -0.007924617268145084,
    0.021168405190110207,
    0.016417695209383965,
    0.006229385267943144,
    -0.023848293349146843,
    0.006134641822427511,
    0.015267238952219486,
    0.026568785309791565,
    0.020464595407247543,
    0.025431862100958824,
    -0.012749768793582916,
    0.024687450379133224,
    0.00749827129766345,
    -0.027340266853570938,
    -0.015023612417280674,
    -0.002212937455624342,
    0.011985053308308125,
    0.01750047877430916,
    -0.004831918515264988,
    -0.022291792556643486,
    -0.5834034085273743,
    -0.010130787268280983,
    -0.018353169783949852,
    0.006743707228451967,
    -0.001251121750101447,
    0.019138187170028687,
    0.02539125829935074,
    0.008851749822497368,
    -0.0050620101392269135,
    0.04331131651997566,
    -0.042282670736312866,
    0.013216718100011349,
    -0.04336545243859291,
    -0.016810204833745956,
    0.0012181306956335902,
    -0.03364747762680054,
    -0.0047608609311282635,
    -0.038655348122119904,
    0.00019910938863176852,
    -0.01668839156627655,
    0.007484736852347851,
    0.03421593829989433,
    -0.037762053310871124,
    0.02058640867471695,
    -0.008175010792911053,
    0.010685713030397892,
    0.0036949964705854654,
    -0.005901166703552008,
    0.035894252359867096,
    0.017825312912464142,
    0.0006289446027949452,
    0.02675827220082283,
    0.010827829129993916,
    -0.017189178615808487,
    0.056629545986652374,
    0.001430457690730691,
    -0.013230253010988235,
    0.06334279477596283,
    0.019111117348074913,
    0.05259617790579796,
    -0.007173436693847179,
    -0.006232768762856722,
    0.013541553169488907,
    0.01856972649693489,
    0.016661321744322777,
    0.010387947782874107,
    0.010699247941374779,
    0.0013940829085186124,
    -0.00044284126488491893,
    0.0023584363516420126,
    0.011091756634414196,
    0.005078928545117378,
    0.004970650188624859,
    -0.02839598059654236,
    0.010475924238562584,
    -0.01856972649693489,
    -0.00010410153481643647,
    -0.009487885050475597,
    0.0008975255186669528,
    0.017256852239370346,
    -0.010056345723569393,
    0.021479705348610878,
    0.01044885441660881,
    -0.02809821628034115,
    -0.009332234971225262,
    0.006885822396725416,
    -0.0067301723174750805,
    -0.020559340715408325,
    0.005204125307500362,
    -0.02053227089345455,
    0.027326732873916626,
    0.005765818990767002,
    0.006774160545319319,
    -0.024254336953163147,
    0.023509923368692398,
    0.044312890619039536,
    0.02570255845785141,
    0.009447280317544937,
    -0.0011149280471727252,
    0.005806423258036375,
    0.0038946345448493958,
    -0.0013399438466876745,
    -0.009007399901747704,
    -0.036110807210206985,
    0.0377349816262722,
    0.0046593500301241875,
    -0.04945610836148262,
    -0.007505038753151894,
    0.01150456815958023,
    -0.01856972649693489,
    0.008851749822497368,
    0.026555249467492104,
    -0.01304076611995697,
    -0.02165565825998783,
    -0.005752284079790115,
    0.022873789072036743,
    -0.01653950847685337,
    0.003955541178584099,
    -0.031021729111671448,
    -0.017175642773509026,
    0.008357730694115162,
    0.006388418842107058,
    -0.02315801940858364,
    0.011396289803087711,
    0.03586718440055847,
    -0.004395421594381332,
    -0.00887205172330141,
    -0.014292733743786812,
    0.012546746991574764,
    -0.0159439779818058,
    -0.01510482095181942,
    -0.03792446851730347,
    -0.02388889715075493,
    0.015402586199343204,
    -0.02398364059627056,
    -0.02758389338850975,
    0.03007429465651512,
    0.0034885911736637354,
    0.033403851091861725,
    -0.0013179497327655554,
    0.008553984574973583,
    0.0002503935538697988,
    -0.007653921376913786,
    0.010658644139766693,
    0.00871640257537365,
    0.010354110971093178,
    -0.0017527547897771,
    -0.03334971144795418,
    -0.025540141388773918,
    0.004815000109374523,
    0.023875363171100616,
    0.0026392831932753325,
    0.010949641466140747,
    -0.01787945255637169,
    0.039115529507398605,
    0.013054301030933857,
    0.018975770100951195,
    -0.01797419600188732,
    0.00014274968998506665,
    -0.004368352238088846,
    0.0047642444260418415,
    0.006533917970955372,
    0.0046627335250377655,
    -0.025066424161195755,
    8.559694833820686e-05,
    -0.016201138496398926,
    0.015754491090774536,
    0.0019253232749179006,
    -0.008669030852615833,
    -0.004029982723295689,
    -0.0015429656486958265,
    -0.017771173268556595,
    -0.00011335383169353008,
    0.017148572951555252,
    0.0059823752380907536,
    -0.016485368832945824,
    0.009717976674437523,
    -0.017703499644994736,
    0.0002673120179679245,
    -0.008445706218481064,
    0.010029276832938194,
    0.00965030211955309,
    0.0007139599765650928,
    0.0062835244461894035,
    -0.031969163566827774,
    0.008175010792911053,
    -0.035434070974588394,
    0.02570255845785141,
    -0.0042127021588385105,
    -0.03654392063617706,
    0.004351433832198381,
    -0.0068350667133927345,
    -0.005424065515398979,
    0.010198460891842842,
    0.012445235624909401,
    0.006131257861852646,
    -0.015659747645258904,
    0.02088417485356331,
    -0.013176114298403263,
    0.003089314792305231,
    0.010117252357304096,
    0.024322010576725006,
    -0.030453268438577652,
    -0.021100731566548347,
    0.01586276851594448,
    -0.004943580366671085,
    0.004425874911248684,
    0.0406043566763401,
    -0.011132361367344856,
    -4.5045460865367204e-05,
    -0.012993394397199154,
    -0.007356156129390001,
    -0.0019726951140910387,
    0.03443249687552452,
    -0.002441337099298835,
    -5.604247417068109e-05,
    0.02616274170577526,
    0.006351198069751263,
    0.0014456843491643667,
    0.028531327843666077,
    0.01832609996199608,
    -0.010435319505631924,
    -0.008784076198935509,
    0.012215144000947475,
    -0.0055763316340744495,
    0.01609286107122898,
    0.020261574536561966,
    -0.007674223743379116,
    0.027529753744602203,
    -0.011694055050611496,
    0.01667485572397709,
    -0.013467111624777317,
    -0.017852382734417915,
    0.0003846839827019721,
    0.005031556822359562,
    -0.022197049111127853,
    -0.010739852674305439,
    0.017473408952355385,
    -0.02689361944794655,
    -0.011694055050611496,
    0.012614420615136623,
    0.012871581129729748,
    0.008019360713660717,
    0.002339826198294759,
    0.004442793317139149,
    0.010299972258508205,
    0.0027120327576994896,
    0.01228281855583191,
    0.006723404861986637,
    -0.027989936992526054,
    0.0001830368273658678,
    0.021019522100687027,
    -0.00209619989618659,
    -0.024037780240178108,
    0.046938639134168625,
    -0.0034750562626868486,
    0.027042502537369728,
    -0.005424065515398979,
    0.0022213966585695744,
    -0.02426787093281746,
    0.018150147050619125,
    0.02669059857726097,
    0.036408573389053345,
    -0.031373634934425354,
    0.025837905704975128,
    0.03367454558610916,
    -0.002541156020015478,
    0.010814294219017029,
    -0.04133523628115654,
    -0.01802833564579487,
    0.004689803346991539,
    0.016783135011792183,
    0.006432407069951296,
    0.003087623044848442,
    -0.002087740693241358,
    -0.008817913010716438,
    -0.01614699885249138,
    0.008905889466404915,
    0.057008519768714905,
    0.006956879980862141,
    0.008411869406700134,
    0.011227104812860489,
    0.02208876982331276,
    0.007538875564932823,
    0.042282670736312866,
    0.004902976099401712,
    -0.0368146188557148,
    -0.017703499644994736,
    0.0020911244209855795,
    -0.023658806458115578,
    -0.0007164977141655982,
    -0.03489267826080322,
    -0.013900225050747395,
    -0.0318879559636116,
    0.025756698101758957,
    -0.010550365783274174,
    0.015389051288366318,
    0.04856281355023384,
    -0.0020792814902961254,
    0.009900695644319057,
    -0.03713945299386978,
    -0.013967898674309254,
    0.02834184095263481,
    -3.94147755287122e-05,
    0.010726317763328552,
    -0.010618039406836033,
    0.0023432099260389805,
    0.0023347504902631044,
    -0.02398364059627056,
    0.04201197624206543,
    -0.00676400912925601,
    -0.012749768793582916,
    0.009108911268413067,
    -0.010530063882470131,
    -0.008763774298131466,
    -0.003087623044848442,
    0.02758389338850975,
    -0.01609286107122898,
    0.012567048892378807,
    0.01408971194177866,
    0.0023550528567284346,
    0.004128109663724899,
    -0.004057052079588175,
    0.016810204833745956,
    0.0416330024600029,
    0.02141203172504902,
    -0.021222544834017754,
    -0.009190119802951813,
    -0.022792579606175423,
    -0.030696894973516464,
    0.0034682888071984053,
    0.02817942388355732,
    -0.003216203534975648,
    0.0032720344606786966,
    0.013967898674309254,
    0.011734659783542156,
    -0.0006551682599820197,
    -0.016647785902023315,
    0.04206611588597298,
    0.002691730624064803,
    -0.0004364968335721642,
    -0.01827196031808853,
    -0.028450120240449905,
    -0.012526444159448147,
    0.03364747762680054,
    0.00529548479244113,
    -0.007823105901479721,
    0.018150147050619125,
    -0.033024877309799194,
    -0.028314772993326187,
    -0.026731202378869057,
    -0.020180365070700645,
    0.005867329891771078,
    -0.0037559031043201685,
    0.010008974000811577,
    0.031211216002702713,
    0.01842084340751171,
    0.019896134734153748,
    0.022183513268828392,
    -0.004087505396455526,
    -0.013819016516208649,
    0.021168405190110207,
    0.0011140820570290089,
    -0.008926191367208958,
    -0.002952275099232793,
    -0.002185867866501212,
    -0.005011254455894232,
    0.028233563527464867,
    0.04997042939066887,
    0.02863960713148117,
    0.028071146458387375,
    0.023469319567084312,
    0.011403056792914867,
    -0.007214040961116552,
    -0.016268812119960785,
    -0.018542656674981117,
    0.0054680537432432175,
    0.021533844992518425,
    -0.02022097073495388,
    0.008520147763192654,
    0.015416121110320091,
    0.029505833983421326,
    -0.008337427861988544,
    -0.013703971169888973,
    0.03508216515183449,
    0.015754491090774536,
    -0.020559340715408325,
    0.013785179704427719,
    0.005583099089562893,
    -0.022142909467220306,
    -0.007843408733606339,
    0.03359333798289299,
    -0.01923293061554432,
    0.00032229709904640913,
    0.005231194663792849,
    0.01766289584338665,
    -0.051080282777547836,
    -0.01683727279305458,
    0.014292733743786812,
    0.008635193109512329,
    0.00015258356870617718,
    -0.01850205287337303,
    -0.013460344634950161,
    -0.024525031447410583,
    -0.02758389338850975,
    -0.03037205897271633,
    -0.007877245545387268,
    -0.023022670298814774,
    -0.0002522968570701778,
    -0.02766510285437107,
    -0.005224427208304405,
    0.008202080614864826,
    -0.013358833268284798,
    0.01774410344660282,
    0.014333338476717472,
    -0.012580583803355694,
    -0.02088417485356331,
    0.013250555843114853,
    0.034621983766555786,
    0.02231886237859726,
    -0.036706339567899704,
    0.013324996456503868,
    0.015727421268820763,
    -0.0107804574072361,
    0.01879981718957424,
    -0.0411728173494339,
    6.598207983188331e-05,
    -0.012560280971229076,
    -0.0014566812897101045,
    -0.023658806458115578,
    0.027028966695070267,
    0.009420211426913738,
    0.013521251268684864,
    0.015375516377389431,
    -0.014915334060788155,
    0.018610330298542976,
    -0.0013526326511055231,
    -0.010658644139766693,
    0.010766922496259212,
    0.02644697204232216,
    0.0066320449113845825,
    -0.016119930893182755,
    0.0029945713467895985,
    -0.0007761353626847267,
    -0.007193738594651222,
    -0.012194842100143433,
    0.009826255030930042,
    -0.000483022682601586,
    0.021763935685157776,
    0.01653950847685337,
    0.006209082901477814,
    0.0058165742084383965,
    -0.011924146674573421,
    0.012986627407371998,
    0.04336545243859291,
    0.002886292990297079,
    -0.004452944733202457,
    -0.008655495941638947,
    -0.010374413803219795,
    0.01150456815958023,
    -0.018908096477389336,
    0.05706265568733215,
    -0.015158960595726967,
    -0.006885822396725416,
    -0.005633854772895575,
    -0.028287703171372414,
    -0.005792888347059488,
    0.016322951763868332,
    -0.03131949529051781,
    0.017568152397871017,
    0.02353699319064617,
    -0.016796668991446495,
    -0.0024464125744998455,
    0.006943345069885254,
    0.019963808357715607,
    -0.002793241525068879,
    -0.017338061705231667,
    -0.029776528477668762,
    -0.010306739248335361,
    -0.006134641822427511,
    -0.004595059901475906,
    0.006767393089830875,
    0.002087740693241358,
    -0.018096009269356728,
    -0.034973885864019394,
    -0.0056135524064302444,
    0.006401953753083944,
    0.0020183748565614223,
    -0.0012375869555398822,
    -0.025282980874180794,
    0.0022298560943454504,
    0.008614891208708286,
    -0.018975770100951195,
    0.013859621249139309,
    0.01247907243669033,
    -0.002935356693342328,
    -0.03397231176495552,
    -0.011836170218884945,
    -0.01304076611995697,
    -0.01833963580429554,
    -0.014522825367748737,
    -0.004344666376709938,
    0.011978285387158394,
    0.020342784002423286,
    0.02382122352719307,
    0.006459476426243782,
    0.035434070974588394,
    0.0013365601189434528,
    -0.0054680537432432175,
    -0.004185632336884737,
    -0.0075862472876906395,
    0.00027006128220818937,
    -0.011206802912056446,
    -0.020248040556907654,
    0.0014490680769085884,
    0.022900857031345367,
    0.0032077443320304155,
    -0.0392238087952137,
    -0.02074882760643959,
    0.012073028832674026,
    -0.0031451459508389235,
    -0.012817442417144775,
    -0.023956570774316788,
    -0.02969532087445259,
    0.02817942388355732,
    -0.0042160856537520885,
    -0.021994026377797127,
    0.00751857366412878,
    -0.024024244397878647,
    -0.010279670357704163,
    0.024186663329601288,
    0.013121974654495716,
    0.01609286107122898,
    0.0027526370249688625,
    0.0032212790101766586,
    -0.014901799149811268,
    0.014739382080733776,
    0.014874729327857494,
    -0.00316544808447361,
    -0.021087195724248886,
    0.0042127021588385105,
    -0.02727259323000908,
    0.0008264678763225675,
    0.0015218175249174237,
    -0.011937681585550308,
    -0.00965030211955309,
    0.00661174301058054,
    0.01104438491165638,
    -0.024213731288909912,
    0.028829094022512436,
    0.008953261189162731,
    -0.03353919833898544,
    -0.0009000632562674582,
    -0.03191502392292023,
    -0.023117413744330406,
    -0.036787547171115875,
    -0.019557764753699303,
    -0.02727259323000908,
    -0.0028423049952834845,
    -0.0012545054778456688,
    0.009217189624905586,
    0.02005855366587639,
    -0.018678003922104836,
    -0.00867579784244299,
    0.01521309930831194,
    0.003935238812118769,
    0.031102938577532768,
    0.0031806747429072857,
    0.04293234273791313,
    0.016783135011792183,
    0.02660938911139965,
    -0.011910611763596535,
    -0.029559971764683723,
    -0.03080517239868641,
    -0.015537934377789497,
    0.026054462417960167,
    0.020342784002423286,
    -0.001323025324381888,
    -0.019435953348875046,
    -0.0095487916842103,
    -0.019449487328529358,
    -0.04306768998503685,
    -0.028152354061603546,
    0.040550217032432556,
    0.01318964920938015,
    0.00426684133708477,
    -0.0220210961997509,
    -0.021398495882749557,
    -0.0024362613912671804,
    0.03270004317164421,
    -0.02697482891380787,
    -0.0021554145496338606,
    -0.005830109119415283,
    -0.01472584716975689,
    -0.021168405190110207,
    0.036029599606990814,
    0.02533711865544319,
    0.006956879980862141,
    0.015808630734682083,
    0.003089314792305231,
    -0.012912185862660408,
    -0.025986788794398308,
    -0.029505833983421326,
    -0.0200720876455307,
    0.004957115277647972,
    -0.0038303444162011147,
    0.005935003515332937,
    -0.005353007931262255,
    0.03500095754861832,
    0.0013644755817949772,
    0.0019287070026621222,
    -0.0028778337873518467,
    -0.02081650123000145,
    0.03256469592452049,
    0.005200741346925497,
    -0.009697673842310905,
    -0.023239227011799812,
    -0.03451370447874069,
    0.017838848754763603,
    0.007092227693647146,
    -0.011247406713664532,
    0.0053699263371527195,
    -0.01578156091272831,
    0.004226237069815397,
    0.012749768793582916,
    -0.017162108793854713,
    -0.008824680000543594,
    -0.012817442417144775,
    -0.0006289446027949452,
    0.0015793403144925833,
    -0.012289585545659065,
    0.011281244456768036,
    0.009812720119953156,
    -0.008831447921693325,
    -0.014942403882741928,
    -0.024971680715680122,
    -0.015077751129865646,
    -0.009799185208976269,
    0.031075868755578995,
    0.008831447921693325,
    -0.020762361586093903,
    0.03594839200377464,
    -0.01758168637752533,
    0.00452738581225276,
    0.031292423605918884,
    0.00229076249524951,
    -0.010435319505631924,
    0.014563430100679398,
    0.02051873505115509,
    0.010733085684478283,
    0.026054462417960167,
    0.01796066015958786,
    -0.03833051398396492,
    -0.02720491960644722,
    -0.0007482198998332024,
    0.01967957802116871,
    0.015754491090774536,
    -0.000281058280961588,
    0.0006027209456078708,
    0.018840422853827477,
    0.0029184382874518633,
    -0.028368910774588585,
    -0.009210421703755856,
    0.013176114298403263,
    0.006875671446323395,
    -0.016972621902823448,
    0.008445706218481064,
    0.0034632133319973946,
    0.020843571051955223,
    0.009839789010584354,
    0.033403851091861725,
    0.02112780138850212,
    -0.018299030140042305,
    -0.026474041864275932,
    0.016214674338698387,
    0.01457696408033371,
    -0.017689965665340424,
    0.00655760383233428,
    -0.018068939447402954,
    -0.0053293220698833466,
    -0.02690715529024601,
    0.031617261469364166,
    0.014983007684350014,
    -0.00699071679264307,
    -0.0066320449113845825,
    0.029668251052498817,
    0.002845688723027706,
    -0.012675327248871326,
    0.011795565485954285,
    0.007457667030394077,
    -0.031292423605918884,
    0.009853323921561241,
    -0.006266606040298939,
    -0.017947126179933548,
    -0.01893516629934311,
    0.030534477904438972,
    0.03887190669775009,
    -0.033918172121047974,
    -0.0033227899111807346,
    -0.03126535564661026,
    -0.03646271303296089,
    0.017676429823040962,
    -0.0159439779818058,
    0.03329557180404663,
    0.010211995802819729,
    0.019260000437498093,
    0.025079958140850067,
    0.003735600970685482,
    0.01213393546640873,
    0.0449625588953495,
    -0.018881026655435562,
    0.009663837030529976,
    0.00633089616894722,
    0.020017948001623154,
    -0.0017206096090376377,
    -0.013426507823169231,
    -0.039954688400030136,
    -0.001563267782330513,
    0.006659114733338356,
    0.006692951545119286,
    0.01999087817966938,
    0.048292115330696106,
    0.004249922931194305,
    -0.012350492179393768,
    0.0008158938144333661,
    -0.016498904675245285,
    0.013480646535754204,
    0.04959145560860634,
    -0.00849984586238861,
    -0.02315801940858364,
    -0.017026761546730995,
    0.0028879849705845118,
    0.0051635210402309895,
    0.023333970457315445,
    -0.002453180029988289,
    0.0066895680502057076,
    -0.028585467487573624,
    0.026853015646338463,
    -0.015158960595726967,
    -0.005082312040030956,
    0.009108911268413067,
    0.006378267891705036,
    0.0064256396144628525,
    0.017541082575917244,
    0.014847660437226295,
    0.03286246210336685,
    -0.018353169783949852,
    0.00898033007979393,
    0.011132361367344856,
    0.024470893666148186,
    -0.00950818695127964,
    0.008899121545255184,
    0.003749135648831725,
    -0.0309675894677639,
    0.000889912189450115,
    -0.007890780456364155,
    0.02315801940858364,
    0.005193973891437054,
    0.030344989150762558,
    -0.021899282932281494,
    -0.0076877581886947155,
    -0.00014888263831380755,
    -0.02411898784339428,
    0.0025986789260059595,
    -0.004777779337018728,
    0.029180997982621193,
    0.017324525862932205,
    0.028991511091589928,
    0.01419799029827118,
    -0.02353699319064617,
    -0.013209951110184193,
    -0.016431231051683426,
    -0.0007287636399269104,
    -0.014536360278725624,
    0.0025648418813943863,
    -0.04710105434060097,
    0.006229385267943144,
    -0.010245832614600658,
    -0.01705382950603962,
    0.0035156605299562216,
    0.19869065284729004,
    0.026839479804039,
    0.0017459873342886567,
    0.02195342257618904,
    0.0008806069963611662,
    0.016634251922369003,
    0.012682094238698483,
    0.030236711725592613,
    0.001125924987718463,
    0.019260000437498093,
    -0.01578156091272831,
    -0.018921630457043648,
    0.0038675651885569096,
    -0.00864196103066206,
    -0.002035293495282531,
    -0.020857105031609535,
    -0.016864342615008354,
    -0.01616053469479084,
    0.00849984586238861,
    0.017987729981541634,
    -0.02020743489265442,
    -0.01660718210041523,
    -0.01521309930831194,
    -0.012878349050879478,
    0.01607932522892952,
    -0.004331131465733051,
    -0.023266296833753586,
    -0.011030850932002068,
    0.024376150220632553,
    0.034378357231616974,
    -0.006516999565064907,
    0.014116781763732433,
    -0.009210421703755856,
    0.005857178475707769,
    -0.0314277745783329,
    0.0022146294359117746,
    0.01423859503120184,
    -0.021818075329065323,
    0.010936107486486435,
    0.028747884556651115,
    0.021926352754235268,
    -0.010651876218616962,
    0.00398599449545145,
    -0.03240227699279785,
    0.011355685070157051,
    0.003522427985444665,
    -0.000505439646076411,
    0.004002912901341915,
    -0.0007642924319952726,
    0.03223986178636551,
    -0.015551469288766384,
    -0.015023612417280674,
    0.022427139803767204,
    0.0022264723666012287,
    -0.009805952198803425,
    -0.016065791249275208,
    0.005393612198531628,
    0.014685242436826229,
    0.0027001898270100355,
    0.013121974654495716,
    -0.017541082575917244,
    0.02261662669479847,
    -0.04087505489587784,
    0.010604504495859146,
    -0.046180687844753265,
    0.038005679845809937,
    -0.05847027525305748,
    -0.01729745604097843,
    -0.0015277389902621508,
    0.03405352309346199,
    0.007667456287890673,
    0.012343725189566612,
    -0.01607932522892952,
    -0.0024091918021440506,
    -0.01901637390255928,
    -0.020762361586093903,
    0.02187221497297287,
    0.021736865863204002,
    0.031021729111671448,
    0.01984199695289135,
    -0.002341517945751548,
    0.03575890511274338,
    0.00528195034712553,
    -0.005258264485746622,
    -0.03037205897271633,
    -0.016119930893182755,
    0.02540479227900505,
    -0.002769555663689971,
    -0.007992290891706944,
    -0.005556029733270407,
    -0.017717035487294197,
    -0.019002839922904968,
    0.010787224397063255,
    -0.000915289914701134,
    -0.00014031765749678016,
    0.010861665941774845,
    -0.006371500436216593,
    0.0152537040412426,
    -0.010530063882470131,
    0.024687450379133224,
    -0.01992320455610752,
    0.0271237101405859,
    -0.03299780935049057,
    -0.019070513546466827,
    -0.020654084160923958,
    -0.01647183485329151,
    -0.008966796100139618,
    0.020911244675517082,
    0.007823105901479721,
    -0.02464684471487999,
    -0.00330587150529027,
    -0.021439101547002792,
    -0.008953261189162731,
    -0.0051702880300581455,
    -0.004970650188624859,
    0.015077751129865646,
    -0.01300692930817604,
    -0.006158327683806419,
    -0.005924852564930916,
    -0.007288482040166855,
    -0.008344195783138275,
    -0.005948538426309824,
    -0.0015480411238968372,
    -0.010848131030797958,
    -0.0011580701684579253,
    -0.013047534041106701,
    -0.02629808895289898,
    0.0121000986546278,
    -0.008371264673769474,
    -0.011782031506299973,
    0.03489267826080322,
    0.0031722155399620533,
    0.003698380198329687,
    0.012316655367612839,
    -0.0032246627379208803,
    -0.018068939447402954,
    -0.023333970457315445,
    -0.028910303488373756,
    0.004835302475839853,
    0.009758580476045609,
    -0.022724905982613564,
    -0.004029982723295689,
    0.012952790595591068,
    0.0017645977204665542,
    0.027177849784493446,
    -0.02457917109131813,
    0.0077486648224294186,
    -0.00480823265388608,
    -0.0017113045323640108,
    -0.00539022870361805,
    -0.014143851585686207,
    -0.01205949392169714,
    3.539663885021582e-05,
    -0.02134435810148716,
    0.026704132556915283,
    -0.008486310951411724,
    -0.022860253229737282,
    -0.013176114298403263,
    0.026947759091854095,
    0.011030850932002068,
    -0.02969532087445259,
    -0.015131890773773193,
    0.0027864740695804358,
    0.0046593500301241875,
    -0.017838848754763603,
    -0.014401012100279331,
    -0.1685892939567566,
    0.025012284517288208,
    0.016363555565476418,
    -0.043175965547561646,
    0.004916511010378599,
    -0.011876774951815605,
    -0.0242001973092556,
    0.0023279832676053047,
    -0.006154943723231554,
    0.000809972349088639,
    0.013033999130129814,
    0.001016800757497549,
    -0.012242213822901249,
    -0.03364747762680054,
    0.00452738581225276,
    -0.018759213387966156,
    0.01010371744632721,
    0.012018890120089054,
    0.04493549093604088,
    -0.0034885911736637354,
    0.04006296768784523,
    -0.008019360713660717,
    0.006513615604490042,
    0.03259176388382912,
    0.006395186297595501,
    -0.03334971144795418,
    -0.02330690063536167,
    0.005085696000605822,
    -0.019517160952091217,
    -0.01503714732825756,
    -0.02195342257618904,
    0.013338531367480755,
    0.03421593829989433,
    0.03524458408355713,
    0.006655730772763491,
    0.01262118760496378,
    0.03134656324982643,
    -0.0010117252822965384,
    -0.022048166021704674,
    0.009724743664264679,
    0.02434908039867878,
    0.031211216002702713,
    0.022657232359051704,
    -0.006757241673767567,
    0.010151089169085026,
    0.005119532812386751,
    0.03500095754861832,
    -0.007484736852347851,
    0.0038337281439453363,
    -0.009068306535482407,
    0.039494507014751434,
    -0.002121577737852931,
    0.006882438436150551,
    -0.011288011446595192,
    -0.011328616179525852,
    -0.004987568594515324,
    0.026771806180477142,
    0.021750401705503464,
    0.0136769013479352,
    0.0028659908566623926,
    -0.011964750476181507,
    -0.022115839645266533,
    -0.01698615588247776,
    0.00648316228762269,
    -0.01850205287337303,
    -0.021384961903095245,
    -0.018596796318888664,
    0.017825312912464142,
    -0.018813353031873703,
    0.012438468635082245,
    0.012181307189166546,
    -0.006097421050071716,
    -0.01713503897190094,
    0.00561693636700511,
    0.023117413744330406,
    0.02269783616065979,
    -0.03616494685411453,
    0.02826063334941864,
    0.016363555565476418,
    -0.011335383169353008,
    -0.00505524268373847,
    0.033024877309799194,
    -0.012397863902151585,
    0.029668251052498817,
    -0.009156282991170883,
    0.012221911922097206,
    -0.010800759308040142,
    -0.006513615604490042,
    -0.0015793403144925833,
    0.011321848258376122,
    0.011666985228657722,
    -0.016404161229729652,
    0.006449325475841761,
    0.003837111871689558,
    -0.0018407308962196112,
    -0.006615126505494118,
    0.02826063334941864,
    0.014360408298671246,
    0.01977432146668434,
    0.0011233872501179576,
    -0.0008315434097312391,
    0.01924646645784378,
    -0.014644638635218143,
    0.009501419961452484,
    0.03584011271595955,
    0.0028287703171372414,
    -0.015321377664804459,
    0.009190119802951813,
    0.020559340715408325,
    -0.01446868572384119,
    -0.009724743664264679,
    0.0028913686983287334,
    0.038059819489717484,
    0.017527548596262932,
    -0.04352787137031555,
    0.015957511961460114,
    -0.001264656544663012,
    0.011714356951415539,
    0.020802965387701988,
    -0.011389522813260555,
    0.0410645417869091,
    -0.001588645507581532,
    -0.025973254814743996,
    0.001411001430824399,
    -0.04290527105331421,
    -0.02013976126909256,
    -0.10275609791278839,
    -0.05465346574783325,
    0.017148572951555252,
    -0.007349388673901558,
    -0.01503714732825756,
    -0.007322319317609072,
    0.0036036367528140545,
    0.010387947782874107,
    0.013954364694654942,
    0.007511806208640337,
    -0.006560987327247858,
    -0.014414547011256218,
    -0.0324564166367054,
    0.01779824309051037,
    -0.011064687743782997,
    0.0009804260917007923,
    -0.022954996675252914,
    -0.009447280317544937,
    0.006821532268077135,
    0.011227104812860489,
    -0.003003030549734831,
    0.005799655802547932,
    -0.026433436200022697,
    -0.003799891099333763,
    -0.036273226141929626,
    -0.008581054396927357,
    -0.038059819489717484,
    0.01653950847685337,
    0.012797140516340733,
    -3.901825039065443e-05,
    -0.0021706412080675364,
    -0.013846086338162422,
    -0.009264561347663403,
    0.012093331664800644,
    0.023320436477661133,
    -0.008912656456232071,
    -0.017906522378325462,
    -0.018664469942450523,
    0.03787033259868622,
    -0.02991187758743763,
    -0.005248113069683313,
    -0.015307842753827572,
    0.010096950456500053,
    -0.022873789072036743,
    -0.005762435030192137,
    0.028747884556651115,
    -0.01157900970429182,
    0.012005355209112167,
    0.015456725843250751,
    -0.010624807327985764,
    -0.022224118933081627,
    -0.004236388020217419,
    -0.00814794097095728,
    0.001196136698126793,
    0.014915334060788155,
    -0.019706647843122482,
    0.010266135446727276,
    -0.0010371030075475574,
    -0.018312565982341766,
    -0.001157224178314209,
    0.014157386496663094,
    -1.0124654181709047e-05,
    -0.03012843430042267,
    0.022373002022504807,
    0.007376458495855331,
    0.009291630238294601,
    -0.00559663400053978,
    -0.0038404955994337797,
    0.007214040961116552,
    0.00826298724859953,
    -0.010029276832938194,
    0.010624807327985764,
    -0.009318700060248375,
    0.008628426119685173,
    -0.022183513268828392,
    1.899363996926695e-05,
    -0.006496697198599577,
    -0.017703499644994736,
    -0.0018661086214706302,
    0.011145896278321743,
    -0.015456725843250751,
    0.0003136263694614172,
    -0.031102938577532768,
    -0.031157076358795166,
    -0.010029276832938194,
    0.01322348602116108,
    0.00404013367369771,
    0.006117723416537046,
    0.015497329644858837,
    -0.05576331913471222,
    0.034378357231616974,
    0.007389992941170931,
    0.025743162259459496,
    -0.012688862159848213,
    0.0006175246089696884,
    -0.010861665941774845,
    -0.016052255406975746,
    0.010279670357704163,
    -0.03884483501315117,
    0.00678431149572134,
    -0.031130008399486542,
    -0.0020555956289172173,
    -0.07525341212749481,
    0.010888734832406044,
    0.018474983051419258,
    0.0034412192180752754,
    0.010922572575509548,
    -0.04834625497460365,
    -0.0011800641659647226,
    -0.03952157497406006,
    -0.021005988121032715,
    0.019747253507375717,
    -0.01472584716975689,
    -0.007410295307636261,
    -0.024606240913271904,
    0.00633089616894722,
    0.005193973891437054,
    0.01584923453629017,
    0.051675811409950256,
    -0.006906124297529459,
    0.025756698101758957,
    0.013967898674309254,
    -0.002339826198294759,
    -0.02127668261528015,
    0.0450708381831646,
    -0.016350021585822105,
    -0.014874729327857494,
    0.013324996456503868,
    -0.006242920178920031,
    0.022427139803767204,
    0.0038337281439453363,
    -0.024403218179941177,
    0.014279198832809925,
    -0.015673281624913216,
    -0.01356185507029295,
    0.02494461089372635,
    0.0015471952501684427,
    -0.00627675699070096,
    -0.023090343922376633,
    -0.01521309930831194,
    0.010475924238562584,
    0.001145381247624755,
    -0.03502802550792694,
    -0.04082091525197029,
    0.02931634709239006,
    0.004743942525237799,
    -0.012262515723705292,
    -0.010699247941374779,
    0.015510864555835724,
    0.015686817467212677,
    0.01559207309037447,
    -0.00039546951302327216,
    0.023347506299614906,
    0.0005798809579573572,
    -0.03359333798289299,
    -0.03207744285464287,
    0.017175642773509026,
    -0.017256852239370346,
    0.028802024200558662,
    -0.016512438654899597,
    -0.011450428515672684,
    0.006171862594783306,
    0.03510923311114311,
    0.0031079251784831285,
    0.028666676953434944,
    0.001932090730406344,
    -0.0020555956289172173,
    -0.011998587287962437,
    -0.036706339567899704,
    -0.028206493705511093,
    -0.005907934159040451,
    -0.03367454558610916,
    6.862559530418366e-05,
    -0.044312890619039536,
    0.005332705564796925,
    -0.0029285892378538847,
    0.02766510285437107,
    -0.0023719712626188993,
    -0.003304179525002837,
    -0.00574890011921525,
    -0.029641181230545044,
    0.02743501029908657,
    -0.0032991040498018265,
    -0.012770070694386959,
    -0.039115529507398605,
    0.024822797626256943,
    0.01322348602116108,
    -0.0023804304655641317,
    -0.020938314497470856,
    0.012526444159448147,
    0.0007258029072545469,
    -0.0036882292479276657,
    -0.009027701802551746,
    0.008066732436418533,
    0.0073426212184131145,
    -0.017148572951555252,
    0.025905581191182137,
    0.003292336594313383,
    -0.006205699406564236,
    -1.9443037672317587e-05,
    0.01293248776346445,
    -0.017703499644994736,
    0.024538567289710045,
    -0.01408971194177866,
    0.023929500952363014,
    -0.023645270615816116,
    -0.027313198894262314,
    0.008939726278185844,
    0.006970414891839027,
    -0.018813353031873703,
    -0.021994026377797127,
    0.012939255684614182,
    0.012871581129729748,
    -0.019192326813936234,
    0.012939255684614182,
    0.0270695723593235,
    -0.014035573229193687,
    -0.00965707004070282,
    0.011254174634814262,
    -0.01571388728916645,
    -0.03451370447874069,
    -0.006100804544985294,
    0.002492092549800873,
    0.015280772931873798,
    0.029938947409391403,
    -0.021885748952627182,
    0.013629529625177383,
    0.020315714180469513,
    0.01758168637752533,
    -0.0032466568518429995,
    0.0033633944112807512,
    -0.013819016516208649,
    -0.000316164136165753,
    -0.013169346377253532,
    -0.02216997928917408,
    -0.015307842753827572,
    -0.003904785728082061,
    0.004507083911448717,
    -0.022197049111127853,
    -0.015659747645258904,
    -0.018745679408311844,
    0.08694746345281601,
    -0.01924646645784378,
    -0.025878511369228363,
    0.0018779515521600842,
    0.01616053469479084,
    0.007220808416604996,
    0.027110176160931587,
    -0.009075073525309563,
    -0.01055713277310133,
    -0.0052616479806602,
    -0.009589395485818386,
    0.006371500436216593,
    -0.018596796318888664,
    -0.02697482891380787,
    -0.03546113893389702,
    0.0025614581536501646,
    -0.02974945865571499,
    0.0006120260804891586,
    0.0039115529507398605,
    0.01563267782330513,
    0.011443661525845528,
    0.020342784002423286,
    -0.01450929045677185,
    -0.034973885864019394,
    -0.04260750487446785,
    0.0045206183567643166,
    0.0011208495125174522,
    0.00274417782202363,
    -0.01044885441660881,
    -0.04382563754916191,
    0.012675327248871326,
    0.01510482095181942,
    -0.010428552515804768,
    -0.003546113846823573,
    0.004239771515130997,
    -0.016214674338698387,
    -0.008919424377381802,
    -0.020423991605639458,
    -0.013812248595058918,
    0.002590219723060727,
    -0.010807526297867298,
    0.020802965387701988,
    -0.026785342022776604,
    -0.03824930638074875,
    0.02451149746775627,
    0.010543597862124443,
    0.003904785728082061,
    0.012350492179393768,
    -0.009501419961452484
  ]
}
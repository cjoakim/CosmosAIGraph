{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: gnu lesser general public license v3 (lgplv3)",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 2.5",
    "programming language :: python :: 3.6",
    "topic :: utilities"
  ],
  "description": ".. image:: https://img.shields.io/pypi/v/easydict.svg\n        :target: https://pypi.python.org/pypi/easydict\n\n.. image:: https://img.shields.io/pypi/dm/easydict.svg\n        :target: https://pypi.python.org/pypi/easydict\n\n========\neasydict\n========\n\n*easydict* allows to access dict values as attributes (works recursively). \na javascript-like properties dot notation for python dicts.\n\ninstall\n=======\n\n::\n    \n    pip install easydict\n\n\nusage\n=====\n\n::\n\n    >>> from easydict import easydict as edict\n    >>> d = edict({'foo':3, 'bar':{'x':1, 'y':2}})\n    >>> d.foo\n    3\n    >>> d.bar.x\n    1\n    \n    >>> d = edict(foo=3)\n    >>> d.foo\n    3\n\n\nvery useful when exploiting parsed json content ! \n\n::\n\n    >>> from easydict import easydict as edict\n    >>> from simplejson import loads\n    >>> j = \"\"\"{\n    \"buffer\": 12,\n    \"list1\": [\n        {\"type\" : \"point\", \"coordinates\" : [100.1,54.9] },\n        {\"type\" : \"point\", \"coordinates\" : [109.4,65.1] },\n        {\"type\" : \"point\", \"coordinates\" : [115.2,80.2] },\n        {\"type\" : \"point\", \"coordinates\" : [150.9,97.8] }\n    ]\n    }\"\"\"\n    >>> d = edict(loads(j))\n    >>> d.buffer\n    12\n    >>> d.list1[0].coordinates[1]\n    54.9\n\ncan set attributes as easily as getting them :\n\n::\n\n    >>> d = easydict()\n    >>> d.foo = 3\n    >>> d.foo\n    3\n\nit is still a ``dict`` !\n\n::\n\n    >>> d = easydict(log=false)\n    >>> d.debug = true\n    >>> d.items()\n    [('debug', true), ('log', false)]\n\ninstance and class attributes are accessed like usual objects...\n\n::\n\n    >>> class flower(easydict):\n    ...     power = 1\n    ...\n    >>> f = flower({'height': 12})\n    >>> f.power\n    1\n    >>> f['power']\n    1\n\nlicense\n=======\n\n* lesser gnu public license\n\nauthors\n=======\n\n* mathieu leplatre <mathieu.leplatre@makina-corpus.com>\n\n|makinacom|_\n\n.. |makinacom| image:: http://depot.makina-corpus.org/public/logo.gif\n.. _makinacom:  http://www.makina-corpus.com\n\nsimilar tools\n=============\n\n* `treedict <http://pypi.python.org/pypi/treedict>`_, a fast and full-featured dict-like tree container.\n* `addict <https://github.com/mewwts/addict>`_\n\n\n=========\nchangelog\n=========\n\n1.11 (2023-10-24)\n=================\n\n- fix #39: recursionerror when dict in class member (#41)\n- minor changes in readme\n\n1.10 (2022-09-28)\n=================\n\n* make tests compatible with python2 and python3 (thanks @jacklangerman)\n* dictify input\n* fix license metadata \n\n1.9 (2018-10-18)\n================\n\n* fix issue #3 that update and pop now work correctly on easydicts.\n\n\n1.8 (2018-08-17)\n================\n\n* update package classifiers.\n\n\n1.7 (2017-04-27)\n================\n\n* prevent copying sub-easydicts on assignment to fix unpickling (#7, thanks @chronos-sk)\n\n1.6 (2015-01-27)\n================\n\n* allow setting attributes via setting items (thanks phivos)\n\n1.5 (2014-08-07)\n================\n\n* allow subclassing using self instead of class name (thanks steve engledow)\n\n1.4 (2011-03-13)\n================\n\n* access class attributes like instance attributes\n\n1.3 (2012-02-08)\n================\n\n* better documentation and tests\n\n1.2 (2011-06-08)\n================\n\n* fix inclusion of readme\n\n1.1 (2012-04-21)\n================\n\n* switch to distutils2\n\n1.0 (2011-04-18)\n================\n\n* initial working version\n",
  "docs_url": null,
  "keywords": "tools",
  "license": "lgpl-3.0",
  "name": "easydict",
  "package_url": "https://pypi.org/project/easydict/",
  "project_url": "https://pypi.org/project/easydict/",
  "project_urls": {
    "Download": "http://pypi.python.org/pypi/easydict/",
    "Homepage": "https://github.com/makinacorpus/easydict"
  },
  "release_url": "https://pypi.org/project/easydict/1.11/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "access dict values as attributes (works recursively).",
  "version": "1.11",
  "releases": [],
  "developers": [
    "mathieu.leplatre@makina-corpus.com",
    "mathieu_leplatre"
  ],
  "kwds": "dict easydicts dicts easydict dictify",
  "license_kwds": "lgpl-3.0",
  "libtype": "pypi",
  "id": "pypi_easydict",
  "homepage": "https://github.com/makinacorpus/easydict",
  "release_count": 11,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "license :: osi approved :: bsd license",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: implementation :: cpython"
  ],
  "description": "pysftp\n======\n\na simple interface to sftp.  the module offers high level abstractions and\ntask based routines to handle your sftp needs.  checkout the cook book, in the\ndocs, to see what pysftp can do for you.\n\nexample\n-------\n\n::\n\n    import pysftp\n\n    with pysftp.connection('hostname', username='me', password='secret') as sftp:\n        with sftp.cd('public'):             # temporarily chdir to public\n            sftp.put('/my/local/filename')  # upload file to public/ on remote\n            sftp.get('remote_file')         # get a remote file\n\n\nsupports\n--------\ntested on python 2.7, 3.2, 3.3, 3.4\n\n.. image:: https://drone.io/bitbucket.org/dundeemt/pysftp/status.png\n    :target: https://drone.io/bitbucket.org/dundeemt/pysftp/latest\n    :alt: build status\n\n\n* project:  https://bitbucket.org/dundeemt/pysftp\n* download: https://pypi.python.org/pypi/pysftp\n* documentation: http://pysftp.rtfd.org/\n\nchange log\n----------\n\n\n* 0.2.9 (current, released 2016-07-04)\n\n  * bugfix: correctly implement hostcheck. now, be default pysftp will verify\n    the host. see ``pysftp.cnopts.hostkeys``\n  * added ``pysftp.connection.remote_server_key`` - used to retrieve the\n    remote hosts server key. \n  * added support for enabling compression, ``compression`` (j. kruth)\n  * added ``.active_compression``, to return the active local and remote compression settings as a tuple\n  * fixed an unwanted logging side-effect, after you set logging, it would remain, even if you closed the .connection and couldn't be changed to something else. now when connection closes, any logging handlers are closed and can be changed to something else upon the next .connection\n  * moved ``log`` parameter of connection to the new cnopts connection options object, deprecated the existing ``log`` parameter, will be removed in 0.3.0\n  * modified ``pysftp.conection.walktree`` to always use posixpath conventions when walking a remote directory per the latest draft-ietf-secsh-filexfer-13.txt. issue encountered with windows clients (#60)\n  * modified ``pysftp.reparent`` to handle mis-matched pathing, i.e. windows -> posix, better (#61)\n\n* 0.2.8 (released 2014-05-28)\n\n  * created ``pysftp.walktree`` for walking local directories\n  * added param recurse to ``.pysftp.connection.walktree`` to allow it to do another trick\n  * created ``.put_d`` to put the contents of a local directory to a remote one\n  * created a context manager chdir method, ``pysftp.connection.cd``\n  * created ``.put_r`` to recursively put the contents of a local directory to a remote one\n  * fixed a bug with ``.st_mode_to_int`` on py3 (#52)\n  * ``.listdir_attr`` now returns a sorted list, sorted on filename\n  * created ``pysftp.cd`` with-context version of ``os.chdir`` for local directories\n  * created docs, cookbook to show off some of the notable features of pysftp\n\n* 0.2.7 (released 2014-05-24)\n\n  * created ``pysftp.connection.walktree``, recursively walk, depth first, a remote directory structure.  used as the base of ``.get_r``. see tests/test_walktree.py for examples.\n  * added ``.unlink`` as synonym for ``.remove``\n  * added ``.normalize``\n  * created ``.get_r`` to recursively copy remote directories to a local path\n  * created ``.pwd`` to return the current working directory\n  * created ``.cwd`` as synonym for ``.chdir``\n  * modified ``.listdir`` to return a sorted list instead of an arbitrary one\n  * added ``.readlink``, always returns an absolute path\n  * created ``.get_d`` to copy the remote directory to a local path (non-recursive)\n  * added ``.timeout`` to set the read/write timeout of the underlying channel for pending read/write ops\n  * added ``.listdir_attr``, wrapper for paramiko method\n  * added ``.truncate``, method returns the new file size\n  * improved dry'ness of test suite\n\n* 0.2.6 (released 2014-05-17)\n\n  * added ``preserve_mtime`` parameter to ``.put``, optionally updates the remote file's st_mtime to match the local file.\n  * added ``preserve_mtime`` parameter to ``.get``, optionally updates the local file's st_mtime to match the remote file\n  * added ``.exists`` and ``.lexists``, use ``.stat`` and ``.lstat`` respectively\n  * added ``.symlink``\n  * created ``.isdir``, ``.isfile``, ``.makedirs``\n  * added ``.chmod``\n  * added ``.chown``\n  * added ``.sftp_client`` which exposes underlying, active ``sftpclient`` object for advance use\n\n* 0.2.5 (released 2014-05-15)\n\n  * added ``ciphers`` parameter to ``.connection`` object (d. reilly)\n  * added ``.active_ciphers`` to return local and remote cipher in use\n  * added ``.security_options``, where you can get available ciphers, among other information\n  * enhanced logging, and added documentation and tests\n\n* 0.2.4 (released 2014-05-13)\n\n  * ``.connection`` can be used in a ``with`` statement\n  * add ``.remove``\n  * added support for callback and confirm params to ``.put``\n  * added support for callback on ``.get``\n  * added support for ``.open``\n  * fixed password bug and now differentiates between an empty string and none\n  * added support for ``paramiko.agentkey`` to be passed in as the ``private_key`` for connection\n  * added support for ``.mkdir``\n  * added support for ``.rmdir``\n  * added support for ``.stat`` and ``.lstat``\n  * added helper function, ``.st_mode_to_int``,to convert the ``st_mode`` value back into a common integer representation\n  * added ``.getfo``\n  * added ``.putfo``\n\n* 0.2.3 (released 2014-05-10)\n\n  * host code on pypi to keep pip happy\n  * move code to bitbucket\n  * enhance testing\n  * readme.rst and license named properly\n  * cleaner error handling\n\n* 0.2.2\n\n  * additions\n\n    * chdir(self, path) - change the current working directory on the remote\n    * getcwd(self) - return the current working directory on the remote\n    * listdir(self, path='.')return a list of files for the given path",
  "docs_url": null,
  "keywords": "sftp ssh ftp internet",
  "license": "bsd",
  "name": "pysftp",
  "package_url": "https://pypi.org/project/pysftp/",
  "project_url": "https://pypi.org/project/pysftp/",
  "project_urls": {
    "Download": "https://pypi.python.org/pypi/pysftp",
    "Homepage": "https://bitbucket.org/dundeemt/pysftp"
  },
  "release_url": "https://pypi.org/project/pysftp/0.2.9/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "a friendly face on sftp",
  "version": "0.2.9",
  "releases": [],
  "developers": [
    "jeff_hinrichs",
    "jeffh@dundeemt.com"
  ],
  "kwds": "sftp sftp_client sftpclient remote_file pysftp",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_pysftp",
  "homepage": "https://bitbucket.org/dundeemt/pysftp",
  "release_count": 9,
  "dependency_ids": []
}
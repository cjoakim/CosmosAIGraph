{
  "classifiers": [],
  "description": "[![actions status](https://github.com/pulumi/pulumi-random/workflows/master/badge.svg)](https://github.com/pulumi/pulumi-random/actions)\n[![slack](http://www.pulumi.com/images/docs/badges/slack.svg)](https://slack.pulumi.com)\n[![npm version](https://badge.fury.io/js/%40pulumi%2frandom.svg)](https://npmjs.com/package/@pulumi/random)\n[![nuget version](https://badge.fury.io/nu/pulumi.random.svg)](https://badge.fury.io/nu/pulumi.random)\n[![python version](https://badge.fury.io/py/pulumi-random.svg)](https://pypi.org/project/pulumi-random)\n[![pkggodev](https://pkg.go.dev/badge/github.com/pulumi/pulumi-random/sdk/v4/go)](https://pkg.go.dev/github.com/pulumi/pulumi-random/sdk/v4/go)\n[![license](https://img.shields.io/npm/l/%40pulumi%2fpulumi.svg)](https://github.com/pulumi/pulumi-random/blob/master/license)\n\n# random provider\n\nthe random provider allows the safe use of randomness in a pulumi program. this allows you to generate resource\nproperties, such as names, that contain randomness in a way that works with pulumi's goal state oriented approach.\nusing randomness as usual would not work well with pulumi, because by definition, each time the program is evaluated,\na new random state would be produced, necessitating re-convergence on the goal state. this provider understands\nhow to work with the pulumi resource lifecycle to accomplish randomness safely and in a way that works as desired.\n\n## installing\n\nthis package is available in many languages in the standard packaging formats.\n\n### node.js (java/typescript)\n\nto use from javascript or typescript in node.js, install using either `npm`:\n\n    $ npm install @pulumi/random\n\nor `yarn`:\n\n    $ yarn add @pulumi/random\n\n### python\n\nto use from python, install using `pip`:\n\n    $ pip install pulumi_random\n\n### go\n\nto use from go, use `go get` to grab the latest version of the library\n\n    $ go get github.com/pulumi/pulumi-random/sdk/v4/go/...\n\n### .net\n\nto use from .net, install using `dotnet add package`:\n\n    $ dotnet add package pulumi.random\n\n## example\n\nfor example, to generate a random password, allocate a `randompassword` resource\nand then use its `result` output property (of type `output<string>`) to pass\nto another resource.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\nimport * as random from \"@pulumi/random\";\n\nconst password = new random.randompassword(\"password\", {\n    length: 16,\n    overridespecial: \"_%@\",\n    special: true,\n});\nconst example = new aws.rds.instance(\"example\", {\n    password: password.result,\n});\n```\n\n## reference\n\nfor further information, please visit [the random provider docs](https://www.pulumi.com/docs/intro/cloud-providers/random) or for detailed reference documentation, please visit [the api docs](https://www.pulumi.com/docs/reference/pkg/random).\n",
  "docs_url": null,
  "keywords": "pulumi,random",
  "license": "apache-2.0",
  "name": "pulumi-random",
  "package_url": "https://pypi.org/project/pulumi-random/",
  "project_url": "https://pypi.org/project/pulumi-random/",
  "project_urls": {
    "Homepage": "https://pulumi.io",
    "Repository": "https://github.com/pulumi/pulumi-random"
  },
  "release_url": "https://pypi.org/project/pulumi-random/4.15.0/",
  "requires_dist": [
    "parver >=0.2.1",
    "pulumi <4.0.0,>=3.0.0",
    "semver >=2.8.1"
  ],
  "requires_python": ">=3.7",
  "summary": "a pulumi package to safely use randomness in pulumi programs.",
  "version": "4.15.0",
  "releases": [],
  "developers": [],
  "kwds": "pulumi_random badge badges svg slack",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_pulumi_random",
  "homepage": "",
  "release_count": 340,
  "dependency_ids": [
    "pypi_parver",
    "pypi_pulumi",
    "pypi_semver"
  ]
}
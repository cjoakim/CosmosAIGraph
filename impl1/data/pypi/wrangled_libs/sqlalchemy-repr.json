{
  "classifiers": [
    "development status :: 4 - beta",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: database :: front-ends"
  ],
  "description": "sqlalchemy-repr\n===============\n\n.. image:: https://travis-ci.org/manicmaniac/sqlalchemy-repr.svg?branch=master\n    :target: https://travis-ci.org/manicmaniac/sqlalchemy-repr\n\nautomatically generates pretty ``repr`` of a sqlalchemy model.\n\ninstall\n-------\n\n.. code:: sh\n\n    pip install sqlalchemy-repr\n\n\nusage\n-----\n\n.. code:: python\n\n    from sqlalchemy.ext.declarative import declarative_base\n    from sqlalchemy_repr import representablebase\n\n    base = declarative_base(cls=representablebase)\n\n\nexample\n-------\n\n``sqlalchemy_repr.representablebase`` is mixin to add simple representation of columns.\n\n.. code:: python\n\n    >>> from datetime import datetime\n\n    >>> from sqlalchemy import column, datetime, integer, unicode, create_engine\n    >>> from sqlalchemy.ext.declarative import declarative_base\n    >>> from sqlalchemy.orm import sessionmaker\n    >>> from sqlalchemy_repr import representablebase\n\n    >>> base = declarative_base(cls=representablebase)\n\n    >>> class user(base):\n    ...    __tablename__ = 'users'\n    ...    id = column(integer, primary_key=true)\n    ...    name = column(unicode(255), nullable=false, unique=true)\n    ...    created = column(datetime, nullable=false)\n\n    >>> engine = create_engine('sqlite://')\n    >>> base.metadata.create_all(engine)\n\n    >>> session = sessionmaker(bind=engine)\n    >>> session = session()\n\n    >>> user = user(name='spam', created=datetime(2016, 6, 1))\n    >>> session.add(user)\n    >>> session.commit()\n\n    >>> print(user)\n    <user id=1, name='spam', created='2016-06-01t00:00:00'>\n\n``sqlalchemy_repr.prettyrepresentablebase`` brings pretty, indented multi-line representation.\n\n.. code:: python\n\n    >>> from sqlalchemy_repr import prettyrepresentablebase\n    >>> base = declarative_base(cls=prettyrepresentablebase)\n\n    >>> class user(base):\n    ...    __tablename__ = 'users'\n    ...    id = column(integer, primary_key=true)\n    ...    first_name = column(unicode(255), nullable=false, unique=true)\n    ...    last_name = column(unicode(255), nullable=false, unique=true)\n    ...    email = column(unicode(255), nullable=false)\n    ...    created = column(datetime, nullable=false)\n    ...    modified = column(datetime, nullable=false)\n\n    >>> engine = create_engine('sqlite://')\n    >>> base.metadata.create_all(engine)\n\n    >>> session = sessionmaker(bind=engine)\n    >>> session = session()\n\n    >>> user = user(first_name='spam', last_name='ham',  email='spam@example.com', created=datetime(2016, 6, 1), modified=datetime(2016, 6, 1))\n    >>> session.add(user)\n    >>> session.commit()\n\n    >>> print(user)\n    <user\n        id=1,\n        first_name='spam',\n        last_name='ham',\n        email='spam@example.com',\n        created='2016-06-01t00:00:00',\n        modified='2016-06-01t00:00:00'>\n",
  "docs_url": null,
  "keywords": "pprint pretty print repr sqlalchemy extension",
  "license": "",
  "name": "sqlalchemy-repr",
  "package_url": "https://pypi.org/project/sqlalchemy-repr/",
  "project_url": "https://pypi.org/project/sqlalchemy-repr/",
  "project_urls": {
    "Homepage": "https://github.com/manicmaniac/sqlalchemy-repr"
  },
  "release_url": "https://pypi.org/project/sqlalchemy-repr/0.1.0/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "automatically generates pretty repr of a sqlalchemy model.",
  "version": "0.1.0",
  "releases": [],
  "developers": [
    "rito.0305@gmail.com",
    "ryosuke_ito"
  ],
  "kwds": "sqlalchemy_repr sqlalchemy repr create_engine create_all",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_sqlalchemy_repr",
  "homepage": "https://github.com/manicmaniac/sqlalchemy-repr",
  "release_count": 3,
  "dependency_ids": []
}
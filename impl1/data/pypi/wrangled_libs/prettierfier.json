{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: microsoft :: windows",
    "programming language :: python :: 3",
    "programming language :: python :: 3.7",
    "topic :: text processing :: markup :: html",
    "topic :: text processing :: markup :: xml"
  ],
  "description": "# prettierfier\nwhile i love [beautiful soup](https://www.crummy.com/software/beautifulsoup/bs4/doc/) as a parser, `beautifulsoup.prettify()` adds a linebreak between *every* tag. \nthis results in unwanted white space between tags that should be inline, like `<sup>`, `<a>`, `<span>`, etc:\n\n```\n<p>introducing github<sup>&reg;</sup></p>\n```\n<p>introducing github<sup>&reg;</sup></p>\n\nvs.\n\n```\n<p>\n    introducing github\n    <sup>\n        &reg;\n    </sup>\n</p>\n```\n<p>\n    introducing github\n    <sup>\n        &reg;\n    </sup>\n</p>\n\nthis module parses html/xml as a raw string to more intelligently format tags.\n\n## installation\n\nyou have two options:\n1. `pip install prettierfier` in your command line\n2. copy the contents of [prettierfier.py](prettierfier.py) to your own module.\n\nthis module is built with just the python standard library and contains no external third-party dependencies.\n\n## functions\n\n**prettify_xml**(*xml_string, indent=2, debug=false*)\n\n* can be used with no prior formatting.\n\n```\n    args:\n        xml_string (str): xml text to prettify.\n        indent (int, optional): set size of xml tag indents.\n\n    test-only args:\n        debug (bool, optional): show results of each regexp application.\n\n    returns:\n        str: prettified xml.\n```\n\n**prettify_html**(*html_string, debug=false*)\n\n* originally created to process `beautifulsoup.prettify()` output.\n* does not add or remove regular line breaks. can be used with regular html if it already has the newlines you want to keep.\n\n```\n    args:\n        html_string (str): html string to parse.\n\n    test-only args:\n        debug (bool, optional): show results of each regexp application.\n\n    returns:\n        str: prettified html.\n```\n\n## example\n\n```\nimport prettierfier\n\nugly_html = \"\"\"<p>\n    introducing github\n    <sup>\n        &reg;\n    </sup>\n</p>\"\"\"\n\npretty_html = prettierfier.prettify_html(ugly_html)\nprint(pretty_html) \n\n# output\n>>> <p>introducing github<sup>&reg;</sup></p>\n```\n\n### links\n\n* [github](https://github.com/annedo/prettierfier)\n* [pypi](https://pypi.org/project/prettierfier/)\n\n",
  "docs_url": null,
  "keywords": "html xml formatting prettify",
  "license": "mit",
  "name": "prettierfier",
  "package_url": "https://pypi.org/project/prettierfier/",
  "project_url": "https://pypi.org/project/prettierfier/",
  "project_urls": {
    "Homepage": "https://github.com/annedo/prettierfier"
  },
  "release_url": "https://pypi.org/project/prettierfier/1.0.3/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "intelligently pretty-print html/xml with inline tags.",
  "version": "1.0.3",
  "releases": [],
  "developers": [
    "anne.do.designs@gmail.com",
    "anne_do"
  ],
  "kwds": "prettify_xml prettify_html html_string ugly_html pretty_html",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_prettierfier",
  "homepage": "https://github.com/annedo/prettierfier",
  "release_count": 3,
  "dependency_ids": []
}
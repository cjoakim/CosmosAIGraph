{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: bsd license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "========\nqueuelib\n========\n\n.. image:: https://img.shields.io/pypi/v/queuelib.svg\n   :target: https://pypi.python.org/pypi/queuelib\n\n.. image:: https://img.shields.io/pypi/pyversions/queuelib.svg\n   :target: https://pypi.python.org/pypi/queuelib\n\n.. image:: https://github.com/scrapy/queuelib/actions/workflows/tests.yml/badge.svg\n   :target: https://github.com/scrapy/queuelib/actions/workflows/tests.yml\n\n.. image:: https://img.shields.io/codecov/c/github/scrapy/queuelib/master.svg\n   :target: http://codecov.io/github/scrapy/queuelib?branch=master\n   :alt: coverage report\n\n\nqueuelib is a python library that implements object collections which are stored\nin memory or persisted to disk, provide a simple api, and run fast.\n\nqueuelib provides collections for queues_ (fifo), stacks_ (lifo), queues\nsorted by priority and queues that are emptied in a round-robin_ fashion.\n\n.. note:: queuelib collections are not thread-safe.\n\nqueuelib supports python 3.5+ and has no dependencies.\n\n.. _queues: https://en.wikipedia.org/wiki/fifo_(computing_and_electronics)\n.. _round-robin: https://en.wikipedia.org/wiki/round-robin_scheduling\n.. _stacks: https://en.wikipedia.org/wiki/stack_(abstract_data_type)\n\ninstallation\n============\n\nyou can install queuelib either via the python package index (pypi) or from\nsource.\n\nto install using pip::\n\n    $ pip install queuelib\n\nto install using easy_install::\n\n    $ easy_install queuelib\n\nif you have downloaded a source tarball you can install it by running the\nfollowing (as root)::\n\n    # python setup.py install\n\nfifo/lifo disk queues\n=====================\n\nqueuelib provides fifo and lifo queue implementations.\n\nhere is an example usage of the fifo queue::\n\n    >>> from queuelib import fifodiskqueue\n    >>> q = fifodiskqueue(\"queuefile\")\n    >>> q.push(b'a')\n    >>> q.push(b'b')\n    >>> q.push(b'c')\n    >>> q.pop()\n    b'a'\n    >>> q.close()\n    >>> q = fifodiskqueue(\"queuefile\")\n    >>> q.pop()\n    b'b'\n    >>> q.pop()\n    b'c'\n    >>> q.pop()\n    >>>\n\nthe lifo queue is identical (api-wise), but importing ``lifodiskqueue``\ninstead.\n\npriorityqueue\n=============\n\na discrete-priority queue implemented by combining multiple fifo/lifo queues\n(one per priority).\n\nfirst, select the type of queue to be used per priority (fifo or lifo)::\n\n    >>> from queuelib import fifodiskqueue\n    >>> qfactory = lambda priority: fifodiskqueue('queue-dir-%s' % priority)\n\nthen instantiate the priority queue with it::\n\n    >>> from queuelib import priorityqueue\n    >>> pq = priorityqueue(qfactory)\n\nand use it::\n\n    >>> pq.push(b'a', 3)\n    >>> pq.push(b'b', 1)\n    >>> pq.push(b'c', 2)\n    >>> pq.push(b'd', 2)\n    >>> pq.pop()\n    b'b'\n    >>> pq.pop()\n    b'c'\n    >>> pq.pop()\n    b'd'\n    >>> pq.pop()\n    b'a'\n\nroundrobinqueue\n===============\n\nhas nearly the same interface and implementation as a priority queue except\nthat each element must be pushed with a (mandatory) key.  popping from the\nqueue cycles through the keys \"round robin\".\n\ninstantiate the round robin queue similarly to the priority queue::\n\n    >>> from queuelib import roundrobinqueue\n    >>> rr = roundrobinqueue(qfactory)\n\nand use it::\n\n    >>> rr.push(b'a', '1')\n    >>> rr.push(b'b', '1')\n    >>> rr.push(b'c', '2')\n    >>> rr.push(b'd', '2')\n    >>> rr.pop()\n    b'a'\n    >>> rr.pop()\n    b'c'\n    >>> rr.pop()\n    b'b'\n    >>> rr.pop()\n    b'd'\n\n\nmailing list\n============\n\nuse the `scrapy-users`_ mailing list for questions about queuelib.\n\nbug tracker\n===========\n\nif you have any suggestions, bug reports or annoyances please report them to\nour issue tracker at: http://github.com/scrapy/queuelib/issues/\n\ncontributing\n============\n\ndevelopment of queuelib happens at github: http://github.com/scrapy/queuelib\n\nyou are highly encouraged to participate in the development. if you don't like\ngithub (for some reason) you're welcome to send regular patches.\n\nall changes require tests to be merged.\n\ntests\n=====\n\ntests are located in `queuelib/tests` directory. they can be run using\n`nosetests`_ with the following command::\n\n    nosetests\n\nthe output should be something like the following::\n\n    $ nosetests\n    .............................................................................\n    ----------------------------------------------------------------------\n    ran 77 tests in 0.145s\n\n    ok\n\nlicense\n=======\n\nthis software is licensed under the bsd license. see the license file in the\ntop distribution directory for the full license text.\n\nversioning\n==========\n\nthis software follows `semantic versioning`_\n\n.. _scrapy framework: http://scrapy.org\n.. _scrapy-users: http://groups.google.com/group/scrapy-users\n.. _semantic versioning: http://semver.org/\n.. _nosetests: https://nose.readthedocs.org/en/latest/\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "bsd",
  "name": "queuelib",
  "package_url": "https://pypi.org/project/queuelib/",
  "project_url": "https://pypi.org/project/queuelib/",
  "project_urls": {
    "Homepage": "https://github.com/scrapy/queuelib"
  },
  "release_url": "https://pypi.org/project/queuelib/1.6.2/",
  "requires_dist": [],
  "requires_python": ">=3.5",
  "summary": "collection of persistent (disk-based) and non-persistent (memory-based) queues",
  "version": "1.6.2",
  "releases": [],
  "developers": [
    "info@scrapy.org",
    "scrapy_project"
  ],
  "kwds": "queuelib queuefile queues_ _queues pip",
  "license_kwds": "bsd",
  "libtype": "pypi",
  "id": "pypi_queuelib",
  "homepage": "https://github.com/scrapy/queuelib",
  "release_count": 13,
  "dependency_ids": []
}
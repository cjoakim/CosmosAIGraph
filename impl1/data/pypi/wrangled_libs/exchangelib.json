{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: bsd license",
    "programming language :: python :: 3",
    "topic :: communications"
  ],
  "description": "exchange web services client library\n====================================\n\nthis module is an orm for your exchange mailbox, providing django-style access to all your data. it is a\nplatform-independent, well-performing, well-behaving, well-documented, well-tested and simple interface for\ncommunicating with an on-premise microsoft exchange 2007-2016 server or office365 using exchange web services\n(ews). among other things, it implements autodiscover, and functions for searching, creating, updating, deleting,\nexporting and uploading calendar, mailbox, task, contact and distribution list items.\n\n[![image](https://img.shields.io/pypi/v/exchangelib.svg)](https://pypi.org/project/exchangelib/)\n[![image](https://img.shields.io/pypi/pyversions/exchangelib.svg)](https://pypi.org/project/exchangelib/)\n[![image](https://api.codacy.com/project/badge/grade/5f805ad901054a889f4b99a82d6c1cb7)](https://app.codacy.com/gh/ecederstrand/exchangelib)\n[![image](https://coveralls.io/repos/github/ecederstrand/exchangelib/badge.svg?branch=master)](https://coveralls.io/github/ecederstrand/exchangelib?branch=master)\n[![xscode](https://img.shields.io/badge/available%20on-xs%3acode-blue)](https://xscode.com/ecederstrand/exchangelib)\n\n\n## teaser\n\nhere's a short example of how `exchangelib` works. let's print the first\n100 inbox messages in reverse order:\n\n```python\nfrom exchangelib import credentials, account\n\ncredentials = credentials(\"john@example.com\", \"topsecret\")\naccount = account(\"john@example.com\", credentials=credentials, autodiscover=true)\n\nfor item in account.inbox.all().order_by(\"-datetime_received\")[:100]:\n    print(item.subject, item.sender, item.datetime_received)\n```\n\n\n## documentation\ndocumentation is available at [https://ecederstrand.github.io/exchangelib/](https://ecederstrand.github.io/exchangelib/).\nsource code documentation is available at [https://ecederstrand.github.io/exchangelib/exchangelib/](https://ecederstrand.github.io/exchangelib/exchangelib/).\n",
  "docs_url": null,
  "keywords": "ews exchange autodiscover microsoft outlook exchange-web-services o365 office365",
  "license": "bsd-2-clause",
  "name": "exchangelib",
  "package_url": "https://pypi.org/project/exchangelib/",
  "project_url": "https://pypi.org/project/exchangelib/",
  "project_urls": {
    "Bug Tracker": "https://github.com/ecederstrand/exchangelib/issues",
    "Documentation": "https://ecederstrand.github.io/exchangelib/",
    "Homepage": "https://github.com/ecederstrand/exchangelib",
    "Source Code": "https://github.com/ecederstrand/exchangelib"
  },
  "release_url": "https://pypi.org/project/exchangelib/5.1.0/",
  "requires_dist": [
    "cached-property",
    "defusedxml >=0.6.0",
    "dnspython >=2.2.0",
    "isodate",
    "lxml >3.0",
    "oauthlib",
    "pygments",
    "requests >=2.7",
    "requests-ntlm >=0.2.0",
    "requests-oauthlib",
    "tzdata",
    "tzlocal",
    "backports.zoneinfo ; python_version < \"3.9\"",
    "requests-gssapi ; extra == 'complete'",
    "requests-negotiate-sspi ; extra == 'complete'",
    "requests-gssapi ; extra == 'kerberos'",
    "requests-negotiate-sspi ; extra == 'sspi'"
  ],
  "requires_python": ">=3.8",
  "summary": "client for microsoft exchange web services (ews)",
  "version": "5.1.0",
  "releases": [],
  "developers": [
    "erik@cederstrand.dk",
    "erik_cederstrand"
  ],
  "kwds": "outlook exchangelib mailbox office365 django",
  "license_kwds": "bsd-2-clause",
  "libtype": "pypi",
  "id": "pypi_exchangelib",
  "homepage": "https://github.com/ecederstrand/exchangelib",
  "release_count": 91,
  "dependency_ids": [
    "pypi_backports.zoneinfo",
    "pypi_cached_property",
    "pypi_defusedxml",
    "pypi_dnspython",
    "pypi_isodate",
    "pypi_lxml",
    "pypi_oauthlib",
    "pypi_pygments",
    "pypi_requests",
    "pypi_requests_gssapi",
    "pypi_requests_negotiate_sspi",
    "pypi_requests_ntlm",
    "pypi_requests_oauthlib",
    "pypi_tzdata",
    "pypi_tzlocal"
  ]
}
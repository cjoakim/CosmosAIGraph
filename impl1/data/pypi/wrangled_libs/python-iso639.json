{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "intended audience :: education",
    "intended audience :: information technology",
    "intended audience :: science/research",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: text processing",
    "topic :: text processing :: general",
    "topic :: text processing :: indexing",
    "topic :: text processing :: linguistic"
  ],
  "description": "# python-iso639\n\n[![pypi version](https://badge.fury.io/py/python-iso639.svg)](https://pypi.org/project/python-iso639/)\n[![supported python versions](https://img.shields.io/pypi/pyversions/python-iso639.svg)](https://pypi.org/project/python-iso639/)\n[![pypi downloads last month](https://img.shields.io/pypi/dm/python-iso639)](https://pypi.org/project/python-iso639/)\n[![circleci builds](https://circleci.com/gh/jacksonllee/iso639.svg?style=shield)](https://circleci.com/gh/jacksonllee/iso639)\n\n`python-iso639` is a python package for accessing iso 639 language codes, names, and\nother associated information.\n\ncurrent features:\n\n* a representation of languages mapped across iso 639-1, 639-2, and 639-3.\n* functionality to \"guess\" what a language is for a given\n  unknown language code or name.\n\n## installation\n\n```bash\npip install python-iso639\n```\n\n## usage\n\n`python-iso639` revolves around a `language` class.\ninstances of `language` have attributes and methods that you will find useful.\n\nnote that while the package name registered on pypi is `python-iso639`,\nthe actual import name during runtime is `iso639`\n(which means you should do `import iso639` in your python code).\n\n### creating `language` instances\n\ncreate a `language` instance by one of the methods.\n\n#### `from_part3`, with an iso 639-3 code\n\n```python\n>>> import iso639\n>>> lang1 = iso639.language.from_part3('fra')\n>>> type(lang1)\n<class 'iso639.language.language'>\n>>> lang1\nlanguage(part3='fra', part2b='fre', part2t='fra', part1='fr', scope='i', type='l', name='french', comment=none, other_names=none, macrolanguage=none, retire_reason=none, retire_change_to=none, retire_remedy=none, retire_date=none)\n```\n\n#### from another iso 639 code set or a reference name\n\n```python\n>>> lang2 = iso639.language.from_part2b('fre')  # iso 639-2 (bibliographic)\n>>> lang3 = iso639.language.from_part2t('fra')  # iso 639-2 (terminological)\n>>> lang4 = iso639.language.from_part1('fr')  # iso 639-1\n>>> lang5 = iso639.language.from_name('french')  # iso 639-3 reference language name\n```\n\n#### a `languagenotfounderror` is raised for invalid inputs\n\n```python\n>>> iso639.language.from_part3('fra')  # the user input is case-sensitive!\ntraceback (most recent call last):\n  file \"<stdin>\", line 1, in <module>\nlanguagenotfounderror: 'fra' isn't an iso language code or name\n>>>\n>>> iso639.language.from_name(\"unknown language\")\ntraceback (most recent call last):\n  file \"<stdin>\", line 1, in <module>\nlanguagenotfounderror: 'unknown language' isn't an iso language code or name\n```\n\n### accessing attributes\n\n```python\n>>> lang1\nlanguage(part3='fra', part2b='fre', part2t='fra', part1='fr', scope='i', type='l', name='french', comment=none, other_names=none, macrolanguage=none, retire_reason=none, retire_change_to=none, retire_remedy=none, retire_date=none)\n>>> lang1.part3\n'fra'\n>>> lang1.name\n'french'\n```\n\n### comparison\n\n```python\n>>> lang1 == lang2 == lang3 == lang4 == lang5  # all are french\ntrue\n>>> lang6 = iso639.language.from_part3('spa')  # spanish\n>>> lang1 == lang6  # french vs. spanish\nfalse\n>>> 'french' == lang1.name == lang2.name == lang3.name == lang4.name == lang5.name\ntrue\n>>> lang6.name\n'spanish'\n```\n\n### guess a language: classmethod `match`\n\nyou don't know which code set or name your input is from?\nuse the `match` classmethod:\n\n```python\n>>> lang1 = iso639.language.match('fra')\n>>> lang2 = iso639.language.match('fre')\n>>> lang3 = iso639.language.match('fr')\n>>> lang4 = iso639.language.match('french')\n>>> lang1 == lang2 == lang3 == lang4\ntrue\n```\n\nthe classmethod `match` is particularly useful for consistently\naccessing a specific attribute from unknown inputs, e.g., the iso 639-3 code.\n\n```python\n>>> 'fra' == lang1.part3 == lang2.part3 == lang3.part3 == lang4.part3\ntrue\n```\n\nif there's no match, a `languagenotfounderror` is raised,\nwhich you may want to catch:\n\n```python\n>>> try:\n...     lang = iso639.language.match('not gonna find a match')\n... except iso639.languagenotfounderror:\n...     print(\"no match found!\")\n... \nno match found!\n```\n\n### macrolanguages and alternative names\n\n```python\n>>> language = iso639.language.match('yue')\n>>> language.name\n'yue chinese'  # also commonly known as cantonese\n>>> language.macrolanguage\n'zho'  # chinese\n>>> language.other_names\n[name(print='yue chinese', inverted='chinese, yue')]\n>>> for name in language.other_names:\n...     print(f'{name.print} | {name.inverted}')\n...\nyue chinese | chinese, yue\n```\n\n### retired language codes:\n\n```python\n>>> language = iso639.language.match('bvs')\n>>> language.part3\n'bvs'\n>>> language.name\n'belgian sign language'\n>>> language.status\n'r'  # (r)etired\n>>> language.retire_reason\n's'  # (s)plit\n>>> language.retire_change_to is none\ntrue\n>>> language.retire_remedy\n'split into langue des signes de belgique francophone [sfb], and vlaamse gebarentaal [vgt]'\n>>> language.retire_date\ndatetime.date(2007, 7, 18)\n```\n\n## into the weeds\n\n### attributes of a `language` instance\n\na `language` instance has the following attributes:\n\n| attribute          | data type       | can it be `none`? | description                                                                                                           |\n|--------------------|-----------------|-------------------|-----------------------------------------------------------------------------------------------------------------------|\n| `part3`            | `str`           | \u2717                 | iso 639-3 code                                                                                                        |\n| `part2b`           | `str`           | \u2713                 | iso 639-2 code (bibliographic)                                                                                        |\n| `part2t`           | `str`           | \u2713                 | iso 639-2 code (terminological)                                                                                       |\n| `part1`            | `str`           | \u2713                 | iso 639-1 code                                                                                                        |\n| `scope`            | `str`           | \u2717                 | one of {(i)ndividual, (m)acrolanguage, (s)pecial}                                                                     |\n| `type`             | `str`           | \u2713                 | one of {(a)ncient, (c)onstructed, (e)xtinct, (h)istorical, (l)iving, (s)pecial} [1]                                   |\n| `status`           | `str`           | \u2717                 | one of {(a)ctive, (r)etired}, describing the iso 639-3 code                                                           |\n| `name`             | `str`           | \u2717                 | reference language name in iso 639-3                                                                                  |\n| `comment`          | `str`           | \u2713                 | comment from iso 639-3                                                                                                |\n| `other_names`      | `list[name]`    | \u2713                 | other print and inverted names [2]                                                                                    |\n| `macrolanguage`    | `str`           | \u2713                 | macrolanguage                                                                                                         |\n| `retire_reason`    | `str`           | \u2713                 | retirement reason, one of {(c)hange, (d)uplicate, (n)on-existent, (s)plit, (m)erge}                                   |\n| `retire_change_to` | `str`           | \u2713                 | iso 639-3 code to which this language can be changed, if retirement reason is one of {(c)hange, (d)uplicate, (m)erge} |\n| `retire_remedy`    | `str`           | \u2713                 | instructions for updating this retired language code                                                                  |\n| `retire_date`      | `datetime.date` | \u2713                 | the date the retirement became effective                                                                              |\n\n[1] if the iso 639-3 code is retired, then the `type` attribute is `none`,\n    because its value is not clearly discernible from the sil data source.\n\n[2] a `name` instance has the attributes `print` and `inverted`,\n    for the print name and inverted name, respectively.\n    if reference name, print name, and inverted name are all the same, then\n    that particular (print name, inverted name) pair is excluded from\n    the `other_names` attribute.\n    for example, for spanish (iso 639-3: spa), one (print name, inverted name)\n    pair is (spanish, spanish) from the sil data source, but this pair is\n    excluded from its list of `other_names`.\n\n### how `language.match` matches the language\n\nat a high level, `language.match` assumes the input is more likely to be\na language code rather than a language name.\nbeyond that, the precise order in matching is as follows:\n\n* iso 639-3 codes (among the active codes)\n* iso 639-2 (bibliographic) codes\n* iso 639-2 (terminological) codes\n* iso 639-1 codes\n* iso 639-3 codes (among the retired codes)\n* iso 639-3 reference language names\n* iso 639-3 alternative language names (the \"print\" ones)\n* iso 639-3 alternative language names (the \"inverted\" ones)\n\nonly exact matching is done (there's no fuzzy string matching of any sort).\nas soon as a match is found, `language.match` returns a `language` instance.\nif there isn't a match, a `languagenotfounderror` is raised.\n\n### `language` is a dataclass\n\nthe `language` class is a dataclass.\nall functionality of\n[dataclases](https://docs.python.org/3/library/dataclasses.html)\napplies to `language` and its instances,\ne.g., [`dataclasses.asdict`](https://docs.python.org/3/library/dataclasses.html#dataclasses.asdict):\n\n```python\n>>> import dataclasses, iso639\n>>> language = iso639.language.match('fra')\n>>> dataclasses.asdict(language)\n{'part3': 'fra', 'part2b': 'fre', 'part2t': 'fra', 'part1': 'fr', 'scope': 'i', 'type': 'l', 'status': 'a', 'name': 'french', 'comment': none, 'other_names': none, 'macrolanguage': none, 'retire_reason': none, 'retire_change_to': none, 'retire_remedy': none, 'retire_date': none}\n```\n\n### constants\n\n* `data_last_updated`: the release date of the included language code data from sil\n\n    ```python\n    >>> import iso639\n    >>> iso639.data_last_updated\n    datetime.date(2023, 1, 23)\n    ```\n\n* `all_languages`: the list of all `language` objects based on the included language code data\n\n    ```python\n    >>> import iso639\n    >>> type(iso639.all_languages)\n    <class 'list'>\n    >>> len(iso639.all_languages)\n    7916\n    >>> iso639.all_languages[0]\n    language(part3='aaa', scope='i', type='l', status='a', name='ghotuo', ...)\n    ```\n\n## links\n\n* author: [jackson l. lee](https://jacksonllee.com)\n* source code: https://github.com/jacksonllee/iso639\n\n## license and data source\n\nthe `python-iso639` code is released under an apache 2.0 license.\nplease see [license.txt](https://github.com/jacksonllee/iso639/blob/main/license.txt)\nfor details.\n\nthe data source that backs this package is the\n[language code tables published by sil](https://iso639-3.sil.org/code_tables/download_tables).\nnote that sil resources have their [terms of use](https://www.sil.org/terms-use).\nfor exactly how the data is included in the package,\nsee the script at [`scripts/create_languages_db.py`](scripts/create_languages_db.py).\n\n## why another iso 639 package?\n\nboth packages [iso639](https://pypi.org/project/iso639/)\nand [iso-639](https://pypi.org/project/iso-639/) exist on pypi.\nhowever, as of this writing (may 2022), they were last updated in 2016 and don't seem to be maintained anymore\nfor updating the language codes.\n[pycountry](https://pypi.org/project/pycountry/) is a great package,\nbut what if you want a more lightweight package with just the language codes only and not the other stuff? :-)\n\nif you ever notice that the upstream iso 639-3 tables from sil have been updated\nand yet this package isn't using the latest data,\nplease ping me by [opening a github issue](https://github.com/jacksonllee/iso639/issues).\n",
  "docs_url": null,
  "keywords": "iso 639,language codes,languages,linguistics",
  "license": "apache 2.0",
  "name": "python-iso639",
  "package_url": "https://pypi.org/project/python-iso639/",
  "project_url": "https://pypi.org/project/python-iso639/",
  "project_urls": {
    "source": "https://github.com/jacksonllee/iso639",
    "tracker": "https://github.com/jacksonllee/iso639/issues"
  },
  "release_url": "https://pypi.org/project/python-iso639/2023.12.11/",
  "requires_dist": [
    "black ==23.11.0 ; extra == 'dev'",
    "build ==1.0.3 ; extra == 'dev'",
    "flake8 ==6.1.0 ; extra == 'dev'",
    "pytest ==7.4.3 ; extra == 'dev'",
    "twine ==4.0.2 ; extra == 'dev'"
  ],
  "requires_python": ">=3.8",
  "summary": "look-up utilities for iso 639 language codes and names",
  "version": "2023.12.11",
  "releases": [],
  "developers": [
    "jacksonlunlee@gmail.com"
  ],
  "kwds": "pyversions iso639 iso python pycountry",
  "license_kwds": "apache 2.0",
  "libtype": "pypi",
  "id": "pypi_python_iso639",
  "homepage": "",
  "release_count": 8,
  "dependency_ids": [
    "pypi_black",
    "pypi_build",
    "pypi_flake8",
    "pypi_pytest",
    "pypi_twine"
  ]
}
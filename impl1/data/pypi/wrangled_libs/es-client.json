{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": ".. _readme:\n\nes_client\n=========\n\nhttps://es-client.readthedocs.io/\n\nyou may wonder why this even exists, as at first glance it doesn't seem to make\nanything any easier than just using the elasticsearch8 python module to\nbuild a client connection.  i needed to be able to reuse the more complex\nschema validation bits i was employing, namely:\n\n* ``master_only`` detection\n* elasticsearch version checking and validation, and the option to skip this.\n* configuration value validation, including file paths for ssl certificates,\n  meaning:\n\n  * no unknown keys or unacceptable parameter values are accepted\n  * acceptable values and ranges are established (where known)--and easy to\n    amend, if necessary.\n\nso, if you don't need these, then this library probably isn't what you're\nlooking for.  if you want these features, then you've come to the right place.\n\nexample usage\n-------------\n\n::\n\n    from es_client import builder\n\n    config = {\n        'elasticsearch': {\n            'client': {\n                'hosts': 'https://10.0.0.123:9200',\n                'ca_certs': '/etc/elasticsearch/certs/ca.crt',\n                'request_timeout': 60,\n            },\n            'other_settings': {\n                'master_only': false,\n                'username': 'joe_user',\n                'password': 'password',\n            }\n        }\n    }\n\n    builder = builder(configdict=config)\n\n    try:\n        builder.connect()\n    except:\n        # do exception handling here...\n\n    client = builder.client\n\nadditionally, you can read from a yaml configuration file:\n\n::\n\n    ---\n    elasticsearch:\n      client:\n        hosts: https://10.0.0.123:9200\n        ca_certs: /etc/elasticsearch/certs/ca.crt\n        request_timeout: 60\n      other_settings:\n        master_only: false\n        username: joe_user\n        password: password\n\n::\n\n    from es_client import builder\n\n    builder = builder(configfile='/path/to/es_client.yml')\n\n    try:\n        builder.connect()\n    except:\n        # do exception handling here...\n\n    client = builder.client\n\nthe same schema validations apply here as well.\n",
  "docs_url": null,
  "keywords": "client,command-line,connect,elasticsearch",
  "license": "apache-2.0",
  "name": "es-client",
  "package_url": "https://pypi.org/project/es-client/",
  "project_url": "https://pypi.org/project/es-client/",
  "project_urls": {
    "Bug Tracker": "https://github.com/untergeek/es_client/issues",
    "Documentation": "https://es-client.readthedocs.io/",
    "Homepage": "https://github.com/untergeek/es_client",
    "Release Notes": "https://github.com/untergeek/es_client/releases",
    "Source Code": "http://github.com/untergeek/es_client"
  },
  "release_url": "https://pypi.org/project/es-client/8.11.0/",
  "requires_dist": [
    "certifi>=2023.7.22",
    "click==8.1.7",
    "elasticsearch8==8.11.0",
    "pyyaml==6.0.1",
    "six>=1.16.0",
    "voluptuous>=0.13.1",
    "sphinx; extra == 'doc'",
    "sphinx-rtd-theme; extra == 'doc'",
    "pytest-cov; extra == 'test'",
    "pytest>=7.2.1; extra == 'test'",
    "requests; extra == 'test'",
    "unittest; extra == 'test'"
  ],
  "requires_python": ">=3.8",
  "summary": "elasticsearch client builder, complete with schema validation",
  "version": "8.11.0",
  "releases": [],
  "developers": [
    "aaron@mildensteins.com"
  ],
  "kwds": "elasticsearch8 elasticsearch es_client configdict es",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_es_client",
  "homepage": "",
  "release_count": 32,
  "dependency_ids": [
    "pypi_certifi",
    "pypi_click",
    "pypi_elasticsearch8",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pyyaml",
    "pypi_requests",
    "pypi_six",
    "pypi_sphinx",
    "pypi_sphinx_rtd_theme",
    "pypi_unittest",
    "pypi_voluptuous"
  ]
}
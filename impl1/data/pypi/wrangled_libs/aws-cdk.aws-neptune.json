{
  "classifiers": [
    "development status :: 7 - inactive",
    "framework :: aws cdk",
    "framework :: aws cdk :: 1",
    "intended audience :: developers",
    "license :: osi approved",
    "operating system :: os independent",
    "programming language :: javascript",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "# amazon neptune construct library\n\n<!--begin stability banner-->---\n\n\n![end-of-support](https://img.shields.io/badge/end--of--support-critical.svg?style=for-the-badge)\n\n> aws cdk v1 has reached end-of-support on 2023-06-01.\n> this package is no longer being updated, and users should migrate to aws cdk v2.\n>\n> for more information on how to migrate, see the [*migrating to aws cdk v2* guide](https://docs.aws.amazon.com/cdk/v2/guide/migrating-v2.html).\n\n---\n<!--end stability banner-->\n\namazon neptune is a fast, reliable, fully managed graph database service that makes it easy to build and run applications that work with highly connected datasets. the core of neptune is a purpose-built, high-performance graph database engine. this engine is optimized for storing billions of relationships and querying the graph with milliseconds latency. neptune supports the popular graph query languages apache tinkerpop gremlin and w3c\u2019s sparql, enabling you to build queries that efficiently navigate highly connected datasets.\n\nthe `@aws-cdk/aws-neptune` package contains primitives for setting up neptune database clusters and instances.\n\n```python\nimport aws_cdk.aws_neptune as neptune\n```\n\n## starting a neptune database\n\nto set up a neptune database, define a `databasecluster`. you must always launch a database in a vpc.\n\n```python\ncluster = neptune.databasecluster(self, \"database\",\n    vpc=vpc,\n    instance_type=neptune.instancetype.r5_large\n)\n```\n\nby default only writer instance is provisioned with this construct.\n\n## connecting\n\nto control who can access the cluster, use the `.connections` attribute. neptune databases have a default port, so\nyou don't need to specify the port:\n\n```python\ncluster.connections.allow_default_port_from_any_ipv4(\"open to the world\")\n```\n\nthe endpoints to access your database cluster will be available as the `.clusterendpoint` and `.clusterreadendpoint`\nattributes:\n\n```python\nwrite_address = cluster.cluster_endpoint.socket_address\n```\n\n## iam authentication\n\nyou can also authenticate to a database cluster using aws identity and access management (iam) database authentication;\nsee [https://docs.aws.amazon.com/neptune/latest/userguide/iam-auth.html](https://docs.aws.amazon.com/neptune/latest/userguide/iam-auth.html) for more information and a list of supported\nversions and limitations.\n\nthe following example shows enabling iam authentication for a database cluster and granting connection access to an iam role.\n\n```python\ncluster = neptune.databasecluster(self, \"cluster\",\n    vpc=vpc,\n    instance_type=neptune.instancetype.r5_large,\n    iam_authentication=true\n)\nrole = iam.role(self, \"dbrole\", assumed_by=iam.accountprincipal(self.account))\ncluster.grant_connect(role)\n```\n\n## customizing parameters\n\nneptune allows configuring database behavior by supplying custom parameter groups.  for more details, refer to the\nfollowing link: [https://docs.aws.amazon.com/neptune/latest/userguide/parameters.html](https://docs.aws.amazon.com/neptune/latest/userguide/parameters.html)\n\n```python\ncluster_params = neptune.clusterparametergroup(self, \"clusterparams\",\n    description=\"cluster parameter group\",\n    parameters={\n        \"neptune_enable_audit_log\": \"1\"\n    }\n)\n\ndb_params = neptune.parametergroup(self, \"dbparams\",\n    description=\"db parameter group\",\n    parameters={\n        \"neptune_query_timeout\": \"120000\"\n    }\n)\n\ncluster = neptune.databasecluster(self, \"database\",\n    vpc=vpc,\n    instance_type=neptune.instancetype.r5_large,\n    cluster_parameter_group=cluster_params,\n    parameter_group=db_params\n)\n```\n\n## adding replicas\n\n`databasecluster` allows launching replicas along with the writer instance. this can be specified using the `instancecount`\nattribute.\n\n```python\ncluster = neptune.databasecluster(self, \"database\",\n    vpc=vpc,\n    instance_type=neptune.instancetype.r5_large,\n    instances=2\n)\n```\n\nadditionally it is also possible to add replicas using `databaseinstance` for an existing cluster.\n\n```python\nreplica1 = neptune.databaseinstance(self, \"instance\",\n    cluster=cluster,\n    instance_type=neptune.instancetype.r5_large\n)\n```\n\n## automatic minor version upgrades\n\nby setting `autominorversionupgrade` to true, neptune will automatically update\nthe engine of the entire cluster to the latest minor version after a stabilization\nwindow of 2 to 3 weeks.\n\n```python\nneptune.databasecluster(self, \"cluster\",\n    vpc=vpc,\n    instance_type=neptune.instancetype.r5_large,\n    auto_minor_version_upgrade=true\n)\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "apache-2.0",
  "name": "aws-cdk.aws-neptune",
  "package_url": "https://pypi.org/project/aws-cdk.aws-neptune/",
  "project_url": "https://pypi.org/project/aws-cdk.aws-neptune/",
  "project_urls": {
    "Homepage": "https://github.com/aws/aws-cdk",
    "Source": "https://github.com/aws/aws-cdk.git"
  },
  "release_url": "https://pypi.org/project/aws-cdk.aws-neptune/1.204.0/",
  "requires_dist": [
    "aws-cdk.aws-ec2 (==1.204.0)",
    "aws-cdk.aws-iam (==1.204.0)",
    "aws-cdk.aws-kms (==1.204.0)",
    "aws-cdk.core (==1.204.0)",
    "constructs (<4.0.0,>=3.3.69)",
    "jsii (<2.0.0,>=1.84.0)",
    "publication (>=0.0.3)",
    "typeguard (~=2.13.3)"
  ],
  "requires_python": "~=3.7",
  "summary": "the cdk construct library for aws::neptune",
  "version": "1.204.0",
  "releases": [],
  "developers": [
    "amazon_web_services"
  ],
  "kwds": "aws_neptune aws_cdk neptune_query_timeout neptune aws",
  "license_kwds": "apache-2.0",
  "libtype": "pypi",
  "id": "pypi_aws_cdk.aws_neptune",
  "homepage": "https://github.com/aws/aws-cdk",
  "release_count": 258,
  "dependency_ids": [
    "pypi_aws_cdk.aws_ec2",
    "pypi_aws_cdk.aws_iam",
    "pypi_aws_cdk.aws_kms",
    "pypi_aws_cdk.core",
    "pypi_constructs",
    "pypi_jsii",
    "pypi_publication",
    "pypi_typeguard"
  ]
}
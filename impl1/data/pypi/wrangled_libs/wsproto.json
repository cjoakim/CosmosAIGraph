{
  "classifiers": [
    "development status :: 5 - production/stable",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": "========================================================\npure python, pure state-machine websocket implementation\n========================================================\n\n.. image:: https://github.com/python-hyper/wsproto/workflows/ci/badge.svg\n    :target: https://github.com/python-hyper/wsproto/actions\n    :alt: build status\n.. image:: https://codecov.io/gh/python-hyper/wsproto/branch/main/graph/badge.svg\n    :target: https://codecov.io/gh/python-hyper/wsproto\n    :alt: code coverage\n.. image:: https://readthedocs.org/projects/wsproto/badge/?version=latest\n    :target: https://wsproto.readthedocs.io/en/latest/\n    :alt: documentation status\n.. image:: https://img.shields.io/badge/chat-join_now-brightgreen.svg\n    :target: https://gitter.im/python-hyper/community\n    :alt: chat community\n\n\nthis repository contains a pure-python implementation of a websocket protocol\nstack. it's written from the ground up to be embeddable in whatever program you\nchoose to use, ensuring that you can communicate via websockets, as defined in\n`rfc6455 <https://tools.ietf.org/html/rfc6455>`_, regardless of your programming\nparadigm.\n\nthis repository does not provide a parsing layer, a network layer, or any rules\nabout concurrency. instead, it's a purely in-memory solution, defined in terms\nof data actions and websocket frames. rfc6455 and compression extensions for\nwebsocket via `rfc7692 <https://tools.ietf.org/html/rfc7692>`_ are fully\nsupported.\n\nwsproto supports python 3.6.1 or higher.\n\nto install it, just run:\n\n.. code-block:: console\n\n    $ pip install wsproto\n\n\nusage\n=====\n\nlet's assume you have some form of network socket available. wsproto client\nconnections automatically generate a http request to initiate the websocket\nhandshake. to create a websocket client connection:\n\n.. code-block:: python\n\n  from wsproto import wsconnection, connectiontype\n  from wsproto.events import request\n\n  ws = wsconnection(connectiontype.client)\n  ws.send(request(host='echo.websocket.org', target='/'))\n\nto create a websocket server connection:\n\n.. code-block:: python\n\n  from wsproto.connection import wsconnection, connectiontype\n\n  ws = wsconnection(connectiontype.server)\n\nevery time you send a message, or call a ping, or simply if you receive incoming\ndata, wsproto might respond with some outgoing data that you have to send:\n\n.. code-block:: python\n\n  some_socket.send(ws.bytes_to_send())\n\nboth connection types need to receive incoming data:\n\n.. code-block:: python\n\n  ws.receive_data(some_byte_string_of_data)\n\nand wsproto will issue events if the data contains any websocket messages or state changes:\n\n.. code-block:: python\n\n  for event in ws.events():\n      if isinstance(event, request):\n          # only client connections get this event\n          ws.send(acceptconnection())\n      elif isinstance(event, closeconnection):\n          # guess nobody wants to talk to us any more...\n      elif isinstance(event, textmessage):\n          print('we got text!', event.data)\n      elif isinstance(event, bytesmessage):\n          print('we got bytes!', event.data)\n\ntake a look at our docs for a `full list of events\n<https://wsproto.readthedocs.io/en/latest/api.html#events>`!\n\ntesting\n=======\n\nit passes the autobahn test suite completely and strictly in both client and\nserver modes and using permessage-deflate.\n\nif you want to run the compliance tests, go into the compliance directory and\nthen to test client mode, in one shell run the autobahn test server:\n\n.. code-block:: console\n\n    $ wstest -m fuzzingserver -s ws-fuzzingserver.json\n\nand in another shell run the test client:\n\n.. code-block:: console\n\n    $ python test_client.py\n\nand to test server mode, run the test server:\n\n.. code-block:: console\n\n    $ python test_server.py\n\nand in another shell run the autobahn test client:\n\n.. code-block:: console\n\n    $ wstest -m fuzzingclient -s ws-fuzzingclient.json\n\n\ndocumentation\n=============\n\ndocumentation is available at https://wsproto.readthedocs.io/en/latest/.\n\ncontributing\n============\n\n``wsproto`` welcomes contributions from anyone! unlike many other projects we\nare happy to accept cosmetic contributions and small contributions, in addition\nto large feature requests and changes.\n\nbefore you contribute (either by opening an issue or filing a pull request),\nplease `read the contribution guidelines`_.\n\n.. _read the contribution guidelines: http://python-hyper.org/en/latest/contributing.html\n\nlicense\n=======\n\n``wsproto`` is made available under the mit license. for more details, see the\n``license`` file in the repository.\n\nauthors\n=======\n\n``wsproto`` was created by @jeamland, and is maintained by the python-hyper\ncommunity.\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "wsproto",
  "package_url": "https://pypi.org/project/wsproto/",
  "project_url": "https://pypi.org/project/wsproto/",
  "project_urls": {
    "Homepage": "https://github.com/python-hyper/wsproto/"
  },
  "release_url": "https://pypi.org/project/wsproto/1.2.0/",
  "requires_dist": [
    "h11 (<1,>=0.9.0)"
  ],
  "requires_python": ">=3.7.0",
  "summary": "websockets state-machine based protocol implementation",
  "version": "1.2.0",
  "releases": [],
  "developers": [
    "benno@jeamland.net",
    "benno_rice"
  ],
  "kwds": "websocket websockets wsproto badge wstest",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_wsproto",
  "homepage": "https://github.com/python-hyper/wsproto/",
  "release_count": 11,
  "dependency_ids": [
    "pypi_h11"
  ]
}
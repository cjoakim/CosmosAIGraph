{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: gnu lesser general public license v3 or later (lgplv3+)",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "pyxlsb\n======\n\n|pypi|\n\n``pyxlsb`` is an excel 2007-2010 binary workbook (xlsb) parser for\npython. the library is currently extremely limited, but functional\nenough for basic data extraction.\n\ninstall\n-------\n\n.. code:: sh\n\n   pip install pyxlsb\n\nusage\n-----\n\nthe module exposes an ``open_workbook(name)`` method (similar to xlrd\nand openpyxl) for opening xlsb files. the workbook object representing\nthe file is returned.\n\n.. code:: python\n\n   from pyxlsb import open_workbook\n   with open_workbook('book1.xlsb') as wb:\n       # do stuff with wb\n\nthe workbook object exposes a ``get_sheet(idx)`` method for retrieving a\nworksheet instance.\n\n.. code:: python\n\n   # using the sheet index (1-based)\n   with wb.get_sheet(1) as sheet:\n       # do stuff with sheet\n\n   # using the sheet name\n   with wb.get_sheet('sheet1') as sheet:\n       # do stuff with sheet\n\ntip: a ``sheets`` property containing the sheet names is available on\nthe workbook instance.\n\nthe ``rows()`` method will hand out an iterator to read the worksheet\nrows.\n\n.. code:: python\n\n   # you can use .rows(sparse=true) to skip empty rows\n   for row in sheet.rows():\n       print(row)\n   # [cell(r=0, c=0, v='text'), cell(r=0, c=1, v=42.1337)]\n\ndo note that dates will appear as floats. you must use the\n``convert_date(date)`` method from the ``pyxlsb`` module to turn them\ninto ``datetime`` instances.\n\n.. code:: python\n\n   from pyxlsb import convert_date\n   print(convert_date(41235.45578))\n   # datetime.datetime(2012, 11, 22, 10, 56, 19)\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pyxlsb.svg\n   :target: https://pypi.python.org/pypi/pyxlsb\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "lgplv3+",
  "name": "pyxlsb",
  "package_url": "https://pypi.org/project/pyxlsb/",
  "project_url": "https://pypi.org/project/pyxlsb/",
  "project_urls": {
    "Homepage": "https://github.com/willtrnr/pyxlsb"
  },
  "release_url": "https://pypi.org/project/pyxlsb/1.0.10/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "excel 2007-2010 binary workbook (xlsb) parser",
  "version": "1.0.10",
  "releases": [],
  "developers": [
    "william_turner",
    "willtur.will@gmail.com"
  ],
  "kwds": "open_workbook openpyxl get_sheet workbook pyxlsb",
  "license_kwds": "lgplv3+",
  "libtype": "pypi",
  "id": "pypi_pyxlsb",
  "homepage": "https://github.com/willtrnr/pyxlsb",
  "release_count": 10,
  "dependency_ids": []
}
{
  "classifiers": [
    "development status :: 5 - production/stable",
    "environment :: web environment",
    "framework :: django",
    "framework :: django :: 3.2",
    "framework :: django :: 4.0",
    "framework :: django :: 4.1",
    "framework :: django :: 4.2",
    "framework :: django :: 5.0",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: internet",
    "topic :: software development :: libraries :: python modules"
  ],
  "description": "==========================\nwelcome to django-allauth!\n==========================\n\n.. image:: https://github.com/pennersr/django-allauth/actions/workflows/ci.yml/badge.svg\n   :target: https://github.com/pennersr/django-allauth/actions\n\n.. image:: https://img.shields.io/pypi/v/django-allauth.svg\n   :target: https://pypi.python.org/pypi/django-allauth\n\n.. image:: https://coveralls.io/repos/pennersr/django-allauth/badge.svg?branch=main\n   :alt: coverage status\n   :target: https://coveralls.io/r/pennersr/django-allauth\n\n.. image:: https://pennersr.github.io/img/bitcoin-badge.svg\n   :target: https://blockchain.info/address/1ajxubmphkadcnx2rway34bggs7hmreper\n\n.. image:: https://badgen.net/liberapay/receives/pennersr\n   :target: https://en.liberapay.com/pennersr\n\n.. image:: https://img.shields.io/badge/code%20style-pep8-green.svg\n   :target: https://www.python.org/dev/peps/pep-0008/\n\n.. image:: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n   :target: http://standardjs.com\n\n.. image:: https://pennersr.github.io/img/emacs-badge.svg\n   :target: https://www.gnu.org/software/emacs/\n\nintegrated set of django applications addressing authentication,\nregistration, account management as well as 3rd party (social) account\nauthentication.\n\nhome page\n  https://allauth.org/\n\nsource code\n  http://github.com/pennersr/django-allauth\n\nmailing list\n  http://groups.google.com/group/django-allauth\n\ndocumentation\n  https://docs.allauth.org/en/latest/\n\nstack overflow\n  http://stackoverflow.com/questions/tagged/django-allauth\n\n.. end-welcome\n\nrationale\n=========\n\n.. begin-rationale\n\nmost existing django apps that address the problem of social\nauthentication unfortunately focus only on one dimension - the social.\nmost developers end up integrating another app in order to support authentication\nflows that are locally generated.\n\nthis approach creates a development gap between local and social\nauthentication flows. it has remained an issue in spite of numerous common\nscenarios that both require. for example, an email address passed along by an\nopenid provider may not be verified. therefore, prior to hooking up\nan openid account to a local account the email address must be\nverified. this essentially is one of many use cases that mandate email\nverification to be present in both worlds.\n\nintegrating both is a humongous and tedious process. it is not as\nsimple as adding one social authentication app, and one\nlocal account registration app to your ``installed_apps`` list.\n\nthis inadequacy is the reason for this project's existence  -- to offer a fully\nintegrated authentication app that allows for both local and social\nauthentication, with flows that just work, beautifully !\n\n.. end-rationale\n\n\nfeatures\n========\n\n.. begin-features\n\n**\ud83d\udd11 comprehensive account functionality**\n    supports multiple authentication\n    schemes (e.g. login by user name, or by email), as well as multiple\n    strategies for account verification (ranging from none to mandatory email\n    verification).\n\n**\ud83d\udc65 social login**\n    login using external identity providers, supporting any *open id connect\n    compatible* provider, many *oauth 1.0/2.0* providers, as well as\n    custom protocols such as, for example, *telegram* authentication.\n\n**\ud83d\udcbc enterprise ready**\n    supports saml 2.0, which is often used in a b2b context.\n\n**\ud83d\udd75\ufe0f battle-tested**\n    the package has been out in the open since 2010. it is in use by many\n    commercial companies whose business depends on it and has hence been\n    subjected to various penetration testing attempts.\n\n**\u23f3rate limiting**\n    when you expose an authentication-enabled web service to\n    the internet, it is important to be prepared for potential brute force\n    attempts. therefore, rate limiting is enabled out of the box.\n\n**\ud83d\udd12 private**\n    many sites leak information. for example, on many sites you can\n    check whether someone you know has an account by input their email address\n    into the password forgotten form, or trying to signup with it. we offer\n    account enumeration prevention, making it impossible to tell whether or not\n    somebody already has an account.\n\n**\ud83e\udde9 customizable**\n    as a developer, you have the flexibility to customize the core functionality\n    according to your specific requirements. by employing the adapter pattern, you\n    can effortlessly introduce interventions at the desired points to deviate from\n    the standard behavior. this level of customization empowers you to tailor the\n    software to meet your unique needs and preferences.\n\n**\u2699\ufe0f configuration**\n    the required consumer keys and secrets for interacting with facebook,\n    twitter and the likes can be configured using regular settings, or, can be\n    configured in the database via the django admin. here, optional support for\n    the django sites framework is available, which is helpful for larger\n    multi-domain projects, but also allows for easy switching between a\n    development (localhost) and production setup without messing with your\n    settings and database.\n\n\n.. end-features\n\n\ncommercial support\n==================\n\n.. begin-support\n\ncommercial support is available. if you find certain functionality missing, or\nrequire assistance on your project(s), please contact us: info@intenct.nl.\n\n.. end-support\n\n\ncross-selling\n=============\n\nif you like this, you may also like:\n\n- django-trackstats: https://github.com/pennersr/django-trackstats\n- netwell: https://github.com/pennersr/netwell\n- shove: https://github.com/pennersr/shove\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "django-allauth",
  "package_url": "https://pypi.org/project/django-allauth/",
  "project_url": "https://pypi.org/project/django-allauth/",
  "project_urls": {
    "Changelog": "https://github.com/pennersr/django-allauth/blob/main/ChangeLog.rst",
    "Documentation": "https://docs.allauth.org/en/latest/",
    "Donate": "https://github.com/sponsors/pennersr",
    "Homepage": "https://allauth.org",
    "Source": "https://github.com/pennersr/django-allauth",
    "Tracker": "https://github.com/pennersr/django-allauth/issues"
  },
  "release_url": "https://pypi.org/project/django-allauth/0.59.0/",
  "requires_dist": [
    "Django>=3.2",
    "python3-openid>=3.0.8",
    "requests-oauthlib>=0.3.0",
    "requests>=2.0.0",
    "pyjwt[crypto]>=1.7",
    "python3-saml<2.0.0,>=1.15.0; extra == \"saml\"",
    "qrcode>=7.0.0; extra == \"mfa\""
  ],
  "requires_python": ">=3.7",
  "summary": "integrated set of django applications addressing authentication, registration, account management as well as 3rd party (social) account authentication.",
  "version": "0.59.0",
  "releases": [],
  "developers": [
    "raymond.penners@intenct.nl",
    "raymond_penners"
  ],
  "kwds": "django badge badgen status yml",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_django_allauth",
  "homepage": "https://allauth.org",
  "release_count": 80,
  "dependency_ids": [
    "pypi_django",
    "pypi_pyjwt",
    "pypi_python3_openid",
    "pypi_python3_saml",
    "pypi_qrcode",
    "pypi_requests",
    "pypi_requests_oauthlib"
  ]
}
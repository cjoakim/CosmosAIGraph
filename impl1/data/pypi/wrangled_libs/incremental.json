{
  "classifiers": [
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 2",
    "programming language :: python :: 2.7",
    "programming language :: python :: 3",
    "programming language :: python :: 3.4",
    "programming language :: python :: 3.5",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "incremental\n===========\n\n|gha|\n|pypi|\n|coverage|\n\nincremental is a small library that versions your python projects.\n\napi documentation can be found `here <https://twisted.github.io/incremental/docs/>`_.\n\n\nquick start\n-----------\n\nadd this to your ``setup.py``\\ 's ``setup()`` call, removing any other versioning arguments:\n\n.. code::\n\n   setup(\n       use_incremental=true,\n       setup_requires=['incremental'],\n       install_requires=['incremental'], # along with any other install dependencies\n       ...\n   }\n\n\ninstall incremental to your local environment with ``pip install incremental[scripts]``.\nthen run ``python -m incremental.update <projectname> --create``.\nit will create a file in your package named ``_version.py`` and look like this:\n\n.. code::\n\n   from incremental import version\n\n   __version__ = version(\"widgetbox\", 17, 1, 0)\n   __all__ = [\"__version__\"]\n\n\nthen, so users of your project can find your version, in your root package's ``__init__.py`` add:\n\n.. code::\n\n   from ._version import __version__\n\n\nsubsequent installations of your project will then use incremental for versioning.\n\n\nincremental versions\n--------------------\n\n``incremental.version`` is a class that represents a version of a given project.\nit is made up of the following elements (which are given during instantiation):\n\n- ``package`` (required), the name of the package this ``version`` represents.\n- ``major``, ``minor``, ``micro`` (all required), the x.y.z of your project's ``version``.\n- ``release_candidate`` (optional), set to 0 or higher to mark this ``version`` being of a release candidate (also sometimes called a \"prerelease\").\n- ``post`` (optional), set to 0 or higher to mark this ``version`` as a postrelease.\n- ``dev`` (optional), set to 0 or higher to mark this ``version`` as a development release.\n\nyou can extract a pep-440 compatible version string by using the ``.public()`` method, which returns a ``str`` containing the full version. this is the version you should provide to users, or publicly use. an example output would be ``\"13.2.0\"``, ``\"17.1.2dev1\"``, or ``\"18.8.0rc2\"``.\n\ncalling ``repr()`` with a ``version`` will give a python-source-code representation of it, and calling ``str()`` with a ``version`` will provide a string similar to ``'[incremental, version 16.10.1]'``.\n\n\nupdating\n--------\n\nincremental includes a tool to automate updating your incremental-using project's version called ``incremental.update``.\nit updates the ``_version.py`` file and automatically updates some uses of incremental versions from an indeterminate version to the current one.\nit requires ``click`` from pypi.\n\n``python -m incremental.update <projectname>`` will perform updates on that package.\nthe commands that can be given after that will determine what the next version is.\n\n- ``--newversion=<version>``, to set the project version to a fully-specified version (like 1.2.3, or 17.1.0dev1).\n- ``--rc``, to set the project version to ``<year-2000>.<month>.0rc1`` if the current version is not a release candidate, or bump the release candidate number by 1 if it is.\n- ``--dev``, to set the project development release number to 0 if it is not a development release, or bump the development release number by 1 if it is.\n- ``--patch``, to increment the patch number of the release. this will also reset the release candidate number, pass ``--rc`` at the same time to increment the patch number and make it a release candidate.\n- ``--post``, to set the project postrelease number to 0 if it is not a postrelease, or bump the postrelease number by 1 if it is. this will also reset the release candidate and development release numbers.\n\nif you give no arguments, it will strip the release candidate number, making it a \"full release\".\n\nincremental supports \"indeterminate\" versions, as a stand-in for the next \"full\" version. this can be used when the version which will be displayed to the end-user is unknown (for example \"introduced in\" or \"deprecated in\"). incremental supports the following indeterminate versions:\n\n- ``version(\"<projectname>\", \"next\", 0, 0)``\n- ``<projectname> next``\n\nwhen you run ``python -m incremental.update <projectname> --rc``, these will be updated to real versions (assuming the target final version is 17.1.0):\n\n- ``version(\"<projectname>\", 17, 1, 0, release_candidate=1)``\n- ``<projectname> 17.1.0rc1``\n\nonce the final version is made, it will become:\n\n- ``version(\"<projectname>\", 17, 1, 0)``\n- ``<projectname> 17.1.0``\n\n\n.. |coverage| image:: https://codecov.io/gh/twisted/incremental/branch/master/graph/badge.svg?token=k2ieel887x\n.. _coverage: https://codecov.io/gh/twisted/incremental\n\n.. |gha| image:: https://github.com/twisted/incremental/actions/workflows/tests.yaml/badge.svg\n.. _gha: https://github.com/twisted/incremental/actions/workflows/tests.yaml\n\n.. |pypi| image:: http://img.shields.io/pypi/v/incremental.svg\n.. _pypi: https://pypi.python.org/pypi/incremental\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "incremental",
  "package_url": "https://pypi.org/project/incremental/",
  "project_url": "https://pypi.org/project/incremental/",
  "project_urls": {
    "Homepage": "https://github.com/twisted/incremental"
  },
  "release_url": "https://pypi.org/project/incremental/22.10.0/",
  "requires_dist": [
    "click (>=6.0) ; extra == 'mypy'",
    "twisted (>=16.4.0) ; extra == 'mypy'",
    "mypy (==0.812) ; extra == 'mypy'",
    "click (>=6.0) ; extra == 'scripts'",
    "twisted (>=16.4.0) ; extra == 'scripts'"
  ],
  "requires_python": "",
  "summary": "\"a small library that versions your python projects.\"",
  "version": "22.10.0",
  "releases": [],
  "developers": [
    "amber_brown",
    "hawkowl@twistedmatrix.com"
  ],
  "kwds": "use_incremental pip incremental py setup_requires",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_incremental",
  "homepage": "https://github.com/twisted/incremental",
  "release_count": 13,
  "dependency_ids": [
    "pypi_click",
    "pypi_mypy",
    "pypi_twisted"
  ]
}
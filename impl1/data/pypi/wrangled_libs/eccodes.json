{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "license :: osi approved :: apache software license",
    "operating system :: os independent",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy"
  ],
  "description": ".. image:: https://img.shields.io/pypi/v/eccodes.svg\n   :target: https://pypi.python.org/pypi/eccodes/\n\npython 3 interface to decode and encode grib and bufr files via the\n`ecmwf eccodes library <https://confluence.ecmwf.int/display/ecc/>`_.\n\nfeatures:\n\n- reads and writes grib 1 and 2 files,\n- reads and writes bufr 3 and 4 files,\n- supports all modern versions of python 3.11, 3.10, 3.9, 3.8 and pypy3,\n- works on most *linux* distributions and *macos*, the *eccodes* c-library\n  is the only system dependency,\n- pypi package can be installed without compiling,\n  at the cost of being twice as slow as the original *eccodes* module,\n- an optional compile step makes the code as fast as the original module\n  but it needs the recommended (the most up-to-date) version of *eccodes*.\n\nlimitations:\n\n- microsoft windows support is untested.\n\n\ninstallation\n============\n\nthe package is installed from pypi with::\n\n    $ pip install eccodes\n\n\nsystem dependencies\n-------------------\n\nthe python module depends on the ecmwf *eccodes* library\nthat must be installed on the system and accessible as a shared library.\n\non a macos with homebrew use::\n\n    $ brew install eccodes\n\nor if you manage binary packages with *conda* use::\n\n    $ conda install -c conda-forge eccodes\n\nas an alternative you may install the official source distribution\nby following the instructions at\nhttps://confluence.ecmwf.int/display/ecc/eccodes+installation\n\nyou may run a simple selfcheck command to ensure that your system is set up correctly::\n\n    $ python -m eccodes selfcheck\n    found: eccodes v2.27.0.\n    your system is ready.\n\n\nusage\n-----\n\nrefer to the *eccodes* `documentation pages <https://confluence.ecmwf.int/display/ecc/documentation>`_\nfor usage.\n\n\nexperimental features\n=====================\n\nfast bindings\n-------------\n\nto test the much faster *cffi* api level, out-of-line mode you need the\n*eccodes* header files.\nthen you need to clone the repo in the same folder as your *eccodes*\nsource tree, make a ``pip`` development install and custom compile\nthe binary bindings::\n\n    $ git clone https://github.com/ecmwf/eccodes-python\n    $ cd eccodes-python\n    $ pip install -e .\n    $ python builder.py\n\nto revert back to abi level, in-line mode just remove the compiled bindings::\n\n    $ rm gribapi/_bindings.*\n\n\nproject resources\n=================\n\n============= =========================================================\ndevelopment   https://github.com/ecmwf/eccodes-python\ndownload      https://pypi.org/project/eccodes\n============= =========================================================\n\n\ncontributing\n============\n\nthe main repository is hosted on github,\ntesting, bug reports and contributions are highly welcomed and appreciated:\n\nhttps://github.com/ecmwf/eccodes-python\n\nplease see the contributing.rst document for the best way to help.\n\nmaintainer:\n\n- `shahram najm <https://github.com/shahramn>`_ - `ecmwf <https://ecmwf.int>`_\n\ncontributors:\n\n- `alessandro amici <https://github.com/alexamici>`_ - `b-open <https://bopen.eu>`_\n\nsee also the list of `contributors <https://github.com/ecmwf/eccodes-python/contributors>`_\nwho participated in this project.\n\n.. |copy|   unicode:: u+000a9 .. copyright sign\n\nlicense\n=======\n\n|copy| copyright 2017- ecmwf.\n\nthis software is licensed under the terms of the apache licence version 2.0\nwhich can be obtained at http://www.apache.org/licenses/license-2.0.\n\nin applying this licence, ecmwf does not waive the privileges and immunities\ngranted to it by virtue of its status as an intergovernmental organisation nor\ndoes it submit to any jurisdiction.\n\nchangelog for eccodes-python\n============================\n\n1.6.1 (2023-10-02)\n--------------------\n\n- ecc-1693: update minimum recommended version\n- fix flake8 warning e721\n\n1.6.0 (2023-07-11)\n--------------------\n\n- ecc-1630: get api version as an integer\n- ecc-1622: drop python version 3.7\n- ecc-1601: grib: support data values array decoded in single-precision\n- ecc-1611: add function to determine if a bufr key is a coordinate descriptor\n\n1.5.2 (2023-04-04)\n--------------------\n\n- add support for python versions 3.10 and 3.11\n- ecc-1555: 2d numpy array incorrectly handled\n- ecc-1539: use the 'warnings' library for selfcheck\n- ecc-1538: add support for codes_type_bytes\n- ecc-1524: check values in high-level message.set function should retrieve based on value type\n- ecc-1527: handle floats in high-level message.set function check values\n\n\n1.5.1 (2023-01-25)\n--------------------\n\n- ecc-1446: data file era5-levels-members.grib not included in released tar file\n- ecc-1460: cannot import eccodes on m1 macbook pro\n- ecc-1505: high-level message.set function should allow dictionary and check result\n\n1.5.0 (2022-08-25)\n--------------------\n\n- ecc-1404: add the grib_get_gaussian_latitudes() function\n- ecc-1405: add new function: codes_any_new_from_samples\n- ecc-1415: implement a higher-level python interface (still experimental)\n- ecc-1429: remove the file 'eccodes/messages.py'\n- github pull request #62: add pypi badge\n\n1.4.2 (2022-05-20)\n--------------------\n\n- ecc-1389: drop python version 3.5 and 3.6\n- ecc-1390: nameerror: name 'gribinternalerror' is not defined\n- add test for grib bitmap\n\n\n1.4.1 (2022-03-03)\n--------------------\n\n- ecc-1351: support numpy.int64 in codes_set() and codes_set_long()\n- ecc-1317: data file tiggelam_cnmc_sfc.grib2 not included in released tar file\n\n\n1.4.0 (2021-12-03)\n--------------------\n\n- ecc-1234: remove the experimental high-level interface\n- ecc-1282: add codes_dump()\n\n\n1.3.4 (2021-08-27)\n--------------------\n\n- update documentation\n\n\n1.3.3 (2021-06-21)\n--------------------\n\n- ecc-1246: unicodedecodeerror when parsing bufr file\n\n\n1.3.2 (2021-04-16)\n--------------------\n\n- restore the experimental high-level interface\n\n\n1.3.1 (2021-04-16)\n--------------------\n\n- fix the recommended version\n\n\n1.3.0 (2021-04-09)\n--------------------\n\n- ecc-1231: remove the experimental high-level interface\n- added the \"findlibs\" module\n- fix tests/test_high_level_api.py when memfs enabled\n- ecc-1226: python3 bindings: typo causes attributeerror when calling codes_index_get_double\n\n\n1.2.0 (2021-03-23)\n--------------------\n\n- added test for multi-field gribs\n- fix deprecation warning: `np.float` is a deprecated alias for the builtin `float`\n- experimental feature: grib_nearest_find\n\n\n1.1.0 (2021-01-20)\n--------------------\n\n- ecc-1171: performance: python bindings: remove assert statements\n- ecc-1161: python3 bindings: do not raise exception on first failed attempt\n- ecc-1176: python3 bindings: float32 recognised as int instead of float\n- github pull request #41: remove the apparent support for python 2\n- github pull request #44: fix cffi crash on windows\n- github pull request #42: add unit testing with github actions (linux, macos and windows)\n\n\n1.0.0 (2020-10-14)\n--------------------\n\n- ecc-1143: cmake: migration to ecbuild v3.4\n- ecc-1133: c api: propagate const char* for codes_index_new_from_file and codes_index_select_string\n\n\n0.9.9 (2020-08-04)\n-------------------\n\n- support for ecmwflibs. an additional way to find ecmwf libraries (if available)\n- ecc-1140: segfault from invalid pointer reference in grib_set_double_array()\n\n\n0.9.8 (2020-06-26)\n-------------------\n\n- ecc-1110: removed obsolete function codes_close_file()\n- provide missing argument to exceptions\n- fix codes_set_definitions_path() typo\n- fix grib_get_double_element(). missing last argument\n- add more tests to increase coverage\n- github pull request #15: add .__next__() method to eccodes.codesfile class\n- ecc-1113: python3 bindings under windows: codes_get_long_array returns incorrect values\n- ecc-1108: python3 bindings under windows: use of handle causes crash\n- ecc-1121: segfault when closing gribfile if messages are closed manually\n\n\n0.9.6 (2020-03-10)\n-------------------\n\n- update copyright notices\n- function-argument type checks: improve error message\n- fix c function calls for codes_gribex_mode_on/codes_gribex_mode_off\n\n\n0.9.5 (2020-01-15)\n-------------------\n\n- ecc-1029: function-argument type-checking should be disabled by default.\n            to enable these checks, export eccodes_python_enable_type_checks=1\n- ecc-1032: added codes_samples_path() and codes_definition_path()\n- ecc-1042: python3 interface writes integer arrays incorrectly\n- ecc-794: python3 interface: expose the grib_get_data function\n\n\n0.9.4 (2019-11-27)\n------------------\n\n- added new function: codes_get_version_info\n- ecc-753: expose the codes_grib_nearest_find_multiple function in python\n- ecc-1007: python3 interface for eccodes cannot write large arrays\n\n\n0.9.3 (2019-10-04)\n------------------\n\n- new exception added: functionalitynotenablederror\n- bufr decoding: support for multi-element constant arrays (ecc-428)\n\n\n0.9.2 (2019-07-09)\n------------------\n\n- all eccodes tests now pass\n- simplify the xx_new_from_file calls\n- fix for grib_set_string_array\n- use eccodes_dir to locate the library\n- remove the new-style high-level interface. it is still available in\n  `cfgrib <https://github.com/ecmwf/cfgrib>`_.\n\n0.9.1 (2019-06-06)\n------------------\n\n- ``codes_get_long_array`` and ``codes_get_double_array`` now return a ``np.ndarray``.\n  see: `#3 <https://github.com/ecmwf/eccodes-python/issues/3>`_.\n\n\n0.9.0 (2019-05-07)\n------------------\n\n- declare the project as **beta**.\n\n\n0.8.0 (2019-04-08)\n------------------\n\n- first public release.\n",
  "docs_url": null,
  "keywords": "eccodes grib bufr",
  "license": "apache license version 2.0",
  "name": "eccodes",
  "package_url": "https://pypi.org/project/eccodes/",
  "project_url": "https://pypi.org/project/eccodes/",
  "project_urls": {
    "Homepage": "https://github.com/ecmwf/eccodes-python"
  },
  "release_url": "https://pypi.org/project/eccodes/1.6.1/",
  "requires_dist": [],
  "requires_python": "",
  "summary": "python interface to the eccodes grib and bufr decoder/encoder",
  "version": "1.6.1",
  "releases": [],
  "developers": [
    "european_centre_for_medium",
    "software.support@ecmwf.int"
  ],
  "kwds": "eccodes_python_enable_type_checks eccodes eccodes_dir gribfile python3",
  "license_kwds": "apache license version 2.0",
  "libtype": "pypi",
  "id": "pypi_eccodes",
  "homepage": "https://github.com/ecmwf/eccodes-python",
  "release_count": 20,
  "dependency_ids": []
}
{
  "classifiers": [],
  "description": "# color-hash\n\n**generate a color based on a value**\n\nthis module generates a color based on an object, by calculating a color value\nbased on a hash value for the object. this means the result is deterministic:\nthe same value will always result in the same color (so long as the hash\nfunction remains deterministic).\n\nthis module is a port of the [color-hash javascript library](https://github.com/zenozeng/color-hash).\n\nit supports python 3.7+ and it has no dependencies.\n\n## quick start\n\n```python\n>>> from colorhash import colorhash\n>>> c = colorhash('hello world')\n>>> c.hsl\n(131, 0.65, 0.5)\n>>> c.rgb\n(45, 210, 75)\n>>> c.hex\n'#2dd24b'\n```\n\n## installation\n\nits hosted on pypi.\n\n```bash\npip install colorhash\n```\n\n## advanced usage\n\nyou can influence every aspect of final color. **default values** are following:\n\n```python\ncolorhash(\n    obj: any,\n    lightness: sequence[float, ...] = (0.35, 0.5, 0.65),  #\u00a0picks 'randomly' one\n    saturation: sequence[float, ...] = (0.35, 0.5, 0.65),  #\u00a0picks 'randomly' one\n    min_h: optional[int] = none,  #\u00a0hue, min 0\n    max_h: optional[int] = none,  #\u00a0hue, max 360\n)\n```\n\nbut be careful, **setting tight conditions may result in very similar colors**. see example tables.\n\nyou can fix lightness or saturation to single value(s) by using sequence with 1 element (eg. `[0.5]`).\n\n| code                                  | hex       | color                           |\n|:--------------------------------------|:---------:|:-------------------------------:|\n| `colorhash('hey')  # default` | `#782d86` | ![#782d86](./docs/782d86.png) |\n| `colorhash('hey', lightness=[0.55])` | `#b453c6` | ![#b453c6](./docs/b453c6.png) |\n| `colorhash('hey', lightness=[0.75])` | `#d69fdf` | ![#d69fdf](./docs/d69fdf.png) |\n| `colorhash('hey', lightness=[0.95])` | `#f7ecf9` | ![#f7ecf9](./docs/f7ecf9.png) |\n| `colorhash('hey', saturation=[0.15])` | `#8d6c93` | ![#8d6c93](./docs/8d6c93.png) |\n| `colorhash('hey', saturation=[0.55])` | `#b139c6` | ![#b139c6](./docs/b139c6.png) |\n| `colorhash('hey', saturation=[0.95])` | `#d406f9` | ![#d406f9](./docs/d406f9.png) |\n| `colorhash('hey', lightness=[0.95], saturation=[0.95])` | `#fbe6fe` | ![#fbe6fe](./docs/fbe6fe.png) |\n| `colorhash('oh', lightness=[0.95], saturation=[0.95])` | `#fef0e6` | ![#fef0e6](./docs/fef0e6.png) |\n| `colorhash('boi', lightness=[0.95], saturation=[0.95])` | `#e6fee7` | ![#e6fee7](./docs/e6fee7.png) |\n\nyou can set hue range or even fix it by setting `min_h` = `max_h`.\n\n| code                                  | hex       | color                           |\n|:--------------------------------------|:---------:|:-------------------------------:|\n| `colorhash('hey', min_h=150)` | `#2d5886` | ![#2d5886](./docs/2d5886.png) |\n| `colorhash('hey', min_h=300)` | `#862d6c` | ![#862d6c](./docs/862d6c.png) |\n| `colorhash('hey', max_h=150)` | `#866e2d` | ![#866e2d](./docs/866e2d.png) |\n| `colorhash('hey', min_h=150, max_h=360)` | `#2d5886` | ![#2d5886](./docs/2d5886.png) |\n| `colorhash('hey', min_h=150, max_h=150)  # fixed hue` | `#2d8659` | ![#2d8659](./docs/2d8659.png) |\n\nor you can let `colorhash` decide between combination of many `lightness` and `saturation` options (mind `min_h` and `max_h` are equal in this example).\n\n| code                                  | hex       | color                           |\n|:--------------------------------------|:---------:|:-------------------------------:|\n| `colorhash('stick', min_h=65, max_h=65, saturation=[x/10 for x in range(1, 10)], lightness=[x/10 for x in range(1, 10)])` | `#869108` | ![#869108](./docs/869108.png) |\n| `colorhash('with', min_h=65, max_h=65, saturation=[x/10 for x in range(1, 10)], lightness=[x/10 for x in range(1, 10)])` | `#eef5a3` | ![#eef5a3](./docs/eef5a3.png) |\n| `colorhash('one', min_h=65, max_h=65, saturation=[x/10 for x in range(1, 10)], lightness=[x/10 for x in range(1, 10)])` | `#ddeb47` | ![#ddeb47](./docs/ddeb47.png) |\n\nfinally some bad examples. when you set too strict rules, colors may be almost identical.\n\n| code                                  | hex       | color                           |\n|:--------------------------------------|:---------:|:-------------------------------:|\n| `colorhash('lets', lightness=[0.95], saturation=[0.95], min_h=300)` | `#fee6f8` | ![#fee6f8](./docs/fee6f8.png) |\n| `colorhash('break', lightness=[0.95], saturation=[0.95], min_h=300)` | `#fee6fb` | ![#fee6fb](./docs/fee6fb.png) |\n| `colorhash('it', lightness=[0.95], saturation=[0.95], min_h=300)` | `#fee6fa` | ![#fee6fa](./docs/fee6fa.png) |\n| `colorhash('here', min_h=150, max_h=150)` | `#6ce0a6` | ![#6ce0a6](./docs/6ce0a6.png) |\n| `colorhash('goes', min_h=150, max_h=150)` | `#79d2a6` | ![#79d2a6](./docs/79d2a6.png) |\n| `colorhash('almost', min_h=150, max_h=150)` | `#6ce0a6` | ![#6ce0a6](./docs/6ce0a6.png) |\n| `colorhash('same', min_h=150, max_h=150)` | `#79d2a6` | ![#79d2a6](./docs/79d2a6.png) |\n| `colorhash('color', min_h=150, max_h=150)` | `#6ce0a6` | ![#6ce0a6](./docs/6ce0a6.png) |\n\n\n## changelog\n\n- color-hash **2.0.0** *(2023-09-22)*\n  - \u2728 expose params to influence colors\n  - \u2728 runtime validation of input params\n  - \ud83d\udcdd update docs for advanced usage\n- color-hash **1.3.2** *(2023-09-21)*\n  - \u26a1\ufe0f 30%+ speedup on `hsl2rgb()`\n  - \u2705 add tests for all named colors (1500+ tests)\n- color-hash **1.3.1** *(2023-09-21)*\n  - \ud83d\udc1b handle missing `importlib-metadata` import\n- color-hash **1.3.0** *(2023-09-20)*\n  - \ud83e\uddd1\u200d\ud83d\udcbb add `py.typed` to support type annotations (#4)\n  - \ud83d\udce6 changed packaging ecosystem\n    - \u2796 remove `poetry`\n    - \u2796 remove `tox`\n    - \u2795 add `pip-tools` (manage dependencies)\n    - \u2795 add `hatch` (build & test)\n    - \u2795 add `twine` (publish)\n  - \u2728 support `python3.11`\n  - \u26b0\ufe0f drop support for `python3.6` (downloads from pypi are under 1%)\n- color-hash **1.2.2** *(2022-10-17)*\n  - \u2728 add publish helper script\n- color-hash **1.2.1** *(2022-10-17)*\n  - \ud83d\udcdd update docs\n- color-hash **1.2.0** *(2022-10-17)*\n  - \ud83e\uddd1\u200d\ud83d\udcbb use typing supporting `python3.6`\n- color-hash **1.1.0** *(2022-09-01)*\n  - \u2705 add tests\n  - \ud83d\udeb8 add installation instructions\n- color-hash **1.0.4** *(2021-11-30)*\n  - support only for `python3.6+`\n  - \u2705 add tests\n- color-hash **1.0.3** *(2020-12-04)*\n  - \u26b0\ufe0f drop support for `python2.x`\n  - \ud83c\udf89 handover of project maintenance\n- color-hash **1.0.2** *(2016-07-08)*\n  - \u2728 add ``crc32_hash`` function and set default hashfunc to that. it's not\n    fully backwards-compatible, but i don't want to bump the version a lot for\n    not doing my research.\n- color-hash **1.0.0** *(2016-07-07)*\n  - \ud83c\udf89 initial port.\n\n## speed comparison\n\nrunning `pytest` (1600+ tests) on different python versions.\n\n| python | secs    |\n| :----: | :-----: |\n| 3.7    | `1.252` |\n| 3.8    | `1.239` |\n| 3.9    | `0.720` |\n| 3.10   | `0.690` |\n| 3.11   | `0.892` |\n\n## license\n\ncopyright (c) 2016 felix krull <f_krull@gmx.de>\n\nthis is a port of the 'color-hash' javascript library which is:\n\ncopyright (c) 2015 zeno zeng\n\npermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"software\"), to deal in\nthe software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe software, and to permit persons to whom the software is furnished to do so,\nsubject to the following conditions:\n\nthe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the software.\n\nthe software is provided \"as is\", without warranty of any kind, express or\nimplied, including but not limited to the warranties of merchantability, fitness\nfor a particular purpose and noninfringement. in no event shall the authors or\ncopyright holders be liable for any claim, damages or other liability, whether\nin an action of contract, tort or otherwise, arising from, out of or in\nconnection with the software or the use or other dealings in the software.\n",
  "docs_url": null,
  "keywords": "color,hash,hex,hsl,rgb",
  "license": "mit",
  "name": "colorhash",
  "package_url": "https://pypi.org/project/colorhash/",
  "project_url": "https://pypi.org/project/colorhash/",
  "project_urls": {
    "Bug Tracker": "https://github.com/dimostenis/color-hash-python/issues",
    "Homepage": "https://github.com/dimostenis/color-hash-python"
  },
  "release_url": "https://pypi.org/project/colorhash/2.0.0/",
  "requires_dist": [
    "black; extra == 'dev'",
    "pillow; extra == 'dev'",
    "pre-commit; extra == 'dev'",
    "pytest; extra == 'dev'"
  ],
  "requires_python": ">=3.6",
  "summary": "generate color based on any object",
  "version": "2.0.0",
  "releases": [],
  "developers": [
    "dimosh3k@gmail.com",
    "f_krull@gmx.de"
  ],
  "kwds": "colorhash hash colors crc32_hash color",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_colorhash",
  "homepage": "",
  "release_count": 11,
  "dependency_ids": [
    "pypi_black",
    "pypi_pillow",
    "pypi_pre_commit",
    "pypi_pytest"
  ]
}
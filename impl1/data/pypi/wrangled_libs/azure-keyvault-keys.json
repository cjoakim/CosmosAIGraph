{
  "classifiers": [
    "development status :: 5 - production/stable",
    "license :: osi approved :: mit license",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9"
  ],
  "description": "microsoft azure key vault keys client library for python\n# azure key vault keys client library for python\nazure key vault helps solve the following problems:\n- cryptographic key management (this library) - create, store, and control\naccess to the keys used to encrypt your data\n- secrets management\n([azure-keyvault-secrets](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-secrets)) -\nsecurely store and control access to tokens, passwords, certificates, api keys,\nand other secrets\n- certificate management\n([azure-keyvault-certificates](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-certificates)) -\ncreate, manage, and deploy public and private ssl/tls certificates\n- vault administration ([azure-keyvault-administration](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-administration)) - role-based access control (rbac), and vault-level backup and restore options\n\n[source code][library_src]\n| [package (pypi)][pypi_package_keys]\n| [package (conda)](https://anaconda.org/microsoft/azure-keyvault/)\n| [api reference documentation][reference_docs]\n| [product documentation][azure_keyvault]\n| [samples][key_samples]\n\n## _disclaimer_\n\n_azure sdk python packages support for python 2.7 has ended 01 january 2022. for more information and questions, please refer to https://github.com/azure/azure-sdk-for-python/issues/20691_.\n\n_python 3.7 or later is required to use this package. for more details, please refer to [azure sdk for python version support policy](https://github.com/azure/azure-sdk-for-python/wiki/azure-sdks-python-version-support-policy)._\n\n## getting started\n### install the package\ninstall [azure-keyvault-keys][pypi_package_keys] and\n[azure-identity][azure_identity_pypi] with [pip][pip]:\n```bash\npip install azure-keyvault-keys azure-identity\n```\n[azure-identity][azure_identity] is used for azure active directory\nauthentication as demonstrated below.\n\n### prerequisites\n* an [azure subscription][azure_sub]\n* python 3.7 or later\n* an existing [azure key vault][azure_keyvault]. if you need to create one, you can do so using the azure cli by following the steps in [this document][azure_keyvault_cli].\n* if using managed hsm, an existing [key vault managed hsm][managed_hsm]. if you need to create a managed hsm, you can do so using the azure cli by following the steps in [this document][managed_hsm_cli].\n\n### authenticate the client\nin order to interact with the azure key vault service, you will need an instance of a [keyclient][key_client_docs], as well as a **vault url** and a credential object. this document demonstrates using a [defaultazurecredential][default_cred_ref], which is appropriate for most scenarios, including local development and production environments. we recommend using a [managed identity][managed_identity] for authentication in production environments.\n\nsee [azure-identity][azure_identity] documentation for more information about other methods of authentication and their corresponding credential types.\n\n#### create a client\nafter configuring your environment for the [defaultazurecredential][default_cred_ref] to use a suitable method of authentication, you can do the following to create a key client (replacing the value of `vault_url` with your vault's url):\n\n<!-- snippet:hello_world.create_a_key_client -->\n\n```python\nvault_url = os.environ[\"vault_url\"]\ncredential = defaultazurecredential()\nclient = keyclient(vault_url=vault_url, credential=credential)\n```\n\n<!-- end snippet -->\n\n> **note:** for an asynchronous client, import `azure.keyvault.keys.aio`'s `keyclient` instead.\n\n## key concepts\n### keys\nazure key vault can create and store rsa and elliptic curve keys. both can\noptionally be protected by hardware security modules (hsms). azure key vault\ncan also perform cryptographic operations with them. for more information about\nkeys and supported operations and algorithms, see the\n[key vault documentation](https://docs.microsoft.com/azure/key-vault/keys/about-keys).\n\n[keyclient][key_client_docs] can create keys in the vault, get existing keys\nfrom the vault, update key metadata, and delete keys, as shown in the\n[examples](#examples) below.\n\n## examples\nthis section contains code snippets covering common tasks:\n* [create a key](#create-a-key)\n* [retrieve a key](#retrieve-a-key)\n* [update an existing key](#update-an-existing-key)\n* [delete a key](#delete-a-key)\n* [configure automatic key rotation](#configure-automatic-key-rotation)\n* [list keys](#list-keys)\n* [perform cryptographic operations](#cryptographic-operations)\n* [async api](#async-api)\n* [asynchronously create a key](#asynchronously-create-a-key)\n* [asynchronously list keys](#asynchronously-list-keys)\n\n### create a key\n[create_rsa_key](https://aka.ms/azsdk/python/keyvault-keys/docs#azure.keyvault.keys.keyclient.create_rsa_key) and\n[create_ec_key](https://aka.ms/azsdk/python/keyvault-keys/docs#azure.keyvault.keys.keyclient.create_ec_key)\ncreate rsa and elliptic curve keys in the vault, respectively. if a key with the same name already exists, a new version\nof that key is created.\n\n```python\nfrom azure.identity import defaultazurecredential\nfrom azure.keyvault.keys import keyclient\n\ncredential = defaultazurecredential()\n\nkey_client = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\n# create an rsa key\nrsa_key = key_client.create_rsa_key(\"rsa-key-name\", size=2048)\nprint(rsa_key.name)\nprint(rsa_key.key_type)\n\n# create an elliptic curve key\nec_key = key_client.create_ec_key(\"ec-key-name\", curve=\"p-256\")\nprint(ec_key.name)\nprint(ec_key.key_type)\n```\n\n### retrieve a key\n[get_key](https://aka.ms/azsdk/python/keyvault-keys/docs#azure.keyvault.keys.keyclient.get_key) retrieves a key\npreviously stored in the vault.\n```python\nfrom azure.identity import defaultazurecredential\nfrom azure.keyvault.keys import keyclient\n\ncredential = defaultazurecredential()\n\nkey_client = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\nkey = key_client.get_key(\"key-name\")\nprint(key.name)\n```\n\n### update an existing key\n[update_key_properties](https://aka.ms/azsdk/python/keyvault-keys/docs#azure.keyvault.keys.keyclient.update_key_properties)\nupdates the properties of a key previously stored in the key vault.\n```python\nfrom azure.identity import defaultazurecredential\nfrom azure.keyvault.keys import keyclient\n\ncredential = defaultazurecredential()\n\nkey_client = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\n# we will now disable the key for further use\nupdated_key = key_client.update_key_properties(\"key-name\", enabled=false)\n\nprint(updated_key.name)\nprint(updated_key.properties.enabled)\n```\n\n### delete a key\n[begin_delete_key](https://aka.ms/azsdk/python/keyvault-keys/docs#azure.keyvault.keys.keyclient.begin_delete_key)\nrequests key vault delete a key, returning a poller which allows you to wait for the deletion to finish. waiting is\nhelpful when the vault has [soft-delete][soft_delete] enabled, and you want to purge (permanently delete) the key as\nsoon as possible. when [soft-delete][soft_delete] is disabled, `begin_delete_key` itself is permanent.\n\n```python\nfrom azure.identity import defaultazurecredential\nfrom azure.keyvault.keys import keyclient\n\ncredential = defaultazurecredential()\n\nkey_client = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\ndeleted_key = key_client.begin_delete_key(\"key-name\").result()\n\nprint(deleted_key.name)\nprint(deleted_key.deleted_date)\n```\n\n### configure automatic key rotation\n[update_key_rotation_policy](https://azuresdkdocs.blob.core.windows.net/$web/python/azure-keyvault-keys/4.5.0b5/azure.keyvault.keys.html#azure.keyvault.keys.keyclient.update_key_rotation_policy)\nallows you to configure automatic key rotation for a key by specifying a rotation policy.\nin addition,\n[rotate_key](https://azuresdkdocs.blob.core.windows.net/$web/python/azure-keyvault-keys/4.5.0b5/azure.keyvault.keys.html#azure.keyvault.keys.keyclient.rotate_key)\nallows you to rotate a key on-demand by creating a new version of the given key.\n\n```python\nfrom azure.identity import defaultazurecredential\nfrom azure.keyvault.keys import keyclient, keyrotationlifetimeaction, keyrotationpolicyaction\n\ncredential = defaultazurecredential()\nkey_client = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\n# set the key's automated rotation policy to rotate the key 30 days before the key expires\nactions = [keyrotationlifetimeaction(keyrotationpolicyaction.rotate, time_before_expiry=\"p30d\")]\n# you may also specify the duration after which the newly rotated key will expire\n# in this example, any new key versions will expire after 90 days\nupdated_policy = key_client.update_key_rotation_policy(\"key-name\", expires_in=\"p90d\", lifetime_actions=actions)\n\n# you can get the current rotation policy for a key with get_key_rotation_policy\ncurrent_policy = key_client.get_key_rotation_policy(\"key-name\")\n\n# finally, you can rotate a key on-demand by creating a new version of the key\nrotated_key = key_client.rotate_key(\"key-name\")\n```\n\n### list keys\n[list_properties_of_keys](https://aka.ms/azsdk/python/keyvault-keys/docs#azure.keyvault.keys.keyclient.list_properties_of_keys)\nlists the properties of all of the keys in the client's vault.\n\n```python\nfrom azure.identity import defaultazurecredential\nfrom azure.keyvault.keys import keyclient\n\ncredential = defaultazurecredential()\n\nkey_client = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\nkeys = key_client.list_properties_of_keys()\n\nfor key in keys:\n    # the list doesn't include values or versions of the keys\n    print(key.name)\n```\n\n### cryptographic operations\n[cryptographyclient](https://aka.ms/azsdk/python/keyvault-keys/crypto/docs#azure.keyvault.keys.crypto.cryptographyclient)\nenables cryptographic operations (encrypt/decrypt, wrap/unwrap, sign/verify) using a particular key.\n\n```python\nfrom azure.identity import defaultazurecredential\nfrom azure.keyvault.keys import keyclient\nfrom azure.keyvault.keys.crypto import cryptographyclient, encryptionalgorithm\n\ncredential = defaultazurecredential()\nkey_client = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\nkey = key_client.get_key(\"key-name\")\ncrypto_client = cryptographyclient(key, credential=credential)\nplaintext = b\"plaintext\"\n\nresult = crypto_client.encrypt(encryptionalgorithm.rsa_oaep, plaintext)\ndecrypted = crypto_client.decrypt(result.algorithm, result.ciphertext)\n```\n\nsee the\n[package documentation][crypto_client_docs]\nfor more details of the cryptography api.\n\n### async api\nthis library includes a complete set of async apis. to use them, you must\nfirst install an async transport, such as [aiohttp](https://pypi.org/project/aiohttp/).\nsee\n[azure-core documentation](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/client_library_developer.md#transport)\nfor more information.\n\nasync clients and credentials should be closed when they're no longer needed. these\nobjects are async context managers and define async `close` methods. for\nexample:\n\n```python\nfrom azure.identity.aio import defaultazurecredential\nfrom azure.keyvault.keys.aio import keyclient\n\ncredential = defaultazurecredential()\n\n# call close when the client and credential are no longer needed\nclient = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n...\nawait client.close()\nawait credential.close()\n\n# alternatively, use them as async context managers (contextlib.asyncexitstack can help)\nclient = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\nasync with client:\n  async with credential:\n    ...\n```\n\n### asynchronously create a key\n[create_rsa_key](https://aka.ms/azsdk/python/keyvault-keys/aio/docs#azure.keyvault.keys.aio.keyclient.create_rsa_key) and\n[create_ec_key](https://aka.ms/azsdk/python/keyvault-keys/aio/docs#azure.keyvault.keys.aio.keyclient.create_ec_key)\ncreate rsa and elliptic curve keys in the vault, respectively. if a key with the same name already exists, a new\nversion of the key is created.\n\n```python\nfrom azure.identity.aio import defaultazurecredential\nfrom azure.keyvault.keys.aio import keyclient\n\ncredential = defaultazurecredential()\nkey_client = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\n# create an rsa key\nrsa_key = await key_client.create_rsa_key(\"rsa-key-name\", size=2048)\nprint(rsa_key.name)\nprint(rsa_key.key_type)\n\n# create an elliptic curve key\nec_key = await key_client.create_ec_key(\"ec-key-name\", curve=\"p-256\")\nprint(ec_key.name)\nprint(ec_key.key_type)\n```\n\n### asynchronously list keys\n[list_properties_of_keys](https://aka.ms/azsdk/python/keyvault-keys/aio/docs#azure.keyvault.keys.aio.keyclient.list_properties_of_keys)\nlists the properties of all of the keys in the client's vault.\n\n```python\nfrom azure.identity.aio import defaultazurecredential\nfrom azure.keyvault.keys.aio import keyclient\n\ncredential = defaultazurecredential()\nkey_client = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\nkeys = key_client.list_properties_of_keys()\n\nasync for key in keys:\n    print(key.name)\n```\n\n## troubleshooting\n\nsee the `azure-keyvault-keys`\n[troubleshooting guide](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-keys/troubleshooting.md)\nfor details on how to diagnose various failure scenarios.\n\n### general\nkey vault clients raise exceptions defined in [azure-core][azure_core_exceptions].\nfor example, if you try to get a key that doesn't exist in the vault, [keyclient][key_client_docs]\nraises [resourcenotfounderror](https://aka.ms/azsdk-python-core-exceptions-resource-not-found-error):\n\n```python\nfrom azure.identity import defaultazurecredential\nfrom azure.keyvault.keys import keyclient\nfrom azure.core.exceptions import resourcenotfounderror\n\ncredential = defaultazurecredential()\nkey_client = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\ntry:\n    key_client.get_key(\"which-does-not-exist\")\nexcept resourcenotfounderror as e:\n    print(e.message)\n```\n\n### logging\nthis library uses the standard\n[logging](https://docs.python.org/3/library/logging.html) library for logging.\nbasic information about http sessions (urls, headers, etc.) is logged at info\nlevel.\n\ndetailed debug level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the `logging_enable` argument:\n```python\nfrom azure.identity import defaultazurecredential\nfrom azure.keyvault.keys import keyclient\nimport sys\nimport logging\n\n# create a logger for the 'azure' sdk\nlogger = logging.getlogger('azure')\nlogger.setlevel(logging.debug)\n\n# configure a console output\nhandler = logging.streamhandler(stream=sys.stdout)\nlogger.addhandler(handler)\n\ncredential = defaultazurecredential()\n\n# this client will log detailed information about its http sessions, at debug level\nclient = keyclient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential, logging_enable=true)\n```\n\nsimilarly, `logging_enable` can enable detailed logging for a single operation,\neven when it isn't enabled for the client:\n```python\nclient.get_key(\"my-key\", logging_enable=true)\n```\n\n## next steps\nseveral samples are available in the azure sdk for python github repository.\nthese provide example code for additional key vault scenarios:\n| file | description |\n|-------------|-------------|\n| [hello_world.py][hello_world_sample] ([async version][hello_world_async_sample]) | create/get/update/delete keys |\n| [list_operations.py][list_operations_sample] ([async version][list_operations_async_sample]) | basic list operations for keys |\n| [backup_restore_operations.py][backup_operations_sample] ([async version][backup_operations_async_sample]) | back up and recover keys |\n| [recover_purge_operations.py][recover_purge_sample] ([async version][recover_purge_async_sample]) | recover and purge keys |\n| [send_request.py][send_request_sample] | use the `send_request` client method |\n\n###  additional documentation\nfor more extensive documentation on azure key vault, see the\n[api reference documentation][reference_docs].\n\n## contributing\nthis project welcomes contributions and suggestions. most contributions require\nyou to agree to a contributor license agreement (cla) declaring that you have\nthe right to, and actually do, grant us the rights to use your contribution.\nfor details, visit https://cla.microsoft.com.\n\nwhen you submit a pull request, a cla-bot will automatically determine whether\nyou need to provide a cla and decorate the pr appropriately (e.g., label,\ncomment). simply follow the instructions provided by the bot. you will only\nneed to do this once across all repos using our cla.\n\nthis project has adopted the [microsoft open source code of conduct][code_of_conduct].\nfor more information, see the\n[code of conduct faq](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact opencode@microsoft.com with any additional questions or comments.\n\n\n<!-- links -->\n[azure_core_exceptions]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/core/azure-core#azure-core-library-exceptions\n[azure_identity]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/identity/azure-identity\n[azure_identity_pypi]: https://pypi.org/project/azure-identity/\n[azure_keyvault]: https://docs.microsoft.com/azure/key-vault/\n[azure_keyvault_cli]: https://docs.microsoft.com/azure/key-vault/general/quick-create-cli\n[azure_sub]: https://azure.microsoft.com/free/\n\n[backup_operations_sample]: https://github.com/azure/azure-sdk-for-python/blob/main/sdk/keyvault/azure-keyvault-keys/samples/backup_restore_operations.py\n[backup_operations_async_sample]: https://github.com/azure/azure-sdk-for-python/blob/main/sdk/keyvault/azure-keyvault-keys/samples/backup_restore_operations_async.py\n\n[code_of_conduct]: https://opensource.microsoft.com/codeofconduct/\n[crypto_client_docs]: https://aka.ms/azsdk/python/keyvault-keys/crypto/docs\n\n[default_cred_ref]: https://aka.ms/azsdk/python/identity/docs#azure.identity.defaultazurecredential\n\n[hello_world_sample]: https://github.com/azure/azure-sdk-for-python/blob/main/sdk/keyvault/azure-keyvault-keys/samples/hello_world.py\n[hello_world_async_sample]: https://github.com/azure/azure-sdk-for-python/blob/main/sdk/keyvault/azure-keyvault-keys/samples/hello_world_async.py\n\n[key_client_docs]: https://aka.ms/azsdk/python/keyvault-keys/docs#azure.keyvault.keys.keyclient\n[key_samples]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-keys/samples\n\n[library_src]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys\n[list_operations_sample]: https://github.com/azure/azure-sdk-for-python/blob/main/sdk/keyvault/azure-keyvault-keys/samples/list_operations.py\n[list_operations_async_sample]: https://github.com/azure/azure-sdk-for-python/blob/main/sdk/keyvault/azure-keyvault-keys/samples/list_operations_async.py\n\n[managed_hsm]: https://docs.microsoft.com/azure/key-vault/managed-hsm/overview\n[managed_hsm_cli]: https://docs.microsoft.com/azure/key-vault/managed-hsm/quick-create-cli\n[managed_identity]: https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/overview\n\n[pip]: https://pypi.org/project/pip/\n[pypi_package_keys]: https://pypi.org/project/azure-keyvault-keys/\n\n[recover_purge_sample]: https://github.com/azure/azure-sdk-for-python/blob/main/sdk/keyvault/azure-keyvault-keys/samples/recover_purge_operations.py\n[recover_purge_async_sample]: https://github.com/azure/azure-sdk-for-python/blob/main/sdk/keyvault/azure-keyvault-keys/samples/recover_purge_operations_async.py\n[reference_docs]: https://aka.ms/azsdk/python/keyvault-keys/docs\n\n[send_request_sample]: https://github.com/azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-keys/samples/send_request.py\n[soft_delete]: https://docs.microsoft.com/azure/key-vault/general/soft-delete-overview\n\n![impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2fsdk%2fkeyvault%2fazure-keyvault-keys%2freadme.png)\n\n\n# release history\n\n## 4.8.0 (2023-03-16)\n\n### features added\n- added support for service api version `7.4`\n- clients each have a `send_request` method that can be used to send custom requests using the\n  client's existing pipeline ([#25172](https://github.com/azure/azure-sdk-for-python/issues/25172))\n- (from 4.8.0b1) an attempt will be made to generate an iv if one isn't provided for local encryption\n  ([#25380](https://github.com/azure/azure-sdk-for-python/pull/25380))\n\n### breaking changes\n> these changes do not impact the api of stable versions such as 4.7.0. only code written against a beta version such as 4.8.0b2 may be affected.\n- removed support for octet key pair (okp) keys and operations\n\n### other changes\n- key vault api version `7.4` is now the default\n- (from 4.8.0b1) python 3.6 is no longer supported. please use python version 3.7 or later.\n- (from 4.8.0b1) updated minimum `azure-core` version to 1.24.0\n- (from 4.8.0b1) updated minimum `msrest` version to 0.7.1\n- (from 4.8.0b2) dropped `msrest` requirement\n- (from 4.8.0b2) dropped `six` requirement\n- (from 4.8.0b2) added requirement for `isodate>=0.6.1` (`isodate` was required by `msrest`)\n- (from 4.8.0b2) added requirement for `typing-extensions>=4.0.1`\n\n## 4.8.0b2 (2022-11-15)\n\n### features added\n- added support for service api version `7.4-preview.1`\n- `keyclient` has a `create_okp_key` method to create an octet key pair (okp) on managed hsm\n- added `eddsa` to `signaturealgorithm` enum to support signing and verifying using an\n  edwards-curve digital signature algorithm (eddsa) on managed hsm\n- added `okp` and `okp_hsm` to `keytype` enum for octet key pairs\n- added `ed25519` to `keycurvename` enum to support use of the ed25519 edwards curve\n\n### other changes\n- key vault api version `7.4-preview.1` is now the default\n- dropped `msrest` requirement\n- dropped `six` requirement\n- added requirement for `isodate>=0.6.1` (`isodate` was required by `msrest`)\n- added requirement for `typing-extensions>=4.0.1`\n\n## 4.8.0b1 (2022-09-22)\n\n### features added\n- an attempt will be made to generate an iv if one isn't provided for local encryption\n  ([#25380](https://github.com/azure/azure-sdk-for-python/pull/25380))\n\n### other changes\n- python 3.6 is no longer supported. please use python version 3.7 or later.\n- updated minimum `azure-core` version to 1.24.0\n- updated minimum `msrest` version to 0.7.1\n\n## 4.7.0 (2022-09-19)\n\n### breaking changes\n- clients verify the challenge resource matches the vault domain. this should affect few customers,\n  who can provide `verify_challenge_resource=false` to client constructors to disable.\n  see https://aka.ms/azsdk/blog/vault-uri for more information.\n\n### other changes\n- changes from version 4.7.0b1 have been reverted and will be included in version 4.8.0b1\n\n## 4.7.0b1 (2022-08-12)\n\n### features added\n- an attempt will be made to generate an iv if one isn't provided for local encryption\n  ([#25380](https://github.com/azure/azure-sdk-for-python/pull/25380))\n\n### other changes\n- the most recent release was version 4.6.1 instead of the intended version, 4.5.2.\n  the next stable release is planned to be version 4.7.0.\n- python 3.6 is no longer supported. please use python version 3.7 or later.\n- updated minimum `azure-core` version to 1.24.0\n\n## 4.6.1 (2022-08-11)\n\n### other changes\n- documentation improvements \n  ([#25039](https://github.com/azure/azure-sdk-for-python/issues/25039))\n\n## 4.6.0b1 (2022-06-07)\n\n### bugs fixed\n- if a key's id contains a port number, this port will now be preserved in the vault url of a\n  `cryptographyclient` instance created from this key\n  ([#24446](https://github.com/azure/azure-sdk-for-python/issues/24446))\n  - port numbers are now preserved in the `vault_url` property of a `keyvaultkeyidentifier`\n\n## 4.5.1 (2022-04-18)\n\n### bugs fixed\n- fixed error that could occur when fetching a key rotation policy that has no defined\n  `lifetime_actions`.\n\n## 4.5.0 (2022-03-28)\n\n### features added\n- key vault api version 7.3 is now the default\n- added support for multi-tenant authentication when using `azure-identity`\n  1.8.0 or newer ([#20698](https://github.com/azure/azure-sdk-for-python/issues/20698))\n- (from 4.5.0b1) `keyclient` has a `get_random_bytes` method for getting a requested number of\n  random bytes from a managed hsm\n- (from 4.5.0b2) added support for secure key release from a managed hsm\n  ([#19588](https://github.com/azure/azure-sdk-for-python/issues/19588))\n  - added `release_key` method to `keyclient` for releasing the private component of a key\n  - added `exportable` and `release_policy` keyword-only arguments to key creation and import\n    methods\n  - added `keyexportencryptionalgorithm` enum for specifying an encryption algorithm to be used\n    in key release\n- (from 4.5.0b4) added `keyclient.get_cryptography_client`, which provides a simple way to\n  create a `cryptographyclient` for a key, given its name and optionally a version\n  ([#20621](https://github.com/azure/azure-sdk-for-python/issues/20621))\n- (from 4.5.0b4) added support for automated and on-demand key rotation in azure key vault\n  ([#19840](https://github.com/azure/azure-sdk-for-python/issues/19840))\n  - added `keyclient.rotate_key` to rotate a key on-demand\n  - added `keyclient.update_key_rotation_policy` to update a key's automated rotation policy\n- (from 4.5.0b6) added `immutable` keyword-only argument and property to `keyreleasepolicy` to\n  support immutable release policies. once a release policy is marked as immutable, it can no\n  longer be modified.\n\n### breaking changes\n> these changes do not impact the api of stable versions such as 4.4.0.\n> only code written against a beta version such as 4.5.0b1 may be affected.\n- `keyclient.update_key_rotation_policy` accepts a required `policy` argument\n  ([#22981](https://github.com/azure/azure-sdk-for-python/issues/22981))\n- the optional `version` parameter in `keyclient.release_key` is now a keyword-only argument\n  ([#22981](https://github.com/azure/azure-sdk-for-python/issues/22981))\n- renamed the `name` parameter in `keyclient.get_key_rotation_policy` and\n  `keyclient.update_key_rotation_policy` to `key_name`\n  ([#22981](https://github.com/azure/azure-sdk-for-python/issues/22981))\n- enum values in `azure-keyvault-keys` are now uniformly lower-cased\n  ([#22981](https://github.com/azure/azure-sdk-for-python/issues/22981))\n\n### bugs fixed\n- `keytype` now ignores casing during declaration, which resolves a scenario where key vault\n  keys created with non-standard casing could not be fetched with the sdk\n  ([#22797](https://github.com/azure/azure-sdk-for-python/issues/22797))\n\n### other changes\n- (from 4.5.0b6) python 2.7 is no longer supported. please use python version 3.6 or later.\n- (from 4.5.0b6) updated minimum `azure-core` version to 1.20.0\n- (from 4.5.0b3) updated type hints to fix mypy errors\n  ([#19158](https://github.com/azure/azure-sdk-for-python/issues/19158))\n- (from 4.5.0b4) `cryptographyclient` no longer requires a key version when providing a key id to its constructor\n  (though providing a version is still recommended)\n- (from 4.5.0b5) to support multi-tenant authentication, `get_token` calls during challenge\n  authentication requests now pass in a `tenant_id` keyword argument\n  ([#20698](https://github.com/azure/azure-sdk-for-python/issues/20698)). see\n  https://aka.ms/azsdk/python/identity/tokencredential for more details on how to integrate\n  this parameter if `get_token` is implemented by a custom credential.\n- (from 4.5.0b6) updated type hints for `keyproperties` model's `managed`, `exportable`, and\n  `release_policy` properties ([#22368](https://github.com/azure/azure-sdk-for-python/pull/22368))\n\n## 4.5.0b6 (2022-02-08)\n\n### features added\n- added `immutable` keyword-only argument and property to `keyreleasepolicy` to support immutable\n  release policies. once a release policy is marked as immutable, it can no longer be modified.\n\n### breaking changes\n> these changes do not impact the api of stable versions such as 4.4.0.\n> only code written against a beta version such as 4.5.0b1 may be affected.\n- renamed the required argument `data` in `keyreleasepolicy`'s constructor to\n  `encoded_policy`\n\n### other changes\n- python 2.7 is no longer supported. please use python version 3.6 or later.\n- updated minimum `azure-core` version to 1.20.0\n- updated type hints for `keyproperties` model's `managed`, `exportable`, and `release_policy`\n  properties ([#22368](https://github.com/azure/azure-sdk-for-python/pull/22368))\n- (from 4.5.0b5) to support multi-tenant authentication, `get_token` calls during challenge\n  authentication requests now pass in a `tenant_id` keyword argument\n  ([#20698](https://github.com/azure/azure-sdk-for-python/issues/20698))\n\n## 4.5.0b5 (2021-11-11)\n\n### features added\n- added support for multi-tenant authentication when using `azure-identity` 1.7.1 or newer\n  ([#20698](https://github.com/azure/azure-sdk-for-python/issues/20698))\n\n### breaking changes\n> these changes do not impact the api of stable versions such as 4.4.0.\n> only code written against a beta version such as 4.5.0b1 may be affected.\n- `keyclient.get_random_bytes` now returns bytes instead of randombytes. the randombytes class\n  has been removed\n- renamed the `version` keyword-only argument in `keyclient.get_cryptography_client` to\n  `key_version`\n- renamed `keyreleasepolicy.data` to `keyreleasepolicy.encoded_policy`\n- renamed the `target` parameter in `keyclient.release_key` to `target_attestation_token`\n\n### other changes\n- updated minimum `azure-core` version to 1.15.0\n\n## 4.5.0b4 (2021-10-07)\n\n### features added\n- added `keyclient.get_cryptography_client`, which provides a simple way to create a\n  `cryptographyclient` for a key, given its name and optionally a version\n  ([#20621](https://github.com/azure/azure-sdk-for-python/issues/20621))\n- added support for automated and on-demand key rotation in azure key vault\n  ([#19840](https://github.com/azure/azure-sdk-for-python/issues/19840))\n  - added `keyclient.rotate_key` to rotate a key on-demand\n  - added `keyclient.update_key_rotation_policy` to update a key's automated rotation policy\n\n### other changes\n- `cryptographyclient` no longer requires a key version when providing a key id to its constructor\n  (though providing a version is still recommended)\n\n## 4.5.0b3 (2021-09-09)\n\n### other changes\n- updated type hints to fix mypy errors\n  ([#19158](https://github.com/azure/azure-sdk-for-python/issues/19158))\n\n## 4.5.0b2 (2021-08-10)\n\n### features added\n- added support for secure key release from a managed hsm\n  ([#19588](https://github.com/azure/azure-sdk-for-python/issues/19588))\n  - added `release_key` method to `keyclient` for releasing the private component of a key\n  - added `exportable` and `release_policy` keyword-only arguments to key creation and import\n    methods\n  - added `keyexportencryptionalgorithm` enum for specifying an encryption algorithm to be used\n    in key release\n\n### breaking changes\n> these changes do not impact the api of stable versions such as 4.4.0.\n> only code written against a beta version such as 4.5.0b1 may be affected.\n- `keyclient.get_random_bytes` now returns a `randombytes` model with bytes in a `value`\n  property, rather than returning the bytes directly\n  ([#19895](https://github.com/azure/azure-sdk-for-python/issues/19895))\n\n## 4.5.0b1 (2021-07-08)\nbeginning with this release, this library requires python 2.7 or 3.6+.\n\n### features added\n- key vault api version 7.3-preview is now the default\n- `keyclient` has a `get_random_bytes` method for getting a requested number of random\n  bytes from a managed hsm\n\n## 4.4.0 (2021-06-22)\nthis is the last version to support python 3.5. the next version will require python 2.7 or 3.6+.\n### changed\n- key vault api version 7.2 is now the default\n- (from 4.4.0b1) updated minimum `msrest` version to 0.6.21\n\n### added\n- `keyclient` has a `create_oct_key` method for creating symmetric keys\n- `keyclient`'s `create_key` and `create_rsa_key` methods now accept a `public_exponent`\n  keyword-only argument ([#18016](https://github.com/azure/azure-sdk-for-python/issues/18016))\n- (from 4.4.0b1) added support for key vault api version 7.2\n  ([#16566](https://github.com/azure/azure-sdk-for-python/pull/16566))\n  - added `oct_hsm` to `keytype`\n  - added 128-, 192-, and 256-bit aes-gcm, aes-cbc, and aes-cbcpad encryption\n    algorithms to `encryptionalgorithm`\n  - added 128- and 192-bit aes-kw key wrapping algorithms to `keywrapalgorithm`\n  - `cryptographyclient`'s `encrypt` method accepts `iv` and\n    `additional_authenticated_data` keyword arguments\n  - `cryptographyclient`'s `decrypt` method accepts `iv`,\n    `additional_authenticated_data`, and `authentication_tag` keyword arguments\n  - added `iv`, `aad`, and `tag` properties to `encryptresult`\n- (from 4.4.0b3) `cryptographyclient` will perform all operations locally if initialized with\n  the `.from_jwk` factory method\n  ([#16565](https://github.com/azure/azure-sdk-for-python/pull/16565))\n- (from 4.4.0b3) added requirement for `six`>=1.12.0\n- (from 4.4.0b4) `cryptographyclient` can perform aes-cbcpad encryption and decryption locally\n  ([#17762](https://github.com/azure/azure-sdk-for-python/pull/17762))\n\n### breaking changes\n> these changes do not impact the api of stable versions such as 4.3.1.\n> only code written against a beta version such as 4.4.0b1 may be affected.\n- `parse_key_vault_key_id` and `keyvaultresourceid` have been replaced by a\n  `keyvaultkeyidentifier` class, which can be initialized with a key id\n\n## 4.4.0b4 (2021-04-06)\n### added\n- `cryptographyclient` can perform aes-cbcpad encryption and decryption locally\n  ([#17762](https://github.com/azure/azure-sdk-for-python/pull/17762))\n\n## 4.4.0b3 (2021-03-11)\n### added\n- `cryptographyclient` will perform all operations locally if initialized with\n  the `.from_jwk` factory method\n  ([#16565](https://github.com/azure/azure-sdk-for-python/pull/16565))\n- added requirement for six>=1.12.0\n\n## 4.4.0b2 (2021-02-10)\n### fixed\n- api versions older than 7.2-preview no longer raise `importerror` when\n  performing async operations ([#16680](https://github.com/azure/azure-sdk-for-python/pull/16680))\n\n## 4.4.0b1 (2021-02-10)\n### changed\n- key vault api version 7.2-preview is now the default\n- updated msrest requirement to >=0.6.21\n\n### added\n- support for key vault api version 7.2-preview\n  ([#16566](https://github.com/azure/azure-sdk-for-python/pull/16566))\n  - added `oct_hsm` to `keytype`\n  - added 128-, 192-, and 256-bit aes-gcm, aes-cbc, and aes-cbcpad encryption\n    algorithms to `encryptionalgorithm`\n  - added 128- and 192-bit aes-kw key wrapping algorithms to `keywrapalgorithm`\n  - `cryptographyclient`'s `encrypt` method accepts `iv` and\n    `additional_authenticated_data` keyword arguments\n  - `cryptographyclient`'s `decrypt` method accepts `iv`,\n    `additional_authenticated_data`, and `authentication_tag` keyword arguments\n  - added `iv`, `aad`, and `tag` properties to `encryptresult`\n- added method `parse_key_vault_key_id` that parses out a full id returned by\nkey vault, so users can easily access the key's `name`, `vault_url`, and `version`.\n\n## 4.3.1 (2020-12-03)\n### fixed\n- `cryptographyclient` operations no longer raise `attributeerror` when\n  the client was constructed with a key id\n  ([#15608](https://github.com/azure/azure-sdk-for-python/issues/15608))\n\n## 4.3.0 (2020-10-06)\n### changed\n- `cryptographyclient` can perform decrypt and sign operations locally\n  ([#9754](https://github.com/azure/azure-sdk-for-python/issues/9754))\n\n### fixed\n- correct typing for async paging methods\n\n## 4.2.0 (2020-08-11)\n### fixed\n- values of `x-ms-keyvault-region` and `x-ms-keyvault-service-version` headers\n  are no longer redacted in logging output\n- `cryptographyclient` will no longer perform encrypt or wrap operations when\n  its key has expired or is not yet valid\n\n### changed\n- key vault api version 7.1 is now the default\n- updated minimum `azure-core` version to 1.7.0\n\n### added\n- at construction, clients accept a `customhookpolicy` through the optional\n  keyword argument `custom_hook_policy`\n- all client requests include a unique id in the header `x-ms-client-request-id`\n- dependency on `azure-common` for multiapi support\n\n## 4.2.0b1 (2020-03-10)\n- support for key vault api version 7.1-preview\n([#10124](https://github.com/azure/azure-sdk-for-python/pull/10124))\n  - added `import_key` to `keyoperation`\n  - added `recoverable_days` to `certificateproperties`\n  - added `apiversion` enum identifying key vault versions supported by this package\n\n## 4.1.0 (2020-03-10)\n- `keyclient` instances have a `close` method which closes opened sockets. used\nas a context manager, a `keyclient` closes opened sockets on exit.\n([#9906](https://github.com/azure/azure-sdk-for-python/pull/9906))\n- pollers no longer sleep after operation completion\n([#9991](https://github.com/azure/azure-sdk-for-python/pull/9991))\n\n## 4.0.1 (2020-02-11)\n- `azure.keyvault.keys` defines `__version__`\n- challenge authentication policy preserves request options\n([#8999](https://github.com/azure/azure-sdk-for-python/pull/8999))\n- updated `msrest` requirement to >=0.6.0\n- challenge authentication policy requires tls\n([#9457](https://github.com/azure/azure-sdk-for-python/pull/9457))\n- methods no longer raise the internal error `keyvaulterrorexception`\n([#9690](https://github.com/azure/azure-sdk-for-python/issues/9690))\n- fix `attributeerror` in async cryptographyclient when verifying signatures remotely\n([#9734](https://github.com/azure/azure-sdk-for-python/pull/9734))\n\n## 4.0.0 (2019-10-31)\n### breaking changes:\n- removed `keyclient.get_cryptography_client()` and `cryptographyclient.get_key()`\n- moved the optional parameters of several methods into kwargs (\n[docs](https://azuresdkdocs.blob.core.windows.net/$web/python/azure-keyvault-keys/4.0.0/index.html)\ndetail the new keyword arguments):\n  - `create_key` now has positional parameters `name` and `key_type`\n  - `create_ec_key` and `create_rsa_key` now have one positional parameter, `name`\n  - `update_key_properties` now has two positional parameters, `name` and\n     (optional) `version`\n  - `import_key` now has positional parameters `name` and `key`\n- `cryptographyclient` operations return class instances instead of tuples and renamed the following\nproperties\n    - renamed the `decrypted_bytes` property of `decryptresult` to `plaintext`\n    - renamed the `unwrapped_bytes` property of `unwrapresult` to `key`\n    - renamed the `result` property of `verifyresult` to `is_valid`\n- renamed the `unwrapkeyresult` and `wrapkeyresult` classes to `unwrapresult` and `wrapresult`\n- renamed `list_keys` to `list_properties_of_keys`\n- renamed `list_key_versions` to `list_properties_of_key_versions`\n- renamed sync method `delete_key` to `begin_delete_key`\n- the sync method `begin_delete_key` and async `delete_key` now return pollers that return a `deletedkey`\n- renamed `key` to `keyvaultkey`\n- `keyvaultkey` properties `created`, `expires`, and `updated` renamed to `created_on`,\n`expires_on`, and `updated_on`\n- the `vault_endpoint` parameter of `keyclient` has been renamed to `vault_url`\n- the property `vault_endpoint` has been renamed to `vault_url` in all models\n\n### new features:\n- now all `cryptographyclient` returns include `key_id` and `algorithm` properties\n\n\n## 4.0.0b4 (2019-10-08)\n- enums `jsonwebkeycurvename`, `jsonwebkeyoperation`, and `jsonwebkeytype` have\nbeen renamed to `keycurvename`, `keyoperation`, and `keytype`, respectively.\n- `key` now has attribute `properties`, which holds certain properties of the\nkey, such as `version`. this changes the shape of the returned `key` type,\nas certain properties of `key` (such as `version`) have to be accessed\nthrough the `properties` property.\n\n- `update_key` has been renamed to `update_key_properties`\n- the `vault_url` parameter of `keyclient` has been renamed to `vault_endpoint`\n- the property `vault_url` has been renamed to `vault_endpoint` in all models\n\n### fixes and improvements:\n- the `key` argument to `import_key` should be an instance of `azure.keyvault.keys.jsonwebkey`\n([#7590](https://github.com/azure/azure-sdk-for-python/pull/7590))\n\n\n## 4.0.0b3 (2019-09-11)\n### breaking changes:\n- `cryptographyclient` methods `wrap` and `unwrap` are renamed `wrap_key` and\n`unwrap_key`, respectively.\n\n### new features:\n- `cryptographyclient` performs encrypt, verify and wrap operations locally\nwhen its key's public material is available (i.e., when it has keys/get\npermission).\n\n## 4.0.0b2 (2019-08-06)\n### breaking changes:\n- removed `azure.core.configuration` from the public api in preparation for a\nrevamped configuration api. static `create_config` methods have been renamed\n`_create_config`, and will be removed in a future release.\n- removed `wrap_key` and `unwrap_key` from `keyclient`. these are now available\nthrough `cryptographyclient`.\n- this version of the library requires `azure-core` 1.0.0b2\n  - if you later want to revert to a version requiring azure-core 1.0.0b1,\n  of this or another azure sdk library, you must explicitly install azure-core\n  1.0.0b1 as well. for example:\n  `pip install azure-core==1.0.0b1 azure-keyvault-keys==4.0.0b1`\n\n### new features:\n- added `cryptographyclient`, a client for performing cryptographic operations\n(encrypt/decrypt, wrap/unwrap, sign/verify) with a key.\n- distributed tracing framework opencensus is now supported\n- added support for http challenge based authentication, allowing clients to\ninteract with vaults in sovereign clouds.\n\n### other changes:\n- async clients use [aiohttp](https://pypi.org/project/aiohttp/) for transport\nby default. see\n[azure-core documentation](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/core/azure-core/readme.md/#transport)\nfor more information about using other transports.\n\n## 4.0.0b1 (2019-06-28)\nversion 4.0.0b1 is the first preview of our efforts to create a user-friendly\nand pythonic client library for azure key vault. for more information about\npreview releases of other azure sdk libraries, please visit\nhttps://aka.ms/azure-sdk-preview1-python.\n\nthis library is not a direct replacement for `azure-keyvault`. applications\nusing that library would require code changes to use `azure-keyvault-keys`.\nthis package's\n[documentation](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-keys/readme.md)\nand\n[samples](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-keys/samples)\ndemonstrate the new api.\n\n### major changes from `azure-keyvault`\n- packages scoped by functionality\n    - `azure-keyvault-keys` contains a client for key operations,\n    `azure-keyvault-secrets` contains a client for secret operations\n- client instances are scoped to vaults (an instance interacts with one vault\nonly)\n- asynchronous api supported on python 3.5.3+\n    - the `azure.keyvault.keys.aio` namespace contains an async equivalent of\n    the synchronous client in `azure.keyvault.keys`\n- authentication using `azure-identity` credentials\n  - see this package's\n  [documentation](https://github.com/azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-keys/readme.md)\n  , and the\n  [azure identity documentation](https://github.com/azure/azure-sdk-for-python/blob/main/sdk/identity/azure-identity/readme.md)\n  for more information\n\n### `azure-keyvault` features not implemented in this release\n- certificate management apis\n- cryptographic operations, e.g. sign, un/wrap_key, verify, en- and\ndecrypt\n- national cloud support. this release supports public global cloud vaults,\n    e.g. https://{vault-name}.vault.azure.net\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit license",
  "name": "azure-keyvault-keys",
  "package_url": "https://pypi.org/project/azure-keyvault-keys/",
  "project_url": "https://pypi.org/project/azure-keyvault-keys/",
  "project_urls": {
    "Homepage": "https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-keys"
  },
  "release_url": "https://pypi.org/project/azure-keyvault-keys/4.8.0/",
  "requires_dist": [
    "azure-common (~=1.1)",
    "azure-core (<2.0.0,>=1.24.0)",
    "cryptography (>=2.1.4)",
    "isodate (>=0.6.1)",
    "typing-extensions (>=4.0.1)"
  ],
  "requires_python": ">=3.7",
  "summary": "microsoft azure key vault keys client library for python",
  "version": "4.8.0",
  "releases": [],
  "developers": [
    "azurekeyvault@microsoft.com",
    "microsoft_corporation"
  ],
  "kwds": "azure_keyvault azure_keyvault_cli azure_identity_pypi parse_key_vault_key_id keyvaultresourceid",
  "license_kwds": "mit license",
  "libtype": "pypi",
  "id": "pypi_azure_keyvault_keys",
  "homepage": "https://github.com/azure/azure-sdk-for-python/tree/main/sdk/keyvault/azure-keyvault-keys",
  "release_count": 34,
  "dependency_ids": [
    "pypi_azure_common",
    "pypi_azure_core",
    "pypi_cryptography",
    "pypi_isodate",
    "pypi_typing_extensions"
  ],
  "documentation_summary": "The provided HTML text is a detailed README for the Azure Key Vault Keys client library for Python, hosted on GitHub under the Azure organization. This library assists with cryptographic key management, allowing users to create, store, and control access to encryption keys. It also covers secrets management, certificate management, and vault administration. The README outlines prerequisites such as an Azure subscription and Python 3.8 or later, and provides instructions for installing the package, authenticating the client, and performing common tasks like creating and retrieving keys. Additionally, it includes information on cryptographic operations, asynchronous API usage, troubleshooting, logging, and contributing to the project.",
  "embedding": [
    -0.021921798586845398,
    -0.00436816830188036,
    0.008109797723591328,
    -0.04302698373794556,
    0.0018109771190211177,
    0.029961198568344116,
    -0.03043990209698677,
    -0.022301945835351944,
    -0.019528280943632126,
    -0.007638134527951479,
    0.015811290591955185,
    0.010559633374214172,
    -0.022527217864990234,
    0.048208244144916534,
    -0.02962329052388668,
    -0.029426177963614464,
    0.013938715681433678,
    -0.036128025501966476,
    0.012967229820787907,
    -0.023625418543815613,
    0.004702556412667036,
    0.008377308957278728,
    -0.012150617316365242,
    -0.021260060369968414,
    -0.021879559382796288,
    0.0037381101865321398,
    0.010601871646940708,
    -0.03466375544667244,
    0.009771180339157581,
    -0.023062238469719887,
    0.03145362809300423,
    -0.002080247737467289,
    -0.025737345218658447,
    -0.004843351896852255,
    -0.008271712809801102,
    -0.0051812599413096905,
    0.0066420091316103935,
    0.009496630169451237,
    0.0262160487473011,
    0.017345957458019257,
    0.0006850562058389187,
    0.013185461983084679,
    0.012045021168887615,
    0.0018901743460446596,
    -0.026187889277935028,
    -0.01510731503367424,
    0.006458975374698639,
    -0.028116783127188683,
    -0.015895767137408257,
    0.020809516310691833,
    0.01311506424099207,
    0.006487134378403425,
    -0.0048187123611569405,
    -0.02676514908671379,
    -0.001160679617896676,
    -0.015219951048493385,
    0.002965496852993965,
    0.040943216532468796,
    -0.020710960030555725,
    -0.011657834984362125,
    0.029369859024882317,
    0.009637424722313881,
    -0.006620889995247126,
    -0.009595186449587345,
    0.019021419808268547,
    0.0029795763548463583,
    -0.031960491091012955,
    0.016205517575144768,
    0.023062238469719887,
    0.021668367087841034,
    0.026201969012618065,
    0.037085432559251785,
    0.005304455757141113,
    0.01436110120266676,
    0.03553668409585953,
    -0.009039046242833138,
    -0.030862286686897278,
    -0.00577259948477149,
    -0.01408655010163784,
    -0.016177358105778694,
    0.014037271961569786,
    0.006121067330241203,
    0.0040197004564106464,
    0.0096444645896554,
    0.014839804731309414,
    0.027609920129179955,
    -0.004885590169578791,
    0.0043259295634925365,
    0.01272787805646658,
    -0.0180499330163002,
    0.01104537583887577,
    0.00984157808125019,
    -0.0044737644493579865,
    0.03181969374418259,
    -0.018697589635849,
    0.04451941326260567,
    -0.0090249665081501,
    0.016360390931367874,
    0.0070503149181604385,
    -0.017838740721344948,
    -0.016867253929376602,
    0.018810225650668144,
    -0.01191126648336649,
    -0.012636360712349415,
    -0.06065453216433525,
    -0.007377663627266884,
    -0.005255177151411772,
    -0.023245273157954216,
    0.046884771436452866,
    0.024512428790330887,
    -0.022527217864990234,
    0.024442030116915703,
    0.0021365657448768616,
    -0.013129143975675106,
    -0.006835602689534426,
    0.006254822481423616,
    0.030608857050538063,
    -0.0029126987792551517,
    0.016304073855280876,
    -0.001146600116044283,
    0.008137957192957401,
    0.015093235298991203,
    0.008940489031374454,
    -0.005198859144002199,
    0.010622991248965263,
    -0.006810963153839111,
    0.013551529496908188,
    -0.03733886405825615,
    0.02290736325085163,
    -0.02245681919157505,
    0.0326644666492939,
    0.01747267320752144,
    0.0015038677956908941,
    -0.020668722689151764,
    -0.01723332144320011,
    0.017162922769784927,
    -0.005586045794188976,
    0.005276296753436327,
    -0.013086904771625996,
    -0.0004527442797552794,
    -0.014600452966988087,
    0.026075253263115883,
    -0.011524079367518425,
    -0.021541651338338852,
    -0.008588501252233982,
    0.016571583226323128,
    -0.007652214262634516,
    0.005663483403623104,
    0.011355125345289707,
    -0.018218886107206345,
    0.009595186449587345,
    0.006821522954851389,
    -0.01465677097439766,
    -0.010256923735141754,
    -0.0038155473303049803,
    -0.004466724582016468,
    -0.008335070684552193,
    0.003639553440734744,
    -0.021583890542387962,
    -0.008518104441463947,
    0.010038691572844982,
    0.04119664803147316,
    -0.010038691572844982,
    -0.0426609180867672,
    -0.005628284532576799,
    0.03517061844468117,
    0.028595486655831337,
    -0.01243220828473568,
    -0.011087615042924881,
    -0.000875129597261548,
    0.00314677064307034,
    -0.013262898661196232,
    -0.035902753472328186,
    -0.012481486424803734,
    -0.005237577948719263,
    0.008694098331034184,
    0.01969723589718342,
    -0.011397363618016243,
    -0.01741635426878929,
    -0.0026135090738534927,
    0.018247045576572418,
    0.015008758753538132,
    -0.009369914419949055,
    0.03379082679748535,
    -0.01588168740272522,
    0.0009521269239485264,
    0.012150617316365242,
    -0.0021400856785476208,
    0.029482495039701462,
    0.031003082171082497,
    0.02454058639705181,
    0.04519522935152054,
    -0.0037205107510089874,
    -0.0479266531765461,
    -0.5861582159996033,
    -0.02925722301006317,
    -0.012770116329193115,
    -0.015571938827633858,
    0.014699009247124195,
    0.003137971041724086,
    0.010552593506872654,
    0.030496221035718918,
    -0.020471608266234398,
    0.03227023780345917,
    -0.027821112424135208,
    0.032326556742191315,
    -0.03131283074617386,
    -0.019063657149672508,
    -0.011939425021409988,
    -0.0008350909920409322,
    0.006730006076395512,
    -0.010806024074554443,
    0.02817310020327568,
    -0.0006463375175371766,
    -0.01046107616275549,
    0.034860868006944656,
    -0.009926054626703262,
    0.005966192577034235,
    0.00807459931820631,
    0.004853911232203245,
    -0.01665606163442135,
    -0.013741602189838886,
    0.0027331849560141563,
    -0.002724385354667902,
    -0.028975633904337883,
    0.021851399913430214,
    0.004991186782717705,
    -0.007441021502017975,
    0.04054899141192436,
    0.00157338532153517,
    -0.02227378636598587,
    0.02545575611293316,
    -0.02082359604537487,
    0.06611738353967667,
    0.011876067146658897,
    -0.008412507362663746,
    0.014276623725891113,
    0.005962672643363476,
    0.015290348790585995,
    -0.0028687003068625927,
    0.021485334262251854,
    0.013396654278039932,
    -0.02376621402800083,
    0.012439248152077198,
    0.030721493065357208,
    -0.04021108150482178,
    0.013431853614747524,
    -0.01833152212202549,
    0.03367818892002106,
    0.015797210857272148,
    0.022259706631302834,
    -0.024878496304154396,
    0.019345248118042946,
    0.00289157941006124,
    -0.029961198568344116,
    0.012875712476670742,
    -0.02477993816137314,
    -0.03880313038825989,
    -0.021654287353157997,
    -0.001159799750894308,
    0.02294960245490074,
    -0.017247401177883148,
    -0.0025184724945575,
    -0.032692622393369675,
    0.013424813747406006,
    -0.013093944638967514,
    0.004748315084725618,
    -0.01796545647084713,
    0.01602248288691044,
    0.027609920129179955,
    0.025258641690015793,
    -0.00233015906997025,
    -0.017683865502476692,
    0.04519522935152054,
    -0.0016983409877866507,
    -0.01326993852853775,
    -0.007673333398997784,
    -0.006230183411389589,
    0.0454486608505249,
    -0.016036562621593475,
    -0.013037626631557941,
    -0.027412807568907738,
    0.021020708605647087,
    0.002238642191514373,
    0.012629320845007896,
    -0.021443095058202744,
    -0.006663128267973661,
    -0.03809915482997894,
    0.0010630030883476138,
    0.02476586028933525,
    -0.008342110551893711,
    -0.0076944525353610516,
    -0.019471963867545128,
    -0.01213653851300478,
    0.004839831963181496,
    -0.012284372933208942,
    -0.018979180604219437,
    0.0034054815769195557,
    0.01992250792682171,
    0.0035990749020129442,
    -0.01104537583887577,
    -0.007532538380473852,
    0.019176293164491653,
    0.0008892090991139412,
    -0.013333296403288841,
    -0.029341699555516243,
    0.007124232593923807,
    0.0006648168782703578,
    0.00577259948477149,
    -0.029200905933976173,
    0.01919037289917469,
    0.0035181178245693445,
    0.014234385453164577,
    0.019500121474266052,
    -0.001598024507984519,
    0.003526917425915599,
    -0.015487461350858212,
    0.009144642390310764,
    0.02259761467576027,
    0.014924281276762486,
    0.0006357778911478817,
    -0.030918605625629425,
    -0.0169235710054636,
    0.007321345619857311,
    0.007877485826611519,
    0.02427307702600956,
    0.034410323947668076,
    -0.009208000265061855,
    0.038774970918893814,
    -0.004702556412667036,
    0.0483490414917469,
    -0.012636360712349415,
    -0.0015223470982164145,
    -0.007990122772753239,
    -0.0009090084349736571,
    -0.010644109919667244,
    -0.002110166708007455,
    -0.019852109253406525,
    -0.013122104108333588,
    -0.028159022331237793,
    -0.015431143343448639,
    0.014459657482802868,
    -0.036494091153144836,
    0.008623700588941574,
    -0.008229473605751991,
    -0.020260415971279144,
    -0.012812354601919651,
    0.012812354601919651,
    0.01933116838335991,
    -0.027567682787775993,
    -0.016458947211503983,
    -0.012333651073276997,
    0.018387841060757637,
    0.009067204780876637,
    -0.018204808235168457,
    0.013896477408707142,
    -0.038718655705451965,
    -0.007891565561294556,
    -0.022738410159945488,
    0.0103695597499609,
    0.007504379376769066,
    0.038408905267715454,
    0.011538159102201462,
    -0.03066517412662506,
    0.005065103992819786,
    -0.019838031381368637,
    -0.013284018263220787,
    -0.011777510866522789,
    0.01759938895702362,
    0.01340369414538145,
    -0.003280526027083397,
    0.007680373266339302,
    0.002562470966950059,
    0.007426941767334938,
    0.00020217297424096614,
    0.038859449326992035,
    -0.015980245545506477,
    0.002129526110365987,
    0.04691293090581894,
    0.017092525959014893,
    0.005835957359522581,
    0.032636307179927826,
    0.0036677124444395304,
    -0.023709896951913834,
    -0.020401211455464363,
    -0.005835957359522581,
    -0.014741247519850731,
    0.03193233162164688,
    -0.006480094976723194,
    -0.004794073291122913,
    0.0074762203730642796,
    -8.937189704738557e-05,
    0.011650795117020607,
    0.03539589047431946,
    0.035677481442689896,
    -0.009855657815933228,
    0.005769079551100731,
    0.006261862348765135,
    -0.00688488082960248,
    0.011925345286726952,
    0.012833474203944206,
    -0.00570572167634964,
    0.014741247519850731,
    -0.022344183176755905,
    0.052150506526231766,
    0.0013463532086461782,
    -0.016867253929376602,
    0.0011782790534198284,
    0.0056529236026108265,
    -0.007018635980784893,
    -0.0070045567117631435,
    0.006546972319483757,
    -0.024442030116915703,
    -0.0016121040098369122,
    0.003766269190236926,
    -0.0017977774841710925,
    0.010172446258366108,
    -0.022245626896619797,
    -0.013509290292859077,
    0.01619143784046173,
    0.028426531702280045,
    0.015909846872091293,
    -0.00017170402861665934,
    -0.0017080206889659166,
    0.013804960064589977,
    0.01363600604236126,
    0.018064012750983238,
    -0.042717237025499344,
    0.02104886807501316,
    -0.015304428525269032,
    0.040492672473192215,
    -0.02867996320128441,
    0.0106652295216918,
    -0.029003791511058807,
    0.004963027313351631,
    0.01184086874127388,
    0.015543780289590359,
    -0.008018281310796738,
    0.025878140702843666,
    0.0084617855027318,
    0.026385003700852394,
    0.01147480122745037,
    -0.015557859092950821,
    -0.0048187123611569405,
    -0.014199186116456985,
    0.023836610838770866,
    -0.0007602935656905174,
    -0.001849695690907538,
    -0.005283336620777845,
    -0.02449834905564785,
    -0.00013870517432224005,
    0.0010102048981934786,
    0.020288575440645218,
    0.016487106680870056,
    0.00583947729319334,
    0.021302299574017525,
    0.008630740456283092,
    0.015234030783176422,
    0.053783729672431946,
    -0.01665606163442135,
    -0.01059483177959919,
    -0.026061173528432846,
    -0.007398782763630152,
    -0.025329040363430977,
    -0.009334716014564037,
    -0.014853883534669876,
    -0.006645529065281153,
    -0.011101693846285343,
    0.0210066307336092,
    -0.0030024556908756495,
    0.013523370027542114,
    0.016360390931367874,
    -0.0037310703191906214,
    0.007462140638381243,
    -0.029060110449790955,
    -0.034185051918029785,
    0.04505443572998047,
    -0.006557532120496035,
    0.00650825398042798,
    -0.003240047488361597,
    -0.008180195465683937,
    0.013833119533956051,
    -0.018669432029128075,
    0.05750072002410889,
    -0.0013806719798594713,
    0.011904226616024971,
    -0.0333121232688427,
    -0.0018901743460446596,
    -0.027792954817414284,
    -0.012052061036229134,
    0.016627902165055275,
    -0.011200251057744026,
    -0.007835247553884983,
    -0.00986973661929369,
    -0.0016367430798709393,
    -0.017205161973834038,
    -0.005012305919080973,
    0.02000698447227478,
    0.04756058752536774,
    0.035452209413051605,
    -0.016867253929376602,
    -0.005061584059149027,
    0.0009081284515559673,
    -0.029229063540697098,
    0.006480094976723194,
    0.026568036526441574,
    -0.009426232427358627,
    -0.01828928478062153,
    9.76216106209904e-05,
    0.008095718920230865,
    -0.005128461867570877,
    -0.024033725261688232,
    0.0024515949189662933,
    0.021626127883791924,
    -0.0065328930504620075,
    -0.03587459400296211,
    -0.018430080264806747,
    0.027849271893501282,
    0.01714884489774704,
    0.020893994718790054,
    -0.006715926807373762,
    0.013284018263220787,
    -0.012143578380346298,
    -0.012256214395165443,
    -0.04052083194255829,
    -0.0012398769613355398,
    0.009320636279881,
    0.0018743348773568869,
    -0.006944718770682812,
    0.012115418910980225,
    -0.018021773546934128,
    0.03474823385477066,
    0.0426609180867672,
    0.006585691124200821,
    -0.009989412501454353,
    0.03716990724205971,
    -0.02903195098042488,
    -0.02023225650191307,
    0.024836257100105286,
    0.014896122738718987,
    0.0031784495804458857,
    0.003058773698285222,
    0.007990122772753239,
    0.022991841658949852,
    0.009496630169451237,
    0.005631804466247559,
    -0.012340690940618515,
    -0.014431498944759369,
    -0.011207290925085545,
    0.0030165351927280426,
    0.010855303145945072,
    0.006349859293550253,
    -0.03660672903060913,
    0.043195940554142,
    0.011038335971534252,
    0.017979534342885017,
    0.00850402470678091,
    0.0011571598006412387,
    0.02780703455209732,
    -0.005712761543691158,
    -0.010608911514282227,
    0.003966902382671833,
    0.0020767278037965298,
    -0.03170705959200859,
    -0.0048996699042618275,
    0.03167890012264252,
    -0.0006841762224212289,
    -0.0001480548526160419,
    -0.0207391194999218,
    -0.0004813432751689106,
    -0.037085432559251785,
    -0.04803929105401039,
    0.017275558784604073,
    -0.010348440147936344,
    0.003570915898308158,
    -0.013129143975675106,
    -0.00541005190461874,
    -0.045758411288261414,
    -0.010827143676578999,
    -0.03801468014717102,
    -0.012221015058457851,
    -0.011158011853694916,
    -0.007954923436045647,
    0.008130917325615883,
    0.00784932728856802,
    0.009222079068422318,
    -0.03243919089436531,
    -0.0011624395847320557,
    0.015360746532678604,
    -0.011791590601205826,
    -0.01022876426577568,
    0.0013199541717767715,
    0.03784572333097458,
    -0.00038432664587162435,
    -0.0024709540884941816,
    -0.0055473274551332,
    0.0021312858443707228,
    -0.01588168740272522,
    -0.009200960397720337,
    -0.030862286686897278,
    0.01606472209095955,
    -0.018584953621029854,
    0.008701137267053127,
    -0.01933116838335991,
    0.013579688034951687,
    0.0054628499783575535,
    0.017500832676887512,
    0.04032371938228607,
    -0.0044104065746068954,
    0.0019042538478970528,
    0.0189651008695364,
    -0.011165051721036434,
    0.03311501070857048,
    0.014713088981807232,
    -0.009743021801114082,
    0.00034450803650543094,
    0.006202024407684803,
    0.00794084370136261,
    0.0025976698379963636,
    -0.023484623059630394,
    0.018401920795440674,
    -0.03249550983309746,
    0.007891565561294556,
    -0.014276623725891113,
    -0.0004421846242621541,
    0.03525509312748909,
    -0.0069799176417291164,
    0.010186525993049145,
    0.004656798206269741,
    -0.012594122439622879,
    -0.010024611838161945,
    -0.0013982714153826237,
    0.00038278670399449766,
    -0.017120685428380966,
    -0.0037169908173382282,
    0.021766923367977142,
    -0.006462495308369398,
    -0.022161150351166725,
    0.01833152212202549,
    -0.023695817217230797,
    0.021358618512749672,
    0.012861632741987705,
    0.006529373116791248,
    0.0449136383831501,
    0.024118201807141304,
    -0.03607170656323433,
    -0.01688133366405964,
    -0.0060154711827635765,
    0.022808806970715523,
    -0.010186525993049145,
    -0.018218886107206345,
    -0.01610695943236351,
    0.0025448715314269066,
    -0.00998237356543541,
    -0.0024973531253635883,
    0.010763785801827908,
    0.007384703494608402,
    -0.01941564492881298,
    -0.012784196063876152,
    0.012333651073276997,
    -0.005026385188102722,
    0.0010410038521513343,
    -0.01533258706331253,
    -0.018064012750983238,
    -0.03215760365128517,
    0.012981308624148369,
    0.017585309222340584,
    0.007363583892583847,
    0.00850402470678091,
    0.00400562072172761,
    -0.009834538213908672,
    -0.016430789604783058,
    -0.017895057797431946,
    -0.012368850409984589,
    0.020260415971279144,
    0.015417064540088177,
    0.006557532120496035,
    0.02276656962931156,
    0.03415689244866371,
    -0.0007224549190141261,
    0.009165761061012745,
    -0.0031309311743825674,
    0.0073495046235620975,
    -0.02676514908671379,
    0.007356544490903616,
    0.01823296584188938,
    -0.009123522788286209,
    -0.033593714237213135,
    -0.013396654278039932,
    9.168181713903323e-05,
    0.017402274534106255,
    -0.043759118765592575,
    0.0011932385386899114,
    0.009876776486635208,
    0.015191792510449886,
    0.0065328930504620075,
    -0.030777810141444206,
    -0.018275205045938492,
    0.009362874552607536,
    0.011488880962133408,
    -0.011552238836884499,
    0.02155573107302189,
    -0.040943216532468796,
    -0.014135829173028469,
    0.03694463521242142,
    -0.003973941784352064,
    0.0012891552178189158,
    -0.014727167785167694,
    0.018894704058766365,
    -0.02476586028933525,
    -0.003206608584150672,
    0.00711015285924077,
    0.006004911381751299,
    -0.011854948475956917,
    0.031200196593999863,
    -0.028708122670650482,
    -0.019950667396187782,
    0.005445250775665045,
    0.031509943306446075,
    0.007236868608742952,
    0.014072471298277378,
    -0.0029760566540062428,
    0.013882397674024105,
    0.021893639117479324,
    0.008201315067708492,
    -0.018275205045938492,
    0.03190417215228081,
    -0.026835547760128975,
    -0.02523048408329487,
    0.00651177391409874,
    -0.012270293198525906,
    -0.034551117569208145,
    -0.002094327239319682,
    -0.0056529236026108265,
    0.0282575786113739,
    0.01859903335571289,
    -0.01873982883989811,
    0.02276656962931156,
    0.03624065965414047,
    -8.09021876193583e-05,
    0.04654686152935028,
    0.009475510567426682,
    0.019725395366549492,
    0.023160794749855995,
    0.019317088648676872,
    0.0032523670233786106,
    -0.007609975524246693,
    -0.04066162556409836,
    -0.006223143544048071,
    0.02844061143696308,
    0.034382164478302,
    -0.01320658065378666,
    0.009250238537788391,
    0.0035797154996544123,
    -0.019978825002908707,
    -0.002601189538836479,
    -0.02494889311492443,
    0.029341699555516243,
    0.009545908309519291,
    0.012319572269916534,
    -0.015459302812814713,
    -0.02027449570596218,
    -0.009602226316928864,
    0.010580752044916153,
    -0.01841600053012371,
    -0.015952086076140404,
    0.011918305419385433,
    -0.02586406096816063,
    -0.013537449762225151,
    0.006177385337650776,
    -0.003129171207547188,
    0.020809516310691833,
    0.02245681919157505,
    -0.009003846906125546,
    -0.021921798586845398,
    -0.025469835847616196,
    -0.024695461615920067,
    -0.018162569031119347,
    -0.005596605595201254,
    0.03370634838938713,
    -0.023118557408452034,
    -0.008905290625989437,
    0.04302698373794556,
    0.01209429930895567,
    -0.009454391896724701,
    0.00029940958484075963,
    0.010186525993049145,
    0.036860160529613495,
    -0.028482850641012192,
    -0.010538513772189617,
    -0.013002428226172924,
    -0.014149907976388931,
    -0.005043984856456518,
    0.013713443651795387,
    -0.004051379393786192,
    0.0022703211288899183,
    -0.018979180604219437,
    0.010904581286013126,
    0.004681437276303768,
    -0.023062238469719887,
    -0.03570564091205597,
    -0.009665584191679955,
    -0.003861305769532919,
    -0.01022876426577568,
    -0.005272776819765568,
    -0.00032778861350379884,
    0.011869027279317379,
    -0.023203033953905106,
    -0.029933039098978043,
    -0.018669432029128075,
    -0.028891155496239662,
    -0.0027631039265543222,
    -0.007131271995604038,
    0.023921089246869087,
    0.004037299659103155,
    0.04778585955500603,
    0.011559278704226017,
    -0.007863407023251057,
    -0.024484269320964813,
    -0.0019711314234882593,
    -0.027694398537278175,
    0.008412507362663746,
    -0.009222079068422318,
    -0.0026680673472583294,
    0.02925722301006317,
    0.00023011199664324522,
    -0.06273829936981201,
    -0.025934459641575813,
    -0.005483969580382109,
    0.03666304424405098,
    0.020879914984107018,
    -0.01540298480540514,
    -0.010017571970820427,
    -0.0028546208050101995,
    0.008419547230005264,
    0.019119976088404655,
    -0.007342464756220579,
    0.043167781084775925,
    0.006666648201644421,
    -0.015318507328629494,
    0.01941564492881298,
    -0.008743376471102238,
    0.018134409561753273,
    -0.015712734311819077,
    0.022513138130307198,
    -0.002627588575705886,
    -0.017627546563744545,
    -0.011883107014000416,
    -0.013783841393887997,
    0.006888400763273239,
    -0.023160794749855995,
    -0.0025255121290683746,
    -0.011742311529815197,
    -0.018303364515304565,
    -0.040943216532468796,
    0.0262160487473011,
    0.02109110727906227,
    -0.00850402470678091,
    0.008180195465683937,
    0.012016862630844116,
    0.01200278289616108,
    -0.01614919863641262,
    -0.002576550468802452,
    0.00017830380238592625,
    -0.026568036526441574,
    -0.010242844000458717,
    -0.01886654458940029,
    0.000752373831346631,
    -0.014072471298277378,
    0.017937297001481056,
    0.00968670379370451,
    -0.007525498513132334,
    -0.03235471621155739,
    -0.00592043437063694,
    -0.012143578380346298,
    0.010637070052325726,
    -0.02762399986386299,
    0.03080596961081028,
    0.014023193158209324,
    0.03412873297929764,
    0.028187179937958717,
    0.009017926640808582,
    0.0030270947609096766,
    0.013438892550766468,
    -0.02558247186243534,
    0.006314660422503948,
    0.025483913719654083,
    -0.008996807038784027,
    0.00593099370598793,
    -0.012903871946036816,
    -0.015374825336039066,
    0.0015232270816341043,
    -0.03466375544667244,
    0.025075608864426613,
    -0.02477993816137314,
    0.05085519328713417,
    0.00011351605644449592,
    -0.01481164526194334,
    -0.020978471264243126,
    0.014234385453164577,
    -0.0014088310999795794,
    0.01678277738392353,
    -0.0005447010626085103,
    -0.01131992693990469,
    -0.02268209122121334,
    -0.0052270181477069855,
    0.028595486655831337,
    0.013100984506309032,
    0.010468116030097008,
    0.020950311794877052,
    -0.01723332144320011,
    -0.00027279052301310003,
    -0.023695817217230797,
    0.0044913641177117825,
    0.004477284383028746,
    0.02214707061648369,
    0.04021108150482178,
    -0.0016402630135416985,
    0.024258997291326523,
    0.04142192006111145,
    -0.002694466384127736,
    0.008560342714190483,
    -0.003328044433146715,
    0.023667657747864723,
    -0.03860601782798767,
    -0.010404758155345917,
    0.013502250425517559,
    -0.0062970612198114395,
    -0.015586018562316895,
    -0.005550846923142672,
    0.03288973867893219,
    -0.0025712705682963133,
    0.0009741261601448059,
    0.016909493133425713,
    -0.0030904526356607676,
    -0.013389614410698414,
    -0.011150972917675972,
    -0.0039035442750900984,
    -0.004984146915376186,
    0.01089050155133009,
    0.008905290625989437,
    0.011488880962133408,
    0.026117492467164993,
    -0.015670495107769966,
    -0.020710960030555725,
    -0.03066517412662506,
    -0.018458237871527672,
    -0.0010322041343897581,
    -0.006339299492537975,
    -0.01792321726679802,
    0.030017517507076263,
    -0.011214329861104488,
    -0.024104122072458267,
    -0.011897186748683453,
    0.1701931208372116,
    0.006867281161248684,
    0.011749351397156715,
    -0.003419561078771949,
    -0.0011562798172235489,
    0.0024621544871479273,
    0.013586727902293205,
    -0.0005988191696815193,
    -0.006726486142724752,
    0.008940489031374454,
    -0.010362519882619381,
    -0.014389259740710258,
    0.013255859725177288,
    0.008947528898715973,
    -0.0050721438601613045,
    0.011136893182992935,
    -0.0023283991031348705,
    -0.0043892874382436275,
    -0.0013753921957686543,
    -0.00844066683202982,
    -0.011622636578977108,
    -0.01465677097439766,
    -0.012481486424803734,
    -0.019654996693134308,
    0.035593003034591675,
    -0.0090531250461936,
    -0.02631460502743721,
    0.006990476977080107,
    0.04015476629137993,
    0.03325580433011055,
    -0.003305165097117424,
    0.008222434669733047,
    -0.007166470866650343,
    -0.00807459931820631,
    -0.03421321138739586,
    -0.03429768979549408,
    -0.01163671538233757,
    -0.0034547599498182535,
    0.033593714237213135,
    0.04649054631590843,
    -0.00673704594373703,
    -0.030552538111805916,
    -0.022484978660941124,
    -0.02925722301006317,
    -0.021471254527568817,
    -0.02427307702600956,
    -0.007785969413816929,
    -0.004336489364504814,
    -0.007229828741401434,
    0.01565641537308693,
    -0.009144642390310764,
    -0.027412807568907738,
    0.014727167785167694,
    0.009567027911543846,
    -0.022794727236032486,
    -0.019077736884355545,
    0.01147480122745037,
    0.02690594457089901,
    -0.008609620854258537,
    0.03466375544667244,
    0.012995388358831406,
    0.019345248118042946,
    -0.022752489894628525,
    0.015867609530687332,
    -0.04975699260830879,
    0.014178067445755005,
    -0.016360390931367874,
    0.015726814046502113,
    -0.018345601856708527,
    0.019021419808268547,
    -0.009003846906125546,
    0.007518458645790815,
    -0.014825724996626377,
    0.015642335638403893,
    -0.015980245545506477,
    -0.03058069758117199,
    0.03345291689038277,
    0.018838385120034218,
    0.0030499740969389677,
    0.023400146514177322,
    -0.0025835903361439705,
    -0.0007550137815997005,
    0.0022597615607082844,
    0.01436110120266676,
    -0.0029390978161245584,
    -0.013417773880064487,
    0.005093262996524572,
    0.005631804466247559,
    0.011629675514996052,
    -0.016078801825642586,
    -0.016571583226323128,
    -0.03683200106024742,
    -0.005420611705631018,
    -0.017571229487657547,
    0.007525498513132334,
    0.027975987643003464,
    -0.0016957010375335813,
    0.015938006341457367,
    -0.009919015690684319,
    -0.007764850277453661,
    -0.015318507328629494,
    0.05260105058550835,
    0.010221724398434162,
    0.011390323750674725,
    -0.013241779990494251,
    -0.014600452966988087,
    -0.03632513806223869,
    0.02549799345433712,
    -0.001455469406209886,
    -0.015388905070722103,
    0.026821468025445938,
    -0.0009521269239485264,
    -0.007272067479789257,
    0.004047859460115433,
    0.0075606973841786385,
    -0.007039755582809448,
    -0.01167895458638668,
    -0.00791972503066063,
    -0.005128461867570877,
    -0.002337198704481125,
    -0.005927474237978458,
    -0.0018303364049643278,
    0.002822941867634654,
    -0.005790198687463999,
    -0.015811290591955185,
    -0.019260771572589874,
    -0.02580774389207363,
    0.015417064540088177,
    0.005096782930195332,
    -0.020077383145689964,
    0.02984856255352497,
    -0.013826079666614532,
    0.03460743650794029,
    -0.0007990122539922595,
    -0.016430789604783058,
    -0.011150972917675972,
    -0.0029989357572048903,
    -0.02294960245490074,
    -0.002275601029396057,
    0.01637447066605091,
    -0.01517771277576685,
    -0.00362899387255311,
    0.010573712177574635,
    -0.01056667324155569,
    0.016501186415553093,
    -0.022203387692570686,
    0.031059401109814644,
    -0.0074762203730642796,
    0.0018285764381289482,
    -0.007138311862945557,
    -0.014628611505031586,
    -0.008081639185547829,
    -0.007053834851831198,
    -0.011038335971534252,
    0.02521640434861183,
    0.004283691290766001,
    -0.015797210857272148,
    -0.0043646483682096004,
    -0.003020055126398802,
    0.007184070535004139,
    -0.018725749105215073,
    0.00578667875379324,
    -0.0013551529264077544,
    -0.028426531702280045,
    -0.02641316130757332,
    -0.010425877757370472,
    -0.17819029092788696,
    0.0012970749521628022,
    0.013255859725177288,
    -0.05879603698849678,
    0.029876722022891045,
    -0.014178067445755005,
    -0.0014968279283493757,
    0.0009908456122502685,
    -0.00740582263097167,
    0.0033702829387038946,
    0.031369149684906006,
    0.005297415889799595,
    -0.010918661020696163,
    -0.023386066779494286,
    0.010446997359395027,
    0.0023231192026287317,
    0.007483259774744511,
    -0.006036590319126844,
    0.036184344440698624,
    0.01919037289917469,
    0.04508259519934654,
    -0.005515648517757654,
    0.03170705959200859,
    0.012903871946036816,
    0.0008575302199460566,
    -0.03483270853757858,
    -0.023217113688588142,
    -0.00467439740896225,
    -0.011017217300832272,
    -0.010763785801827908,
    -0.0047518350183963776,
    0.013467052020132542,
    0.031876012682914734,
    0.019471963867545128,
    0.0420132614672184,
    0.010066850110888481,
    0.0297640860080719,
    -0.018993260338902473,
    -0.015262189321219921,
    0.0413656011223793,
    0.014600452966988087,
    0.025019289925694466,
    0.02182324230670929,
    -0.028665883466601372,
    -0.00784932728856802,
    0.0004441645578481257,
    0.008313951082527637,
    -0.007081993855535984,
    -0.013347376137971878,
    -0.01238996908068657,
    0.04981330782175064,
    -0.019176293164491653,
    -0.0034002019092440605,
    -0.01624775491654873,
    0.012375890277326107,
    0.01390351727604866,
    0.0074762203730642796,
    -0.010038691572844982,
    -0.005311495624482632,
    -0.023653578013181686,
    0.01029916200786829,
    -0.025892220437526703,
    -0.004308330360800028,
    -0.0006401777500286698,
    -0.016726458445191383,
    -0.014670849777758121,
    -0.03303053230047226,
    0.0035990749020129442,
    -0.018725749105215073,
    0.0064237769693136215,
    0.024751780554652214,
    -0.0097782202064991,
    -0.004484324250370264,
    0.009545908309519291,
    0.009369914419949055,
    0.02276656962931156,
    -0.018542716279625893,
    0.03970421850681305,
    0.012706758454442024,
    -0.008081639185547829,
    -0.010672269389033318,
    0.04753242805600166,
    -0.019753552973270416,
    0.015234030783176422,
    0.01819072850048542,
    0.0021330458112061024,
    -0.014487816952168941,
    -0.03089044615626335,
    0.015417064540088177,
    0.011376244947314262,
    0.017162922769784927,
    -0.016078801825642586,
    0.0007088153506629169,
    0.017937297001481056,
    0.01215765718370676,
    -0.0018426559399813414,
    0.011256569065153599,
    -0.013438892550766468,
    0.02294960245490074,
    0.004266091622412205,
    0.007687412668019533,
    0.001618263777345419,
    -0.035508524626493454,
    -0.02744096703827381,
    0.03308685123920441,
    0.023808453232049942,
    -0.013460012152791023,
    0.034325845539569855,
    0.005378372967243195,
    -0.01796545647084713,
    -0.01978171244263649,
    0.015867609530687332,
    0.018810225650668144,
    0.011700073257088661,
    -0.024526508525013924,
    0.02435755357146263,
    0.0076944525353610516,
    0.007870446890592575,
    -0.0070045567117631435,
    -0.020753199234604836,
    0.030749650672078133,
    0.01886654458940029,
    -0.01892286166548729,
    0.0011078815441578627,
    -0.02086583524942398,
    -0.028511010110378265,
    -0.09292477369308472,
    -0.04451941326260567,
    0.006047149654477835,
    0.001421150634996593,
    -0.014755327254533768,
    -0.007842287421226501,
    -0.013072825968265533,
    0.0195564404129982,
    0.03607170656323433,
    -0.009081284515559673,
    -0.02241458185017109,
    0.021569810807704926,
    0.0038331467658281326,
    -0.009313596412539482,
    -0.0027771834284067154,
    -0.030411742627620697,
    -0.03198864683508873,
    -0.012798274867236614,
    -0.018810225650668144,
    -0.004744795151054859,
    0.002485033590346575,
    0.004927828907966614,
    0.004653278272598982,
    -0.007954923436045647,
    -0.001190598588436842,
    0.011108733713626862,
    -0.0303554255515337,
    0.02033081278204918,
    0.018120329827070236,
    8.476580660499167e-06,
    0.027919670566916466,
    -0.021668367087841034,
    -0.022175230085849762,
    0.0028898196760565042,
    0.0048363120295107365,
    0.018936941400170326,
    -0.020119620487093925,
    -0.017402274534106255,
    0.009489590302109718,
    -0.027919670566916466,
    -0.009588146582245827,
    0.0096444645896554,
    0.035283252596855164,
    -0.014544134959578514,
    0.0020767278037965298,
    0.020246336236596107,
    -0.018584953621029854,
    -0.011777510866522789,
    0.005473409779369831,
    -0.025385357439517975,
    -0.022287866100668907,
    -0.0009345275466330349,
    -0.026103412732481956,
    -0.002513192594051361,
    0.017979534342885017,
    0.002694466384127736,
    0.003600834868848324,
    0.02559654973447323,
    -0.015459302812814713,
    -0.01969723589718342,
    -0.008687058463692665,
    -0.005878195632249117,
    -0.010608911514282227,
    0.028229419142007828,
    -0.003595554968342185,
    0.018064012750983238,
    0.010355480015277863,
    -0.004417446441948414,
    0.013516330160200596,
    -0.018753908574581146,
    -0.00459344033151865,
    0.04187246412038803,
    -0.024554666131734848,
    0.03317132592201233,
    -0.04629343003034592,
    0.014325901865959167,
    0.023076318204402924,
    -0.014030232094228268,
    0.015360746532678604,
    -0.02378029376268387,
    -0.004336489364504814,
    0.007961963303387165,
    -0.0391128808259964,
    -0.02376621402800083,
    0.004371688235551119,
    0.024695461615920067,
    0.007236868608742952,
    0.00820835493505001,
    0.01919037289917469,
    -0.04854615405201912,
    0.027018580585718155,
    -0.010601871646940708,
    0.021569810807704926,
    -0.010278042405843735,
    0.0004553841718006879,
    -0.020063303411006927,
    -0.004403367172926664,
    -0.0024762339890003204,
    -0.04418150335550308,
    0.004185134544968605,
    -0.045476820319890976,
    -0.009271358139812946,
    -0.08233697712421417,
    0.018303364515304565,
    0.011003137566149235,
    -0.032326556742191315,
    0.03370634838938713,
    -0.012474446557462215,
    -0.006135146599262953,
    -0.025427596643567085,
    -0.008792654611170292,
    0.019035497680306435,
    -0.028525087982416153,
    0.005916914436966181,
    -0.027609920129179955,
    -0.005124941933900118,
    -0.0019711314234882593,
    -0.015895767137408257,
    0.0367475226521492,
    -0.00407249853014946,
    0.037451498210430145,
    0.0023178395349532366,
    -0.007969003170728683,
    -0.004815192893147469,
    0.025526152923703194,
    -0.0088912108913064,
    -0.022217467427253723,
    0.00352163752540946,
    -0.019838031381368637,
    0.014952440746128559,
    -0.017177002504467964,
    -0.033227644860744476,
    0.01774018444120884,
    -0.00578315882012248,
    -0.012847553938627243,
    0.03823995217680931,
    -0.0006617369945161045,
    0.009299516677856445,
    0.01007388997823,
    0.00436816830188036,
    0.019176293164491653,
    0.0058887554332613945,
    -0.015938006341457367,
    -0.021935878321528435,
    0.017627546563744545,
    -0.0073495046235620975,
    -0.00844066683202982,
    0.003773308824747801,
    0.008489944972097874,
    0.008454746566712856,
    0.013065786100924015,
    0.0034072415437549353,
    0.03184785321354866,
    0.010235804133117199,
    -0.043083302676677704,
    -0.03852154314517975,
    0.003928183577954769,
    0.0018285764381289482,
    0.030552538111805916,
    0.008581461384892464,
    0.004051379393786192,
    0.006782804150134325,
    0.006800403818488121,
    0.005395972635596991,
    -0.00018402360728941858,
    -0.005068623926490545,
    0.00451248325407505,
    -0.009524788707494736,
    -0.0314817875623703,
    -0.014924281276762486,
    -0.014755327254533768,
    -0.015571938827633858,
    -0.03156626224517822,
    -0.026004856452345848,
    0.021710606291890144,
    0.014487816952168941,
    0.042125895619392395,
    -0.021245982497930527,
    0.01056667324155569,
    0.00400562072172761,
    -0.0321294441819191,
    0.014741247519850731,
    0.030608857050538063,
    -0.024075962603092194,
    -0.016571583226323128,
    0.0008680898463353515,
    0.013854238204658031,
    -0.01700804941356182,
    -0.030101994052529335,
    -0.008750416338443756,
    0.0007550137815997005,
    -0.0008434507180936635,
    0.017205161973834038,
    0.00046022399328649044,
    0.009264318272471428,
    0.032917894423007965,
    0.012840514071285725,
    0.006958798039704561,
    -0.015459302812814713,
    -0.008356189355254173,
    0.02233010344207287,
    0.0003442880406510085,
    0.01046107616275549,
    -0.0026522278785705566,
    0.024977052584290504,
    -0.022301945835351944,
    -0.04871510714292526,
    -0.0006634969613514841,
    0.010735627263784409,
    -0.020204097032546997,
    -0.007384703494608402,
    -0.006800403818488121,
    0.011974623426795006,
    -0.0057620396837592125,
    0.012263254262506962,
    0.011334005743265152,
    -0.029595131054520607,
    0.0094825504347682,
    -0.0046603181399405,
    0.004998226184397936,
    -0.028651803731918335,
    0.018641272559762,
    -0.012425168417394161,
    0.015431143343448639,
    0.03756413608789444,
    -0.010271003469824791,
    0.010580752044916153,
    0.025343120098114014,
    0.018627192825078964,
    -0.02394924685359001,
    0.016585662961006165,
    -0.007793009281158447,
    -0.014304783195257187,
    -0.00622666347771883,
    -0.025061529129743576,
    -0.036043547093868256,
    -0.0160084031522274,
    0.004850391298532486,
    -0.022851046174764633,
    0.01206614077091217,
    -0.017712024971842766,
    0.07963371276855469,
    -0.025695107877254486,
    -0.02472362108528614,
    -0.020936232060194016,
    -0.0013973914319649339,
    0.017275558784604073,
    0.01968315616250038,
    -0.014107669703662395,
    -0.017754262313246727,
    -0.007022155914455652,
    0.013868317939341068,
    0.009320636279881,
    0.0011026016436517239,
    -0.013734562322497368,
    -0.04128112643957138,
    0.006881360895931721,
    -0.032777100801467896,
    0.019401565194129944,
    0.013678244315087795,
    0.017993614077568054,
    0.02068280056118965,
    0.018838385120034218,
    0.008454746566712856,
    -0.020077383145689964,
    -0.023667657747864723,
    -0.007092553656548262,
    0.03874681517481804,
    0.013009468093514442,
    0.00993309449404478,
    -0.03257998824119568,
    0.007426941767334938,
    0.009158722124993801,
    -0.014142868109047413,
    -0.01964091695845127,
    0.008687058463692665,
    -0.006304101087152958,
    -0.0034512400161474943,
    -0.03021463006734848,
    -0.017050286754965782,
    -0.0029936558566987514,
    -0.02069688029587269,
    0.009074244648218155,
    -0.00325588695704937,
    -0.0221893098205328,
    0.012946110218763351,
    -0.003604354802519083,
    -0.0010242844000458717,
    -0.00023033199249766767,
    -0.025019289925694466
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "programming language :: python",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.12",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: documentation",
    "topic :: software development",
    "topic :: software development :: documentation",
    "topic :: utilities",
    "typing :: typed"
  ],
  "description": "<h1 align=\"center\">mkdocstrings-python</h1>\n\n<p align=\"center\">a python handler for <a href=\"https://github.com/mkdocstrings/mkdocstrings\"><i>mkdocstrings</i></a>.</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/mkdocstrings/python/actions?query=workflow%3aci\">\n    <img alt=\"ci\" src=\"https://github.com/mkdocstrings/python/workflows/ci/badge.svg\" />\n  </a>\n  <a href=\"https://mkdocstrings.github.io/python/\">\n    <img alt=\"documentation\" src=\"https://img.shields.io/badge/docs-mkdocs%20material-blue.svg?style=flat\" />\n  </a>\n  <a href=\"https://pypi.org/project/mkdocstrings-python/\">\n    <img alt=\"pypi version\" src=\"https://img.shields.io/pypi/v/mkdocstrings-python.svg\" />\n  </a>\n  <a href=\"https://gitpod.io/#https://github.com/mkdocstrings/python\">\n    <img alt=\"gitpod\" src=\"https://img.shields.io/badge/gitpod-workspace-blue.svg?style=flat\" />\n  </a>\n  <a href=\"https://app.gitter.im/#/room/#mkdocstrings_python:gitter.im\">\n    <img alt=\"gitter\" src=\"https://badges.gitter.im/join%20chat.svg\" />\n  </a>\n</p>\n\n---\n\n<p align=\"center\"><img src=\"logo.png\"></p>\n\nthe python handler uses [griffe](https://mkdocstrings.github.io/griffe)\nto collect documentation from python source code.\nthe word \"griffe\" can sometimes be used instead of \"signature\" in french.\ngriffe is able to visit the abstract syntax tree (ast) of the source code to extract useful information.\nit is also able to execute the code (by importing it) and introspect objects in memory\nwhen source code is not available. finally, it can parse docstrings following different styles.\n\n## installation\n\nyou can install this handler as a *mkdocstrings* extra:\n\n```toml title=\"pyproject.toml\"\n# pep 621 dependencies declaration\n# adapt to your dependencies manager\n[project]\ndependencies = [\n    \"mkdocstrings[python]>=0.18\",\n]\n```\n\nyou can also explicitly depend on the handler:\n\n```toml title=\"pyproject.toml\"\n# pep 621 dependencies declaration\n# adapt to your dependencies manager\n[project]\ndependencies = [\n    \"mkdocstrings-python\",\n]\n```\n\n## preview\n\n<!-- todo: update the gif with a more recent screen capture. maybe use mp4 instead -->\n![mkdocstrings_python_gif](https://user-images.githubusercontent.com/3999221/77157838-7184db80-6aa2-11ea-9f9a-fe77405202de.gif)\n\n## features\n\n- **data collection from source code**: collection of the object-tree and the docstrings is done thanks to\n  [griffe](https://github.com/mkdocstrings/griffe).\n\n- **support for type annotations:** griffe collects your type annotations and *mkdocstrings* uses them\n  to display parameter types or return types. it is even able to automatically add cross-references\n  to other objects from your api, from the standard library or third-party libraries!\n  see [how to load inventories](https://mkdocstrings.github.io/usage/#cross-references-to-other-projects-inventories) to enable it.\n\n- **recursive documentation of python objects:** just use the module dotted-path as an identifier, and you get the full\n  module docs. you don't need to inject documentation for each class, function, etc.\n\n- **support for documented attributes:** attributes (variables) followed by a docstring (triple-quoted string) will\n  be recognized by griffe in modules, classes and even in `__init__` methods.\n\n- **multiple docstring-styles support:** common support for google-style, numpydoc-style,\n  and sphinx-style docstrings. see [griffe's documentation](https://mkdocstrings.github.io/griffe/docstrings/) on docstrings support.\n\n- **admonition support in google docstrings:** blocks like `note:` or `warning:` will be transformed\n  to their [admonition](https://squidfunk.github.io/mkdocs-material/reference/admonitions/) equivalent.\n  *we do not support nested admonitions in docstrings!*\n\n- **every object has a toc entry:** we render a heading for each object, meaning *mkdocs* picks them into the table\n  of contents, which is nicely displayed by the material theme. thanks to *mkdocstrings* cross-reference ability,\n  you can reference other objects within your docstrings, with the classic markdown syntax:\n  `[this object][package.module.object]` or directly with `[package.module.object][]`\n\n- **source code display:** *mkdocstrings* can add a collapsible div containing the highlighted source code\n  of the python object.\n",
  "docs_url": null,
  "keywords": "",
  "license": "isc",
  "name": "mkdocstrings-python",
  "package_url": "https://pypi.org/project/mkdocstrings-python/",
  "project_url": "https://pypi.org/project/mkdocstrings-python/",
  "project_urls": {
    "Changelog": "https://mkdocstrings.github.io/python/changelog",
    "Discussions": "https://github.com/mkdocstrings/python/discussions",
    "Documentation": "https://mkdocstrings.github.io/python",
    "Funding": "https://github.com/sponsors/pawamoy",
    "Gitter": "https://gitter.im/mkdocstrings/python",
    "Homepage": "https://mkdocstrings.github.io/python",
    "Issues": "https://github.com/mkdocstrings/python/issues",
    "Repository": "https://github.com/mkdocstrings/python"
  },
  "release_url": "https://pypi.org/project/mkdocstrings-python/1.7.5/",
  "requires_dist": [
    "mkdocstrings>=0.20",
    "griffe>=0.37"
  ],
  "requires_python": ">=3.8",
  "summary": "a python handler for mkdocstrings.",
  "version": "1.7.5",
  "releases": [],
  "developers": [
    "pawamoy@pm.me"
  ],
  "kwds": "mkdocstrings_python_gif mkdocstrings_python mkdocstrings markdown href",
  "license_kwds": "isc",
  "libtype": "pypi",
  "id": "pypi_mkdocstrings_python",
  "homepage": "",
  "release_count": 47,
  "dependency_ids": [
    "pypi_griffe",
    "pypi_mkdocstrings"
  ]
}
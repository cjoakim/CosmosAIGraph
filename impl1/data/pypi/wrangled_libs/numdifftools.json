{
  "classifiers": [
    "development status :: 4 - beta",
    "environment :: console",
    "intended audience :: education",
    "intended audience :: science/research",
    "license :: osi approved :: bsd license",
    "operating system :: macos",
    "operating system :: microsoft :: windows",
    "operating system :: os independent",
    "operating system :: posix :: linux",
    "operating system :: unix",
    "programming language :: python",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "topic :: scientific/engineering :: mathematics"
  ],
  "description": "\n============\nnumdifftools\n============\n\n\n\n    |pkg_img| |tests_img| |docs_img| |health_img| |coverage_img| |versions_img| |downloads_img|\n\n\nthe numdifftools library is a suite of tools written in `_python <http://www.python.org/>`_\nto solve automatic numerical differentiation problems in one or more variables.\nfinite differences are used in an adaptive manner, coupled with a richardson\nextrapolation methodology to provide a maximally accurate result.\nthe user can configure many options like; changing the order of the method or\nthe extrapolation, even allowing the user to specify whether complex-step,\ncentral, forward or backward differences are used.\n\nthe methods provided are:\n\n- **derivative**: compute the derivatives of order 1 through 10 on any scalar function.\n\n- **directionaldiff**: compute directional derivative of a function of n variables\n\n- **gradient**: compute the gradient vector of a scalar function of one or more variables.\n\n- **jacobian**: compute the jacobian matrix of a vector valued function of one or more variables.\n\n- **hessian**: compute the hessian matrix of all 2nd partial derivatives of a scalar function of one or more variables.\n\n- **hessdiag**: compute only the diagonal elements of the hessian matrix\n\nall of these methods also produce error estimates on the result.\n\nnumdifftools also provide an easy to use interface to derivatives calculated\nwith in `_algopy <https://pythonhosted.org/algopy/>`_. algopy stands for algorithmic\ndifferentiation in python.\nthe purpose of algopy is the evaluation of higher-order derivatives in the\n`forward` and `reverse` mode of algorithmic differentiation (ad) of functions\nthat are implemented as python programs.\n\n\ngetting started\n===============\n\n\nvisualize high order derivatives of the tanh function\n\n    >>> import numpy as np\n    >>> import numdifftools as nd\n    >>> import matplotlib.pyplot as plt\n    >>> x = np.linspace(-2, 2, 100)\n    >>> for i in range(10):\n    ...    df = nd.derivative(np.tanh, n=i)\n    ...    y = df(x)\n    ...    h = plt.plot(x, y/np.abs(y).max())\n\n    >>> plt.show() # doctest: +skip\n\n.. image:: https://raw.githubusercontent.com/pbrod/numdifftools/master/examples/fun.png\n    :target: https://github.com/pbrod/numdifftools/blob/master/examples/fun.py\n\n\n\ncompute 1'st and 2'nd derivative of exp(x), at x == 1::\n\n    >>> fd = nd.derivative(np.exp)        # 1'st derivative\n    >>> fdd = nd.derivative(np.exp, n=2)  # 2'nd derivative\n    >>> np.allclose(fd(1), 2.7182818284590424)\n    true\n    >>> np.allclose(fdd(1), 2.7182818284590424)\n    true\n\nnonlinear least squares::\n\n    >>> xdata = np.reshape(np.arange(0,1,0.1),(-1,1))\n    >>> ydata = 1+2*np.exp(0.75*xdata)\n    >>> fun = lambda c: (c[0]+c[1]*np.exp(c[2]*xdata) - ydata)**2\n    >>> jfun = nd.jacobian(fun)\n    >>> np.allclose(np.abs(jfun([1,2,0.75])), 0) # should be numerically zero\n    true\n\ncompute gradient of sum(x**2)::\n\n    >>> fun = lambda x: np.sum(x**2)\n    >>> dfun = nd.gradient(fun)\n    >>> np.allclose(dfun([1,2,3]), [ 2.,  4.,  6.])\n    true\n\ncompute the same with the easy to use interface to algopy::\n\n    >>> import numdifftools.nd_algopy as nda\n    >>> import numpy as np\n    >>> fd = nda.derivative(np.exp)        # 1'st derivative\n    >>> fdd = nda.derivative(np.exp, n=2)  # 2'nd derivative\n    >>> np.allclose(fd(1), 2.7182818284590424)\n    true\n    >>> np.allclose(fdd(1), 2.7182818284590424)\n    true\n\nnonlinear least squares::\n\n    >>> xdata = np.reshape(np.arange(0,1,0.1),(-1,1))\n    >>> ydata = 1+2*np.exp(0.75*xdata)\n    >>> fun = lambda c: (c[0]+c[1]*np.exp(c[2]*xdata) - ydata)**2\n    >>> jfun = nda.jacobian(fun, method='reverse')\n    >>> np.allclose(np.abs(jfun([1,2,0.75])), 0) # should be numerically zero\n    true\n\ncompute gradient of sum(x**2)::\n\n    >>> fun = lambda x: np.sum(x**2)\n    >>> dfun = nda.gradient(fun)\n    >>> np.allclose(dfun([1,2,3]), [ 2.,  4.,  6.])\n    true\n\n\nsee also\n--------\nscipy.misc.derivative\n\n\ndocumentation and code\n======================\n\nnumdifftools works on python 2.7+ and python 3.0+.\n\nofficial releases available at: http://pypi.python.org/pypi/numdifftools |pkg_img|\n\nofficial documentation available at: http://numdifftools.readthedocs.io/en/latest/ |docs_img|\n\nbleeding edge: https://github.com/pbrod/numdifftools.\n\n\ninstallation\n============\n\nif you have pip installed, then simply type:\n\n    $ pip install numdifftools\n\nto get the lastest stable version. using pip also has the advantage that all\nrequirements are automatically installed.\n\n\nunit tests\n==========\nto test if the toolbox is working paste the following in an interactive\npython session::\n\n   import numdifftools as nd\n   nd.test('--doctest-modules', '--disable-warnings')\n\n\nacknowledgement\n===============\nthe `numdifftools package <http://pypi.python.org/pypi/numdifftools/>`_ for\n`python <https://www.python.org/>`_ was written by per a. brodtkorb\nbased on the adaptive numerical differentiation toolbox written in\n`matlab <http://www.mathworks.com>`_  by john d'errico [derrico06]_.\n\nlater the package was extended with some of the functionality\nfound in the statsmodels.tools.numdiff module written by josef perktold\n[jperktold14]_ which is based on [rid09]_.\nthe implementation of bicomplex numbers is based on the matlab implementation\ndescribed in the project report of [ver14]_ which is based on [gld12].\nfor completeness the [for98]_  method for computing the weights and points in general\nfinite difference formulas as well as the [for81]_ method for cumputing the\ntaylor coefficients of complex analytic function using fft, was added.\n\n\nreferences\n===========\n\n.. [jperktold14] perktold, j (2014), numdiff package\n    http://statsmodels.sourceforge.net/0.6.0/_modules/statsmodels/tools/numdiff.html\n\n.. [ver14] adriaen verheyleweghen, (2014)\n    \"computation of higher-order derivatives using the multi-complex step method\",\n    project report, ntnu\n\n.. [gld12] gregory lantoine, r.p. russell, and t. dargent (2012)\n    \"using multicomplex variables for automatic computation of high-order derivatives\",\n    acm transactions on mathematical software,\n    vol. 38, no. 3, article 16, april 2012, 21 pages,\n    http://doi.acm.org/10.1145/2168773.2168774\n\n.. [melev12] m.e. luna-elizarraras, m. shapiro, d.c. struppa1, a. vajiac (2012),\n    \"bicomplex numbers and their elementary functions\",\n    cubo a mathematical journal,\n    vol. 14, no 2, (61-80). june 2012.\n\n.. [lan10] gregory lantoine (2010),\n    \"a methodology for robust optimization of low-thrust trajectories in multi-body environments\",\n    phd thesis, georgia institute of technology\n\n.. [rid09] ridout, m.s. (2009)\n    \"statistical applications of the complex-step method of numerical differentiation\",\n    *the american statistician*, 63, 66-74\n\n.. [derrico06] d'errico, j. r.  (2006),\n    \"adaptive robust numerical differentiation\",\n    http://www.mathworks.com/matlabcentral/fileexchange/13490-adaptive-robust-numerical-differentiation\n\n.. [kllk05] k.-l. lai, j.l. crassidis, y. cheng, j. kim (2005),\n    \"new complex step derivative approximations with application to second-order kalman filtering\",\n    aiaa guidance, *navigation and control conference*,\n    san francisco, california, august 2005, aiaa-2005-5944.\n\n.. [for98] b. fornberg (1998)\n    \"calculation of weights_and_points in finite difference formulas\",\n    siam review 40, pp. 685-691.\n\n.. [for81] fornberg, b. (1981).\n    \"numerical differentiation of analytic functions\",\n    acm transactions on mathematical software (toms),\n    7(4), 512-526. http://doi.org/10.1145/355972.355979\n\n.. [jml69] lyness, j. m., moler, c. b. (1969).\n    \"generalized romberg methods for integrals of derivatives\", *numerische mathematik*.\n\n.. [jml66] lyness, j. m., moler, c. b. (1966).\n    \"vandermonde systems and numerical differentiation\", *numerische mathematik*.\n\n.. [nag] *nag library*. nag fortran library document: d04aaf\n\n\n\n    .. |pkg_img| image:: https://badge.fury.io/py/numdifftools.svg\n       :target: https://badge.fury.io/py/numdifftools\n\n    .. |tests_img| image:: https://github.com/pbrod/numdifftools/actions/workflows/test.yml/badge.svg\n       :target: https://github.com/pbrod/numdifftools/actions/workflows/test.yml\n\n    .. |health_img| image:: https://api.codeclimate.com/v1/badges/698996d1ec94028ec223/maintainability.svg\n       :target: https://codeclimate.com/github/pbrod/numdifftools/maintainability\n       :alt: maintainability\n\n    .. |coverage_img| image:: https://api.codeclimate.com/v1/badges/698996d1ec94028ec223/test_coverage.svg\n       :target: https://codeclimate.com/github/pbrod/numdifftools/test_coverage\n       :alt: test coverage\n\n    .. |versions_img| image:: https://img.shields.io/pypi/pyversions/numdifftools.svg\n       :target: https://github.com/pbrod/numdifftools\n\n    .. |downloads_img| image:: https://pepy.tech/badge/numdifftools/month\n       :target: https://pepy.tech/project/numdifftools\n       :alt: pypi - downloads\n\n    .. |docs_img| image:: https://readthedocs.org/projects/numdifftools/badge/?svg=true\n       :target: http://numdifftools.readthedocs.org/en/stable/\n       :alt: documentation\n\n\n=========\nchangelog\n=========\n\nversion 0.9.41 nov 10, 2022\n===========================\nfabian joswig (5):\n      * ci: execute test action only on push to master and on pull requests.\n      * ci: test requirements added to ci workflow.\n      * ci: first version of github actions ci added.\n      * fix: import from from scipy.ndimage.filters replaced by from scipy.ndimage\n      * fix: np.info(float).machar.tiny replaced by np.info(float).tiny\n\njonas eschle (6):\n      * drop python 3.6\n      * remove python 2.7, 3.6 from appveyor ci\n      * update .travis.yml\n      * update setup.cfg\n      * update .travis.yml\n      * update to python310\n\nper a brodtkorb (19):\n      * commented out deprecated pep8ignore and pep8maxlinelength in setup.cfg\n      * fixed issue #59: numpy deprecation warning on machar.tiny\n      * deleted obsolete travis_install.sh \n      * replaced deprecated `np.machar().eps` (numpy 1.22) with np.finfo(float).eps in test_multicomplex.py\n\n      * added requirements.tests.txt \n      * updated .github/workflows/test.yml to use requirements.tests.txt\n      * removed obsolete .travis.yml and appveyor.yml. \n      * github-actions are now used instead. \n      * replaced appveyor badge and travis badge with github-actions badge in readme.rst, info.py and index.rst\n      * removed python 2.7 from classifiers in setup.cfg\n      * updated .travis.yml\n      * fixed doctest so they don't crash on travis: replaced \"# doctest + skip\" with \"# doctest: +skip\" in docstrings.\n      * updated download badge in readme.rst and info.py\n      * updated test_img in readme.rst\n      * updated tests_img path for travis.\n      * added \"# doctest + skip\" to doctest string in info.py\n      * replaced \"version|\" with \"release|\" in docs/index.rst\n      * added matplotlib to requirements.txt removed failing python 3.8 from appveyor.yml\n\nper a. brodtkorb (4):\n      * merge pull request #65 from fjosw/feat/github_actions_ci\n      * merge pull request #66 from jonas-eschle/patch-1\n      * merge pull request #60 from peendebak/performance/percentile\n      * merge pull request #63 from fjosw/feat/numpy_deprecation\n\npieter eendebak (2):\n      * workaround for known issue with np.nanpercentile\n      * improve performance by combining percentile calculations\n\nversion 0.9.40 jun 2, 2021\n==========================\n\nper a brodtkorb (109):\n      * replaced python 3.5 with 3.9 in .travis.yml \n      * removed python 3.5 from appveyor.yml \n      * added bibtex_bibfiles = ... to docs/conf.py \n      * fixed doctest failures in   \n          - docs/src/numerical/derivest.rst\n          - docs/tutorials/getting_started.rst\n          - numdifftools.core.py\n          - numdifftools.limits.py\n          - numdifftools.nd_algopy.py\n          - numdifftools.nd_scipy.py \n          - numdifftools.nd_statsmodels.py\n      * insulated import of click in a if __name__ =='__main__' clause.\n      * added activate to appveyor.yml\n      * added https://mathworld.wolfram.com/wynnsepsilonmethod.html reference for the epsilon algorithm in extrapolation.py. \n      * disabled the restriction that n must be one in logjacobianrule \n      * added complex_even and central_even methods to the jacobiandifferencefunctions\n      * updated documentation of derivative in core.py\n      * updated documentation of richardson.\n      * removed obsolete tests from test_nd_scipy.py \n      * fixed a bug in testjacobian.test_scalar_to_vector in test_nd_scipy.py for method=\"complex'\n      * refactored code from core.py to finite_difference.py \n      * added logjacobianrule, loghessdiagrule, loghessianrule to finite_difference.py \n      * fixed a bug in richardson._estimate_error: complex rule resulted wrongly in complex error values.\n      * added netlib.org/quadpack reference.\n      * updated dea to conform with quadpack \n      * replaced reference to brezinski with refs to quadpack.\n      * reduced cyclomatic complexity in dea in extrapolation.py \n      * removed commented out code in profile_numdifftools.py\n      * updated pycodestyle ignore section in setup.cfg\n      * removed commented out code in run_benchmark.py made get_nominal_step continous as function of x\n      * made datetime call python 2.7 compatible in run_benchmark.py\n      * simplified the derivative._step_generator function in core.py. \n      * made plots generated from run_benchmark.py prettier. \n      * step_ratio in the step generators by default 2 for n=1 and 1.6 otherwise in step_generators.py\n      * fixed failing doctests in core.py and nd_statsmodels.py\n      * added doctests to setup.cfg.\n      * reordered imports in test_example_functions.py\n      * fixed .travis.yml so that he file paths in coverage.xml is discoverable\n        under the sonar.sources folder. the problem is that sonarqube is\n        analysing the checked-out source code (in src/numdifftools) but the\n        actual unit tests and coverage.py is run against the installed code (in\n        build/lib/numdifftools). thus the absolute files paths to the installed\n      * removed commented code from test_numdifftools.py\n      * run only coverage xml when python version is 3.7\n      * updated .travis.yml removed commented out code from extrapolation.py and nd_statsmodels.py\n      * finalized the moved of xxxdifferencdfunctions from core.py to finite_difference.py\n      * added missing docstring for default_scale function in step_generators.py. \n      * removed unused import of itertools in _find_default_scale.py.\n      * changed default scale from 1.35 to 1.06 for complex/multicomplex methods when n=1\n      * added richardson_demo to extrapolation.py simplified epsalg class in extrapolation.py\n      * corrected a small error for dea3: now dea3 and dea(limexp=3) gives the same result!\n      * added python 3.8 to appveyor.yml added python 3.9 to setup.cfg\n      * fixed reference to how-to/index\n      * added doctest configuration to docs.conf.py\n      * fixes issue #50 by adding function value f(x) to the info.f_value.\n      * updated readme.rst\n      * added @unusedvariable here and there.\n      * silence warnings in hessian by adding __init__ that set the correct order given the method. \n      * updated the richardson._r_matrix method to generate complex matrix when step_ratio is complex. \n      * fixed profile_hessian in profile_numdifftools.py so it works again. \n      * added with np.errstate(all='ignore') to test_derivative_on_sinh and test_scalar_to_vector in test_nd_algopy.py to silence warnings.\n      * changed citation style to alpha.\n      * replaced bibliography.rst with refs1.bib and zreferences.rst \n      * removed badges for latex\n      * changed sonar addon token\n      * added cc_test_reporter_id\n      * fixed a typo in docs/numdifftools.rst\n      * added docs/make.bat \n      * removed python 2.7 from .travis.yml\n      * moved test_requires from setup.cfg to setup.py \n      * added latex to setup.py\n      * changed default radius to 0.0059 which appears to cause less failures in taylor in fornberg.py.\n      * updated manifest.in\n      * fixes issue #49 : dimension of jacobian of vector valued function (length n) with scalar input should be n x 1\n      * updated build_package.py\n      * attempt to silence divide by zero and invalid warnings.\n      * fix issue#52: gradient tries to apply squeeze to the output tuple containing both the result and the full_output object.\n      * made docstring a rawdocstring since it contains slashes. \n      * added \"# pylint: disable=unused-argument\" in appropriate places.\n      * api change: replaced \"python setup.py doctests\" with \"python setup.py doctest\"\n      * removed unused imports \n      * fixed a bug in test_low_order_derivative_on_example_functions:  same variable (i) was used both in the outer and inner loop.\n      * updated badge for pypi and documentation of fornberg.py\n      * fixed failing tests.\n      * updated docs + added a test\n      * added  \"python -m pip install --upgrade pytest\" to appveyor.yml due to a package conflict on python2.7 32 bit\n      * added - \"python -m pip install --upgrade setuptools\" in appveyor.yml to avoid build error.\n      * try  \"python setup.py bdist_wheel\" and \"pip install numdifftools --find-links=dist\" in appveyor.yml\n      * put qoutes on \"python -m pip install --upgrade pip\" in appveyor.yml\n      * changed \"python setup.py install\" to   \n         - python setup.py bdist_wheel\"\n         - pip install numdifftools --find-links=dist\n      * added \"pip install --upgrade pip\" to appveyor.yml\n      * updated the detailed package documentation.\n      * added missing pytest-pep8 to install\n      * updated badge + appveyor.yml\n      * ongoing work to harmonize the the output from approx_fprime and approx_fprime_cs\n      * added taylor class to nd_algopy.py fixed a bug in _get_best_taylor_coefficient in fornberg.py\n      * updated references added test_mod_c function to test_multicomplex.py\n      * fixed a typo.\n      * removed --strict-markers\n      * fixed issue #39 typeerror: unsupported operand type(s) for /: 'float' and 'bicomplex'\n      * fixed a typo in the documentation. closing issue #51\n      * added separate test for nd_scipy.\n      * added skip on tests if lineprofiler is not installed.\n      * removed obsolete centered argument from call to approx_hess1 + pep8\n      * move jacobian._increment method to _jacobiandifferencefunctions\n      * step_nom was unused in cstepgenerator.__init__ added pytest.markers.slow in to setup.cfg\n      * made two tests more forgiving in order to avoid failure on travis.\n      * renamed nominal_step and base_step to get_nominal_step and get_base_step, respectively.\n      * removed obsolete import of example from hypothesis\n      * updated testing\n      * updated coverage call: coverage run -m py.test src/numdifftools/tests\n      * delete obsolete conftest.py\n\nversion 0.9.39 jun 10, 2019\n===========================\n\nrobert parini (1):\n      * fix issue #43: numpy future warning\n\nversion 0.9.38 jun 10, 2019\n===========================\n\nandrew nelson (1):\n      * maint: special.factorial instead of misc.factorial\n\ndougal j. sutherland (1):\n      * include license.txt in distributions\n\nper a brodtkorb (140):\n      * adjusted runtime for hypothesis tests to avoid failure and fixed pep8 failures.\n      * fixed a bug in setup.cfg\n      * replaced valarray function with numpy.full in step_generators.py \n      * added try except on import of algopy \n      * updated the badges used in the readme.rst \n      * replaced numpy.testing.tester with pytest. \n      * removed dependence on pyscaffold.\n      * simplified setup.py and setup.cfg \n      * updated .travis.yml configuration.\n      * reorganized the documentation. \n      * ongoing work to simplify the classes.\n      * replaced unittest with pytest.\n      * added finite_difference.py\n      * replaced , with .\n      * reverted to coverage=4.3.4\n      * new attempt\n      * fixed conflicting import\n      * missing import of eps\n      * added missing fd_rules = {}\n      * removed pinned coverage, removed dependence on pyscaffold\n      * updated .travis.yml and .appveyor.yml\n      * replaced conda channel omnia with conda-forge\n      * removed commented out code. set pyqt=5 in appveyor.yml\n      * updated codeclimate checks\n      * dropped support for python 3.3 and 3.4. added support for python 3.6, 3.7\n      * simplified code.\n      * pinned ipython==5.0 in order to make the testserver not crash.\n      * added line_profiler to appveyor.yml\n      * removed line_profiler from requirements.txt\n      * fix issue #37: unable to install on python 2.7 \n      * added method='backward' to nd_statsmodels.py \n      * skip test_profile_numdifftools_profile_hessian and testdoprofile\n      * added missing import of warnings\n      * added tests for the scripts from profile_numdifftools.py, _find_default_scale.py and run_benchmark.py.\n      * added reason to unittest.skipif\n      * added line_profiler to requirements.\n      * misssing import of warnings fixed.\n      * renamed test so it comes last, because i suspect this test mess up the coverage stats.\n      * reordered the tests.\n      * added more tests.\n      * cleaned up _find_default_scale.py\n      * removed link to depsy\n      * reverted: install of cython and pip install setuptools\n      * disabled sonar-scanner -x for python 3.5 because it crashes.\n      * reverted [options.packages.find] to exclude tests again\n      * added cython and reverted to pip install setuptools\n      * updated sphinx to 1.6.7\n      * try to install setuptools with conda instead.\n      * added hypothesis and pytest to requirements.readthedocs.txt\n      * set version of setuptools==37.0\n      * added algopy, statsmodels and numpy to requirements.readthedocs.txt\n      * restricted sphinx in the hope that the docs will be generated.\n      * removed exclusion of tests/ directory from test coverage.\n      * added dependencies into setup.cfg\n      * readded six as dependency\n      * refactored and removed commented out code.\n      * fixed a bug in the docstring example: made sure the shape passed on to zeros is an integer.\n      * fixed c_abs so it works with algopy on python 3.6.\n      * fixed flaky test and made it more robust.\n      * fixed bug in .travis.yml\n      * refactored the taylor function into the taylor class in order to simplify the code.\n      * fixed issue #35 and added tests\n      * attempt to simplify complexity\n      * made doctests more robust\n      * updated project path\n      * changed install of algopy\n      * fixed small bugs\n      * updated docstrings\n      * changed example and reference to examples and references in docstrings to comply with numpydoc-style.\n      * renamed changes.rst to changelog.rst\n      * renamed source path\n      * hack due to a bug in algopy or changed behaviour.\n      * small fix.\n      * try to reduce complexity\n      * reduced cognitive complexity of min_num_steps\n      * simplified  code in jacobian\n      * merge branch 'master' of https://github.com/pbrod/numdifftools\n      * fixed issue #34 licence clarification.\n      * locked coverage=4.3.4 due to a bug in coverage that cause code-climate test-reporter to fail.\n      * added script for finding default scale\n      * updated from sonarcube to sonarcloud\n      * made sure shape is an integer.\n      * refactored make_step_generator into a step property\n      * issue warning message to the user when setting the order to something different than 1 or 2 in hessian.\n      * updated example in gradient.\n      * reverted --timid option to coverage because it took too long time to run.\n      * reverted --pep8 option\n      * pep8 + added --timid in .travis.yml coverage run in order to to increase missed coverage.\n      * refactored taylor to reduce complexity\n      * no support for python 3.3. added python 3.6\n      * fixed a small bug and updated test.\n      * removed unneccasarry perenthesis. reduced the complexity of do_profile\n      * made python3 compatible\n      * removed assert false\n      * made unittests more forgiving.\n      * updated doctest in nd_scipy.py and profiletools.py install line_profiler on travis\n      * made python 3 compatible\n      * updated tests\n      * added test_profiletools.py and capture_stdout_and_stderr in testing.py\n      * optimized numdifftools.core.py for speed: fd_rules are now only computed once.\n      * only keeping html docs in the distribution.\n      * added doctest and updated .pylintrc and requirements.txt\n      * reduced time footprint on tests in the hope that it will pass on travis ci.\n      * prefer static methods over instance methods\n      * better memory handling: this fixes issue #27\n      * added statsmodels to requirements.txt\n      * added nd_statsmodels.py\n      * simplified input\n      * merge branch 'master' of https://github.com/pbrod/numdifftools\n      * updated link to the documentation.\n\nrobert parini (4):\n      * avoid runtimewarning in _get_logn\n      * allow fd_derivative to take complex valued functions\n\nsolarjoe (1):\n      * doc: added nd.directionaldiff example\n\n\n\nversion 0.9.20, jan 11, 2017\n============================\n\nper a brodtkorb (1):\n     * updated the author email address in order for twine to be able to upload to pypi.\n\n\nversion 0.9.19, jan 11, 2017\n============================\n\nper a brodtkorb (1):\n      * updated setup.py in a attempt to get upload to pypi working again.\n\n\nversion 0.9.18, jan 11, 2017\n============================\n\nper a brodtkorb (38):\n      * updated setup\n      * added import statements in help header examples.\n      * added more rigorous tests using hypothesis.\n      * forced to use wxagg backend\n      * moved import of matplotlib.pyplot to main in order to avoid import error on travis.\n      * added fd_derivative function\n      * updated references.\n      * attempt to automate sonarcube analysis\n      * added testcoverage to sonarqube and codeclimate\n      * simplified code\n      * added .pylintrc + pep8\n      * major change in api: class member variable self.f changed to self.fun\n      * fixes issue #25 (jacobian broken since 0.9.15)\n\n\nversion 0.9.17, sep 8, 2016\n============================\n\nandrew fowlie (1):\n      * fix readthedocs link as mentioned in #21\n\nper a brodtkorb (79):\n      * added test for minmaxstepgenerator\n      * removed obsolete docs from core.py\n      * updated appveyor.yml\n      * fixed sign in inverse matrix\n      * simplified code \n      * added appveyor badge + synchronised info.py with readme.rst.\n      * removed plot in help header\n      * added programming language :: python :: 3.5\n      * simplified code\n      * renamed bicomplex to bicomplex\n      * simplified example_functions.py\n      * moved minstepgenerator, maxstepgeneretor and minmaxstepgenerator to step_generators.py\n         - unified the step generators\n         - moved step_generator tests to test_step_generators.py\n         - major simplification of step_generators.py\n      * removed duplicated code + pep8\n      * moved fornberg_weights to fornberg.py + added taylor and derivative\n      * fixed print statement\n      * replace xrange with range\n      * added examples + made computation more robust.\n      * made 'backward' and alias for 'reverse' in nd_algopy.py\n      * expanded the tests + added test_docstrings to testing.py\n      * replace string interpolation with format()\n      * removed obsolete parameter\n      * smaller start radius for fornberg method\n      * simplified \"n\" and \"order\" properties\n      * simplified default_scale\n      * removed unecessary parenthesis and code.\n      * fixed a bug in dea + small refactorings.\n      * added test for epsalg\n      * avoid mutable default args and prefer static methods over instance-meth.\n      * refactored to reduce cyclomatic complexity\n      * changed some instance methods to static methods\n      * renamed non-pythonic variable names\n      * turned on xvfb (x virtual framebuffer) to imitate a display.\n      * added extra test for jacobian\n      * replace lambda function with a def\n      * removed unused import\n      * added test for epsalg\n      * fixed test_scalar_to_vector\n      * updated test_docstrings\n\n\nversion 0.9.15, may 10, 2016\n============================\n\ncody (2):\n      * migrated `%` string formating\n      * migrated `%` string formating\n\nper a brodtkorb (28):\n      * updated readme.rst + setup.cfg\n      * replaced instance methods with static methods +pep8\n      * merge branch 'master' of https://github.com/pbrod/numdifftools\n      * fixed a bug: replaced missing triple quote\n      * added depsy badge\n      * added .checkignore for quantificode\n      * added .codeclimate.yml\n      * fixed failing tests\n      * changed instance methods to static methods\n      * made untyped exception handlers specific\n      * replaced local function with a static method\n      * simplified tests\n      * removed duplicated code simplified _derivative._get_function_name\n      * exclude tests from testclimate\n      * renamed test_functions.py to example_functions.py added test_example_functions.py\n\nper a. brodtkorb (2):\n      * merge pull request #17 from pbrod/autofix/wrapped2_to3_fix\n      * merge pull request #18 from pbrod/autofix/wrapped2_to3_fix-0\n\npbrod (17):\n      * updated conf.py\n      * added numpydoc>=0.5, sphinx_rtd_theme>=0.1.7 to setup_requires if sphinx\n      * updated setup.py\n      * added requirements.readthedocs.txt\n      * updated readme.rst with info about how to install it using conda in an anaconda package.\n      * updated conda install description\n      * fixed number of arguments so it does not differs from overridden '_default_base_step' method\n      * added codecov to .travis.yml\n      * attempt to remove coverage of test-files\n      * added directionaldiff function in order to calculate directional derivatives. fixes issue #16. also added supporting tests and examples to the documentation.\n      * fixed isssue #19 multiple observations mishandled in jacobian\n      * moved rosen function into numdifftools.testing.py\n      * updated import of rosen function from numdifftools.testing\n      * simplified code + pep8 + added testresidue\n      * updated readme.rst and replaced string interpolation with format()\n      * cleaned dea class + pep8\n      * updated references for wynn extrapolation method.\n\n\n\nversion 0.9.14, november 10, 2015\n=================================\n\npbrod (53):\n      * updated documentation of setup.py\n      * updated readme.rst\n      * updated version\n      * added more documentation\n      * updated example\n      * added .landscape.yml     updated .coveragerc, .travis.yml\n      * added coverageall to readme.rst.\n      * updated docs/index.rst\n      * removed unused code and added tests/test_extrapolation.py\n      * updated tests\n      * added more tests\n      * readded c_abs c_atan2\n      * removed dependence on wheel, numpydoc>=0.5 and sphinx_rtd_theme>=0.1.7 (only needed for building documentation)\n      * updated conda path in .travis.yml\n      * added omnia channel to .travis.yml\n      * added conda_recipe files     filtered out warnings in limits.py\n\n\nversion 0.9.13, october 30, 2015\n================================\n\npbrod (21):\n      * updated readme.rst and changes.rst.\n      * updated limits.\n      * made it possible to differentiate complex functions and allow zero'th order derivative.\n      * bug: added missing derivative order, n to gradient, hessian, jacobian.\n      * made test more robust.\n      * updated structure in setup according to pyscaffold version 2.4.2.\n      * updated setup.cfg and deleted duplicate tests folder.\n      * removed unused code.\n      * added appveyor.yml.\n      * added required appveyor install scripts\n      * fixed bug in appveyor.yml.\n      * added wheel to requirements.txt.\n      * updated appveyor.yml.\n      * removed import matplotlib.\n\njustin lecher (1):\n      * fix min version for numpy.\n\nkikocorreoso (1):\n      * fix some prints on run_benchmark.py to make it work with py3\n\n\nversion 0.9.12, august 28, 2015\n===============================\n\npbrod (12):\n\n      * updated documentation.\n      * updated version in conf.py.\n      * updated changes.rst.\n      * reimplemented outlier detection and made it more robust.     \n      * added limits.py with tests.\n      * updated main tests folder.        \n      * moved richardson and dea3 to extrapolation.py.\n      * making a new release in order to upload to pypi.\n\n\nversion 0.9.11, august 27, 2015\n===============================\n\npbrod (2):\n      * fixed sphinx-build and updated docs.\n      * fixed issue #9 backward differentiation method fails with additional parameters.\n\n\nversion 0.9.10, august 26, 2015\n===============================\n\npbrod (7):\n      * fixed sphinx-build and updated docs.\n      * added more tests to nd_algopy.\n      * dropped support for python 2.6.\n\n\nversion 0.9.4, august 26, 2015\n==============================\n\npbrod (7):\n      * fixed sphinx-build and updated docs.\n\n\nversion 0.9.3, august 23, 2015\n==============================\n\npaul kienzle (1):\n      * more useful benchmark plots.\n\npbrod (7):\n      * fixed bugs and updated docs.\n      * major rewrite of the easy to use interface to algopy.\n      * added possibility to calculate n'th order derivative not just for n=1 in nd_algopy.\n      * added tests to the easy to use interface to algopy.\n\n\n\nversion 0.9.2, august 20, 2015\n==============================\n\npbrod (3):\n      * updated documentation\n      * added parenthesis to a call to the print function\n      * made the test less strict in order to pass the tests on travis for python 2.6 and 3.2.\n\n\nversion 0.9.1, august 20,2015\n=============================\n\nchristoph deil (1):\n      * fix sphinx build\n\npbrod (47):\n      * total remake of numdifftools with slightly different call syntax.\n         * can compute derivatives of order up to 10-14 depending on function and method used. \n         * updated documentation and tests accordingly.\n         * fixed a bug in dea3.\n         * added stepsgenerator as an replacement for the adaptive option.\n         * added bicomplex class for testing the complex step second derivative.\n         * added fornberg_weights_all for computing optimal finite difference rules in a stable way.\n         * added higher order complex step derivative methods.\n\n\n\nversion 0.7.7, december 18, 2014\n================================\n\npbrod (35):\n      * got travis-ci working in order to run the tests automatically.\n      * fixed bugs in dea class.\n      * fixed better error estimate for the hessian.\n      * fixed tests for python 2.6.\n      * adding tests as subpackage.\n      * restructerd folders of numdifftools.\n\n\nversion 0.7.3, december 17, 2014\n================================\n\npbrod (5):\n      * small cosmetic fixes.\n      * pep8 + some refactorings.\n      * simplified code by refactoring.\n\n\n\nversion 0.6.0, february 8, 2014\n===============================\n\npbrod (20):\n      * update and rename readme.md to readme.rst.\n      * simplified call to derivative: removed step_fix.\n      * deleted unused code.\n      * simplified and refactored. now possible to choose step_num=1.\n      * changed default step_nom from max(abs(x0), 0.2) to max(log2(abs(x0)), 0.2).\n      * pep8ified code and made sure that all tests pass.\n\n\nversion 0.5.0, january 10, 2014\n===============================\n\npbrod (9):\n      * updated the examples in gradient class and in info.py.\n      * added test for vec2mat and docstrings + cosmetic fixes.\n      * refactored code into private methods.\n      * fixed issue #7: derivative(fun)(numpy.ones((10,5)) * 2) failed.\n      * made print statements compatible with python 3.\n\n\n\nversion 0.4.0, may 5, 2012\n==========================\n\npbrod (1)\n      * fixed a bug for inf and nan values.\n\n\n\n\nversion 0.3.5, may 19, 2011\n===========================\n\npbrod (1)\n      * fixed a bug for inf and nan values.\n\n\nversion 0.3.4, feb 24, 2011\n===========================\n\npbrod (11)\n      * made automatic choice for the stepsize more robust.\n      * added easy to use interface to the algopy and scientificpython modules.\n\n\nversion 0.3.1, may 20, 2009\n===========================\n\npbrod (4)\n      * first version of numdifftools published on google.code\n\n\n\n\ncopyright (c) 2009-2022, per a. brodtkorb, john d'errico\nall rights reserved.\n\nredistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* neither the name of the copyright holders nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nthis software is provided by the copyright holders and contributors \"as is\"\nand any express or implied warranties, including, but not limited to, the\nimplied warranties of merchantability and fitness for a particular purpose are\ndisclaimed. in no event shall the copyright holder or contributors be liable\nfor any direct, indirect, incidental, special, exemplary, or consequential\ndamages (including, but not limited to, procurement of substitute goods or\nservices; loss of use, data, or profits; or business interruption) however\ncaused and on any theory of liability, whether in contract, strict liability,\nor tort (including negligence or otherwise) arising in any way out of the use\nof this software, even if advised of the possibility of such damage.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "new bsd",
  "name": "numdifftools",
  "package_url": "https://pypi.org/project/numdifftools/",
  "project_url": "https://pypi.org/project/numdifftools/",
  "project_urls": {
    "Homepage": "https://github.com/pbrod/numdifftools"
  },
  "release_url": "https://pypi.org/project/numdifftools/0.9.41/",
  "requires_dist": [
    "numpy (>=1.9)",
    "scipy (>=0.8)",
    "sphinx (>=1.3.1) ; extra == 'build_sphinx'"
  ],
  "requires_python": "",
  "summary": "solves automatic numerical differentiation problems in one or more variables.",
  "version": "0.9.41",
  "releases": [],
  "developers": [
    "per.andreas.brodtkorb@gmail.com",
    "per_a"
  ],
  "kwds": "numerical numerically numdifftools test_numdifftools numdiff",
  "license_kwds": "new bsd",
  "libtype": "pypi",
  "id": "pypi_numdifftools",
  "homepage": "https://github.com/pbrod/numdifftools",
  "release_count": 25,
  "dependency_ids": [
    "pypi_numpy",
    "pypi_scipy",
    "pypi_sphinx"
  ]
}
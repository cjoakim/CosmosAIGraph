{
  "classifiers": [
    "development status :: 3 - alpha",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3",
    "programming language :: python :: 3.10",
    "programming language :: python :: 3.11",
    "programming language :: python :: 3.9",
    "typing :: typed"
  ],
  "description": "[![github workflow status][workflow-shield]][workflow]\n[![pypi][pypi-shield]][pypi]\n[![downloads][pepy-shield]][pepy]\n[![pre-commit][pre-commit-shield]][pre-commit]\n[![github activity][commits-shield]][commits]\n\n# google home local authentication token extraction\n\npython 3 package to extract google home devices local authentication tokens from google servers.\nthese local authentication tokens are needed to control google home devices\n(see [@rithvikvibhu](https://github.com/rithvikvibhu)'s [google home (2.0) api](https://rithvikvibhu.github.io/ghlocalapi/)).\n\nplease note:\nonce you have local google authentication tokens they only live about 1 day long.\nafter that you will need to obtain new ones.\nyou will probably need to run the script repeatedly storing the tokens somewhere convenient.\n\n## quickstart\n\nnote: the package was written and tested on python 3.\n\n- install the python package\n\n```\npip install glocaltokens\n```\n\nuse in your program as (see examples folder for detailed example):\n\n```python\nfrom glocaltokens.client import glocalauthenticationtokens\n\n# using google username and password\n#\n# only call this once\n#\n# if you call this too often, google will disconnect your android devices and other weird things will happen\n#\n# call get_google_devices_json() afterwards to get timers/alarms as oftens as you want to update.\nclient = glocalauthenticationtokens(\n  username=\"<your_google_username>\",\n  password=\"<your_google_password>\"\n)\n\n# get master token\nprint(\"[*] master token\", client.get_master_token())\n\n# get access token (lives 1 hour)\nprint(\"\\n[*] access token (lives 1 hour)\", client.get_access_token())\n\n# get google device local authentication tokens (live about 1 day)\nprint(\"\\n[*] google devices local authentication tokens\")\ngoogle_devices = client.get_google_devices_json()\n\n# you can also select specific models to select when calling get_google_devices or get_google_devices_json with the models_list parameter.\n# for example, we have pre-defined a constant with some google home models (warning! not all of them may be present)\n# this could be used this way\nfrom glocaltokens.const import google_home_models\n\ngoogle_devices_select = client.get_google_devices_json(google_home_models)\n\n# but if you need to select just a set of models, or add new models, you can use a list of str\ngoogle_devices_select_2 = client.get_google_devices_json([\n    f\"google home\",\n    f\"google home mini\",\n    f\"google nest mini\",\n])\n```\n\n### predefined models list\n\nthere are some pre-defined models list in [`scanner.py`](/glocaltokens/scanner.py), feel free to\nadd new lists, or add models to a list with a pull-request.\n\n#### `google_home_models`:\n\n- google home\n- google home mini\n- google nest mini\n- lenovo smart clock\n\n## security recommendation\n\nnever store the user's password nor username in plain text, if storage is necessary, generate a master token and store it.\nexample approach:\n\n```python\nfrom glocaltokens.client import glocalauthenticationtokens\n\n# using google username and password first, and only once\nclient = glocalauthenticationtokens(\n  username=\"<your_google_username>\",\n  password=\"<your_google_password>\"\n)\n\n# get master token\nmaster_token = client.get_master_token()\nprint(\"[*] master token\", master_token)\n\n\"\"\"now store master_token somewhere\"\"\"\n\n```\n\n## contributing\n\nsee [contributing guidelines](contributing.md).\nthis is an open-source project and all countribution is highly welcomed.\n\n# credits\n\nmuch credits go to [@rithvikvibhu](https://github.com/rithvikvibhu) for doing most of the heavy work like finding a way to\nextract master and access tokens\n(see his gist [here](https://gist.github.com/rithvikvibhu/952f83ea656c6782fbd0f1645059055d)).\n\nalso, thank you very much to the guys at `pychromecast` which provided the code required to scan devices in the network.\n\n[workflow-shield]: https://img.shields.io/github/actions/workflow/status/leikoilja/glocaltokens/linting-and-testing.yaml?branch=master\n[workflow]: https://github.com/leikoilja/glocaltokens/actions\n[pypi-shield]: https://img.shields.io/pypi/v/glocaltokens\n[pypi]: https://pypi.org/project/glocaltokens/\n[pepy-shield]: https://pepy.tech/badge/glocaltokens\n[pepy]: https://pepy.tech/project/glocaltokens\n[commits-shield]: https://img.shields.io/github/commit-activity/y/leikoilja/glocaltokens\n[commits]: https://github.com/leikoilja/glocaltokens/commits/master\n[pre-commit-shield]: https://img.shields.io/badge/pre--commit-enabled-brightgreen\n[pre-commit]: https://pre-commit.com/\n",
  "docs_url": null,
  "keywords": "authentication,google home,google,localauthenticationtokens",
  "license": "mit",
  "name": "glocaltokens",
  "package_url": "https://pypi.org/project/glocaltokens/",
  "project_url": "https://pypi.org/project/glocaltokens/",
  "project_urls": {
    "Bug Tracker": "https://github.com/leikoilja/glocaltokens/issues",
    "Homepage": "https://github.com/leikoilja/glocaltokens",
    "Release Notes": "https://github.com/leikoilja/glocaltokens/releases",
    "Repository": "https://github.com/leikoilja/glocaltokens"
  },
  "release_url": "https://pypi.org/project/glocaltokens/0.7.0/",
  "requires_dist": [
    "gpsoauth (>=1.0.1,<2.0.0)",
    "simplejson (>=3.17.2,<4.0.0)",
    "ghome-foyer-api (>=1.0.0,<2.0.0)",
    "grpcio (>=1.51.1)",
    "requests (>=2.28.1)",
    "zeroconf (>=0.47.1)"
  ],
  "requires_python": ">=3.9,<4.0",
  "summary": "tool to extract google device local authentication tokens in python",
  "version": "0.7.0",
  "releases": [],
  "developers": [
    "ilja_leiko",
    "leikoilja@gmail.com"
  ],
  "kwds": "get_google_devices get_google_devices_json google_devices glocalauthenticationtokens your_google_password",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_glocaltokens",
  "homepage": "https://github.com/leikoilja/glocaltokens",
  "release_count": 32,
  "dependency_ids": [
    "pypi_ghome_foyer_api",
    "pypi_gpsoauth",
    "pypi_grpcio",
    "pypi_requests",
    "pypi_simplejson",
    "pypi_zeroconf"
  ]
}
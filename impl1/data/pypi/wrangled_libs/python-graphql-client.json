{
  "classifiers": [
    "development status :: 3 - alpha",
    "intended audience :: developers",
    "license :: osi approved :: mit license",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "topic :: software development :: libraries"
  ],
  "description": "[![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n![python ci checks](https://github.com/prodigyeducation/python-graphql-client/workflows/python%20ci%20checks/badge.svg)\n![upload python package](https://github.com/prodigyeducation/python-graphql-client/workflows/upload%20python%20package/badge.svg)\n\n# python graphql client\n\n> simple package for making requests to a graphql server.\n\n<!-- badges here. -->\n\n## installation\n\n```bash\npip install python-graphql-client\n```\n\n## usage\n\n- query/mutation\n\n```py\nfrom python_graphql_client import graphqlclient\n\n# instantiate the client with an endpoint.\nclient = graphqlclient(endpoint=\"https://countries.trevorblades.com\")\n\n# create the query string and variables required for the request.\nquery = \"\"\"\n    query countryquery($countrycode: string) {\n        country(code:$countrycode) {\n            code\n            name\n        }\n    }\n\"\"\"\nvariables = {\"countrycode\": \"ca\"}\n\n# synchronous request\ndata = client.execute(query=query, variables=variables)\nprint(data)  # => {'data': {'country': {'code': 'ca', 'name': 'canada'}}}\n\n\n# asynchronous request\nimport asyncio\n\ndata = asyncio.run(client.execute_async(query=query, variables=variables))\nprint(data)  # => {'data': {'country': {'code': 'ca', 'name': 'canada'}}}\n```\n\n- subscription\n\n```py\nfrom python_graphql_client import graphqlclient\n\n# instantiate the client with a websocket endpoint.\nclient = graphqlclient(endpoint=\"wss://www.your-api.com/graphql\")\n\n# create the query string and variables required for the request.\nquery = \"\"\"\n    subscription onmessageadded {\n        messageadded\n    }\n\"\"\"\n\n# asynchronous request\nimport asyncio\n\nasyncio.run(client.subscribe(query=query, handle=print))\n# => {'data': {'messageadded': 'error omnis quis.'}}\n# => {'data': {'messageadded': 'enim asperiores omnis.'}}\n# => {'data': {'messageadded': 'unde ullam consequatur quam eius vel.'}}\n# ...\n```\n\n## advanced usage\n\n### disable ssl verification\n\nset the keyword argument `verify=false` ether when instantiating the `graphqlclient` class.\n\n```py\nfrom python_graphql_client import graphqlclient\n\nclient = graphqlclient(endpoint=\"wss://www.your-api.com/graphql\", verify=false)\n```\n\nalternatively, you can set it when calling the `execute` method.\n\n```py\nfrom python_graphql_client import graphqlclient\n\nclient = graphqlclient(endpoint=\"wss://www.your-api.com/graphql\"\nclient.execute(query=\"<your query>\", verify=false)\n```\n\n### custom authentication\n\n```py\nfrom requests.auth import httpbasicauth\nfrom python_graphql_client import graphqlclient\n\nauth = httpbasicauth('fake@example.com', 'not_a_real_password')\nclient = graphqlclient(endpoint=\"wss://www.your-api.com/graphql\", auth=auth)\n```\n\n## roadmap\n\nto start we'll try and use a github project board for listing current work and updating priorities of upcoming features.\n\n## contributing\n\nread the [contributing](docs/contributing.md) documentation for details on the process for submitting pull requests to the project. also take a peek at our [code of conduct](docs/code_of_conduct.md).\n\n## authors and acknowledgement\n\nkudos to @xkludge, @daleseo, and @mattbullock for getting this project started.\n\n## license\n\n[mit license](license)\n\n\n",
  "docs_url": null,
  "keywords": "api graphql client",
  "license": "mit",
  "name": "python-graphql-client",
  "package_url": "https://pypi.org/project/python-graphql-client/",
  "project_url": "https://pypi.org/project/python-graphql-client/",
  "project_urls": {
    "Homepage": "https://github.com/prodigyeducation/python-graphql-client"
  },
  "release_url": "https://pypi.org/project/python-graphql-client/0.4.3/",
  "requires_dist": [
    "aiohttp (~=3.0)",
    "requests (~=2.0)",
    "websockets (>=5.0)",
    "pre-commit ; extra == 'dev'",
    "black ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "flake8-docstrings ; extra == 'dev'",
    "flake8-black ; extra == 'dev'",
    "flake8-isort ; extra == 'dev'",
    "gitchangelog ; extra == 'dev'",
    "pystache ; extra == 'dev'"
  ],
  "requires_python": "",
  "summary": "python graphql client",
  "version": "0.4.3",
  "releases": [],
  "developers": [
    "justin_krinke",
    "opensource@prodigygame.com"
  ],
  "kwds": "python_graphql_client graphqlclient graphql badge badges",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_python_graphql_client",
  "homepage": "https://github.com/prodigyeducation/python-graphql-client",
  "release_count": 9,
  "dependency_ids": [
    "pypi_aiohttp",
    "pypi_black",
    "pypi_flake8",
    "pypi_flake8_black",
    "pypi_flake8_docstrings",
    "pypi_flake8_isort",
    "pypi_gitchangelog",
    "pypi_pre_commit",
    "pypi_pystache",
    "pypi_requests",
    "pypi_websockets"
  ]
}
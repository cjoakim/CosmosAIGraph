{
  "classifiers": [
    "license :: osi approved :: mit license",
    "operating system :: os independent",
    "programming language :: python"
  ],
  "description": "# python-lsp-black\n\n[![pypi](https://img.shields.io/pypi/v/python-lsp-black.svg)](https://pypi.org/project/python-lsp-black) [![code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![python](https://github.com/python-lsp/python-lsp-black/actions/workflows/python.yml/badge.svg)](https://github.com/python-lsp/python-lsp-black/actions/workflows/python.yml)\n\n[black](https://github.com/psf/black) plugin for the [python lsp server](https://github.com/python-lsp/python-lsp-server).\n\n## install\n\nin the same `virtualenv` as `python-lsp-server`:\n\n```shell\npip install python-lsp-black\n```\n\n# usage\n\nthis plugin will disable the yapf and autopep8 plugins if installed.\n\n- `python-lsp-black` can either format an entire file or just the selected text.\n- the code will only be formatted if it is syntactically valid python.\n- text selections are treated as if they were a separate python file.\n  unfortunately this means you can't format an indented block of code.\n- `python-lsp-black` will use your project's\n  [pyproject.toml](https://github.com/psf/black#pyprojecttoml) if it has one.\n- `python-lsp-black` only officially supports the latest stable version of\n  [black](https://github.com/psf/black). an effort is made to keep backwards-compatibility\n  but older black versions will not be actively tested.\n- the plugin can cache the black configuration that applies to each python file, this\n  improves performance of the plugin. when configuration caching is enabled any changes to\n  black's configuration will need the lsp server to be restarted. configuration caching\n  can be disabled with the `cache_config` option, see *configuration* below.\n\n# configuration\n\nthe plugin follows [python-lsp-server's\nconfiguration](https://github.com/python-lsp/python-lsp-server/#configuration). these are\nthe valid configuration keys:\n\n- `pylsp.plugins.black.enabled`: boolean to enable/disable the plugin.\n- `pylsp.plugins.black.cache_config`: a boolean to enable black configuration caching (see\n  *usage*). `false` by default.\n- `pylsp.plugins.black.line_length`: an integer that maps to [black's\n  `max-line-length`](https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#line-length)\n  setting. defaults to 88 (same as black's default). this can also be set through black's\n  configuration files, which should be preferred for multi-user projects.\n- `pylsp.plugins.black.preview`: a boolean to enable or disable [black's `--preview`\n  setting](https://black.readthedocs.io/en/stable/the_black_code_style/future_style.html#preview-style). `false` by default.\n- `pylsp.plugins.black.skip_string_normalization`: a boolean to enable or disable black's `--skip-string-normalization` setting. `false` by default.\n- `pylsp.plugins.black.skip_magic_trailing_comma`: a boolean to enable or disable black's `skip-magic-trailing-comma` setting. `false` by default.\n\n# development\n\nto install the project for development you need to specify the dev optional dependencies:\n\n```shell\npython -m venv .venv\n. .venv/bin/activate\npip install -e .[dev]\n```\n\nthis project uses [pre-commit](https://pre-commit.com/) hooks to control code quality,\ninstall them to run automatically when creating a git commit, thus avoiding seeing errors\nwhen you create a pull request:\n\n```shell\npre-commit install\n```\n\nto run tests:\n\n```shell\nmake test\n```\n\nto run linters:\n\n```shell\nmake lint  # just a shortcut to pre-commit run -a\nmake <linter_name>  # black, flake8, isort, mypy\n```\n\nto upgrade the version of the pre-commit hooks:\n\n```shell\npre-commit autoupdate\n# check and git commit changes to .pre-commit-config.yaml\n```\n",
  "docs_url": null,
  "keywords": "",
  "license": "",
  "name": "python-lsp-black",
  "package_url": "https://pypi.org/project/python-lsp-black/",
  "project_url": "https://pypi.org/project/python-lsp-black/",
  "project_urls": {
    "Bug Tracker": "https://github.com/python-lsp/python-lsp-black/issues",
    "Changelog": "https://github.com/python-lsp/python-lsp-black/blob/master/CHANGELOG.md",
    "Homepage": "https://github.com/python-lsp/python-lsp-black",
    "Source Code": "https://github.com/python-lsp/python-lsp-black"
  },
  "release_url": "https://pypi.org/project/python-lsp-black/2.0.0/",
  "requires_dist": [
    "python-lsp-server >=1.4.0",
    "black >=23.11.0",
    "tomli ; python_version < \"3.11\"",
    "isort >=5.0 ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "pre-commit ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "mypy ; extra == 'dev'",
    "types-pkg-resources ; extra == 'dev'",
    "types-setuptools ; extra == 'dev'"
  ],
  "requires_python": ">=3.8",
  "summary": "black plugin for the python lsp server",
  "version": "2.0.0",
  "releases": [],
  "developers": [
    "f@fidelramos.net",
    "python_lsp_contributors"
  ],
  "kwds": "the_black_code_style lsp pylsp svg autopep8",
  "license_kwds": "",
  "libtype": "pypi",
  "id": "pypi_python_lsp_black",
  "homepage": "https://github.com/python-lsp/python-lsp-black",
  "release_count": 7,
  "dependency_ids": [
    "pypi_black",
    "pypi_flake8",
    "pypi_isort",
    "pypi_mypy",
    "pypi_pre_commit",
    "pypi_pytest",
    "pypi_python_lsp_server",
    "pypi_tomli",
    "pypi_types_pkg_resources",
    "pypi_types_setuptools"
  ]
}
{
  "classifiers": [
    "development status :: 4 - beta",
    "intended audience :: developers",
    "intended audience :: science/research",
    "license :: osi approved :: mit license",
    "natural language :: english",
    "operating system :: os independent",
    "programming language :: python :: 3",
    "programming language :: python :: 3 :: only",
    "programming language :: python :: 3.6",
    "programming language :: python :: 3.7",
    "programming language :: python :: 3.8",
    "programming language :: python :: 3.9",
    "programming language :: python :: implementation :: cpython",
    "programming language :: python :: implementation :: pypy",
    "topic :: documentation",
    "topic :: documentation :: sphinx",
    "topic :: software development :: libraries",
    "topic :: software development :: libraries :: python modules",
    "topic :: text processing :: markup :: markdown",
    "topic :: utilities"
  ],
  "description": "<!-- markdownlint-disable md033 md041 -->\n<h1 align=\"center\">\n    lazydocs\n</h1>\n\n<p align=\"center\">\n    <strong>generate markdown api documentation for google-style python docstring.</strong>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://pypi.org/project/lazydocs/\" title=\"pypi version\"><img src=\"https://img.shields.io/pypi/v/lazydocs?color=green&style=flat\"></a>\n    <a href=\"https://pypi.org/project/lazydocs/\" title=\"python version\"><img src=\"https://img.shields.io/badge/python-3.6%2b-blue&style=flat\"></a>\n    <a href=\"https://www.codacy.com/gh/ml-tooling/lazydocs/dashboard\" title=\"codacy analysis\"><img src=\"https://app.codacy.com/project/badge/grade/1c8ad486ce9547b6b713cce7ca1d1ec3\"></a>\n    <a href=\"https://github.com/ml-tooling/lazydocs/actions?query=workflow%3abuild-pipeline\" title=\"build status\"><img src=\"https://img.shields.io/github/workflow/status/ml-tooling/lazydocs/build-pipeline?style=flat\"></a>\n    <a href=\"https://github.com/ml-tooling/lazydocs/blob/main/license\" title=\"project license\"><img src=\"https://img.shields.io/badge/license-mit-green.svg?style=flat\"></a>\n    <a href=\"https://gitter.im/ml-tooling/lazydocs\" title=\"chat on gitter\"><img src=\"https://badges.gitter.im/ml-tooling/lazydocs.svg\"></a>\n    <a href=\"https://twitter.com/mltooling\" title=\"ml tooling on twitter\"><img src=\"https://img.shields.io/twitter/follow/mltooling.svg?label=follow&style=social\"></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"#getting-started\">getting started</a> \u2022\n  <a href=\"#features\">features</a> \u2022\n  <a href=\"#documentation\">documentation</a> \u2022\n  <a href=\"#support--feedback\">support</a> \u2022\n  <a href=\"#contribution\">contribution</a> \u2022\n  <a href=\"https://github.com/ml-tooling/lazydocs/releases\">changelog</a>\n</p>\n\nlazydocs makes it easy to generate beautiful markdown documentation for your python api (see this [example](./docs)). it provides a [simple command-line interface](#cli-interface) as well as a [python api](#programmatic-api) to get full-fledged api documentation within seconds based on all of the [google-style docstrings](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html) in your code. this markdown documentation can be pushed to github or integrated into your mkdocs site.\n\n## highlights\n\n- \u23f1&nbsp; simple cli to generate markdown docs in seconds.\n- \ud83d\udccb&nbsp; supports [google-style python docstrings](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html).\n- \ud83d\udcda&nbsp; compatible with github markdown and mkdocs.\n\n## getting started\n\n### installation\n\n> _requirements: python 3.6+._\n\n```bash\npip install lazydocs\n```\n\n### usage\n\nto generate markdown-based api documentation for your python project, simply execute:\n\n```bash\nlazydocs path/to/your/package\n```\n\nthe path can be either a python package (folder) or a specific script. you can also specify one or multiple module-, class- or function-imports:\n\n```bash\nlazydocs my_package.awesomeclass\n```\n\nwith the default configuration, the markdown documentation will be generated inside the `./docs` folder in your working directory. you can find additional configuration options in the [documentation section](#cli-interface).\n\n## support & feedback\n\nthis project is maintained by [benjamin r\u00e4thlein](https://twitter.com/raethlein), [lukas masuch](https://twitter.com/lukasmasuch), and [jan kalkan](https://www.linkedin.com/in/jan-kalkan-b5390284/). please understand that we won't be able to provide individual support via email. we also believe that help is much more valuable if it's shared publicly so that more people can benefit from it.\n\n| type                     | channel                                              |\n| ------------------------ | ------------------------------------------------------ |\n| \ud83d\udea8&nbsp; **bug reports**       | <a href=\"https://github.com/ml-tooling/lazydocs/issues?utf8=%e2%9c%93&q=is%3aopen+is%3aissue+label%3abug+sort%3areactions-%2b1-desc+\" title=\"open bug report\"><img src=\"https://img.shields.io/github/issues/ml-tooling/lazydocs/bug.svg?label=bug\"></a>                                 |\n| \ud83c\udf81&nbsp; **feature requests**  | <a href=\"https://github.com/ml-tooling/lazydocs/issues?q=is%3aopen+is%3aissue+label%3afeature+sort%3areactions-%2b1-desc\" title=\"open feature request\"><img src=\"https://img.shields.io/github/issues/ml-tooling/lazydocs/feature.svg?label=feature%20request\"></a>                                 |\n| \ud83d\udc69\u200d\ud83d\udcbb&nbsp; **usage questions**   |   <a href=\"https://stackoverflow.com/questions/tagged/ml-tooling\" title=\"open question on stackoverflow\"><img src=\"https://img.shields.io/badge/stackoverflow-ml--tooling-orange.svg\"></a> <a href=\"https://gitter.im/ml-tooling/lazydocs\" title=\"chat on gitter\"><img src=\"https://badges.gitter.im/ml-tooling/lazydocs.svg\"></a> |\n| \ud83d\uddef&nbsp; **general discussion** | <a href=\"https://gitter.im/ml-tooling/lazydocs\" title=\"chat on gitter\"><img src=\"https://badges.gitter.im/ml-tooling/lazydocs.svg\"></a> <a href=\"https://twitter.com/mltooling\" title=\"ml tooling on twitter\"><img src=\"https://img.shields.io/twitter/follow/mltooling.svg?style=social\"></a>|\n| \u2753&nbsp; **other requests** | <a href=\"mailto:team@mltooling.org\" title=\"email ml tooling team\"><img src=\"https://img.shields.io/badge/email-ml tooling-green?logo=mail.ru&logocolor=white\"></a> |\n\n## features\n\n<p align=\"center\">\n  <a href=\"#source-code-linking\">source code linking</a> \u2022\n  <a href=\"#api-overview\">api overview</a> \u2022\n  <a href=\"#mkdocs-integration\">mkdocs integration</a> \u2022\n  <a href=\"#docstyle-validation\">docstyle validation</a> \u2022\n  <a href=\"#print-to-console\">print to console</a>\n</p>\n\n### source code linking\n\n<img style=\"width: 100%\" src=\"https://raw.githubusercontent.com/ml-tooling/lazydocs/main/docs/images/source-linking.png\"/>\n\nlazydocs is capable to insert a badge on the right side of every module, class, method or function with a link the correct source-code file and line number. the default configuration will create relative paths to navigate within the github repo. this is useful if the documentation is hosted within the same repository as the source-code. if, the documentation is hosted outside of the github repository, it is recommended to set the `src-base-url`:\n\n```bash\nlazydocs --src-base-url=\"https://github.com/example/my-project/blob/main/\" my_package\n```\n\nthe `src-base-url` is used as a prefix for all source-code linkings in the documentation.\n\n### api overview\n\n<img style=\"width: 100%\" src=\"https://raw.githubusercontent.com/ml-tooling/lazydocs/main/docs/images/api-overview.png\"/>\n\nan api overview might be very useful in case your project has a large number modules, classes and functions. you can specify an `overview-file` with the lazydocs command to activate the generation of an api overview:\n\n```bash\nlazydocs --overview-file=\"readme.md\" my_package\n```\n\nthe api overview will be written as markdown to the specified file with separated lists for all modules, classes, and functions of your project:\n\n### mkdocs integration\n\n<img style=\"width: 100%\" src=\"https://github.com/ml-tooling/lazydocs/blob/main/docs/images/mkdocs-integration.png?raw=true\"/>\n\nthe markdown documentation generated by lazydocs can be easily integrated into your [mkdocs](https://www.mkdocs.org/) documentation site:\n\n1. generate the markdown documentation into a subfolder (e.g. `api-docs`) inside your mkdocs documentation. we recommend to use the `overview-file` option and set the source-code url via `src-base-url`, otherwise the source-code linking would not work:\n\n```bash\nlazydocs \\\n    --output_path=\"./docs/api-docs\" \\\n    --overview-file=\"readme.md\" \\\n    --src-base-url=\"https://github.com/example/my-project/blob/main/\" \\\n    my_package\n```\n\n2. install and apply the [awesome-pages mkdocs plugin](https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin). this enables mkdocs to automatically discover and include all markdown files. the alternative would be to manually include all generated markdown files in the navigation section of the `mkdocs.yaml`. in order to use the awesome-pages plugin you need to 1) install the plugin via pip 2) include it in the plugin section `mkdocs.yaml` and remove the navigation section (needs to be handled with `.pages` files).\n\n3. if you used the `overview-file` option, a `.pages` file will be automatically created. you can also manually create the `.pages` file within the api-docs subfolder (e.g. `api-docs`) with the following content:\n\n    ```yaml\n    title: api reference\n    nav:\n       - overview: readme.md\n       - ...\n    ```\n\nonce you run or deploy your mkdocs documentation, you will see the api reference section with all of your api markdown documentation.\n\n### docstyle validation\n\nlazydocs can only parse valid google-style docstring. to prevent the generation of invalid markdown documentation, you can use the `validate` flag:\n\n```bash\nlayzdocs --validate my_package\n```\n\nthis will run [pydocstyle](https://github.com/pycqa/pydocstyle) on your docstring and cancel the generation if an issue is found.\n\n### print to console\n\nto get the markdown documentation as console output instead of the file generation, specify `stdout` as the `output-path`:\n\n```bash\nlayzdocs --output-path=stdout my_package\n```\n\n## documentation\n\n### cli interface\n\n<!-- generated via typer-cli: typer src/lazydocs/_cli.py utils docs -->\n\n```bash\nlaydocs [options] paths...\n```\n\n**arguments**:\n\n* `paths...`: selected paths or imports for markdown generation.  [required]\n\n**options**:\n\n* `--output-path text`: the output path for the creation of the markdown files. set this to `stdout` to print all markdown to stdout.  [default: ./docs/]\n* `--src-base-url text`: the base repo link used as prefix for all source links. should also include the branch name.\n* `--overview-file text`: filename of overview file. if not provided, no api overview file will be generated.\n* `--remove-package-prefix / --no-remove-package-prefix`: if `true`, the package prefix will be removed from all functions and methods.  [default: true]\n* `--ignored-modules text`: a list of modules that should be ignored.  [default: ]\n* `--watermark / --no-watermark`: if `true`, add a watermark with a timestamp to bottom of the markdown files.  [default: true]\n* `--validate / --no-validate`: if `true`, validate the docstrings via pydocstyle. requires pydocstyle to be installed.  [default: false]\n* `--install-completion`: install completion for the current shell.\n* `--show-completion`: show completion for the current shell, to copy it or customize the installation.\n* `--help`: show this message and exit.\n\n### programmatic api\n\nlazydocs can also be used and integrated via its [python api](https://github.com/ml-tooling/lazydocs/tree/main/docs). for example, to generate markdown for an arbitrary python import or object:\n\n```python\nfrom lazydocs import markdowngenerator\n\ngenerator = markdowngenerator()\n\n# select a module (e.g. my_module) to generate markdown documentation\nmarkdown_docs = generator.import2md(my_module)\n```\n\nto programmatically generate all markdown documentation files you can use [`generate_docs`](https://github.com/ml-tooling/lazydocs/blob/main/docs/lazydocs.generator.md#function-generate_docs):\n\n```python\nfrom lazydocs import generate_docs\n\n# the parameters of this function correspond to the cli options\ngenerate_docs([\"my_module\"], output_path=\"./docs\")\n```\n\nthe full python api documentation can be found [here](https://github.com/ml-tooling/lazydocs/tree/main/docs) _(generated via lazydocs)_.\n\n## contribution\n\n- pull requests are encouraged and always welcome. read our [contribution guidelines](https://github.com/ml-tooling/lazydocs/tree/main/contributing.md) and check out [help-wanted](https://github.com/ml-tooling/lazydocs/issues?utf8=%e2%9c%93&q=is%3aopen+is%3aissue+label%3a\"help+wanted\"+sort%3areactions-%2b1-desc+) issues.\n- submit github issues for any [feature request and enhancement](https://github.com/ml-tooling/lazydocs/issues/new?assignees=&labels=feature&template=02_feature-request.md&title=), [bugs](https://github.com/ml-tooling/lazydocs/issues/new?assignees=&labels=bug&template=01_bug-report.md&title=), or [documentation](https://github.com/ml-tooling/lazydocs/issues/new?assignees=&labels=documentation&template=03_documentation.md&title=) problems.\n- by participating in this project, you agree to abide by its [code of conduct](https://github.com/ml-tooling/lazydocs/blob/main/.github/code_of_conduct.md).\n- the [development section](#development) below contains information on how to build and test the project after you have implemented some changes.\n\n## development\n\n> _**requirements**: [docker](https://docs.docker.com/get-docker/) and [act](https://github.com/nektos/act#installation) are required to be installed on your machine to execute the build process._\n\nto simplify the process of building this project from scratch, we provide build-scripts - based on [universal-build](https://github.com/ml-tooling/universal-build) - that run all necessary steps (build, check, test, and release) within a containerized environment. to build and test your changes, execute the following command in the project root folder:\n\n```bash\nact -b -j build\n```\n\nrefer to our [contribution guides](https://github.com/ml-tooling/lazydocs/blob/main/contributing.md#development-instructions) for more detailed information on our build scripts and development process.\n\n---\n\nlicensed **mit**. created and maintained with \u2764\ufe0f&nbsp; by developers from berlin.\n\n\n",
  "docs_url": null,
  "keywords": "",
  "license": "mit",
  "name": "lazydocs",
  "package_url": "https://pypi.org/project/lazydocs/",
  "project_url": "https://pypi.org/project/lazydocs/",
  "project_urls": {
    "Changelog": "https://github.com/ml-tooling/lazydocs/releases",
    "Documentation": "https://github.com/ml-tooling/lazydocs#documentation",
    "Homepage": "https://github.com/ml-tooling/lazydocs",
    "Issue Tracker": "https://github.com/ml-tooling/lazydocs/issues",
    "Source": "https://github.com/ml-tooling/lazydocs"
  },
  "release_url": "https://pypi.org/project/lazydocs/0.4.8/",
  "requires_dist": [
    "typer",
    "setuptools ; extra == 'dev'",
    "wheel ; extra == 'dev'",
    "twine ; extra == 'dev'",
    "flake8 ; extra == 'dev'",
    "pytest ; extra == 'dev'",
    "pytest-mock ; extra == 'dev'",
    "pytest-cov ; extra == 'dev'",
    "mypy ; extra == 'dev'",
    "black ; extra == 'dev'",
    "pydocstyle ; extra == 'dev'",
    "isort ; extra == 'dev'"
  ],
  "requires_python": ">=3.6",
  "summary": "generate markdown api documentation for google-style python docstring.",
  "version": "0.4.8",
  "releases": [],
  "developers": [
    "ml_tooling_team",
    "team@mltooling.org"
  ],
  "kwds": "markdown_docs markdown markdownlint docstyle markdowngenerator",
  "license_kwds": "mit",
  "libtype": "pypi",
  "id": "pypi_lazydocs",
  "homepage": "https://github.com/ml-tooling/lazydocs",
  "release_count": 18,
  "dependency_ids": [
    "pypi_black",
    "pypi_flake8",
    "pypi_isort",
    "pypi_mypy",
    "pypi_pydocstyle",
    "pypi_pytest",
    "pypi_pytest_cov",
    "pypi_pytest_mock",
    "pypi_setuptools",
    "pypi_twine",
    "pypi_typer",
    "pypi_wheel"
  ]
}